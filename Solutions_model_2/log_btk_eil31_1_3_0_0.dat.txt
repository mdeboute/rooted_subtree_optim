Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-10) rows, 31 (-2) columns and 165 (-18) elements
Clp1000I sum of infeasibilities 7.64452e-06 - average 1.38991e-07, 20 fixed columns
Coin0506I Presolve 14 (-41) rows, 9 (-22) columns and 40 (-125) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Coin0511I After Postsolve, objective 1249.2489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Coin0511I After Postsolve, objective 1249.2489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1249.248856 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 31 columns (30 integer (30 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.605%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.90721
Cbc0038I Pass   1: suminf.    0.04065 (1) obj. -1131.32 iterations 6
Cbc0038I Solution found of -439.621
Cbc0038I Relaxing continuous gives -439.621
Cbc0038I Rounding solution of -723.192 is better than previous of -439.621

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -772.644
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04065 (1) obj. -1131.32 iterations 0
Cbc0038I Pass   3: suminf.    0.46188 (1) obj. -772.644 iterations 1
Cbc0038I Pass   4: suminf.    2.36441 (6) obj. -772.644 iterations 9
Cbc0038I Pass   5: suminf.    0.18379 (1) obj. -772.644 iterations 11
Cbc0038I Pass   6: suminf.    0.31987 (2) obj. -1157.51 iterations 2
Cbc0038I Pass   7: suminf.    0.20371 (1) obj. -772.644 iterations 3
Cbc0038I Pass   8: suminf.    0.14634 (1) obj. -814.008 iterations 1
Cbc0038I Pass   9: suminf.    0.47967 (1) obj. -788.612 iterations 10
Cbc0038I Pass  10: suminf.    0.45753 (1) obj. -772.644 iterations 3
Cbc0038I Pass  11: suminf.    0.47967 (1) obj. -788.612 iterations 1
Cbc0038I Pass  12: suminf.    0.59457 (4) obj. -772.644 iterations 8
Cbc0038I Pass  13: suminf.    0.58536 (3) obj. -772.644 iterations 1
Cbc0038I Pass  14: suminf.    0.68865 (2) obj. -912.864 iterations 2
Cbc0038I Pass  15: suminf.    0.35540 (2) obj. -772.644 iterations 1
Cbc0038I Pass  16: suminf.    1.03534 (5) obj. -772.644 iterations 8
Cbc0038I Pass  17: suminf.    0.65905 (3) obj. -772.644 iterations 2
Cbc0038I Pass  18: suminf.    0.71599 (2) obj. -935.117 iterations 1
Cbc0038I Pass  19: suminf.    0.46341 (1) obj. -824.399 iterations 1
Cbc0038I Pass  20: suminf.    0.46480 (1) obj. -772.644 iterations 1
Cbc0038I Pass  21: suminf.    0.79137 (4) obj. -772.644 iterations 4
Cbc0038I Pass  22: suminf.    0.47237 (2) obj. -772.644 iterations 3
Cbc0038I Pass  23: suminf.    0.59749 (2) obj. -833.111 iterations 1
Cbc0038I Pass  24: suminf.    1.17870 (6) obj. -772.644 iterations 11
Cbc0038I Pass  25: suminf.    0.30466 (2) obj. -772.644 iterations 5
Cbc0038I Pass  26: suminf.    0.74008 (2) obj. -772.644 iterations 1
Cbc0038I Pass  27: suminf.    0.83905 (3) obj. -772.644 iterations 7
Cbc0038I Pass  28: suminf.    0.73162 (2) obj. -772.644 iterations 5
Cbc0038I Pass  29: suminf.    0.48780 (1) obj. -789.764 iterations 2
Cbc0038I Pass  30: suminf.    0.46406 (1) obj. -772.644 iterations 1
Cbc0038I Pass  31: suminf.    1.20582 (4) obj. -772.644 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -439.621 to -760.822 (0.02 seconds)
Cbc0038I Round again with cutoff of -861.657
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.04065 (1) obj. -1131.32 iterations 0
Cbc0038I Pass  32: suminf.    0.41466 (1) obj. -861.657 iterations 1
Cbc0038I Pass  33: suminf.    1.41144 (8) obj. -861.657 iterations 22
Cbc0038I Pass  34: suminf.    0.79363 (3) obj. -861.657 iterations 6
Cbc0038I Pass  35: suminf.    0.44635 (2) obj. -861.657 iterations 3
Cbc0038I Pass  36: suminf.    0.70324 (2) obj. -861.657 iterations 4
Cbc0038I Pass  37: suminf.    0.75566 (3) obj. -861.657 iterations 9
Cbc0038I Pass  38: suminf.    0.75566 (3) obj. -861.657 iterations 1
Cbc0038I Pass  39: suminf.    0.55309 (2) obj. -861.657 iterations 2
Cbc0038I Pass  40: suminf.    0.44789 (2) obj. -861.657 iterations 2
Cbc0038I Pass  41: suminf.    0.68179 (2) obj. -861.657 iterations 4
Cbc0038I Pass  42: suminf.    0.65679 (2) obj. -861.657 iterations 4
Cbc0038I Pass  43: suminf.    0.70774 (2) obj. -883.094 iterations 1
Cbc0038I Pass  44: suminf.    0.41570 (3) obj. -861.657 iterations 9
Cbc0038I Pass  45: suminf.    0.41570 (3) obj. -861.657 iterations 1
Cbc0038I Pass  46: suminf.    0.46373 (2) obj. -950.475 iterations 3
Cbc0038I Pass  47: suminf.    0.30317 (1) obj. -861.657 iterations 2
Cbc0038I Pass  48: suminf.    0.37398 (1) obj. -912.712 iterations 1
Cbc0038I Pass  49: suminf.    1.65839 (4) obj. -861.657 iterations 9
Cbc0038I Pass  50: suminf.    0.58856 (2) obj. -861.657 iterations 4
Cbc0038I Pass  51: suminf.    0.58856 (2) obj. -861.657 iterations 0
Cbc0038I Pass  52: suminf.    0.76013 (2) obj. -861.657 iterations 1
Cbc0038I Pass  53: suminf.    0.53140 (3) obj. -861.657 iterations 6
Cbc0038I Pass  54: suminf.    0.53140 (3) obj. -861.657 iterations 0
Cbc0038I Pass  55: suminf.    0.56354 (2) obj. -861.657 iterations 2
Cbc0038I Pass  56: suminf.    0.45840 (2) obj. -861.657 iterations 2
Cbc0038I Pass  57: suminf.    0.61559 (5) obj. -861.657 iterations 8
Cbc0038I Pass  58: suminf.    0.38483 (3) obj. -861.657 iterations 2
Cbc0038I Pass  59: suminf.    0.36799 (2) obj. -861.657 iterations 3
Cbc0038I Pass  60: suminf.    0.64014 (2) obj. -861.657 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -760.822 - took 0.04 seconds
Cbc0012I Integer solution of -760.8221 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 31 columns, reduced to 16 rows 10 columns
Cbc0031I 3 added rows had average density of 23
Cbc0013I At root node, 3 cuts changed objective from -1217.711 to -802.24591 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 281 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 336 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.676 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -760.8221 best solution, best possible -802.24591 (1.29 seconds)
Cbc0012I Integer solution of -770.73 found by rounding after 1342 iterations and 17 nodes (1.92 seconds)
Cbc0010I After 17 nodes, 2 on tree, -770.73 best solution, best possible -802.24591 (2.05 seconds)
Cbc0001I Search completed - best objective -770.73, took 1436 iterations and 20 nodes (2.12 seconds)
Cbc0032I Strong branching done 200 times (1029 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 7, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       2.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-23) rows, 46 (-16) columns and 376 (-272) elements
Clp1000I sum of infeasibilities 2.48518e-06 - average 6.06141e-08, 25 fixed columns
Coin0506I Presolve 20 (-21) rows, 20 (-26) columns and 57 (-319) elements
Clp0006I 0  Obj 1257.0962 Dual inf 12.840912 (19)
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 1259.8949
Clp0000I Optimal - objective value 1259.8949
Coin0511I After Postsolve, objective 1259.8949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1259.8949 Dual inf 34.00187 (1)
Clp0014I Perturbing problem by 0.001% of 1.2097114 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 1259.8949
Clp0000I Optimal - objective value 1259.8949
Clp0000I Optimal - objective value 1259.8949
Coin0511I After Postsolve, objective 1259.8949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1259.894894 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 46 columns (46 integer (46 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.91365
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -723.016 iterations 15
Cbc0038I Solution found of -723.016
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -772.878
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.29361 (7) obj. -772.878 iterations 3
Cbc0038I Pass   3: suminf.    0.25163 (4) obj. -772.878 iterations 3
Cbc0038I Pass   4: suminf.    0.43591 (2) obj. -1082.5 iterations 6
Cbc0038I Pass   5: suminf.    0.21316 (1) obj. -772.878 iterations 2
Cbc0038I Pass   6: suminf.    0.19512 (1) obj. -785.881 iterations 1
Cbc0038I Pass   7: suminf.    1.11298 (7) obj. -772.878 iterations 5
Cbc0038I Pass   8: suminf.    0.58281 (4) obj. -772.878 iterations 3
Cbc0038I Pass   9: suminf.    0.15447 (1) obj. -815.191 iterations 3
Cbc0038I Pass  10: suminf.    0.21316 (1) obj. -772.878 iterations 1
Cbc0038I Pass  11: suminf.    1.74176 (10) obj. -772.878 iterations 15
Cbc0038I Pass  12: suminf.    1.50319 (8) obj. -772.878 iterations 3
Cbc0038I Pass  13: suminf.    0.60704 (2) obj. -819.859 iterations 8
Cbc0038I Pass  14: suminf.    0.49538 (2) obj. -772.878 iterations 1
Cbc0038I Pass  15: suminf.    0.77315 (4) obj. -772.878 iterations 5
Cbc0038I Pass  16: suminf.    0.62858 (3) obj. -772.878 iterations 3
Cbc0038I Pass  17: suminf.    0.37832 (3) obj. -772.878 iterations 3
Cbc0038I Pass  18: suminf.    0.29040 (2) obj. -773.217 iterations 3
Cbc0038I Pass  19: suminf.    0.28911 (2) obj. -772.878 iterations 1
Cbc0038I Pass  20: suminf.    2.01228 (5) obj. -772.878 iterations 5
Cbc0038I Pass  21: suminf.    0.41375 (2) obj. -772.878 iterations 3
Cbc0038I Pass  22: suminf.    0.23667 (1) obj. -772.878 iterations 1
Cbc0038I Pass  23: suminf.    0.34959 (1) obj. -854.298 iterations 1
Cbc0038I Pass  24: suminf.    2.13271 (12) obj. -772.878 iterations 16
Cbc0038I Pass  25: suminf.    1.06082 (3) obj. -772.878 iterations 6
Cbc0038I Pass  26: suminf.    0.44715 (1) obj. -811.247 iterations 3
Cbc0038I Pass  27: suminf.    0.39394 (1) obj. -772.878 iterations 1
Cbc0038I Pass  28: suminf.    0.86233 (5) obj. -772.878 iterations 10
Cbc0038I Pass  29: suminf.    0.86233 (5) obj. -772.878 iterations 2
Cbc0038I Pass  30: suminf.    0.90054 (2) obj. -772.878 iterations 4
Cbc0038I Pass  31: suminf.    0.90054 (2) obj. -772.878 iterations 0
Cbc0038I Rounding solution of -726.131 is better than previous of -723.016

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -726.131 to -755.442 (0.04 seconds)
Cbc0038I Round again with cutoff of -862.629
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.82211 (7) obj. -862.629 iterations 0
Cbc0038I Pass  32: suminf.    0.70013 (4) obj. -862.629 iterations 3
Cbc0038I Pass  33: suminf.    0.43591 (2) obj. -1082.5 iterations 6
Cbc0038I Pass  34: suminf.    0.41171 (2) obj. -862.629 iterations 1
Cbc0038I Pass  35: suminf.    0.41171 (2) obj. -862.629 iterations 0
Cbc0038I Pass  36: suminf.    0.48187 (2) obj. -862.629 iterations 1
Cbc0038I Pass  37: suminf.    0.76930 (3) obj. -862.629 iterations 5
Cbc0038I Pass  38: suminf.    0.76930 (3) obj. -862.629 iterations 1
Cbc0038I Pass  39: suminf.    0.70134 (2) obj. -862.629 iterations 2
Cbc0038I Pass  40: suminf.    0.73354 (2) obj. -862.629 iterations 1
Cbc0038I Pass  41: suminf.    1.57465 (9) obj. -862.629 iterations 13
Cbc0038I Pass  42: suminf.    1.49108 (10) obj. -862.629 iterations 2
Cbc0038I Pass  43: suminf.    0.57818 (2) obj. -862.629 iterations 9
Cbc0038I Pass  44: suminf.    0.19907 (2) obj. -1022.14 iterations 3
Cbc0038I Pass  45: suminf.    0.57818 (2) obj. -862.629 iterations 1
Cbc0038I Pass  46: suminf.    0.62202 (5) obj. -862.629 iterations 7
Cbc0038I Pass  47: suminf.    0.56603 (2) obj. -862.629 iterations 1
Cbc0038I Pass  48: suminf.    1.16693 (3) obj. -862.629 iterations 2
Cbc0038I Pass  49: suminf.    1.16693 (3) obj. -862.629 iterations 0
Cbc0038I Pass  50: suminf.    0.58669 (2) obj. -871.978 iterations 1
Cbc0038I Pass  51: suminf.    0.82376 (5) obj. -862.629 iterations 9
Cbc0038I Pass  52: suminf.    0.81484 (5) obj. -862.629 iterations 1
Cbc0038I Pass  53: suminf.    0.54288 (2) obj. -862.629 iterations 3
Cbc0038I Pass  54: suminf.    0.36585 (1) obj. -933.645 iterations 2
Cbc0038I Pass  55: suminf.    0.46435 (1) obj. -862.629 iterations 1
Cbc0038I Pass  56: suminf.    0.91629 (6) obj. -862.629 iterations 9
Cbc0038I Pass  57: suminf.    0.90705 (6) obj. -862.629 iterations 3
Cbc0038I Pass  58: suminf.    0.53840 (2) obj. -862.629 iterations 7
Cbc0038I Pass  59: suminf.    0.53840 (2) obj. -862.629 iterations 0
Cbc0038I Pass  60: suminf.    0.40875 (1) obj. -862.629 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -755.442 - took 0.04 seconds
Cbc0012I Integer solution of -755.4421 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 38 rows 46 columns, reduced to 16 rows 18 columns
Cbc0031I 16 added rows had average density of 19
Cbc0013I At root node, 16 cuts changed objective from -1221.633 to -796.09352 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 641 row cuts average 3.3 elements, 6 column cuts (6 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 337 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 63 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 36 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.649 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -755.4421 best solution, best possible -796.09352 (1.36 seconds)
Cbc0012I Integer solution of -770.73 found by DiveCoefficient after 1339 iterations and 1 nodes (1.38 seconds)
Cbc0010I After 20 nodes, 2 on tree, -770.73 best solution, best possible -796.09297 (2.09 seconds)
Cbc0001I Search completed - best objective -770.73, took 1974 iterations and 22 nodes (2.18 seconds)
Cbc0032I Strong branching done 348 times (2676 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       2.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-10) rows, 31 (-2) columns and 165 (-18) elements
Clp1000I sum of infeasibilities 7.64452e-06 - average 1.38991e-07, 20 fixed columns
Coin0506I Presolve 14 (-41) rows, 9 (-22) columns and 40 (-125) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Coin0511I After Postsolve, objective 1249.2489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Clp0000I Optimal - objective value 1249.2489
Coin0511I After Postsolve, objective 1249.2489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1249.248856 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 31 columns (30 integer (30 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.605%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.90721
Cbc0038I Pass   1: suminf.    0.04065 (1) obj. -1131.32 iterations 6
Cbc0038I Solution found of -439.621
Cbc0038I Relaxing continuous gives -439.621
Cbc0038I Rounding solution of -723.192 is better than previous of -439.621

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -772.644
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04065 (1) obj. -1131.32 iterations 0
Cbc0038I Pass   3: suminf.    0.46188 (1) obj. -772.644 iterations 1
Cbc0038I Pass   4: suminf.    2.36441 (6) obj. -772.644 iterations 9
Cbc0038I Pass   5: suminf.    0.18379 (1) obj. -772.644 iterations 11
Cbc0038I Pass   6: suminf.    0.31987 (2) obj. -1157.51 iterations 2
Cbc0038I Pass   7: suminf.    0.20371 (1) obj. -772.644 iterations 3
Cbc0038I Pass   8: suminf.    0.14634 (1) obj. -814.008 iterations 1
Cbc0038I Pass   9: suminf.    0.47967 (1) obj. -788.612 iterations 10
Cbc0038I Pass  10: suminf.    0.45753 (1) obj. -772.644 iterations 3
Cbc0038I Pass  11: suminf.    0.47967 (1) obj. -788.612 iterations 1
Cbc0038I Pass  12: suminf.    0.59457 (4) obj. -772.644 iterations 8
Cbc0038I Pass  13: suminf.    0.58536 (3) obj. -772.644 iterations 1
Cbc0038I Pass  14: suminf.    0.68865 (2) obj. -912.864 iterations 2
Cbc0038I Pass  15: suminf.    0.35540 (2) obj. -772.644 iterations 1
Cbc0038I Pass  16: suminf.    1.03534 (5) obj. -772.644 iterations 8
Cbc0038I Pass  17: suminf.    0.65905 (3) obj. -772.644 iterations 2
Cbc0038I Pass  18: suminf.    0.71599 (2) obj. -935.117 iterations 1
Cbc0038I Pass  19: suminf.    0.46341 (1) obj. -824.399 iterations 1
Cbc0038I Pass  20: suminf.    0.46480 (1) obj. -772.644 iterations 1
Cbc0038I Pass  21: suminf.    0.79137 (4) obj. -772.644 iterations 4
Cbc0038I Pass  22: suminf.    0.47237 (2) obj. -772.644 iterations 3
Cbc0038I Pass  23: suminf.    0.59749 (2) obj. -833.111 iterations 1
Cbc0038I Pass  24: suminf.    1.17870 (6) obj. -772.644 iterations 11
Cbc0038I Pass  25: suminf.    0.30466 (2) obj. -772.644 iterations 5
Cbc0038I Pass  26: suminf.    0.74008 (2) obj. -772.644 iterations 1
Cbc0038I Pass  27: suminf.    0.83905 (3) obj. -772.644 iterations 7
Cbc0038I Pass  28: suminf.    0.73162 (2) obj. -772.644 iterations 5
Cbc0038I Pass  29: suminf.    0.48780 (1) obj. -789.764 iterations 2
Cbc0038I Pass  30: suminf.    0.46406 (1) obj. -772.644 iterations 1
Cbc0038I Pass  31: suminf.    1.20582 (4) obj. -772.644 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -439.621 to -760.822 (0.02 seconds)
Cbc0038I Round again with cutoff of -861.657
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.04065 (1) obj. -1131.32 iterations 0
Cbc0038I Pass  32: suminf.    0.41466 (1) obj. -861.657 iterations 1
Cbc0038I Pass  33: suminf.    1.41144 (8) obj. -861.657 iterations 22
Cbc0038I Pass  34: suminf.    0.79363 (3) obj. -861.657 iterations 6
Cbc0038I Pass  35: suminf.    0.44635 (2) obj. -861.657 iterations 3
Cbc0038I Pass  36: suminf.    0.70324 (2) obj. -861.657 iterations 4
Cbc0038I Pass  37: suminf.    0.75566 (3) obj. -861.657 iterations 9
Cbc0038I Pass  38: suminf.    0.75566 (3) obj. -861.657 iterations 1
Cbc0038I Pass  39: suminf.    0.55309 (2) obj. -861.657 iterations 2
Cbc0038I Pass  40: suminf.    0.44789 (2) obj. -861.657 iterations 2
Cbc0038I Pass  41: suminf.    0.68179 (2) obj. -861.657 iterations 4
Cbc0038I Pass  42: suminf.    0.65679 (2) obj. -861.657 iterations 4
Cbc0038I Pass  43: suminf.    0.70774 (2) obj. -883.094 iterations 1
Cbc0038I Pass  44: suminf.    0.41570 (3) obj. -861.657 iterations 9
Cbc0038I Pass  45: suminf.    0.41570 (3) obj. -861.657 iterations 1
Cbc0038I Pass  46: suminf.    0.46373 (2) obj. -950.475 iterations 3
Cbc0038I Pass  47: suminf.    0.30317 (1) obj. -861.657 iterations 2
Cbc0038I Pass  48: suminf.    0.37398 (1) obj. -912.712 iterations 1
Cbc0038I Pass  49: suminf.    1.65839 (4) obj. -861.657 iterations 9
Cbc0038I Pass  50: suminf.    0.58856 (2) obj. -861.657 iterations 4
Cbc0038I Pass  51: suminf.    0.58856 (2) obj. -861.657 iterations 0
Cbc0038I Pass  52: suminf.    0.76013 (2) obj. -861.657 iterations 1
Cbc0038I Pass  53: suminf.    0.53140 (3) obj. -861.657 iterations 6
Cbc0038I Pass  54: suminf.    0.53140 (3) obj. -861.657 iterations 0
Cbc0038I Pass  55: suminf.    0.56354 (2) obj. -861.657 iterations 2
Cbc0038I Pass  56: suminf.    0.45840 (2) obj. -861.657 iterations 2
Cbc0038I Pass  57: suminf.    0.61559 (5) obj. -861.657 iterations 8
Cbc0038I Pass  58: suminf.    0.38483 (3) obj. -861.657 iterations 2
Cbc0038I Pass  59: suminf.    0.36799 (2) obj. -861.657 iterations 3
Cbc0038I Pass  60: suminf.    0.64014 (2) obj. -861.657 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 31 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -760.822 - took 0.05 seconds
Cbc0012I Integer solution of -760.8221 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 31 columns, reduced to 16 rows 10 columns
Cbc0031I 3 added rows had average density of 23
Cbc0013I At root node, 3 cuts changed objective from -1217.711 to -802.24591 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 281 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 336 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.767 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -760.8221 best solution, best possible -802.24591 (1.45 seconds)
Cbc0012I Integer solution of -770.73 found by rounding after 1342 iterations and 17 nodes (2.06 seconds)
Cbc0010I After 17 nodes, 2 on tree, -770.73 best solution, best possible -802.24591 (2.19 seconds)
Cbc0001I Search completed - best objective -770.73, took 1436 iterations and 20 nodes (2.26 seconds)
Cbc0032I Strong branching done 200 times (1029 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 7, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       2.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 46 (-17) columns and 376 (-273) elements
Clp1000I sum of infeasibilities 2.48518e-06 - average 6.06141e-08, 25 fixed columns
Coin0506I Presolve 20 (-21) rows, 20 (-26) columns and 57 (-319) elements
Clp0006I 0  Obj 1257.0962 Dual inf 12.840912 (19)
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 1259.8949
Clp0000I Optimal - objective value 1259.8949
Coin0511I After Postsolve, objective 1259.8949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1259.8949 Dual inf 34.00187 (1)
Clp0014I Perturbing problem by 0.001% of 1.2097114 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 1259.8949
Clp0000I Optimal - objective value 1259.8949
Clp0000I Optimal - objective value 1259.8949
Coin0511I After Postsolve, objective 1259.8949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1259.894894 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 46 columns (46 integer (46 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.91365
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -723.016 iterations 15
Cbc0038I Solution found of -723.016
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -772.878
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.29361 (7) obj. -772.878 iterations 3
Cbc0038I Pass   3: suminf.    0.25163 (4) obj. -772.878 iterations 3
Cbc0038I Pass   4: suminf.    0.43591 (2) obj. -1082.5 iterations 6
Cbc0038I Pass   5: suminf.    0.21316 (1) obj. -772.878 iterations 2
Cbc0038I Pass   6: suminf.    0.19512 (1) obj. -785.881 iterations 1
Cbc0038I Pass   7: suminf.    1.11298 (7) obj. -772.878 iterations 5
Cbc0038I Pass   8: suminf.    0.58281 (4) obj. -772.878 iterations 3
Cbc0038I Pass   9: suminf.    0.15447 (1) obj. -815.191 iterations 3
Cbc0038I Pass  10: suminf.    0.21316 (1) obj. -772.878 iterations 1
Cbc0038I Pass  11: suminf.    1.74176 (10) obj. -772.878 iterations 15
Cbc0038I Pass  12: suminf.    1.50319 (8) obj. -772.878 iterations 3
Cbc0038I Pass  13: suminf.    0.60704 (2) obj. -819.859 iterations 8
Cbc0038I Pass  14: suminf.    0.49538 (2) obj. -772.878 iterations 1
Cbc0038I Pass  15: suminf.    0.77315 (4) obj. -772.878 iterations 5
Cbc0038I Pass  16: suminf.    0.62858 (3) obj. -772.878 iterations 3
Cbc0038I Pass  17: suminf.    0.37832 (3) obj. -772.878 iterations 3
Cbc0038I Pass  18: suminf.    0.29040 (2) obj. -773.217 iterations 3
Cbc0038I Pass  19: suminf.    0.28911 (2) obj. -772.878 iterations 1
Cbc0038I Pass  20: suminf.    2.01228 (5) obj. -772.878 iterations 5
Cbc0038I Pass  21: suminf.    0.41375 (2) obj. -772.878 iterations 3
Cbc0038I Pass  22: suminf.    0.23667 (1) obj. -772.878 iterations 1
Cbc0038I Pass  23: suminf.    0.34959 (1) obj. -854.298 iterations 1
Cbc0038I Pass  24: suminf.    2.13271 (12) obj. -772.878 iterations 16
Cbc0038I Pass  25: suminf.    1.06082 (3) obj. -772.878 iterations 6
Cbc0038I Pass  26: suminf.    0.44715 (1) obj. -811.247 iterations 3
Cbc0038I Pass  27: suminf.    0.39394 (1) obj. -772.878 iterations 1
Cbc0038I Pass  28: suminf.    0.86233 (5) obj. -772.878 iterations 10
Cbc0038I Pass  29: suminf.    0.86233 (5) obj. -772.878 iterations 2
Cbc0038I Pass  30: suminf.    0.90054 (2) obj. -772.878 iterations 4
Cbc0038I Pass  31: suminf.    0.90054 (2) obj. -772.878 iterations 0
Cbc0038I Rounding solution of -726.131 is better than previous of -723.016

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -726.131 to -755.442 (0.05 seconds)
Cbc0038I Round again with cutoff of -862.629
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.82211 (7) obj. -862.629 iterations 0
Cbc0038I Pass  32: suminf.    0.70013 (4) obj. -862.629 iterations 3
Cbc0038I Pass  33: suminf.    0.43591 (2) obj. -1082.5 iterations 6
Cbc0038I Pass  34: suminf.    0.41171 (2) obj. -862.629 iterations 1
Cbc0038I Pass  35: suminf.    0.41171 (2) obj. -862.629 iterations 0
Cbc0038I Pass  36: suminf.    0.48187 (2) obj. -862.629 iterations 1
Cbc0038I Pass  37: suminf.    0.76930 (3) obj. -862.629 iterations 5
Cbc0038I Pass  38: suminf.    0.76930 (3) obj. -862.629 iterations 1
Cbc0038I Pass  39: suminf.    0.70134 (2) obj. -862.629 iterations 2
Cbc0038I Pass  40: suminf.    0.73354 (2) obj. -862.629 iterations 1
Cbc0038I Pass  41: suminf.    1.57465 (9) obj. -862.629 iterations 13
Cbc0038I Pass  42: suminf.    1.49108 (10) obj. -862.629 iterations 2
Cbc0038I Pass  43: suminf.    0.57818 (2) obj. -862.629 iterations 9
Cbc0038I Pass  44: suminf.    0.19907 (2) obj. -1022.14 iterations 3
Cbc0038I Pass  45: suminf.    0.57818 (2) obj. -862.629 iterations 1
Cbc0038I Pass  46: suminf.    0.62202 (5) obj. -862.629 iterations 7
Cbc0038I Pass  47: suminf.    0.56603 (2) obj. -862.629 iterations 1
Cbc0038I Pass  48: suminf.    1.16693 (3) obj. -862.629 iterations 2
Cbc0038I Pass  49: suminf.    1.16693 (3) obj. -862.629 iterations 0
Cbc0038I Pass  50: suminf.    0.58669 (2) obj. -871.978 iterations 1
Cbc0038I Pass  51: suminf.    0.82376 (5) obj. -862.629 iterations 9
Cbc0038I Pass  52: suminf.    0.81484 (5) obj. -862.629 iterations 1
Cbc0038I Pass  53: suminf.    0.54288 (2) obj. -862.629 iterations 3
Cbc0038I Pass  54: suminf.    0.36585 (1) obj. -933.645 iterations 2
Cbc0038I Pass  55: suminf.    0.46435 (1) obj. -862.629 iterations 1
Cbc0038I Pass  56: suminf.    0.91629 (6) obj. -862.629 iterations 9
Cbc0038I Pass  57: suminf.    0.90705 (6) obj. -862.629 iterations 3
Cbc0038I Pass  58: suminf.    0.53840 (2) obj. -862.629 iterations 7
Cbc0038I Pass  59: suminf.    0.53840 (2) obj. -862.629 iterations 0
Cbc0038I Pass  60: suminf.    0.40875 (1) obj. -862.629 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 46 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -755.442 - took 0.04 seconds
Cbc0012I Integer solution of -755.4421 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 38 rows 46 columns, reduced to 16 rows 18 columns
Cbc0031I 16 added rows had average density of 19
Cbc0013I At root node, 16 cuts changed objective from -1221.633 to -796.09352 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 641 row cuts average 3.3 elements, 6 column cuts (6 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 337 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 63 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 36 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.764 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -755.4421 best solution, best possible -796.09352 (1.55 seconds)
Cbc0012I Integer solution of -770.73 found by DiveCoefficient after 1339 iterations and 1 nodes (1.57 seconds)
Cbc0010I After 18 nodes, 4 on tree, -770.73 best solution, best possible -796.09297 (2.27 seconds)
Cbc0001I Search completed - best objective -770.73, took 1974 iterations and 22 nodes (2.41 seconds)
Cbc0032I Strong branching done 348 times (2676 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.56   (Wallclock seconds):       2.41

