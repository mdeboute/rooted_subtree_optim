Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 241 (-11) rows, 123 (-4) columns and 602 (-22) elements
Clp1000I sum of infeasibilities 0.0262363 - average 0.000108864, 28 fixed columns
Coin0506I Presolve 178 (-63) rows, 95 (-28) columns and 448 (-154) elements
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 0.19440615 - largest nonzero change 0 ( 0%) - largest zero change 2.5537642e-05
Clp0000I Optimal - objective value 15333.658
Clp0000I Optimal - objective value 15333.658
Coin0511I After Postsolve, objective 15333.658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19212383 - largest nonzero change 0 ( 0%) - largest zero change 2.9345031e-05
Clp0000I Optimal - objective value 15333.658
Clp0000I Optimal - objective value 15333.658
Clp0000I Optimal - objective value 15333.658
Coin0511I After Postsolve, objective 15333.658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15333.65758 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 241 rows, 123 columns (122 integer (122 of which binary)) and 602 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.790%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 94 integers unsatisfied sum - 23.2395
Cbc0038I Solution found of 458.349
Cbc0038I Relaxing continuous gives -46.285
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 241 rows 123 columns, reduced to 178 rows 95 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1575.02
Cbc0038I Pass   1: suminf.    1.25997 (12) obj. -1575.02 iterations 77
Cbc0038I Pass   2: suminf.    3.82827 (13) obj. -1575.02 iterations 36
Cbc0038I Pass   3: suminf.    2.79448 (10) obj. -1575.02 iterations 5
Cbc0038I Pass   4: suminf.    1.62333 (10) obj. -1575.02 iterations 13
Cbc0038I Pass   5: suminf.    0.84314 (10) obj. -1575.02 iterations 5
Cbc0038I Pass   6: suminf.    2.41450 (10) obj. -1575.02 iterations 19
Cbc0038I Pass   7: suminf.    0.82537 (11) obj. -1575.02 iterations 25
Cbc0038I Pass   8: suminf.    3.79589 (11) obj. -1575.02 iterations 22
Cbc0038I Pass   9: suminf.    1.97943 (6) obj. -1575.02 iterations 12
Cbc0038I Pass  10: suminf.    1.80080 (7) obj. -1575.02 iterations 7
Cbc0038I Pass  11: suminf.    1.63781 (10) obj. -1575.02 iterations 3
Cbc0038I Pass  12: suminf.    2.30977 (7) obj. -1575.02 iterations 13
Cbc0038I Pass  13: suminf.    2.30977 (7) obj. -1575.02 iterations 1
Cbc0038I Pass  14: suminf.    1.81807 (8) obj. -1575.02 iterations 9
Cbc0038I Pass  15: suminf.    1.71082 (9) obj. -1575.02 iterations 1
Cbc0038I Pass  16: suminf.    2.50914 (8) obj. -1575.02 iterations 11
Cbc0038I Pass  17: suminf.    1.02232 (4) obj. -1575.02 iterations 31
Cbc0038I Pass  18: suminf.    0.98890 (4) obj. -1575.02 iterations 16
Cbc0038I Pass  19: suminf.    0.27778 (1) obj. -4405.64 iterations 4
Cbc0038I Pass  20: suminf.    0.03686 (1) obj. -1575.02 iterations 2
Cbc0038I Solution found of -1575.02
Cbc0038I Relaxing continuous gives -1625.12
Cbc0038I Rounding solution of -3346.81 is better than previous of -1625.12

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 241 rows 123 columns, reduced to 186 rows 99 columns - 5 fixed gives 140, 89 - still too large
Cbc0038I Full problem 241 rows 123 columns, reduced to 140 rows 89 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -5744.18
Cbc0038I Pass  21: suminf.    5.86175 (31) obj. -5744.18 iterations 22
Cbc0038I Pass  22: suminf.    2.24042 (7) obj. -5744.18 iterations 56
Cbc0038I Pass  23: suminf.    2.24042 (7) obj. -5744.18 iterations 0
Cbc0038I Pass  24: suminf.    1.14032 (5) obj. -5744.18 iterations 10
Cbc0038I Pass  25: suminf.    0.72148 (11) obj. -5744.18 iterations 6
Cbc0038I Pass  26: suminf.    0.72148 (11) obj. -5744.18 iterations 0
Cbc0038I Pass  27: suminf.    2.44908 (9) obj. -5744.18 iterations 16
Cbc0038I Pass  28: suminf.    2.44908 (9) obj. -5744.18 iterations 0
Cbc0038I Pass  29: suminf.    0.75177 (10) obj. -5744.18 iterations 11
Cbc0038I Pass  30: suminf.    0.75177 (10) obj. -5744.18 iterations 1
Cbc0038I Pass  31: suminf.    3.18748 (9) obj. -5744.18 iterations 12
Cbc0038I Pass  32: suminf.    2.48108 (8) obj. -5744.18 iterations 5
Cbc0038I Pass  33: suminf.    2.02489 (8) obj. -5744.18 iterations 9
Cbc0038I Pass  34: suminf.    0.72148 (11) obj. -5744.18 iterations 5
Cbc0038I Pass  35: suminf.    0.72148 (11) obj. -5744.18 iterations 0
Cbc0038I Pass  36: suminf.    2.44908 (9) obj. -5744.18 iterations 16
Cbc0038I Pass  37: suminf.    2.44908 (9) obj. -5744.18 iterations 0
Cbc0038I Pass  38: suminf.    0.75177 (10) obj. -5744.18 iterations 11
Cbc0038I Pass  39: suminf.    0.75177 (10) obj. -5744.18 iterations 1
Cbc0038I Pass  40: suminf.    3.18748 (9) obj. -5744.18 iterations 12
Cbc0038I Pass  41: suminf.    2.48108 (8) obj. -5744.18 iterations 5
Cbc0038I Pass  42: suminf.    2.02489 (8) obj. -5744.18 iterations 9
Cbc0038I Pass  43: suminf.    0.72148 (11) obj. -5744.18 iterations 5
Cbc0038I Pass  44: suminf.    0.72148 (11) obj. -5744.18 iterations 0
Cbc0038I Pass  45: suminf.    2.44908 (9) obj. -5744.18 iterations 16
Cbc0038I Pass  46: suminf.    2.44908 (9) obj. -5744.18 iterations 0
Cbc0038I Pass  47: suminf.    0.75177 (10) obj. -5744.18 iterations 11
Cbc0038I Pass  48: suminf.    0.75177 (10) obj. -5744.18 iterations 1
Cbc0038I Pass  49: suminf.    3.18748 (9) obj. -5744.18 iterations 12
Cbc0038I Pass  50: suminf.    2.48108 (8) obj. -5744.18 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 241 rows 123 columns, reduced to 178 rows 95 columns - 6 fixed gives 120, 78 - still too large
Cbc0038I Full problem 241 rows 123 columns, reduced to 120 rows 78 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3346.81 - took 0.04 seconds
Cbc0012I Integer solution of -3346.8129 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 13 added rows had average density of 84.692308
Cbc0013I At root node, 13 cuts changed objective from -15333.658 to -11482.091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21878 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1509 row cuts average 119.5 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3346.8129 best solution, best possible -11482.091 (1.33 seconds)
Cbc0012I Integer solution of -6029.7512 found by rounding after 6012 iterations and 9 nodes (1.51 seconds)
Cbc0012I Integer solution of -6240.838 found by DiveCoefficient after 6012 iterations and 9 nodes (1.51 seconds)
Cbc0012I Integer solution of -6275.5893 found by DiveCoefficient after 6256 iterations and 16 nodes (1.55 seconds)
Cbc0012I Integer solution of -6288.0142 found by rounding after 6268 iterations and 17 nodes (1.55 seconds)
Cbc0016I Integer solution of -6328.2073 found by strong branching after 6294 iterations and 18 nodes (1.55 seconds)
Cbc0038I Full problem 241 rows 123 columns, reduced to 152 rows 84 columns - 2 fixed gives 150, 82 - still too large
Cbc0038I Full problem 241 rows 123 columns, reduced to 150 rows 82 columns - too large
Cbc0012I Integer solution of -7221.372 found by rounding after 7052 iterations and 46 nodes (1.63 seconds)
Cbc0012I Integer solution of -7464.6102 found by DiveCoefficient after 8031 iterations and 73 nodes (1.73 seconds)
Cbc0012I Integer solution of -7578.4639 found by DiveCoefficient after 8034 iterations and 74 nodes (1.73 seconds)
Cbc0004I Integer solution of -7922.4102 found after 8051 iterations and 74 nodes (1.73 seconds)
Cbc0001I Search completed - best objective -7922.410200000002, took 8112 iterations and 76 nodes (1.74 seconds)
Cbc0032I Strong branching done 896 times (18385 iterations), fathomed 14 nodes and fixed 8 variables
Cbc0035I Maximum depth 17, 201 variables fixed on reduced cost
Total time (CPU seconds):       1.72   (Wallclock seconds):       1.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 196 (-55) rows, 199 (-51) columns and 4853 (-3521) elements
Clp1000I sum of infeasibilities 1.70408e-05 - average 8.6943e-08, 51 fixed columns
Coin0506I Presolve 145 (-51) rows, 147 (-52) columns and 2780 (-2073) elements
Clp0006I 0  Obj 10729.928 Dual inf 886.09812 (114)
Clp0029I End of values pass after 147 iterations
Clp0014I Perturbing problem by 0.001% of 8.3563202 - largest nonzero change 2.9369137e-05 ( 0.0019250019%) - largest zero change 2.9987259e-05
Clp0000I Optimal - objective value 21041.543
Clp0000I Optimal - objective value 21041.543
Coin0511I After Postsolve, objective 21041.543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21041.543 Dual inf 30271.735 (7)
Clp0014I Perturbing problem by 0.001% of 2.1222179 - largest nonzero change 2.9217568e-05 ( 0.0026062425%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 21041.543
Clp0000I Optimal - objective value 21041.543
Clp0000I Optimal - objective value 21041.543
Coin0511I After Postsolve, objective 21041.543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21041.54297 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0004I processed model has 196 rows, 199 columns (199 integer (199 of which binary)) and 4853 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.963%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 84 integers unsatisfied sum - 15.6563
Cbc0038I Pass   1: suminf.    8.53907 (52) obj. -18344.3 iterations 46
Cbc0038I Pass   2: suminf.    8.53907 (52) obj. -18344.3 iterations 1
Cbc0038I Pass   3: suminf.    5.00555 (41) obj. -14943.8 iterations 16
Cbc0038I Pass   4: suminf.    2.13570 (26) obj. -12059.3 iterations 15
Cbc0038I Pass   5: suminf.    0.28746 (6) obj. -7236.9 iterations 20
Cbc0038I Solution found of -4796.59
Cbc0038I Rounding solution of -5309.36 is better than previous of -4796.59

Cbc0038I Before mini branch and bound, 115 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -6873.97
Cbc0038I Pass   6: suminf.    8.53907 (52) obj. -18344.3 iterations 0
Cbc0038I Pass   7: suminf.    8.53907 (52) obj. -18344.3 iterations 2
Cbc0038I Pass   8: suminf.    2.45437 (28) obj. -12269 iterations 33
Cbc0038I Pass   9: suminf.    0.16704 (4) obj. -6873.97 iterations 45
Cbc0038I Pass  10: suminf.    1.09423 (3) obj. -6873.97 iterations 14
Cbc0038I Pass  11: suminf.    0.55561 (3) obj. -6873.97 iterations 9
Cbc0038I Pass  12: suminf.    8.15748 (42) obj. -6873.97 iterations 53
Cbc0038I Pass  13: suminf.    2.26068 (14) obj. -6873.97 iterations 41
Cbc0038I Pass  14: suminf.    2.00259 (14) obj. -7048.19 iterations 11
Cbc0038I Pass  15: suminf.    1.49747 (41) obj. -6873.97 iterations 33
Cbc0038I Pass  16: suminf.    1.27342 (8) obj. -6873.97 iterations 22
Cbc0038I Pass  17: suminf.    1.31659 (7) obj. -6873.97 iterations 29
Cbc0038I Pass  18: suminf.    1.31659 (7) obj. -6873.97 iterations 7
Cbc0038I Pass  19: suminf.    1.06083 (7) obj. -6873.97 iterations 13
Cbc0038I Pass  20: suminf.    1.06083 (7) obj. -6873.97 iterations 6
Cbc0038I Pass  21: suminf.    1.31659 (7) obj. -6873.97 iterations 7
Cbc0038I Pass  22: suminf.    2.18178 (14) obj. -6873.97 iterations 45
Cbc0038I Pass  23: suminf.    1.91402 (14) obj. -7114.96 iterations 11
Cbc0038I Pass  24: suminf.    1.06739 (6) obj. -6873.97 iterations 37
Cbc0038I Pass  25: suminf.    1.06739 (6) obj. -6873.97 iterations 6
Cbc0038I Pass  26: suminf.    1.14161 (6) obj. -6873.97 iterations 8
Cbc0038I Pass  27: suminf.    1.14161 (6) obj. -6873.97 iterations 6
Cbc0038I Pass  28: suminf.    1.06739 (6) obj. -6873.97 iterations 8
Cbc0038I Pass  29: suminf.    1.96577 (19) obj. -6873.97 iterations 42
Cbc0038I Pass  30: suminf.    1.92607 (17) obj. -6873.97 iterations 7
Cbc0038I Pass  31: suminf.    1.26003 (5) obj. -6873.97 iterations 42
Cbc0038I Pass  32: suminf.    0.80452 (5) obj. -6873.97 iterations 5
Cbc0038I Pass  33: suminf.    1.34281 (5) obj. -6873.97 iterations 9
Cbc0038I Pass  34: suminf.    0.80452 (5) obj. -6873.97 iterations 2
Cbc0038I Pass  35: suminf.    3.89449 (25) obj. -6873.97 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 196 rows 199 columns, reduced to 101 rows 109 columns - 20 fixed gives 77, 88 - ok now
Cbc0038I Full problem 196 rows 199 columns, reduced to 22 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -4796.59 to -5452.14 (0.09 seconds)
Cbc0038I Round again with cutoff of -9690.28
Cbc0038I Pass  35: suminf.    8.53907 (52) obj. -18344.3 iterations 0
Cbc0038I Pass  36: suminf.    8.53907 (52) obj. -18344.3 iterations 2
Cbc0038I Pass  37: suminf.    4.19607 (37) obj. -14804.3 iterations 24
Cbc0038I Pass  38: suminf.    0.86216 (14) obj. -10006 iterations 23
Cbc0038I Pass  39: suminf.    2.56973 (30) obj. -9690.28 iterations 53
Cbc0038I Pass  40: suminf.    2.56973 (30) obj. -9690.28 iterations 0
Cbc0038I Pass  41: suminf.    2.62209 (30) obj. -9690.28 iterations 14
Cbc0038I Pass  42: suminf.    2.05184 (31) obj. -9690.28 iterations 15
Cbc0038I Pass  43: suminf.    7.77039 (31) obj. -9690.28 iterations 27
Cbc0038I Pass  44: suminf.    7.51769 (31) obj. -9690.28 iterations 4
Cbc0038I Pass  45: suminf.    4.83099 (28) obj. -9690.28 iterations 23
Cbc0038I Pass  46: suminf.    4.83099 (28) obj. -9690.28 iterations 18
Cbc0038I Pass  47: suminf.    4.88067 (28) obj. -9690.28 iterations 18
Cbc0038I Pass  48: suminf.    4.88067 (28) obj. -9690.28 iterations 18
Cbc0038I Pass  49: suminf.    4.95798 (27) obj. -9690.28 iterations 20
Cbc0038I Pass  50: suminf.    4.43538 (27) obj. -9690.28 iterations 18
Cbc0038I Pass  51: suminf.    4.79285 (25) obj. -9690.28 iterations 27
Cbc0038I Pass  52: suminf.    4.69862 (25) obj. -9690.28 iterations 17
Cbc0038I Pass  53: suminf.    4.78964 (25) obj. -9690.28 iterations 19
Cbc0038I Pass  54: suminf.    6.08527 (37) obj. -9690.28 iterations 51
Cbc0038I Pass  55: suminf.    6.07179 (34) obj. -9690.28 iterations 14
Cbc0038I Pass  56: suminf.    5.71287 (29) obj. -9690.28 iterations 25
Cbc0038I Pass  57: suminf.    4.79335 (27) obj. -9690.28 iterations 11
Cbc0038I Pass  58: suminf.    4.78633 (28) obj. -9690.28 iterations 7
Cbc0038I Pass  59: suminf.    5.31331 (30) obj. -9690.28 iterations 18
Cbc0038I Pass  60: suminf.    5.23969 (30) obj. -9690.28 iterations 1
Cbc0038I Pass  61: suminf.    5.43986 (29) obj. -9690.28 iterations 28
Cbc0038I Pass  62: suminf.    5.43986 (29) obj. -9690.28 iterations 15
Cbc0038I Pass  63: suminf.    5.71076 (28) obj. -9690.28 iterations 16
Cbc0038I Pass  64: suminf.    5.25560 (28) obj. -9690.28 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 112 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -5452.14 - took 0.09 seconds
Cbc0012I Integer solution of -5452.1399 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 196 rows 199 columns, reduced to 23 rows 24 columns
Cbc0031I 72 added rows had average density of 41.25
Cbc0013I At root node, 72 cuts changed objective from -20955.507 to -8649.3964 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13395 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1885 row cuts average 170.3 elements, 0 column cuts (0 active)  in 0.324 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2982 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.362 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1073 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.203 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 362 row cuts average 103.1 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.219 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5452.1399 best solution, best possible -8649.3964 (2.70 seconds)
Cbc0012I Integer solution of -6199.1002 found by DiveCoefficient after 5245 iterations and 1 nodes (2.82 seconds)
Cbc0012I Integer solution of -6199.3122 found by DiveCoefficient after 5622 iterations and 2 nodes (3.26 seconds)
Cbc0012I Integer solution of -6945.5232 found by DiveCoefficient after 5675 iterations and 3 nodes (3.34 seconds)
Cbc0012I Integer solution of -7309.6402 found by DiveCoefficient after 5800 iterations and 3 nodes (3.42 seconds)
Cbc0010I After 3 nodes, 4 on tree, -7309.6402 best solution, best possible -8649.3964 (3.42 seconds)
Cbc0016I Integer solution of -7922.4102 found by strong branching after 5883 iterations and 4 nodes (3.44 seconds)
Cbc0001I Search completed - best objective -7922.410200000002, took 6546 iterations and 8 nodes (3.53 seconds)
Cbc0032I Strong branching done 308 times (12025 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 16 variables fixed on reduced cost
Total time (CPU seconds):       3.43   (Wallclock seconds):       3.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 241 (-11) rows, 123 (-4) columns and 602 (-22) elements
Clp1000I sum of infeasibilities 0.0262363 - average 0.000108864, 28 fixed columns
Coin0506I Presolve 178 (-63) rows, 95 (-28) columns and 448 (-154) elements
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 0.19440615 - largest nonzero change 0 ( 0%) - largest zero change 2.5537642e-05
Clp0000I Optimal - objective value 15333.658
Clp0000I Optimal - objective value 15333.658
Coin0511I After Postsolve, objective 15333.658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19212383 - largest nonzero change 0 ( 0%) - largest zero change 2.9345031e-05
Clp0000I Optimal - objective value 15333.658
Clp0000I Optimal - objective value 15333.658
Clp0000I Optimal - objective value 15333.658
Coin0511I After Postsolve, objective 15333.658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15333.65758 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 241 rows, 123 columns (122 integer (122 of which binary)) and 602 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.790%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 94 integers unsatisfied sum - 23.2395
Cbc0038I Solution found of 458.349
Cbc0038I Relaxing continuous gives -46.285
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 241 rows 123 columns, reduced to 178 rows 95 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1575.02
Cbc0038I Pass   1: suminf.    1.25997 (12) obj. -1575.02 iterations 77
Cbc0038I Pass   2: suminf.    3.82827 (13) obj. -1575.02 iterations 36
Cbc0038I Pass   3: suminf.    2.79448 (10) obj. -1575.02 iterations 5
Cbc0038I Pass   4: suminf.    1.62333 (10) obj. -1575.02 iterations 13
Cbc0038I Pass   5: suminf.    0.84314 (10) obj. -1575.02 iterations 5
Cbc0038I Pass   6: suminf.    2.41450 (10) obj. -1575.02 iterations 19
Cbc0038I Pass   7: suminf.    0.82537 (11) obj. -1575.02 iterations 25
Cbc0038I Pass   8: suminf.    3.79589 (11) obj. -1575.02 iterations 22
Cbc0038I Pass   9: suminf.    1.97943 (6) obj. -1575.02 iterations 12
Cbc0038I Pass  10: suminf.    1.80080 (7) obj. -1575.02 iterations 7
Cbc0038I Pass  11: suminf.    1.63781 (10) obj. -1575.02 iterations 3
Cbc0038I Pass  12: suminf.    2.30977 (7) obj. -1575.02 iterations 13
Cbc0038I Pass  13: suminf.    2.30977 (7) obj. -1575.02 iterations 1
Cbc0038I Pass  14: suminf.    1.81807 (8) obj. -1575.02 iterations 9
Cbc0038I Pass  15: suminf.    1.71082 (9) obj. -1575.02 iterations 1
Cbc0038I Pass  16: suminf.    2.50914 (8) obj. -1575.02 iterations 11
Cbc0038I Pass  17: suminf.    1.02232 (4) obj. -1575.02 iterations 31
Cbc0038I Pass  18: suminf.    0.98890 (4) obj. -1575.02 iterations 16
Cbc0038I Pass  19: suminf.    0.27778 (1) obj. -4405.64 iterations 4
Cbc0038I Pass  20: suminf.    0.03686 (1) obj. -1575.02 iterations 2
Cbc0038I Solution found of -1575.02
Cbc0038I Relaxing continuous gives -1625.12
Cbc0038I Rounding solution of -3346.81 is better than previous of -1625.12

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 241 rows 123 columns, reduced to 186 rows 99 columns - 5 fixed gives 140, 89 - still too large
Cbc0038I Full problem 241 rows 123 columns, reduced to 140 rows 89 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -5744.18
Cbc0038I Pass  21: suminf.    5.86175 (31) obj. -5744.18 iterations 22
Cbc0038I Pass  22: suminf.    2.24042 (7) obj. -5744.18 iterations 56
Cbc0038I Pass  23: suminf.    2.24042 (7) obj. -5744.18 iterations 0
Cbc0038I Pass  24: suminf.    1.14032 (5) obj. -5744.18 iterations 10
Cbc0038I Pass  25: suminf.    0.72148 (11) obj. -5744.18 iterations 6
Cbc0038I Pass  26: suminf.    0.72148 (11) obj. -5744.18 iterations 0
Cbc0038I Pass  27: suminf.    2.44908 (9) obj. -5744.18 iterations 16
Cbc0038I Pass  28: suminf.    2.44908 (9) obj. -5744.18 iterations 0
Cbc0038I Pass  29: suminf.    0.75177 (10) obj. -5744.18 iterations 11
Cbc0038I Pass  30: suminf.    0.75177 (10) obj. -5744.18 iterations 1
Cbc0038I Pass  31: suminf.    3.18748 (9) obj. -5744.18 iterations 12
Cbc0038I Pass  32: suminf.    2.48108 (8) obj. -5744.18 iterations 5
Cbc0038I Pass  33: suminf.    2.02489 (8) obj. -5744.18 iterations 9
Cbc0038I Pass  34: suminf.    0.72148 (11) obj. -5744.18 iterations 5
Cbc0038I Pass  35: suminf.    0.72148 (11) obj. -5744.18 iterations 0
Cbc0038I Pass  36: suminf.    2.44908 (9) obj. -5744.18 iterations 16
Cbc0038I Pass  37: suminf.    2.44908 (9) obj. -5744.18 iterations 0
Cbc0038I Pass  38: suminf.    0.75177 (10) obj. -5744.18 iterations 11
Cbc0038I Pass  39: suminf.    0.75177 (10) obj. -5744.18 iterations 1
Cbc0038I Pass  40: suminf.    3.18748 (9) obj. -5744.18 iterations 12
Cbc0038I Pass  41: suminf.    2.48108 (8) obj. -5744.18 iterations 5
Cbc0038I Pass  42: suminf.    2.02489 (8) obj. -5744.18 iterations 9
Cbc0038I Pass  43: suminf.    0.72148 (11) obj. -5744.18 iterations 5
Cbc0038I Pass  44: suminf.    0.72148 (11) obj. -5744.18 iterations 0
Cbc0038I Pass  45: suminf.    2.44908 (9) obj. -5744.18 iterations 16
Cbc0038I Pass  46: suminf.    2.44908 (9) obj. -5744.18 iterations 0
Cbc0038I Pass  47: suminf.    0.75177 (10) obj. -5744.18 iterations 11
Cbc0038I Pass  48: suminf.    0.75177 (10) obj. -5744.18 iterations 1
Cbc0038I Pass  49: suminf.    3.18748 (9) obj. -5744.18 iterations 12
Cbc0038I Pass  50: suminf.    2.48108 (8) obj. -5744.18 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 241 rows 123 columns, reduced to 178 rows 95 columns - 6 fixed gives 120, 78 - still too large
Cbc0038I Full problem 241 rows 123 columns, reduced to 120 rows 78 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3346.81 - took 0.04 seconds
Cbc0012I Integer solution of -3346.8129 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 13 added rows had average density of 84.692308
Cbc0013I At root node, 13 cuts changed objective from -15333.658 to -11482.091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21878 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1509 row cuts average 119.5 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3346.8129 best solution, best possible -11482.091 (1.34 seconds)
Cbc0012I Integer solution of -6029.7512 found by rounding after 6012 iterations and 9 nodes (1.52 seconds)
Cbc0012I Integer solution of -6240.838 found by DiveCoefficient after 6012 iterations and 9 nodes (1.52 seconds)
Cbc0012I Integer solution of -6275.5893 found by DiveCoefficient after 6256 iterations and 16 nodes (1.55 seconds)
Cbc0012I Integer solution of -6288.0142 found by rounding after 6268 iterations and 17 nodes (1.56 seconds)
Cbc0016I Integer solution of -6328.2073 found by strong branching after 6294 iterations and 18 nodes (1.56 seconds)
Cbc0038I Full problem 241 rows 123 columns, reduced to 152 rows 84 columns - 2 fixed gives 150, 82 - still too large
Cbc0038I Full problem 241 rows 123 columns, reduced to 150 rows 82 columns - too large
Cbc0012I Integer solution of -7221.372 found by rounding after 7052 iterations and 46 nodes (1.64 seconds)
Cbc0012I Integer solution of -7464.6102 found by DiveCoefficient after 8031 iterations and 73 nodes (1.74 seconds)
Cbc0012I Integer solution of -7578.4639 found by DiveCoefficient after 8034 iterations and 74 nodes (1.74 seconds)
Cbc0004I Integer solution of -7922.4102 found after 8051 iterations and 74 nodes (1.74 seconds)
Cbc0001I Search completed - best objective -7922.410200000002, took 8112 iterations and 76 nodes (1.75 seconds)
Cbc0032I Strong branching done 896 times (18385 iterations), fathomed 14 nodes and fixed 8 variables
Cbc0035I Maximum depth 17, 201 variables fixed on reduced cost
Total time (CPU seconds):       1.73   (Wallclock seconds):       1.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 196 (-56) rows, 199 (-52) columns and 4853 (-3522) elements
Clp1000I sum of infeasibilities 1.70408e-05 - average 8.6943e-08, 51 fixed columns
Coin0506I Presolve 145 (-51) rows, 147 (-52) columns and 2780 (-2073) elements
Clp0006I 0  Obj 10729.928 Dual inf 886.09812 (114)
Clp0029I End of values pass after 147 iterations
Clp0014I Perturbing problem by 0.001% of 8.3563202 - largest nonzero change 2.9369137e-05 ( 0.0019250019%) - largest zero change 2.9987259e-05
Clp0000I Optimal - objective value 21041.543
Clp0000I Optimal - objective value 21041.543
Coin0511I After Postsolve, objective 21041.543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21041.543 Dual inf 30271.735 (7)
Clp0014I Perturbing problem by 0.001% of 2.1222179 - largest nonzero change 2.9217568e-05 ( 0.0026062425%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 21041.543
Clp0000I Optimal - objective value 21041.543
Clp0000I Optimal - objective value 21041.543
Coin0511I After Postsolve, objective 21041.543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21041.54297 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 196 rows, 199 columns (199 integer (199 of which binary)) and 4853 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.963%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 84 integers unsatisfied sum - 15.6563
Cbc0038I Pass   1: suminf.    8.53907 (52) obj. -18344.3 iterations 46
Cbc0038I Pass   2: suminf.    8.53907 (52) obj. -18344.3 iterations 1
Cbc0038I Pass   3: suminf.    5.00555 (41) obj. -14943.8 iterations 16
Cbc0038I Pass   4: suminf.    2.13570 (26) obj. -12059.3 iterations 15
Cbc0038I Pass   5: suminf.    0.28746 (6) obj. -7236.9 iterations 20
Cbc0038I Solution found of -4796.59
Cbc0038I Rounding solution of -5309.36 is better than previous of -4796.59

Cbc0038I Before mini branch and bound, 115 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -6873.97
Cbc0038I Pass   6: suminf.    8.53907 (52) obj. -18344.3 iterations 0
Cbc0038I Pass   7: suminf.    8.53907 (52) obj. -18344.3 iterations 2
Cbc0038I Pass   8: suminf.    2.45437 (28) obj. -12269 iterations 33
Cbc0038I Pass   9: suminf.    0.16704 (4) obj. -6873.97 iterations 45
Cbc0038I Pass  10: suminf.    1.09423 (3) obj. -6873.97 iterations 14
Cbc0038I Pass  11: suminf.    0.55561 (3) obj. -6873.97 iterations 9
Cbc0038I Pass  12: suminf.    8.15748 (42) obj. -6873.97 iterations 53
Cbc0038I Pass  13: suminf.    2.26068 (14) obj. -6873.97 iterations 41
Cbc0038I Pass  14: suminf.    2.00259 (14) obj. -7048.19 iterations 11
Cbc0038I Pass  15: suminf.    1.49747 (41) obj. -6873.97 iterations 33
Cbc0038I Pass  16: suminf.    1.27342 (8) obj. -6873.97 iterations 22
Cbc0038I Pass  17: suminf.    1.31659 (7) obj. -6873.97 iterations 29
Cbc0038I Pass  18: suminf.    1.31659 (7) obj. -6873.97 iterations 7
Cbc0038I Pass  19: suminf.    1.06083 (7) obj. -6873.97 iterations 13
Cbc0038I Pass  20: suminf.    1.06083 (7) obj. -6873.97 iterations 6
Cbc0038I Pass  21: suminf.    1.31659 (7) obj. -6873.97 iterations 7
Cbc0038I Pass  22: suminf.    2.18178 (14) obj. -6873.97 iterations 45
Cbc0038I Pass  23: suminf.    1.91402 (14) obj. -7114.96 iterations 11
Cbc0038I Pass  24: suminf.    1.06739 (6) obj. -6873.97 iterations 37
Cbc0038I Pass  25: suminf.    1.06739 (6) obj. -6873.97 iterations 6
Cbc0038I Pass  26: suminf.    1.14161 (6) obj. -6873.97 iterations 8
Cbc0038I Pass  27: suminf.    1.14161 (6) obj. -6873.97 iterations 6
Cbc0038I Pass  28: suminf.    1.06739 (6) obj. -6873.97 iterations 8
Cbc0038I Pass  29: suminf.    1.96577 (19) obj. -6873.97 iterations 42
Cbc0038I Pass  30: suminf.    1.92607 (17) obj. -6873.97 iterations 7
Cbc0038I Pass  31: suminf.    1.26003 (5) obj. -6873.97 iterations 42
Cbc0038I Pass  32: suminf.    0.80452 (5) obj. -6873.97 iterations 5
Cbc0038I Pass  33: suminf.    1.34281 (5) obj. -6873.97 iterations 9
Cbc0038I Pass  34: suminf.    0.80452 (5) obj. -6873.97 iterations 2
Cbc0038I Pass  35: suminf.    3.89449 (25) obj. -6873.97 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 196 rows 199 columns, reduced to 101 rows 109 columns - 20 fixed gives 77, 88 - ok now
Cbc0038I Full problem 196 rows 199 columns, reduced to 22 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -4796.59 to -5452.14 (0.09 seconds)
Cbc0038I Round again with cutoff of -9690.28
Cbc0038I Pass  35: suminf.    8.53907 (52) obj. -18344.3 iterations 0
Cbc0038I Pass  36: suminf.    8.53907 (52) obj. -18344.3 iterations 2
Cbc0038I Pass  37: suminf.    4.19607 (37) obj. -14804.3 iterations 24
Cbc0038I Pass  38: suminf.    0.86216 (14) obj. -10006 iterations 23
Cbc0038I Pass  39: suminf.    2.56973 (30) obj. -9690.28 iterations 53
Cbc0038I Pass  40: suminf.    2.56973 (30) obj. -9690.28 iterations 0
Cbc0038I Pass  41: suminf.    2.62209 (30) obj. -9690.28 iterations 14
Cbc0038I Pass  42: suminf.    2.05184 (31) obj. -9690.28 iterations 15
Cbc0038I Pass  43: suminf.    7.77039 (31) obj. -9690.28 iterations 27
Cbc0038I Pass  44: suminf.    7.51769 (31) obj. -9690.28 iterations 4
Cbc0038I Pass  45: suminf.    4.83099 (28) obj. -9690.28 iterations 23
Cbc0038I Pass  46: suminf.    4.83099 (28) obj. -9690.28 iterations 18
Cbc0038I Pass  47: suminf.    4.88067 (28) obj. -9690.28 iterations 18
Cbc0038I Pass  48: suminf.    4.88067 (28) obj. -9690.28 iterations 18
Cbc0038I Pass  49: suminf.    4.95798 (27) obj. -9690.28 iterations 20
Cbc0038I Pass  50: suminf.    4.43538 (27) obj. -9690.28 iterations 18
Cbc0038I Pass  51: suminf.    4.79285 (25) obj. -9690.28 iterations 27
Cbc0038I Pass  52: suminf.    4.69862 (25) obj. -9690.28 iterations 17
Cbc0038I Pass  53: suminf.    4.78964 (25) obj. -9690.28 iterations 19
Cbc0038I Pass  54: suminf.    6.08527 (37) obj. -9690.28 iterations 51
Cbc0038I Pass  55: suminf.    6.07179 (34) obj. -9690.28 iterations 14
Cbc0038I Pass  56: suminf.    5.71287 (29) obj. -9690.28 iterations 25
Cbc0038I Pass  57: suminf.    4.79335 (27) obj. -9690.28 iterations 11
Cbc0038I Pass  58: suminf.    4.78633 (28) obj. -9690.28 iterations 7
Cbc0038I Pass  59: suminf.    5.31331 (30) obj. -9690.28 iterations 18
Cbc0038I Pass  60: suminf.    5.23969 (30) obj. -9690.28 iterations 1
Cbc0038I Pass  61: suminf.    5.43986 (29) obj. -9690.28 iterations 28
Cbc0038I Pass  62: suminf.    5.43986 (29) obj. -9690.28 iterations 15
Cbc0038I Pass  63: suminf.    5.71076 (28) obj. -9690.28 iterations 16
Cbc0038I Pass  64: suminf.    5.25560 (28) obj. -9690.28 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 112 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -5452.14 - took 0.09 seconds
Cbc0012I Integer solution of -5452.1399 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 196 rows 199 columns, reduced to 23 rows 24 columns
Cbc0031I 72 added rows had average density of 41.25
Cbc0013I At root node, 72 cuts changed objective from -20955.507 to -8649.3964 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13395 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1885 row cuts average 170.3 elements, 0 column cuts (0 active)  in 0.322 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2982 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.353 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1073 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 362 row cuts average 103.1 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5452.1399 best solution, best possible -8649.3964 (2.73 seconds)
Cbc0012I Integer solution of -6199.1002 found by DiveCoefficient after 5245 iterations and 1 nodes (2.85 seconds)
Cbc0012I Integer solution of -6199.3122 found by DiveCoefficient after 5622 iterations and 2 nodes (3.30 seconds)
Cbc0012I Integer solution of -6945.5232 found by DiveCoefficient after 5675 iterations and 3 nodes (3.38 seconds)
Cbc0012I Integer solution of -7309.6402 found by DiveCoefficient after 5800 iterations and 3 nodes (3.45 seconds)
Cbc0010I After 3 nodes, 4 on tree, -7309.6402 best solution, best possible -8649.3964 (3.45 seconds)
Cbc0016I Integer solution of -7922.4102 found by strong branching after 5883 iterations and 4 nodes (3.48 seconds)
Cbc0001I Search completed - best objective -7922.410200000002, took 6546 iterations and 8 nodes (3.57 seconds)
Cbc0032I Strong branching done 308 times (12025 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 16 variables fixed on reduced cost
Total time (CPU seconds):       3.44   (Wallclock seconds):       3.60

