Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 0.000108649 - average 1.24883e-06, 6 fixed columns
Coin0506I Presolve 76 (-11) rows, 45 (-6) columns and 234 (-34) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 5.5416627 - largest nonzero change 0 ( 0%) - largest zero change 2.1059261e-05
Clp0000I Optimal - objective value 32.064261
Clp0000I Optimal - objective value 32.064261
Coin0511I After Postsolve, objective 32.064261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.064261
Clp0000I Optimal - objective value 32.064261
Clp0000I Optimal - objective value 32.064261
Coin0511I After Postsolve, objective 32.064261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.06426144 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.90324
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.62689 iterations 34
Cbc0038I Solution found of 5.62689
Cbc0038I Relaxing continuous gives 5.62689
Cbc0038I Rounding solution of 3.82394 is better than previous of 5.62689

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 3.82394 to -0.620719 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.76516
Cbc0038I Pass   2: suminf.    1.34727 (7) obj. -3.76516 iterations 7
Cbc0038I Pass   3: suminf.    1.66361 (6) obj. -3.76516 iterations 12
Cbc0038I Pass   4: suminf.    1.36681 (7) obj. -3.76516 iterations 4
Cbc0038I Pass   5: suminf.    1.36965 (8) obj. -3.76516 iterations 10
Cbc0038I Pass   6: suminf.    1.62126 (6) obj. -3.76516 iterations 20
Cbc0038I Pass   7: suminf.    1.46018 (8) obj. -3.76516 iterations 4
Cbc0038I Pass   8: suminf.    2.37627 (8) obj. -3.76516 iterations 19
Cbc0038I Pass   9: suminf.    1.43293 (8) obj. -3.76516 iterations 7
Cbc0038I Pass  10: suminf.    1.33985 (6) obj. -3.76516 iterations 2
Cbc0038I Pass  11: suminf.    1.77141 (6) obj. -3.76516 iterations 9
Cbc0038I Pass  12: suminf.    1.27004 (5) obj. -3.76516 iterations 2
Cbc0038I Pass  13: suminf.    1.27004 (5) obj. -3.76516 iterations 0
Cbc0038I Pass  14: suminf.    1.91285 (6) obj. -3.76516 iterations 6
Cbc0038I Pass  15: suminf.    1.75777 (5) obj. -3.76516 iterations 4
Cbc0038I Pass  16: suminf.    1.79085 (7) obj. -3.76516 iterations 8
Cbc0038I Pass  17: suminf.    1.54256 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  18: suminf.    1.51053 (6) obj. -3.76516 iterations 13
Cbc0038I Pass  19: suminf.    1.40883 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  20: suminf.    1.67182 (7) obj. -3.76516 iterations 10
Cbc0038I Pass  21: suminf.    1.54336 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  22: suminf.    1.54256 (7) obj. -3.76516 iterations 1
Cbc0038I Pass  23: suminf.    1.51053 (6) obj. -3.76516 iterations 13
Cbc0038I Pass  24: suminf.    1.40883 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  25: suminf.    1.67182 (7) obj. -3.76516 iterations 10
Cbc0038I Pass  26: suminf.    1.54336 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  27: suminf.    1.54256 (7) obj. -3.76516 iterations 1
Cbc0038I Pass  28: suminf.    1.51053 (6) obj. -3.76516 iterations 13
Cbc0038I Pass  29: suminf.    1.40883 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  30: suminf.    1.67182 (7) obj. -3.76516 iterations 10
Cbc0038I Pass  31: suminf.    1.54336 (7) obj. -3.76516 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 56 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -0.620719 - took 0.04 seconds
Cbc0012I Integer solution of -0.620719 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 55 rows 33 columns
Cbc0031I 25 added rows had average density of 37.96
Cbc0013I At root node, 25 cuts changed objective from -32.064261 to -22.215594 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8670 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1705 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0010I After 13 nodes, 10 on tree, -0.620719 best solution, best possible -22.215594 (0.67 seconds)
Cbc0016I Integer solution of -1.288489 found by strong branching after 6339 iterations and 17 nodes (0.68 seconds)
Cbc0001I Search completed - best objective -1.288488999999998, took 7230 iterations and 46 nodes (0.72 seconds)
Cbc0032I Strong branching done 546 times (9795 iterations), fathomed 2 nodes and fixed 29 variables
Cbc0035I Maximum depth 12, 142 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-33) rows, 84 (-18) columns and 1049 (-529) elements
Clp1000I sum of infeasibilities 1.36432e-07 - average 1.92158e-09, 46 fixed columns
Coin0506I Presolve 27 (-44) rows, 38 (-46) columns and 124 (-925) elements
Clp0006I 0  Obj -25.171293 Dual inf 99.784271 (37)
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 0.42890423 - largest nonzero change 2.9661335e-05 ( 0.0023346174%) - largest zero change 2.8380143e-05
Clp0000I Optimal - objective value -16.526685
Clp0000I Optimal - objective value -16.526685
Coin0511I After Postsolve, objective -16.526685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -16.526685 Dual inf 28.841931 (34)
Clp0014I Perturbing problem by 0.001% of 4.4369043 - largest nonzero change 2.5957158e-05 ( 0.0017125872%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 39.814303
Clp0000I Optimal - objective value 39.814303
Clp0000I Optimal - objective value 39.814303
Coin0511I After Postsolve, objective 39.814303, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.81430283 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 84 columns (84 integer (84 of which binary)) and 1051 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.10757
Cbc0038I Pass   1: suminf.    2.92509 (23) obj. -29.1628 iterations 14
Cbc0038I Pass   2: suminf.    2.92509 (23) obj. -29.1628 iterations 1
Cbc0038I Pass   3: suminf.    0.45431 (7) obj. 0.839259 iterations 16
Cbc0038I Solution found of 7.38495
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 7.38495 to 4.81343 (0.02 seconds)
Cbc0038I Round again with cutoff of 0.580937
Cbc0038I Pass   4: suminf.    2.92509 (23) obj. -29.1628 iterations 0
Cbc0038I Pass   5: suminf.    2.92509 (23) obj. -29.1628 iterations 1
Cbc0038I Pass   6: suminf.    0.45746 (7) obj. 0.580937 iterations 17
Cbc0038I Pass   7: suminf.    0.18367 (1) obj. -3.2273 iterations 7
Cbc0038I Pass   8: suminf.    0.47661 (1) obj. 0.580937 iterations 1
Cbc0038I Pass   9: suminf.    1.29165 (9) obj. -7.18629 iterations 23
Cbc0038I Pass  10: suminf.    1.29165 (9) obj. -7.18629 iterations 7
Cbc0038I Pass  11: suminf.    1.02606 (4) obj. 0.580937 iterations 15
Cbc0038I Pass  12: suminf.    0.74856 (3) obj. 0.580937 iterations 3
Cbc0038I Pass  13: suminf.    0.55679 (3) obj. -0.186125 iterations 3
Cbc0038I Pass  14: suminf.    2.90594 (12) obj. 0.580937 iterations 17
Cbc0038I Pass  15: suminf.    1.76344 (9) obj. 0.580937 iterations 4
Cbc0038I Pass  16: suminf.    0.60403 (2) obj. 0.580937 iterations 9
Cbc0038I Pass  17: suminf.    0.55102 (2) obj. 0.219037 iterations 1
Cbc0038I Pass  18: suminf.    1.59561 (8) obj. 0.580937 iterations 28
Cbc0038I Pass  19: suminf.    1.15576 (7) obj. 0.061483 iterations 7
Cbc0038I Pass  20: suminf.    0.86638 (6) obj. 0.580937 iterations 12
Cbc0038I Pass  21: suminf.    0.66090 (4) obj. 0.580937 iterations 5
Cbc0038I Pass  22: suminf.    1.17340 (4) obj. 0.580937 iterations 4
Cbc0038I Pass  23: suminf.    1.17340 (4) obj. 0.580937 iterations 0
Cbc0038I Pass  24: suminf.    1.48594 (5) obj. 0.580937 iterations 5
Cbc0038I Pass  25: suminf.    0.80153 (7) obj. 0.580937 iterations 2
Cbc0038I Pass  26: suminf.    1.15471 (4) obj. 0.580937 iterations 5
Cbc0038I Pass  27: suminf.    0.77290 (3) obj. 0.580937 iterations 3
Cbc0038I Pass  28: suminf.    0.51168 (4) obj. 0.580937 iterations 7
Cbc0038I Pass  29: suminf.    0.48663 (5) obj. 0.580937 iterations 1
Cbc0038I Pass  30: suminf.    1.32946 (4) obj. 0.580937 iterations 10
Cbc0038I Pass  31: suminf.    0.46372 (3) obj. -4.79254 iterations 3
Cbc0038I Pass  32: suminf.    0.35176 (2) obj. 0.580937 iterations 3
Cbc0038I Pass  33: suminf.    0.29705 (2) obj. 0.207458 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 15 rows 26 columns
Cbc0038I Mini branch and bound improved solution from 4.81343 to 3.34137 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.03737
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.92509 (23) obj. -29.1628 iterations 0
Cbc0038I Pass  34: suminf.    2.92509 (23) obj. -29.1628 iterations 1
Cbc0038I Pass  35: suminf.    0.69123 (7) obj. -7.03737 iterations 17
Cbc0038I Pass  36: suminf.    0.55103 (7) obj. -8.85994 iterations 1
Cbc0038I Pass  37: suminf.    1.00265 (3) obj. -7.03737 iterations 15
Cbc0038I Pass  38: suminf.    1.00265 (3) obj. -7.03737 iterations 0
Cbc0038I Pass  39: suminf.    0.82355 (3) obj. -7.03737 iterations 3
Cbc0038I Pass  40: suminf.    0.44664 (2) obj. -7.03737 iterations 2
Cbc0038I Pass  41: suminf.    0.34402 (2) obj. -7.67952 iterations 1
Cbc0038I Pass  42: suminf.    0.44664 (2) obj. -7.03737 iterations 1
Cbc0038I Pass  43: suminf.    2.11670 (10) obj. -7.03737 iterations 22
Cbc0038I Pass  44: suminf.    1.88422 (8) obj. -7.03737 iterations 1
Cbc0038I Pass  45: suminf.    0.52865 (4) obj. -7.03737 iterations 8
Cbc0038I Pass  46: suminf.    0.52865 (4) obj. -7.03737 iterations 0
Cbc0038I Pass  47: suminf.    1.28879 (7) obj. -7.03737 iterations 5
Cbc0038I Pass  48: suminf.    0.86808 (7) obj. -7.03737 iterations 3
Cbc0038I Pass  49: suminf.    1.04812 (4) obj. -7.03737 iterations 6
Cbc0038I Pass  50: suminf.    0.60439 (4) obj. -7.03737 iterations 3
Cbc0038I Pass  51: suminf.    0.77977 (4) obj. -7.03737 iterations 6
Cbc0038I Pass  52: suminf.    0.77977 (4) obj. -7.03737 iterations 2
Cbc0038I Pass  53: suminf.    0.45717 (3) obj. -7.03737 iterations 2
Cbc0038I Pass  54: suminf.    0.42744 (3) obj. -7.24034 iterations 1
Cbc0038I Pass  55: suminf.    0.46127 (3) obj. -7.03737 iterations 3
Cbc0038I Pass  56: suminf.    2.16590 (11) obj. -7.03737 iterations 22
Cbc0038I Pass  57: suminf.    1.28737 (8) obj. -7.03737 iterations 7
Cbc0038I Pass  58: suminf.    0.80915 (6) obj. -7.19719 iterations 4
Cbc0038I Pass  59: suminf.    1.04359 (5) obj. -7.03737 iterations 12
Cbc0038I Pass  60: suminf.    1.02632 (5) obj. -7.03737 iterations 4
Cbc0038I Pass  61: suminf.    1.26805 (5) obj. -7.03737 iterations 15
Cbc0038I Pass  62: suminf.    0.62182 (5) obj. -7.03737 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 3.34137 - took 0.03 seconds
Cbc0012I Integer solution of 3.341371 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 71 rows 84 columns, reduced to 10 rows 12 columns
Cbc0031I 55 added rows had average density of 35.418182
Cbc0013I At root node, 55 cuts changed objective from -37.510582 to -9.2648686 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11946 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2244 row cuts average 81.9 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 74 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1311 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 407 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.574 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 3.341371 best solution, best possible -9.2648686 (2.01 seconds)
Cbc0016I Integer solution of 2.792681 found by strong branching after 6028 iterations and 12 nodes (2.29 seconds)
Cbc0012I Integer solution of 2.784641 found by rounding after 6474 iterations and 34 nodes (2.37 seconds)
Cbc0004I Integer solution of 1.711511 found after 6496 iterations and 36 nodes (2.37 seconds)
Cbc0038I Full problem 71 rows 84 columns, reduced to 36 rows 51 columns
Cbc0012I Integer solution of 0.784641 found by rounding after 7038 iterations and 54 nodes (2.61 seconds)
Cbc0012I Integer solution of 0.1618482 found by rounding after 7040 iterations and 55 nodes (2.61 seconds)
Cbc0004I Integer solution of -0.288489 found after 7141 iterations and 58 nodes (2.63 seconds)
Cbc0010I After 66 nodes, 1 on tree, -0.288489 best solution, best possible -8.8448079 (2.75 seconds)
Cbc0004I Integer solution of -0.701569 found after 8118 iterations and 75 nodes (2.86 seconds)
Cbc0016I Integer solution of -1.288489 found by strong branching after 8209 iterations and 78 nodes (2.88 seconds)
Cbc0001I Search completed - best objective -1.288488999999998, took 8426 iterations and 84 nodes (2.88 seconds)
Cbc0032I Strong branching done 1166 times (9187 iterations), fathomed 6 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 189 variables fixed on reduced cost
Total time (CPU seconds):       2.24   (Wallclock seconds):       2.90

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 0.000108649 - average 1.24883e-06, 6 fixed columns
Coin0506I Presolve 76 (-11) rows, 45 (-6) columns and 234 (-34) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 5.5416627 - largest nonzero change 0 ( 0%) - largest zero change 2.1059261e-05
Clp0000I Optimal - objective value 32.064261
Clp0000I Optimal - objective value 32.064261
Coin0511I After Postsolve, objective 32.064261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.064261
Clp0000I Optimal - objective value 32.064261
Clp0000I Optimal - objective value 32.064261
Coin0511I After Postsolve, objective 32.064261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.06426144 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.90324
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.62689 iterations 34
Cbc0038I Solution found of 5.62689
Cbc0038I Relaxing continuous gives 5.62689
Cbc0038I Rounding solution of 3.82394 is better than previous of 5.62689

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 3.82394 to -0.620719 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.76516
Cbc0038I Pass   2: suminf.    1.34727 (7) obj. -3.76516 iterations 7
Cbc0038I Pass   3: suminf.    1.66361 (6) obj. -3.76516 iterations 12
Cbc0038I Pass   4: suminf.    1.36681 (7) obj. -3.76516 iterations 4
Cbc0038I Pass   5: suminf.    1.36965 (8) obj. -3.76516 iterations 10
Cbc0038I Pass   6: suminf.    1.62126 (6) obj. -3.76516 iterations 20
Cbc0038I Pass   7: suminf.    1.46018 (8) obj. -3.76516 iterations 4
Cbc0038I Pass   8: suminf.    2.37627 (8) obj. -3.76516 iterations 19
Cbc0038I Pass   9: suminf.    1.43293 (8) obj. -3.76516 iterations 7
Cbc0038I Pass  10: suminf.    1.33985 (6) obj. -3.76516 iterations 2
Cbc0038I Pass  11: suminf.    1.77141 (6) obj. -3.76516 iterations 9
Cbc0038I Pass  12: suminf.    1.27004 (5) obj. -3.76516 iterations 2
Cbc0038I Pass  13: suminf.    1.27004 (5) obj. -3.76516 iterations 0
Cbc0038I Pass  14: suminf.    1.91285 (6) obj. -3.76516 iterations 6
Cbc0038I Pass  15: suminf.    1.75777 (5) obj. -3.76516 iterations 4
Cbc0038I Pass  16: suminf.    1.79085 (7) obj. -3.76516 iterations 8
Cbc0038I Pass  17: suminf.    1.54256 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  18: suminf.    1.51053 (6) obj. -3.76516 iterations 13
Cbc0038I Pass  19: suminf.    1.40883 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  20: suminf.    1.67182 (7) obj. -3.76516 iterations 10
Cbc0038I Pass  21: suminf.    1.54336 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  22: suminf.    1.54256 (7) obj. -3.76516 iterations 1
Cbc0038I Pass  23: suminf.    1.51053 (6) obj. -3.76516 iterations 13
Cbc0038I Pass  24: suminf.    1.40883 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  25: suminf.    1.67182 (7) obj. -3.76516 iterations 10
Cbc0038I Pass  26: suminf.    1.54336 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  27: suminf.    1.54256 (7) obj. -3.76516 iterations 1
Cbc0038I Pass  28: suminf.    1.51053 (6) obj. -3.76516 iterations 13
Cbc0038I Pass  29: suminf.    1.40883 (7) obj. -3.76516 iterations 3
Cbc0038I Pass  30: suminf.    1.67182 (7) obj. -3.76516 iterations 10
Cbc0038I Pass  31: suminf.    1.54336 (7) obj. -3.76516 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 56 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -0.620719 - took 0.04 seconds
Cbc0012I Integer solution of -0.620719 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 55 rows 33 columns
Cbc0031I 25 added rows had average density of 37.96
Cbc0013I At root node, 25 cuts changed objective from -32.064261 to -22.215594 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8670 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1705 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -0.620719 best solution, best possible -22.215594 (0.70 seconds)
Cbc0016I Integer solution of -1.288489 found by strong branching after 6339 iterations and 17 nodes (0.82 seconds)
Cbc0001I Search completed - best objective -1.288488999999998, took 7230 iterations and 46 nodes (0.87 seconds)
Cbc0032I Strong branching done 546 times (9795 iterations), fathomed 2 nodes and fixed 29 variables
Cbc0035I Maximum depth 12, 142 variables fixed on reduced cost
Total time (CPU seconds):       0.82   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 71 (-34) rows, 84 (-19) columns and 1049 (-530) elements
Clp1000I sum of infeasibilities 1.36432e-07 - average 1.92158e-09, 46 fixed columns
Coin0506I Presolve 27 (-44) rows, 38 (-46) columns and 124 (-925) elements
Clp0006I 0  Obj -25.171293 Dual inf 99.784271 (37)
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 0.42890423 - largest nonzero change 2.9661335e-05 ( 0.0023346174%) - largest zero change 2.8380143e-05
Clp0000I Optimal - objective value -16.526685
Clp0000I Optimal - objective value -16.526685
Coin0511I After Postsolve, objective -16.526685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -16.526685 Dual inf 28.841931 (34)
Clp0014I Perturbing problem by 0.001% of 4.4369043 - largest nonzero change 2.5957158e-05 ( 0.0017125872%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 39.814303
Clp0000I Optimal - objective value 39.814303
Clp0000I Optimal - objective value 39.814303
Coin0511I After Postsolve, objective 39.814303, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.81430283 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 84 columns (84 integer (84 of which binary)) and 1051 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.10757
Cbc0038I Pass   1: suminf.    2.92509 (23) obj. -29.1628 iterations 14
Cbc0038I Pass   2: suminf.    2.92509 (23) obj. -29.1628 iterations 1
Cbc0038I Pass   3: suminf.    0.45431 (7) obj. 0.839259 iterations 16
Cbc0038I Solution found of 7.38495
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 7.38495 to 4.81343 (0.02 seconds)
Cbc0038I Round again with cutoff of 0.580937
Cbc0038I Pass   4: suminf.    2.92509 (23) obj. -29.1628 iterations 0
Cbc0038I Pass   5: suminf.    2.92509 (23) obj. -29.1628 iterations 1
Cbc0038I Pass   6: suminf.    0.45746 (7) obj. 0.580937 iterations 17
Cbc0038I Pass   7: suminf.    0.18367 (1) obj. -3.2273 iterations 7
Cbc0038I Pass   8: suminf.    0.47661 (1) obj. 0.580937 iterations 1
Cbc0038I Pass   9: suminf.    1.29165 (9) obj. -7.18629 iterations 23
Cbc0038I Pass  10: suminf.    1.29165 (9) obj. -7.18629 iterations 7
Cbc0038I Pass  11: suminf.    1.02606 (4) obj. 0.580937 iterations 15
Cbc0038I Pass  12: suminf.    0.74856 (3) obj. 0.580937 iterations 3
Cbc0038I Pass  13: suminf.    0.55679 (3) obj. -0.186125 iterations 3
Cbc0038I Pass  14: suminf.    2.90594 (12) obj. 0.580937 iterations 17
Cbc0038I Pass  15: suminf.    1.76344 (9) obj. 0.580937 iterations 4
Cbc0038I Pass  16: suminf.    0.60403 (2) obj. 0.580937 iterations 9
Cbc0038I Pass  17: suminf.    0.55102 (2) obj. 0.219037 iterations 1
Cbc0038I Pass  18: suminf.    1.59561 (8) obj. 0.580937 iterations 28
Cbc0038I Pass  19: suminf.    1.15576 (7) obj. 0.061483 iterations 7
Cbc0038I Pass  20: suminf.    0.86638 (6) obj. 0.580937 iterations 12
Cbc0038I Pass  21: suminf.    0.66090 (4) obj. 0.580937 iterations 5
Cbc0038I Pass  22: suminf.    1.17340 (4) obj. 0.580937 iterations 4
Cbc0038I Pass  23: suminf.    1.17340 (4) obj. 0.580937 iterations 0
Cbc0038I Pass  24: suminf.    1.48594 (5) obj. 0.580937 iterations 5
Cbc0038I Pass  25: suminf.    0.80153 (7) obj. 0.580937 iterations 2
Cbc0038I Pass  26: suminf.    1.15471 (4) obj. 0.580937 iterations 5
Cbc0038I Pass  27: suminf.    0.77290 (3) obj. 0.580937 iterations 3
Cbc0038I Pass  28: suminf.    0.51168 (4) obj. 0.580937 iterations 7
Cbc0038I Pass  29: suminf.    0.48663 (5) obj. 0.580937 iterations 1
Cbc0038I Pass  30: suminf.    1.32946 (4) obj. 0.580937 iterations 10
Cbc0038I Pass  31: suminf.    0.46372 (3) obj. -4.79254 iterations 3
Cbc0038I Pass  32: suminf.    0.35176 (2) obj. 0.580937 iterations 3
Cbc0038I Pass  33: suminf.    0.29705 (2) obj. 0.207458 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 15 rows 26 columns
Cbc0038I Mini branch and bound improved solution from 4.81343 to 3.34137 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.03737
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.92509 (23) obj. -29.1628 iterations 0
Cbc0038I Pass  34: suminf.    2.92509 (23) obj. -29.1628 iterations 1
Cbc0038I Pass  35: suminf.    0.69123 (7) obj. -7.03737 iterations 17
Cbc0038I Pass  36: suminf.    0.55103 (7) obj. -8.85994 iterations 1
Cbc0038I Pass  37: suminf.    1.00265 (3) obj. -7.03737 iterations 15
Cbc0038I Pass  38: suminf.    1.00265 (3) obj. -7.03737 iterations 0
Cbc0038I Pass  39: suminf.    0.82355 (3) obj. -7.03737 iterations 3
Cbc0038I Pass  40: suminf.    0.44664 (2) obj. -7.03737 iterations 2
Cbc0038I Pass  41: suminf.    0.34402 (2) obj. -7.67952 iterations 1
Cbc0038I Pass  42: suminf.    0.44664 (2) obj. -7.03737 iterations 1
Cbc0038I Pass  43: suminf.    2.11670 (10) obj. -7.03737 iterations 22
Cbc0038I Pass  44: suminf.    1.88422 (8) obj. -7.03737 iterations 1
Cbc0038I Pass  45: suminf.    0.52865 (4) obj. -7.03737 iterations 8
Cbc0038I Pass  46: suminf.    0.52865 (4) obj. -7.03737 iterations 0
Cbc0038I Pass  47: suminf.    1.28879 (7) obj. -7.03737 iterations 5
Cbc0038I Pass  48: suminf.    0.86808 (7) obj. -7.03737 iterations 3
Cbc0038I Pass  49: suminf.    1.04812 (4) obj. -7.03737 iterations 6
Cbc0038I Pass  50: suminf.    0.60439 (4) obj. -7.03737 iterations 3
Cbc0038I Pass  51: suminf.    0.77977 (4) obj. -7.03737 iterations 6
Cbc0038I Pass  52: suminf.    0.77977 (4) obj. -7.03737 iterations 2
Cbc0038I Pass  53: suminf.    0.45717 (3) obj. -7.03737 iterations 2
Cbc0038I Pass  54: suminf.    0.42744 (3) obj. -7.24034 iterations 1
Cbc0038I Pass  55: suminf.    0.46127 (3) obj. -7.03737 iterations 3
Cbc0038I Pass  56: suminf.    2.16590 (11) obj. -7.03737 iterations 22
Cbc0038I Pass  57: suminf.    1.28737 (8) obj. -7.03737 iterations 7
Cbc0038I Pass  58: suminf.    0.80915 (6) obj. -7.19719 iterations 4
Cbc0038I Pass  59: suminf.    1.04359 (5) obj. -7.03737 iterations 12
Cbc0038I Pass  60: suminf.    1.02632 (5) obj. -7.03737 iterations 4
Cbc0038I Pass  61: suminf.    1.26805 (5) obj. -7.03737 iterations 15
Cbc0038I Pass  62: suminf.    0.62182 (5) obj. -7.03737 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 84 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 3.34137 - took 0.04 seconds
Cbc0012I Integer solution of 3.341371 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 71 rows 84 columns, reduced to 10 rows 12 columns
Cbc0031I 55 added rows had average density of 35.418182
Cbc0013I At root node, 55 cuts changed objective from -37.510582 to -9.2648686 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11946 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2244 row cuts average 81.9 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 74 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1311 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 407 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.633 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 3.341371 best solution, best possible -9.2648686 (2.34 seconds)
Cbc0016I Integer solution of 2.792681 found by strong branching after 6028 iterations and 12 nodes (2.66 seconds)
Cbc0012I Integer solution of 2.784641 found by rounding after 6474 iterations and 34 nodes (2.75 seconds)
Cbc0004I Integer solution of 1.711511 found after 6496 iterations and 36 nodes (2.75 seconds)
Cbc0038I Full problem 71 rows 84 columns, reduced to 36 rows 51 columns
Cbc0012I Integer solution of 0.784641 found by rounding after 7038 iterations and 54 nodes (3.02 seconds)
Cbc0012I Integer solution of 0.1618482 found by rounding after 7040 iterations and 55 nodes (3.02 seconds)
Cbc0004I Integer solution of -0.288489 found after 7141 iterations and 58 nodes (3.04 seconds)
Cbc0010I After 63 nodes, 3 on tree, -0.288489 best solution, best possible -9.2648686 (3.04 seconds)
Cbc0004I Integer solution of -0.701569 found after 8118 iterations and 75 nodes (3.29 seconds)
Cbc0016I Integer solution of -1.288489 found by strong branching after 8209 iterations and 78 nodes (3.31 seconds)
Cbc0001I Search completed - best objective -1.288488999999998, took 8426 iterations and 84 nodes (3.32 seconds)
Cbc0032I Strong branching done 1166 times (9187 iterations), fathomed 6 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 189 variables fixed on reduced cost
Total time (CPU seconds):       2.51   (Wallclock seconds):       3.34

