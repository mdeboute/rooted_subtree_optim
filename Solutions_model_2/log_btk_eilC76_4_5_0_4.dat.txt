Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 61 (-17) columns and 324 (-129) elements
Clp1000I sum of infeasibilities 4.03567e-05 - average 3.88045e-07, 31 fixed columns
Coin0506I Presolve 28 (-76) rows, 22 (-39) columns and 94 (-230) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 219.26767
Clp0000I Optimal - objective value 219.26767
Coin0511I After Postsolve, objective 219.26767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 219.26767
Clp0000I Optimal - objective value 219.26767
Clp0000I Optimal - objective value 219.26767
Coin0511I After Postsolve, objective 219.26767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 219.2676708 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 104 rows, 61 columns (60 integer (60 of which binary)) and 324 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.359%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.91533
Cbc0038I Pass   1: suminf.    0.93750 (2) obj. -168.269 iterations 16
Cbc0038I Pass   2: suminf.    0.25000 (1) obj. -163.809 iterations 1
Cbc0038I Solution found of -136.636
Cbc0038I Relaxing continuous gives -136.636
Cbc0038I Rounding solution of -147.706 is better than previous of -136.636

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -147.706 to -195.166 (0.02 seconds)
Cbc0038I Round again with cutoff of -197.577
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.55810 (9) obj. -197.577 iterations 8
Cbc0038I Pass   4: suminf.    2.29966 (9) obj. -197.577 iterations 2
Cbc0038I Pass   5: suminf.    2.29966 (9) obj. -197.577 iterations 1
Cbc0038I Pass   6: suminf.    1.01090 (3) obj. -197.577 iterations 16
Cbc0038I Pass   7: suminf.    0.50000 (1) obj. -197.577 iterations 10
Cbc0038I Pass   8: suminf.    0.27161 (1) obj. -197.577 iterations 4
Cbc0038I Pass   9: suminf.    1.60094 (6) obj. -197.577 iterations 15
Cbc0038I Pass  10: suminf.    1.18004 (7) obj. -197.577 iterations 7
Cbc0038I Pass  11: suminf.    0.58290 (4) obj. -197.577 iterations 10
Cbc0038I Pass  12: suminf.    0.53152 (3) obj. -197.577 iterations 3
Cbc0038I Pass  13: suminf.    0.87316 (3) obj. -197.577 iterations 5
Cbc0038I Pass  14: suminf.    0.82632 (6) obj. -197.577 iterations 5
Cbc0038I Pass  15: suminf.    1.01090 (3) obj. -197.577 iterations 10
Cbc0038I Pass  16: suminf.    0.50000 (1) obj. -197.577 iterations 10
Cbc0038I Pass  17: suminf.    0.27161 (1) obj. -197.577 iterations 4
Cbc0038I Pass  18: suminf.    1.10665 (5) obj. -197.577 iterations 14
Cbc0038I Pass  19: suminf.    1.10377 (7) obj. -197.577 iterations 3
Cbc0038I Pass  20: suminf.    1.08783 (5) obj. -197.577 iterations 11
Cbc0038I Pass  21: suminf.    0.90924 (3) obj. -197.577 iterations 10
Cbc0038I Pass  22: suminf.    0.99094 (2) obj. -197.577 iterations 6
Cbc0038I Pass  23: suminf.    0.96271 (5) obj. -197.577 iterations 24
Cbc0038I Pass  24: suminf.    0.96271 (5) obj. -197.577 iterations 2
Cbc0038I Pass  25: suminf.    0.30362 (3) obj. -197.577 iterations 6
Cbc0038I Pass  26: suminf.    0.26794 (4) obj. -197.577 iterations 3
Cbc0038I Pass  27: suminf.    0.50446 (3) obj. -197.577 iterations 8
Cbc0038I Pass  28: suminf.    0.43556 (6) obj. -197.577 iterations 3
Cbc0038I Pass  29: suminf.    1.04184 (7) obj. -197.577 iterations 9
Cbc0038I Pass  30: suminf.    0.88800 (6) obj. -197.577 iterations 1
Cbc0038I Pass  31: suminf.    1.01090 (3) obj. -197.577 iterations 9
Cbc0038I Pass  32: suminf.    0.50000 (1) obj. -197.577 iterations 9
Cbc0038I Rounding solution of -201.083 is better than previous of -195.166

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 22 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -201.083 to -201.122 (0.03 seconds)
Cbc0038I Round again with cutoff of -204.751
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.29760 (9) obj. -204.751 iterations 0
Cbc0038I Pass  33: suminf.    2.69819 (11) obj. -204.751 iterations 3
Cbc0038I Pass  34: suminf.    1.64622 (7) obj. -204.751 iterations 15
Cbc0038I Pass  35: suminf.    1.32995 (4) obj. -204.751 iterations 3
Cbc0038I Pass  36: suminf.    1.33133 (6) obj. -204.751 iterations 9
Cbc0038I Pass  37: suminf.    1.33133 (6) obj. -204.751 iterations 0
Cbc0038I Pass  38: suminf.    1.58372 (6) obj. -204.751 iterations 10
Cbc0038I Pass  39: suminf.    2.58014 (8) obj. -204.751 iterations 28
Cbc0038I Pass  40: suminf.    1.25182 (6) obj. -204.751 iterations 5
Cbc0038I Pass  41: suminf.    0.68743 (3) obj. -204.751 iterations 10
Cbc0038I Pass  42: suminf.    0.51243 (4) obj. -204.751 iterations 9
Cbc0038I Pass  43: suminf.    0.68743 (3) obj. -204.751 iterations 7
Cbc0038I Pass  44: suminf.    1.22189 (4) obj. -204.751 iterations 15
Cbc0038I Pass  45: suminf.    1.20016 (5) obj. -204.751 iterations 7
Cbc0038I Pass  46: suminf.    0.30811 (3) obj. -204.751 iterations 4
Cbc0038I Pass  47: suminf.    0.26369 (2) obj. -204.751 iterations 3
Cbc0038I Pass  48: suminf.    0.38343 (3) obj. -204.751 iterations 4
Cbc0038I Pass  49: suminf.    1.67782 (7) obj. -204.751 iterations 15
Cbc0038I Pass  50: suminf.    1.19536 (6) obj. -204.751 iterations 5
Cbc0038I Pass  51: suminf.    0.94984 (5) obj. -204.751 iterations 4
Cbc0038I Pass  52: suminf.    2.05595 (7) obj. -204.751 iterations 7
Cbc0038I Pass  53: suminf.    0.99896 (6) obj. -204.751 iterations 13
Cbc0038I Pass  54: suminf.    0.51243 (4) obj. -204.751 iterations 9
Cbc0038I Pass  55: suminf.    0.68743 (3) obj. -204.751 iterations 7
Cbc0038I Pass  56: suminf.    2.18265 (7) obj. -204.751 iterations 12
Cbc0038I Pass  57: suminf.    0.99896 (6) obj. -204.751 iterations 11
Cbc0038I Pass  58: suminf.    1.30623 (10) obj. -204.751 iterations 13
Cbc0038I Pass  59: suminf.    0.91867 (6) obj. -204.751 iterations 8
Cbc0038I Pass  60: suminf.    0.85317 (8) obj. -204.751 iterations 7
Cbc0038I Pass  61: suminf.    3.75392 (10) obj. -204.751 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 26 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -201.122 to -201.286 (0.04 seconds)
Cbc0038I Round again with cutoff of -209.106
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.52471 (10) obj. -209.106 iterations 2
Cbc0038I Pass  62: suminf.    3.52471 (10) obj. -209.106 iterations 0
Cbc0038I Pass  63: suminf.    1.40854 (7) obj. -209.106 iterations 14
Cbc0038I Pass  64: suminf.    0.95210 (7) obj. -209.106 iterations 6
Cbc0038I Pass  65: suminf.    1.45634 (6) obj. -209.106 iterations 9
Cbc0038I Pass  66: suminf.    1.37847 (5) obj. -209.106 iterations 1
Cbc0038I Pass  67: suminf.    1.01642 (4) obj. -209.106 iterations 6
Cbc0038I Pass  68: suminf.    0.92404 (5) obj. -209.106 iterations 1
Cbc0038I Pass  69: suminf.    0.75312 (4) obj. -209.106 iterations 4
Cbc0038I Pass  70: suminf.    0.75312 (4) obj. -209.106 iterations 0
Cbc0038I Pass  71: suminf.    0.90635 (5) obj. -209.106 iterations 4
Cbc0038I Pass  72: suminf.    0.75312 (4) obj. -209.106 iterations 4
Cbc0038I Pass  73: suminf.    1.01642 (4) obj. -209.106 iterations 5
Cbc0038I Pass  74: suminf.    0.92404 (5) obj. -209.106 iterations 1
Cbc0038I Pass  75: suminf.    0.75312 (4) obj. -209.106 iterations 4
Cbc0038I Pass  76: suminf.    0.81626 (6) obj. -209.106 iterations 6
Cbc0038I Pass  77: suminf.    0.78112 (4) obj. -209.106 iterations 5
Cbc0038I Pass  78: suminf.    0.97557 (6) obj. -209.106 iterations 8
Cbc0038I Pass  79: suminf.    0.91971 (5) obj. -209.106 iterations 3
Cbc0038I Pass  80: suminf.    2.22920 (8) obj. -209.106 iterations 8
Cbc0038I Pass  81: suminf.    1.87311 (9) obj. -209.106 iterations 1
Cbc0038I Pass  82: suminf.    1.28133 (6) obj. -209.106 iterations 4
Cbc0038I Pass  83: suminf.    0.78112 (4) obj. -209.106 iterations 2
Cbc0038I Pass  84: suminf.    0.97557 (6) obj. -209.106 iterations 8
Cbc0038I Pass  85: suminf.    0.91971 (5) obj. -209.106 iterations 3
Cbc0038I Pass  86: suminf.    2.22920 (8) obj. -209.106 iterations 8
Cbc0038I Pass  87: suminf.    1.87311 (9) obj. -209.106 iterations 1
Cbc0038I Pass  88: suminf.    1.28133 (6) obj. -209.106 iterations 4
Cbc0038I Pass  89: suminf.    0.78112 (4) obj. -209.106 iterations 2
Cbc0038I Pass  90: suminf.    0.97557 (6) obj. -209.106 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 21 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -201.286 - took 0.04 seconds
Cbc0012I Integer solution of -201.28647 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 104 rows 61 columns, reduced to 18 rows 15 columns
Cbc0031I 3 added rows had average density of 6.6666667
Cbc0013I At root node, 3 cuts changed objective from -219.26767 to -214.96119 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 3.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -202.01512 found by DiveCoefficient after 23 iterations and 1 nodes (0.05 seconds)
Cbc0001I Search completed - best objective -202.015121, took 117 iterations and 8 nodes (0.06 seconds)
Cbc0032I Strong branching done 38 times (119 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-71) rows, 99 (-53) columns and 1563 (-1740) elements
Clp1000I sum of infeasibilities 1.8418e-07 - average 2.21904e-09, 35 fixed columns
Coin0506I Presolve 53 (-30) rows, 61 (-38) columns and 614 (-949) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 5.1111495 - largest nonzero change 2.7731571e-05 ( 0.0016580886%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 259.19742
Clp0000I Optimal - objective value 259.19742
Coin0511I After Postsolve, objective 259.19742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 259.19742
Clp0000I Optimal - objective value 259.19742
Clp0000I Optimal - objective value 259.19742
Coin0511I After Postsolve, objective 259.19742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 259.1974225 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 102 columns (102 integer (102 of which binary)) and 1577 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.035%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.88598
Cbc0038I Pass   1: suminf.    2.11955 (30) obj. -166.79 iterations 13
Cbc0038I Pass   2: suminf.    2.11955 (30) obj. -166.79 iterations 0
Cbc0038I Pass   3: suminf.    0.37851 (7) obj. -139.138 iterations 23
Cbc0038I Solution found of -132.517
Cbc0038I Rounding solution of -133.362 is better than previous of -132.517

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 102 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -133.362 to -195.166 (0.02 seconds)
Cbc0038I Round again with cutoff of -200.757
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.40742 (35) obj. -200.757 iterations 1
Cbc0038I Pass   5: suminf.    2.15443 (24) obj. -200.757 iterations 20
Cbc0038I Pass   6: suminf.    2.15443 (24) obj. -200.757 iterations 0
Cbc0038I Pass   7: suminf.    1.71568 (14) obj. -200.757 iterations 12
Cbc0038I Pass   8: suminf.    1.12183 (5) obj. -200.757 iterations 26
Cbc0038I Pass   9: suminf.    0.67587 (4) obj. -200.757 iterations 3
Cbc0038I Pass  10: suminf.    0.34576 (4) obj. -200.757 iterations 3
Cbc0038I Pass  11: suminf.    0.38098 (3) obj. -200.757 iterations 5
Cbc0038I Pass  12: suminf.    0.23031 (3) obj. -200.757 iterations 4
Cbc0038I Pass  13: suminf.    0.77110 (2) obj. -200.757 iterations 9
Cbc0038I Pass  14: suminf.    0.50000 (1) obj. -203.936 iterations 9
Cbc0038I Pass  15: suminf.    0.38581 (1) obj. -200.757 iterations 4
Cbc0038I Pass  16: suminf.    1.24308 (9) obj. -200.757 iterations 41
Cbc0038I Pass  17: suminf.    0.99610 (6) obj. -202.29 iterations 12
Cbc0038I Pass  18: suminf.    0.47471 (6) obj. -200.757 iterations 19
Cbc0038I Pass  19: suminf.    1.74812 (5) obj. -200.757 iterations 12
Cbc0038I Pass  20: suminf.    1.74812 (5) obj. -200.757 iterations 0
Cbc0038I Pass  21: suminf.    0.44010 (5) obj. -200.757 iterations 8
Cbc0038I Pass  22: suminf.    0.44010 (5) obj. -200.757 iterations 0
Cbc0038I Pass  23: suminf.    3.23616 (19) obj. -200.757 iterations 32
Cbc0038I Pass  24: suminf.    2.65309 (20) obj. -200.757 iterations 10
Cbc0038I Pass  25: suminf.    2.33858 (16) obj. -200.757 iterations 6
Cbc0038I Pass  26: suminf.    0.44010 (5) obj. -200.757 iterations 25
Cbc0038I Pass  27: suminf.    2.74504 (11) obj. -200.757 iterations 24
Cbc0038I Pass  28: suminf.    0.87714 (6) obj. -200.757 iterations 15
Cbc0038I Pass  29: suminf.    0.55209 (4) obj. -200.757 iterations 16
Cbc0038I Pass  30: suminf.    0.54749 (5) obj. -200.757 iterations 4
Cbc0038I Pass  31: suminf.    1.74812 (5) obj. -200.757 iterations 7
Cbc0038I Pass  32: suminf.    1.74812 (5) obj. -200.757 iterations 0
Cbc0038I Pass  33: suminf.    0.44010 (5) obj. -200.757 iterations 7
Cbc0038I Rounding solution of -201.286 is better than previous of -195.166

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 102 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -211.243
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.53973 (37) obj. -211.243 iterations 4
Cbc0038I Pass  34: suminf.    2.83055 (27) obj. -211.243 iterations 13
Cbc0038I Pass  35: suminf.    1.71261 (7) obj. -211.243 iterations 36
Cbc0038I Pass  36: suminf.    1.28038 (6) obj. -211.243 iterations 2
Cbc0038I Pass  37: suminf.    1.69507 (8) obj. -211.243 iterations 14
Cbc0038I Pass  38: suminf.    1.69507 (8) obj. -211.243 iterations 0
Cbc0038I Pass  39: suminf.    1.66241 (5) obj. -211.243 iterations 9
Cbc0038I Pass  40: suminf.    1.01964 (4) obj. -211.243 iterations 4
Cbc0038I Pass  41: suminf.    1.65880 (4) obj. -211.243 iterations 5
Cbc0038I Pass  42: suminf.    2.36598 (9) obj. -211.243 iterations 18
Cbc0038I Pass  43: suminf.    1.83872 (8) obj. -211.243 iterations 5
Cbc0038I Pass  44: suminf.    1.85530 (5) obj. -211.243 iterations 9
Cbc0038I Pass  45: suminf.    1.32242 (6) obj. -211.243 iterations 5
Cbc0038I Pass  46: suminf.    1.83067 (9) obj. -211.243 iterations 9
Cbc0038I Pass  47: suminf.    1.83067 (9) obj. -211.243 iterations 0
Cbc0038I Pass  48: suminf.    1.46667 (5) obj. -211.243 iterations 10
Cbc0038I Pass  49: suminf.    1.27365 (4) obj. -211.243 iterations 4
Cbc0038I Pass  50: suminf.    1.46559 (4) obj. -211.243 iterations 5
Cbc0038I Pass  51: suminf.    2.50374 (10) obj. -211.243 iterations 9
Cbc0038I Pass  52: suminf.    2.06892 (9) obj. -211.243 iterations 3
Cbc0038I Pass  53: suminf.    1.81775 (7) obj. -211.243 iterations 6
Cbc0038I Pass  54: suminf.    1.81775 (7) obj. -211.243 iterations 1
Cbc0038I Pass  55: suminf.    1.46667 (5) obj. -211.243 iterations 8
Cbc0038I Pass  56: suminf.    1.27365 (4) obj. -211.243 iterations 4
Cbc0038I Pass  57: suminf.    1.46559 (4) obj. -211.243 iterations 5
Cbc0038I Pass  58: suminf.    3.05660 (11) obj. -211.243 iterations 12
Cbc0038I Pass  59: suminf.    2.99189 (12) obj. -211.243 iterations 4
Cbc0038I Pass  60: suminf.    1.56454 (5) obj. -211.243 iterations 15
Cbc0038I Pass  61: suminf.    1.14665 (4) obj. -211.243 iterations 4
Cbc0038I Pass  62: suminf.    1.56220 (4) obj. -211.243 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 102 columns, reduced to 7 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -201.286 - took 0.04 seconds
Cbc0012I Integer solution of -201.28647 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 86 rows 102 columns, reduced to 7 rows 9 columns
Cbc0031I 33 added rows had average density of 11.121212
Cbc0013I At root node, 33 cuts changed objective from -251.06859 to -206.02294 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 319 row cuts average 13.9 elements, 27 column cuts (27 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 58.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0012I Integer solution of -202.01512 found by DiveCoefficient after 259 iterations and 5 nodes (0.42 seconds)
Cbc0001I Search completed - best objective -202.015121, took 318 iterations and 10 nodes (0.52 seconds)
Cbc0032I Strong branching done 80 times (455 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.53

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 61 (-17) columns and 324 (-129) elements
Clp1000I sum of infeasibilities 4.03567e-05 - average 3.88045e-07, 31 fixed columns
Coin0506I Presolve 28 (-76) rows, 22 (-39) columns and 94 (-230) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 219.26767
Clp0000I Optimal - objective value 219.26767
Coin0511I After Postsolve, objective 219.26767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 219.26767
Clp0000I Optimal - objective value 219.26767
Clp0000I Optimal - objective value 219.26767
Coin0511I After Postsolve, objective 219.26767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 219.2676708 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 104 rows, 61 columns (60 integer (60 of which binary)) and 324 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.359%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.91533
Cbc0038I Pass   1: suminf.    0.93750 (2) obj. -168.269 iterations 16
Cbc0038I Pass   2: suminf.    0.25000 (1) obj. -163.809 iterations 1
Cbc0038I Solution found of -136.636
Cbc0038I Relaxing continuous gives -136.636
Cbc0038I Rounding solution of -147.706 is better than previous of -136.636

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 16 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -147.706 to -195.166 (0.01 seconds)
Cbc0038I Round again with cutoff of -197.577
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.55810 (9) obj. -197.577 iterations 8
Cbc0038I Pass   4: suminf.    2.29966 (9) obj. -197.577 iterations 2
Cbc0038I Pass   5: suminf.    2.29966 (9) obj. -197.577 iterations 1
Cbc0038I Pass   6: suminf.    1.01090 (3) obj. -197.577 iterations 16
Cbc0038I Pass   7: suminf.    0.50000 (1) obj. -197.577 iterations 10
Cbc0038I Pass   8: suminf.    0.27161 (1) obj. -197.577 iterations 4
Cbc0038I Pass   9: suminf.    1.60094 (6) obj. -197.577 iterations 15
Cbc0038I Pass  10: suminf.    1.18004 (7) obj. -197.577 iterations 7
Cbc0038I Pass  11: suminf.    0.58290 (4) obj. -197.577 iterations 10
Cbc0038I Pass  12: suminf.    0.53152 (3) obj. -197.577 iterations 3
Cbc0038I Pass  13: suminf.    0.87316 (3) obj. -197.577 iterations 5
Cbc0038I Pass  14: suminf.    0.82632 (6) obj. -197.577 iterations 5
Cbc0038I Pass  15: suminf.    1.01090 (3) obj. -197.577 iterations 10
Cbc0038I Pass  16: suminf.    0.50000 (1) obj. -197.577 iterations 10
Cbc0038I Pass  17: suminf.    0.27161 (1) obj. -197.577 iterations 4
Cbc0038I Pass  18: suminf.    1.10665 (5) obj. -197.577 iterations 14
Cbc0038I Pass  19: suminf.    1.10377 (7) obj. -197.577 iterations 3
Cbc0038I Pass  20: suminf.    1.08783 (5) obj. -197.577 iterations 11
Cbc0038I Pass  21: suminf.    0.90924 (3) obj. -197.577 iterations 10
Cbc0038I Pass  22: suminf.    0.99094 (2) obj. -197.577 iterations 6
Cbc0038I Pass  23: suminf.    0.96271 (5) obj. -197.577 iterations 24
Cbc0038I Pass  24: suminf.    0.96271 (5) obj. -197.577 iterations 2
Cbc0038I Pass  25: suminf.    0.30362 (3) obj. -197.577 iterations 6
Cbc0038I Pass  26: suminf.    0.26794 (4) obj. -197.577 iterations 3
Cbc0038I Pass  27: suminf.    0.50446 (3) obj. -197.577 iterations 8
Cbc0038I Pass  28: suminf.    0.43556 (6) obj. -197.577 iterations 3
Cbc0038I Pass  29: suminf.    1.04184 (7) obj. -197.577 iterations 9
Cbc0038I Pass  30: suminf.    0.88800 (6) obj. -197.577 iterations 1
Cbc0038I Pass  31: suminf.    1.01090 (3) obj. -197.577 iterations 9
Cbc0038I Pass  32: suminf.    0.50000 (1) obj. -197.577 iterations 9
Cbc0038I Rounding solution of -201.083 is better than previous of -195.166

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 22 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -201.083 to -201.122 (0.02 seconds)
Cbc0038I Round again with cutoff of -204.751
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.29760 (9) obj. -204.751 iterations 0
Cbc0038I Pass  33: suminf.    2.69819 (11) obj. -204.751 iterations 3
Cbc0038I Pass  34: suminf.    1.64622 (7) obj. -204.751 iterations 15
Cbc0038I Pass  35: suminf.    1.32995 (4) obj. -204.751 iterations 3
Cbc0038I Pass  36: suminf.    1.33133 (6) obj. -204.751 iterations 9
Cbc0038I Pass  37: suminf.    1.33133 (6) obj. -204.751 iterations 0
Cbc0038I Pass  38: suminf.    1.58372 (6) obj. -204.751 iterations 10
Cbc0038I Pass  39: suminf.    2.58014 (8) obj. -204.751 iterations 28
Cbc0038I Pass  40: suminf.    1.25182 (6) obj. -204.751 iterations 5
Cbc0038I Pass  41: suminf.    0.68743 (3) obj. -204.751 iterations 10
Cbc0038I Pass  42: suminf.    0.51243 (4) obj. -204.751 iterations 9
Cbc0038I Pass  43: suminf.    0.68743 (3) obj. -204.751 iterations 7
Cbc0038I Pass  44: suminf.    1.22189 (4) obj. -204.751 iterations 15
Cbc0038I Pass  45: suminf.    1.20016 (5) obj. -204.751 iterations 7
Cbc0038I Pass  46: suminf.    0.30811 (3) obj. -204.751 iterations 4
Cbc0038I Pass  47: suminf.    0.26369 (2) obj. -204.751 iterations 3
Cbc0038I Pass  48: suminf.    0.38343 (3) obj. -204.751 iterations 4
Cbc0038I Pass  49: suminf.    1.67782 (7) obj. -204.751 iterations 15
Cbc0038I Pass  50: suminf.    1.19536 (6) obj. -204.751 iterations 5
Cbc0038I Pass  51: suminf.    0.94984 (5) obj. -204.751 iterations 4
Cbc0038I Pass  52: suminf.    2.05595 (7) obj. -204.751 iterations 7
Cbc0038I Pass  53: suminf.    0.99896 (6) obj. -204.751 iterations 13
Cbc0038I Pass  54: suminf.    0.51243 (4) obj. -204.751 iterations 9
Cbc0038I Pass  55: suminf.    0.68743 (3) obj. -204.751 iterations 7
Cbc0038I Pass  56: suminf.    2.18265 (7) obj. -204.751 iterations 12
Cbc0038I Pass  57: suminf.    0.99896 (6) obj. -204.751 iterations 11
Cbc0038I Pass  58: suminf.    1.30623 (10) obj. -204.751 iterations 13
Cbc0038I Pass  59: suminf.    0.91867 (6) obj. -204.751 iterations 8
Cbc0038I Pass  60: suminf.    0.85317 (8) obj. -204.751 iterations 7
Cbc0038I Pass  61: suminf.    3.75392 (10) obj. -204.751 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 26 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -201.122 to -201.286 (0.03 seconds)
Cbc0038I Round again with cutoff of -209.106
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.52471 (10) obj. -209.106 iterations 2
Cbc0038I Pass  62: suminf.    3.52471 (10) obj. -209.106 iterations 0
Cbc0038I Pass  63: suminf.    1.40854 (7) obj. -209.106 iterations 14
Cbc0038I Pass  64: suminf.    0.95210 (7) obj. -209.106 iterations 6
Cbc0038I Pass  65: suminf.    1.45634 (6) obj. -209.106 iterations 9
Cbc0038I Pass  66: suminf.    1.37847 (5) obj. -209.106 iterations 1
Cbc0038I Pass  67: suminf.    1.01642 (4) obj. -209.106 iterations 6
Cbc0038I Pass  68: suminf.    0.92404 (5) obj. -209.106 iterations 1
Cbc0038I Pass  69: suminf.    0.75312 (4) obj. -209.106 iterations 4
Cbc0038I Pass  70: suminf.    0.75312 (4) obj. -209.106 iterations 0
Cbc0038I Pass  71: suminf.    0.90635 (5) obj. -209.106 iterations 4
Cbc0038I Pass  72: suminf.    0.75312 (4) obj. -209.106 iterations 4
Cbc0038I Pass  73: suminf.    1.01642 (4) obj. -209.106 iterations 5
Cbc0038I Pass  74: suminf.    0.92404 (5) obj. -209.106 iterations 1
Cbc0038I Pass  75: suminf.    0.75312 (4) obj. -209.106 iterations 4
Cbc0038I Pass  76: suminf.    0.81626 (6) obj. -209.106 iterations 6
Cbc0038I Pass  77: suminf.    0.78112 (4) obj. -209.106 iterations 5
Cbc0038I Pass  78: suminf.    0.97557 (6) obj. -209.106 iterations 8
Cbc0038I Pass  79: suminf.    0.91971 (5) obj. -209.106 iterations 3
Cbc0038I Pass  80: suminf.    2.22920 (8) obj. -209.106 iterations 8
Cbc0038I Pass  81: suminf.    1.87311 (9) obj. -209.106 iterations 1
Cbc0038I Pass  82: suminf.    1.28133 (6) obj. -209.106 iterations 4
Cbc0038I Pass  83: suminf.    0.78112 (4) obj. -209.106 iterations 2
Cbc0038I Pass  84: suminf.    0.97557 (6) obj. -209.106 iterations 8
Cbc0038I Pass  85: suminf.    0.91971 (5) obj. -209.106 iterations 3
Cbc0038I Pass  86: suminf.    2.22920 (8) obj. -209.106 iterations 8
Cbc0038I Pass  87: suminf.    1.87311 (9) obj. -209.106 iterations 1
Cbc0038I Pass  88: suminf.    1.28133 (6) obj. -209.106 iterations 4
Cbc0038I Pass  89: suminf.    0.78112 (4) obj. -209.106 iterations 2
Cbc0038I Pass  90: suminf.    0.97557 (6) obj. -209.106 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 61 columns, reduced to 21 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -201.286 - took 0.04 seconds
Cbc0012I Integer solution of -201.28647 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 104 rows 61 columns, reduced to 18 rows 15 columns
Cbc0031I 3 added rows had average density of 6.6666667
Cbc0013I At root node, 3 cuts changed objective from -219.26767 to -214.96119 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 3.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -202.01512 found by DiveCoefficient after 23 iterations and 1 nodes (0.05 seconds)
Cbc0001I Search completed - best objective -202.015121, took 117 iterations and 8 nodes (0.06 seconds)
Cbc0032I Strong branching done 38 times (119 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-72) rows, 99 (-54) columns and 1563 (-1741) elements
Clp1000I sum of infeasibilities 1.8418e-07 - average 2.21904e-09, 35 fixed columns
Coin0506I Presolve 53 (-30) rows, 61 (-38) columns and 614 (-949) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 5.1111495 - largest nonzero change 2.7731571e-05 ( 0.0016580886%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 259.19742
Clp0000I Optimal - objective value 259.19742
Coin0511I After Postsolve, objective 259.19742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 259.19742
Clp0000I Optimal - objective value 259.19742
Clp0000I Optimal - objective value 259.19742
Coin0511I After Postsolve, objective 259.19742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 259.1974225 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 102 columns (102 integer (102 of which binary)) and 1577 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.035%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.88598
Cbc0038I Pass   1: suminf.    2.11955 (30) obj. -166.79 iterations 13
Cbc0038I Pass   2: suminf.    2.11955 (30) obj. -166.79 iterations 0
Cbc0038I Pass   3: suminf.    0.37851 (7) obj. -139.138 iterations 23
Cbc0038I Solution found of -132.517
Cbc0038I Rounding solution of -133.362 is better than previous of -132.517

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 102 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -133.362 to -195.166 (0.03 seconds)
Cbc0038I Round again with cutoff of -200.757
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.40742 (35) obj. -200.757 iterations 1
Cbc0038I Pass   5: suminf.    2.15443 (24) obj. -200.757 iterations 20
Cbc0038I Pass   6: suminf.    2.15443 (24) obj. -200.757 iterations 0
Cbc0038I Pass   7: suminf.    1.71568 (14) obj. -200.757 iterations 12
Cbc0038I Pass   8: suminf.    1.12183 (5) obj. -200.757 iterations 26
Cbc0038I Pass   9: suminf.    0.67587 (4) obj. -200.757 iterations 3
Cbc0038I Pass  10: suminf.    0.34576 (4) obj. -200.757 iterations 3
Cbc0038I Pass  11: suminf.    0.38098 (3) obj. -200.757 iterations 5
Cbc0038I Pass  12: suminf.    0.23031 (3) obj. -200.757 iterations 4
Cbc0038I Pass  13: suminf.    0.77110 (2) obj. -200.757 iterations 9
Cbc0038I Pass  14: suminf.    0.50000 (1) obj. -203.936 iterations 9
Cbc0038I Pass  15: suminf.    0.38581 (1) obj. -200.757 iterations 4
Cbc0038I Pass  16: suminf.    1.24308 (9) obj. -200.757 iterations 41
Cbc0038I Pass  17: suminf.    0.99610 (6) obj. -202.29 iterations 12
Cbc0038I Pass  18: suminf.    0.47471 (6) obj. -200.757 iterations 19
Cbc0038I Pass  19: suminf.    1.74812 (5) obj. -200.757 iterations 12
Cbc0038I Pass  20: suminf.    1.74812 (5) obj. -200.757 iterations 0
Cbc0038I Pass  21: suminf.    0.44010 (5) obj. -200.757 iterations 8
Cbc0038I Pass  22: suminf.    0.44010 (5) obj. -200.757 iterations 0
Cbc0038I Pass  23: suminf.    3.23616 (19) obj. -200.757 iterations 32
Cbc0038I Pass  24: suminf.    2.65309 (20) obj. -200.757 iterations 10
Cbc0038I Pass  25: suminf.    2.33858 (16) obj. -200.757 iterations 6
Cbc0038I Pass  26: suminf.    0.44010 (5) obj. -200.757 iterations 25
Cbc0038I Pass  27: suminf.    2.74504 (11) obj. -200.757 iterations 24
Cbc0038I Pass  28: suminf.    0.87714 (6) obj. -200.757 iterations 15
Cbc0038I Pass  29: suminf.    0.55209 (4) obj. -200.757 iterations 16
Cbc0038I Pass  30: suminf.    0.54749 (5) obj. -200.757 iterations 4
Cbc0038I Pass  31: suminf.    1.74812 (5) obj. -200.757 iterations 7
Cbc0038I Pass  32: suminf.    1.74812 (5) obj. -200.757 iterations 0
Cbc0038I Pass  33: suminf.    0.44010 (5) obj. -200.757 iterations 7
Cbc0038I Rounding solution of -201.286 is better than previous of -195.166

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 102 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -211.243
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.53973 (37) obj. -211.243 iterations 4
Cbc0038I Pass  34: suminf.    2.83055 (27) obj. -211.243 iterations 13
Cbc0038I Pass  35: suminf.    1.71261 (7) obj. -211.243 iterations 36
Cbc0038I Pass  36: suminf.    1.28038 (6) obj. -211.243 iterations 2
Cbc0038I Pass  37: suminf.    1.69507 (8) obj. -211.243 iterations 14
Cbc0038I Pass  38: suminf.    1.69507 (8) obj. -211.243 iterations 0
Cbc0038I Pass  39: suminf.    1.66241 (5) obj. -211.243 iterations 9
Cbc0038I Pass  40: suminf.    1.01964 (4) obj. -211.243 iterations 4
Cbc0038I Pass  41: suminf.    1.65880 (4) obj. -211.243 iterations 5
Cbc0038I Pass  42: suminf.    2.36598 (9) obj. -211.243 iterations 18
Cbc0038I Pass  43: suminf.    1.83872 (8) obj. -211.243 iterations 5
Cbc0038I Pass  44: suminf.    1.85530 (5) obj. -211.243 iterations 9
Cbc0038I Pass  45: suminf.    1.32242 (6) obj. -211.243 iterations 5
Cbc0038I Pass  46: suminf.    1.83067 (9) obj. -211.243 iterations 9
Cbc0038I Pass  47: suminf.    1.83067 (9) obj. -211.243 iterations 0
Cbc0038I Pass  48: suminf.    1.46667 (5) obj. -211.243 iterations 10
Cbc0038I Pass  49: suminf.    1.27365 (4) obj. -211.243 iterations 4
Cbc0038I Pass  50: suminf.    1.46559 (4) obj. -211.243 iterations 5
Cbc0038I Pass  51: suminf.    2.50374 (10) obj. -211.243 iterations 9
Cbc0038I Pass  52: suminf.    2.06892 (9) obj. -211.243 iterations 3
Cbc0038I Pass  53: suminf.    1.81775 (7) obj. -211.243 iterations 6
Cbc0038I Pass  54: suminf.    1.81775 (7) obj. -211.243 iterations 1
Cbc0038I Pass  55: suminf.    1.46667 (5) obj. -211.243 iterations 8
Cbc0038I Pass  56: suminf.    1.27365 (4) obj. -211.243 iterations 4
Cbc0038I Pass  57: suminf.    1.46559 (4) obj. -211.243 iterations 5
Cbc0038I Pass  58: suminf.    3.05660 (11) obj. -211.243 iterations 12
Cbc0038I Pass  59: suminf.    2.99189 (12) obj. -211.243 iterations 4
Cbc0038I Pass  60: suminf.    1.56454 (5) obj. -211.243 iterations 15
Cbc0038I Pass  61: suminf.    1.14665 (4) obj. -211.243 iterations 4
Cbc0038I Pass  62: suminf.    1.56220 (4) obj. -211.243 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 102 columns, reduced to 7 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -201.286 - took 0.04 seconds
Cbc0012I Integer solution of -201.28647 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 86 rows 102 columns, reduced to 7 rows 9 columns
Cbc0031I 33 added rows had average density of 11.121212
Cbc0013I At root node, 33 cuts changed objective from -251.06859 to -206.02294 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 319 row cuts average 13.9 elements, 27 column cuts (27 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 58.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0012I Integer solution of -202.01512 found by DiveCoefficient after 259 iterations and 5 nodes (0.48 seconds)
Cbc0001I Search completed - best objective -202.015121, took 318 iterations and 10 nodes (0.59 seconds)
Cbc0032I Strong branching done 80 times (455 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.60

