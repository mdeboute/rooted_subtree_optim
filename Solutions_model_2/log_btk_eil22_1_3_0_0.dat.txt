Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 21 (-3) columns and 101 (-28) elements
Clp1000I sum of infeasibilities 1.19847e-05 - average 3.63173e-07, 6 fixed columns
Coin0506I Presolve 18 (-15) rows, 15 (-6) columns and 59 (-42) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 84.836509
Clp0000I Optimal - objective value 84.836509
Coin0511I After Postsolve, objective 84.836509, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.836509
Clp0000I Optimal - objective value 84.836509
Clp0000I Optimal - objective value 84.836509
Coin0511I After Postsolve, objective 84.836509, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.83650936 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.765%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 4.18114
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.7988 iterations 12
Cbc0038I Solution found of -19.7988
Cbc0038I Relaxing continuous gives -19.7988
Cbc0038I Rounding solution of -24.9194 is better than previous of -19.7988

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -24.9194 to -34.2001 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.2638
Cbc0038I Pass   2: suminf.    0.56172 (2) obj. -39.2638 iterations 2
Cbc0038I Pass   3: suminf.    0.71741 (2) obj. -39.2638 iterations 2
Cbc0038I Pass   4: suminf.    0.38782 (2) obj. -39.2638 iterations 1
Cbc0038I Pass   5: suminf.    0.90691 (3) obj. -39.2638 iterations 9
Cbc0038I Pass   6: suminf.    0.32316 (2) obj. -39.2638 iterations 2
Cbc0038I Pass   7: suminf.    0.47903 (2) obj. -39.2638 iterations 4
Cbc0038I Pass   8: suminf.    0.83748 (2) obj. -39.2638 iterations 1
Cbc0038I Pass   9: suminf.    1.19834 (5) obj. -39.2638 iterations 4
Cbc0038I Pass  10: suminf.    0.77878 (3) obj. -39.2638 iterations 4
Cbc0038I Pass  11: suminf.    0.57911 (4) obj. -39.2638 iterations 5
Cbc0038I Pass  12: suminf.    0.54586 (3) obj. -39.2638 iterations 1
Cbc0038I Pass  13: suminf.    0.62856 (2) obj. -39.2638 iterations 4
Cbc0038I Pass  14: suminf.    0.57911 (4) obj. -39.2638 iterations 5
Cbc0038I Pass  15: suminf.    1.60994 (6) obj. -39.2638 iterations 5
Cbc0038I Pass  16: suminf.    0.78907 (4) obj. -39.2638 iterations 2
Cbc0038I Pass  17: suminf.    0.99338 (4) obj. -39.2638 iterations 3
Cbc0038I Pass  18: suminf.    0.82713 (3) obj. -39.2638 iterations 1
Cbc0038I Pass  19: suminf.    0.62578 (4) obj. -39.2638 iterations 3
Cbc0038I Pass  20: suminf.    2.59071 (6) obj. -39.2638 iterations 6
Cbc0038I Pass  21: suminf.    2.20112 (6) obj. -39.2638 iterations 1
Cbc0038I Pass  22: suminf.    2.14636 (7) obj. -39.2638 iterations 3
Cbc0038I Pass  23: suminf.    0.76560 (3) obj. -39.2638 iterations 9
Cbc0038I Pass  24: suminf.    0.54115 (4) obj. -39.2638 iterations 2
Cbc0038I Pass  25: suminf.    1.07217 (3) obj. -39.2638 iterations 4
Cbc0038I Pass  26: suminf.    0.54453 (3) obj. -39.2638 iterations 4
Cbc0038I Pass  27: suminf.    0.95023 (4) obj. -39.2638 iterations 4
Cbc0038I Pass  28: suminf.    0.64216 (4) obj. -39.2638 iterations 2
Cbc0038I Pass  29: suminf.    0.67191 (2) obj. -39.2638 iterations 6
Cbc0038I Pass  30: suminf.    0.22750 (2) obj. -39.2638 iterations 3
Cbc0038I Pass  31: suminf.    0.52364 (3) obj. -39.2638 iterations 3
Cbc0038I Rounding solution of -37.5164 is better than previous of -34.2001

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -48.3784
Cbc0038I Pass  31: suminf.    0.79661 (3) obj. -48.3784 iterations 1
Cbc0038I Pass  32: suminf.    0.76227 (2) obj. -48.3784 iterations 1
Cbc0038I Pass  33: suminf.    0.38509 (2) obj. -48.3784 iterations 1
Cbc0038I Pass  34: suminf.    1.26031 (4) obj. -48.3784 iterations 6
Cbc0038I Pass  35: suminf.    0.74064 (5) obj. -48.3784 iterations 4
Cbc0038I Pass  36: suminf.    1.12867 (3) obj. -48.3784 iterations 8
Cbc0038I Pass  37: suminf.    1.09044 (5) obj. -48.3784 iterations 3
Cbc0038I Pass  38: suminf.    0.72908 (3) obj. -48.3784 iterations 5
Cbc0038I Pass  39: suminf.    0.68268 (3) obj. -48.3784 iterations 1
Cbc0038I Pass  40: suminf.    1.46328 (4) obj. -48.3784 iterations 4
Cbc0038I Pass  41: suminf.    1.20414 (4) obj. -48.3784 iterations 1
Cbc0038I Pass  42: suminf.    1.33134 (4) obj. -48.3784 iterations 4
Cbc0038I Pass  43: suminf.    1.31346 (5) obj. -48.3784 iterations 1
Cbc0038I Pass  44: suminf.    0.49531 (3) obj. -48.3784 iterations 6
Cbc0038I Pass  45: suminf.    1.29459 (5) obj. -48.3784 iterations 4
Cbc0038I Pass  46: suminf.    1.29459 (5) obj. -48.3784 iterations 0
Cbc0038I Pass  47: suminf.    0.49597 (3) obj. -48.3784 iterations 8
Cbc0038I Pass  48: suminf.    0.49597 (3) obj. -48.3784 iterations 0
Cbc0038I Pass  49: suminf.    0.62937 (3) obj. -48.3784 iterations 3
Cbc0038I Pass  50: suminf.    0.49531 (3) obj. -48.3784 iterations 1
Cbc0038I Pass  51: suminf.    1.29459 (5) obj. -48.3784 iterations 4
Cbc0038I Pass  52: suminf.    1.29459 (5) obj. -48.3784 iterations 0
Cbc0038I Pass  53: suminf.    0.49597 (3) obj. -48.3784 iterations 8
Cbc0038I Pass  54: suminf.    0.49597 (3) obj. -48.3784 iterations 0
Cbc0038I Pass  55: suminf.    0.62937 (3) obj. -48.3784 iterations 3
Cbc0038I Pass  56: suminf.    0.49531 (3) obj. -48.3784 iterations 1
Cbc0038I Pass  57: suminf.    1.29459 (5) obj. -48.3784 iterations 4
Cbc0038I Pass  58: suminf.    1.29459 (5) obj. -48.3784 iterations 0
Cbc0038I Pass  59: suminf.    0.49597 (3) obj. -48.3784 iterations 8
Cbc0038I Pass  60: suminf.    0.49597 (3) obj. -48.3784 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -37.5164 - took 0.02 seconds
Cbc0012I Integer solution of -37.51643 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 17 rows 14 columns
Cbc0031I 9 added rows had average density of 14
Cbc0013I At root node, 9 cuts changed objective from -84.836509 to -55.927091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1139 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 942 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 122 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -37.51643000000001, took 2266 iterations and 14 nodes (0.16 seconds)
Cbc0032I Strong branching done 98 times (653 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-12) rows, 41 (-3) columns and 300 (-60) elements
Clp1000I sum of infeasibilities 1.18796e-09 - average 3.49401e-11, 33 fixed columns
Coin0506I Presolve 4 (-30) rows, 8 (-33) columns and 19 (-281) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 26.544139
Clp0000I Optimal - objective value 26.544139
Coin0511I After Postsolve, objective 26.544139, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28614186 - largest nonzero change 0 ( 0%) - largest zero change 2.6588112e-05
Clp0000I Optimal - objective value 109.66512
Clp0000I Optimal - objective value 109.66512
Clp0000I Optimal - objective value 109.66512
Coin0511I After Postsolve, objective 109.66512, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.6651161 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 41 columns (41 integer (41 of which binary)) and 304 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.022%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.08729
Cbc0038I Pass   1: suminf.    1.38260 (11) obj. -57.0725 iterations 5
Cbc0038I Pass   2: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Solution found of -16.0433
Cbc0038I Rounding solution of -26.4577 is better than previous of -16.0433

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.5809
Cbc0038I Pass   3: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass   4: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass   5: suminf.    1.03196 (6) obj. -32.5809 iterations 14
Cbc0038I Pass   6: suminf.    0.19048 (1) obj. -32.8674 iterations 5
Cbc0038I Pass   7: suminf.    0.19048 (1) obj. -32.8674 iterations 0
Cbc0038I Pass   8: suminf.    0.76663 (3) obj. -32.5809 iterations 3
Cbc0038I Pass   9: suminf.    0.33333 (2) obj. -41.4389 iterations 2
Cbc0038I Pass  10: suminf.    0.33333 (2) obj. -41.4389 iterations 0
Cbc0038I Pass  11: suminf.    1.07131 (6) obj. -55.2155 iterations 4
Cbc0038I Pass  12: suminf.    1.07131 (6) obj. -55.2155 iterations 0
Cbc0038I Pass  13: suminf.    0.97191 (6) obj. -50.8628 iterations 5
Cbc0038I Pass  14: suminf.    0.97191 (6) obj. -50.8628 iterations 0
Cbc0038I Pass  15: suminf.    0.93405 (5) obj. -32.5809 iterations 9
Cbc0038I Pass  16: suminf.    0.26786 (2) obj. -34.7673 iterations 3
Cbc0038I Pass  17: suminf.    0.54530 (5) obj. -32.5809 iterations 6
Cbc0038I Pass  18: suminf.    0.75195 (2) obj. -32.5809 iterations 5
Cbc0038I Pass  19: suminf.    0.75195 (2) obj. -32.5809 iterations 0
Cbc0038I Pass  20: suminf.    0.20838 (1) obj. -32.5809 iterations 2
Cbc0038I Pass  21: suminf.    0.05556 (1) obj. -37.49 iterations 1
Cbc0038I Pass  22: suminf.    1.28401 (4) obj. -44.5514 iterations 4
Cbc0038I Pass  23: suminf.    1.28401 (4) obj. -44.5514 iterations 1
Cbc0038I Pass  24: suminf.    1.93462 (8) obj. -48.7697 iterations 9
Cbc0038I Pass  25: suminf.    1.29379 (7) obj. -47.7479 iterations 1
Cbc0038I Pass  26: suminf.    0.61584 (4) obj. -32.5809 iterations 9
Cbc0038I Pass  27: suminf.    0.64858 (2) obj. -32.5809 iterations 4
Cbc0038I Pass  28: suminf.    0.64858 (2) obj. -32.5809 iterations 0
Cbc0038I Pass  29: suminf.    0.20838 (1) obj. -32.5809 iterations 2
Cbc0038I Pass  30: suminf.    0.05556 (1) obj. -37.49 iterations 1
Cbc0038I Pass  31: suminf.    1.59489 (8) obj. -32.5809 iterations 11
Cbc0038I Pass  32: suminf.    1.17674 (4) obj. -34.218 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 18 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -16.0433 to -31.5283 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.6026
Cbc0038I Pass  32: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass  33: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass  34: suminf.    0.89702 (5) obj. -43.6026 iterations 16
Cbc0038I Pass  35: suminf.    0.58333 (4) obj. -44.9389 iterations 1
Cbc0038I Pass  36: suminf.    1.38038 (7) obj. -43.6026 iterations 6
Cbc0038I Pass  37: suminf.    0.79238 (3) obj. -43.6026 iterations 3
Cbc0038I Pass  38: suminf.    0.57375 (3) obj. -43.6026 iterations 1
Cbc0038I Pass  39: suminf.    0.77976 (4) obj. -43.6026 iterations 3
Cbc0038I Pass  40: suminf.    0.70610 (4) obj. -43.6026 iterations 1
Cbc0038I Pass  41: suminf.    0.57375 (3) obj. -43.6026 iterations 3
Cbc0038I Pass  42: suminf.    1.73118 (13) obj. -43.6026 iterations 9
Cbc0038I Pass  43: suminf.    1.71131 (8) obj. -43.6026 iterations 1
Cbc0038I Pass  44: suminf.    1.23783 (4) obj. -43.6026 iterations 9
Cbc0038I Pass  45: suminf.    0.78388 (3) obj. -45.1629 iterations 2
Cbc0038I Pass  46: suminf.    1.45667 (7) obj. -43.6026 iterations 4
Cbc0038I Pass  47: suminf.    0.95725 (3) obj. -43.6026 iterations 1
Cbc0038I Pass  48: suminf.    1.52846 (7) obj. -43.6026 iterations 6
Cbc0038I Pass  49: suminf.    0.93319 (5) obj. -45.7549 iterations 2
Cbc0038I Pass  50: suminf.    1.01739 (5) obj. -43.6026 iterations 9
Cbc0038I Pass  51: suminf.    0.98426 (4) obj. -45.5548 iterations 2
Cbc0038I Pass  52: suminf.    0.49488 (3) obj. -43.6026 iterations 5
Cbc0038I Pass  53: suminf.    0.49488 (3) obj. -43.6026 iterations 0
Cbc0038I Pass  54: suminf.    0.48135 (3) obj. -43.6026 iterations 1
Cbc0038I Pass  55: suminf.    0.48135 (3) obj. -43.6026 iterations 0
Cbc0038I Pass  56: suminf.    0.49488 (3) obj. -43.6026 iterations 1
Cbc0038I Pass  57: suminf.    0.59109 (5) obj. -43.6026 iterations 1
Cbc0038I Pass  58: suminf.    2.52763 (9) obj. -43.6026 iterations 9
Cbc0038I Pass  59: suminf.    1.81546 (6) obj. -43.6026 iterations 2
Cbc0038I Pass  60: suminf.    1.40123 (5) obj. -48.5733 iterations 1
Cbc0038I Pass  61: suminf.    0.49488 (3) obj. -43.6026 iterations 6
Cbc0038I Rounding solution of -31.5365 is better than previous of -31.5283

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -31.5365 to -37.3433 (0.04 seconds)
Cbc0038I Round again with cutoff of -56.8287
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass  62: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass  63: suminf.    1.37370 (7) obj. -56.8287 iterations 13
Cbc0038I Pass  64: suminf.    1.37370 (7) obj. -56.8287 iterations 0
Cbc0038I Pass  65: suminf.    1.76726 (9) obj. -56.8287 iterations 5
Cbc0038I Pass  66: suminf.    1.12658 (5) obj. -56.8287 iterations 1
Cbc0038I Pass  67: suminf.    1.46884 (5) obj. -56.8287 iterations 4
Cbc0038I Pass  68: suminf.    1.26367 (6) obj. -56.8287 iterations 1
Cbc0038I Pass  69: suminf.    2.15961 (7) obj. -56.8287 iterations 6
Cbc0038I Pass  70: suminf.    2.15961 (7) obj. -56.8287 iterations 0
Cbc0038I Pass  71: suminf.    1.54096 (5) obj. -56.8287 iterations 7
Cbc0038I Pass  72: suminf.    1.54096 (5) obj. -56.8287 iterations 0
Cbc0038I Pass  73: suminf.    1.72285 (5) obj. -56.8287 iterations 2
Cbc0038I Pass  74: suminf.    1.52079 (5) obj. -58.2431 iterations 1
Cbc0038I Pass  75: suminf.    1.54096 (5) obj. -56.8287 iterations 1
Cbc0038I Pass  76: suminf.    3.17546 (9) obj. -56.8287 iterations 8
Cbc0038I Pass  77: suminf.    2.36606 (8) obj. -56.8287 iterations 2
Cbc0038I Pass  78: suminf.    2.50405 (8) obj. -56.8287 iterations 6
Cbc0038I Pass  79: suminf.    1.80368 (6) obj. -56.8287 iterations 1
Cbc0038I Pass  80: suminf.    1.52079 (5) obj. -58.2431 iterations 1
Cbc0038I Pass  81: suminf.    1.54096 (5) obj. -56.8287 iterations 1
Cbc0038I Pass  82: suminf.    1.54096 (5) obj. -56.8287 iterations 0
Cbc0038I Pass  83: suminf.    1.72285 (5) obj. -56.8287 iterations 2
Cbc0038I Pass  84: suminf.    1.89727 (9) obj. -56.8287 iterations 5
Cbc0038I Pass  85: suminf.    1.77888 (8) obj. -56.8287 iterations 2
Cbc0038I Pass  86: suminf.    1.91587 (8) obj. -56.8287 iterations 5
Cbc0038I Pass  87: suminf.    1.91587 (8) obj. -56.8287 iterations 0
Cbc0038I Pass  88: suminf.    2.39100 (6) obj. -56.8287 iterations 5
Cbc0038I Pass  89: suminf.    1.48111 (5) obj. -57.2193 iterations 4
Cbc0038I Pass  90: suminf.    1.54096 (5) obj. -56.8287 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -37.3433 - took 0.04 seconds
Cbc0012I Integer solution of -37.3433 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 34 rows 41 columns, reduced to 15 rows 19 columns
Cbc0031I 20 added rows had average density of 8.2
Cbc0013I At root node, 20 cuts changed objective from -87.689488 to -39.950065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1761 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 592 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 61 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 65 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.828 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -37.3433 best solution, best possible -39.950065 (1.63 seconds)
Cbc0012I Integer solution of -37.51643 found by rounding after 1243 iterations and 1 nodes (1.63 seconds)
Cbc0001I Search completed - best objective -37.51643000000001, took 1390 iterations and 4 nodes (1.66 seconds)
Cbc0032I Strong branching done 70 times (444 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.66

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 21 (-3) columns and 101 (-28) elements
Clp1000I sum of infeasibilities 1.19847e-05 - average 3.63173e-07, 6 fixed columns
Coin0506I Presolve 18 (-15) rows, 15 (-6) columns and 59 (-42) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 84.836509
Clp0000I Optimal - objective value 84.836509
Coin0511I After Postsolve, objective 84.836509, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.836509
Clp0000I Optimal - objective value 84.836509
Clp0000I Optimal - objective value 84.836509
Coin0511I After Postsolve, objective 84.836509, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.83650936 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 21 columns (20 integer (20 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.765%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 4.18114
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.7988 iterations 12
Cbc0038I Solution found of -19.7988
Cbc0038I Relaxing continuous gives -19.7988
Cbc0038I Rounding solution of -24.9194 is better than previous of -19.7988

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -24.9194 to -34.2001 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.2638
Cbc0038I Pass   2: suminf.    0.56172 (2) obj. -39.2638 iterations 2
Cbc0038I Pass   3: suminf.    0.71741 (2) obj. -39.2638 iterations 2
Cbc0038I Pass   4: suminf.    0.38782 (2) obj. -39.2638 iterations 1
Cbc0038I Pass   5: suminf.    0.90691 (3) obj. -39.2638 iterations 9
Cbc0038I Pass   6: suminf.    0.32316 (2) obj. -39.2638 iterations 2
Cbc0038I Pass   7: suminf.    0.47903 (2) obj. -39.2638 iterations 4
Cbc0038I Pass   8: suminf.    0.83748 (2) obj. -39.2638 iterations 1
Cbc0038I Pass   9: suminf.    1.19834 (5) obj. -39.2638 iterations 4
Cbc0038I Pass  10: suminf.    0.77878 (3) obj. -39.2638 iterations 4
Cbc0038I Pass  11: suminf.    0.57911 (4) obj. -39.2638 iterations 5
Cbc0038I Pass  12: suminf.    0.54586 (3) obj. -39.2638 iterations 1
Cbc0038I Pass  13: suminf.    0.62856 (2) obj. -39.2638 iterations 4
Cbc0038I Pass  14: suminf.    0.57911 (4) obj. -39.2638 iterations 5
Cbc0038I Pass  15: suminf.    1.60994 (6) obj. -39.2638 iterations 5
Cbc0038I Pass  16: suminf.    0.78907 (4) obj. -39.2638 iterations 2
Cbc0038I Pass  17: suminf.    0.99338 (4) obj. -39.2638 iterations 3
Cbc0038I Pass  18: suminf.    0.82713 (3) obj. -39.2638 iterations 1
Cbc0038I Pass  19: suminf.    0.62578 (4) obj. -39.2638 iterations 3
Cbc0038I Pass  20: suminf.    2.59071 (6) obj. -39.2638 iterations 6
Cbc0038I Pass  21: suminf.    2.20112 (6) obj. -39.2638 iterations 1
Cbc0038I Pass  22: suminf.    2.14636 (7) obj. -39.2638 iterations 3
Cbc0038I Pass  23: suminf.    0.76560 (3) obj. -39.2638 iterations 9
Cbc0038I Pass  24: suminf.    0.54115 (4) obj. -39.2638 iterations 2
Cbc0038I Pass  25: suminf.    1.07217 (3) obj. -39.2638 iterations 4
Cbc0038I Pass  26: suminf.    0.54453 (3) obj. -39.2638 iterations 4
Cbc0038I Pass  27: suminf.    0.95023 (4) obj. -39.2638 iterations 4
Cbc0038I Pass  28: suminf.    0.64216 (4) obj. -39.2638 iterations 2
Cbc0038I Pass  29: suminf.    0.67191 (2) obj. -39.2638 iterations 6
Cbc0038I Pass  30: suminf.    0.22750 (2) obj. -39.2638 iterations 3
Cbc0038I Pass  31: suminf.    0.52364 (3) obj. -39.2638 iterations 3
Cbc0038I Rounding solution of -37.5164 is better than previous of -34.2001

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -48.3784
Cbc0038I Pass  31: suminf.    0.79661 (3) obj. -48.3784 iterations 1
Cbc0038I Pass  32: suminf.    0.76227 (2) obj. -48.3784 iterations 1
Cbc0038I Pass  33: suminf.    0.38509 (2) obj. -48.3784 iterations 1
Cbc0038I Pass  34: suminf.    1.26031 (4) obj. -48.3784 iterations 6
Cbc0038I Pass  35: suminf.    0.74064 (5) obj. -48.3784 iterations 4
Cbc0038I Pass  36: suminf.    1.12867 (3) obj. -48.3784 iterations 8
Cbc0038I Pass  37: suminf.    1.09044 (5) obj. -48.3784 iterations 3
Cbc0038I Pass  38: suminf.    0.72908 (3) obj. -48.3784 iterations 5
Cbc0038I Pass  39: suminf.    0.68268 (3) obj. -48.3784 iterations 1
Cbc0038I Pass  40: suminf.    1.46328 (4) obj. -48.3784 iterations 4
Cbc0038I Pass  41: suminf.    1.20414 (4) obj. -48.3784 iterations 1
Cbc0038I Pass  42: suminf.    1.33134 (4) obj. -48.3784 iterations 4
Cbc0038I Pass  43: suminf.    1.31346 (5) obj. -48.3784 iterations 1
Cbc0038I Pass  44: suminf.    0.49531 (3) obj. -48.3784 iterations 6
Cbc0038I Pass  45: suminf.    1.29459 (5) obj. -48.3784 iterations 4
Cbc0038I Pass  46: suminf.    1.29459 (5) obj. -48.3784 iterations 0
Cbc0038I Pass  47: suminf.    0.49597 (3) obj. -48.3784 iterations 8
Cbc0038I Pass  48: suminf.    0.49597 (3) obj. -48.3784 iterations 0
Cbc0038I Pass  49: suminf.    0.62937 (3) obj. -48.3784 iterations 3
Cbc0038I Pass  50: suminf.    0.49531 (3) obj. -48.3784 iterations 1
Cbc0038I Pass  51: suminf.    1.29459 (5) obj. -48.3784 iterations 4
Cbc0038I Pass  52: suminf.    1.29459 (5) obj. -48.3784 iterations 0
Cbc0038I Pass  53: suminf.    0.49597 (3) obj. -48.3784 iterations 8
Cbc0038I Pass  54: suminf.    0.49597 (3) obj. -48.3784 iterations 0
Cbc0038I Pass  55: suminf.    0.62937 (3) obj. -48.3784 iterations 3
Cbc0038I Pass  56: suminf.    0.49531 (3) obj. -48.3784 iterations 1
Cbc0038I Pass  57: suminf.    1.29459 (5) obj. -48.3784 iterations 4
Cbc0038I Pass  58: suminf.    1.29459 (5) obj. -48.3784 iterations 0
Cbc0038I Pass  59: suminf.    0.49597 (3) obj. -48.3784 iterations 8
Cbc0038I Pass  60: suminf.    0.49597 (3) obj. -48.3784 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 21 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -37.5164 - took 0.05 seconds
Cbc0012I Integer solution of -37.51643 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 21 columns, reduced to 17 rows 14 columns
Cbc0031I 9 added rows had average density of 14
Cbc0013I At root node, 9 cuts changed objective from -84.836509 to -55.927091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1139 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 942 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 122 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -37.51643000000001, took 2266 iterations and 14 nodes (0.16 seconds)
Cbc0032I Strong branching done 98 times (653 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 41 (-4) columns and 300 (-61) elements
Clp1000I sum of infeasibilities 1.18796e-09 - average 3.49401e-11, 33 fixed columns
Coin0506I Presolve 4 (-30) rows, 8 (-33) columns and 19 (-281) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 26.544139
Clp0000I Optimal - objective value 26.544139
Coin0511I After Postsolve, objective 26.544139, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28614186 - largest nonzero change 0 ( 0%) - largest zero change 2.6588112e-05
Clp0000I Optimal - objective value 109.66512
Clp0000I Optimal - objective value 109.66512
Clp0000I Optimal - objective value 109.66512
Coin0511I After Postsolve, objective 109.66512, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.6651161 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 41 columns (41 integer (41 of which binary)) and 304 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.022%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.08729
Cbc0038I Pass   1: suminf.    1.38260 (11) obj. -57.0725 iterations 5
Cbc0038I Pass   2: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Solution found of -16.0433
Cbc0038I Rounding solution of -26.4577 is better than previous of -16.0433

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.5809
Cbc0038I Pass   3: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass   4: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass   5: suminf.    1.03196 (6) obj. -32.5809 iterations 14
Cbc0038I Pass   6: suminf.    0.19048 (1) obj. -32.8674 iterations 5
Cbc0038I Pass   7: suminf.    0.19048 (1) obj. -32.8674 iterations 0
Cbc0038I Pass   8: suminf.    0.76663 (3) obj. -32.5809 iterations 3
Cbc0038I Pass   9: suminf.    0.33333 (2) obj. -41.4389 iterations 2
Cbc0038I Pass  10: suminf.    0.33333 (2) obj. -41.4389 iterations 0
Cbc0038I Pass  11: suminf.    1.07131 (6) obj. -55.2155 iterations 4
Cbc0038I Pass  12: suminf.    1.07131 (6) obj. -55.2155 iterations 0
Cbc0038I Pass  13: suminf.    0.97191 (6) obj. -50.8628 iterations 5
Cbc0038I Pass  14: suminf.    0.97191 (6) obj. -50.8628 iterations 0
Cbc0038I Pass  15: suminf.    0.93405 (5) obj. -32.5809 iterations 9
Cbc0038I Pass  16: suminf.    0.26786 (2) obj. -34.7673 iterations 3
Cbc0038I Pass  17: suminf.    0.54530 (5) obj. -32.5809 iterations 6
Cbc0038I Pass  18: suminf.    0.75195 (2) obj. -32.5809 iterations 5
Cbc0038I Pass  19: suminf.    0.75195 (2) obj. -32.5809 iterations 0
Cbc0038I Pass  20: suminf.    0.20838 (1) obj. -32.5809 iterations 2
Cbc0038I Pass  21: suminf.    0.05556 (1) obj. -37.49 iterations 1
Cbc0038I Pass  22: suminf.    1.28401 (4) obj. -44.5514 iterations 4
Cbc0038I Pass  23: suminf.    1.28401 (4) obj. -44.5514 iterations 1
Cbc0038I Pass  24: suminf.    1.93462 (8) obj. -48.7697 iterations 9
Cbc0038I Pass  25: suminf.    1.29379 (7) obj. -47.7479 iterations 1
Cbc0038I Pass  26: suminf.    0.61584 (4) obj. -32.5809 iterations 9
Cbc0038I Pass  27: suminf.    0.64858 (2) obj. -32.5809 iterations 4
Cbc0038I Pass  28: suminf.    0.64858 (2) obj. -32.5809 iterations 0
Cbc0038I Pass  29: suminf.    0.20838 (1) obj. -32.5809 iterations 2
Cbc0038I Pass  30: suminf.    0.05556 (1) obj. -37.49 iterations 1
Cbc0038I Pass  31: suminf.    1.59489 (8) obj. -32.5809 iterations 11
Cbc0038I Pass  32: suminf.    1.17674 (4) obj. -34.218 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 18 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -16.0433 to -31.5283 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.6026
Cbc0038I Pass  32: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass  33: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass  34: suminf.    0.89702 (5) obj. -43.6026 iterations 16
Cbc0038I Pass  35: suminf.    0.58333 (4) obj. -44.9389 iterations 1
Cbc0038I Pass  36: suminf.    1.38038 (7) obj. -43.6026 iterations 6
Cbc0038I Pass  37: suminf.    0.79238 (3) obj. -43.6026 iterations 3
Cbc0038I Pass  38: suminf.    0.57375 (3) obj. -43.6026 iterations 1
Cbc0038I Pass  39: suminf.    0.77976 (4) obj. -43.6026 iterations 3
Cbc0038I Pass  40: suminf.    0.70610 (4) obj. -43.6026 iterations 1
Cbc0038I Pass  41: suminf.    0.57375 (3) obj. -43.6026 iterations 3
Cbc0038I Pass  42: suminf.    1.73118 (13) obj. -43.6026 iterations 9
Cbc0038I Pass  43: suminf.    1.71131 (8) obj. -43.6026 iterations 1
Cbc0038I Pass  44: suminf.    1.23783 (4) obj. -43.6026 iterations 9
Cbc0038I Pass  45: suminf.    0.78388 (3) obj. -45.1629 iterations 2
Cbc0038I Pass  46: suminf.    1.45667 (7) obj. -43.6026 iterations 4
Cbc0038I Pass  47: suminf.    0.95725 (3) obj. -43.6026 iterations 1
Cbc0038I Pass  48: suminf.    1.52846 (7) obj. -43.6026 iterations 6
Cbc0038I Pass  49: suminf.    0.93319 (5) obj. -45.7549 iterations 2
Cbc0038I Pass  50: suminf.    1.01739 (5) obj. -43.6026 iterations 9
Cbc0038I Pass  51: suminf.    0.98426 (4) obj. -45.5548 iterations 2
Cbc0038I Pass  52: suminf.    0.49488 (3) obj. -43.6026 iterations 5
Cbc0038I Pass  53: suminf.    0.49488 (3) obj. -43.6026 iterations 0
Cbc0038I Pass  54: suminf.    0.48135 (3) obj. -43.6026 iterations 1
Cbc0038I Pass  55: suminf.    0.48135 (3) obj. -43.6026 iterations 0
Cbc0038I Pass  56: suminf.    0.49488 (3) obj. -43.6026 iterations 1
Cbc0038I Pass  57: suminf.    0.59109 (5) obj. -43.6026 iterations 1
Cbc0038I Pass  58: suminf.    2.52763 (9) obj. -43.6026 iterations 9
Cbc0038I Pass  59: suminf.    1.81546 (6) obj. -43.6026 iterations 2
Cbc0038I Pass  60: suminf.    1.40123 (5) obj. -48.5733 iterations 1
Cbc0038I Pass  61: suminf.    0.49488 (3) obj. -43.6026 iterations 6
Cbc0038I Rounding solution of -31.5365 is better than previous of -31.5283

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -31.5365 to -37.3433 (0.05 seconds)
Cbc0038I Round again with cutoff of -56.8287
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass  62: suminf.    1.38260 (11) obj. -57.0725 iterations 0
Cbc0038I Pass  63: suminf.    1.37370 (7) obj. -56.8287 iterations 13
Cbc0038I Pass  64: suminf.    1.37370 (7) obj. -56.8287 iterations 0
Cbc0038I Pass  65: suminf.    1.76726 (9) obj. -56.8287 iterations 5
Cbc0038I Pass  66: suminf.    1.12658 (5) obj. -56.8287 iterations 1
Cbc0038I Pass  67: suminf.    1.46884 (5) obj. -56.8287 iterations 4
Cbc0038I Pass  68: suminf.    1.26367 (6) obj. -56.8287 iterations 1
Cbc0038I Pass  69: suminf.    2.15961 (7) obj. -56.8287 iterations 6
Cbc0038I Pass  70: suminf.    2.15961 (7) obj. -56.8287 iterations 0
Cbc0038I Pass  71: suminf.    1.54096 (5) obj. -56.8287 iterations 7
Cbc0038I Pass  72: suminf.    1.54096 (5) obj. -56.8287 iterations 0
Cbc0038I Pass  73: suminf.    1.72285 (5) obj. -56.8287 iterations 2
Cbc0038I Pass  74: suminf.    1.52079 (5) obj. -58.2431 iterations 1
Cbc0038I Pass  75: suminf.    1.54096 (5) obj. -56.8287 iterations 1
Cbc0038I Pass  76: suminf.    3.17546 (9) obj. -56.8287 iterations 8
Cbc0038I Pass  77: suminf.    2.36606 (8) obj. -56.8287 iterations 2
Cbc0038I Pass  78: suminf.    2.50405 (8) obj. -56.8287 iterations 6
Cbc0038I Pass  79: suminf.    1.80368 (6) obj. -56.8287 iterations 1
Cbc0038I Pass  80: suminf.    1.52079 (5) obj. -58.2431 iterations 1
Cbc0038I Pass  81: suminf.    1.54096 (5) obj. -56.8287 iterations 1
Cbc0038I Pass  82: suminf.    1.54096 (5) obj. -56.8287 iterations 0
Cbc0038I Pass  83: suminf.    1.72285 (5) obj. -56.8287 iterations 2
Cbc0038I Pass  84: suminf.    1.89727 (9) obj. -56.8287 iterations 5
Cbc0038I Pass  85: suminf.    1.77888 (8) obj. -56.8287 iterations 2
Cbc0038I Pass  86: suminf.    1.91587 (8) obj. -56.8287 iterations 5
Cbc0038I Pass  87: suminf.    1.91587 (8) obj. -56.8287 iterations 0
Cbc0038I Pass  88: suminf.    2.39100 (6) obj. -56.8287 iterations 5
Cbc0038I Pass  89: suminf.    1.48111 (5) obj. -57.2193 iterations 4
Cbc0038I Pass  90: suminf.    1.54096 (5) obj. -56.8287 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -37.3433 - took 0.04 seconds
Cbc0012I Integer solution of -37.3433 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 34 rows 41 columns, reduced to 15 rows 19 columns
Cbc0031I 20 added rows had average density of 8.2
Cbc0013I At root node, 20 cuts changed objective from -87.689488 to -39.950065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1761 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 592 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 61 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 65 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.772 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -37.3433 best solution, best possible -39.950065 (1.57 seconds)
Cbc0012I Integer solution of -37.51643 found by rounding after 1243 iterations and 1 nodes (1.57 seconds)
Cbc0001I Search completed - best objective -37.51643000000001, took 1390 iterations and 4 nodes (1.60 seconds)
Cbc0032I Strong branching done 70 times (444 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.60

