Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-17) rows, 45 (-5) columns and 246 (-39) elements
Clp1000I sum of infeasibilities 3.62532e-05 - average 4.42113e-07, 0 fixed columns
Coin0506I Presolve 82 (0) rows, 45 (0) columns and 246 (0) elements
Clp0029I End of values pass after 45 iterations
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Coin0511I After Postsolve, objective 1523.2361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Coin0511I After Postsolve, objective 1523.2361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1523.23607 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 82 rows, 45 columns (44 integer (44 of which binary)) and 246 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 12.2184
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 258.532 iterations 39
Cbc0038I Solution found of 258.532
Cbc0038I Relaxing continuous gives 258.532
Cbc0038I Rounding solution of 110.151 is better than previous of 258.532

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 45 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 110.151 to -409.128 (0.04 seconds)
Cbc0038I Round again with cutoff of -520.539
Cbc0038I Pass   2: suminf.    3.02137 (18) obj. -520.539 iterations 13
Cbc0038I Pass   3: suminf.    2.95684 (17) obj. -520.539 iterations 1
Cbc0038I Pass   4: suminf.    2.39056 (9) obj. -520.539 iterations 8
Cbc0038I Pass   5: suminf.    2.52589 (8) obj. -520.539 iterations 7
Cbc0038I Pass   6: suminf.    1.93700 (9) obj. -520.539 iterations 6
Cbc0038I Pass   7: suminf.    1.93120 (8) obj. -520.539 iterations 1
Cbc0038I Pass   8: suminf.    2.40803 (8) obj. -520.539 iterations 12
Cbc0038I Pass   9: suminf.    1.38899 (5) obj. -520.539 iterations 4
Cbc0038I Pass  10: suminf.    0.71556 (3) obj. -520.539 iterations 3
Cbc0038I Pass  11: suminf.    0.82501 (7) obj. -520.539 iterations 4
Cbc0038I Pass  12: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  13: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  14: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  15: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  16: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  17: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  18: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  19: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  20: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  21: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  22: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  23: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  24: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  25: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  26: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  27: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  28: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  29: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  30: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  31: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 45 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -409.128 - took 0.08 seconds
Cbc0012I Integer solution of -409.1277 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 27 added rows had average density of 34.37037
Cbc0013I At root node, 27 cuts changed objective from -1523.2361 to -976.36719 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7508 row cuts average 6.1 elements, 1 column cuts (1 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1863 row cuts average 44.3 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 151 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 7 nodes, 4 on tree, -409.1277 best solution, best possible -976.18929 (0.68 seconds)
Cbc0001I Search completed - best objective -409.1277000000002, took 6177 iterations and 18 nodes (0.71 seconds)
Cbc0032I Strong branching done 344 times (7025 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 7, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-14) rows, 90 (-6) columns and 1194 (-219) elements
Clp1000I sum of infeasibilities 6.95075e-09 - average 8.27471e-11, 49 fixed columns
Coin0506I Presolve 11 (-73) rows, 12 (-78) columns and 40 (-1154) elements
Clp0006I 0  Obj 1482.6143 Dual inf 12.927535 (12)
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 1923.7841
Clp0000I Optimal - objective value 1923.7841
Coin0511I After Postsolve, objective 1923.7841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1923.7841 Dual inf 1763.0736 (11)
Clp0014I Perturbing problem by 0.001% of 3.5206017 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 1923.7841
Clp0000I Optimal - objective value 1923.7841
Clp0000I Optimal - objective value 1923.7841
Coin0511I After Postsolve, objective 1923.7841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1923.784118 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 90 columns (90 integer (90 of which binary)) and 1196 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.851%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.82035
Cbc0038I Pass   1: suminf.    3.62333 (27) obj. -1376.1 iterations 16
Cbc0038I Pass   2: suminf.    3.62333 (27) obj. -1376.1 iterations 2
Cbc0038I Pass   3: suminf.    1.16181 (12) obj. -643.158 iterations 15
Cbc0038I Solution found of -108.493
Cbc0038I Rounding solution of -349.476 is better than previous of -108.493

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -487.17
Cbc0038I Pass   4: suminf.    3.62333 (27) obj. -1376.1 iterations 0
Cbc0038I Pass   5: suminf.    3.62333 (27) obj. -1376.1 iterations 3
Cbc0038I Pass   6: suminf.    1.65027 (16) obj. -747.204 iterations 11
Cbc0038I Pass   7: suminf.    0.82530 (6) obj. -487.17 iterations 21
Cbc0038I Pass   8: suminf.    0.69533 (6) obj. -487.17 iterations 13
Cbc0038I Pass   9: suminf.    0.44866 (4) obj. -515.816 iterations 4
Cbc0038I Pass  10: suminf.    0.71934 (3) obj. -487.17 iterations 16
Cbc0038I Pass  11: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  12: suminf.    0.71686 (3) obj. -487.17 iterations 4
Cbc0038I Pass  13: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I Pass  14: suminf.    0.42811 (2) obj. -542.046 iterations 1
Cbc0038I Pass  15: suminf.    0.71934 (3) obj. -487.17 iterations 5
Cbc0038I Pass  16: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  17: suminf.    0.71686 (3) obj. -487.17 iterations 3
Cbc0038I Pass  18: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I Pass  19: suminf.    0.42811 (2) obj. -542.046 iterations 1
Cbc0038I Pass  20: suminf.    0.71934 (3) obj. -487.17 iterations 4
Cbc0038I Pass  21: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  22: suminf.    0.71686 (3) obj. -487.17 iterations 3
Cbc0038I Pass  23: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I Pass  24: suminf.    0.42811 (2) obj. -542.046 iterations 1
Cbc0038I Pass  25: suminf.    0.71934 (3) obj. -487.17 iterations 4
Cbc0038I Pass  26: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  27: suminf.    0.71686 (3) obj. -487.17 iterations 3
Cbc0038I Pass  28: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I Pass  29: suminf.    0.42811 (2) obj. -542.046 iterations 1
Cbc0038I Pass  30: suminf.    0.71934 (3) obj. -487.17 iterations 4
Cbc0038I Pass  31: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  32: suminf.    0.71686 (3) obj. -487.17 iterations 3
Cbc0038I Pass  33: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -349.476 - took 0.01 seconds
Cbc0012I Integer solution of -349.476 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 84 rows 90 columns, reduced to 6 rows 9 columns
Cbc0012I Integer solution of -405.0501 found by DiveCoefficient after 314 iterations and 0 nodes (0.21 seconds)
Cbc0031I 39 added rows had average density of 11.230769
Cbc0013I At root node, 39 cuts changed objective from -1726.4132 to -417.04728 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 893 row cuts average 3.6 elements, 14 column cuts (14 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 70 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -405.0501 best solution, best possible -416.25127 (0.21 seconds)
Cbc0004I Integer solution of -409.1277 found after 350 iterations and 2 nodes (0.25 seconds)
Cbc0001I Search completed - best objective -409.1277000000002, took 350 iterations and 2 nodes (0.25 seconds)
Cbc0032I Strong branching done 28 times (141 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.26

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-17) rows, 45 (-5) columns and 246 (-39) elements
Clp1000I sum of infeasibilities 3.62532e-05 - average 4.42113e-07, 0 fixed columns
Coin0506I Presolve 82 (0) rows, 45 (0) columns and 246 (0) elements
Clp0029I End of values pass after 45 iterations
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Coin0511I After Postsolve, objective 1523.2361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Clp0000I Optimal - objective value 1523.2361
Coin0511I After Postsolve, objective 1523.2361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1523.23607 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 82 rows, 45 columns (44 integer (44 of which binary)) and 246 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 12.2184
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 258.532 iterations 39
Cbc0038I Solution found of 258.532
Cbc0038I Relaxing continuous gives 258.532
Cbc0038I Rounding solution of 110.151 is better than previous of 258.532

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 45 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 110.151 to -409.128 (0.04 seconds)
Cbc0038I Round again with cutoff of -520.539
Cbc0038I Pass   2: suminf.    3.02137 (18) obj. -520.539 iterations 13
Cbc0038I Pass   3: suminf.    2.95684 (17) obj. -520.539 iterations 1
Cbc0038I Pass   4: suminf.    2.39056 (9) obj. -520.539 iterations 8
Cbc0038I Pass   5: suminf.    2.52589 (8) obj. -520.539 iterations 7
Cbc0038I Pass   6: suminf.    1.93700 (9) obj. -520.539 iterations 6
Cbc0038I Pass   7: suminf.    1.93120 (8) obj. -520.539 iterations 1
Cbc0038I Pass   8: suminf.    2.40803 (8) obj. -520.539 iterations 12
Cbc0038I Pass   9: suminf.    1.38899 (5) obj. -520.539 iterations 4
Cbc0038I Pass  10: suminf.    0.71556 (3) obj. -520.539 iterations 3
Cbc0038I Pass  11: suminf.    0.82501 (7) obj. -520.539 iterations 4
Cbc0038I Pass  12: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  13: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  14: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  15: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  16: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  17: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  18: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  19: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  20: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  21: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  22: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  23: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  24: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  25: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I Pass  26: suminf.    1.62344 (5) obj. -520.539 iterations 4
Cbc0038I Pass  27: suminf.    1.62344 (5) obj. -520.539 iterations 0
Cbc0038I Pass  28: suminf.    1.62366 (6) obj. -520.539 iterations 2
Cbc0038I Pass  29: suminf.    0.82501 (7) obj. -520.539 iterations 3
Cbc0038I Pass  30: suminf.    0.82501 (7) obj. -520.539 iterations 0
Cbc0038I Pass  31: suminf.    2.08241 (7) obj. -520.539 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 45 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -409.128 - took 0.08 seconds
Cbc0012I Integer solution of -409.1277 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 27 added rows had average density of 34.37037
Cbc0013I At root node, 27 cuts changed objective from -1523.2361 to -976.36719 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7508 row cuts average 6.1 elements, 1 column cuts (1 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1863 row cuts average 44.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 151 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -409.1277000000002, took 6177 iterations and 18 nodes (0.67 seconds)
Cbc0032I Strong branching done 344 times (7025 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 7, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-15) rows, 90 (-7) columns and 1194 (-220) elements
Clp1000I sum of infeasibilities 6.95075e-09 - average 8.27471e-11, 49 fixed columns
Coin0506I Presolve 11 (-73) rows, 12 (-78) columns and 40 (-1154) elements
Clp0006I 0  Obj 1482.6143 Dual inf 12.927535 (12)
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 1923.7841
Clp0000I Optimal - objective value 1923.7841
Coin0511I After Postsolve, objective 1923.7841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1923.7841 Dual inf 1763.0736 (11)
Clp0014I Perturbing problem by 0.001% of 3.5206017 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 1923.7841
Clp0000I Optimal - objective value 1923.7841
Clp0000I Optimal - objective value 1923.7841
Coin0511I After Postsolve, objective 1923.7841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1923.784118 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 90 columns (90 integer (90 of which binary)) and 1196 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.851%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.82035
Cbc0038I Pass   1: suminf.    3.62333 (27) obj. -1376.1 iterations 16
Cbc0038I Pass   2: suminf.    3.62333 (27) obj. -1376.1 iterations 2
Cbc0038I Pass   3: suminf.    1.16181 (12) obj. -643.158 iterations 15
Cbc0038I Solution found of -108.493
Cbc0038I Rounding solution of -349.476 is better than previous of -108.493

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -487.17
Cbc0038I Pass   4: suminf.    3.62333 (27) obj. -1376.1 iterations 0
Cbc0038I Pass   5: suminf.    3.62333 (27) obj. -1376.1 iterations 3
Cbc0038I Pass   6: suminf.    1.65027 (16) obj. -747.204 iterations 11
Cbc0038I Pass   7: suminf.    0.82530 (6) obj. -487.17 iterations 21
Cbc0038I Pass   8: suminf.    0.69533 (6) obj. -487.17 iterations 13
Cbc0038I Pass   9: suminf.    0.44866 (4) obj. -515.816 iterations 4
Cbc0038I Pass  10: suminf.    0.71934 (3) obj. -487.17 iterations 16
Cbc0038I Pass  11: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  12: suminf.    0.71686 (3) obj. -487.17 iterations 4
Cbc0038I Pass  13: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I Pass  14: suminf.    0.42811 (2) obj. -542.046 iterations 1
Cbc0038I Pass  15: suminf.    0.71934 (3) obj. -487.17 iterations 5
Cbc0038I Pass  16: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  17: suminf.    0.71686 (3) obj. -487.17 iterations 3
Cbc0038I Pass  18: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I Pass  19: suminf.    0.42811 (2) obj. -542.046 iterations 1
Cbc0038I Pass  20: suminf.    0.71934 (3) obj. -487.17 iterations 4
Cbc0038I Pass  21: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  22: suminf.    0.71686 (3) obj. -487.17 iterations 3
Cbc0038I Pass  23: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I Pass  24: suminf.    0.42811 (2) obj. -542.046 iterations 1
Cbc0038I Pass  25: suminf.    0.71934 (3) obj. -487.17 iterations 4
Cbc0038I Pass  26: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  27: suminf.    0.71686 (3) obj. -487.17 iterations 3
Cbc0038I Pass  28: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I Pass  29: suminf.    0.42811 (2) obj. -542.046 iterations 1
Cbc0038I Pass  30: suminf.    0.71934 (3) obj. -487.17 iterations 4
Cbc0038I Pass  31: suminf.    0.71934 (3) obj. -487.17 iterations 0
Cbc0038I Pass  32: suminf.    0.71686 (3) obj. -487.17 iterations 3
Cbc0038I Pass  33: suminf.    0.66064 (2) obj. -487.17 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -349.476 - took 0.01 seconds
Cbc0012I Integer solution of -349.476 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 84 rows 90 columns, reduced to 6 rows 9 columns
Cbc0012I Integer solution of -405.0501 found by DiveCoefficient after 314 iterations and 0 nodes (0.19 seconds)
Cbc0031I 39 added rows had average density of 11.230769
Cbc0013I At root node, 39 cuts changed objective from -1726.4132 to -417.04728 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 893 row cuts average 3.6 elements, 14 column cuts (14 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 70 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -405.0501 best solution, best possible -416.25127 (0.19 seconds)
Cbc0004I Integer solution of -409.1277 found after 350 iterations and 2 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -409.1277000000002, took 350 iterations and 2 nodes (0.22 seconds)
Cbc0032I Strong branching done 28 times (141 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.23

