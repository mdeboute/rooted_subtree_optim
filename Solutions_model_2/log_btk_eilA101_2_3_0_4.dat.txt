Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 123 (-82) rows, 67 (-36) columns and 373 (-230) elements
Clp0000I Optimal - objective value 30952.367
Coin0511I After Postsolve, objective 30952.367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30952.36672 - 31 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 123 rows, 67 columns (66 integer (66 of which binary)) and 373 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 1.84658
Cbc0038I Solution found of -28098.1
Cbc0038I Relaxing continuous gives -28098.1
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 67 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28383.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.13454 (4) obj. -28383.5 iterations 25
Cbc0038I Pass   2: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I Pass   3: suminf.    0.70686 (4) obj. -28383.5 iterations 3
Cbc0038I Pass   4: suminf.    0.95326 (4) obj. -28383.5 iterations 5
Cbc0038I Pass   5: suminf.    0.95326 (4) obj. -28383.5 iterations 1
Cbc0038I Pass   6: suminf.    1.74661 (4) obj. -28383.5 iterations 2
Cbc0038I Pass   7: suminf.    0.13454 (4) obj. -28383.5 iterations 6
Cbc0038I Pass   8: suminf.    0.13454 (4) obj. -28383.5 iterations 0
Cbc0038I Pass   9: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I Pass  10: suminf.    0.70686 (4) obj. -28383.5 iterations 3
Cbc0038I Pass  11: suminf.    0.95326 (4) obj. -28383.5 iterations 5
Cbc0038I Pass  12: suminf.    0.95326 (4) obj. -28383.5 iterations 1
Cbc0038I Pass  13: suminf.    1.74661 (4) obj. -28383.5 iterations 2
Cbc0038I Pass  14: suminf.    0.13454 (4) obj. -28383.5 iterations 6
Cbc0038I Pass  15: suminf.    0.13454 (4) obj. -28383.5 iterations 0
Cbc0038I Pass  16: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I Pass  17: suminf.    0.70686 (4) obj. -28383.5 iterations 3
Cbc0038I Pass  18: suminf.    0.95326 (4) obj. -28383.5 iterations 5
Cbc0038I Pass  19: suminf.    0.95326 (4) obj. -28383.5 iterations 1
Cbc0038I Pass  20: suminf.    1.74661 (4) obj. -28383.5 iterations 2
Cbc0038I Pass  21: suminf.    0.13454 (4) obj. -28383.5 iterations 6
Cbc0038I Pass  22: suminf.    0.13454 (4) obj. -28383.5 iterations 0
Cbc0038I Pass  23: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I Pass  24: suminf.    0.70686 (4) obj. -28383.5 iterations 3
Cbc0038I Pass  25: suminf.    0.95326 (4) obj. -28383.5 iterations 5
Cbc0038I Pass  26: suminf.    0.95326 (4) obj. -28383.5 iterations 1
Cbc0038I Pass  27: suminf.    1.74661 (4) obj. -28383.5 iterations 2
Cbc0038I Pass  28: suminf.    0.13454 (4) obj. -28383.5 iterations 6
Cbc0038I Pass  29: suminf.    0.13454 (4) obj. -28383.5 iterations 0
Cbc0038I Pass  30: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 67 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -28098.1 to -28212.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -28897.3
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.37671 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  31: suminf.    1.39109 (4) obj. -28897.3 iterations 11
Cbc0038I Pass  32: suminf.    1.39109 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  33: suminf.    0.37671 (4) obj. -28897.3 iterations 15
Cbc0038I Pass  34: suminf.    1.20737 (4) obj. -28897.3 iterations 19
Cbc0038I Pass  35: suminf.    0.37011 (4) obj. -28897.3 iterations 15
Cbc0038I Pass  36: suminf.    1.60618 (4) obj. -28897.3 iterations 8
Cbc0038I Pass  37: suminf.    1.62748 (6) obj. -28897.3 iterations 6
Cbc0038I Pass  38: suminf.    0.37011 (4) obj. -28897.3 iterations 13
Cbc0038I Pass  39: suminf.    0.72346 (4) obj. -28897.3 iterations 12
Cbc0038I Pass  40: suminf.    0.77108 (8) obj. -28897.3 iterations 16
Cbc0038I Pass  41: suminf.    0.49227 (2) obj. -28993.1 iterations 10
Cbc0038I Pass  42: suminf.    0.56022 (2) obj. -28897.3 iterations 4
Cbc0038I Pass  43: suminf.    2.83699 (7) obj. -28897.3 iterations 19
Cbc0038I Pass  44: suminf.    1.74333 (9) obj. -28897.3 iterations 9
Cbc0038I Pass  45: suminf.    1.12210 (6) obj. -28897.3 iterations 2
Cbc0038I Pass  46: suminf.    0.37671 (4) obj. -28897.3 iterations 11
Cbc0038I Pass  47: suminf.    0.37671 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  48: suminf.    1.39109 (4) obj. -28897.3 iterations 10
Cbc0038I Pass  49: suminf.    1.39109 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  50: suminf.    0.37671 (4) obj. -28897.3 iterations 13
Cbc0038I Pass  51: suminf.    2.11383 (6) obj. -28897.3 iterations 19
Cbc0038I Pass  52: suminf.    0.37671 (4) obj. -28897.3 iterations 9
Cbc0038I Pass  53: suminf.    0.37671 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  54: suminf.    1.39109 (4) obj. -28897.3 iterations 9
Cbc0038I Pass  55: suminf.    1.39109 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  56: suminf.    0.37671 (4) obj. -28897.3 iterations 12
Cbc0038I Pass  57: suminf.    1.79212 (8) obj. -28897.3 iterations 16
Cbc0038I Pass  58: suminf.    0.99330 (3) obj. -28897.3 iterations 10
Cbc0038I Pass  59: suminf.    0.35827 (1) obj. -28897.3 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 67 columns, reduced to 35 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -28212.8 to -30241.3 (0.04 seconds)
Cbc0038I Round again with cutoff of -30454.6
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  59: suminf.    1.17500 (6) obj. -30454.6 iterations 5
Cbc0038I Pass  60: suminf.    1.79138 (6) obj. -30454.6 iterations 11
Cbc0038I Pass  61: suminf.    1.65812 (8) obj. -30454.6 iterations 10
Cbc0038I Pass  62: suminf.    1.65812 (8) obj. -30454.6 iterations 1
Cbc0038I Pass  63: suminf.    1.57925 (6) obj. -30454.6 iterations 11
Cbc0038I Pass  64: suminf.    1.57925 (6) obj. -30454.6 iterations 1
Cbc0038I Pass  65: suminf.    1.57925 (6) obj. -30454.6 iterations 7
Cbc0038I Pass  66: suminf.    1.49103 (6) obj. -30454.6 iterations 11
Cbc0038I Pass  67: suminf.    1.55234 (6) obj. -30454.6 iterations 9
Cbc0038I Pass  68: suminf.    1.64841 (6) obj. -30454.6 iterations 10
Cbc0038I Pass  69: suminf.    0.71899 (3) obj. -30454.6 iterations 11
Cbc0038I Pass  70: suminf.    0.71899 (3) obj. -30454.6 iterations 2
Cbc0038I Pass  71: suminf.    1.17500 (6) obj. -30454.6 iterations 13
Cbc0038I Pass  72: suminf.    1.79138 (6) obj. -30454.6 iterations 9
Cbc0038I Pass  73: suminf.    1.65916 (9) obj. -30454.6 iterations 7
Cbc0038I Pass  74: suminf.    1.65812 (8) obj. -30454.6 iterations 4
Cbc0038I Pass  75: suminf.    1.57925 (6) obj. -30454.6 iterations 10
Cbc0038I Pass  76: suminf.    1.19165 (6) obj. -30454.6 iterations 6
Cbc0038I Pass  77: suminf.    1.76435 (7) obj. -30454.6 iterations 9
Cbc0038I Pass  78: suminf.    0.71899 (3) obj. -30454.6 iterations 15
Cbc0038I Pass  79: suminf.    0.71899 (3) obj. -30454.6 iterations 2
Cbc0038I Pass  80: suminf.    1.17500 (6) obj. -30454.6 iterations 13
Cbc0038I Pass  81: suminf.    1.79138 (6) obj. -30454.6 iterations 9
Cbc0038I Pass  82: suminf.    0.44499 (4) obj. -30454.6 iterations 7
Cbc0038I Pass  83: suminf.    0.21917 (3) obj. -30454.6 iterations 6
Cbc0038I Pass  84: suminf.    1.37292 (6) obj. -30454.6 iterations 12
Cbc0038I Pass  85: suminf.    1.43238 (6) obj. -30454.6 iterations 8
Cbc0038I Pass  86: suminf.    1.57925 (6) obj. -30454.6 iterations 5
Cbc0038I Pass  87: suminf.    1.33876 (6) obj. -30454.6 iterations 7
Cbc0038I Pass  88: suminf.    1.33876 (6) obj. -30454.6 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 67 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30241.3 - took 0.03 seconds
Cbc0012I Integer solution of -30241.29 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 123 rows 67 columns, reduced to 6 rows 6 columns
Cbc0031I 2 added rows had average density of 8.5
Cbc0013I At root node, 19 cuts changed objective from -30952.367 to -30241.29 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.8 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30241.29, took 8 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-102) rows, 111 (-91) columns and 1725 (-3928) elements
Clp1000I sum of infeasibilities 2.633e-07 - average 2.58137e-09, 53 fixed columns
Coin0506I Presolve 48 (-54) rows, 49 (-62) columns and 380 (-1345) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 30972.916
Clp0000I Optimal - objective value 30972.916
Coin0511I After Postsolve, objective 30972.916, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0292331 - largest nonzero change 2.5425018e-05 ( 0.0016756202%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 30988.676
Clp0000I Optimal - objective value 30988.676
Clp0000I Optimal - objective value 30988.676
Coin0511I After Postsolve, objective 30988.676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30988.67637 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 111 columns (111 integer (111 of which binary)) and 1733 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.484%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 5.52878
Cbc0038I Pass   1: suminf.    2.86616 (24) obj. -28122.6 iterations 31
Cbc0038I Solution found of -28098.1
Cbc0038I Rounding solution of -30241.3 is better than previous of -28098.1

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 111 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -30314.7
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 2
Cbc0038I Pass   2: suminf.    3.33296 (27) obj. -30314.7 iterations 13
Cbc0038I Pass   3: suminf.    3.27234 (32) obj. -30314.7 iterations 11
Cbc0038I Pass   4: suminf.    0.93951 (19) obj. -30314.7 iterations 14
Cbc0038I Pass   5: suminf.    0.08658 (8) obj. -30314.7 iterations 11
Cbc0038I Pass   6: suminf.    0.71152 (3) obj. -30314.7 iterations 17
Cbc0038I Pass   7: suminf.    0.08060 (3) obj. -30314.7 iterations 8
Cbc0038I Pass   8: suminf.    1.25795 (9) obj. -30314.7 iterations 17
Cbc0038I Pass   9: suminf.    1.25795 (9) obj. -30314.7 iterations 3
Cbc0038I Pass  10: suminf.    0.80294 (8) obj. -30314.7 iterations 17
Cbc0038I Pass  11: suminf.    0.80294 (8) obj. -30314.7 iterations 1
Cbc0038I Pass  12: suminf.    0.91667 (3) obj. -30549 iterations 14
Cbc0038I Pass  13: suminf.    0.55563 (7) obj. -30314.7 iterations 4
Cbc0038I Pass  14: suminf.    0.11029 (4) obj. -30314.7 iterations 16
Cbc0038I Pass  15: suminf.    0.08574 (3) obj. -30314.7 iterations 12
Cbc0038I Pass  16: suminf.    1.49728 (5) obj. -30314.7 iterations 13
Cbc0038I Pass  17: suminf.    0.11029 (4) obj. -30314.7 iterations 14
Cbc0038I Pass  18: suminf.    2.15436 (18) obj. -30314.7 iterations 42
Cbc0038I Pass  19: suminf.    2.05464 (15) obj. -30314.7 iterations 8
Cbc0038I Pass  20: suminf.    0.11293 (4) obj. -30314.7 iterations 28
Cbc0038I Pass  21: suminf.    0.08779 (3) obj. -30314.7 iterations 12
Cbc0038I Pass  22: suminf.    1.49805 (5) obj. -30314.7 iterations 10
Cbc0038I Pass  23: suminf.    0.11293 (4) obj. -30314.7 iterations 13
Cbc0038I Pass  24: suminf.    0.77511 (8) obj. -30314.7 iterations 19
Cbc0038I Pass  25: suminf.    0.77511 (8) obj. -30314.7 iterations 1
Cbc0038I Pass  26: suminf.    1.46190 (9) obj. -30314.7 iterations 17
Cbc0038I Pass  27: suminf.    0.11425 (4) obj. -30314.7 iterations 12
Cbc0038I Pass  28: suminf.    0.08882 (3) obj. -30314.7 iterations 13
Cbc0038I Pass  29: suminf.    1.33927 (8) obj. -30314.7 iterations 18
Cbc0038I Pass  30: suminf.    1.33927 (8) obj. -30314.7 iterations 3
Cbc0038I Pass  31: suminf.    0.80017 (7) obj. -30314.7 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 111 columns, reduced to 26 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -30241.3 - took 0.02 seconds
Cbc0012I Integer solution of -30241.29 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 102 rows 111 columns, reduced to 13 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 17
Cbc0013I At root node, 6 cuts changed objective from -30951.983 to -30287.232 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 93 row cuts average 4.1 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 37.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30241.29, took 164 iterations and 0 nodes (0.17 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 123 (-82) rows, 67 (-36) columns and 373 (-230) elements
Clp0000I Optimal - objective value 30952.367
Coin0511I After Postsolve, objective 30952.367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30952.36672 - 31 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 123 rows, 67 columns (66 integer (66 of which binary)) and 373 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 1.84658
Cbc0038I Solution found of -28098.1
Cbc0038I Relaxing continuous gives -28098.1
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 67 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28383.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.13454 (4) obj. -28383.5 iterations 25
Cbc0038I Pass   2: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I Pass   3: suminf.    0.70686 (4) obj. -28383.5 iterations 3
Cbc0038I Pass   4: suminf.    0.95326 (4) obj. -28383.5 iterations 5
Cbc0038I Pass   5: suminf.    0.95326 (4) obj. -28383.5 iterations 1
Cbc0038I Pass   6: suminf.    1.74661 (4) obj. -28383.5 iterations 2
Cbc0038I Pass   7: suminf.    0.13454 (4) obj. -28383.5 iterations 6
Cbc0038I Pass   8: suminf.    0.13454 (4) obj. -28383.5 iterations 0
Cbc0038I Pass   9: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I Pass  10: suminf.    0.70686 (4) obj. -28383.5 iterations 3
Cbc0038I Pass  11: suminf.    0.95326 (4) obj. -28383.5 iterations 5
Cbc0038I Pass  12: suminf.    0.95326 (4) obj. -28383.5 iterations 1
Cbc0038I Pass  13: suminf.    1.74661 (4) obj. -28383.5 iterations 2
Cbc0038I Pass  14: suminf.    0.13454 (4) obj. -28383.5 iterations 6
Cbc0038I Pass  15: suminf.    0.13454 (4) obj. -28383.5 iterations 0
Cbc0038I Pass  16: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I Pass  17: suminf.    0.70686 (4) obj. -28383.5 iterations 3
Cbc0038I Pass  18: suminf.    0.95326 (4) obj. -28383.5 iterations 5
Cbc0038I Pass  19: suminf.    0.95326 (4) obj. -28383.5 iterations 1
Cbc0038I Pass  20: suminf.    1.74661 (4) obj. -28383.5 iterations 2
Cbc0038I Pass  21: suminf.    0.13454 (4) obj. -28383.5 iterations 6
Cbc0038I Pass  22: suminf.    0.13454 (4) obj. -28383.5 iterations 0
Cbc0038I Pass  23: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I Pass  24: suminf.    0.70686 (4) obj. -28383.5 iterations 3
Cbc0038I Pass  25: suminf.    0.95326 (4) obj. -28383.5 iterations 5
Cbc0038I Pass  26: suminf.    0.95326 (4) obj. -28383.5 iterations 1
Cbc0038I Pass  27: suminf.    1.74661 (4) obj. -28383.5 iterations 2
Cbc0038I Pass  28: suminf.    0.13454 (4) obj. -28383.5 iterations 6
Cbc0038I Pass  29: suminf.    0.13454 (4) obj. -28383.5 iterations 0
Cbc0038I Pass  30: suminf.    1.16001 (4) obj. -28383.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 67 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -28098.1 to -28212.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -28897.3
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.37671 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  31: suminf.    1.39109 (4) obj. -28897.3 iterations 11
Cbc0038I Pass  32: suminf.    1.39109 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  33: suminf.    0.37671 (4) obj. -28897.3 iterations 15
Cbc0038I Pass  34: suminf.    1.20737 (4) obj. -28897.3 iterations 19
Cbc0038I Pass  35: suminf.    0.37011 (4) obj. -28897.3 iterations 15
Cbc0038I Pass  36: suminf.    1.60618 (4) obj. -28897.3 iterations 8
Cbc0038I Pass  37: suminf.    1.62748 (6) obj. -28897.3 iterations 6
Cbc0038I Pass  38: suminf.    0.37011 (4) obj. -28897.3 iterations 13
Cbc0038I Pass  39: suminf.    0.72346 (4) obj. -28897.3 iterations 12
Cbc0038I Pass  40: suminf.    0.77108 (8) obj. -28897.3 iterations 16
Cbc0038I Pass  41: suminf.    0.49227 (2) obj. -28993.1 iterations 10
Cbc0038I Pass  42: suminf.    0.56022 (2) obj. -28897.3 iterations 4
Cbc0038I Pass  43: suminf.    2.83699 (7) obj. -28897.3 iterations 19
Cbc0038I Pass  44: suminf.    1.74333 (9) obj. -28897.3 iterations 9
Cbc0038I Pass  45: suminf.    1.12210 (6) obj. -28897.3 iterations 2
Cbc0038I Pass  46: suminf.    0.37671 (4) obj. -28897.3 iterations 11
Cbc0038I Pass  47: suminf.    0.37671 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  48: suminf.    1.39109 (4) obj. -28897.3 iterations 10
Cbc0038I Pass  49: suminf.    1.39109 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  50: suminf.    0.37671 (4) obj. -28897.3 iterations 13
Cbc0038I Pass  51: suminf.    2.11383 (6) obj. -28897.3 iterations 19
Cbc0038I Pass  52: suminf.    0.37671 (4) obj. -28897.3 iterations 9
Cbc0038I Pass  53: suminf.    0.37671 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  54: suminf.    1.39109 (4) obj. -28897.3 iterations 9
Cbc0038I Pass  55: suminf.    1.39109 (4) obj. -28897.3 iterations 0
Cbc0038I Pass  56: suminf.    0.37671 (4) obj. -28897.3 iterations 12
Cbc0038I Pass  57: suminf.    1.79212 (8) obj. -28897.3 iterations 16
Cbc0038I Pass  58: suminf.    0.99330 (3) obj. -28897.3 iterations 10
Cbc0038I Pass  59: suminf.    0.35827 (1) obj. -28897.3 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 67 columns, reduced to 35 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -28212.8 to -30241.3 (0.04 seconds)
Cbc0038I Round again with cutoff of -30454.6
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  59: suminf.    1.17500 (6) obj. -30454.6 iterations 5
Cbc0038I Pass  60: suminf.    1.79138 (6) obj. -30454.6 iterations 11
Cbc0038I Pass  61: suminf.    1.65812 (8) obj. -30454.6 iterations 10
Cbc0038I Pass  62: suminf.    1.65812 (8) obj. -30454.6 iterations 1
Cbc0038I Pass  63: suminf.    1.57925 (6) obj. -30454.6 iterations 11
Cbc0038I Pass  64: suminf.    1.57925 (6) obj. -30454.6 iterations 1
Cbc0038I Pass  65: suminf.    1.57925 (6) obj. -30454.6 iterations 7
Cbc0038I Pass  66: suminf.    1.49103 (6) obj. -30454.6 iterations 11
Cbc0038I Pass  67: suminf.    1.55234 (6) obj. -30454.6 iterations 9
Cbc0038I Pass  68: suminf.    1.64841 (6) obj. -30454.6 iterations 10
Cbc0038I Pass  69: suminf.    0.71899 (3) obj. -30454.6 iterations 11
Cbc0038I Pass  70: suminf.    0.71899 (3) obj. -30454.6 iterations 2
Cbc0038I Pass  71: suminf.    1.17500 (6) obj. -30454.6 iterations 13
Cbc0038I Pass  72: suminf.    1.79138 (6) obj. -30454.6 iterations 9
Cbc0038I Pass  73: suminf.    1.65916 (9) obj. -30454.6 iterations 7
Cbc0038I Pass  74: suminf.    1.65812 (8) obj. -30454.6 iterations 4
Cbc0038I Pass  75: suminf.    1.57925 (6) obj. -30454.6 iterations 10
Cbc0038I Pass  76: suminf.    1.19165 (6) obj. -30454.6 iterations 6
Cbc0038I Pass  77: suminf.    1.76435 (7) obj. -30454.6 iterations 9
Cbc0038I Pass  78: suminf.    0.71899 (3) obj. -30454.6 iterations 15
Cbc0038I Pass  79: suminf.    0.71899 (3) obj. -30454.6 iterations 2
Cbc0038I Pass  80: suminf.    1.17500 (6) obj. -30454.6 iterations 13
Cbc0038I Pass  81: suminf.    1.79138 (6) obj. -30454.6 iterations 9
Cbc0038I Pass  82: suminf.    0.44499 (4) obj. -30454.6 iterations 7
Cbc0038I Pass  83: suminf.    0.21917 (3) obj. -30454.6 iterations 6
Cbc0038I Pass  84: suminf.    1.37292 (6) obj. -30454.6 iterations 12
Cbc0038I Pass  85: suminf.    1.43238 (6) obj. -30454.6 iterations 8
Cbc0038I Pass  86: suminf.    1.57925 (6) obj. -30454.6 iterations 5
Cbc0038I Pass  87: suminf.    1.33876 (6) obj. -30454.6 iterations 7
Cbc0038I Pass  88: suminf.    1.33876 (6) obj. -30454.6 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 67 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -30241.3 - took 0.04 seconds
Cbc0012I Integer solution of -30241.29 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 123 rows 67 columns, reduced to 6 rows 6 columns
Cbc0031I 2 added rows had average density of 8.5
Cbc0013I At root node, 19 cuts changed objective from -30952.367 to -30241.29 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.8 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30241.29, took 8 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-103) rows, 111 (-92) columns and 1725 (-3929) elements
Clp1000I sum of infeasibilities 2.633e-07 - average 2.58137e-09, 53 fixed columns
Coin0506I Presolve 48 (-54) rows, 49 (-62) columns and 380 (-1345) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 30972.916
Clp0000I Optimal - objective value 30972.916
Coin0511I After Postsolve, objective 30972.916, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0292331 - largest nonzero change 2.5425018e-05 ( 0.0016756202%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 30988.676
Clp0000I Optimal - objective value 30988.676
Clp0000I Optimal - objective value 30988.676
Coin0511I After Postsolve, objective 30988.676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30988.67637 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 111 columns (111 integer (111 of which binary)) and 1733 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.484%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 5.52878
Cbc0038I Pass   1: suminf.    2.86616 (24) obj. -28122.6 iterations 31
Cbc0038I Solution found of -28098.1
Cbc0038I Rounding solution of -30241.3 is better than previous of -28098.1

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 111 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -30314.7
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 2
Cbc0038I Pass   2: suminf.    3.33296 (27) obj. -30314.7 iterations 13
Cbc0038I Pass   3: suminf.    3.27234 (32) obj. -30314.7 iterations 11
Cbc0038I Pass   4: suminf.    0.93951 (19) obj. -30314.7 iterations 14
Cbc0038I Pass   5: suminf.    0.08658 (8) obj. -30314.7 iterations 11
Cbc0038I Pass   6: suminf.    0.71152 (3) obj. -30314.7 iterations 17
Cbc0038I Pass   7: suminf.    0.08060 (3) obj. -30314.7 iterations 8
Cbc0038I Pass   8: suminf.    1.25795 (9) obj. -30314.7 iterations 17
Cbc0038I Pass   9: suminf.    1.25795 (9) obj. -30314.7 iterations 3
Cbc0038I Pass  10: suminf.    0.80294 (8) obj. -30314.7 iterations 17
Cbc0038I Pass  11: suminf.    0.80294 (8) obj. -30314.7 iterations 1
Cbc0038I Pass  12: suminf.    0.91667 (3) obj. -30549 iterations 14
Cbc0038I Pass  13: suminf.    0.55563 (7) obj. -30314.7 iterations 4
Cbc0038I Pass  14: suminf.    0.11029 (4) obj. -30314.7 iterations 16
Cbc0038I Pass  15: suminf.    0.08574 (3) obj. -30314.7 iterations 12
Cbc0038I Pass  16: suminf.    1.49728 (5) obj. -30314.7 iterations 13
Cbc0038I Pass  17: suminf.    0.11029 (4) obj. -30314.7 iterations 14
Cbc0038I Pass  18: suminf.    2.15436 (18) obj. -30314.7 iterations 42
Cbc0038I Pass  19: suminf.    2.05464 (15) obj. -30314.7 iterations 8
Cbc0038I Pass  20: suminf.    0.11293 (4) obj. -30314.7 iterations 28
Cbc0038I Pass  21: suminf.    0.08779 (3) obj. -30314.7 iterations 12
Cbc0038I Pass  22: suminf.    1.49805 (5) obj. -30314.7 iterations 10
Cbc0038I Pass  23: suminf.    0.11293 (4) obj. -30314.7 iterations 13
Cbc0038I Pass  24: suminf.    0.77511 (8) obj. -30314.7 iterations 19
Cbc0038I Pass  25: suminf.    0.77511 (8) obj. -30314.7 iterations 1
Cbc0038I Pass  26: suminf.    1.46190 (9) obj. -30314.7 iterations 17
Cbc0038I Pass  27: suminf.    0.11425 (4) obj. -30314.7 iterations 12
Cbc0038I Pass  28: suminf.    0.08882 (3) obj. -30314.7 iterations 13
Cbc0038I Pass  29: suminf.    1.33927 (8) obj. -30314.7 iterations 18
Cbc0038I Pass  30: suminf.    1.33927 (8) obj. -30314.7 iterations 3
Cbc0038I Pass  31: suminf.    0.80017 (7) obj. -30314.7 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 111 columns, reduced to 26 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -30241.3 - took 0.02 seconds
Cbc0012I Integer solution of -30241.29 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 102 rows 111 columns, reduced to 13 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 17
Cbc0013I At root node, 6 cuts changed objective from -30951.983 to -30287.232 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 93 row cuts average 4.1 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 81 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 37.1 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30241.29, took 164 iterations and 0 nodes (0.17 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.18

