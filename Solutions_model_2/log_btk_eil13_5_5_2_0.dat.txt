Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 11 (-4) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 4.36909e-05 - average 2.29952e-06, 5 fixed columns
Coin0506I Presolve 8 (-11) rows, 5 (-6) columns and 19 (-33) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 1013.9207
Clp0000I Optimal - objective value 1013.9207
Coin0511I After Postsolve, objective 1013.9207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1013.9207
Clp0000I Optimal - objective value 1013.9207
Clp0000I Optimal - objective value 1013.9207
Coin0511I After Postsolve, objective 1013.9207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1013.920658 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 11 columns (10 integer (10 of which binary)) and 53 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.277%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.3
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -662.9 iterations 5
Cbc0038I Solution found of -662.9
Cbc0038I Relaxing continuous gives -662.9
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -662.9 to -680.4 (0.01 seconds)
Cbc0038I Round again with cutoff of -711.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.14024 (1) obj. -711.8 iterations 1
Cbc0038I Pass   3: suminf.    0.06667 (1) obj. -711.8 iterations 5
Cbc0038I Pass   4: suminf.    0.84228 (3) obj. -711.8 iterations 5
Cbc0038I Pass   5: suminf.    0.06667 (1) obj. -711.8 iterations 5
Cbc0038I Pass   6: suminf.    0.09005 (1) obj. -711.8 iterations 2
Cbc0038I Pass   7: suminf.    0.09005 (1) obj. -711.8 iterations 0
Cbc0038I Pass   8: suminf.    1.22127 (3) obj. -711.8 iterations 3
Cbc0038I Pass   9: suminf.    0.62692 (2) obj. -711.8 iterations 2
Cbc0038I Pass  10: suminf.    0.26614 (2) obj. -711.8 iterations 1
Cbc0038I Pass  11: suminf.    0.06667 (1) obj. -711.8 iterations 6
Cbc0038I Pass  12: suminf.    0.06667 (1) obj. -711.8 iterations 0
Cbc0038I Pass  13: suminf.    0.09005 (1) obj. -711.8 iterations 2
Cbc0038I Pass  14: suminf.    0.09099 (2) obj. -711.8 iterations 1
Cbc0038I Pass  15: suminf.    0.09005 (1) obj. -711.8 iterations 1
Cbc0038I Pass  16: suminf.    0.84848 (2) obj. -711.8 iterations 2
Cbc0038I Pass  17: suminf.    0.09026 (2) obj. -711.8 iterations 3
Cbc0038I Pass  18: suminf.    0.09026 (2) obj. -711.8 iterations 0
Cbc0038I Pass  19: suminf.    0.09026 (2) obj. -711.8 iterations 0
Cbc0038I Pass  20: suminf.    0.16093 (3) obj. -711.8 iterations 1
Cbc0038I Pass  21: suminf.    0.09026 (2) obj. -711.8 iterations 1
Cbc0038I Pass  22: suminf.    0.06667 (1) obj. -711.8 iterations 7
Cbc0038I Pass  23: suminf.    0.83248 (4) obj. -711.8 iterations 2
Cbc0038I Pass  24: suminf.    0.83248 (4) obj. -711.8 iterations 0
Cbc0038I Pass  25: suminf.    0.72834 (3) obj. -711.8 iterations 4
Cbc0038I Pass  26: suminf.    0.09005 (1) obj. -711.8 iterations 2
Cbc0038I Pass  27: suminf.    0.94373 (3) obj. -711.8 iterations 5
Cbc0038I Pass  28: suminf.    0.93750 (3) obj. -711.8 iterations 1
Cbc0038I Pass  29: suminf.    0.14024 (1) obj. -711.8 iterations 5
Cbc0038I Pass  30: suminf.    0.14024 (1) obj. -711.8 iterations 0
Cbc0038I Pass  31: suminf.    0.06667 (1) obj. -711.8 iterations 4
Cbc0038I Rounding solution of -697.4 is better than previous of -680.4

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -768.25
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.30212 (1) obj. -768.25 iterations 0
Cbc0038I Pass  32: suminf.    0.06667 (1) obj. -768.25 iterations 5
Cbc0038I Pass  33: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  34: suminf.    0.06667 (1) obj. -768.25 iterations 1
Cbc0038I Pass  35: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  36: suminf.    0.06667 (1) obj. -768.25 iterations 5
Cbc0038I Pass  37: suminf.    0.06667 (1) obj. -768.25 iterations 1
Cbc0038I Pass  38: suminf.    0.06667 (1) obj. -768.25 iterations 1
Cbc0038I Pass  39: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  40: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  41: suminf.    0.87490 (3) obj. -768.25 iterations 2
Cbc0038I Pass  42: suminf.    0.86601 (4) obj. -768.25 iterations 1
Cbc0038I Pass  43: suminf.    0.62749 (3) obj. -768.25 iterations 4
Cbc0038I Pass  44: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  45: suminf.    0.25458 (2) obj. -768.25 iterations 2
Cbc0038I Pass  46: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  47: suminf.    0.06667 (1) obj. -768.25 iterations 5
Cbc0038I Pass  48: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  49: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  50: suminf.    0.86601 (4) obj. -768.25 iterations 2
Cbc0038I Pass  51: suminf.    0.86601 (4) obj. -768.25 iterations 0
Cbc0038I Pass  52: suminf.    0.62749 (3) obj. -768.25 iterations 4
Cbc0038I Pass  53: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  54: suminf.    0.65050 (2) obj. -768.25 iterations 5
Cbc0038I Pass  55: suminf.    0.42529 (2) obj. -768.25 iterations 1
Cbc0038I Pass  56: suminf.    0.06667 (1) obj. -768.25 iterations 6
Cbc0038I Pass  57: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  58: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  59: suminf.    0.84615 (3) obj. -768.25 iterations 5
Cbc0038I Pass  60: suminf.    0.30212 (1) obj. -768.25 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 13 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -697.4 - took 0.01 seconds
Cbc0012I Integer solution of -697.4 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 11 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -993.86789 to -993.86789 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -697.4, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-8) rows, 21 (-5) columns and 107 (-46) elements
Clp1000I sum of infeasibilities 7.82937e-05 - average 3.91469e-06, 18 fixed columns
Coin0506I Presolve 3 (-17) rows, 3 (-18) columns and 7 (-100) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 956.33369
Clp0000I Optimal - objective value 956.33369
Coin0511I After Postsolve, objective 956.33369, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9005125 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 1033.0878
Clp0000I Optimal - objective value 1033.0878
Clp0000I Optimal - objective value 1033.0878
Coin0511I After Postsolve, objective 1033.0878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1033.087796 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 21 columns (21 integer (21 of which binary)) and 119 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.960%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.430741
Cbc0038I Pass   1: suminf.    0.31667 (3) obj. -1002.04 iterations 3
Cbc0038I Solution found of -649.4
Cbc0038I Rounding solution of -680.4 is better than previous of -649.4

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -712.65
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.31667 (3) obj. -1002.04 iterations 0
Cbc0038I Pass   3: suminf.    0.18139 (1) obj. -712.65 iterations 3
Cbc0038I Pass   4: suminf.    0.06667 (1) obj. -974.853 iterations 2
Cbc0038I Pass   5: suminf.    0.36786 (3) obj. -921.686 iterations 6
Cbc0038I Pass   6: suminf.    0.26786 (2) obj. -921.586 iterations 1
Cbc0038I Pass   7: suminf.    0.40621 (1) obj. -712.65 iterations 2
Cbc0038I Pass   8: suminf.    0.12500 (1) obj. -911.3 iterations 1
Cbc0038I Pass   9: suminf.    0.37500 (3) obj. -956.025 iterations 4
Cbc0038I Pass  10: suminf.    0.18333 (2) obj. -991.637 iterations 3
Cbc0038I Pass  11: suminf.    0.18139 (1) obj. -712.65 iterations 3
Cbc0038I Pass  12: suminf.    0.06667 (1) obj. -974.853 iterations 2
Cbc0038I Pass  13: suminf.    0.40409 (1) obj. -712.65 iterations 4
Cbc0038I Pass  14: suminf.    0.06667 (1) obj. -974.853 iterations 4
Cbc0038I Pass  15: suminf.    0.91463 (3) obj. -712.65 iterations 6
Cbc0038I Pass  16: suminf.    0.18333 (2) obj. -982.637 iterations 4
Cbc0038I Pass  17: suminf.    0.20720 (1) obj. -712.65 iterations 3
Cbc0038I Pass  18: suminf.    0.06667 (1) obj. -965.853 iterations 2
Cbc0038I Pass  19: suminf.    0.15741 (2) obj. -929.678 iterations 8
Cbc0038I Pass  20: suminf.    0.06667 (1) obj. -964.853 iterations 4
Cbc0038I Pass  21: suminf.    0.21007 (1) obj. -712.65 iterations 2
Cbc0038I Pass  22: suminf.    0.31288 (4) obj. -712.65 iterations 2
Cbc0038I Pass  23: suminf.    0.21007 (1) obj. -712.65 iterations 2
Cbc0038I Pass  24: suminf.    0.21007 (1) obj. -712.65 iterations 2
Cbc0038I Pass  25: suminf.    0.06667 (1) obj. -964.853 iterations 2
Cbc0038I Pass  26: suminf.    0.21007 (1) obj. -712.65 iterations 2
Cbc0038I Pass  27: suminf.    0.23014 (1) obj. -712.65 iterations 4
Cbc0038I Pass  28: suminf.    0.06667 (1) obj. -957.853 iterations 3
Cbc0038I Pass  29: suminf.    0.23014 (1) obj. -712.65 iterations 3
Cbc0038I Pass  30: suminf.    0.48881 (5) obj. -712.65 iterations 6
Cbc0038I Pass  31: suminf.    0.34022 (2) obj. -712.65 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 21 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -680.4 - took 0.00 seconds
Cbc0012I Integer solution of -680.4 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -697.4 found by DiveCoefficient after 2 iterations and 0 nodes (0.01 seconds)
Cbc0013I At root node, 0 cuts changed objective from -1002.1878 to -697.4 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 3.9 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -697.4, took 2 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 11 (-4) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 4.36909e-05 - average 2.29952e-06, 5 fixed columns
Coin0506I Presolve 8 (-11) rows, 5 (-6) columns and 19 (-33) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 1013.9207
Clp0000I Optimal - objective value 1013.9207
Coin0511I After Postsolve, objective 1013.9207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1013.9207
Clp0000I Optimal - objective value 1013.9207
Clp0000I Optimal - objective value 1013.9207
Coin0511I After Postsolve, objective 1013.9207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1013.920658 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 11 columns (10 integer (10 of which binary)) and 53 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.277%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.3
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -662.9 iterations 5
Cbc0038I Solution found of -662.9
Cbc0038I Relaxing continuous gives -662.9
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -662.9 to -680.4 (0.01 seconds)
Cbc0038I Round again with cutoff of -711.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.14024 (1) obj. -711.8 iterations 1
Cbc0038I Pass   3: suminf.    0.06667 (1) obj. -711.8 iterations 5
Cbc0038I Pass   4: suminf.    0.84228 (3) obj. -711.8 iterations 5
Cbc0038I Pass   5: suminf.    0.06667 (1) obj. -711.8 iterations 5
Cbc0038I Pass   6: suminf.    0.09005 (1) obj. -711.8 iterations 2
Cbc0038I Pass   7: suminf.    0.09005 (1) obj. -711.8 iterations 0
Cbc0038I Pass   8: suminf.    1.22127 (3) obj. -711.8 iterations 3
Cbc0038I Pass   9: suminf.    0.62692 (2) obj. -711.8 iterations 2
Cbc0038I Pass  10: suminf.    0.26614 (2) obj. -711.8 iterations 1
Cbc0038I Pass  11: suminf.    0.06667 (1) obj. -711.8 iterations 6
Cbc0038I Pass  12: suminf.    0.06667 (1) obj. -711.8 iterations 0
Cbc0038I Pass  13: suminf.    0.09005 (1) obj. -711.8 iterations 2
Cbc0038I Pass  14: suminf.    0.09099 (2) obj. -711.8 iterations 1
Cbc0038I Pass  15: suminf.    0.09005 (1) obj. -711.8 iterations 1
Cbc0038I Pass  16: suminf.    0.84848 (2) obj. -711.8 iterations 2
Cbc0038I Pass  17: suminf.    0.09026 (2) obj. -711.8 iterations 3
Cbc0038I Pass  18: suminf.    0.09026 (2) obj. -711.8 iterations 0
Cbc0038I Pass  19: suminf.    0.09026 (2) obj. -711.8 iterations 0
Cbc0038I Pass  20: suminf.    0.16093 (3) obj. -711.8 iterations 1
Cbc0038I Pass  21: suminf.    0.09026 (2) obj. -711.8 iterations 1
Cbc0038I Pass  22: suminf.    0.06667 (1) obj. -711.8 iterations 7
Cbc0038I Pass  23: suminf.    0.83248 (4) obj. -711.8 iterations 2
Cbc0038I Pass  24: suminf.    0.83248 (4) obj. -711.8 iterations 0
Cbc0038I Pass  25: suminf.    0.72834 (3) obj. -711.8 iterations 4
Cbc0038I Pass  26: suminf.    0.09005 (1) obj. -711.8 iterations 2
Cbc0038I Pass  27: suminf.    0.94373 (3) obj. -711.8 iterations 5
Cbc0038I Pass  28: suminf.    0.93750 (3) obj. -711.8 iterations 1
Cbc0038I Pass  29: suminf.    0.14024 (1) obj. -711.8 iterations 5
Cbc0038I Pass  30: suminf.    0.14024 (1) obj. -711.8 iterations 0
Cbc0038I Pass  31: suminf.    0.06667 (1) obj. -711.8 iterations 4
Cbc0038I Rounding solution of -697.4 is better than previous of -680.4

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -768.25
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.30212 (1) obj. -768.25 iterations 0
Cbc0038I Pass  32: suminf.    0.06667 (1) obj. -768.25 iterations 5
Cbc0038I Pass  33: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  34: suminf.    0.06667 (1) obj. -768.25 iterations 1
Cbc0038I Pass  35: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  36: suminf.    0.06667 (1) obj. -768.25 iterations 5
Cbc0038I Pass  37: suminf.    0.06667 (1) obj. -768.25 iterations 1
Cbc0038I Pass  38: suminf.    0.06667 (1) obj. -768.25 iterations 1
Cbc0038I Pass  39: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  40: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  41: suminf.    0.87490 (3) obj. -768.25 iterations 2
Cbc0038I Pass  42: suminf.    0.86601 (4) obj. -768.25 iterations 1
Cbc0038I Pass  43: suminf.    0.62749 (3) obj. -768.25 iterations 4
Cbc0038I Pass  44: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  45: suminf.    0.25458 (2) obj. -768.25 iterations 2
Cbc0038I Pass  46: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  47: suminf.    0.06667 (1) obj. -768.25 iterations 5
Cbc0038I Pass  48: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  49: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  50: suminf.    0.86601 (4) obj. -768.25 iterations 2
Cbc0038I Pass  51: suminf.    0.86601 (4) obj. -768.25 iterations 0
Cbc0038I Pass  52: suminf.    0.62749 (3) obj. -768.25 iterations 4
Cbc0038I Pass  53: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  54: suminf.    0.65050 (2) obj. -768.25 iterations 5
Cbc0038I Pass  55: suminf.    0.42529 (2) obj. -768.25 iterations 1
Cbc0038I Pass  56: suminf.    0.06667 (1) obj. -768.25 iterations 6
Cbc0038I Pass  57: suminf.    0.06667 (1) obj. -768.25 iterations 0
Cbc0038I Pass  58: suminf.    0.25194 (1) obj. -768.25 iterations 2
Cbc0038I Pass  59: suminf.    0.84615 (3) obj. -768.25 iterations 5
Cbc0038I Pass  60: suminf.    0.30212 (1) obj. -768.25 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 11 columns, reduced to 13 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -697.4 - took 0.01 seconds
Cbc0012I Integer solution of -697.4 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 11 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -993.86789 to -993.86789 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -697.4, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 20 (-7) columns and 97 (-57) elements
Clp1000I sum of infeasibilities 9.40308e-05 - average 4.94899e-06, 17 fixed columns
Coin0506I Presolve 3 (-16) rows, 3 (-17) columns and 7 (-90) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 956.33369
Clp0000I Optimal - objective value 956.33369
Coin0511I After Postsolve, objective 956.33369, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9548794 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 1033.0878
Clp0000I Optimal - objective value 1033.0878
Clp0000I Optimal - objective value 1033.0878
Coin0511I After Postsolve, objective 1033.0878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1033.087796 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 20 columns (20 integer (20 of which binary)) and 100 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.482407
Cbc0038I Pass   1: suminf.    0.35556 (3) obj. -1001.45 iterations 3
Cbc0038I Solution found of -649.4
Cbc0038I Rounding solution of -680.4 is better than previous of -649.4

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -712.6
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.35556 (3) obj. -1001.45 iterations 0
Cbc0038I Pass   3: suminf.    0.18124 (1) obj. -712.6 iterations 3
Cbc0038I Pass   4: suminf.    0.06667 (1) obj. -974.853 iterations 2
Cbc0038I Pass   5: suminf.    0.74743 (2) obj. -712.6 iterations 5
Cbc0038I Pass   6: suminf.    0.06667 (1) obj. -968.853 iterations 4
Cbc0038I Pass   7: suminf.    0.19845 (1) obj. -712.6 iterations 2
Cbc0038I Pass   8: suminf.    0.23573 (1) obj. -712.6 iterations 2
Cbc0038I Pass   9: suminf.    0.06667 (1) obj. -955.853 iterations 2
Cbc0038I Pass  10: suminf.    0.23573 (1) obj. -712.6 iterations 2
Cbc0038I Pass  11: suminf.    0.84918 (4) obj. -712.6 iterations 4
Cbc0038I Pass  12: suminf.    0.84918 (4) obj. -712.6 iterations 1
Cbc0038I Pass  13: suminf.    0.06667 (1) obj. -949.853 iterations 6
Cbc0038I Pass  14: suminf.    0.06667 (1) obj. -949.853 iterations 0
Cbc0038I Pass  15: suminf.    0.25294 (1) obj. -712.6 iterations 2
Cbc0038I Pass  16: suminf.    0.42200 (5) obj. -712.6 iterations 6
Cbc0038I Pass  17: suminf.    0.22426 (1) obj. -712.6 iterations 3
Cbc0038I Pass  18: suminf.    0.06667 (1) obj. -959.853 iterations 2
Cbc0038I Pass  19: suminf.    0.74240 (3) obj. -712.6 iterations 9
Cbc0038I Pass  20: suminf.    0.35556 (3) obj. -995.453 iterations 2
Cbc0038I Pass  21: suminf.    0.19845 (1) obj. -712.6 iterations 3
Cbc0038I Pass  22: suminf.    0.06667 (1) obj. -968.853 iterations 2
Cbc0038I Pass  23: suminf.    0.25926 (2) obj. -924.409 iterations 4
Cbc0038I Pass  24: suminf.    0.06667 (1) obj. -965.853 iterations 4
Cbc0038I Pass  25: suminf.    0.20705 (1) obj. -712.6 iterations 2
Cbc0038I Pass  26: suminf.    0.06667 (1) obj. -965.853 iterations 2
Cbc0038I Pass  27: suminf.    0.40629 (1) obj. -712.6 iterations 6
Cbc0038I Pass  28: suminf.    0.14286 (1) obj. -898.686 iterations 1
Cbc0038I Pass  29: suminf.    0.40629 (1) obj. -712.6 iterations 1
Cbc0038I Pass  30: suminf.    0.54167 (4) obj. -910.737 iterations 10
Cbc0038I Pass  31: suminf.    0.30952 (2) obj. -898.686 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 20 columns, reduced to 16 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -680.4 - took 0.00 seconds
Cbc0012I Integer solution of -680.4 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -697.4 found by DiveCoefficient after 2 iterations and 0 nodes (0.01 seconds)
Cbc0013I At root node, 0 cuts changed objective from -1001.6219 to -697.4 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 3.9 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -697.4, took 2 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

