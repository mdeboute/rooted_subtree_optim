Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-27) rows, 23 (-12) columns and 123 (-72) elements
Clp1000I sum of infeasibilities 0.00994949 - average 0.000236893, 1 fixed columns
Coin0506I Presolve 40 (-2) rows, 22 (-1) columns and 117 (-6) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 98.341546
Clp0000I Optimal - objective value 98.341546
Coin0511I After Postsolve, objective 98.341546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.341546
Clp0000I Optimal - objective value 98.341546
Clp0000I Optimal - objective value 98.341546
Coin0511I After Postsolve, objective 98.341546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.34154615 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 23 columns (22 integer (22 of which binary)) and 122 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.885%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.05076
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 51.1111 iterations 18
Cbc0038I Solution found of 51.1111
Cbc0038I Relaxing continuous gives 51.1111
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 23 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 51.1111 to -33.8889 (0.01 seconds)
Cbc0038I Round again with cutoff of -40.3343
Cbc0038I Pass   2: suminf.    1.60046 (4) obj. -40.3343 iterations 3
Cbc0038I Pass   3: suminf.    0.55871 (3) obj. -40.3343 iterations 4
Cbc0038I Pass   4: suminf.    1.17043 (4) obj. -40.3343 iterations 4
Cbc0038I Pass   5: suminf.    1.17043 (4) obj. -40.3343 iterations 0
Cbc0038I Pass   6: suminf.    0.55871 (3) obj. -40.3343 iterations 4
Cbc0038I Pass   7: suminf.    1.36705 (6) obj. -40.3343 iterations 4
Cbc0038I Pass   8: suminf.    1.36705 (6) obj. -40.3343 iterations 1
Cbc0038I Pass   9: suminf.    1.28634 (3) obj. -40.3343 iterations 11
Cbc0038I Pass  10: suminf.    0.60542 (4) obj. -40.3343 iterations 4
Cbc0038I Pass  11: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I Pass  12: suminf.    0.93870 (3) obj. -40.3343 iterations 3
Cbc0038I Pass  13: suminf.    0.93119 (3) obj. -40.3343 iterations 1
Cbc0038I Pass  14: suminf.    1.05973 (3) obj. -40.3343 iterations 6
Cbc0038I Pass  15: suminf.    0.60542 (4) obj. -40.3343 iterations 3
Cbc0038I Pass  16: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I Pass  17: suminf.    0.93870 (3) obj. -40.3343 iterations 3
Cbc0038I Pass  18: suminf.    0.93119 (3) obj. -40.3343 iterations 1
Cbc0038I Pass  19: suminf.    1.05973 (3) obj. -40.3343 iterations 6
Cbc0038I Pass  20: suminf.    0.60542 (4) obj. -40.3343 iterations 3
Cbc0038I Pass  21: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I Pass  22: suminf.    0.93870 (3) obj. -40.3343 iterations 3
Cbc0038I Pass  23: suminf.    0.93119 (3) obj. -40.3343 iterations 1
Cbc0038I Pass  24: suminf.    1.05973 (3) obj. -40.3343 iterations 6
Cbc0038I Pass  25: suminf.    0.60542 (4) obj. -40.3343 iterations 3
Cbc0038I Pass  26: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I Pass  27: suminf.    0.93870 (3) obj. -40.3343 iterations 3
Cbc0038I Pass  28: suminf.    0.93119 (3) obj. -40.3343 iterations 1
Cbc0038I Pass  29: suminf.    1.05973 (3) obj. -40.3343 iterations 6
Cbc0038I Pass  30: suminf.    0.60542 (4) obj. -40.3343 iterations 3
Cbc0038I Pass  31: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 23 columns, reduced to 36 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -33.8889 - took 0.03 seconds
Cbc0012I Integer solution of -33.8889 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 8 added rows had average density of 20.375
Cbc0013I At root node, 8 cuts changed objective from -98.341546 to -48.260496 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1141 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 584 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.742 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.8889 best solution, best possible -48.260197 (1.47 seconds)
Cbc0001I Search completed - best objective -33.8889, took 2062 iterations and 2 nodes (1.48 seconds)
Cbc0032I Strong branching done 34 times (398 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       1.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-26) rows, 44 (-22) columns and 380 (-343) elements
Clp1000I sum of infeasibilities 4.65754e-08 - average 1.10894e-09, 7 fixed columns
Coin0506I Presolve 36 (-6) rows, 37 (-7) columns and 270 (-110) elements
Clp0006I 0  Obj 92.483365 Dual inf 5.1284793 (33)
Clp0014I Perturbing problem by 0.001% of 2.0903127 - largest nonzero change 1.7149389e-05 ( 0.001262127%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 163.44031
Clp0000I Optimal - objective value 163.44031
Coin0511I After Postsolve, objective 163.44031, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 163.44031
Clp0000I Optimal - objective value 163.44031
Clp0000I Optimal - objective value 163.44031
Clp0000I Optimal - objective value 163.44031
Coin0511I After Postsolve, objective 163.44031, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 163.4403108 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 47 columns (47 integer (47 of which binary)) and 394 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.884%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.24566
Cbc0038I Pass   1: suminf.    1.70189 (12) obj. 16.9128 iterations 7
Cbc0038I Pass   2: suminf.    1.70189 (12) obj. 16.9128 iterations 0
Cbc0038I Solution found of 59.6667
Cbc0038I Rounding solution of 20.4444 is better than previous of 59.6667

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 10.5956
Cbc0038I Pass   3: suminf.    1.77535 (13) obj. 10.5956 iterations 1
Cbc0038I Pass   4: suminf.    1.77535 (13) obj. 10.5956 iterations 0
Cbc0038I Pass   5: suminf.    0.40317 (1) obj. 8.33967 iterations 13
Cbc0038I Pass   6: suminf.    0.42941 (1) obj. 10.5956 iterations 1
Cbc0038I Pass   7: suminf.    1.27176 (5) obj. 10.5956 iterations 8
Cbc0038I Pass   8: suminf.    1.27176 (5) obj. 10.5956 iterations 0
Cbc0038I Pass   9: suminf.    0.79442 (2) obj. 10.5956 iterations 6
Cbc0038I Pass  10: suminf.    0.73837 (2) obj. 10.5956 iterations 1
Cbc0038I Pass  11: suminf.    1.55503 (7) obj. 10.5956 iterations 11
Cbc0038I Pass  12: suminf.    1.55503 (7) obj. 10.5956 iterations 2
Cbc0038I Pass  13: suminf.    1.12908 (10) obj. 10.5956 iterations 6
Cbc0038I Pass  14: suminf.    1.12908 (10) obj. 10.5956 iterations 0
Cbc0038I Pass  15: suminf.    0.07250 (1) obj. 8.23585 iterations 10
Cbc0038I Pass  16: suminf.    0.07250 (1) obj. 8.23585 iterations 0
Cbc0038I Pass  17: suminf.    0.09415 (1) obj. 10.5956 iterations 1
Cbc0038I Pass  18: suminf.    1.57124 (6) obj. 10.5956 iterations 6
Cbc0038I Pass  19: suminf.    1.19474 (5) obj. 10.5956 iterations 2
Cbc0038I Pass  20: suminf.    0.76104 (4) obj. 1.51439 iterations 2
Cbc0038I Pass  21: suminf.    3.24781 (11) obj. 10.5956 iterations 8
Cbc0038I Pass  22: suminf.    2.13409 (9) obj. 10.5956 iterations 3
Cbc0038I Pass  23: suminf.    1.55261 (7) obj. -6.86073 iterations 3
Cbc0038I Pass  24: suminf.    0.26540 (1) obj. 10.5956 iterations 7
Cbc0038I Pass  25: suminf.    0.23500 (1) obj. 7.28165 iterations 1
Cbc0038I Pass  26: suminf.    1.88388 (9) obj. 10.5956 iterations 15
Cbc0038I Pass  27: suminf.    1.88388 (9) obj. 10.5956 iterations 0
Cbc0038I Pass  28: suminf.    1.17568 (4) obj. 10.5956 iterations 11
Cbc0038I Pass  29: suminf.    0.91343 (3) obj. 10.5956 iterations 1
Cbc0038I Pass  30: suminf.    0.43571 (2) obj. 1.61824 iterations 2
Cbc0038I Pass  31: suminf.    0.29083 (3) obj. 10.5956 iterations 2
Cbc0038I Pass  32: suminf.    0.28970 (3) obj. 10.5956 iterations 1
Cbc0038I Rounding solution of -4.8889 is better than previous of 20.4444

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -4.8889 to -25.7777 (0.02 seconds)
Cbc0038I Round again with cutoff of -36.2309
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.33145 (21) obj. -36.2309 iterations 1
Cbc0038I Pass  33: suminf.    2.19816 (14) obj. -36.2309 iterations 1
Cbc0038I Pass  34: suminf.    2.30214 (14) obj. -36.2309 iterations 10
Cbc0038I Pass  35: suminf.    2.30214 (14) obj. -36.2309 iterations 0
Cbc0038I Pass  36: suminf.    0.86600 (4) obj. -36.2309 iterations 13
Cbc0038I Pass  37: suminf.    0.48000 (2) obj. -39.8755 iterations 3
Cbc0038I Pass  38: suminf.    0.39291 (3) obj. -36.2309 iterations 2
Cbc0038I Pass  39: suminf.    0.39291 (3) obj. -36.2309 iterations 0
Cbc0038I Pass  40: suminf.    0.84059 (4) obj. -36.2309 iterations 1
Cbc0038I Pass  41: suminf.    2.06290 (7) obj. -36.2309 iterations 12
Cbc0038I Pass  42: suminf.    1.66950 (5) obj. -37.7016 iterations 5
Cbc0038I Pass  43: suminf.    2.96101 (9) obj. -36.2309 iterations 4
Cbc0038I Pass  44: suminf.    2.55628 (7) obj. -36.2309 iterations 3
Cbc0038I Pass  45: suminf.    0.39291 (3) obj. -36.2309 iterations 8
Cbc0038I Pass  46: suminf.    0.39291 (3) obj. -36.2309 iterations 0
Cbc0038I Pass  47: suminf.    0.84059 (4) obj. -36.2309 iterations 1
Cbc0038I Pass  48: suminf.    0.48000 (2) obj. -39.8755 iterations 3
Cbc0038I Pass  49: suminf.    1.83840 (7) obj. -36.2309 iterations 8
Cbc0038I Pass  50: suminf.    1.83840 (7) obj. -36.2309 iterations 1
Cbc0038I Pass  51: suminf.    0.71186 (4) obj. -36.2309 iterations 4
Cbc0038I Pass  52: suminf.    0.71186 (4) obj. -36.2309 iterations 0
Cbc0038I Pass  53: suminf.    0.78417 (4) obj. -36.2309 iterations 2
Cbc0038I Pass  54: suminf.    0.78417 (4) obj. -36.2309 iterations 0
Cbc0038I Pass  55: suminf.    0.71186 (4) obj. -36.2309 iterations 1
Cbc0038I Pass  56: suminf.    1.24531 (4) obj. -36.2309 iterations 7
Cbc0038I Pass  57: suminf.    1.17841 (4) obj. -36.2309 iterations 1
Cbc0038I Pass  58: suminf.    0.91136 (4) obj. -36.2309 iterations 5
Cbc0038I Pass  59: suminf.    0.91136 (4) obj. -36.2309 iterations 0
Cbc0038I Pass  60: suminf.    0.53004 (4) obj. -36.2309 iterations 4
Cbc0038I Pass  61: suminf.    0.53004 (4) obj. -36.2309 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.7777 - took 0.02 seconds
Cbc0012I Integer solution of -25.77774 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 47 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -33.8889 found by DiveCoefficient after 83 iterations and 0 nodes (0.09 seconds)
Cbc0031I 23 added rows had average density of 9.0434783
Cbc0013I At root node, 23 cuts changed objective from -78.043252 to -33.8889 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 281 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 26.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.8889, took 83 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-27) rows, 23 (-12) columns and 123 (-72) elements
Clp1000I sum of infeasibilities 0.00994949 - average 0.000236893, 1 fixed columns
Coin0506I Presolve 40 (-2) rows, 22 (-1) columns and 117 (-6) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 98.341546
Clp0000I Optimal - objective value 98.341546
Coin0511I After Postsolve, objective 98.341546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.341546
Clp0000I Optimal - objective value 98.341546
Clp0000I Optimal - objective value 98.341546
Coin0511I After Postsolve, objective 98.341546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.34154615 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 23 columns (22 integer (22 of which binary)) and 122 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.885%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.05076
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 51.1111 iterations 18
Cbc0038I Solution found of 51.1111
Cbc0038I Relaxing continuous gives 51.1111
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 23 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 51.1111 to -33.8889 (0.01 seconds)
Cbc0038I Round again with cutoff of -40.3343
Cbc0038I Pass   2: suminf.    1.60046 (4) obj. -40.3343 iterations 3
Cbc0038I Pass   3: suminf.    0.55871 (3) obj. -40.3343 iterations 4
Cbc0038I Pass   4: suminf.    1.17043 (4) obj. -40.3343 iterations 4
Cbc0038I Pass   5: suminf.    1.17043 (4) obj. -40.3343 iterations 0
Cbc0038I Pass   6: suminf.    0.55871 (3) obj. -40.3343 iterations 4
Cbc0038I Pass   7: suminf.    1.36705 (6) obj. -40.3343 iterations 4
Cbc0038I Pass   8: suminf.    1.36705 (6) obj. -40.3343 iterations 1
Cbc0038I Pass   9: suminf.    1.28634 (3) obj. -40.3343 iterations 11
Cbc0038I Pass  10: suminf.    0.60542 (4) obj. -40.3343 iterations 4
Cbc0038I Pass  11: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I Pass  12: suminf.    0.93870 (3) obj. -40.3343 iterations 3
Cbc0038I Pass  13: suminf.    0.93119 (3) obj. -40.3343 iterations 1
Cbc0038I Pass  14: suminf.    1.05973 (3) obj. -40.3343 iterations 6
Cbc0038I Pass  15: suminf.    0.60542 (4) obj. -40.3343 iterations 3
Cbc0038I Pass  16: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I Pass  17: suminf.    0.93870 (3) obj. -40.3343 iterations 3
Cbc0038I Pass  18: suminf.    0.93119 (3) obj. -40.3343 iterations 1
Cbc0038I Pass  19: suminf.    1.05973 (3) obj. -40.3343 iterations 6
Cbc0038I Pass  20: suminf.    0.60542 (4) obj. -40.3343 iterations 3
Cbc0038I Pass  21: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I Pass  22: suminf.    0.93870 (3) obj. -40.3343 iterations 3
Cbc0038I Pass  23: suminf.    0.93119 (3) obj. -40.3343 iterations 1
Cbc0038I Pass  24: suminf.    1.05973 (3) obj. -40.3343 iterations 6
Cbc0038I Pass  25: suminf.    0.60542 (4) obj. -40.3343 iterations 3
Cbc0038I Pass  26: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I Pass  27: suminf.    0.93870 (3) obj. -40.3343 iterations 3
Cbc0038I Pass  28: suminf.    0.93119 (3) obj. -40.3343 iterations 1
Cbc0038I Pass  29: suminf.    1.05973 (3) obj. -40.3343 iterations 6
Cbc0038I Pass  30: suminf.    0.60542 (4) obj. -40.3343 iterations 3
Cbc0038I Pass  31: suminf.    1.65547 (4) obj. -40.3343 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 23 columns, reduced to 36 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -33.8889 - took 0.02 seconds
Cbc0012I Integer solution of -33.8889 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 8 added rows had average density of 20.375
Cbc0013I At root node, 8 cuts changed objective from -98.341546 to -48.260496 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1141 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 584 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.8889 best solution, best possible -48.260197 (1.32 seconds)
Cbc0001I Search completed - best objective -33.8889, took 2062 iterations and 2 nodes (1.33 seconds)
Cbc0032I Strong branching done 34 times (398 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       1.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-27) rows, 44 (-23) columns and 380 (-344) elements
Clp1000I sum of infeasibilities 4.65754e-08 - average 1.10894e-09, 7 fixed columns
Coin0506I Presolve 36 (-6) rows, 37 (-7) columns and 270 (-110) elements
Clp0006I 0  Obj 92.483365 Dual inf 5.1284793 (33)
Clp0014I Perturbing problem by 0.001% of 2.0903127 - largest nonzero change 1.7149389e-05 ( 0.001262127%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 163.44031
Clp0000I Optimal - objective value 163.44031
Coin0511I After Postsolve, objective 163.44031, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 163.44031
Clp0000I Optimal - objective value 163.44031
Clp0000I Optimal - objective value 163.44031
Clp0000I Optimal - objective value 163.44031
Coin0511I After Postsolve, objective 163.44031, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 163.4403108 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 47 columns (47 integer (47 of which binary)) and 394 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.884%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.24566
Cbc0038I Pass   1: suminf.    1.70189 (12) obj. 16.9128 iterations 7
Cbc0038I Pass   2: suminf.    1.70189 (12) obj. 16.9128 iterations 0
Cbc0038I Solution found of 59.6667
Cbc0038I Rounding solution of 20.4444 is better than previous of 59.6667

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 10.5956
Cbc0038I Pass   3: suminf.    1.77535 (13) obj. 10.5956 iterations 1
Cbc0038I Pass   4: suminf.    1.77535 (13) obj. 10.5956 iterations 0
Cbc0038I Pass   5: suminf.    0.40317 (1) obj. 8.33967 iterations 13
Cbc0038I Pass   6: suminf.    0.42941 (1) obj. 10.5956 iterations 1
Cbc0038I Pass   7: suminf.    1.27176 (5) obj. 10.5956 iterations 8
Cbc0038I Pass   8: suminf.    1.27176 (5) obj. 10.5956 iterations 0
Cbc0038I Pass   9: suminf.    0.79442 (2) obj. 10.5956 iterations 6
Cbc0038I Pass  10: suminf.    0.73837 (2) obj. 10.5956 iterations 1
Cbc0038I Pass  11: suminf.    1.55503 (7) obj. 10.5956 iterations 11
Cbc0038I Pass  12: suminf.    1.55503 (7) obj. 10.5956 iterations 2
Cbc0038I Pass  13: suminf.    1.12908 (10) obj. 10.5956 iterations 6
Cbc0038I Pass  14: suminf.    1.12908 (10) obj. 10.5956 iterations 0
Cbc0038I Pass  15: suminf.    0.07250 (1) obj. 8.23585 iterations 10
Cbc0038I Pass  16: suminf.    0.07250 (1) obj. 8.23585 iterations 0
Cbc0038I Pass  17: suminf.    0.09415 (1) obj. 10.5956 iterations 1
Cbc0038I Pass  18: suminf.    1.57124 (6) obj. 10.5956 iterations 6
Cbc0038I Pass  19: suminf.    1.19474 (5) obj. 10.5956 iterations 2
Cbc0038I Pass  20: suminf.    0.76104 (4) obj. 1.51439 iterations 2
Cbc0038I Pass  21: suminf.    3.24781 (11) obj. 10.5956 iterations 8
Cbc0038I Pass  22: suminf.    2.13409 (9) obj. 10.5956 iterations 3
Cbc0038I Pass  23: suminf.    1.55261 (7) obj. -6.86073 iterations 3
Cbc0038I Pass  24: suminf.    0.26540 (1) obj. 10.5956 iterations 7
Cbc0038I Pass  25: suminf.    0.23500 (1) obj. 7.28165 iterations 1
Cbc0038I Pass  26: suminf.    1.88388 (9) obj. 10.5956 iterations 15
Cbc0038I Pass  27: suminf.    1.88388 (9) obj. 10.5956 iterations 0
Cbc0038I Pass  28: suminf.    1.17568 (4) obj. 10.5956 iterations 11
Cbc0038I Pass  29: suminf.    0.91343 (3) obj. 10.5956 iterations 1
Cbc0038I Pass  30: suminf.    0.43571 (2) obj. 1.61824 iterations 2
Cbc0038I Pass  31: suminf.    0.29083 (3) obj. 10.5956 iterations 2
Cbc0038I Pass  32: suminf.    0.28970 (3) obj. 10.5956 iterations 1
Cbc0038I Rounding solution of -4.8889 is better than previous of 20.4444

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -4.8889 to -25.7777 (0.02 seconds)
Cbc0038I Round again with cutoff of -36.2309
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.33145 (21) obj. -36.2309 iterations 1
Cbc0038I Pass  33: suminf.    2.19816 (14) obj. -36.2309 iterations 1
Cbc0038I Pass  34: suminf.    2.30214 (14) obj. -36.2309 iterations 10
Cbc0038I Pass  35: suminf.    2.30214 (14) obj. -36.2309 iterations 0
Cbc0038I Pass  36: suminf.    0.86600 (4) obj. -36.2309 iterations 13
Cbc0038I Pass  37: suminf.    0.48000 (2) obj. -39.8755 iterations 3
Cbc0038I Pass  38: suminf.    0.39291 (3) obj. -36.2309 iterations 2
Cbc0038I Pass  39: suminf.    0.39291 (3) obj. -36.2309 iterations 0
Cbc0038I Pass  40: suminf.    0.84059 (4) obj. -36.2309 iterations 1
Cbc0038I Pass  41: suminf.    2.06290 (7) obj. -36.2309 iterations 12
Cbc0038I Pass  42: suminf.    1.66950 (5) obj. -37.7016 iterations 5
Cbc0038I Pass  43: suminf.    2.96101 (9) obj. -36.2309 iterations 4
Cbc0038I Pass  44: suminf.    2.55628 (7) obj. -36.2309 iterations 3
Cbc0038I Pass  45: suminf.    0.39291 (3) obj. -36.2309 iterations 8
Cbc0038I Pass  46: suminf.    0.39291 (3) obj. -36.2309 iterations 0
Cbc0038I Pass  47: suminf.    0.84059 (4) obj. -36.2309 iterations 1
Cbc0038I Pass  48: suminf.    0.48000 (2) obj. -39.8755 iterations 3
Cbc0038I Pass  49: suminf.    1.83840 (7) obj. -36.2309 iterations 8
Cbc0038I Pass  50: suminf.    1.83840 (7) obj. -36.2309 iterations 1
Cbc0038I Pass  51: suminf.    0.71186 (4) obj. -36.2309 iterations 4
Cbc0038I Pass  52: suminf.    0.71186 (4) obj. -36.2309 iterations 0
Cbc0038I Pass  53: suminf.    0.78417 (4) obj. -36.2309 iterations 2
Cbc0038I Pass  54: suminf.    0.78417 (4) obj. -36.2309 iterations 0
Cbc0038I Pass  55: suminf.    0.71186 (4) obj. -36.2309 iterations 1
Cbc0038I Pass  56: suminf.    1.24531 (4) obj. -36.2309 iterations 7
Cbc0038I Pass  57: suminf.    1.17841 (4) obj. -36.2309 iterations 1
Cbc0038I Pass  58: suminf.    0.91136 (4) obj. -36.2309 iterations 5
Cbc0038I Pass  59: suminf.    0.91136 (4) obj. -36.2309 iterations 0
Cbc0038I Pass  60: suminf.    0.53004 (4) obj. -36.2309 iterations 4
Cbc0038I Pass  61: suminf.    0.53004 (4) obj. -36.2309 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 47 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25.7777 - took 0.02 seconds
Cbc0012I Integer solution of -25.77774 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 47 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -33.8889 found by DiveCoefficient after 83 iterations and 0 nodes (0.09 seconds)
Cbc0031I 23 added rows had average density of 9.0434783
Cbc0013I At root node, 23 cuts changed objective from -78.043252 to -33.8889 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 281 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 26.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.8889, took 83 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.09

