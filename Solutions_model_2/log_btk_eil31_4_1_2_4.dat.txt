Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 25 (-8) columns and 129 (-54) elements
Clp1000I sum of infeasibilities 4.55677e-06 - average 1.05971e-07, 5 fixed columns
Coin0506I Presolve 35 (-8) rows, 20 (-5) columns and 103 (-26) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 90.743084
Clp0000I Optimal - objective value 90.743084
Coin0511I After Postsolve, objective 90.743084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.743084
Clp0000I Optimal - objective value 90.743084
Clp0000I Optimal - objective value 90.743084
Coin0511I After Postsolve, objective 90.743084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.74308447 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.72211
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.8918 iterations 18
Cbc0038I Solution found of -28.8918
Cbc0038I Relaxing continuous gives -28.8918
Cbc0038I Rounding solution of -33.3905 is better than previous of -28.8918

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -33.3905 to -64.3352 (0.01 seconds)
Cbc0038I Round again with cutoff of -66.2819
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.35368 (4) obj. -66.2819 iterations 4
Cbc0038I Pass   3: suminf.    0.32353 (2) obj. -66.2819 iterations 5
Cbc0038I Pass   4: suminf.    0.69970 (2) obj. -66.2819 iterations 1
Cbc0038I Pass   5: suminf.    0.69970 (2) obj. -66.2819 iterations 0
Cbc0038I Pass   6: suminf.    0.58535 (2) obj. -66.2819 iterations 3
Cbc0038I Pass   7: suminf.    1.75158 (6) obj. -66.2819 iterations 6
Cbc0038I Pass   8: suminf.    0.63084 (3) obj. -66.2819 iterations 5
Cbc0038I Pass   9: suminf.    1.18198 (4) obj. -66.2819 iterations 5
Cbc0038I Pass  10: suminf.    1.18198 (4) obj. -66.2819 iterations 0
Cbc0038I Pass  11: suminf.    0.73146 (3) obj. -66.2819 iterations 2
Cbc0038I Pass  12: suminf.    0.41217 (3) obj. -66.2819 iterations 2
Cbc0038I Pass  13: suminf.    1.21794 (10) obj. -66.2819 iterations 8
Cbc0038I Pass  14: suminf.    1.10332 (7) obj. -66.2819 iterations 2
Cbc0038I Pass  15: suminf.    1.11888 (3) obj. -66.2819 iterations 7
Cbc0038I Pass  16: suminf.    1.11888 (3) obj. -66.2819 iterations 0
Cbc0038I Pass  17: suminf.    0.62042 (2) obj. -66.2819 iterations 3
Cbc0038I Pass  18: suminf.    0.62042 (2) obj. -66.2819 iterations 0
Cbc0038I Pass  19: suminf.    0.46476 (2) obj. -66.2819 iterations 3
Cbc0038I Pass  20: suminf.    0.12016 (2) obj. -66.2819 iterations 2
Cbc0038I Pass  21: suminf.    1.43446 (5) obj. -66.2819 iterations 8
Cbc0038I Pass  22: suminf.    1.55952 (6) obj. -66.2819 iterations 8
Cbc0038I Pass  23: suminf.    1.02797 (6) obj. -66.2819 iterations 4
Cbc0038I Pass  24: suminf.    0.53474 (5) obj. -66.2819 iterations 4
Cbc0038I Pass  25: suminf.    1.31331 (4) obj. -66.2819 iterations 11
Cbc0038I Pass  26: suminf.    0.63084 (3) obj. -66.2819 iterations 4
Cbc0038I Pass  27: suminf.    1.18198 (4) obj. -66.2819 iterations 5
Cbc0038I Pass  28: suminf.    1.18198 (4) obj. -66.2819 iterations 0
Cbc0038I Pass  29: suminf.    0.73146 (3) obj. -66.2819 iterations 2
Cbc0038I Pass  30: suminf.    0.41217 (3) obj. -66.2819 iterations 2
Cbc0038I Pass  31: suminf.    1.76639 (5) obj. -66.2819 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -64.3352 - took 0.04 seconds
Cbc0012I Integer solution of -64.335167 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 42 rows 25 columns, reduced to 27 rows 16 columns
Cbc0031I 9 added rows had average density of 16.222222
Cbc0013I At root node, 9 cuts changed objective from -83.801454 to -72.800058 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 556 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 591 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.3351675, took 1591 iterations and 10 nodes (0.14 seconds)
Cbc0032I Strong branching done 104 times (654 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-15) rows, 54 (-8) columns and 478 (-170) elements
Clp1000I sum of infeasibilities 1.25853e-06 - average 2.56843e-08, 37 fixed columns
Coin0506I Presolve 14 (-35) rows, 16 (-38) columns and 56 (-422) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 62.158443
Clp0000I Optimal - objective value 62.158443
Coin0511I After Postsolve, objective 62.158443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6187038 - largest nonzero change 0 ( 0%) - largest zero change 2.5490355e-05
Clp0000I Optimal - objective value 104.5874
Clp0000I Optimal - objective value 104.5874
Clp0000I Optimal - objective value 104.5874
Coin0511I After Postsolve, objective 104.5874, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.5873966 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 388 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.565%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.19603
Cbc0038I Pass   1: suminf.    1.70693 (10) obj. -38.4745 iterations 9
Cbc0038I Pass   2: suminf.    1.70693 (10) obj. -38.4745 iterations 0
Cbc0038I Solution found of -28.545
Cbc0038I Rounding solution of -33.0438 is better than previous of -28.545

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -33.0438 to -56.399 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.8757
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.41180 (13) obj. -58.8757 iterations 3
Cbc0038I Pass   4: suminf.    1.91011 (11) obj. -65.9099 iterations 2
Cbc0038I Pass   5: suminf.    0.97631 (9) obj. -58.8757 iterations 14
Cbc0038I Pass   6: suminf.    0.97301 (4) obj. -58.8757 iterations 8
Cbc0038I Pass   7: suminf.    0.49865 (3) obj. -61.0981 iterations 2
Cbc0038I Pass   8: suminf.    0.14853 (3) obj. -58.8757 iterations 2
Cbc0038I Pass   9: suminf.    0.13403 (2) obj. -58.8757 iterations 1
Cbc0038I Pass  10: suminf.    0.49865 (3) obj. -61.0981 iterations 4
Cbc0038I Pass  11: suminf.    1.48782 (5) obj. -58.8757 iterations 7
Cbc0038I Pass  12: suminf.    0.99479 (5) obj. -58.8757 iterations 5
Cbc0038I Pass  13: suminf.    0.73236 (3) obj. -58.8757 iterations 2
Cbc0038I Pass  14: suminf.    0.25237 (2) obj. -58.8757 iterations 1
Cbc0038I Pass  15: suminf.    0.34643 (2) obj. -58.8757 iterations 1
Cbc0038I Pass  16: suminf.    2.30095 (8) obj. -58.8757 iterations 12
Cbc0038I Pass  17: suminf.    2.22838 (8) obj. -58.8757 iterations 3
Cbc0038I Pass  18: suminf.    0.77831 (3) obj. -58.8757 iterations 9
Cbc0038I Pass  19: suminf.    0.77831 (3) obj. -58.8757 iterations 0
Cbc0038I Pass  20: suminf.    0.91984 (2) obj. -58.8757 iterations 1
Cbc0038I Pass  21: suminf.    0.53625 (2) obj. -58.8757 iterations 1
Cbc0038I Pass  22: suminf.    0.85327 (4) obj. -58.8757 iterations 6
Cbc0038I Pass  23: suminf.    0.83240 (4) obj. -58.8757 iterations 3
Cbc0038I Pass  24: suminf.    1.04592 (3) obj. -58.8757 iterations 3
Cbc0038I Pass  25: suminf.    1.04592 (3) obj. -58.8757 iterations 0
Cbc0038I Pass  26: suminf.    1.16414 (5) obj. -58.8757 iterations 4
Cbc0038I Pass  27: suminf.    0.91573 (3) obj. -58.8757 iterations 2
Cbc0038I Pass  28: suminf.    1.18728 (8) obj. -58.8757 iterations 10
Cbc0038I Pass  29: suminf.    1.00645 (7) obj. -58.8757 iterations 6
Cbc0038I Pass  30: suminf.    0.82445 (4) obj. -58.8757 iterations 12
Cbc0038I Pass  31: suminf.    0.82521 (4) obj. -58.8757 iterations 1
Cbc0038I Pass  32: suminf.    0.59341 (6) obj. -58.8757 iterations 7
Cbc0038I Rounding solution of -59.0086 is better than previous of -56.399

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 29 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -59.0086 to -64.3352 (0.07 seconds)
Cbc0038I Round again with cutoff of -67.7012
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.23384 (18) obj. -67.7012 iterations 1
Cbc0038I Pass  33: suminf.    2.18816 (12) obj. -67.7012 iterations 2
Cbc0038I Pass  34: suminf.    2.61506 (13) obj. -67.7012 iterations 14
Cbc0038I Pass  35: suminf.    1.69022 (8) obj. -67.7012 iterations 2
Cbc0038I Pass  36: suminf.    1.17702 (6) obj. -68.1259 iterations 5
Cbc0038I Pass  37: suminf.    2.28844 (8) obj. -67.7012 iterations 7
Cbc0038I Pass  38: suminf.    1.89936 (9) obj. -67.7012 iterations 2
Cbc0038I Pass  39: suminf.    0.87471 (6) obj. -67.7012 iterations 9
Cbc0038I Pass  40: suminf.    0.85503 (8) obj. -67.7012 iterations 1
Cbc0038I Pass  41: suminf.    0.80708 (5) obj. -67.7012 iterations 11
Cbc0038I Pass  42: suminf.    0.72999 (4) obj. -67.7012 iterations 3
Cbc0038I Pass  43: suminf.    0.97988 (4) obj. -67.7012 iterations 7
Cbc0038I Pass  44: suminf.    0.84264 (4) obj. -67.7012 iterations 3
Cbc0038I Pass  45: suminf.    0.98927 (4) obj. -67.7012 iterations 6
Cbc0038I Pass  46: suminf.    0.98927 (4) obj. -67.7012 iterations 2
Cbc0038I Pass  47: suminf.    1.30053 (5) obj. -67.7012 iterations 4
Cbc0038I Pass  48: suminf.    4.74277 (13) obj. -67.7012 iterations 16
Cbc0038I Pass  49: suminf.    2.74754 (9) obj. -67.7012 iterations 4
Cbc0038I Pass  50: suminf.    2.11219 (8) obj. -67.7012 iterations 3
Cbc0038I Pass  51: suminf.    1.41429 (7) obj. -67.7012 iterations 9
Cbc0038I Pass  52: suminf.    1.36115 (8) obj. -67.7012 iterations 1
Cbc0038I Pass  53: suminf.    1.22791 (7) obj. -67.7012 iterations 9
Cbc0038I Pass  54: suminf.    1.22791 (7) obj. -67.7012 iterations 1
Cbc0038I Pass  55: suminf.    0.98927 (4) obj. -67.7012 iterations 8
Cbc0038I Pass  56: suminf.    0.98927 (4) obj. -67.7012 iterations 0
Cbc0038I Pass  57: suminf.    1.30053 (5) obj. -67.7012 iterations 3
Cbc0038I Pass  58: suminf.    0.84264 (4) obj. -67.7012 iterations 3
Cbc0038I Pass  59: suminf.    0.98927 (4) obj. -67.7012 iterations 6
Cbc0038I Pass  60: suminf.    2.99139 (8) obj. -67.7012 iterations 15
Cbc0038I Pass  61: suminf.    2.64145 (8) obj. -67.7012 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 29 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -64.3352 - took 0.09 seconds
Cbc0012I Integer solution of -64.335167 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 21 rows 22 columns
Cbc0031I 20 added rows had average density of 16.05
Cbc0013I At root node, 20 cuts changed objective from -81.164708 to -69.219871 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2638 row cuts average 2.7 elements, 5 column cuts (13 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 963 row cuts average 34.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 140 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 155 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 209 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 345 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 421 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.716 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -64.335167 best solution, best possible -69.219871 (1.67 seconds)
Cbc0010I After 8 nodes, 7 on tree, -64.335167 best solution, best possible -69.21809 (2.38 seconds)
Cbc0001I Search completed - best objective -64.3351675, took 3000 iterations and 18 nodes (2.56 seconds)
Cbc0032I Strong branching done 318 times (3245 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.68   (Wallclock seconds):       2.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 25 (-8) columns and 129 (-54) elements
Clp1000I sum of infeasibilities 4.55677e-06 - average 1.05971e-07, 5 fixed columns
Coin0506I Presolve 35 (-8) rows, 20 (-5) columns and 103 (-26) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 90.743084
Clp0000I Optimal - objective value 90.743084
Coin0511I After Postsolve, objective 90.743084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.743084
Clp0000I Optimal - objective value 90.743084
Clp0000I Optimal - objective value 90.743084
Coin0511I After Postsolve, objective 90.743084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.74308447 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 25 columns (24 integer (24 of which binary)) and 134 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.72211
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.8918 iterations 18
Cbc0038I Solution found of -28.8918
Cbc0038I Relaxing continuous gives -28.8918
Cbc0038I Rounding solution of -33.3905 is better than previous of -28.8918

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -33.3905 to -64.3352 (0.02 seconds)
Cbc0038I Round again with cutoff of -66.2819
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.35368 (4) obj. -66.2819 iterations 4
Cbc0038I Pass   3: suminf.    0.32353 (2) obj. -66.2819 iterations 5
Cbc0038I Pass   4: suminf.    0.69970 (2) obj. -66.2819 iterations 1
Cbc0038I Pass   5: suminf.    0.69970 (2) obj. -66.2819 iterations 0
Cbc0038I Pass   6: suminf.    0.58535 (2) obj. -66.2819 iterations 3
Cbc0038I Pass   7: suminf.    1.75158 (6) obj. -66.2819 iterations 6
Cbc0038I Pass   8: suminf.    0.63084 (3) obj. -66.2819 iterations 5
Cbc0038I Pass   9: suminf.    1.18198 (4) obj. -66.2819 iterations 5
Cbc0038I Pass  10: suminf.    1.18198 (4) obj. -66.2819 iterations 0
Cbc0038I Pass  11: suminf.    0.73146 (3) obj. -66.2819 iterations 2
Cbc0038I Pass  12: suminf.    0.41217 (3) obj. -66.2819 iterations 2
Cbc0038I Pass  13: suminf.    1.21794 (10) obj. -66.2819 iterations 8
Cbc0038I Pass  14: suminf.    1.10332 (7) obj. -66.2819 iterations 2
Cbc0038I Pass  15: suminf.    1.11888 (3) obj. -66.2819 iterations 7
Cbc0038I Pass  16: suminf.    1.11888 (3) obj. -66.2819 iterations 0
Cbc0038I Pass  17: suminf.    0.62042 (2) obj. -66.2819 iterations 3
Cbc0038I Pass  18: suminf.    0.62042 (2) obj. -66.2819 iterations 0
Cbc0038I Pass  19: suminf.    0.46476 (2) obj. -66.2819 iterations 3
Cbc0038I Pass  20: suminf.    0.12016 (2) obj. -66.2819 iterations 2
Cbc0038I Pass  21: suminf.    1.43446 (5) obj. -66.2819 iterations 8
Cbc0038I Pass  22: suminf.    1.55952 (6) obj. -66.2819 iterations 8
Cbc0038I Pass  23: suminf.    1.02797 (6) obj. -66.2819 iterations 4
Cbc0038I Pass  24: suminf.    0.53474 (5) obj. -66.2819 iterations 4
Cbc0038I Pass  25: suminf.    1.31331 (4) obj. -66.2819 iterations 11
Cbc0038I Pass  26: suminf.    0.63084 (3) obj. -66.2819 iterations 4
Cbc0038I Pass  27: suminf.    1.18198 (4) obj. -66.2819 iterations 5
Cbc0038I Pass  28: suminf.    1.18198 (4) obj. -66.2819 iterations 0
Cbc0038I Pass  29: suminf.    0.73146 (3) obj. -66.2819 iterations 2
Cbc0038I Pass  30: suminf.    0.41217 (3) obj. -66.2819 iterations 2
Cbc0038I Pass  31: suminf.    1.76639 (5) obj. -66.2819 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 25 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -64.3352 - took 0.02 seconds
Cbc0012I Integer solution of -64.335167 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 42 rows 25 columns, reduced to 27 rows 16 columns
Cbc0031I 9 added rows had average density of 16.222222
Cbc0013I At root node, 9 cuts changed objective from -83.801454 to -72.800058 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 556 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 591 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.3351675, took 1591 iterations and 10 nodes (0.16 seconds)
Cbc0032I Strong branching done 104 times (654 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 49 (-14) columns and 380 (-269) elements
Clp1000I sum of infeasibilities 9.26775e-09 - average 2.10631e-10, 29 fixed columns
Coin0506I Presolve 16 (-28) rows, 20 (-29) columns and 67 (-313) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 2.1508187 - largest nonzero change 1.4124544e-05 ( 0.00086475376%) - largest zero change 2.0609815e-05
Clp0000I Optimal - objective value 56.223516
Clp0000I Optimal - objective value 56.223516
Coin0511I After Postsolve, objective 56.223516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6162165 - largest nonzero change 2.639724e-05 ( 0.0019019041%) - largest zero change 2.5659144e-05
Clp0000I Optimal - objective value 96.384242
Clp0000I Optimal - objective value 96.384242
Clp0000I Optimal - objective value 96.384242
Coin0511I After Postsolve, objective 96.384242, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.38424207 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 388 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.565%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.0768
Cbc0038I Pass   1: suminf.    1.42675 (10) obj. -38.8456 iterations 16
Cbc0038I Pass   2: suminf.    1.42675 (10) obj. -38.8456 iterations 0
Cbc0038I Solution found of -28.545
Cbc0038I Rounding solution of -33.0438 is better than previous of -28.545

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -33.0438 to -56.399 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.8915
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.17473 (13) obj. -58.8915 iterations 7
Cbc0038I Pass   4: suminf.    1.67797 (11) obj. -66.2174 iterations 3
Cbc0038I Pass   5: suminf.    0.97797 (9) obj. -58.8915 iterations 16
Cbc0038I Pass   6: suminf.    0.96964 (4) obj. -58.8915 iterations 8
Cbc0038I Pass   7: suminf.    0.49865 (3) obj. -61.0981 iterations 2
Cbc0038I Pass   8: suminf.    0.14945 (3) obj. -58.8915 iterations 2
Cbc0038I Pass   9: suminf.    0.13572 (2) obj. -58.8915 iterations 1
Cbc0038I Pass  10: suminf.    0.49865 (3) obj. -61.0981 iterations 4
Cbc0038I Pass  11: suminf.    1.48770 (5) obj. -58.8915 iterations 7
Cbc0038I Pass  12: suminf.    0.99245 (5) obj. -58.8915 iterations 5
Cbc0038I Pass  13: suminf.    0.73299 (3) obj. -58.8915 iterations 2
Cbc0038I Pass  14: suminf.    0.25300 (2) obj. -58.8915 iterations 1
Cbc0038I Pass  15: suminf.    0.34528 (2) obj. -58.8915 iterations 1
Cbc0038I Pass  16: suminf.    2.27199 (8) obj. -58.8915 iterations 12
Cbc0038I Pass  17: suminf.    2.19545 (8) obj. -58.8915 iterations 2
Cbc0038I Pass  18: suminf.    0.78288 (3) obj. -58.8915 iterations 8
Cbc0038I Pass  19: suminf.    0.78288 (3) obj. -58.8915 iterations 0
Cbc0038I Pass  20: suminf.    0.91932 (2) obj. -58.8915 iterations 1
Cbc0038I Pass  21: suminf.    0.53744 (2) obj. -58.8915 iterations 1
Cbc0038I Pass  22: suminf.    0.97212 (4) obj. -58.8915 iterations 6
Cbc0038I Pass  23: suminf.    0.92100 (4) obj. -58.8915 iterations 2
Cbc0038I Pass  24: suminf.    1.10232 (3) obj. -58.8915 iterations 2
Cbc0038I Pass  25: suminf.    1.10232 (3) obj. -58.8915 iterations 0
Cbc0038I Pass  26: suminf.    1.17393 (5) obj. -58.8915 iterations 3
Cbc0038I Pass  27: suminf.    0.92100 (3) obj. -58.8915 iterations 1
Cbc0038I Pass  28: suminf.    1.99477 (9) obj. -58.8915 iterations 11
Cbc0038I Pass  29: suminf.    0.81130 (10) obj. -58.8915 iterations 7
Cbc0038I Pass  30: suminf.    0.58683 (4) obj. -58.8915 iterations 2
Cbc0038I Pass  31: suminf.    1.11789 (7) obj. -58.8915 iterations 4
Cbc0038I Pass  32: suminf.    0.93256 (7) obj. -58.8915 iterations 2
Cbc0038I Rounding solution of -59.0086 is better than previous of -56.399

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 29 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -59.0086 to -64.3352 (0.08 seconds)
Cbc0038I Round again with cutoff of -67.7327
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.95920 (18) obj. -67.7327 iterations 3
Cbc0038I Pass  33: suminf.    1.92577 (12) obj. -67.7327 iterations 2
Cbc0038I Pass  34: suminf.    2.69267 (13) obj. -67.7327 iterations 14
Cbc0038I Pass  35: suminf.    1.65201 (8) obj. -67.7327 iterations 2
Cbc0038I Pass  36: suminf.    1.22247 (6) obj. -67.9896 iterations 4
Cbc0038I Pass  37: suminf.    2.24992 (8) obj. -67.7327 iterations 6
Cbc0038I Pass  38: suminf.    2.03600 (9) obj. -67.7327 iterations 2
Cbc0038I Pass  39: suminf.    1.00414 (6) obj. -67.7327 iterations 9
Cbc0038I Pass  40: suminf.    0.96152 (7) obj. -67.7327 iterations 1
Cbc0038I Pass  41: suminf.    0.86774 (8) obj. -67.7327 iterations 8
Cbc0038I Pass  42: suminf.    0.80109 (7) obj. -67.7327 iterations 3
Cbc0038I Pass  43: suminf.    1.51113 (4) obj. -67.7327 iterations 6
Cbc0038I Pass  44: suminf.    1.51113 (5) obj. -67.7327 iterations 2
Cbc0038I Pass  45: suminf.    0.95426 (4) obj. -67.7327 iterations 6
Cbc0038I Pass  46: suminf.    0.95426 (4) obj. -67.7327 iterations 0
Cbc0038I Pass  47: suminf.    0.96935 (4) obj. -67.7327 iterations 6
Cbc0038I Pass  48: suminf.    0.78840 (4) obj. -67.7327 iterations 3
Cbc0038I Pass  49: suminf.    0.99980 (4) obj. -67.7327 iterations 6
Cbc0038I Pass  50: suminf.    0.99980 (4) obj. -67.7327 iterations 2
Cbc0038I Pass  51: suminf.    1.14548 (5) obj. -67.7327 iterations 6
Cbc0038I Pass  52: suminf.    3.13522 (12) obj. -67.7327 iterations 15
Cbc0038I Pass  53: suminf.    2.91581 (10) obj. -67.7327 iterations 3
Cbc0038I Pass  54: suminf.    2.37367 (7) obj. -67.7327 iterations 9
Cbc0038I Pass  55: suminf.    2.24711 (7) obj. -67.7327 iterations 4
Cbc0038I Pass  56: suminf.    2.24711 (7) obj. -67.7327 iterations 2
Cbc0038I Pass  57: suminf.    1.82160 (5) obj. -67.7327 iterations 9
Cbc0038I Pass  58: suminf.    1.43809 (5) obj. -67.7327 iterations 2
Cbc0038I Pass  59: suminf.    1.43809 (5) obj. -67.7327 iterations 0
Cbc0038I Pass  60: suminf.    1.82160 (5) obj. -67.7327 iterations 6
Cbc0038I Pass  61: suminf.    3.05624 (9) obj. -67.7327 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 32 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -64.3352 - took 0.10 seconds
Cbc0012I Integer solution of -64.335167 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 21 rows 22 columns
Cbc0031I 22 added rows had average density of 16.318182
Cbc0013I At root node, 22 cuts changed objective from -81.322629 to -69.339652 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2793 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 823 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 124 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 142 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 218 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 392 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 453 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 115 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.745 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -64.335167 best solution, best possible -69.339652 (1.70 seconds)
Cbc0001I Search completed - best objective -64.3351675, took 2599 iterations and 8 nodes (2.14 seconds)
Cbc0032I Strong branching done 174 times (1691 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       2.15

