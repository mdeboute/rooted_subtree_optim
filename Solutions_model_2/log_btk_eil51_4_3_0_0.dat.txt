Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-29) rows, 45 (-8) columns and 235 (-68) elements
Clp1000I sum of infeasibilities 1.96405e-05 - average 2.58427e-07, 10 fixed columns
Coin0506I Presolve 57 (-19) rows, 35 (-10) columns and 177 (-58) elements
Clp0000I Optimal - objective value 53.496766
Clp0000I Optimal - objective value 53.496766
Coin0511I After Postsolve, objective 53.496766, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.496766
Clp0000I Optimal - objective value 53.496766
Clp0000I Optimal - objective value 53.496766
Coin0511I After Postsolve, objective 53.496766, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.4967657 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 76 rows, 45 columns (44 integer (44 of which binary)) and 235 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.807%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.39459
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.2716 iterations 25
Cbc0038I Solution found of -10.2716
Cbc0038I Relaxing continuous gives -10.2716
Cbc0038I Rounding solution of -20.0464 is better than previous of -10.2716

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 45 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -20.0464 to -31.7621 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.9357
Cbc0038I Pass   2: suminf.    0.94962 (6) obj. -33.9357 iterations 9
Cbc0038I Pass   3: suminf.    0.88088 (7) obj. -33.9357 iterations 2
Cbc0038I Pass   4: suminf.    1.77905 (6) obj. -33.9357 iterations 12
Cbc0038I Pass   5: suminf.    0.68772 (3) obj. -33.9357 iterations 5
Cbc0038I Pass   6: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass   7: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass   8: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass   9: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  10: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  11: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  12: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass  13: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  14: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  15: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  16: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  17: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass  18: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  19: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  20: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  21: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  22: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass  23: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  24: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  25: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  26: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  27: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass  28: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  29: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  30: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  31: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 45 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -31.7621 - took 0.04 seconds
Cbc0012I Integer solution of -31.762114 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 76 rows 45 columns, reduced to 34 rows 23 columns
Cbc0031I 15 added rows had average density of 34.466667
Cbc0013I At root node, 15 cuts changed objective from -53.496766 to -38.036876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2441 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 729 row cuts average 44.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -31.762114, took 3229 iterations and 16 nodes (0.33 seconds)
Cbc0032I Strong branching done 168 times (1798 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 63 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-37) rows, 79 (-23) columns and 956 (-622) elements
Clp1000I sum of infeasibilities 7.35523e-08 - average 1.09779e-09, 12 fixed columns
Coin0506I Presolve 56 (-11) rows, 67 (-12) columns and 705 (-251) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 4.420784 - largest nonzero change 2.6764744e-05 ( 0.0018056464%) - largest zero change 2.9054447e-05
Clp0000I Optimal - objective value 72.769372
Clp0000I Optimal - objective value 72.769372
Coin0511I After Postsolve, objective 72.769372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.769372
Clp0000I Optimal - objective value 72.769372
Clp0000I Optimal - objective value 72.769372
Coin0511I After Postsolve, objective 72.769372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.76937192 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 68 rows, 80 columns (80 integer (80 of which binary)) and 961 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.6256
Cbc0038I Pass   1: suminf.    2.43747 (18) obj. -45.7375 iterations 10
Cbc0038I Pass   2: suminf.    2.43747 (18) obj. -45.7375 iterations 5
Cbc0038I Solution found of -16.5318
Cbc0038I Rounding solution of -19.8732 is better than previous of -16.5318

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 80 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -19.8732 to -28.7888 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.4781
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.43747 (18) obj. -45.7375 iterations 0
Cbc0038I Pass   4: suminf.    2.43747 (18) obj. -45.7375 iterations 1
Cbc0038I Pass   5: suminf.    0.67164 (9) obj. -32.4781 iterations 21
Cbc0038I Pass   6: suminf.    0.67164 (9) obj. -32.4781 iterations 0
Cbc0038I Pass   7: suminf.    1.13338 (3) obj. -32.4781 iterations 12
Cbc0038I Pass   8: suminf.    0.77230 (3) obj. -32.4781 iterations 2
Cbc0038I Pass   9: suminf.    0.77398 (6) obj. -32.4781 iterations 2
Cbc0038I Pass  10: suminf.    0.85792 (5) obj. -32.4781 iterations 2
Cbc0038I Pass  11: suminf.    0.56916 (2) obj. -34.2926 iterations 3
Cbc0038I Pass  12: suminf.    0.86528 (2) obj. -32.4781 iterations 4
Cbc0038I Pass  13: suminf.    0.85993 (5) obj. -32.4781 iterations 3
Cbc0038I Pass  14: suminf.    1.38558 (7) obj. -32.4781 iterations 15
Cbc0038I Pass  15: suminf.    1.30977 (6) obj. -32.4781 iterations 6
Cbc0038I Pass  16: suminf.    0.33161 (4) obj. -32.4781 iterations 6
Cbc0038I Pass  17: suminf.    0.33161 (4) obj. -32.4781 iterations 0
Cbc0038I Pass  18: suminf.    0.54874 (3) obj. -32.4781 iterations 6
Cbc0038I Pass  19: suminf.    1.90871 (9) obj. -32.4781 iterations 13
Cbc0038I Pass  20: suminf.    1.90871 (9) obj. -32.4781 iterations 2
Cbc0038I Pass  21: suminf.    1.41812 (12) obj. -32.4781 iterations 9
Cbc0038I Pass  22: suminf.    1.34053 (6) obj. -32.4781 iterations 6
Cbc0038I Pass  23: suminf.    1.48933 (6) obj. -32.4781 iterations 4
Cbc0038I Pass  24: suminf.    1.48933 (6) obj. -32.4781 iterations 2
Cbc0038I Pass  25: suminf.    2.29596 (12) obj. -32.4781 iterations 25
Cbc0038I Pass  26: suminf.    2.29596 (12) obj. -32.4781 iterations 2
Cbc0038I Pass  27: suminf.    2.40436 (9) obj. -32.4781 iterations 14
Cbc0038I Pass  28: suminf.    2.01682 (9) obj. -32.4781 iterations 2
Cbc0038I Pass  29: suminf.    2.41653 (9) obj. -32.4781 iterations 9
Cbc0038I Pass  30: suminf.    2.40136 (9) obj. -32.4781 iterations 3
Cbc0038I Pass  31: suminf.    2.19936 (9) obj. -32.4781 iterations 7
Cbc0038I Pass  32: suminf.    1.48573 (7) obj. -32.4781 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 80 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -28.7888 to -31.1669 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.1189
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.43747 (18) obj. -45.7375 iterations 0
Cbc0038I Pass  33: suminf.    2.43747 (18) obj. -45.7375 iterations 1
Cbc0038I Pass  34: suminf.    1.66831 (13) obj. -39.1189 iterations 17
Cbc0038I Pass  35: suminf.    1.66831 (13) obj. -39.1189 iterations 0
Cbc0038I Pass  36: suminf.    1.51092 (5) obj. -39.1189 iterations 20
Cbc0038I Pass  37: suminf.    1.01945 (5) obj. -39.1189 iterations 4
Cbc0038I Pass  38: suminf.    1.01285 (8) obj. -39.1189 iterations 4
Cbc0038I Pass  39: suminf.    1.17467 (7) obj. -39.1189 iterations 4
Cbc0038I Pass  40: suminf.    0.92090 (4) obj. -40.0556 iterations 2
Cbc0038I Pass  41: suminf.    1.23315 (4) obj. -39.1189 iterations 7
Cbc0038I Pass  42: suminf.    1.65101 (10) obj. -39.1189 iterations 9
Cbc0038I Pass  43: suminf.    1.23387 (8) obj. -39.1189 iterations 3
Cbc0038I Pass  44: suminf.    1.25260 (5) obj. -39.1189 iterations 10
Cbc0038I Pass  45: suminf.    1.25260 (5) obj. -39.1189 iterations 1
Cbc0038I Pass  46: suminf.    1.47228 (8) obj. -39.1189 iterations 4
Cbc0038I Pass  47: suminf.    1.47228 (8) obj. -39.1189 iterations 0
Cbc0038I Pass  48: suminf.    2.12119 (8) obj. -39.1189 iterations 3
Cbc0038I Pass  49: suminf.    1.43800 (8) obj. -39.1189 iterations 4
Cbc0038I Pass  50: suminf.    2.15404 (8) obj. -39.1189 iterations 4
Cbc0038I Pass  51: suminf.    1.12135 (7) obj. -39.1189 iterations 2
Cbc0038I Pass  52: suminf.    1.01117 (7) obj. -39.1189 iterations 5
Cbc0038I Pass  53: suminf.    2.15757 (7) obj. -39.1189 iterations 5
Cbc0038I Pass  54: suminf.    0.97453 (7) obj. -39.1189 iterations 1
Cbc0038I Pass  55: suminf.    0.97281 (7) obj. -39.1189 iterations 5
Cbc0038I Pass  56: suminf.    2.20258 (7) obj. -39.1189 iterations 5
Cbc0038I Pass  57: suminf.    2.22627 (9) obj. -39.1189 iterations 12
Cbc0038I Pass  58: suminf.    1.98677 (10) obj. -39.1189 iterations 3
Cbc0038I Pass  59: suminf.    1.34638 (9) obj. -39.1189 iterations 2
Cbc0038I Pass  60: suminf.    1.91848 (8) obj. -39.1189 iterations 8
Cbc0038I Pass  61: suminf.    1.39904 (6) obj. -39.1189 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 80 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -31.1669 - took 0.03 seconds
Cbc0012I Integer solution of -31.166934 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 68 rows 80 columns, reduced to 13 rows 16 columns
Cbc0031I 21 added rows had average density of 17.47619
Cbc0013I At root node, 21 cuts changed objective from -65.681785 to -32.486033 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 346 row cuts average 3.0 elements, 18 column cuts (18 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.166934 best solution, best possible -32.486033 (0.32 seconds)
Cbc0012I Integer solution of -31.762114 found by rounding after 418 iterations and 8 nodes (0.75 seconds)
Cbc0001I Search completed - best objective -31.762114, took 452 iterations and 10 nodes (0.81 seconds)
Cbc0032I Strong branching done 94 times (634 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.81

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-29) rows, 45 (-8) columns and 235 (-68) elements
Clp1000I sum of infeasibilities 1.96405e-05 - average 2.58427e-07, 10 fixed columns
Coin0506I Presolve 57 (-19) rows, 35 (-10) columns and 177 (-58) elements
Clp0000I Optimal - objective value 53.496766
Clp0000I Optimal - objective value 53.496766
Coin0511I After Postsolve, objective 53.496766, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.496766
Clp0000I Optimal - objective value 53.496766
Clp0000I Optimal - objective value 53.496766
Coin0511I After Postsolve, objective 53.496766, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.4967657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 76 rows, 45 columns (44 integer (44 of which binary)) and 235 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.807%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.39459
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.2716 iterations 25
Cbc0038I Solution found of -10.2716
Cbc0038I Relaxing continuous gives -10.2716
Cbc0038I Rounding solution of -20.0464 is better than previous of -10.2716

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 45 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -20.0464 to -31.7621 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.9357
Cbc0038I Pass   2: suminf.    0.94962 (6) obj. -33.9357 iterations 9
Cbc0038I Pass   3: suminf.    0.88088 (7) obj. -33.9357 iterations 2
Cbc0038I Pass   4: suminf.    1.77905 (6) obj. -33.9357 iterations 12
Cbc0038I Pass   5: suminf.    0.68772 (3) obj. -33.9357 iterations 5
Cbc0038I Pass   6: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass   7: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass   8: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass   9: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  10: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  11: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  12: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass  13: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  14: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  15: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  16: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  17: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass  18: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  19: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  20: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  21: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  22: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass  23: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  24: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  25: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  26: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  27: suminf.    1.08610 (4) obj. -33.9357 iterations 6
Cbc0038I Pass  28: suminf.    0.97271 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  29: suminf.    0.72168 (3) obj. -33.9357 iterations 2
Cbc0038I Pass  30: suminf.    0.68772 (3) obj. -33.9357 iterations 1
Cbc0038I Pass  31: suminf.    0.68268 (3) obj. -33.9357 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 45 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -31.7621 - took 0.04 seconds
Cbc0012I Integer solution of -31.762114 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 76 rows 45 columns, reduced to 34 rows 23 columns
Cbc0031I 15 added rows had average density of 34.466667
Cbc0013I At root node, 15 cuts changed objective from -53.496766 to -38.036876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2441 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 729 row cuts average 44.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -31.762114, took 3229 iterations and 16 nodes (0.36 seconds)
Cbc0032I Strong branching done 168 times (1798 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 5, 63 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-38) rows, 79 (-24) columns and 956 (-623) elements
Clp1000I sum of infeasibilities 7.35523e-08 - average 1.09779e-09, 12 fixed columns
Coin0506I Presolve 56 (-11) rows, 67 (-12) columns and 705 (-251) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 4.420784 - largest nonzero change 2.6764744e-05 ( 0.0018056464%) - largest zero change 2.9054447e-05
Clp0000I Optimal - objective value 72.769372
Clp0000I Optimal - objective value 72.769372
Coin0511I After Postsolve, objective 72.769372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.769372
Clp0000I Optimal - objective value 72.769372
Clp0000I Optimal - objective value 72.769372
Coin0511I After Postsolve, objective 72.769372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.76937192 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 68 rows, 80 columns (80 integer (80 of which binary)) and 961 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.6256
Cbc0038I Pass   1: suminf.    2.43747 (18) obj. -45.7375 iterations 10
Cbc0038I Pass   2: suminf.    2.43747 (18) obj. -45.7375 iterations 5
Cbc0038I Solution found of -16.5318
Cbc0038I Rounding solution of -19.8732 is better than previous of -16.5318

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 80 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -19.8732 to -28.7888 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.4781
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.43747 (18) obj. -45.7375 iterations 0
Cbc0038I Pass   4: suminf.    2.43747 (18) obj. -45.7375 iterations 1
Cbc0038I Pass   5: suminf.    0.67164 (9) obj. -32.4781 iterations 21
Cbc0038I Pass   6: suminf.    0.67164 (9) obj. -32.4781 iterations 0
Cbc0038I Pass   7: suminf.    1.13338 (3) obj. -32.4781 iterations 12
Cbc0038I Pass   8: suminf.    0.77230 (3) obj. -32.4781 iterations 2
Cbc0038I Pass   9: suminf.    0.77398 (6) obj. -32.4781 iterations 2
Cbc0038I Pass  10: suminf.    0.85792 (5) obj. -32.4781 iterations 2
Cbc0038I Pass  11: suminf.    0.56916 (2) obj. -34.2926 iterations 3
Cbc0038I Pass  12: suminf.    0.86528 (2) obj. -32.4781 iterations 4
Cbc0038I Pass  13: suminf.    0.85993 (5) obj. -32.4781 iterations 3
Cbc0038I Pass  14: suminf.    1.38558 (7) obj. -32.4781 iterations 15
Cbc0038I Pass  15: suminf.    1.30977 (6) obj. -32.4781 iterations 6
Cbc0038I Pass  16: suminf.    0.33161 (4) obj. -32.4781 iterations 6
Cbc0038I Pass  17: suminf.    0.33161 (4) obj. -32.4781 iterations 0
Cbc0038I Pass  18: suminf.    0.54874 (3) obj. -32.4781 iterations 6
Cbc0038I Pass  19: suminf.    1.90871 (9) obj. -32.4781 iterations 13
Cbc0038I Pass  20: suminf.    1.90871 (9) obj. -32.4781 iterations 2
Cbc0038I Pass  21: suminf.    1.41812 (12) obj. -32.4781 iterations 9
Cbc0038I Pass  22: suminf.    1.34053 (6) obj. -32.4781 iterations 6
Cbc0038I Pass  23: suminf.    1.48933 (6) obj. -32.4781 iterations 4
Cbc0038I Pass  24: suminf.    1.48933 (6) obj. -32.4781 iterations 2
Cbc0038I Pass  25: suminf.    2.29596 (12) obj. -32.4781 iterations 25
Cbc0038I Pass  26: suminf.    2.29596 (12) obj. -32.4781 iterations 2
Cbc0038I Pass  27: suminf.    2.40436 (9) obj. -32.4781 iterations 14
Cbc0038I Pass  28: suminf.    2.01682 (9) obj. -32.4781 iterations 2
Cbc0038I Pass  29: suminf.    2.41653 (9) obj. -32.4781 iterations 9
Cbc0038I Pass  30: suminf.    2.40136 (9) obj. -32.4781 iterations 3
Cbc0038I Pass  31: suminf.    2.19936 (9) obj. -32.4781 iterations 7
Cbc0038I Pass  32: suminf.    1.48573 (7) obj. -32.4781 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 80 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -28.7888 to -31.1669 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.1189
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.43747 (18) obj. -45.7375 iterations 0
Cbc0038I Pass  33: suminf.    2.43747 (18) obj. -45.7375 iterations 1
Cbc0038I Pass  34: suminf.    1.66831 (13) obj. -39.1189 iterations 17
Cbc0038I Pass  35: suminf.    1.66831 (13) obj. -39.1189 iterations 0
Cbc0038I Pass  36: suminf.    1.51092 (5) obj. -39.1189 iterations 20
Cbc0038I Pass  37: suminf.    1.01945 (5) obj. -39.1189 iterations 4
Cbc0038I Pass  38: suminf.    1.01285 (8) obj. -39.1189 iterations 4
Cbc0038I Pass  39: suminf.    1.17467 (7) obj. -39.1189 iterations 4
Cbc0038I Pass  40: suminf.    0.92090 (4) obj. -40.0556 iterations 2
Cbc0038I Pass  41: suminf.    1.23315 (4) obj. -39.1189 iterations 7
Cbc0038I Pass  42: suminf.    1.65101 (10) obj. -39.1189 iterations 9
Cbc0038I Pass  43: suminf.    1.23387 (8) obj. -39.1189 iterations 3
Cbc0038I Pass  44: suminf.    1.25260 (5) obj. -39.1189 iterations 10
Cbc0038I Pass  45: suminf.    1.25260 (5) obj. -39.1189 iterations 1
Cbc0038I Pass  46: suminf.    1.47228 (8) obj. -39.1189 iterations 4
Cbc0038I Pass  47: suminf.    1.47228 (8) obj. -39.1189 iterations 0
Cbc0038I Pass  48: suminf.    2.12119 (8) obj. -39.1189 iterations 3
Cbc0038I Pass  49: suminf.    1.43800 (8) obj. -39.1189 iterations 4
Cbc0038I Pass  50: suminf.    2.15404 (8) obj. -39.1189 iterations 4
Cbc0038I Pass  51: suminf.    1.12135 (7) obj. -39.1189 iterations 2
Cbc0038I Pass  52: suminf.    1.01117 (7) obj. -39.1189 iterations 5
Cbc0038I Pass  53: suminf.    2.15757 (7) obj. -39.1189 iterations 5
Cbc0038I Pass  54: suminf.    0.97453 (7) obj. -39.1189 iterations 1
Cbc0038I Pass  55: suminf.    0.97281 (7) obj. -39.1189 iterations 5
Cbc0038I Pass  56: suminf.    2.20258 (7) obj. -39.1189 iterations 5
Cbc0038I Pass  57: suminf.    2.22627 (9) obj. -39.1189 iterations 12
Cbc0038I Pass  58: suminf.    1.98677 (10) obj. -39.1189 iterations 3
Cbc0038I Pass  59: suminf.    1.34638 (9) obj. -39.1189 iterations 2
Cbc0038I Pass  60: suminf.    1.91848 (8) obj. -39.1189 iterations 8
Cbc0038I Pass  61: suminf.    1.39904 (6) obj. -39.1189 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 80 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -31.1669 - took 0.03 seconds
Cbc0012I Integer solution of -31.166934 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 68 rows 80 columns, reduced to 13 rows 16 columns
Cbc0031I 21 added rows had average density of 17.47619
Cbc0013I At root node, 21 cuts changed objective from -65.681785 to -32.486033 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 346 row cuts average 3.0 elements, 18 column cuts (18 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.166934 best solution, best possible -32.486033 (0.35 seconds)
Cbc0012I Integer solution of -31.762114 found by rounding after 418 iterations and 8 nodes (0.80 seconds)
Cbc0001I Search completed - best objective -31.762114, took 452 iterations and 10 nodes (0.86 seconds)
Cbc0032I Strong branching done 94 times (634 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.86

