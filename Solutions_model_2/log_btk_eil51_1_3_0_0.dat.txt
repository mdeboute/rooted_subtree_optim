Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 280 (-23) elements
Clp1000I sum of infeasibilities 1.27336e-05 - average 1.36921e-07, 12 fixed columns
Coin0506I Presolve 67 (-26) rows, 37 (-14) columns and 200 (-80) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 117.33912
Clp0000I Optimal - objective value 117.33912
Coin0511I After Postsolve, objective 117.33912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.33912
Clp0000I Optimal - objective value 117.33912
Clp0000I Optimal - objective value 117.33912
Coin0511I After Postsolve, objective 117.33912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.3391189 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 280 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.2668
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -56.4489 iterations 27
Cbc0038I Solution found of -56.4489
Cbc0038I Relaxing continuous gives -56.4489
Cbc0038I Rounding solution of -80.6854 is better than previous of -56.4489

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -80.6854 to -89.105 (0.02 seconds)
Cbc0038I Round again with cutoff of -91.9285
Cbc0038I Pass   2: suminf.    2.04200 (6) obj. -91.9285 iterations 7
Cbc0038I Pass   3: suminf.    1.42265 (4) obj. -91.9285 iterations 7
Cbc0038I Pass   4: suminf.    1.18309 (4) obj. -91.9285 iterations 6
Cbc0038I Pass   5: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass   6: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass   7: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I Pass   8: suminf.    1.16311 (3) obj. -91.9285 iterations 7
Cbc0038I Pass   9: suminf.    0.63220 (3) obj. -91.9285 iterations 5
Cbc0038I Pass  10: suminf.    1.18309 (4) obj. -91.9285 iterations 7
Cbc0038I Pass  11: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass  12: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass  13: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I Pass  14: suminf.    1.16311 (3) obj. -91.9285 iterations 7
Cbc0038I Pass  15: suminf.    0.63220 (3) obj. -91.9285 iterations 5
Cbc0038I Pass  16: suminf.    1.18309 (4) obj. -91.9285 iterations 7
Cbc0038I Pass  17: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass  18: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass  19: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I Pass  20: suminf.    1.16311 (3) obj. -91.9285 iterations 7
Cbc0038I Pass  21: suminf.    0.63220 (3) obj. -91.9285 iterations 5
Cbc0038I Pass  22: suminf.    1.18309 (4) obj. -91.9285 iterations 7
Cbc0038I Pass  23: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass  24: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass  25: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I Pass  26: suminf.    1.16311 (3) obj. -91.9285 iterations 7
Cbc0038I Pass  27: suminf.    0.63220 (3) obj. -91.9285 iterations 5
Cbc0038I Pass  28: suminf.    1.18309 (4) obj. -91.9285 iterations 7
Cbc0038I Pass  29: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass  30: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass  31: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -89.105 - took 0.03 seconds
Cbc0012I Integer solution of -89.10495 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 43 rows 25 columns
Cbc0031I 14 added rows had average density of 28.785714
Cbc0013I At root node, 14 cuts changed objective from -117.33912 to -102.48313 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4040 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1260 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 135 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0001I Search completed - best objective -89.10494999999999, took 4092 iterations and 12 nodes (0.35 seconds)
Cbc0032I Strong branching done 190 times (1835 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 4, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-24) rows, 87 (-15) columns and 1196 (-382) elements
Clp1000I sum of infeasibilities 1.43361e-06 - average 1.79202e-08, 13 fixed columns
Coin0506I Presolve 67 (-13) rows, 72 (-15) columns and 826 (-370) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 4.2996771 - largest nonzero change 2.92303e-05 ( 0.0018056464%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 136.31531
Clp0000I Optimal - objective value 136.31531
Coin0511I After Postsolve, objective 136.31531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 136.31531
Clp0000I Optimal - objective value 136.31531
Clp0000I Optimal - objective value 136.31531
Coin0511I After Postsolve, objective 136.31531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.3153121 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 87 columns (87 integer (87 of which binary)) and 1202 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.271%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 2.53591
Cbc0038I Pass   1: suminf.    1.34192 (15) obj. -103.99 iterations 13
Cbc0038I Pass   2: suminf.    1.34192 (15) obj. -103.99 iterations 1
Cbc0038I Pass   3: suminf.    0.16235 (4) obj. -81.8092 iterations 11
Cbc0038I Solution found of -75.1237
Cbc0038I Rounding solution of -75.2797 is better than previous of -75.1237

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -79.4735
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.34192 (15) obj. -103.99 iterations 0
Cbc0038I Pass   5: suminf.    1.34192 (15) obj. -103.99 iterations 1
Cbc0038I Pass   6: suminf.    0.24638 (1) obj. -79.4735 iterations 16
Cbc0038I Pass   7: suminf.    0.17073 (1) obj. -86.4455 iterations 2
Cbc0038I Pass   8: suminf.    0.35868 (1) obj. -79.4735 iterations 1
Cbc0038I Pass   9: suminf.    0.53168 (4) obj. -79.4735 iterations 12
Cbc0038I Pass  10: suminf.    0.35518 (3) obj. -80.2611 iterations 3
Cbc0038I Pass  11: suminf.    0.31759 (2) obj. -79.4735 iterations 4
Cbc0038I Pass  12: suminf.    0.31406 (2) obj. -79.4735 iterations 1
Cbc0038I Pass  13: suminf.    0.45818 (2) obj. -79.4735 iterations 1
Cbc0038I Pass  14: suminf.    0.86529 (6) obj. -79.4735 iterations 19
Cbc0038I Pass  15: suminf.    0.28048 (4) obj. -79.9706 iterations 3
Cbc0038I Pass  16: suminf.    0.58217 (10) obj. -79.4735 iterations 7
Cbc0038I Pass  17: suminf.    0.13333 (1) obj. -80.165 iterations 3
Cbc0038I Pass  18: suminf.    0.38525 (2) obj. -79.4735 iterations 5
Cbc0038I Pass  19: suminf.    1.18209 (10) obj. -79.4735 iterations 28
Cbc0038I Pass  20: suminf.    1.03268 (7) obj. -79.4735 iterations 5
Cbc0038I Pass  21: suminf.    0.39684 (2) obj. -79.4735 iterations 10
Cbc0038I Pass  22: suminf.    0.15556 (1) obj. -80.4443 iterations 3
Cbc0038I Pass  23: suminf.    0.29424 (1) obj. -79.4735 iterations 3
Cbc0038I Pass  24: suminf.    2.84201 (18) obj. -79.4735 iterations 13
Cbc0038I Pass  25: suminf.    2.04427 (15) obj. -79.4735 iterations 3
Cbc0038I Pass  26: suminf.    0.78765 (6) obj. -79.4735 iterations 23
Cbc0038I Pass  27: suminf.    0.37267 (3) obj. -79.4735 iterations 4
Cbc0038I Pass  28: suminf.    0.58943 (3) obj. -79.4735 iterations 3
Cbc0038I Pass  29: suminf.    1.35672 (10) obj. -79.4735 iterations 20
Cbc0038I Pass  30: suminf.    1.33986 (9) obj. -79.4735 iterations 6
Cbc0038I Pass  31: suminf.    0.82718 (5) obj. -79.4735 iterations 15
Cbc0038I Pass  32: suminf.    0.82718 (5) obj. -79.4735 iterations 2
Cbc0038I Pass  33: suminf.    0.59841 (3) obj. -79.4735 iterations 9
Cbc0038I Rounding solution of -81.0983 is better than previous of -75.2797

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 87 columns, reduced to 29 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -81.0983 to -85.1334 (0.04 seconds)
Cbc0038I Round again with cutoff of -91.5502
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.34192 (15) obj. -103.99 iterations 0
Cbc0038I Pass  34: suminf.    1.34192 (15) obj. -103.99 iterations 1
Cbc0038I Pass  35: suminf.    0.71226 (2) obj. -91.5502 iterations 19
Cbc0038I Pass  36: suminf.    0.28184 (2) obj. -92.6677 iterations 3
Cbc0038I Pass  37: suminf.    0.44149 (2) obj. -91.5502 iterations 2
Cbc0038I Pass  38: suminf.    2.32235 (18) obj. -91.5502 iterations 17
Cbc0038I Pass  39: suminf.    0.64154 (7) obj. -91.5502 iterations 3
Cbc0038I Pass  40: suminf.    0.64154 (7) obj. -91.5502 iterations 0
Cbc0038I Pass  41: suminf.    1.24824 (4) obj. -91.5502 iterations 7
Cbc0038I Pass  42: suminf.    0.64606 (3) obj. -91.5502 iterations 1
Cbc0038I Pass  43: suminf.    0.64606 (3) obj. -91.5502 iterations 0
Cbc0038I Pass  44: suminf.    0.91895 (3) obj. -91.5502 iterations 1
Cbc0038I Pass  45: suminf.    0.42715 (3) obj. -93.0865 iterations 2
Cbc0038I Pass  46: suminf.    0.75245 (3) obj. -91.5502 iterations 3
Cbc0038I Pass  47: suminf.    0.53427 (4) obj. -91.5502 iterations 9
Cbc0038I Pass  48: suminf.    0.53427 (4) obj. -91.5502 iterations 1
Cbc0038I Pass  49: suminf.    1.16121 (13) obj. -91.5502 iterations 8
Cbc0038I Pass  50: suminf.    1.00624 (12) obj. -91.8057 iterations 2
Cbc0038I Pass  51: suminf.    1.12249 (8) obj. -91.5502 iterations 17
Cbc0038I Pass  52: suminf.    1.12249 (8) obj. -91.5502 iterations 4
Cbc0038I Pass  53: suminf.    1.18632 (8) obj. -91.5502 iterations 4
Cbc0038I Pass  54: suminf.    1.18632 (8) obj. -91.5502 iterations 3
Cbc0038I Pass  55: suminf.    1.12249 (8) obj. -91.5502 iterations 7
Cbc0038I Pass  56: suminf.    2.05768 (16) obj. -91.5502 iterations 15
Cbc0038I Pass  57: suminf.    1.55970 (12) obj. -91.5502 iterations 8
Cbc0038I Pass  58: suminf.    1.59440 (10) obj. -91.5502 iterations 12
Cbc0038I Pass  59: suminf.    1.32811 (9) obj. -91.8531 iterations 4
Cbc0038I Pass  60: suminf.    1.39132 (8) obj. -91.5502 iterations 7
Cbc0038I Pass  61: suminf.    0.96451 (9) obj. -91.5502 iterations 6
Cbc0038I Pass  62: suminf.    1.47958 (9) obj. -91.5502 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 87 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -85.1334 to -85.3129 (0.06 seconds)
Cbc0038I Round again with cutoff of -99.2502
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.34192 (15) obj. -103.99 iterations 0
Cbc0038I Pass  63: suminf.    1.34192 (15) obj. -103.99 iterations 1
Cbc0038I Pass  64: suminf.    0.82500 (4) obj. -99.2502 iterations 23
Cbc0038I Pass  65: suminf.    0.60201 (5) obj. -99.2502 iterations 4
Cbc0038I Pass  66: suminf.    0.82500 (4) obj. -99.2502 iterations 4
Cbc0038I Pass  67: suminf.    1.01296 (7) obj. -99.2502 iterations 13
Cbc0038I Pass  68: suminf.    0.75802 (7) obj. -99.2502 iterations 2
Cbc0038I Pass  69: suminf.    1.56071 (17) obj. -99.2502 iterations 5
Cbc0038I Pass  70: suminf.    1.35648 (17) obj. -99.8629 iterations 2
Cbc0038I Pass  71: suminf.    1.59430 (13) obj. -99.2502 iterations 18
Cbc0038I Pass  72: suminf.    1.59430 (13) obj. -99.2502 iterations 1
Cbc0038I Pass  73: suminf.    1.50267 (12) obj. -99.2502 iterations 6
Cbc0038I Pass  74: suminf.    1.43290 (13) obj. -99.2502 iterations 4
Cbc0038I Pass  75: suminf.    1.50267 (12) obj. -99.2502 iterations 4
Cbc0038I Pass  76: suminf.    1.64181 (17) obj. -99.2502 iterations 10
Cbc0038I Pass  77: suminf.    1.37477 (13) obj. -99.5185 iterations 5
Cbc0038I Pass  78: suminf.    1.50267 (12) obj. -99.2502 iterations 7
Cbc0038I Pass  79: suminf.    1.95382 (15) obj. -99.2502 iterations 9
Cbc0038I Pass  80: suminf.    1.44772 (11) obj. -99.2502 iterations 4
Cbc0038I Pass  81: suminf.    1.71623 (13) obj. -99.2502 iterations 9
Cbc0038I Pass  82: suminf.    1.39262 (14) obj. -99.2502 iterations 3
Cbc0038I Pass  83: suminf.    2.46457 (14) obj. -99.2502 iterations 6
Cbc0038I Pass  84: suminf.    1.55742 (13) obj. -99.2502 iterations 2
Cbc0038I Pass  85: suminf.    1.43290 (13) obj. -99.2502 iterations 3
Cbc0038I Pass  86: suminf.    1.50267 (12) obj. -99.2502 iterations 4
Cbc0038I Pass  87: suminf.    2.08260 (14) obj. -99.2502 iterations 12
Cbc0038I Pass  88: suminf.    1.39529 (13) obj. -99.5711 iterations 6
Cbc0038I Pass  89: suminf.    1.35347 (14) obj. -99.2502 iterations 2
Cbc0038I Pass  90: suminf.    1.55576 (13) obj. -99.2502 iterations 5
Cbc0038I Pass  91: suminf.    3.02700 (19) obj. -99.2502 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -85.3129 - took 0.08 seconds
Cbc0012I Integer solution of -85.31287 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 80 rows 87 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -89.10495 found by DiveCoefficient after 254 iterations and 0 nodes (0.15 seconds)
Cbc0031I 38 added rows had average density of 10.526316
Cbc0013I At root node, 38 cuts changed objective from -117.21696 to -90.676033 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 924 row cuts average 9.6 elements, 10 column cuts (43 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 65 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 44.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -89.10494999999999, took 354 iterations and 2 nodes (0.17 seconds)
Cbc0032I Strong branching done 54 times (801 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 280 (-23) elements
Clp1000I sum of infeasibilities 1.27336e-05 - average 1.36921e-07, 12 fixed columns
Coin0506I Presolve 67 (-26) rows, 37 (-14) columns and 200 (-80) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 117.33912
Clp0000I Optimal - objective value 117.33912
Coin0511I After Postsolve, objective 117.33912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.33912
Clp0000I Optimal - objective value 117.33912
Clp0000I Optimal - objective value 117.33912
Coin0511I After Postsolve, objective 117.33912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.3391189 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 280 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.2668
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -56.4489 iterations 27
Cbc0038I Solution found of -56.4489
Cbc0038I Relaxing continuous gives -56.4489
Cbc0038I Rounding solution of -80.6854 is better than previous of -56.4489

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -80.6854 to -89.105 (0.02 seconds)
Cbc0038I Round again with cutoff of -91.9285
Cbc0038I Pass   2: suminf.    2.04200 (6) obj. -91.9285 iterations 7
Cbc0038I Pass   3: suminf.    1.42265 (4) obj. -91.9285 iterations 7
Cbc0038I Pass   4: suminf.    1.18309 (4) obj. -91.9285 iterations 6
Cbc0038I Pass   5: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass   6: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass   7: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I Pass   8: suminf.    1.16311 (3) obj. -91.9285 iterations 7
Cbc0038I Pass   9: suminf.    0.63220 (3) obj. -91.9285 iterations 5
Cbc0038I Pass  10: suminf.    1.18309 (4) obj. -91.9285 iterations 7
Cbc0038I Pass  11: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass  12: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass  13: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I Pass  14: suminf.    1.16311 (3) obj. -91.9285 iterations 7
Cbc0038I Pass  15: suminf.    0.63220 (3) obj. -91.9285 iterations 5
Cbc0038I Pass  16: suminf.    1.18309 (4) obj. -91.9285 iterations 7
Cbc0038I Pass  17: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass  18: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass  19: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I Pass  20: suminf.    1.16311 (3) obj. -91.9285 iterations 7
Cbc0038I Pass  21: suminf.    0.63220 (3) obj. -91.9285 iterations 5
Cbc0038I Pass  22: suminf.    1.18309 (4) obj. -91.9285 iterations 7
Cbc0038I Pass  23: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass  24: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass  25: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I Pass  26: suminf.    1.16311 (3) obj. -91.9285 iterations 7
Cbc0038I Pass  27: suminf.    0.63220 (3) obj. -91.9285 iterations 5
Cbc0038I Pass  28: suminf.    1.18309 (4) obj. -91.9285 iterations 7
Cbc0038I Pass  29: suminf.    1.18309 (4) obj. -91.9285 iterations 0
Cbc0038I Pass  30: suminf.    1.46778 (4) obj. -91.9285 iterations 5
Cbc0038I Pass  31: suminf.    1.46778 (4) obj. -91.9285 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -89.105 - took 0.02 seconds
Cbc0012I Integer solution of -89.10495 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 43 rows 25 columns
Cbc0031I 14 added rows had average density of 28.785714
Cbc0013I At root node, 14 cuts changed objective from -117.33912 to -102.48313 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4040 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1260 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 135 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0001I Search completed - best objective -89.10494999999999, took 4092 iterations and 12 nodes (0.38 seconds)
Cbc0032I Strong branching done 190 times (1835 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 4, 80 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-25) rows, 87 (-16) columns and 1196 (-383) elements
Clp1000I sum of infeasibilities 1.43361e-06 - average 1.79202e-08, 13 fixed columns
Coin0506I Presolve 67 (-13) rows, 72 (-15) columns and 826 (-370) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 4.2996771 - largest nonzero change 2.92303e-05 ( 0.0018056464%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 136.31531
Clp0000I Optimal - objective value 136.31531
Coin0511I After Postsolve, objective 136.31531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 136.31531
Clp0000I Optimal - objective value 136.31531
Clp0000I Optimal - objective value 136.31531
Coin0511I After Postsolve, objective 136.31531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.3153121 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 87 columns (87 integer (87 of which binary)) and 1202 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.271%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 2.53591
Cbc0038I Pass   1: suminf.    1.34192 (15) obj. -103.99 iterations 13
Cbc0038I Pass   2: suminf.    1.34192 (15) obj. -103.99 iterations 1
Cbc0038I Pass   3: suminf.    0.16235 (4) obj. -81.8092 iterations 11
Cbc0038I Solution found of -75.1237
Cbc0038I Rounding solution of -75.2797 is better than previous of -75.1237

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -79.4735
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.34192 (15) obj. -103.99 iterations 0
Cbc0038I Pass   5: suminf.    1.34192 (15) obj. -103.99 iterations 1
Cbc0038I Pass   6: suminf.    0.24638 (1) obj. -79.4735 iterations 16
Cbc0038I Pass   7: suminf.    0.17073 (1) obj. -86.4455 iterations 2
Cbc0038I Pass   8: suminf.    0.35868 (1) obj. -79.4735 iterations 1
Cbc0038I Pass   9: suminf.    0.53168 (4) obj. -79.4735 iterations 12
Cbc0038I Pass  10: suminf.    0.35518 (3) obj. -80.2611 iterations 3
Cbc0038I Pass  11: suminf.    0.31759 (2) obj. -79.4735 iterations 4
Cbc0038I Pass  12: suminf.    0.31406 (2) obj. -79.4735 iterations 1
Cbc0038I Pass  13: suminf.    0.45818 (2) obj. -79.4735 iterations 1
Cbc0038I Pass  14: suminf.    0.86529 (6) obj. -79.4735 iterations 19
Cbc0038I Pass  15: suminf.    0.28048 (4) obj. -79.9706 iterations 3
Cbc0038I Pass  16: suminf.    0.58217 (10) obj. -79.4735 iterations 7
Cbc0038I Pass  17: suminf.    0.13333 (1) obj. -80.165 iterations 3
Cbc0038I Pass  18: suminf.    0.38525 (2) obj. -79.4735 iterations 5
Cbc0038I Pass  19: suminf.    1.18209 (10) obj. -79.4735 iterations 28
Cbc0038I Pass  20: suminf.    1.03268 (7) obj. -79.4735 iterations 5
Cbc0038I Pass  21: suminf.    0.39684 (2) obj. -79.4735 iterations 10
Cbc0038I Pass  22: suminf.    0.15556 (1) obj. -80.4443 iterations 3
Cbc0038I Pass  23: suminf.    0.29424 (1) obj. -79.4735 iterations 3
Cbc0038I Pass  24: suminf.    2.84201 (18) obj. -79.4735 iterations 13
Cbc0038I Pass  25: suminf.    2.04427 (15) obj. -79.4735 iterations 3
Cbc0038I Pass  26: suminf.    0.78765 (6) obj. -79.4735 iterations 23
Cbc0038I Pass  27: suminf.    0.37267 (3) obj. -79.4735 iterations 4
Cbc0038I Pass  28: suminf.    0.58943 (3) obj. -79.4735 iterations 3
Cbc0038I Pass  29: suminf.    1.35672 (10) obj. -79.4735 iterations 20
Cbc0038I Pass  30: suminf.    1.33986 (9) obj. -79.4735 iterations 6
Cbc0038I Pass  31: suminf.    0.82718 (5) obj. -79.4735 iterations 15
Cbc0038I Pass  32: suminf.    0.82718 (5) obj. -79.4735 iterations 2
Cbc0038I Pass  33: suminf.    0.59841 (3) obj. -79.4735 iterations 9
Cbc0038I Rounding solution of -81.0983 is better than previous of -75.2797

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 87 columns, reduced to 29 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -81.0983 to -85.1334 (0.04 seconds)
Cbc0038I Round again with cutoff of -91.5502
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.34192 (15) obj. -103.99 iterations 0
Cbc0038I Pass  34: suminf.    1.34192 (15) obj. -103.99 iterations 1
Cbc0038I Pass  35: suminf.    0.71226 (2) obj. -91.5502 iterations 19
Cbc0038I Pass  36: suminf.    0.28184 (2) obj. -92.6677 iterations 3
Cbc0038I Pass  37: suminf.    0.44149 (2) obj. -91.5502 iterations 2
Cbc0038I Pass  38: suminf.    2.32235 (18) obj. -91.5502 iterations 17
Cbc0038I Pass  39: suminf.    0.64154 (7) obj. -91.5502 iterations 3
Cbc0038I Pass  40: suminf.    0.64154 (7) obj. -91.5502 iterations 0
Cbc0038I Pass  41: suminf.    1.24824 (4) obj. -91.5502 iterations 7
Cbc0038I Pass  42: suminf.    0.64606 (3) obj. -91.5502 iterations 1
Cbc0038I Pass  43: suminf.    0.64606 (3) obj. -91.5502 iterations 0
Cbc0038I Pass  44: suminf.    0.91895 (3) obj. -91.5502 iterations 1
Cbc0038I Pass  45: suminf.    0.42715 (3) obj. -93.0865 iterations 2
Cbc0038I Pass  46: suminf.    0.75245 (3) obj. -91.5502 iterations 3
Cbc0038I Pass  47: suminf.    0.53427 (4) obj. -91.5502 iterations 9
Cbc0038I Pass  48: suminf.    0.53427 (4) obj. -91.5502 iterations 1
Cbc0038I Pass  49: suminf.    1.16121 (13) obj. -91.5502 iterations 8
Cbc0038I Pass  50: suminf.    1.00624 (12) obj. -91.8057 iterations 2
Cbc0038I Pass  51: suminf.    1.12249 (8) obj. -91.5502 iterations 17
Cbc0038I Pass  52: suminf.    1.12249 (8) obj. -91.5502 iterations 4
Cbc0038I Pass  53: suminf.    1.18632 (8) obj. -91.5502 iterations 4
Cbc0038I Pass  54: suminf.    1.18632 (8) obj. -91.5502 iterations 3
Cbc0038I Pass  55: suminf.    1.12249 (8) obj. -91.5502 iterations 7
Cbc0038I Pass  56: suminf.    2.05768 (16) obj. -91.5502 iterations 15
Cbc0038I Pass  57: suminf.    1.55970 (12) obj. -91.5502 iterations 8
Cbc0038I Pass  58: suminf.    1.59440 (10) obj. -91.5502 iterations 12
Cbc0038I Pass  59: suminf.    1.32811 (9) obj. -91.8531 iterations 4
Cbc0038I Pass  60: suminf.    1.39132 (8) obj. -91.5502 iterations 7
Cbc0038I Pass  61: suminf.    0.96451 (9) obj. -91.5502 iterations 6
Cbc0038I Pass  62: suminf.    1.47958 (9) obj. -91.5502 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 87 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -85.1334 to -85.3129 (0.06 seconds)
Cbc0038I Round again with cutoff of -99.2502
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.34192 (15) obj. -103.99 iterations 0
Cbc0038I Pass  63: suminf.    1.34192 (15) obj. -103.99 iterations 1
Cbc0038I Pass  64: suminf.    0.82500 (4) obj. -99.2502 iterations 23
Cbc0038I Pass  65: suminf.    0.60201 (5) obj. -99.2502 iterations 4
Cbc0038I Pass  66: suminf.    0.82500 (4) obj. -99.2502 iterations 4
Cbc0038I Pass  67: suminf.    1.01296 (7) obj. -99.2502 iterations 13
Cbc0038I Pass  68: suminf.    0.75802 (7) obj. -99.2502 iterations 2
Cbc0038I Pass  69: suminf.    1.56071 (17) obj. -99.2502 iterations 5
Cbc0038I Pass  70: suminf.    1.35648 (17) obj. -99.8629 iterations 2
Cbc0038I Pass  71: suminf.    1.59430 (13) obj. -99.2502 iterations 18
Cbc0038I Pass  72: suminf.    1.59430 (13) obj. -99.2502 iterations 1
Cbc0038I Pass  73: suminf.    1.50267 (12) obj. -99.2502 iterations 6
Cbc0038I Pass  74: suminf.    1.43290 (13) obj. -99.2502 iterations 4
Cbc0038I Pass  75: suminf.    1.50267 (12) obj. -99.2502 iterations 4
Cbc0038I Pass  76: suminf.    1.64181 (17) obj. -99.2502 iterations 10
Cbc0038I Pass  77: suminf.    1.37477 (13) obj. -99.5185 iterations 5
Cbc0038I Pass  78: suminf.    1.50267 (12) obj. -99.2502 iterations 7
Cbc0038I Pass  79: suminf.    1.95382 (15) obj. -99.2502 iterations 9
Cbc0038I Pass  80: suminf.    1.44772 (11) obj. -99.2502 iterations 4
Cbc0038I Pass  81: suminf.    1.71623 (13) obj. -99.2502 iterations 9
Cbc0038I Pass  82: suminf.    1.39262 (14) obj. -99.2502 iterations 3
Cbc0038I Pass  83: suminf.    2.46457 (14) obj. -99.2502 iterations 6
Cbc0038I Pass  84: suminf.    1.55742 (13) obj. -99.2502 iterations 2
Cbc0038I Pass  85: suminf.    1.43290 (13) obj. -99.2502 iterations 3
Cbc0038I Pass  86: suminf.    1.50267 (12) obj. -99.2502 iterations 4
Cbc0038I Pass  87: suminf.    2.08260 (14) obj. -99.2502 iterations 12
Cbc0038I Pass  88: suminf.    1.39529 (13) obj. -99.5711 iterations 6
Cbc0038I Pass  89: suminf.    1.35347 (14) obj. -99.2502 iterations 2
Cbc0038I Pass  90: suminf.    1.55576 (13) obj. -99.2502 iterations 5
Cbc0038I Pass  91: suminf.    3.02700 (19) obj. -99.2502 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -85.3129 - took 0.09 seconds
Cbc0012I Integer solution of -85.31287 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 80 rows 87 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -89.10495 found by DiveCoefficient after 254 iterations and 0 nodes (0.17 seconds)
Cbc0031I 38 added rows had average density of 10.526316
Cbc0013I At root node, 38 cuts changed objective from -117.21696 to -90.676033 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 924 row cuts average 9.6 elements, 10 column cuts (43 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 65 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 44.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -89.10494999999999, took 354 iterations and 2 nodes (0.19 seconds)
Cbc0032I Strong branching done 54 times (801 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

