Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 26 (-21) rows, 16 (-8) columns and 77 (-52) elements
Clp0000I Optimal - objective value 69.655854
Coin0511I After Postsolve, objective 69.655854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.65585416 - 13 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 26 rows, 16 columns (15 integer (15 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.53325
Cbc0038I Pass   1: suminf.    0.47619 (1) obj. -49.8571 iterations 8
Cbc0038I Solution found of -34.5
Cbc0038I Relaxing continuous gives -34.5
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 16 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -34.5 to -48 (0.01 seconds)
Cbc0038I Round again with cutoff of -50.3905
Cbc0038I Pass   2: suminf.    0.50396 (2) obj. -50.3905 iterations 1
Cbc0038I Pass   3: suminf.    0.50396 (2) obj. -50.3905 iterations 0
Cbc0038I Pass   4: suminf.    0.85405 (5) obj. -50.3905 iterations 3
Cbc0038I Pass   5: suminf.    0.63654 (3) obj. -50.3905 iterations 3
Cbc0038I Pass   6: suminf.    0.60037 (4) obj. -50.3905 iterations 1
Cbc0038I Pass   7: suminf.    1.55086 (4) obj. -50.3905 iterations 5
Cbc0038I Pass   8: suminf.    0.63270 (5) obj. -50.3905 iterations 2
Cbc0038I Pass   9: suminf.    1.62251 (7) obj. -50.3905 iterations 8
Cbc0038I Pass  10: suminf.    1.49296 (7) obj. -50.3905 iterations 2
Cbc0038I Pass  11: suminf.    1.53769 (4) obj. -50.3905 iterations 11
Cbc0038I Pass  12: suminf.    0.60040 (3) obj. -50.3905 iterations 3
Cbc0038I Pass  13: suminf.    0.14987 (4) obj. -50.3905 iterations 5
Cbc0038I Pass  14: suminf.    1.69623 (5) obj. -50.3905 iterations 5
Cbc0038I Pass  15: suminf.    1.05252 (4) obj. -50.3905 iterations 2
Cbc0038I Pass  16: suminf.    0.17353 (4) obj. -50.3905 iterations 5
Cbc0038I Pass  17: suminf.    1.17339 (4) obj. -50.3905 iterations 5
Cbc0038I Pass  18: suminf.    0.86904 (4) obj. -50.3905 iterations 4
Cbc0038I Pass  19: suminf.    1.18188 (3) obj. -50.3905 iterations 6
Cbc0038I Pass  20: suminf.    1.15216 (5) obj. -50.3905 iterations 4
Cbc0038I Pass  21: suminf.    1.15216 (5) obj. -50.3905 iterations 1
Cbc0038I Pass  22: suminf.    0.65389 (5) obj. -50.3905 iterations 6
Cbc0038I Pass  23: suminf.    0.62567 (4) obj. -50.3905 iterations 1
Cbc0038I Pass  24: suminf.    1.06594 (4) obj. -50.3905 iterations 6
Cbc0038I Pass  25: suminf.    0.87830 (3) obj. -50.3905 iterations 3
Cbc0038I Pass  26: suminf.    1.24236 (3) obj. -50.3905 iterations 2
Cbc0038I Pass  27: suminf.    0.82015 (2) obj. -50.3905 iterations 3
Cbc0038I Pass  28: suminf.    1.05252 (4) obj. -50.3905 iterations 4
Cbc0038I Pass  29: suminf.    1.18188 (3) obj. -50.3905 iterations 5
Cbc0038I Pass  30: suminf.    0.86904 (4) obj. -50.3905 iterations 4
Cbc0038I Pass  31: suminf.    0.86904 (4) obj. -50.3905 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 16 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -48 - took 0.02 seconds
Cbc0012I Integer solution of -48 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 5 added rows had average density of 8.6
Cbc0013I At root node, 5 cuts changed objective from -69.655854 to -48.269644 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 380 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 423 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48, took 1037 iterations and 2 nodes (0.08 seconds)
Cbc0032I Strong branching done 18 times (64 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-18) rows, 32 (-12) columns and 181 (-179) elements
Clp1000I sum of infeasibilities 2.15114e-09 - average 7.68265e-11, 4 fixed columns
Coin0506I Presolve 25 (-3) rows, 28 (-4) columns and 129 (-52) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 93.962993
Clp0000I Optimal - objective value 93.962993
Coin0511I After Postsolve, objective 93.962993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.962993
Clp0000I Optimal - objective value 93.962993
Clp0000I Optimal - objective value 93.962993
Coin0511I After Postsolve, objective 93.962993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.96299276 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 32 columns (32 integer (32 of which binary)) and 185 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.596%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.5833
Cbc0038I Pass   1: suminf.    0.84964 (5) obj. -57.3984 iterations 7
Cbc0038I Pass   2: suminf.    0.84964 (5) obj. -57.3984 iterations 1
Cbc0038I Solution found of 3
Cbc0038I Rounding solution of -29.25 is better than previous of 3

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 32 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -29.25 to -47.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.1812
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.84964 (5) obj. -57.3984 iterations 0
Cbc0038I Pass   4: suminf.    0.84964 (5) obj. -57.3984 iterations 1
Cbc0038I Pass   5: suminf.    1.01989 (6) obj. -51.1812 iterations 8
Cbc0038I Pass   6: suminf.    1.00825 (7) obj. -51.1812 iterations 1
Cbc0038I Pass   7: suminf.    0.83463 (3) obj. -51.1812 iterations 6
Cbc0038I Pass   8: suminf.    0.83463 (3) obj. -51.1812 iterations 0
Cbc0038I Pass   9: suminf.    0.24798 (2) obj. -51.1812 iterations 3
Cbc0038I Pass  10: suminf.    0.23077 (1) obj. -51.5385 iterations 1
Cbc0038I Pass  11: suminf.    0.68003 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  12: suminf.    0.74725 (2) obj. -54.8269 iterations 2
Cbc0038I Pass  13: suminf.    0.96208 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  14: suminf.    0.83463 (3) obj. -51.1812 iterations 1
Cbc0038I Pass  15: suminf.    0.24798 (2) obj. -51.1812 iterations 3
Cbc0038I Pass  16: suminf.    0.23077 (1) obj. -51.5385 iterations 1
Cbc0038I Pass  17: suminf.    0.68003 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  18: suminf.    0.74725 (2) obj. -54.8269 iterations 2
Cbc0038I Pass  19: suminf.    0.96208 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  20: suminf.    0.83463 (3) obj. -51.1812 iterations 1
Cbc0038I Pass  21: suminf.    0.24798 (2) obj. -51.1812 iterations 3
Cbc0038I Pass  22: suminf.    0.23077 (1) obj. -51.5385 iterations 1
Cbc0038I Pass  23: suminf.    0.68003 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  24: suminf.    0.74725 (2) obj. -54.8269 iterations 2
Cbc0038I Pass  25: suminf.    0.96208 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  26: suminf.    0.83463 (3) obj. -51.1812 iterations 1
Cbc0038I Pass  27: suminf.    0.24798 (2) obj. -51.1812 iterations 3
Cbc0038I Pass  28: suminf.    0.23077 (1) obj. -51.5385 iterations 1
Cbc0038I Pass  29: suminf.    0.68003 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  30: suminf.    0.74725 (2) obj. -54.8269 iterations 2
Cbc0038I Pass  31: suminf.    0.96208 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  32: suminf.    0.83463 (3) obj. -51.1812 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 32 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -47.5 - took 0.01 seconds
Cbc0012I Integer solution of -47.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 28 rows 32 columns, reduced to 3 rows 2 columns
Cbc0012I Integer solution of -48 found by DiveCoefficient after 20 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 9
Cbc0013I At root node, 1 cuts changed objective from -82.063292 to -48 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 2.8 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48, took 20 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 26 (-21) rows, 16 (-8) columns and 77 (-52) elements
Clp0000I Optimal - objective value 69.655854
Coin0511I After Postsolve, objective 69.655854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.65585416 - 13 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 26 rows, 16 columns (15 integer (15 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.545%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.53325
Cbc0038I Pass   1: suminf.    0.47619 (1) obj. -49.8571 iterations 8
Cbc0038I Solution found of -34.5
Cbc0038I Relaxing continuous gives -34.5
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 16 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -34.5 to -48 (0.01 seconds)
Cbc0038I Round again with cutoff of -50.3905
Cbc0038I Pass   2: suminf.    0.50396 (2) obj. -50.3905 iterations 1
Cbc0038I Pass   3: suminf.    0.50396 (2) obj. -50.3905 iterations 0
Cbc0038I Pass   4: suminf.    0.85405 (5) obj. -50.3905 iterations 3
Cbc0038I Pass   5: suminf.    0.63654 (3) obj. -50.3905 iterations 3
Cbc0038I Pass   6: suminf.    0.60037 (4) obj. -50.3905 iterations 1
Cbc0038I Pass   7: suminf.    1.55086 (4) obj. -50.3905 iterations 5
Cbc0038I Pass   8: suminf.    0.63270 (5) obj. -50.3905 iterations 2
Cbc0038I Pass   9: suminf.    1.62251 (7) obj. -50.3905 iterations 8
Cbc0038I Pass  10: suminf.    1.49296 (7) obj. -50.3905 iterations 2
Cbc0038I Pass  11: suminf.    1.53769 (4) obj. -50.3905 iterations 11
Cbc0038I Pass  12: suminf.    0.60040 (3) obj. -50.3905 iterations 3
Cbc0038I Pass  13: suminf.    0.14987 (4) obj. -50.3905 iterations 5
Cbc0038I Pass  14: suminf.    1.69623 (5) obj. -50.3905 iterations 5
Cbc0038I Pass  15: suminf.    1.05252 (4) obj. -50.3905 iterations 2
Cbc0038I Pass  16: suminf.    0.17353 (4) obj. -50.3905 iterations 5
Cbc0038I Pass  17: suminf.    1.17339 (4) obj. -50.3905 iterations 5
Cbc0038I Pass  18: suminf.    0.86904 (4) obj. -50.3905 iterations 4
Cbc0038I Pass  19: suminf.    1.18188 (3) obj. -50.3905 iterations 6
Cbc0038I Pass  20: suminf.    1.15216 (5) obj. -50.3905 iterations 4
Cbc0038I Pass  21: suminf.    1.15216 (5) obj. -50.3905 iterations 1
Cbc0038I Pass  22: suminf.    0.65389 (5) obj. -50.3905 iterations 6
Cbc0038I Pass  23: suminf.    0.62567 (4) obj. -50.3905 iterations 1
Cbc0038I Pass  24: suminf.    1.06594 (4) obj. -50.3905 iterations 6
Cbc0038I Pass  25: suminf.    0.87830 (3) obj. -50.3905 iterations 3
Cbc0038I Pass  26: suminf.    1.24236 (3) obj. -50.3905 iterations 2
Cbc0038I Pass  27: suminf.    0.82015 (2) obj. -50.3905 iterations 3
Cbc0038I Pass  28: suminf.    1.05252 (4) obj. -50.3905 iterations 4
Cbc0038I Pass  29: suminf.    1.18188 (3) obj. -50.3905 iterations 5
Cbc0038I Pass  30: suminf.    0.86904 (4) obj. -50.3905 iterations 4
Cbc0038I Pass  31: suminf.    0.86904 (4) obj. -50.3905 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 16 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -48 - took 0.02 seconds
Cbc0012I Integer solution of -48 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 5 added rows had average density of 8.6
Cbc0013I At root node, 5 cuts changed objective from -69.655854 to -48.269644 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 380 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 423 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48, took 1037 iterations and 2 nodes (0.08 seconds)
Cbc0032I Strong branching done 18 times (64 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-19) rows, 32 (-13) columns and 181 (-180) elements
Clp1000I sum of infeasibilities 2.15114e-09 - average 7.68265e-11, 4 fixed columns
Coin0506I Presolve 25 (-3) rows, 28 (-4) columns and 129 (-52) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 93.962993
Clp0000I Optimal - objective value 93.962993
Coin0511I After Postsolve, objective 93.962993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.962993
Clp0000I Optimal - objective value 93.962993
Clp0000I Optimal - objective value 93.962993
Coin0511I After Postsolve, objective 93.962993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.96299276 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 32 columns (32 integer (32 of which binary)) and 185 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.596%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.5833
Cbc0038I Pass   1: suminf.    0.84964 (5) obj. -57.3984 iterations 7
Cbc0038I Pass   2: suminf.    0.84964 (5) obj. -57.3984 iterations 1
Cbc0038I Solution found of 3
Cbc0038I Rounding solution of -29.25 is better than previous of 3

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 32 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -29.25 to -47.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.1812
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.84964 (5) obj. -57.3984 iterations 0
Cbc0038I Pass   4: suminf.    0.84964 (5) obj. -57.3984 iterations 1
Cbc0038I Pass   5: suminf.    1.01989 (6) obj. -51.1812 iterations 8
Cbc0038I Pass   6: suminf.    1.00825 (7) obj. -51.1812 iterations 1
Cbc0038I Pass   7: suminf.    0.83463 (3) obj. -51.1812 iterations 6
Cbc0038I Pass   8: suminf.    0.83463 (3) obj. -51.1812 iterations 0
Cbc0038I Pass   9: suminf.    0.24798 (2) obj. -51.1812 iterations 3
Cbc0038I Pass  10: suminf.    0.23077 (1) obj. -51.5385 iterations 1
Cbc0038I Pass  11: suminf.    0.68003 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  12: suminf.    0.74725 (2) obj. -54.8269 iterations 2
Cbc0038I Pass  13: suminf.    0.96208 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  14: suminf.    0.83463 (3) obj. -51.1812 iterations 1
Cbc0038I Pass  15: suminf.    0.24798 (2) obj. -51.1812 iterations 3
Cbc0038I Pass  16: suminf.    0.23077 (1) obj. -51.5385 iterations 1
Cbc0038I Pass  17: suminf.    0.68003 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  18: suminf.    0.74725 (2) obj. -54.8269 iterations 2
Cbc0038I Pass  19: suminf.    0.96208 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  20: suminf.    0.83463 (3) obj. -51.1812 iterations 1
Cbc0038I Pass  21: suminf.    0.24798 (2) obj. -51.1812 iterations 3
Cbc0038I Pass  22: suminf.    0.23077 (1) obj. -51.5385 iterations 1
Cbc0038I Pass  23: suminf.    0.68003 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  24: suminf.    0.74725 (2) obj. -54.8269 iterations 2
Cbc0038I Pass  25: suminf.    0.96208 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  26: suminf.    0.83463 (3) obj. -51.1812 iterations 1
Cbc0038I Pass  27: suminf.    0.24798 (2) obj. -51.1812 iterations 3
Cbc0038I Pass  28: suminf.    0.23077 (1) obj. -51.5385 iterations 1
Cbc0038I Pass  29: suminf.    0.68003 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  30: suminf.    0.74725 (2) obj. -54.8269 iterations 2
Cbc0038I Pass  31: suminf.    0.96208 (2) obj. -51.1812 iterations 2
Cbc0038I Pass  32: suminf.    0.83463 (3) obj. -51.1812 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 32 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -47.5 - took 0.01 seconds
Cbc0012I Integer solution of -47.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 28 rows 32 columns, reduced to 3 rows 2 columns
Cbc0012I Integer solution of -48 found by DiveCoefficient after 20 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 9
Cbc0013I At root node, 1 cuts changed objective from -82.063292 to -48 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 2.8 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48, took 20 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

