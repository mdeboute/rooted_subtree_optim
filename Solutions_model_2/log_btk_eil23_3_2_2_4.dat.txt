Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 1.81341e-05 - average 5.18116e-07, 15 fixed columns
Coin0506I Presolve 4 (-31) rows, 5 (-16) columns and 12 (-92) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 9310.9945
Clp0000I Optimal - objective value 9310.9945
Coin0511I After Postsolve, objective 9310.9945, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.7775665 - largest nonzero change 1.7686993e-05 ( 0.0017325834%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 9310.9945
Clp0000I Optimal - objective value 9310.9945
Clp0000I Optimal - objective value 9310.9945
Coin0511I After Postsolve, objective 9310.9945, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9310.9945 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.651%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.416098
Cbc0038I Solution found of -6309.63
Cbc0038I Relaxing continuous gives -6309.63
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -6609.77
Cbc0038I Pass   1: suminf.    0.04161 (1) obj. -6609.77 iterations 7
Cbc0038I Pass   2: suminf.    0.41610 (1) obj. -9310.99 iterations 1
Cbc0038I Pass   3: suminf.    0.00960 (1) obj. -6609.77 iterations 4
Cbc0038I Pass   4: suminf.    0.00960 (1) obj. -6609.77 iterations 1
Cbc0038I Pass   5: suminf.    0.35024 (1) obj. -9066.84 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -6761.92 iterations 7
Cbc0038I Solution found of -6761.92
Cbc0038I Relaxing continuous gives -6761.92
Cbc0038I Rounding solution of -7234.37 is better than previous of -6761.92

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7649.7
Cbc0038I Pass   7: suminf.    0.18578 (1) obj. -7649.7 iterations 0
Cbc0038I Pass   8: suminf.    0.41610 (1) obj. -9310.99 iterations 1
Cbc0038I Pass   9: suminf.    0.15463 (1) obj. -8515.93 iterations 5
Cbc0038I Pass  10: suminf.    0.15463 (1) obj. -8515.93 iterations 1
Cbc0038I Pass  11: suminf.    0.27473 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  12: suminf.    0.26211 (2) obj. -7649.7 iterations 4
Cbc0038I Pass  13: suminf.    0.26211 (2) obj. -7649.7 iterations 1
Cbc0038I Pass  14: suminf.    0.25782 (1) obj. -7649.7 iterations 2
Cbc0038I Pass  15: suminf.    0.11805 (1) obj. -8657.89 iterations 1
Cbc0038I Pass  16: suminf.    0.62577 (2) obj. -7649.7 iterations 9
Cbc0038I Pass  17: suminf.    0.28878 (1) obj. -7747.45 iterations 3
Cbc0038I Pass  18: suminf.    0.30233 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  19: suminf.    1.04832 (3) obj. -7649.7 iterations 4
Cbc0038I Pass  20: suminf.    0.25463 (1) obj. -7920.37 iterations 3
Cbc0038I Pass  21: suminf.    0.29216 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  22: suminf.    0.16927 (1) obj. -8431.22 iterations 5
Cbc0038I Pass  23: suminf.    0.16927 (1) obj. -8431.22 iterations 1
Cbc0038I Pass  24: suminf.    0.27762 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  25: suminf.    0.62396 (2) obj. -7649.7 iterations 4
Cbc0038I Pass  26: suminf.    0.18512 (1) obj. -8343.73 iterations 3
Cbc0038I Pass  27: suminf.    0.28134 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  28: suminf.    0.17829 (1) obj. -8132.4 iterations 16
Cbc0038I Pass  29: suminf.    0.11137 (1) obj. -7649.7 iterations 4
Cbc0038I Pass  30: suminf.    0.17829 (1) obj. -8132.4 iterations 1
Cbc0038I Pass  31: suminf.    0.14251 (1) obj. -7649.7 iterations 3
Cbc0038I Pass  32: suminf.    0.29415 (1) obj. -8743.46 iterations 1
Cbc0038I Pass  33: suminf.    0.14251 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  34: suminf.    0.85294 (3) obj. -7649.7 iterations 4
Cbc0038I Pass  35: suminf.    0.25463 (1) obj. -7951.51 iterations 4
Cbc0038I Pass  36: suminf.    0.29648 (1) obj. -7649.7 iterations 1
Cbc0038I Rounding solution of -7250.93 is better than previous of -7234.37

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 18 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -7250.93 to -7287.09 (0.01 seconds)
Cbc0038I Round again with cutoff of -8148.09
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  36: suminf.    0.25488 (1) obj. -8148.09 iterations 0
Cbc0038I Pass  37: suminf.    0.41610 (1) obj. -9310.99 iterations 1
Cbc0038I Pass  38: suminf.    0.40198 (2) obj. -8148.09 iterations 9
Cbc0038I Pass  39: suminf.    0.14854 (1) obj. -8477.55 iterations 4
Cbc0038I Pass  40: suminf.    0.19421 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  41: suminf.    0.60730 (2) obj. -8148.09 iterations 10
Cbc0038I Pass  42: suminf.    0.22796 (1) obj. -8148.09 iterations 8
Cbc0038I Pass  43: suminf.    0.33073 (1) obj. -8889.43 iterations 1
Cbc0038I Pass  44: suminf.    0.66768 (3) obj. -8148.09 iterations 7
Cbc0038I Pass  45: suminf.    0.66768 (3) obj. -8148.09 iterations 1
Cbc0038I Pass  46: suminf.    0.25268 (1) obj. -8601.33 iterations 4
Cbc0038I Pass  47: suminf.    0.18985 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  48: suminf.    0.19711 (1) obj. -8148.09 iterations 4
Cbc0038I Pass  49: suminf.    0.25268 (1) obj. -8548.96 iterations 1
Cbc0038I Pass  50: suminf.    0.19711 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  51: suminf.    0.19711 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  52: suminf.    0.19711 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  53: suminf.    0.18569 (1) obj. -8148.09 iterations 2
Cbc0038I Pass  54: suminf.    0.24659 (1) obj. -8587.34 iterations 1
Cbc0038I Pass  55: suminf.    0.18569 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  56: suminf.    0.18734 (1) obj. -8148.09 iterations 3
Cbc0038I Pass  57: suminf.    0.21000 (1) obj. -8311.52 iterations 1
Cbc0038I Pass  58: suminf.    0.18734 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  59: suminf.    0.34636 (2) obj. -8148.09 iterations 4
Cbc0038I Pass  60: suminf.    0.34636 (2) obj. -8148.09 iterations 1
Cbc0038I Pass  61: suminf.    0.24659 (1) obj. -8476.48 iterations 2
Cbc0038I Pass  62: suminf.    0.20106 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  63: suminf.    0.58515 (2) obj. -8148.09 iterations 5
Cbc0038I Pass  64: suminf.    0.18515 (1) obj. -8148.09 iterations 2
Cbc0038I Pass  65: suminf.    0.20390 (1) obj. -8283.34 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7287.09 - took 0.02 seconds
Cbc0012I Integer solution of -7287.0925 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -7361.223 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 0 rows 0 columns
Cbc0031I 7 added rows had average density of 12
Cbc0013I At root node, 7 cuts changed objective from -9310.9945 to -7377.7146 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 2.4 elements, 6 column cuts (6 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 291 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 9 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0004I Integer solution of -7364.4007 found after 833 iterations and 2 nodes (0.09 seconds)
Cbc0001I Search completed - best objective -7364.4007, took 833 iterations and 2 nodes (0.09 seconds)
Cbc0032I Strong branching done 16 times (54 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 41 (-5) columns and 325 (-63) elements
Clp1000I sum of infeasibilities 0 - average 0, 25 fixed columns
Coin0506I Presolve 15 (-21) rows, 16 (-25) columns and 48 (-277) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 9393.3479
Clp0000I Optimal - objective value 9393.3479
Coin0511I After Postsolve, objective 9393.3479, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1542573 - largest nonzero change 2.9714205e-05 ( 0.0025888945%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 9429.38
Clp0000I Optimal - objective value 9429.38
Clp0000I Optimal - objective value 9429.38
Coin0511I After Postsolve, objective 9429.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9429.379995 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 42 columns (42 integer (42 of which binary)) and 330 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.76927
Cbc0038I Pass   1: suminf.    2.47512 (10) obj. -2394.36 iterations 7
Cbc0038I Pass   2: suminf.    2.47512 (10) obj. -2394.36 iterations 0
Cbc0038I Solution found of -2338.74
Cbc0038I Rounding solution of -2958.45 is better than previous of -2338.74

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -2958.45 to -6309.63 (0.02 seconds)
Cbc0038I Round again with cutoff of -6555.61
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.81106 (17) obj. -6555.61 iterations 2
Cbc0038I Pass   4: suminf.    1.34967 (11) obj. -6555.61 iterations 3
Cbc0038I Pass   5: suminf.    0.34049 (4) obj. -7225.93 iterations 3
Cbc0038I Pass   6: suminf.    0.10317 (1) obj. -6555.61 iterations 4
Cbc0038I Pass   7: suminf.    0.01073 (1) obj. -7222.39 iterations 1
Cbc0038I Pass   8: suminf.    0.11212 (2) obj. -7271.73 iterations 9
Cbc0038I Pass   9: suminf.    0.06667 (1) obj. -7269.96 iterations 1
Cbc0038I Solution found of -7268.09
Cbc0038I Rounding solution of -7287.09 is better than previous of -7268.09

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 25 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -7583.57
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  10: suminf.    4.52223 (17) obj. -7583.57 iterations 0
Cbc0038I Pass  11: suminf.    3.75660 (16) obj. -7583.57 iterations 1
Cbc0038I Pass  12: suminf.    1.12550 (5) obj. -7583.57 iterations 11
Cbc0038I Pass  13: suminf.    0.46195 (1) obj. -7900.34 iterations 5
Cbc0038I Pass  14: suminf.    0.49413 (1) obj. -7583.57 iterations 1
Cbc0038I Pass  15: suminf.    2.14814 (7) obj. -7583.57 iterations 11
Cbc0038I Pass  16: suminf.    1.79129 (6) obj. -7583.57 iterations 4
Cbc0038I Pass  17: suminf.    0.44366 (1) obj. -8009.82 iterations 6
Cbc0038I Pass  18: suminf.    0.49725 (1) obj. -7583.57 iterations 1
Cbc0038I Pass  19: suminf.    1.14912 (4) obj. -7583.57 iterations 6
Cbc0038I Pass  20: suminf.    0.80889 (2) obj. -8389.34 iterations 4
Cbc0038I Pass  21: suminf.    0.48153 (2) obj. -7583.57 iterations 1
Cbc0038I Pass  22: suminf.    0.49845 (2) obj. -7583.57 iterations 1
Cbc0038I Pass  23: suminf.    0.49845 (2) obj. -7583.57 iterations 0
Cbc0038I Pass  24: suminf.    2.23380 (9) obj. -7583.57 iterations 9
Cbc0038I Pass  25: suminf.    1.59982 (5) obj. -7583.57 iterations 5
Cbc0038I Pass  26: suminf.    0.80889 (2) obj. -8392.34 iterations 5
Cbc0038I Pass  27: suminf.    0.48031 (2) obj. -7583.57 iterations 1
Cbc0038I Pass  28: suminf.    0.49658 (2) obj. -7583.57 iterations 1
Cbc0038I Pass  29: suminf.    0.49658 (2) obj. -7583.57 iterations 0
Cbc0038I Pass  30: suminf.    1.70973 (6) obj. -7583.57 iterations 12
Cbc0038I Pass  31: suminf.    1.39125 (5) obj. -7583.57 iterations 4
Cbc0038I Pass  32: suminf.    0.46195 (1) obj. -7897.34 iterations 5
Cbc0038I Pass  33: suminf.    0.49455 (1) obj. -7583.57 iterations 1
Cbc0038I Pass  34: suminf.    1.41786 (8) obj. -7583.57 iterations 14
Cbc0038I Pass  35: suminf.    0.30410 (3) obj. -7583.57 iterations 7
Cbc0038I Pass  36: suminf.    0.55650 (2) obj. -7583.57 iterations 2
Cbc0038I Pass  37: suminf.    0.29152 (2) obj. -7583.57 iterations 1
Cbc0038I Pass  38: suminf.    1.47554 (5) obj. -7583.57 iterations 5
Cbc0038I Pass  39: suminf.    0.58216 (3) obj. -7583.57 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -7287.09 - took 0.01 seconds
Cbc0012I Integer solution of -7287.0925 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 42 columns, reduced to 25 rows 23 columns
Cbc0012I Integer solution of -7350.4397 found by DiveCoefficient after 245 iterations and 0 nodes (0.51 seconds)
Cbc0031I 19 added rows had average density of 6.4736842
Cbc0013I At root node, 19 cuts changed objective from -8769.4553 to -7378.718 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 336 row cuts average 2.6 elements, 11 column cuts (11 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 86 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.251 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -7350.4397 best solution, best possible -7378.718 (0.60 seconds)
Cbc0012I Integer solution of -7361.2227 found by DiveCoefficient after 291 iterations and 3 nodes (0.64 seconds)
Cbc0004I Integer solution of -7364.4007 found after 302 iterations and 3 nodes (0.65 seconds)
Cbc0001I Search completed - best objective -7364.4007, took 324 iterations and 6 nodes (0.65 seconds)
Cbc0032I Strong branching done 40 times (112 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.41   (Wallclock seconds):       0.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 1.81341e-05 - average 5.18116e-07, 15 fixed columns
Coin0506I Presolve 4 (-31) rows, 5 (-16) columns and 12 (-92) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 9310.9945
Clp0000I Optimal - objective value 9310.9945
Coin0511I After Postsolve, objective 9310.9945, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.7775665 - largest nonzero change 1.7686993e-05 ( 0.0017325834%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 9310.9945
Clp0000I Optimal - objective value 9310.9945
Clp0000I Optimal - objective value 9310.9945
Coin0511I After Postsolve, objective 9310.9945, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9310.9945 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.651%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.416098
Cbc0038I Solution found of -6309.63
Cbc0038I Relaxing continuous gives -6309.63
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -6609.77
Cbc0038I Pass   1: suminf.    0.04161 (1) obj. -6609.77 iterations 7
Cbc0038I Pass   2: suminf.    0.41610 (1) obj. -9310.99 iterations 1
Cbc0038I Pass   3: suminf.    0.00960 (1) obj. -6609.77 iterations 4
Cbc0038I Pass   4: suminf.    0.00960 (1) obj. -6609.77 iterations 1
Cbc0038I Pass   5: suminf.    0.35024 (1) obj. -9066.84 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -6761.92 iterations 7
Cbc0038I Solution found of -6761.92
Cbc0038I Relaxing continuous gives -6761.92
Cbc0038I Rounding solution of -7234.37 is better than previous of -6761.92

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7649.7
Cbc0038I Pass   7: suminf.    0.18578 (1) obj. -7649.7 iterations 0
Cbc0038I Pass   8: suminf.    0.41610 (1) obj. -9310.99 iterations 1
Cbc0038I Pass   9: suminf.    0.15463 (1) obj. -8515.93 iterations 5
Cbc0038I Pass  10: suminf.    0.15463 (1) obj. -8515.93 iterations 1
Cbc0038I Pass  11: suminf.    0.27473 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  12: suminf.    0.26211 (2) obj. -7649.7 iterations 4
Cbc0038I Pass  13: suminf.    0.26211 (2) obj. -7649.7 iterations 1
Cbc0038I Pass  14: suminf.    0.25782 (1) obj. -7649.7 iterations 2
Cbc0038I Pass  15: suminf.    0.11805 (1) obj. -8657.89 iterations 1
Cbc0038I Pass  16: suminf.    0.62577 (2) obj. -7649.7 iterations 9
Cbc0038I Pass  17: suminf.    0.28878 (1) obj. -7747.45 iterations 3
Cbc0038I Pass  18: suminf.    0.30233 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  19: suminf.    1.04832 (3) obj. -7649.7 iterations 4
Cbc0038I Pass  20: suminf.    0.25463 (1) obj. -7920.37 iterations 3
Cbc0038I Pass  21: suminf.    0.29216 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  22: suminf.    0.16927 (1) obj. -8431.22 iterations 5
Cbc0038I Pass  23: suminf.    0.16927 (1) obj. -8431.22 iterations 1
Cbc0038I Pass  24: suminf.    0.27762 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  25: suminf.    0.62396 (2) obj. -7649.7 iterations 4
Cbc0038I Pass  26: suminf.    0.18512 (1) obj. -8343.73 iterations 3
Cbc0038I Pass  27: suminf.    0.28134 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  28: suminf.    0.17829 (1) obj. -8132.4 iterations 16
Cbc0038I Pass  29: suminf.    0.11137 (1) obj. -7649.7 iterations 4
Cbc0038I Pass  30: suminf.    0.17829 (1) obj. -8132.4 iterations 1
Cbc0038I Pass  31: suminf.    0.14251 (1) obj. -7649.7 iterations 3
Cbc0038I Pass  32: suminf.    0.29415 (1) obj. -8743.46 iterations 1
Cbc0038I Pass  33: suminf.    0.14251 (1) obj. -7649.7 iterations 1
Cbc0038I Pass  34: suminf.    0.85294 (3) obj. -7649.7 iterations 4
Cbc0038I Pass  35: suminf.    0.25463 (1) obj. -7951.51 iterations 4
Cbc0038I Pass  36: suminf.    0.29648 (1) obj. -7649.7 iterations 1
Cbc0038I Rounding solution of -7250.93 is better than previous of -7234.37

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 18 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -7250.93 to -7287.09 (0.02 seconds)
Cbc0038I Round again with cutoff of -8148.09
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  36: suminf.    0.25488 (1) obj. -8148.09 iterations 0
Cbc0038I Pass  37: suminf.    0.41610 (1) obj. -9310.99 iterations 1
Cbc0038I Pass  38: suminf.    0.40198 (2) obj. -8148.09 iterations 9
Cbc0038I Pass  39: suminf.    0.14854 (1) obj. -8477.55 iterations 4
Cbc0038I Pass  40: suminf.    0.19421 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  41: suminf.    0.60730 (2) obj. -8148.09 iterations 10
Cbc0038I Pass  42: suminf.    0.22796 (1) obj. -8148.09 iterations 8
Cbc0038I Pass  43: suminf.    0.33073 (1) obj. -8889.43 iterations 1
Cbc0038I Pass  44: suminf.    0.66768 (3) obj. -8148.09 iterations 7
Cbc0038I Pass  45: suminf.    0.66768 (3) obj. -8148.09 iterations 1
Cbc0038I Pass  46: suminf.    0.25268 (1) obj. -8601.33 iterations 4
Cbc0038I Pass  47: suminf.    0.18985 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  48: suminf.    0.19711 (1) obj. -8148.09 iterations 4
Cbc0038I Pass  49: suminf.    0.25268 (1) obj. -8548.96 iterations 1
Cbc0038I Pass  50: suminf.    0.19711 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  51: suminf.    0.19711 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  52: suminf.    0.19711 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  53: suminf.    0.18569 (1) obj. -8148.09 iterations 2
Cbc0038I Pass  54: suminf.    0.24659 (1) obj. -8587.34 iterations 1
Cbc0038I Pass  55: suminf.    0.18569 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  56: suminf.    0.18734 (1) obj. -8148.09 iterations 3
Cbc0038I Pass  57: suminf.    0.21000 (1) obj. -8311.52 iterations 1
Cbc0038I Pass  58: suminf.    0.18734 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  59: suminf.    0.34636 (2) obj. -8148.09 iterations 4
Cbc0038I Pass  60: suminf.    0.34636 (2) obj. -8148.09 iterations 1
Cbc0038I Pass  61: suminf.    0.24659 (1) obj. -8476.48 iterations 2
Cbc0038I Pass  62: suminf.    0.20106 (1) obj. -8148.09 iterations 1
Cbc0038I Pass  63: suminf.    0.58515 (2) obj. -8148.09 iterations 5
Cbc0038I Pass  64: suminf.    0.18515 (1) obj. -8148.09 iterations 2
Cbc0038I Pass  65: suminf.    0.20390 (1) obj. -8283.34 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7287.09 - took 0.03 seconds
Cbc0012I Integer solution of -7287.0925 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -7361.223 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 0 rows 0 columns
Cbc0031I 7 added rows had average density of 12
Cbc0013I At root node, 7 cuts changed objective from -9310.9945 to -7377.7146 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 2.4 elements, 6 column cuts (6 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 291 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 9 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0004I Integer solution of -7364.4007 found after 833 iterations and 2 nodes (0.09 seconds)
Cbc0001I Search completed - best objective -7364.4007, took 833 iterations and 2 nodes (0.09 seconds)
Cbc0032I Strong branching done 16 times (54 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 39 (-8) columns and 299 (-90) elements
Clp1000I sum of infeasibilities 0 - average 0, 23 fixed columns
Coin0506I Presolve 15 (-19) rows, 16 (-23) columns and 48 (-251) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 9393.3479
Clp0000I Optimal - objective value 9393.3479
Coin0511I After Postsolve, objective 9393.3479, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2924041 - largest nonzero change 2.9461176e-05 ( 0.0025888945%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 9429.38
Clp0000I Optimal - objective value 9429.38
Clp0000I Optimal - objective value 9429.38
Coin0511I After Postsolve, objective 9429.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9429.379995 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 41 columns (41 integer (41 of which binary)) and 315 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.88468
Cbc0038I Pass   1: suminf.    2.58370 (10) obj. -2393.69 iterations 7
Cbc0038I Pass   2: suminf.    2.58370 (10) obj. -2393.69 iterations 0
Cbc0038I Solution found of -2338.74
Cbc0038I Rounding solution of -2958.45 is better than previous of -2338.74

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -2958.45 to -6309.63 (0.01 seconds)
Cbc0038I Round again with cutoff of -6555.53
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.91392 (17) obj. -6555.53 iterations 2
Cbc0038I Pass   4: suminf.    1.38908 (11) obj. -6555.53 iterations 3
Cbc0038I Pass   5: suminf.    0.36385 (4) obj. -7225.9 iterations 3
Cbc0038I Pass   6: suminf.    0.10318 (1) obj. -6555.53 iterations 4
Cbc0038I Pass   7: suminf.    0.01073 (1) obj. -7222.39 iterations 1
Cbc0038I Pass   8: suminf.    0.65638 (8) obj. -6555.53 iterations 6
Cbc0038I Pass   9: suminf.    0.01073 (1) obj. -7199.39 iterations 9
Cbc0038I Pass  10: suminf.    0.09999 (1) obj. -6555.53 iterations 1
Cbc0038I Pass  11: suminf.    0.68643 (10) obj. -6555.53 iterations 10
Cbc0038I Pass  12: suminf.    0.19583 (2) obj. -6880.33 iterations 4
Cbc0038I Pass  13: suminf.    0.10741 (1) obj. -6555.53 iterations 2
Cbc0038I Pass  14: suminf.    0.06250 (1) obj. -6879.47 iterations 1
Cbc0038I Pass  15: suminf.    0.09366 (1) obj. -6820.87 iterations 5
Cbc0038I Pass  16: suminf.    0.09366 (1) obj. -6820.87 iterations 0
Cbc0038I Pass  17: suminf.    0.13044 (1) obj. -6555.53 iterations 1
Cbc0038I Pass  18: suminf.    0.34013 (6) obj. -6555.53 iterations 8
Cbc0038I Pass  19: suminf.    0.34013 (6) obj. -6555.53 iterations 0
Cbc0038I Pass  20: suminf.    0.43821 (2) obj. -6555.53 iterations 5
Cbc0038I Pass  21: suminf.    0.32709 (2) obj. -6555.53 iterations 1
Cbc0038I Pass  22: suminf.    0.49888 (8) obj. -6555.53 iterations 9
Cbc0038I Pass  23: suminf.    0.45463 (7) obj. -6555.53 iterations 1
Cbc0038I Solution found of -6637.76
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -6637.76 to -7287.09 (0.02 seconds)
Cbc0038I Round again with cutoff of -7583.41
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  24: suminf.    4.63480 (17) obj. -7583.41 iterations 0
Cbc0038I Pass  25: suminf.    3.86165 (16) obj. -7583.41 iterations 1
Cbc0038I Pass  26: suminf.    0.55065 (2) obj. -7583.41 iterations 22
Cbc0038I Pass  27: suminf.    0.46195 (1) obj. -7900.34 iterations 2
Cbc0038I Pass  28: suminf.    0.49411 (1) obj. -7583.41 iterations 1
Cbc0038I Pass  29: suminf.    3.05382 (10) obj. -7583.41 iterations 16
Cbc0038I Pass  30: suminf.    1.52178 (5) obj. -7583.41 iterations 8
Cbc0038I Pass  31: suminf.    0.55781 (2) obj. -7583.41 iterations 4
Cbc0038I Pass  32: suminf.    0.28665 (2) obj. -7583.41 iterations 1
Cbc0038I Pass  33: suminf.    2.04274 (8) obj. -7583.41 iterations 8
Cbc0038I Pass  34: suminf.    0.90586 (4) obj. -7583.41 iterations 5
Cbc0038I Pass  35: suminf.    0.46308 (2) obj. -7583.41 iterations 3
Cbc0038I Pass  36: suminf.    0.25111 (2) obj. -7583.41 iterations 1
Cbc0038I Pass  37: suminf.    2.32179 (8) obj. -7583.41 iterations 9
Cbc0038I Pass  38: suminf.    0.67680 (3) obj. -7583.41 iterations 7
Cbc0038I Pass  39: suminf.    2.01224 (6) obj. -7583.41 iterations 3
Cbc0038I Pass  40: suminf.    0.67680 (3) obj. -7583.41 iterations 3
Cbc0038I Pass  41: suminf.    1.70635 (7) obj. -7583.41 iterations 8
Cbc0038I Pass  42: suminf.    1.11357 (4) obj. -7583.41 iterations 3
Cbc0038I Pass  43: suminf.    0.72678 (2) obj. -7583.41 iterations 3
Cbc0038I Pass  44: suminf.    0.72678 (2) obj. -7583.41 iterations 0
Cbc0038I Pass  45: suminf.    0.33889 (2) obj. -7583.41 iterations 1
Cbc0038I Pass  46: suminf.    0.33889 (2) obj. -7583.41 iterations 0
Cbc0038I Pass  47: suminf.    1.34297 (5) obj. -7583.41 iterations 5
Cbc0038I Pass  48: suminf.    0.74764 (3) obj. -7583.41 iterations 2
Cbc0038I Pass  49: suminf.    0.51432 (2) obj. -7583.41 iterations 2
Cbc0038I Pass  50: suminf.    0.51432 (2) obj. -7583.41 iterations 0
Cbc0038I Pass  51: suminf.    0.42244 (2) obj. -7583.41 iterations 1
Cbc0038I Pass  52: suminf.    0.42244 (2) obj. -7583.41 iterations 0
Cbc0038I Pass  53: suminf.    1.15486 (4) obj. -7583.41 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -7287.09 - took 0.02 seconds
Cbc0012I Integer solution of -7287.0925 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 41 columns, reduced to 25 rows 23 columns
Cbc0012I Integer solution of -7364.4007 found by DiveCoefficient after 171 iterations and 0 nodes (0.38 seconds)
Cbc0031I 11 added rows had average density of 6.3636364
Cbc0013I At root node, 11 cuts changed objective from -8768.6861 to -7364.4009 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 203 row cuts average 2.5 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 55 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.00017936602 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -7364.4007, took 171 iterations and 0 nodes (0.38 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.39

