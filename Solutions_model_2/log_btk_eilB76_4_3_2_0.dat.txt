Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 69 (-9) columns and 386 (-67) elements
Clp1000I sum of infeasibilities 3.09391e-05 - average 2.41712e-07, 21 fixed columns
Coin0506I Presolve 85 (-43) rows, 47 (-22) columns and 258 (-128) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 0.26666591 - largest nonzero change 0 ( 0%) - largest zero change 2.6599719e-05
Clp0000I Optimal - objective value 62.939258
Clp0000I Optimal - objective value 62.939258
Coin0511I After Postsolve, objective 62.939258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23035967 - largest nonzero change 0 ( 0%) - largest zero change 2.6906745e-05
Clp0000I Optimal - objective value 62.939258
Clp0000I Optimal - objective value 62.939258
Clp0000I Optimal - objective value 62.939258
Coin0511I After Postsolve, objective 62.939258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.9392577 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 69 columns (68 integer (68 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.002%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 3.6423
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.0177 iterations 31
Cbc0038I Solution found of -19.0177
Cbc0038I Relaxing continuous gives -19.0177
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 69 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -19.0177 to -39.0343 (0.03 seconds)
Cbc0038I Round again with cutoff of -41.4249
Cbc0038I Pass   2: suminf.    1.03500 (5) obj. -41.4249 iterations 6
Cbc0038I Pass   3: suminf.    0.60657 (3) obj. -41.4249 iterations 6
Cbc0038I Pass   4: suminf.    1.15750 (4) obj. -41.4249 iterations 5
Cbc0038I Pass   5: suminf.    4.05852 (10) obj. -41.4249 iterations 17
Cbc0038I Pass   6: suminf.    1.33999 (6) obj. -41.4249 iterations 24
Cbc0038I Pass   7: suminf.    1.34377 (5) obj. -41.4249 iterations 13
Cbc0038I Pass   8: suminf.    1.27352 (5) obj. -41.4249 iterations 9
Cbc0038I Pass   9: suminf.    1.56402 (8) obj. -41.4249 iterations 8
Cbc0038I Pass  10: suminf.    2.06783 (5) obj. -41.4249 iterations 8
Cbc0038I Pass  11: suminf.    0.73742 (3) obj. -41.4249 iterations 5
Cbc0038I Pass  12: suminf.    0.69291 (3) obj. -41.4249 iterations 6
Cbc0038I Pass  13: suminf.    0.69291 (3) obj. -41.4249 iterations 0
Cbc0038I Pass  14: suminf.    0.89998 (5) obj. -41.4249 iterations 5
Cbc0038I Pass  15: suminf.    2.83138 (13) obj. -41.4249 iterations 17
Cbc0038I Pass  16: suminf.    1.33999 (6) obj. -41.4249 iterations 28
Cbc0038I Pass  17: suminf.    1.34377 (5) obj. -41.4249 iterations 12
Cbc0038I Pass  18: suminf.    1.27352 (5) obj. -41.4249 iterations 8
Cbc0038I Pass  19: suminf.    1.56402 (8) obj. -41.4249 iterations 9
Cbc0038I Pass  20: suminf.    2.93545 (9) obj. -41.4249 iterations 16
Cbc0038I Pass  21: suminf.    1.58102 (5) obj. -41.4249 iterations 13
Cbc0038I Pass  22: suminf.    0.80625 (3) obj. -41.4249 iterations 4
Cbc0038I Pass  23: suminf.    0.88911 (4) obj. -41.4249 iterations 4
Cbc0038I Pass  24: suminf.    0.69291 (3) obj. -41.4249 iterations 2
Cbc0038I Pass  25: suminf.    0.89998 (5) obj. -41.4249 iterations 4
Cbc0038I Pass  26: suminf.    1.52999 (5) obj. -41.4249 iterations 7
Cbc0038I Pass  27: suminf.    1.00688 (5) obj. -41.4249 iterations 6
Cbc0038I Pass  28: suminf.    1.79641 (6) obj. -41.4249 iterations 8
Cbc0038I Pass  29: suminf.    0.97850 (6) obj. -41.4249 iterations 16
Cbc0038I Pass  30: suminf.    0.66533 (2) obj. -41.4249 iterations 13
Cbc0038I Pass  31: suminf.    0.60657 (3) obj. -41.4249 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 69 columns, reduced to 73 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -39.0343 - took 0.03 seconds
Cbc0012I Integer solution of -39.0343 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 127 rows 69 columns, reduced to 42 rows 25 columns
Cbc0031I 13 added rows had average density of 53.769231
Cbc0013I At root node, 13 cuts changed objective from -62.939258 to -50.998591 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4689 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 964 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 66.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.0343, took 5599 iterations and 40 nodes (0.55 seconds)
Cbc0032I Strong branching done 524 times (9406 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 19, 73 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-41) rows, 121 (-31) columns and 2198 (-1105) elements
Clp1000I sum of infeasibilities 6.34088e-09 - average 5.6114e-11, 109 fixed columns
Coin0506I Presolve 11 (-102) rows, 12 (-109) columns and 41 (-2157) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 3.6920736 - largest nonzero change 0 ( 0%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 105.24853
Clp0000I Optimal - objective value 105.24853
Coin0511I After Postsolve, objective 105.24853, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5290405 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 199.83242
Clp0000I Optimal - objective value 199.83242
Clp0000I Optimal - objective value 199.83242
Coin0511I After Postsolve, objective 199.83242, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 199.8324205 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 53 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 121 columns (121 integer (121 of which binary)) and 2223 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.4667
Cbc0038I Pass   1: suminf.    1.15901 (21) obj. -9.14581 iterations 21
Cbc0038I Pass   2: suminf.    1.15901 (21) obj. -9.14581 iterations 1
Cbc0038I Pass   3: suminf.    0.44195 (9) obj. 10.6013 iterations 12
Cbc0038I Solution found of 30.575
Cbc0038I Rounding solution of 10.9413 is better than previous of 30.575

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 121 columns, reduced to 27 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 10.9413 to -29.425 (0.05 seconds)
Cbc0038I Round again with cutoff of -41.6585
Cbc0038I Pass   4: suminf.    2.42524 (36) obj. -41.6585 iterations 12
Cbc0038I Pass   5: suminf.    2.42524 (36) obj. -41.6585 iterations 0
Cbc0038I Pass   6: suminf.    0.78634 (17) obj. -55.0146 iterations 19
Cbc0038I Pass   7: suminf.    0.23392 (2) obj. -41.6585 iterations 22
Cbc0038I Pass   8: suminf.    0.07692 (1) obj. -94.9635 iterations 2
Cbc0038I Pass   9: suminf.    0.17230 (1) obj. -41.6585 iterations 1
Cbc0038I Pass  10: suminf.    1.29213 (13) obj. -53.016 iterations 25
Cbc0038I Pass  11: suminf.    0.98342 (10) obj. -49.8566 iterations 12
Cbc0038I Pass  12: suminf.    0.06277 (1) obj. -41.6585 iterations 11
Cbc0038I Pass  13: suminf.    0.51408 (2) obj. -64.04 iterations 5
Cbc0038I Pass  14: suminf.    1.53414 (15) obj. -41.6585 iterations 36
Cbc0038I Pass  15: suminf.    1.30140 (12) obj. -41.6585 iterations 7
Cbc0038I Pass  16: suminf.    1.09926 (3) obj. -41.6585 iterations 13
Cbc0038I Pass  17: suminf.    0.04762 (1) obj. -96.1746 iterations 4
Cbc0038I Pass  18: suminf.    0.23506 (1) obj. -41.6585 iterations 3
Cbc0038I Pass  19: suminf.    2.87938 (11) obj. -41.6585 iterations 22
Cbc0038I Pass  20: suminf.    0.95724 (8) obj. -42.0963 iterations 9
Cbc0038I Pass  21: suminf.    0.65984 (12) obj. -41.6585 iterations 2
Cbc0038I Pass  22: suminf.    0.29730 (1) obj. -43.0369 iterations 12
Cbc0038I Pass  23: suminf.    0.28279 (1) obj. -41.6585 iterations 1
Cbc0038I Pass  24: suminf.    1.32809 (8) obj. -41.6585 iterations 17
Cbc0038I Pass  25: suminf.    0.64768 (8) obj. -41.6585 iterations 12
Cbc0038I Pass  26: suminf.    2.09584 (13) obj. -41.6585 iterations 20
Cbc0038I Pass  27: suminf.    1.23795 (14) obj. -41.6585 iterations 10
Cbc0038I Pass  28: suminf.    1.94528 (19) obj. -41.6585 iterations 16
Cbc0038I Pass  29: suminf.    1.94528 (19) obj. -41.6585 iterations 0
Cbc0038I Pass  30: suminf.    1.04953 (4) obj. -41.6585 iterations 28
Cbc0038I Solution found of -87.4245
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 121 columns, reduced to 60 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -87.4245 to -98.4245 (0.07 seconds)
Cbc0038I Round again with cutoff of -109.091
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    4.25576 (46) obj. -109.091 iterations 1
Cbc0038I Pass  32: suminf.    4.25576 (46) obj. -109.091 iterations 0
Cbc0038I Pass  33: suminf.    3.93024 (20) obj. -109.091 iterations 31
Cbc0038I Pass  34: suminf.    3.93024 (20) obj. -109.091 iterations 1
Cbc0038I Pass  35: suminf.    2.31879 (14) obj. -109.091 iterations 18
Cbc0038I Pass  36: suminf.    2.27567 (18) obj. -109.091 iterations 8
Cbc0038I Pass  37: suminf.    2.14131 (8) obj. -109.091 iterations 35
Cbc0038I Pass  38: suminf.    2.13476 (11) obj. -109.091 iterations 3
Cbc0038I Pass  39: suminf.    2.14778 (11) obj. -109.091 iterations 8
Cbc0038I Pass  40: suminf.    2.14778 (11) obj. -109.091 iterations 5
Cbc0038I Pass  41: suminf.    2.13476 (11) obj. -109.091 iterations 8
Cbc0038I Pass  42: suminf.    2.82867 (12) obj. -109.091 iterations 27
Cbc0038I Pass  43: suminf.    2.82427 (15) obj. -109.091 iterations 5
Cbc0038I Pass  44: suminf.    2.13476 (11) obj. -109.091 iterations 14
Cbc0038I Pass  45: suminf.    2.13476 (11) obj. -109.091 iterations 5
Cbc0038I Pass  46: suminf.    2.14778 (11) obj. -109.091 iterations 8
Cbc0038I Pass  47: suminf.    2.14778 (11) obj. -109.091 iterations 5
Cbc0038I Pass  48: suminf.    2.13476 (11) obj. -109.091 iterations 8
Cbc0038I Pass  49: suminf.    2.86826 (15) obj. -109.091 iterations 17
Cbc0038I Pass  50: suminf.    2.83702 (12) obj. -109.091 iterations 8
Cbc0038I Pass  51: suminf.    2.14131 (8) obj. -109.091 iterations 13
Cbc0038I Pass  52: suminf.    2.13476 (11) obj. -109.091 iterations 6
Cbc0038I Pass  53: suminf.    2.15343 (8) obj. -109.091 iterations 11
Cbc0038I Pass  54: suminf.    2.14778 (11) obj. -109.091 iterations 6
Cbc0038I Pass  55: suminf.    2.13476 (11) obj. -109.091 iterations 8
Cbc0038I Pass  56: suminf.    3.41398 (18) obj. -109.091 iterations 25
Cbc0038I Pass  57: suminf.    3.41398 (18) obj. -109.091 iterations 0
Cbc0038I Pass  58: suminf.    2.14131 (8) obj. -109.091 iterations 29
Cbc0038I Pass  59: suminf.    2.13476 (11) obj. -109.091 iterations 2
Cbc0038I Pass  60: suminf.    2.14778 (11) obj. -109.091 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -98.4245 - took 0.06 seconds
Cbc0012I Integer solution of -98.4245 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 111 rows 121 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 2.8888889
Cbc0013I At root node, 11 cuts changed objective from -123.56353 to -98.4245 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 106 row cuts average 7.0 elements, 54 column cuts (54 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -98.42449999999999, took 101 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 69 (-9) columns and 386 (-67) elements
Clp1000I sum of infeasibilities 3.09391e-05 - average 2.41712e-07, 21 fixed columns
Coin0506I Presolve 85 (-43) rows, 47 (-22) columns and 258 (-128) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 0.26666591 - largest nonzero change 0 ( 0%) - largest zero change 2.6599719e-05
Clp0000I Optimal - objective value 62.939258
Clp0000I Optimal - objective value 62.939258
Coin0511I After Postsolve, objective 62.939258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23035967 - largest nonzero change 0 ( 0%) - largest zero change 2.6906745e-05
Clp0000I Optimal - objective value 62.939258
Clp0000I Optimal - objective value 62.939258
Clp0000I Optimal - objective value 62.939258
Coin0511I After Postsolve, objective 62.939258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.9392577 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 69 columns (68 integer (68 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.002%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 3.6423
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.0177 iterations 31
Cbc0038I Solution found of -19.0177
Cbc0038I Relaxing continuous gives -19.0177
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 69 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -19.0177 to -39.0343 (0.03 seconds)
Cbc0038I Round again with cutoff of -41.4249
Cbc0038I Pass   2: suminf.    1.03500 (5) obj. -41.4249 iterations 6
Cbc0038I Pass   3: suminf.    0.60657 (3) obj. -41.4249 iterations 6
Cbc0038I Pass   4: suminf.    1.15750 (4) obj. -41.4249 iterations 5
Cbc0038I Pass   5: suminf.    4.05852 (10) obj. -41.4249 iterations 17
Cbc0038I Pass   6: suminf.    1.33999 (6) obj. -41.4249 iterations 24
Cbc0038I Pass   7: suminf.    1.34377 (5) obj. -41.4249 iterations 13
Cbc0038I Pass   8: suminf.    1.27352 (5) obj. -41.4249 iterations 9
Cbc0038I Pass   9: suminf.    1.56402 (8) obj. -41.4249 iterations 8
Cbc0038I Pass  10: suminf.    2.06783 (5) obj. -41.4249 iterations 8
Cbc0038I Pass  11: suminf.    0.73742 (3) obj. -41.4249 iterations 5
Cbc0038I Pass  12: suminf.    0.69291 (3) obj. -41.4249 iterations 6
Cbc0038I Pass  13: suminf.    0.69291 (3) obj. -41.4249 iterations 0
Cbc0038I Pass  14: suminf.    0.89998 (5) obj. -41.4249 iterations 5
Cbc0038I Pass  15: suminf.    2.83138 (13) obj. -41.4249 iterations 17
Cbc0038I Pass  16: suminf.    1.33999 (6) obj. -41.4249 iterations 28
Cbc0038I Pass  17: suminf.    1.34377 (5) obj. -41.4249 iterations 12
Cbc0038I Pass  18: suminf.    1.27352 (5) obj. -41.4249 iterations 8
Cbc0038I Pass  19: suminf.    1.56402 (8) obj. -41.4249 iterations 9
Cbc0038I Pass  20: suminf.    2.93545 (9) obj. -41.4249 iterations 16
Cbc0038I Pass  21: suminf.    1.58102 (5) obj. -41.4249 iterations 13
Cbc0038I Pass  22: suminf.    0.80625 (3) obj. -41.4249 iterations 4
Cbc0038I Pass  23: suminf.    0.88911 (4) obj. -41.4249 iterations 4
Cbc0038I Pass  24: suminf.    0.69291 (3) obj. -41.4249 iterations 2
Cbc0038I Pass  25: suminf.    0.89998 (5) obj. -41.4249 iterations 4
Cbc0038I Pass  26: suminf.    1.52999 (5) obj. -41.4249 iterations 7
Cbc0038I Pass  27: suminf.    1.00688 (5) obj. -41.4249 iterations 6
Cbc0038I Pass  28: suminf.    1.79641 (6) obj. -41.4249 iterations 8
Cbc0038I Pass  29: suminf.    0.97850 (6) obj. -41.4249 iterations 16
Cbc0038I Pass  30: suminf.    0.66533 (2) obj. -41.4249 iterations 13
Cbc0038I Pass  31: suminf.    0.60657 (3) obj. -41.4249 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 69 columns, reduced to 73 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -39.0343 - took 0.04 seconds
Cbc0012I Integer solution of -39.0343 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 127 rows 69 columns, reduced to 42 rows 25 columns
Cbc0031I 13 added rows had average density of 53.769231
Cbc0013I At root node, 13 cuts changed objective from -62.939258 to -50.998591 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4689 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 964 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 66.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.0343, took 5599 iterations and 40 nodes (0.61 seconds)
Cbc0032I Strong branching done 524 times (9406 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 19, 73 variables fixed on reduced cost
Total time (CPU seconds):       0.57   (Wallclock seconds):       0.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 117 (-36) columns and 2061 (-1243) elements
Clp1000I sum of infeasibilities 2.39193e-07 - average 2.19443e-09, 83 fixed columns
Coin0506I Presolve 27 (-82) rows, 34 (-83) columns and 117 (-1944) elements
Clp0006I 0  Obj -17.060373 Dual inf 443.64104 (33)
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 0.29812561 - largest nonzero change 1.7908692e-05 ( 0.0015380202%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value -16.56024
Clp0000I Optimal - objective value -16.56024
Coin0511I After Postsolve, objective -16.56024, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -16.56024 Dual inf 96.182049 (49)
Clp0014I Perturbing problem by 0.001% of 1.5616756 - largest nonzero change 1.7783612e-05 ( 0.0012247315%) - largest zero change 2.9673509e-05
Clp0000I Optimal - objective value 76.423543
Clp0000I Optimal - objective value 76.423543
Clp0000I Optimal - objective value 76.423543
Coin0511I After Postsolve, objective 76.423543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.42354285 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 118 columns (118 integer (118 of which binary)) and 2084 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.041%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 3.46292
Cbc0038I Pass   1: suminf.    1.66458 (34) obj. -52.4551 iterations 9
Cbc0038I Pass   2: suminf.    1.66458 (34) obj. -52.4551 iterations 1
Cbc0038I Pass   3: suminf.    0.95609 (24) obj. -28.3069 iterations 10
Cbc0038I Solution found of 7.09334
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 118 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 7.09334 to 3.12684 (0.04 seconds)
Cbc0038I Round again with cutoff of -3.97471
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.66458 (34) obj. -52.4551 iterations 0
Cbc0038I Pass   5: suminf.    1.66458 (34) obj. -52.4551 iterations 1
Cbc0038I Pass   6: suminf.    0.42265 (11) obj. -3.97471 iterations 32
Cbc0038I Pass   7: suminf.    0.36678 (3) obj. -3.97471 iterations 14
Cbc0038I Pass   8: suminf.    0.36678 (3) obj. -3.97471 iterations 0
Cbc0038I Pass   9: suminf.    0.60365 (3) obj. -3.97471 iterations 5
Cbc0038I Pass  10: suminf.    0.36738 (2) obj. -7.50501 iterations 4
Cbc0038I Pass  11: suminf.    0.60373 (6) obj. -3.97471 iterations 7
Cbc0038I Pass  12: suminf.    1.33778 (13) obj. -3.97471 iterations 35
Cbc0038I Pass  13: suminf.    0.86399 (11) obj. -3.97471 iterations 6
Cbc0038I Pass  14: suminf.    0.62998 (11) obj. -7.20328 iterations 3
Cbc0038I Pass  15: suminf.    0.68344 (5) obj. -3.97471 iterations 18
Cbc0038I Pass  16: suminf.    0.40416 (5) obj. -3.97471 iterations 1
Cbc0038I Pass  17: suminf.    1.30785 (5) obj. -3.97471 iterations 5
Cbc0038I Pass  18: suminf.    0.97166 (6) obj. -3.97471 iterations 7
Cbc0038I Pass  19: suminf.    1.24249 (4) obj. -5.17439 iterations 13
Cbc0038I Pass  20: suminf.    0.25052 (3) obj. -3.97471 iterations 3
Cbc0038I Pass  21: suminf.    1.23925 (5) obj. -3.97471 iterations 7
Cbc0038I Pass  22: suminf.    0.76421 (5) obj. -3.97471 iterations 4
Cbc0038I Pass  23: suminf.    0.58995 (5) obj. -3.97471 iterations 2
Cbc0038I Pass  24: suminf.    2.41518 (15) obj. -3.97471 iterations 33
Cbc0038I Pass  25: suminf.    1.67845 (13) obj. -3.97471 iterations 11
Cbc0038I Pass  26: suminf.    1.31160 (12) obj. -3.97471 iterations 4
Cbc0038I Pass  27: suminf.    0.85123 (6) obj. -3.97471 iterations 20
Cbc0038I Pass  28: suminf.    0.85123 (6) obj. -3.97471 iterations 0
Cbc0038I Pass  29: suminf.    2.43819 (7) obj. -3.97471 iterations 20
Cbc0038I Pass  30: suminf.    1.59938 (4) obj. -3.97471 iterations 9
Cbc0038I Pass  31: suminf.    1.59938 (4) obj. -3.97471 iterations 0
Cbc0038I Pass  32: suminf.    0.97211 (4) obj. -3.97471 iterations 2
Cbc0038I Pass  33: suminf.    0.97211 (4) obj. -3.97471 iterations 0
Cbc0038I Rounding solution of -12.7498 is better than previous of 3.12684

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 118 columns, reduced to 50 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -12.7498 to -39.0343 (0.08 seconds)
Cbc0038I Round again with cutoff of -44.8051
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.66458 (34) obj. -52.4551 iterations 0
Cbc0038I Pass  34: suminf.    1.66458 (34) obj. -52.4551 iterations 1
Cbc0038I Pass  35: suminf.    2.05346 (24) obj. -44.8051 iterations 34
Cbc0038I Pass  36: suminf.    2.05346 (24) obj. -44.8051 iterations 0
Cbc0038I Pass  37: suminf.    1.84430 (20) obj. -44.8051 iterations 14
Cbc0038I Pass  38: suminf.    1.84430 (20) obj. -44.8051 iterations 0
Cbc0038I Pass  39: suminf.    2.67299 (18) obj. -44.8051 iterations 7
Cbc0038I Pass  40: suminf.    1.82218 (19) obj. -44.8051 iterations 3
Cbc0038I Pass  41: suminf.    2.07003 (18) obj. -44.8051 iterations 7
Cbc0038I Pass  42: suminf.    1.85492 (17) obj. -44.8051 iterations 3
Cbc0038I Pass  43: suminf.    1.85492 (17) obj. -44.8051 iterations 4
Cbc0038I Pass  44: suminf.    1.82218 (19) obj. -44.8051 iterations 8
Cbc0038I Pass  45: suminf.    1.82218 (19) obj. -44.8051 iterations 0
Cbc0038I Pass  46: suminf.    2.07003 (18) obj. -44.8051 iterations 7
Cbc0038I Pass  47: suminf.    1.85492 (17) obj. -44.8051 iterations 3
Cbc0038I Pass  48: suminf.    1.85492 (17) obj. -44.8051 iterations 4
Cbc0038I Pass  49: suminf.    1.83821 (20) obj. -44.8051 iterations 13
Cbc0038I Pass  50: suminf.    1.82218 (19) obj. -44.8051 iterations 1
Cbc0038I Pass  51: suminf.    2.07003 (18) obj. -44.8051 iterations 7
Cbc0038I Pass  52: suminf.    1.85492 (17) obj. -44.8051 iterations 3
Cbc0038I Pass  53: suminf.    1.85492 (17) obj. -44.8051 iterations 4
Cbc0038I Pass  54: suminf.    1.83821 (20) obj. -44.8051 iterations 13
Cbc0038I Pass  55: suminf.    1.82218 (19) obj. -44.8051 iterations 1
Cbc0038I Pass  56: suminf.    2.07003 (18) obj. -44.8051 iterations 6
Cbc0038I Pass  57: suminf.    1.85492 (17) obj. -44.8051 iterations 4
Cbc0038I Pass  58: suminf.    1.85492 (17) obj. -44.8051 iterations 4
Cbc0038I Pass  59: suminf.    1.83821 (20) obj. -44.8051 iterations 13
Cbc0038I Pass  60: suminf.    1.82218 (19) obj. -44.8051 iterations 1
Cbc0038I Pass  61: suminf.    2.07003 (18) obj. -44.8051 iterations 6
Cbc0038I Pass  62: suminf.    1.85492 (17) obj. -44.8051 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -39.0343 - took 0.06 seconds
Cbc0012I Integer solution of -39.0343 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 110 rows 118 columns, reduced to 33 rows 35 columns
Cbc0031I 25 added rows had average density of 29.28
Cbc0013I At root node, 200 cuts changed objective from -67.887774 to -38.863718 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 455 row cuts average 9.4 elements, 20 column cuts (20 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 48.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 45.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.0343, took 148 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

