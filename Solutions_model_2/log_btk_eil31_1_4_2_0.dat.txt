Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 2.53496e-05 - average 4.69436e-07, 5 fixed columns
Coin0506I Presolve 40 (-14) rows, 23 (-7) columns and 119 (-42) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 118.08452
Clp0000I Optimal - objective value 118.08452
Coin0511I After Postsolve, objective 118.08452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 118.08452
Clp0000I Optimal - objective value 118.08452
Clp0000I Optimal - objective value 118.08452
Coin0511I After Postsolve, objective 118.08452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 118.0845236 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.44428
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -57.175 iterations 17
Cbc0038I Solution found of -57.175
Cbc0038I Relaxing continuous gives -57.175
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -57.175 to -78.825 (0.01 seconds)
Cbc0038I Round again with cutoff of -81.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.60920 (2) obj. -81.8 iterations 4
Cbc0038I Pass   3: suminf.    0.69483 (2) obj. -81.8 iterations 3
Cbc0038I Pass   4: suminf.    0.54405 (2) obj. -88.0214 iterations 1
Cbc0038I Pass   5: suminf.    0.69483 (2) obj. -81.8 iterations 2
Cbc0038I Pass   6: suminf.    1.62622 (5) obj. -81.8 iterations 8
Cbc0038I Pass   7: suminf.    1.30686 (4) obj. -81.8 iterations 4
Cbc0038I Pass   8: suminf.    1.30686 (4) obj. -81.8 iterations 0
Cbc0038I Pass   9: suminf.    0.74319 (3) obj. -81.8 iterations 6
Cbc0038I Pass  10: suminf.    0.54875 (4) obj. -81.8 iterations 2
Cbc0038I Pass  11: suminf.    0.76754 (4) obj. -81.8 iterations 5
Cbc0038I Pass  12: suminf.    0.80072 (4) obj. -81.8 iterations 4
Cbc0038I Pass  13: suminf.    2.39468 (7) obj. -81.8 iterations 10
Cbc0038I Pass  14: suminf.    1.88118 (6) obj. -81.8 iterations 5
Cbc0038I Pass  15: suminf.    1.41747 (4) obj. -81.8 iterations 3
Cbc0038I Pass  16: suminf.    1.37918 (5) obj. -81.8 iterations 3
Cbc0038I Pass  17: suminf.    0.80989 (3) obj. -81.8 iterations 8
Cbc0038I Pass  18: suminf.    0.45000 (1) obj. -87.1287 iterations 2
Cbc0038I Pass  19: suminf.    0.36626 (2) obj. -81.8 iterations 2
Cbc0038I Pass  20: suminf.    0.45000 (1) obj. -87.1287 iterations 2
Cbc0038I Pass  21: suminf.    1.47897 (7) obj. -81.8 iterations 11
Cbc0038I Pass  22: suminf.    0.84808 (5) obj. -81.8 iterations 3
Cbc0038I Pass  23: suminf.    0.42858 (4) obj. -81.8 iterations 2
Cbc0038I Pass  24: suminf.    1.35013 (3) obj. -81.8 iterations 4
Cbc0038I Pass  25: suminf.    1.35013 (3) obj. -81.8 iterations 0
Cbc0038I Pass  26: suminf.    0.66841 (4) obj. -81.8 iterations 4
Cbc0038I Pass  27: suminf.    0.63907 (3) obj. -81.8 iterations 1
Cbc0038I Pass  28: suminf.    1.38446 (4) obj. -81.8 iterations 3
Cbc0038I Pass  29: suminf.    0.99792 (3) obj. -81.8 iterations 1
Cbc0038I Pass  30: suminf.    0.42085 (2) obj. -81.8 iterations 4
Cbc0038I Pass  31: suminf.    0.42085 (2) obj. -81.8 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -78.825 - took 0.03 seconds
Cbc0012I Integer solution of -78.825 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 13 rows 9 columns
Cbc0031I 5 added rows had average density of 20.2
Cbc0013I At root node, 5 cuts changed objective from -108.26085 to -95.123666 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 553 row cuts average 3.6 elements, 5 column cuts (5 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 430 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -78.825, took 1882 iterations and 16 nodes (0.17 seconds)
Cbc0032I Strong branching done 164 times (1034 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 7, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-17) rows, 51 (-11) columns and 483 (-165) elements
Clp1000I sum of infeasibilities 3.63812e-06 - average 7.74068e-08, 35 fixed columns
Coin0506I Presolve 12 (-35) rows, 14 (-37) columns and 48 (-435) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 2.5041256 - largest nonzero change 2.4102701e-05 ( 0.0016580886%) - largest zero change 2.4683046e-05
Clp0000I Optimal - objective value 95.6898
Clp0000I Optimal - objective value 95.6898
Coin0511I After Postsolve, objective 95.6898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2430167 - largest nonzero change 1.9070293e-05 ( 0.0015380202%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 123.68297
Clp0000I Optimal - objective value 123.68297
Clp0000I Optimal - objective value 123.68297
Coin0511I After Postsolve, objective 123.68297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.6829747 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 50 columns (50 integer (50 of which binary)) and 491 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.960%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 10.602
Cbc0038I Pass   1: suminf.    0.53685 (6) obj. -22.0042 iterations 26
Cbc0038I Pass   2: suminf.    0.53685 (6) obj. -22.0042 iterations 0
Cbc0038I Solution found of -13.8
Cbc0038I Rounding solution of -38.15 is better than previous of -13.8

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 50 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -38.15 to -58.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -62.85
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.65994 (12) obj. -62.85 iterations 5
Cbc0038I Pass   4: suminf.    1.27697 (10) obj. -62.85 iterations 5
Cbc0038I Pass   5: suminf.    1.07335 (8) obj. -62.85 iterations 4
Cbc0038I Pass   6: suminf.    0.52787 (2) obj. -62.85 iterations 12
Cbc0038I Pass   7: suminf.    0.52787 (2) obj. -62.85 iterations 0
Cbc0038I Pass   8: suminf.    0.45053 (2) obj. -62.85 iterations 3
Cbc0038I Pass   9: suminf.    0.15515 (2) obj. -75.5355 iterations 1
Cbc0038I Pass  10: suminf.    1.10471 (3) obj. -62.85 iterations 1
Cbc0038I Pass  11: suminf.    0.15515 (2) obj. -75.5355 iterations 2
Cbc0038I Pass  12: suminf.    0.80445 (5) obj. -72.5061 iterations 8
Cbc0038I Pass  13: suminf.    0.64966 (4) obj. -71.3119 iterations 3
Cbc0038I Pass  14: suminf.    1.00564 (3) obj. -62.85 iterations 3
Cbc0038I Pass  15: suminf.    0.40679 (2) obj. -67.9405 iterations 2
Cbc0038I Pass  16: suminf.    0.83979 (6) obj. -62.85 iterations 7
Cbc0038I Pass  17: suminf.    0.59347 (5) obj. -64.4832 iterations 2
Cbc0038I Pass  18: suminf.    0.95865 (3) obj. -62.85 iterations 10
Cbc0038I Pass  19: suminf.    0.53151 (2) obj. -67.2159 iterations 2
Cbc0038I Pass  20: suminf.    0.48750 (2) obj. -67.6778 iterations 7
Cbc0038I Pass  21: suminf.    0.48750 (2) obj. -67.6778 iterations 0
Cbc0038I Pass  22: suminf.    0.71113 (2) obj. -62.85 iterations 3
Cbc0038I Pass  23: suminf.    0.08750 (1) obj. -67.0778 iterations 2
Cbc0038I Pass  24: suminf.    0.08750 (1) obj. -67.0778 iterations 0
Cbc0038I Pass  25: suminf.    1.82048 (5) obj. -62.85 iterations 11
Cbc0038I Pass  26: suminf.    1.39557 (5) obj. -62.85 iterations 3
Cbc0038I Pass  27: suminf.    0.78584 (3) obj. -62.85 iterations 6
Cbc0038I Pass  28: suminf.    0.08750 (1) obj. -68.0778 iterations 2
Cbc0038I Pass  29: suminf.    0.68740 (2) obj. -62.85 iterations 2
Cbc0038I Pass  30: suminf.    0.08750 (1) obj. -68.0778 iterations 2
Cbc0038I Pass  31: suminf.    1.88281 (7) obj. -62.85 iterations 19
Cbc0038I Pass  32: suminf.    1.26222 (6) obj. -62.85 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 50 columns, reduced to 29 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -58.1 to -78.825 (0.04 seconds)
Cbc0038I Round again with cutoff of -84.125
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.40908 (11) obj. -84.125 iterations 2
Cbc0038I Pass  33: suminf.    0.40641 (2) obj. -84.125 iterations 18
Cbc0038I Pass  34: suminf.    0.40641 (2) obj. -84.125 iterations 2
Cbc0038I Pass  35: suminf.    0.52536 (2) obj. -84.125 iterations 3
Cbc0038I Pass  36: suminf.    2.19659 (6) obj. -84.125 iterations 11
Cbc0038I Pass  37: suminf.    1.54023 (4) obj. -84.125 iterations 4
Cbc0038I Pass  38: suminf.    0.56966 (2) obj. -85.3644 iterations 3
Cbc0038I Pass  39: suminf.    0.70204 (3) obj. -84.125 iterations 1
Cbc0038I Pass  40: suminf.    0.59883 (2) obj. -84.125 iterations 1
Cbc0038I Pass  41: suminf.    2.60927 (7) obj. -84.125 iterations 9
Cbc0038I Pass  42: suminf.    2.54603 (7) obj. -84.125 iterations 2
Cbc0038I Pass  43: suminf.    0.81366 (3) obj. -84.125 iterations 5
Cbc0038I Pass  44: suminf.    0.72405 (3) obj. -85.0873 iterations 3
Cbc0038I Pass  45: suminf.    0.83629 (4) obj. -84.125 iterations 2
Cbc0038I Pass  46: suminf.    0.56992 (3) obj. -84.125 iterations 2
Cbc0038I Pass  47: suminf.    1.76240 (4) obj. -84.125 iterations 3
Cbc0038I Pass  48: suminf.    2.00310 (6) obj. -84.125 iterations 5
Cbc0038I Pass  49: suminf.    2.26394 (8) obj. -84.125 iterations 2
Cbc0038I Pass  50: suminf.    1.93293 (7) obj. -84.125 iterations 1
Cbc0038I Pass  51: suminf.    0.34480 (1) obj. -84.125 iterations 9
Cbc0038I Pass  52: suminf.    0.39837 (1) obj. -87.3181 iterations 1
Cbc0038I Pass  53: suminf.    1.19997 (8) obj. -84.125 iterations 13
Cbc0038I Pass  54: suminf.    0.43065 (3) obj. -84.125 iterations 10
Cbc0038I Pass  55: suminf.    0.58245 (3) obj. -84.125 iterations 4
Cbc0038I Pass  56: suminf.    0.08893 (1) obj. -84.125 iterations 2
Cbc0038I Pass  57: suminf.    0.12195 (1) obj. -86.0933 iterations 1
Cbc0038I Pass  58: suminf.    0.84741 (7) obj. -84.125 iterations 11
Cbc0038I Pass  59: suminf.    1.88733 (6) obj. -84.125 iterations 10
Cbc0038I Pass  60: suminf.    0.72709 (3) obj. -84.125 iterations 8
Cbc0038I Pass  61: suminf.    0.26346 (3) obj. -84.125 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 50 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -78.825 - took 0.04 seconds
Cbc0012I Integer solution of -78.825 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 44 rows 50 columns, reduced to 21 rows 23 columns
Cbc0031I 20 added rows had average density of 17.05
Cbc0013I At root node, 20 cuts changed objective from -105.20467 to -89.948534 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 298 row cuts average 4.5 elements, 11 column cuts (11 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 84 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 54 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 34 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -78.825 best solution, best possible -89.948534 (0.51 seconds)
Cbc0001I Search completed - best objective -78.825, took 716 iterations and 16 nodes (1.08 seconds)
Cbc0032I Strong branching done 232 times (1713 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       1.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 2.53496e-05 - average 4.69436e-07, 5 fixed columns
Coin0506I Presolve 40 (-14) rows, 23 (-7) columns and 119 (-42) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 118.08452
Clp0000I Optimal - objective value 118.08452
Coin0511I After Postsolve, objective 118.08452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 118.08452
Clp0000I Optimal - objective value 118.08452
Clp0000I Optimal - objective value 118.08452
Coin0511I After Postsolve, objective 118.08452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 118.0845236 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.44428
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -57.175 iterations 17
Cbc0038I Solution found of -57.175
Cbc0038I Relaxing continuous gives -57.175
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -57.175 to -78.825 (0.01 seconds)
Cbc0038I Round again with cutoff of -81.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.60920 (2) obj. -81.8 iterations 4
Cbc0038I Pass   3: suminf.    0.69483 (2) obj. -81.8 iterations 3
Cbc0038I Pass   4: suminf.    0.54405 (2) obj. -88.0214 iterations 1
Cbc0038I Pass   5: suminf.    0.69483 (2) obj. -81.8 iterations 2
Cbc0038I Pass   6: suminf.    1.62622 (5) obj. -81.8 iterations 8
Cbc0038I Pass   7: suminf.    1.30686 (4) obj. -81.8 iterations 4
Cbc0038I Pass   8: suminf.    1.30686 (4) obj. -81.8 iterations 0
Cbc0038I Pass   9: suminf.    0.74319 (3) obj. -81.8 iterations 6
Cbc0038I Pass  10: suminf.    0.54875 (4) obj. -81.8 iterations 2
Cbc0038I Pass  11: suminf.    0.76754 (4) obj. -81.8 iterations 5
Cbc0038I Pass  12: suminf.    0.80072 (4) obj. -81.8 iterations 4
Cbc0038I Pass  13: suminf.    2.39468 (7) obj. -81.8 iterations 10
Cbc0038I Pass  14: suminf.    1.88118 (6) obj. -81.8 iterations 5
Cbc0038I Pass  15: suminf.    1.41747 (4) obj. -81.8 iterations 3
Cbc0038I Pass  16: suminf.    1.37918 (5) obj. -81.8 iterations 3
Cbc0038I Pass  17: suminf.    0.80989 (3) obj. -81.8 iterations 8
Cbc0038I Pass  18: suminf.    0.45000 (1) obj. -87.1287 iterations 2
Cbc0038I Pass  19: suminf.    0.36626 (2) obj. -81.8 iterations 2
Cbc0038I Pass  20: suminf.    0.45000 (1) obj. -87.1287 iterations 2
Cbc0038I Pass  21: suminf.    1.47897 (7) obj. -81.8 iterations 11
Cbc0038I Pass  22: suminf.    0.84808 (5) obj. -81.8 iterations 3
Cbc0038I Pass  23: suminf.    0.42858 (4) obj. -81.8 iterations 2
Cbc0038I Pass  24: suminf.    1.35013 (3) obj. -81.8 iterations 4
Cbc0038I Pass  25: suminf.    1.35013 (3) obj. -81.8 iterations 0
Cbc0038I Pass  26: suminf.    0.66841 (4) obj. -81.8 iterations 4
Cbc0038I Pass  27: suminf.    0.63907 (3) obj. -81.8 iterations 1
Cbc0038I Pass  28: suminf.    1.38446 (4) obj. -81.8 iterations 3
Cbc0038I Pass  29: suminf.    0.99792 (3) obj. -81.8 iterations 1
Cbc0038I Pass  30: suminf.    0.42085 (2) obj. -81.8 iterations 4
Cbc0038I Pass  31: suminf.    0.42085 (2) obj. -81.8 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -78.825 - took 0.02 seconds
Cbc0012I Integer solution of -78.825 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 13 rows 9 columns
Cbc0031I 5 added rows had average density of 20.2
Cbc0013I At root node, 5 cuts changed objective from -108.26085 to -95.123666 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 553 row cuts average 3.6 elements, 5 column cuts (5 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 430 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -78.825, took 1882 iterations and 16 nodes (0.18 seconds)
Cbc0032I Strong branching done 164 times (1034 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 7, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 50 (-13) columns and 467 (-182) elements
Clp1000I sum of infeasibilities 3.63303e-06 - average 7.89788e-08, 32 fixed columns
Coin0506I Presolve 14 (-32) rows, 16 (-34) columns and 56 (-411) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 2.3775405 - largest nonzero change 1.0331716e-05 ( 0.00079945292%) - largest zero change 2.4683046e-05
Clp0000I Optimal - objective value 95.6898
Clp0000I Optimal - objective value 95.6898
Coin0511I After Postsolve, objective 95.6898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2574327 - largest nonzero change 1.9070293e-05 ( 0.0015380202%) - largest zero change 2.329182e-05
Clp0000I Optimal - objective value 123.68297
Clp0000I Optimal - objective value 123.68297
Clp0000I Optimal - objective value 123.68297
Coin0511I After Postsolve, objective 123.68297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.6829747 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 50 columns (50 integer (50 of which binary)) and 497 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.020%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 10.5631
Cbc0038I Pass   1: suminf.    0.62485 (7) obj. -23.8417 iterations 24
Cbc0038I Pass   2: suminf.    0.62485 (7) obj. -23.8417 iterations 0
Cbc0038I Solution found of -13.8
Cbc0038I Rounding solution of -38.15 is better than previous of -13.8

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -38.15 to -58.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -62.85
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.69990 (13) obj. -62.85 iterations 5
Cbc0038I Pass   4: suminf.    1.51257 (11) obj. -62.85 iterations 5
Cbc0038I Pass   5: suminf.    1.11341 (9) obj. -62.85 iterations 4
Cbc0038I Pass   6: suminf.    0.52787 (2) obj. -62.85 iterations 13
Cbc0038I Pass   7: suminf.    0.52787 (2) obj. -62.85 iterations 0
Cbc0038I Pass   8: suminf.    0.45053 (2) obj. -62.85 iterations 3
Cbc0038I Pass   9: suminf.    0.15515 (2) obj. -75.5355 iterations 1
Cbc0038I Pass  10: suminf.    1.10471 (3) obj. -62.85 iterations 1
Cbc0038I Pass  11: suminf.    0.15515 (2) obj. -75.5355 iterations 2
Cbc0038I Pass  12: suminf.    0.81401 (5) obj. -72.4827 iterations 8
Cbc0038I Pass  13: suminf.    0.65918 (4) obj. -71.2886 iterations 3
Cbc0038I Pass  14: suminf.    1.00564 (3) obj. -62.85 iterations 3
Cbc0038I Pass  15: suminf.    0.40679 (2) obj. -67.9405 iterations 2
Cbc0038I Pass  16: suminf.    0.84724 (6) obj. -62.85 iterations 8
Cbc0038I Pass  17: suminf.    0.60386 (5) obj. -64.4624 iterations 2
Cbc0038I Pass  18: suminf.    0.95865 (3) obj. -62.85 iterations 8
Cbc0038I Pass  19: suminf.    0.53151 (2) obj. -67.2159 iterations 2
Cbc0038I Pass  20: suminf.    0.48750 (2) obj. -67.6778 iterations 7
Cbc0038I Pass  21: suminf.    0.48750 (2) obj. -67.6778 iterations 0
Cbc0038I Pass  22: suminf.    0.71113 (2) obj. -62.85 iterations 3
Cbc0038I Pass  23: suminf.    0.08750 (1) obj. -67.0778 iterations 2
Cbc0038I Pass  24: suminf.    0.08750 (1) obj. -67.0778 iterations 0
Cbc0038I Pass  25: suminf.    1.74473 (5) obj. -62.85 iterations 11
Cbc0038I Pass  26: suminf.    1.32722 (5) obj. -62.85 iterations 4
Cbc0038I Pass  27: suminf.    0.78584 (3) obj. -62.85 iterations 6
Cbc0038I Pass  28: suminf.    0.08750 (1) obj. -68.0778 iterations 2
Cbc0038I Pass  29: suminf.    0.68740 (2) obj. -62.85 iterations 2
Cbc0038I Pass  30: suminf.    0.08750 (1) obj. -68.0778 iterations 2
Cbc0038I Pass  31: suminf.    1.87390 (7) obj. -62.85 iterations 18
Cbc0038I Pass  32: suminf.    1.29706 (6) obj. -62.85 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 29 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -58.1 to -78.825 (0.04 seconds)
Cbc0038I Round again with cutoff of -84.175
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.70948 (14) obj. -84.175 iterations 2
Cbc0038I Pass  33: suminf.    0.98950 (3) obj. -84.175 iterations 17
Cbc0038I Pass  34: suminf.    0.86889 (3) obj. -84.175 iterations 2
Cbc0038I Pass  35: suminf.    0.52463 (2) obj. -84.175 iterations 3
Cbc0038I Pass  36: suminf.    0.40800 (2) obj. -84.175 iterations 3
Cbc0038I Pass  37: suminf.    2.09947 (7) obj. -84.175 iterations 13
Cbc0038I Pass  38: suminf.    0.72405 (3) obj. -85.0873 iterations 9
Cbc0038I Pass  39: suminf.    0.83611 (4) obj. -84.175 iterations 2
Cbc0038I Pass  40: suminf.    0.57341 (3) obj. -84.175 iterations 2
Cbc0038I Pass  41: suminf.    1.74948 (4) obj. -84.175 iterations 2
Cbc0038I Pass  42: suminf.    2.26311 (8) obj. -84.175 iterations 8
Cbc0038I Pass  43: suminf.    1.86609 (7) obj. -84.175 iterations 1
Cbc0038I Pass  44: suminf.    1.01819 (4) obj. -84.175 iterations 7
Cbc0038I Pass  45: suminf.    0.47474 (2) obj. -84.175 iterations 3
Cbc0038I Pass  46: suminf.    0.65088 (2) obj. -84.175 iterations 2
Cbc0038I Pass  47: suminf.    3.04108 (8) obj. -84.175 iterations 11
Cbc0038I Pass  48: suminf.    1.67179 (5) obj. -84.175 iterations 6
Cbc0038I Pass  49: suminf.    1.67172 (7) obj. -84.175 iterations 2
Cbc0038I Pass  50: suminf.    1.37124 (4) obj. -84.175 iterations 3
Cbc0038I Pass  51: suminf.    0.37338 (3) obj. -84.175 iterations 1
Cbc0038I Pass  52: suminf.    0.37338 (3) obj. -84.175 iterations 0
Cbc0038I Pass  53: suminf.    1.42647 (4) obj. -84.175 iterations 3
Cbc0038I Pass  54: suminf.    3.62742 (10) obj. -84.175 iterations 10
Cbc0038I Pass  55: suminf.    1.91795 (6) obj. -84.175 iterations 8
Cbc0038I Pass  56: suminf.    1.08334 (4) obj. -84.175 iterations 3
Cbc0038I Pass  57: suminf.    1.04726 (4) obj. -84.175 iterations 3
Cbc0038I Pass  58: suminf.    0.66539 (3) obj. -84.175 iterations 2
Cbc0038I Pass  59: suminf.    1.67051 (6) obj. -84.175 iterations 3
Cbc0038I Pass  60: suminf.    1.12382 (4) obj. -84.175 iterations 2
Cbc0038I Pass  61: suminf.    1.47723 (6) obj. -84.175 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 35 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -78.825 - took 0.05 seconds
Cbc0012I Integer solution of -78.825 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 45 rows 50 columns, reduced to 21 rows 23 columns
Cbc0031I 23 added rows had average density of 17.869565
Cbc0013I At root node, 23 cuts changed objective from -105.36277 to -90.463002 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 247 row cuts average 4.4 elements, 11 column cuts (11 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 58 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 39 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 214 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 34 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0010I After 3 nodes, 2 on tree, -78.825 best solution, best possible -87.498106 (0.56 seconds)
Cbc0001I Search completed - best objective -78.825, took 768 iterations and 22 nodes (1.16 seconds)
Cbc0032I Strong branching done 298 times (2328 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       1.16

