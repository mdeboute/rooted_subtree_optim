Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 75 (-3) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 2.02498e-05 - average 1.55768e-07, 10 fixed columns
Coin0506I Presolve 112 (-18) rows, 65 (-10) columns and 346 (-56) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 6.15573 - largest nonzero change 0 ( 0%) - largest zero change 2.8682824e-05
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Coin0511I After Postsolve, objective 37.85824, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Coin0511I After Postsolve, objective 37.85824, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.85824041 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.00601
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.42672 iterations 45
Cbc0038I Solution found of 5.42672
Cbc0038I Relaxing continuous gives 5.42672
Cbc0038I Rounding solution of 1.88441 is better than previous of 5.42672

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 1.88441 to -9.01125 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.896
Cbc0038I Pass   2: suminf.    2.43757 (10) obj. -11.896 iterations 15
Cbc0038I Pass   3: suminf.    1.51053 (4) obj. -11.896 iterations 11
Cbc0038I Pass   4: suminf.    1.51053 (4) obj. -11.896 iterations 0
Cbc0038I Pass   5: suminf.    1.50221 (6) obj. -11.896 iterations 5
Cbc0038I Pass   6: suminf.    2.01516 (7) obj. -11.896 iterations 5
Cbc0038I Pass   7: suminf.    1.63164 (6) obj. -11.896 iterations 3
Cbc0038I Pass   8: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass   9: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  10: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  11: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  12: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  13: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  14: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  15: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I Pass  16: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass  17: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  18: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  19: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  20: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  21: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  22: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  23: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I Pass  24: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass  25: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  26: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  27: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  28: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  29: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  30: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  31: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -9.01125 to -9.40262 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.0885
Cbc0038I Pass  31: suminf.    3.33982 (12) obj. -17.0885 iterations 2
Cbc0038I Pass  32: suminf.    2.59408 (7) obj. -17.0885 iterations 10
Cbc0038I Pass  33: suminf.    2.07814 (6) obj. -17.0885 iterations 2
Cbc0038I Pass  34: suminf.    2.07814 (6) obj. -17.0885 iterations 0
Cbc0038I Pass  35: suminf.    2.37080 (7) obj. -17.0885 iterations 3
Cbc0038I Pass  36: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  37: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  38: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  39: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  40: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  41: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  42: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  43: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  44: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  45: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  46: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  47: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  48: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  49: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  50: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  51: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  52: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  53: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  54: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  55: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  56: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  57: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  58: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  59: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  60: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -9.40262 - took 0.11 seconds
Cbc0012I Integer solution of -9.40262 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0031I 23 added rows had average density of 35.130435
Cbc0013I At root node, 23 cuts changed objective from -37.85824 to -29.918522 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12755 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2353 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.40262 best solution, best possible -29.918522 (0.92 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 8 rows 10 columns
Cbc0004I Integer solution of -9.53904 found after 9186 iterations and 44 nodes (1.10 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 9 rows 13 columns
Cbc0012I Integer solution of -9.714807 found by RINS after 10003 iterations and 91 nodes (1.19 seconds)
Cbc0004I Integer solution of -10.422837 found after 10176 iterations and 109 nodes (1.21 seconds)
Cbc0001I Search completed - best objective -10.422837, took 11759 iterations and 178 nodes (1.32 seconds)
Cbc0032I Strong branching done 1622 times (22876 iterations), fathomed 18 nodes and fixed 55 variables
Cbc0035I Maximum depth 28, 482 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-60) rows, 112 (-40) columns and 1713 (-1590) elements
Clp1000I sum of infeasibilities 2.22944e-08 - average 2.37174e-10, 38 fixed columns
Coin0506I Presolve 64 (-30) rows, 74 (-38) columns and 834 (-879) elements
Clp0006I 0  Obj 37.515101 Dual inf 12.143109 (74)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 2.1281081 - largest nonzero change 2.3814959e-05 ( 0.0015708815%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 53.714106
Clp0000I Optimal - objective value 53.714106
Coin0511I After Postsolve, objective 53.714106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.714106
Clp0000I Optimal - objective value 53.714106
Clp0000I Optimal - objective value 53.714106
Clp0000I Optimal - objective value 53.714106
Coin0511I After Postsolve, objective 53.714106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.71410591 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 114 columns (114 integer (114 of which binary)) and 1730 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.114%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.49284
Cbc0038I Pass   1: suminf.    2.23446 (23) obj. -28.7194 iterations 14
Cbc0038I Pass   2: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass   3: suminf.    0.93788 (12) obj. -17.2385 iterations 11
Cbc0038I Solution found of -0.6178
Cbc0038I Rounding solution of -5.26774 is better than previous of -0.6178

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -8.39677
Cbc0038I Pass   4: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass   5: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass   6: suminf.    1.04503 (13) obj. -18.1313 iterations 10
Cbc0038I Pass   7: suminf.    1.19797 (4) obj. -8.39677 iterations 24
Cbc0038I Pass   8: suminf.    1.19797 (4) obj. -8.39677 iterations 1
Cbc0038I Pass   9: suminf.    0.13108 (2) obj. -8.79654 iterations 9
Cbc0038I Pass  10: suminf.    0.06061 (2) obj. -8.39677 iterations 2
Cbc0038I Pass  11: suminf.    0.48630 (13) obj. -8.39677 iterations 8
Cbc0038I Pass  12: suminf.    0.15060 (3) obj. -8.39677 iterations 8
Cbc0038I Pass  13: suminf.    0.26434 (2) obj. -8.39677 iterations 3
Cbc0038I Pass  14: suminf.    2.45787 (19) obj. -8.39677 iterations 34
Cbc0038I Pass  15: suminf.    1.36037 (10) obj. -8.39677 iterations 10
Cbc0038I Pass  16: suminf.    1.08939 (10) obj. -8.39677 iterations 4
Cbc0038I Pass  17: suminf.    0.75771 (4) obj. -8.39677 iterations 15
Cbc0038I Pass  18: suminf.    0.74845 (5) obj. -8.39677 iterations 1
Cbc0038I Pass  19: suminf.    1.08859 (12) obj. -8.39677 iterations 11
Cbc0038I Pass  20: suminf.    0.71795 (7) obj. -8.39677 iterations 5
Cbc0038I Pass  21: suminf.    1.08286 (12) obj. -8.39677 iterations 15
Cbc0038I Pass  22: suminf.    1.04366 (7) obj. -8.39677 iterations 1
Cbc0038I Pass  23: suminf.    1.42893 (9) obj. -8.39677 iterations 7
Cbc0038I Pass  24: suminf.    1.27787 (8) obj. -8.39677 iterations 1
Cbc0038I Pass  25: suminf.    2.25547 (10) obj. -8.39677 iterations 11
Cbc0038I Pass  26: suminf.    2.19272 (9) obj. -8.39677 iterations 2
Cbc0038I Pass  27: suminf.    1.33858 (9) obj. -8.39677 iterations 1
Cbc0038I Pass  28: suminf.    1.05384 (7) obj. -8.39677 iterations 7
Cbc0038I Pass  29: suminf.    2.19272 (9) obj. -8.39677 iterations 9
Cbc0038I Pass  30: suminf.    1.21984 (7) obj. -8.39677 iterations 4
Cbc0038I Pass  31: suminf.    1.21984 (7) obj. -8.39677 iterations 4
Cbc0038I Pass  32: suminf.    2.22934 (10) obj. -8.39677 iterations 7
Cbc0038I Pass  33: suminf.    2.17593 (9) obj. -8.39677 iterations 2
Cbc0038I Rounding solution of -6.75487 is better than previous of -5.26774

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -6.75487 to -8.66465 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.2432
Cbc0038I Pass  33: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass  34: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass  35: suminf.    1.03483 (10) obj. -14.2432 iterations 19
Cbc0038I Pass  36: suminf.    0.81280 (16) obj. -14.2432 iterations 17
Cbc0038I Pass  37: suminf.    0.81280 (16) obj. -14.2432 iterations 1
Cbc0038I Pass  38: suminf.    1.54715 (11) obj. -14.2432 iterations 18
Cbc0038I Pass  39: suminf.    1.53911 (12) obj. -14.2432 iterations 4
Cbc0038I Pass  40: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  41: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  42: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I Pass  43: suminf.    1.53911 (12) obj. -14.2432 iterations 9
Cbc0038I Pass  44: suminf.    1.53911 (12) obj. -14.2432 iterations 2
Cbc0038I Pass  45: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  46: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  47: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I Pass  48: suminf.    1.53911 (12) obj. -14.2432 iterations 9
Cbc0038I Pass  49: suminf.    1.53911 (12) obj. -14.2432 iterations 2
Cbc0038I Pass  50: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  51: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  52: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I Pass  53: suminf.    1.53911 (12) obj. -14.2432 iterations 9
Cbc0038I Pass  54: suminf.    1.53911 (12) obj. -14.2432 iterations 2
Cbc0038I Pass  55: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  56: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  57: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I Pass  58: suminf.    1.53911 (12) obj. -14.2432 iterations 9
Cbc0038I Pass  59: suminf.    1.53911 (12) obj. -14.2432 iterations 2
Cbc0038I Pass  60: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  61: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  62: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -8.66465 - took 0.06 seconds
Cbc0012I Integer solution of -8.66465 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 5 rows 7 columns
Cbc0031I 58 added rows had average density of 27.5
Cbc0013I At root node, 58 cuts changed objective from -36.557128 to -14.755199 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15524 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1089 row cuts average 106.7 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 618 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1023 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 301 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.619 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.66465 best solution, best possible -14.755199 (2.29 seconds)
Cbc0012I Integer solution of -8.71526 found by rounding after 4711 iterations and 10 nodes (2.68 seconds)
Cbc0012I Integer solution of -8.97642 found by rounding after 4724 iterations and 12 nodes (2.68 seconds)
Cbc0012I Integer solution of -9.856407 found by rounding after 4776 iterations and 17 nodes (2.70 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 7 rows 10 columns
Cbc0016I Integer solution of -9.96883 found by strong branching after 5819 iterations and 72 nodes (2.81 seconds)
Cbc0016I Integer solution of -10.422837 found by strong branching after 6203 iterations and 83 nodes (2.85 seconds)
Cbc0001I Search completed - best objective -10.422837, took 6400 iterations and 90 nodes (2.86 seconds)
Cbc0032I Strong branching done 822 times (11892 iterations), fathomed 22 nodes and fixed 11 variables
Cbc0035I Maximum depth 17, 271 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       2.88

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 75 (-3) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 2.02498e-05 - average 1.55768e-07, 10 fixed columns
Coin0506I Presolve 112 (-18) rows, 65 (-10) columns and 346 (-56) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 6.15573 - largest nonzero change 0 ( 0%) - largest zero change 2.8682824e-05
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Coin0511I After Postsolve, objective 37.85824, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Clp0000I Optimal - objective value 37.85824
Coin0511I After Postsolve, objective 37.85824, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.85824041 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.00601
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.42672 iterations 45
Cbc0038I Solution found of 5.42672
Cbc0038I Relaxing continuous gives 5.42672
Cbc0038I Rounding solution of 1.88441 is better than previous of 5.42672

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 1.88441 to -9.01125 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.896
Cbc0038I Pass   2: suminf.    2.43757 (10) obj. -11.896 iterations 15
Cbc0038I Pass   3: suminf.    1.51053 (4) obj. -11.896 iterations 11
Cbc0038I Pass   4: suminf.    1.51053 (4) obj. -11.896 iterations 0
Cbc0038I Pass   5: suminf.    1.50221 (6) obj. -11.896 iterations 5
Cbc0038I Pass   6: suminf.    2.01516 (7) obj. -11.896 iterations 5
Cbc0038I Pass   7: suminf.    1.63164 (6) obj. -11.896 iterations 3
Cbc0038I Pass   8: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass   9: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  10: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  11: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  12: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  13: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  14: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  15: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I Pass  16: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass  17: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  18: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  19: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  20: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  21: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  22: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  23: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I Pass  24: suminf.    2.06987 (6) obj. -11.896 iterations 8
Cbc0038I Pass  25: suminf.    1.58785 (5) obj. -11.896 iterations 1
Cbc0038I Pass  26: suminf.    1.70178 (5) obj. -11.896 iterations 6
Cbc0038I Pass  27: suminf.    1.70095 (5) obj. -11.896 iterations 2
Cbc0038I Pass  28: suminf.    2.53723 (6) obj. -11.896 iterations 7
Cbc0038I Pass  29: suminf.    1.88421 (6) obj. -11.896 iterations 1
Cbc0038I Pass  30: suminf.    1.63196 (6) obj. -11.896 iterations 2
Cbc0038I Pass  31: suminf.    1.63164 (6) obj. -11.896 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -9.01125 to -9.40262 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.0885
Cbc0038I Pass  31: suminf.    3.33982 (12) obj. -17.0885 iterations 2
Cbc0038I Pass  32: suminf.    2.59408 (7) obj. -17.0885 iterations 10
Cbc0038I Pass  33: suminf.    2.07814 (6) obj. -17.0885 iterations 2
Cbc0038I Pass  34: suminf.    2.07814 (6) obj. -17.0885 iterations 0
Cbc0038I Pass  35: suminf.    2.37080 (7) obj. -17.0885 iterations 3
Cbc0038I Pass  36: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  37: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  38: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  39: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  40: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  41: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  42: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  43: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  44: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  45: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  46: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  47: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  48: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  49: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  50: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  51: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  52: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  53: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  54: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  55: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I Pass  56: suminf.    2.32411 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  57: suminf.    2.82070 (8) obj. -17.0885 iterations 5
Cbc0038I Pass  58: suminf.    2.31335 (8) obj. -17.0885 iterations 1
Cbc0038I Pass  59: suminf.    2.31335 (8) obj. -17.0885 iterations 0
Cbc0038I Pass  60: suminf.    2.37080 (7) obj. -17.0885 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -9.40262 - took 0.12 seconds
Cbc0012I Integer solution of -9.40262 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 40 columns
Cbc0031I 23 added rows had average density of 35.130435
Cbc0013I At root node, 23 cuts changed objective from -37.85824 to -29.918522 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12755 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2353 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.40262 best solution, best possible -29.918522 (1.05 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 8 rows 10 columns
Cbc0004I Integer solution of -9.53904 found after 9186 iterations and 44 nodes (1.28 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 9 rows 13 columns
Cbc0012I Integer solution of -9.714807 found by RINS after 10003 iterations and 91 nodes (1.38 seconds)
Cbc0004I Integer solution of -10.422837 found after 10176 iterations and 109 nodes (1.39 seconds)
Cbc0001I Search completed - best objective -10.422837, took 11759 iterations and 178 nodes (1.52 seconds)
Cbc0032I Strong branching done 1622 times (22876 iterations), fathomed 18 nodes and fixed 55 variables
Cbc0035I Maximum depth 28, 482 variables fixed on reduced cost
Total time (CPU seconds):       1.47   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-61) rows, 112 (-41) columns and 1713 (-1591) elements
Clp1000I sum of infeasibilities 2.22944e-08 - average 2.37174e-10, 38 fixed columns
Coin0506I Presolve 64 (-30) rows, 74 (-38) columns and 834 (-879) elements
Clp0006I 0  Obj 37.515101 Dual inf 12.143109 (74)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 2.1281081 - largest nonzero change 2.3814959e-05 ( 0.0015708815%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 53.714106
Clp0000I Optimal - objective value 53.714106
Coin0511I After Postsolve, objective 53.714106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.714106
Clp0000I Optimal - objective value 53.714106
Clp0000I Optimal - objective value 53.714106
Clp0000I Optimal - objective value 53.714106
Coin0511I After Postsolve, objective 53.714106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.71410591 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 114 columns (114 integer (114 of which binary)) and 1730 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.114%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.49284
Cbc0038I Pass   1: suminf.    2.23446 (23) obj. -28.7194 iterations 14
Cbc0038I Pass   2: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass   3: suminf.    0.93788 (12) obj. -17.2385 iterations 11
Cbc0038I Solution found of -0.6178
Cbc0038I Rounding solution of -5.26774 is better than previous of -0.6178

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -8.39677
Cbc0038I Pass   4: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass   5: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass   6: suminf.    1.04503 (13) obj. -18.1313 iterations 10
Cbc0038I Pass   7: suminf.    1.19797 (4) obj. -8.39677 iterations 24
Cbc0038I Pass   8: suminf.    1.19797 (4) obj. -8.39677 iterations 1
Cbc0038I Pass   9: suminf.    0.13108 (2) obj. -8.79654 iterations 9
Cbc0038I Pass  10: suminf.    0.06061 (2) obj. -8.39677 iterations 2
Cbc0038I Pass  11: suminf.    0.48630 (13) obj. -8.39677 iterations 8
Cbc0038I Pass  12: suminf.    0.15060 (3) obj. -8.39677 iterations 8
Cbc0038I Pass  13: suminf.    0.26434 (2) obj. -8.39677 iterations 3
Cbc0038I Pass  14: suminf.    2.45787 (19) obj. -8.39677 iterations 34
Cbc0038I Pass  15: suminf.    1.36037 (10) obj. -8.39677 iterations 10
Cbc0038I Pass  16: suminf.    1.08939 (10) obj. -8.39677 iterations 4
Cbc0038I Pass  17: suminf.    0.75771 (4) obj. -8.39677 iterations 15
Cbc0038I Pass  18: suminf.    0.74845 (5) obj. -8.39677 iterations 1
Cbc0038I Pass  19: suminf.    1.08859 (12) obj. -8.39677 iterations 11
Cbc0038I Pass  20: suminf.    0.71795 (7) obj. -8.39677 iterations 5
Cbc0038I Pass  21: suminf.    1.08286 (12) obj. -8.39677 iterations 15
Cbc0038I Pass  22: suminf.    1.04366 (7) obj. -8.39677 iterations 1
Cbc0038I Pass  23: suminf.    1.42893 (9) obj. -8.39677 iterations 7
Cbc0038I Pass  24: suminf.    1.27787 (8) obj. -8.39677 iterations 1
Cbc0038I Pass  25: suminf.    2.25547 (10) obj. -8.39677 iterations 11
Cbc0038I Pass  26: suminf.    2.19272 (9) obj. -8.39677 iterations 2
Cbc0038I Pass  27: suminf.    1.33858 (9) obj. -8.39677 iterations 1
Cbc0038I Pass  28: suminf.    1.05384 (7) obj. -8.39677 iterations 7
Cbc0038I Pass  29: suminf.    2.19272 (9) obj. -8.39677 iterations 9
Cbc0038I Pass  30: suminf.    1.21984 (7) obj. -8.39677 iterations 4
Cbc0038I Pass  31: suminf.    1.21984 (7) obj. -8.39677 iterations 4
Cbc0038I Pass  32: suminf.    2.22934 (10) obj. -8.39677 iterations 7
Cbc0038I Pass  33: suminf.    2.17593 (9) obj. -8.39677 iterations 2
Cbc0038I Rounding solution of -6.75487 is better than previous of -5.26774

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -6.75487 to -8.66465 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.2432
Cbc0038I Pass  33: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass  34: suminf.    2.23446 (23) obj. -28.7194 iterations 0
Cbc0038I Pass  35: suminf.    1.03483 (10) obj. -14.2432 iterations 19
Cbc0038I Pass  36: suminf.    0.81280 (16) obj. -14.2432 iterations 17
Cbc0038I Pass  37: suminf.    0.81280 (16) obj. -14.2432 iterations 1
Cbc0038I Pass  38: suminf.    1.54715 (11) obj. -14.2432 iterations 18
Cbc0038I Pass  39: suminf.    1.53911 (12) obj. -14.2432 iterations 4
Cbc0038I Pass  40: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  41: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  42: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I Pass  43: suminf.    1.53911 (12) obj. -14.2432 iterations 9
Cbc0038I Pass  44: suminf.    1.53911 (12) obj. -14.2432 iterations 2
Cbc0038I Pass  45: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  46: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  47: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I Pass  48: suminf.    1.53911 (12) obj. -14.2432 iterations 9
Cbc0038I Pass  49: suminf.    1.53911 (12) obj. -14.2432 iterations 2
Cbc0038I Pass  50: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  51: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  52: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I Pass  53: suminf.    1.53911 (12) obj. -14.2432 iterations 9
Cbc0038I Pass  54: suminf.    1.53911 (12) obj. -14.2432 iterations 2
Cbc0038I Pass  55: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  56: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  57: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I Pass  58: suminf.    1.53911 (12) obj. -14.2432 iterations 9
Cbc0038I Pass  59: suminf.    1.53911 (12) obj. -14.2432 iterations 2
Cbc0038I Pass  60: suminf.    2.65188 (13) obj. -14.2432 iterations 11
Cbc0038I Pass  61: suminf.    1.59961 (11) obj. -14.2432 iterations 8
Cbc0038I Pass  62: suminf.    1.07998 (10) obj. -14.2432 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -8.66465 - took 0.06 seconds
Cbc0012I Integer solution of -8.66465 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 5 rows 7 columns
Cbc0031I 58 added rows had average density of 27.5
Cbc0013I At root node, 58 cuts changed objective from -36.557128 to -14.755199 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15524 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1089 row cuts average 106.7 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 618 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1023 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 301 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.702 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.66465 best solution, best possible -14.755199 (2.63 seconds)
Cbc0012I Integer solution of -8.71526 found by rounding after 4711 iterations and 10 nodes (3.07 seconds)
Cbc0012I Integer solution of -8.97642 found by rounding after 4724 iterations and 12 nodes (3.07 seconds)
Cbc0012I Integer solution of -9.856407 found by rounding after 4776 iterations and 17 nodes (3.09 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 7 rows 10 columns
Cbc0016I Integer solution of -9.96883 found by strong branching after 5819 iterations and 72 nodes (3.22 seconds)
Cbc0016I Integer solution of -10.422837 found by strong branching after 6203 iterations and 83 nodes (3.26 seconds)
Cbc0001I Search completed - best objective -10.422837, took 6400 iterations and 90 nodes (3.28 seconds)
Cbc0032I Strong branching done 822 times (11892 iterations), fathomed 22 nodes and fixed 11 variables
Cbc0035I Maximum depth 17, 271 variables fixed on reduced cost
Total time (CPU seconds):       2.56   (Wallclock seconds):       3.30

