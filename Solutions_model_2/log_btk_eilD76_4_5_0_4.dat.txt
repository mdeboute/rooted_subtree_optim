Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 59 (-19) columns and 328 (-125) elements
Clp1000I sum of infeasibilities 0.000200974 - average 1.86087e-06, 36 fixed columns
Coin0506I Presolve 21 (-87) rows, 15 (-44) columns and 66 (-262) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 373.97785
Clp0000I Optimal - objective value 373.97785
Coin0511I After Postsolve, objective 373.97785, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.34540717 - largest nonzero change 0 ( 0%) - largest zero change 2.8820022e-05
Clp0000I Optimal - objective value 373.97785
Clp0000I Optimal - objective value 373.97785
Clp0000I Optimal - objective value 373.97785
Coin0511I After Postsolve, objective 373.97785, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 373.9778472 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 108 rows, 59 columns (58 integer (58 of which binary)) and 328 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.510%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.67823
Cbc0038I Pass   1: suminf.    0.28571 (1) obj. -320.413 iterations 27
Cbc0038I Pass   2: suminf.    0.28571 (1) obj. -320.413 iterations 0
Cbc0038I Solution found of -274.5
Cbc0038I Relaxing continuous gives -274.5
Cbc0038I Rounding solution of -278.471 is better than previous of -274.5

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 59 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -278.471 to -339.425 (0.02 seconds)
Cbc0038I Round again with cutoff of -342.881
Cbc0038I Pass   3: suminf.    0.62893 (2) obj. -342.881 iterations 2
Cbc0038I Pass   4: suminf.    0.40292 (2) obj. -342.881 iterations 7
Cbc0038I Pass   5: suminf.    1.04960 (6) obj. -342.881 iterations 7
Cbc0038I Pass   6: suminf.    0.46197 (4) obj. -342.881 iterations 8
Cbc0038I Pass   7: suminf.    1.00276 (3) obj. -342.881 iterations 16
Cbc0038I Pass   8: suminf.    0.72453 (4) obj. -342.881 iterations 5
Cbc0038I Pass   9: suminf.    0.70135 (3) obj. -342.881 iterations 5
Cbc0038I Pass  10: suminf.    0.25555 (2) obj. -342.881 iterations 8
Cbc0038I Pass  11: suminf.    0.05405 (1) obj. -342.881 iterations 2
Cbc0038I Pass  12: suminf.    0.15155 (1) obj. -342.881 iterations 1
Cbc0038I Pass  13: suminf.    0.72092 (3) obj. -342.881 iterations 8
Cbc0038I Pass  14: suminf.    0.65010 (7) obj. -342.881 iterations 18
Cbc0038I Pass  15: suminf.    0.60490 (3) obj. -342.881 iterations 8
Cbc0038I Pass  16: suminf.    0.63035 (4) obj. -342.881 iterations 6
Cbc0038I Pass  17: suminf.    4.03898 (14) obj. -342.881 iterations 16
Cbc0038I Pass  18: suminf.    3.57886 (11) obj. -342.881 iterations 8
Cbc0038I Pass  19: suminf.    3.83747 (10) obj. -342.881 iterations 16
Cbc0038I Pass  20: suminf.    0.23630 (4) obj. -342.881 iterations 14
Cbc0038I Pass  21: suminf.    0.79818 (3) obj. -342.881 iterations 12
Cbc0038I Pass  22: suminf.    0.67572 (2) obj. -342.881 iterations 2
Cbc0038I Pass  23: suminf.    0.77038 (2) obj. -342.881 iterations 9
Cbc0038I Pass  24: suminf.    0.66255 (3) obj. -342.881 iterations 2
Cbc0038I Pass  25: suminf.    0.23630 (4) obj. -342.881 iterations 5
Cbc0038I Pass  26: suminf.    0.23630 (4) obj. -342.881 iterations 0
Cbc0038I Pass  27: suminf.    0.79818 (3) obj. -342.881 iterations 12
Cbc0038I Pass  28: suminf.    0.67572 (2) obj. -342.881 iterations 2
Cbc0038I Pass  29: suminf.    0.77038 (2) obj. -342.881 iterations 9
Cbc0038I Pass  30: suminf.    0.66255 (3) obj. -342.881 iterations 2
Cbc0038I Pass  31: suminf.    0.23630 (4) obj. -342.881 iterations 5
Cbc0038I Pass  32: suminf.    0.23630 (4) obj. -342.881 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 59 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -339.425 - took 0.03 seconds
Cbc0012I Integer solution of -339.42518 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 108 rows 59 columns, reduced to 21 rows 15 columns
Cbc0031I 6 added rows had average density of 19.166667
Cbc0013I At root node, 6 cuts changed objective from -373.97785 to -353.34754 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 2.9 elements, 14 column cuts (14 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -339.42518, took 288 iterations and 8 nodes (0.08 seconds)
Cbc0032I Strong branching done 66 times (392 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 100 (-52) columns and 1446 (-1857) elements
Clp1000I sum of infeasibilities 8.66721e-08 - average 9.42088e-10, 60 fixed columns
Coin0506I Presolve 36 (-56) rows, 40 (-60) columns and 148 (-1298) elements
Clp0029I End of values pass after 40 iterations
Clp0000I Optimal - objective value 345.80496
Clp0000I Optimal - objective value 345.80496
Coin0511I After Postsolve, objective 345.80496, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9982839 - largest nonzero change 2.0855547e-05 ( 0.0012247315%) - largest zero change 2.9811023e-05
Clp0000I Optimal - objective value 408.88142
Clp0000I Optimal - objective value 408.88142
Clp0000I Optimal - objective value 408.88142
Coin0511I After Postsolve, objective 408.88142, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 408.8814181 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 100 columns (100 integer (100 of which binary)) and 1448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 8.72487
Cbc0038I Pass   1: suminf.    2.04609 (29) obj. -233.562 iterations 27
Cbc0038I Pass   2: suminf.    2.04609 (29) obj. -233.562 iterations 1
Cbc0038I Pass   3: suminf.    0.88563 (17) obj. -216.386 iterations 12
Cbc0038I Solution found of -198.343
Cbc0038I Rounding solution of -225.737 is better than previous of -198.343

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 100 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -225.737 to -339.425 (0.03 seconds)
Cbc0038I Round again with cutoff of -345.604
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.82346 (37) obj. -345.604 iterations 12
Cbc0038I Pass   5: suminf.    3.42575 (36) obj. -345.604 iterations 2
Cbc0038I Pass   6: suminf.    3.41524 (38) obj. -345.604 iterations 2
Cbc0038I Pass   7: suminf.    1.76960 (19) obj. -345.604 iterations 18
Cbc0038I Pass   8: suminf.    1.11400 (18) obj. -368.245 iterations 4
Cbc0038I Pass   9: suminf.    0.40264 (8) obj. -357.096 iterations 10
Cbc0038I Pass  10: suminf.    0.11645 (1) obj. -345.604 iterations 8
Cbc0038I Pass  11: suminf.    0.05405 (1) obj. -350.444 iterations 1
Cbc0038I Pass  12: suminf.    1.62450 (13) obj. -345.604 iterations 17
Cbc0038I Pass  13: suminf.    1.49040 (12) obj. -345.604 iterations 5
Cbc0038I Pass  14: suminf.    1.27652 (7) obj. -345.604 iterations 23
Cbc0038I Pass  15: suminf.    1.27652 (7) obj. -345.604 iterations 0
Cbc0038I Pass  16: suminf.    1.38955 (7) obj. -345.604 iterations 12
Cbc0038I Pass  17: suminf.    1.13345 (5) obj. -345.604 iterations 6
Cbc0038I Pass  18: suminf.    0.85144 (5) obj. -345.604 iterations 1
Cbc0038I Pass  19: suminf.    5.17945 (24) obj. -345.604 iterations 34
Cbc0038I Pass  20: suminf.    2.97088 (21) obj. -345.604 iterations 16
Cbc0038I Pass  21: suminf.    0.83725 (2) obj. -345.604 iterations 25
Cbc0038I Pass  22: suminf.    0.83725 (2) obj. -345.604 iterations 0
Cbc0038I Pass  23: suminf.    0.91544 (2) obj. -345.604 iterations 4
Cbc0038I Pass  24: suminf.    1.87109 (9) obj. -345.604 iterations 17
Cbc0038I Pass  25: suminf.    1.14877 (6) obj. -346.475 iterations 8
Cbc0038I Pass  26: suminf.    0.88407 (4) obj. -345.604 iterations 10
Cbc0038I Pass  27: suminf.    0.48853 (2) obj. -345.604 iterations 7
Cbc0038I Pass  28: suminf.    0.07143 (1) obj. -355.391 iterations 4
Cbc0038I Pass  29: suminf.    0.22369 (1) obj. -345.604 iterations 2
Cbc0038I Pass  30: suminf.    1.46261 (9) obj. -345.604 iterations 16
Cbc0038I Pass  31: suminf.    1.19251 (10) obj. -345.604 iterations 8
Cbc0038I Pass  32: suminf.    1.68224 (14) obj. -345.604 iterations 13
Cbc0038I Pass  33: suminf.    1.40325 (12) obj. -345.604 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 100 columns, reduced to 35 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -339.425 - took 0.04 seconds
Cbc0012I Integer solution of -339.42518 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 92 rows 100 columns, reduced to 6 rows 6 columns
Cbc0031I 30 added rows had average density of 7.5333333
Cbc0013I At root node, 30 cuts changed objective from -401.21169 to -353.62933 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 452 row cuts average 2.5 elements, 14 column cuts (14 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 45 row cuts average 37.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 73 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0010I After 3 nodes, 1 on tree, -339.42518 best solution, best possible -353.62933 (0.55 seconds)
Cbc0001I Search completed - best objective -339.42518, took 466 iterations and 4 nodes (0.67 seconds)
Cbc0032I Strong branching done 62 times (344 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 59 (-19) columns and 328 (-125) elements
Clp1000I sum of infeasibilities 0.000200974 - average 1.86087e-06, 36 fixed columns
Coin0506I Presolve 21 (-87) rows, 15 (-44) columns and 66 (-262) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 373.97785
Clp0000I Optimal - objective value 373.97785
Coin0511I After Postsolve, objective 373.97785, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.34540717 - largest nonzero change 0 ( 0%) - largest zero change 2.8820022e-05
Clp0000I Optimal - objective value 373.97785
Clp0000I Optimal - objective value 373.97785
Clp0000I Optimal - objective value 373.97785
Coin0511I After Postsolve, objective 373.97785, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 373.9778472 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 108 rows, 59 columns (58 integer (58 of which binary)) and 328 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.510%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.67823
Cbc0038I Pass   1: suminf.    0.28571 (1) obj. -320.413 iterations 27
Cbc0038I Pass   2: suminf.    0.28571 (1) obj. -320.413 iterations 0
Cbc0038I Solution found of -274.5
Cbc0038I Relaxing continuous gives -274.5
Cbc0038I Rounding solution of -278.471 is better than previous of -274.5

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 59 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -278.471 to -339.425 (0.02 seconds)
Cbc0038I Round again with cutoff of -342.881
Cbc0038I Pass   3: suminf.    0.62893 (2) obj. -342.881 iterations 2
Cbc0038I Pass   4: suminf.    0.40292 (2) obj. -342.881 iterations 7
Cbc0038I Pass   5: suminf.    1.04960 (6) obj. -342.881 iterations 7
Cbc0038I Pass   6: suminf.    0.46197 (4) obj. -342.881 iterations 8
Cbc0038I Pass   7: suminf.    1.00276 (3) obj. -342.881 iterations 16
Cbc0038I Pass   8: suminf.    0.72453 (4) obj. -342.881 iterations 5
Cbc0038I Pass   9: suminf.    0.70135 (3) obj. -342.881 iterations 5
Cbc0038I Pass  10: suminf.    0.25555 (2) obj. -342.881 iterations 8
Cbc0038I Pass  11: suminf.    0.05405 (1) obj. -342.881 iterations 2
Cbc0038I Pass  12: suminf.    0.15155 (1) obj. -342.881 iterations 1
Cbc0038I Pass  13: suminf.    0.72092 (3) obj. -342.881 iterations 8
Cbc0038I Pass  14: suminf.    0.65010 (7) obj. -342.881 iterations 18
Cbc0038I Pass  15: suminf.    0.60490 (3) obj. -342.881 iterations 8
Cbc0038I Pass  16: suminf.    0.63035 (4) obj. -342.881 iterations 6
Cbc0038I Pass  17: suminf.    4.03898 (14) obj. -342.881 iterations 16
Cbc0038I Pass  18: suminf.    3.57886 (11) obj. -342.881 iterations 8
Cbc0038I Pass  19: suminf.    3.83747 (10) obj. -342.881 iterations 16
Cbc0038I Pass  20: suminf.    0.23630 (4) obj. -342.881 iterations 14
Cbc0038I Pass  21: suminf.    0.79818 (3) obj. -342.881 iterations 12
Cbc0038I Pass  22: suminf.    0.67572 (2) obj. -342.881 iterations 2
Cbc0038I Pass  23: suminf.    0.77038 (2) obj. -342.881 iterations 9
Cbc0038I Pass  24: suminf.    0.66255 (3) obj. -342.881 iterations 2
Cbc0038I Pass  25: suminf.    0.23630 (4) obj. -342.881 iterations 5
Cbc0038I Pass  26: suminf.    0.23630 (4) obj. -342.881 iterations 0
Cbc0038I Pass  27: suminf.    0.79818 (3) obj. -342.881 iterations 12
Cbc0038I Pass  28: suminf.    0.67572 (2) obj. -342.881 iterations 2
Cbc0038I Pass  29: suminf.    0.77038 (2) obj. -342.881 iterations 9
Cbc0038I Pass  30: suminf.    0.66255 (3) obj. -342.881 iterations 2
Cbc0038I Pass  31: suminf.    0.23630 (4) obj. -342.881 iterations 5
Cbc0038I Pass  32: suminf.    0.23630 (4) obj. -342.881 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 59 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -339.425 - took 0.03 seconds
Cbc0012I Integer solution of -339.42518 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 108 rows 59 columns, reduced to 21 rows 15 columns
Cbc0031I 6 added rows had average density of 19.166667
Cbc0013I At root node, 6 cuts changed objective from -373.97785 to -353.34754 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 2.9 elements, 14 column cuts (14 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -339.42518, took 288 iterations and 8 nodes (0.08 seconds)
Cbc0032I Strong branching done 66 times (392 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 100 (-53) columns and 1446 (-1858) elements
Clp1000I sum of infeasibilities 8.66721e-08 - average 9.42088e-10, 60 fixed columns
Coin0506I Presolve 36 (-56) rows, 40 (-60) columns and 148 (-1298) elements
Clp0029I End of values pass after 40 iterations
Clp0000I Optimal - objective value 345.80496
Clp0000I Optimal - objective value 345.80496
Coin0511I After Postsolve, objective 345.80496, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9982839 - largest nonzero change 2.0855547e-05 ( 0.0012247315%) - largest zero change 2.9811023e-05
Clp0000I Optimal - objective value 408.88142
Clp0000I Optimal - objective value 408.88142
Clp0000I Optimal - objective value 408.88142
Coin0511I After Postsolve, objective 408.88142, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 408.8814181 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 100 columns (100 integer (100 of which binary)) and 1448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 8.72487
Cbc0038I Pass   1: suminf.    2.04609 (29) obj. -233.562 iterations 27
Cbc0038I Pass   2: suminf.    2.04609 (29) obj. -233.562 iterations 1
Cbc0038I Pass   3: suminf.    0.88563 (17) obj. -216.386 iterations 12
Cbc0038I Solution found of -198.343
Cbc0038I Rounding solution of -225.737 is better than previous of -198.343

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 100 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -225.737 to -339.425 (0.03 seconds)
Cbc0038I Round again with cutoff of -345.604
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.82346 (37) obj. -345.604 iterations 12
Cbc0038I Pass   5: suminf.    3.42575 (36) obj. -345.604 iterations 2
Cbc0038I Pass   6: suminf.    3.41524 (38) obj. -345.604 iterations 2
Cbc0038I Pass   7: suminf.    1.76960 (19) obj. -345.604 iterations 18
Cbc0038I Pass   8: suminf.    1.11400 (18) obj. -368.245 iterations 4
Cbc0038I Pass   9: suminf.    0.40264 (8) obj. -357.096 iterations 10
Cbc0038I Pass  10: suminf.    0.11645 (1) obj. -345.604 iterations 8
Cbc0038I Pass  11: suminf.    0.05405 (1) obj. -350.444 iterations 1
Cbc0038I Pass  12: suminf.    1.62450 (13) obj. -345.604 iterations 17
Cbc0038I Pass  13: suminf.    1.49040 (12) obj. -345.604 iterations 5
Cbc0038I Pass  14: suminf.    1.27652 (7) obj. -345.604 iterations 23
Cbc0038I Pass  15: suminf.    1.27652 (7) obj. -345.604 iterations 0
Cbc0038I Pass  16: suminf.    1.38955 (7) obj. -345.604 iterations 12
Cbc0038I Pass  17: suminf.    1.13345 (5) obj. -345.604 iterations 6
Cbc0038I Pass  18: suminf.    0.85144 (5) obj. -345.604 iterations 1
Cbc0038I Pass  19: suminf.    5.17945 (24) obj. -345.604 iterations 34
Cbc0038I Pass  20: suminf.    2.97088 (21) obj. -345.604 iterations 16
Cbc0038I Pass  21: suminf.    0.83725 (2) obj. -345.604 iterations 25
Cbc0038I Pass  22: suminf.    0.83725 (2) obj. -345.604 iterations 0
Cbc0038I Pass  23: suminf.    0.91544 (2) obj. -345.604 iterations 4
Cbc0038I Pass  24: suminf.    1.87109 (9) obj. -345.604 iterations 17
Cbc0038I Pass  25: suminf.    1.14877 (6) obj. -346.475 iterations 8
Cbc0038I Pass  26: suminf.    0.88407 (4) obj. -345.604 iterations 10
Cbc0038I Pass  27: suminf.    0.48853 (2) obj. -345.604 iterations 7
Cbc0038I Pass  28: suminf.    0.07143 (1) obj. -355.391 iterations 4
Cbc0038I Pass  29: suminf.    0.22369 (1) obj. -345.604 iterations 2
Cbc0038I Pass  30: suminf.    1.46261 (9) obj. -345.604 iterations 16
Cbc0038I Pass  31: suminf.    1.19251 (10) obj. -345.604 iterations 8
Cbc0038I Pass  32: suminf.    1.68224 (14) obj. -345.604 iterations 13
Cbc0038I Pass  33: suminf.    1.40325 (12) obj. -345.604 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 100 columns, reduced to 35 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -339.425 - took 0.03 seconds
Cbc0012I Integer solution of -339.42518 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 92 rows 100 columns, reduced to 6 rows 6 columns
Cbc0031I 30 added rows had average density of 7.5333333
Cbc0013I At root node, 30 cuts changed objective from -401.21169 to -353.62933 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 452 row cuts average 2.5 elements, 14 column cuts (14 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 45 row cuts average 37.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 73 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0010I After 3 nodes, 1 on tree, -339.42518 best solution, best possible -353.62933 (0.56 seconds)
Cbc0001I Search completed - best objective -339.42518, took 466 iterations and 4 nodes (0.68 seconds)
Cbc0032I Strong branching done 62 times (344 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.69

