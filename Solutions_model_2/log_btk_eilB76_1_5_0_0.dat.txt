Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-43) rows, 60 (-18) columns and 336 (-117) elements
Clp1000I sum of infeasibilities 3.13129e-05 - average 2.7958e-07, 8 fixed columns
Coin0506I Presolve 96 (-16) rows, 51 (-9) columns and 286 (-50) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 2.3991927 - largest nonzero change 0 ( 0%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 103.85707
Clp0000I Optimal - objective value 103.85707
Coin0511I After Postsolve, objective 103.85707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.85707
Clp0000I Optimal - objective value 103.85707
Clp0000I Optimal - objective value 103.85707
Coin0511I After Postsolve, objective 103.85707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.8570655 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 60 columns (59 integer (59 of which binary)) and 388 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 5.55294
Cbc0038I Solution found of -18.3373
Cbc0038I Relaxing continuous gives -19.1399
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 53 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -19.1399 to -73.8188 (0.03 seconds)
Cbc0038I Round again with cutoff of -76.7537
Cbc0038I Pass   1: suminf.    2.04139 (8) obj. -76.7537 iterations 37
Cbc0038I Pass   2: suminf.    1.02197 (7) obj. -76.7537 iterations 3
Cbc0038I Pass   3: suminf.    0.71616 (3) obj. -76.7537 iterations 4
Cbc0038I Pass   4: suminf.    0.56259 (3) obj. -76.7537 iterations 4
Cbc0038I Pass   5: suminf.    0.27331 (2) obj. -76.7537 iterations 1
Cbc0038I Pass   6: suminf.    0.71667 (3) obj. -76.7537 iterations 6
Cbc0038I Pass   7: suminf.    3.54379 (12) obj. -76.7537 iterations 14
Cbc0038I Pass   8: suminf.    0.81388 (4) obj. -76.7537 iterations 18
Cbc0038I Pass   9: suminf.    0.80300 (5) obj. -76.7537 iterations 4
Cbc0038I Pass  10: suminf.    1.13608 (3) obj. -76.7537 iterations 7
Cbc0038I Pass  11: suminf.    0.99577 (3) obj. -76.7537 iterations 2
Cbc0038I Pass  12: suminf.    0.99577 (3) obj. -76.7537 iterations 0
Cbc0038I Pass  13: suminf.    1.12829 (3) obj. -76.7537 iterations 3
Cbc0038I Pass  14: suminf.    1.40893 (4) obj. -76.7537 iterations 13
Cbc0038I Pass  15: suminf.    0.92856 (4) obj. -76.7537 iterations 8
Cbc0038I Pass  16: suminf.    0.33205 (2) obj. -76.7537 iterations 8
Cbc0038I Pass  17: suminf.    1.29761 (3) obj. -76.7537 iterations 3
Cbc0038I Pass  18: suminf.    0.44670 (1) obj. -76.7537 iterations 2
Cbc0038I Pass  19: suminf.    1.03683 (6) obj. -76.7537 iterations 15
Cbc0038I Pass  20: suminf.    0.78082 (4) obj. -76.7537 iterations 5
Cbc0038I Pass  21: suminf.    0.72034 (4) obj. -76.7537 iterations 11
Cbc0038I Pass  22: suminf.    0.71828 (5) obj. -76.7537 iterations 5
Cbc0038I Pass  23: suminf.    1.26714 (3) obj. -76.7537 iterations 9
Cbc0038I Pass  24: suminf.    0.21005 (1) obj. -76.7537 iterations 3
Cbc0038I Pass  25: suminf.    0.36165 (2) obj. -76.7537 iterations 3
Cbc0038I Pass  26: suminf.    4.40941 (13) obj. -76.7537 iterations 18
Cbc0038I Pass  27: suminf.    1.57714 (6) obj. -76.7537 iterations 19
Cbc0038I Pass  28: suminf.    1.51938 (6) obj. -76.7537 iterations 6
Cbc0038I Pass  29: suminf.    0.52557 (4) obj. -76.7537 iterations 10
Cbc0038I Pass  30: suminf.    0.47974 (4) obj. -76.7537 iterations 1
Cbc0038I Rounding solution of -76.1529 is better than previous of -73.8188

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 75 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -82.0364
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.08892 (8) obj. -82.0364 iterations 0
Cbc0038I Pass  31: suminf.    1.12542 (8) obj. -82.0364 iterations 8
Cbc0038I Pass  32: suminf.    1.48425 (5) obj. -82.0364 iterations 9
Cbc0038I Pass  33: suminf.    1.27387 (8) obj. -82.0364 iterations 7
Cbc0038I Pass  34: suminf.    1.84017 (5) obj. -82.0364 iterations 10
Cbc0038I Pass  35: suminf.    1.73664 (6) obj. -82.0364 iterations 1
Cbc0038I Pass  36: suminf.    1.73664 (6) obj. -82.0364 iterations 0
Cbc0038I Pass  37: suminf.    0.53461 (3) obj. -82.0364 iterations 8
Cbc0038I Pass  38: suminf.    0.53461 (3) obj. -82.0364 iterations 0
Cbc0038I Pass  39: suminf.    0.89809 (6) obj. -82.0364 iterations 7
Cbc0038I Pass  40: suminf.    0.89084 (4) obj. -82.0364 iterations 4
Cbc0038I Pass  41: suminf.    0.50841 (3) obj. -82.0364 iterations 4
Cbc0038I Pass  42: suminf.    0.45485 (4) obj. -82.0364 iterations 3
Cbc0038I Pass  43: suminf.    0.89084 (4) obj. -82.0364 iterations 6
Cbc0038I Pass  44: suminf.    1.81320 (6) obj. -82.0364 iterations 18
Cbc0038I Pass  45: suminf.    1.48462 (6) obj. -82.0364 iterations 7
Cbc0038I Pass  46: suminf.    0.89084 (4) obj. -82.0364 iterations 8
Cbc0038I Pass  47: suminf.    0.89084 (4) obj. -82.0364 iterations 2
Cbc0038I Pass  48: suminf.    0.50841 (3) obj. -82.0364 iterations 4
Cbc0038I Pass  49: suminf.    0.45485 (4) obj. -82.0364 iterations 3
Cbc0038I Pass  50: suminf.    0.89084 (4) obj. -82.0364 iterations 6
Cbc0038I Pass  51: suminf.    1.18930 (6) obj. -82.0364 iterations 6
Cbc0038I Pass  52: suminf.    1.14416 (7) obj. -82.0364 iterations 4
Cbc0038I Pass  53: suminf.    2.83600 (7) obj. -82.0364 iterations 12
Cbc0038I Pass  54: suminf.    2.17013 (6) obj. -82.0364 iterations 4
Cbc0038I Pass  55: suminf.    0.80788 (4) obj. -82.0364 iterations 8
Cbc0038I Pass  56: suminf.    0.65473 (3) obj. -82.0364 iterations 1
Cbc0038I Pass  57: suminf.    1.23894 (4) obj. -82.0364 iterations 3
Cbc0038I Pass  58: suminf.    1.13295 (5) obj. -82.0364 iterations 3
Cbc0038I Pass  59: suminf.    1.40541 (4) obj. -82.0364 iterations 7
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 61 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -88.3756
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  59: suminf.    2.38604 (11) obj. -88.3756 iterations 3
Cbc0038I Pass  60: suminf.    1.73274 (11) obj. -88.3756 iterations 8
Cbc0038I Pass  61: suminf.    1.99233 (6) obj. -88.3756 iterations 22
Cbc0038I Pass  62: suminf.    1.40609 (6) obj. -88.3756 iterations 7
Cbc0038I Pass  63: suminf.    1.34150 (5) obj. -88.3756 iterations 3
Cbc0038I Pass  64: suminf.    2.47549 (6) obj. -88.3756 iterations 5
Cbc0038I Pass  65: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  66: suminf.    1.26651 (7) obj. -88.3756 iterations 0
Cbc0038I Pass  67: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  68: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I Pass  69: suminf.    1.38549 (6) obj. -88.3756 iterations 2
Cbc0038I Pass  70: suminf.    1.28430 (6) obj. -88.3756 iterations 6
Cbc0038I Pass  71: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  72: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  73: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I Pass  74: suminf.    1.38549 (6) obj. -88.3756 iterations 2
Cbc0038I Pass  75: suminf.    1.28430 (6) obj. -88.3756 iterations 6
Cbc0038I Pass  76: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  77: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  78: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I Pass  79: suminf.    1.38549 (6) obj. -88.3756 iterations 2
Cbc0038I Pass  80: suminf.    1.28430 (6) obj. -88.3756 iterations 6
Cbc0038I Pass  81: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  82: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  83: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I Pass  84: suminf.    1.38549 (6) obj. -88.3756 iterations 2
Cbc0038I Pass  85: suminf.    1.28430 (6) obj. -88.3756 iterations 6
Cbc0038I Pass  86: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  87: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  88: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 56 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -76.1529 - took 0.08 seconds
Cbc0012I Integer solution of -76.15292 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 110 rows 60 columns, reduced to 54 rows 29 columns
Cbc0031I 14 added rows had average density of 41.571429
Cbc0013I At root node, 14 cuts changed objective from -103.167 to -92.689896 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3778 row cuts average 5.3 elements, 3 column cuts (3 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1346 row cuts average 55.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0001I Search completed - best objective -76.15291999999999, took 4616 iterations and 22 nodes (0.53 seconds)
Cbc0032I Strong branching done 272 times (4058 iterations), fathomed 4 nodes and fixed 14 variables
Cbc0035I Maximum depth 9, 55 variables fixed on reduced cost
Total time (CPU seconds):       0.51   (Wallclock seconds):       0.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 110 (-42) columns and 1780 (-1523) elements
Clp1000I sum of infeasibilities 0 - average 0, 96 fixed columns
Coin0506I Presolve 14 (-90) rows, 14 (-96) columns and 51 (-1729) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 146.5421
Clp0000I Optimal - objective value 146.5421
Coin0511I After Postsolve, objective 146.5421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9767096 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 226.0442
Clp0000I Optimal - objective value 226.0442
Clp0000I Optimal - objective value 226.0442
Coin0511I After Postsolve, objective 226.0442, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 226.0442044 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 73 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 107 columns (107 integer (107 of which binary)) and 1632 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.807%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 4.49495
Cbc0038I Pass   1: suminf.    0.62639 (15) obj. -73.3612 iterations 33
Cbc0038I Pass   2: suminf.    0.62639 (15) obj. -73.3612 iterations 0
Cbc0038I Pass   3: suminf.    0.11780 (5) obj. -44.0422 iterations 10
Cbc0038I Solution found of -39.16
Cbc0038I Rounding solution of -43.3263 is better than previous of -39.16

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 107 columns, reduced to 49 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -43.3263 to -71.8808 (0.05 seconds)
Cbc0038I Round again with cutoff of -78.7447
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.97565 (41) obj. -78.7447 iterations 21
Cbc0038I Pass   5: suminf.    0.82621 (16) obj. -78.7447 iterations 1
Cbc0038I Pass   6: suminf.    2.20357 (23) obj. -78.7447 iterations 22
Cbc0038I Pass   7: suminf.    0.98055 (19) obj. -88.5042 iterations 4
Cbc0038I Pass   8: suminf.    0.85698 (10) obj. -78.7447 iterations 28
Cbc0038I Pass   9: suminf.    0.98359 (7) obj. -78.7447 iterations 16
Cbc0038I Pass  10: suminf.    0.45468 (5) obj. -80.5513 iterations 7
Cbc0038I Pass  11: suminf.    2.72825 (13) obj. -78.7447 iterations 10
Cbc0038I Pass  12: suminf.    0.98359 (7) obj. -78.7447 iterations 4
Cbc0038I Pass  13: suminf.    1.61143 (12) obj. -78.7447 iterations 16
Cbc0038I Pass  14: suminf.    1.56885 (11) obj. -78.7447 iterations 3
Cbc0038I Pass  15: suminf.    0.82754 (4) obj. -78.7447 iterations 27
Cbc0038I Pass  16: suminf.    0.81728 (4) obj. -78.7447 iterations 11
Cbc0038I Pass  17: suminf.    0.81728 (4) obj. -78.7447 iterations 0
Cbc0038I Pass  18: suminf.    0.95961 (5) obj. -78.7447 iterations 25
Cbc0038I Pass  19: suminf.    0.55547 (5) obj. -78.7447 iterations 12
Cbc0038I Pass  20: suminf.    0.74433 (7) obj. -78.7447 iterations 20
Cbc0038I Pass  21: suminf.    0.34684 (5) obj. -81.3315 iterations 4
Cbc0038I Pass  22: suminf.    1.00335 (3) obj. -78.7447 iterations 14
Cbc0038I Pass  23: suminf.    1.00335 (3) obj. -78.7447 iterations 2
Cbc0038I Pass  24: suminf.    0.34684 (5) obj. -81.3315 iterations 7
Cbc0038I Pass  25: suminf.    2.82802 (20) obj. -78.7447 iterations 22
Cbc0038I Pass  26: suminf.    2.10663 (18) obj. -78.7447 iterations 4
Cbc0038I Pass  27: suminf.    0.61323 (6) obj. -78.7447 iterations 18
Cbc0038I Pass  28: suminf.    0.28858 (6) obj. -81.0172 iterations 4
Cbc0038I Pass  29: suminf.    0.28355 (4) obj. -78.7447 iterations 7
Cbc0038I Pass  30: suminf.    0.23729 (4) obj. -79.0685 iterations 4
Cbc0038I Pass  31: suminf.    1.60324 (13) obj. -78.7447 iterations 11
Cbc0038I Pass  32: suminf.    1.60324 (13) obj. -78.7447 iterations 1
Cbc0038I Pass  33: suminf.    2.35677 (20) obj. -78.7447 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 107 columns, reduced to 58 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -71.8808 to -76.1529 (0.08 seconds)
Cbc0038I Round again with cutoff of -91.0996
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.77721 (41) obj. -91.0996 iterations 0
Cbc0038I Pass  34: suminf.    1.56579 (37) obj. -91.0996 iterations 2
Cbc0038I Pass  35: suminf.    1.28252 (18) obj. -91.0996 iterations 23
Cbc0038I Pass  36: suminf.    1.28369 (19) obj. -91.0996 iterations 7
Cbc0038I Pass  37: suminf.    1.04259 (16) obj. -91.0996 iterations 34
Cbc0038I Pass  38: suminf.    1.04259 (16) obj. -91.0996 iterations 0
Cbc0038I Pass  39: suminf.    1.00535 (6) obj. -91.0996 iterations 15
Cbc0038I Pass  40: suminf.    0.80536 (5) obj. -91.0996 iterations 2
Cbc0038I Pass  41: suminf.    0.60946 (4) obj. -91.0996 iterations 9
Cbc0038I Pass  42: suminf.    0.34504 (6) obj. -91.0996 iterations 13
Cbc0038I Pass  43: suminf.    0.59966 (9) obj. -91.0996 iterations 16
Cbc0038I Pass  44: suminf.    0.59966 (9) obj. -91.0996 iterations 0
Cbc0038I Pass  45: suminf.    1.84723 (5) obj. -91.0996 iterations 17
Cbc0038I Pass  46: suminf.    1.04784 (4) obj. -91.0996 iterations 2
Cbc0038I Pass  47: suminf.    0.72999 (5) obj. -91.0996 iterations 7
Cbc0038I Pass  48: suminf.    0.28734 (4) obj. -91.0996 iterations 12
Cbc0038I Pass  49: suminf.    1.00134 (4) obj. -91.0996 iterations 11
Cbc0038I Pass  50: suminf.    0.79136 (5) obj. -91.0996 iterations 2
Cbc0038I Pass  51: suminf.    1.21714 (14) obj. -91.0996 iterations 14
Cbc0038I Pass  52: suminf.    0.90479 (13) obj. -91.0996 iterations 1
Cbc0038I Pass  53: suminf.    1.78451 (9) obj. -91.0996 iterations 21
Cbc0038I Pass  54: suminf.    1.00134 (4) obj. -91.0996 iterations 2
Cbc0038I Pass  55: suminf.    0.79308 (16) obj. -93.6621 iterations 18
Cbc0038I Pass  56: suminf.    0.79308 (16) obj. -93.6621 iterations 0
Cbc0038I Pass  57: suminf.    2.29803 (7) obj. -91.0996 iterations 27
Cbc0038I Pass  58: suminf.    0.53180 (6) obj. -91.0996 iterations 3
Cbc0038I Pass  59: suminf.    0.44528 (10) obj. -91.0996 iterations 5
Cbc0038I Pass  60: suminf.    1.85936 (10) obj. -91.0996 iterations 19
Cbc0038I Pass  61: suminf.    0.71865 (4) obj. -91.0996 iterations 9
Cbc0038I Pass  62: suminf.    0.45939 (5) obj. -91.0996 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 107 columns, reduced to 56 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -76.1529 - took 0.06 seconds
Cbc0012I Integer solution of -76.15292 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 99 rows 107 columns, reduced to 51 rows 49 columns
Cbc0031I 47 added rows had average density of 16.404255
Cbc0013I At root node, 47 cuts changed objective from -140.51909 to -80.344304 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 695 row cuts average 3.9 elements, 13 column cuts (13 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 57.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 124 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 40 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 175 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 347 row cuts average 43.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -76.15292 best solution, best possible -80.344304 (0.32 seconds)
Cbc0001I Search completed - best objective -76.15291999999999, took 1103 iterations and 10 nodes (0.84 seconds)
Cbc0032I Strong branching done 242 times (4889 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 50 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.84

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-43) rows, 60 (-18) columns and 336 (-117) elements
Clp1000I sum of infeasibilities 3.13129e-05 - average 2.7958e-07, 8 fixed columns
Coin0506I Presolve 96 (-16) rows, 51 (-9) columns and 286 (-50) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 2.3991927 - largest nonzero change 0 ( 0%) - largest zero change 2.0786599e-05
Clp0000I Optimal - objective value 103.85707
Clp0000I Optimal - objective value 103.85707
Coin0511I After Postsolve, objective 103.85707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.85707
Clp0000I Optimal - objective value 103.85707
Clp0000I Optimal - objective value 103.85707
Coin0511I After Postsolve, objective 103.85707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.8570655 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 60 columns (59 integer (59 of which binary)) and 388 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 5.55294
Cbc0038I Solution found of -18.3373
Cbc0038I Relaxing continuous gives -19.1399
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 53 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -19.1399 to -73.8188 (0.03 seconds)
Cbc0038I Round again with cutoff of -76.7537
Cbc0038I Pass   1: suminf.    2.04139 (8) obj. -76.7537 iterations 37
Cbc0038I Pass   2: suminf.    1.02197 (7) obj. -76.7537 iterations 3
Cbc0038I Pass   3: suminf.    0.71616 (3) obj. -76.7537 iterations 4
Cbc0038I Pass   4: suminf.    0.56259 (3) obj. -76.7537 iterations 4
Cbc0038I Pass   5: suminf.    0.27331 (2) obj. -76.7537 iterations 1
Cbc0038I Pass   6: suminf.    0.71667 (3) obj. -76.7537 iterations 6
Cbc0038I Pass   7: suminf.    3.54379 (12) obj. -76.7537 iterations 14
Cbc0038I Pass   8: suminf.    0.81388 (4) obj. -76.7537 iterations 18
Cbc0038I Pass   9: suminf.    0.80300 (5) obj. -76.7537 iterations 4
Cbc0038I Pass  10: suminf.    1.13608 (3) obj. -76.7537 iterations 7
Cbc0038I Pass  11: suminf.    0.99577 (3) obj. -76.7537 iterations 2
Cbc0038I Pass  12: suminf.    0.99577 (3) obj. -76.7537 iterations 0
Cbc0038I Pass  13: suminf.    1.12829 (3) obj. -76.7537 iterations 3
Cbc0038I Pass  14: suminf.    1.40893 (4) obj. -76.7537 iterations 13
Cbc0038I Pass  15: suminf.    0.92856 (4) obj. -76.7537 iterations 8
Cbc0038I Pass  16: suminf.    0.33205 (2) obj. -76.7537 iterations 8
Cbc0038I Pass  17: suminf.    1.29761 (3) obj. -76.7537 iterations 3
Cbc0038I Pass  18: suminf.    0.44670 (1) obj. -76.7537 iterations 2
Cbc0038I Pass  19: suminf.    1.03683 (6) obj. -76.7537 iterations 15
Cbc0038I Pass  20: suminf.    0.78082 (4) obj. -76.7537 iterations 5
Cbc0038I Pass  21: suminf.    0.72034 (4) obj. -76.7537 iterations 11
Cbc0038I Pass  22: suminf.    0.71828 (5) obj. -76.7537 iterations 5
Cbc0038I Pass  23: suminf.    1.26714 (3) obj. -76.7537 iterations 9
Cbc0038I Pass  24: suminf.    0.21005 (1) obj. -76.7537 iterations 3
Cbc0038I Pass  25: suminf.    0.36165 (2) obj. -76.7537 iterations 3
Cbc0038I Pass  26: suminf.    4.40941 (13) obj. -76.7537 iterations 18
Cbc0038I Pass  27: suminf.    1.57714 (6) obj. -76.7537 iterations 19
Cbc0038I Pass  28: suminf.    1.51938 (6) obj. -76.7537 iterations 6
Cbc0038I Pass  29: suminf.    0.52557 (4) obj. -76.7537 iterations 10
Cbc0038I Pass  30: suminf.    0.47974 (4) obj. -76.7537 iterations 1
Cbc0038I Rounding solution of -76.1529 is better than previous of -73.8188

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 75 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -82.0364
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.08892 (8) obj. -82.0364 iterations 0
Cbc0038I Pass  31: suminf.    1.12542 (8) obj. -82.0364 iterations 8
Cbc0038I Pass  32: suminf.    1.48425 (5) obj. -82.0364 iterations 9
Cbc0038I Pass  33: suminf.    1.27387 (8) obj. -82.0364 iterations 7
Cbc0038I Pass  34: suminf.    1.84017 (5) obj. -82.0364 iterations 10
Cbc0038I Pass  35: suminf.    1.73664 (6) obj. -82.0364 iterations 1
Cbc0038I Pass  36: suminf.    1.73664 (6) obj. -82.0364 iterations 0
Cbc0038I Pass  37: suminf.    0.53461 (3) obj. -82.0364 iterations 8
Cbc0038I Pass  38: suminf.    0.53461 (3) obj. -82.0364 iterations 0
Cbc0038I Pass  39: suminf.    0.89809 (6) obj. -82.0364 iterations 7
Cbc0038I Pass  40: suminf.    0.89084 (4) obj. -82.0364 iterations 4
Cbc0038I Pass  41: suminf.    0.50841 (3) obj. -82.0364 iterations 4
Cbc0038I Pass  42: suminf.    0.45485 (4) obj. -82.0364 iterations 3
Cbc0038I Pass  43: suminf.    0.89084 (4) obj. -82.0364 iterations 6
Cbc0038I Pass  44: suminf.    1.81320 (6) obj. -82.0364 iterations 18
Cbc0038I Pass  45: suminf.    1.48462 (6) obj. -82.0364 iterations 7
Cbc0038I Pass  46: suminf.    0.89084 (4) obj. -82.0364 iterations 8
Cbc0038I Pass  47: suminf.    0.89084 (4) obj. -82.0364 iterations 2
Cbc0038I Pass  48: suminf.    0.50841 (3) obj. -82.0364 iterations 4
Cbc0038I Pass  49: suminf.    0.45485 (4) obj. -82.0364 iterations 3
Cbc0038I Pass  50: suminf.    0.89084 (4) obj. -82.0364 iterations 6
Cbc0038I Pass  51: suminf.    1.18930 (6) obj. -82.0364 iterations 6
Cbc0038I Pass  52: suminf.    1.14416 (7) obj. -82.0364 iterations 4
Cbc0038I Pass  53: suminf.    2.83600 (7) obj. -82.0364 iterations 12
Cbc0038I Pass  54: suminf.    2.17013 (6) obj. -82.0364 iterations 4
Cbc0038I Pass  55: suminf.    0.80788 (4) obj. -82.0364 iterations 8
Cbc0038I Pass  56: suminf.    0.65473 (3) obj. -82.0364 iterations 1
Cbc0038I Pass  57: suminf.    1.23894 (4) obj. -82.0364 iterations 3
Cbc0038I Pass  58: suminf.    1.13295 (5) obj. -82.0364 iterations 3
Cbc0038I Pass  59: suminf.    1.40541 (4) obj. -82.0364 iterations 7
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 61 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -88.3756
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  59: suminf.    2.38604 (11) obj. -88.3756 iterations 3
Cbc0038I Pass  60: suminf.    1.73274 (11) obj. -88.3756 iterations 8
Cbc0038I Pass  61: suminf.    1.99233 (6) obj. -88.3756 iterations 22
Cbc0038I Pass  62: suminf.    1.40609 (6) obj. -88.3756 iterations 7
Cbc0038I Pass  63: suminf.    1.34150 (5) obj. -88.3756 iterations 3
Cbc0038I Pass  64: suminf.    2.47549 (6) obj. -88.3756 iterations 5
Cbc0038I Pass  65: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  66: suminf.    1.26651 (7) obj. -88.3756 iterations 0
Cbc0038I Pass  67: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  68: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I Pass  69: suminf.    1.38549 (6) obj. -88.3756 iterations 2
Cbc0038I Pass  70: suminf.    1.28430 (6) obj. -88.3756 iterations 6
Cbc0038I Pass  71: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  72: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  73: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I Pass  74: suminf.    1.38549 (6) obj. -88.3756 iterations 2
Cbc0038I Pass  75: suminf.    1.28430 (6) obj. -88.3756 iterations 6
Cbc0038I Pass  76: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  77: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  78: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I Pass  79: suminf.    1.38549 (6) obj. -88.3756 iterations 2
Cbc0038I Pass  80: suminf.    1.28430 (6) obj. -88.3756 iterations 6
Cbc0038I Pass  81: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  82: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  83: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I Pass  84: suminf.    1.38549 (6) obj. -88.3756 iterations 2
Cbc0038I Pass  85: suminf.    1.28430 (6) obj. -88.3756 iterations 6
Cbc0038I Pass  86: suminf.    1.26651 (7) obj. -88.3756 iterations 3
Cbc0038I Pass  87: suminf.    1.64056 (5) obj. -88.3756 iterations 8
Cbc0038I Pass  88: suminf.    1.40958 (5) obj. -88.3756 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 60 columns, reduced to 56 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -76.1529 - took 0.09 seconds
Cbc0012I Integer solution of -76.15292 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 110 rows 60 columns, reduced to 54 rows 29 columns
Cbc0031I 14 added rows had average density of 41.571429
Cbc0013I At root node, 14 cuts changed objective from -103.167 to -92.689896 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3778 row cuts average 5.3 elements, 3 column cuts (3 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1346 row cuts average 55.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0001I Search completed - best objective -76.15291999999999, took 4616 iterations and 22 nodes (0.55 seconds)
Cbc0032I Strong branching done 272 times (4058 iterations), fathomed 4 nodes and fixed 14 variables
Cbc0035I Maximum depth 9, 55 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 103 (-50) columns and 1481 (-1823) elements
Clp1000I sum of infeasibilities 3.42705e-08 - average 3.53304e-10, 21 fixed columns
Coin0506I Presolve 75 (-22) rows, 79 (-24) columns and 871 (-610) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 7.0099408 - largest nonzero change 2.4599951e-05 ( 0.0012247315%) - largest zero change 2.6218914e-05
Clp0000I Optimal - objective value 117.85601
Clp0000I Optimal - objective value 117.85601
Coin0511I After Postsolve, objective 117.85601, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.85601
Clp0000I Optimal - objective value 117.85601
Clp0000I Optimal - objective value 117.85601
Coin0511I After Postsolve, objective 117.85601, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.856007 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 105 columns (105 integer (105 of which binary)) and 1538 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.613%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.00851
Cbc0038I Pass   1: suminf.    1.68912 (27) obj. -103.03 iterations 10
Cbc0038I Pass   2: suminf.    1.21400 (25) obj. -98.174 iterations 3
Cbc0038I Pass   3: suminf.    0.26831 (10) obj. -67.6472 iterations 15
Cbc0038I Solution found of -53.0242
Cbc0038I Rounding solution of -64.651 is better than previous of -53.0242

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 105 columns, reduced to 26 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -68.8656
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.68912 (27) obj. -103.03 iterations 0
Cbc0038I Pass   5: suminf.    1.21400 (25) obj. -98.174 iterations 5
Cbc0038I Pass   6: suminf.    0.57097 (3) obj. -68.8656 iterations 35
Cbc0038I Pass   7: suminf.    0.26246 (3) obj. -68.8656 iterations 3
Cbc0038I Pass   8: suminf.    0.31758 (3) obj. -68.8656 iterations 3
Cbc0038I Pass   9: suminf.    0.76104 (6) obj. -68.8656 iterations 9
Cbc0038I Pass  10: suminf.    0.38920 (6) obj. -68.8656 iterations 7
Cbc0038I Pass  11: suminf.    0.78862 (6) obj. -68.8656 iterations 11
Cbc0038I Pass  12: suminf.    0.65152 (4) obj. -68.8656 iterations 4
Cbc0038I Pass  13: suminf.    1.06246 (6) obj. -68.8656 iterations 5
Cbc0038I Pass  14: suminf.    0.91622 (4) obj. -68.8656 iterations 5
Cbc0038I Pass  15: suminf.    0.78862 (6) obj. -68.8656 iterations 6
Cbc0038I Pass  16: suminf.    1.00701 (12) obj. -68.8656 iterations 24
Cbc0038I Pass  17: suminf.    0.57734 (9) obj. -69.3089 iterations 6
Cbc0038I Pass  18: suminf.    0.48129 (10) obj. -68.8656 iterations 11
Cbc0038I Pass  19: suminf.    0.48129 (10) obj. -68.8656 iterations 0
Cbc0038I Pass  20: suminf.    0.67650 (5) obj. -68.8656 iterations 10
Cbc0038I Pass  21: suminf.    0.42474 (6) obj. -68.8656 iterations 5
Cbc0038I Pass  22: suminf.    0.54909 (6) obj. -68.8656 iterations 4
Cbc0038I Pass  23: suminf.    1.19286 (17) obj. -68.8656 iterations 19
Cbc0038I Pass  24: suminf.    1.02571 (10) obj. -68.8656 iterations 4
Cbc0038I Pass  25: suminf.    0.78311 (12) obj. -68.8656 iterations 10
Cbc0038I Pass  26: suminf.    0.66255 (6) obj. -68.9611 iterations 5
Cbc0038I Pass  27: suminf.    0.69441 (6) obj. -68.8656 iterations 5
Cbc0038I Pass  28: suminf.    1.06203 (9) obj. -68.8656 iterations 14
Cbc0038I Pass  29: suminf.    0.70015 (8) obj. -70.2348 iterations 6
Cbc0038I Pass  30: suminf.    1.02775 (6) obj. -68.8656 iterations 9
Cbc0038I Pass  31: suminf.    0.66255 (6) obj. -69.9611 iterations 2
Cbc0038I Pass  32: suminf.    1.31043 (17) obj. -68.8656 iterations 16
Cbc0038I Pass  33: suminf.    0.50963 (9) obj. -71.307 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 105 columns, reduced to 55 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -53.0242 to -76.1529 (0.07 seconds)
Cbc0038I Round again with cutoff of -82.2815
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.68912 (27) obj. -103.03 iterations 0
Cbc0038I Pass  34: suminf.    1.21400 (25) obj. -98.174 iterations 5
Cbc0038I Pass  35: suminf.    0.85504 (12) obj. -82.2815 iterations 18
Cbc0038I Pass  36: suminf.    0.85504 (12) obj. -82.2815 iterations 0
Cbc0038I Pass  37: suminf.    1.22677 (13) obj. -82.2815 iterations 17
Cbc0038I Pass  38: suminf.    0.66064 (8) obj. -82.2815 iterations 4
Cbc0038I Pass  39: suminf.    1.42656 (13) obj. -82.2815 iterations 6
Cbc0038I Pass  40: suminf.    0.91437 (7) obj. -82.2815 iterations 3
Cbc0038I Pass  41: suminf.    0.56949 (8) obj. -82.2815 iterations 2
Cbc0038I Pass  42: suminf.    1.41646 (12) obj. -82.2815 iterations 7
Cbc0038I Pass  43: suminf.    1.41646 (12) obj. -82.2815 iterations 0
Cbc0038I Pass  44: suminf.    3.68866 (24) obj. -82.2815 iterations 9
Cbc0038I Pass  45: suminf.    0.65023 (6) obj. -82.4494 iterations 8
Cbc0038I Pass  46: suminf.    0.63213 (7) obj. -82.2815 iterations 2
Cbc0038I Pass  47: suminf.    0.70621 (6) obj. -82.2815 iterations 2
Cbc0038I Pass  48: suminf.    1.87440 (24) obj. -82.2815 iterations 21
Cbc0038I Pass  49: suminf.    1.49747 (18) obj. -82.2815 iterations 7
Cbc0038I Pass  50: suminf.    1.52307 (19) obj. -82.2815 iterations 18
Cbc0038I Pass  51: suminf.    1.52307 (19) obj. -82.2815 iterations 0
Cbc0038I Pass  52: suminf.    4.76472 (21) obj. -82.2815 iterations 5
Cbc0038I Pass  53: suminf.    1.09549 (14) obj. -82.9724 iterations 7
Cbc0038I Pass  54: suminf.    0.97409 (15) obj. -82.2815 iterations 4
Cbc0038I Pass  55: suminf.    2.17116 (15) obj. -82.2815 iterations 9
Cbc0038I Pass  56: suminf.    2.10410 (18) obj. -82.2815 iterations 2
Cbc0038I Pass  57: suminf.    1.96984 (18) obj. -82.2815 iterations 2
Cbc0038I Pass  58: suminf.    1.96984 (18) obj. -82.2815 iterations 1
Cbc0038I Pass  59: suminf.    2.07097 (18) obj. -82.2815 iterations 4
Cbc0038I Pass  60: suminf.    2.07097 (18) obj. -82.2815 iterations 1
Cbc0038I Pass  61: suminf.    1.96984 (18) obj. -82.2815 iterations 2
Cbc0038I Pass  62: suminf.    1.64726 (17) obj. -82.2815 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 105 columns, reduced to 47 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -76.1529 - took 0.06 seconds
Cbc0012I Integer solution of -76.15292 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 98 rows 105 columns, reduced to 34 rows 35 columns
Cbc0031I 30 added rows had average density of 10.6
Cbc0013I At root node, 30 cuts changed objective from -106.79537 to -76.774136 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 956 row cuts average 4.4 elements, 12 column cuts (12 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 38 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 38.8 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -76.15292 best solution, best possible -76.632319 (0.38 seconds)
Cbc0001I Search completed - best objective -76.15291999999999, took 411 iterations and 2 nodes (0.38 seconds)
Cbc0032I Strong branching done 26 times (229 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.39

