Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 6.13939e-05 - average 4.61608e-07, 15 fixed columns
Coin0506I Presolve 105 (-28) rows, 61 (-15) columns and 325 (-85) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.25717936 - largest nonzero change 0 ( 0%) - largest zero change 2.855382e-05
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Coin0511I After Postsolve, objective 44.513845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Coin0511I After Postsolve, objective 44.513845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.51384505 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.204%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.99271
Cbc0038I Solution found of -2.58158
Cbc0038I Relaxing continuous gives -12.623
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -12.623 to -13.9154 (0.02 seconds)
Cbc0038I Round again with cutoff of -16.9741
Cbc0038I Pass   1: suminf.    0.84840 (35) obj. -16.9741 iterations 27
Cbc0038I Pass   2: suminf.    1.29194 (6) obj. -16.9741 iterations 41
Cbc0038I Pass   3: suminf.    0.98815 (5) obj. -16.9741 iterations 5
Cbc0038I Pass   4: suminf.    1.32373 (5) obj. -16.9741 iterations 8
Cbc0038I Pass   5: suminf.    0.69852 (6) obj. -16.9741 iterations 3
Cbc0038I Pass   6: suminf.    0.61125 (5) obj. -16.9741 iterations 1
Cbc0038I Pass   7: suminf.    0.88945 (3) obj. -16.9741 iterations 7
Cbc0038I Pass   8: suminf.    0.65211 (3) obj. -16.9741 iterations 4
Cbc0038I Pass   9: suminf.    0.25272 (2) obj. -16.9741 iterations 2
Cbc0038I Pass  10: suminf.    0.48825 (3) obj. -16.9741 iterations 4
Cbc0038I Pass  11: suminf.    0.47962 (2) obj. -16.9741 iterations 1
Cbc0038I Pass  12: suminf.    0.93750 (3) obj. -16.9741 iterations 2
Cbc0038I Pass  13: suminf.    1.11746 (6) obj. -16.9741 iterations 14
Cbc0038I Pass  14: suminf.    1.11746 (6) obj. -16.9741 iterations 2
Cbc0038I Pass  15: suminf.    1.63997 (7) obj. -16.9741 iterations 19
Cbc0038I Pass  16: suminf.    1.21105 (3) obj. -16.9741 iterations 14
Cbc0038I Pass  17: suminf.    0.94111 (3) obj. -16.9741 iterations 5
Cbc0038I Pass  18: suminf.    0.78933 (3) obj. -16.9741 iterations 3
Cbc0038I Pass  19: suminf.    1.40404 (5) obj. -16.9741 iterations 5
Cbc0038I Pass  20: suminf.    1.30905 (6) obj. -16.9741 iterations 5
Cbc0038I Pass  21: suminf.    1.89003 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  22: suminf.    1.32958 (6) obj. -16.9741 iterations 3
Cbc0038I Pass  23: suminf.    1.32958 (6) obj. -16.9741 iterations 0
Cbc0038I Pass  24: suminf.    1.80653 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  25: suminf.    1.38935 (5) obj. -16.9741 iterations 2
Cbc0038I Pass  26: suminf.    1.30905 (6) obj. -16.9741 iterations 1
Cbc0038I Pass  27: suminf.    1.89003 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  28: suminf.    1.32958 (6) obj. -16.9741 iterations 3
Cbc0038I Pass  29: suminf.    1.32958 (6) obj. -16.9741 iterations 0
Cbc0038I Pass  30: suminf.    1.80653 (5) obj. -16.9741 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 76 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -13.9154 to -14.5172 (0.06 seconds)
Cbc0038I Round again with cutoff of -22.4798
Cbc0038I Pass  30: suminf.    1.92191 (35) obj. -22.4798 iterations 0
Cbc0038I Pass  31: suminf.    0.85134 (6) obj. -22.4798 iterations 48
Cbc0038I Pass  32: suminf.    0.84763 (5) obj. -22.4798 iterations 2
Cbc0038I Pass  33: suminf.    1.16264 (6) obj. -22.4798 iterations 11
Cbc0038I Pass  34: suminf.    0.95984 (5) obj. -22.4798 iterations 2
Cbc0038I Pass  35: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  36: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  37: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  38: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  39: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  40: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  41: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  42: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  43: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  44: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  45: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  46: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  47: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  48: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  49: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  50: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  51: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  52: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  53: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  54: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  55: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  56: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  57: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  58: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  59: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 73 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -14.5172 - took 0.08 seconds
Cbc0012I Integer solution of -14.5172 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 61 rows 36 columns
Cbc0031I 35 added rows had average density of 45.514286
Cbc0013I At root node, 35 cuts changed objective from -44.502431 to -37.366759 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15356 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1656 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.5172 best solution, best possible -37.366759 (0.97 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 52 rows 34 columns
Cbc0038I Full problem 133 rows 76 columns, reduced to 9 rows 12 columns
Cbc0016I Integer solution of -14.69714 found by strong branching after 11515 iterations and 92 nodes (1.29 seconds)
Cbc0012I Integer solution of -14.80712 found by rounding after 12151 iterations and 149 nodes (1.35 seconds)
Cbc0001I Search completed - best objective -14.80712, took 12897 iterations and 168 nodes (1.37 seconds)
Cbc0032I Strong branching done 1192 times (20158 iterations), fathomed 14 nodes and fixed 69 variables
Cbc0035I Maximum depth 37, 363 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 119 (-33) columns and 2094 (-1209) elements
Clp1000I sum of infeasibilities 7.02582e-08 - average 6.88805e-10, 32 fixed columns
Coin0506I Presolve 75 (-27) rows, 87 (-32) columns and 1094 (-1000) elements
Clp0006I 0  Obj 49.275922 Dual inf 4.8609287 (87)
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 2.1218476 - largest nonzero change 1.6424258e-05 ( 0.0010393299%) - largest zero change 2.9787991e-05
Clp0000I Optimal - objective value 56.724165
Clp0000I Optimal - objective value 56.724165
Coin0511I After Postsolve, objective 56.724165, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.724165
Clp0000I Optimal - objective value 56.724165
Clp0000I Optimal - objective value 56.724165
Clp0000I Optimal - objective value 56.724165
Coin0511I After Postsolve, objective 56.724165, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.72416527 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 122 columns (122 integer (122 of which binary)) and 2113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.641%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 3.12185
Cbc0038I Pass   1: suminf.    1.38928 (29) obj. -42.6114 iterations 14
Cbc0038I Pass   2: suminf.    1.38928 (29) obj. -42.6114 iterations 1
Cbc0038I Solution found of -3.59633
Cbc0038I Rounding solution of -9.18175 is better than previous of -3.59633

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 122 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -13.3048
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.38928 (29) obj. -42.6114 iterations 0
Cbc0038I Pass   4: suminf.    1.38928 (29) obj. -42.6114 iterations 1
Cbc0038I Pass   5: suminf.    0.32858 (10) obj. -16.174 iterations 19
Cbc0038I Pass   6: suminf.    1.42663 (6) obj. -13.3048 iterations 19
Cbc0038I Pass   7: suminf.    1.09464 (5) obj. -13.3048 iterations 10
Cbc0038I Pass   8: suminf.    1.35680 (5) obj. -13.3048 iterations 8
Cbc0038I Pass   9: suminf.    2.33026 (14) obj. -13.3048 iterations 22
Cbc0038I Pass  10: suminf.    2.13413 (14) obj. -13.3048 iterations 4
Cbc0038I Pass  11: suminf.    2.27257 (8) obj. -13.3048 iterations 21
Cbc0038I Pass  12: suminf.    0.63225 (4) obj. -13.3048 iterations 5
Cbc0038I Pass  13: suminf.    0.58793 (4) obj. -13.3048 iterations 5
Cbc0038I Pass  14: suminf.    2.27257 (8) obj. -13.3048 iterations 10
Cbc0038I Pass  15: suminf.    2.32365 (13) obj. -13.3048 iterations 22
Cbc0038I Pass  16: suminf.    1.88705 (13) obj. -13.3048 iterations 6
Cbc0038I Pass  17: suminf.    1.90754 (8) obj. -13.3048 iterations 18
Cbc0038I Pass  18: suminf.    1.57900 (17) obj. -13.3048 iterations 9
Cbc0038I Pass  19: suminf.    3.32199 (13) obj. -13.3048 iterations 18
Cbc0038I Pass  20: suminf.    3.32199 (13) obj. -13.3048 iterations 1
Cbc0038I Pass  21: suminf.    3.31040 (13) obj. -13.3048 iterations 6
Cbc0038I Pass  22: suminf.    3.31040 (13) obj. -13.3048 iterations 5
Cbc0038I Pass  23: suminf.    3.32199 (13) obj. -13.3048 iterations 7
Cbc0038I Pass  24: suminf.    2.60344 (18) obj. -13.3048 iterations 19
Cbc0038I Pass  25: suminf.    2.41030 (19) obj. -13.3048 iterations 11
Cbc0038I Pass  26: suminf.    1.57499 (12) obj. -13.3048 iterations 15
Cbc0038I Pass  27: suminf.    1.52727 (12) obj. -13.3048 iterations 3
Cbc0038I Pass  28: suminf.    2.73349 (13) obj. -13.3048 iterations 13
Cbc0038I Pass  29: suminf.    1.44056 (13) obj. -13.3048 iterations 5
Cbc0038I Pass  30: suminf.    1.44056 (13) obj. -13.3048 iterations 0
Cbc0038I Pass  31: suminf.    3.48884 (14) obj. -13.3048 iterations 16
Cbc0038I Pass  32: suminf.    3.09353 (16) obj. -13.3048 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 122 columns, reduced to 36 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -3.59633 to -12.7029 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.7262
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.38928 (29) obj. -42.6114 iterations 0
Cbc0038I Pass  33: suminf.    1.38928 (29) obj. -42.6114 iterations 1
Cbc0038I Pass  34: suminf.    1.20564 (10) obj. -20.7262 iterations 28
Cbc0038I Pass  35: suminf.    1.20564 (10) obj. -20.7262 iterations 4
Cbc0038I Pass  36: suminf.    1.35632 (9) obj. -20.7262 iterations 14
Cbc0038I Pass  37: suminf.    1.35632 (9) obj. -20.7262 iterations 0
Cbc0038I Pass  38: suminf.    1.30131 (7) obj. -20.7262 iterations 10
Cbc0038I Pass  39: suminf.    0.76319 (6) obj. -20.7262 iterations 6
Cbc0038I Pass  40: suminf.    1.47268 (7) obj. -20.7262 iterations 6
Cbc0038I Pass  41: suminf.    1.47268 (7) obj. -20.7262 iterations 0
Cbc0038I Pass  42: suminf.    1.20113 (12) obj. -20.7262 iterations 17
Cbc0038I Pass  43: suminf.    1.15287 (11) obj. -20.7262 iterations 7
Cbc0038I Pass  44: suminf.    1.35248 (9) obj. -20.7262 iterations 16
Cbc0038I Pass  45: suminf.    1.12446 (8) obj. -20.7262 iterations 7
Cbc0038I Pass  46: suminf.    1.35248 (9) obj. -20.7262 iterations 19
Cbc0038I Pass  47: suminf.    3.17076 (20) obj. -20.7262 iterations 29
Cbc0038I Pass  48: suminf.    2.06463 (21) obj. -20.7262 iterations 2
Cbc0038I Pass  49: suminf.    1.59994 (17) obj. -20.7262 iterations 6
Cbc0038I Pass  50: suminf.    1.54177 (12) obj. -20.7262 iterations 34
Cbc0038I Pass  51: suminf.    1.54177 (12) obj. -20.7262 iterations 2
Cbc0038I Pass  52: suminf.    2.84716 (22) obj. -20.7262 iterations 9
Cbc0038I Pass  53: suminf.    2.81987 (22) obj. -20.7262 iterations 4
Cbc0038I Pass  54: suminf.    3.78063 (21) obj. -20.7262 iterations 21
Cbc0038I Pass  55: suminf.    3.09321 (23) obj. -20.7262 iterations 5
Cbc0038I Pass  56: suminf.    2.10615 (20) obj. -20.7262 iterations 12
Cbc0038I Pass  57: suminf.    1.90305 (20) obj. -20.7262 iterations 1
Cbc0038I Pass  58: suminf.    2.81088 (22) obj. -20.7262 iterations 7
Cbc0038I Pass  59: suminf.    1.74820 (18) obj. -20.7262 iterations 29
Cbc0038I Pass  60: suminf.    1.69741 (16) obj. -20.7262 iterations 5
Cbc0038I Pass  61: suminf.    1.54440 (19) obj. -20.7262 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 122 columns, reduced to 61 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -12.7029 - took 0.12 seconds
Cbc0012I Integer solution of -12.7029 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 105 rows 122 columns, reduced to 13 rows 16 columns
Cbc0031I 61 added rows had average density of 37.377049
Cbc0013I At root node, 61 cuts changed objective from -50.411826 to -20.350426 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11967 row cuts average 7.7 elements, 1 column cuts (1 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1586 row cuts average 113.8 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 772 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1086 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 384 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 191 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.516 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.7029 best solution, best possible -20.350426 (2.45 seconds)
Cbc0012I Integer solution of -12.73066 found by rounding after 5030 iterations and 5 nodes (3.00 seconds)
Cbc0012I Integer solution of -13.20998 found by rounding after 5032 iterations and 6 nodes (3.01 seconds)
Cbc0010I After 10 nodes, 8 on tree, -13.20998 best solution, best possible -20.350426 (3.17 seconds)
Cbc0012I Integer solution of -14.10929 found by DiveCoefficient after 5134 iterations and 13 nodes (3.27 seconds)
Cbc0016I Integer solution of -14.69714 found by strong branching after 5139 iterations and 14 nodes (3.31 seconds)
Cbc0004I Integer solution of -14.80712 found after 5336 iterations and 25 nodes (3.81 seconds)
Cbc0010I After 26 nodes, 8 on tree, -14.80712 best solution, best possible -20.350426 (3.88 seconds)
Cbc0038I Full problem 105 rows 122 columns, reduced to 40 rows 50 columns
Cbc0010I After 43 nodes, 6 on tree, -14.80712 best solution, best possible -20.350426 (4.61 seconds)
Cbc0001I Search completed - best objective -14.80712, took 6383 iterations and 54 nodes (4.78 seconds)
Cbc0032I Strong branching done 814 times (13342 iterations), fathomed 6 nodes and fixed 12 variables
Cbc0035I Maximum depth 11, 128 variables fixed on reduced cost
Total time (CPU seconds):       3.45   (Wallclock seconds):       4.81

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 6.13939e-05 - average 4.61608e-07, 15 fixed columns
Coin0506I Presolve 105 (-28) rows, 61 (-15) columns and 325 (-85) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.25717936 - largest nonzero change 0 ( 0%) - largest zero change 2.855382e-05
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Coin0511I After Postsolve, objective 44.513845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Clp0000I Optimal - objective value 44.513845
Coin0511I After Postsolve, objective 44.513845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.51384505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.204%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.99271
Cbc0038I Solution found of -2.58158
Cbc0038I Relaxing continuous gives -12.623
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -12.623 to -13.9154 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.9741
Cbc0038I Pass   1: suminf.    0.84840 (35) obj. -16.9741 iterations 27
Cbc0038I Pass   2: suminf.    1.29194 (6) obj. -16.9741 iterations 41
Cbc0038I Pass   3: suminf.    0.98815 (5) obj. -16.9741 iterations 5
Cbc0038I Pass   4: suminf.    1.32373 (5) obj. -16.9741 iterations 8
Cbc0038I Pass   5: suminf.    0.69852 (6) obj. -16.9741 iterations 3
Cbc0038I Pass   6: suminf.    0.61125 (5) obj. -16.9741 iterations 1
Cbc0038I Pass   7: suminf.    0.88945 (3) obj. -16.9741 iterations 7
Cbc0038I Pass   8: suminf.    0.65211 (3) obj. -16.9741 iterations 4
Cbc0038I Pass   9: suminf.    0.25272 (2) obj. -16.9741 iterations 2
Cbc0038I Pass  10: suminf.    0.48825 (3) obj. -16.9741 iterations 4
Cbc0038I Pass  11: suminf.    0.47962 (2) obj. -16.9741 iterations 1
Cbc0038I Pass  12: suminf.    0.93750 (3) obj. -16.9741 iterations 2
Cbc0038I Pass  13: suminf.    1.11746 (6) obj. -16.9741 iterations 14
Cbc0038I Pass  14: suminf.    1.11746 (6) obj. -16.9741 iterations 2
Cbc0038I Pass  15: suminf.    1.63997 (7) obj. -16.9741 iterations 19
Cbc0038I Pass  16: suminf.    1.21105 (3) obj. -16.9741 iterations 14
Cbc0038I Pass  17: suminf.    0.94111 (3) obj. -16.9741 iterations 5
Cbc0038I Pass  18: suminf.    0.78933 (3) obj. -16.9741 iterations 3
Cbc0038I Pass  19: suminf.    1.40404 (5) obj. -16.9741 iterations 5
Cbc0038I Pass  20: suminf.    1.30905 (6) obj. -16.9741 iterations 5
Cbc0038I Pass  21: suminf.    1.89003 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  22: suminf.    1.32958 (6) obj. -16.9741 iterations 3
Cbc0038I Pass  23: suminf.    1.32958 (6) obj. -16.9741 iterations 0
Cbc0038I Pass  24: suminf.    1.80653 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  25: suminf.    1.38935 (5) obj. -16.9741 iterations 2
Cbc0038I Pass  26: suminf.    1.30905 (6) obj. -16.9741 iterations 1
Cbc0038I Pass  27: suminf.    1.89003 (5) obj. -16.9741 iterations 9
Cbc0038I Pass  28: suminf.    1.32958 (6) obj. -16.9741 iterations 3
Cbc0038I Pass  29: suminf.    1.32958 (6) obj. -16.9741 iterations 0
Cbc0038I Pass  30: suminf.    1.80653 (5) obj. -16.9741 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 76 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -13.9154 to -14.5172 (0.07 seconds)
Cbc0038I Round again with cutoff of -22.4798
Cbc0038I Pass  30: suminf.    1.92191 (35) obj. -22.4798 iterations 0
Cbc0038I Pass  31: suminf.    0.85134 (6) obj. -22.4798 iterations 48
Cbc0038I Pass  32: suminf.    0.84763 (5) obj. -22.4798 iterations 2
Cbc0038I Pass  33: suminf.    1.16264 (6) obj. -22.4798 iterations 11
Cbc0038I Pass  34: suminf.    0.95984 (5) obj. -22.4798 iterations 2
Cbc0038I Pass  35: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  36: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  37: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  38: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  39: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  40: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  41: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  42: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  43: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  44: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  45: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  46: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  47: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  48: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  49: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  50: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  51: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  52: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  53: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  54: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I Pass  55: suminf.    1.21334 (5) obj. -22.4798 iterations 8
Cbc0038I Pass  56: suminf.    0.76571 (2) obj. -22.4798 iterations 3
Cbc0038I Pass  57: suminf.    0.69962 (3) obj. -22.4798 iterations 2
Cbc0038I Pass  58: suminf.    1.16264 (6) obj. -22.4798 iterations 6
Cbc0038I Pass  59: suminf.    0.95984 (5) obj. -22.4798 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 73 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -14.5172 - took 0.09 seconds
Cbc0012I Integer solution of -14.5172 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 61 rows 36 columns
Cbc0031I 35 added rows had average density of 45.514286
Cbc0013I At root node, 35 cuts changed objective from -44.502431 to -37.366759 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15356 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1656 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.5172 best solution, best possible -37.366759 (1.17 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 52 rows 34 columns
Cbc0038I Full problem 133 rows 76 columns, reduced to 9 rows 12 columns
Cbc0016I Integer solution of -14.69714 found by strong branching after 11515 iterations and 92 nodes (1.55 seconds)
Cbc0012I Integer solution of -14.80712 found by rounding after 12151 iterations and 149 nodes (1.61 seconds)
Cbc0001I Search completed - best objective -14.80712, took 12897 iterations and 168 nodes (1.63 seconds)
Cbc0032I Strong branching done 1192 times (20158 iterations), fathomed 14 nodes and fixed 69 variables
Cbc0035I Maximum depth 37, 363 variables fixed on reduced cost
Total time (CPU seconds):       1.55   (Wallclock seconds):       1.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 119 (-34) columns and 2094 (-1210) elements
Clp1000I sum of infeasibilities 7.02582e-08 - average 6.88805e-10, 32 fixed columns
Coin0506I Presolve 75 (-27) rows, 87 (-32) columns and 1094 (-1000) elements
Clp0006I 0  Obj 49.275922 Dual inf 4.8609287 (87)
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 2.1218476 - largest nonzero change 1.6424258e-05 ( 0.0010393299%) - largest zero change 2.9787991e-05
Clp0000I Optimal - objective value 56.724165
Clp0000I Optimal - objective value 56.724165
Coin0511I After Postsolve, objective 56.724165, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.724165
Clp0000I Optimal - objective value 56.724165
Clp0000I Optimal - objective value 56.724165
Clp0000I Optimal - objective value 56.724165
Coin0511I After Postsolve, objective 56.724165, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.72416527 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 122 columns (122 integer (122 of which binary)) and 2113 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.641%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 3.12185
Cbc0038I Pass   1: suminf.    1.38928 (29) obj. -42.6114 iterations 14
Cbc0038I Pass   2: suminf.    1.38928 (29) obj. -42.6114 iterations 1
Cbc0038I Solution found of -3.59633
Cbc0038I Rounding solution of -9.18175 is better than previous of -3.59633

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 122 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -13.3048
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.38928 (29) obj. -42.6114 iterations 0
Cbc0038I Pass   4: suminf.    1.38928 (29) obj. -42.6114 iterations 1
Cbc0038I Pass   5: suminf.    0.32858 (10) obj. -16.174 iterations 19
Cbc0038I Pass   6: suminf.    1.42663 (6) obj. -13.3048 iterations 19
Cbc0038I Pass   7: suminf.    1.09464 (5) obj. -13.3048 iterations 10
Cbc0038I Pass   8: suminf.    1.35680 (5) obj. -13.3048 iterations 8
Cbc0038I Pass   9: suminf.    2.33026 (14) obj. -13.3048 iterations 22
Cbc0038I Pass  10: suminf.    2.13413 (14) obj. -13.3048 iterations 4
Cbc0038I Pass  11: suminf.    2.27257 (8) obj. -13.3048 iterations 21
Cbc0038I Pass  12: suminf.    0.63225 (4) obj. -13.3048 iterations 5
Cbc0038I Pass  13: suminf.    0.58793 (4) obj. -13.3048 iterations 5
Cbc0038I Pass  14: suminf.    2.27257 (8) obj. -13.3048 iterations 10
Cbc0038I Pass  15: suminf.    2.32365 (13) obj. -13.3048 iterations 22
Cbc0038I Pass  16: suminf.    1.88705 (13) obj. -13.3048 iterations 6
Cbc0038I Pass  17: suminf.    1.90754 (8) obj. -13.3048 iterations 18
Cbc0038I Pass  18: suminf.    1.57900 (17) obj. -13.3048 iterations 9
Cbc0038I Pass  19: suminf.    3.32199 (13) obj. -13.3048 iterations 18
Cbc0038I Pass  20: suminf.    3.32199 (13) obj. -13.3048 iterations 1
Cbc0038I Pass  21: suminf.    3.31040 (13) obj. -13.3048 iterations 6
Cbc0038I Pass  22: suminf.    3.31040 (13) obj. -13.3048 iterations 5
Cbc0038I Pass  23: suminf.    3.32199 (13) obj. -13.3048 iterations 7
Cbc0038I Pass  24: suminf.    2.60344 (18) obj. -13.3048 iterations 19
Cbc0038I Pass  25: suminf.    2.41030 (19) obj. -13.3048 iterations 11
Cbc0038I Pass  26: suminf.    1.57499 (12) obj. -13.3048 iterations 15
Cbc0038I Pass  27: suminf.    1.52727 (12) obj. -13.3048 iterations 3
Cbc0038I Pass  28: suminf.    2.73349 (13) obj. -13.3048 iterations 13
Cbc0038I Pass  29: suminf.    1.44056 (13) obj. -13.3048 iterations 5
Cbc0038I Pass  30: suminf.    1.44056 (13) obj. -13.3048 iterations 0
Cbc0038I Pass  31: suminf.    3.48884 (14) obj. -13.3048 iterations 16
Cbc0038I Pass  32: suminf.    3.09353 (16) obj. -13.3048 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 122 columns, reduced to 36 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -3.59633 to -12.7029 (0.10 seconds)
Cbc0038I Round again with cutoff of -20.7262
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.38928 (29) obj. -42.6114 iterations 0
Cbc0038I Pass  33: suminf.    1.38928 (29) obj. -42.6114 iterations 1
Cbc0038I Pass  34: suminf.    1.20564 (10) obj. -20.7262 iterations 28
Cbc0038I Pass  35: suminf.    1.20564 (10) obj. -20.7262 iterations 4
Cbc0038I Pass  36: suminf.    1.35632 (9) obj. -20.7262 iterations 14
Cbc0038I Pass  37: suminf.    1.35632 (9) obj. -20.7262 iterations 0
Cbc0038I Pass  38: suminf.    1.30131 (7) obj. -20.7262 iterations 10
Cbc0038I Pass  39: suminf.    0.76319 (6) obj. -20.7262 iterations 6
Cbc0038I Pass  40: suminf.    1.47268 (7) obj. -20.7262 iterations 6
Cbc0038I Pass  41: suminf.    1.47268 (7) obj. -20.7262 iterations 0
Cbc0038I Pass  42: suminf.    1.20113 (12) obj. -20.7262 iterations 17
Cbc0038I Pass  43: suminf.    1.15287 (11) obj. -20.7262 iterations 7
Cbc0038I Pass  44: suminf.    1.35248 (9) obj. -20.7262 iterations 16
Cbc0038I Pass  45: suminf.    1.12446 (8) obj. -20.7262 iterations 7
Cbc0038I Pass  46: suminf.    1.35248 (9) obj. -20.7262 iterations 19
Cbc0038I Pass  47: suminf.    3.17076 (20) obj. -20.7262 iterations 29
Cbc0038I Pass  48: suminf.    2.06463 (21) obj. -20.7262 iterations 2
Cbc0038I Pass  49: suminf.    1.59994 (17) obj. -20.7262 iterations 6
Cbc0038I Pass  50: suminf.    1.54177 (12) obj. -20.7262 iterations 34
Cbc0038I Pass  51: suminf.    1.54177 (12) obj. -20.7262 iterations 2
Cbc0038I Pass  52: suminf.    2.84716 (22) obj. -20.7262 iterations 9
Cbc0038I Pass  53: suminf.    2.81987 (22) obj. -20.7262 iterations 4
Cbc0038I Pass  54: suminf.    3.78063 (21) obj. -20.7262 iterations 21
Cbc0038I Pass  55: suminf.    3.09321 (23) obj. -20.7262 iterations 5
Cbc0038I Pass  56: suminf.    2.10615 (20) obj. -20.7262 iterations 12
Cbc0038I Pass  57: suminf.    1.90305 (20) obj. -20.7262 iterations 1
Cbc0038I Pass  58: suminf.    2.81088 (22) obj. -20.7262 iterations 7
Cbc0038I Pass  59: suminf.    1.74820 (18) obj. -20.7262 iterations 29
Cbc0038I Pass  60: suminf.    1.69741 (16) obj. -20.7262 iterations 5
Cbc0038I Pass  61: suminf.    1.54440 (19) obj. -20.7262 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 122 columns, reduced to 61 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -12.7029 - took 0.14 seconds
Cbc0012I Integer solution of -12.7029 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 105 rows 122 columns, reduced to 13 rows 16 columns
Cbc0031I 61 added rows had average density of 37.377049
Cbc0013I At root node, 61 cuts changed objective from -50.411826 to -20.350426 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11967 row cuts average 7.7 elements, 1 column cuts (1 active)  in 0.201 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1586 row cuts average 113.8 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 772 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1086 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 384 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 191 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.601 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.7029 best solution, best possible -20.350426 (3.11 seconds)
Cbc0012I Integer solution of -12.73066 found by rounding after 5030 iterations and 5 nodes (3.75 seconds)
Cbc0012I Integer solution of -13.20998 found by rounding after 5032 iterations and 6 nodes (3.76 seconds)
Cbc0010I After 7 nodes, 6 on tree, -13.20998 best solution, best possible -20.350426 (3.81 seconds)
Cbc0012I Integer solution of -14.10929 found by DiveCoefficient after 5134 iterations and 13 nodes (4.09 seconds)
Cbc0016I Integer solution of -14.69714 found by strong branching after 5139 iterations and 14 nodes (4.14 seconds)
Cbc0010I After 21 nodes, 8 on tree, -14.69714 best solution, best possible -20.350426 (4.58 seconds)
Cbc0004I Integer solution of -14.80712 found after 5336 iterations and 25 nodes (4.75 seconds)
Cbc0038I Full problem 105 rows 122 columns, reduced to 40 rows 50 columns
Cbc0010I After 41 nodes, 6 on tree, -14.80712 best solution, best possible -20.350426 (5.68 seconds)
Cbc0001I Search completed - best objective -14.80712, took 6383 iterations and 54 nodes (5.91 seconds)
Cbc0032I Strong branching done 814 times (13342 iterations), fathomed 6 nodes and fixed 12 variables
Cbc0035I Maximum depth 11, 128 variables fixed on reduced cost
Total time (CPU seconds):       4.06   (Wallclock seconds):       5.94

