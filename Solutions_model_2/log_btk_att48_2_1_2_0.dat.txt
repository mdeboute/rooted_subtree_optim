Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 48 (-2) columns and 262 (-23) elements
Clp1000I sum of infeasibilities 1.6712e-06 - average 1.92092e-08, 1 fixed columns
Coin0506I Presolve 85 (-2) rows, 47 (-1) columns and 256 (-6) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 23.857128 - largest nonzero change 2.6920564e-05 ( 0.00039217652%) - largest zero change 1.0549131e-05
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Coin0511I After Postsolve, objective 1725.31, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Coin0511I After Postsolve, objective 1725.31, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1725.310015 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 48 columns (47 integer (47 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 11.5072
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 871.698 iterations 34
Cbc0038I Solution found of 871.698
Cbc0038I Relaxing continuous gives 871.698
Cbc0038I Rounding solution of 720.592 is better than previous of 871.698

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 720.592 to -112.474 (0.03 seconds)
Cbc0038I Round again with cutoff of -273.758
Cbc0038I Pass   2: suminf.    2.51185 (12) obj. -273.758 iterations 12
Cbc0038I Pass   3: suminf.    2.55643 (10) obj. -273.758 iterations 15
Cbc0038I Pass   4: suminf.    2.08283 (8) obj. -273.758 iterations 2
Cbc0038I Pass   5: suminf.    2.11268 (6) obj. -273.758 iterations 11
Cbc0038I Pass   6: suminf.    2.11268 (6) obj. -273.758 iterations 0
Cbc0038I Pass   7: suminf.    2.14221 (7) obj. -273.758 iterations 8
Cbc0038I Pass   8: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass   9: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  10: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  11: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  12: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  13: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Pass  14: suminf.    2.07844 (6) obj. -273.758 iterations 8
Cbc0038I Pass  15: suminf.    2.07388 (5) obj. -273.758 iterations 1
Cbc0038I Pass  16: suminf.    2.14221 (7) obj. -273.758 iterations 5
Cbc0038I Pass  17: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass  18: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  19: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  20: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  21: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  22: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Pass  23: suminf.    2.07844 (6) obj. -273.758 iterations 8
Cbc0038I Pass  24: suminf.    2.07388 (5) obj. -273.758 iterations 1
Cbc0038I Pass  25: suminf.    2.14221 (7) obj. -273.758 iterations 5
Cbc0038I Pass  26: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass  27: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  28: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  29: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  30: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  31: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Rounding solution of -257.417 is better than previous of -112.474

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -564.068
Cbc0038I Pass  31: suminf.    3.76896 (16) obj. -564.068 iterations 5
Cbc0038I Pass  32: suminf.    2.78674 (11) obj. -564.068 iterations 10
Cbc0038I Pass  33: suminf.    2.78674 (11) obj. -564.068 iterations 0
Cbc0038I Pass  34: suminf.    2.43339 (7) obj. -564.068 iterations 10
Cbc0038I Pass  35: suminf.    2.43339 (7) obj. -564.068 iterations 0
Cbc0038I Pass  36: suminf.    2.46288 (7) obj. -564.068 iterations 2
Cbc0038I Pass  37: suminf.    2.82679 (7) obj. -564.068 iterations 11
Cbc0038I Pass  38: suminf.    2.10032 (5) obj. -564.068 iterations 3
Cbc0038I Pass  39: suminf.    1.97888 (5) obj. -564.068 iterations 1
Cbc0038I Pass  40: suminf.    1.95030 (6) obj. -564.068 iterations 2
Cbc0038I Pass  41: suminf.    2.60105 (7) obj. -564.068 iterations 3
Cbc0038I Pass  42: suminf.    1.86962 (7) obj. -564.068 iterations 3
Cbc0038I Pass  43: suminf.    2.65500 (8) obj. -564.068 iterations 3
Cbc0038I Pass  44: suminf.    2.53597 (9) obj. -564.068 iterations 1
Cbc0038I Pass  45: suminf.    2.83640 (8) obj. -564.068 iterations 6
Cbc0038I Pass  46: suminf.    2.83640 (8) obj. -564.068 iterations 0
Cbc0038I Pass  47: suminf.    2.24332 (7) obj. -564.068 iterations 9
Cbc0038I Pass  48: suminf.    2.24332 (7) obj. -564.068 iterations 0
Cbc0038I Pass  49: suminf.    2.86142 (7) obj. -564.068 iterations 2
Cbc0038I Pass  50: suminf.    2.18243 (8) obj. -564.068 iterations 4
Cbc0038I Pass  51: suminf.    2.18243 (8) obj. -564.068 iterations 0
Cbc0038I Pass  52: suminf.    3.00000 (9) obj. -564.068 iterations 4
Cbc0038I Pass  53: suminf.    2.24296 (9) obj. -564.068 iterations 9
Cbc0038I Pass  54: suminf.    2.18079 (9) obj. -564.068 iterations 5
Cbc0038I Pass  55: suminf.    2.71031 (8) obj. -564.068 iterations 5
Cbc0038I Pass  56: suminf.    2.71031 (8) obj. -564.068 iterations 0
Cbc0038I Pass  57: suminf.    2.64927 (9) obj. -564.068 iterations 3
Cbc0038I Pass  58: suminf.    2.64927 (9) obj. -564.068 iterations 0
Cbc0038I Pass  59: suminf.    2.96569 (7) obj. -564.068 iterations 4
Cbc0038I Pass  60: suminf.    2.78781 (7) obj. -564.068 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -257.417 - took 0.11 seconds
Cbc0012I Integer solution of -257.4169 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 25 added rows had average density of 20.48
Cbc0013I At root node, 25 cuts changed objective from -1725.31 to -1051.7903 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10982 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2353 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 5 nodes, 6 on tree, -257.4169 best solution, best possible -1051.7903 (0.69 seconds)
Cbc0001I Search completed - best objective -257.4168999999999, took 8451 iterations and 22 nodes (0.76 seconds)
Cbc0032I Strong branching done 378 times (8531 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 10, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-11) rows, 94 (-2) columns and 1343 (-70) elements
Clp1000I sum of infeasibilities 1.06062e-07 - average 1.21911e-09, 85 fixed columns
Coin0506I Presolve 6 (-81) rows, 9 (-85) columns and 19 (-1324) elements
Clp0006I 0  Obj -1606.3435 Dual inf 19.627067 (9)
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 1.50001 - largest nonzero change 1.702643e-05 ( 0.00085132148%) - largest zero change 1.618399e-05
Clp0000I Optimal - objective value -1589.133
Clp0000I Optimal - objective value -1589.133
Coin0511I After Postsolve, objective -1589.133, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1589.133 Dual inf 3711.4775 (57)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 3.8529455e-05 ( 0.00088996209%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 2380.074
Clp0000I Optimal - objective value 2380.074
Clp0000I Optimal - objective value 2380.074
Coin0511I After Postsolve, objective 2380.074, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2380.074035 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 94 columns (94 integer (94 of which binary)) and 1345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.6819
Cbc0038I Pass   1: suminf.    3.73055 (28) obj. -1126.22 iterations 12
Cbc0038I Pass   2: suminf.    3.73055 (28) obj. -1126.22 iterations 1
Cbc0038I Pass   3: suminf.    1.84001 (17) obj. -100.627 iterations 11
Cbc0038I Pass   4: suminf.    0.52251 (6) obj. 559.301 iterations 11
Cbc0038I Solution found of 873.181
Cbc0038I Rounding solution of 420.395 is better than previous of 873.181

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 10 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 420.395 to 266.241 (0.02 seconds)
Cbc0038I Round again with cutoff of 21.1989
Cbc0038I Pass   5: suminf.    3.73055 (28) obj. -1126.22 iterations 0
Cbc0038I Pass   6: suminf.    3.73055 (28) obj. -1126.22 iterations 1
Cbc0038I Pass   7: suminf.    0.97385 (10) obj. 21.1989 iterations 29
Cbc0038I Pass   8: suminf.    0.83404 (9) obj. 21.1989 iterations 1
Cbc0038I Pass   9: suminf.    1.17762 (8) obj. 21.1989 iterations 8
Cbc0038I Pass  10: suminf.    0.76734 (6) obj. -89.0525 iterations 2
Cbc0038I Pass  11: suminf.    0.63872 (3) obj. 21.1989 iterations 8
Cbc0038I Pass  12: suminf.    0.63872 (3) obj. 21.1989 iterations 0
Cbc0038I Pass  13: suminf.    0.77938 (3) obj. 21.1989 iterations 3
Cbc0038I Pass  14: suminf.    0.47516 (2) obj. -81.0924 iterations 2
Cbc0038I Pass  15: suminf.    0.63872 (3) obj. 21.1989 iterations 3
Cbc0038I Pass  16: suminf.    2.98085 (14) obj. 21.1989 iterations 26
Cbc0038I Pass  17: suminf.    1.43875 (6) obj. -61.0388 iterations 11
Cbc0038I Pass  18: suminf.    1.43875 (6) obj. -61.0388 iterations 1
Cbc0038I Pass  19: suminf.    0.85326 (3) obj. 21.1989 iterations 10
Cbc0038I Pass  20: suminf.    0.85326 (3) obj. 21.1989 iterations 1
Cbc0038I Pass  21: suminf.    1.03414 (3) obj. 21.1989 iterations 6
Cbc0038I Pass  22: suminf.    0.76863 (3) obj. -46.5063 iterations 3
Cbc0038I Pass  23: suminf.    4.60057 (18) obj. -24.1319 iterations 40
Cbc0038I Pass  24: suminf.    4.60057 (18) obj. -24.1319 iterations 2
Cbc0038I Pass  25: suminf.    2.20294 (7) obj. 21.1989 iterations 23
Cbc0038I Pass  26: suminf.    2.10923 (6) obj. 21.1989 iterations 1
Cbc0038I Pass  27: suminf.    1.08269 (3) obj. 21.1989 iterations 4
Cbc0038I Pass  28: suminf.    0.80435 (3) obj. -49.7787 iterations 4
Cbc0038I Pass  29: suminf.    0.77556 (3) obj. 21.1989 iterations 5
Cbc0038I Pass  30: suminf.    0.77556 (3) obj. 21.1989 iterations 0
Cbc0038I Pass  31: suminf.    1.11989 (3) obj. 21.1989 iterations 4
Cbc0038I Pass  32: suminf.    0.86863 (3) obj. -42.8715 iterations 2
Cbc0038I Pass  33: suminf.    3.26582 (12) obj. 21.1989 iterations 27
Cbc0038I Pass  34: suminf.    2.37482 (11) obj. 21.1989 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 29 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 266.241 to 132.212 (0.04 seconds)
Cbc0038I Round again with cutoff of -419.877
Cbc0038I Pass  34: suminf.    3.73055 (28) obj. -1126.22 iterations 0
Cbc0038I Pass  35: suminf.    3.73055 (28) obj. -1126.22 iterations 1
Cbc0038I Pass  36: suminf.    2.29527 (19) obj. -419.877 iterations 20
Cbc0038I Pass  37: suminf.    1.96551 (17) obj. -514.075 iterations 2
Cbc0038I Pass  38: suminf.    1.24135 (7) obj. -419.877 iterations 20
Cbc0038I Pass  39: suminf.    1.17403 (7) obj. -419.877 iterations 1
Cbc0038I Pass  40: suminf.    1.17327 (6) obj. -419.877 iterations 9
Cbc0038I Pass  41: suminf.    1.17327 (6) obj. -419.877 iterations 1
Cbc0038I Pass  42: suminf.    1.34481 (5) obj. -419.877 iterations 3
Cbc0038I Pass  43: suminf.    1.13618 (5) obj. -469.531 iterations 2
Cbc0038I Pass  44: suminf.    1.23155 (5) obj. -419.877 iterations 4
Cbc0038I Pass  45: suminf.    1.23155 (5) obj. -419.877 iterations 1
Cbc0038I Pass  46: suminf.    3.78200 (14) obj. -419.877 iterations 28
Cbc0038I Pass  47: suminf.    3.27286 (15) obj. -419.877 iterations 5
Cbc0038I Pass  48: suminf.    3.09528 (13) obj. -551.731 iterations 3
Cbc0038I Pass  49: suminf.    1.89530 (8) obj. -419.877 iterations 11
Cbc0038I Pass  50: suminf.    1.89530 (8) obj. -419.877 iterations 1
Cbc0038I Pass  51: suminf.    1.87122 (8) obj. -419.877 iterations 4
Cbc0038I Pass  52: suminf.    1.87122 (8) obj. -419.877 iterations 1
Cbc0038I Pass  53: suminf.    1.89530 (8) obj. -419.877 iterations 5
Cbc0038I Pass  54: suminf.    3.29832 (14) obj. -419.877 iterations 30
Cbc0038I Pass  55: suminf.    2.66560 (14) obj. -419.877 iterations 7
Cbc0038I Pass  56: suminf.    1.33185 (5) obj. -419.877 iterations 16
Cbc0038I Pass  57: suminf.    1.33185 (5) obj. -419.877 iterations 2
Cbc0038I Pass  58: suminf.    1.41892 (5) obj. -419.877 iterations 2
Cbc0038I Pass  59: suminf.    1.41892 (5) obj. -419.877 iterations 0
Cbc0038I Pass  60: suminf.    1.33185 (5) obj. -419.877 iterations 2
Cbc0038I Pass  61: suminf.    1.99504 (8) obj. -419.877 iterations 14
Cbc0038I Pass  62: suminf.    1.99504 (8) obj. -419.877 iterations 1
Cbc0038I Pass  63: suminf.    1.33185 (5) obj. -419.877 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 132.212 - took 0.05 seconds
Cbc0012I Integer solution of 132.2124 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 94 columns, reduced to 18 rows 22 columns
Cbc0031I 57 added rows had average density of 23.736842
Cbc0013I At root node, 57 cuts changed objective from -2184.1804 to -285.51081 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9364 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 975 row cuts average 81.8 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 93 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 840 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 41.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.666 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 132.2124 best solution, best possible -285.51081 (1.97 seconds)
Cbc0012I Integer solution of 84.9551 found by rounding after 3078 iterations and 1 nodes (1.99 seconds)
Cbc0004I Integer solution of -257.4169 found after 3186 iterations and 1 nodes (2.00 seconds)
Cbc0001I Search completed - best objective -257.4168999999999, took 3513 iterations and 2 nodes (2.15 seconds)
Cbc0032I Strong branching done 136 times (3461 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.60   (Wallclock seconds):       2.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 48 (-2) columns and 262 (-23) elements
Clp1000I sum of infeasibilities 1.6712e-06 - average 1.92092e-08, 1 fixed columns
Coin0506I Presolve 85 (-2) rows, 47 (-1) columns and 256 (-6) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 23.857128 - largest nonzero change 2.6920564e-05 ( 0.00039217652%) - largest zero change 1.0549131e-05
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Coin0511I After Postsolve, objective 1725.31, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Clp0000I Optimal - objective value 1725.31
Coin0511I After Postsolve, objective 1725.31, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1725.310015 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 48 columns (47 integer (47 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 11.5072
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 871.698 iterations 34
Cbc0038I Solution found of 871.698
Cbc0038I Relaxing continuous gives 871.698
Cbc0038I Rounding solution of 720.592 is better than previous of 871.698

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 720.592 to -112.474 (0.03 seconds)
Cbc0038I Round again with cutoff of -273.758
Cbc0038I Pass   2: suminf.    2.51185 (12) obj. -273.758 iterations 12
Cbc0038I Pass   3: suminf.    2.55643 (10) obj. -273.758 iterations 15
Cbc0038I Pass   4: suminf.    2.08283 (8) obj. -273.758 iterations 2
Cbc0038I Pass   5: suminf.    2.11268 (6) obj. -273.758 iterations 11
Cbc0038I Pass   6: suminf.    2.11268 (6) obj. -273.758 iterations 0
Cbc0038I Pass   7: suminf.    2.14221 (7) obj. -273.758 iterations 8
Cbc0038I Pass   8: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass   9: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  10: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  11: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  12: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  13: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Pass  14: suminf.    2.07844 (6) obj. -273.758 iterations 8
Cbc0038I Pass  15: suminf.    2.07388 (5) obj. -273.758 iterations 1
Cbc0038I Pass  16: suminf.    2.14221 (7) obj. -273.758 iterations 5
Cbc0038I Pass  17: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass  18: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  19: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  20: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  21: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  22: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Pass  23: suminf.    2.07844 (6) obj. -273.758 iterations 8
Cbc0038I Pass  24: suminf.    2.07388 (5) obj. -273.758 iterations 1
Cbc0038I Pass  25: suminf.    2.14221 (7) obj. -273.758 iterations 5
Cbc0038I Pass  26: suminf.    2.10750 (7) obj. -273.758 iterations 1
Cbc0038I Pass  27: suminf.    1.90622 (7) obj. -273.758 iterations 1
Cbc0038I Pass  28: suminf.    2.30296 (8) obj. -273.758 iterations 4
Cbc0038I Pass  29: suminf.    2.14440 (9) obj. -273.758 iterations 1
Cbc0038I Pass  30: suminf.    2.53075 (7) obj. -273.758 iterations 7
Cbc0038I Pass  31: suminf.    1.25384 (6) obj. -273.758 iterations 3
Cbc0038I Rounding solution of -257.417 is better than previous of -112.474

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -564.068
Cbc0038I Pass  31: suminf.    3.76896 (16) obj. -564.068 iterations 5
Cbc0038I Pass  32: suminf.    2.78674 (11) obj. -564.068 iterations 10
Cbc0038I Pass  33: suminf.    2.78674 (11) obj. -564.068 iterations 0
Cbc0038I Pass  34: suminf.    2.43339 (7) obj. -564.068 iterations 10
Cbc0038I Pass  35: suminf.    2.43339 (7) obj. -564.068 iterations 0
Cbc0038I Pass  36: suminf.    2.46288 (7) obj. -564.068 iterations 2
Cbc0038I Pass  37: suminf.    2.82679 (7) obj. -564.068 iterations 11
Cbc0038I Pass  38: suminf.    2.10032 (5) obj. -564.068 iterations 3
Cbc0038I Pass  39: suminf.    1.97888 (5) obj. -564.068 iterations 1
Cbc0038I Pass  40: suminf.    1.95030 (6) obj. -564.068 iterations 2
Cbc0038I Pass  41: suminf.    2.60105 (7) obj. -564.068 iterations 3
Cbc0038I Pass  42: suminf.    1.86962 (7) obj. -564.068 iterations 3
Cbc0038I Pass  43: suminf.    2.65500 (8) obj. -564.068 iterations 3
Cbc0038I Pass  44: suminf.    2.53597 (9) obj. -564.068 iterations 1
Cbc0038I Pass  45: suminf.    2.83640 (8) obj. -564.068 iterations 6
Cbc0038I Pass  46: suminf.    2.83640 (8) obj. -564.068 iterations 0
Cbc0038I Pass  47: suminf.    2.24332 (7) obj. -564.068 iterations 9
Cbc0038I Pass  48: suminf.    2.24332 (7) obj. -564.068 iterations 0
Cbc0038I Pass  49: suminf.    2.86142 (7) obj. -564.068 iterations 2
Cbc0038I Pass  50: suminf.    2.18243 (8) obj. -564.068 iterations 4
Cbc0038I Pass  51: suminf.    2.18243 (8) obj. -564.068 iterations 0
Cbc0038I Pass  52: suminf.    3.00000 (9) obj. -564.068 iterations 4
Cbc0038I Pass  53: suminf.    2.24296 (9) obj. -564.068 iterations 9
Cbc0038I Pass  54: suminf.    2.18079 (9) obj. -564.068 iterations 5
Cbc0038I Pass  55: suminf.    2.71031 (8) obj. -564.068 iterations 5
Cbc0038I Pass  56: suminf.    2.71031 (8) obj. -564.068 iterations 0
Cbc0038I Pass  57: suminf.    2.64927 (9) obj. -564.068 iterations 3
Cbc0038I Pass  58: suminf.    2.64927 (9) obj. -564.068 iterations 0
Cbc0038I Pass  59: suminf.    2.96569 (7) obj. -564.068 iterations 4
Cbc0038I Pass  60: suminf.    2.78781 (7) obj. -564.068 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 48 columns, reduced to 73 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -257.417 - took 0.08 seconds
Cbc0012I Integer solution of -257.4169 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 25 added rows had average density of 20.48
Cbc0013I At root node, 25 cuts changed objective from -1725.31 to -1051.7903 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10982 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2353 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -257.4169 best solution, best possible -1051.7903 (0.70 seconds)
Cbc0001I Search completed - best objective -257.4168999999999, took 8451 iterations and 22 nodes (0.85 seconds)
Cbc0032I Strong branching done 378 times (8531 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 10, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.82   (Wallclock seconds):       0.86

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 94 (-3) columns and 1343 (-71) elements
Clp1000I sum of infeasibilities 1.06062e-07 - average 1.21911e-09, 85 fixed columns
Coin0506I Presolve 6 (-81) rows, 9 (-85) columns and 19 (-1324) elements
Clp0006I 0  Obj -1606.3435 Dual inf 19.627067 (9)
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 1.50001 - largest nonzero change 1.702643e-05 ( 0.00085132148%) - largest zero change 1.618399e-05
Clp0000I Optimal - objective value -1589.133
Clp0000I Optimal - objective value -1589.133
Coin0511I After Postsolve, objective -1589.133, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1589.133 Dual inf 3711.4775 (57)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 3.8529455e-05 ( 0.00088996209%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 2380.074
Clp0000I Optimal - objective value 2380.074
Clp0000I Optimal - objective value 2380.074
Coin0511I After Postsolve, objective 2380.074, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2380.074035 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 94 columns (94 integer (94 of which binary)) and 1345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.6819
Cbc0038I Pass   1: suminf.    3.73055 (28) obj. -1126.22 iterations 12
Cbc0038I Pass   2: suminf.    3.73055 (28) obj. -1126.22 iterations 1
Cbc0038I Pass   3: suminf.    1.84001 (17) obj. -100.627 iterations 11
Cbc0038I Pass   4: suminf.    0.52251 (6) obj. 559.301 iterations 11
Cbc0038I Solution found of 873.181
Cbc0038I Rounding solution of 420.395 is better than previous of 873.181

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 10 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 420.395 to 266.241 (0.02 seconds)
Cbc0038I Round again with cutoff of 21.1989
Cbc0038I Pass   5: suminf.    3.73055 (28) obj. -1126.22 iterations 0
Cbc0038I Pass   6: suminf.    3.73055 (28) obj. -1126.22 iterations 1
Cbc0038I Pass   7: suminf.    0.97385 (10) obj. 21.1989 iterations 29
Cbc0038I Pass   8: suminf.    0.83404 (9) obj. 21.1989 iterations 1
Cbc0038I Pass   9: suminf.    1.17762 (8) obj. 21.1989 iterations 8
Cbc0038I Pass  10: suminf.    0.76734 (6) obj. -89.0525 iterations 2
Cbc0038I Pass  11: suminf.    0.63872 (3) obj. 21.1989 iterations 8
Cbc0038I Pass  12: suminf.    0.63872 (3) obj. 21.1989 iterations 0
Cbc0038I Pass  13: suminf.    0.77938 (3) obj. 21.1989 iterations 3
Cbc0038I Pass  14: suminf.    0.47516 (2) obj. -81.0924 iterations 2
Cbc0038I Pass  15: suminf.    0.63872 (3) obj. 21.1989 iterations 3
Cbc0038I Pass  16: suminf.    2.98085 (14) obj. 21.1989 iterations 26
Cbc0038I Pass  17: suminf.    1.43875 (6) obj. -61.0388 iterations 11
Cbc0038I Pass  18: suminf.    1.43875 (6) obj. -61.0388 iterations 1
Cbc0038I Pass  19: suminf.    0.85326 (3) obj. 21.1989 iterations 10
Cbc0038I Pass  20: suminf.    0.85326 (3) obj. 21.1989 iterations 1
Cbc0038I Pass  21: suminf.    1.03414 (3) obj. 21.1989 iterations 6
Cbc0038I Pass  22: suminf.    0.76863 (3) obj. -46.5063 iterations 3
Cbc0038I Pass  23: suminf.    4.60057 (18) obj. -24.1319 iterations 40
Cbc0038I Pass  24: suminf.    4.60057 (18) obj. -24.1319 iterations 2
Cbc0038I Pass  25: suminf.    2.20294 (7) obj. 21.1989 iterations 23
Cbc0038I Pass  26: suminf.    2.10923 (6) obj. 21.1989 iterations 1
Cbc0038I Pass  27: suminf.    1.08269 (3) obj. 21.1989 iterations 4
Cbc0038I Pass  28: suminf.    0.80435 (3) obj. -49.7787 iterations 4
Cbc0038I Pass  29: suminf.    0.77556 (3) obj. 21.1989 iterations 5
Cbc0038I Pass  30: suminf.    0.77556 (3) obj. 21.1989 iterations 0
Cbc0038I Pass  31: suminf.    1.11989 (3) obj. 21.1989 iterations 4
Cbc0038I Pass  32: suminf.    0.86863 (3) obj. -42.8715 iterations 2
Cbc0038I Pass  33: suminf.    3.26582 (12) obj. 21.1989 iterations 27
Cbc0038I Pass  34: suminf.    2.37482 (11) obj. 21.1989 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 29 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 266.241 to 132.212 (0.04 seconds)
Cbc0038I Round again with cutoff of -419.877
Cbc0038I Pass  34: suminf.    3.73055 (28) obj. -1126.22 iterations 0
Cbc0038I Pass  35: suminf.    3.73055 (28) obj. -1126.22 iterations 1
Cbc0038I Pass  36: suminf.    2.29527 (19) obj. -419.877 iterations 20
Cbc0038I Pass  37: suminf.    1.96551 (17) obj. -514.075 iterations 2
Cbc0038I Pass  38: suminf.    1.24135 (7) obj. -419.877 iterations 20
Cbc0038I Pass  39: suminf.    1.17403 (7) obj. -419.877 iterations 1
Cbc0038I Pass  40: suminf.    1.17327 (6) obj. -419.877 iterations 9
Cbc0038I Pass  41: suminf.    1.17327 (6) obj. -419.877 iterations 1
Cbc0038I Pass  42: suminf.    1.34481 (5) obj. -419.877 iterations 3
Cbc0038I Pass  43: suminf.    1.13618 (5) obj. -469.531 iterations 2
Cbc0038I Pass  44: suminf.    1.23155 (5) obj. -419.877 iterations 4
Cbc0038I Pass  45: suminf.    1.23155 (5) obj. -419.877 iterations 1
Cbc0038I Pass  46: suminf.    3.78200 (14) obj. -419.877 iterations 28
Cbc0038I Pass  47: suminf.    3.27286 (15) obj. -419.877 iterations 5
Cbc0038I Pass  48: suminf.    3.09528 (13) obj. -551.731 iterations 3
Cbc0038I Pass  49: suminf.    1.89530 (8) obj. -419.877 iterations 11
Cbc0038I Pass  50: suminf.    1.89530 (8) obj. -419.877 iterations 1
Cbc0038I Pass  51: suminf.    1.87122 (8) obj. -419.877 iterations 4
Cbc0038I Pass  52: suminf.    1.87122 (8) obj. -419.877 iterations 1
Cbc0038I Pass  53: suminf.    1.89530 (8) obj. -419.877 iterations 5
Cbc0038I Pass  54: suminf.    3.29832 (14) obj. -419.877 iterations 30
Cbc0038I Pass  55: suminf.    2.66560 (14) obj. -419.877 iterations 7
Cbc0038I Pass  56: suminf.    1.33185 (5) obj. -419.877 iterations 16
Cbc0038I Pass  57: suminf.    1.33185 (5) obj. -419.877 iterations 2
Cbc0038I Pass  58: suminf.    1.41892 (5) obj. -419.877 iterations 2
Cbc0038I Pass  59: suminf.    1.41892 (5) obj. -419.877 iterations 0
Cbc0038I Pass  60: suminf.    1.33185 (5) obj. -419.877 iterations 2
Cbc0038I Pass  61: suminf.    1.99504 (8) obj. -419.877 iterations 14
Cbc0038I Pass  62: suminf.    1.99504 (8) obj. -419.877 iterations 1
Cbc0038I Pass  63: suminf.    1.33185 (5) obj. -419.877 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 94 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 132.212 - took 0.05 seconds
Cbc0012I Integer solution of 132.2124 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 94 columns, reduced to 18 rows 22 columns
Cbc0031I 57 added rows had average density of 23.736842
Cbc0013I At root node, 57 cuts changed objective from -2184.1804 to -285.51081 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9364 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 975 row cuts average 81.8 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 93 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 840 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 41.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 132.2124 best solution, best possible -285.51081 (2.19 seconds)
Cbc0012I Integer solution of 84.9551 found by rounding after 3078 iterations and 1 nodes (2.20 seconds)
Cbc0004I Integer solution of -257.4169 found after 3186 iterations and 1 nodes (2.22 seconds)
Cbc0001I Search completed - best objective -257.4168999999999, took 3513 iterations and 2 nodes (2.37 seconds)
Cbc0032I Strong branching done 136 times (3461 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.74   (Wallclock seconds):       2.38

