Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 150 (-55) rows, 82 (-21) columns and 457 (-146) elements
Clp1000I sum of infeasibilities 1.04009e-06 - average 6.93392e-09, 73 fixed columns
Coin0506I Presolve 9 (-141) rows, 9 (-73) columns and 30 (-427) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 26754.106
Clp0000I Optimal - objective value 26754.106
Coin0511I After Postsolve, objective 26754.106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4107639 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 26754.106
Clp0000I Optimal - objective value 26754.106
Clp0000I Optimal - objective value 26754.106
Coin0511I After Postsolve, objective 26754.106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26754.10557 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 150 rows, 82 columns (81 integer (81 of which binary)) and 457 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.094%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.60154
Cbc0038I Pass   1: suminf.    0.12000 (1) obj. -25866.5 iterations 28
Cbc0038I Solution found of -25531
Cbc0038I Relaxing continuous gives -25531
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 82 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -25653.3
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.12000 (1) obj. -25866.5 iterations 0
Cbc0038I Pass   3: suminf.    0.04374 (1) obj. -25653.3 iterations 6
Cbc0038I Pass   4: suminf.    1.68384 (7) obj. -25653.3 iterations 18
Cbc0038I Pass   5: suminf.    1.58583 (7) obj. -25653.3 iterations 6
Cbc0038I Pass   6: suminf.    2.93505 (8) obj. -25653.3 iterations 19
Cbc0038I Pass   7: suminf.    1.64430 (5) obj. -25653.3 iterations 6
Cbc0038I Pass   8: suminf.    1.64430 (5) obj. -25653.3 iterations 0
Cbc0038I Pass   9: suminf.    0.68112 (3) obj. -25653.3 iterations 10
Cbc0038I Pass  10: suminf.    0.41660 (3) obj. -25653.3 iterations 4
Cbc0038I Pass  11: suminf.    1.32512 (4) obj. -25653.3 iterations 8
Cbc0038I Pass  12: suminf.    1.32512 (4) obj. -25653.3 iterations 0
Cbc0038I Pass  13: suminf.    0.64240 (3) obj. -25653.3 iterations 13
Cbc0038I Pass  14: suminf.    0.64240 (3) obj. -25653.3 iterations 0
Cbc0038I Pass  15: suminf.    0.88109 (4) obj. -25653.3 iterations 7
Cbc0038I Pass  16: suminf.    0.17143 (1) obj. -25886.9 iterations 2
Cbc0038I Pass  17: suminf.    2.09830 (5) obj. -25653.3 iterations 16
Cbc0038I Pass  18: suminf.    1.91310 (5) obj. -25653.3 iterations 9
Cbc0038I Pass  19: suminf.    1.14175 (3) obj. -25880.9 iterations 15
Cbc0038I Pass  20: suminf.    1.14175 (3) obj. -25880.9 iterations 0
Cbc0038I Pass  21: suminf.    1.21123 (3) obj. -25653.3 iterations 8
Cbc0038I Pass  22: suminf.    0.60414 (4) obj. -25653.3 iterations 3
Cbc0038I Pass  23: suminf.    1.73499 (4) obj. -25653.3 iterations 8
Cbc0038I Pass  24: suminf.    1.34175 (7) obj. -25653.3 iterations 10
Cbc0038I Pass  25: suminf.    1.34175 (7) obj. -25653.3 iterations 4
Cbc0038I Pass  26: suminf.    2.47873 (7) obj. -25653.3 iterations 11
Cbc0038I Pass  27: suminf.    0.66878 (4) obj. -25653.3 iterations 9
Cbc0038I Pass  28: suminf.    0.64240 (3) obj. -25653.3 iterations 9
Cbc0038I Pass  29: suminf.    0.88109 (4) obj. -25653.3 iterations 7
Cbc0038I Pass  30: suminf.    0.17143 (1) obj. -25886.9 iterations 2
Cbc0038I Pass  31: suminf.    0.59562 (5) obj. -25653.3 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 82 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -25531 to -25893.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -26065.5
Cbc0038I Reduced cost fixing fixed 42 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.34683 (3) obj. -26065.5 iterations 10
Cbc0038I Pass  32: suminf.    0.34683 (3) obj. -26065.5 iterations 8
Cbc0038I Pass  33: suminf.    1.28089 (4) obj. -26065.5 iterations 14
Cbc0038I Pass  34: suminf.    1.12289 (3) obj. -26234.3 iterations 6
Cbc0038I Pass  35: suminf.    0.34683 (3) obj. -26065.5 iterations 11
Cbc0038I Pass  36: suminf.    0.73771 (6) obj. -26065.5 iterations 12
Cbc0038I Pass  37: suminf.    0.55219 (2) obj. -26079.8 iterations 11
Cbc0038I Pass  38: suminf.    0.33410 (3) obj. -26065.5 iterations 10
Cbc0038I Pass  39: suminf.    0.33410 (3) obj. -26065.5 iterations 7
Cbc0038I Pass  40: suminf.    1.19524 (4) obj. -26065.5 iterations 16
Cbc0038I Pass  41: suminf.    1.45712 (4) obj. -26065.5 iterations 10
Cbc0038I Pass  42: suminf.    1.39942 (4) obj. -26065.5 iterations 8
Cbc0038I Pass  43: suminf.    1.44388 (6) obj. -26065.5 iterations 9
Cbc0038I Pass  44: suminf.    1.39942 (4) obj. -26065.5 iterations 7
Cbc0038I Pass  45: suminf.    2.68602 (7) obj. -26065.5 iterations 9
Cbc0038I Pass  46: suminf.    3.49363 (11) obj. -26065.5 iterations 6
Cbc0038I Pass  47: suminf.    3.09892 (11) obj. -26065.5 iterations 5
Cbc0038I Pass  48: suminf.    2.41592 (8) obj. -26065.5 iterations 12
Cbc0038I Pass  49: suminf.    1.46837 (5) obj. -26065.5 iterations 6
Cbc0038I Pass  50: suminf.    1.46837 (5) obj. -26065.5 iterations 4
Cbc0038I Pass  51: suminf.    1.13430 (4) obj. -26065.5 iterations 9
Cbc0038I Pass  52: suminf.    0.51833 (4) obj. -26065.5 iterations 11
Cbc0038I Pass  53: suminf.    1.43201 (5) obj. -26065.5 iterations 5
Cbc0038I Pass  54: suminf.    1.43201 (5) obj. -26065.5 iterations 4
Cbc0038I Pass  55: suminf.    1.35944 (5) obj. -26065.5 iterations 10
Cbc0038I Pass  56: suminf.    1.02410 (3) obj. -26384.4 iterations 11
Cbc0038I Pass  57: suminf.    0.59163 (3) obj. -26065.5 iterations 8
Cbc0038I Pass  58: suminf.    0.59163 (3) obj. -26065.5 iterations 0
Cbc0038I Pass  59: suminf.    1.39403 (4) obj. -26065.5 iterations 10
Cbc0038I Pass  60: suminf.    0.88372 (2) obj. -26278.2 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 82 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25893.4 - took 0.02 seconds
Cbc0012I Integer solution of -25893.408 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 150 rows 82 columns, reduced to 9 rows 10 columns
Cbc0031I 6 added rows had average density of 19.666667
Cbc0013I At root node, 6 cuts changed objective from -26754.106 to -26108.645 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 80.5 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25893.408, took 94 iterations and 2 nodes (0.18 seconds)
Cbc0032I Strong branching done 10 times (68 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-91) rows, 125 (-77) columns and 2222 (-3431) elements
Clp1000I sum of infeasibilities 8.34056e-07 - average 7.38103e-09, 113 fixed columns
Coin0506I Presolve 12 (-101) rows, 12 (-113) columns and 44 (-2178) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 26730.106
Clp0000I Optimal - objective value 26730.106
Coin0511I After Postsolve, objective 26730.106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0557381 - largest nonzero change 2.398299e-05 ( 0.002398299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 26798.834
Clp0000I Optimal - objective value 26798.834
Clp0000I Optimal - objective value 26798.834
Coin0511I After Postsolve, objective 26798.834, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26798.83352 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 125 columns (125 integer (125 of which binary)) and 2224 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.614%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.54797
Cbc0038I Pass   1: suminf.    3.86640 (32) obj. -24249.7 iterations 23
Cbc0038I Pass   2: suminf.    3.86640 (32) obj. -24249.7 iterations 0
Cbc0038I Pass   3: suminf.    0.82147 (13) obj. -21537.2 iterations 24
Cbc0038I Solution found of -21525
Cbc0038I Rounding solution of -22317.9 is better than previous of -21525

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 125 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -22317.9 to -25531 (0.04 seconds)
Cbc0038I Round again with cutoff of -25657.2
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.82368 (38) obj. -25657.2 iterations 6
Cbc0038I Pass   5: suminf.    4.57169 (37) obj. -25657.2 iterations 6
Cbc0038I Pass   6: suminf.    2.71667 (25) obj. -25657.2 iterations 12
Cbc0038I Pass   7: suminf.    0.15003 (3) obj. -25657.2 iterations 22
Cbc0038I Pass   8: suminf.    0.12000 (1) obj. -25866.5 iterations 4
Cbc0038I Pass   9: suminf.    0.04515 (1) obj. -25657.2 iterations 2
Cbc0038I Pass  10: suminf.    3.08453 (17) obj. -25657.2 iterations 26
Cbc0038I Pass  11: suminf.    1.37531 (11) obj. -25657.2 iterations 17
Cbc0038I Pass  12: suminf.    3.63528 (19) obj. -25657.2 iterations 23
Cbc0038I Pass  13: suminf.    2.94976 (17) obj. -25657.2 iterations 14
Cbc0038I Pass  14: suminf.    2.71144 (18) obj. -25657.2 iterations 7
Cbc0038I Pass  15: suminf.    0.44476 (3) obj. -25657.2 iterations 23
Cbc0038I Pass  16: suminf.    0.22923 (1) obj. -25657.2 iterations 14
Cbc0038I Pass  17: suminf.    0.36000 (1) obj. -25743.6 iterations 7
Cbc0038I Pass  18: suminf.    0.32912 (1) obj. -25657.2 iterations 2
Cbc0038I Pass  19: suminf.    1.24623 (14) obj. -25657.2 iterations 23
Cbc0038I Pass  20: suminf.    1.20348 (9) obj. -25657.2 iterations 8
Cbc0038I Pass  21: suminf.    0.88372 (2) obj. -26272.2 iterations 23
Cbc0038I Pass  22: suminf.    0.32948 (1) obj. -25657.2 iterations 6
Cbc0038I Pass  23: suminf.    0.36000 (1) obj. -25742.6 iterations 3
Cbc0038I Pass  24: suminf.    1.21146 (8) obj. -25657.2 iterations 23
Cbc0038I Pass  25: suminf.    0.92240 (6) obj. -25657.2 iterations 19
Cbc0038I Pass  26: suminf.    0.36000 (1) obj. -25741.6 iterations 7
Cbc0038I Pass  27: suminf.    0.32984 (1) obj. -25657.2 iterations 1
Cbc0038I Pass  28: suminf.    1.95341 (16) obj. -25657.2 iterations 23
Cbc0038I Pass  29: suminf.    1.49103 (13) obj. -25657.2 iterations 24
Cbc0038I Pass  30: suminf.    0.40348 (2) obj. -25742.5 iterations 15
Cbc0038I Pass  31: suminf.    0.37297 (2) obj. -25657.2 iterations 1
Cbc0038I Pass  32: suminf.    0.36000 (1) obj. -25741.6 iterations 3
Cbc0038I Pass  33: suminf.    0.32984 (1) obj. -25657.2 iterations 1
Cbc0038I Rounding solution of -25893.4 is better than previous of -25531

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 125 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -26073.4
Cbc0038I Reduced cost fixing fixed 42 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.62116 (42) obj. -26073.4 iterations 6
Cbc0038I Pass  34: suminf.    5.03602 (40) obj. -26073.4 iterations 8
Cbc0038I Pass  35: suminf.    2.01892 (18) obj. -26073.4 iterations 34
Cbc0038I Pass  36: suminf.    0.38663 (5) obj. -26073.4 iterations 30
Cbc0038I Pass  37: suminf.    0.38195 (10) obj. -26073.4 iterations 6
Cbc0038I Pass  38: suminf.    2.26149 (8) obj. -26073.4 iterations 25
Cbc0038I Pass  39: suminf.    1.16657 (5) obj. -26073.4 iterations 6
Cbc0038I Pass  40: suminf.    1.08135 (4) obj. -26073.4 iterations 8
Cbc0038I Pass  41: suminf.    1.13514 (4) obj. -26073.4 iterations 9
Cbc0038I Pass  42: suminf.    1.61078 (13) obj. -26073.4 iterations 20
Cbc0038I Pass  43: suminf.    1.55950 (12) obj. -26073.4 iterations 7
Cbc0038I Pass  44: suminf.    0.67743 (4) obj. -26073.4 iterations 18
Cbc0038I Pass  45: suminf.    0.65363 (4) obj. -26073.4 iterations 14
Cbc0038I Pass  46: suminf.    1.33429 (9) obj. -26073.4 iterations 15
Cbc0038I Pass  47: suminf.    1.27883 (8) obj. -26073.4 iterations 8
Cbc0038I Pass  48: suminf.    0.97536 (3) obj. -26073.4 iterations 10
Cbc0038I Pass  49: suminf.    0.80299 (4) obj. -26073.4 iterations 6
Cbc0038I Pass  50: suminf.    1.91469 (13) obj. -26073.4 iterations 27
Cbc0038I Pass  51: suminf.    1.83387 (14) obj. -26073.4 iterations 11
Cbc0038I Pass  52: suminf.    1.79504 (7) obj. -26073.4 iterations 21
Cbc0038I Pass  53: suminf.    1.79504 (7) obj. -26073.4 iterations 0
Cbc0038I Pass  54: suminf.    2.47329 (7) obj. -26073.4 iterations 16
Cbc0038I Pass  55: suminf.    1.41010 (5) obj. -26073.4 iterations 6
Cbc0038I Pass  56: suminf.    0.55099 (4) obj. -26073.4 iterations 8
Cbc0038I Pass  57: suminf.    1.09325 (4) obj. -26073.4 iterations 9
Cbc0038I Pass  58: suminf.    1.58742 (15) obj. -26073.4 iterations 24
Cbc0038I Pass  59: suminf.    1.58742 (15) obj. -26073.4 iterations 6
Cbc0038I Pass  60: suminf.    1.03193 (4) obj. -26073.4 iterations 20
Cbc0038I Pass  61: suminf.    0.46092 (6) obj. -26073.4 iterations 10
Cbc0038I Pass  62: suminf.    0.43870 (4) obj. -26073.4 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 125 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -25893.4 - took 0.06 seconds
Cbc0012I Integer solution of -25893.408 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 113 rows 125 columns, reduced to 10 rows 11 columns
Cbc0031I 13 added rows had average density of 18.615385
Cbc0013I At root node, 13 cuts changed objective from -26760.325 to -26074.216 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 87 row cuts average 3.4 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25893.408, took 152 iterations and 2 nodes (0.12 seconds)
Cbc0032I Strong branching done 28 times (187 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 0, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 150 (-55) rows, 82 (-21) columns and 457 (-146) elements
Clp1000I sum of infeasibilities 1.04009e-06 - average 6.93392e-09, 73 fixed columns
Coin0506I Presolve 9 (-141) rows, 9 (-73) columns and 30 (-427) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 26754.106
Clp0000I Optimal - objective value 26754.106
Coin0511I After Postsolve, objective 26754.106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4107639 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 26754.106
Clp0000I Optimal - objective value 26754.106
Clp0000I Optimal - objective value 26754.106
Coin0511I After Postsolve, objective 26754.106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26754.10557 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 150 rows, 82 columns (81 integer (81 of which binary)) and 457 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.094%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.60154
Cbc0038I Pass   1: suminf.    0.12000 (1) obj. -25866.5 iterations 28
Cbc0038I Solution found of -25531
Cbc0038I Relaxing continuous gives -25531
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 82 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -25653.3
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.12000 (1) obj. -25866.5 iterations 0
Cbc0038I Pass   3: suminf.    0.04374 (1) obj. -25653.3 iterations 6
Cbc0038I Pass   4: suminf.    1.68384 (7) obj. -25653.3 iterations 18
Cbc0038I Pass   5: suminf.    1.58583 (7) obj. -25653.3 iterations 6
Cbc0038I Pass   6: suminf.    2.93505 (8) obj. -25653.3 iterations 19
Cbc0038I Pass   7: suminf.    1.64430 (5) obj. -25653.3 iterations 6
Cbc0038I Pass   8: suminf.    1.64430 (5) obj. -25653.3 iterations 0
Cbc0038I Pass   9: suminf.    0.68112 (3) obj. -25653.3 iterations 10
Cbc0038I Pass  10: suminf.    0.41660 (3) obj. -25653.3 iterations 4
Cbc0038I Pass  11: suminf.    1.32512 (4) obj. -25653.3 iterations 8
Cbc0038I Pass  12: suminf.    1.32512 (4) obj. -25653.3 iterations 0
Cbc0038I Pass  13: suminf.    0.64240 (3) obj. -25653.3 iterations 13
Cbc0038I Pass  14: suminf.    0.64240 (3) obj. -25653.3 iterations 0
Cbc0038I Pass  15: suminf.    0.88109 (4) obj. -25653.3 iterations 7
Cbc0038I Pass  16: suminf.    0.17143 (1) obj. -25886.9 iterations 2
Cbc0038I Pass  17: suminf.    2.09830 (5) obj. -25653.3 iterations 16
Cbc0038I Pass  18: suminf.    1.91310 (5) obj. -25653.3 iterations 9
Cbc0038I Pass  19: suminf.    1.14175 (3) obj. -25880.9 iterations 15
Cbc0038I Pass  20: suminf.    1.14175 (3) obj. -25880.9 iterations 0
Cbc0038I Pass  21: suminf.    1.21123 (3) obj. -25653.3 iterations 8
Cbc0038I Pass  22: suminf.    0.60414 (4) obj. -25653.3 iterations 3
Cbc0038I Pass  23: suminf.    1.73499 (4) obj. -25653.3 iterations 8
Cbc0038I Pass  24: suminf.    1.34175 (7) obj. -25653.3 iterations 10
Cbc0038I Pass  25: suminf.    1.34175 (7) obj. -25653.3 iterations 4
Cbc0038I Pass  26: suminf.    2.47873 (7) obj. -25653.3 iterations 11
Cbc0038I Pass  27: suminf.    0.66878 (4) obj. -25653.3 iterations 9
Cbc0038I Pass  28: suminf.    0.64240 (3) obj. -25653.3 iterations 9
Cbc0038I Pass  29: suminf.    0.88109 (4) obj. -25653.3 iterations 7
Cbc0038I Pass  30: suminf.    0.17143 (1) obj. -25886.9 iterations 2
Cbc0038I Pass  31: suminf.    0.59562 (5) obj. -25653.3 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 82 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -25531 to -25893.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -26065.5
Cbc0038I Reduced cost fixing fixed 42 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.34683 (3) obj. -26065.5 iterations 10
Cbc0038I Pass  32: suminf.    0.34683 (3) obj. -26065.5 iterations 8
Cbc0038I Pass  33: suminf.    1.28089 (4) obj. -26065.5 iterations 14
Cbc0038I Pass  34: suminf.    1.12289 (3) obj. -26234.3 iterations 6
Cbc0038I Pass  35: suminf.    0.34683 (3) obj. -26065.5 iterations 11
Cbc0038I Pass  36: suminf.    0.73771 (6) obj. -26065.5 iterations 12
Cbc0038I Pass  37: suminf.    0.55219 (2) obj. -26079.8 iterations 11
Cbc0038I Pass  38: suminf.    0.33410 (3) obj. -26065.5 iterations 10
Cbc0038I Pass  39: suminf.    0.33410 (3) obj. -26065.5 iterations 7
Cbc0038I Pass  40: suminf.    1.19524 (4) obj. -26065.5 iterations 16
Cbc0038I Pass  41: suminf.    1.45712 (4) obj. -26065.5 iterations 10
Cbc0038I Pass  42: suminf.    1.39942 (4) obj. -26065.5 iterations 8
Cbc0038I Pass  43: suminf.    1.44388 (6) obj. -26065.5 iterations 9
Cbc0038I Pass  44: suminf.    1.39942 (4) obj. -26065.5 iterations 7
Cbc0038I Pass  45: suminf.    2.68602 (7) obj. -26065.5 iterations 9
Cbc0038I Pass  46: suminf.    3.49363 (11) obj. -26065.5 iterations 6
Cbc0038I Pass  47: suminf.    3.09892 (11) obj. -26065.5 iterations 5
Cbc0038I Pass  48: suminf.    2.41592 (8) obj. -26065.5 iterations 12
Cbc0038I Pass  49: suminf.    1.46837 (5) obj. -26065.5 iterations 6
Cbc0038I Pass  50: suminf.    1.46837 (5) obj. -26065.5 iterations 4
Cbc0038I Pass  51: suminf.    1.13430 (4) obj. -26065.5 iterations 9
Cbc0038I Pass  52: suminf.    0.51833 (4) obj. -26065.5 iterations 11
Cbc0038I Pass  53: suminf.    1.43201 (5) obj. -26065.5 iterations 5
Cbc0038I Pass  54: suminf.    1.43201 (5) obj. -26065.5 iterations 4
Cbc0038I Pass  55: suminf.    1.35944 (5) obj. -26065.5 iterations 10
Cbc0038I Pass  56: suminf.    1.02410 (3) obj. -26384.4 iterations 11
Cbc0038I Pass  57: suminf.    0.59163 (3) obj. -26065.5 iterations 8
Cbc0038I Pass  58: suminf.    0.59163 (3) obj. -26065.5 iterations 0
Cbc0038I Pass  59: suminf.    1.39403 (4) obj. -26065.5 iterations 10
Cbc0038I Pass  60: suminf.    0.88372 (2) obj. -26278.2 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 150 rows 82 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25893.4 - took 0.02 seconds
Cbc0012I Integer solution of -25893.408 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 150 rows 82 columns, reduced to 9 rows 10 columns
Cbc0031I 6 added rows had average density of 19.666667
Cbc0013I At root node, 6 cuts changed objective from -26754.106 to -26108.645 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 80.5 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25893.408, took 94 iterations and 2 nodes (0.19 seconds)
Cbc0032I Strong branching done 10 times (68 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-92) rows, 125 (-78) columns and 2222 (-3432) elements
Clp1000I sum of infeasibilities 8.34056e-07 - average 7.38103e-09, 113 fixed columns
Coin0506I Presolve 12 (-101) rows, 12 (-113) columns and 44 (-2178) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 26730.106
Clp0000I Optimal - objective value 26730.106
Coin0511I After Postsolve, objective 26730.106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0557381 - largest nonzero change 2.398299e-05 ( 0.002398299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 26798.834
Clp0000I Optimal - objective value 26798.834
Clp0000I Optimal - objective value 26798.834
Coin0511I After Postsolve, objective 26798.834, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26798.83352 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 125 columns (125 integer (125 of which binary)) and 2224 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.614%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.54797
Cbc0038I Pass   1: suminf.    3.86640 (32) obj. -24249.7 iterations 23
Cbc0038I Pass   2: suminf.    3.86640 (32) obj. -24249.7 iterations 0
Cbc0038I Pass   3: suminf.    0.82147 (13) obj. -21537.2 iterations 24
Cbc0038I Solution found of -21525
Cbc0038I Rounding solution of -22317.9 is better than previous of -21525

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 125 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -22317.9 to -25531 (0.05 seconds)
Cbc0038I Round again with cutoff of -25657.2
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.82368 (38) obj. -25657.2 iterations 6
Cbc0038I Pass   5: suminf.    4.57169 (37) obj. -25657.2 iterations 6
Cbc0038I Pass   6: suminf.    2.71667 (25) obj. -25657.2 iterations 12
Cbc0038I Pass   7: suminf.    0.15003 (3) obj. -25657.2 iterations 22
Cbc0038I Pass   8: suminf.    0.12000 (1) obj. -25866.5 iterations 4
Cbc0038I Pass   9: suminf.    0.04515 (1) obj. -25657.2 iterations 2
Cbc0038I Pass  10: suminf.    3.08453 (17) obj. -25657.2 iterations 26
Cbc0038I Pass  11: suminf.    1.37531 (11) obj. -25657.2 iterations 17
Cbc0038I Pass  12: suminf.    3.63528 (19) obj. -25657.2 iterations 23
Cbc0038I Pass  13: suminf.    2.94976 (17) obj. -25657.2 iterations 14
Cbc0038I Pass  14: suminf.    2.71144 (18) obj. -25657.2 iterations 7
Cbc0038I Pass  15: suminf.    0.44476 (3) obj. -25657.2 iterations 23
Cbc0038I Pass  16: suminf.    0.22923 (1) obj. -25657.2 iterations 14
Cbc0038I Pass  17: suminf.    0.36000 (1) obj. -25743.6 iterations 7
Cbc0038I Pass  18: suminf.    0.32912 (1) obj. -25657.2 iterations 2
Cbc0038I Pass  19: suminf.    1.24623 (14) obj. -25657.2 iterations 23
Cbc0038I Pass  20: suminf.    1.20348 (9) obj. -25657.2 iterations 8
Cbc0038I Pass  21: suminf.    0.88372 (2) obj. -26272.2 iterations 23
Cbc0038I Pass  22: suminf.    0.32948 (1) obj. -25657.2 iterations 6
Cbc0038I Pass  23: suminf.    0.36000 (1) obj. -25742.6 iterations 3
Cbc0038I Pass  24: suminf.    1.21146 (8) obj. -25657.2 iterations 23
Cbc0038I Pass  25: suminf.    0.92240 (6) obj. -25657.2 iterations 19
Cbc0038I Pass  26: suminf.    0.36000 (1) obj. -25741.6 iterations 7
Cbc0038I Pass  27: suminf.    0.32984 (1) obj. -25657.2 iterations 1
Cbc0038I Pass  28: suminf.    1.95341 (16) obj. -25657.2 iterations 23
Cbc0038I Pass  29: suminf.    1.49103 (13) obj. -25657.2 iterations 24
Cbc0038I Pass  30: suminf.    0.40348 (2) obj. -25742.5 iterations 15
Cbc0038I Pass  31: suminf.    0.37297 (2) obj. -25657.2 iterations 1
Cbc0038I Pass  32: suminf.    0.36000 (1) obj. -25741.6 iterations 3
Cbc0038I Pass  33: suminf.    0.32984 (1) obj. -25657.2 iterations 1
Cbc0038I Rounding solution of -25893.4 is better than previous of -25531

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 125 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -26073.4
Cbc0038I Reduced cost fixing fixed 42 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.62116 (42) obj. -26073.4 iterations 6
Cbc0038I Pass  34: suminf.    5.03602 (40) obj. -26073.4 iterations 8
Cbc0038I Pass  35: suminf.    2.01892 (18) obj. -26073.4 iterations 34
Cbc0038I Pass  36: suminf.    0.38663 (5) obj. -26073.4 iterations 30
Cbc0038I Pass  37: suminf.    0.38195 (10) obj. -26073.4 iterations 6
Cbc0038I Pass  38: suminf.    2.26149 (8) obj. -26073.4 iterations 25
Cbc0038I Pass  39: suminf.    1.16657 (5) obj. -26073.4 iterations 6
Cbc0038I Pass  40: suminf.    1.08135 (4) obj. -26073.4 iterations 8
Cbc0038I Pass  41: suminf.    1.13514 (4) obj. -26073.4 iterations 9
Cbc0038I Pass  42: suminf.    1.61078 (13) obj. -26073.4 iterations 20
Cbc0038I Pass  43: suminf.    1.55950 (12) obj. -26073.4 iterations 7
Cbc0038I Pass  44: suminf.    0.67743 (4) obj. -26073.4 iterations 18
Cbc0038I Pass  45: suminf.    0.65363 (4) obj. -26073.4 iterations 14
Cbc0038I Pass  46: suminf.    1.33429 (9) obj. -26073.4 iterations 15
Cbc0038I Pass  47: suminf.    1.27883 (8) obj. -26073.4 iterations 8
Cbc0038I Pass  48: suminf.    0.97536 (3) obj. -26073.4 iterations 10
Cbc0038I Pass  49: suminf.    0.80299 (4) obj. -26073.4 iterations 6
Cbc0038I Pass  50: suminf.    1.91469 (13) obj. -26073.4 iterations 27
Cbc0038I Pass  51: suminf.    1.83387 (14) obj. -26073.4 iterations 11
Cbc0038I Pass  52: suminf.    1.79504 (7) obj. -26073.4 iterations 21
Cbc0038I Pass  53: suminf.    1.79504 (7) obj. -26073.4 iterations 0
Cbc0038I Pass  54: suminf.    2.47329 (7) obj. -26073.4 iterations 16
Cbc0038I Pass  55: suminf.    1.41010 (5) obj. -26073.4 iterations 6
Cbc0038I Pass  56: suminf.    0.55099 (4) obj. -26073.4 iterations 8
Cbc0038I Pass  57: suminf.    1.09325 (4) obj. -26073.4 iterations 9
Cbc0038I Pass  58: suminf.    1.58742 (15) obj. -26073.4 iterations 24
Cbc0038I Pass  59: suminf.    1.58742 (15) obj. -26073.4 iterations 6
Cbc0038I Pass  60: suminf.    1.03193 (4) obj. -26073.4 iterations 20
Cbc0038I Pass  61: suminf.    0.46092 (6) obj. -26073.4 iterations 10
Cbc0038I Pass  62: suminf.    0.43870 (4) obj. -26073.4 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 125 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -25893.4 - took 0.07 seconds
Cbc0012I Integer solution of -25893.408 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 113 rows 125 columns, reduced to 10 rows 11 columns
Cbc0031I 13 added rows had average density of 18.615385
Cbc0013I At root node, 13 cuts changed objective from -26760.325 to -26074.216 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 87 row cuts average 3.4 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25893.408, took 152 iterations and 2 nodes (0.15 seconds)
Cbc0032I Strong branching done 28 times (187 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 0, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

