Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 120 (-35) rows, 68 (-10) columns and 369 (-84) elements
Clp1000I sum of infeasibilities 1.03256e-06 - average 8.60465e-09, 61 fixed columns
Coin0506I Presolve 5 (-115) rows, 6 (-62) columns and 18 (-351) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 13513.45
Clp0000I Optimal - objective value 13513.45
Coin0511I After Postsolve, objective 13513.45, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23170732 - largest nonzero change 0 ( 0%) - largest zero change 2.9072999e-05
Clp0000I Optimal - objective value 13513.45
Clp0000I Optimal - objective value 13513.45
Clp0000I Optimal - objective value 13513.45
Coin0511I After Postsolve, objective 13513.45, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13513.44968 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 68 columns (67 integer (67 of which binary)) and 388 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.653%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.461146
Cbc0038I Solution found of -12372.5
Cbc0038I Relaxing continuous gives -12372.5
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -12486.6
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.02781 (1) obj. -12486.6 iterations 19
Cbc0038I Pass   2: suminf.    0.21622 (1) obj. -13259.5 iterations 2
Cbc0038I Pass   3: suminf.    0.57046 (3) obj. -12486.6 iterations 9
Cbc0038I Pass   4: suminf.    0.09397 (1) obj. -12486.6 iterations 15
Cbc0038I Pass   5: suminf.    0.13514 (1) obj. -12655.5 iterations 2
Cbc0038I Pass   6: suminf.    0.53176 (2) obj. -12486.6 iterations 4
Cbc0038I Pass   7: suminf.    0.53176 (2) obj. -12486.6 iterations 1
Cbc0038I Pass   8: suminf.    0.51889 (2) obj. -12486.6 iterations 7
Cbc0038I Pass   9: suminf.    0.69482 (4) obj. -12486.6 iterations 15
Cbc0038I Pass  10: suminf.    0.69482 (4) obj. -12486.6 iterations 1
Cbc0038I Pass  11: suminf.    1.64199 (4) obj. -12486.6 iterations 3
Cbc0038I Pass  12: suminf.    0.91195 (3) obj. -12964.1 iterations 8
Cbc0038I Pass  13: suminf.    0.57366 (2) obj. -12486.6 iterations 13
Cbc0038I Pass  14: suminf.    0.48649 (1) obj. -12732.1 iterations 4
Cbc0038I Pass  15: suminf.    0.45366 (1) obj. -12486.6 iterations 3
Cbc0038I Pass  16: suminf.    0.43418 (2) obj. -12486.6 iterations 14
Cbc0038I Pass  17: suminf.    0.10816 (1) obj. -12486.6 iterations 11
Cbc0038I Pass  18: suminf.    0.13514 (1) obj. -12597.2 iterations 3
Cbc0038I Pass  19: suminf.    0.65016 (3) obj. -12486.6 iterations 12
Cbc0038I Pass  20: suminf.    0.25314 (2) obj. -12486.6 iterations 14
Cbc0038I Pass  21: suminf.    0.62313 (3) obj. -12486.6 iterations 10
Cbc0038I Pass  22: suminf.    0.33541 (2) obj. -12486.6 iterations 6
Cbc0038I Pass  23: suminf.    1.49764 (5) obj. -12486.6 iterations 11
Cbc0038I Pass  24: suminf.    0.52605 (2) obj. -12486.6 iterations 16
Cbc0038I Pass  25: suminf.    0.36667 (1) obj. -12816.3 iterations 7
Cbc0038I Pass  26: suminf.    0.45366 (1) obj. -12486.6 iterations 4
Cbc0038I Pass  27: suminf.    0.48649 (1) obj. -12732.1 iterations 3
Cbc0038I Pass  28: suminf.    0.27051 (2) obj. -12561.9 iterations 6
Cbc0038I Pass  29: suminf.    0.22954 (1) obj. -12486.6 iterations 7
Cbc0038I Pass  30: suminf.    0.24324 (1) obj. -12542.8 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -12372.5 to -13060.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -13151.4
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.18986 (1) obj. -13151.4 iterations 0
Cbc0038I Pass  31: suminf.    0.21622 (1) obj. -13259.5 iterations 2
Cbc0038I Pass  32: suminf.    0.22831 (2) obj. -13151.4 iterations 4
Cbc0038I Pass  33: suminf.    0.96910 (2) obj. -13151.4 iterations 7
Cbc0038I Pass  34: suminf.    0.84860 (3) obj. -13183.7 iterations 7
Cbc0038I Pass  35: suminf.    0.72053 (5) obj. -13151.4 iterations 11
Cbc0038I Pass  36: suminf.    0.72053 (5) obj. -13151.4 iterations 3
Cbc0038I Pass  37: suminf.    1.70889 (4) obj. -13151.4 iterations 8
Cbc0038I Pass  38: suminf.    1.06031 (5) obj. -13151.4 iterations 13
Cbc0038I Pass  39: suminf.    0.35224 (2) obj. -13151.4 iterations 12
Cbc0038I Pass  40: suminf.    0.02207 (1) obj. -13151.4 iterations 2
Cbc0038I Pass  41: suminf.    0.05405 (1) obj. -13282.6 iterations 2
Cbc0038I Pass  42: suminf.    0.86865 (4) obj. -13151.4 iterations 11
Cbc0038I Pass  43: suminf.    0.72053 (5) obj. -13151.4 iterations 8
Cbc0038I Pass  44: suminf.    1.70889 (4) obj. -13151.4 iterations 7
Cbc0038I Pass  45: suminf.    2.09298 (6) obj. -13151.4 iterations 4
Cbc0038I Pass  46: suminf.    2.09298 (6) obj. -13151.4 iterations 0
Cbc0038I Pass  47: suminf.    0.72053 (5) obj. -13151.4 iterations 7
Cbc0038I Pass  48: suminf.    0.87448 (3) obj. -13151.4 iterations 3
Cbc0038I Pass  49: suminf.    1.83345 (6) obj. -13151.4 iterations 6
Cbc0038I Pass  50: suminf.    0.72053 (5) obj. -13151.4 iterations 4
Cbc0038I Pass  51: suminf.    0.72053 (5) obj. -13151.4 iterations 0
Cbc0038I Pass  52: suminf.    1.70889 (4) obj. -13151.4 iterations 5
Cbc0038I Pass  53: suminf.    0.08333 (3) obj. -13335.1 iterations 10
Cbc0038I Pass  54: suminf.    0.02207 (1) obj. -13151.4 iterations 6
Cbc0038I Pass  55: suminf.    0.05405 (1) obj. -13282.6 iterations 2
Cbc0038I Pass  56: suminf.    0.05405 (1) obj. -13282.6 iterations 1
Cbc0038I Pass  57: suminf.    0.13441 (3) obj. -13151.4 iterations 7
Cbc0038I Pass  58: suminf.    1.02893 (4) obj. -13151.4 iterations 17
Cbc0038I Pass  59: suminf.    1.02893 (4) obj. -13151.4 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -13060.8 - took 0.02 seconds
Cbc0012I Integer solution of -13060.84 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 2 rows 2 columns
Cbc0031I 8 added rows had average density of 10.125
Cbc0013I At root node, 8 cuts changed objective from -13513.45 to -13140.479 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 49 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 48 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 66.1 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13060.84, took 176 iterations and 2 nodes (0.32 seconds)
Cbc0032I Strong branching done 16 times (104 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-61) rows, 107 (-45) columns and 1604 (-1699) elements
Clp1000I sum of infeasibilities 2.93251e-08 - average 3.15323e-10, 100 fixed columns
Coin0506I Presolve 6 (-87) rows, 7 (-100) columns and 22 (-1582) elements
Clp0029I End of values pass after 7 iterations
Clp0014I Perturbing problem by 0.001% of 0.81213232 - largest nonzero change 0 ( 0%) - largest zero change 1.5238949e-05
Clp0000I Optimal - objective value 13479.068
Clp0000I Optimal - objective value 13479.068
Coin0511I After Postsolve, objective 13479.068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4344041 - largest nonzero change 1.836629e-05 ( 0.001836629%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 13545.993
Clp0000I Optimal - objective value 13545.993
Clp0000I Optimal - objective value 13545.993
Coin0511I After Postsolve, objective 13545.993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13545.99321 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 109 columns (109 integer (109 of which binary)) and 1623 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 1.0622
Cbc0038I Pass   1: suminf.    0.48585 (17) obj. -12399.5 iterations 25
Cbc0038I Solution found of -12372.5
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -12489.3
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.51062 (18) obj. -12489.3 iterations 2
Cbc0038I Pass   3: suminf.    0.21622 (1) obj. -13259.5 iterations 25
Cbc0038I Pass   4: suminf.    0.02847 (1) obj. -12489.3 iterations 2
Cbc0038I Pass   5: suminf.    0.75287 (8) obj. -12489.3 iterations 19
Cbc0038I Pass   6: suminf.    0.28574 (6) obj. -12489.3 iterations 6
Cbc0038I Pass   7: suminf.    0.48649 (1) obj. -12726.1 iterations 7
Cbc0038I Pass   8: suminf.    0.45578 (1) obj. -12489.3 iterations 2
Cbc0038I Pass   9: suminf.    1.66872 (20) obj. -12489.3 iterations 33
Cbc0038I Pass  10: suminf.    0.71158 (11) obj. -12489.3 iterations 6
Cbc0038I Pass  11: suminf.    0.63336 (11) obj. -12944 iterations 1
Cbc0038I Pass  12: suminf.    0.36326 (1) obj. -12489.3 iterations 11
Cbc0038I Pass  13: suminf.    0.27273 (1) obj. -12931.5 iterations 1
Cbc0038I Pass  14: suminf.    1.03678 (4) obj. -12489.3 iterations 18
Cbc0038I Pass  15: suminf.    0.88418 (5) obj. -12489.3 iterations 11
Cbc0038I Pass  16: suminf.    1.67914 (4) obj. -12489.3 iterations 13
Cbc0038I Pass  17: suminf.    0.27273 (1) obj. -12936.5 iterations 9
Cbc0038I Pass  18: suminf.    0.27273 (1) obj. -12936.5 iterations 0
Cbc0038I Pass  19: suminf.    0.36428 (1) obj. -12489.3 iterations 1
Cbc0038I Pass  20: suminf.    1.46371 (8) obj. -12489.3 iterations 22
Cbc0038I Pass  21: suminf.    1.36346 (8) obj. -12489.3 iterations 5
Cbc0038I Pass  22: suminf.    1.30817 (4) obj. -12489.3 iterations 11
Cbc0038I Pass  23: suminf.    1.22094 (4) obj. -12489.3 iterations 6
Cbc0038I Pass  24: suminf.    1.69546 (6) obj. -12489.3 iterations 8
Cbc0038I Pass  25: suminf.    1.30847 (7) obj. -12489.3 iterations 3
Cbc0038I Pass  26: suminf.    1.17063 (9) obj. -12489.3 iterations 19
Cbc0038I Pass  27: suminf.    1.17063 (9) obj. -12489.3 iterations 1
Cbc0038I Pass  28: suminf.    0.69603 (3) obj. -12489.3 iterations 13
Cbc0038I Pass  29: suminf.    0.36960 (2) obj. -12760.5 iterations 2
Cbc0038I Pass  30: suminf.    0.49630 (1) obj. -12489.3 iterations 3
Cbc0038I Pass  31: suminf.    0.49630 (1) obj. -12489.3 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -12372.5 to -13060.8 (0.05 seconds)
Cbc0038I Round again with cutoff of -13156.7
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.69482 (18) obj. -13156.7 iterations 0
Cbc0038I Pass  32: suminf.    0.21622 (1) obj. -13259.5 iterations 25
Cbc0038I Pass  33: suminf.    0.19117 (1) obj. -13156.7 iterations 2
Cbc0038I Pass  34: suminf.    1.27927 (11) obj. -13156.7 iterations 18
Cbc0038I Pass  35: suminf.    0.25415 (4) obj. -13156.7 iterations 6
Cbc0038I Pass  36: suminf.    0.21622 (1) obj. -13251.5 iterations 5
Cbc0038I Pass  37: suminf.    0.19312 (1) obj. -13156.7 iterations 1
Cbc0038I Pass  38: suminf.    0.21346 (2) obj. -13156.7 iterations 7
Cbc0038I Pass  39: suminf.    0.21346 (2) obj. -13156.7 iterations 2
Cbc0038I Pass  40: suminf.    0.21622 (1) obj. -13250.5 iterations 3
Cbc0038I Pass  41: suminf.    0.19337 (1) obj. -13156.7 iterations 1
Cbc0038I Pass  42: suminf.    0.80062 (5) obj. -13156.7 iterations 6
Cbc0038I Pass  43: suminf.    0.30288 (4) obj. -13156.7 iterations 2
Cbc0038I Pass  44: suminf.    0.21622 (1) obj. -13248.5 iterations 5
Cbc0038I Pass  45: suminf.    0.19385 (1) obj. -13156.7 iterations 1
Cbc0038I Pass  46: suminf.    1.18906 (7) obj. -13156.7 iterations 15
Cbc0038I Pass  47: suminf.    0.27701 (3) obj. -13156.7 iterations 6
Cbc0038I Pass  48: suminf.    0.21622 (1) obj. -13245.5 iterations 4
Cbc0038I Pass  49: suminf.    0.19458 (1) obj. -13156.7 iterations 1
Cbc0038I Pass  50: suminf.    1.33796 (7) obj. -13156.7 iterations 16
Cbc0038I Pass  51: suminf.    0.62560 (5) obj. -13156.7 iterations 5
Cbc0038I Pass  52: suminf.    0.39401 (2) obj. -13156.7 iterations 6
Cbc0038I Pass  53: suminf.    0.19629 (1) obj. -13156.7 iterations 2
Cbc0038I Pass  54: suminf.    0.21622 (1) obj. -13238.5 iterations 2
Cbc0038I Pass  55: suminf.    0.56269 (11) obj. -13156.7 iterations 15
Cbc0038I Pass  56: suminf.    0.37298 (6) obj. -13156.7 iterations 9
Cbc0038I Pass  57: suminf.    0.21622 (1) obj. -13235.5 iterations 7
Cbc0038I Pass  58: suminf.    0.19702 (1) obj. -13156.7 iterations 2
Cbc0038I Pass  59: suminf.    0.21528 (2) obj. -13156.7 iterations 7
Cbc0038I Pass  60: suminf.    0.21622 (1) obj. -13238.5 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 109 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -13060.8 - took 0.04 seconds
Cbc0012I Integer solution of -13060.84 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 93 rows 109 columns, reduced to 2 rows 2 columns
Cbc0031I 29 added rows had average density of 3.137931
Cbc0013I At root node, 29 cuts changed objective from -13540.276 to -13179.406 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 303 row cuts average 4.5 elements, 12 column cuts (12 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 37 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 37.6 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13060.84, took 301 iterations and 2 nodes (0.23 seconds)
Cbc0032I Strong branching done 4 times (11 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 120 (-35) rows, 68 (-10) columns and 369 (-84) elements
Clp1000I sum of infeasibilities 1.03256e-06 - average 8.60465e-09, 61 fixed columns
Coin0506I Presolve 5 (-115) rows, 6 (-62) columns and 18 (-351) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 13513.45
Clp0000I Optimal - objective value 13513.45
Coin0511I After Postsolve, objective 13513.45, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23170732 - largest nonzero change 0 ( 0%) - largest zero change 2.9072999e-05
Clp0000I Optimal - objective value 13513.45
Clp0000I Optimal - objective value 13513.45
Clp0000I Optimal - objective value 13513.45
Coin0511I After Postsolve, objective 13513.45, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13513.44968 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 68 columns (67 integer (67 of which binary)) and 388 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.653%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.461146
Cbc0038I Solution found of -12372.5
Cbc0038I Relaxing continuous gives -12372.5
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -12486.6
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.02781 (1) obj. -12486.6 iterations 19
Cbc0038I Pass   2: suminf.    0.21622 (1) obj. -13259.5 iterations 2
Cbc0038I Pass   3: suminf.    0.57046 (3) obj. -12486.6 iterations 9
Cbc0038I Pass   4: suminf.    0.09397 (1) obj. -12486.6 iterations 15
Cbc0038I Pass   5: suminf.    0.13514 (1) obj. -12655.5 iterations 2
Cbc0038I Pass   6: suminf.    0.53176 (2) obj. -12486.6 iterations 4
Cbc0038I Pass   7: suminf.    0.53176 (2) obj. -12486.6 iterations 1
Cbc0038I Pass   8: suminf.    0.51889 (2) obj. -12486.6 iterations 7
Cbc0038I Pass   9: suminf.    0.69482 (4) obj. -12486.6 iterations 15
Cbc0038I Pass  10: suminf.    0.69482 (4) obj. -12486.6 iterations 1
Cbc0038I Pass  11: suminf.    1.64199 (4) obj. -12486.6 iterations 3
Cbc0038I Pass  12: suminf.    0.91195 (3) obj. -12964.1 iterations 8
Cbc0038I Pass  13: suminf.    0.57366 (2) obj. -12486.6 iterations 13
Cbc0038I Pass  14: suminf.    0.48649 (1) obj. -12732.1 iterations 4
Cbc0038I Pass  15: suminf.    0.45366 (1) obj. -12486.6 iterations 3
Cbc0038I Pass  16: suminf.    0.43418 (2) obj. -12486.6 iterations 14
Cbc0038I Pass  17: suminf.    0.10816 (1) obj. -12486.6 iterations 11
Cbc0038I Pass  18: suminf.    0.13514 (1) obj. -12597.2 iterations 3
Cbc0038I Pass  19: suminf.    0.65016 (3) obj. -12486.6 iterations 12
Cbc0038I Pass  20: suminf.    0.25314 (2) obj. -12486.6 iterations 14
Cbc0038I Pass  21: suminf.    0.62313 (3) obj. -12486.6 iterations 10
Cbc0038I Pass  22: suminf.    0.33541 (2) obj. -12486.6 iterations 6
Cbc0038I Pass  23: suminf.    1.49764 (5) obj. -12486.6 iterations 11
Cbc0038I Pass  24: suminf.    0.52605 (2) obj. -12486.6 iterations 16
Cbc0038I Pass  25: suminf.    0.36667 (1) obj. -12816.3 iterations 7
Cbc0038I Pass  26: suminf.    0.45366 (1) obj. -12486.6 iterations 4
Cbc0038I Pass  27: suminf.    0.48649 (1) obj. -12732.1 iterations 3
Cbc0038I Pass  28: suminf.    0.27051 (2) obj. -12561.9 iterations 6
Cbc0038I Pass  29: suminf.    0.22954 (1) obj. -12486.6 iterations 7
Cbc0038I Pass  30: suminf.    0.24324 (1) obj. -12542.8 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -12372.5 to -13060.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -13151.4
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.18986 (1) obj. -13151.4 iterations 0
Cbc0038I Pass  31: suminf.    0.21622 (1) obj. -13259.5 iterations 2
Cbc0038I Pass  32: suminf.    0.22831 (2) obj. -13151.4 iterations 4
Cbc0038I Pass  33: suminf.    0.96910 (2) obj. -13151.4 iterations 7
Cbc0038I Pass  34: suminf.    0.84860 (3) obj. -13183.7 iterations 7
Cbc0038I Pass  35: suminf.    0.72053 (5) obj. -13151.4 iterations 11
Cbc0038I Pass  36: suminf.    0.72053 (5) obj. -13151.4 iterations 3
Cbc0038I Pass  37: suminf.    1.70889 (4) obj. -13151.4 iterations 8
Cbc0038I Pass  38: suminf.    1.06031 (5) obj. -13151.4 iterations 13
Cbc0038I Pass  39: suminf.    0.35224 (2) obj. -13151.4 iterations 12
Cbc0038I Pass  40: suminf.    0.02207 (1) obj. -13151.4 iterations 2
Cbc0038I Pass  41: suminf.    0.05405 (1) obj. -13282.6 iterations 2
Cbc0038I Pass  42: suminf.    0.86865 (4) obj. -13151.4 iterations 11
Cbc0038I Pass  43: suminf.    0.72053 (5) obj. -13151.4 iterations 8
Cbc0038I Pass  44: suminf.    1.70889 (4) obj. -13151.4 iterations 7
Cbc0038I Pass  45: suminf.    2.09298 (6) obj. -13151.4 iterations 4
Cbc0038I Pass  46: suminf.    2.09298 (6) obj. -13151.4 iterations 0
Cbc0038I Pass  47: suminf.    0.72053 (5) obj. -13151.4 iterations 7
Cbc0038I Pass  48: suminf.    0.87448 (3) obj. -13151.4 iterations 3
Cbc0038I Pass  49: suminf.    1.83345 (6) obj. -13151.4 iterations 6
Cbc0038I Pass  50: suminf.    0.72053 (5) obj. -13151.4 iterations 4
Cbc0038I Pass  51: suminf.    0.72053 (5) obj. -13151.4 iterations 0
Cbc0038I Pass  52: suminf.    1.70889 (4) obj. -13151.4 iterations 5
Cbc0038I Pass  53: suminf.    0.08333 (3) obj. -13335.1 iterations 10
Cbc0038I Pass  54: suminf.    0.02207 (1) obj. -13151.4 iterations 6
Cbc0038I Pass  55: suminf.    0.05405 (1) obj. -13282.6 iterations 2
Cbc0038I Pass  56: suminf.    0.05405 (1) obj. -13282.6 iterations 1
Cbc0038I Pass  57: suminf.    0.13441 (3) obj. -13151.4 iterations 7
Cbc0038I Pass  58: suminf.    1.02893 (4) obj. -13151.4 iterations 17
Cbc0038I Pass  59: suminf.    1.02893 (4) obj. -13151.4 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -13060.8 - took 0.02 seconds
Cbc0012I Integer solution of -13060.84 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 2 rows 2 columns
Cbc0031I 8 added rows had average density of 10.125
Cbc0013I At root node, 8 cuts changed objective from -13513.45 to -13140.479 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 49 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 48 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 66.1 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13060.84, took 176 iterations and 2 nodes (0.35 seconds)
Cbc0032I Strong branching done 16 times (104 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 106 (-47) columns and 1562 (-1742) elements
Clp1000I sum of infeasibilities 0 - average 0, 99 fixed columns
Coin0506I Presolve 6 (-86) rows, 7 (-99) columns and 22 (-1540) elements
Clp0029I End of values pass after 7 iterations
Clp0014I Perturbing problem by 0.001% of 0.81213232 - largest nonzero change 0 ( 0%) - largest zero change 1.5238949e-05
Clp0000I Optimal - objective value 13479.068
Clp0000I Optimal - objective value 13479.068
Coin0511I After Postsolve, objective 13479.068, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4420232 - largest nonzero change 2.9522154e-05 ( 0.0029522154%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 13545.993
Clp0000I Optimal - objective value 13545.993
Clp0000I Optimal - objective value 13545.993
Coin0511I After Postsolve, objective 13545.993, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 13545.99321 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 108 columns (108 integer (108 of which binary)) and 1581 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.289%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 1.07365
Cbc0038I Pass   1: suminf.    0.49505 (17) obj. -12399.5 iterations 26
Cbc0038I Pass   2: suminf.    0.13519 (7) obj. -12381.3 iterations 10
Cbc0038I Solution found of -12372.5
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -12489.3
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.51988 (18) obj. -12489.3 iterations 1
Cbc0038I Pass   4: suminf.    0.21622 (1) obj. -13259.5 iterations 23
Cbc0038I Pass   5: suminf.    0.02847 (1) obj. -12489.3 iterations 2
Cbc0038I Pass   6: suminf.    0.40194 (4) obj. -12489.3 iterations 21
Cbc0038I Pass   7: suminf.    0.23092 (4) obj. -12489.3 iterations 13
Cbc0038I Pass   8: suminf.    0.28467 (3) obj. -12489.3 iterations 6
Cbc0038I Pass   9: suminf.    0.21051 (7) obj. -12489.3 iterations 6
Cbc0038I Pass  10: suminf.    0.36706 (6) obj. -12567.5 iterations 9
Cbc0038I Pass  11: suminf.    1.42603 (12) obj. -12489.3 iterations 23
Cbc0038I Pass  12: suminf.    0.59764 (8) obj. -12489.3 iterations 4
Cbc0038I Pass  13: suminf.    0.59064 (2) obj. -12489.3 iterations 10
Cbc0038I Pass  14: suminf.    0.03188 (1) obj. -12489.3 iterations 1
Cbc0038I Pass  15: suminf.    0.21622 (1) obj. -13245.5 iterations 1
Cbc0038I Pass  16: suminf.    0.69693 (4) obj. -12489.3 iterations 14
Cbc0038I Pass  17: suminf.    0.69693 (4) obj. -12489.3 iterations 2
Cbc0038I Pass  18: suminf.    0.46837 (2) obj. -12489.3 iterations 5
Cbc0038I Pass  19: suminf.    0.09779 (1) obj. -12489.3 iterations 2
Cbc0038I Pass  20: suminf.    0.13514 (1) obj. -12642.5 iterations 1
Cbc0038I Pass  21: suminf.    0.87708 (7) obj. -12489.3 iterations 17
Cbc0038I Pass  22: suminf.    0.52977 (5) obj. -12607.2 iterations 6
Cbc0038I Pass  23: suminf.    0.16142 (4) obj. -12489.3 iterations 3
Cbc0038I Pass  24: suminf.    0.13514 (1) obj. -12639.5 iterations 4
Cbc0038I Pass  25: suminf.    0.09852 (1) obj. -12489.3 iterations 1
Cbc0038I Pass  26: suminf.    0.42248 (4) obj. -12489.3 iterations 10
Cbc0038I Pass  27: suminf.    0.11980 (2) obj. -12489.3 iterations 7
Cbc0038I Pass  28: suminf.    0.13514 (1) obj. -12638.5 iterations 2
Cbc0038I Pass  29: suminf.    0.09877 (1) obj. -12489.3 iterations 1
Cbc0038I Pass  30: suminf.    0.53459 (7) obj. -12489.3 iterations 20
Cbc0038I Pass  31: suminf.    0.20731 (5) obj. -12489.3 iterations 8
Cbc0038I Pass  32: suminf.    0.13514 (1) obj. -12630.5 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -12372.5 to -13060.8 (0.05 seconds)
Cbc0038I Round again with cutoff of -13156.7
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.70444 (18) obj. -13156.7 iterations 0
Cbc0038I Pass  33: suminf.    0.21622 (1) obj. -13259.5 iterations 23
Cbc0038I Pass  34: suminf.    0.19117 (1) obj. -13156.7 iterations 2
Cbc0038I Pass  35: suminf.    0.12995 (5) obj. -13156.7 iterations 13
Cbc0038I Pass  36: suminf.    0.12447 (4) obj. -13156.7 iterations 3
Cbc0038I Pass  37: suminf.    0.05405 (1) obj. -13271.6 iterations 4
Cbc0038I Pass  38: suminf.    0.02605 (1) obj. -13156.7 iterations 1
Cbc0038I Pass  39: suminf.    0.16592 (8) obj. -13156.7 iterations 12
Cbc0038I Pass  40: suminf.    0.14514 (4) obj. -13156.7 iterations 7
Cbc0038I Pass  41: suminf.    0.05405 (1) obj. -13264.6 iterations 4
Cbc0038I Pass  42: suminf.    0.02776 (1) obj. -13156.7 iterations 1
Cbc0038I Pass  43: suminf.    0.90703 (10) obj. -13156.7 iterations 20
Cbc0038I Pass  44: suminf.    0.90703 (10) obj. -13156.7 iterations 3
Cbc0038I Pass  45: suminf.    1.71594 (4) obj. -13156.7 iterations 14
Cbc0038I Pass  46: suminf.    0.76375 (4) obj. -13156.7 iterations 7
Cbc0038I Pass  47: suminf.    1.71594 (4) obj. -13156.7 iterations 8
Cbc0038I Pass  48: suminf.    1.06500 (5) obj. -13156.7 iterations 15
Cbc0038I Pass  49: suminf.    0.78453 (5) obj. -13156.7 iterations 9
Cbc0038I Pass  50: suminf.    1.71479 (4) obj. -13156.7 iterations 7
Cbc0038I Pass  51: suminf.    0.75985 (4) obj. -13156.7 iterations 5
Cbc0038I Pass  52: suminf.    0.71518 (8) obj. -13156.7 iterations 17
Cbc0038I Pass  53: suminf.    0.12500 (4) obj. -13156.7 iterations 6
Cbc0038I Pass  54: suminf.    0.05405 (1) obj. -13267.6 iterations 4
Cbc0038I Pass  55: suminf.    0.02703 (1) obj. -13156.7 iterations 1
Cbc0038I Pass  56: suminf.    0.41576 (8) obj. -13183 iterations 15
Cbc0038I Pass  57: suminf.    0.22789 (7) obj. -13156.7 iterations 4
Cbc0038I Pass  58: suminf.    0.05405 (1) obj. -13265.6 iterations 7
Cbc0038I Pass  59: suminf.    0.02752 (1) obj. -13156.7 iterations 1
Cbc0038I Pass  60: suminf.    0.14124 (4) obj. -13156.7 iterations 9
Cbc0038I Pass  61: suminf.    0.10909 (3) obj. -13156.7 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -13060.8 - took 0.04 seconds
Cbc0012I Integer solution of -13060.84 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 92 rows 108 columns, reduced to 2 rows 2 columns
Cbc0031I 29 added rows had average density of 6.6206897
Cbc0013I At root node, 29 cuts changed objective from -13540.256 to -13198.791 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 265 row cuts average 4.7 elements, 12 column cuts (12 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 18 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13060.84, took 270 iterations and 2 nodes (0.25 seconds)
Cbc0032I Strong branching done 52 times (195 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.25

