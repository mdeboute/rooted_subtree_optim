Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 75 (-3) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 0.000172857 - average 1.32967e-06, 14 fixed columns
Coin0506I Presolve 104 (-26) rows, 61 (-14) columns and 322 (-80) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 6.2084513 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Coin0511I After Postsolve, objective 33.142848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Coin0511I After Postsolve, objective 33.142848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.14284752 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.76408
Cbc0038I Solution found of 8.00472
Cbc0038I Relaxing continuous gives 8.00472
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 66 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 8.00472 to -9.47391 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.8409
Cbc0038I Pass   1: suminf.    3.05410 (15) obj. -11.8409 iterations 26
Cbc0038I Pass   2: suminf.    2.47876 (6) obj. -11.8409 iterations 19
Cbc0038I Pass   3: suminf.    1.09241 (5) obj. -11.8409 iterations 4
Cbc0038I Pass   4: suminf.    1.72175 (5) obj. -11.8409 iterations 9
Cbc0038I Pass   5: suminf.    1.21806 (5) obj. -11.8409 iterations 3
Cbc0038I Pass   6: suminf.    1.19514 (4) obj. -11.8409 iterations 1
Cbc0038I Pass   7: suminf.    3.03044 (7) obj. -11.8409 iterations 9
Cbc0038I Pass   8: suminf.    2.29579 (8) obj. -11.8409 iterations 4
Cbc0038I Pass   9: suminf.    2.29579 (8) obj. -11.8409 iterations 0
Cbc0038I Pass  10: suminf.    1.10142 (4) obj. -11.8409 iterations 9
Cbc0038I Pass  11: suminf.    1.04164 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  12: suminf.    1.03127 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  13: suminf.    1.44632 (4) obj. -11.8409 iterations 8
Cbc0038I Pass  14: suminf.    1.44632 (4) obj. -11.8409 iterations 1
Cbc0038I Pass  15: suminf.    3.69645 (10) obj. -11.8409 iterations 19
Cbc0038I Pass  16: suminf.    1.71762 (9) obj. -11.8409 iterations 12
Cbc0038I Pass  17: suminf.    1.59145 (9) obj. -11.8409 iterations 2
Cbc0038I Pass  18: suminf.    1.38477 (5) obj. -11.8409 iterations 1
Cbc0038I Pass  19: suminf.    1.01011 (3) obj. -11.8409 iterations 4
Cbc0038I Pass  20: suminf.    1.33207 (5) obj. -11.8409 iterations 6
Cbc0038I Pass  21: suminf.    1.97434 (6) obj. -11.8409 iterations 4
Cbc0038I Pass  22: suminf.    1.97434 (6) obj. -11.8409 iterations 0
Cbc0038I Pass  23: suminf.    1.10142 (4) obj. -11.8409 iterations 7
Cbc0038I Pass  24: suminf.    1.04164 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  25: suminf.    1.03127 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  26: suminf.    1.44632 (4) obj. -11.8409 iterations 6
Cbc0038I Pass  27: suminf.    1.44632 (4) obj. -11.8409 iterations 1
Cbc0038I Pass  28: suminf.    3.36389 (11) obj. -11.8409 iterations 29
Cbc0038I Pass  29: suminf.    2.63917 (9) obj. -11.8409 iterations 7
Cbc0038I Pass  30: suminf.    2.30397 (8) obj. -11.8409 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 76 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -9.47391 to -9.54558 (0.11 seconds)
Cbc0038I Round again with cutoff of -16.1013
Cbc0038I Pass  30: suminf.    3.98173 (17) obj. -16.1013 iterations 3
Cbc0038I Pass  31: suminf.    2.48645 (7) obj. -16.1013 iterations 20
Cbc0038I Pass  32: suminf.    1.13196 (5) obj. -16.1013 iterations 4
Cbc0038I Pass  33: suminf.    1.62840 (5) obj. -16.1013 iterations 8
Cbc0038I Pass  34: suminf.    1.62840 (5) obj. -16.1013 iterations 0
Cbc0038I Pass  35: suminf.    2.02107 (5) obj. -16.1013 iterations 3
Cbc0038I Pass  36: suminf.    1.45046 (5) obj. -16.1013 iterations 1
Cbc0038I Pass  37: suminf.    2.14590 (5) obj. -16.1013 iterations 2
Cbc0038I Pass  38: suminf.    1.74115 (5) obj. -16.1013 iterations 1
Cbc0038I Pass  39: suminf.    1.45046 (5) obj. -16.1013 iterations 3
Cbc0038I Pass  40: suminf.    4.55704 (13) obj. -16.1013 iterations 17
Cbc0038I Pass  41: suminf.    2.30193 (10) obj. -16.1013 iterations 19
Cbc0038I Pass  42: suminf.    2.27615 (9) obj. -16.1013 iterations 1
Cbc0038I Pass  43: suminf.    2.47782 (8) obj. -16.1013 iterations 10
Cbc0038I Pass  44: suminf.    2.03430 (7) obj. -16.1013 iterations 1
Cbc0038I Pass  45: suminf.    1.79040 (7) obj. -16.1013 iterations 2
Cbc0038I Pass  46: suminf.    2.40460 (7) obj. -16.1013 iterations 8
Cbc0038I Pass  47: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  48: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  49: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I Pass  50: suminf.    1.88356 (6) obj. -16.1013 iterations 0
Cbc0038I Pass  51: suminf.    2.40460 (7) obj. -16.1013 iterations 7
Cbc0038I Pass  52: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  53: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  54: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I Pass  55: suminf.    1.88356 (6) obj. -16.1013 iterations 0
Cbc0038I Pass  56: suminf.    2.40460 (7) obj. -16.1013 iterations 7
Cbc0038I Pass  57: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  58: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  59: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 76 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -9.54558 - took 0.12 seconds
Cbc0012I Integer solution of -9.5455769 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 42 columns
Cbc0031I 20 added rows had average density of 54.05
Cbc0013I At root node, 20 cuts changed objective from -33.142848 to -25.376237 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10884 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1820 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.5455769 best solution, best possible -25.376237 (0.77 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 36 rows 26 columns
Cbc0012I Integer solution of -9.5721569 found by RINS after 7503 iterations and 41 nodes (0.97 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 9 rows 14 columns
Cbc0001I Search completed - best objective -9.572156899999996, took 9316 iterations and 162 nodes (1.10 seconds)
Cbc0032I Strong branching done 1102 times (16632 iterations), fathomed 21 nodes and fixed 28 variables
Cbc0035I Maximum depth 29, 293 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-58) rows, 114 (-38) columns and 1710 (-1593) elements
Clp1000I sum of infeasibilities 6.6164e-08 - average 6.89208e-10, 53 fixed columns
Coin0506I Presolve 44 (-52) rows, 61 (-53) columns and 205 (-1505) elements
Clp0006I 0  Obj -9.8731316 Dual inf 2.0740762 (60)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 1.8439772 - largest nonzero change 1.6140545e-05 ( 0.00072896693%) - largest zero change 2.9794166e-05
Clp0000I Optimal - objective value -7.9336347
Clp0000I Optimal - objective value -7.9336347
Coin0511I After Postsolve, objective -7.9336347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.9336347 Dual inf 40.183583 (40)
Clp0014I Perturbing problem by 0.001% of 1.6873686 - largest nonzero change 2.4704122e-05 ( 0.0015420975%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 48.104978
Clp0000I Optimal - objective value 48.104978
Clp0000I Optimal - objective value 48.104978
Coin0511I After Postsolve, objective 48.104978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.10497824 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 114 columns (114 integer (114 of which binary)) and 1714 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.068%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.10355
Cbc0038I Pass   1: suminf.    1.99111 (29) obj. -36.8471 iterations 22
Cbc0038I Pass   2: suminf.    1.86652 (26) obj. -36.2586 iterations 2
Cbc0038I Pass   3: suminf.    0.83468 (15) obj. -14.6579 iterations 11
Cbc0038I Solution found of 5.18833
Cbc0038I Rounding solution of 4.42058 is better than previous of 5.18833

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 4.42058 to 1.54118 (0.02 seconds)
Cbc0038I Round again with cutoff of -2.9284
Cbc0038I Pass   4: suminf.    1.99111 (29) obj. -36.8471 iterations 0
Cbc0038I Pass   5: suminf.    1.86652 (26) obj. -36.2586 iterations 2
Cbc0038I Pass   6: suminf.    0.91943 (16) obj. -15.5731 iterations 10
Cbc0038I Pass   7: suminf.    0.18833 (1) obj. -2.9284 iterations 19
Cbc0038I Pass   8: suminf.    0.10811 (1) obj. -3.73059 iterations 1
Cbc0038I Pass   9: suminf.    2.13993 (12) obj. -2.9284 iterations 34
Cbc0038I Pass  10: suminf.    1.13317 (12) obj. -2.9284 iterations 12
Cbc0038I Pass  11: suminf.    1.02603 (3) obj. -2.9284 iterations 21
Cbc0038I Pass  12: suminf.    0.54741 (2) obj. -2.9284 iterations 5
Cbc0038I Pass  13: suminf.    0.49082 (2) obj. -3.34251 iterations 2
Cbc0038I Pass  14: suminf.    0.54741 (2) obj. -2.9284 iterations 2
Cbc0038I Pass  15: suminf.    1.55589 (19) obj. -2.9284 iterations 34
Cbc0038I Pass  16: suminf.    1.02074 (14) obj. -2.9284 iterations 11
Cbc0038I Pass  17: suminf.    1.90708 (7) obj. -2.9284 iterations 25
Cbc0038I Pass  18: suminf.    0.64055 (8) obj. -2.9284 iterations 9
Cbc0038I Pass  19: suminf.    1.19886 (8) obj. -2.9284 iterations 10
Cbc0038I Pass  20: suminf.    1.01076 (8) obj. -2.9284 iterations 7
Cbc0038I Pass  21: suminf.    1.29147 (8) obj. -2.9284 iterations 11
Cbc0038I Pass  22: suminf.    1.29147 (8) obj. -2.9284 iterations 0
Cbc0038I Pass  23: suminf.    1.19886 (8) obj. -2.9284 iterations 9
Cbc0038I Pass  24: suminf.    1.76743 (12) obj. -2.9284 iterations 25
Cbc0038I Pass  25: suminf.    0.95795 (9) obj. -4.55155 iterations 6
Cbc0038I Pass  26: suminf.    0.43032 (6) obj. -2.9284 iterations 17
Cbc0038I Pass  27: suminf.    0.43032 (6) obj. -2.9284 iterations 3
Cbc0038I Pass  28: suminf.    0.90095 (5) obj. -2.9284 iterations 10
Cbc0038I Pass  29: suminf.    0.55264 (5) obj. -3.97334 iterations 2
Cbc0038I Pass  30: suminf.    0.90706 (7) obj. -2.9284 iterations 5
Cbc0038I Pass  31: suminf.    0.70432 (5) obj. -2.9284 iterations 11
Cbc0038I Pass  32: suminf.    0.86519 (7) obj. -2.9284 iterations 5
Cbc0038I Pass  33: suminf.    0.66578 (5) obj. -2.9284 iterations 13
Cbc0038I Rounding solution of -0.0590301 is better than previous of 1.54118

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 35 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -0.0590301 to -8.75198 (0.07 seconds)
Cbc0038I Round again with cutoff of -15.6324
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.99111 (29) obj. -36.8471 iterations 0
Cbc0038I Pass  34: suminf.    1.86652 (26) obj. -36.2586 iterations 4
Cbc0038I Pass  35: suminf.    0.55689 (11) obj. -15.6324 iterations 22
Cbc0038I Pass  36: suminf.    0.50887 (11) obj. -15.6324 iterations 2
Cbc0038I Pass  37: suminf.    1.11493 (6) obj. -15.6324 iterations 14
Cbc0038I Pass  38: suminf.    1.02473 (13) obj. -15.6324 iterations 9
Cbc0038I Pass  39: suminf.    2.19192 (12) obj. -15.6324 iterations 17
Cbc0038I Pass  40: suminf.    1.13614 (10) obj. -15.6324 iterations 5
Cbc0038I Pass  41: suminf.    1.34505 (11) obj. -15.6324 iterations 5
Cbc0038I Pass  42: suminf.    1.06946 (9) obj. -15.6324 iterations 18
Cbc0038I Pass  43: suminf.    0.92825 (10) obj. -15.6324 iterations 7
Cbc0038I Pass  44: suminf.    2.00072 (12) obj. -15.6324 iterations 15
Cbc0038I Pass  45: suminf.    2.00072 (12) obj. -15.6324 iterations 0
Cbc0038I Pass  46: suminf.    3.22981 (14) obj. -15.6324 iterations 9
Cbc0038I Pass  47: suminf.    1.60867 (11) obj. -15.6324 iterations 4
Cbc0038I Pass  48: suminf.    0.92904 (11) obj. -15.6324 iterations 5
Cbc0038I Pass  49: suminf.    0.71846 (7) obj. -15.6324 iterations 3
Cbc0038I Pass  50: suminf.    0.92904 (11) obj. -15.6324 iterations 8
Cbc0038I Pass  51: suminf.    1.15154 (11) obj. -15.6324 iterations 13
Cbc0038I Pass  52: suminf.    0.85600 (14) obj. -15.6324 iterations 6
Cbc0038I Pass  53: suminf.    2.14237 (13) obj. -15.6324 iterations 19
Cbc0038I Pass  54: suminf.    1.55074 (11) obj. -15.6324 iterations 7
Cbc0038I Pass  55: suminf.    1.59954 (12) obj. -15.6324 iterations 6
Cbc0038I Pass  56: suminf.    1.59599 (11) obj. -15.6324 iterations 8
Cbc0038I Pass  57: suminf.    1.55448 (12) obj. -15.6324 iterations 6
Cbc0038I Pass  58: suminf.    1.81038 (15) obj. -15.6324 iterations 18
Cbc0038I Pass  59: suminf.    1.46876 (14) obj. -15.6324 iterations 14
Cbc0038I Pass  60: suminf.    2.14237 (13) obj. -15.6324 iterations 14
Cbc0038I Pass  61: suminf.    1.55074 (11) obj. -15.6324 iterations 7
Cbc0038I Pass  62: suminf.    1.59954 (12) obj. -15.6324 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -8.75198 - took 0.09 seconds
Cbc0012I Integer solution of -8.7519769 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 19 rows 22 columns
Cbc0031I 60 added rows had average density of 34.6
Cbc0013I At root node, 60 cuts changed objective from -43.153778 to -16.161779 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10937 row cuts average 2.0 elements, 1 column cuts (51 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1202 row cuts average 105.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 367 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1124 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 298 row cuts average 59.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 83 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.658 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.7519769 best solution, best possible -16.161779 (2.20 seconds)
Cbc0012I Integer solution of -9.4623269 found by DiveCoefficient after 5533 iterations and 17 nodes (2.68 seconds)
Cbc0012I Integer solution of -9.5542569 found by DiveCoefficient after 5588 iterations and 23 nodes (2.70 seconds)
Cbc0012I Integer solution of -9.5721569 found by rounding after 5620 iterations and 25 nodes (2.71 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 3 rows 8 columns
Cbc0038I Full problem 96 rows 114 columns, reduced to 6 rows 11 columns
Cbc0001I Search completed - best objective -9.572156899999996, took 6964 iterations and 106 nodes (2.87 seconds)
Cbc0032I Strong branching done 842 times (11933 iterations), fathomed 25 nodes and fixed 18 variables
Cbc0035I Maximum depth 16, 175 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       2.88

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 75 (-3) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 0.000172857 - average 1.32967e-06, 14 fixed columns
Coin0506I Presolve 104 (-26) rows, 61 (-14) columns and 322 (-80) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 6.2084513 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Coin0511I After Postsolve, objective 33.142848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Clp0000I Optimal - objective value 33.142848
Coin0511I After Postsolve, objective 33.142848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.14284752 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 75 columns (74 integer (74 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.130%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 8.76408
Cbc0038I Solution found of 8.00472
Cbc0038I Relaxing continuous gives 8.00472
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 66 rows 41 columns
Cbc0038I Mini branch and bound improved solution from 8.00472 to -9.47391 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.8409
Cbc0038I Pass   1: suminf.    3.05410 (15) obj. -11.8409 iterations 26
Cbc0038I Pass   2: suminf.    2.47876 (6) obj. -11.8409 iterations 19
Cbc0038I Pass   3: suminf.    1.09241 (5) obj. -11.8409 iterations 4
Cbc0038I Pass   4: suminf.    1.72175 (5) obj. -11.8409 iterations 9
Cbc0038I Pass   5: suminf.    1.21806 (5) obj. -11.8409 iterations 3
Cbc0038I Pass   6: suminf.    1.19514 (4) obj. -11.8409 iterations 1
Cbc0038I Pass   7: suminf.    3.03044 (7) obj. -11.8409 iterations 9
Cbc0038I Pass   8: suminf.    2.29579 (8) obj. -11.8409 iterations 4
Cbc0038I Pass   9: suminf.    2.29579 (8) obj. -11.8409 iterations 0
Cbc0038I Pass  10: suminf.    1.10142 (4) obj. -11.8409 iterations 9
Cbc0038I Pass  11: suminf.    1.04164 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  12: suminf.    1.03127 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  13: suminf.    1.44632 (4) obj. -11.8409 iterations 8
Cbc0038I Pass  14: suminf.    1.44632 (4) obj. -11.8409 iterations 1
Cbc0038I Pass  15: suminf.    3.69645 (10) obj. -11.8409 iterations 19
Cbc0038I Pass  16: suminf.    1.71762 (9) obj. -11.8409 iterations 12
Cbc0038I Pass  17: suminf.    1.59145 (9) obj. -11.8409 iterations 2
Cbc0038I Pass  18: suminf.    1.38477 (5) obj. -11.8409 iterations 1
Cbc0038I Pass  19: suminf.    1.01011 (3) obj. -11.8409 iterations 4
Cbc0038I Pass  20: suminf.    1.33207 (5) obj. -11.8409 iterations 6
Cbc0038I Pass  21: suminf.    1.97434 (6) obj. -11.8409 iterations 4
Cbc0038I Pass  22: suminf.    1.97434 (6) obj. -11.8409 iterations 0
Cbc0038I Pass  23: suminf.    1.10142 (4) obj. -11.8409 iterations 7
Cbc0038I Pass  24: suminf.    1.04164 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  25: suminf.    1.03127 (3) obj. -11.8409 iterations 1
Cbc0038I Pass  26: suminf.    1.44632 (4) obj. -11.8409 iterations 6
Cbc0038I Pass  27: suminf.    1.44632 (4) obj. -11.8409 iterations 1
Cbc0038I Pass  28: suminf.    3.36389 (11) obj. -11.8409 iterations 29
Cbc0038I Pass  29: suminf.    2.63917 (9) obj. -11.8409 iterations 7
Cbc0038I Pass  30: suminf.    2.30397 (8) obj. -11.8409 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 76 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -9.47391 to -9.54558 (0.11 seconds)
Cbc0038I Round again with cutoff of -16.1013
Cbc0038I Pass  30: suminf.    3.98173 (17) obj. -16.1013 iterations 3
Cbc0038I Pass  31: suminf.    2.48645 (7) obj. -16.1013 iterations 20
Cbc0038I Pass  32: suminf.    1.13196 (5) obj. -16.1013 iterations 4
Cbc0038I Pass  33: suminf.    1.62840 (5) obj. -16.1013 iterations 8
Cbc0038I Pass  34: suminf.    1.62840 (5) obj. -16.1013 iterations 0
Cbc0038I Pass  35: suminf.    2.02107 (5) obj. -16.1013 iterations 3
Cbc0038I Pass  36: suminf.    1.45046 (5) obj. -16.1013 iterations 1
Cbc0038I Pass  37: suminf.    2.14590 (5) obj. -16.1013 iterations 2
Cbc0038I Pass  38: suminf.    1.74115 (5) obj. -16.1013 iterations 1
Cbc0038I Pass  39: suminf.    1.45046 (5) obj. -16.1013 iterations 3
Cbc0038I Pass  40: suminf.    4.55704 (13) obj. -16.1013 iterations 17
Cbc0038I Pass  41: suminf.    2.30193 (10) obj. -16.1013 iterations 19
Cbc0038I Pass  42: suminf.    2.27615 (9) obj. -16.1013 iterations 1
Cbc0038I Pass  43: suminf.    2.47782 (8) obj. -16.1013 iterations 10
Cbc0038I Pass  44: suminf.    2.03430 (7) obj. -16.1013 iterations 1
Cbc0038I Pass  45: suminf.    1.79040 (7) obj. -16.1013 iterations 2
Cbc0038I Pass  46: suminf.    2.40460 (7) obj. -16.1013 iterations 8
Cbc0038I Pass  47: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  48: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  49: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I Pass  50: suminf.    1.88356 (6) obj. -16.1013 iterations 0
Cbc0038I Pass  51: suminf.    2.40460 (7) obj. -16.1013 iterations 7
Cbc0038I Pass  52: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  53: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  54: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I Pass  55: suminf.    1.88356 (6) obj. -16.1013 iterations 0
Cbc0038I Pass  56: suminf.    2.40460 (7) obj. -16.1013 iterations 7
Cbc0038I Pass  57: suminf.    2.35865 (6) obj. -16.1013 iterations 1
Cbc0038I Pass  58: suminf.    2.37577 (6) obj. -16.1013 iterations 3
Cbc0038I Pass  59: suminf.    1.88356 (6) obj. -16.1013 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 75 columns, reduced to 76 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -9.54558 - took 0.14 seconds
Cbc0012I Integer solution of -9.5455769 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 67 rows 42 columns
Cbc0031I 20 added rows had average density of 54.05
Cbc0013I At root node, 20 cuts changed objective from -33.142848 to -25.376237 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10884 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1820 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.5455769 best solution, best possible -25.376237 (0.92 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 36 rows 26 columns
Cbc0012I Integer solution of -9.5721569 found by RINS after 7503 iterations and 41 nodes (1.16 seconds)
Cbc0038I Full problem 130 rows 75 columns, reduced to 9 rows 14 columns
Cbc0001I Search completed - best objective -9.572156899999996, took 9316 iterations and 162 nodes (1.31 seconds)
Cbc0032I Strong branching done 1102 times (16632 iterations), fathomed 21 nodes and fixed 28 variables
Cbc0035I Maximum depth 29, 293 variables fixed on reduced cost
Total time (CPU seconds):       1.24   (Wallclock seconds):       1.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-59) rows, 114 (-39) columns and 1710 (-1594) elements
Clp1000I sum of infeasibilities 6.6164e-08 - average 6.89208e-10, 53 fixed columns
Coin0506I Presolve 44 (-52) rows, 61 (-53) columns and 205 (-1505) elements
Clp0006I 0  Obj -9.8731316 Dual inf 2.0740762 (60)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 1.8439772 - largest nonzero change 1.6140545e-05 ( 0.00072896693%) - largest zero change 2.9794166e-05
Clp0000I Optimal - objective value -7.9336347
Clp0000I Optimal - objective value -7.9336347
Coin0511I After Postsolve, objective -7.9336347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.9336347 Dual inf 40.183583 (40)
Clp0014I Perturbing problem by 0.001% of 1.6873686 - largest nonzero change 2.4704122e-05 ( 0.0015420975%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 48.104978
Clp0000I Optimal - objective value 48.104978
Clp0000I Optimal - objective value 48.104978
Coin0511I After Postsolve, objective 48.104978, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.10497824 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 114 columns (114 integer (114 of which binary)) and 1714 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.068%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.10355
Cbc0038I Pass   1: suminf.    1.99111 (29) obj. -36.8471 iterations 22
Cbc0038I Pass   2: suminf.    1.86652 (26) obj. -36.2586 iterations 2
Cbc0038I Pass   3: suminf.    0.83468 (15) obj. -14.6579 iterations 11
Cbc0038I Solution found of 5.18833
Cbc0038I Rounding solution of 4.42058 is better than previous of 5.18833

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 4.42058 to 1.54118 (0.03 seconds)
Cbc0038I Round again with cutoff of -2.9284
Cbc0038I Pass   4: suminf.    1.99111 (29) obj. -36.8471 iterations 0
Cbc0038I Pass   5: suminf.    1.86652 (26) obj. -36.2586 iterations 2
Cbc0038I Pass   6: suminf.    0.91943 (16) obj. -15.5731 iterations 10
Cbc0038I Pass   7: suminf.    0.18833 (1) obj. -2.9284 iterations 19
Cbc0038I Pass   8: suminf.    0.10811 (1) obj. -3.73059 iterations 1
Cbc0038I Pass   9: suminf.    2.13993 (12) obj. -2.9284 iterations 34
Cbc0038I Pass  10: suminf.    1.13317 (12) obj. -2.9284 iterations 12
Cbc0038I Pass  11: suminf.    1.02603 (3) obj. -2.9284 iterations 21
Cbc0038I Pass  12: suminf.    0.54741 (2) obj. -2.9284 iterations 5
Cbc0038I Pass  13: suminf.    0.49082 (2) obj. -3.34251 iterations 2
Cbc0038I Pass  14: suminf.    0.54741 (2) obj. -2.9284 iterations 2
Cbc0038I Pass  15: suminf.    1.55589 (19) obj. -2.9284 iterations 34
Cbc0038I Pass  16: suminf.    1.02074 (14) obj. -2.9284 iterations 11
Cbc0038I Pass  17: suminf.    1.90708 (7) obj. -2.9284 iterations 25
Cbc0038I Pass  18: suminf.    0.64055 (8) obj. -2.9284 iterations 9
Cbc0038I Pass  19: suminf.    1.19886 (8) obj. -2.9284 iterations 10
Cbc0038I Pass  20: suminf.    1.01076 (8) obj. -2.9284 iterations 7
Cbc0038I Pass  21: suminf.    1.29147 (8) obj. -2.9284 iterations 11
Cbc0038I Pass  22: suminf.    1.29147 (8) obj. -2.9284 iterations 0
Cbc0038I Pass  23: suminf.    1.19886 (8) obj. -2.9284 iterations 9
Cbc0038I Pass  24: suminf.    1.76743 (12) obj. -2.9284 iterations 25
Cbc0038I Pass  25: suminf.    0.95795 (9) obj. -4.55155 iterations 6
Cbc0038I Pass  26: suminf.    0.43032 (6) obj. -2.9284 iterations 17
Cbc0038I Pass  27: suminf.    0.43032 (6) obj. -2.9284 iterations 3
Cbc0038I Pass  28: suminf.    0.90095 (5) obj. -2.9284 iterations 10
Cbc0038I Pass  29: suminf.    0.55264 (5) obj. -3.97334 iterations 2
Cbc0038I Pass  30: suminf.    0.90706 (7) obj. -2.9284 iterations 5
Cbc0038I Pass  31: suminf.    0.70432 (5) obj. -2.9284 iterations 11
Cbc0038I Pass  32: suminf.    0.86519 (7) obj. -2.9284 iterations 5
Cbc0038I Pass  33: suminf.    0.66578 (5) obj. -2.9284 iterations 13
Cbc0038I Rounding solution of -0.0590301 is better than previous of 1.54118

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 35 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -0.0590301 to -8.75198 (0.07 seconds)
Cbc0038I Round again with cutoff of -15.6324
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.99111 (29) obj. -36.8471 iterations 0
Cbc0038I Pass  34: suminf.    1.86652 (26) obj. -36.2586 iterations 4
Cbc0038I Pass  35: suminf.    0.55689 (11) obj. -15.6324 iterations 22
Cbc0038I Pass  36: suminf.    0.50887 (11) obj. -15.6324 iterations 2
Cbc0038I Pass  37: suminf.    1.11493 (6) obj. -15.6324 iterations 14
Cbc0038I Pass  38: suminf.    1.02473 (13) obj. -15.6324 iterations 9
Cbc0038I Pass  39: suminf.    2.19192 (12) obj. -15.6324 iterations 17
Cbc0038I Pass  40: suminf.    1.13614 (10) obj. -15.6324 iterations 5
Cbc0038I Pass  41: suminf.    1.34505 (11) obj. -15.6324 iterations 5
Cbc0038I Pass  42: suminf.    1.06946 (9) obj. -15.6324 iterations 18
Cbc0038I Pass  43: suminf.    0.92825 (10) obj. -15.6324 iterations 7
Cbc0038I Pass  44: suminf.    2.00072 (12) obj. -15.6324 iterations 15
Cbc0038I Pass  45: suminf.    2.00072 (12) obj. -15.6324 iterations 0
Cbc0038I Pass  46: suminf.    3.22981 (14) obj. -15.6324 iterations 9
Cbc0038I Pass  47: suminf.    1.60867 (11) obj. -15.6324 iterations 4
Cbc0038I Pass  48: suminf.    0.92904 (11) obj. -15.6324 iterations 5
Cbc0038I Pass  49: suminf.    0.71846 (7) obj. -15.6324 iterations 3
Cbc0038I Pass  50: suminf.    0.92904 (11) obj. -15.6324 iterations 8
Cbc0038I Pass  51: suminf.    1.15154 (11) obj. -15.6324 iterations 13
Cbc0038I Pass  52: suminf.    0.85600 (14) obj. -15.6324 iterations 6
Cbc0038I Pass  53: suminf.    2.14237 (13) obj. -15.6324 iterations 19
Cbc0038I Pass  54: suminf.    1.55074 (11) obj. -15.6324 iterations 7
Cbc0038I Pass  55: suminf.    1.59954 (12) obj. -15.6324 iterations 6
Cbc0038I Pass  56: suminf.    1.59599 (11) obj. -15.6324 iterations 8
Cbc0038I Pass  57: suminf.    1.55448 (12) obj. -15.6324 iterations 6
Cbc0038I Pass  58: suminf.    1.81038 (15) obj. -15.6324 iterations 18
Cbc0038I Pass  59: suminf.    1.46876 (14) obj. -15.6324 iterations 14
Cbc0038I Pass  60: suminf.    2.14237 (13) obj. -15.6324 iterations 14
Cbc0038I Pass  61: suminf.    1.55074 (11) obj. -15.6324 iterations 7
Cbc0038I Pass  62: suminf.    1.59954 (12) obj. -15.6324 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -8.75198 - took 0.09 seconds
Cbc0012I Integer solution of -8.7519769 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 19 rows 22 columns
Cbc0031I 60 added rows had average density of 34.6
Cbc0013I At root node, 60 cuts changed objective from -43.153778 to -16.161779 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10937 row cuts average 2.0 elements, 1 column cuts (51 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1202 row cuts average 105.0 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 367 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1124 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 298 row cuts average 59.2 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 83 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.735 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.7519769 best solution, best possible -16.161779 (2.56 seconds)
Cbc0012I Integer solution of -9.4623269 found by DiveCoefficient after 5533 iterations and 17 nodes (3.12 seconds)
Cbc0012I Integer solution of -9.5542569 found by DiveCoefficient after 5588 iterations and 23 nodes (3.15 seconds)
Cbc0012I Integer solution of -9.5721569 found by rounding after 5620 iterations and 25 nodes (3.16 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 3 rows 8 columns
Cbc0010I After 66 nodes, 12 on tree, -9.5721569 best solution, best possible -14.747386 (3.26 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 6 rows 11 columns
Cbc0001I Search completed - best objective -9.572156899999996, took 6964 iterations and 106 nodes (3.36 seconds)
Cbc0032I Strong branching done 842 times (11933 iterations), fathomed 25 nodes and fixed 18 variables
Cbc0035I Maximum depth 16, 175 variables fixed on reduced cost
Total time (CPU seconds):       2.60   (Wallclock seconds):       3.37

