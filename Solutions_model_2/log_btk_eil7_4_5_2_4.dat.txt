Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 8 (-9) rows, 6 (-3) columns and 19 (-20) elements
Clp1000I sum of infeasibilities 5.28119e-08 - average 6.60149e-09, 0 fixed columns
Coin0506I Presolve 8 (0) rows, 6 (0) columns and 19 (0) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 22.082579
Clp0000I Optimal - objective value 22.082579
Coin0511I After Postsolve, objective 22.082579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 22.082579
Clp0000I Optimal - objective value 22.082579
Clp0000I Optimal - objective value 22.082579
Coin0511I After Postsolve, objective 22.082579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22.08257858 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 7 rows, 6 columns (5 integer (5 of which binary)) and 18 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.78241
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11 iterations 3
Cbc0038I Solution found of -11
Cbc0038I Relaxing continuous gives -11
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7 rows 6 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -11 to -17 (0.00 seconds)
Cbc0038I Round again with cutoff of -18.3877
Cbc0038I Pass   2: suminf.    1.14386 (4) obj. -18.3877 iterations 3
Cbc0038I Pass   3: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass   4: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass   5: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass   6: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass   7: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass   8: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass   9: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  10: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  11: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  12: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  13: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass  14: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  15: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  16: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  17: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  18: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass  19: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  20: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  21: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  22: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  23: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass  24: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  25: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  26: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  27: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  28: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass  29: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  30: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  31: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7 rows 6 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -17 - took 0.01 seconds
Cbc0012I Integer solution of -17 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -21.878176 to -21.878176 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -17, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 9 (-7) rows, 11 (-3) columns and 34 (-26) elements
Clp1000I sum of infeasibilities 1.34276e-09 - average 1.49195e-10, 8 fixed columns
Coin0506I Presolve 2 (-7) rows, 3 (-8) columns and 5 (-29) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 3
Clp0000I Optimal - objective value 3
Coin0511I After Postsolve, objective 3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3858413 - largest nonzero change 2.7749466e-05 ( 0.0016594968%) - largest zero change 1.9068069e-05
Clp0000I Optimal - objective value 33.3
Clp0000I Optimal - objective value 33.3
Clp0000I Optimal - objective value 33.3
Coin0511I After Postsolve, objective 33.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.3 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 8 rows, 11 columns (11 integer (11 of which binary)) and 35 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 13.043%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.35417
Cbc0038I Pass   1: suminf.    0.78333 (3) obj. -25.9167 iterations 1
Cbc0038I Solution found of 1
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 1 to -11 (0.01 seconds)
Cbc0038I Round again with cutoff of -13.5145
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.78333 (3) obj. -25.9167 iterations 0
Cbc0038I Pass   3: suminf.    0.41942 (1) obj. -13.5145 iterations 3
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -19 iterations 1
Cbc0038I Pass   5: suminf.    0.53333 (2) obj. -23.6667 iterations 1
Cbc0038I Pass   6: suminf.    0.53333 (2) obj. -23.6667 iterations 0
Cbc0038I Pass   7: suminf.    0.53333 (2) obj. -23.6667 iterations 0
Cbc0038I Pass   8: suminf.    0.36146 (3) obj. -13.5145 iterations 2
Cbc0038I Pass   9: suminf.    0.33942 (1) obj. -13.5145 iterations 2
Cbc0038I Pass  10: suminf.    0.20000 (1) obj. -17 iterations 1
Cbc0038I Pass  11: suminf.    0.53333 (2) obj. -21.6667 iterations 1
Cbc0038I Pass  12: suminf.    0.78333 (3) obj. -25.9167 iterations 2
Cbc0038I Pass  13: suminf.    0.41942 (1) obj. -13.5145 iterations 3
Cbc0038I Pass  14: suminf.    0.20000 (1) obj. -19 iterations 1
Cbc0038I Pass  15: suminf.    0.62500 (3) obj. -21 iterations 2
Cbc0038I Pass  16: suminf.    0.20000 (1) obj. -19 iterations 1
Cbc0038I Pass  17: suminf.    0.20000 (1) obj. -17 iterations 1
Cbc0038I Pass  18: suminf.    0.33942 (1) obj. -13.5145 iterations 1
Cbc0038I Pass  19: suminf.    0.20000 (1) obj. -17 iterations 1
Cbc0038I Pass  20: suminf.    0.95494 (4) obj. -13.5145 iterations 2
Cbc0038I Pass  21: suminf.    0.63569 (2) obj. -13.5145 iterations 1
Cbc0038I Pass  22: suminf.    0.70713 (2) obj. -13.5145 iterations 2
Cbc0038I Pass  23: suminf.    1.00000 (3) obj. -13.5145 iterations 3
Cbc0038I Pass  24: suminf.    0.87379 (2) obj. -13.5145 iterations 1
Cbc0038I Pass  25: suminf.    0.20000 (1) obj. -19 iterations 2
Cbc0038I Pass  26: suminf.    0.41942 (1) obj. -13.5145 iterations 1
Cbc0038I Pass  27: suminf.    0.87379 (2) obj. -13.5145 iterations 1
Cbc0038I Pass  28: suminf.    0.68931 (4) obj. -13.5145 iterations 3
Cbc0038I Pass  29: suminf.    0.51431 (2) obj. -13.5145 iterations 1
Cbc0038I Pass  30: suminf.    0.51431 (2) obj. -13.5145 iterations 0
Cbc0038I Pass  31: suminf.    0.51431 (2) obj. -13.5145 iterations 0
Cbc0038I Rounding solution of -17 is better than previous of -11

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8 rows 11 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -19.8291
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.78333 (3) obj. -25.9167 iterations 0
Cbc0038I Pass  32: suminf.    0.31844 (2) obj. -19.8291 iterations 2
Cbc0038I Pass  33: suminf.    0.31844 (2) obj. -19.8291 iterations 0
Cbc0038I Pass  34: suminf.    0.68684 (2) obj. -19.8291 iterations 1
Cbc0038I Pass  35: suminf.    0.53333 (2) obj. -23.6667 iterations 1
Cbc0038I Pass  36: suminf.    0.53333 (2) obj. -23.6667 iterations 0
Cbc0038I Pass  37: suminf.    1.39415 (5) obj. -19.8291 iterations 3
Cbc0038I Pass  38: suminf.    0.31844 (2) obj. -19.8291 iterations 4
Cbc0038I Pass  39: suminf.    0.88034 (3) obj. -19.8291 iterations 4
Cbc0038I Pass  40: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I Pass  41: suminf.    0.58273 (3) obj. -19.8291 iterations 3
Cbc0038I Pass  42: suminf.    0.58273 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  43: suminf.    1.47009 (3) obj. -19.8291 iterations 2
Cbc0038I Pass  44: suminf.    1.47009 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  45: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I Pass  46: suminf.    0.58273 (3) obj. -19.8291 iterations 3
Cbc0038I Pass  47: suminf.    0.58273 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  48: suminf.    1.47009 (3) obj. -19.8291 iterations 2
Cbc0038I Pass  49: suminf.    1.47009 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  50: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I Pass  51: suminf.    0.58273 (3) obj. -19.8291 iterations 3
Cbc0038I Pass  52: suminf.    0.58273 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  53: suminf.    1.47009 (3) obj. -19.8291 iterations 2
Cbc0038I Pass  54: suminf.    1.47009 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  55: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I Pass  56: suminf.    0.58273 (3) obj. -19.8291 iterations 3
Cbc0038I Pass  57: suminf.    0.58273 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  58: suminf.    1.47009 (3) obj. -19.8291 iterations 2
Cbc0038I Pass  59: suminf.    1.47009 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  60: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -17 - took 0.01 seconds
Cbc0012I Integer solution of -17 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -27.145833 to -27.145833 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -17, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 8 (-9) rows, 6 (-3) columns and 19 (-20) elements
Clp1000I sum of infeasibilities 5.28119e-08 - average 6.60149e-09, 0 fixed columns
Coin0506I Presolve 8 (0) rows, 6 (0) columns and 19 (0) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 22.082579
Clp0000I Optimal - objective value 22.082579
Coin0511I After Postsolve, objective 22.082579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 22.082579
Clp0000I Optimal - objective value 22.082579
Clp0000I Optimal - objective value 22.082579
Coin0511I After Postsolve, objective 22.082579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 22.08257858 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 7 rows, 6 columns (5 integer (5 of which binary)) and 18 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.78241
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11 iterations 3
Cbc0038I Solution found of -11
Cbc0038I Relaxing continuous gives -11
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7 rows 6 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -11 to -17 (0.00 seconds)
Cbc0038I Round again with cutoff of -18.3877
Cbc0038I Pass   2: suminf.    1.14386 (4) obj. -18.3877 iterations 3
Cbc0038I Pass   3: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass   4: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass   5: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass   6: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass   7: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass   8: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass   9: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  10: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  11: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  12: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  13: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass  14: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  15: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  16: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  17: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  18: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass  19: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  20: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  21: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  22: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  23: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass  24: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  25: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  26: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  27: suminf.    0.56895 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  28: suminf.    1.39285 (4) obj. -18.3877 iterations 3
Cbc0038I Pass  29: suminf.    1.39285 (4) obj. -18.3877 iterations 0
Cbc0038I Pass  30: suminf.    1.80018 (4) obj. -18.3877 iterations 2
Cbc0038I Pass  31: suminf.    0.56895 (4) obj. -18.3877 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7 rows 6 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -17 - took 0.01 seconds
Cbc0012I Integer solution of -17 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -21.878176 to -21.878176 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -17, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 9 (-8) rows, 11 (-4) columns and 34 (-27) elements
Clp1000I sum of infeasibilities 1.34276e-09 - average 1.49195e-10, 8 fixed columns
Coin0506I Presolve 2 (-7) rows, 3 (-8) columns and 5 (-29) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 3
Clp0000I Optimal - objective value 3
Coin0511I After Postsolve, objective 3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3858413 - largest nonzero change 2.7749466e-05 ( 0.0016594968%) - largest zero change 1.9068069e-05
Clp0000I Optimal - objective value 33.3
Clp0000I Optimal - objective value 33.3
Clp0000I Optimal - objective value 33.3
Coin0511I After Postsolve, objective 33.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.3 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 8 rows, 11 columns (11 integer (11 of which binary)) and 35 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 13.043%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.35417
Cbc0038I Pass   1: suminf.    0.78333 (3) obj. -25.9167 iterations 1
Cbc0038I Solution found of 1
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 1 to -11 (0.00 seconds)
Cbc0038I Round again with cutoff of -13.5145
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.78333 (3) obj. -25.9167 iterations 0
Cbc0038I Pass   3: suminf.    0.41942 (1) obj. -13.5145 iterations 3
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -19 iterations 1
Cbc0038I Pass   5: suminf.    0.53333 (2) obj. -23.6667 iterations 1
Cbc0038I Pass   6: suminf.    0.53333 (2) obj. -23.6667 iterations 0
Cbc0038I Pass   7: suminf.    0.53333 (2) obj. -23.6667 iterations 0
Cbc0038I Pass   8: suminf.    0.36146 (3) obj. -13.5145 iterations 2
Cbc0038I Pass   9: suminf.    0.33942 (1) obj. -13.5145 iterations 2
Cbc0038I Pass  10: suminf.    0.20000 (1) obj. -17 iterations 1
Cbc0038I Pass  11: suminf.    0.53333 (2) obj. -21.6667 iterations 1
Cbc0038I Pass  12: suminf.    0.78333 (3) obj. -25.9167 iterations 2
Cbc0038I Pass  13: suminf.    0.41942 (1) obj. -13.5145 iterations 3
Cbc0038I Pass  14: suminf.    0.20000 (1) obj. -19 iterations 1
Cbc0038I Pass  15: suminf.    0.62500 (3) obj. -21 iterations 2
Cbc0038I Pass  16: suminf.    0.20000 (1) obj. -19 iterations 1
Cbc0038I Pass  17: suminf.    0.20000 (1) obj. -17 iterations 1
Cbc0038I Pass  18: suminf.    0.33942 (1) obj. -13.5145 iterations 1
Cbc0038I Pass  19: suminf.    0.20000 (1) obj. -17 iterations 1
Cbc0038I Pass  20: suminf.    0.95494 (4) obj. -13.5145 iterations 2
Cbc0038I Pass  21: suminf.    0.63569 (2) obj. -13.5145 iterations 1
Cbc0038I Pass  22: suminf.    0.70713 (2) obj. -13.5145 iterations 2
Cbc0038I Pass  23: suminf.    1.00000 (3) obj. -13.5145 iterations 3
Cbc0038I Pass  24: suminf.    0.87379 (2) obj. -13.5145 iterations 1
Cbc0038I Pass  25: suminf.    0.20000 (1) obj. -19 iterations 2
Cbc0038I Pass  26: suminf.    0.41942 (1) obj. -13.5145 iterations 1
Cbc0038I Pass  27: suminf.    0.87379 (2) obj. -13.5145 iterations 1
Cbc0038I Pass  28: suminf.    0.68931 (4) obj. -13.5145 iterations 3
Cbc0038I Pass  29: suminf.    0.51431 (2) obj. -13.5145 iterations 1
Cbc0038I Pass  30: suminf.    0.51431 (2) obj. -13.5145 iterations 0
Cbc0038I Pass  31: suminf.    0.51431 (2) obj. -13.5145 iterations 0
Cbc0038I Rounding solution of -17 is better than previous of -11

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8 rows 11 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -19.8291
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.78333 (3) obj. -25.9167 iterations 0
Cbc0038I Pass  32: suminf.    0.31844 (2) obj. -19.8291 iterations 2
Cbc0038I Pass  33: suminf.    0.31844 (2) obj. -19.8291 iterations 0
Cbc0038I Pass  34: suminf.    0.68684 (2) obj. -19.8291 iterations 1
Cbc0038I Pass  35: suminf.    0.53333 (2) obj. -23.6667 iterations 1
Cbc0038I Pass  36: suminf.    0.53333 (2) obj. -23.6667 iterations 0
Cbc0038I Pass  37: suminf.    1.39415 (5) obj. -19.8291 iterations 3
Cbc0038I Pass  38: suminf.    0.31844 (2) obj. -19.8291 iterations 4
Cbc0038I Pass  39: suminf.    0.88034 (3) obj. -19.8291 iterations 4
Cbc0038I Pass  40: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I Pass  41: suminf.    0.58273 (3) obj. -19.8291 iterations 3
Cbc0038I Pass  42: suminf.    0.58273 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  43: suminf.    1.47009 (3) obj. -19.8291 iterations 2
Cbc0038I Pass  44: suminf.    1.47009 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  45: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I Pass  46: suminf.    0.58273 (3) obj. -19.8291 iterations 3
Cbc0038I Pass  47: suminf.    0.58273 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  48: suminf.    1.47009 (3) obj. -19.8291 iterations 2
Cbc0038I Pass  49: suminf.    1.47009 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  50: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I Pass  51: suminf.    0.58273 (3) obj. -19.8291 iterations 3
Cbc0038I Pass  52: suminf.    0.58273 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  53: suminf.    1.47009 (3) obj. -19.8291 iterations 2
Cbc0038I Pass  54: suminf.    1.47009 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  55: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I Pass  56: suminf.    0.58273 (3) obj. -19.8291 iterations 3
Cbc0038I Pass  57: suminf.    0.58273 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  58: suminf.    1.47009 (3) obj. -19.8291 iterations 2
Cbc0038I Pass  59: suminf.    1.47009 (3) obj. -19.8291 iterations 0
Cbc0038I Pass  60: suminf.    0.53333 (2) obj. -21.6667 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -17 - took 0.01 seconds
Cbc0012I Integer solution of -17 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -27.145833 to -27.145833 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -17, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

