Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000181698 - average 1.36615e-06, 19 fixed columns
Coin0506I Presolve 77 (-56) rows, 53 (-23) columns and 252 (-158) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 0.33292023 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 31.58039
Clp0000I Optimal - objective value 31.58039
Coin0511I After Postsolve, objective 31.58039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.58039
Clp0000I Optimal - objective value 31.58039
Clp0000I Optimal - objective value 31.58039
Coin0511I After Postsolve, objective 31.58039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.58038954 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.82633
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.78151 iterations 27
Cbc0038I Solution found of -5.78151
Cbc0038I Relaxing continuous gives -5.78151
Cbc0038I Rounding solution of -7.16274 is better than previous of -5.78151

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 28 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -7.16274 to -8.03728 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.3917
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.34745 (2) obj. -10.3917 iterations 4
Cbc0038I Pass   3: suminf.    0.86542 (2) obj. -10.3917 iterations 3
Cbc0038I Pass   4: suminf.    0.58997 (4) obj. -10.3917 iterations 5
Cbc0038I Pass   5: suminf.    0.62935 (2) obj. -10.3917 iterations 8
Cbc0038I Pass   6: suminf.    0.43888 (2) obj. -10.3917 iterations 2
Cbc0038I Pass   7: suminf.    2.16213 (5) obj. -10.3917 iterations 10
Cbc0038I Pass   8: suminf.    0.79971 (3) obj. -10.3917 iterations 5
Cbc0038I Pass   9: suminf.    0.45059 (2) obj. -10.3917 iterations 2
Cbc0038I Pass  10: suminf.    0.34745 (1) obj. -10.3917 iterations 2
Cbc0038I Pass  11: suminf.    0.29592 (2) obj. -10.3917 iterations 2
Cbc0038I Pass  12: suminf.    0.49780 (3) obj. -10.3917 iterations 4
Cbc0038I Pass  13: suminf.    0.70270 (2) obj. -10.3917 iterations 4
Cbc0038I Pass  14: suminf.    0.49780 (3) obj. -10.3917 iterations 4
Cbc0038I Pass  15: suminf.    1.81077 (9) obj. -10.3917 iterations 20
Cbc0038I Pass  16: suminf.    1.31900 (5) obj. -10.3917 iterations 8
Cbc0038I Pass  17: suminf.    0.52053 (2) obj. -10.3917 iterations 7
Cbc0038I Pass  18: suminf.    0.84928 (3) obj. -10.3917 iterations 3
Cbc0038I Pass  19: suminf.    0.84928 (3) obj. -10.3917 iterations 0
Cbc0038I Pass  20: suminf.    0.34183 (2) obj. -10.3917 iterations 6
Cbc0038I Pass  21: suminf.    0.50305 (2) obj. -10.3917 iterations 2
Cbc0038I Pass  22: suminf.    2.59654 (9) obj. -10.3917 iterations 26
Cbc0038I Pass  23: suminf.    1.72151 (6) obj. -10.3917 iterations 7
Cbc0038I Pass  24: suminf.    0.68150 (3) obj. -10.3917 iterations 8
Cbc0038I Pass  25: suminf.    0.96838 (3) obj. -10.3917 iterations 4
Cbc0038I Pass  26: suminf.    0.88201 (2) obj. -10.3917 iterations 1
Cbc0038I Pass  27: suminf.    0.86528 (2) obj. -10.3917 iterations 1
Cbc0038I Pass  28: suminf.    0.68150 (3) obj. -10.3917 iterations 5
Cbc0038I Pass  29: suminf.    0.68150 (3) obj. -10.3917 iterations 0
Cbc0038I Pass  30: suminf.    0.96838 (3) obj. -10.3917 iterations 4
Cbc0038I Pass  31: suminf.    0.88201 (2) obj. -10.3917 iterations 1
Cbc0038I Rounding solution of -8.47199 is better than previous of -8.03728

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 52 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -8.47199 to -9.29002 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.6294
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.60336 (6) obj. -14.6294 iterations 2
Cbc0038I Pass  32: suminf.    0.60336 (6) obj. -14.6294 iterations 0
Cbc0038I Pass  33: suminf.    0.67263 (2) obj. -14.6294 iterations 12
Cbc0038I Pass  34: suminf.    0.32570 (2) obj. -14.6294 iterations 3
Cbc0038I Pass  35: suminf.    1.05568 (3) obj. -14.6294 iterations 5
Cbc0038I Pass  36: suminf.    1.53666 (5) obj. -14.6294 iterations 15
Cbc0038I Pass  37: suminf.    1.12639 (4) obj. -14.6294 iterations 8
Cbc0038I Pass  38: suminf.    1.16684 (3) obj. -14.6294 iterations 6
Cbc0038I Pass  39: suminf.    1.16684 (3) obj. -14.6294 iterations 0
Cbc0038I Pass  40: suminf.    1.21473 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  41: suminf.    1.95236 (7) obj. -14.6294 iterations 18
Cbc0038I Pass  42: suminf.    1.28895 (5) obj. -14.6294 iterations 8
Cbc0038I Pass  43: suminf.    1.62868 (5) obj. -14.6294 iterations 8
Cbc0038I Pass  44: suminf.    1.35526 (6) obj. -14.6294 iterations 5
Cbc0038I Pass  45: suminf.    1.15291 (5) obj. -14.6294 iterations 4
Cbc0038I Pass  46: suminf.    1.03818 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  47: suminf.    1.03818 (3) obj. -14.6294 iterations 0
Cbc0038I Pass  48: suminf.    1.27091 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  49: suminf.    0.83095 (3) obj. -14.6294 iterations 3
Cbc0038I Pass  50: suminf.    0.83095 (3) obj. -14.6294 iterations 0
Cbc0038I Pass  51: suminf.    1.06535 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  52: suminf.    3.16298 (9) obj. -14.6294 iterations 12
Cbc0038I Pass  53: suminf.    2.12568 (7) obj. -14.6294 iterations 4
Cbc0038I Pass  54: suminf.    1.35526 (6) obj. -14.6294 iterations 11
Cbc0038I Pass  55: suminf.    1.35526 (6) obj. -14.6294 iterations 0
Cbc0038I Pass  56: suminf.    1.15291 (5) obj. -14.6294 iterations 4
Cbc0038I Pass  57: suminf.    1.03818 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  58: suminf.    1.03818 (3) obj. -14.6294 iterations 0
Cbc0038I Pass  59: suminf.    1.27091 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  60: suminf.    0.83095 (3) obj. -14.6294 iterations 3
Cbc0038I Rounding solution of -9.53599 is better than previous of -9.29002

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 43 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -9.53599 to -9.83612 (0.12 seconds)
Cbc0038I Round again with cutoff of -19.7147
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    1.45832 (6) obj. -19.7147 iterations 0
Cbc0038I Pass  61: suminf.    1.45832 (6) obj. -19.7147 iterations 0
Cbc0038I Pass  62: suminf.    1.27887 (5) obj. -19.7147 iterations 9
Cbc0038I Pass  63: suminf.    1.02394 (4) obj. -19.7147 iterations 1
Cbc0038I Pass  64: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  65: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  66: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  67: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  68: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  69: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  70: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  71: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  72: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  73: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  74: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  75: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  76: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  77: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  78: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  79: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  80: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  81: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  82: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  83: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  84: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  85: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  86: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  87: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  88: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  89: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 28 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -9.83612 - took 0.11 seconds
Cbc0012I Integer solution of -9.836119 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 30 rows 25 columns
Cbc0031I 16 added rows had average density of 55.625
Cbc0013I At root node, 16 cuts changed objective from -31.58039 to -15.771507 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1336 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 798 row cuts average 70.8 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0012I Integer solution of -10.137038 found by rounding after 3310 iterations and 5 nodes (0.50 seconds)
Cbc0012I Integer solution of -10.926639 found by DiveCoefficient after 3344 iterations and 5 nodes (0.52 seconds)
Cbc0004I Integer solution of -11.401179 found after 3900 iterations and 35 nodes (0.57 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 2 rows 6 columns
Cbc0012I Integer solution of -11.509499 found by RINS after 3970 iterations and 41 nodes (0.60 seconds)
Cbc0004I Integer solution of -11.523249 found after 4008 iterations and 47 nodes (0.60 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 2 rows 6 columns
Cbc0016I Integer solution of -11.523289 found by strong branching after 4605 iterations and 111 nodes (0.65 seconds)
Cbc0010I After 143 nodes, 11 on tree, -11.523289 best solution, best possible -15.771505 (0.68 seconds)
Cbc0001I Search completed - best objective -11.52328899999927, took 5676 iterations and 180 nodes (0.71 seconds)
Cbc0032I Strong branching done 928 times (7381 iterations), fathomed 24 nodes and fixed 47 variables
Cbc0035I Maximum depth 20, 446 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-54) rows, 117 (-35) columns and 1921 (-1382) elements
Clp1000I sum of infeasibilities 3.44426e-06 - average 3.44426e-08, 8 fixed columns
Coin0506I Presolve 92 (-8) rows, 108 (-9) columns and 1700 (-221) elements
Clp0006I 0  Obj 15.717563 Dual inf 4.4246908 (105)
Clp0029I End of values pass after 108 iterations
Clp0014I Perturbing problem by 0.001% of 1.6659852 - largest nonzero change 0 ( 0%) - largest zero change 2.9712752e-05
Clp0000I Optimal - objective value 53.135453
Clp0000I Optimal - objective value 53.135453
Coin0511I After Postsolve, objective 53.135453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.135453
Clp0000I Optimal - objective value 53.135453
Clp0000I Optimal - objective value 53.135453
Clp0000I Optimal - objective value 53.135453
Coin0511I After Postsolve, objective 53.135453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.13545283 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 118 columns (118 integer (118 of which binary)) and 1926 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.419%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 5.33645
Cbc0038I Pass   1: suminf.    2.49713 (31) obj. -45.6537 iterations 21
Cbc0038I Pass   2: suminf.    2.49713 (31) obj. -45.6537 iterations 1
Cbc0038I Pass   3: suminf.    1.46287 (21) obj. -33.1059 iterations 10
Cbc0038I Solution found of -8.03727
Cbc0038I Rounding solution of -8.03728 is better than previous of -8.03727

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -12.0131
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.49713 (31) obj. -45.6537 iterations 0
Cbc0038I Pass   5: suminf.    2.49713 (31) obj. -45.6537 iterations 1
Cbc0038I Pass   6: suminf.    0.54241 (4) obj. -12.0131 iterations 39
Cbc0038I Pass   7: suminf.    0.60962 (4) obj. -12.0131 iterations 10
Cbc0038I Pass   8: suminf.    0.11856 (3) obj. -12.0131 iterations 6
Cbc0038I Pass   9: suminf.    0.30659 (2) obj. -12.0131 iterations 5
Cbc0038I Pass  10: suminf.    1.04430 (11) obj. -12.0131 iterations 30
Cbc0038I Pass  11: suminf.    1.04430 (11) obj. -12.0131 iterations 2
Cbc0038I Pass  12: suminf.    0.37739 (5) obj. -12.0131 iterations 12
Cbc0038I Pass  13: suminf.    0.36604 (5) obj. -12.0131 iterations 7
Cbc0038I Pass  14: suminf.    0.70304 (5) obj. -12.0131 iterations 10
Cbc0038I Pass  15: suminf.    0.70304 (5) obj. -12.0131 iterations 0
Cbc0038I Pass  16: suminf.    0.77354 (10) obj. -12.0131 iterations 15
Cbc0038I Pass  17: suminf.    0.64065 (3) obj. -12.0131 iterations 2
Cbc0038I Pass  18: suminf.    0.15306 (2) obj. -12.4027 iterations 6
Cbc0038I Pass  19: suminf.    0.77354 (10) obj. -12.0131 iterations 9
Cbc0038I Pass  20: suminf.    2.37890 (16) obj. -12.0131 iterations 33
Cbc0038I Pass  21: suminf.    2.09628 (15) obj. -12.0131 iterations 8
Cbc0038I Pass  22: suminf.    1.70732 (8) obj. -12.0131 iterations 21
Cbc0038I Pass  23: suminf.    1.18426 (8) obj. -12.0131 iterations 6
Cbc0038I Pass  24: suminf.    1.38515 (8) obj. -12.0131 iterations 3
Cbc0038I Pass  25: suminf.    1.93471 (12) obj. -12.0131 iterations 14
Cbc0038I Pass  26: suminf.    1.89493 (13) obj. -12.0131 iterations 4
Cbc0038I Pass  27: suminf.    1.53828 (9) obj. -12.0131 iterations 15
Cbc0038I Pass  28: suminf.    1.53828 (9) obj. -12.0131 iterations 2
Cbc0038I Pass  29: suminf.    1.80059 (9) obj. -12.0131 iterations 4
Cbc0038I Pass  30: suminf.    1.80059 (9) obj. -12.0131 iterations 1
Cbc0038I Pass  31: suminf.    1.53828 (9) obj. -12.0131 iterations 3
Cbc0038I Pass  32: suminf.    2.77747 (14) obj. -12.0131 iterations 16
Cbc0038I Pass  33: suminf.    1.66286 (11) obj. -12.0131 iterations 8
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 118 columns, reduced to 7 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -19.1693
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.49713 (31) obj. -45.6537 iterations 0
Cbc0038I Pass  34: suminf.    2.49713 (31) obj. -45.6537 iterations 1
Cbc0038I Pass  35: suminf.    0.76545 (7) obj. -19.1693 iterations 44
Cbc0038I Pass  36: suminf.    0.76545 (7) obj. -19.1693 iterations 1
Cbc0038I Pass  37: suminf.    0.73964 (5) obj. -19.1693 iterations 12
Cbc0038I Pass  38: suminf.    0.37892 (5) obj. -19.1693 iterations 5
Cbc0038I Pass  39: suminf.    0.73964 (5) obj. -19.1693 iterations 8
Cbc0038I Pass  40: suminf.    1.65217 (9) obj. -19.1693 iterations 12
Cbc0038I Pass  41: suminf.    1.65217 (9) obj. -19.1693 iterations 0
Cbc0038I Pass  42: suminf.    1.35070 (7) obj. -19.1693 iterations 10
Cbc0038I Pass  43: suminf.    1.20623 (7) obj. -19.4582 iterations 4
Cbc0038I Pass  44: suminf.    1.35070 (7) obj. -19.1693 iterations 7
Cbc0038I Pass  45: suminf.    1.92758 (10) obj. -19.1693 iterations 21
Cbc0038I Pass  46: suminf.    1.92758 (10) obj. -19.1693 iterations 6
Cbc0038I Pass  47: suminf.    1.76419 (7) obj. -19.1693 iterations 9
Cbc0038I Pass  48: suminf.    1.76419 (7) obj. -19.1693 iterations 2
Cbc0038I Pass  49: suminf.    1.39430 (7) obj. -19.1693 iterations 5
Cbc0038I Pass  50: suminf.    1.01373 (6) obj. -19.4605 iterations 2
Cbc0038I Pass  51: suminf.    1.15932 (6) obj. -19.1693 iterations 6
Cbc0038I Pass  52: suminf.    0.99530 (6) obj. -19.4973 iterations 3
Cbc0038I Pass  53: suminf.    1.60062 (14) obj. -19.1693 iterations 21
Cbc0038I Pass  54: suminf.    1.60062 (14) obj. -19.1693 iterations 3
Cbc0038I Pass  55: suminf.    1.17230 (9) obj. -19.1693 iterations 9
Cbc0038I Pass  56: suminf.    1.17230 (9) obj. -19.1693 iterations 3
Cbc0038I Pass  57: suminf.    1.59485 (8) obj. -19.1693 iterations 7
Cbc0038I Pass  58: suminf.    1.59485 (8) obj. -19.1693 iterations 3
Cbc0038I Pass  59: suminf.    1.60734 (8) obj. -19.1693 iterations 5
Cbc0038I Pass  60: suminf.    1.21783 (8) obj. -19.9483 iterations 3
Cbc0038I Pass  61: suminf.    1.60734 (8) obj. -19.1693 iterations 5
Cbc0038I Pass  62: suminf.    2.06783 (15) obj. -19.1693 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.03728 - took 0.05 seconds
Cbc0012I Integer solution of -8.037277 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 42 added rows had average density of 26.261905
Cbc0013I At root node, 42 cuts changed objective from -32.601721 to -14.227265 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8126 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 950 row cuts average 90.7 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 57 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 560 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.670 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.037277 best solution, best possible -14.227265 (1.93 seconds)
Cbc0012I Integer solution of -10.471759 found by DiveCoefficient after 3888 iterations and 3 nodes (2.29 seconds)
Cbc0012I Integer solution of -10.481189 found by DiveCoefficient after 4018 iterations and 7 nodes (2.43 seconds)
Cbc0012I Integer solution of -10.647979 found by DiveCoefficient after 4018 iterations and 7 nodes (2.43 seconds)
Cbc0012I Integer solution of -11.389969 found by DiveCoefficient after 4033 iterations and 9 nodes (2.47 seconds)
Cbc0010I After 13 nodes, 8 on tree, -11.389969 best solution, best possible -14.227265 (2.63 seconds)
Cbc0012I Integer solution of -11.513859 found by rounding after 4215 iterations and 20 nodes (2.78 seconds)
Cbc0012I Integer solution of -11.518929 found by DiveCoefficient after 4261 iterations and 32 nodes (2.92 seconds)
Cbc0004I Integer solution of -11.523289 found after 4316 iterations and 40 nodes (3.06 seconds)
Cbc0038I Full problem 101 rows 118 columns, reduced to 2 rows 5 columns
Cbc0038I Full problem 143 rows 118 columns, reduced to 78 rows 94 columns
Cbc0044I Reduced cost fixing - 78 rows, 94 columns - restarting search
Cbc0038I Initial state - 21 integers unsatisfied sum - 1.88062
Cbc0038I Pass   1: suminf.    1.53205 (19) obj. -30.0647 iterations 13
Cbc0038I Pass   2: suminf.    0.45269 (8) obj. -15.5846 iterations 11
Cbc0038I Pass   3: suminf.    0.42904 (2) obj. -11.5233 iterations 18
Cbc0038I Pass   4: suminf.    0.08333 (1) obj. -11.7039 iterations 4
Cbc0038I Pass   5: suminf.    1.31460 (9) obj. -11.5233 iterations 19
Cbc0038I Pass   6: suminf.    0.95530 (6) obj. -11.5233 iterations 9
Cbc0038I Pass   7: suminf.    0.93117 (5) obj. -11.5233 iterations 7
Cbc0038I Pass   8: suminf.    0.93117 (5) obj. -11.5233 iterations 4
Cbc0038I Pass   9: suminf.    0.74375 (4) obj. -11.5233 iterations 4
Cbc0038I Pass  10: suminf.    0.38363 (3) obj. -12.0601 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.35 seconds)
Cbc0038I Full problem 79 rows 94 columns, reduced to 79 rows 94 columns
Cbc0038I After 3.44 seconds - Feasibility pump exiting with objective of -8.03728 - took 0.09 seconds
Cbc0031I 39 added rows had average density of 28.589744
Cbc0013I At root node, 39 cuts changed objective from -30.893813 to -14.227224 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 755 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 41.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 118 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 40.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 54 row cuts average 27.9 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -14.227224 (3.68 seconds)
Cbc0010I After 42 nodes, 8 on tree, 1e+50 best solution, best possible -14.227224 (4.70 seconds)
Cbc0010I After 99 nodes, 6 on tree, 1e+50 best solution, best possible -14.227224 (5.71 seconds)
Cbc0010I After 148 nodes, 5 on tree, 1e+50 best solution, best possible -12.000578 (6.71 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2604 iterations and 166 nodes (6.87 seconds)
Cbc0032I Strong branching done 1036 times (12085 iterations), fathomed 25 nodes and fixed 23 variables
Cbc0035I Maximum depth 14, 254 variables fixed on reduced cost
Cbc0038I Probing was tried 264 times and created 1258 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
Cbc0038I Gomory was tried 242 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Cbc0038I Knapsack was tried 11 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I Clique was tried 11 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I OddWheel was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I MixedIntegerRounding2 was tried 242 times and created 261 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 242 times and created 205 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Cbc0038I ZeroHalf was tried 242 times and created 269 cuts of which 0 were active after adding rounds of cuts (1.457 seconds)
Cbc0038I Stored from first was tried 242 times and created 94 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -11.52328899999927, took 7044 iterations and 216 nodes (6.87 seconds)
Cbc0032I Strong branching done 506 times (7375 iterations), fathomed 8 nodes and fixed 10 variables
Cbc0035I Maximum depth 12, 85 variables fixed on reduced cost
Total time (CPU seconds):       4.31   (Wallclock seconds):       6.89

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000181698 - average 1.36615e-06, 19 fixed columns
Coin0506I Presolve 77 (-56) rows, 53 (-23) columns and 252 (-158) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 0.33292023 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 31.58039
Clp0000I Optimal - objective value 31.58039
Coin0511I After Postsolve, objective 31.58039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.58039
Clp0000I Optimal - objective value 31.58039
Clp0000I Optimal - objective value 31.58039
Coin0511I After Postsolve, objective 31.58039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.58038954 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.82633
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.78151 iterations 27
Cbc0038I Solution found of -5.78151
Cbc0038I Relaxing continuous gives -5.78151
Cbc0038I Rounding solution of -7.16274 is better than previous of -5.78151

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 28 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -7.16274 to -8.03728 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.3917
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.34745 (2) obj. -10.3917 iterations 4
Cbc0038I Pass   3: suminf.    0.86542 (2) obj. -10.3917 iterations 3
Cbc0038I Pass   4: suminf.    0.58997 (4) obj. -10.3917 iterations 5
Cbc0038I Pass   5: suminf.    0.62935 (2) obj. -10.3917 iterations 8
Cbc0038I Pass   6: suminf.    0.43888 (2) obj. -10.3917 iterations 2
Cbc0038I Pass   7: suminf.    2.16213 (5) obj. -10.3917 iterations 10
Cbc0038I Pass   8: suminf.    0.79971 (3) obj. -10.3917 iterations 5
Cbc0038I Pass   9: suminf.    0.45059 (2) obj. -10.3917 iterations 2
Cbc0038I Pass  10: suminf.    0.34745 (1) obj. -10.3917 iterations 2
Cbc0038I Pass  11: suminf.    0.29592 (2) obj. -10.3917 iterations 2
Cbc0038I Pass  12: suminf.    0.49780 (3) obj. -10.3917 iterations 4
Cbc0038I Pass  13: suminf.    0.70270 (2) obj. -10.3917 iterations 4
Cbc0038I Pass  14: suminf.    0.49780 (3) obj. -10.3917 iterations 4
Cbc0038I Pass  15: suminf.    1.81077 (9) obj. -10.3917 iterations 20
Cbc0038I Pass  16: suminf.    1.31900 (5) obj. -10.3917 iterations 8
Cbc0038I Pass  17: suminf.    0.52053 (2) obj. -10.3917 iterations 7
Cbc0038I Pass  18: suminf.    0.84928 (3) obj. -10.3917 iterations 3
Cbc0038I Pass  19: suminf.    0.84928 (3) obj. -10.3917 iterations 0
Cbc0038I Pass  20: suminf.    0.34183 (2) obj. -10.3917 iterations 6
Cbc0038I Pass  21: suminf.    0.50305 (2) obj. -10.3917 iterations 2
Cbc0038I Pass  22: suminf.    2.59654 (9) obj. -10.3917 iterations 26
Cbc0038I Pass  23: suminf.    1.72151 (6) obj. -10.3917 iterations 7
Cbc0038I Pass  24: suminf.    0.68150 (3) obj. -10.3917 iterations 8
Cbc0038I Pass  25: suminf.    0.96838 (3) obj. -10.3917 iterations 4
Cbc0038I Pass  26: suminf.    0.88201 (2) obj. -10.3917 iterations 1
Cbc0038I Pass  27: suminf.    0.86528 (2) obj. -10.3917 iterations 1
Cbc0038I Pass  28: suminf.    0.68150 (3) obj. -10.3917 iterations 5
Cbc0038I Pass  29: suminf.    0.68150 (3) obj. -10.3917 iterations 0
Cbc0038I Pass  30: suminf.    0.96838 (3) obj. -10.3917 iterations 4
Cbc0038I Pass  31: suminf.    0.88201 (2) obj. -10.3917 iterations 1
Cbc0038I Rounding solution of -8.47199 is better than previous of -8.03728

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 52 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -8.47199 to -9.29002 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.6294
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.60336 (6) obj. -14.6294 iterations 2
Cbc0038I Pass  32: suminf.    0.60336 (6) obj. -14.6294 iterations 0
Cbc0038I Pass  33: suminf.    0.67263 (2) obj. -14.6294 iterations 12
Cbc0038I Pass  34: suminf.    0.32570 (2) obj. -14.6294 iterations 3
Cbc0038I Pass  35: suminf.    1.05568 (3) obj. -14.6294 iterations 5
Cbc0038I Pass  36: suminf.    1.53666 (5) obj. -14.6294 iterations 15
Cbc0038I Pass  37: suminf.    1.12639 (4) obj. -14.6294 iterations 8
Cbc0038I Pass  38: suminf.    1.16684 (3) obj. -14.6294 iterations 6
Cbc0038I Pass  39: suminf.    1.16684 (3) obj. -14.6294 iterations 0
Cbc0038I Pass  40: suminf.    1.21473 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  41: suminf.    1.95236 (7) obj. -14.6294 iterations 18
Cbc0038I Pass  42: suminf.    1.28895 (5) obj. -14.6294 iterations 8
Cbc0038I Pass  43: suminf.    1.62868 (5) obj. -14.6294 iterations 8
Cbc0038I Pass  44: suminf.    1.35526 (6) obj. -14.6294 iterations 5
Cbc0038I Pass  45: suminf.    1.15291 (5) obj. -14.6294 iterations 4
Cbc0038I Pass  46: suminf.    1.03818 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  47: suminf.    1.03818 (3) obj. -14.6294 iterations 0
Cbc0038I Pass  48: suminf.    1.27091 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  49: suminf.    0.83095 (3) obj. -14.6294 iterations 3
Cbc0038I Pass  50: suminf.    0.83095 (3) obj. -14.6294 iterations 0
Cbc0038I Pass  51: suminf.    1.06535 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  52: suminf.    3.16298 (9) obj. -14.6294 iterations 12
Cbc0038I Pass  53: suminf.    2.12568 (7) obj. -14.6294 iterations 4
Cbc0038I Pass  54: suminf.    1.35526 (6) obj. -14.6294 iterations 11
Cbc0038I Pass  55: suminf.    1.35526 (6) obj. -14.6294 iterations 0
Cbc0038I Pass  56: suminf.    1.15291 (5) obj. -14.6294 iterations 4
Cbc0038I Pass  57: suminf.    1.03818 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  58: suminf.    1.03818 (3) obj. -14.6294 iterations 0
Cbc0038I Pass  59: suminf.    1.27091 (3) obj. -14.6294 iterations 2
Cbc0038I Pass  60: suminf.    0.83095 (3) obj. -14.6294 iterations 3
Cbc0038I Rounding solution of -9.53599 is better than previous of -9.29002

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 43 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -9.53599 to -9.83612 (0.11 seconds)
Cbc0038I Round again with cutoff of -19.7147
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    1.45832 (6) obj. -19.7147 iterations 0
Cbc0038I Pass  61: suminf.    1.45832 (6) obj. -19.7147 iterations 0
Cbc0038I Pass  62: suminf.    1.27887 (5) obj. -19.7147 iterations 9
Cbc0038I Pass  63: suminf.    1.02394 (4) obj. -19.7147 iterations 1
Cbc0038I Pass  64: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  65: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  66: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  67: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  68: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  69: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  70: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  71: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  72: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  73: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  74: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  75: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  76: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  77: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  78: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  79: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  80: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  81: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  82: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  83: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  84: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I Pass  85: suminf.    1.49258 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  86: suminf.    1.59096 (4) obj. -19.7147 iterations 3
Cbc0038I Pass  87: suminf.    1.02394 (4) obj. -19.7147 iterations 2
Cbc0038I Pass  88: suminf.    1.02394 (4) obj. -19.7147 iterations 0
Cbc0038I Pass  89: suminf.    1.49258 (4) obj. -19.7147 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 28 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -9.83612 - took 0.10 seconds
Cbc0012I Integer solution of -9.836119 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 30 rows 25 columns
Cbc0031I 16 added rows had average density of 55.625
Cbc0013I At root node, 16 cuts changed objective from -31.58039 to -15.771507 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1336 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 798 row cuts average 70.8 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0012I Integer solution of -10.137038 found by rounding after 3310 iterations and 5 nodes (0.50 seconds)
Cbc0012I Integer solution of -10.926639 found by DiveCoefficient after 3344 iterations and 5 nodes (0.52 seconds)
Cbc0004I Integer solution of -11.401179 found after 3900 iterations and 35 nodes (0.57 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 2 rows 6 columns
Cbc0012I Integer solution of -11.509499 found by RINS after 3970 iterations and 41 nodes (0.59 seconds)
Cbc0004I Integer solution of -11.523249 found after 4008 iterations and 47 nodes (0.60 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 2 rows 6 columns
Cbc0016I Integer solution of -11.523289 found by strong branching after 4605 iterations and 111 nodes (0.65 seconds)
Cbc0010I After 141 nodes, 10 on tree, -11.523289 best solution, best possible -15.771505 (0.68 seconds)
Cbc0001I Search completed - best objective -11.52328899999927, took 5676 iterations and 180 nodes (0.71 seconds)
Cbc0032I Strong branching done 928 times (7381 iterations), fathomed 24 nodes and fixed 47 variables
Cbc0035I Maximum depth 20, 446 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 117 (-36) columns and 1921 (-1383) elements
Clp1000I sum of infeasibilities 3.44426e-06 - average 3.44426e-08, 8 fixed columns
Coin0506I Presolve 92 (-8) rows, 108 (-9) columns and 1700 (-221) elements
Clp0006I 0  Obj 15.717563 Dual inf 4.4246908 (105)
Clp0029I End of values pass after 108 iterations
Clp0014I Perturbing problem by 0.001% of 1.6659852 - largest nonzero change 0 ( 0%) - largest zero change 2.9712752e-05
Clp0000I Optimal - objective value 53.135453
Clp0000I Optimal - objective value 53.135453
Coin0511I After Postsolve, objective 53.135453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.135453
Clp0000I Optimal - objective value 53.135453
Clp0000I Optimal - objective value 53.135453
Clp0000I Optimal - objective value 53.135453
Coin0511I After Postsolve, objective 53.135453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.13545283 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 118 columns (118 integer (118 of which binary)) and 1926 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.419%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 5.33645
Cbc0038I Pass   1: suminf.    2.49713 (31) obj. -45.6537 iterations 21
Cbc0038I Pass   2: suminf.    2.49713 (31) obj. -45.6537 iterations 1
Cbc0038I Pass   3: suminf.    1.46287 (21) obj. -33.1059 iterations 10
Cbc0038I Solution found of -8.03727
Cbc0038I Rounding solution of -8.03728 is better than previous of -8.03727

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -12.0131
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.49713 (31) obj. -45.6537 iterations 0
Cbc0038I Pass   5: suminf.    2.49713 (31) obj. -45.6537 iterations 1
Cbc0038I Pass   6: suminf.    0.54241 (4) obj. -12.0131 iterations 39
Cbc0038I Pass   7: suminf.    0.60962 (4) obj. -12.0131 iterations 10
Cbc0038I Pass   8: suminf.    0.11856 (3) obj. -12.0131 iterations 6
Cbc0038I Pass   9: suminf.    0.30659 (2) obj. -12.0131 iterations 5
Cbc0038I Pass  10: suminf.    1.04430 (11) obj. -12.0131 iterations 30
Cbc0038I Pass  11: suminf.    1.04430 (11) obj. -12.0131 iterations 2
Cbc0038I Pass  12: suminf.    0.37739 (5) obj. -12.0131 iterations 12
Cbc0038I Pass  13: suminf.    0.36604 (5) obj. -12.0131 iterations 7
Cbc0038I Pass  14: suminf.    0.70304 (5) obj. -12.0131 iterations 10
Cbc0038I Pass  15: suminf.    0.70304 (5) obj. -12.0131 iterations 0
Cbc0038I Pass  16: suminf.    0.77354 (10) obj. -12.0131 iterations 15
Cbc0038I Pass  17: suminf.    0.64065 (3) obj. -12.0131 iterations 2
Cbc0038I Pass  18: suminf.    0.15306 (2) obj. -12.4027 iterations 6
Cbc0038I Pass  19: suminf.    0.77354 (10) obj. -12.0131 iterations 9
Cbc0038I Pass  20: suminf.    2.37890 (16) obj. -12.0131 iterations 33
Cbc0038I Pass  21: suminf.    2.09628 (15) obj. -12.0131 iterations 8
Cbc0038I Pass  22: suminf.    1.70732 (8) obj. -12.0131 iterations 21
Cbc0038I Pass  23: suminf.    1.18426 (8) obj. -12.0131 iterations 6
Cbc0038I Pass  24: suminf.    1.38515 (8) obj. -12.0131 iterations 3
Cbc0038I Pass  25: suminf.    1.93471 (12) obj. -12.0131 iterations 14
Cbc0038I Pass  26: suminf.    1.89493 (13) obj. -12.0131 iterations 4
Cbc0038I Pass  27: suminf.    1.53828 (9) obj. -12.0131 iterations 15
Cbc0038I Pass  28: suminf.    1.53828 (9) obj. -12.0131 iterations 2
Cbc0038I Pass  29: suminf.    1.80059 (9) obj. -12.0131 iterations 4
Cbc0038I Pass  30: suminf.    1.80059 (9) obj. -12.0131 iterations 1
Cbc0038I Pass  31: suminf.    1.53828 (9) obj. -12.0131 iterations 3
Cbc0038I Pass  32: suminf.    2.77747 (14) obj. -12.0131 iterations 16
Cbc0038I Pass  33: suminf.    1.66286 (11) obj. -12.0131 iterations 8
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 118 columns, reduced to 7 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -19.1693
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.49713 (31) obj. -45.6537 iterations 0
Cbc0038I Pass  34: suminf.    2.49713 (31) obj. -45.6537 iterations 1
Cbc0038I Pass  35: suminf.    0.76545 (7) obj. -19.1693 iterations 44
Cbc0038I Pass  36: suminf.    0.76545 (7) obj. -19.1693 iterations 1
Cbc0038I Pass  37: suminf.    0.73964 (5) obj. -19.1693 iterations 12
Cbc0038I Pass  38: suminf.    0.37892 (5) obj. -19.1693 iterations 5
Cbc0038I Pass  39: suminf.    0.73964 (5) obj. -19.1693 iterations 8
Cbc0038I Pass  40: suminf.    1.65217 (9) obj. -19.1693 iterations 12
Cbc0038I Pass  41: suminf.    1.65217 (9) obj. -19.1693 iterations 0
Cbc0038I Pass  42: suminf.    1.35070 (7) obj. -19.1693 iterations 10
Cbc0038I Pass  43: suminf.    1.20623 (7) obj. -19.4582 iterations 4
Cbc0038I Pass  44: suminf.    1.35070 (7) obj. -19.1693 iterations 7
Cbc0038I Pass  45: suminf.    1.92758 (10) obj. -19.1693 iterations 21
Cbc0038I Pass  46: suminf.    1.92758 (10) obj. -19.1693 iterations 6
Cbc0038I Pass  47: suminf.    1.76419 (7) obj. -19.1693 iterations 9
Cbc0038I Pass  48: suminf.    1.76419 (7) obj. -19.1693 iterations 2
Cbc0038I Pass  49: suminf.    1.39430 (7) obj. -19.1693 iterations 5
Cbc0038I Pass  50: suminf.    1.01373 (6) obj. -19.4605 iterations 2
Cbc0038I Pass  51: suminf.    1.15932 (6) obj. -19.1693 iterations 6
Cbc0038I Pass  52: suminf.    0.99530 (6) obj. -19.4973 iterations 3
Cbc0038I Pass  53: suminf.    1.60062 (14) obj. -19.1693 iterations 21
Cbc0038I Pass  54: suminf.    1.60062 (14) obj. -19.1693 iterations 3
Cbc0038I Pass  55: suminf.    1.17230 (9) obj. -19.1693 iterations 9
Cbc0038I Pass  56: suminf.    1.17230 (9) obj. -19.1693 iterations 3
Cbc0038I Pass  57: suminf.    1.59485 (8) obj. -19.1693 iterations 7
Cbc0038I Pass  58: suminf.    1.59485 (8) obj. -19.1693 iterations 3
Cbc0038I Pass  59: suminf.    1.60734 (8) obj. -19.1693 iterations 5
Cbc0038I Pass  60: suminf.    1.21783 (8) obj. -19.9483 iterations 3
Cbc0038I Pass  61: suminf.    1.60734 (8) obj. -19.1693 iterations 5
Cbc0038I Pass  62: suminf.    2.06783 (15) obj. -19.1693 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.03728 - took 0.05 seconds
Cbc0012I Integer solution of -8.037277 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 42 added rows had average density of 26.261905
Cbc0013I At root node, 42 cuts changed objective from -32.601721 to -14.227265 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8126 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 950 row cuts average 90.7 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 57 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 560 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.660 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.037277 best solution, best possible -14.227265 (1.95 seconds)
Cbc0012I Integer solution of -10.471759 found by DiveCoefficient after 3888 iterations and 3 nodes (2.32 seconds)
Cbc0012I Integer solution of -10.481189 found by DiveCoefficient after 4018 iterations and 7 nodes (2.46 seconds)
Cbc0012I Integer solution of -10.647979 found by DiveCoefficient after 4018 iterations and 7 nodes (2.46 seconds)
Cbc0012I Integer solution of -11.389969 found by DiveCoefficient after 4033 iterations and 9 nodes (2.50 seconds)
Cbc0010I After 13 nodes, 8 on tree, -11.389969 best solution, best possible -14.227265 (2.67 seconds)
Cbc0012I Integer solution of -11.513859 found by rounding after 4215 iterations and 20 nodes (2.82 seconds)
Cbc0012I Integer solution of -11.518929 found by DiveCoefficient after 4261 iterations and 32 nodes (2.97 seconds)
Cbc0004I Integer solution of -11.523289 found after 4316 iterations and 40 nodes (3.11 seconds)
Cbc0038I Full problem 101 rows 118 columns, reduced to 2 rows 5 columns
Cbc0038I Full problem 143 rows 118 columns, reduced to 78 rows 94 columns
Cbc0044I Reduced cost fixing - 78 rows, 94 columns - restarting search
Cbc0038I Initial state - 21 integers unsatisfied sum - 1.88062
Cbc0038I Pass   1: suminf.    1.53205 (19) obj. -30.0647 iterations 13
Cbc0038I Pass   2: suminf.    0.45269 (8) obj. -15.5846 iterations 11
Cbc0038I Pass   3: suminf.    0.42904 (2) obj. -11.5233 iterations 18
Cbc0038I Pass   4: suminf.    0.08333 (1) obj. -11.7039 iterations 4
Cbc0038I Pass   5: suminf.    1.31460 (9) obj. -11.5233 iterations 19
Cbc0038I Pass   6: suminf.    0.95530 (6) obj. -11.5233 iterations 9
Cbc0038I Pass   7: suminf.    0.93117 (5) obj. -11.5233 iterations 7
Cbc0038I Pass   8: suminf.    0.93117 (5) obj. -11.5233 iterations 4
Cbc0038I Pass   9: suminf.    0.74375 (4) obj. -11.5233 iterations 4
Cbc0038I Pass  10: suminf.    0.38363 (3) obj. -12.0601 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.42 seconds)
Cbc0038I Full problem 79 rows 94 columns, reduced to 79 rows 94 columns
Cbc0038I After 3.50 seconds - Feasibility pump exiting with objective of -8.03728 - took 0.09 seconds
Cbc0031I 39 added rows had average density of 28.589744
Cbc0013I At root node, 39 cuts changed objective from -30.893813 to -14.227224 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 755 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 41.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 118 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 40.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 54 row cuts average 27.9 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -14.227224 (3.74 seconds)
Cbc0010I After 37 nodes, 10 on tree, 1e+50 best solution, best possible -14.227224 (4.75 seconds)
Cbc0010I After 95 nodes, 8 on tree, 1e+50 best solution, best possible -14.227224 (5.76 seconds)
Cbc0010I After 144 nodes, 1 on tree, 1e+50 best solution, best possible -12.000578 (6.77 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2604 iterations and 166 nodes (7.01 seconds)
Cbc0032I Strong branching done 1036 times (12085 iterations), fathomed 25 nodes and fixed 23 variables
Cbc0035I Maximum depth 14, 254 variables fixed on reduced cost
Cbc0038I Probing was tried 264 times and created 1258 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
Cbc0038I Gomory was tried 242 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I Knapsack was tried 11 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 11 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I OddWheel was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I MixedIntegerRounding2 was tried 242 times and created 261 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 242 times and created 205 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Cbc0038I ZeroHalf was tried 242 times and created 269 cuts of which 0 were active after adding rounds of cuts (1.483 seconds)
Cbc0038I Stored from first was tried 242 times and created 94 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -11.52328899999927, took 7044 iterations and 216 nodes (7.01 seconds)
Cbc0032I Strong branching done 506 times (7375 iterations), fathomed 8 nodes and fixed 10 variables
Cbc0035I Maximum depth 12, 85 variables fixed on reduced cost
Total time (CPU seconds):       4.37   (Wallclock seconds):       7.03

