Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 66 (-12) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 9.32203e-06 - average 8.10612e-08, 20 fixed columns
Coin0506I Presolve 76 (-39) rows, 46 (-20) columns and 237 (-118) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.24241861 - largest nonzero change 0 ( 0%) - largest zero change 2.664141e-05
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Coin0511I After Postsolve, objective 50.833232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Coin0511I After Postsolve, objective 50.833232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.83323157 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 66 columns (65 integer (65 of which binary)) and 368 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.584%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 4.16173
Cbc0038I Solution found of -4.00011
Cbc0038I Relaxing continuous gives -4.40577
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -4.40577 to -24.204 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.8622
Cbc0038I Pass   1: suminf.    1.45836 (10) obj. -26.8622 iterations 39
Cbc0038I Pass   2: suminf.    0.82753 (3) obj. -26.8622 iterations 19
Cbc0038I Pass   3: suminf.    0.82753 (3) obj. -26.8622 iterations 0
Cbc0038I Pass   4: suminf.    1.33257 (5) obj. -26.8622 iterations 9
Cbc0038I Pass   5: suminf.    0.88031 (3) obj. -26.8622 iterations 4
Cbc0038I Pass   6: suminf.    0.65875 (3) obj. -26.8622 iterations 4
Cbc0038I Pass   7: suminf.    0.65875 (3) obj. -26.8622 iterations 0
Cbc0038I Pass   8: suminf.    1.20408 (4) obj. -26.8622 iterations 5
Cbc0038I Pass   9: suminf.    2.37402 (6) obj. -26.8622 iterations 14
Cbc0038I Pass  10: suminf.    1.09288 (4) obj. -26.8622 iterations 9
Cbc0038I Pass  11: suminf.    0.99817 (4) obj. -26.8622 iterations 4
Cbc0038I Pass  12: suminf.    1.12616 (4) obj. -26.8622 iterations 12
Cbc0038I Pass  13: suminf.    0.99260 (3) obj. -26.8622 iterations 3
Cbc0038I Pass  14: suminf.    0.78584 (3) obj. -26.8622 iterations 4
Cbc0038I Pass  15: suminf.    0.78584 (3) obj. -26.8622 iterations 0
Cbc0038I Pass  16: suminf.    0.57906 (4) obj. -26.8622 iterations 6
Cbc0038I Pass  17: suminf.    0.55017 (4) obj. -26.8622 iterations 7
Cbc0038I Pass  18: suminf.    0.95104 (4) obj. -26.8622 iterations 13
Cbc0038I Pass  19: suminf.    0.66399 (2) obj. -26.8622 iterations 11
Cbc0038I Pass  20: suminf.    1.12254 (3) obj. -26.8622 iterations 5
Cbc0038I Pass  21: suminf.    0.72959 (3) obj. -26.8622 iterations 4
Cbc0038I Pass  22: suminf.    1.99597 (7) obj. -26.8622 iterations 21
Cbc0038I Pass  23: suminf.    1.70385 (6) obj. -26.8622 iterations 8
Cbc0038I Pass  24: suminf.    1.70972 (5) obj. -26.8622 iterations 5
Cbc0038I Pass  25: suminf.    1.64426 (5) obj. -26.8622 iterations 3
Cbc0038I Pass  26: suminf.    1.15082 (4) obj. -26.8622 iterations 5
Cbc0038I Pass  27: suminf.    1.05409 (4) obj. -26.8622 iterations 2
Cbc0038I Pass  28: suminf.    0.76226 (2) obj. -26.8622 iterations 8
Cbc0038I Pass  29: suminf.    0.76456 (2) obj. -26.8622 iterations 1
Cbc0038I Pass  30: suminf.    0.82991 (3) obj. -26.8622 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -24.204 to -24.4044 (0.05 seconds)
Cbc0038I Round again with cutoff of -31.6467
Cbc0038I Pass  30: suminf.    1.83436 (11) obj. -31.6467 iterations 3
Cbc0038I Pass  31: suminf.    1.07236 (4) obj. -31.6467 iterations 20
Cbc0038I Pass  32: suminf.    1.07236 (4) obj. -31.6467 iterations 0
Cbc0038I Pass  33: suminf.    1.48427 (5) obj. -31.6467 iterations 12
Cbc0038I Pass  34: suminf.    0.81320 (4) obj. -31.6467 iterations 8
Cbc0038I Pass  35: suminf.    0.81256 (5) obj. -31.6467 iterations 2
Cbc0038I Pass  36: suminf.    1.08237 (5) obj. -31.6467 iterations 12
Cbc0038I Pass  37: suminf.    1.06239 (6) obj. -31.6467 iterations 2
Cbc0038I Pass  38: suminf.    1.17559 (4) obj. -31.6467 iterations 9
Cbc0038I Pass  39: suminf.    0.72064 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  40: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  41: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  42: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  43: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  44: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  45: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  46: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  47: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  48: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  49: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  50: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  51: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  52: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  53: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  54: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  55: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  56: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  57: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  58: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  59: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -24.4044 - took 0.05 seconds
Cbc0012I Integer solution of -24.40442 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 114 rows 66 columns, reduced to 45 rows 27 columns
Cbc0031I 14 added rows had average density of 44.214286
Cbc0013I At root node, 14 cuts changed objective from -50.784697 to -42.928517 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3894 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1065 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0012I Integer solution of -28.61352 found by rounding after 3674 iterations and 9 nodes (0.40 seconds)
Cbc0012I Integer solution of -29.32872 found by rounding after 3684 iterations and 10 nodes (0.40 seconds)
Cbc0001I Search completed - best objective -29.32872, took 3854 iterations and 16 nodes (0.40 seconds)
Cbc0032I Strong branching done 246 times (3257 iterations), fathomed 0 nodes and fixed 33 variables
Cbc0035I Maximum depth 6, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-64) rows, 105 (-47) columns and 1549 (-1754) elements
Clp1000I sum of infeasibilities 2.87913e-07 - average 3.19903e-09, 21 fixed columns
Coin0506I Presolve 70 (-20) rows, 83 (-22) columns and 978 (-571) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 1.5797845 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 112.19113
Clp0000I Optimal - objective value 112.19113
Coin0511I After Postsolve, objective 112.19113, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 112.19113
Clp0000I Optimal - objective value 112.19113
Clp0000I Optimal - objective value 112.19113
Coin0511I After Postsolve, objective 112.19113, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.1911335 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 107 columns (107 integer (107 of which binary)) and 1568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.359%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.19536
Cbc0038I Pass   1: suminf.    1.16663 (30) obj. -31.5643 iterations 16
Cbc0038I Pass   2: suminf.    1.16663 (30) obj. -31.5643 iterations 0
Cbc0038I Pass   3: suminf.    0.64396 (20) obj. -20.1884 iterations 10
Cbc0038I Pass   4: suminf.    0.06994 (3) obj. 5.92147 iterations 17
Cbc0038I Solution found of 8.85153
Cbc0038I Rounding solution of -4.63843 is better than previous of 8.85153

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 107 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -4.63843 to -39.1485 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.814
Cbc0038I Pass   5: suminf.    1.85013 (38) obj. -45.814 iterations 4
Cbc0038I Pass   6: suminf.    1.85013 (38) obj. -45.814 iterations 0
Cbc0038I Pass   7: suminf.    1.15643 (17) obj. -66.1657 iterations 21
Cbc0038I Pass   8: suminf.    0.18413 (4) obj. -48.6874 iterations 13
Cbc0038I Pass   9: suminf.    0.35890 (1) obj. -45.814 iterations 6
Cbc0038I Pass  10: suminf.    0.21622 (1) obj. -53.7048 iterations 3
Cbc0038I Pass  11: suminf.    1.38871 (10) obj. -45.814 iterations 22
Cbc0038I Pass  12: suminf.    1.38871 (10) obj. -45.814 iterations 7
Cbc0038I Pass  13: suminf.    0.02802 (1) obj. -45.814 iterations 11
Cbc0038I Pass  14: suminf.    0.02802 (1) obj. -45.814 iterations 0
Cbc0038I Pass  15: suminf.    0.37838 (1) obj. -52.3208 iterations 3
Cbc0038I Pass  16: suminf.    2.18661 (17) obj. -45.814 iterations 27
Cbc0038I Pass  17: suminf.    2.18661 (17) obj. -45.814 iterations 4
Cbc0038I Pass  18: suminf.    0.31823 (1) obj. -45.814 iterations 18
Cbc0038I Pass  19: suminf.    0.31823 (1) obj. -45.814 iterations 0
Cbc0038I Pass  20: suminf.    0.40541 (1) obj. -47.4331 iterations 2
Cbc0038I Pass  21: suminf.    1.48405 (8) obj. -45.814 iterations 12
Cbc0038I Pass  22: suminf.    0.87589 (7) obj. -45.814 iterations 2
Cbc0038I Pass  23: suminf.    0.42282 (1) obj. -45.814 iterations 7
Cbc0038I Pass  24: suminf.    0.42282 (1) obj. -45.814 iterations 0
Cbc0038I Pass  25: suminf.    0.45946 (1) obj. -46.4944 iterations 2
Cbc0038I Pass  26: suminf.    1.25603 (11) obj. -45.814 iterations 19
Cbc0038I Pass  27: suminf.    1.00811 (10) obj. -45.814 iterations 4
Cbc0038I Pass  28: suminf.    0.33286 (1) obj. -45.814 iterations 10
Cbc0038I Pass  29: suminf.    0.13514 (1) obj. -49.4862 iterations 2
Cbc0038I Pass  30: suminf.    0.33286 (1) obj. -45.814 iterations 1
Cbc0038I Pass  31: suminf.    0.97717 (6) obj. -45.814 iterations 10
Cbc0038I Pass  32: suminf.    0.33118 (4) obj. -45.814 iterations 5
Cbc0038I Pass  33: suminf.    0.27289 (1) obj. -45.814 iterations 4
Cbc0038I Pass  34: suminf.    0.27289 (1) obj. -45.814 iterations 0
Cbc0038I Rounding solution of -48.7648 is better than previous of -39.1485

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 107 columns, reduced to 12 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -48.7648 to -52.8325 (0.04 seconds)
Cbc0038I Round again with cutoff of -63.4266
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.91390 (37) obj. -88.8399 iterations 1
Cbc0038I Pass  35: suminf.    1.09862 (20) obj. -68.499 iterations 17
Cbc0038I Pass  36: suminf.    1.30827 (5) obj. -63.4266 iterations 26
Cbc0038I Pass  37: suminf.    1.30827 (5) obj. -63.4266 iterations 0
Cbc0038I Pass  38: suminf.    0.75750 (3) obj. -63.4266 iterations 7
Cbc0038I Pass  39: suminf.    0.28287 (2) obj. -63.4266 iterations 4
Cbc0038I Pass  40: suminf.    0.47389 (2) obj. -63.4266 iterations 3
Cbc0038I Pass  41: suminf.    2.32926 (16) obj. -63.4266 iterations 32
Cbc0038I Pass  42: suminf.    1.48152 (13) obj. -63.4266 iterations 7
Cbc0038I Pass  43: suminf.    1.07606 (5) obj. -63.4266 iterations 24
Cbc0038I Pass  44: suminf.    0.66721 (5) obj. -64.6532 iterations 4
Cbc0038I Pass  45: suminf.    0.98361 (5) obj. -63.4266 iterations 8
Cbc0038I Pass  46: suminf.    0.82172 (4) obj. -63.5285 iterations 3
Cbc0038I Pass  47: suminf.    1.35303 (11) obj. -65.1188 iterations 16
Cbc0038I Pass  48: suminf.    1.35303 (11) obj. -65.1188 iterations 1
Cbc0038I Pass  49: suminf.    1.03153 (6) obj. -63.4266 iterations 16
Cbc0038I Pass  50: suminf.    0.89360 (5) obj. -63.4566 iterations 3
Cbc0038I Pass  51: suminf.    1.03182 (6) obj. -63.4266 iterations 6
Cbc0038I Pass  52: suminf.    0.88115 (6) obj. -63.4266 iterations 3
Cbc0038I Pass  53: suminf.    0.94635 (6) obj. -63.4266 iterations 10
Cbc0038I Pass  54: suminf.    0.84700 (5) obj. -63.4266 iterations 5
Cbc0038I Pass  55: suminf.    0.98653 (4) obj. -63.4266 iterations 8
Cbc0038I Pass  56: suminf.    0.93106 (5) obj. -63.4266 iterations 4
Cbc0038I Pass  57: suminf.    0.97172 (9) obj. -63.4266 iterations 12
Cbc0038I Pass  58: suminf.    0.97172 (9) obj. -63.4266 iterations 5
Cbc0038I Pass  59: suminf.    0.62849 (5) obj. -63.4266 iterations 16
Cbc0038I Pass  60: suminf.    0.33963 (3) obj. -63.4266 iterations 2
Cbc0038I Pass  61: suminf.    0.42527 (3) obj. -63.4266 iterations 3
Cbc0038I Pass  62: suminf.    1.23916 (6) obj. -63.4266 iterations 8
Cbc0038I Pass  63: suminf.    1.16989 (6) obj. -63.4266 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 107 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -52.8325 - took 0.03 seconds
Cbc0012I Integer solution of -52.83253 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 91 rows 107 columns, reduced to 4 rows 5 columns
Cbc0012I Integer solution of -55.384 found by DiveCoefficient after 100 iterations and 0 nodes (0.14 seconds)
Cbc0031I 18 added rows had average density of 7.5555556
Cbc0013I At root node, 18 cuts changed objective from -105.80265 to -55.384001 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 154 row cuts average 2.8 elements, 48 column cuts (48 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 39.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55.38400000000001, took 100 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 66 (-12) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 9.32203e-06 - average 8.10612e-08, 20 fixed columns
Coin0506I Presolve 76 (-39) rows, 46 (-20) columns and 237 (-118) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.24241861 - largest nonzero change 0 ( 0%) - largest zero change 2.664141e-05
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Coin0511I After Postsolve, objective 50.833232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Clp0000I Optimal - objective value 50.833232
Coin0511I After Postsolve, objective 50.833232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.83323157 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 66 columns (65 integer (65 of which binary)) and 368 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.584%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 4.16173
Cbc0038I Solution found of -4.00011
Cbc0038I Relaxing continuous gives -4.40577
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -4.40577 to -24.204 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.8622
Cbc0038I Pass   1: suminf.    1.45836 (10) obj. -26.8622 iterations 39
Cbc0038I Pass   2: suminf.    0.82753 (3) obj. -26.8622 iterations 19
Cbc0038I Pass   3: suminf.    0.82753 (3) obj. -26.8622 iterations 0
Cbc0038I Pass   4: suminf.    1.33257 (5) obj. -26.8622 iterations 9
Cbc0038I Pass   5: suminf.    0.88031 (3) obj. -26.8622 iterations 4
Cbc0038I Pass   6: suminf.    0.65875 (3) obj. -26.8622 iterations 4
Cbc0038I Pass   7: suminf.    0.65875 (3) obj. -26.8622 iterations 0
Cbc0038I Pass   8: suminf.    1.20408 (4) obj. -26.8622 iterations 5
Cbc0038I Pass   9: suminf.    2.37402 (6) obj. -26.8622 iterations 14
Cbc0038I Pass  10: suminf.    1.09288 (4) obj. -26.8622 iterations 9
Cbc0038I Pass  11: suminf.    0.99817 (4) obj. -26.8622 iterations 4
Cbc0038I Pass  12: suminf.    1.12616 (4) obj. -26.8622 iterations 12
Cbc0038I Pass  13: suminf.    0.99260 (3) obj. -26.8622 iterations 3
Cbc0038I Pass  14: suminf.    0.78584 (3) obj. -26.8622 iterations 4
Cbc0038I Pass  15: suminf.    0.78584 (3) obj. -26.8622 iterations 0
Cbc0038I Pass  16: suminf.    0.57906 (4) obj. -26.8622 iterations 6
Cbc0038I Pass  17: suminf.    0.55017 (4) obj. -26.8622 iterations 7
Cbc0038I Pass  18: suminf.    0.95104 (4) obj. -26.8622 iterations 13
Cbc0038I Pass  19: suminf.    0.66399 (2) obj. -26.8622 iterations 11
Cbc0038I Pass  20: suminf.    1.12254 (3) obj. -26.8622 iterations 5
Cbc0038I Pass  21: suminf.    0.72959 (3) obj. -26.8622 iterations 4
Cbc0038I Pass  22: suminf.    1.99597 (7) obj. -26.8622 iterations 21
Cbc0038I Pass  23: suminf.    1.70385 (6) obj. -26.8622 iterations 8
Cbc0038I Pass  24: suminf.    1.70972 (5) obj. -26.8622 iterations 5
Cbc0038I Pass  25: suminf.    1.64426 (5) obj. -26.8622 iterations 3
Cbc0038I Pass  26: suminf.    1.15082 (4) obj. -26.8622 iterations 5
Cbc0038I Pass  27: suminf.    1.05409 (4) obj. -26.8622 iterations 2
Cbc0038I Pass  28: suminf.    0.76226 (2) obj. -26.8622 iterations 8
Cbc0038I Pass  29: suminf.    0.76456 (2) obj. -26.8622 iterations 1
Cbc0038I Pass  30: suminf.    0.82991 (3) obj. -26.8622 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -24.204 to -24.4044 (0.06 seconds)
Cbc0038I Round again with cutoff of -31.6467
Cbc0038I Pass  30: suminf.    1.83436 (11) obj. -31.6467 iterations 3
Cbc0038I Pass  31: suminf.    1.07236 (4) obj. -31.6467 iterations 20
Cbc0038I Pass  32: suminf.    1.07236 (4) obj. -31.6467 iterations 0
Cbc0038I Pass  33: suminf.    1.48427 (5) obj. -31.6467 iterations 12
Cbc0038I Pass  34: suminf.    0.81320 (4) obj. -31.6467 iterations 8
Cbc0038I Pass  35: suminf.    0.81256 (5) obj. -31.6467 iterations 2
Cbc0038I Pass  36: suminf.    1.08237 (5) obj. -31.6467 iterations 12
Cbc0038I Pass  37: suminf.    1.06239 (6) obj. -31.6467 iterations 2
Cbc0038I Pass  38: suminf.    1.17559 (4) obj. -31.6467 iterations 9
Cbc0038I Pass  39: suminf.    0.72064 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  40: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  41: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  42: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  43: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  44: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  45: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  46: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  47: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  48: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  49: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  50: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  51: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  52: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  53: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I Pass  54: suminf.    0.95003 (4) obj. -31.6467 iterations 7
Cbc0038I Pass  55: suminf.    0.75041 (3) obj. -31.6467 iterations 1
Cbc0038I Pass  56: suminf.    0.93162 (3) obj. -31.6467 iterations 6
Cbc0038I Pass  57: suminf.    0.72064 (3) obj. -31.6467 iterations 2
Cbc0038I Pass  58: suminf.    0.87892 (5) obj. -31.6467 iterations 7
Cbc0038I Pass  59: suminf.    0.85620 (6) obj. -31.6467 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 66 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -24.4044 - took 0.06 seconds
Cbc0012I Integer solution of -24.40442 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 114 rows 66 columns, reduced to 45 rows 27 columns
Cbc0031I 14 added rows had average density of 44.214286
Cbc0013I At root node, 14 cuts changed objective from -50.784697 to -42.928517 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3894 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1065 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0012I Integer solution of -28.61352 found by rounding after 3674 iterations and 9 nodes (0.43 seconds)
Cbc0012I Integer solution of -29.32872 found by rounding after 3684 iterations and 10 nodes (0.43 seconds)
Cbc0001I Search completed - best objective -29.32872, took 3854 iterations and 16 nodes (0.43 seconds)
Cbc0032I Strong branching done 246 times (3257 iterations), fathomed 0 nodes and fixed 33 variables
Cbc0035I Maximum depth 6, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-66) rows, 104 (-49) columns and 1507 (-1797) elements
Clp1000I sum of infeasibilities 1.53908e-07 - average 1.7293e-09, 60 fixed columns
Coin0506I Presolve 34 (-55) rows, 44 (-60) columns and 151 (-1356) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.5847021 - largest nonzero change 1.2546029e-05 ( 0.00076683715%) - largest zero change 2.6168778e-05
Clp0000I Optimal - objective value 5.183981
Clp0000I Optimal - objective value 5.183981
Coin0511I After Postsolve, objective 5.183981, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4446393 - largest nonzero change 1.2441502e-05 ( 0.00085132148%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 67.291974
Clp0000I Optimal - objective value 67.291974
Clp0000I Optimal - objective value 67.291974
Coin0511I After Postsolve, objective 67.291974, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.29197418 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 106 columns (106 integer (106 of which binary)) and 1526 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.303%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 3.6577
Cbc0038I Pass   1: suminf.    1.46548 (30) obj. -49.9931 iterations 13
Cbc0038I Pass   2: suminf.    1.46548 (30) obj. -49.9931 iterations 0
Cbc0038I Pass   3: suminf.    0.84010 (20) obj. -33.1212 iterations 10
Cbc0038I Pass   4: suminf.    0.32009 (10) obj. -20.8029 iterations 10
Cbc0038I Solution found of -10.1493
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 106 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -15.2014
Cbc0038I Pass   5: suminf.    1.46548 (30) obj. -49.9931 iterations 0
Cbc0038I Pass   6: suminf.    1.46548 (30) obj. -49.9931 iterations 0
Cbc0038I Pass   7: suminf.    0.23842 (8) obj. -18.8846 iterations 24
Cbc0038I Pass   8: suminf.    0.28848 (3) obj. -15.2014 iterations 12
Cbc0038I Pass   9: suminf.    0.32453 (1) obj. -15.2014 iterations 4
Cbc0038I Pass  10: suminf.    0.48649 (1) obj. -17.5745 iterations 3
Cbc0038I Pass  11: suminf.    0.38574 (1) obj. -15.2014 iterations 2
Cbc0038I Pass  12: suminf.    1.59631 (8) obj. -15.2014 iterations 23
Cbc0038I Pass  13: suminf.    0.54826 (8) obj. -15.2014 iterations 7
Cbc0038I Pass  14: suminf.    0.69108 (3) obj. -15.2014 iterations 8
Cbc0038I Pass  15: suminf.    0.48818 (2) obj. -16.6218 iterations 1
Cbc0038I Pass  16: suminf.    0.69108 (2) obj. -15.2014 iterations 5
Cbc0038I Pass  17: suminf.    1.13170 (15) obj. -15.2014 iterations 34
Cbc0038I Pass  18: suminf.    0.98523 (13) obj. -15.2014 iterations 7
Cbc0038I Pass  19: suminf.    0.81999 (3) obj. -15.2014 iterations 20
Cbc0038I Pass  20: suminf.    0.46724 (3) obj. -16.2596 iterations 4
Cbc0038I Pass  21: suminf.    1.07732 (6) obj. -15.2014 iterations 6
Cbc0038I Pass  22: suminf.    1.07732 (6) obj. -15.2014 iterations 0
Cbc0038I Pass  23: suminf.    2.06932 (7) obj. -15.2014 iterations 6
Cbc0038I Pass  24: suminf.    0.68659 (5) obj. -15.2014 iterations 6
Cbc0038I Pass  25: suminf.    0.68659 (5) obj. -15.2014 iterations 0
Cbc0038I Pass  26: suminf.    0.55839 (3) obj. -15.2014 iterations 14
Cbc0038I Pass  27: suminf.    0.38223 (3) obj. -15.2014 iterations 3
Cbc0038I Pass  28: suminf.    0.55953 (3) obj. -15.2014 iterations 3
Cbc0038I Pass  29: suminf.    1.28771 (7) obj. -15.2014 iterations 17
Cbc0038I Pass  30: suminf.    1.28771 (7) obj. -15.2014 iterations 2
Cbc0038I Pass  31: suminf.    0.73288 (4) obj. -15.2014 iterations 15
Cbc0038I Pass  32: suminf.    0.73288 (4) obj. -15.2014 iterations 3
Cbc0038I Pass  33: suminf.    0.78433 (3) obj. -15.2014 iterations 4
Cbc0038I Pass  34: suminf.    0.32478 (3) obj. -15.2014 iterations 2
Cbc0038I Rounding solution of -16.7051 is better than previous of -10.1493

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 106 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -16.7051 to -17.6991 (0.05 seconds)
Cbc0038I Round again with cutoff of -26.2932
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.46548 (30) obj. -49.9931 iterations 0
Cbc0038I Pass  35: suminf.    1.46548 (30) obj. -49.9931 iterations 0
Cbc0038I Pass  36: suminf.    0.61068 (18) obj. -26.2932 iterations 17
Cbc0038I Pass  37: suminf.    0.93002 (5) obj. -26.2932 iterations 23
Cbc0038I Pass  38: suminf.    0.93002 (5) obj. -26.2932 iterations 1
Cbc0038I Pass  39: suminf.    0.59413 (4) obj. -26.2932 iterations 9
Cbc0038I Pass  40: suminf.    0.59413 (4) obj. -26.2932 iterations 0
Cbc0038I Pass  41: suminf.    0.79463 (3) obj. -26.2932 iterations 8
Cbc0038I Pass  42: suminf.    0.69863 (4) obj. -26.2932 iterations 2
Cbc0038I Pass  43: suminf.    0.78162 (3) obj. -26.2932 iterations 14
Cbc0038I Pass  44: suminf.    0.26454 (3) obj. -28.2924 iterations 7
Cbc0038I Pass  45: suminf.    0.79463 (3) obj. -26.2932 iterations 8
Cbc0038I Pass  46: suminf.    1.28785 (11) obj. -26.2932 iterations 13
Cbc0038I Pass  47: suminf.    1.28785 (11) obj. -26.2932 iterations 1
Cbc0038I Pass  48: suminf.    0.39537 (5) obj. -26.2932 iterations 19
Cbc0038I Pass  49: suminf.    0.39537 (5) obj. -26.2932 iterations 0
Cbc0038I Pass  50: suminf.    1.62161 (6) obj. -26.2932 iterations 9
Cbc0038I Pass  51: suminf.    1.62161 (6) obj. -26.2932 iterations 1
Cbc0038I Pass  52: suminf.    0.58780 (4) obj. -26.2932 iterations 5
Cbc0038I Pass  53: suminf.    0.40978 (3) obj. -26.2932 iterations 5
Cbc0038I Pass  54: suminf.    0.43381 (3) obj. -26.2932 iterations 5
Cbc0038I Pass  55: suminf.    1.25432 (8) obj. -26.2932 iterations 17
Cbc0038I Pass  56: suminf.    1.06330 (7) obj. -26.2932 iterations 5
Cbc0038I Pass  57: suminf.    0.71891 (5) obj. -26.2932 iterations 13
Cbc0038I Pass  58: suminf.    0.71891 (5) obj. -26.2932 iterations 5
Cbc0038I Pass  59: suminf.    0.97644 (5) obj. -26.2932 iterations 5
Cbc0038I Pass  60: suminf.    0.97644 (5) obj. -26.2932 iterations 2
Cbc0038I Pass  61: suminf.    0.71891 (5) obj. -26.2932 iterations 4
Cbc0038I Pass  62: suminf.    1.43391 (12) obj. -26.2932 iterations 18
Cbc0038I Pass  63: suminf.    1.30999 (10) obj. -26.2932 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 106 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -17.6991 - took 0.03 seconds
Cbc0012I Integer solution of -17.69908 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 90 rows 106 columns, reduced to 4 rows 6 columns
Cbc0031I 41 added rows had average density of 22.536585
Cbc0013I At root node, 41 cuts changed objective from -60.66919 to -32.196945 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7365 row cuts average 2.4 elements, 1 column cuts (1 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 809 row cuts average 94.1 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 520 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 529 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 306 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 202 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.739 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17.69908 best solution, best possible -32.196945 (2.09 seconds)
Cbc0012I Integer solution of -25.86268 found by rounding after 3188 iterations and 1 nodes (2.10 seconds)
Cbc0012I Integer solution of -29.32872 found by DiveCoefficient after 3188 iterations and 1 nodes (2.10 seconds)
Cbc0001I Search completed - best objective -29.32872, took 3755 iterations and 12 nodes (2.50 seconds)
Cbc0032I Strong branching done 264 times (4580 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 33 variables fixed on reduced cost
Total time (CPU seconds):       1.79   (Wallclock seconds):       2.51

