Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 374 (-79) elements
Clp1000I sum of infeasibilities 1.77554e-05 - average 1.44353e-07, 10 fixed columns
Coin0506I Presolve 103 (-20) rows, 58 (-10) columns and 315 (-59) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 0.34609985 - largest nonzero change 0 ( 0%) - largest zero change 2.971114e-05
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Coin0511I After Postsolve, objective 54.499189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Coin0511I After Postsolve, objective 54.499189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.49918879 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 68 columns (67 integer (67 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.64853
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.8147 iterations 33
Cbc0038I Solution found of -0.8147
Cbc0038I Relaxing continuous gives -0.8147
Cbc0038I Rounding solution of -28.809 is better than previous of -0.8147

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -31.2828
Cbc0038I Pass   2: suminf.    1.29513 (6) obj. -31.2828 iterations 6
Cbc0038I Pass   3: suminf.    0.98916 (5) obj. -31.2828 iterations 1
Cbc0038I Pass   4: suminf.    0.98916 (5) obj. -31.2828 iterations 0
Cbc0038I Pass   5: suminf.    0.90510 (4) obj. -31.2828 iterations 8
Cbc0038I Pass   6: suminf.    0.44293 (2) obj. -31.2828 iterations 4
Cbc0038I Pass   7: suminf.    0.44293 (2) obj. -31.2828 iterations 0
Cbc0038I Pass   8: suminf.    0.65665 (2) obj. -31.2828 iterations 2
Cbc0038I Pass   9: suminf.    2.01415 (10) obj. -31.2828 iterations 18
Cbc0038I Pass  10: suminf.    1.27540 (8) obj. -31.2828 iterations 11
Cbc0038I Pass  11: suminf.    0.90510 (4) obj. -31.2828 iterations 13
Cbc0038I Pass  12: suminf.    0.44293 (2) obj. -31.2828 iterations 4
Cbc0038I Pass  13: suminf.    0.44293 (2) obj. -31.2828 iterations 0
Cbc0038I Pass  14: suminf.    0.65665 (2) obj. -31.2828 iterations 2
Cbc0038I Pass  15: suminf.    1.19451 (6) obj. -31.2828 iterations 9
Cbc0038I Pass  16: suminf.    0.68434 (3) obj. -31.2828 iterations 5
Cbc0038I Pass  17: suminf.    0.78648 (2) obj. -31.2828 iterations 5
Cbc0038I Pass  18: suminf.    0.65130 (2) obj. -31.2828 iterations 1
Cbc0038I Pass  19: suminf.    0.65130 (2) obj. -31.2828 iterations 0
Cbc0038I Pass  20: suminf.    3.62529 (13) obj. -31.2828 iterations 15
Cbc0038I Pass  21: suminf.    1.69485 (7) obj. -31.2828 iterations 13
Cbc0038I Pass  22: suminf.    1.27283 (5) obj. -31.2828 iterations 13
Cbc0038I Pass  23: suminf.    0.92094 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  24: suminf.    1.26429 (3) obj. -31.2828 iterations 5
Cbc0038I Pass  25: suminf.    0.61590 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  26: suminf.    0.61590 (3) obj. -31.2828 iterations 0
Cbc0038I Pass  27: suminf.    1.03480 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  28: suminf.    0.86576 (3) obj. -31.2828 iterations 1
Cbc0038I Pass  29: suminf.    1.26429 (3) obj. -31.2828 iterations 4
Cbc0038I Pass  30: suminf.    0.61590 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  31: suminf.    0.61590 (3) obj. -31.2828 iterations 0
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -35.7353
Cbc0038I Pass  31: suminf.    1.59667 (6) obj. -35.7353 iterations 0
Cbc0038I Pass  32: suminf.    1.32047 (6) obj. -35.7353 iterations 2
Cbc0038I Pass  33: suminf.    1.32047 (6) obj. -35.7353 iterations 1
Cbc0038I Pass  34: suminf.    0.76929 (3) obj. -35.7353 iterations 7
Cbc0038I Pass  35: suminf.    0.67683 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  36: suminf.    1.39503 (5) obj. -35.7353 iterations 7
Cbc0038I Pass  37: suminf.    1.35710 (5) obj. -35.7353 iterations 2
Cbc0038I Pass  38: suminf.    1.40571 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  39: suminf.    1.32205 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  40: suminf.    1.15235 (4) obj. -35.7353 iterations 6
Cbc0038I Pass  41: suminf.    0.96723 (5) obj. -35.7353 iterations 2
Cbc0038I Pass  42: suminf.    2.58398 (9) obj. -35.7353 iterations 11
Cbc0038I Pass  43: suminf.    2.36723 (19) obj. -35.7353 iterations 14
Cbc0038I Pass  44: suminf.    1.18378 (5) obj. -35.7353 iterations 24
Cbc0038I Pass  45: suminf.    0.91226 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  46: suminf.    0.82886 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  47: suminf.    1.13822 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  48: suminf.    1.06443 (3) obj. -35.7353 iterations 2
Cbc0038I Pass  49: suminf.    0.96070 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  50: suminf.    0.91953 (3) obj. -35.7353 iterations 1
Cbc0038I Pass  51: suminf.    1.08492 (4) obj. -35.7353 iterations 3
Cbc0038I Pass  52: suminf.    2.22380 (8) obj. -35.7353 iterations 13
Cbc0038I Pass  53: suminf.    1.56013 (5) obj. -35.7353 iterations 11
Cbc0038I Pass  54: suminf.    1.56013 (5) obj. -35.7353 iterations 1
Cbc0038I Pass  55: suminf.    1.60504 (4) obj. -35.7353 iterations 6
Cbc0038I Pass  56: suminf.    1.33445 (7) obj. -35.7353 iterations 5
Cbc0038I Pass  57: suminf.    1.06828 (4) obj. -35.7353 iterations 9
Cbc0038I Pass  58: suminf.    0.62171 (4) obj. -35.7353 iterations 5
Cbc0038I Pass  59: suminf.    2.11825 (6) obj. -35.7353 iterations 8
Cbc0038I Pass  60: suminf.    1.33017 (5) obj. -35.7353 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -28.809 - took 0.05 seconds
Cbc0012I Integer solution of -28.80904 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 115 rows 68 columns, reduced to 39 rows 23 columns
Cbc0031I 21 added rows had average density of 26.333333
Cbc0013I At root node, 21 cuts changed objective from -53.545302 to -44.074022 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5829 row cuts average 4.8 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1835 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0001I Search completed - best objective -28.80904, took 5563 iterations and 26 nodes (0.61 seconds)
Cbc0032I Strong branching done 358 times (5461 iterations), fathomed 1 nodes and fixed 43 variables
Cbc0035I Maximum depth 6, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 116 (-36) columns and 1955 (-1348) elements
Clp1000I sum of infeasibilities 1.65162e-07 - average 1.57297e-09, 101 fixed columns
Coin0506I Presolve 14 (-91) rows, 15 (-101) columns and 53 (-1902) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 104.62853
Clp0000I Optimal - objective value 104.62853
Coin0511I After Postsolve, objective 104.62853, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3915966 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 176.53631
Clp0000I Optimal - objective value 176.53631
Clp0000I Optimal - objective value 176.53631
Coin0511I After Postsolve, objective 176.53631, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 176.536311 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 6 fixed, 0 tightened bounds, 70 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 51 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 110 columns (110 integer (110 of which binary)) and 1813 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.339%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 6.59015
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.55629 iterations 47
Cbc0038I Solution found of -2.55629
Cbc0038I Rounding solution of -12.9535 is better than previous of -2.55629

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -12.9535 to -37.5563 (0.05 seconds)
Cbc0038I Round again with cutoff of -41.508
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.87213 (28) obj. -41.508 iterations 14
Cbc0038I Pass   3: suminf.    0.60624 (7) obj. -41.508 iterations 25
Cbc0038I Pass   4: suminf.    0.58390 (6) obj. -45.6467 iterations 1
Cbc0038I Pass   5: suminf.    0.20965 (1) obj. -41.508 iterations 13
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -41.5563 iterations 5
Cbc0038I Pass   7: suminf.    2.68347 (17) obj. -41.508 iterations 22
Cbc0038I Pass   8: suminf.    1.06639 (9) obj. -41.508 iterations 15
Cbc0038I Pass   9: suminf.    0.20965 (1) obj. -41.508 iterations 14
Cbc0038I Pass  10: suminf.    5.49262 (23) obj. -41.508 iterations 30
Cbc0038I Pass  11: suminf.    2.57488 (17) obj. -41.508 iterations 15
Cbc0038I Pass  12: suminf.    0.63321 (3) obj. -41.508 iterations 13
Cbc0038I Pass  13: suminf.    0.63321 (3) obj. -41.508 iterations 0
Cbc0038I Pass  14: suminf.    0.20000 (1) obj. -41.5563 iterations 5
Cbc0038I Pass  15: suminf.    0.20965 (1) obj. -41.508 iterations 3
Cbc0038I Pass  16: suminf.    1.01038 (6) obj. -41.508 iterations 7
Cbc0038I Pass  17: suminf.    0.70559 (3) obj. -41.508 iterations 8
Cbc0038I Pass  18: suminf.    2.55395 (16) obj. -41.508 iterations 14
Cbc0038I Pass  19: suminf.    2.04335 (13) obj. -41.508 iterations 4
Cbc0038I Pass  20: suminf.    0.20965 (1) obj. -41.508 iterations 11
Cbc0038I Pass  21: suminf.    0.20000 (1) obj. -41.5563 iterations 7
Cbc0038I Pass  22: suminf.    0.20965 (1) obj. -41.508 iterations 3
Cbc0038I Pass  23: suminf.    1.48167 (10) obj. -41.508 iterations 6
Cbc0038I Pass  24: suminf.    1.27009 (9) obj. -41.508 iterations 2
Cbc0038I Pass  25: suminf.    0.56637 (4) obj. -45.0723 iterations 5
Cbc0038I Pass  26: suminf.    4.04130 (20) obj. -41.508 iterations 18
Cbc0038I Pass  27: suminf.    2.17875 (14) obj. -41.508 iterations 7
Cbc0038I Pass  28: suminf.    0.20988 (6) obj. -41.508 iterations 15
Cbc0038I Pass  29: suminf.    0.20000 (1) obj. -41.5563 iterations 7
Cbc0038I Pass  30: suminf.    0.20965 (1) obj. -41.508 iterations 4
Cbc0038I Pass  31: suminf.    2.12254 (14) obj. -41.508 iterations 10
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 49 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -48.621
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.21400 (28) obj. -48.621 iterations 0
Cbc0038I Pass  32: suminf.    1.05055 (9) obj. -48.621 iterations 29
Cbc0038I Pass  33: suminf.    1.05055 (9) obj. -48.621 iterations 0
Cbc0038I Pass  34: suminf.    1.57073 (8) obj. -48.621 iterations 22
Cbc0038I Pass  35: suminf.    1.57073 (8) obj. -48.621 iterations 0
Cbc0038I Pass  36: suminf.    1.39295 (8) obj. -48.621 iterations 3
Cbc0038I Pass  37: suminf.    1.39295 (8) obj. -48.621 iterations 0
Cbc0038I Pass  38: suminf.    1.57073 (8) obj. -48.621 iterations 6
Cbc0038I Pass  39: suminf.    0.99614 (12) obj. -48.621 iterations 14
Cbc0038I Pass  40: suminf.    0.83790 (6) obj. -48.621 iterations 13
Cbc0038I Pass  41: suminf.    1.57073 (8) obj. -48.621 iterations 22
Cbc0038I Pass  42: suminf.    1.57073 (8) obj. -48.621 iterations 0
Cbc0038I Pass  43: suminf.    1.39295 (8) obj. -48.621 iterations 4
Cbc0038I Pass  44: suminf.    1.39295 (8) obj. -48.621 iterations 1
Cbc0038I Pass  45: suminf.    1.57073 (8) obj. -48.621 iterations 6
Cbc0038I Pass  46: suminf.    2.03066 (16) obj. -48.621 iterations 12
Cbc0038I Pass  47: suminf.    1.20606 (7) obj. -48.621 iterations 24
Cbc0038I Pass  48: suminf.    1.57073 (8) obj. -48.621 iterations 14
Cbc0038I Pass  49: suminf.    1.57073 (8) obj. -48.621 iterations 0
Cbc0038I Pass  50: suminf.    1.39295 (8) obj. -48.621 iterations 14
Cbc0038I Pass  51: suminf.    1.39295 (8) obj. -48.621 iterations 1
Cbc0038I Pass  52: suminf.    1.57073 (8) obj. -48.621 iterations 14
Cbc0038I Pass  53: suminf.    3.13420 (17) obj. -48.621 iterations 17
Cbc0038I Pass  54: suminf.    1.03875 (7) obj. -48.621 iterations 13
Cbc0038I Pass  55: suminf.    1.57073 (8) obj. -48.621 iterations 13
Cbc0038I Pass  56: suminf.    1.57073 (8) obj. -48.621 iterations 0
Cbc0038I Pass  57: suminf.    1.39295 (8) obj. -48.621 iterations 3
Cbc0038I Pass  58: suminf.    1.39295 (8) obj. -48.621 iterations 0
Cbc0038I Pass  59: suminf.    1.57073 (8) obj. -48.621 iterations 4
Cbc0038I Pass  60: suminf.    2.48947 (17) obj. -48.621 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 51 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -37.5563 - took 0.04 seconds
Cbc0012I Integer solution of -37.55629 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 57 added rows had average density of 18.578947
Cbc0013I At root node, 57 cuts changed objective from -77.072938 to -43.038365 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 1051 row cuts average 7.7 elements, 13 column cuts (13 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 201 row cuts average 65.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 83 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 35 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 233 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 59.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -37.55629 best solution, best possible -43.038365 (0.53 seconds)
Cbc0001I Search completed - best objective -37.55629, took 1025 iterations and 8 nodes (0.87 seconds)
Cbc0032I Strong branching done 232 times (5938 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.62   (Wallclock seconds):       0.88

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 68 (-10) columns and 374 (-79) elements
Clp1000I sum of infeasibilities 1.77554e-05 - average 1.44353e-07, 10 fixed columns
Coin0506I Presolve 103 (-20) rows, 58 (-10) columns and 315 (-59) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 0.34609985 - largest nonzero change 0 ( 0%) - largest zero change 2.971114e-05
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Coin0511I After Postsolve, objective 54.499189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Clp0000I Optimal - objective value 54.499189
Coin0511I After Postsolve, objective 54.499189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.49918879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 68 columns (67 integer (67 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.64853
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.8147 iterations 33
Cbc0038I Solution found of -0.8147
Cbc0038I Relaxing continuous gives -0.8147
Cbc0038I Rounding solution of -28.809 is better than previous of -0.8147

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -31.2828
Cbc0038I Pass   2: suminf.    1.29513 (6) obj. -31.2828 iterations 6
Cbc0038I Pass   3: suminf.    0.98916 (5) obj. -31.2828 iterations 1
Cbc0038I Pass   4: suminf.    0.98916 (5) obj. -31.2828 iterations 0
Cbc0038I Pass   5: suminf.    0.90510 (4) obj. -31.2828 iterations 8
Cbc0038I Pass   6: suminf.    0.44293 (2) obj. -31.2828 iterations 4
Cbc0038I Pass   7: suminf.    0.44293 (2) obj. -31.2828 iterations 0
Cbc0038I Pass   8: suminf.    0.65665 (2) obj. -31.2828 iterations 2
Cbc0038I Pass   9: suminf.    2.01415 (10) obj. -31.2828 iterations 18
Cbc0038I Pass  10: suminf.    1.27540 (8) obj. -31.2828 iterations 11
Cbc0038I Pass  11: suminf.    0.90510 (4) obj. -31.2828 iterations 13
Cbc0038I Pass  12: suminf.    0.44293 (2) obj. -31.2828 iterations 4
Cbc0038I Pass  13: suminf.    0.44293 (2) obj. -31.2828 iterations 0
Cbc0038I Pass  14: suminf.    0.65665 (2) obj. -31.2828 iterations 2
Cbc0038I Pass  15: suminf.    1.19451 (6) obj. -31.2828 iterations 9
Cbc0038I Pass  16: suminf.    0.68434 (3) obj. -31.2828 iterations 5
Cbc0038I Pass  17: suminf.    0.78648 (2) obj. -31.2828 iterations 5
Cbc0038I Pass  18: suminf.    0.65130 (2) obj. -31.2828 iterations 1
Cbc0038I Pass  19: suminf.    0.65130 (2) obj. -31.2828 iterations 0
Cbc0038I Pass  20: suminf.    3.62529 (13) obj. -31.2828 iterations 15
Cbc0038I Pass  21: suminf.    1.69485 (7) obj. -31.2828 iterations 13
Cbc0038I Pass  22: suminf.    1.27283 (5) obj. -31.2828 iterations 13
Cbc0038I Pass  23: suminf.    0.92094 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  24: suminf.    1.26429 (3) obj. -31.2828 iterations 5
Cbc0038I Pass  25: suminf.    0.61590 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  26: suminf.    0.61590 (3) obj. -31.2828 iterations 0
Cbc0038I Pass  27: suminf.    1.03480 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  28: suminf.    0.86576 (3) obj. -31.2828 iterations 1
Cbc0038I Pass  29: suminf.    1.26429 (3) obj. -31.2828 iterations 4
Cbc0038I Pass  30: suminf.    0.61590 (3) obj. -31.2828 iterations 3
Cbc0038I Pass  31: suminf.    0.61590 (3) obj. -31.2828 iterations 0
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -35.7353
Cbc0038I Pass  31: suminf.    1.59667 (6) obj. -35.7353 iterations 0
Cbc0038I Pass  32: suminf.    1.32047 (6) obj. -35.7353 iterations 2
Cbc0038I Pass  33: suminf.    1.32047 (6) obj. -35.7353 iterations 1
Cbc0038I Pass  34: suminf.    0.76929 (3) obj. -35.7353 iterations 7
Cbc0038I Pass  35: suminf.    0.67683 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  36: suminf.    1.39503 (5) obj. -35.7353 iterations 7
Cbc0038I Pass  37: suminf.    1.35710 (5) obj. -35.7353 iterations 2
Cbc0038I Pass  38: suminf.    1.40571 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  39: suminf.    1.32205 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  40: suminf.    1.15235 (4) obj. -35.7353 iterations 6
Cbc0038I Pass  41: suminf.    0.96723 (5) obj. -35.7353 iterations 2
Cbc0038I Pass  42: suminf.    2.58398 (9) obj. -35.7353 iterations 11
Cbc0038I Pass  43: suminf.    2.36723 (19) obj. -35.7353 iterations 14
Cbc0038I Pass  44: suminf.    1.18378 (5) obj. -35.7353 iterations 24
Cbc0038I Pass  45: suminf.    0.91226 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  46: suminf.    0.82886 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  47: suminf.    1.13822 (4) obj. -35.7353 iterations 4
Cbc0038I Pass  48: suminf.    1.06443 (3) obj. -35.7353 iterations 2
Cbc0038I Pass  49: suminf.    0.96070 (3) obj. -35.7353 iterations 3
Cbc0038I Pass  50: suminf.    0.91953 (3) obj. -35.7353 iterations 1
Cbc0038I Pass  51: suminf.    1.08492 (4) obj. -35.7353 iterations 3
Cbc0038I Pass  52: suminf.    2.22380 (8) obj. -35.7353 iterations 13
Cbc0038I Pass  53: suminf.    1.56013 (5) obj. -35.7353 iterations 11
Cbc0038I Pass  54: suminf.    1.56013 (5) obj. -35.7353 iterations 1
Cbc0038I Pass  55: suminf.    1.60504 (4) obj. -35.7353 iterations 6
Cbc0038I Pass  56: suminf.    1.33445 (7) obj. -35.7353 iterations 5
Cbc0038I Pass  57: suminf.    1.06828 (4) obj. -35.7353 iterations 9
Cbc0038I Pass  58: suminf.    0.62171 (4) obj. -35.7353 iterations 5
Cbc0038I Pass  59: suminf.    2.11825 (6) obj. -35.7353 iterations 8
Cbc0038I Pass  60: suminf.    1.33017 (5) obj. -35.7353 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 68 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -28.809 - took 0.05 seconds
Cbc0012I Integer solution of -28.80904 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 115 rows 68 columns, reduced to 39 rows 23 columns
Cbc0031I 21 added rows had average density of 26.333333
Cbc0013I At root node, 21 cuts changed objective from -53.545302 to -44.074022 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5829 row cuts average 4.8 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1835 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 95 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0010I After 11 nodes, 4 on tree, -28.80904 best solution, best possible -44.074022 (0.68 seconds)
Cbc0001I Search completed - best objective -28.80904, took 5563 iterations and 26 nodes (0.72 seconds)
Cbc0032I Strong branching done 358 times (5461 iterations), fathomed 1 nodes and fixed 43 variables
Cbc0035I Maximum depth 6, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 109 (-44) columns and 1693 (-1611) elements
Clp1000I sum of infeasibilities 7.8417e-08 - average 8.00173e-10, 24 fixed columns
Coin0506I Presolve 77 (-21) rows, 85 (-24) columns and 1082 (-611) elements
Clp0006I 0  Obj 64.688531 Dual inf 11.399686 (84)
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 1.7704074 - largest nonzero change 0 ( 0%) - largest zero change 2.9699607e-05
Clp0000I Optimal - objective value 69.509119
Clp0000I Optimal - objective value 69.509119
Coin0511I After Postsolve, objective 69.509119, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 69.509119
Clp0000I Optimal - objective value 69.509119
Clp0000I Optimal - objective value 69.509119
Clp0000I Optimal - objective value 69.509119
Coin0511I After Postsolve, objective 69.509119, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.50911857 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 57 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 109 columns (109 integer (109 of which binary)) and 1765 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.243%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 2.63366
Cbc0038I Pass   1: suminf.    1.82445 (28) obj. -53.9721 iterations 21
Cbc0038I Pass   2: suminf.    0.59188 (11) obj. -24.2827 iterations 26
Cbc0038I Solution found of -7.2676
Cbc0038I Rounding solution of -14.4132 is better than previous of -7.2676

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -18.4687
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.82445 (28) obj. -53.9721 iterations 0
Cbc0038I Pass   4: suminf.    0.47890 (7) obj. -18.4687 iterations 36
Cbc0038I Pass   5: suminf.    0.66490 (3) obj. -18.4687 iterations 8
Cbc0038I Pass   6: suminf.    0.52989 (3) obj. -19.0088 iterations 1
Cbc0038I Pass   7: suminf.    0.62098 (2) obj. -18.4687 iterations 3
Cbc0038I Pass   8: suminf.    0.59330 (2) obj. -18.8567 iterations 1
Cbc0038I Pass   9: suminf.    1.47594 (11) obj. -18.4687 iterations 16
Cbc0038I Pass  10: suminf.    1.34835 (11) obj. -18.4687 iterations 6
Cbc0038I Pass  11: suminf.    0.97754 (4) obj. -18.4687 iterations 16
Cbc0038I Pass  12: suminf.    0.97754 (4) obj. -18.4687 iterations 4
Cbc0038I Pass  13: suminf.    1.16197 (4) obj. -18.4687 iterations 4
Cbc0038I Pass  14: suminf.    1.16197 (4) obj. -18.4687 iterations 3
Cbc0038I Pass  15: suminf.    0.97754 (4) obj. -18.4687 iterations 5
Cbc0038I Pass  16: suminf.    3.02875 (19) obj. -18.4687 iterations 29
Cbc0038I Pass  17: suminf.    1.28916 (14) obj. -18.4687 iterations 10
Cbc0038I Pass  18: suminf.    0.96183 (14) obj. -18.4687 iterations 3
Cbc0038I Pass  19: suminf.    1.75829 (10) obj. -18.4687 iterations 21
Cbc0038I Pass  20: suminf.    1.11475 (5) obj. -18.4687 iterations 7
Cbc0038I Pass  21: suminf.    1.12658 (4) obj. -18.4687 iterations 3
Cbc0038I Pass  22: suminf.    1.22848 (12) obj. -18.4687 iterations 32
Cbc0038I Pass  23: suminf.    0.68068 (4) obj. -19.1017 iterations 15
Cbc0038I Pass  24: suminf.    0.47875 (4) obj. -18.4687 iterations 13
Cbc0038I Pass  25: suminf.    0.39779 (4) obj. -18.4687 iterations 3
Cbc0038I Pass  26: suminf.    2.04963 (9) obj. -18.4687 iterations 7
Cbc0038I Pass  27: suminf.    1.19154 (4) obj. -18.4687 iterations 11
Cbc0038I Pass  28: suminf.    1.19154 (4) obj. -18.4687 iterations 0
Cbc0038I Pass  29: suminf.    1.24027 (4) obj. -18.4687 iterations 2
Cbc0038I Pass  30: suminf.    0.89272 (4) obj. -18.4687 iterations 1
Cbc0038I Pass  31: suminf.    1.19154 (4) obj. -18.4687 iterations 3
Cbc0038I Pass  32: suminf.    1.53403 (9) obj. -18.4687 iterations 18
Cbc0038I Rounding solution of -26.865 is better than previous of -14.4132

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 109 columns, reduced to 53 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -26.865 to -28.809 (0.08 seconds)
Cbc0038I Round again with cutoff of -34.0408
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.82445 (28) obj. -53.9721 iterations 0
Cbc0038I Pass  33: suminf.    1.30877 (11) obj. -34.0408 iterations 34
Cbc0038I Pass  34: suminf.    1.28232 (11) obj. -34.0408 iterations 2
Cbc0038I Pass  35: suminf.    1.42242 (9) obj. -34.0408 iterations 13
Cbc0038I Pass  36: suminf.    1.29255 (9) obj. -34.0408 iterations 4
Cbc0038I Pass  37: suminf.    1.43231 (9) obj. -34.0408 iterations 8
Cbc0038I Pass  38: suminf.    1.26771 (9) obj. -34.0408 iterations 6
Cbc0038I Pass  39: suminf.    1.42242 (9) obj. -34.0408 iterations 5
Cbc0038I Pass  40: suminf.    1.80715 (12) obj. -34.0408 iterations 7
Cbc0038I Pass  41: suminf.    0.94360 (11) obj. -34.0408 iterations 13
Cbc0038I Pass  42: suminf.    0.73755 (10) obj. -34.0408 iterations 4
Cbc0038I Pass  43: suminf.    1.65364 (10) obj. -34.0408 iterations 7
Cbc0038I Pass  44: suminf.    1.39326 (10) obj. -34.0408 iterations 6
Cbc0038I Pass  45: suminf.    0.76178 (10) obj. -34.0408 iterations 3
Cbc0038I Pass  46: suminf.    1.66442 (18) obj. -34.0408 iterations 19
Cbc0038I Pass  47: suminf.    1.10036 (15) obj. -34.0408 iterations 9
Cbc0038I Pass  48: suminf.    1.43768 (10) obj. -34.0408 iterations 15
Cbc0038I Pass  49: suminf.    0.76178 (10) obj. -34.0408 iterations 6
Cbc0038I Pass  50: suminf.    1.65364 (10) obj. -34.0408 iterations 10
Cbc0038I Pass  51: suminf.    1.39326 (10) obj. -34.0408 iterations 7
Cbc0038I Pass  52: suminf.    1.21298 (13) obj. -34.0408 iterations 23
Cbc0038I Pass  53: suminf.    0.88113 (13) obj. -34.7045 iterations 8
Cbc0038I Pass  54: suminf.    1.63008 (10) obj. -34.0408 iterations 16
Cbc0038I Pass  55: suminf.    1.09572 (18) obj. -34.0408 iterations 6
Cbc0038I Pass  56: suminf.    1.63008 (10) obj. -34.0408 iterations 7
Cbc0038I Pass  57: suminf.    1.08787 (14) obj. -34.0408 iterations 10
Cbc0038I Pass  58: suminf.    1.07711 (13) obj. -34.1501 iterations 2
Cbc0038I Pass  59: suminf.    2.04601 (10) obj. -34.0408 iterations 11
Cbc0038I Pass  60: suminf.    1.46935 (10) obj. -34.0408 iterations 5
Cbc0038I Pass  61: suminf.    1.26833 (11) obj. -34.0408 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 109 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -28.809 - took 0.08 seconds
Cbc0012I Integer solution of -28.80904 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 90 rows 109 columns, reduced to 24 rows 28 columns
Cbc0031I 49 added rows had average density of 32.489796
Cbc0013I At root node, 49 cuts changed objective from -54.967549 to -36.280412 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10875 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1064 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1604 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 594 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 330 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 282 row cuts average 67.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 119 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.80904 best solution, best possible -36.280412 (2.51 seconds)
Cbc0010I After 11 nodes, 3 on tree, -28.80904 best solution, best possible -33.810423 (3.21 seconds)
Cbc0001I Search completed - best objective -28.80904, took 5567 iterations and 14 nodes (3.21 seconds)
Cbc0032I Strong branching done 288 times (7190 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 29 variables fixed on reduced cost
Total time (CPU seconds):       2.29   (Wallclock seconds):       3.23

