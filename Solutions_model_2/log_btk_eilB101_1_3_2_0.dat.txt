Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 101 (-2) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 1.67577e-05 - average 9.36186e-08, 22 fixed columns
Coin0506I Presolve 137 (-42) rows, 79 (-22) columns and 424 (-128) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 1.6656697 - largest nonzero change 0 ( 0%) - largest zero change 2.7019603e-05
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Coin0511I After Postsolve, objective 34.965223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Coin0511I After Postsolve, objective 34.965223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.96522317 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 101 columns (100 integer (100 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.922%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 8.42239
Cbc0038I Solution found of 5.50178
Cbc0038I Relaxing continuous gives -2.90899
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 78 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -2.90899 to -4.28276 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.35109
Cbc0038I Pass   1: suminf.    0.90498 (35) obj. -7.35109 iterations 58
Cbc0038I Pass   2: suminf.    2.18304 (8) obj. -7.35109 iterations 34
Cbc0038I Pass   3: suminf.    1.89324 (8) obj. -7.35109 iterations 3
Cbc0038I Pass   4: suminf.    1.29987 (6) obj. -7.35109 iterations 4
Cbc0038I Pass   5: suminf.    1.29745 (7) obj. -7.35109 iterations 2
Cbc0038I Pass   6: suminf.    1.76542 (8) obj. -7.35109 iterations 10
Cbc0038I Pass   7: suminf.    1.71282 (7) obj. -7.35109 iterations 2
Cbc0038I Pass   8: suminf.    2.92813 (7) obj. -7.35109 iterations 5
Cbc0038I Pass   9: suminf.    1.21596 (6) obj. -7.35109 iterations 5
Cbc0038I Pass  10: suminf.    1.10665 (4) obj. -7.35109 iterations 1
Cbc0038I Pass  11: suminf.    1.10665 (4) obj. -7.35109 iterations 0
Cbc0038I Pass  12: suminf.    1.31954 (4) obj. -7.35109 iterations 7
Cbc0038I Pass  13: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  14: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  15: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  16: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  17: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  18: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  19: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  20: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  21: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  22: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  23: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  24: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  25: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  26: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  27: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  28: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  29: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  30: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Rounding solution of -6.35683 is better than previous of -4.28276

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 96 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -12.8739
Cbc0038I Pass  30: suminf.    2.03014 (35) obj. -12.8739 iterations 0
Cbc0038I Pass  31: suminf.    2.76860 (9) obj. -12.8739 iterations 30
Cbc0038I Pass  32: suminf.    1.97694 (9) obj. -12.8739 iterations 5
Cbc0038I Pass  33: suminf.    2.99110 (8) obj. -12.8739 iterations 10
Cbc0038I Pass  34: suminf.    2.08269 (7) obj. -12.8739 iterations 4
Cbc0038I Pass  35: suminf.    1.83109 (6) obj. -12.8739 iterations 4
Cbc0038I Pass  36: suminf.    1.61240 (5) obj. -12.8739 iterations 2
Cbc0038I Pass  37: suminf.    1.61264 (6) obj. -12.8739 iterations 2
Cbc0038I Pass  38: suminf.    2.07421 (9) obj. -12.8739 iterations 6
Cbc0038I Pass  39: suminf.    1.82228 (5) obj. -12.8739 iterations 3
Cbc0038I Pass  40: suminf.    1.66124 (4) obj. -12.8739 iterations 6
Cbc0038I Pass  41: suminf.    1.65994 (4) obj. -12.8739 iterations 2
Cbc0038I Pass  42: suminf.    1.88926 (11) obj. -12.8739 iterations 5
Cbc0038I Pass  43: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  44: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  45: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  46: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  47: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I Pass  48: suminf.    1.88926 (11) obj. -12.8739 iterations 12
Cbc0038I Pass  49: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  50: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  51: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  52: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  53: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I Pass  54: suminf.    1.88926 (11) obj. -12.8739 iterations 12
Cbc0038I Pass  55: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  56: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  57: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  58: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  59: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 96 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -6.35683 - took 0.14 seconds
Cbc0012I Integer solution of -6.35683 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 79 rows 48 columns
Cbc0031I 31 added rows had average density of 75.935484
Cbc0013I At root node, 31 cuts changed objective from -34.965223 to -26.358983 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15216 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1775 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.35683 best solution, best possible -26.358983 (1.36 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 64 rows 39 columns
Cbc0012I Integer solution of -6.35901 found by RINS after 11070 iterations and 43 nodes (1.72 seconds)
Cbc0012I Integer solution of -6.401617 found by rounding after 12341 iterations and 62 nodes (1.81 seconds)
Cbc0001I Search completed - best objective -6.401617000000002, took 12651 iterations and 76 nodes (1.83 seconds)
Cbc0032I Strong branching done 978 times (21008 iterations), fathomed 4 nodes and fixed 41 variables
Cbc0035I Maximum depth 24, 273 variables fixed on reduced cost
Total time (CPU seconds):       1.79   (Wallclock seconds):       1.85

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-79) rows, 146 (-56) columns and 2583 (-3070) elements
Clp1000I sum of infeasibilities 3.13314e-07 - average 2.50651e-09, 42 fixed columns
Coin0506I Presolve 87 (-38) rows, 104 (-42) columns and 1359 (-1224) elements
Clp0006I 0  Obj 42.5235 Dual inf 7.9009402 (104)
Clp0029I End of values pass after 104 iterations
Clp0014I Perturbing problem by 0.001% of 1.8853146 - largest nonzero change 1.8040567e-05 ( 0.0015420975%) - largest zero change 2.9141755e-05
Clp0000I Optimal - objective value 48.544861
Clp0000I Optimal - objective value 48.544861
Coin0511I After Postsolve, objective 48.544861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.544861
Clp0000I Optimal - objective value 48.544861
Clp0000I Optimal - objective value 48.544861
Clp0000I Optimal - objective value 48.544861
Coin0511I After Postsolve, objective 48.544861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.54486081 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 146 columns (146 integer (146 of which binary)) and 2590 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.643%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.35022
Cbc0038I Pass   1: suminf.    2.70538 (35) obj. -42.6661 iterations 13
Cbc0038I Pass   2: suminf.    0.26936 (10) obj. 4.92576 iterations 27
Cbc0038I Solution found of 16.5993
Cbc0038I Rounding solution of 14.7471 is better than previous of 16.5993

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 146 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 14.7471 to 2.29851 (0.04 seconds)
Cbc0038I Round again with cutoff of -2.42861
Cbc0038I Pass   3: suminf.    2.70538 (35) obj. -42.6661 iterations 0
Cbc0038I Pass   4: suminf.    0.63390 (16) obj. -2.42861 iterations 23
Cbc0038I Pass   5: suminf.    0.14088 (3) obj. -2.45986 iterations 14
Cbc0038I Pass   6: suminf.    0.27959 (2) obj. -2.42861 iterations 3
Cbc0038I Pass   7: suminf.    0.27959 (2) obj. -2.42861 iterations 0
Cbc0038I Pass   8: suminf.    0.83282 (3) obj. -2.42861 iterations 4
Cbc0038I Pass   9: suminf.    0.48125 (3) obj. -9.10838 iterations 1
Cbc0038I Pass  10: suminf.    0.43847 (2) obj. -2.42861 iterations 3
Cbc0038I Pass  11: suminf.    0.13667 (2) obj. -5.80248 iterations 2
Cbc0038I Pass  12: suminf.    0.57618 (2) obj. -2.42861 iterations 2
Cbc0038I Pass  13: suminf.    0.57618 (2) obj. -2.42861 iterations 0
Cbc0038I Pass  14: suminf.    0.57630 (2) obj. -2.42861 iterations 2
Cbc0038I Pass  15: suminf.    0.52429 (2) obj. -3.41687 iterations 1
Cbc0038I Pass  16: suminf.    1.80692 (17) obj. -2.42861 iterations 41
Cbc0038I Pass  17: suminf.    0.91440 (15) obj. -2.42861 iterations 8
Cbc0038I Pass  18: suminf.    1.18074 (5) obj. -2.42861 iterations 22
Cbc0038I Pass  19: suminf.    0.91744 (4) obj. -2.42861 iterations 5
Cbc0038I Pass  20: suminf.    0.95999 (5) obj. -2.42861 iterations 9
Cbc0038I Pass  21: suminf.    0.95341 (4) obj. -2.42861 iterations 1
Cbc0038I Pass  22: suminf.    0.97518 (4) obj. -2.42861 iterations 8
Cbc0038I Pass  23: suminf.    0.97518 (4) obj. -2.42861 iterations 2
Cbc0038I Pass  24: suminf.    0.92825 (4) obj. -2.42861 iterations 3
Cbc0038I Pass  25: suminf.    0.92825 (4) obj. -2.42861 iterations 0
Cbc0038I Pass  26: suminf.    0.97518 (4) obj. -2.42861 iterations 4
Cbc0038I Pass  27: suminf.    1.05340 (13) obj. -2.42861 iterations 36
Cbc0038I Pass  28: suminf.    0.78593 (11) obj. -2.86406 iterations 7
Cbc0038I Pass  29: suminf.    0.81787 (4) obj. -2.42861 iterations 16
Cbc0038I Pass  30: suminf.    0.56350 (4) obj. -2.42861 iterations 2
Cbc0038I Pass  31: suminf.    0.74936 (3) obj. -2.42861 iterations 5
Cbc0038I Pass  32: suminf.    0.74936 (3) obj. -2.42861 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 146 columns, reduced to 36 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 2.29851 to -1.79958 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.9372
Cbc0038I Pass  32: suminf.    2.70538 (35) obj. -42.6661 iterations 0
Cbc0038I Pass  33: suminf.    1.15632 (22) obj. -10.9372 iterations 17
Cbc0038I Pass  34: suminf.    1.49648 (5) obj. -10.9372 iterations 26
Cbc0038I Pass  35: suminf.    0.55954 (4) obj. -11.106 iterations 4
Cbc0038I Pass  36: suminf.    1.14349 (4) obj. -10.9372 iterations 8
Cbc0038I Pass  37: suminf.    0.53179 (4) obj. -10.9372 iterations 4
Cbc0038I Pass  38: suminf.    0.87163 (4) obj. -10.9372 iterations 3
Cbc0038I Pass  39: suminf.    2.60179 (14) obj. -10.9372 iterations 21
Cbc0038I Pass  40: suminf.    0.87209 (9) obj. -10.9372 iterations 9
Cbc0038I Pass  41: suminf.    1.45748 (6) obj. -10.9372 iterations 20
Cbc0038I Pass  42: suminf.    1.24547 (7) obj. -10.9372 iterations 5
Cbc0038I Pass  43: suminf.    1.27429 (6) obj. -10.9372 iterations 10
Cbc0038I Pass  44: suminf.    0.71388 (6) obj. -10.9372 iterations 5
Cbc0038I Pass  45: suminf.    1.27429 (6) obj. -10.9372 iterations 7
Cbc0038I Pass  46: suminf.    2.21468 (16) obj. -10.9372 iterations 19
Cbc0038I Pass  47: suminf.    1.47879 (13) obj. -10.9372 iterations 3
Cbc0038I Pass  48: suminf.    1.47879 (13) obj. -10.9372 iterations 2
Cbc0038I Pass  49: suminf.    0.92363 (7) obj. -10.9372 iterations 16
Cbc0038I Pass  50: suminf.    0.92363 (7) obj. -10.9372 iterations 5
Cbc0038I Pass  51: suminf.    1.27429 (6) obj. -10.9372 iterations 8
Cbc0038I Pass  52: suminf.    0.71388 (6) obj. -10.9372 iterations 4
Cbc0038I Pass  53: suminf.    1.27429 (6) obj. -10.9372 iterations 7
Cbc0038I Pass  54: suminf.    1.99129 (15) obj. -10.9372 iterations 23
Cbc0038I Pass  55: suminf.    1.55698 (13) obj. -10.9372 iterations 10
Cbc0038I Pass  56: suminf.    1.33904 (8) obj. -10.9372 iterations 15
Cbc0038I Pass  57: suminf.    0.87294 (8) obj. -10.9372 iterations 3
Cbc0038I Pass  58: suminf.    1.27429 (7) obj. -10.9372 iterations 7
Cbc0038I Pass  59: suminf.    0.71388 (6) obj. -10.9372 iterations 3
Cbc0038I Pass  60: suminf.    1.27429 (6) obj. -10.9372 iterations 5
Cbc0038I Pass  61: suminf.    2.17308 (13) obj. -10.9372 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 146 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -1.79958 to -3.28411 (0.10 seconds)
Cbc0038I Round again with cutoff of -21.1476
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.70538 (35) obj. -42.6661 iterations 0
Cbc0038I Pass  62: suminf.    1.04774 (19) obj. -21.1476 iterations 23
Cbc0038I Pass  63: suminf.    1.04774 (19) obj. -21.1476 iterations 0
Cbc0038I Pass  64: suminf.    1.50331 (15) obj. -21.1476 iterations 29
Cbc0038I Pass  65: suminf.    1.50331 (15) obj. -21.1476 iterations 0
Cbc0038I Pass  66: suminf.    1.77216 (12) obj. -21.1476 iterations 12
Cbc0038I Pass  67: suminf.    1.51882 (15) obj. -21.1476 iterations 6
Cbc0038I Pass  68: suminf.    1.99556 (15) obj. -21.1476 iterations 12
Cbc0038I Pass  69: suminf.    1.54691 (12) obj. -21.1476 iterations 7
Cbc0038I Pass  70: suminf.    1.49075 (12) obj. -21.1476 iterations 4
Cbc0038I Pass  71: suminf.    1.40712 (12) obj. -21.1476 iterations 6
Cbc0038I Pass  72: suminf.    1.40712 (12) obj. -21.1476 iterations 4
Cbc0038I Pass  73: suminf.    1.49075 (12) obj. -21.1476 iterations 6
Cbc0038I Pass  74: suminf.    1.21329 (16) obj. -21.1476 iterations 17
Cbc0038I Pass  75: suminf.    0.94685 (14) obj. -21.1476 iterations 4
Cbc0038I Pass  76: suminf.    1.31284 (13) obj. -21.1476 iterations 21
Cbc0038I Pass  77: suminf.    0.79455 (13) obj. -21.1476 iterations 4
Cbc0038I Pass  78: suminf.    1.37460 (13) obj. -21.1476 iterations 11
Cbc0038I Pass  79: suminf.    1.62512 (16) obj. -21.1476 iterations 20
Cbc0038I Pass  80: suminf.    0.95496 (15) obj. -21.1476 iterations 5
Cbc0038I Pass  81: suminf.    1.37460 (14) obj. -21.1476 iterations 16
Cbc0038I Pass  82: suminf.    0.91340 (14) obj. -21.1476 iterations 8
Cbc0038I Pass  83: suminf.    1.37460 (14) obj. -21.1476 iterations 11
Cbc0038I Pass  84: suminf.    1.49633 (17) obj. -21.1476 iterations 9
Cbc0038I Pass  85: suminf.    1.49633 (17) obj. -21.1476 iterations 2
Cbc0038I Pass  86: suminf.    1.37460 (14) obj. -21.1476 iterations 31
Cbc0038I Pass  87: suminf.    2.50147 (18) obj. -21.1476 iterations 17
Cbc0038I Pass  88: suminf.    0.93595 (15) obj. -21.1476 iterations 13
Cbc0038I Pass  89: suminf.    1.31284 (14) obj. -21.1476 iterations 20
Cbc0038I Pass  90: suminf.    0.91340 (14) obj. -21.1476 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -3.28411 - took 0.11 seconds
Cbc0012I Integer solution of -3.284107 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 125 rows 146 columns, reduced to 3 rows 5 columns
Cbc0031I 55 added rows had average density of 61.072727
Cbc0013I At root node, 55 cuts changed objective from -44.971799 to -13.005582 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10034 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2492 row cuts average 138.4 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 844 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1243 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 354 row cuts average 90.7 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 172 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.320 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3.284107 best solution, best possible -13.005582 (2.18 seconds)
Cbc0004I Integer solution of -3.401617 found after 6524 iterations and 9 nodes (2.88 seconds)
Cbc0010I After 10 nodes, 7 on tree, -3.401617 best solution, best possible -8.987925 (2.92 seconds)
Cbc0012I Integer solution of -3.802417 found by rounding after 6678 iterations and 17 nodes (3.08 seconds)
Cbc0010I After 37 nodes, 6 on tree, -3.802417 best solution, best possible -8.987925 (3.63 seconds)
Cbc0038I Full problem 125 rows 146 columns, reduced to 43 rows 54 columns
Cbc0016I Integer solution of -3.910907 found by strong branching after 7334 iterations and 46 nodes (4.16 seconds)
Cbc0010I After 50 nodes, 10 on tree, -3.910907 best solution, best possible -8.987925 (4.34 seconds)
Cbc0012I Integer solution of -4.4403 found by rounding after 8617 iterations and 71 nodes (5.08 seconds)
Cbc0010I After 71 nodes, 4 on tree, -4.4403 best solution, best possible -8.987925 (5.08 seconds)
Cbc0012I Integer solution of -4.55907 found by DiveCoefficient after 8643 iterations and 74 nodes (5.18 seconds)
Cbc0016I Integer solution of -4.78119 found by strong branching after 8781 iterations and 86 nodes (5.36 seconds)
Cbc0012I Integer solution of -5.14883 found by rounding after 8890 iterations and 92 nodes (5.46 seconds)
Cbc0038I Full problem 125 rows 146 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -5.401617 found by rounding after 8906 iterations and 94 nodes (5.55 seconds)
Cbc0012I Integer solution of -6.14883 found by rounding after 8969 iterations and 97 nodes (5.56 seconds)
Cbc0012I Integer solution of -6.401617 found by rounding after 9038 iterations and 103 nodes (5.74 seconds)
Cbc0001I Search completed - best objective -6.401617000000002, took 9178 iterations and 108 nodes (5.76 seconds)
Cbc0032I Strong branching done 938 times (14426 iterations), fathomed 17 nodes and fixed 15 variables
Cbc0035I Maximum depth 14, 392 variables fixed on reduced cost
Total time (CPU seconds):       4.07   (Wallclock seconds):       5.79

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 101 (-2) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 1.67577e-05 - average 9.36186e-08, 22 fixed columns
Coin0506I Presolve 137 (-42) rows, 79 (-22) columns and 424 (-128) elements
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 1.6656697 - largest nonzero change 0 ( 0%) - largest zero change 2.7019603e-05
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Coin0511I After Postsolve, objective 34.965223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Clp0000I Optimal - objective value 34.965223
Coin0511I After Postsolve, objective 34.965223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.96522317 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 101 columns (100 integer (100 of which binary)) and 559 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.922%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 8.42239
Cbc0038I Solution found of 5.50178
Cbc0038I Relaxing continuous gives -2.90899
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 78 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -2.90899 to -4.28276 (0.06 seconds)
Cbc0038I Round again with cutoff of -7.35109
Cbc0038I Pass   1: suminf.    0.90498 (35) obj. -7.35109 iterations 58
Cbc0038I Pass   2: suminf.    2.18304 (8) obj. -7.35109 iterations 34
Cbc0038I Pass   3: suminf.    1.89324 (8) obj. -7.35109 iterations 3
Cbc0038I Pass   4: suminf.    1.29987 (6) obj. -7.35109 iterations 4
Cbc0038I Pass   5: suminf.    1.29745 (7) obj. -7.35109 iterations 2
Cbc0038I Pass   6: suminf.    1.76542 (8) obj. -7.35109 iterations 10
Cbc0038I Pass   7: suminf.    1.71282 (7) obj. -7.35109 iterations 2
Cbc0038I Pass   8: suminf.    2.92813 (7) obj. -7.35109 iterations 5
Cbc0038I Pass   9: suminf.    1.21596 (6) obj. -7.35109 iterations 5
Cbc0038I Pass  10: suminf.    1.10665 (4) obj. -7.35109 iterations 1
Cbc0038I Pass  11: suminf.    1.10665 (4) obj. -7.35109 iterations 0
Cbc0038I Pass  12: suminf.    1.31954 (4) obj. -7.35109 iterations 7
Cbc0038I Pass  13: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  14: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  15: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  16: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  17: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  18: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  19: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  20: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  21: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  22: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  23: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  24: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  25: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Pass  26: suminf.    1.10665 (4) obj. -7.35109 iterations 3
Cbc0038I Pass  27: suminf.    1.31954 (4) obj. -7.35109 iterations 6
Cbc0038I Pass  28: suminf.    1.13143 (3) obj. -7.35109 iterations 3
Cbc0038I Pass  29: suminf.    1.13143 (3) obj. -7.35109 iterations 0
Cbc0038I Pass  30: suminf.    1.36100 (3) obj. -7.35109 iterations 4
Cbc0038I Rounding solution of -6.35683 is better than previous of -4.28276

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 96 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -12.8739
Cbc0038I Pass  30: suminf.    2.03014 (35) obj. -12.8739 iterations 0
Cbc0038I Pass  31: suminf.    2.76860 (9) obj. -12.8739 iterations 30
Cbc0038I Pass  32: suminf.    1.97694 (9) obj. -12.8739 iterations 5
Cbc0038I Pass  33: suminf.    2.99110 (8) obj. -12.8739 iterations 10
Cbc0038I Pass  34: suminf.    2.08269 (7) obj. -12.8739 iterations 4
Cbc0038I Pass  35: suminf.    1.83109 (6) obj. -12.8739 iterations 4
Cbc0038I Pass  36: suminf.    1.61240 (5) obj. -12.8739 iterations 2
Cbc0038I Pass  37: suminf.    1.61264 (6) obj. -12.8739 iterations 2
Cbc0038I Pass  38: suminf.    2.07421 (9) obj. -12.8739 iterations 6
Cbc0038I Pass  39: suminf.    1.82228 (5) obj. -12.8739 iterations 3
Cbc0038I Pass  40: suminf.    1.66124 (4) obj. -12.8739 iterations 6
Cbc0038I Pass  41: suminf.    1.65994 (4) obj. -12.8739 iterations 2
Cbc0038I Pass  42: suminf.    1.88926 (11) obj. -12.8739 iterations 5
Cbc0038I Pass  43: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  44: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  45: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  46: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  47: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I Pass  48: suminf.    1.88926 (11) obj. -12.8739 iterations 12
Cbc0038I Pass  49: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  50: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  51: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  52: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  53: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I Pass  54: suminf.    1.88926 (11) obj. -12.8739 iterations 12
Cbc0038I Pass  55: suminf.    1.88926 (11) obj. -12.8739 iterations 1
Cbc0038I Pass  56: suminf.    2.00705 (6) obj. -12.8739 iterations 15
Cbc0038I Pass  57: suminf.    1.41974 (6) obj. -12.8739 iterations 3
Cbc0038I Pass  58: suminf.    2.26042 (7) obj. -12.8739 iterations 8
Cbc0038I Pass  59: suminf.    1.70656 (5) obj. -12.8739 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 96 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -6.35683 - took 0.14 seconds
Cbc0012I Integer solution of -6.35683 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 79 rows 48 columns
Cbc0031I 31 added rows had average density of 75.935484
Cbc0013I At root node, 31 cuts changed objective from -34.965223 to -26.358983 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15216 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1775 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6.35683 best solution, best possible -26.358983 (1.40 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 64 rows 39 columns
Cbc0012I Integer solution of -6.35901 found by RINS after 11070 iterations and 43 nodes (1.75 seconds)
Cbc0012I Integer solution of -6.401617 found by rounding after 12341 iterations and 62 nodes (1.85 seconds)
Cbc0001I Search completed - best objective -6.401617000000002, took 12651 iterations and 76 nodes (1.87 seconds)
Cbc0032I Strong branching done 978 times (21008 iterations), fathomed 4 nodes and fixed 41 variables
Cbc0035I Maximum depth 24, 273 variables fixed on reduced cost
Total time (CPU seconds):       1.83   (Wallclock seconds):       1.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-80) rows, 146 (-57) columns and 2583 (-3071) elements
Clp1000I sum of infeasibilities 3.13314e-07 - average 2.50651e-09, 42 fixed columns
Coin0506I Presolve 87 (-38) rows, 104 (-42) columns and 1359 (-1224) elements
Clp0006I 0  Obj 42.5235 Dual inf 7.9009402 (104)
Clp0029I End of values pass after 104 iterations
Clp0014I Perturbing problem by 0.001% of 1.8853146 - largest nonzero change 1.8040567e-05 ( 0.0015420975%) - largest zero change 2.9141755e-05
Clp0000I Optimal - objective value 48.544861
Clp0000I Optimal - objective value 48.544861
Coin0511I After Postsolve, objective 48.544861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.544861
Clp0000I Optimal - objective value 48.544861
Clp0000I Optimal - objective value 48.544861
Clp0000I Optimal - objective value 48.544861
Coin0511I After Postsolve, objective 48.544861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.54486081 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 146 columns (146 integer (146 of which binary)) and 2590 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.643%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.35022
Cbc0038I Pass   1: suminf.    2.70538 (35) obj. -42.6661 iterations 13
Cbc0038I Pass   2: suminf.    0.26936 (10) obj. 4.92576 iterations 27
Cbc0038I Solution found of 16.5993
Cbc0038I Rounding solution of 14.7471 is better than previous of 16.5993

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 146 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 14.7471 to 2.29851 (0.03 seconds)
Cbc0038I Round again with cutoff of -2.42861
Cbc0038I Pass   3: suminf.    2.70538 (35) obj. -42.6661 iterations 0
Cbc0038I Pass   4: suminf.    0.63390 (16) obj. -2.42861 iterations 23
Cbc0038I Pass   5: suminf.    0.14088 (3) obj. -2.45986 iterations 14
Cbc0038I Pass   6: suminf.    0.27959 (2) obj. -2.42861 iterations 3
Cbc0038I Pass   7: suminf.    0.27959 (2) obj. -2.42861 iterations 0
Cbc0038I Pass   8: suminf.    0.83282 (3) obj. -2.42861 iterations 4
Cbc0038I Pass   9: suminf.    0.48125 (3) obj. -9.10838 iterations 1
Cbc0038I Pass  10: suminf.    0.43847 (2) obj. -2.42861 iterations 3
Cbc0038I Pass  11: suminf.    0.13667 (2) obj. -5.80248 iterations 2
Cbc0038I Pass  12: suminf.    0.57618 (2) obj. -2.42861 iterations 2
Cbc0038I Pass  13: suminf.    0.57618 (2) obj. -2.42861 iterations 0
Cbc0038I Pass  14: suminf.    0.57630 (2) obj. -2.42861 iterations 2
Cbc0038I Pass  15: suminf.    0.52429 (2) obj. -3.41687 iterations 1
Cbc0038I Pass  16: suminf.    1.80692 (17) obj. -2.42861 iterations 41
Cbc0038I Pass  17: suminf.    0.91440 (15) obj. -2.42861 iterations 8
Cbc0038I Pass  18: suminf.    1.18074 (5) obj. -2.42861 iterations 22
Cbc0038I Pass  19: suminf.    0.91744 (4) obj. -2.42861 iterations 5
Cbc0038I Pass  20: suminf.    0.95999 (5) obj. -2.42861 iterations 9
Cbc0038I Pass  21: suminf.    0.95341 (4) obj. -2.42861 iterations 1
Cbc0038I Pass  22: suminf.    0.97518 (4) obj. -2.42861 iterations 8
Cbc0038I Pass  23: suminf.    0.97518 (4) obj. -2.42861 iterations 2
Cbc0038I Pass  24: suminf.    0.92825 (4) obj. -2.42861 iterations 3
Cbc0038I Pass  25: suminf.    0.92825 (4) obj. -2.42861 iterations 0
Cbc0038I Pass  26: suminf.    0.97518 (4) obj. -2.42861 iterations 4
Cbc0038I Pass  27: suminf.    1.05340 (13) obj. -2.42861 iterations 36
Cbc0038I Pass  28: suminf.    0.78593 (11) obj. -2.86406 iterations 7
Cbc0038I Pass  29: suminf.    0.81787 (4) obj. -2.42861 iterations 16
Cbc0038I Pass  30: suminf.    0.56350 (4) obj. -2.42861 iterations 2
Cbc0038I Pass  31: suminf.    0.74936 (3) obj. -2.42861 iterations 5
Cbc0038I Pass  32: suminf.    0.74936 (3) obj. -2.42861 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 146 columns, reduced to 36 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 2.29851 to -1.79958 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.9372
Cbc0038I Pass  32: suminf.    2.70538 (35) obj. -42.6661 iterations 0
Cbc0038I Pass  33: suminf.    1.15632 (22) obj. -10.9372 iterations 17
Cbc0038I Pass  34: suminf.    1.49648 (5) obj. -10.9372 iterations 26
Cbc0038I Pass  35: suminf.    0.55954 (4) obj. -11.106 iterations 4
Cbc0038I Pass  36: suminf.    1.14349 (4) obj. -10.9372 iterations 8
Cbc0038I Pass  37: suminf.    0.53179 (4) obj. -10.9372 iterations 4
Cbc0038I Pass  38: suminf.    0.87163 (4) obj. -10.9372 iterations 3
Cbc0038I Pass  39: suminf.    2.60179 (14) obj. -10.9372 iterations 21
Cbc0038I Pass  40: suminf.    0.87209 (9) obj. -10.9372 iterations 9
Cbc0038I Pass  41: suminf.    1.45748 (6) obj. -10.9372 iterations 20
Cbc0038I Pass  42: suminf.    1.24547 (7) obj. -10.9372 iterations 5
Cbc0038I Pass  43: suminf.    1.27429 (6) obj. -10.9372 iterations 10
Cbc0038I Pass  44: suminf.    0.71388 (6) obj. -10.9372 iterations 5
Cbc0038I Pass  45: suminf.    1.27429 (6) obj. -10.9372 iterations 7
Cbc0038I Pass  46: suminf.    2.21468 (16) obj. -10.9372 iterations 19
Cbc0038I Pass  47: suminf.    1.47879 (13) obj. -10.9372 iterations 3
Cbc0038I Pass  48: suminf.    1.47879 (13) obj. -10.9372 iterations 2
Cbc0038I Pass  49: suminf.    0.92363 (7) obj. -10.9372 iterations 16
Cbc0038I Pass  50: suminf.    0.92363 (7) obj. -10.9372 iterations 5
Cbc0038I Pass  51: suminf.    1.27429 (6) obj. -10.9372 iterations 8
Cbc0038I Pass  52: suminf.    0.71388 (6) obj. -10.9372 iterations 4
Cbc0038I Pass  53: suminf.    1.27429 (6) obj. -10.9372 iterations 7
Cbc0038I Pass  54: suminf.    1.99129 (15) obj. -10.9372 iterations 23
Cbc0038I Pass  55: suminf.    1.55698 (13) obj. -10.9372 iterations 10
Cbc0038I Pass  56: suminf.    1.33904 (8) obj. -10.9372 iterations 15
Cbc0038I Pass  57: suminf.    0.87294 (8) obj. -10.9372 iterations 3
Cbc0038I Pass  58: suminf.    1.27429 (7) obj. -10.9372 iterations 7
Cbc0038I Pass  59: suminf.    0.71388 (6) obj. -10.9372 iterations 3
Cbc0038I Pass  60: suminf.    1.27429 (6) obj. -10.9372 iterations 5
Cbc0038I Pass  61: suminf.    2.17308 (13) obj. -10.9372 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 146 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -1.79958 to -3.28411 (0.10 seconds)
Cbc0038I Round again with cutoff of -21.1476
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.70538 (35) obj. -42.6661 iterations 0
Cbc0038I Pass  62: suminf.    1.04774 (19) obj. -21.1476 iterations 23
Cbc0038I Pass  63: suminf.    1.04774 (19) obj. -21.1476 iterations 0
Cbc0038I Pass  64: suminf.    1.50331 (15) obj. -21.1476 iterations 29
Cbc0038I Pass  65: suminf.    1.50331 (15) obj. -21.1476 iterations 0
Cbc0038I Pass  66: suminf.    1.77216 (12) obj. -21.1476 iterations 12
Cbc0038I Pass  67: suminf.    1.51882 (15) obj. -21.1476 iterations 6
Cbc0038I Pass  68: suminf.    1.99556 (15) obj. -21.1476 iterations 12
Cbc0038I Pass  69: suminf.    1.54691 (12) obj. -21.1476 iterations 7
Cbc0038I Pass  70: suminf.    1.49075 (12) obj. -21.1476 iterations 4
Cbc0038I Pass  71: suminf.    1.40712 (12) obj. -21.1476 iterations 6
Cbc0038I Pass  72: suminf.    1.40712 (12) obj. -21.1476 iterations 4
Cbc0038I Pass  73: suminf.    1.49075 (12) obj. -21.1476 iterations 6
Cbc0038I Pass  74: suminf.    1.21329 (16) obj. -21.1476 iterations 17
Cbc0038I Pass  75: suminf.    0.94685 (14) obj. -21.1476 iterations 4
Cbc0038I Pass  76: suminf.    1.31284 (13) obj. -21.1476 iterations 21
Cbc0038I Pass  77: suminf.    0.79455 (13) obj. -21.1476 iterations 4
Cbc0038I Pass  78: suminf.    1.37460 (13) obj. -21.1476 iterations 11
Cbc0038I Pass  79: suminf.    1.62512 (16) obj. -21.1476 iterations 20
Cbc0038I Pass  80: suminf.    0.95496 (15) obj. -21.1476 iterations 5
Cbc0038I Pass  81: suminf.    1.37460 (14) obj. -21.1476 iterations 16
Cbc0038I Pass  82: suminf.    0.91340 (14) obj. -21.1476 iterations 8
Cbc0038I Pass  83: suminf.    1.37460 (14) obj. -21.1476 iterations 11
Cbc0038I Pass  84: suminf.    1.49633 (17) obj. -21.1476 iterations 9
Cbc0038I Pass  85: suminf.    1.49633 (17) obj. -21.1476 iterations 2
Cbc0038I Pass  86: suminf.    1.37460 (14) obj. -21.1476 iterations 31
Cbc0038I Pass  87: suminf.    2.50147 (18) obj. -21.1476 iterations 17
Cbc0038I Pass  88: suminf.    0.93595 (15) obj. -21.1476 iterations 13
Cbc0038I Pass  89: suminf.    1.31284 (14) obj. -21.1476 iterations 20
Cbc0038I Pass  90: suminf.    0.91340 (14) obj. -21.1476 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -3.28411 - took 0.12 seconds
Cbc0012I Integer solution of -3.284107 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 125 rows 146 columns, reduced to 3 rows 5 columns
Cbc0031I 55 added rows had average density of 61.072727
Cbc0013I At root node, 55 cuts changed objective from -44.971799 to -13.005582 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10034 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2492 row cuts average 138.4 elements, 0 column cuts (0 active)  in 0.185 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 844 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1243 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 354 row cuts average 90.7 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 172 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.325 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3.284107 best solution, best possible -13.005582 (2.15 seconds)
Cbc0004I Integer solution of -3.401617 found after 6524 iterations and 9 nodes (2.84 seconds)
Cbc0010I After 10 nodes, 7 on tree, -3.401617 best solution, best possible -8.987925 (2.89 seconds)
Cbc0012I Integer solution of -3.802417 found by rounding after 6678 iterations and 17 nodes (3.05 seconds)
Cbc0010I After 37 nodes, 6 on tree, -3.802417 best solution, best possible -8.987925 (3.62 seconds)
Cbc0038I Full problem 125 rows 146 columns, reduced to 43 rows 54 columns
Cbc0016I Integer solution of -3.910907 found by strong branching after 7334 iterations and 46 nodes (4.15 seconds)
Cbc0010I After 50 nodes, 10 on tree, -3.910907 best solution, best possible -8.987925 (4.34 seconds)
Cbc0012I Integer solution of -4.4403 found by rounding after 8617 iterations and 71 nodes (5.09 seconds)
Cbc0010I After 71 nodes, 4 on tree, -4.4403 best solution, best possible -8.987925 (5.09 seconds)
Cbc0012I Integer solution of -4.55907 found by DiveCoefficient after 8643 iterations and 74 nodes (5.19 seconds)
Cbc0016I Integer solution of -4.78119 found by strong branching after 8781 iterations and 86 nodes (5.37 seconds)
Cbc0012I Integer solution of -5.14883 found by rounding after 8890 iterations and 92 nodes (5.48 seconds)
Cbc0038I Full problem 125 rows 146 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -5.401617 found by rounding after 8906 iterations and 94 nodes (5.57 seconds)
Cbc0012I Integer solution of -6.14883 found by rounding after 8969 iterations and 97 nodes (5.59 seconds)
Cbc0012I Integer solution of -6.401617 found by rounding after 9038 iterations and 103 nodes (5.77 seconds)
Cbc0010I After 107 nodes, 1 on tree, -6.401617 best solution, best possible -8.987925 (5.79 seconds)
Cbc0001I Search completed - best objective -6.401617000000002, took 9178 iterations and 108 nodes (5.80 seconds)
Cbc0032I Strong branching done 938 times (14426 iterations), fathomed 17 nodes and fixed 15 variables
Cbc0035I Maximum depth 14, 392 variables fixed on reduced cost
Total time (CPU seconds):       4.11   (Wallclock seconds):       5.83

