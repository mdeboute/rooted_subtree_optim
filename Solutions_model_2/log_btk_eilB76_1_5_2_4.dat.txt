Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 64 (-14) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 3.82789e-05 - average 3.2717e-07, 23 fixed columns
Coin0506I Presolve 68 (-49) rows, 39 (-25) columns and 207 (-148) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Coin0511I After Postsolve, objective 51.397918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22462276 - largest nonzero change 0 ( 0%) - largest zero change 2.9728923e-05
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Coin0511I After Postsolve, objective 51.397918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.39791797 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 64 columns (63 integer (63 of which binary)) and 438 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.876%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.68032
Cbc0038I Solution found of -10.9561
Cbc0038I Relaxing continuous gives -11.5499
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -11.5499 to -26.6817 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.069
Cbc0038I Pass   1: suminf.    1.08638 (8) obj. -29.069 iterations 35
Cbc0038I Pass   2: suminf.    2.08411 (6) obj. -29.069 iterations 9
Cbc0038I Pass   3: suminf.    0.68914 (5) obj. -29.069 iterations 6
Cbc0038I Pass   4: suminf.    1.13411 (6) obj. -29.069 iterations 8
Cbc0038I Pass   5: suminf.    1.71819 (8) obj. -29.069 iterations 14
Cbc0038I Pass   6: suminf.    1.32507 (5) obj. -29.069 iterations 7
Cbc0038I Pass   7: suminf.    1.43495 (4) obj. -29.069 iterations 10
Cbc0038I Pass   8: suminf.    1.29559 (4) obj. -29.069 iterations 1
Cbc0038I Pass   9: suminf.    1.02980 (4) obj. -29.069 iterations 3
Cbc0038I Pass  10: suminf.    2.17598 (7) obj. -29.069 iterations 11
Cbc0038I Pass  11: suminf.    1.34338 (4) obj. -29.069 iterations 13
Cbc0038I Pass  12: suminf.    1.04515 (5) obj. -29.069 iterations 3
Cbc0038I Pass  13: suminf.    2.22707 (7) obj. -29.069 iterations 15
Cbc0038I Pass  14: suminf.    1.24891 (5) obj. -29.069 iterations 6
Cbc0038I Pass  15: suminf.    1.34322 (5) obj. -29.069 iterations 3
Cbc0038I Pass  16: suminf.    1.24891 (5) obj. -29.069 iterations 3
Cbc0038I Pass  17: suminf.    1.58471 (7) obj. -29.069 iterations 18
Cbc0038I Pass  18: suminf.    1.44388 (6) obj. -29.069 iterations 8
Cbc0038I Pass  19: suminf.    1.90545 (7) obj. -29.069 iterations 7
Cbc0038I Pass  20: suminf.    1.04363 (4) obj. -29.069 iterations 7
Cbc0038I Pass  21: suminf.    0.92946 (4) obj. -29.069 iterations 4
Cbc0038I Pass  22: suminf.    1.43495 (4) obj. -29.069 iterations 11
Cbc0038I Pass  23: suminf.    1.29559 (4) obj. -29.069 iterations 1
Cbc0038I Pass  24: suminf.    1.02980 (4) obj. -29.069 iterations 2
Cbc0038I Pass  25: suminf.    1.82430 (7) obj. -29.069 iterations 24
Cbc0038I Pass  26: suminf.    1.50555 (7) obj. -29.069 iterations 12
Cbc0038I Pass  27: suminf.    1.64473 (4) obj. -29.069 iterations 9
Cbc0038I Pass  28: suminf.    1.64473 (4) obj. -29.069 iterations 0
Cbc0038I Pass  29: suminf.    0.78041 (4) obj. -29.069 iterations 3
Cbc0038I Pass  30: suminf.    0.69306 (3) obj. -29.069 iterations 2
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -33.366
Cbc0038I Pass  30: suminf.    1.39196 (9) obj. -33.366 iterations 1
Cbc0038I Pass  31: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  32: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  33: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  34: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  35: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  36: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  37: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  38: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  39: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  40: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  41: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  42: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  43: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  44: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  45: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  46: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  47: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  48: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  49: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  50: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  51: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  52: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  53: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  54: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  55: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  56: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  57: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  58: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  59: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -26.6817 - took 0.03 seconds
Cbc0012I Integer solution of -26.68166 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 104 rows 64 columns, reduced to 35 rows 21 columns
Cbc0031I 16 added rows had average density of 39.25
Cbc0013I At root node, 16 cuts changed objective from -50.553937 to -39.466102 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4619 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1704 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -26.68166, took 4510 iterations and 16 nodes (0.46 seconds)
Cbc0032I Strong branching done 300 times (5191 iterations), fathomed 3 nodes and fixed 18 variables
Cbc0035I Maximum depth 6, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-44) rows, 119 (-33) columns and 2018 (-1285) elements
Clp1000I sum of infeasibilities 9.42076e-07 - average 8.56433e-09, 116 fixed columns
Coin0506I Presolve 2 (-108) rows, 3 (-116) columns and 5 (-2013) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 240.16984
Clp0000I Optimal - objective value 240.16984
Coin0511I After Postsolve, objective 240.16984, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4032292 - largest nonzero change 2.0786599e-05 ( 0.0020786599%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 321.46892
Clp0000I Optimal - objective value 321.46892
Clp0000I Optimal - objective value 321.46892
Coin0511I After Postsolve, objective 321.46892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 321.4689162 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 83 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 119 columns (119 integer (119 of which binary)) and 2104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.282%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.5727
Cbc0038I Pass   1: suminf.    1.60550 (30) obj. -110.997 iterations 15
Cbc0038I Pass   2: suminf.    1.60550 (30) obj. -110.997 iterations 0
Cbc0038I Pass   3: suminf.    0.05971 (2) obj. -72.2436 iterations 30
Cbc0038I Solution found of -68.3621
Cbc0038I Rounding solution of -77.6834 is better than previous of -68.3621

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 119 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -77.6834 to -217.362 (0.06 seconds)
Cbc0038I Round again with cutoff of -225.11
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.52392 (41) obj. -225.11 iterations 1
Cbc0038I Pass   5: suminf.    3.95355 (38) obj. -225.11 iterations 2
Cbc0038I Pass   6: suminf.    2.70103 (27) obj. -225.11 iterations 13
Cbc0038I Pass   7: suminf.    2.51938 (30) obj. -225.11 iterations 2
Cbc0038I Pass   8: suminf.    2.09428 (13) obj. -225.11 iterations 19
Cbc0038I Pass   9: suminf.    0.35570 (2) obj. -241.121 iterations 13
Cbc0038I Pass  10: suminf.    0.11228 (1) obj. -225.11 iterations 2
Cbc0038I Pass  11: suminf.    0.33333 (1) obj. -240.362 iterations 2
Cbc0038I Pass  12: suminf.    1.75349 (13) obj. -231.875 iterations 17
Cbc0038I Pass  13: suminf.    1.30125 (11) obj. -227.061 iterations 12
Cbc0038I Pass  14: suminf.    3.20319 (22) obj. -225.11 iterations 28
Cbc0038I Pass  15: suminf.    3.20319 (22) obj. -225.11 iterations 3
Cbc0038I Pass  16: suminf.    1.05349 (10) obj. -234.406 iterations 15
Cbc0038I Pass  17: suminf.    0.11228 (1) obj. -225.11 iterations 11
Cbc0038I Pass  18: suminf.    0.33333 (1) obj. -240.362 iterations 2
Cbc0038I Pass  19: suminf.    2.11941 (13) obj. -225.11 iterations 14
Cbc0038I Pass  20: suminf.    1.41416 (10) obj. -230.093 iterations 4
Cbc0038I Pass  21: suminf.    2.31132 (17) obj. -225.11 iterations 16
Cbc0038I Pass  22: suminf.    1.83021 (14) obj. -231.477 iterations 9
Cbc0038I Pass  23: suminf.    0.13200 (1) obj. -225.11 iterations 15
Cbc0038I Pass  24: suminf.    0.34615 (1) obj. -244.17 iterations 1
Cbc0038I Pass  25: suminf.    2.61244 (10) obj. -225.11 iterations 15
Cbc0038I Pass  26: suminf.    2.55017 (9) obj. -225.11 iterations 4
Cbc0038I Pass  27: suminf.    0.27250 (1) obj. -225.11 iterations 8
Cbc0038I Pass  28: suminf.    0.11538 (1) obj. -239.093 iterations 1
Cbc0038I Pass  29: suminf.    1.56697 (8) obj. -225.11 iterations 13
Cbc0038I Pass  30: suminf.    1.15355 (8) obj. -225.11 iterations 2
Cbc0038I Pass  31: suminf.    0.13200 (1) obj. -225.11 iterations 10
Cbc0038I Pass  32: suminf.    0.34615 (1) obj. -244.17 iterations 1
Cbc0038I Pass  33: suminf.    1.55819 (12) obj. -225.984 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 119 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -217.362 - took 0.03 seconds
Cbc0012I Integer solution of -217.36214 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 5.5
Cbc0013I At root node, 10 cuts changed objective from -282.25245 to -219.00193 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 132 row cuts average 6.8 elements, 52 column cuts (52 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 43 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -217.3621447, took 67 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 64 (-14) columns and 355 (-98) elements
Clp1000I sum of infeasibilities 3.82789e-05 - average 3.2717e-07, 23 fixed columns
Coin0506I Presolve 68 (-49) rows, 39 (-25) columns and 207 (-148) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Coin0511I After Postsolve, objective 51.397918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22462276 - largest nonzero change 0 ( 0%) - largest zero change 2.9728923e-05
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Clp0000I Optimal - objective value 51.397918
Coin0511I After Postsolve, objective 51.397918, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.39791797 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 64 columns (63 integer (63 of which binary)) and 438 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.876%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 3.68032
Cbc0038I Solution found of -10.9561
Cbc0038I Relaxing continuous gives -11.5499
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -11.5499 to -26.6817 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.069
Cbc0038I Pass   1: suminf.    1.08638 (8) obj. -29.069 iterations 35
Cbc0038I Pass   2: suminf.    2.08411 (6) obj. -29.069 iterations 9
Cbc0038I Pass   3: suminf.    0.68914 (5) obj. -29.069 iterations 6
Cbc0038I Pass   4: suminf.    1.13411 (6) obj. -29.069 iterations 8
Cbc0038I Pass   5: suminf.    1.71819 (8) obj. -29.069 iterations 14
Cbc0038I Pass   6: suminf.    1.32507 (5) obj. -29.069 iterations 7
Cbc0038I Pass   7: suminf.    1.43495 (4) obj. -29.069 iterations 10
Cbc0038I Pass   8: suminf.    1.29559 (4) obj. -29.069 iterations 1
Cbc0038I Pass   9: suminf.    1.02980 (4) obj. -29.069 iterations 3
Cbc0038I Pass  10: suminf.    2.17598 (7) obj. -29.069 iterations 11
Cbc0038I Pass  11: suminf.    1.34338 (4) obj. -29.069 iterations 13
Cbc0038I Pass  12: suminf.    1.04515 (5) obj. -29.069 iterations 3
Cbc0038I Pass  13: suminf.    2.22707 (7) obj. -29.069 iterations 15
Cbc0038I Pass  14: suminf.    1.24891 (5) obj. -29.069 iterations 6
Cbc0038I Pass  15: suminf.    1.34322 (5) obj. -29.069 iterations 3
Cbc0038I Pass  16: suminf.    1.24891 (5) obj. -29.069 iterations 3
Cbc0038I Pass  17: suminf.    1.58471 (7) obj. -29.069 iterations 18
Cbc0038I Pass  18: suminf.    1.44388 (6) obj. -29.069 iterations 8
Cbc0038I Pass  19: suminf.    1.90545 (7) obj. -29.069 iterations 7
Cbc0038I Pass  20: suminf.    1.04363 (4) obj. -29.069 iterations 7
Cbc0038I Pass  21: suminf.    0.92946 (4) obj. -29.069 iterations 4
Cbc0038I Pass  22: suminf.    1.43495 (4) obj. -29.069 iterations 11
Cbc0038I Pass  23: suminf.    1.29559 (4) obj. -29.069 iterations 1
Cbc0038I Pass  24: suminf.    1.02980 (4) obj. -29.069 iterations 2
Cbc0038I Pass  25: suminf.    1.82430 (7) obj. -29.069 iterations 24
Cbc0038I Pass  26: suminf.    1.50555 (7) obj. -29.069 iterations 12
Cbc0038I Pass  27: suminf.    1.64473 (4) obj. -29.069 iterations 9
Cbc0038I Pass  28: suminf.    1.64473 (4) obj. -29.069 iterations 0
Cbc0038I Pass  29: suminf.    0.78041 (4) obj. -29.069 iterations 3
Cbc0038I Pass  30: suminf.    0.69306 (3) obj. -29.069 iterations 2
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -33.366
Cbc0038I Pass  30: suminf.    1.39196 (9) obj. -33.366 iterations 1
Cbc0038I Pass  31: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  32: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  33: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  34: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  35: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  36: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  37: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  38: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  39: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  40: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  41: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  42: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  43: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  44: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  45: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  46: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  47: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  48: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  49: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  50: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  51: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  52: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  53: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  54: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I Pass  55: suminf.    1.39196 (9) obj. -33.366 iterations 6
Cbc0038I Pass  56: suminf.    2.16745 (6) obj. -33.366 iterations 8
Cbc0038I Pass  57: suminf.    1.18194 (6) obj. -33.366 iterations 5
Cbc0038I Pass  58: suminf.    1.18194 (6) obj. -33.366 iterations 0
Cbc0038I Pass  59: suminf.    2.41973 (7) obj. -33.366 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 64 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -26.6817 - took 0.04 seconds
Cbc0012I Integer solution of -26.68166 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 104 rows 64 columns, reduced to 35 rows 21 columns
Cbc0031I 16 added rows had average density of 39.25
Cbc0013I At root node, 16 cuts changed objective from -50.553937 to -39.466102 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4619 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1704 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -26.68166, took 4510 iterations and 16 nodes (0.48 seconds)
Cbc0032I Strong branching done 300 times (5191 iterations), fathomed 3 nodes and fixed 18 variables
Cbc0035I Maximum depth 6, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 106 (-47) columns and 1690 (-1614) elements
Clp1000I sum of infeasibilities 1.38197e-07 - average 1.42471e-09, 87 fixed columns
Coin0506I Presolve 14 (-83) rows, 19 (-87) columns and 61 (-1629) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value -12.397887
Clp0000I Optimal - objective value -12.397887
Coin0511I After Postsolve, objective -12.397887, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5176432 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 67.674115
Clp0000I Optimal - objective value 67.674115
Clp0000I Optimal - objective value 67.674115
Coin0511I After Postsolve, objective 67.674115, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.67411464 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 110 columns (110 integer (110 of which binary)) and 1773 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.186%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 1.31827
Cbc0038I Pass   1: suminf.    1.13871 (23) obj. -50.3832 iterations 5
Cbc0038I Solution found of 1.26541
Cbc0038I Rounding solution of -10.7346 is better than previous of 1.26541

Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 110 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -10.7346 to -17.922 (0.05 seconds)
Cbc0038I Round again with cutoff of -21.3598
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.13871 (23) obj. -50.3832 iterations 0
Cbc0038I Pass   3: suminf.    0.65989 (4) obj. -21.3598 iterations 26
Cbc0038I Pass   4: suminf.    0.43960 (4) obj. -21.496 iterations 2
Cbc0038I Pass   5: suminf.    0.56337 (4) obj. -21.3598 iterations 5
Cbc0038I Pass   6: suminf.    0.45494 (5) obj. -21.3598 iterations 1
Cbc0038I Pass   7: suminf.    0.22057 (4) obj. -21.3598 iterations 12
Cbc0038I Pass   8: suminf.    0.08685 (2) obj. -21.8116 iterations 2
Cbc0038I Pass   9: suminf.    0.59610 (5) obj. -21.3598 iterations 8
Cbc0038I Pass  10: suminf.    0.59610 (5) obj. -21.3598 iterations 0
Cbc0038I Pass  11: suminf.    0.87828 (5) obj. -21.3598 iterations 4
Cbc0038I Pass  12: suminf.    0.87828 (5) obj. -21.3598 iterations 0
Cbc0038I Pass  13: suminf.    0.59610 (5) obj. -21.3598 iterations 15
Cbc0038I Pass  14: suminf.    1.06728 (12) obj. -21.3598 iterations 19
Cbc0038I Pass  15: suminf.    1.06728 (12) obj. -21.3598 iterations 1
Cbc0038I Pass  16: suminf.    0.75048 (6) obj. -21.3598 iterations 14
Cbc0038I Pass  17: suminf.    0.75048 (6) obj. -21.3598 iterations 0
Cbc0038I Pass  18: suminf.    0.95084 (6) obj. -21.3598 iterations 6
Cbc0038I Pass  19: suminf.    0.51512 (5) obj. -23.1352 iterations 3
Cbc0038I Pass  20: suminf.    0.80411 (5) obj. -21.3598 iterations 10
Cbc0038I Pass  21: suminf.    0.57480 (6) obj. -21.3598 iterations 1
Cbc0038I Pass  22: suminf.    1.05706 (6) obj. -21.3598 iterations 11
Cbc0038I Pass  23: suminf.    0.39122 (4) obj. -21.3598 iterations 3
Cbc0038I Pass  24: suminf.    0.77137 (4) obj. -21.3598 iterations 6
Cbc0038I Pass  25: suminf.    1.73964 (16) obj. -21.3598 iterations 38
Cbc0038I Pass  26: suminf.    0.74661 (13) obj. -21.7253 iterations 10
Cbc0038I Pass  27: suminf.    0.91637 (10) obj. -21.3598 iterations 13
Cbc0038I Pass  28: suminf.    0.91637 (10) obj. -21.3598 iterations 0
Cbc0038I Pass  29: suminf.    1.10719 (9) obj. -21.3598 iterations 15
Cbc0038I Pass  30: suminf.    0.82243 (8) obj. -21.3598 iterations 4
Cbc0038I Pass  31: suminf.    1.08604 (8) obj. -21.3598 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 110 columns, reduced to 41 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -17.922 to -20.1451 (0.07 seconds)
Cbc0038I Round again with cutoff of -27.5477
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.13871 (23) obj. -50.3832 iterations 0
Cbc0038I Pass  32: suminf.    0.66464 (6) obj. -27.5477 iterations 24
Cbc0038I Pass  33: suminf.    0.50787 (7) obj. -29.2617 iterations 2
Cbc0038I Pass  34: suminf.    0.86673 (5) obj. -27.5477 iterations 9
Cbc0038I Pass  35: suminf.    0.63743 (6) obj. -27.5477 iterations 1
Cbc0038I Pass  36: suminf.    1.02574 (6) obj. -27.5477 iterations 11
Cbc0038I Pass  37: suminf.    0.40901 (4) obj. -27.5477 iterations 3
Cbc0038I Pass  38: suminf.    0.70875 (4) obj. -27.5477 iterations 6
Cbc0038I Pass  39: suminf.    0.99754 (10) obj. -27.5477 iterations 14
Cbc0038I Pass  40: suminf.    0.64962 (9) obj. -27.5477 iterations 5
Cbc0038I Pass  41: suminf.    0.99945 (8) obj. -27.5477 iterations 12
Cbc0038I Pass  42: suminf.    0.99945 (8) obj. -27.5477 iterations 0
Cbc0038I Pass  43: suminf.    1.06215 (7) obj. -27.5477 iterations 11
Cbc0038I Pass  44: suminf.    1.06215 (7) obj. -27.5477 iterations 0
Cbc0038I Pass  45: suminf.    0.99438 (7) obj. -27.5477 iterations 5
Cbc0038I Pass  46: suminf.    0.57781 (6) obj. -28.0098 iterations 3
Cbc0038I Pass  47: suminf.    0.87184 (7) obj. -27.5477 iterations 8
Cbc0038I Pass  48: suminf.    0.87184 (7) obj. -27.5477 iterations 0
Cbc0038I Pass  49: suminf.    1.07795 (7) obj. -27.5477 iterations 7
Cbc0038I Pass  50: suminf.    0.58204 (6) obj. -27.5477 iterations 4
Cbc0038I Pass  51: suminf.    0.87184 (7) obj. -27.5477 iterations 6
Cbc0038I Pass  52: suminf.    1.67053 (9) obj. -27.5477 iterations 8
Cbc0038I Pass  53: suminf.    1.67053 (9) obj. -27.5477 iterations 0
Cbc0038I Pass  54: suminf.    0.99215 (9) obj. -27.5477 iterations 11
Cbc0038I Pass  55: suminf.    0.99215 (9) obj. -27.5477 iterations 0
Cbc0038I Pass  56: suminf.    0.99945 (8) obj. -27.5477 iterations 9
Cbc0038I Pass  57: suminf.    0.99945 (8) obj. -27.5477 iterations 0
Cbc0038I Pass  58: suminf.    1.20113 (9) obj. -27.5477 iterations 14
Cbc0038I Pass  59: suminf.    0.91636 (8) obj. -27.5477 iterations 4
Cbc0038I Pass  60: suminf.    1.17998 (8) obj. -27.5477 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 110 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -20.1451 - took 0.04 seconds
Cbc0012I Integer solution of -20.14509 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 89 rows 110 columns, reduced to 27 rows 29 columns
Cbc0031I 48 added rows had average density of 26.916667
Cbc0013I At root node, 48 cuts changed objective from -52.299214 to -31.874714 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7101 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1351 row cuts average 93.1 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 85 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 534 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 530 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 494 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 301 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 256 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.773 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.14509 best solution, best possible -31.874714 (2.39 seconds)
Cbc0012I Integer solution of -26.68166 found by DiveCoefficient after 3607 iterations and 2 nodes (2.92 seconds)
Cbc0010I After 4 nodes, 5 on tree, -26.68166 best solution, best possible -31.874714 (3.22 seconds)
Cbc0001I Search completed - best objective -26.68166, took 4255 iterations and 10 nodes (3.36 seconds)
Cbc0032I Strong branching done 226 times (5433 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 37 variables fixed on reduced cost
Total time (CPU seconds):       2.31   (Wallclock seconds):       3.38

