Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-21) rows, 51 (-2) columns and 262 (-41) elements
Clp1000I sum of infeasibilities 1.99194e-05 - average 2.37135e-07, 3 fixed columns
Coin0506I Presolve 79 (-5) rows, 48 (-3) columns and 246 (-16) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 36.653124
Clp0000I Optimal - objective value 36.653124
Coin0511I After Postsolve, objective 36.653124, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.653124
Clp0000I Optimal - objective value 36.653124
Clp0000I Optimal - objective value 36.653124
Coin0511I After Postsolve, objective 36.653124, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.65312438 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 84 rows, 51 columns (50 integer (50 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.561%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.76504
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.47787 iterations 37
Cbc0038I Solution found of 6.47787
Cbc0038I Relaxing continuous gives 6.47787
Cbc0038I Rounding solution of 3.93276 is better than previous of 6.47787

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 51 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 3.93276 to -7.45145 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.3717
Cbc0038I Pass   2: suminf.    2.13164 (7) obj. -10.3717 iterations 10
Cbc0038I Pass   3: suminf.    1.71567 (5) obj. -10.3717 iterations 10
Cbc0038I Pass   4: suminf.    0.89109 (4) obj. -10.3717 iterations 12
Cbc0038I Pass   5: suminf.    0.89109 (4) obj. -10.3717 iterations 0
Cbc0038I Pass   6: suminf.    1.41779 (4) obj. -10.3717 iterations 4
Cbc0038I Pass   7: suminf.    1.41213 (4) obj. -10.3717 iterations 2
Cbc0038I Pass   8: suminf.    1.50956 (4) obj. -10.3717 iterations 2
Cbc0038I Pass   9: suminf.    0.98042 (5) obj. -10.3717 iterations 12
Cbc0038I Pass  10: suminf.    0.98042 (5) obj. -10.3717 iterations 4
Cbc0038I Pass  11: suminf.    1.93644 (6) obj. -10.3717 iterations 11
Cbc0038I Pass  12: suminf.    1.71567 (5) obj. -10.3717 iterations 4
Cbc0038I Pass  13: suminf.    1.71567 (5) obj. -10.3717 iterations 0
Cbc0038I Pass  14: suminf.    0.89109 (4) obj. -10.3717 iterations 12
Cbc0038I Pass  15: suminf.    0.89109 (4) obj. -10.3717 iterations 0
Cbc0038I Pass  16: suminf.    1.41779 (4) obj. -10.3717 iterations 4
Cbc0038I Pass  17: suminf.    1.41213 (4) obj. -10.3717 iterations 2
Cbc0038I Pass  18: suminf.    1.50956 (4) obj. -10.3717 iterations 2
Cbc0038I Pass  19: suminf.    1.34380 (5) obj. -10.3717 iterations 14
Cbc0038I Pass  20: suminf.    1.10935 (4) obj. -10.3717 iterations 7
Cbc0038I Pass  21: suminf.    0.90200 (4) obj. -10.3717 iterations 10
Cbc0038I Pass  22: suminf.    0.85053 (3) obj. -10.3717 iterations 1
Cbc0038I Pass  23: suminf.    1.35921 (4) obj. -10.3717 iterations 2
Cbc0038I Pass  24: suminf.    2.30152 (8) obj. -10.3717 iterations 13
Cbc0038I Pass  25: suminf.    0.96957 (4) obj. -10.3717 iterations 8
Cbc0038I Pass  26: suminf.    0.96957 (4) obj. -10.3717 iterations 1
Cbc0038I Pass  27: suminf.    1.29096 (3) obj. -10.3717 iterations 3
Cbc0038I Pass  28: suminf.    0.83202 (3) obj. -10.3717 iterations 2
Cbc0038I Pass  29: suminf.    0.83202 (3) obj. -10.3717 iterations 1
Cbc0038I Pass  30: suminf.    1.29096 (3) obj. -10.3717 iterations 2
Cbc0038I Pass  31: suminf.    3.34037 (13) obj. -10.3717 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 51 columns, reduced to 78 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.45145 - took 0.09 seconds
Cbc0012I Integer solution of -7.45145 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 22 added rows had average density of 36
Cbc0013I At root node, 22 cuts changed objective from -36.653124 to -27.007515 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9084 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1672 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0010I After 18 nodes, 10 on tree, -7.45145 best solution, best possible -27.007515 (0.67 seconds)
Cbc0001I Search completed - best objective -7.451450000000001, took 7251 iterations and 30 nodes (0.69 seconds)
Cbc0032I Strong branching done 494 times (9014 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 13, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-35) rows, 85 (-17) columns and 1016 (-562) elements
Clp1000I sum of infeasibilities 5.4189e-08 - average 7.85348e-10, 20 fixed columns
Coin0506I Presolve 52 (-17) rows, 64 (-21) columns and 589 (-427) elements
Clp0006I 0  Obj 37.344487 Dual inf 1.4057002 (63)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 3.8024457 - largest nonzero change 1.3366374e-05 ( 0.00074300197%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 51.248205
Clp0000I Optimal - objective value 51.248205
Coin0511I After Postsolve, objective 51.248205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.248205 Dual inf 0.15451846 (1)
Clp0014I Perturbing problem by 0.001% of 4.2654978 - largest nonzero change 1.6486712e-05 ( 0.0015423305%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 51.895264
Clp0000I Optimal - objective value 51.895264
Clp0000I Optimal - objective value 51.895264
Coin0511I After Postsolve, objective 51.895264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.89526383 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 85 columns (85 integer (85 of which binary)) and 1022 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.440%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.27407
Cbc0038I Pass   1: suminf.    3.14227 (24) obj. -33.9789 iterations 14
Cbc0038I Pass   2: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass   3: suminf.    0.21502 (3) obj. 7.40375 iterations 21
Cbc0038I Solution found of 11.1118
Cbc0038I Rounding solution of 5.92782 is better than previous of 11.1118

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 85 columns, reduced to 6 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 5.92782 to -1.01387 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.47446
Cbc0038I Pass   4: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass   5: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass   6: suminf.    1.35038 (12) obj. -8.35725 iterations 12
Cbc0038I Pass   7: suminf.    0.44123 (3) obj. -5.47446 iterations 15
Cbc0038I Pass   8: suminf.    0.24333 (2) obj. -7.24916 iterations 1
Cbc0038I Pass   9: suminf.    0.23150 (1) obj. -5.47446 iterations 2
Cbc0038I Pass  10: suminf.    0.16000 (1) obj. -6.33249 iterations 1
Cbc0038I Pass  11: suminf.    0.73674 (5) obj. -9.0863 iterations 14
Cbc0038I Pass  12: suminf.    0.56362 (4) obj. -9.15367 iterations 3
Cbc0038I Pass  13: suminf.    0.40007 (2) obj. -5.47446 iterations 3
Cbc0038I Pass  14: suminf.    0.27397 (2) obj. -6.57954 iterations 1
Cbc0038I Pass  15: suminf.    1.53991 (10) obj. -5.47446 iterations 21
Cbc0038I Pass  16: suminf.    1.35664 (8) obj. -5.47446 iterations 8
Cbc0038I Pass  17: suminf.    0.99394 (5) obj. -5.47446 iterations 10
Cbc0038I Pass  18: suminf.    0.74695 (4) obj. -5.47446 iterations 5
Cbc0038I Pass  19: suminf.    0.61345 (5) obj. -5.47446 iterations 10
Cbc0038I Pass  20: suminf.    0.61345 (5) obj. -5.47446 iterations 0
Cbc0038I Pass  21: suminf.    1.26846 (4) obj. -5.47446 iterations 10
Cbc0038I Pass  22: suminf.    1.26846 (4) obj. -5.47446 iterations 0
Cbc0038I Pass  23: suminf.    1.00312 (3) obj. -5.47446 iterations 5
Cbc0038I Pass  24: suminf.    0.56129 (3) obj. -5.47446 iterations 1
Cbc0038I Pass  25: suminf.    1.74703 (10) obj. -7.07094 iterations 34
Cbc0038I Pass  26: suminf.    1.38192 (10) obj. -5.47446 iterations 5
Cbc0038I Pass  27: suminf.    1.00993 (5) obj. -5.47446 iterations 13
Cbc0038I Pass  28: suminf.    0.98256 (6) obj. -5.47446 iterations 3
Cbc0038I Pass  29: suminf.    0.88537 (6) obj. -5.47446 iterations 8
Cbc0038I Pass  30: suminf.    0.54343 (5) obj. -5.67115 iterations 4
Cbc0038I Pass  31: suminf.    0.94070 (7) obj. -5.81428 iterations 13
Cbc0038I Pass  32: suminf.    0.94070 (7) obj. -5.81428 iterations 5
Cbc0038I Pass  33: suminf.    0.75702 (6) obj. -5.47446 iterations 8
Cbc0038I Rounding solution of -1.43648 is better than previous of -1.01387

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 85 columns, reduced to 20 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -1.43648 to -4.56142 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.5033
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass  34: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass  35: suminf.    1.15877 (10) obj. -13.5033 iterations 15
Cbc0038I Pass  36: suminf.    1.08857 (10) obj. -14.3457 iterations 1
Cbc0038I Pass  37: suminf.    1.30482 (8) obj. -13.5033 iterations 16
Cbc0038I Pass  38: suminf.    0.77543 (6) obj. -14.1291 iterations 3
Cbc0038I Pass  39: suminf.    0.97816 (4) obj. -13.5033 iterations 9
Cbc0038I Pass  40: suminf.    0.72197 (4) obj. -13.5033 iterations 4
Cbc0038I Pass  41: suminf.    0.96769 (5) obj. -13.5033 iterations 3
Cbc0038I Pass  42: suminf.    0.84672 (4) obj. -13.5033 iterations 1
Cbc0038I Pass  43: suminf.    0.88062 (4) obj. -13.5033 iterations 2
Cbc0038I Pass  44: suminf.    2.90498 (11) obj. -13.5033 iterations 18
Cbc0038I Pass  45: suminf.    1.46354 (9) obj. -13.5033 iterations 4
Cbc0038I Pass  46: suminf.    1.32371 (9) obj. -14.7895 iterations 1
Cbc0038I Pass  47: suminf.    1.08288 (7) obj. -13.5033 iterations 7
Cbc0038I Pass  48: suminf.    0.95577 (7) obj. -13.5033 iterations 1
Cbc0038I Pass  49: suminf.    1.12827 (7) obj. -13.5033 iterations 9
Cbc0038I Pass  50: suminf.    0.94820 (7) obj. -13.5033 iterations 3
Cbc0038I Pass  51: suminf.    1.14803 (7) obj. -13.5033 iterations 9
Cbc0038I Pass  52: suminf.    2.12206 (12) obj. -13.5033 iterations 21
Cbc0038I Pass  53: suminf.    2.12206 (12) obj. -13.5033 iterations 2
Cbc0038I Pass  54: suminf.    1.78421 (7) obj. -13.5033 iterations 13
Cbc0038I Pass  55: suminf.    1.62453 (7) obj. -13.5033 iterations 2
Cbc0038I Pass  56: suminf.    1.23073 (7) obj. -13.5033 iterations 6
Cbc0038I Pass  57: suminf.    1.21362 (7) obj. -13.5033 iterations 1
Cbc0038I Pass  58: suminf.    1.59182 (7) obj. -13.5033 iterations 5
Cbc0038I Pass  59: suminf.    1.29303 (6) obj. -13.5033 iterations 5
Cbc0038I Pass  60: suminf.    1.06381 (6) obj. -13.5033 iterations 7
Cbc0038I Pass  61: suminf.    0.69873 (4) obj. -13.8342 iterations 5
Cbc0038I Pass  62: suminf.    0.99395 (5) obj. -13.5033 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 85 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -4.56142 - took 0.03 seconds
Cbc0012I Integer solution of -4.56142 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 69 rows 85 columns, reduced to 7 rows 8 columns
Cbc0031I 48 added rows had average density of 23.895833
Cbc0013I At root node, 48 cuts changed objective from -45.618851 to -14.622027 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9930 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 975 row cuts average 78.3 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 68 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 880 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 321 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.56142 best solution, best possible -14.622027 (1.97 seconds)
Cbc0012I Integer solution of -5.63804 found by rounding after 4947 iterations and 18 nodes (2.39 seconds)
Cbc0012I Integer solution of -5.94538 found by rounding after 5518 iterations and 27 nodes (2.58 seconds)
Cbc0012I Integer solution of -6.45145 found by DiveCoefficient after 5518 iterations and 27 nodes (2.59 seconds)
Cbc0012I Integer solution of -6.58458 found by DiveCoefficient after 6133 iterations and 36 nodes (2.66 seconds)
Cbc0012I Integer solution of -6.909115 found by rounding after 6138 iterations and 37 nodes (2.67 seconds)
Cbc0010I After 38 nodes, 3 on tree, -6.909115 best solution, best possible -9.2728903 (2.67 seconds)
Cbc0016I Integer solution of -7.34589 found by strong branching after 6168 iterations and 41 nodes (2.68 seconds)
Cbc0038I Full problem 69 rows 85 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -7.45145 found by RINS after 6189 iterations and 43 nodes (2.68 seconds)
Cbc0001I Search completed - best objective -7.451450000000001, took 6233 iterations and 48 nodes (2.69 seconds)
Cbc0032I Strong branching done 674 times (8117 iterations), fathomed 5 nodes and fixed 9 variables
Cbc0035I Maximum depth 12, 83 variables fixed on reduced cost
Total time (CPU seconds):       2.06   (Wallclock seconds):       2.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-21) rows, 51 (-2) columns and 262 (-41) elements
Clp1000I sum of infeasibilities 1.99194e-05 - average 2.37135e-07, 3 fixed columns
Coin0506I Presolve 79 (-5) rows, 48 (-3) columns and 246 (-16) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 36.653124
Clp0000I Optimal - objective value 36.653124
Coin0511I After Postsolve, objective 36.653124, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.653124
Clp0000I Optimal - objective value 36.653124
Clp0000I Optimal - objective value 36.653124
Coin0511I After Postsolve, objective 36.653124, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.65312438 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 84 rows, 51 columns (50 integer (50 of which binary)) and 262 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.561%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.76504
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.47787 iterations 37
Cbc0038I Solution found of 6.47787
Cbc0038I Relaxing continuous gives 6.47787
Cbc0038I Rounding solution of 3.93276 is better than previous of 6.47787

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 51 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 3.93276 to -7.45145 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.3717
Cbc0038I Pass   2: suminf.    2.13164 (7) obj. -10.3717 iterations 10
Cbc0038I Pass   3: suminf.    1.71567 (5) obj. -10.3717 iterations 10
Cbc0038I Pass   4: suminf.    0.89109 (4) obj. -10.3717 iterations 12
Cbc0038I Pass   5: suminf.    0.89109 (4) obj. -10.3717 iterations 0
Cbc0038I Pass   6: suminf.    1.41779 (4) obj. -10.3717 iterations 4
Cbc0038I Pass   7: suminf.    1.41213 (4) obj. -10.3717 iterations 2
Cbc0038I Pass   8: suminf.    1.50956 (4) obj. -10.3717 iterations 2
Cbc0038I Pass   9: suminf.    0.98042 (5) obj. -10.3717 iterations 12
Cbc0038I Pass  10: suminf.    0.98042 (5) obj. -10.3717 iterations 4
Cbc0038I Pass  11: suminf.    1.93644 (6) obj. -10.3717 iterations 11
Cbc0038I Pass  12: suminf.    1.71567 (5) obj. -10.3717 iterations 4
Cbc0038I Pass  13: suminf.    1.71567 (5) obj. -10.3717 iterations 0
Cbc0038I Pass  14: suminf.    0.89109 (4) obj. -10.3717 iterations 12
Cbc0038I Pass  15: suminf.    0.89109 (4) obj. -10.3717 iterations 0
Cbc0038I Pass  16: suminf.    1.41779 (4) obj. -10.3717 iterations 4
Cbc0038I Pass  17: suminf.    1.41213 (4) obj. -10.3717 iterations 2
Cbc0038I Pass  18: suminf.    1.50956 (4) obj. -10.3717 iterations 2
Cbc0038I Pass  19: suminf.    1.34380 (5) obj. -10.3717 iterations 14
Cbc0038I Pass  20: suminf.    1.10935 (4) obj. -10.3717 iterations 7
Cbc0038I Pass  21: suminf.    0.90200 (4) obj. -10.3717 iterations 10
Cbc0038I Pass  22: suminf.    0.85053 (3) obj. -10.3717 iterations 1
Cbc0038I Pass  23: suminf.    1.35921 (4) obj. -10.3717 iterations 2
Cbc0038I Pass  24: suminf.    2.30152 (8) obj. -10.3717 iterations 13
Cbc0038I Pass  25: suminf.    0.96957 (4) obj. -10.3717 iterations 8
Cbc0038I Pass  26: suminf.    0.96957 (4) obj. -10.3717 iterations 1
Cbc0038I Pass  27: suminf.    1.29096 (3) obj. -10.3717 iterations 3
Cbc0038I Pass  28: suminf.    0.83202 (3) obj. -10.3717 iterations 2
Cbc0038I Pass  29: suminf.    0.83202 (3) obj. -10.3717 iterations 1
Cbc0038I Pass  30: suminf.    1.29096 (3) obj. -10.3717 iterations 2
Cbc0038I Pass  31: suminf.    3.34037 (13) obj. -10.3717 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 51 columns, reduced to 78 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.45145 - took 0.09 seconds
Cbc0012I Integer solution of -7.45145 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 22 added rows had average density of 36
Cbc0013I At root node, 22 cuts changed objective from -36.653124 to -27.007515 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9084 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1672 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -7.45145 best solution, best possible -27.007515 (0.70 seconds)
Cbc0001I Search completed - best objective -7.451450000000001, took 7251 iterations and 30 nodes (0.78 seconds)
Cbc0032I Strong branching done 494 times (9014 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 13, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 85 (-18) columns and 1016 (-563) elements
Clp1000I sum of infeasibilities 5.4189e-08 - average 7.85348e-10, 20 fixed columns
Coin0506I Presolve 52 (-17) rows, 64 (-21) columns and 589 (-427) elements
Clp0006I 0  Obj 37.344487 Dual inf 1.4057002 (63)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 3.8024457 - largest nonzero change 1.3366374e-05 ( 0.00074300197%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 51.248205
Clp0000I Optimal - objective value 51.248205
Coin0511I After Postsolve, objective 51.248205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.248205 Dual inf 0.15451846 (1)
Clp0014I Perturbing problem by 0.001% of 4.2654978 - largest nonzero change 1.6486712e-05 ( 0.0015423305%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 51.895264
Clp0000I Optimal - objective value 51.895264
Clp0000I Optimal - objective value 51.895264
Coin0511I After Postsolve, objective 51.895264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.89526383 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 85 columns (85 integer (85 of which binary)) and 1022 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.440%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.27407
Cbc0038I Pass   1: suminf.    3.14227 (24) obj. -33.9789 iterations 14
Cbc0038I Pass   2: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass   3: suminf.    0.21502 (3) obj. 7.40375 iterations 21
Cbc0038I Solution found of 11.1118
Cbc0038I Rounding solution of 5.92782 is better than previous of 11.1118

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 85 columns, reduced to 6 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 5.92782 to -1.01387 (0.02 seconds)
Cbc0038I Round again with cutoff of -5.47446
Cbc0038I Pass   4: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass   5: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass   6: suminf.    1.35038 (12) obj. -8.35725 iterations 12
Cbc0038I Pass   7: suminf.    0.44123 (3) obj. -5.47446 iterations 15
Cbc0038I Pass   8: suminf.    0.24333 (2) obj. -7.24916 iterations 1
Cbc0038I Pass   9: suminf.    0.23150 (1) obj. -5.47446 iterations 2
Cbc0038I Pass  10: suminf.    0.16000 (1) obj. -6.33249 iterations 1
Cbc0038I Pass  11: suminf.    0.73674 (5) obj. -9.0863 iterations 14
Cbc0038I Pass  12: suminf.    0.56362 (4) obj. -9.15367 iterations 3
Cbc0038I Pass  13: suminf.    0.40007 (2) obj. -5.47446 iterations 3
Cbc0038I Pass  14: suminf.    0.27397 (2) obj. -6.57954 iterations 1
Cbc0038I Pass  15: suminf.    1.53991 (10) obj. -5.47446 iterations 21
Cbc0038I Pass  16: suminf.    1.35664 (8) obj. -5.47446 iterations 8
Cbc0038I Pass  17: suminf.    0.99394 (5) obj. -5.47446 iterations 10
Cbc0038I Pass  18: suminf.    0.74695 (4) obj. -5.47446 iterations 5
Cbc0038I Pass  19: suminf.    0.61345 (5) obj. -5.47446 iterations 10
Cbc0038I Pass  20: suminf.    0.61345 (5) obj. -5.47446 iterations 0
Cbc0038I Pass  21: suminf.    1.26846 (4) obj. -5.47446 iterations 10
Cbc0038I Pass  22: suminf.    1.26846 (4) obj. -5.47446 iterations 0
Cbc0038I Pass  23: suminf.    1.00312 (3) obj. -5.47446 iterations 5
Cbc0038I Pass  24: suminf.    0.56129 (3) obj. -5.47446 iterations 1
Cbc0038I Pass  25: suminf.    1.74703 (10) obj. -7.07094 iterations 34
Cbc0038I Pass  26: suminf.    1.38192 (10) obj. -5.47446 iterations 5
Cbc0038I Pass  27: suminf.    1.00993 (5) obj. -5.47446 iterations 13
Cbc0038I Pass  28: suminf.    0.98256 (6) obj. -5.47446 iterations 3
Cbc0038I Pass  29: suminf.    0.88537 (6) obj. -5.47446 iterations 8
Cbc0038I Pass  30: suminf.    0.54343 (5) obj. -5.67115 iterations 4
Cbc0038I Pass  31: suminf.    0.94070 (7) obj. -5.81428 iterations 13
Cbc0038I Pass  32: suminf.    0.94070 (7) obj. -5.81428 iterations 5
Cbc0038I Pass  33: suminf.    0.75702 (6) obj. -5.47446 iterations 8
Cbc0038I Rounding solution of -1.43648 is better than previous of -1.01387

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 85 columns, reduced to 20 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -1.43648 to -4.56142 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.5033
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass  34: suminf.    3.14227 (24) obj. -33.9789 iterations 0
Cbc0038I Pass  35: suminf.    1.15877 (10) obj. -13.5033 iterations 15
Cbc0038I Pass  36: suminf.    1.08857 (10) obj. -14.3457 iterations 1
Cbc0038I Pass  37: suminf.    1.30482 (8) obj. -13.5033 iterations 16
Cbc0038I Pass  38: suminf.    0.77543 (6) obj. -14.1291 iterations 3
Cbc0038I Pass  39: suminf.    0.97816 (4) obj. -13.5033 iterations 9
Cbc0038I Pass  40: suminf.    0.72197 (4) obj. -13.5033 iterations 4
Cbc0038I Pass  41: suminf.    0.96769 (5) obj. -13.5033 iterations 3
Cbc0038I Pass  42: suminf.    0.84672 (4) obj. -13.5033 iterations 1
Cbc0038I Pass  43: suminf.    0.88062 (4) obj. -13.5033 iterations 2
Cbc0038I Pass  44: suminf.    2.90498 (11) obj. -13.5033 iterations 18
Cbc0038I Pass  45: suminf.    1.46354 (9) obj. -13.5033 iterations 4
Cbc0038I Pass  46: suminf.    1.32371 (9) obj. -14.7895 iterations 1
Cbc0038I Pass  47: suminf.    1.08288 (7) obj. -13.5033 iterations 7
Cbc0038I Pass  48: suminf.    0.95577 (7) obj. -13.5033 iterations 1
Cbc0038I Pass  49: suminf.    1.12827 (7) obj. -13.5033 iterations 9
Cbc0038I Pass  50: suminf.    0.94820 (7) obj. -13.5033 iterations 3
Cbc0038I Pass  51: suminf.    1.14803 (7) obj. -13.5033 iterations 9
Cbc0038I Pass  52: suminf.    2.12206 (12) obj. -13.5033 iterations 21
Cbc0038I Pass  53: suminf.    2.12206 (12) obj. -13.5033 iterations 2
Cbc0038I Pass  54: suminf.    1.78421 (7) obj. -13.5033 iterations 13
Cbc0038I Pass  55: suminf.    1.62453 (7) obj. -13.5033 iterations 2
Cbc0038I Pass  56: suminf.    1.23073 (7) obj. -13.5033 iterations 6
Cbc0038I Pass  57: suminf.    1.21362 (7) obj. -13.5033 iterations 1
Cbc0038I Pass  58: suminf.    1.59182 (7) obj. -13.5033 iterations 5
Cbc0038I Pass  59: suminf.    1.29303 (6) obj. -13.5033 iterations 5
Cbc0038I Pass  60: suminf.    1.06381 (6) obj. -13.5033 iterations 7
Cbc0038I Pass  61: suminf.    0.69873 (4) obj. -13.8342 iterations 5
Cbc0038I Pass  62: suminf.    0.99395 (5) obj. -13.5033 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 85 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -4.56142 - took 0.03 seconds
Cbc0012I Integer solution of -4.56142 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 69 rows 85 columns, reduced to 7 rows 8 columns
Cbc0031I 48 added rows had average density of 23.895833
Cbc0013I At root node, 48 cuts changed objective from -45.618851 to -14.622027 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9930 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 975 row cuts average 78.3 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 68 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 880 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 321 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.765 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.56142 best solution, best possible -14.622027 (2.24 seconds)
Cbc0012I Integer solution of -5.63804 found by rounding after 4947 iterations and 18 nodes (2.74 seconds)
Cbc0012I Integer solution of -5.94538 found by rounding after 5518 iterations and 27 nodes (2.97 seconds)
Cbc0012I Integer solution of -6.45145 found by DiveCoefficient after 5518 iterations and 27 nodes (2.98 seconds)
Cbc0010I After 27 nodes, 6 on tree, -6.45145 best solution, best possible -14.622027 (2.98 seconds)
Cbc0012I Integer solution of -6.58458 found by DiveCoefficient after 6133 iterations and 36 nodes (3.07 seconds)
Cbc0012I Integer solution of -6.909115 found by rounding after 6138 iterations and 37 nodes (3.07 seconds)
Cbc0016I Integer solution of -7.34589 found by strong branching after 6168 iterations and 41 nodes (3.08 seconds)
Cbc0038I Full problem 69 rows 85 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -7.45145 found by RINS after 6189 iterations and 43 nodes (3.09 seconds)
Cbc0001I Search completed - best objective -7.451450000000001, took 6233 iterations and 48 nodes (3.09 seconds)
Cbc0032I Strong branching done 674 times (8117 iterations), fathomed 5 nodes and fixed 9 variables
Cbc0035I Maximum depth 12, 83 variables fixed on reduced cost
Total time (CPU seconds):       2.35   (Wallclock seconds):       3.11

