Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-9) rows, 51 (-2) columns and 286 (-17) elements
Clp1000I sum of infeasibilities 2.00287e-05 - average 2.08632e-07, 4 fixed columns
Coin0506I Presolve 88 (-8) rows, 47 (-4) columns and 262 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Coin0511I After Postsolve, objective 44.840514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Coin0511I After Postsolve, objective 44.840514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.84051365 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 96 rows, 51 columns (50 integer (50 of which binary)) and 286 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.789%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 10.417
Cbc0038I Solution found of 11.8162
Cbc0038I Relaxing continuous gives -1.98722
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 51 columns, reduced to 70 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -1.98722 to -7.07605 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.8526
Cbc0038I Pass   1: suminf.    1.89403 (26) obj. -10.8526 iterations 35
Cbc0038I Pass   2: suminf.    0.77856 (5) obj. -10.8526 iterations 33
Cbc0038I Pass   3: suminf.    0.15953 (3) obj. -10.8526 iterations 3
Cbc0038I Pass   4: suminf.    1.20429 (5) obj. -10.8526 iterations 9
Cbc0038I Pass   5: suminf.    0.72311 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   6: suminf.    0.72311 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   7: suminf.    0.29987 (3) obj. -10.8526 iterations 3
Cbc0038I Pass   8: suminf.    0.29987 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   9: suminf.    0.72311 (3) obj. -10.8526 iterations 2
Cbc0038I Pass  10: suminf.    0.48065 (3) obj. -10.8526 iterations 16
Cbc0038I Pass  11: suminf.    0.35036 (3) obj. -10.8526 iterations 5
Cbc0038I Pass  12: suminf.    0.77549 (3) obj. -10.8526 iterations 2
Cbc0038I Pass  13: suminf.    0.77549 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  14: suminf.    0.35036 (3) obj. -10.8526 iterations 3
Cbc0038I Pass  15: suminf.    1.55308 (7) obj. -10.8526 iterations 21
Cbc0038I Pass  16: suminf.    1.20032 (5) obj. -10.8526 iterations 4
Cbc0038I Pass  17: suminf.    1.33488 (5) obj. -10.8526 iterations 7
Cbc0038I Pass  18: suminf.    1.19915 (4) obj. -10.8526 iterations 1
Cbc0038I Pass  19: suminf.    1.04938 (4) obj. -10.8526 iterations 4
Cbc0038I Pass  20: suminf.    1.03555 (5) obj. -10.8526 iterations 1
Cbc0038I Pass  21: suminf.    0.92800 (5) obj. -10.8526 iterations 10
Cbc0038I Pass  22: suminf.    1.17739 (3) obj. -10.8526 iterations 5
Cbc0038I Pass  23: suminf.    1.01656 (4) obj. -10.8526 iterations 2
Cbc0038I Pass  24: suminf.    1.15367 (3) obj. -10.8526 iterations 4
Cbc0038I Pass  25: suminf.    1.15367 (3) obj. -10.8526 iterations 0
Cbc0038I Pass  26: suminf.    1.21669 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  27: suminf.    0.99911 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  28: suminf.    0.99911 (3) obj. -10.8526 iterations 0
Cbc0038I Pass  29: suminf.    1.15367 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  30: suminf.    1.15367 (3) obj. -10.8526 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 51 columns, reduced to 83 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.07605 - took 0.09 seconds
Cbc0012I Integer solution of -7.07605 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 96 rows 51 columns, reduced to 70 rows 37 columns
Cbc0012I Integer solution of -12.34531 found by RINS after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 13 added rows had average density of 26.076923
Cbc0013I At root node, 13 cuts changed objective from -44.840514 to -36.293844 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6373 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1664 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0012I Integer solution of -13.52076 found by DiveCoefficient after 5892 iterations and 35 nodes (0.65 seconds)
Cbc0001I Search completed - best objective -13.52076000000001, took 6032 iterations and 42 nodes (0.67 seconds)
Cbc0032I Strong branching done 464 times (7048 iterations), fathomed 8 nodes and fixed 32 variables
Cbc0035I Maximum depth 6, 101 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-23) rows, 85 (-17) columns and 1172 (-406) elements
Clp1000I sum of infeasibilities 1.91663e-07 - average 2.36621e-09, 45 fixed columns
Coin0506I Presolve 36 (-45) rows, 40 (-45) columns and 146 (-1026) elements
Clp0006I 0  Obj -3.4997162 Dual inf 1.3762188 (40)
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 2.2736402 - largest nonzero change 2.9856983e-05 ( 0.00090247072%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 6.514302
Clp0000I Optimal - objective value 6.514302
Coin0511I After Postsolve, objective 6.514302, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 6.514302 Dual inf 22.015626 (35)
Clp0014I Perturbing problem by 0.001% of 4.5185177 - largest nonzero change 1.737495e-05 ( 0.001737495%) - largest zero change 2.6227362e-05
Clp0000I Optimal - objective value 60.129679
Clp0000I Optimal - objective value 60.129679
Clp0000I Optimal - objective value 60.129679
Coin0511I After Postsolve, objective 60.129679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.1296791 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 81 rows, 85 columns (85 integer (85 of which binary)) and 1174 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.430%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.54295
Cbc0038I Pass   1: suminf.    2.07233 (25) obj. -14.8665 iterations 18
Cbc0038I Pass   2: suminf.    2.07233 (25) obj. -14.8665 iterations 1
Cbc0038I Pass   3: suminf.    0.26257 (4) obj. 12.6086 iterations 21
Cbc0038I Solution found of 20.0793
Cbc0038I Rounding solution of 7.70979 is better than previous of 20.0793

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 85 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 7.70979 to -11.4614 (0.03 seconds)
Cbc0038I Round again with cutoff of -15.5322
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.18570 (28) obj. -15.5322 iterations 2
Cbc0038I Pass   5: suminf.    2.18075 (26) obj. -15.5322 iterations 2
Cbc0038I Pass   6: suminf.    1.97055 (17) obj. -15.5322 iterations 13
Cbc0038I Pass   7: suminf.    0.76676 (7) obj. -15.5322 iterations 23
Cbc0038I Pass   8: suminf.    0.75421 (7) obj. -15.5322 iterations 3
Cbc0038I Pass   9: suminf.    1.10182 (4) obj. -15.5322 iterations 14
Cbc0038I Pass  10: suminf.    1.08010 (4) obj. -15.5322 iterations 7
Cbc0038I Pass  11: suminf.    1.98487 (6) obj. -15.5322 iterations 15
Cbc0038I Pass  12: suminf.    1.35182 (3) obj. -15.5322 iterations 6
Cbc0038I Pass  13: suminf.    1.32727 (4) obj. -15.5322 iterations 6
Cbc0038I Pass  14: suminf.    1.42509 (5) obj. -15.5322 iterations 10
Cbc0038I Pass  15: suminf.    0.95895 (4) obj. -15.5322 iterations 15
Cbc0038I Pass  16: suminf.    0.89812 (4) obj. -15.5322 iterations 9
Cbc0038I Pass  17: suminf.    0.84944 (3) obj. -15.5322 iterations 3
Cbc0038I Pass  18: suminf.    0.72172 (3) obj. -15.5322 iterations 7
Cbc0038I Pass  19: suminf.    0.22344 (2) obj. -15.8378 iterations 5
Cbc0038I Pass  20: suminf.    0.29984 (2) obj. -15.5322 iterations 4
Cbc0038I Pass  21: suminf.    2.08592 (15) obj. -15.5322 iterations 26
Cbc0038I Pass  22: suminf.    2.01274 (12) obj. -15.5322 iterations 7
Cbc0038I Pass  23: suminf.    0.78926 (3) obj. -15.5322 iterations 25
Cbc0038I Pass  24: suminf.    0.52525 (3) obj. -15.5322 iterations 6
Cbc0038I Pass  25: suminf.    0.78926 (3) obj. -15.5322 iterations 6
Cbc0038I Pass  26: suminf.    2.54040 (16) obj. -15.5322 iterations 36
Cbc0038I Pass  27: suminf.    1.45345 (9) obj. -15.6569 iterations 13
Cbc0038I Pass  28: suminf.    1.25627 (4) obj. -15.5322 iterations 19
Cbc0038I Pass  29: suminf.    0.99036 (5) obj. -15.5322 iterations 8
Cbc0038I Pass  30: suminf.    1.12080 (7) obj. -15.5322 iterations 10
Cbc0038I Pass  31: suminf.    1.12080 (7) obj. -15.5322 iterations 0
Cbc0038I Pass  32: suminf.    1.82380 (6) obj. -15.5322 iterations 10
Cbc0038I Pass  33: suminf.    0.93720 (3) obj. -15.5322 iterations 8
Cbc0038I Rounding solution of -11.9479 is better than previous of -11.4614

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 85 columns, reduced to 46 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -11.9479 to -13.5208 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.8593
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.07933 (28) obj. -22.8593 iterations 0
Cbc0038I Pass  34: suminf.    3.07933 (28) obj. -22.8593 iterations 1
Cbc0038I Pass  35: suminf.    2.74156 (13) obj. -22.8593 iterations 36
Cbc0038I Pass  36: suminf.    2.74156 (13) obj. -22.8593 iterations 0
Cbc0038I Pass  37: suminf.    1.99412 (8) obj. -22.8593 iterations 18
Cbc0038I Pass  38: suminf.    1.63544 (7) obj. -22.8593 iterations 1
Cbc0038I Pass  39: suminf.    1.16306 (6) obj. -22.8593 iterations 9
Cbc0038I Pass  40: suminf.    0.99760 (6) obj. -22.8593 iterations 3
Cbc0038I Pass  41: suminf.    1.51078 (7) obj. -22.8593 iterations 18
Cbc0038I Pass  42: suminf.    1.51078 (7) obj. -22.8593 iterations 0
Cbc0038I Pass  43: suminf.    2.40831 (8) obj. -22.8593 iterations 12
Cbc0038I Pass  44: suminf.    1.51239 (6) obj. -22.8593 iterations 7
Cbc0038I Pass  45: suminf.    1.48161 (7) obj. -22.8593 iterations 5
Cbc0038I Pass  46: suminf.    2.41195 (8) obj. -22.8593 iterations 12
Cbc0038I Pass  47: suminf.    1.68342 (6) obj. -22.8593 iterations 6
Cbc0038I Pass  48: suminf.    2.12801 (7) obj. -22.8593 iterations 10
Cbc0038I Pass  49: suminf.    3.46675 (15) obj. -22.8593 iterations 18
Cbc0038I Pass  50: suminf.    2.28097 (12) obj. -22.8593 iterations 8
Cbc0038I Pass  51: suminf.    2.17591 (12) obj. -22.8593 iterations 1
Cbc0038I Pass  52: suminf.    2.47527 (10) obj. -22.8593 iterations 18
Cbc0038I Pass  53: suminf.    1.15994 (6) obj. -22.8593 iterations 7
Cbc0038I Pass  54: suminf.    0.98284 (5) obj. -23.2544 iterations 5
Cbc0038I Pass  55: suminf.    1.51853 (6) obj. -22.8593 iterations 7
Cbc0038I Pass  56: suminf.    1.24318 (6) obj. -22.8593 iterations 4
Cbc0038I Pass  57: suminf.    1.00388 (8) obj. -22.8593 iterations 13
Cbc0038I Pass  58: suminf.    0.65674 (4) obj. -22.8593 iterations 6
Cbc0038I Pass  59: suminf.    0.68784 (4) obj. -22.8593 iterations 6
Cbc0038I Pass  60: suminf.    0.67587 (4) obj. -22.8593 iterations 3
Cbc0038I Pass  61: suminf.    2.80777 (14) obj. -22.8593 iterations 15
Cbc0038I Pass  62: suminf.    1.97773 (9) obj. -24.9293 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 85 columns, reduced to 47 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -13.5208 - took 0.06 seconds
Cbc0012I Integer solution of -13.52076 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 81 rows 85 columns, reduced to 5 rows 6 columns
Cbc0031I 48 added rows had average density of 36.1875
Cbc0013I At root node, 48 cuts changed objective from -52.167914 to -18.026763 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8840 row cuts average 5.3 elements, 1 column cuts (1 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1054 row cuts average 76.4 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 884 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 338 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.718 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.52076 best solution, best possible -18.026763 (2.32 seconds)
Cbc0001I Search completed - best objective -13.52076000000001, took 4771 iterations and 26 nodes (2.62 seconds)
Cbc0032I Strong branching done 450 times (7120 iterations), fathomed 3 nodes and fixed 0 variables
Cbc0035I Maximum depth 9, 71 variables fixed on reduced cost
Total time (CPU seconds):       1.83   (Wallclock seconds):       2.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-9) rows, 51 (-2) columns and 286 (-17) elements
Clp1000I sum of infeasibilities 2.00287e-05 - average 2.08632e-07, 4 fixed columns
Coin0506I Presolve 88 (-8) rows, 47 (-4) columns and 262 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Coin0511I After Postsolve, objective 44.840514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Clp0000I Optimal - objective value 44.840514
Coin0511I After Postsolve, objective 44.840514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.84051365 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 96 rows, 51 columns (50 integer (50 of which binary)) and 286 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.789%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 10.417
Cbc0038I Solution found of 11.8162
Cbc0038I Relaxing continuous gives -1.98722
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 51 columns, reduced to 70 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -1.98722 to -7.07605 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.8526
Cbc0038I Pass   1: suminf.    1.89403 (26) obj. -10.8526 iterations 35
Cbc0038I Pass   2: suminf.    0.77856 (5) obj. -10.8526 iterations 33
Cbc0038I Pass   3: suminf.    0.15953 (3) obj. -10.8526 iterations 3
Cbc0038I Pass   4: suminf.    1.20429 (5) obj. -10.8526 iterations 9
Cbc0038I Pass   5: suminf.    0.72311 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   6: suminf.    0.72311 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   7: suminf.    0.29987 (3) obj. -10.8526 iterations 3
Cbc0038I Pass   8: suminf.    0.29987 (3) obj. -10.8526 iterations 1
Cbc0038I Pass   9: suminf.    0.72311 (3) obj. -10.8526 iterations 2
Cbc0038I Pass  10: suminf.    0.48065 (3) obj. -10.8526 iterations 16
Cbc0038I Pass  11: suminf.    0.35036 (3) obj. -10.8526 iterations 5
Cbc0038I Pass  12: suminf.    0.77549 (3) obj. -10.8526 iterations 2
Cbc0038I Pass  13: suminf.    0.77549 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  14: suminf.    0.35036 (3) obj. -10.8526 iterations 3
Cbc0038I Pass  15: suminf.    1.55308 (7) obj. -10.8526 iterations 21
Cbc0038I Pass  16: suminf.    1.20032 (5) obj. -10.8526 iterations 4
Cbc0038I Pass  17: suminf.    1.33488 (5) obj. -10.8526 iterations 7
Cbc0038I Pass  18: suminf.    1.19915 (4) obj. -10.8526 iterations 1
Cbc0038I Pass  19: suminf.    1.04938 (4) obj. -10.8526 iterations 4
Cbc0038I Pass  20: suminf.    1.03555 (5) obj. -10.8526 iterations 1
Cbc0038I Pass  21: suminf.    0.92800 (5) obj. -10.8526 iterations 10
Cbc0038I Pass  22: suminf.    1.17739 (3) obj. -10.8526 iterations 5
Cbc0038I Pass  23: suminf.    1.01656 (4) obj. -10.8526 iterations 2
Cbc0038I Pass  24: suminf.    1.15367 (3) obj. -10.8526 iterations 4
Cbc0038I Pass  25: suminf.    1.15367 (3) obj. -10.8526 iterations 0
Cbc0038I Pass  26: suminf.    1.21669 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  27: suminf.    0.99911 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  28: suminf.    0.99911 (3) obj. -10.8526 iterations 0
Cbc0038I Pass  29: suminf.    1.15367 (3) obj. -10.8526 iterations 1
Cbc0038I Pass  30: suminf.    1.15367 (3) obj. -10.8526 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 51 columns, reduced to 83 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.07605 - took 0.09 seconds
Cbc0012I Integer solution of -7.07605 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 96 rows 51 columns, reduced to 70 rows 37 columns
Cbc0012I Integer solution of -12.34531 found by RINS after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 13 added rows had average density of 26.076923
Cbc0013I At root node, 13 cuts changed objective from -44.840514 to -36.293844 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6373 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1664 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0012I Integer solution of -13.52076 found by DiveCoefficient after 5892 iterations and 35 nodes (0.64 seconds)
Cbc0001I Search completed - best objective -13.52076000000001, took 6032 iterations and 42 nodes (0.65 seconds)
Cbc0032I Strong branching done 464 times (7048 iterations), fathomed 8 nodes and fixed 32 variables
Cbc0035I Maximum depth 6, 101 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-24) rows, 85 (-18) columns and 1172 (-407) elements
Clp1000I sum of infeasibilities 1.91663e-07 - average 2.36621e-09, 45 fixed columns
Coin0506I Presolve 36 (-45) rows, 40 (-45) columns and 146 (-1026) elements
Clp0006I 0  Obj -3.4997162 Dual inf 1.3762188 (40)
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 2.2736402 - largest nonzero change 2.9856983e-05 ( 0.00090247072%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 6.514302
Clp0000I Optimal - objective value 6.514302
Coin0511I After Postsolve, objective 6.514302, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 6.514302 Dual inf 22.015626 (35)
Clp0014I Perturbing problem by 0.001% of 4.5185177 - largest nonzero change 1.737495e-05 ( 0.001737495%) - largest zero change 2.6227362e-05
Clp0000I Optimal - objective value 60.129679
Clp0000I Optimal - objective value 60.129679
Clp0000I Optimal - objective value 60.129679
Coin0511I After Postsolve, objective 60.129679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.1296791 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 81 rows, 85 columns (85 integer (85 of which binary)) and 1174 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.430%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.54295
Cbc0038I Pass   1: suminf.    2.07233 (25) obj. -14.8665 iterations 18
Cbc0038I Pass   2: suminf.    2.07233 (25) obj. -14.8665 iterations 1
Cbc0038I Pass   3: suminf.    0.26257 (4) obj. 12.6086 iterations 21
Cbc0038I Solution found of 20.0793
Cbc0038I Rounding solution of 7.70979 is better than previous of 20.0793

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 85 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 7.70979 to -11.4614 (0.02 seconds)
Cbc0038I Round again with cutoff of -15.5322
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.18570 (28) obj. -15.5322 iterations 2
Cbc0038I Pass   5: suminf.    2.18075 (26) obj. -15.5322 iterations 2
Cbc0038I Pass   6: suminf.    1.97055 (17) obj. -15.5322 iterations 13
Cbc0038I Pass   7: suminf.    0.76676 (7) obj. -15.5322 iterations 23
Cbc0038I Pass   8: suminf.    0.75421 (7) obj. -15.5322 iterations 3
Cbc0038I Pass   9: suminf.    1.10182 (4) obj. -15.5322 iterations 14
Cbc0038I Pass  10: suminf.    1.08010 (4) obj. -15.5322 iterations 7
Cbc0038I Pass  11: suminf.    1.98487 (6) obj. -15.5322 iterations 15
Cbc0038I Pass  12: suminf.    1.35182 (3) obj. -15.5322 iterations 6
Cbc0038I Pass  13: suminf.    1.32727 (4) obj. -15.5322 iterations 6
Cbc0038I Pass  14: suminf.    1.42509 (5) obj. -15.5322 iterations 10
Cbc0038I Pass  15: suminf.    0.95895 (4) obj. -15.5322 iterations 15
Cbc0038I Pass  16: suminf.    0.89812 (4) obj. -15.5322 iterations 9
Cbc0038I Pass  17: suminf.    0.84944 (3) obj. -15.5322 iterations 3
Cbc0038I Pass  18: suminf.    0.72172 (3) obj. -15.5322 iterations 7
Cbc0038I Pass  19: suminf.    0.22344 (2) obj. -15.8378 iterations 5
Cbc0038I Pass  20: suminf.    0.29984 (2) obj. -15.5322 iterations 4
Cbc0038I Pass  21: suminf.    2.08592 (15) obj. -15.5322 iterations 26
Cbc0038I Pass  22: suminf.    2.01274 (12) obj. -15.5322 iterations 7
Cbc0038I Pass  23: suminf.    0.78926 (3) obj. -15.5322 iterations 25
Cbc0038I Pass  24: suminf.    0.52525 (3) obj. -15.5322 iterations 6
Cbc0038I Pass  25: suminf.    0.78926 (3) obj. -15.5322 iterations 6
Cbc0038I Pass  26: suminf.    2.54040 (16) obj. -15.5322 iterations 36
Cbc0038I Pass  27: suminf.    1.45345 (9) obj. -15.6569 iterations 13
Cbc0038I Pass  28: suminf.    1.25627 (4) obj. -15.5322 iterations 19
Cbc0038I Pass  29: suminf.    0.99036 (5) obj. -15.5322 iterations 8
Cbc0038I Pass  30: suminf.    1.12080 (7) obj. -15.5322 iterations 10
Cbc0038I Pass  31: suminf.    1.12080 (7) obj. -15.5322 iterations 0
Cbc0038I Pass  32: suminf.    1.82380 (6) obj. -15.5322 iterations 10
Cbc0038I Pass  33: suminf.    0.93720 (3) obj. -15.5322 iterations 8
Cbc0038I Rounding solution of -11.9479 is better than previous of -11.4614

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 85 columns, reduced to 46 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -11.9479 to -13.5208 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.8593
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.07933 (28) obj. -22.8593 iterations 0
Cbc0038I Pass  34: suminf.    3.07933 (28) obj. -22.8593 iterations 1
Cbc0038I Pass  35: suminf.    2.74156 (13) obj. -22.8593 iterations 36
Cbc0038I Pass  36: suminf.    2.74156 (13) obj. -22.8593 iterations 0
Cbc0038I Pass  37: suminf.    1.99412 (8) obj. -22.8593 iterations 18
Cbc0038I Pass  38: suminf.    1.63544 (7) obj. -22.8593 iterations 1
Cbc0038I Pass  39: suminf.    1.16306 (6) obj. -22.8593 iterations 9
Cbc0038I Pass  40: suminf.    0.99760 (6) obj. -22.8593 iterations 3
Cbc0038I Pass  41: suminf.    1.51078 (7) obj. -22.8593 iterations 18
Cbc0038I Pass  42: suminf.    1.51078 (7) obj. -22.8593 iterations 0
Cbc0038I Pass  43: suminf.    2.40831 (8) obj. -22.8593 iterations 12
Cbc0038I Pass  44: suminf.    1.51239 (6) obj. -22.8593 iterations 7
Cbc0038I Pass  45: suminf.    1.48161 (7) obj. -22.8593 iterations 5
Cbc0038I Pass  46: suminf.    2.41195 (8) obj. -22.8593 iterations 12
Cbc0038I Pass  47: suminf.    1.68342 (6) obj. -22.8593 iterations 6
Cbc0038I Pass  48: suminf.    2.12801 (7) obj. -22.8593 iterations 10
Cbc0038I Pass  49: suminf.    3.46675 (15) obj. -22.8593 iterations 18
Cbc0038I Pass  50: suminf.    2.28097 (12) obj. -22.8593 iterations 8
Cbc0038I Pass  51: suminf.    2.17591 (12) obj. -22.8593 iterations 1
Cbc0038I Pass  52: suminf.    2.47527 (10) obj. -22.8593 iterations 18
Cbc0038I Pass  53: suminf.    1.15994 (6) obj. -22.8593 iterations 7
Cbc0038I Pass  54: suminf.    0.98284 (5) obj. -23.2544 iterations 5
Cbc0038I Pass  55: suminf.    1.51853 (6) obj. -22.8593 iterations 7
Cbc0038I Pass  56: suminf.    1.24318 (6) obj. -22.8593 iterations 4
Cbc0038I Pass  57: suminf.    1.00388 (8) obj. -22.8593 iterations 13
Cbc0038I Pass  58: suminf.    0.65674 (4) obj. -22.8593 iterations 6
Cbc0038I Pass  59: suminf.    0.68784 (4) obj. -22.8593 iterations 6
Cbc0038I Pass  60: suminf.    0.67587 (4) obj. -22.8593 iterations 3
Cbc0038I Pass  61: suminf.    2.80777 (14) obj. -22.8593 iterations 15
Cbc0038I Pass  62: suminf.    1.97773 (9) obj. -24.9293 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 85 columns, reduced to 47 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -13.5208 - took 0.05 seconds
Cbc0012I Integer solution of -13.52076 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 81 rows 85 columns, reduced to 5 rows 6 columns
Cbc0031I 48 added rows had average density of 36.1875
Cbc0013I At root node, 48 cuts changed objective from -52.167914 to -18.026763 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8840 row cuts average 5.3 elements, 1 column cuts (1 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1054 row cuts average 76.4 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 884 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 338 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.672 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.52076 best solution, best possible -18.026763 (2.08 seconds)
Cbc0001I Search completed - best objective -13.52076000000001, took 4771 iterations and 26 nodes (2.37 seconds)
Cbc0032I Strong branching done 450 times (7120 iterations), fathomed 3 nodes and fixed 0 variables
Cbc0035I Maximum depth 9, 71 variables fixed on reduced cost
Total time (CPU seconds):       1.72   (Wallclock seconds):       2.38

