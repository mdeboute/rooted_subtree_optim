Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-30) rows, 21 (-12) columns and 106 (-77) elements
Clp1000I sum of infeasibilities 1.32915e-06 - average 3.79757e-08, 13 fixed columns
Coin0506I Presolve 13 (-22) rows, 8 (-13) columns and 36 (-70) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Coin0511I After Postsolve, objective 3161.2375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.6702414 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Coin0511I After Postsolve, objective 3161.2375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3161.237485 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.74843
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2702.88 iterations 9
Cbc0038I Solution found of -2702.88
Cbc0038I Relaxing continuous gives -2702.88
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -2702.88 to -2727.88 (0.01 seconds)
Cbc0038I Round again with cutoff of -2761.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04766 (1) obj. -2761.1 iterations 1
Cbc0038I Pass   3: suminf.    0.22222 (1) obj. -2974.33 iterations 1
Cbc0038I Pass   4: suminf.    0.79382 (3) obj. -2761.1 iterations 3
Cbc0038I Pass   5: suminf.    0.46617 (2) obj. -2761.1 iterations 2
Cbc0038I Pass   6: suminf.    0.17500 (1) obj. -2863.23 iterations 3
Cbc0038I Pass   7: suminf.    0.25951 (1) obj. -2761.1 iterations 1
Cbc0038I Pass   8: suminf.    1.08821 (4) obj. -2761.1 iterations 4
Cbc0038I Pass   9: suminf.    0.91222 (2) obj. -2761.1 iterations 2
Cbc0038I Pass  10: suminf.    1.15227 (4) obj. -2761.1 iterations 2
Cbc0038I Pass  11: suminf.    0.91222 (2) obj. -2761.1 iterations 2
Cbc0038I Pass  12: suminf.    1.08821 (4) obj. -2761.1 iterations 2
Cbc0038I Pass  13: suminf.    0.84714 (3) obj. -2761.1 iterations 7
Cbc0038I Pass  14: suminf.    0.81487 (3) obj. -2761.1 iterations 2
Cbc0038I Pass  15: suminf.    0.02749 (1) obj. -2761.1 iterations 6
Cbc0038I Pass  16: suminf.    0.02749 (1) obj. -2761.1 iterations 0
Cbc0038I Pass  17: suminf.    0.28421 (1) obj. -2788.14 iterations 3
Cbc0038I Pass  18: suminf.    0.26747 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  19: suminf.    0.43269 (2) obj. -2761.1 iterations 4
Cbc0038I Pass  20: suminf.    0.26747 (1) obj. -2761.1 iterations 4
Cbc0038I Pass  21: suminf.    0.77492 (3) obj. -2761.1 iterations 3
Cbc0038I Pass  22: suminf.    0.36433 (2) obj. -2761.1 iterations 7
Cbc0038I Pass  23: suminf.    0.25509 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  24: suminf.    0.27368 (1) obj. -2791.14 iterations 1
Cbc0038I Pass  25: suminf.    1.01188 (3) obj. -2761.1 iterations 10
Cbc0038I Pass  26: suminf.    0.37778 (1) obj. -2815.5 iterations 7
Cbc0038I Pass  27: suminf.    0.33324 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  28: suminf.    0.34961 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  29: suminf.    0.34961 (1) obj. -2761.1 iterations 0
Cbc0038I Pass  30: suminf.    0.38889 (1) obj. -2809.08 iterations 1
Cbc0038I Pass  31: suminf.    0.30303 (1) obj. -2833.59 iterations 7
Cbc0038I Rounding solution of -2747.88 is better than previous of -2727.88

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2747.88 to -2782.88 (0.02 seconds)
Cbc0038I Round again with cutoff of -2838.28
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.16764 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  32: suminf.    0.12632 (1) obj. -2901.93 iterations 4
Cbc0038I Pass  33: suminf.    0.08692 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  34: suminf.    1.71129 (6) obj. -2838.28 iterations 11
Cbc0038I Pass  35: suminf.    0.09168 (2) obj. -2838.28 iterations 7
Cbc0038I Pass  36: suminf.    0.52790 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  37: suminf.    1.09772 (4) obj. -2838.28 iterations 9
Cbc0038I Pass  38: suminf.    0.13684 (1) obj. -2877.67 iterations 6
Cbc0038I Pass  39: suminf.    0.16123 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  40: suminf.    0.52560 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  41: suminf.    0.49398 (2) obj. -2881.84 iterations 3
Cbc0038I Pass  42: suminf.    0.18126 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  43: suminf.    0.18126 (2) obj. -2838.28 iterations 0
Cbc0038I Pass  44: suminf.    0.61490 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  45: suminf.    0.13684 (1) obj. -2877.67 iterations 2
Cbc0038I Pass  46: suminf.    0.16123 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  47: suminf.    0.84302 (3) obj. -2838.28 iterations 4
Cbc0038I Pass  48: suminf.    1.30397 (4) obj. -2838.28 iterations 6
Cbc0038I Pass  49: suminf.    0.52790 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  50: suminf.    0.09168 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  51: suminf.    0.52790 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  52: suminf.    0.35198 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  53: suminf.    0.09168 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  54: suminf.    0.80963 (4) obj. -2838.28 iterations 6
Cbc0038I Pass  55: suminf.    1.18403 (5) obj. -2838.28 iterations 1
Cbc0038I Pass  56: suminf.    0.08608 (2) obj. -2838.28 iterations 6
Cbc0038I Pass  57: suminf.    0.07480 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  58: suminf.    0.77536 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  59: suminf.    0.07480 (1) obj. -2838.28 iterations 2
Cbc0038I Pass  60: suminf.    0.08764 (3) obj. -2838.28 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2782.88 - took 0.04 seconds
Cbc0012I Integer solution of -2782.88 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 21 columns, reduced to 17 rows 11 columns
Cbc0031I 4 added rows had average density of 9.5
Cbc0013I At root node, 4 cuts changed objective from -3059.7221 to -2791.6702 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 143 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 287 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 152 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.769 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2782.88 best solution, best possible -2791.6702 (1.44 seconds)
Cbc0001I Search completed - best objective -2782.88, took 884 iterations and 2 nodes (1.47 seconds)
Cbc0032I Strong branching done 12 times (29 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       1.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-19) rows, 50 (-12) columns and 405 (-243) elements
Clp1000I sum of infeasibilities 2.17162e-10 - average 4.82582e-12, 22 fixed columns
Coin0506I Presolve 28 (-17) rows, 28 (-22) columns and 117 (-288) elements
Clp0006I 0  Obj 3165.599 Dual inf 74.836269 (27)
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 3170.3386
Clp0000I Optimal - objective value 3170.3386
Coin0511I After Postsolve, objective 3170.3386, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3170.3386 Dual inf 22.99333 (1)
Clp0014I Perturbing problem by 0.001% of 1.7039629 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3170.3386
Clp0000I Optimal - objective value 3170.3386
Clp0000I Optimal - objective value 3170.3386
Coin0511I After Postsolve, objective 3170.3386, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3170.338644 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 45 columns (45 integer (45 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.082%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.38996
Cbc0038I Pass   1: suminf.    1.39398 (12) obj. -1500.69 iterations 18
Cbc0038I Pass   2: suminf.    1.39398 (12) obj. -1500.69 iterations 0
Cbc0038I Solution found of -1488.36
Cbc0038I Rounding solution of -1884.2 is better than previous of -1488.36

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 22 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -1884.2 to -2727.88 (0.02 seconds)
Cbc0038I Round again with cutoff of -2761.16
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.91768 (13) obj. -2761.16 iterations 2
Cbc0038I Pass   4: suminf.    1.91768 (13) obj. -2761.16 iterations 0
Cbc0038I Pass   5: suminf.    0.13333 (1) obj. -2859.75 iterations 19
Cbc0038I Pass   6: suminf.    0.05263 (1) obj. -2761.16 iterations 2
Cbc0038I Pass   7: suminf.    0.60144 (9) obj. -2761.16 iterations 12
Cbc0038I Pass   8: suminf.    0.21570 (2) obj. -2761.16 iterations 2
Cbc0038I Pass   9: suminf.    0.13333 (1) obj. -2846.75 iterations 2
Cbc0038I Pass  10: suminf.    0.06327 (1) obj. -2761.16 iterations 1
Cbc0038I Pass  11: suminf.    0.42978 (4) obj. -2761.16 iterations 10
Cbc0038I Pass  12: suminf.    0.42978 (4) obj. -2761.16 iterations 2
Cbc0038I Pass  13: suminf.    0.22222 (1) obj. -2947.33 iterations 4
Cbc0038I Pass  14: suminf.    0.06982 (1) obj. -2761.16 iterations 1
Cbc0038I Pass  15: suminf.    0.33333 (1) obj. -2826.16 iterations 7
Cbc0038I Pass  16: suminf.    0.08122 (3) obj. -2761.16 iterations 5
Cbc0038I Pass  17: suminf.    0.22222 (1) obj. -2946.33 iterations 3
Cbc0038I Pass  18: suminf.    0.07064 (1) obj. -2761.16 iterations 1
Cbc0038I Pass  19: suminf.    1.51139 (5) obj. -2761.16 iterations 11
Cbc0038I Pass  20: suminf.    0.11954 (3) obj. -2761.16 iterations 6
Cbc0038I Pass  21: suminf.    0.22222 (1) obj. -2961.33 iterations 3
Cbc0038I Pass  22: suminf.    0.05836 (1) obj. -2761.16 iterations 1
Cbc0038I Pass  23: suminf.    0.76734 (10) obj. -2849.68 iterations 16
Cbc0038I Pass  24: suminf.    0.14225 (6) obj. -2761.16 iterations 4
Cbc0038I Pass  25: suminf.    0.22222 (1) obj. -2961.33 iterations 6
Cbc0038I Pass  26: suminf.    0.05836 (1) obj. -2761.16 iterations 1
Cbc0038I Pass  27: suminf.    1.26544 (10) obj. -2761.16 iterations 17
Cbc0038I Pass  28: suminf.    0.82329 (4) obj. -2761.16 iterations 4
Cbc0038I Pass  29: suminf.    0.47880 (4) obj. -2761.16 iterations 8
Cbc0038I Pass  30: suminf.    0.22222 (1) obj. -2949.33 iterations 7
Cbc0038I Pass  31: suminf.    0.06818 (1) obj. -2761.16 iterations 1
Cbc0038I Pass  32: suminf.    0.55006 (6) obj. -2761.16 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -2727.88 to -2782.88 (0.04 seconds)
Cbc0038I Round again with cutoff of -2838.41
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.18586 (13) obj. -2838.41 iterations 7
Cbc0038I Pass  33: suminf.    2.18586 (13) obj. -2838.41 iterations 2
Cbc0038I Pass  34: suminf.    0.31319 (7) obj. -2838.41 iterations 19
Cbc0038I Pass  35: suminf.    0.25701 (6) obj. -2838.41 iterations 1
Cbc0038I Pass  36: suminf.    0.12632 (1) obj. -2893.93 iterations 6
Cbc0038I Pass  37: suminf.    0.09195 (1) obj. -2838.41 iterations 1
Cbc0038I Pass  38: suminf.    1.01758 (5) obj. -2838.41 iterations 5
Cbc0038I Pass  39: suminf.    0.12632 (1) obj. -2892.93 iterations 5
Cbc0038I Pass  40: suminf.    0.09257 (1) obj. -2838.41 iterations 1
Cbc0038I Pass  41: suminf.    2.01693 (11) obj. -2838.41 iterations 10
Cbc0038I Pass  42: suminf.    0.64293 (6) obj. -2838.41 iterations 5
Cbc0038I Pass  43: suminf.    0.12632 (1) obj. -2890.93 iterations 7
Cbc0038I Pass  44: suminf.    0.09380 (1) obj. -2838.41 iterations 1
Cbc0038I Pass  45: suminf.    0.53832 (5) obj. -2838.41 iterations 4
Cbc0038I Pass  46: suminf.    1.51395 (9) obj. -2868.14 iterations 7
Cbc0038I Pass  47: suminf.    1.51395 (9) obj. -2868.14 iterations 0
Cbc0038I Pass  48: suminf.    0.15805 (1) obj. -2838.41 iterations 12
Cbc0038I Pass  49: suminf.    0.04991 (2) obj. -3036.24 iterations 2
Cbc0038I Pass  50: suminf.    0.41503 (2) obj. -2838.41 iterations 1
Cbc0038I Pass  51: suminf.    0.41503 (2) obj. -2838.41 iterations 0
Cbc0038I Pass  52: suminf.    1.66694 (8) obj. -2838.41 iterations 9
Cbc0038I Pass  53: suminf.    0.87401 (8) obj. -2838.41 iterations 3
Cbc0038I Pass  54: suminf.    0.32915 (2) obj. -2887.19 iterations 9
Cbc0038I Pass  55: suminf.    0.09999 (1) obj. -2838.41 iterations 2
Cbc0038I Pass  56: suminf.    0.12632 (1) obj. -2880.93 iterations 1
Cbc0038I Pass  57: suminf.    0.89867 (4) obj. -2838.41 iterations 5
Cbc0038I Pass  58: suminf.    0.36119 (3) obj. -2838.41 iterations 3
Cbc0038I Pass  59: suminf.    0.12632 (1) obj. -2881.93 iterations 3
Cbc0038I Pass  60: suminf.    0.09938 (1) obj. -2838.41 iterations 1
Cbc0038I Pass  61: suminf.    1.16458 (4) obj. -2838.41 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2782.88 - took 0.03 seconds
Cbc0012I Integer solution of -2782.88 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 39 rows 45 columns, reduced to 22 rows 23 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 16 added rows had average density of 4.625
Cbc0013I At root node, 16 cuts changed objective from -3059.7855 to -2803.3009 in 37 passes
Cbc0014I Cut generator 0 (Probing) - 348 row cuts average 2.9 elements, 15 column cuts (15 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 202 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.272 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2782.88, took 417 iterations and 0 nodes (0.58 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-30) rows, 21 (-12) columns and 106 (-77) elements
Clp1000I sum of infeasibilities 1.32915e-06 - average 3.79757e-08, 13 fixed columns
Coin0506I Presolve 13 (-22) rows, 8 (-13) columns and 36 (-70) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Coin0511I After Postsolve, objective 3161.2375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.6702414 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Clp0000I Optimal - objective value 3161.2375
Coin0511I After Postsolve, objective 3161.2375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3161.237485 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.74843
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2702.88 iterations 9
Cbc0038I Solution found of -2702.88
Cbc0038I Relaxing continuous gives -2702.88
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -2702.88 to -2727.88 (0.01 seconds)
Cbc0038I Round again with cutoff of -2761.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04766 (1) obj. -2761.1 iterations 1
Cbc0038I Pass   3: suminf.    0.22222 (1) obj. -2974.33 iterations 1
Cbc0038I Pass   4: suminf.    0.79382 (3) obj. -2761.1 iterations 3
Cbc0038I Pass   5: suminf.    0.46617 (2) obj. -2761.1 iterations 2
Cbc0038I Pass   6: suminf.    0.17500 (1) obj. -2863.23 iterations 3
Cbc0038I Pass   7: suminf.    0.25951 (1) obj. -2761.1 iterations 1
Cbc0038I Pass   8: suminf.    1.08821 (4) obj. -2761.1 iterations 4
Cbc0038I Pass   9: suminf.    0.91222 (2) obj. -2761.1 iterations 2
Cbc0038I Pass  10: suminf.    1.15227 (4) obj. -2761.1 iterations 2
Cbc0038I Pass  11: suminf.    0.91222 (2) obj. -2761.1 iterations 2
Cbc0038I Pass  12: suminf.    1.08821 (4) obj. -2761.1 iterations 2
Cbc0038I Pass  13: suminf.    0.84714 (3) obj. -2761.1 iterations 7
Cbc0038I Pass  14: suminf.    0.81487 (3) obj. -2761.1 iterations 2
Cbc0038I Pass  15: suminf.    0.02749 (1) obj. -2761.1 iterations 6
Cbc0038I Pass  16: suminf.    0.02749 (1) obj. -2761.1 iterations 0
Cbc0038I Pass  17: suminf.    0.28421 (1) obj. -2788.14 iterations 3
Cbc0038I Pass  18: suminf.    0.26747 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  19: suminf.    0.43269 (2) obj. -2761.1 iterations 4
Cbc0038I Pass  20: suminf.    0.26747 (1) obj. -2761.1 iterations 4
Cbc0038I Pass  21: suminf.    0.77492 (3) obj. -2761.1 iterations 3
Cbc0038I Pass  22: suminf.    0.36433 (2) obj. -2761.1 iterations 7
Cbc0038I Pass  23: suminf.    0.25509 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  24: suminf.    0.27368 (1) obj. -2791.14 iterations 1
Cbc0038I Pass  25: suminf.    1.01188 (3) obj. -2761.1 iterations 10
Cbc0038I Pass  26: suminf.    0.37778 (1) obj. -2815.5 iterations 7
Cbc0038I Pass  27: suminf.    0.33324 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  28: suminf.    0.34961 (1) obj. -2761.1 iterations 1
Cbc0038I Pass  29: suminf.    0.34961 (1) obj. -2761.1 iterations 0
Cbc0038I Pass  30: suminf.    0.38889 (1) obj. -2809.08 iterations 1
Cbc0038I Pass  31: suminf.    0.30303 (1) obj. -2833.59 iterations 7
Cbc0038I Rounding solution of -2747.88 is better than previous of -2727.88

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -2747.88 to -2782.88 (0.02 seconds)
Cbc0038I Round again with cutoff of -2838.28
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.16764 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  32: suminf.    0.12632 (1) obj. -2901.93 iterations 4
Cbc0038I Pass  33: suminf.    0.08692 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  34: suminf.    1.71129 (6) obj. -2838.28 iterations 11
Cbc0038I Pass  35: suminf.    0.09168 (2) obj. -2838.28 iterations 7
Cbc0038I Pass  36: suminf.    0.52790 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  37: suminf.    1.09772 (4) obj. -2838.28 iterations 9
Cbc0038I Pass  38: suminf.    0.13684 (1) obj. -2877.67 iterations 6
Cbc0038I Pass  39: suminf.    0.16123 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  40: suminf.    0.52560 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  41: suminf.    0.49398 (2) obj. -2881.84 iterations 3
Cbc0038I Pass  42: suminf.    0.18126 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  43: suminf.    0.18126 (2) obj. -2838.28 iterations 0
Cbc0038I Pass  44: suminf.    0.61490 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  45: suminf.    0.13684 (1) obj. -2877.67 iterations 2
Cbc0038I Pass  46: suminf.    0.16123 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  47: suminf.    0.84302 (3) obj. -2838.28 iterations 4
Cbc0038I Pass  48: suminf.    1.30397 (4) obj. -2838.28 iterations 6
Cbc0038I Pass  49: suminf.    0.52790 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  50: suminf.    0.09168 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  51: suminf.    0.52790 (2) obj. -2838.28 iterations 2
Cbc0038I Pass  52: suminf.    0.35198 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  53: suminf.    0.09168 (2) obj. -2838.28 iterations 5
Cbc0038I Pass  54: suminf.    0.80963 (4) obj. -2838.28 iterations 6
Cbc0038I Pass  55: suminf.    1.18403 (5) obj. -2838.28 iterations 1
Cbc0038I Pass  56: suminf.    0.08608 (2) obj. -2838.28 iterations 6
Cbc0038I Pass  57: suminf.    0.07480 (1) obj. -2838.28 iterations 1
Cbc0038I Pass  58: suminf.    0.77536 (2) obj. -2838.28 iterations 3
Cbc0038I Pass  59: suminf.    0.07480 (1) obj. -2838.28 iterations 2
Cbc0038I Pass  60: suminf.    0.08764 (3) obj. -2838.28 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2782.88 - took 0.02 seconds
Cbc0012I Integer solution of -2782.88 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 21 columns, reduced to 17 rows 11 columns
Cbc0031I 4 added rows had average density of 9.5
Cbc0013I At root node, 4 cuts changed objective from -3059.7221 to -2791.6702 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 143 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 287 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 152 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.780 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2782.88 best solution, best possible -2791.6702 (1.46 seconds)
Cbc0001I Search completed - best objective -2782.88, took 884 iterations and 2 nodes (1.48 seconds)
Cbc0032I Strong branching done 12 times (29 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 45 (-18) columns and 307 (-342) elements
Clp1000I sum of infeasibilities 1.27547e-07 - average 3.18868e-09, 19 fixed columns
Coin0506I Presolve 26 (-14) rows, 26 (-19) columns and 91 (-216) elements
Clp0006I 0  Obj 3165.5475 Dual inf 59.540737 (25)
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 3170.3386
Clp0000I Optimal - objective value 3170.3386
Coin0511I After Postsolve, objective 3170.3386, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3170.3386 Dual inf 23.695503 (1)
Clp0014I Perturbing problem by 0.001% of 1.6924746 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3170.3386
Clp0000I Optimal - objective value 3170.3386
Clp0000I Optimal - objective value 3170.3386
Coin0511I After Postsolve, objective 3170.3386, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3170.338644 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 45 columns (45 integer (45 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.082%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 8.56337
Cbc0038I Pass   1: suminf.    0.78651 (4) obj. -1492.13 iterations 22
Cbc0038I Pass   2: suminf.    0.78651 (4) obj. -1492.13 iterations 0
Cbc0038I Solution found of -1487.36
Cbc0038I Rounding solution of -1884.2 is better than previous of -1487.36

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -1884.2 to -2702.88 (0.02 seconds)
Cbc0038I Round again with cutoff of -2738.42
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.04931 (5) obj. -2738.42 iterations 6
Cbc0038I Pass   4: suminf.    1.04931 (5) obj. -2738.42 iterations 1
Cbc0038I Pass   5: suminf.    0.13333 (1) obj. -2858.75 iterations 7
Cbc0038I Pass   6: suminf.    0.03482 (1) obj. -2738.42 iterations 2
Cbc0038I Pass   7: suminf.    0.56118 (3) obj. -2738.42 iterations 7
Cbc0038I Pass   8: suminf.    0.29766 (2) obj. -2738.42 iterations 1
Cbc0038I Pass   9: suminf.    0.13333 (1) obj. -2845.75 iterations 4
Cbc0038I Pass  10: suminf.    0.04546 (1) obj. -2738.42 iterations 2
Cbc0038I Pass  11: suminf.    0.48468 (4) obj. -2738.42 iterations 11
Cbc0038I Pass  12: suminf.    0.48468 (4) obj. -2738.42 iterations 2
Cbc0038I Pass  13: suminf.    0.22222 (1) obj. -2946.33 iterations 4
Cbc0038I Pass  14: suminf.    0.05201 (1) obj. -2738.42 iterations 2
Cbc0038I Pass  15: suminf.    0.33333 (1) obj. -2825.16 iterations 7
Cbc0038I Pass  16: suminf.    0.06329 (3) obj. -2738.42 iterations 2
Cbc0038I Pass  17: suminf.    0.22222 (1) obj. -2945.33 iterations 3
Cbc0038I Pass  18: suminf.    0.05283 (1) obj. -2738.42 iterations 2
Cbc0038I Pass  19: suminf.    1.32964 (5) obj. -2738.42 iterations 9
Cbc0038I Pass  20: suminf.    1.32964 (5) obj. -2738.42 iterations 0
Cbc0038I Pass  21: suminf.    0.22222 (1) obj. -2960.33 iterations 7
Cbc0038I Pass  22: suminf.    0.04055 (1) obj. -2738.42 iterations 2
Cbc0038I Pass  23: suminf.    0.68645 (9) obj. -2738.42 iterations 15
Cbc0038I Pass  24: suminf.    0.22387 (6) obj. -2738.42 iterations 2
Cbc0038I Pass  25: suminf.    0.22222 (1) obj. -2960.33 iterations 6
Cbc0038I Pass  26: suminf.    0.04055 (1) obj. -2738.42 iterations 1
Cbc0038I Pass  27: suminf.    1.66418 (11) obj. -2738.42 iterations 16
Cbc0038I Pass  28: suminf.    0.79360 (4) obj. -2738.42 iterations 4
Cbc0038I Pass  29: suminf.    0.42231 (4) obj. -2738.42 iterations 6
Cbc0038I Pass  30: suminf.    0.22222 (1) obj. -2950.33 iterations 4
Cbc0038I Pass  31: suminf.    0.04874 (1) obj. -2738.42 iterations 1
Cbc0038I Pass  32: suminf.    0.44246 (5) obj. -2738.42 iterations 10
Cbc0038I Rounding solution of -2725.88 is better than previous of -2702.88

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 26 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -2725.88 to -2747.88 (0.03 seconds)
Cbc0038I Round again with cutoff of -2809.91
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.12481 (5) obj. -2809.91 iterations 0
Cbc0038I Pass  33: suminf.    1.12481 (5) obj. -2809.91 iterations 1
Cbc0038I Pass  34: suminf.    0.13333 (1) obj. -2858.75 iterations 7
Cbc0038I Pass  35: suminf.    0.09335 (1) obj. -2809.91 iterations 2
Cbc0038I Pass  36: suminf.    0.87506 (4) obj. -2809.91 iterations 4
Cbc0038I Pass  37: suminf.    0.69400 (3) obj. -2809.91 iterations 2
Cbc0038I Pass  38: suminf.    0.13333 (1) obj. -2856.75 iterations 5
Cbc0038I Pass  39: suminf.    0.09499 (1) obj. -2809.91 iterations 2
Cbc0038I Pass  40: suminf.    0.62387 (4) obj. -2809.91 iterations 11
Cbc0038I Pass  41: suminf.    0.44294 (4) obj. -2809.91 iterations 4
Cbc0038I Pass  42: suminf.    0.13333 (1) obj. -2847.75 iterations 4
Cbc0038I Pass  43: suminf.    0.10236 (1) obj. -2809.91 iterations 1
Cbc0038I Pass  44: suminf.    0.85298 (6) obj. -2809.91 iterations 5
Cbc0038I Pass  45: suminf.    0.71982 (3) obj. -2809.91 iterations 2
Cbc0038I Pass  46: suminf.    0.13333 (1) obj. -2845.75 iterations 3
Cbc0038I Pass  47: suminf.    0.10399 (1) obj. -2809.91 iterations 1
Cbc0038I Pass  48: suminf.    1.13182 (7) obj. -2809.91 iterations 10
Cbc0038I Pass  49: suminf.    0.93750 (6) obj. -2976.98 iterations 3
Cbc0038I Pass  50: suminf.    0.19595 (1) obj. -2809.91 iterations 7
Cbc0038I Pass  51: suminf.    0.06250 (1) obj. -2971.19 iterations 2
Cbc0038I Pass  52: suminf.    1.81638 (8) obj. -2864.5 iterations 9
Cbc0038I Pass  53: suminf.    1.81638 (8) obj. -2864.5 iterations 0
Cbc0038I Pass  54: suminf.    0.20422 (1) obj. -2809.91 iterations 9
Cbc0038I Pass  55: suminf.    0.16370 (2) obj. -2860.12 iterations 4
Cbc0038I Pass  56: suminf.    1.21361 (3) obj. -2809.91 iterations 3
Cbc0038I Pass  57: suminf.    0.61895 (2) obj. -2873.15 iterations 2
Cbc0038I Pass  58: suminf.    0.13684 (1) obj. -2872.67 iterations 1
Cbc0038I Pass  59: suminf.    0.17569 (1) obj. -2809.91 iterations 1
Cbc0038I Pass  60: suminf.    0.77368 (3) obj. -2870.31 iterations 4
Cbc0038I Pass  61: suminf.    0.13684 (1) obj. -2869.67 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 45 columns, reduced to 21 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2747.88 - took 0.02 seconds
Cbc0012I Integer solution of -2747.88 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 45 columns, reduced to 14 rows 16 columns
Cbc0012I Integer solution of -2782.88 found by DiveCoefficient after 147 iterations and 0 nodes (0.18 seconds)
Cbc0031I 19 added rows had average density of 4.8421053
Cbc0013I At root node, 19 cuts changed objective from -3057.39 to -2782.8806 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 228 row cuts average 4.1 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 84 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 40 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2782.88, took 147 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.19

