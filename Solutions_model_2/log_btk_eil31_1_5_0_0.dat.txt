Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 9.79607e-06 - average 1.81409e-07, 3 fixed columns
Coin0506I Presolve 48 (-6) rows, 27 (-3) columns and 143 (-18) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Coin0511I After Postsolve, objective 82.048814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Coin0511I After Postsolve, objective 82.048814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.04881436 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.8738
Cbc0038I Solution found of 2.9822
Cbc0038I Relaxing continuous gives -3
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -3 to -48.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.3569
Cbc0038I Pass   1: suminf.    0.35248 (3) obj. -51.3569 iterations 19
Cbc0038I Pass   2: suminf.    0.33531 (4) obj. -51.3569 iterations 1
Cbc0038I Pass   3: suminf.    0.65436 (2) obj. -64.2121 iterations 10
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -57.4668 iterations 1
Cbc0038I Pass   5: suminf.    0.46795 (1) obj. -51.3569 iterations 1
Cbc0038I Pass   6: suminf.    0.66547 (3) obj. -51.3569 iterations 6
Cbc0038I Pass   7: suminf.    0.66547 (3) obj. -51.3569 iterations 0
Cbc0038I Pass   8: suminf.    0.65011 (2) obj. -51.3569 iterations 1
Cbc0038I Pass   9: suminf.    0.46795 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  10: suminf.    0.49593 (1) obj. -53.1145 iterations 1
Cbc0038I Pass  11: suminf.    0.95431 (3) obj. -51.3569 iterations 3
Cbc0038I Pass  12: suminf.    0.85645 (5) obj. -51.3569 iterations 4
Cbc0038I Pass  13: suminf.    0.62814 (4) obj. -51.3569 iterations 4
Cbc0038I Pass  14: suminf.    1.59522 (4) obj. -51.3569 iterations 8
Cbc0038I Pass  15: suminf.    0.91322 (3) obj. -51.3569 iterations 4
Cbc0038I Pass  16: suminf.    0.32315 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  17: suminf.    0.27642 (1) obj. -53.6308 iterations 1
Cbc0038I Pass  18: suminf.    2.12421 (7) obj. -51.3569 iterations 7
Cbc0038I Pass  19: suminf.    0.89689 (4) obj. -51.3569 iterations 6
Cbc0038I Pass  20: suminf.    0.41219 (1) obj. -51.3569 iterations 5
Cbc0038I Pass  21: suminf.    0.35772 (1) obj. -54.0075 iterations 2
Cbc0038I Pass  22: suminf.    0.41219 (1) obj. -51.3569 iterations 1
Cbc0038I Pass  23: suminf.    1.31847 (6) obj. -51.3569 iterations 8
Cbc0038I Pass  24: suminf.    0.37576 (3) obj. -51.3569 iterations 7
Cbc0038I Pass  25: suminf.    0.52068 (2) obj. -60.7903 iterations 5
Cbc0038I Pass  26: suminf.    0.24877 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  27: suminf.    0.31707 (1) obj. -54.6809 iterations 1
Cbc0038I Pass  28: suminf.    0.92453 (3) obj. -51.3569 iterations 4
Cbc0038I Pass  29: suminf.    0.49192 (1) obj. -51.3569 iterations 6
Cbc0038I Pass  30: suminf.    0.31707 (1) obj. -60.6525 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -48.6667 - took 0.04 seconds
Cbc0012I Integer solution of -48.6667 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 20 rows 13 columns
Cbc0031I 7 added rows had average density of 20.714286
Cbc0013I At root node, 7 cuts changed objective from -75.568161 to -62.859263 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 764 row cuts average 3.8 elements, 4 column cuts (4 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 561 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -48.66669999999999, took 1880 iterations and 16 nodes (0.15 seconds)
Cbc0032I Strong branching done 150 times (1235 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-18) rows, 50 (-12) columns and 413 (-235) elements
Clp1000I sum of infeasibilities 5.01124e-08 - average 1.0894e-09, 6 fixed columns
Coin0506I Presolve 40 (-6) rows, 44 (-6) columns and 315 (-98) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.2659699 - largest nonzero change 0 ( 0%) - largest zero change 2.9534651e-05
Clp0000I Optimal - objective value 89.984676
Clp0000I Optimal - objective value 89.984676
Coin0511I After Postsolve, objective 89.984676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.984676
Clp0000I Optimal - objective value 89.984676
Clp0000I Optimal - objective value 89.984676
Coin0511I After Postsolve, objective 89.984676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.98467583 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.008%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 2.40275
Cbc0038I Pass   1: suminf.    0.40279 (5) obj. -54.938 iterations 7
Cbc0038I Pass   2: suminf.    0.40279 (5) obj. -54.938 iterations 0
Cbc0038I Solution found of -10.6667
Cbc0038I Rounding solution of -23.0001 is better than previous of -10.6667

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -23.0001 to -42.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.7417
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.40279 (5) obj. -54.938 iterations 0
Cbc0038I Pass   4: suminf.    0.40279 (5) obj. -54.938 iterations 0
Cbc0038I Pass   5: suminf.    0.27928 (1) obj. -45.7417 iterations 13
Cbc0038I Pass   6: suminf.    0.22764 (1) obj. -48.2548 iterations 1
Cbc0038I Pass   7: suminf.    0.86603 (5) obj. -45.7417 iterations 9
Cbc0038I Pass   8: suminf.    0.69091 (4) obj. -45.7417 iterations 3
Cbc0038I Pass   9: suminf.    0.37654 (1) obj. -45.7417 iterations 5
Cbc0038I Pass  10: suminf.    0.34615 (1) obj. -59.2372 iterations 1
Cbc0038I Pass  11: suminf.    1.51216 (9) obj. -45.7417 iterations 13
Cbc0038I Pass  12: suminf.    1.04769 (8) obj. -45.7417 iterations 2
Cbc0038I Pass  13: suminf.    1.37023 (4) obj. -45.7417 iterations 9
Cbc0038I Pass  14: suminf.    0.58305 (2) obj. -45.7417 iterations 2
Cbc0038I Pass  15: suminf.    0.53995 (2) obj. -46.6298 iterations 2
Cbc0038I Pass  16: suminf.    0.58305 (2) obj. -45.7417 iterations 2
Cbc0038I Pass  17: suminf.    0.93313 (7) obj. -46.9447 iterations 9
Cbc0038I Pass  18: suminf.    0.93313 (7) obj. -46.9447 iterations 0
Cbc0038I Pass  19: suminf.    0.73432 (3) obj. -45.7417 iterations 10
Cbc0038I Pass  20: suminf.    0.66488 (3) obj. -45.7417 iterations 3
Cbc0038I Pass  21: suminf.    0.68581 (4) obj. -45.7417 iterations 4
Cbc0038I Pass  22: suminf.    0.68581 (4) obj. -45.7417 iterations 0
Cbc0038I Pass  23: suminf.    0.28130 (2) obj. -45.7417 iterations 3
Cbc0038I Pass  24: suminf.    0.26182 (1) obj. -45.7417 iterations 1
Cbc0038I Pass  25: suminf.    0.26829 (1) obj. -46.0569 iterations 1
Cbc0038I Pass  26: suminf.    0.90331 (6) obj. -45.7417 iterations 10
Cbc0038I Pass  27: suminf.    0.40791 (4) obj. -45.7417 iterations 4
Cbc0038I Pass  28: suminf.    0.26675 (2) obj. -45.7417 iterations 3
Cbc0038I Pass  29: suminf.    0.23137 (2) obj. -45.7417 iterations 1
Cbc0038I Pass  30: suminf.    1.28065 (8) obj. -45.7417 iterations 18
Cbc0038I Pass  31: suminf.    0.74622 (6) obj. -45.7417 iterations 6
Cbc0038I Pass  32: suminf.    0.66902 (2) obj. -45.7417 iterations 7
Cbc0038I Rounding solution of -48.6667 is better than previous of -42.6667

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -53.6166
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.40279 (5) obj. -54.938 iterations 0
Cbc0038I Pass  33: suminf.    0.40279 (5) obj. -54.938 iterations 0
Cbc0038I Pass  34: suminf.    0.52938 (3) obj. -53.6166 iterations 6
Cbc0038I Pass  35: suminf.    0.52938 (3) obj. -53.6166 iterations 0
Cbc0038I Pass  36: suminf.    0.48633 (2) obj. -53.6166 iterations 2
Cbc0038I Pass  37: suminf.    0.49019 (2) obj. -53.6166 iterations 1
Cbc0038I Pass  38: suminf.    1.69275 (5) obj. -53.6166 iterations 6
Cbc0038I Pass  39: suminf.    0.73665 (3) obj. -54.6132 iterations 3
Cbc0038I Pass  40: suminf.    0.66874 (2) obj. -53.6166 iterations 2
Cbc0038I Pass  41: suminf.    0.66522 (2) obj. -53.6847 iterations 1
Cbc0038I Pass  42: suminf.    0.95682 (4) obj. -53.6166 iterations 4
Cbc0038I Pass  43: suminf.    0.65658 (5) obj. -53.6166 iterations 2
Cbc0038I Pass  44: suminf.    1.02347 (3) obj. -53.6166 iterations 9
Cbc0038I Pass  45: suminf.    1.02347 (3) obj. -53.6166 iterations 0
Cbc0038I Pass  46: suminf.    0.61370 (2) obj. -53.6166 iterations 2
Cbc0038I Pass  47: suminf.    0.65527 (2) obj. -53.6166 iterations 1
Cbc0038I Pass  48: suminf.    1.74995 (10) obj. -53.6166 iterations 12
Cbc0038I Pass  49: suminf.    1.74408 (9) obj. -53.6166 iterations 2
Cbc0038I Pass  50: suminf.    1.60946 (7) obj. -53.6166 iterations 16
Cbc0038I Pass  51: suminf.    1.38545 (5) obj. -53.6166 iterations 2
Cbc0038I Pass  52: suminf.    1.50027 (6) obj. -53.6166 iterations 3
Cbc0038I Pass  53: suminf.    1.34747 (5) obj. -53.6166 iterations 4
Cbc0038I Pass  54: suminf.    1.38545 (5) obj. -53.6166 iterations 5
Cbc0038I Pass  55: suminf.    2.02514 (6) obj. -53.6166 iterations 9
Cbc0038I Pass  56: suminf.    1.97982 (6) obj. -53.6166 iterations 4
Cbc0038I Pass  57: suminf.    0.73661 (3) obj. -53.6166 iterations 7
Cbc0038I Pass  58: suminf.    0.53113 (2) obj. -53.6166 iterations 2
Cbc0038I Pass  59: suminf.    0.67291 (2) obj. -53.6166 iterations 2
Cbc0038I Pass  60: suminf.    0.63248 (2) obj. -53.6166 iterations 1
Cbc0038I Pass  61: suminf.    1.95860 (8) obj. -53.6166 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.6667 - took 0.02 seconds
Cbc0012I Integer solution of -48.6667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 13 rows 14 columns
Cbc0031I 22 added rows had average density of 12.454545
Cbc0013I At root node, 22 cuts changed objective from -73.416007 to -57.568313 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1092 row cuts average 4.1 elements, 8 column cuts (8 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 620 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 92 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 33 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 74 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 126 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 122 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.751 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.6667 best solution, best possible -57.568313 (1.54 seconds)
Cbc0010I After 5 nodes, 6 on tree, -48.6667 best solution, best possible -57.568313 (2.35 seconds)
Cbc0001I Search completed - best objective -48.66669999999999, took 2727 iterations and 16 nodes (2.58 seconds)
Cbc0032I Strong branching done 248 times (2636 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 6, 7 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 9.79607e-06 - average 1.81409e-07, 3 fixed columns
Coin0506I Presolve 48 (-6) rows, 27 (-3) columns and 143 (-18) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Coin0511I After Postsolve, objective 82.048814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Clp0000I Optimal - objective value 82.048814
Coin0511I After Postsolve, objective 82.048814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.04881436 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.8738
Cbc0038I Solution found of 2.9822
Cbc0038I Relaxing continuous gives -3
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -3 to -48.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.3569
Cbc0038I Pass   1: suminf.    0.35248 (3) obj. -51.3569 iterations 19
Cbc0038I Pass   2: suminf.    0.33531 (4) obj. -51.3569 iterations 1
Cbc0038I Pass   3: suminf.    0.65436 (2) obj. -64.2121 iterations 10
Cbc0038I Pass   4: suminf.    0.40650 (1) obj. -57.4668 iterations 1
Cbc0038I Pass   5: suminf.    0.46795 (1) obj. -51.3569 iterations 1
Cbc0038I Pass   6: suminf.    0.66547 (3) obj. -51.3569 iterations 6
Cbc0038I Pass   7: suminf.    0.66547 (3) obj. -51.3569 iterations 0
Cbc0038I Pass   8: suminf.    0.65011 (2) obj. -51.3569 iterations 1
Cbc0038I Pass   9: suminf.    0.46795 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  10: suminf.    0.49593 (1) obj. -53.1145 iterations 1
Cbc0038I Pass  11: suminf.    0.95431 (3) obj. -51.3569 iterations 3
Cbc0038I Pass  12: suminf.    0.85645 (5) obj. -51.3569 iterations 4
Cbc0038I Pass  13: suminf.    0.62814 (4) obj. -51.3569 iterations 4
Cbc0038I Pass  14: suminf.    1.59522 (4) obj. -51.3569 iterations 8
Cbc0038I Pass  15: suminf.    0.91322 (3) obj. -51.3569 iterations 4
Cbc0038I Pass  16: suminf.    0.32315 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  17: suminf.    0.27642 (1) obj. -53.6308 iterations 1
Cbc0038I Pass  18: suminf.    2.12421 (7) obj. -51.3569 iterations 7
Cbc0038I Pass  19: suminf.    0.89689 (4) obj. -51.3569 iterations 6
Cbc0038I Pass  20: suminf.    0.41219 (1) obj. -51.3569 iterations 5
Cbc0038I Pass  21: suminf.    0.35772 (1) obj. -54.0075 iterations 2
Cbc0038I Pass  22: suminf.    0.41219 (1) obj. -51.3569 iterations 1
Cbc0038I Pass  23: suminf.    1.31847 (6) obj. -51.3569 iterations 8
Cbc0038I Pass  24: suminf.    0.37576 (3) obj. -51.3569 iterations 7
Cbc0038I Pass  25: suminf.    0.52068 (2) obj. -60.7903 iterations 5
Cbc0038I Pass  26: suminf.    0.24877 (1) obj. -51.3569 iterations 2
Cbc0038I Pass  27: suminf.    0.31707 (1) obj. -54.6809 iterations 1
Cbc0038I Pass  28: suminf.    0.92453 (3) obj. -51.3569 iterations 4
Cbc0038I Pass  29: suminf.    0.49192 (1) obj. -51.3569 iterations 6
Cbc0038I Pass  30: suminf.    0.31707 (1) obj. -60.6525 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.6667 - took 0.02 seconds
Cbc0012I Integer solution of -48.6667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 20 rows 13 columns
Cbc0031I 7 added rows had average density of 20.714286
Cbc0013I At root node, 7 cuts changed objective from -75.568161 to -62.859263 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 764 row cuts average 3.8 elements, 4 column cuts (4 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 561 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -48.66669999999999, took 1880 iterations and 16 nodes (0.19 seconds)
Cbc0032I Strong branching done 150 times (1235 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 49 (-14) columns and 402 (-247) elements
Clp1000I sum of infeasibilities 6.68171e-08 - average 1.48482e-09, 26 fixed columns
Coin0506I Presolve 19 (-26) rows, 23 (-26) columns and 79 (-323) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 1.8779349 - largest nonzero change 0 ( 0%) - largest zero change 2.8801972e-05
Clp0000I Optimal - objective value 51.350383
Clp0000I Optimal - objective value 51.350383
Coin0511I After Postsolve, objective 51.350383, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1775759 - largest nonzero change 0 ( 0%) - largest zero change 2.8172357e-05
Clp0000I Optimal - objective value 89.984676
Clp0000I Optimal - objective value 89.984676
Clp0000I Optimal - objective value 89.984676
Coin0511I After Postsolve, objective 89.984676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.98467583 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.008%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 1.85336
Cbc0038I Pass   1: suminf.    0.40279 (5) obj. -54.938 iterations 7
Cbc0038I Pass   2: suminf.    0.40279 (5) obj. -54.938 iterations 1
Cbc0038I Solution found of -10.6667
Cbc0038I Rounding solution of -23.0001 is better than previous of -10.6667

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -23.0001 to -42.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.8494
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.40279 (5) obj. -54.938 iterations 0
Cbc0038I Pass   4: suminf.    0.40279 (5) obj. -54.938 iterations 1
Cbc0038I Pass   5: suminf.    0.27707 (1) obj. -45.8494 iterations 13
Cbc0038I Pass   6: suminf.    0.22764 (1) obj. -48.2548 iterations 1
Cbc0038I Pass   7: suminf.    0.86943 (5) obj. -45.8494 iterations 10
Cbc0038I Pass   8: suminf.    0.69754 (4) obj. -45.8494 iterations 3
Cbc0038I Pass   9: suminf.    0.37875 (1) obj. -45.8494 iterations 8
Cbc0038I Pass  10: suminf.    0.32000 (1) obj. -60.5101 iterations 1
Cbc0038I Pass  11: suminf.    1.50421 (9) obj. -45.8494 iterations 12
Cbc0038I Pass  12: suminf.    1.05074 (8) obj. -45.8494 iterations 2
Cbc0038I Pass  13: suminf.    1.34448 (4) obj. -45.8494 iterations 9
Cbc0038I Pass  14: suminf.    0.57933 (2) obj. -45.8494 iterations 1
Cbc0038I Pass  15: suminf.    0.52635 (2) obj. -47.3852 iterations 1
Cbc0038I Pass  16: suminf.    0.57933 (2) obj. -45.8494 iterations 1
Cbc0038I Pass  17: suminf.    1.08313 (7) obj. -46.4947 iterations 8
Cbc0038I Pass  18: suminf.    1.08313 (7) obj. -46.4947 iterations 0
Cbc0038I Pass  19: suminf.    0.72345 (5) obj. -45.8494 iterations 10
Cbc0038I Pass  20: suminf.    0.72345 (5) obj. -45.8494 iterations 2
Cbc0038I Pass  21: suminf.    0.27686 (2) obj. -45.8494 iterations 3
Cbc0038I Pass  22: suminf.    0.26403 (1) obj. -45.8494 iterations 2
Cbc0038I Pass  23: suminf.    0.26829 (1) obj. -46.0569 iterations 1
Cbc0038I Pass  24: suminf.    0.72730 (4) obj. -45.8494 iterations 11
Cbc0038I Pass  25: suminf.    0.72730 (4) obj. -45.8494 iterations 2
Cbc0038I Pass  26: suminf.    0.30932 (2) obj. -45.8494 iterations 3
Cbc0038I Pass  27: suminf.    0.30932 (2) obj. -45.8494 iterations 0
Cbc0038I Pass  28: suminf.    0.61565 (3) obj. -45.8494 iterations 2
Cbc0038I Pass  29: suminf.    0.61480 (3) obj. -45.8494 iterations 1
Cbc0038I Pass  30: suminf.    0.61269 (2) obj. -49.841 iterations 1
Cbc0038I Pass  31: suminf.    0.47500 (2) obj. -45.8494 iterations 1
Cbc0038I Pass  32: suminf.    0.86579 (10) obj. -45.8494 iterations 16
Cbc0038I Rounding solution of -48.6667 is better than previous of -42.6667

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -53.8321
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.40279 (5) obj. -54.938 iterations 0
Cbc0038I Pass  33: suminf.    0.40279 (5) obj. -54.938 iterations 1
Cbc0038I Pass  34: suminf.    0.54150 (3) obj. -53.8321 iterations 8
Cbc0038I Pass  35: suminf.    0.54150 (3) obj. -53.8321 iterations 0
Cbc0038I Pass  36: suminf.    0.49319 (2) obj. -53.8321 iterations 3
Cbc0038I Pass  37: suminf.    0.49909 (2) obj. -53.8321 iterations 1
Cbc0038I Pass  38: suminf.    1.65146 (5) obj. -53.8321 iterations 6
Cbc0038I Pass  39: suminf.    0.73665 (3) obj. -54.6132 iterations 3
Cbc0038I Pass  40: suminf.    0.77264 (4) obj. -53.8321 iterations 3
Cbc0038I Pass  41: suminf.    0.69665 (4) obj. -53.8321 iterations 3
Cbc0038I Pass  42: suminf.    0.96018 (3) obj. -53.8321 iterations 5
Cbc0038I Pass  43: suminf.    0.96018 (3) obj. -53.8321 iterations 0
Cbc0038I Pass  44: suminf.    0.58872 (2) obj. -53.8321 iterations 3
Cbc0038I Pass  45: suminf.    0.62289 (2) obj. -53.8321 iterations 1
Cbc0038I Pass  46: suminf.    0.66276 (3) obj. -53.8321 iterations 6
Cbc0038I Pass  47: suminf.    0.66276 (3) obj. -53.8321 iterations 2
Cbc0038I Pass  48: suminf.    0.55687 (2) obj. -53.8321 iterations 3
Cbc0038I Pass  49: suminf.    0.58162 (2) obj. -53.8321 iterations 1
Cbc0038I Pass  50: suminf.    0.94566 (8) obj. -53.8321 iterations 10
Cbc0038I Pass  51: suminf.    0.94566 (8) obj. -53.8321 iterations 1
Cbc0038I Pass  52: suminf.    1.01255 (4) obj. -53.8321 iterations 10
Cbc0038I Pass  53: suminf.    0.69300 (2) obj. -53.8321 iterations 4
Cbc0038I Pass  54: suminf.    0.75322 (2) obj. -55.5779 iterations 1
Cbc0038I Pass  55: suminf.    1.18050 (5) obj. -53.8321 iterations 6
Cbc0038I Pass  56: suminf.    0.95408 (4) obj. -53.8321 iterations 3
Cbc0038I Pass  57: suminf.    1.59866 (4) obj. -53.8321 iterations 6
Cbc0038I Pass  58: suminf.    1.17126 (3) obj. -53.8321 iterations 8
Cbc0038I Pass  59: suminf.    0.92759 (3) obj. -55.0548 iterations 4
Cbc0038I Pass  60: suminf.    0.87495 (3) obj. -53.8321 iterations 1
Cbc0038I Pass  61: suminf.    1.54494 (6) obj. -53.8321 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.6667 - took 0.02 seconds
Cbc0012I Integer solution of -48.6667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 13 rows 14 columns
Cbc0031I 15 added rows had average density of 17.266667
Cbc0013I At root node, 15 cuts changed objective from -74.493087 to -58.140259 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 698 row cuts average 4.3 elements, 8 column cuts (8 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 466 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 37 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 30 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 180 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 206 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 120 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.6667 best solution, best possible -58.140259 (1.57 seconds)
Cbc0010I After 6 nodes, 3 on tree, -48.6667 best solution, best possible -58.140259 (2.35 seconds)
Cbc0001I Search completed - best objective -48.66669999999999, took 2658 iterations and 10 nodes (2.73 seconds)
Cbc0032I Strong branching done 168 times (1828 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 10 variables fixed on reduced cost
Total time (CPU seconds):       1.74   (Wallclock seconds):       2.73

