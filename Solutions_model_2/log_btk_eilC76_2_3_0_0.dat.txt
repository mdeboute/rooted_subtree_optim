Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 74 (-4) columns and 407 (-46) elements
Clp1000I sum of infeasibilities 4.5054e-06 - average 3.38752e-08, 6 fixed columns
Coin0506I Presolve 121 (-12) rows, 68 (-6) columns and 371 (-36) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.5236183 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 37.19211
Clp0000I Optimal - objective value 37.19211
Coin0511I After Postsolve, objective 37.19211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.19211
Clp0000I Optimal - objective value 37.19211
Clp0000I Optimal - objective value 37.19211
Coin0511I After Postsolve, objective 37.19211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.19210993 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 74 columns (73 integer (73 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.188%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.12377
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.98882 iterations 48
Cbc0038I Solution found of 8.98882
Cbc0038I Relaxing continuous gives 8.98882
Cbc0038I Rounding solution of -5.74651 is better than previous of 8.98882

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -5.74651 to -14.1696 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.4719
Cbc0038I Pass   2: suminf.    2.59987 (26) obj. -16.4719 iterations 31
Cbc0038I Pass   3: suminf.    1.89639 (13) obj. -16.4719 iterations 17
Cbc0038I Pass   4: suminf.    2.38826 (9) obj. -16.4719 iterations 18
Cbc0038I Pass   5: suminf.    1.68426 (8) obj. -16.4719 iterations 7
Cbc0038I Pass   6: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass   7: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass   8: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass   9: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  10: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  11: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass  12: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass  13: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass  14: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  15: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  16: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass  17: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass  18: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass  19: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  20: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  21: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass  22: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass  23: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass  24: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  25: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  26: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass  27: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass  28: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass  29: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  30: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  31: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -14.1696 - took 0.05 seconds
Cbc0012I Integer solution of -14.169603 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 133 rows 74 columns, reduced to 69 rows 39 columns
Cbc0031I 22 added rows had average density of 54.954545
Cbc0013I At root node, 22 cuts changed objective from -37.19211 to -28.61255 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10272 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1730 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.169603 best solution, best possible -28.61255 (0.69 seconds)
Cbc0038I Full problem 133 rows 74 columns, reduced to 50 rows 31 columns
Cbc0001I Search completed - best objective -14.16960300000001, took 8284 iterations and 74 nodes (0.92 seconds)
Cbc0032I Strong branching done 744 times (13738 iterations), fathomed 6 nodes and fixed 20 variables
Cbc0035I Maximum depth 26, 170 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.93

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 116 (-36) columns and 1964 (-1339) elements
Clp1000I sum of infeasibilities 1.83781e-07 - average 1.78429e-09, 17 fixed columns
Coin0506I Presolve 89 (-14) rows, 99 (-17) columns and 1503 (-461) elements
Clp0006I 0  Obj 38.308298 Dual inf 4.6954689 (97)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.2851335 - largest nonzero change 2.4829468e-05 ( 0.0017128079%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 49.35767
Clp0000I Optimal - objective value 49.35767
Coin0511I After Postsolve, objective 49.35767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.35767
Clp0000I Optimal - objective value 49.35767
Clp0000I Optimal - objective value 49.35767
Clp0000I Optimal - objective value 49.35767
Coin0511I After Postsolve, objective 49.35767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.35766974 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 116 columns (116 integer (116 of which binary)) and 1966 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.786%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.83184
Cbc0038I Pass   1: suminf.    1.95130 (28) obj. -37.0618 iterations 23
Cbc0038I Pass   2: suminf.    1.95130 (28) obj. -37.0618 iterations 1
Cbc0038I Solution found of 16.458
Cbc0038I Rounding solution of -2.34613 is better than previous of 16.458

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -2.34613 to -6.14918 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.1062
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.95130 (28) obj. -37.0618 iterations 0
Cbc0038I Pass   4: suminf.    1.95130 (28) obj. -37.0618 iterations 1
Cbc0038I Pass   5: suminf.    1.16930 (12) obj. -10.1062 iterations 64
Cbc0038I Pass   6: suminf.    1.16930 (12) obj. -10.1062 iterations 1
Cbc0038I Pass   7: suminf.    1.45587 (9) obj. -10.1062 iterations 23
Cbc0038I Pass   8: suminf.    1.37033 (9) obj. -10.3628 iterations 2
Cbc0038I Pass   9: suminf.    0.90920 (12) obj. -10.1062 iterations 22
Cbc0038I Pass  10: suminf.    0.62422 (7) obj. -10.1062 iterations 12
Cbc0038I Pass  11: suminf.    2.11810 (9) obj. -10.1062 iterations 13
Cbc0038I Pass  12: suminf.    2.11810 (9) obj. -10.1062 iterations 0
Cbc0038I Pass  13: suminf.    3.05097 (10) obj. -10.1062 iterations 12
Cbc0038I Pass  14: suminf.    3.05097 (10) obj. -10.1062 iterations 0
Cbc0038I Pass  15: suminf.    3.10087 (10) obj. -10.1062 iterations 9
Cbc0038I Pass  16: suminf.    3.10087 (10) obj. -10.1062 iterations 5
Cbc0038I Pass  17: suminf.    3.05097 (10) obj. -10.1062 iterations 9
Cbc0038I Pass  18: suminf.    2.66580 (14) obj. -10.1062 iterations 23
Cbc0038I Pass  19: suminf.    1.03778 (10) obj. -10.1062 iterations 14
Cbc0038I Pass  20: suminf.    0.96919 (9) obj. -10.7126 iterations 1
Cbc0038I Pass  21: suminf.    0.73502 (9) obj. -10.1062 iterations 19
Cbc0038I Pass  22: suminf.    0.63977 (7) obj. -10.1062 iterations 9
Cbc0038I Pass  23: suminf.    0.64735 (7) obj. -10.1062 iterations 7
Cbc0038I Pass  24: suminf.    2.64873 (21) obj. -10.1062 iterations 41
Cbc0038I Pass  25: suminf.    1.95915 (14) obj. -13.278 iterations 17
Cbc0038I Pass  26: suminf.    1.25550 (12) obj. -11.4961 iterations 4
Cbc0038I Pass  27: suminf.    1.17479 (9) obj. -10.1062 iterations 19
Cbc0038I Pass  28: suminf.    1.06569 (9) obj. -10.1062 iterations 4
Cbc0038I Pass  29: suminf.    1.05377 (6) obj. -10.1062 iterations 18
Cbc0038I Pass  30: suminf.    0.90860 (6) obj. -10.3965 iterations 8
Cbc0038I Pass  31: suminf.    1.33124 (7) obj. -10.1062 iterations 9
Cbc0038I Pass  32: suminf.    1.80033 (12) obj. -10.1062 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 55 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -6.14918 to -13.804 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.1869
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.95130 (28) obj. -37.0618 iterations 0
Cbc0038I Pass  33: suminf.    1.95130 (28) obj. -37.0618 iterations 1
Cbc0038I Pass  34: suminf.    1.88730 (20) obj. -20.1869 iterations 38
Cbc0038I Pass  35: suminf.    1.79409 (21) obj. -20.1869 iterations 3
Cbc0038I Pass  36: suminf.    3.76979 (18) obj. -20.1869 iterations 33
Cbc0038I Pass  37: suminf.    3.76979 (18) obj. -20.1869 iterations 6
Cbc0038I Pass  38: suminf.    3.62838 (15) obj. -20.1869 iterations 22
Cbc0038I Pass  39: suminf.    2.74074 (15) obj. -20.1869 iterations 7
Cbc0038I Pass  40: suminf.    1.85472 (15) obj. -20.1869 iterations 10
Cbc0038I Pass  41: suminf.    3.62838 (15) obj. -20.1869 iterations 13
Cbc0038I Pass  42: suminf.    2.30695 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  43: suminf.    1.69653 (15) obj. -20.1869 iterations 6
Cbc0038I Pass  44: suminf.    3.62838 (15) obj. -20.1869 iterations 11
Cbc0038I Pass  45: suminf.    2.74074 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  46: suminf.    1.85472 (15) obj. -20.1869 iterations 10
Cbc0038I Pass  47: suminf.    3.62838 (15) obj. -20.1869 iterations 13
Cbc0038I Pass  48: suminf.    2.30695 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  49: suminf.    1.69653 (15) obj. -20.1869 iterations 6
Cbc0038I Pass  50: suminf.    3.62838 (15) obj. -20.1869 iterations 12
Cbc0038I Pass  51: suminf.    2.74074 (15) obj. -20.1869 iterations 4
Cbc0038I Pass  52: suminf.    1.85472 (15) obj. -20.1869 iterations 10
Cbc0038I Pass  53: suminf.    3.62838 (15) obj. -20.1869 iterations 13
Cbc0038I Pass  54: suminf.    2.30695 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  55: suminf.    1.69653 (15) obj. -20.1869 iterations 6
Cbc0038I Pass  56: suminf.    3.62838 (15) obj. -20.1869 iterations 12
Cbc0038I Pass  57: suminf.    2.74074 (15) obj. -20.1869 iterations 4
Cbc0038I Pass  58: suminf.    1.85472 (15) obj. -20.1869 iterations 10
Cbc0038I Pass  59: suminf.    3.62838 (15) obj. -20.1869 iterations 13
Cbc0038I Pass  60: suminf.    2.30695 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  61: suminf.    1.69653 (15) obj. -20.1869 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -13.804 - took 0.08 seconds
Cbc0012I Integer solution of -13.80399 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 103 rows 116 columns, reduced to 22 rows 25 columns
Cbc0031I 59 added rows had average density of 35.305085
Cbc0013I At root node, 59 cuts changed objective from -45.718188 to -22.074375 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15463 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1780 row cuts average 111.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 417 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 797 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 264 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.587 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.80399 best solution, best possible -22.074375 (2.47 seconds)
Cbc0004I Integer solution of -13.846511 found after 6504 iterations and 12 nodes (2.95 seconds)
Cbc0010I After 23 nodes, 7 on tree, -13.846511 best solution, best possible -21.906768 (3.17 seconds)
Cbc0012I Integer solution of -14.169603 found by rounding after 7258 iterations and 28 nodes (3.21 seconds)
Cbc0001I Search completed - best objective -14.16960300000001, took 7865 iterations and 38 nodes (3.27 seconds)
Cbc0032I Strong branching done 552 times (15437 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 12, 103 variables fixed on reduced cost
Total time (CPU seconds):       2.55   (Wallclock seconds):       3.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 74 (-4) columns and 407 (-46) elements
Clp1000I sum of infeasibilities 4.5054e-06 - average 3.38752e-08, 6 fixed columns
Coin0506I Presolve 121 (-12) rows, 68 (-6) columns and 371 (-36) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.5236183 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 37.19211
Clp0000I Optimal - objective value 37.19211
Coin0511I After Postsolve, objective 37.19211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.19211
Clp0000I Optimal - objective value 37.19211
Clp0000I Optimal - objective value 37.19211
Coin0511I After Postsolve, objective 37.19211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.19210993 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 74 columns (73 integer (73 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.188%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.12377
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.98882 iterations 48
Cbc0038I Solution found of 8.98882
Cbc0038I Relaxing continuous gives 8.98882
Cbc0038I Rounding solution of -5.74651 is better than previous of 8.98882

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -5.74651 to -14.1696 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.4719
Cbc0038I Pass   2: suminf.    2.59987 (26) obj. -16.4719 iterations 31
Cbc0038I Pass   3: suminf.    1.89639 (13) obj. -16.4719 iterations 17
Cbc0038I Pass   4: suminf.    2.38826 (9) obj. -16.4719 iterations 18
Cbc0038I Pass   5: suminf.    1.68426 (8) obj. -16.4719 iterations 7
Cbc0038I Pass   6: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass   7: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass   8: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass   9: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  10: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  11: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass  12: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass  13: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass  14: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  15: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  16: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass  17: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass  18: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass  19: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  20: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  21: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass  22: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass  23: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass  24: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  25: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  26: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I Pass  27: suminf.    1.89017 (7) obj. -16.4719 iterations 11
Cbc0038I Pass  28: suminf.    1.66594 (6) obj. -16.4719 iterations 4
Cbc0038I Pass  29: suminf.    1.66594 (6) obj. -16.4719 iterations 0
Cbc0038I Pass  30: suminf.    1.69729 (9) obj. -16.4719 iterations 9
Cbc0038I Pass  31: suminf.    1.68426 (8) obj. -16.4719 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 74 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -14.1696 - took 0.05 seconds
Cbc0012I Integer solution of -14.169603 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 133 rows 74 columns, reduced to 69 rows 39 columns
Cbc0031I 22 added rows had average density of 54.954545
Cbc0013I At root node, 22 cuts changed objective from -37.19211 to -28.61255 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10272 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1730 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.169603 best solution, best possible -28.61255 (0.79 seconds)
Cbc0038I Full problem 133 rows 74 columns, reduced to 50 rows 31 columns
Cbc0001I Search completed - best objective -14.16960300000001, took 8284 iterations and 74 nodes (1.04 seconds)
Cbc0032I Strong branching done 744 times (13738 iterations), fathomed 6 nodes and fixed 20 variables
Cbc0035I Maximum depth 26, 170 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 116 (-37) columns and 1964 (-1340) elements
Clp1000I sum of infeasibilities 1.83781e-07 - average 1.78429e-09, 17 fixed columns
Coin0506I Presolve 89 (-14) rows, 99 (-17) columns and 1503 (-461) elements
Clp0006I 0  Obj 38.308298 Dual inf 4.6954689 (97)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.2851335 - largest nonzero change 2.4829468e-05 ( 0.0017128079%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 49.35767
Clp0000I Optimal - objective value 49.35767
Coin0511I After Postsolve, objective 49.35767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.35767
Clp0000I Optimal - objective value 49.35767
Clp0000I Optimal - objective value 49.35767
Clp0000I Optimal - objective value 49.35767
Coin0511I After Postsolve, objective 49.35767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.35766974 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 116 columns (116 integer (116 of which binary)) and 1966 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.786%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.83184
Cbc0038I Pass   1: suminf.    1.95130 (28) obj. -37.0618 iterations 23
Cbc0038I Pass   2: suminf.    1.95130 (28) obj. -37.0618 iterations 1
Cbc0038I Solution found of 16.458
Cbc0038I Rounding solution of -2.34613 is better than previous of 16.458

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -2.34613 to -6.14918 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.1062
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.95130 (28) obj. -37.0618 iterations 0
Cbc0038I Pass   4: suminf.    1.95130 (28) obj. -37.0618 iterations 1
Cbc0038I Pass   5: suminf.    1.16930 (12) obj. -10.1062 iterations 64
Cbc0038I Pass   6: suminf.    1.16930 (12) obj. -10.1062 iterations 1
Cbc0038I Pass   7: suminf.    1.45587 (9) obj. -10.1062 iterations 23
Cbc0038I Pass   8: suminf.    1.37033 (9) obj. -10.3628 iterations 2
Cbc0038I Pass   9: suminf.    0.90920 (12) obj. -10.1062 iterations 22
Cbc0038I Pass  10: suminf.    0.62422 (7) obj. -10.1062 iterations 12
Cbc0038I Pass  11: suminf.    2.11810 (9) obj. -10.1062 iterations 13
Cbc0038I Pass  12: suminf.    2.11810 (9) obj. -10.1062 iterations 0
Cbc0038I Pass  13: suminf.    3.05097 (10) obj. -10.1062 iterations 12
Cbc0038I Pass  14: suminf.    3.05097 (10) obj. -10.1062 iterations 0
Cbc0038I Pass  15: suminf.    3.10087 (10) obj. -10.1062 iterations 9
Cbc0038I Pass  16: suminf.    3.10087 (10) obj. -10.1062 iterations 5
Cbc0038I Pass  17: suminf.    3.05097 (10) obj. -10.1062 iterations 9
Cbc0038I Pass  18: suminf.    2.66580 (14) obj. -10.1062 iterations 23
Cbc0038I Pass  19: suminf.    1.03778 (10) obj. -10.1062 iterations 14
Cbc0038I Pass  20: suminf.    0.96919 (9) obj. -10.7126 iterations 1
Cbc0038I Pass  21: suminf.    0.73502 (9) obj. -10.1062 iterations 19
Cbc0038I Pass  22: suminf.    0.63977 (7) obj. -10.1062 iterations 9
Cbc0038I Pass  23: suminf.    0.64735 (7) obj. -10.1062 iterations 7
Cbc0038I Pass  24: suminf.    2.64873 (21) obj. -10.1062 iterations 41
Cbc0038I Pass  25: suminf.    1.95915 (14) obj. -13.278 iterations 17
Cbc0038I Pass  26: suminf.    1.25550 (12) obj. -11.4961 iterations 4
Cbc0038I Pass  27: suminf.    1.17479 (9) obj. -10.1062 iterations 19
Cbc0038I Pass  28: suminf.    1.06569 (9) obj. -10.1062 iterations 4
Cbc0038I Pass  29: suminf.    1.05377 (6) obj. -10.1062 iterations 18
Cbc0038I Pass  30: suminf.    0.90860 (6) obj. -10.3965 iterations 8
Cbc0038I Pass  31: suminf.    1.33124 (7) obj. -10.1062 iterations 9
Cbc0038I Pass  32: suminf.    1.80033 (12) obj. -10.1062 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 116 columns, reduced to 55 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -6.14918 to -13.804 (0.10 seconds)
Cbc0038I Round again with cutoff of -20.1869
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.95130 (28) obj. -37.0618 iterations 0
Cbc0038I Pass  33: suminf.    1.95130 (28) obj. -37.0618 iterations 1
Cbc0038I Pass  34: suminf.    1.88730 (20) obj. -20.1869 iterations 38
Cbc0038I Pass  35: suminf.    1.79409 (21) obj. -20.1869 iterations 3
Cbc0038I Pass  36: suminf.    3.76979 (18) obj. -20.1869 iterations 33
Cbc0038I Pass  37: suminf.    3.76979 (18) obj. -20.1869 iterations 6
Cbc0038I Pass  38: suminf.    3.62838 (15) obj. -20.1869 iterations 22
Cbc0038I Pass  39: suminf.    2.74074 (15) obj. -20.1869 iterations 7
Cbc0038I Pass  40: suminf.    1.85472 (15) obj. -20.1869 iterations 10
Cbc0038I Pass  41: suminf.    3.62838 (15) obj. -20.1869 iterations 13
Cbc0038I Pass  42: suminf.    2.30695 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  43: suminf.    1.69653 (15) obj. -20.1869 iterations 6
Cbc0038I Pass  44: suminf.    3.62838 (15) obj. -20.1869 iterations 11
Cbc0038I Pass  45: suminf.    2.74074 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  46: suminf.    1.85472 (15) obj. -20.1869 iterations 10
Cbc0038I Pass  47: suminf.    3.62838 (15) obj. -20.1869 iterations 13
Cbc0038I Pass  48: suminf.    2.30695 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  49: suminf.    1.69653 (15) obj. -20.1869 iterations 6
Cbc0038I Pass  50: suminf.    3.62838 (15) obj. -20.1869 iterations 12
Cbc0038I Pass  51: suminf.    2.74074 (15) obj. -20.1869 iterations 4
Cbc0038I Pass  52: suminf.    1.85472 (15) obj. -20.1869 iterations 10
Cbc0038I Pass  53: suminf.    3.62838 (15) obj. -20.1869 iterations 13
Cbc0038I Pass  54: suminf.    2.30695 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  55: suminf.    1.69653 (15) obj. -20.1869 iterations 6
Cbc0038I Pass  56: suminf.    3.62838 (15) obj. -20.1869 iterations 12
Cbc0038I Pass  57: suminf.    2.74074 (15) obj. -20.1869 iterations 4
Cbc0038I Pass  58: suminf.    1.85472 (15) obj. -20.1869 iterations 10
Cbc0038I Pass  59: suminf.    3.62838 (15) obj. -20.1869 iterations 13
Cbc0038I Pass  60: suminf.    2.30695 (15) obj. -20.1869 iterations 3
Cbc0038I Pass  61: suminf.    1.69653 (15) obj. -20.1869 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -13.804 - took 0.09 seconds
Cbc0012I Integer solution of -13.80399 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 103 rows 116 columns, reduced to 22 rows 25 columns
Cbc0031I 59 added rows had average density of 35.305085
Cbc0013I At root node, 59 cuts changed objective from -45.718188 to -22.074375 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15463 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1780 row cuts average 111.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 417 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 797 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 264 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.644 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.80399 best solution, best possible -22.074375 (2.86 seconds)
Cbc0004I Integer solution of -13.846511 found after 6504 iterations and 12 nodes (3.45 seconds)
Cbc0010I After 16 nodes, 5 on tree, -13.846511 best solution, best possible -21.906768 (3.58 seconds)
Cbc0012I Integer solution of -14.169603 found by rounding after 7258 iterations and 28 nodes (3.75 seconds)
Cbc0001I Search completed - best objective -14.16960300000001, took 7865 iterations and 38 nodes (3.84 seconds)
Cbc0032I Strong branching done 552 times (15437 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 12, 103 variables fixed on reduced cost
Total time (CPU seconds):       2.94   (Wallclock seconds):       3.86

