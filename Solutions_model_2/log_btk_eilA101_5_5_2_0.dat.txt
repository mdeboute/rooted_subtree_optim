Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 2.61529e-05 - average 1.39111e-07, 7 fixed columns
Coin0506I Presolve 162 (-26) rows, 94 (-7) columns and 504 (-66) elements
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 0.26851956 - largest nonzero change 0 ( 0%) - largest zero change 2.6406164e-05
Clp0000I Optimal - objective value 32.729934
Clp0000I Optimal - objective value 32.729934
Coin0511I After Postsolve, objective 32.729934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.729934
Clp0000I Optimal - objective value 32.729934
Clp0000I Optimal - objective value 32.729934
Coin0511I After Postsolve, objective 32.729934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.72993437 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 13.736
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.10053 iterations 101
Cbc0038I Solution found of 7.10053
Cbc0038I Relaxing continuous gives 7.10053
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 117 rows 70 columns - 0 fixed gives 117, 70 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 117 rows 70 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3.11739
Cbc0038I Pass   2: suminf.    0.39110 (4) obj. 3.11739 iterations 8
Cbc0038I Pass   3: suminf.    0.69017 (3) obj. 3.11739 iterations 9
Cbc0038I Pass   4: suminf.    0.16092 (1) obj. 3.11739 iterations 9
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 3.11739 iterations 6
Cbc0038I Solution found of 3.11739
Cbc0038I Relaxing continuous gives -1.66653
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 129 rows 71 columns - 1 fixed gives 125, 70 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 125 rows 70 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -7.87929
Cbc0038I Pass   6: suminf.    3.03214 (20) obj. -7.87929 iterations 14
Cbc0038I Pass   7: suminf.    2.17633 (8) obj. -7.87929 iterations 25
Cbc0038I Pass   8: suminf.    2.17633 (8) obj. -7.87929 iterations 0
Cbc0038I Pass   9: suminf.    3.57299 (9) obj. -7.87929 iterations 7
Cbc0038I Pass  10: suminf.    2.54755 (8) obj. -7.87929 iterations 5
Cbc0038I Pass  11: suminf.    2.54755 (8) obj. -7.87929 iterations 0
Cbc0038I Pass  12: suminf.    3.38707 (9) obj. -7.87929 iterations 8
Cbc0038I Pass  13: suminf.    3.11923 (8) obj. -7.87929 iterations 2
Cbc0038I Pass  14: suminf.    2.41729 (8) obj. -7.87929 iterations 5
Cbc0038I Pass  15: suminf.    2.38488 (10) obj. -7.87929 iterations 2
Cbc0038I Pass  16: suminf.    4.15669 (16) obj. -7.87929 iterations 10
Cbc0038I Pass  17: suminf.    3.12982 (19) obj. -7.87929 iterations 6
Cbc0038I Pass  18: suminf.    2.82535 (24) obj. -7.87929 iterations 7
Cbc0038I Pass  19: suminf.    2.35132 (8) obj. -7.87929 iterations 30
Cbc0038I Pass  20: suminf.    2.14893 (8) obj. -7.87929 iterations 2
Cbc0038I Pass  21: suminf.    3.16038 (9) obj. -7.87929 iterations 10
Cbc0038I Pass  22: suminf.    1.95804 (7) obj. -7.87929 iterations 5
Cbc0038I Pass  23: suminf.    1.77160 (7) obj. -7.87929 iterations 1
Cbc0038I Pass  24: suminf.    2.75235 (8) obj. -7.87929 iterations 11
Cbc0038I Pass  25: suminf.    2.36488 (7) obj. -7.87929 iterations 1
Cbc0038I Pass  26: suminf.    2.29131 (6) obj. -7.87929 iterations 4
Cbc0038I Pass  27: suminf.    2.32769 (8) obj. -7.87929 iterations 7
Cbc0038I Pass  28: suminf.    1.79477 (7) obj. -7.87929 iterations 2
Cbc0038I Pass  29: suminf.    1.79477 (7) obj. -7.87929 iterations 1
Cbc0038I Pass  30: suminf.    2.46020 (8) obj. -7.87929 iterations 10
Cbc0038I Pass  31: suminf.    2.30290 (7) obj. -7.87929 iterations 1
Cbc0038I Pass  32: suminf.    1.99965 (6) obj. -7.87929 iterations 1
Cbc0038I Pass  33: suminf.    2.00157 (7) obj. -7.87929 iterations 3
Cbc0038I Pass  34: suminf.    2.27156 (7) obj. -7.87929 iterations 11
Cbc0038I Pass  35: suminf.    2.10474 (6) obj. -7.87929 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 133 rows 73 columns - 0 fixed gives 133, 73 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 133 rows 73 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1.66653 - took 0.02 seconds
Cbc0012I Integer solution of -1.66653 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 129 rows 71 columns - 1 fixed gives 125, 70 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 125 rows 70 columns - too large
Cbc0031I 37 added rows had average density of 56.486486
Cbc0013I At root node, 37 cuts changed objective from -32.729934 to -25.219595 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26282 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3443 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.66653 best solution, best possible -25.219595 (1.76 seconds)
Cbc0012I Integer solution of -2.097994 found by rounding after 14106 iterations and 31 nodes (2.08 seconds)
Cbc0012I Integer solution of -2.400894 found by rounding after 14214 iterations and 36 nodes (2.09 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 119 rows 65 columns - 1 fixed gives 115, 64 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 115 rows 64 columns
Cbc0038I Full problem 188 rows 101 columns, reduced to 4 rows 4 columns
Cbc0001I Search completed - best objective -2.400894000000001, took 17837 iterations and 116 nodes (2.40 seconds)
Cbc0032I Strong branching done 1282 times (27794 iterations), fathomed 15 nodes and fixed 65 variables
Cbc0035I Maximum depth 37, 312 variables fixed on reduced cost
Total time (CPU seconds):       2.37   (Wallclock seconds):       2.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-73) rows, 143 (-59) columns and 2573 (-3080) elements
Clp1000I sum of infeasibilities 4.86578e-06 - average 3.71433e-08, 69 fixed columns
Coin0506I Presolve 62 (-69) rows, 73 (-70) columns and 264 (-2309) elements
Clp0006I 0  Obj -5.9045001 Dual inf 47.741542 (72)
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.29734701 - largest nonzero change 2.887615e-05 ( 0.0024750985%) - largest zero change 2.9801181e-05
Clp0000I Optimal - objective value -4.8745249
Clp0000I Optimal - objective value -4.8745249
Coin0511I After Postsolve, objective -4.8745249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.8745249 Dual inf 34.080383 (43)
Clp0014I Perturbing problem by 0.001% of 1.4396952 - largest nonzero change 2.9435146e-05 ( 0.0023983587%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 46.357643
Clp0000I Optimal - objective value 46.357643
Clp0000I Optimal - objective value 46.357643
Coin0511I After Postsolve, objective 46.357643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.35764326 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 143 columns (143 integer (143 of which binary)) and 2576 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.821%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 7.99695
Cbc0038I Pass   1: suminf.    3.45159 (34) obj. -25.2298 iterations 18
Cbc0038I Pass   2: suminf.    3.45159 (34) obj. -25.2298 iterations 1
Cbc0038I Pass   3: suminf.    1.26164 (14) obj. 1.43329 iterations 20
Cbc0038I Solution found of 14.1716
Cbc0038I Rounding solution of 8.4341 is better than previous of 14.1716

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 8.4341 to 3.8892 (0.04 seconds)
Cbc0038I Round again with cutoff of -0.376
Cbc0038I Pass   4: suminf.    3.45159 (34) obj. -25.2298 iterations 0
Cbc0038I Pass   5: suminf.    3.45159 (34) obj. -25.2298 iterations 1
Cbc0038I Pass   6: suminf.    1.19592 (11) obj. -0.376 iterations 27
Cbc0038I Pass   7: suminf.    1.00260 (11) obj. -0.376 iterations 2
Cbc0038I Pass   8: suminf.    0.55967 (6) obj. -0.376 iterations 13
Cbc0038I Pass   9: suminf.    0.47746 (5) obj. -0.376 iterations 3
Cbc0038I Pass  10: suminf.    0.65512 (3) obj. -0.376 iterations 16
Cbc0038I Pass  11: suminf.    0.25376 (2) obj. -0.521117 iterations 6
Cbc0038I Pass  12: suminf.    0.65512 (3) obj. -0.376 iterations 7
Cbc0038I Pass  13: suminf.    2.04795 (16) obj. -1.71578 iterations 44
Cbc0038I Pass  14: suminf.    1.79916 (13) obj. -0.756638 iterations 8
Cbc0038I Pass  15: suminf.    1.39127 (8) obj. -0.376 iterations 27
Cbc0038I Pass  16: suminf.    0.91104 (8) obj. -0.376 iterations 11
Cbc0038I Pass  17: suminf.    1.12121 (8) obj. -0.376 iterations 14
Cbc0038I Pass  18: suminf.    1.12121 (8) obj. -0.376 iterations 0
Cbc0038I Pass  19: suminf.    1.79180 (7) obj. -0.376 iterations 15
Cbc0038I Pass  20: suminf.    1.79180 (7) obj. -0.376 iterations 0
Cbc0038I Pass  21: suminf.    1.70378 (7) obj. -0.376 iterations 13
Cbc0038I Pass  22: suminf.    1.70378 (7) obj. -0.376 iterations 0
Cbc0038I Pass  23: suminf.    2.04053 (7) obj. -0.376 iterations 7
Cbc0038I Pass  24: suminf.    1.37569 (7) obj. -0.376 iterations 5
Cbc0038I Pass  25: suminf.    0.80003 (5) obj. -0.376 iterations 5
Cbc0038I Pass  26: suminf.    1.00131 (7) obj. -0.376 iterations 10
Cbc0038I Pass  27: suminf.    0.78322 (7) obj. -0.376 iterations 4
Cbc0038I Pass  28: suminf.    2.40153 (9) obj. -0.376 iterations 12
Cbc0038I Pass  29: suminf.    1.06511 (6) obj. -0.376 iterations 12
Cbc0038I Pass  30: suminf.    0.99462 (5) obj. -0.376 iterations 1
Cbc0038I Pass  31: suminf.    1.30164 (5) obj. -0.376 iterations 8
Cbc0038I Pass  32: suminf.    1.30164 (5) obj. -0.376 iterations 1
Cbc0038I Pass  33: suminf.    1.00131 (7) obj. -0.376 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 26 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 3.8892 to 3.81766 (0.07 seconds)
Cbc0038I Round again with cutoff of -8.05318
Cbc0038I Pass  33: suminf.    3.45159 (34) obj. -25.2298 iterations 0
Cbc0038I Pass  34: suminf.    3.45159 (34) obj. -25.2298 iterations 1
Cbc0038I Pass  35: suminf.    1.94515 (17) obj. -8.05318 iterations 26
Cbc0038I Pass  36: suminf.    1.66770 (15) obj. -9.50112 iterations 3
Cbc0038I Pass  37: suminf.    2.13821 (9) obj. -8.05318 iterations 32
Cbc0038I Pass  38: suminf.    2.13821 (9) obj. -8.05318 iterations 0
Cbc0038I Pass  39: suminf.    2.15502 (8) obj. -8.05318 iterations 12
Cbc0038I Pass  40: suminf.    1.55356 (11) obj. -8.05318 iterations 11
Cbc0038I Pass  41: suminf.    1.36693 (9) obj. -8.05318 iterations 15
Cbc0038I Pass  42: suminf.    2.05579 (10) obj. -8.05318 iterations 11
Cbc0038I Pass  43: suminf.    1.65724 (12) obj. -8.05318 iterations 4
Cbc0038I Pass  44: suminf.    1.39823 (12) obj. -8.05318 iterations 1
Cbc0038I Pass  45: suminf.    1.83784 (10) obj. -8.05318 iterations 13
Cbc0038I Pass  46: suminf.    1.78911 (10) obj. -8.05318 iterations 4
Cbc0038I Pass  47: suminf.    2.37728 (10) obj. -8.05318 iterations 6
Cbc0038I Pass  48: suminf.    1.75179 (10) obj. -8.05318 iterations 8
Cbc0038I Pass  49: suminf.    2.09394 (12) obj. -8.05318 iterations 12
Cbc0038I Pass  50: suminf.    2.50502 (19) obj. -8.05318 iterations 16
Cbc0038I Pass  51: suminf.    2.21072 (17) obj. -8.05318 iterations 15
Cbc0038I Pass  52: suminf.    2.65439 (19) obj. -8.05318 iterations 18
Cbc0038I Pass  53: suminf.    2.64224 (17) obj. -8.05318 iterations 2
Cbc0038I Pass  54: suminf.    1.80675 (11) obj. -8.05318 iterations 20
Cbc0038I Pass  55: suminf.    1.23894 (10) obj. -8.05318 iterations 7
Cbc0038I Pass  56: suminf.    2.17464 (12) obj. -8.05318 iterations 13
Cbc0038I Pass  57: suminf.    1.71244 (10) obj. -8.05318 iterations 3
Cbc0038I Pass  58: suminf.    1.65643 (10) obj. -8.05318 iterations 5
Cbc0038I Pass  59: suminf.    1.33544 (10) obj. -8.05318 iterations 7
Cbc0038I Pass  60: suminf.    1.71244 (10) obj. -8.05318 iterations 9
Cbc0038I Pass  61: suminf.    2.07138 (15) obj. -8.05318 iterations 25
Cbc0038I Pass  62: suminf.    1.93572 (12) obj. -8.05318 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 15 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 3.81766 - took 0.06 seconds
Cbc0012I Integer solution of 3.817664 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 8 rows 11 columns
Cbc0031I 64 added rows had average density of 61.46875
Cbc0013I At root node, 64 cuts changed objective from -38.761901 to -8.9178268 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19769 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2342 row cuts average 139.0 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 918 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1595 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 440 row cuts average 79.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.410 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 3.817664 best solution, best possible -8.9178268 (2.55 seconds)
Cbc0012I Integer solution of 3.389839 found by rounding after 6519 iterations and 1 nodes (2.57 seconds)
Cbc0012I Integer solution of 0.4281399 found by rounding after 6670 iterations and 2 nodes (2.61 seconds)
Cbc0012I Integer solution of -1.974564 found by DiveCoefficient after 6686 iterations and 3 nodes (2.62 seconds)
Cbc0012I Integer solution of -2.400894 found by DiveCoefficient after 6755 iterations and 3 nodes (2.63 seconds)
Cbc0010I After 20 nodes, 3 on tree, -2.400894 best solution, best possible -8.0733355 (3.26 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 50 rows 66 columns
Cbc0010I After 41 nodes, 7 on tree, -2.400894 best solution, best possible -8.0733355 (4.03 seconds)
Cbc0001I Search completed - best objective -2.400894000000001, took 10273 iterations and 50 nodes (4.09 seconds)
Cbc0032I Strong branching done 728 times (15285 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 100 variables fixed on reduced cost
Total time (CPU seconds):       3.64   (Wallclock seconds):       4.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 2.61529e-05 - average 1.39111e-07, 7 fixed columns
Coin0506I Presolve 162 (-26) rows, 94 (-7) columns and 504 (-66) elements
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 0.26851956 - largest nonzero change 0 ( 0%) - largest zero change 2.6406164e-05
Clp0000I Optimal - objective value 32.729934
Clp0000I Optimal - objective value 32.729934
Coin0511I After Postsolve, objective 32.729934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.729934
Clp0000I Optimal - objective value 32.729934
Clp0000I Optimal - objective value 32.729934
Coin0511I After Postsolve, objective 32.729934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.72993437 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 13.736
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.10053 iterations 101
Cbc0038I Solution found of 7.10053
Cbc0038I Relaxing continuous gives 7.10053
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 117 rows 70 columns - 0 fixed gives 117, 70 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 117 rows 70 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3.11739
Cbc0038I Pass   2: suminf.    0.39110 (4) obj. 3.11739 iterations 8
Cbc0038I Pass   3: suminf.    0.69017 (3) obj. 3.11739 iterations 9
Cbc0038I Pass   4: suminf.    0.16092 (1) obj. 3.11739 iterations 9
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 3.11739 iterations 6
Cbc0038I Solution found of 3.11739
Cbc0038I Relaxing continuous gives -1.66653
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 129 rows 71 columns - 1 fixed gives 125, 70 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 125 rows 70 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -7.87929
Cbc0038I Pass   6: suminf.    3.03214 (20) obj. -7.87929 iterations 14
Cbc0038I Pass   7: suminf.    2.17633 (8) obj. -7.87929 iterations 25
Cbc0038I Pass   8: suminf.    2.17633 (8) obj. -7.87929 iterations 0
Cbc0038I Pass   9: suminf.    3.57299 (9) obj. -7.87929 iterations 7
Cbc0038I Pass  10: suminf.    2.54755 (8) obj. -7.87929 iterations 5
Cbc0038I Pass  11: suminf.    2.54755 (8) obj. -7.87929 iterations 0
Cbc0038I Pass  12: suminf.    3.38707 (9) obj. -7.87929 iterations 8
Cbc0038I Pass  13: suminf.    3.11923 (8) obj. -7.87929 iterations 2
Cbc0038I Pass  14: suminf.    2.41729 (8) obj. -7.87929 iterations 5
Cbc0038I Pass  15: suminf.    2.38488 (10) obj. -7.87929 iterations 2
Cbc0038I Pass  16: suminf.    4.15669 (16) obj. -7.87929 iterations 10
Cbc0038I Pass  17: suminf.    3.12982 (19) obj. -7.87929 iterations 6
Cbc0038I Pass  18: suminf.    2.82535 (24) obj. -7.87929 iterations 7
Cbc0038I Pass  19: suminf.    2.35132 (8) obj. -7.87929 iterations 30
Cbc0038I Pass  20: suminf.    2.14893 (8) obj. -7.87929 iterations 2
Cbc0038I Pass  21: suminf.    3.16038 (9) obj. -7.87929 iterations 10
Cbc0038I Pass  22: suminf.    1.95804 (7) obj. -7.87929 iterations 5
Cbc0038I Pass  23: suminf.    1.77160 (7) obj. -7.87929 iterations 1
Cbc0038I Pass  24: suminf.    2.75235 (8) obj. -7.87929 iterations 11
Cbc0038I Pass  25: suminf.    2.36488 (7) obj. -7.87929 iterations 1
Cbc0038I Pass  26: suminf.    2.29131 (6) obj. -7.87929 iterations 4
Cbc0038I Pass  27: suminf.    2.32769 (8) obj. -7.87929 iterations 7
Cbc0038I Pass  28: suminf.    1.79477 (7) obj. -7.87929 iterations 2
Cbc0038I Pass  29: suminf.    1.79477 (7) obj. -7.87929 iterations 1
Cbc0038I Pass  30: suminf.    2.46020 (8) obj. -7.87929 iterations 10
Cbc0038I Pass  31: suminf.    2.30290 (7) obj. -7.87929 iterations 1
Cbc0038I Pass  32: suminf.    1.99965 (6) obj. -7.87929 iterations 1
Cbc0038I Pass  33: suminf.    2.00157 (7) obj. -7.87929 iterations 3
Cbc0038I Pass  34: suminf.    2.27156 (7) obj. -7.87929 iterations 11
Cbc0038I Pass  35: suminf.    2.10474 (6) obj. -7.87929 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 133 rows 73 columns - 0 fixed gives 133, 73 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 133 rows 73 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1.66653 - took 0.02 seconds
Cbc0012I Integer solution of -1.66653 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 129 rows 71 columns - 1 fixed gives 125, 70 - still too large
Cbc0038I Full problem 188 rows 101 columns, reduced to 125 rows 70 columns - too large
Cbc0031I 37 added rows had average density of 56.486486
Cbc0013I At root node, 37 cuts changed objective from -32.729934 to -25.219595 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26282 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3443 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.197 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.66653 best solution, best possible -25.219595 (1.93 seconds)
Cbc0012I Integer solution of -2.097994 found by rounding after 14106 iterations and 31 nodes (2.27 seconds)
Cbc0012I Integer solution of -2.400894 found by rounding after 14214 iterations and 36 nodes (2.28 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 119 rows 65 columns - 1 fixed gives 115, 64 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 115 rows 64 columns
Cbc0038I Full problem 188 rows 101 columns, reduced to 4 rows 4 columns
Cbc0001I Search completed - best objective -2.400894000000001, took 17837 iterations and 116 nodes (2.62 seconds)
Cbc0032I Strong branching done 1282 times (27794 iterations), fathomed 15 nodes and fixed 65 variables
Cbc0035I Maximum depth 37, 312 variables fixed on reduced cost
Total time (CPU seconds):       2.55   (Wallclock seconds):       2.65

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-74) rows, 143 (-60) columns and 2573 (-3081) elements
Clp1000I sum of infeasibilities 4.86578e-06 - average 3.71433e-08, 69 fixed columns
Coin0506I Presolve 62 (-69) rows, 73 (-70) columns and 264 (-2309) elements
Clp0006I 0  Obj -5.9045001 Dual inf 47.741542 (72)
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.29734701 - largest nonzero change 2.887615e-05 ( 0.0024750985%) - largest zero change 2.9801181e-05
Clp0000I Optimal - objective value -4.8745249
Clp0000I Optimal - objective value -4.8745249
Coin0511I After Postsolve, objective -4.8745249, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.8745249 Dual inf 34.080383 (43)
Clp0014I Perturbing problem by 0.001% of 1.4396952 - largest nonzero change 2.9435146e-05 ( 0.0023983587%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 46.357643
Clp0000I Optimal - objective value 46.357643
Clp0000I Optimal - objective value 46.357643
Coin0511I After Postsolve, objective 46.357643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.35764326 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 143 columns (143 integer (143 of which binary)) and 2576 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.821%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 7.99695
Cbc0038I Pass   1: suminf.    3.45159 (34) obj. -25.2298 iterations 18
Cbc0038I Pass   2: suminf.    3.45159 (34) obj. -25.2298 iterations 1
Cbc0038I Pass   3: suminf.    1.26164 (14) obj. 1.43329 iterations 20
Cbc0038I Solution found of 14.1716
Cbc0038I Rounding solution of 8.4341 is better than previous of 14.1716

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 8.4341 to 3.8892 (0.04 seconds)
Cbc0038I Round again with cutoff of -0.376
Cbc0038I Pass   4: suminf.    3.45159 (34) obj. -25.2298 iterations 0
Cbc0038I Pass   5: suminf.    3.45159 (34) obj. -25.2298 iterations 1
Cbc0038I Pass   6: suminf.    1.19592 (11) obj. -0.376 iterations 27
Cbc0038I Pass   7: suminf.    1.00260 (11) obj. -0.376 iterations 2
Cbc0038I Pass   8: suminf.    0.55967 (6) obj. -0.376 iterations 13
Cbc0038I Pass   9: suminf.    0.47746 (5) obj. -0.376 iterations 3
Cbc0038I Pass  10: suminf.    0.65512 (3) obj. -0.376 iterations 16
Cbc0038I Pass  11: suminf.    0.25376 (2) obj. -0.521117 iterations 6
Cbc0038I Pass  12: suminf.    0.65512 (3) obj. -0.376 iterations 7
Cbc0038I Pass  13: suminf.    2.04795 (16) obj. -1.71578 iterations 44
Cbc0038I Pass  14: suminf.    1.79916 (13) obj. -0.756638 iterations 8
Cbc0038I Pass  15: suminf.    1.39127 (8) obj. -0.376 iterations 27
Cbc0038I Pass  16: suminf.    0.91104 (8) obj. -0.376 iterations 11
Cbc0038I Pass  17: suminf.    1.12121 (8) obj. -0.376 iterations 14
Cbc0038I Pass  18: suminf.    1.12121 (8) obj. -0.376 iterations 0
Cbc0038I Pass  19: suminf.    1.79180 (7) obj. -0.376 iterations 15
Cbc0038I Pass  20: suminf.    1.79180 (7) obj. -0.376 iterations 0
Cbc0038I Pass  21: suminf.    1.70378 (7) obj. -0.376 iterations 13
Cbc0038I Pass  22: suminf.    1.70378 (7) obj. -0.376 iterations 0
Cbc0038I Pass  23: suminf.    2.04053 (7) obj. -0.376 iterations 7
Cbc0038I Pass  24: suminf.    1.37569 (7) obj. -0.376 iterations 5
Cbc0038I Pass  25: suminf.    0.80003 (5) obj. -0.376 iterations 5
Cbc0038I Pass  26: suminf.    1.00131 (7) obj. -0.376 iterations 10
Cbc0038I Pass  27: suminf.    0.78322 (7) obj. -0.376 iterations 4
Cbc0038I Pass  28: suminf.    2.40153 (9) obj. -0.376 iterations 12
Cbc0038I Pass  29: suminf.    1.06511 (6) obj. -0.376 iterations 12
Cbc0038I Pass  30: suminf.    0.99462 (5) obj. -0.376 iterations 1
Cbc0038I Pass  31: suminf.    1.30164 (5) obj. -0.376 iterations 8
Cbc0038I Pass  32: suminf.    1.30164 (5) obj. -0.376 iterations 1
Cbc0038I Pass  33: suminf.    1.00131 (7) obj. -0.376 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 26 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 3.8892 to 3.81766 (0.07 seconds)
Cbc0038I Round again with cutoff of -8.05318
Cbc0038I Pass  33: suminf.    3.45159 (34) obj. -25.2298 iterations 0
Cbc0038I Pass  34: suminf.    3.45159 (34) obj. -25.2298 iterations 1
Cbc0038I Pass  35: suminf.    1.94515 (17) obj. -8.05318 iterations 26
Cbc0038I Pass  36: suminf.    1.66770 (15) obj. -9.50112 iterations 3
Cbc0038I Pass  37: suminf.    2.13821 (9) obj. -8.05318 iterations 32
Cbc0038I Pass  38: suminf.    2.13821 (9) obj. -8.05318 iterations 0
Cbc0038I Pass  39: suminf.    2.15502 (8) obj. -8.05318 iterations 12
Cbc0038I Pass  40: suminf.    1.55356 (11) obj. -8.05318 iterations 11
Cbc0038I Pass  41: suminf.    1.36693 (9) obj. -8.05318 iterations 15
Cbc0038I Pass  42: suminf.    2.05579 (10) obj. -8.05318 iterations 11
Cbc0038I Pass  43: suminf.    1.65724 (12) obj. -8.05318 iterations 4
Cbc0038I Pass  44: suminf.    1.39823 (12) obj. -8.05318 iterations 1
Cbc0038I Pass  45: suminf.    1.83784 (10) obj. -8.05318 iterations 13
Cbc0038I Pass  46: suminf.    1.78911 (10) obj. -8.05318 iterations 4
Cbc0038I Pass  47: suminf.    2.37728 (10) obj. -8.05318 iterations 6
Cbc0038I Pass  48: suminf.    1.75179 (10) obj. -8.05318 iterations 8
Cbc0038I Pass  49: suminf.    2.09394 (12) obj. -8.05318 iterations 12
Cbc0038I Pass  50: suminf.    2.50502 (19) obj. -8.05318 iterations 16
Cbc0038I Pass  51: suminf.    2.21072 (17) obj. -8.05318 iterations 15
Cbc0038I Pass  52: suminf.    2.65439 (19) obj. -8.05318 iterations 18
Cbc0038I Pass  53: suminf.    2.64224 (17) obj. -8.05318 iterations 2
Cbc0038I Pass  54: suminf.    1.80675 (11) obj. -8.05318 iterations 20
Cbc0038I Pass  55: suminf.    1.23894 (10) obj. -8.05318 iterations 7
Cbc0038I Pass  56: suminf.    2.17464 (12) obj. -8.05318 iterations 13
Cbc0038I Pass  57: suminf.    1.71244 (10) obj. -8.05318 iterations 3
Cbc0038I Pass  58: suminf.    1.65643 (10) obj. -8.05318 iterations 5
Cbc0038I Pass  59: suminf.    1.33544 (10) obj. -8.05318 iterations 7
Cbc0038I Pass  60: suminf.    1.71244 (10) obj. -8.05318 iterations 9
Cbc0038I Pass  61: suminf.    2.07138 (15) obj. -8.05318 iterations 25
Cbc0038I Pass  62: suminf.    1.93572 (12) obj. -8.05318 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 15 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of 3.81766 - took 0.07 seconds
Cbc0012I Integer solution of 3.817664 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 8 rows 11 columns
Cbc0031I 64 added rows had average density of 61.46875
Cbc0013I At root node, 64 cuts changed objective from -38.761901 to -8.9178268 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19769 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2342 row cuts average 139.0 elements, 0 column cuts (0 active)  in 0.264 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 918 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1595 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 440 row cuts average 79.7 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.451 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 3.817664 best solution, best possible -8.9178268 (2.83 seconds)
Cbc0012I Integer solution of 3.389839 found by rounding after 6519 iterations and 1 nodes (2.84 seconds)
Cbc0012I Integer solution of 0.4281399 found by rounding after 6670 iterations and 2 nodes (2.89 seconds)
Cbc0012I Integer solution of -1.974564 found by DiveCoefficient after 6686 iterations and 3 nodes (2.90 seconds)
Cbc0012I Integer solution of -2.400894 found by DiveCoefficient after 6755 iterations and 3 nodes (2.91 seconds)
Cbc0010I After 19 nodes, 2 on tree, -2.400894 best solution, best possible -8.0733355 (3.55 seconds)
Cbc0010I After 39 nodes, 7 on tree, -2.400894 best solution, best possible -8.0733355 (4.29 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 50 rows 66 columns
Cbc0001I Search completed - best objective -2.400894000000001, took 10273 iterations and 50 nodes (4.65 seconds)
Cbc0032I Strong branching done 728 times (15285 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 100 variables fixed on reduced cost
Total time (CPU seconds):       4.08   (Wallclock seconds):       4.68

