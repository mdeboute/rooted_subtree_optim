Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 63 (-15) columns and 347 (-106) elements
Clp1000I sum of infeasibilities 6.73758e-06 - average 5.91016e-08, 55 fixed columns
Coin0506I Presolve 5 (-109) rows, 7 (-56) columns and 18 (-329) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 16516.713
Clp0000I Optimal - objective value 16516.713
Coin0511I After Postsolve, objective 16516.713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9319592 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16516.713
Clp0000I Optimal - objective value 16516.713
Clp0000I Optimal - objective value 16516.713
Coin0511I After Postsolve, objective 16516.713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16516.71322 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 114 rows, 63 columns (62 integer (62 of which binary)) and 347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.400%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.05944
Cbc0038I Solution found of -15308.1
Cbc0038I Relaxing continuous gives -15308.1
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15429
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03627 (1) obj. -15429 iterations 14
Cbc0038I Pass   2: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass   3: suminf.    0.22988 (2) obj. -15429 iterations 9
Cbc0038I Pass   4: suminf.    0.08108 (1) obj. -15668.6 iterations 5
Cbc0038I Pass   5: suminf.    0.15117 (1) obj. -15429 iterations 2
Cbc0038I Pass   6: suminf.    0.83374 (2) obj. -15429 iterations 9
Cbc0038I Pass   7: suminf.    1.02978 (4) obj. -15429 iterations 12
Cbc0038I Pass   8: suminf.    0.48887 (2) obj. -15429 iterations 8
Cbc0038I Pass   9: suminf.    0.81569 (4) obj. -15429 iterations 11
Cbc0038I Pass  10: suminf.    0.65217 (2) obj. -15830.7 iterations 7
Cbc0038I Pass  11: suminf.    0.11737 (3) obj. -15429 iterations 8
Cbc0038I Pass  12: suminf.    0.06959 (2) obj. -15429 iterations 7
Cbc0038I Pass  13: suminf.    0.65217 (2) obj. -15830.7 iterations 5
Cbc0038I Pass  14: suminf.    0.48962 (1) obj. -15429 iterations 22
Cbc0038I Pass  15: suminf.    0.48962 (1) obj. -15429 iterations 2
Cbc0038I Pass  16: suminf.    0.50000 (1) obj. -15464.6 iterations 1
Cbc0038I Pass  17: suminf.    0.59259 (4) obj. -15899.3 iterations 9
Cbc0038I Pass  18: suminf.    0.03627 (1) obj. -15429 iterations 9
Cbc0038I Pass  19: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass  20: suminf.    0.80779 (4) obj. -15845.3 iterations 14
Cbc0038I Pass  21: suminf.    0.21891 (1) obj. -15429 iterations 9
Cbc0038I Pass  22: suminf.    0.37838 (1) obj. -15976.3 iterations 1
Cbc0038I Pass  23: suminf.    1.20152 (3) obj. -15429 iterations 14
Cbc0038I Solution found of -15494
Cbc0038I Relaxing continuous gives -15494
Cbc0038I Rounding solution of -15847.6 is better than previous of -15494

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -15847.6 to -16052.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -16145.6
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 3
Cbc0038I Pass  24: suminf.    0.25135 (1) obj. -16145.6 iterations 0
Cbc0038I Pass  25: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass  26: suminf.    0.59280 (2) obj. -16145.6 iterations 5
Cbc0038I Pass  27: suminf.    0.59280 (2) obj. -16145.6 iterations 2
Cbc0038I Pass  28: suminf.    0.81599 (3) obj. -16145.6 iterations 9
Cbc0038I Pass  29: suminf.    0.81599 (3) obj. -16145.6 iterations 5
Cbc0038I Pass  30: suminf.    0.47779 (3) obj. -16145.6 iterations 10
Cbc0038I Pass  31: suminf.    0.47779 (3) obj. -16145.6 iterations 1
Cbc0038I Pass  32: suminf.    0.75212 (2) obj. -16145.6 iterations 11
Cbc0038I Pass  33: suminf.    0.25135 (1) obj. -16145.6 iterations 9
Cbc0038I Pass  34: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass  35: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass  36: suminf.    0.88401 (2) obj. -16145.6 iterations 4
Cbc0038I Pass  37: suminf.    0.88168 (2) obj. -16145.6 iterations 7
Cbc0038I Pass  38: suminf.    0.88168 (2) obj. -16145.6 iterations 1
Cbc0038I Pass  39: suminf.    0.88168 (2) obj. -16145.6 iterations 1
Cbc0038I Pass  40: suminf.    0.88168 (2) obj. -16145.6 iterations 0
Cbc0038I Pass  41: suminf.    0.75212 (2) obj. -16145.6 iterations 5
Cbc0038I Pass  42: suminf.    0.75212 (2) obj. -16145.6 iterations 2
Cbc0038I Pass  43: suminf.    0.88467 (3) obj. -16145.6 iterations 9
Cbc0038I Pass  44: suminf.    0.46854 (2) obj. -16300.3 iterations 9
Cbc0038I Pass  45: suminf.    0.51122 (2) obj. -16145.6 iterations 5
Cbc0038I Pass  46: suminf.    0.59280 (2) obj. -16145.6 iterations 11
Cbc0038I Pass  47: suminf.    0.59280 (2) obj. -16145.6 iterations 4
Cbc0038I Pass  48: suminf.    0.28571 (1) obj. -16260.1 iterations 3
Cbc0038I Pass  49: suminf.    0.25135 (1) obj. -16145.6 iterations 2
Cbc0038I Pass  50: suminf.    0.84211 (2) obj. -16485.6 iterations 5
Cbc0038I Pass  51: suminf.    0.25135 (1) obj. -16145.6 iterations 5
Cbc0038I Pass  52: suminf.    0.95129 (3) obj. -16145.6 iterations 5
Cbc0038I Pass  53: suminf.    0.57425 (3) obj. -16145.6 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16052.8 - took 0.02 seconds
Cbc0012I Integer solution of -16052.8 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 114 rows 63 columns, reduced to 4 rows 6 columns
Cbc0031I 3 added rows had average density of 7.3333333
Cbc0013I At root node, 12 cuts changed objective from -16516.713 to -16052.8 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 60.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16052.8, took 12 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-59) rows, 105 (-47) columns and 1684 (-1619) elements
Clp1000I sum of infeasibilities 1.24705e-07 - average 1.31268e-09, 65 fixed columns
Coin0506I Presolve 28 (-67) rows, 29 (-76) columns and 91 (-1593) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 16563.241
Clp0000I Optimal - objective value 16563.241
Coin0511I After Postsolve, objective 16563.241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1581023 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16563.241
Clp0000I Optimal - objective value 16563.241
Clp0000I Optimal - objective value 16563.241
Coin0511I After Postsolve, objective 16563.241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16563.24127 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 107 columns (107 integer (107 of which binary)) and 1690 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.855%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.87619
Cbc0038I Pass   1: suminf.    1.64315 (29) obj. -11918.8 iterations 17
Cbc0038I Pass   2: suminf.    1.64315 (29) obj. -11918.8 iterations 1
Cbc0038I Pass   3: suminf.    0.96558 (19) obj. -11902.9 iterations 10
Cbc0038I Pass   4: suminf.    0.06559 (2) obj. -11884 iterations 17
Cbc0038I Solution found of -11881.1
Cbc0038I Rounding solution of -14037.9 is better than previous of -11881.1

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -14037.9 to -15308.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -15433.1
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.73170 (35) obj. -15433.1 iterations 3
Cbc0038I Pass   6: suminf.    0.84620 (13) obj. -15433.1 iterations 22
Cbc0038I Pass   7: suminf.    0.28571 (1) obj. -16260.1 iterations 14
Cbc0038I Pass   8: suminf.    0.03751 (1) obj. -15433.1 iterations 1
Cbc0038I Pass   9: suminf.    1.83601 (9) obj. -15433.1 iterations 24
Cbc0038I Pass  10: suminf.    0.71822 (9) obj. -15433.1 iterations 5
Cbc0038I Pass  11: suminf.    0.91358 (4) obj. -16053.3 iterations 14
Cbc0038I Pass  12: suminf.    0.48093 (1) obj. -15433.1 iterations 6
Cbc0038I Pass  13: suminf.    0.42857 (2) obj. -15433.1 iterations 5
Cbc0038I Pass  14: suminf.    0.48093 (1) obj. -15433.1 iterations 5
Cbc0038I Pass  15: suminf.    2.30577 (17) obj. -15433.1 iterations 23
Cbc0038I Pass  16: suminf.    2.21448 (18) obj. -15433.1 iterations 8
Cbc0038I Pass  17: suminf.    0.57404 (2) obj. -15433.1 iterations 22
Cbc0038I Pass  18: suminf.    0.42857 (2) obj. -15433.1 iterations 4
Cbc0038I Pass  19: suminf.    0.48245 (1) obj. -15433.1 iterations 4
Cbc0038I Pass  20: suminf.    0.48245 (1) obj. -15433.1 iterations 0
Cbc0038I Pass  21: suminf.    0.45952 (5) obj. -15461.8 iterations 13
Cbc0038I Pass  22: suminf.    0.45952 (5) obj. -15461.8 iterations 5
Cbc0038I Pass  23: suminf.    0.17369 (1) obj. -15433.1 iterations 5
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -15553.2 iterations 2
Cbc0038I Pass  25: suminf.    0.17891 (1) obj. -15433.1 iterations 1
Cbc0038I Pass  26: suminf.    1.73270 (8) obj. -15433.1 iterations 20
Cbc0038I Pass  27: suminf.    0.60276 (6) obj. -15433.1 iterations 9
Cbc0038I Pass  28: suminf.    0.56115 (6) obj. -15463.7 iterations 2
Cbc0038I Pass  29: suminf.    0.17398 (1) obj. -15433.1 iterations 6
Cbc0038I Pass  30: suminf.    0.14286 (1) obj. -15554.2 iterations 2
Cbc0038I Pass  31: suminf.    0.17921 (1) obj. -15433.1 iterations 1
Cbc0038I Pass  32: suminf.    0.34014 (7) obj. -15433.1 iterations 11
Cbc0038I Pass  33: suminf.    0.16299 (3) obj. -15433.1 iterations 8
Cbc0038I Pass  34: suminf.    0.02703 (1) obj. -15487.5 iterations 3
Cbc0038I Rounding solution of -16052.8 is better than previous of -15308.1

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 9 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16153.8
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.97051 (35) obj. -16153.8 iterations 0
Cbc0038I Pass  35: suminf.    1.85174 (20) obj. -16153.8 iterations 18
Cbc0038I Pass  36: suminf.    1.54134 (19) obj. -16153.8 iterations 2
Cbc0038I Pass  37: suminf.    0.28571 (1) obj. -16260.1 iterations 20
Cbc0038I Pass  38: suminf.    0.25382 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  39: suminf.    1.13909 (12) obj. -16153.8 iterations 16
Cbc0038I Pass  40: suminf.    1.13909 (12) obj. -16153.8 iterations 3
Cbc0038I Pass  41: suminf.    0.28571 (1) obj. -16258.1 iterations 13
Cbc0038I Pass  42: suminf.    0.25443 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  43: suminf.    1.18668 (8) obj. -16153.8 iterations 17
Cbc0038I Pass  44: suminf.    0.71039 (7) obj. -16153.8 iterations 8
Cbc0038I Pass  45: suminf.    0.28571 (1) obj. -16258.1 iterations 8
Cbc0038I Pass  46: suminf.    0.25443 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  47: suminf.    1.29762 (9) obj. -16153.8 iterations 19
Cbc0038I Pass  48: suminf.    0.83212 (8) obj. -16153.8 iterations 10
Cbc0038I Pass  49: suminf.    0.28571 (1) obj. -16252.1 iterations 9
Cbc0038I Pass  50: suminf.    0.25623 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  51: suminf.    0.65914 (6) obj. -16153.8 iterations 9
Cbc0038I Pass  52: suminf.    0.65914 (6) obj. -16153.8 iterations 2
Cbc0038I Pass  53: suminf.    0.28571 (1) obj. -16249.1 iterations 7
Cbc0038I Pass  54: suminf.    0.25713 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  55: suminf.    0.96284 (6) obj. -16153.8 iterations 10
Cbc0038I Pass  56: suminf.    0.96284 (6) obj. -16153.8 iterations 2
Cbc0038I Pass  57: suminf.    0.28571 (1) obj. -16249.1 iterations 8
Cbc0038I Pass  58: suminf.    0.25713 (1) obj. -16153.8 iterations 2
Cbc0038I Pass  59: suminf.    0.63547 (6) obj. -16153.8 iterations 11
Cbc0038I Pass  60: suminf.    0.63547 (6) obj. -16153.8 iterations 3
Cbc0038I Pass  61: suminf.    0.28571 (1) obj. -16249.1 iterations 7
Cbc0038I Pass  62: suminf.    0.25713 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  63: suminf.    1.16010 (9) obj. -16153.8 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -16052.8 - took 0.03 seconds
Cbc0012I Integer solution of -16052.8 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 97 rows 107 columns, reduced to 4 rows 6 columns
Cbc0031I 14 added rows had average density of 5.5
Cbc0013I At root node, 14 cuts changed objective from -16557.893 to -16052.81 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 324 row cuts average 4.9 elements, 29 column cuts (29 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 37.8 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.0097407825 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -16052.8, took 155 iterations and 0 nodes (0.36 seconds)
Cbc0035I Maximum depth 0, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 63 (-15) columns and 347 (-106) elements
Clp1000I sum of infeasibilities 6.73758e-06 - average 5.91016e-08, 55 fixed columns
Coin0506I Presolve 5 (-109) rows, 7 (-56) columns and 18 (-329) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 16516.713
Clp0000I Optimal - objective value 16516.713
Coin0511I After Postsolve, objective 16516.713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9319592 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16516.713
Clp0000I Optimal - objective value 16516.713
Clp0000I Optimal - objective value 16516.713
Coin0511I After Postsolve, objective 16516.713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16516.71322 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 114 rows, 63 columns (62 integer (62 of which binary)) and 347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.400%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.05944
Cbc0038I Solution found of -15308.1
Cbc0038I Relaxing continuous gives -15308.1
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15429
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03627 (1) obj. -15429 iterations 14
Cbc0038I Pass   2: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass   3: suminf.    0.22988 (2) obj. -15429 iterations 9
Cbc0038I Pass   4: suminf.    0.08108 (1) obj. -15668.6 iterations 5
Cbc0038I Pass   5: suminf.    0.15117 (1) obj. -15429 iterations 2
Cbc0038I Pass   6: suminf.    0.83374 (2) obj. -15429 iterations 9
Cbc0038I Pass   7: suminf.    1.02978 (4) obj. -15429 iterations 12
Cbc0038I Pass   8: suminf.    0.48887 (2) obj. -15429 iterations 8
Cbc0038I Pass   9: suminf.    0.81569 (4) obj. -15429 iterations 11
Cbc0038I Pass  10: suminf.    0.65217 (2) obj. -15830.7 iterations 7
Cbc0038I Pass  11: suminf.    0.11737 (3) obj. -15429 iterations 8
Cbc0038I Pass  12: suminf.    0.06959 (2) obj. -15429 iterations 7
Cbc0038I Pass  13: suminf.    0.65217 (2) obj. -15830.7 iterations 5
Cbc0038I Pass  14: suminf.    0.48962 (1) obj. -15429 iterations 22
Cbc0038I Pass  15: suminf.    0.48962 (1) obj. -15429 iterations 2
Cbc0038I Pass  16: suminf.    0.50000 (1) obj. -15464.6 iterations 1
Cbc0038I Pass  17: suminf.    0.59259 (4) obj. -15899.3 iterations 9
Cbc0038I Pass  18: suminf.    0.03627 (1) obj. -15429 iterations 9
Cbc0038I Pass  19: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass  20: suminf.    0.80779 (4) obj. -15845.3 iterations 14
Cbc0038I Pass  21: suminf.    0.21891 (1) obj. -15429 iterations 9
Cbc0038I Pass  22: suminf.    0.37838 (1) obj. -15976.3 iterations 1
Cbc0038I Pass  23: suminf.    1.20152 (3) obj. -15429 iterations 14
Cbc0038I Solution found of -15494
Cbc0038I Relaxing continuous gives -15494
Cbc0038I Rounding solution of -15847.6 is better than previous of -15494

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -15847.6 to -16052.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -16145.6
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 3
Cbc0038I Pass  24: suminf.    0.25135 (1) obj. -16145.6 iterations 0
Cbc0038I Pass  25: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass  26: suminf.    0.59280 (2) obj. -16145.6 iterations 5
Cbc0038I Pass  27: suminf.    0.59280 (2) obj. -16145.6 iterations 2
Cbc0038I Pass  28: suminf.    0.81599 (3) obj. -16145.6 iterations 9
Cbc0038I Pass  29: suminf.    0.81599 (3) obj. -16145.6 iterations 5
Cbc0038I Pass  30: suminf.    0.47779 (3) obj. -16145.6 iterations 10
Cbc0038I Pass  31: suminf.    0.47779 (3) obj. -16145.6 iterations 1
Cbc0038I Pass  32: suminf.    0.75212 (2) obj. -16145.6 iterations 11
Cbc0038I Pass  33: suminf.    0.25135 (1) obj. -16145.6 iterations 9
Cbc0038I Pass  34: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass  35: suminf.    0.28571 (1) obj. -16260.1 iterations 2
Cbc0038I Pass  36: suminf.    0.88401 (2) obj. -16145.6 iterations 4
Cbc0038I Pass  37: suminf.    0.88168 (2) obj. -16145.6 iterations 7
Cbc0038I Pass  38: suminf.    0.88168 (2) obj. -16145.6 iterations 1
Cbc0038I Pass  39: suminf.    0.88168 (2) obj. -16145.6 iterations 1
Cbc0038I Pass  40: suminf.    0.88168 (2) obj. -16145.6 iterations 0
Cbc0038I Pass  41: suminf.    0.75212 (2) obj. -16145.6 iterations 5
Cbc0038I Pass  42: suminf.    0.75212 (2) obj. -16145.6 iterations 2
Cbc0038I Pass  43: suminf.    0.88467 (3) obj. -16145.6 iterations 9
Cbc0038I Pass  44: suminf.    0.46854 (2) obj. -16300.3 iterations 9
Cbc0038I Pass  45: suminf.    0.51122 (2) obj. -16145.6 iterations 5
Cbc0038I Pass  46: suminf.    0.59280 (2) obj. -16145.6 iterations 11
Cbc0038I Pass  47: suminf.    0.59280 (2) obj. -16145.6 iterations 4
Cbc0038I Pass  48: suminf.    0.28571 (1) obj. -16260.1 iterations 3
Cbc0038I Pass  49: suminf.    0.25135 (1) obj. -16145.6 iterations 2
Cbc0038I Pass  50: suminf.    0.84211 (2) obj. -16485.6 iterations 5
Cbc0038I Pass  51: suminf.    0.25135 (1) obj. -16145.6 iterations 5
Cbc0038I Pass  52: suminf.    0.95129 (3) obj. -16145.6 iterations 5
Cbc0038I Pass  53: suminf.    0.57425 (3) obj. -16145.6 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 63 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -16052.8 - took 0.02 seconds
Cbc0012I Integer solution of -16052.8 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 114 rows 63 columns, reduced to 4 rows 6 columns
Cbc0031I 3 added rows had average density of 7.3333333
Cbc0013I At root node, 12 cuts changed objective from -16516.713 to -16052.8 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 60.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -16052.8, took 12 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 105 (-48) columns and 1684 (-1620) elements
Clp1000I sum of infeasibilities 1.24705e-07 - average 1.31268e-09, 65 fixed columns
Coin0506I Presolve 28 (-67) rows, 29 (-76) columns and 91 (-1593) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 16563.241
Clp0000I Optimal - objective value 16563.241
Coin0511I After Postsolve, objective 16563.241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1581023 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16563.241
Clp0000I Optimal - objective value 16563.241
Clp0000I Optimal - objective value 16563.241
Coin0511I After Postsolve, objective 16563.241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16563.24127 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 107 columns (107 integer (107 of which binary)) and 1690 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.855%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.87619
Cbc0038I Pass   1: suminf.    1.64315 (29) obj. -11918.8 iterations 17
Cbc0038I Pass   2: suminf.    1.64315 (29) obj. -11918.8 iterations 1
Cbc0038I Pass   3: suminf.    0.96558 (19) obj. -11902.9 iterations 10
Cbc0038I Pass   4: suminf.    0.06559 (2) obj. -11884 iterations 17
Cbc0038I Solution found of -11881.1
Cbc0038I Rounding solution of -14037.9 is better than previous of -11881.1

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -14037.9 to -15308.1 (0.03 seconds)
Cbc0038I Round again with cutoff of -15433.1
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.73170 (35) obj. -15433.1 iterations 3
Cbc0038I Pass   6: suminf.    0.84620 (13) obj. -15433.1 iterations 22
Cbc0038I Pass   7: suminf.    0.28571 (1) obj. -16260.1 iterations 14
Cbc0038I Pass   8: suminf.    0.03751 (1) obj. -15433.1 iterations 1
Cbc0038I Pass   9: suminf.    1.83601 (9) obj. -15433.1 iterations 24
Cbc0038I Pass  10: suminf.    0.71822 (9) obj. -15433.1 iterations 5
Cbc0038I Pass  11: suminf.    0.91358 (4) obj. -16053.3 iterations 14
Cbc0038I Pass  12: suminf.    0.48093 (1) obj. -15433.1 iterations 6
Cbc0038I Pass  13: suminf.    0.42857 (2) obj. -15433.1 iterations 5
Cbc0038I Pass  14: suminf.    0.48093 (1) obj. -15433.1 iterations 5
Cbc0038I Pass  15: suminf.    2.30577 (17) obj. -15433.1 iterations 23
Cbc0038I Pass  16: suminf.    2.21448 (18) obj. -15433.1 iterations 8
Cbc0038I Pass  17: suminf.    0.57404 (2) obj. -15433.1 iterations 22
Cbc0038I Pass  18: suminf.    0.42857 (2) obj. -15433.1 iterations 4
Cbc0038I Pass  19: suminf.    0.48245 (1) obj. -15433.1 iterations 4
Cbc0038I Pass  20: suminf.    0.48245 (1) obj. -15433.1 iterations 0
Cbc0038I Pass  21: suminf.    0.45952 (5) obj. -15461.8 iterations 13
Cbc0038I Pass  22: suminf.    0.45952 (5) obj. -15461.8 iterations 5
Cbc0038I Pass  23: suminf.    0.17369 (1) obj. -15433.1 iterations 5
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -15553.2 iterations 2
Cbc0038I Pass  25: suminf.    0.17891 (1) obj. -15433.1 iterations 1
Cbc0038I Pass  26: suminf.    1.73270 (8) obj. -15433.1 iterations 20
Cbc0038I Pass  27: suminf.    0.60276 (6) obj. -15433.1 iterations 9
Cbc0038I Pass  28: suminf.    0.56115 (6) obj. -15463.7 iterations 2
Cbc0038I Pass  29: suminf.    0.17398 (1) obj. -15433.1 iterations 6
Cbc0038I Pass  30: suminf.    0.14286 (1) obj. -15554.2 iterations 2
Cbc0038I Pass  31: suminf.    0.17921 (1) obj. -15433.1 iterations 1
Cbc0038I Pass  32: suminf.    0.34014 (7) obj. -15433.1 iterations 11
Cbc0038I Pass  33: suminf.    0.16299 (3) obj. -15433.1 iterations 8
Cbc0038I Pass  34: suminf.    0.02703 (1) obj. -15487.5 iterations 3
Cbc0038I Rounding solution of -16052.8 is better than previous of -15308.1

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 9 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -16153.8
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.97051 (35) obj. -16153.8 iterations 0
Cbc0038I Pass  35: suminf.    1.85174 (20) obj. -16153.8 iterations 18
Cbc0038I Pass  36: suminf.    1.54134 (19) obj. -16153.8 iterations 2
Cbc0038I Pass  37: suminf.    0.28571 (1) obj. -16260.1 iterations 20
Cbc0038I Pass  38: suminf.    0.25382 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  39: suminf.    1.13909 (12) obj. -16153.8 iterations 16
Cbc0038I Pass  40: suminf.    1.13909 (12) obj. -16153.8 iterations 3
Cbc0038I Pass  41: suminf.    0.28571 (1) obj. -16258.1 iterations 13
Cbc0038I Pass  42: suminf.    0.25443 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  43: suminf.    1.18668 (8) obj. -16153.8 iterations 17
Cbc0038I Pass  44: suminf.    0.71039 (7) obj. -16153.8 iterations 8
Cbc0038I Pass  45: suminf.    0.28571 (1) obj. -16258.1 iterations 8
Cbc0038I Pass  46: suminf.    0.25443 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  47: suminf.    1.29762 (9) obj. -16153.8 iterations 19
Cbc0038I Pass  48: suminf.    0.83212 (8) obj. -16153.8 iterations 10
Cbc0038I Pass  49: suminf.    0.28571 (1) obj. -16252.1 iterations 9
Cbc0038I Pass  50: suminf.    0.25623 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  51: suminf.    0.65914 (6) obj. -16153.8 iterations 9
Cbc0038I Pass  52: suminf.    0.65914 (6) obj. -16153.8 iterations 2
Cbc0038I Pass  53: suminf.    0.28571 (1) obj. -16249.1 iterations 7
Cbc0038I Pass  54: suminf.    0.25713 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  55: suminf.    0.96284 (6) obj. -16153.8 iterations 10
Cbc0038I Pass  56: suminf.    0.96284 (6) obj. -16153.8 iterations 2
Cbc0038I Pass  57: suminf.    0.28571 (1) obj. -16249.1 iterations 8
Cbc0038I Pass  58: suminf.    0.25713 (1) obj. -16153.8 iterations 2
Cbc0038I Pass  59: suminf.    0.63547 (6) obj. -16153.8 iterations 11
Cbc0038I Pass  60: suminf.    0.63547 (6) obj. -16153.8 iterations 3
Cbc0038I Pass  61: suminf.    0.28571 (1) obj. -16249.1 iterations 7
Cbc0038I Pass  62: suminf.    0.25713 (1) obj. -16153.8 iterations 1
Cbc0038I Pass  63: suminf.    1.16010 (9) obj. -16153.8 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -16052.8 - took 0.03 seconds
Cbc0012I Integer solution of -16052.8 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 97 rows 107 columns, reduced to 4 rows 6 columns
Cbc0031I 14 added rows had average density of 5.5
Cbc0013I At root node, 14 cuts changed objective from -16557.893 to -16052.81 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 324 row cuts average 4.9 elements, 29 column cuts (29 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 37.8 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.0097407825 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -16052.8, took 155 iterations and 0 nodes (0.40 seconds)
Cbc0035I Maximum depth 0, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.41

