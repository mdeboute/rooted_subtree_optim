Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 341 (-10) rows, 172 (-4) columns and 1020 (-23) elements
Clp1000I sum of infeasibilities 5.36839e-06 - average 1.57431e-08, 129 fixed columns
Coin0506I Presolve 82 (-259) rows, 43 (-129) columns and 244 (-776) elements
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Coin0511I After Postsolve, objective 8563256.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30425414 - largest nonzero change 0 ( 0%) - largest zero change 2.9727844e-05
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Coin0511I After Postsolve, objective 8563256.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8563256.529 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 341 rows, 172 columns (171 integer (171 of which binary)) and 1020 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.571%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 15.3656
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.54979e+06 iterations 86
Cbc0038I Solution found of -5.54979e+06
Cbc0038I Relaxing continuous gives -5.54979e+06
Cbc0038I Rounding solution of -7.16307e+06 is better than previous of -5.54979e+06

Cbc0038I Before mini branch and bound, 129 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 172 columns, reduced to 82 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -7.16307e+06 to -8.44618e+06 (0.01 seconds)
Cbc0038I Round again with cutoff of -8.45789e+06
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    8.84262 (37) obj. -8.45789e+06 iterations 76
Cbc0038I Pass   3: suminf.    8.84262 (37) obj. -8.45789e+06 iterations 1
Cbc0038I Pass   4: suminf.    9.49487 (29) obj. -8.45789e+06 iterations 37
Cbc0038I Pass   5: suminf.   14.10358 (32) obj. -8.45789e+06 iterations 28
Cbc0038I Pass   6: suminf.   12.58639 (32) obj. -8.45789e+06 iterations 47
Cbc0038I Pass   7: suminf.   12.19650 (31) obj. -8.45789e+06 iterations 17
Cbc0038I Pass   8: suminf.   12.19442 (31) obj. -8.45789e+06 iterations 1
Cbc0038I Pass   9: suminf.   13.51904 (30) obj. -8.45789e+06 iterations 29
Cbc0038I Pass  10: suminf.    9.55609 (31) obj. -8.45789e+06 iterations 22
Cbc0038I Pass  11: suminf.    5.66856 (32) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  12: suminf.    5.66856 (32) obj. -8.45789e+06 iterations 1
Cbc0038I Pass  13: suminf.    8.86182 (23) obj. -8.45789e+06 iterations 51
Cbc0038I Pass  14: suminf.    8.40372 (19) obj. -8.45789e+06 iterations 19
Cbc0038I Pass  15: suminf.    8.03259 (19) obj. -8.45789e+06 iterations 55
Cbc0038I Pass  16: suminf.    8.03259 (19) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  17: suminf.    8.19148 (19) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  18: suminf.    8.90247 (30) obj. -8.45789e+06 iterations 15
Cbc0038I Pass  19: suminf.    6.88836 (32) obj. -8.45789e+06 iterations 19
Cbc0038I Pass  20: suminf.    6.61784 (30) obj. -8.45789e+06 iterations 6
Cbc0038I Pass  21: suminf.    9.26904 (25) obj. -8.45789e+06 iterations 52
Cbc0038I Pass  22: suminf.    7.03384 (21) obj. -8.45789e+06 iterations 22
Cbc0038I Pass  23: suminf.    6.86091 (22) obj. -8.45789e+06 iterations 26
Cbc0038I Pass  24: suminf.    6.37834 (32) obj. -8.45789e+06 iterations 14
Cbc0038I Pass  25: suminf.    5.95991 (32) obj. -8.45789e+06 iterations 20
Cbc0038I Pass  26: suminf.    6.79748 (15) obj. -8.45789e+06 iterations 10
Cbc0038I Pass  27: suminf.    6.75758 (18) obj. -8.45789e+06 iterations 1
Cbc0038I Pass  28: suminf.    8.35181 (36) obj. -8.45789e+06 iterations 32
Cbc0038I Pass  29: suminf.    8.23910 (35) obj. -8.45789e+06 iterations 5
Cbc0038I Pass  30: suminf.    9.98537 (23) obj. -8.45789e+06 iterations 39
Cbc0038I Pass  31: suminf.    9.06926 (23) obj. -8.45789e+06 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 113 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 172 columns, reduced to 101 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -8.44618e+06 - took 0.03 seconds
Cbc0012I Integer solution of -8446177.7 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 341 rows 172 columns, reduced to 82 rows 43 columns
Cbc0031I 9 added rows had average density of 73.444444
Cbc0013I At root node, 9 cuts changed objective from -8563256.5 to -8450745.3 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 616 row cuts average 3.0 elements, 20 column cuts (20 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8446177.699999999, took 155 iterations and 0 nodes (0.11 seconds)
Cbc0032I Strong branching done 12 times (149 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 274 (-76) rows, 275 (-73) columns and 9496 (-6598) elements
Clp1000I sum of infeasibilities 0.0242141 - average 8.83727e-05, 155 fixed columns
Coin0506I Presolve 107 (-167) rows, 107 (-168) columns and 424 (-9072) elements
Clp0029I End of values pass after 107 iterations
Clp0014I Perturbing problem by 0.001% of 1.6835976 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 8335666.7
Clp0000I Optimal - objective value 8335666.7
Coin0511I After Postsolve, objective 8335666.7, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 7.5895433 - largest nonzero change 2.4063092e-05 ( 0.0018755579%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 8573794.6
Clp0000I Optimal - objective value 8573794.6
Clp0000I Optimal - objective value 8573794.6
Coin0511I After Postsolve, objective 8573794.6, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8573794.557 - 0 iterations time 0.162, Presolve 0.00, Idiot 0.16

Starting MIP optimization
Cgl0004I processed model has 274 rows, 275 columns (275 integer (275 of which binary)) and 9496 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.043%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 138 integers unsatisfied sum - 30.7563
Cbc0038I Pass   1: suminf.   10.22633 (68) obj. -7.98218e+06 iterations 103
Cbc0038I Pass   2: suminf.   10.22633 (68) obj. -7.98218e+06 iterations 7
Cbc0038I Pass   3: suminf.    5.10521 (44) obj. -7.71288e+06 iterations 24
Cbc0038I Pass   4: suminf.    1.17188 (16) obj. -7.70305e+06 iterations 28
Cbc0038I Solution found of -7.698e+06
Cbc0038I Rounding solution of -7.86973e+06 is better than previous of -7.698e+06

Cbc0038I Before mini branch and bound, 137 integers at bound fixed and 0 continuous
Cbc0038I Full problem 274 rows 275 columns, reduced to 139 rows 138 columns - 13 fixed gives 123, 122 - ok now
Cbc0038I Full problem 274 rows 275 columns, reduced to 94 rows 93 columns
Cbc0038I Mini branch and bound improved solution from -7.86973e+06 to -8.44618e+06 (0.09 seconds)
Cbc0038I Round again with cutoff of -8.45893e+06
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   5: suminf.    9.92336 (74) obj. -8.45893e+06 iterations 9
Cbc0038I Pass   6: suminf.    9.79247 (70) obj. -8.46868e+06 iterations 17
Cbc0038I Pass   7: suminf.    7.19073 (57) obj. -8.46388e+06 iterations 13
Cbc0038I Pass   8: suminf.    3.37870 (35) obj. -8.46046e+06 iterations 22
Cbc0038I Pass   9: suminf.    2.50871 (83) obj. -8.45893e+06 iterations 171
Cbc0038I Pass  10: suminf.    1.81876 (71) obj. -8.45893e+06 iterations 12
Cbc0038I Pass  11: suminf.    1.92388 (63) obj. -8.45893e+06 iterations 17
Cbc0038I Pass  12: suminf.    1.86671 (70) obj. -8.45893e+06 iterations 16
Cbc0038I Pass  13: suminf.   13.28980 (55) obj. -8.45893e+06 iterations 52
Cbc0038I Pass  14: suminf.    5.18554 (57) obj. -8.45893e+06 iterations 28
Cbc0038I Pass  15: suminf.    5.13831 (52) obj. -8.45893e+06 iterations 21
Cbc0038I Pass  16: suminf.    2.25771 (60) obj. -8.45893e+06 iterations 19
Cbc0038I Pass  17: suminf.    2.18788 (67) obj. -8.45893e+06 iterations 15
Cbc0038I Pass  18: suminf.   12.60483 (50) obj. -8.45893e+06 iterations 50
Cbc0038I Pass  19: suminf.    3.09305 (53) obj. -8.45893e+06 iterations 31
Cbc0038I Pass  20: suminf.    4.25841 (67) obj. -8.45893e+06 iterations 34
Cbc0038I Pass  21: suminf.    4.21604 (74) obj. -8.45893e+06 iterations 5
Cbc0038I Pass  22: suminf.    2.41531 (59) obj. -8.45893e+06 iterations 11
Cbc0038I Pass  23: suminf.    2.25151 (63) obj. -8.45893e+06 iterations 1
Cbc0038I Pass  24: suminf.    7.53988 (47) obj. -8.45893e+06 iterations 63
Cbc0038I Pass  25: suminf.    7.38218 (47) obj. -8.45893e+06 iterations 37
Cbc0038I Pass  26: suminf.    7.64659 (55) obj. -8.45893e+06 iterations 26
Cbc0038I Pass  27: suminf.    7.64659 (55) obj. -8.45893e+06 iterations 3
Cbc0038I Pass  28: suminf.    8.83888 (24) obj. -8.45893e+06 iterations 57
Cbc0038I Pass  29: suminf.   12.40549 (40) obj. -8.45893e+06 iterations 50
Cbc0038I Pass  30: suminf.    8.23695 (34) obj. -8.45893e+06 iterations 36
Cbc0038I Pass  31: suminf.    8.23695 (34) obj. -8.45893e+06 iterations 0
Cbc0038I Pass  32: suminf.    8.03055 (57) obj. -8.45893e+06 iterations 43
Cbc0038I Pass  33: suminf.    8.03055 (57) obj. -8.45893e+06 iterations 0
Cbc0038I Pass  34: suminf.    7.13033 (27) obj. -8.45893e+06 iterations 67
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 126 integers at bound fixed and 0 continuous
Cbc0038I Full problem 274 rows 275 columns, reduced to 148 rows 149 columns - 86 fixed gives 59, 63 - ok now
Cbc0038I Full problem 274 rows 275 columns, reduced to 48 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -8.44618e+06 - took 0.10 seconds
Cbc0012I Integer solution of -8446177.7 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 274 rows 275 columns, reduced to 139 rows 138 columns - 85 fixed gives 51, 53 - ok now
Cbc0038I Full problem 274 rows 275 columns, reduced to 4 rows 5 columns
Cbc0031I 106 added rows had average density of 33.528302
Cbc0013I At root node, 106 cuts changed objective from -8573694.3 to -8476135.7 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 2633 row cuts average 13.6 elements, 14 column cuts (14 active)  in 0.193 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 79.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 96 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 142 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 364 row cuts average 63.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 757 row cuts average 79.6 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8446177.7 best solution, best possible -8453023.9 (0.94 seconds)
Cbc0001I Search completed - best objective -8446177.699999999, took 850 iterations and 2 nodes (0.96 seconds)
Cbc0032I Strong branching done 84 times (2377 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       0.98

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 341 (-10) rows, 172 (-4) columns and 1020 (-23) elements
Clp1000I sum of infeasibilities 5.36839e-06 - average 1.57431e-08, 129 fixed columns
Coin0506I Presolve 82 (-259) rows, 43 (-129) columns and 244 (-776) elements
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Coin0511I After Postsolve, objective 8563256.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30425414 - largest nonzero change 0 ( 0%) - largest zero change 2.9727844e-05
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Clp0000I Optimal - objective value 8563256.5
Coin0511I After Postsolve, objective 8563256.5, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8563256.529 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 341 rows, 172 columns (171 integer (171 of which binary)) and 1020 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.571%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 15.3656
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.54979e+06 iterations 86
Cbc0038I Solution found of -5.54979e+06
Cbc0038I Relaxing continuous gives -5.54979e+06
Cbc0038I Rounding solution of -7.16307e+06 is better than previous of -5.54979e+06

Cbc0038I Before mini branch and bound, 129 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 172 columns, reduced to 82 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -7.16307e+06 to -8.44618e+06 (0.01 seconds)
Cbc0038I Round again with cutoff of -8.45789e+06
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    8.84262 (37) obj. -8.45789e+06 iterations 76
Cbc0038I Pass   3: suminf.    8.84262 (37) obj. -8.45789e+06 iterations 1
Cbc0038I Pass   4: suminf.    9.49487 (29) obj. -8.45789e+06 iterations 37
Cbc0038I Pass   5: suminf.   14.10358 (32) obj. -8.45789e+06 iterations 28
Cbc0038I Pass   6: suminf.   12.58639 (32) obj. -8.45789e+06 iterations 47
Cbc0038I Pass   7: suminf.   12.19650 (31) obj. -8.45789e+06 iterations 17
Cbc0038I Pass   8: suminf.   12.19442 (31) obj. -8.45789e+06 iterations 1
Cbc0038I Pass   9: suminf.   13.51904 (30) obj. -8.45789e+06 iterations 29
Cbc0038I Pass  10: suminf.    9.55609 (31) obj. -8.45789e+06 iterations 22
Cbc0038I Pass  11: suminf.    5.66856 (32) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  12: suminf.    5.66856 (32) obj. -8.45789e+06 iterations 1
Cbc0038I Pass  13: suminf.    8.86182 (23) obj. -8.45789e+06 iterations 51
Cbc0038I Pass  14: suminf.    8.40372 (19) obj. -8.45789e+06 iterations 19
Cbc0038I Pass  15: suminf.    8.03259 (19) obj. -8.45789e+06 iterations 55
Cbc0038I Pass  16: suminf.    8.03259 (19) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  17: suminf.    8.19148 (19) obj. -8.45789e+06 iterations 16
Cbc0038I Pass  18: suminf.    8.90247 (30) obj. -8.45789e+06 iterations 15
Cbc0038I Pass  19: suminf.    6.88836 (32) obj. -8.45789e+06 iterations 19
Cbc0038I Pass  20: suminf.    6.61784 (30) obj. -8.45789e+06 iterations 6
Cbc0038I Pass  21: suminf.    9.26904 (25) obj. -8.45789e+06 iterations 52
Cbc0038I Pass  22: suminf.    7.03384 (21) obj. -8.45789e+06 iterations 22
Cbc0038I Pass  23: suminf.    6.86091 (22) obj. -8.45789e+06 iterations 26
Cbc0038I Pass  24: suminf.    6.37834 (32) obj. -8.45789e+06 iterations 14
Cbc0038I Pass  25: suminf.    5.95991 (32) obj. -8.45789e+06 iterations 20
Cbc0038I Pass  26: suminf.    6.79748 (15) obj. -8.45789e+06 iterations 10
Cbc0038I Pass  27: suminf.    6.75758 (18) obj. -8.45789e+06 iterations 1
Cbc0038I Pass  28: suminf.    8.35181 (36) obj. -8.45789e+06 iterations 32
Cbc0038I Pass  29: suminf.    8.23910 (35) obj. -8.45789e+06 iterations 5
Cbc0038I Pass  30: suminf.    9.98537 (23) obj. -8.45789e+06 iterations 39
Cbc0038I Pass  31: suminf.    9.06926 (23) obj. -8.45789e+06 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 113 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 172 columns, reduced to 101 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -8.44618e+06 - took 0.03 seconds
Cbc0012I Integer solution of -8446177.7 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 341 rows 172 columns, reduced to 82 rows 43 columns
Cbc0031I 9 added rows had average density of 73.444444
Cbc0013I At root node, 9 cuts changed objective from -8563256.5 to -8450745.3 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 616 row cuts average 3.0 elements, 20 column cuts (20 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8446177.699999999, took 155 iterations and 0 nodes (0.11 seconds)
Cbc0032I Strong branching done 12 times (149 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 274 (-77) rows, 275 (-74) columns and 9496 (-6599) elements
Clp1000I sum of infeasibilities 0.0242141 - average 8.83727e-05, 155 fixed columns
Coin0506I Presolve 107 (-167) rows, 107 (-168) columns and 424 (-9072) elements
Clp0029I End of values pass after 107 iterations
Clp0014I Perturbing problem by 0.001% of 1.6835976 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 8335666.7
Clp0000I Optimal - objective value 8335666.7
Coin0511I After Postsolve, objective 8335666.7, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 7.5895433 - largest nonzero change 2.4063092e-05 ( 0.0018755579%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 8573794.6
Clp0000I Optimal - objective value 8573794.6
Clp0000I Optimal - objective value 8573794.6
Coin0511I After Postsolve, objective 8573794.6, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8573794.557 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.17

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 274 rows, 275 columns (275 integer (275 of which binary)) and 9496 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.043%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 138 integers unsatisfied sum - 30.7563
Cbc0038I Pass   1: suminf.   10.22633 (68) obj. -7.98218e+06 iterations 103
Cbc0038I Pass   2: suminf.   10.22633 (68) obj. -7.98218e+06 iterations 7
Cbc0038I Pass   3: suminf.    5.10521 (44) obj. -7.71288e+06 iterations 24
Cbc0038I Pass   4: suminf.    1.17188 (16) obj. -7.70305e+06 iterations 28
Cbc0038I Solution found of -7.698e+06
Cbc0038I Rounding solution of -7.86973e+06 is better than previous of -7.698e+06

Cbc0038I Before mini branch and bound, 137 integers at bound fixed and 0 continuous
Cbc0038I Full problem 274 rows 275 columns, reduced to 139 rows 138 columns - 13 fixed gives 123, 122 - ok now
Cbc0038I Full problem 274 rows 275 columns, reduced to 94 rows 93 columns
Cbc0038I Mini branch and bound improved solution from -7.86973e+06 to -8.44618e+06 (0.08 seconds)
Cbc0038I Round again with cutoff of -8.45893e+06
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   5: suminf.    9.92336 (74) obj. -8.45893e+06 iterations 9
Cbc0038I Pass   6: suminf.    9.79247 (70) obj. -8.46868e+06 iterations 17
Cbc0038I Pass   7: suminf.    7.19073 (57) obj. -8.46388e+06 iterations 13
Cbc0038I Pass   8: suminf.    3.37870 (35) obj. -8.46046e+06 iterations 22
Cbc0038I Pass   9: suminf.    2.50871 (83) obj. -8.45893e+06 iterations 171
Cbc0038I Pass  10: suminf.    1.81876 (71) obj. -8.45893e+06 iterations 12
Cbc0038I Pass  11: suminf.    1.92388 (63) obj. -8.45893e+06 iterations 17
Cbc0038I Pass  12: suminf.    1.86671 (70) obj. -8.45893e+06 iterations 16
Cbc0038I Pass  13: suminf.   13.28980 (55) obj. -8.45893e+06 iterations 52
Cbc0038I Pass  14: suminf.    5.18554 (57) obj. -8.45893e+06 iterations 28
Cbc0038I Pass  15: suminf.    5.13831 (52) obj. -8.45893e+06 iterations 21
Cbc0038I Pass  16: suminf.    2.25771 (60) obj. -8.45893e+06 iterations 19
Cbc0038I Pass  17: suminf.    2.18788 (67) obj. -8.45893e+06 iterations 15
Cbc0038I Pass  18: suminf.   12.60483 (50) obj. -8.45893e+06 iterations 50
Cbc0038I Pass  19: suminf.    3.09305 (53) obj. -8.45893e+06 iterations 31
Cbc0038I Pass  20: suminf.    4.25841 (67) obj. -8.45893e+06 iterations 34
Cbc0038I Pass  21: suminf.    4.21604 (74) obj. -8.45893e+06 iterations 5
Cbc0038I Pass  22: suminf.    2.41531 (59) obj. -8.45893e+06 iterations 11
Cbc0038I Pass  23: suminf.    2.25151 (63) obj. -8.45893e+06 iterations 1
Cbc0038I Pass  24: suminf.    7.53988 (47) obj. -8.45893e+06 iterations 63
Cbc0038I Pass  25: suminf.    7.38218 (47) obj. -8.45893e+06 iterations 37
Cbc0038I Pass  26: suminf.    7.64659 (55) obj. -8.45893e+06 iterations 26
Cbc0038I Pass  27: suminf.    7.64659 (55) obj. -8.45893e+06 iterations 3
Cbc0038I Pass  28: suminf.    8.83888 (24) obj. -8.45893e+06 iterations 57
Cbc0038I Pass  29: suminf.   12.40549 (40) obj. -8.45893e+06 iterations 50
Cbc0038I Pass  30: suminf.    8.23695 (34) obj. -8.45893e+06 iterations 36
Cbc0038I Pass  31: suminf.    8.23695 (34) obj. -8.45893e+06 iterations 0
Cbc0038I Pass  32: suminf.    8.03055 (57) obj. -8.45893e+06 iterations 43
Cbc0038I Pass  33: suminf.    8.03055 (57) obj. -8.45893e+06 iterations 0
Cbc0038I Pass  34: suminf.    7.13033 (27) obj. -8.45893e+06 iterations 67
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 126 integers at bound fixed and 0 continuous
Cbc0038I Full problem 274 rows 275 columns, reduced to 148 rows 149 columns - 86 fixed gives 59, 63 - ok now
Cbc0038I Full problem 274 rows 275 columns, reduced to 48 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -8.44618e+06 - took 0.10 seconds
Cbc0012I Integer solution of -8446177.7 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 274 rows 275 columns, reduced to 139 rows 138 columns - 85 fixed gives 51, 53 - ok now
Cbc0038I Full problem 274 rows 275 columns, reduced to 4 rows 5 columns
Cbc0031I 106 added rows had average density of 33.528302
Cbc0013I At root node, 106 cuts changed objective from -8573694.3 to -8476135.7 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 2633 row cuts average 13.6 elements, 14 column cuts (14 active)  in 0.194 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 79.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 96 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 142 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 364 row cuts average 63.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 757 row cuts average 79.6 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8446177.7 best solution, best possible -8453023.9 (0.94 seconds)
Cbc0001I Search completed - best objective -8446177.699999999, took 850 iterations and 2 nodes (0.96 seconds)
Cbc0032I Strong branching done 84 times (2377 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.93   (Wallclock seconds):       0.97

