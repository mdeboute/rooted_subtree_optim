Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 25 (-8) columns and 131 (-52) elements
Clp1000I sum of infeasibilities 6.50194e-06 - average 1.47771e-07, 21 fixed columns
Coin0506I Presolve 2 (-42) rows, 2 (-23) columns and 4 (-127) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 3025.6261
Clp0000I Optimal - objective value 3025.6261
Coin0511I After Postsolve, objective 3025.6261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3025.6261
Clp0000I Optimal - objective value 3025.6261
Clp0000I Optimal - objective value 3025.6261
Coin0511I After Postsolve, objective 3025.6261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3025.626144 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.600299
Cbc0038I Pass   1: suminf.    0.28013 (2) obj. -3001.08 iterations 3
Cbc0038I Solution found of -416.225
Cbc0038I Relaxing continuous gives -428.205
Cbc0038I Rounding solution of -1041.04 is better than previous of -428.205

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -1041.04 to -1574.65 (0.01 seconds)
Cbc0038I Round again with cutoff of -1719.74
Cbc0038I Pass   2: suminf.    0.28013 (2) obj. -3001.08 iterations 0
Cbc0038I Pass   3: suminf.    0.33166 (1) obj. -1719.74 iterations 4
Cbc0038I Pass   4: suminf.    0.23577 (1) obj. -1905.04 iterations 1
Cbc0038I Pass   5: suminf.    0.39275 (2) obj. -1719.74 iterations 9
Cbc0038I Pass   6: suminf.    0.39275 (2) obj. -1719.74 iterations 1
Cbc0038I Pass   7: suminf.    0.57841 (2) obj. -1935.01 iterations 1
Cbc0038I Pass   8: suminf.    1.55734 (5) obj. -1719.74 iterations 6
Cbc0038I Pass   9: suminf.    1.07993 (4) obj. -1719.74 iterations 2
Cbc0038I Pass  10: suminf.    0.52085 (2) obj. -1719.74 iterations 3
Cbc0038I Pass  11: suminf.    0.56486 (2) obj. -1770.77 iterations 1
Cbc0038I Pass  12: suminf.    0.34146 (1) obj. -1777.68 iterations 4
Cbc0038I Pass  13: suminf.    0.34146 (1) obj. -1777.68 iterations 1
Cbc0038I Pass  14: suminf.    0.37144 (1) obj. -1719.74 iterations 1
Cbc0038I Pass  15: suminf.    0.29174 (1) obj. -1719.74 iterations 7
Cbc0038I Pass  16: suminf.    0.29174 (1) obj. -1719.74 iterations 1
Cbc0038I Pass  17: suminf.    0.30081 (1) obj. -1737.28 iterations 1
Cbc0038I Pass  18: suminf.    1.45954 (4) obj. -1719.74 iterations 7
Cbc0038I Pass  19: suminf.    0.33708 (2) obj. -1719.74 iterations 3
Cbc0038I Pass  20: suminf.    0.22357 (1) obj. -1719.74 iterations 2
Cbc0038I Pass  21: suminf.    0.28455 (1) obj. -1837.58 iterations 1
Cbc0038I Pass  22: suminf.    0.45455 (3) obj. -1719.74 iterations 6
Cbc0038I Pass  23: suminf.    0.26811 (1) obj. -1719.74 iterations 3
Cbc0038I Pass  24: suminf.    0.29268 (1) obj. -1767.22 iterations 1
Cbc0038I Pass  25: suminf.    0.37398 (1) obj. -1854.03 iterations 2
Cbc0038I Pass  26: suminf.    0.30449 (1) obj. -1719.74 iterations 2
Cbc0038I Pass  27: suminf.    0.37398 (1) obj. -1854.03 iterations 1
Cbc0038I Pass  28: suminf.    0.37000 (3) obj. -1719.74 iterations 4
Cbc0038I Pass  29: suminf.    0.23991 (2) obj. -1719.74 iterations 1
Cbc0038I Pass  30: suminf.    0.60587 (2) obj. -2256.76 iterations 1
Cbc0038I Pass  31: suminf.    0.42222 (1) obj. -1992.08 iterations 1
Cbc0038I Rounding solution of -1610.28 is better than previous of -1574.65

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1610.28 to -2063.04 (0.01 seconds)
Cbc0038I Round again with cutoff of -2255.56
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.28013 (2) obj. -3001.08 iterations 0
Cbc0038I Pass  32: suminf.    0.53809 (2) obj. -2255.56 iterations 3
Cbc0038I Pass  33: suminf.    0.53809 (2) obj. -2255.56 iterations 0
Cbc0038I Pass  34: suminf.    0.35236 (1) obj. -2255.56 iterations 2
Cbc0038I Pass  35: suminf.    1.68191 (4) obj. -2255.56 iterations 11
Cbc0038I Pass  36: suminf.    0.47658 (3) obj. -2255.56 iterations 8
Cbc0038I Pass  37: suminf.    0.35263 (2) obj. -2255.56 iterations 3
Cbc0038I Pass  38: suminf.    0.38756 (2) obj. -2255.56 iterations 1
Cbc0038I Pass  39: suminf.    2.28277 (8) obj. -2255.56 iterations 7
Cbc0038I Pass  40: suminf.    0.70615 (3) obj. -2255.56 iterations 5
Cbc0038I Pass  41: suminf.    0.26655 (1) obj. -2255.56 iterations 4
Cbc0038I Pass  42: suminf.    0.30081 (1) obj. -2321.77 iterations 1
Cbc0038I Pass  43: suminf.    1.18593 (4) obj. -2255.56 iterations 7
Cbc0038I Pass  44: suminf.    0.80956 (3) obj. -2255.56 iterations 4
Cbc0038I Pass  45: suminf.    0.32400 (2) obj. -2255.56 iterations 5
Cbc0038I Pass  46: suminf.    0.32520 (1) obj. -2604.68 iterations 3
Cbc0038I Pass  47: suminf.    0.49414 (1) obj. -2255.56 iterations 1
Cbc0038I Pass  48: suminf.    2.24844 (6) obj. -2255.56 iterations 9
Cbc0038I Pass  49: suminf.    0.60560 (3) obj. -2255.56 iterations 8
Cbc0038I Pass  50: suminf.    0.60560 (3) obj. -2255.56 iterations 1
Cbc0038I Pass  51: suminf.    0.85896 (2) obj. -2255.56 iterations 2
Cbc0038I Pass  52: suminf.    0.85218 (2) obj. -2255.56 iterations 1
Cbc0038I Pass  53: suminf.    0.86721 (2) obj. -2272.98 iterations 1
Cbc0038I Pass  54: suminf.    0.86721 (2) obj. -2272.98 iterations 0
Cbc0038I Pass  55: suminf.    1.65812 (4) obj. -2255.56 iterations 8
Cbc0038I Pass  56: suminf.    0.97087 (3) obj. -2255.56 iterations 1
Cbc0038I Pass  57: suminf.    0.71163 (2) obj. -2255.56 iterations 2
Cbc0038I Pass  58: suminf.    0.84436 (2) obj. -2255.56 iterations 1
Cbc0038I Pass  59: suminf.    1.05472 (3) obj. -2255.56 iterations 6
Cbc0038I Pass  60: suminf.    0.75425 (2) obj. -2255.56 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2063.04 to -2111.42 (0.02 seconds)
Cbc0038I Round again with cutoff of -2486.58
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.28013 (2) obj. -3001.08 iterations 0
Cbc0038I Pass  61: suminf.    0.73286 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  62: suminf.    0.97211 (3) obj. -2486.58 iterations 8
Cbc0038I Pass  63: suminf.    0.97211 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  64: suminf.    0.74817 (2) obj. -2486.58 iterations 3
Cbc0038I Pass  65: suminf.    0.63080 (2) obj. -2734.51 iterations 1
Cbc0038I Pass  66: suminf.    0.72446 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  67: suminf.    0.72446 (2) obj. -2486.58 iterations 0
Cbc0038I Pass  68: suminf.    1.40254 (7) obj. -2486.58 iterations 5
Cbc0038I Pass  69: suminf.    1.18652 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  70: suminf.    0.73614 (2) obj. -2486.58 iterations 2
Cbc0038I Pass  71: suminf.    0.50743 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  72: suminf.    1.17453 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  73: suminf.    0.45599 (1) obj. -2486.58 iterations 5
Cbc0038I Pass  74: suminf.    0.47967 (1) obj. -2610.91 iterations 1
Cbc0038I Pass  75: suminf.    0.47967 (1) obj. -2610.91 iterations 2
Cbc0038I Pass  76: suminf.    0.47967 (1) obj. -2610.91 iterations 2
Cbc0038I Pass  77: suminf.    1.07126 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  78: suminf.    1.94736 (6) obj. -2486.58 iterations 7
Cbc0038I Pass  79: suminf.    0.89246 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  80: suminf.    0.86949 (2) obj. -2486.58 iterations 2
Cbc0038I Pass  81: suminf.    0.88216 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  82: suminf.    1.26871 (4) obj. -2486.58 iterations 4
Cbc0038I Pass  83: suminf.    0.50743 (2) obj. -2486.58 iterations 3
Cbc0038I Pass  84: suminf.    0.73614 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  85: suminf.    0.73202 (2) obj. -2486.58 iterations 2
Cbc0038I Pass  86: suminf.    0.45718 (2) obj. -2805.23 iterations 1
Cbc0038I Pass  87: suminf.    0.73202 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  88: suminf.    0.74813 (4) obj. -2486.58 iterations 3
Cbc0038I Pass  89: suminf.    0.65158 (2) obj. -2507.98 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2111.42 - took 0.02 seconds
Cbc0012I Integer solution of -2111.416 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 10 rows 7 columns
Cbc0031I 9 added rows had average density of 11.888889
Cbc0013I At root node, 9 cuts changed objective from -3025.6261 to -2222.4857 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 7.2 elements, 7 column cuts (7 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 376 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 133 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2111.416, took 1145 iterations and 6 nodes (0.13 seconds)
Cbc0032I Strong branching done 30 times (191 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-17) rows, 51 (-11) columns and 435 (-213) elements
Clp1000I sum of infeasibilities 7.57346e-08 - average 1.61137e-09, 49 fixed columns
Coin0506I Presolve 2 (-45) rows, 2 (-49) columns and 4 (-431) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 3000.6261
Clp0000I Optimal - objective value 3000.6261
Coin0511I After Postsolve, objective 3000.6261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1809243 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 3046.5364
Clp0000I Optimal - objective value 3046.5364
Clp0000I Optimal - objective value 3046.5364
Coin0511I After Postsolve, objective 3046.5364, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3046.536367 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 6 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.6663
Cbc0038I Pass   1: suminf.    0.32143 (1) obj. -1737.52 iterations 16
Cbc0038I Pass   2: suminf.    0.32143 (1) obj. -1737.52 iterations 2
Cbc0038I Solution found of -426.205
Cbc0038I Rounding solution of -428.205 is better than previous of -426.205

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -428.205 to -1887.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -1991.3
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.01035 (8) obj. -1991.3 iterations 3
Cbc0038I Pass   4: suminf.    0.78211 (9) obj. -1991.3 iterations 3
Cbc0038I Pass   5: suminf.    0.26015 (1) obj. -1991.3 iterations 10
Cbc0038I Pass   6: suminf.    0.40000 (1) obj. -2648.05 iterations 1
Cbc0038I Pass   7: suminf.    0.75579 (2) obj. -2639.43 iterations 5
Cbc0038I Pass   8: suminf.    0.75579 (2) obj. -2639.43 iterations 2
Cbc0038I Pass   9: suminf.    0.22532 (1) obj. -1991.3 iterations 2
Cbc0038I Pass  10: suminf.    0.44000 (1) obj. -2638.06 iterations 1
Cbc0038I Pass  11: suminf.    1.31350 (6) obj. -1991.3 iterations 12
Cbc0038I Pass  12: suminf.    1.09756 (5) obj. -1991.3 iterations 3
Cbc0038I Pass  13: suminf.    0.24995 (1) obj. -1991.3 iterations 4
Cbc0038I Pass  14: suminf.    0.44000 (1) obj. -2590.45 iterations 1
Cbc0038I Pass  15: suminf.    1.18701 (5) obj. -1991.3 iterations 5
Cbc0038I Pass  16: suminf.    0.90494 (4) obj. -1991.3 iterations 1
Cbc0038I Pass  17: suminf.    0.86000 (2) obj. -1991.3 iterations 3
Cbc0038I Pass  18: suminf.    0.24627 (2) obj. -1991.3 iterations 1
Cbc0038I Pass  19: suminf.    1.18303 (6) obj. -1991.3 iterations 9
Cbc0038I Pass  20: suminf.    1.18303 (6) obj. -1991.3 iterations 2
Cbc0038I Pass  21: suminf.    0.67925 (2) obj. -2479.31 iterations 5
Cbc0038I Pass  22: suminf.    0.39579 (1) obj. -1991.3 iterations 3
Cbc0038I Pass  23: suminf.    0.48000 (1) obj. -2231.32 iterations 1
Cbc0038I Pass  24: suminf.    1.74437 (8) obj. -1991.3 iterations 18
Cbc0038I Pass  25: suminf.    1.72570 (8) obj. -1991.3 iterations 1
Cbc0038I Pass  26: suminf.    0.68950 (3) obj. -1991.3 iterations 7
Cbc0038I Pass  27: suminf.    0.68950 (3) obj. -1991.3 iterations 1
Cbc0038I Pass  28: suminf.    0.79441 (3) obj. -1991.3 iterations 3
Cbc0038I Pass  29: suminf.    0.77920 (3) obj. -1991.3 iterations 1
Cbc0038I Pass  30: suminf.    0.54605 (2) obj. -1991.3 iterations 1
Cbc0038I Pass  31: suminf.    0.16667 (1) obj. -2054.11 iterations 2
Cbc0038I Pass  32: suminf.    0.54605 (2) obj. -1991.3 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -1887.23 to -2111.42 (0.04 seconds)
Cbc0038I Round again with cutoff of -2274.72
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.72468 (8) obj. -2274.72 iterations 0
Cbc0038I Pass  33: suminf.    1.72468 (8) obj. -2274.72 iterations 1
Cbc0038I Pass  34: suminf.    0.82305 (2) obj. -2274.72 iterations 7
Cbc0038I Pass  35: suminf.    0.40762 (2) obj. -2730.72 iterations 4
Cbc0038I Pass  36: suminf.    2.21791 (9) obj. -2274.72 iterations 20
Cbc0038I Pass  37: suminf.    2.20470 (9) obj. -2274.72 iterations 1
Cbc0038I Pass  38: suminf.    0.64417 (2) obj. -2274.72 iterations 7
Cbc0038I Pass  39: suminf.    0.30293 (1) obj. -2274.72 iterations 1
Cbc0038I Pass  40: suminf.    0.43089 (1) obj. -2522 iterations 1
Cbc0038I Pass  41: suminf.    1.20606 (4) obj. -2612.47 iterations 4
Cbc0038I Pass  42: suminf.    1.20606 (4) obj. -2612.47 iterations 0
Cbc0038I Pass  43: suminf.    0.33932 (1) obj. -2274.72 iterations 4
Cbc0038I Pass  44: suminf.    0.48780 (1) obj. -2608.8 iterations 1
Cbc0038I Pass  45: suminf.    1.44828 (6) obj. -2274.72 iterations 7
Cbc0038I Pass  46: suminf.    1.17510 (4) obj. -2274.72 iterations 2
Cbc0038I Pass  47: suminf.    0.85125 (2) obj. -2274.72 iterations 3
Cbc0038I Pass  48: suminf.    0.72780 (2) obj. -2274.72 iterations 1
Cbc0038I Pass  49: suminf.    1.88610 (7) obj. -2274.72 iterations 12
Cbc0038I Pass  50: suminf.    1.88610 (7) obj. -2274.72 iterations 1
Cbc0038I Pass  51: suminf.    0.47317 (2) obj. -2274.72 iterations 6
Cbc0038I Pass  52: suminf.    0.36836 (2) obj. -2274.72 iterations 1
Cbc0038I Pass  53: suminf.    1.59774 (6) obj. -2274.72 iterations 5
Cbc0038I Pass  54: suminf.    1.59774 (6) obj. -2274.72 iterations 0
Cbc0038I Pass  55: suminf.    0.68874 (2) obj. -2274.72 iterations 6
Cbc0038I Pass  56: suminf.    0.48000 (1) obj. -2510.21 iterations 2
Cbc0038I Pass  57: suminf.    0.39814 (1) obj. -2274.72 iterations 1
Cbc0038I Pass  58: suminf.    1.53605 (5) obj. -2274.72 iterations 8
Cbc0038I Pass  59: suminf.    1.53605 (5) obj. -2274.72 iterations 1
Cbc0038I Pass  60: suminf.    0.69675 (2) obj. -2274.72 iterations 3
Cbc0038I Pass  61: suminf.    0.32460 (2) obj. -2274.72 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2111.42 - took 0.03 seconds
Cbc0012I Integer solution of -2111.416 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 23 rows 23 columns
Cbc0031I 10 added rows had average density of 13.6
Cbc0013I At root node, 10 cuts changed objective from -2927.9305 to -2219.2282 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 616 row cuts average 4.0 elements, 14 column cuts (14 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 589 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 19 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 132 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.672 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2111.416 best solution, best possible -2219.2223 (1.34 seconds)
Cbc0001I Search completed - best objective -2111.416, took 1651 iterations and 4 nodes (1.50 seconds)
Cbc0032I Strong branching done 26 times (133 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 25 (-8) columns and 131 (-52) elements
Clp1000I sum of infeasibilities 6.50194e-06 - average 1.47771e-07, 21 fixed columns
Coin0506I Presolve 2 (-42) rows, 2 (-23) columns and 4 (-127) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 3025.6261
Clp0000I Optimal - objective value 3025.6261
Coin0511I After Postsolve, objective 3025.6261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3025.6261
Clp0000I Optimal - objective value 3025.6261
Clp0000I Optimal - objective value 3025.6261
Coin0511I After Postsolve, objective 3025.6261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3025.626144 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.600299
Cbc0038I Pass   1: suminf.    0.28013 (2) obj. -3001.08 iterations 3
Cbc0038I Solution found of -416.225
Cbc0038I Relaxing continuous gives -428.205
Cbc0038I Rounding solution of -1041.04 is better than previous of -428.205

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -1041.04 to -1574.65 (0.01 seconds)
Cbc0038I Round again with cutoff of -1719.74
Cbc0038I Pass   2: suminf.    0.28013 (2) obj. -3001.08 iterations 0
Cbc0038I Pass   3: suminf.    0.33166 (1) obj. -1719.74 iterations 4
Cbc0038I Pass   4: suminf.    0.23577 (1) obj. -1905.04 iterations 1
Cbc0038I Pass   5: suminf.    0.39275 (2) obj. -1719.74 iterations 9
Cbc0038I Pass   6: suminf.    0.39275 (2) obj. -1719.74 iterations 1
Cbc0038I Pass   7: suminf.    0.57841 (2) obj. -1935.01 iterations 1
Cbc0038I Pass   8: suminf.    1.55734 (5) obj. -1719.74 iterations 6
Cbc0038I Pass   9: suminf.    1.07993 (4) obj. -1719.74 iterations 2
Cbc0038I Pass  10: suminf.    0.52085 (2) obj. -1719.74 iterations 3
Cbc0038I Pass  11: suminf.    0.56486 (2) obj. -1770.77 iterations 1
Cbc0038I Pass  12: suminf.    0.34146 (1) obj. -1777.68 iterations 4
Cbc0038I Pass  13: suminf.    0.34146 (1) obj. -1777.68 iterations 1
Cbc0038I Pass  14: suminf.    0.37144 (1) obj. -1719.74 iterations 1
Cbc0038I Pass  15: suminf.    0.29174 (1) obj. -1719.74 iterations 7
Cbc0038I Pass  16: suminf.    0.29174 (1) obj. -1719.74 iterations 1
Cbc0038I Pass  17: suminf.    0.30081 (1) obj. -1737.28 iterations 1
Cbc0038I Pass  18: suminf.    1.45954 (4) obj. -1719.74 iterations 7
Cbc0038I Pass  19: suminf.    0.33708 (2) obj. -1719.74 iterations 3
Cbc0038I Pass  20: suminf.    0.22357 (1) obj. -1719.74 iterations 2
Cbc0038I Pass  21: suminf.    0.28455 (1) obj. -1837.58 iterations 1
Cbc0038I Pass  22: suminf.    0.45455 (3) obj. -1719.74 iterations 6
Cbc0038I Pass  23: suminf.    0.26811 (1) obj. -1719.74 iterations 3
Cbc0038I Pass  24: suminf.    0.29268 (1) obj. -1767.22 iterations 1
Cbc0038I Pass  25: suminf.    0.37398 (1) obj. -1854.03 iterations 2
Cbc0038I Pass  26: suminf.    0.30449 (1) obj. -1719.74 iterations 2
Cbc0038I Pass  27: suminf.    0.37398 (1) obj. -1854.03 iterations 1
Cbc0038I Pass  28: suminf.    0.37000 (3) obj. -1719.74 iterations 4
Cbc0038I Pass  29: suminf.    0.23991 (2) obj. -1719.74 iterations 1
Cbc0038I Pass  30: suminf.    0.60587 (2) obj. -2256.76 iterations 1
Cbc0038I Pass  31: suminf.    0.42222 (1) obj. -1992.08 iterations 1
Cbc0038I Rounding solution of -1610.28 is better than previous of -1574.65

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1610.28 to -2063.04 (0.01 seconds)
Cbc0038I Round again with cutoff of -2255.56
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.28013 (2) obj. -3001.08 iterations 0
Cbc0038I Pass  32: suminf.    0.53809 (2) obj. -2255.56 iterations 3
Cbc0038I Pass  33: suminf.    0.53809 (2) obj. -2255.56 iterations 0
Cbc0038I Pass  34: suminf.    0.35236 (1) obj. -2255.56 iterations 2
Cbc0038I Pass  35: suminf.    1.68191 (4) obj. -2255.56 iterations 11
Cbc0038I Pass  36: suminf.    0.47658 (3) obj. -2255.56 iterations 8
Cbc0038I Pass  37: suminf.    0.35263 (2) obj. -2255.56 iterations 3
Cbc0038I Pass  38: suminf.    0.38756 (2) obj. -2255.56 iterations 1
Cbc0038I Pass  39: suminf.    2.28277 (8) obj. -2255.56 iterations 7
Cbc0038I Pass  40: suminf.    0.70615 (3) obj. -2255.56 iterations 5
Cbc0038I Pass  41: suminf.    0.26655 (1) obj. -2255.56 iterations 4
Cbc0038I Pass  42: suminf.    0.30081 (1) obj. -2321.77 iterations 1
Cbc0038I Pass  43: suminf.    1.18593 (4) obj. -2255.56 iterations 7
Cbc0038I Pass  44: suminf.    0.80956 (3) obj. -2255.56 iterations 4
Cbc0038I Pass  45: suminf.    0.32400 (2) obj. -2255.56 iterations 5
Cbc0038I Pass  46: suminf.    0.32520 (1) obj. -2604.68 iterations 3
Cbc0038I Pass  47: suminf.    0.49414 (1) obj. -2255.56 iterations 1
Cbc0038I Pass  48: suminf.    2.24844 (6) obj. -2255.56 iterations 9
Cbc0038I Pass  49: suminf.    0.60560 (3) obj. -2255.56 iterations 8
Cbc0038I Pass  50: suminf.    0.60560 (3) obj. -2255.56 iterations 1
Cbc0038I Pass  51: suminf.    0.85896 (2) obj. -2255.56 iterations 2
Cbc0038I Pass  52: suminf.    0.85218 (2) obj. -2255.56 iterations 1
Cbc0038I Pass  53: suminf.    0.86721 (2) obj. -2272.98 iterations 1
Cbc0038I Pass  54: suminf.    0.86721 (2) obj. -2272.98 iterations 0
Cbc0038I Pass  55: suminf.    1.65812 (4) obj. -2255.56 iterations 8
Cbc0038I Pass  56: suminf.    0.97087 (3) obj. -2255.56 iterations 1
Cbc0038I Pass  57: suminf.    0.71163 (2) obj. -2255.56 iterations 2
Cbc0038I Pass  58: suminf.    0.84436 (2) obj. -2255.56 iterations 1
Cbc0038I Pass  59: suminf.    1.05472 (3) obj. -2255.56 iterations 6
Cbc0038I Pass  60: suminf.    0.75425 (2) obj. -2255.56 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2063.04 to -2111.42 (0.02 seconds)
Cbc0038I Round again with cutoff of -2486.58
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.28013 (2) obj. -3001.08 iterations 0
Cbc0038I Pass  61: suminf.    0.73286 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  62: suminf.    0.97211 (3) obj. -2486.58 iterations 8
Cbc0038I Pass  63: suminf.    0.97211 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  64: suminf.    0.74817 (2) obj. -2486.58 iterations 3
Cbc0038I Pass  65: suminf.    0.63080 (2) obj. -2734.51 iterations 1
Cbc0038I Pass  66: suminf.    0.72446 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  67: suminf.    0.72446 (2) obj. -2486.58 iterations 0
Cbc0038I Pass  68: suminf.    1.40254 (7) obj. -2486.58 iterations 5
Cbc0038I Pass  69: suminf.    1.18652 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  70: suminf.    0.73614 (2) obj. -2486.58 iterations 2
Cbc0038I Pass  71: suminf.    0.50743 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  72: suminf.    1.17453 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  73: suminf.    0.45599 (1) obj. -2486.58 iterations 5
Cbc0038I Pass  74: suminf.    0.47967 (1) obj. -2610.91 iterations 1
Cbc0038I Pass  75: suminf.    0.47967 (1) obj. -2610.91 iterations 2
Cbc0038I Pass  76: suminf.    0.47967 (1) obj. -2610.91 iterations 2
Cbc0038I Pass  77: suminf.    1.07126 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  78: suminf.    1.94736 (6) obj. -2486.58 iterations 7
Cbc0038I Pass  79: suminf.    0.89246 (3) obj. -2486.58 iterations 3
Cbc0038I Pass  80: suminf.    0.86949 (2) obj. -2486.58 iterations 2
Cbc0038I Pass  81: suminf.    0.88216 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  82: suminf.    1.26871 (4) obj. -2486.58 iterations 4
Cbc0038I Pass  83: suminf.    0.50743 (2) obj. -2486.58 iterations 3
Cbc0038I Pass  84: suminf.    0.73614 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  85: suminf.    0.73202 (2) obj. -2486.58 iterations 2
Cbc0038I Pass  86: suminf.    0.45718 (2) obj. -2805.23 iterations 1
Cbc0038I Pass  87: suminf.    0.73202 (2) obj. -2486.58 iterations 1
Cbc0038I Pass  88: suminf.    0.74813 (4) obj. -2486.58 iterations 3
Cbc0038I Pass  89: suminf.    0.65158 (2) obj. -2507.98 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2111.42 - took 0.02 seconds
Cbc0012I Integer solution of -2111.416 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 10 rows 7 columns
Cbc0031I 9 added rows had average density of 11.888889
Cbc0013I At root node, 9 cuts changed objective from -3025.6261 to -2222.4857 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 7.2 elements, 7 column cuts (7 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 376 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 133 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2111.416, took 1145 iterations and 6 nodes (0.14 seconds)
Cbc0032I Strong branching done 30 times (191 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 45 (-18) columns and 354 (-295) elements
Clp1000I sum of infeasibilities 1.83842e-06 - average 4.48394e-08, 43 fixed columns
Coin0506I Presolve 2 (-39) rows, 2 (-43) columns and 4 (-350) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 3000.6261
Clp0000I Optimal - objective value 3000.6261
Coin0511I After Postsolve, objective 3000.6261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2377272 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 3046.5364
Clp0000I Optimal - objective value 3046.5364
Clp0000I Optimal - objective value 3046.5364
Coin0511I After Postsolve, objective 3046.5364, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3046.536367 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.35256
Cbc0038I Pass   1: suminf.    0.23577 (1) obj. -1903.04 iterations 11
Cbc0038I Pass   2: suminf.    0.23577 (1) obj. -1903.04 iterations 1
Cbc0038I Solution found of -426.205
Cbc0038I Rounding solution of -428.205 is better than previous of -426.205

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -428.205 to -1574.65 (0.01 seconds)
Cbc0038I Round again with cutoff of -1720.54
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.23577 (1) obj. -1903.04 iterations 0
Cbc0038I Pass   4: suminf.    0.23577 (1) obj. -1903.04 iterations 1
Cbc0038I Pass   5: suminf.    0.33022 (1) obj. -1720.54 iterations 1
Cbc0038I Pass   6: suminf.    1.48250 (12) obj. -1720.54 iterations 9
Cbc0038I Pass   7: suminf.    1.30651 (11) obj. -1794.44 iterations 3
Cbc0038I Pass   8: suminf.    0.41171 (2) obj. -1720.54 iterations 15
Cbc0038I Pass   9: suminf.    0.41171 (2) obj. -1720.54 iterations 0
Cbc0038I Pass  10: suminf.    0.06265 (2) obj. -1720.54 iterations 2
Cbc0038I Pass  11: suminf.    0.47453 (2) obj. -2700.81 iterations 1
Cbc0038I Pass  12: suminf.    2.07297 (8) obj. -1720.54 iterations 17
Cbc0038I Pass  13: suminf.    2.07297 (8) obj. -1720.54 iterations 3
Cbc0038I Pass  14: suminf.    0.37398 (1) obj. -1894.62 iterations 9
Cbc0038I Pass  15: suminf.    0.46407 (1) obj. -1720.54 iterations 1
Cbc0038I Pass  16: suminf.    0.91440 (4) obj. -1720.54 iterations 8
Cbc0038I Pass  17: suminf.    0.91440 (4) obj. -1720.54 iterations 2
Cbc0038I Pass  18: suminf.    0.36117 (2) obj. -1720.54 iterations 4
Cbc0038I Pass  19: suminf.    0.65715 (2) obj. -1720.54 iterations 1
Cbc0038I Pass  20: suminf.    1.35444 (5) obj. -1720.54 iterations 11
Cbc0038I Pass  21: suminf.    1.29842 (5) obj. -1720.54 iterations 3
Cbc0038I Pass  22: suminf.    0.71653 (2) obj. -2065.21 iterations 4
Cbc0038I Pass  23: suminf.    0.47738 (2) obj. -1720.54 iterations 1
Cbc0038I Pass  24: suminf.    0.42522 (2) obj. -1720.54 iterations 1
Cbc0038I Pass  25: suminf.    0.42522 (2) obj. -1720.54 iterations 0
Cbc0038I Pass  26: suminf.    2.59509 (7) obj. -1720.54 iterations 18
Cbc0038I Pass  27: suminf.    2.10071 (7) obj. -1720.54 iterations 4
Cbc0038I Pass  28: suminf.    0.74123 (3) obj. -1720.54 iterations 4
Cbc0038I Pass  29: suminf.    0.31174 (2) obj. -2111.49 iterations 4
Cbc0038I Pass  30: suminf.    0.10495 (1) obj. -1720.54 iterations 2
Cbc0038I Pass  31: suminf.    2.13340 (7) obj. -1962.85 iterations 27
Cbc0038I Pass  32: suminf.    1.80690 (6) obj. -1868.33 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 26 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -1574.65 to -2063.04 (0.03 seconds)
Cbc0038I Round again with cutoff of -2257.14
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.06041 (8) obj. -2257.14 iterations 3
Cbc0038I Pass  33: suminf.    1.06041 (8) obj. -2257.14 iterations 1
Cbc0038I Pass  34: suminf.    0.35318 (1) obj. -2257.14 iterations 8
Cbc0038I Pass  35: suminf.    0.31504 (2) obj. -2926.31 iterations 2
Cbc0038I Pass  36: suminf.    0.55066 (2) obj. -2257.14 iterations 2
Cbc0038I Pass  37: suminf.    0.55066 (2) obj. -2257.14 iterations 0
Cbc0038I Pass  38: suminf.    0.64121 (3) obj. -2257.14 iterations 7
Cbc0038I Pass  39: suminf.    0.64121 (3) obj. -2257.14 iterations 2
Cbc0038I Pass  40: suminf.    0.64957 (2) obj. -2257.14 iterations 2
Cbc0038I Pass  41: suminf.    0.57231 (2) obj. -2257.14 iterations 1
Cbc0038I Pass  42: suminf.    0.88789 (3) obj. -2257.14 iterations 5
Cbc0038I Pass  43: suminf.    0.57576 (2) obj. -2257.14 iterations 1
Cbc0038I Pass  44: suminf.    0.65235 (2) obj. -2257.14 iterations 1
Cbc0038I Pass  45: suminf.    0.97994 (3) obj. -2257.14 iterations 16
Cbc0038I Pass  46: suminf.    0.64099 (2) obj. -2592.04 iterations 5
Cbc0038I Pass  47: suminf.    0.49780 (1) obj. -2257.14 iterations 2
Cbc0038I Pass  48: suminf.    0.32520 (1) obj. -2590.68 iterations 1
Cbc0038I Pass  49: suminf.    0.69440 (2) obj. -2407.68 iterations 5
Cbc0038I Pass  50: suminf.    0.58995 (2) obj. -2257.14 iterations 1
Cbc0038I Pass  51: suminf.    0.82423 (2) obj. -2257.14 iterations 1
Cbc0038I Pass  52: suminf.    1.52686 (5) obj. -2257.14 iterations 11
Cbc0038I Pass  53: suminf.    0.70901 (3) obj. -2257.14 iterations 4
Cbc0038I Pass  54: suminf.    0.62972 (2) obj. -2620.97 iterations 4
Cbc0038I Pass  55: suminf.    0.86950 (2) obj. -2257.14 iterations 1
Cbc0038I Pass  56: suminf.    0.86950 (2) obj. -2257.14 iterations 0
Cbc0038I Pass  57: suminf.    0.56427 (2) obj. -2257.14 iterations 1
Cbc0038I Pass  58: suminf.    2.78809 (11) obj. -2257.14 iterations 10
Cbc0038I Pass  59: suminf.    2.10305 (9) obj. -2257.14 iterations 5
Cbc0038I Pass  60: suminf.    0.77309 (2) obj. -2257.14 iterations 7
Cbc0038I Pass  61: suminf.    0.46630 (2) obj. -2257.14 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2063.04 - took 0.03 seconds
Cbc0012I Integer solution of -2063.0413 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 6 rows 7 columns
Cbc0031I 14 added rows had average density of 15.214286
Cbc0013I At root node, 14 cuts changed objective from -3033.547 to -2355.699 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2082 row cuts average 3.5 elements, 6 column cuts (6 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 655 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 66 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 135 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 7 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 274 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 307 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -2100.1257 found by rounding after 2308 iterations and 4 nodes (0.33 seconds)
Cbc0004I Integer solution of -2107.9664 found after 2323 iterations and 4 nodes (0.33 seconds)
Cbc0012I Integer solution of -2111.416 found by DiveCoefficient after 2404 iterations and 8 nodes (0.33 seconds)
Cbc0001I Search completed - best objective -2111.416, took 2404 iterations and 8 nodes (0.33 seconds)
Cbc0032I Strong branching done 122 times (1067 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.34

