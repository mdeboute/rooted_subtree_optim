Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 20 (-4) columns and 96 (-33) elements
Clp1000I sum of infeasibilities 7.14839e-06 - average 2.23387e-07, 4 fixed columns
Coin0506I Presolve 24 (-8) rows, 16 (-4) columns and 72 (-24) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 107.99323
Clp0000I Optimal - objective value 107.99323
Coin0511I After Postsolve, objective 107.99323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 107.99323
Clp0000I Optimal - objective value 107.99323
Clp0000I Optimal - objective value 107.99323
Coin0511I After Postsolve, objective 107.99323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.993233 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 20 columns (19 integer (19 of which binary)) and 97 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.85962
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -39.189 iterations 12
Cbc0038I Solution found of -39.189
Cbc0038I Relaxing continuous gives -39.189
Cbc0038I Rounding solution of -39.9668 is better than previous of -39.189

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -39.9668 to -71.8668 (0.01 seconds)
Cbc0038I Round again with cutoff of -75.3625
Cbc0038I Pass   2: suminf.    0.21331 (2) obj. -75.3625 iterations 2
Cbc0038I Pass   3: suminf.    0.10621 (2) obj. -75.3625 iterations 1
Cbc0038I Pass   4: suminf.    0.67718 (2) obj. -75.3625 iterations 1
Cbc0038I Pass   5: suminf.    0.57167 (3) obj. -75.3625 iterations 3
Cbc0038I Pass   6: suminf.    0.49668 (4) obj. -75.3625 iterations 3
Cbc0038I Pass   7: suminf.    0.54680 (2) obj. -75.3625 iterations 5
Cbc0038I Pass   8: suminf.    0.21331 (2) obj. -75.3625 iterations 4
Cbc0038I Pass   9: suminf.    0.10621 (2) obj. -75.3625 iterations 1
Cbc0038I Pass  10: suminf.    0.67718 (2) obj. -75.3625 iterations 1
Cbc0038I Pass  11: suminf.    0.35714 (1) obj. -75.3625 iterations 3
Cbc0038I Pass  12: suminf.    0.35714 (1) obj. -75.3625 iterations 1
Cbc0038I Pass  13: suminf.    0.30568 (1) obj. -75.3625 iterations 2
Cbc0038I Pass  14: suminf.    0.42857 (1) obj. -75.3625 iterations 1
Cbc0038I Pass  15: suminf.    0.69037 (2) obj. -75.3625 iterations 5
Cbc0038I Pass  16: suminf.    0.69037 (2) obj. -75.3625 iterations 1
Cbc0038I Pass  17: suminf.    0.14471 (2) obj. -75.3625 iterations 1
Cbc0038I Pass  18: suminf.    1.12621 (4) obj. -75.3625 iterations 3
Cbc0038I Pass  19: suminf.    0.30457 (1) obj. -75.3625 iterations 3
Cbc0038I Pass  20: suminf.    0.26992 (2) obj. -75.3625 iterations 2
Cbc0038I Pass  21: suminf.    0.58066 (3) obj. -75.3625 iterations 3
Cbc0038I Pass  22: suminf.    1.59455 (6) obj. -75.3625 iterations 8
Cbc0038I Pass  23: suminf.    1.28275 (4) obj. -75.3625 iterations 2
Cbc0038I Pass  24: suminf.    1.31318 (5) obj. -75.3625 iterations 4
Cbc0038I Pass  25: suminf.    0.71537 (4) obj. -75.3625 iterations 1
Cbc0038I Pass  26: suminf.    0.68328 (3) obj. -75.3625 iterations 2
Cbc0038I Pass  27: suminf.    0.30457 (1) obj. -75.3625 iterations 4
Cbc0038I Pass  28: suminf.    0.26992 (2) obj. -75.3625 iterations 2
Cbc0038I Pass  29: suminf.    0.58066 (3) obj. -75.3625 iterations 3
Cbc0038I Pass  30: suminf.    0.97756 (5) obj. -75.3625 iterations 5
Cbc0038I Pass  31: suminf.    0.69768 (3) obj. -75.3625 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -71.8668 - took 0.03 seconds
Cbc0012I Integer solution of -71.8668 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 32 rows 20 columns, reduced to 17 rows 12 columns
Cbc0031I 7 added rows had average density of 16.142857
Cbc0013I At root node, 7 cuts changed objective from -106.82254 to -82.248274 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 722 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 465 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -71.86679999999998, took 1376 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 42 times (285 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-12) rows, 40 (-4) columns and 287 (-73) elements
Clp1000I sum of infeasibilities 2.25998e-09 - average 6.64699e-11, 28 fixed columns
Coin0506I Presolve 9 (-25) rows, 12 (-28) columns and 37 (-250) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 84.010787
Clp0000I Optimal - objective value 84.010787
Coin0511I After Postsolve, objective 84.010787, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9349054 - largest nonzero change 0 ( 0%) - largest zero change 1.9083096e-05
Clp0000I Optimal - objective value 156.50569
Clp0000I Optimal - objective value 156.50569
Clp0000I Optimal - objective value 156.50569
Coin0511I After Postsolve, objective 156.50569, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 156.5056875 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 40 columns (40 integer (40 of which binary)) and 295 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 1.89523
Cbc0038I Pass   1: suminf.    1.21430 (8) obj. -105.767 iterations 5
Cbc0038I Solution found of -57.4334
Cbc0038I Rounding solution of -58.2112 is better than previous of -57.4334

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -63.8429
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.21430 (8) obj. -105.767 iterations 0
Cbc0038I Pass   3: suminf.    0.15379 (1) obj. -63.8429 iterations 9
Cbc0038I Pass   4: suminf.    0.23810 (1) obj. -67.3567 iterations 1
Cbc0038I Pass   5: suminf.    1.16387 (5) obj. -64.2255 iterations 13
Cbc0038I Pass   6: suminf.    0.77372 (5) obj. -64.9479 iterations 5
Cbc0038I Pass   7: suminf.    0.33153 (2) obj. -63.8429 iterations 9
Cbc0038I Pass   8: suminf.    0.33153 (2) obj. -63.8429 iterations 0
Cbc0038I Pass   9: suminf.    0.69688 (2) obj. -63.8429 iterations 1
Cbc0038I Pass  10: suminf.    0.36364 (2) obj. -77.9597 iterations 1
Cbc0038I Pass  11: suminf.    0.62626 (3) obj. -67.681 iterations 6
Cbc0038I Pass  12: suminf.    0.62626 (3) obj. -67.681 iterations 1
Cbc0038I Pass  13: suminf.    0.45234 (2) obj. -63.8429 iterations 3
Cbc0038I Pass  14: suminf.    0.45234 (2) obj. -63.8429 iterations 0
Cbc0038I Pass  15: suminf.    0.62606 (2) obj. -63.8429 iterations 1
Cbc0038I Pass  16: suminf.    0.36364 (2) obj. -74.9597 iterations 1
Cbc0038I Pass  17: suminf.    1.03333 (5) obj. -68.9461 iterations 7
Cbc0038I Pass  18: suminf.    1.03333 (5) obj. -68.9461 iterations 2
Cbc0038I Pass  19: suminf.    0.76838 (4) obj. -63.8429 iterations 6
Cbc0038I Pass  20: suminf.    1.30699 (4) obj. -63.8429 iterations 6
Cbc0038I Pass  21: suminf.    0.86450 (2) obj. -63.8429 iterations 2
Cbc0038I Pass  22: suminf.    0.61413 (2) obj. -76.3412 iterations 1
Cbc0038I Pass  23: suminf.    0.16667 (1) obj. -66.3557 iterations 1
Cbc0038I Pass  24: suminf.    0.38808 (2) obj. -63.8429 iterations 2
Cbc0038I Pass  25: suminf.    2.43138 (9) obj. -63.8429 iterations 10
Cbc0038I Pass  26: suminf.    1.77344 (9) obj. -63.8429 iterations 2
Cbc0038I Pass  27: suminf.    0.91390 (8) obj. -63.8429 iterations 2
Cbc0038I Pass  28: suminf.    0.38486 (2) obj. -63.8429 iterations 4
Cbc0038I Pass  29: suminf.    0.19048 (1) obj. -76.2335 iterations 3
Cbc0038I Pass  30: suminf.    0.36700 (1) obj. -63.8429 iterations 2
Cbc0038I Pass  31: suminf.    1.06491 (7) obj. -63.8429 iterations 10
Cbc0038I Rounding solution of -71.8668 is better than previous of -58.2112

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -80.3991
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.21430 (8) obj. -105.767 iterations 0
Cbc0038I Pass  32: suminf.    0.71289 (2) obj. -80.3991 iterations 10
Cbc0038I Pass  33: suminf.    0.28048 (2) obj. -80.3991 iterations 1
Cbc0038I Pass  34: suminf.    0.71289 (2) obj. -80.3991 iterations 2
Cbc0038I Pass  35: suminf.    1.04590 (4) obj. -80.3991 iterations 13
Cbc0038I Pass  36: suminf.    1.00511 (4) obj. -81.7174 iterations 1
Cbc0038I Pass  37: suminf.    1.16789 (6) obj. -80.3991 iterations 3
Cbc0038I Pass  38: suminf.    0.81299 (5) obj. -80.3991 iterations 1
Cbc0038I Pass  39: suminf.    1.09054 (4) obj. -80.3991 iterations 5
Cbc0038I Pass  40: suminf.    0.81219 (4) obj. -80.3991 iterations 1
Cbc0038I Pass  41: suminf.    2.84808 (9) obj. -80.3991 iterations 7
Cbc0038I Pass  42: suminf.    1.16937 (6) obj. -82.3681 iterations 3
Cbc0038I Pass  43: suminf.    1.09455 (6) obj. -80.3991 iterations 1
Cbc0038I Pass  44: suminf.    1.98098 (6) obj. -80.3991 iterations 6
Cbc0038I Pass  45: suminf.    1.59975 (7) obj. -80.3991 iterations 1
Cbc0038I Pass  46: suminf.    0.57215 (4) obj. -80.3991 iterations 10
Cbc0038I Pass  47: suminf.    0.54545 (3) obj. -80.6329 iterations 2
Cbc0038I Pass  48: suminf.    0.56884 (3) obj. -80.3991 iterations 3
Cbc0038I Pass  49: suminf.    1.40028 (6) obj. -80.3991 iterations 5
Cbc0038I Pass  50: suminf.    1.07403 (6) obj. -82.6828 iterations 2
Cbc0038I Pass  51: suminf.    0.65490 (4) obj. -80.3991 iterations 6
Cbc0038I Pass  52: suminf.    0.65490 (4) obj. -80.3991 iterations 2
Cbc0038I Pass  53: suminf.    0.94116 (4) obj. -80.3991 iterations 1
Cbc0038I Pass  54: suminf.    0.94116 (4) obj. -80.3991 iterations 0
Cbc0038I Pass  55: suminf.    0.65490 (4) obj. -80.3991 iterations 2
Cbc0038I Pass  56: suminf.    0.86458 (4) obj. -80.3991 iterations 4
Cbc0038I Pass  57: suminf.    0.66364 (4) obj. -81.8057 iterations 3
Cbc0038I Pass  58: suminf.    2.31567 (8) obj. -80.3991 iterations 5
Cbc0038I Pass  59: suminf.    0.86458 (4) obj. -80.3991 iterations 3
Cbc0038I Pass  60: suminf.    1.15297 (9) obj. -80.3991 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -71.8668 to -78.7223 (0.03 seconds)
Cbc0038I Round again with cutoff of -90.6377
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    1.21430 (8) obj. -105.767 iterations 0
Cbc0038I Pass  61: suminf.    0.82104 (3) obj. -90.6377 iterations 9
Cbc0038I Pass  62: suminf.    0.82104 (3) obj. -90.6377 iterations 0
Cbc0038I Pass  63: suminf.    0.75758 (3) obj. -90.6377 iterations 1
Cbc0038I Pass  64: suminf.    0.40119 (3) obj. -90.6377 iterations 1
Cbc0038I Pass  65: suminf.    0.82104 (3) obj. -90.6377 iterations 3
Cbc0038I Pass  66: suminf.    1.03201 (4) obj. -90.6377 iterations 5
Cbc0038I Pass  67: suminf.    0.72944 (3) obj. -92.986 iterations 2
Cbc0038I Pass  68: suminf.    0.96427 (3) obj. -90.6377 iterations 2
Cbc0038I Pass  69: suminf.    1.84407 (6) obj. -90.6377 iterations 8
Cbc0038I Pass  70: suminf.    1.84407 (6) obj. -90.6377 iterations 0
Cbc0038I Pass  71: suminf.    0.81419 (3) obj. -90.6377 iterations 9
Cbc0038I Pass  72: suminf.    0.40696 (3) obj. -90.6377 iterations 1
Cbc0038I Pass  73: suminf.    0.81419 (3) obj. -90.6377 iterations 3
Cbc0038I Pass  74: suminf.    0.89679 (5) obj. -90.6377 iterations 3
Cbc0038I Pass  75: suminf.    0.70858 (5) obj. -90.6377 iterations 4
Cbc0038I Pass  76: suminf.    0.60051 (4) obj. -90.6377 iterations 1
Cbc0038I Pass  77: suminf.    0.92999 (4) obj. -90.6377 iterations 1
Cbc0038I Pass  78: suminf.    0.92999 (4) obj. -90.6377 iterations 0
Cbc0038I Pass  79: suminf.    0.60051 (4) obj. -90.6377 iterations 2
Cbc0038I Pass  80: suminf.    0.59564 (5) obj. -90.6377 iterations 3
Cbc0038I Pass  81: suminf.    0.59006 (4) obj. -90.6377 iterations 1
Cbc0038I Pass  82: suminf.    0.74337 (4) obj. -90.6377 iterations 3
Cbc0038I Pass  83: suminf.    0.74337 (4) obj. -90.6377 iterations 0
Cbc0038I Pass  84: suminf.    1.02999 (4) obj. -90.6377 iterations 1
Cbc0038I Pass  85: suminf.    1.02999 (4) obj. -90.6377 iterations 0
Cbc0038I Pass  86: suminf.    0.74337 (4) obj. -90.6377 iterations 2
Cbc0038I Pass  87: suminf.    1.30061 (6) obj. -90.6377 iterations 6
Cbc0038I Pass  88: suminf.    0.81258 (5) obj. -90.6377 iterations 2
Cbc0038I Pass  89: suminf.    1.02999 (4) obj. -90.6377 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -78.7223 - took 0.03 seconds
Cbc0012I Integer solution of -78.72231 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 33 rows 40 columns, reduced to 17 rows 19 columns
Cbc0031I 16 added rows had average density of 6.125
Cbc0013I At root node, 16 cuts changed objective from -114.52784 to -79.06785 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 115 row cuts average 3.3 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0001I Search completed - best objective -78.72230999999999, took 128 iterations and 0 nodes (0.22 seconds)
Cbc0032I Strong branching done 2 times (10 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.22

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 20 (-4) columns and 96 (-33) elements
Clp1000I sum of infeasibilities 7.14839e-06 - average 2.23387e-07, 4 fixed columns
Coin0506I Presolve 24 (-8) rows, 16 (-4) columns and 72 (-24) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 107.99323
Clp0000I Optimal - objective value 107.99323
Coin0511I After Postsolve, objective 107.99323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 107.99323
Clp0000I Optimal - objective value 107.99323
Clp0000I Optimal - objective value 107.99323
Coin0511I After Postsolve, objective 107.99323, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.993233 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 20 columns (19 integer (19 of which binary)) and 97 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.85962
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -39.189 iterations 12
Cbc0038I Solution found of -39.189
Cbc0038I Relaxing continuous gives -39.189
Cbc0038I Rounding solution of -39.9668 is better than previous of -39.189

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -39.9668 to -71.8668 (0.01 seconds)
Cbc0038I Round again with cutoff of -75.3625
Cbc0038I Pass   2: suminf.    0.21331 (2) obj. -75.3625 iterations 2
Cbc0038I Pass   3: suminf.    0.10621 (2) obj. -75.3625 iterations 1
Cbc0038I Pass   4: suminf.    0.67718 (2) obj. -75.3625 iterations 1
Cbc0038I Pass   5: suminf.    0.57167 (3) obj. -75.3625 iterations 3
Cbc0038I Pass   6: suminf.    0.49668 (4) obj. -75.3625 iterations 3
Cbc0038I Pass   7: suminf.    0.54680 (2) obj. -75.3625 iterations 5
Cbc0038I Pass   8: suminf.    0.21331 (2) obj. -75.3625 iterations 4
Cbc0038I Pass   9: suminf.    0.10621 (2) obj. -75.3625 iterations 1
Cbc0038I Pass  10: suminf.    0.67718 (2) obj. -75.3625 iterations 1
Cbc0038I Pass  11: suminf.    0.35714 (1) obj. -75.3625 iterations 3
Cbc0038I Pass  12: suminf.    0.35714 (1) obj. -75.3625 iterations 1
Cbc0038I Pass  13: suminf.    0.30568 (1) obj. -75.3625 iterations 2
Cbc0038I Pass  14: suminf.    0.42857 (1) obj. -75.3625 iterations 1
Cbc0038I Pass  15: suminf.    0.69037 (2) obj. -75.3625 iterations 5
Cbc0038I Pass  16: suminf.    0.69037 (2) obj. -75.3625 iterations 1
Cbc0038I Pass  17: suminf.    0.14471 (2) obj. -75.3625 iterations 1
Cbc0038I Pass  18: suminf.    1.12621 (4) obj. -75.3625 iterations 3
Cbc0038I Pass  19: suminf.    0.30457 (1) obj. -75.3625 iterations 3
Cbc0038I Pass  20: suminf.    0.26992 (2) obj. -75.3625 iterations 2
Cbc0038I Pass  21: suminf.    0.58066 (3) obj. -75.3625 iterations 3
Cbc0038I Pass  22: suminf.    1.59455 (6) obj. -75.3625 iterations 8
Cbc0038I Pass  23: suminf.    1.28275 (4) obj. -75.3625 iterations 2
Cbc0038I Pass  24: suminf.    1.31318 (5) obj. -75.3625 iterations 4
Cbc0038I Pass  25: suminf.    0.71537 (4) obj. -75.3625 iterations 1
Cbc0038I Pass  26: suminf.    0.68328 (3) obj. -75.3625 iterations 2
Cbc0038I Pass  27: suminf.    0.30457 (1) obj. -75.3625 iterations 4
Cbc0038I Pass  28: suminf.    0.26992 (2) obj. -75.3625 iterations 2
Cbc0038I Pass  29: suminf.    0.58066 (3) obj. -75.3625 iterations 3
Cbc0038I Pass  30: suminf.    0.97756 (5) obj. -75.3625 iterations 5
Cbc0038I Pass  31: suminf.    0.69768 (3) obj. -75.3625 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 20 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -71.8668 - took 0.03 seconds
Cbc0012I Integer solution of -71.8668 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 32 rows 20 columns, reduced to 17 rows 12 columns
Cbc0031I 7 added rows had average density of 16.142857
Cbc0013I At root node, 7 cuts changed objective from -106.82254 to -82.248274 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 722 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 465 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -71.86679999999998, took 1376 iterations and 4 nodes (0.13 seconds)
Cbc0032I Strong branching done 42 times (285 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 1, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 38 (-7) columns and 245 (-116) elements
Clp1000I sum of infeasibilities 0 - average 0, 6 fixed columns
Coin0506I Presolve 27 (-5) rows, 32 (-6) columns and 168 (-77) elements
Clp0014I Perturbing problem by 0.001% of 3.4570563 - largest nonzero change 1.9765492e-05 ( 0.00094933281%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 125.3199
Clp0000I Optimal - objective value 125.3199
Coin0511I After Postsolve, objective 125.3199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 125.3199
Clp0000I Optimal - objective value 125.3199
Clp0000I Optimal - objective value 125.3199
Coin0511I After Postsolve, objective 125.3199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.3199028 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 38 columns (38 integer (38 of which binary)) and 250 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.485%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.05456
Cbc0038I Pass   1: suminf.    1.60210 (10) obj. -115.212 iterations 5
Cbc0038I Solution found of -59.2112
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 38 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -65.4385
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.60210 (10) obj. -115.212 iterations 0
Cbc0038I Pass   3: suminf.    0.14941 (1) obj. -65.4385 iterations 11
Cbc0038I Pass   4: suminf.    0.19048 (1) obj. -67.1498 iterations 1
Cbc0038I Pass   5: suminf.    0.73272 (3) obj. -65.4385 iterations 8
Cbc0038I Pass   6: suminf.    0.73272 (3) obj. -65.4385 iterations 0
Cbc0038I Pass   7: suminf.    0.72679 (2) obj. -65.4385 iterations 2
Cbc0038I Pass   8: suminf.    0.52764 (2) obj. -73.8898 iterations 1
Cbc0038I Pass   9: suminf.    0.57927 (2) obj. -65.4385 iterations 2
Cbc0038I Pass  10: suminf.    0.57927 (2) obj. -65.4385 iterations 0
Cbc0038I Pass  11: suminf.    0.88333 (5) obj. -65.4385 iterations 6
Cbc0038I Pass  12: suminf.    0.75440 (2) obj. -65.4385 iterations 6
Cbc0038I Pass  13: suminf.    0.41819 (2) obj. -65.4385 iterations 2
Cbc0038I Pass  14: suminf.    0.44942 (6) obj. -65.4385 iterations 11
Cbc0038I Pass  15: suminf.    0.39497 (2) obj. -65.4385 iterations 3
Cbc0038I Pass  16: suminf.    0.21053 (1) obj. -77.6721 iterations 3
Cbc0038I Pass  17: suminf.    0.35284 (4) obj. -65.4385 iterations 3
Cbc0038I Pass  18: suminf.    0.57286 (2) obj. -80.0001 iterations 5
Cbc0038I Pass  19: suminf.    0.21053 (1) obj. -66.161 iterations 1
Cbc0038I Pass  20: suminf.    0.58250 (2) obj. -65.4385 iterations 2
Cbc0038I Pass  21: suminf.    0.84369 (3) obj. -65.4385 iterations 4
Cbc0038I Pass  22: suminf.    0.56339 (3) obj. -73.2872 iterations 2
Cbc0038I Pass  23: suminf.    0.48128 (2) obj. -65.4385 iterations 4
Cbc0038I Pass  24: suminf.    0.48128 (2) obj. -65.4385 iterations 0
Cbc0038I Pass  25: suminf.    0.61298 (2) obj. -65.4385 iterations 1
Cbc0038I Pass  26: suminf.    1.48786 (6) obj. -65.4385 iterations 7
Cbc0038I Pass  27: suminf.    1.02999 (5) obj. -65.4385 iterations 3
Cbc0038I Pass  28: suminf.    0.64908 (2) obj. -65.4385 iterations 4
Cbc0038I Pass  29: suminf.    0.73038 (2) obj. -65.4385 iterations 1
Cbc0038I Pass  30: suminf.    0.80122 (6) obj. -69.9073 iterations 15
Cbc0038I Pass  31: suminf.    0.80122 (6) obj. -69.9073 iterations 1
Cbc0038I Rounding solution of -71.8668 is better than previous of -59.2112

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 38 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -81.7901
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.60210 (10) obj. -115.212 iterations 0
Cbc0038I Pass  32: suminf.    0.60092 (2) obj. -81.7901 iterations 12
Cbc0038I Pass  33: suminf.    0.31414 (2) obj. -81.7901 iterations 1
Cbc0038I Pass  34: suminf.    0.60092 (2) obj. -81.7901 iterations 2
Cbc0038I Pass  35: suminf.    1.18690 (8) obj. -81.7901 iterations 10
Cbc0038I Pass  36: suminf.    0.82228 (5) obj. -81.7901 iterations 1
Cbc0038I Pass  37: suminf.    0.90056 (3) obj. -81.7901 iterations 4
Cbc0038I Pass  38: suminf.    0.85844 (3) obj. -81.7901 iterations 1
Cbc0038I Pass  39: suminf.    1.01710 (3) obj. -81.7901 iterations 4
Cbc0038I Pass  40: suminf.    0.72357 (3) obj. -81.7901 iterations 1
Cbc0038I Pass  41: suminf.    1.74397 (9) obj. -81.7901 iterations 8
Cbc0038I Pass  42: suminf.    0.66514 (4) obj. -81.7901 iterations 5
Cbc0038I Pass  43: suminf.    0.75870 (3) obj. -81.7901 iterations 4
Cbc0038I Pass  44: suminf.    0.48053 (3) obj. -81.7901 iterations 1
Cbc0038I Pass  45: suminf.    0.85362 (4) obj. -81.7901 iterations 7
Cbc0038I Pass  46: suminf.    0.69863 (4) obj. -81.7901 iterations 3
Cbc0038I Pass  47: suminf.    1.03064 (4) obj. -81.7901 iterations 1
Cbc0038I Pass  48: suminf.    1.03064 (4) obj. -81.7901 iterations 0
Cbc0038I Pass  49: suminf.    0.69863 (4) obj. -81.7901 iterations 2
Cbc0038I Pass  50: suminf.    1.35314 (5) obj. -81.7901 iterations 8
Cbc0038I Pass  51: suminf.    1.35314 (5) obj. -81.7901 iterations 0
Cbc0038I Pass  52: suminf.    0.82414 (3) obj. -81.7901 iterations 4
Cbc0038I Pass  53: suminf.    0.81965 (3) obj. -81.9126 iterations 1
Cbc0038I Pass  54: suminf.    0.83191 (3) obj. -81.7901 iterations 2
Cbc0038I Pass  55: suminf.    1.07683 (8) obj. -81.7901 iterations 2
Cbc0038I Pass  56: suminf.    0.97812 (4) obj. -81.7901 iterations 7
Cbc0038I Pass  57: suminf.    0.69863 (4) obj. -81.7901 iterations 1
Cbc0038I Pass  58: suminf.    1.03064 (4) obj. -81.7901 iterations 1
Cbc0038I Pass  59: suminf.    1.03064 (4) obj. -81.7901 iterations 0
Cbc0038I Pass  60: suminf.    0.69863 (4) obj. -81.7901 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 38 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -71.8668 - took 0.02 seconds
Cbc0012I Integer solution of -71.8668 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 32 rows 38 columns, reduced to 8 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 7.1666667
Cbc0013I At root node, 11 cuts changed objective from -121.48282 to -71.615413 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 78 row cuts average 3.2 elements, 11 column cuts (11 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 34 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -71.86679999999998, took 41 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.07

