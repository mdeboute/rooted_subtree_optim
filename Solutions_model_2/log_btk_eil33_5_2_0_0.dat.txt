Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-8) rows, 33 (-2) columns and 180 (-15) elements
Clp1000I sum of infeasibilities 1.50901e-05 - average 2.47379e-07, 5 fixed columns
Coin0506I Presolve 38 (-23) rows, 26 (-7) columns and 121 (-59) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Coin0511I After Postsolve, objective 95.371008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Coin0511I After Postsolve, objective 95.371008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.37100818 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 33 columns (32 integer (32 of which binary)) and 187 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.42165
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.1926 iterations 24
Cbc0038I Solution found of -20.1926
Cbc0038I Relaxing continuous gives -20.1926
Cbc0038I Rounding solution of -25.3262 is better than previous of -20.1926

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -25.3262 to -41.1021 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.3274
Cbc0038I Pass   2: suminf.    0.83042 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   3: suminf.    0.56860 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   4: suminf.    0.56860 (2) obj. -46.3274 iterations 1
Cbc0038I Pass   5: suminf.    0.46064 (3) obj. -46.3274 iterations 7
Cbc0038I Pass   6: suminf.    0.32539 (3) obj. -46.3274 iterations 3
Cbc0038I Pass   7: suminf.    0.48667 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   8: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass   9: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  10: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  11: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  12: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  13: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  14: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  15: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  16: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  17: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  18: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  19: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  20: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  21: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  22: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  23: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  24: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  25: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  26: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  27: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  28: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  29: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  30: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  31: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Rounding solution of -42.1587 is better than previous of -41.1021

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -55.7326
Cbc0038I Pass  31: suminf.    1.29493 (6) obj. -55.7326 iterations 4
Cbc0038I Pass  32: suminf.    1.23569 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  33: suminf.    1.27526 (3) obj. -55.7326 iterations 4
Cbc0038I Pass  34: suminf.    0.97835 (4) obj. -55.7326 iterations 8
Cbc0038I Pass  35: suminf.    0.98646 (3) obj. -55.7326 iterations 8
Cbc0038I Pass  36: suminf.    0.54928 (3) obj. -55.7326 iterations 2
Cbc0038I Pass  37: suminf.    0.52913 (6) obj. -55.7326 iterations 3
Cbc0038I Pass  38: suminf.    1.69610 (5) obj. -55.7326 iterations 4
Cbc0038I Pass  39: suminf.    0.98541 (3) obj. -55.7326 iterations 9
Cbc0038I Pass  40: suminf.    2.17745 (7) obj. -55.7326 iterations 11
Cbc0038I Pass  41: suminf.    1.00256 (4) obj. -55.7326 iterations 3
Cbc0038I Pass  42: suminf.    0.71002 (3) obj. -55.7326 iterations 5
Cbc0038I Pass  43: suminf.    0.51822 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  44: suminf.    0.83301 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  45: suminf.    0.51961 (2) obj. -55.7326 iterations 1
Cbc0038I Pass  46: suminf.    0.57073 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  47: suminf.    0.49553 (2) obj. -55.7326 iterations 1
Cbc0038I Pass  48: suminf.    0.57986 (2) obj. -55.7326 iterations 3
Cbc0038I Pass  49: suminf.    0.77646 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  50: suminf.    1.29301 (6) obj. -55.7326 iterations 6
Cbc0038I Pass  51: suminf.    1.25656 (3) obj. -55.7326 iterations 4
Cbc0038I Pass  52: suminf.    0.93296 (3) obj. -55.7326 iterations 3
Cbc0038I Pass  53: suminf.    0.93296 (3) obj. -55.7326 iterations 2
Cbc0038I Pass  54: suminf.    1.04580 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  55: suminf.    1.04580 (3) obj. -55.7326 iterations 0
Cbc0038I Pass  56: suminf.    3.23698 (8) obj. -55.7326 iterations 15
Cbc0038I Pass  57: suminf.    0.72262 (3) obj. -55.7326 iterations 7
Cbc0038I Pass  58: suminf.    0.85485 (2) obj. -55.7326 iterations 4
Cbc0038I Pass  59: suminf.    0.65221 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  60: suminf.    0.63432 (2) obj. -55.7326 iterations 1
Cbc0038I Rounding solution of -57.5367 is better than previous of -42.1587

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -68.2818
Cbc0038I Pass  60: suminf.    1.95203 (8) obj. -68.2818 iterations 2
Cbc0038I Pass  61: suminf.    2.16670 (6) obj. -68.2818 iterations 12
Cbc0038I Pass  62: suminf.    2.14546 (7) obj. -68.2818 iterations 7
Cbc0038I Pass  63: suminf.    2.10783 (6) obj. -68.2818 iterations 9
Cbc0038I Pass  64: suminf.    1.78269 (5) obj. -68.2818 iterations 7
Cbc0038I Pass  65: suminf.    1.70868 (5) obj. -68.2818 iterations 3
Cbc0038I Pass  66: suminf.    2.19773 (7) obj. -68.2818 iterations 7
Cbc0038I Pass  67: suminf.    1.67106 (4) obj. -68.2818 iterations 2
Cbc0038I Pass  68: suminf.    1.62528 (4) obj. -68.2818 iterations 4
Cbc0038I Pass  69: suminf.    3.01962 (13) obj. -68.2818 iterations 16
Cbc0038I Pass  70: suminf.    2.34699 (11) obj. -68.2818 iterations 5
Cbc0038I Pass  71: suminf.    2.34699 (11) obj. -68.2818 iterations 0
Cbc0038I Pass  72: suminf.    1.97512 (7) obj. -68.2818 iterations 11
Cbc0038I Pass  73: suminf.    1.86376 (6) obj. -68.2818 iterations 2
Cbc0038I Pass  74: suminf.    1.61635 (4) obj. -68.2818 iterations 10
Cbc0038I Pass  75: suminf.    1.59790 (4) obj. -68.2818 iterations 3
Cbc0038I Pass  76: suminf.    2.16646 (7) obj. -68.2818 iterations 5
Cbc0038I Pass  77: suminf.    1.66954 (4) obj. -68.2818 iterations 2
Cbc0038I Pass  78: suminf.    2.60496 (12) obj. -68.2818 iterations 15
Cbc0038I Pass  79: suminf.    1.96993 (9) obj. -68.2818 iterations 5
Cbc0038I Pass  80: suminf.    1.91953 (9) obj. -68.2818 iterations 1
Cbc0038I Pass  81: suminf.    2.16526 (5) obj. -68.2818 iterations 9
Cbc0038I Pass  82: suminf.    1.84255 (5) obj. -68.2818 iterations 2
Cbc0038I Pass  83: suminf.    1.70931 (5) obj. -68.2818 iterations 2
Cbc0038I Pass  84: suminf.    1.21601 (3) obj. -68.2818 iterations 3
Cbc0038I Pass  85: suminf.    1.18953 (4) obj. -68.2818 iterations 3
Cbc0038I Pass  86: suminf.    1.18953 (4) obj. -68.2818 iterations 1
Cbc0038I Pass  87: suminf.    1.85634 (6) obj. -68.2818 iterations 4
Cbc0038I Pass  88: suminf.    2.25100 (7) obj. -68.2818 iterations 6
Cbc0038I Pass  89: suminf.    2.25100 (7) obj. -68.2818 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 40 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -57.5367 - took 0.10 seconds
Cbc0012I Integer solution of -57.536713 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 60 rows 33 columns, reduced to 36 rows 23 columns
Cbc0031I 14 added rows had average density of 20.928571
Cbc0013I At root node, 14 cuts changed objective from -93.353481 to -70.523938 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3071 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 871 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -57.53671300000001, took 2722 iterations and 8 nodes (0.28 seconds)
Cbc0032I Strong branching done 130 times (1840 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-12) rows, 59 (-7) columns and 565 (-158) elements
Clp1000I sum of infeasibilities 2.49766e-06 - average 4.46011e-08, 32 fixed columns
Coin0506I Presolve 25 (-31) rows, 27 (-32) columns and 99 (-466) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 1.8493923 - largest nonzero change 1.6378945e-05 ( 0.001262127%) - largest zero change 2.8246275e-05
Clp0000I Optimal - objective value 30.734751
Clp0000I Optimal - objective value 30.734751
Coin0511I After Postsolve, objective 30.734751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6484838 - largest nonzero change 0 ( 0%) - largest zero change 2.6547155e-05
Clp0000I Optimal - objective value 112.53954
Clp0000I Optimal - objective value 112.53954
Clp0000I Optimal - objective value 112.53954
Coin0511I After Postsolve, objective 112.53954, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.5395378 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 59 columns (59 integer (59 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.406%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 3.93894
Cbc0038I Pass   1: suminf.    1.27044 (14) obj. -68.5457 iterations 18
Cbc0038I Pass   2: suminf.    1.27044 (14) obj. -68.5457 iterations 1
Cbc0038I Solution found of -22.9324
Cbc0038I Rounding solution of -34.3557 is better than previous of -22.9324

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -40.3575
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.27044 (14) obj. -68.5457 iterations 0
Cbc0038I Pass   4: suminf.    1.27044 (14) obj. -68.5457 iterations 1
Cbc0038I Pass   5: suminf.    0.58228 (7) obj. -40.3575 iterations 29
Cbc0038I Pass   6: suminf.    0.31156 (2) obj. -40.3575 iterations 10
Cbc0038I Pass   7: suminf.    0.37955 (2) obj. -40.3575 iterations 1
Cbc0038I Pass   8: suminf.    0.97527 (5) obj. -40.3575 iterations 12
Cbc0038I Pass   9: suminf.    0.97527 (5) obj. -40.3575 iterations 0
Cbc0038I Pass  10: suminf.    1.18140 (3) obj. -40.3575 iterations 7
Cbc0038I Pass  11: suminf.    0.41334 (2) obj. -40.3575 iterations 5
Cbc0038I Pass  12: suminf.    0.16578 (2) obj. -45.0793 iterations 2
Cbc0038I Pass  13: suminf.    0.82083 (6) obj. -40.3575 iterations 6
Cbc0038I Pass  14: suminf.    0.49957 (2) obj. -40.3575 iterations 6
Cbc0038I Pass  15: suminf.    2.26598 (10) obj. -40.3575 iterations 21
Cbc0038I Pass  16: suminf.    1.10415 (7) obj. -40.3575 iterations 3
Cbc0038I Pass  17: suminf.    0.86413 (7) obj. -40.3575 iterations 3
Cbc0038I Pass  18: suminf.    1.20310 (5) obj. -40.3575 iterations 8
Cbc0038I Pass  19: suminf.    1.20310 (5) obj. -40.3575 iterations 1
Cbc0038I Pass  20: suminf.    0.70534 (3) obj. -40.3575 iterations 6
Cbc0038I Pass  21: suminf.    0.47244 (3) obj. -40.3575 iterations 8
Cbc0038I Pass  22: suminf.    0.50433 (3) obj. -40.3575 iterations 2
Cbc0038I Pass  23: suminf.    0.50433 (3) obj. -40.3575 iterations 1
Cbc0038I Pass  24: suminf.    0.47244 (3) obj. -40.3575 iterations 2
Cbc0038I Pass  25: suminf.    1.54203 (8) obj. -40.3575 iterations 16
Cbc0038I Pass  26: suminf.    1.54203 (8) obj. -40.3575 iterations 2
Cbc0038I Pass  27: suminf.    1.22763 (4) obj. -40.3575 iterations 6
Cbc0038I Pass  28: suminf.    0.72651 (4) obj. -40.3575 iterations 1
Cbc0038I Pass  29: suminf.    1.15193 (4) obj. -40.3575 iterations 2
Cbc0038I Pass  30: suminf.    1.14422 (4) obj. -40.3575 iterations 1
Cbc0038I Pass  31: suminf.    0.85950 (3) obj. -40.3575 iterations 2
Cbc0038I Pass  32: suminf.    0.66543 (3) obj. -42.6864 iterations 1
Cbc0038I Rounding solution of -36.8656 is better than previous of -34.3557

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 30 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -36.8656 to -42.1587 (0.05 seconds)
Cbc0038I Round again with cutoff of -52.6017
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.27044 (14) obj. -68.5457 iterations 0
Cbc0038I Pass  33: suminf.    1.27044 (14) obj. -68.5457 iterations 1
Cbc0038I Pass  34: suminf.    0.88394 (8) obj. -52.6017 iterations 26
Cbc0038I Pass  35: suminf.    0.51372 (3) obj. -52.6017 iterations 11
Cbc0038I Pass  36: suminf.    0.83862 (8) obj. -52.6017 iterations 8
Cbc0038I Pass  37: suminf.    0.62376 (3) obj. -52.6017 iterations 6
Cbc0038I Pass  38: suminf.    0.69837 (8) obj. -52.6017 iterations 5
Cbc0038I Pass  39: suminf.    3.07412 (17) obj. -52.6017 iterations 28
Cbc0038I Pass  40: suminf.    1.70274 (9) obj. -52.6017 iterations 7
Cbc0038I Pass  41: suminf.    1.98945 (6) obj. -52.6017 iterations 15
Cbc0038I Pass  42: suminf.    1.20171 (5) obj. -52.6017 iterations 3
Cbc0038I Pass  43: suminf.    1.20171 (5) obj. -52.6017 iterations 0
Cbc0038I Pass  44: suminf.    2.03163 (6) obj. -52.6017 iterations 9
Cbc0038I Pass  45: suminf.    1.43676 (5) obj. -52.6017 iterations 4
Cbc0038I Pass  46: suminf.    1.02037 (4) obj. -52.6017 iterations 3
Cbc0038I Pass  47: suminf.    0.95747 (5) obj. -52.6017 iterations 4
Cbc0038I Pass  48: suminf.    1.02037 (4) obj. -52.6017 iterations 1
Cbc0038I Pass  49: suminf.    1.66612 (9) obj. -52.6017 iterations 10
Cbc0038I Pass  50: suminf.    1.66612 (9) obj. -52.6017 iterations 0
Cbc0038I Pass  51: suminf.    1.25821 (5) obj. -52.6017 iterations 12
Cbc0038I Pass  52: suminf.    0.95284 (7) obj. -52.6017 iterations 2
Cbc0038I Pass  53: suminf.    0.88574 (6) obj. -52.6017 iterations 10
Cbc0038I Pass  54: suminf.    0.83737 (6) obj. -52.6017 iterations 5
Cbc0038I Pass  55: suminf.    2.14883 (7) obj. -52.6017 iterations 9
Cbc0038I Pass  56: suminf.    0.86093 (4) obj. -52.6017 iterations 6
Cbc0038I Pass  57: suminf.    1.21056 (4) obj. -52.6017 iterations 5
Cbc0038I Pass  58: suminf.    2.23887 (9) obj. -52.6017 iterations 19
Cbc0038I Pass  59: suminf.    1.81757 (8) obj. -52.748 iterations 3
Cbc0038I Pass  60: suminf.    2.50315 (9) obj. -52.6017 iterations 15
Cbc0038I Pass  61: suminf.    1.96565 (7) obj. -52.6017 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 42 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -42.1587 - took 0.05 seconds
Cbc0012I Integer solution of -42.158713 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 55 rows 59 columns, reduced to 22 rows 26 columns
Cbc0012I Integer solution of -57.536713 found by DiveCoefficient after 1061 iterations and 0 nodes (0.89 seconds)
Cbc0031I 31 added rows had average density of 9.5806452
Cbc0013I At root node, 31 cuts changed objective from -94.373154 to -57.536723 in 51 passes
Cbc0014I Cut generator 0 (Probing) - 1492 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 460 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 57 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 72 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 91 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 31.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.373 seconds - new frequency is 1
Cbc0001I Search completed - best objective -57.53671300000001, took 1061 iterations and 0 nodes (0.89 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.90

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-8) rows, 33 (-2) columns and 180 (-15) elements
Clp1000I sum of infeasibilities 1.50901e-05 - average 2.47379e-07, 5 fixed columns
Coin0506I Presolve 38 (-23) rows, 26 (-7) columns and 121 (-59) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Coin0511I After Postsolve, objective 95.371008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Clp0000I Optimal - objective value 95.371008
Coin0511I After Postsolve, objective 95.371008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.37100818 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 33 columns (32 integer (32 of which binary)) and 187 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.256%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.42165
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.1926 iterations 24
Cbc0038I Solution found of -20.1926
Cbc0038I Relaxing continuous gives -20.1926
Cbc0038I Rounding solution of -25.3262 is better than previous of -20.1926

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -25.3262 to -41.1021 (0.03 seconds)
Cbc0038I Round again with cutoff of -46.3274
Cbc0038I Pass   2: suminf.    0.83042 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   3: suminf.    0.56860 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   4: suminf.    0.56860 (2) obj. -46.3274 iterations 1
Cbc0038I Pass   5: suminf.    0.46064 (3) obj. -46.3274 iterations 7
Cbc0038I Pass   6: suminf.    0.32539 (3) obj. -46.3274 iterations 3
Cbc0038I Pass   7: suminf.    0.48667 (2) obj. -46.3274 iterations 2
Cbc0038I Pass   8: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass   9: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  10: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  11: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  12: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  13: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  14: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  15: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  16: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  17: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  18: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  19: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  20: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  21: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  22: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  23: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  24: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  25: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  26: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Pass  27: suminf.    0.48667 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  28: suminf.    0.43664 (2) obj. -46.3274 iterations 1
Cbc0038I Pass  29: suminf.    0.67762 (3) obj. -46.3274 iterations 3
Cbc0038I Pass  30: suminf.    0.98456 (3) obj. -46.3274 iterations 4
Cbc0038I Pass  31: suminf.    0.84380 (2) obj. -46.3274 iterations 2
Cbc0038I Rounding solution of -42.1587 is better than previous of -41.1021

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -55.7326
Cbc0038I Pass  31: suminf.    1.29493 (6) obj. -55.7326 iterations 4
Cbc0038I Pass  32: suminf.    1.23569 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  33: suminf.    1.27526 (3) obj. -55.7326 iterations 4
Cbc0038I Pass  34: suminf.    0.97835 (4) obj. -55.7326 iterations 8
Cbc0038I Pass  35: suminf.    0.98646 (3) obj. -55.7326 iterations 8
Cbc0038I Pass  36: suminf.    0.54928 (3) obj. -55.7326 iterations 2
Cbc0038I Pass  37: suminf.    0.52913 (6) obj. -55.7326 iterations 3
Cbc0038I Pass  38: suminf.    1.69610 (5) obj. -55.7326 iterations 4
Cbc0038I Pass  39: suminf.    0.98541 (3) obj. -55.7326 iterations 9
Cbc0038I Pass  40: suminf.    2.17745 (7) obj. -55.7326 iterations 11
Cbc0038I Pass  41: suminf.    1.00256 (4) obj. -55.7326 iterations 3
Cbc0038I Pass  42: suminf.    0.71002 (3) obj. -55.7326 iterations 5
Cbc0038I Pass  43: suminf.    0.51822 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  44: suminf.    0.83301 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  45: suminf.    0.51961 (2) obj. -55.7326 iterations 1
Cbc0038I Pass  46: suminf.    0.57073 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  47: suminf.    0.49553 (2) obj. -55.7326 iterations 1
Cbc0038I Pass  48: suminf.    0.57986 (2) obj. -55.7326 iterations 3
Cbc0038I Pass  49: suminf.    0.77646 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  50: suminf.    1.29301 (6) obj. -55.7326 iterations 6
Cbc0038I Pass  51: suminf.    1.25656 (3) obj. -55.7326 iterations 4
Cbc0038I Pass  52: suminf.    0.93296 (3) obj. -55.7326 iterations 3
Cbc0038I Pass  53: suminf.    0.93296 (3) obj. -55.7326 iterations 2
Cbc0038I Pass  54: suminf.    1.04580 (3) obj. -55.7326 iterations 6
Cbc0038I Pass  55: suminf.    1.04580 (3) obj. -55.7326 iterations 0
Cbc0038I Pass  56: suminf.    3.23698 (8) obj. -55.7326 iterations 15
Cbc0038I Pass  57: suminf.    0.72262 (3) obj. -55.7326 iterations 7
Cbc0038I Pass  58: suminf.    0.85485 (2) obj. -55.7326 iterations 4
Cbc0038I Pass  59: suminf.    0.65221 (2) obj. -55.7326 iterations 2
Cbc0038I Pass  60: suminf.    0.63432 (2) obj. -55.7326 iterations 1
Cbc0038I Rounding solution of -57.5367 is better than previous of -42.1587

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -68.2818
Cbc0038I Pass  60: suminf.    1.95203 (8) obj. -68.2818 iterations 2
Cbc0038I Pass  61: suminf.    2.16670 (6) obj. -68.2818 iterations 12
Cbc0038I Pass  62: suminf.    2.14546 (7) obj. -68.2818 iterations 7
Cbc0038I Pass  63: suminf.    2.10783 (6) obj. -68.2818 iterations 9
Cbc0038I Pass  64: suminf.    1.78269 (5) obj. -68.2818 iterations 7
Cbc0038I Pass  65: suminf.    1.70868 (5) obj. -68.2818 iterations 3
Cbc0038I Pass  66: suminf.    2.19773 (7) obj. -68.2818 iterations 7
Cbc0038I Pass  67: suminf.    1.67106 (4) obj. -68.2818 iterations 2
Cbc0038I Pass  68: suminf.    1.62528 (4) obj. -68.2818 iterations 4
Cbc0038I Pass  69: suminf.    3.01962 (13) obj. -68.2818 iterations 16
Cbc0038I Pass  70: suminf.    2.34699 (11) obj. -68.2818 iterations 5
Cbc0038I Pass  71: suminf.    2.34699 (11) obj. -68.2818 iterations 0
Cbc0038I Pass  72: suminf.    1.97512 (7) obj. -68.2818 iterations 11
Cbc0038I Pass  73: suminf.    1.86376 (6) obj. -68.2818 iterations 2
Cbc0038I Pass  74: suminf.    1.61635 (4) obj. -68.2818 iterations 10
Cbc0038I Pass  75: suminf.    1.59790 (4) obj. -68.2818 iterations 3
Cbc0038I Pass  76: suminf.    2.16646 (7) obj. -68.2818 iterations 5
Cbc0038I Pass  77: suminf.    1.66954 (4) obj. -68.2818 iterations 2
Cbc0038I Pass  78: suminf.    2.60496 (12) obj. -68.2818 iterations 15
Cbc0038I Pass  79: suminf.    1.96993 (9) obj. -68.2818 iterations 5
Cbc0038I Pass  80: suminf.    1.91953 (9) obj. -68.2818 iterations 1
Cbc0038I Pass  81: suminf.    2.16526 (5) obj. -68.2818 iterations 9
Cbc0038I Pass  82: suminf.    1.84255 (5) obj. -68.2818 iterations 2
Cbc0038I Pass  83: suminf.    1.70931 (5) obj. -68.2818 iterations 2
Cbc0038I Pass  84: suminf.    1.21601 (3) obj. -68.2818 iterations 3
Cbc0038I Pass  85: suminf.    1.18953 (4) obj. -68.2818 iterations 3
Cbc0038I Pass  86: suminf.    1.18953 (4) obj. -68.2818 iterations 1
Cbc0038I Pass  87: suminf.    1.85634 (6) obj. -68.2818 iterations 4
Cbc0038I Pass  88: suminf.    2.25100 (7) obj. -68.2818 iterations 6
Cbc0038I Pass  89: suminf.    2.25100 (7) obj. -68.2818 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 33 columns, reduced to 40 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -57.5367 - took 0.08 seconds
Cbc0012I Integer solution of -57.536713 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 60 rows 33 columns, reduced to 36 rows 23 columns
Cbc0031I 14 added rows had average density of 20.928571
Cbc0013I At root node, 14 cuts changed objective from -93.353481 to -70.523938 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3071 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 871 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -57.53671300000001, took 2722 iterations and 8 nodes (0.32 seconds)
Cbc0032I Strong branching done 130 times (1840 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 59 (-8) columns and 565 (-159) elements
Clp1000I sum of infeasibilities 2.49766e-06 - average 4.46011e-08, 32 fixed columns
Coin0506I Presolve 25 (-31) rows, 27 (-32) columns and 99 (-466) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 1.8493923 - largest nonzero change 1.6378945e-05 ( 0.001262127%) - largest zero change 2.8246275e-05
Clp0000I Optimal - objective value 30.734751
Clp0000I Optimal - objective value 30.734751
Coin0511I After Postsolve, objective 30.734751, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6484838 - largest nonzero change 0 ( 0%) - largest zero change 2.6547155e-05
Clp0000I Optimal - objective value 112.53954
Clp0000I Optimal - objective value 112.53954
Clp0000I Optimal - objective value 112.53954
Coin0511I After Postsolve, objective 112.53954, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.5395378 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 59 columns (59 integer (59 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.406%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 3.93894
Cbc0038I Pass   1: suminf.    1.27044 (14) obj. -68.5457 iterations 18
Cbc0038I Pass   2: suminf.    1.27044 (14) obj. -68.5457 iterations 1
Cbc0038I Solution found of -22.9324
Cbc0038I Rounding solution of -34.3557 is better than previous of -22.9324

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -40.3575
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.27044 (14) obj. -68.5457 iterations 0
Cbc0038I Pass   4: suminf.    1.27044 (14) obj. -68.5457 iterations 1
Cbc0038I Pass   5: suminf.    0.58228 (7) obj. -40.3575 iterations 29
Cbc0038I Pass   6: suminf.    0.31156 (2) obj. -40.3575 iterations 10
Cbc0038I Pass   7: suminf.    0.37955 (2) obj. -40.3575 iterations 1
Cbc0038I Pass   8: suminf.    0.97527 (5) obj. -40.3575 iterations 12
Cbc0038I Pass   9: suminf.    0.97527 (5) obj. -40.3575 iterations 0
Cbc0038I Pass  10: suminf.    1.18140 (3) obj. -40.3575 iterations 7
Cbc0038I Pass  11: suminf.    0.41334 (2) obj. -40.3575 iterations 5
Cbc0038I Pass  12: suminf.    0.16578 (2) obj. -45.0793 iterations 2
Cbc0038I Pass  13: suminf.    0.82083 (6) obj. -40.3575 iterations 6
Cbc0038I Pass  14: suminf.    0.49957 (2) obj. -40.3575 iterations 6
Cbc0038I Pass  15: suminf.    2.26598 (10) obj. -40.3575 iterations 21
Cbc0038I Pass  16: suminf.    1.10415 (7) obj. -40.3575 iterations 3
Cbc0038I Pass  17: suminf.    0.86413 (7) obj. -40.3575 iterations 3
Cbc0038I Pass  18: suminf.    1.20310 (5) obj. -40.3575 iterations 8
Cbc0038I Pass  19: suminf.    1.20310 (5) obj. -40.3575 iterations 1
Cbc0038I Pass  20: suminf.    0.70534 (3) obj. -40.3575 iterations 6
Cbc0038I Pass  21: suminf.    0.47244 (3) obj. -40.3575 iterations 8
Cbc0038I Pass  22: suminf.    0.50433 (3) obj. -40.3575 iterations 2
Cbc0038I Pass  23: suminf.    0.50433 (3) obj. -40.3575 iterations 1
Cbc0038I Pass  24: suminf.    0.47244 (3) obj. -40.3575 iterations 2
Cbc0038I Pass  25: suminf.    1.54203 (8) obj. -40.3575 iterations 16
Cbc0038I Pass  26: suminf.    1.54203 (8) obj. -40.3575 iterations 2
Cbc0038I Pass  27: suminf.    1.22763 (4) obj. -40.3575 iterations 6
Cbc0038I Pass  28: suminf.    0.72651 (4) obj. -40.3575 iterations 1
Cbc0038I Pass  29: suminf.    1.15193 (4) obj. -40.3575 iterations 2
Cbc0038I Pass  30: suminf.    1.14422 (4) obj. -40.3575 iterations 1
Cbc0038I Pass  31: suminf.    0.85950 (3) obj. -40.3575 iterations 2
Cbc0038I Pass  32: suminf.    0.66543 (3) obj. -42.6864 iterations 1
Cbc0038I Rounding solution of -36.8656 is better than previous of -34.3557

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 30 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -36.8656 to -42.1587 (0.05 seconds)
Cbc0038I Round again with cutoff of -52.6017
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.27044 (14) obj. -68.5457 iterations 0
Cbc0038I Pass  33: suminf.    1.27044 (14) obj. -68.5457 iterations 1
Cbc0038I Pass  34: suminf.    0.88394 (8) obj. -52.6017 iterations 26
Cbc0038I Pass  35: suminf.    0.51372 (3) obj. -52.6017 iterations 11
Cbc0038I Pass  36: suminf.    0.83862 (8) obj. -52.6017 iterations 8
Cbc0038I Pass  37: suminf.    0.62376 (3) obj. -52.6017 iterations 6
Cbc0038I Pass  38: suminf.    0.69837 (8) obj. -52.6017 iterations 5
Cbc0038I Pass  39: suminf.    3.07412 (17) obj. -52.6017 iterations 28
Cbc0038I Pass  40: suminf.    1.70274 (9) obj. -52.6017 iterations 7
Cbc0038I Pass  41: suminf.    1.98945 (6) obj. -52.6017 iterations 15
Cbc0038I Pass  42: suminf.    1.20171 (5) obj. -52.6017 iterations 3
Cbc0038I Pass  43: suminf.    1.20171 (5) obj. -52.6017 iterations 0
Cbc0038I Pass  44: suminf.    2.03163 (6) obj. -52.6017 iterations 9
Cbc0038I Pass  45: suminf.    1.43676 (5) obj. -52.6017 iterations 4
Cbc0038I Pass  46: suminf.    1.02037 (4) obj. -52.6017 iterations 3
Cbc0038I Pass  47: suminf.    0.95747 (5) obj. -52.6017 iterations 4
Cbc0038I Pass  48: suminf.    1.02037 (4) obj. -52.6017 iterations 1
Cbc0038I Pass  49: suminf.    1.66612 (9) obj. -52.6017 iterations 10
Cbc0038I Pass  50: suminf.    1.66612 (9) obj. -52.6017 iterations 0
Cbc0038I Pass  51: suminf.    1.25821 (5) obj. -52.6017 iterations 12
Cbc0038I Pass  52: suminf.    0.95284 (7) obj. -52.6017 iterations 2
Cbc0038I Pass  53: suminf.    0.88574 (6) obj. -52.6017 iterations 10
Cbc0038I Pass  54: suminf.    0.83737 (6) obj. -52.6017 iterations 5
Cbc0038I Pass  55: suminf.    2.14883 (7) obj. -52.6017 iterations 9
Cbc0038I Pass  56: suminf.    0.86093 (4) obj. -52.6017 iterations 6
Cbc0038I Pass  57: suminf.    1.21056 (4) obj. -52.6017 iterations 5
Cbc0038I Pass  58: suminf.    2.23887 (9) obj. -52.6017 iterations 19
Cbc0038I Pass  59: suminf.    1.81757 (8) obj. -52.748 iterations 3
Cbc0038I Pass  60: suminf.    2.50315 (9) obj. -52.6017 iterations 15
Cbc0038I Pass  61: suminf.    1.96565 (7) obj. -52.6017 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 42 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -42.1587 - took 0.05 seconds
Cbc0012I Integer solution of -42.158713 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 55 rows 59 columns, reduced to 22 rows 26 columns
Cbc0012I Integer solution of -57.536713 found by DiveCoefficient after 1061 iterations and 0 nodes (0.87 seconds)
Cbc0031I 31 added rows had average density of 9.5806452
Cbc0013I At root node, 31 cuts changed objective from -94.373154 to -57.536723 in 51 passes
Cbc0014I Cut generator 0 (Probing) - 1492 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 460 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 57 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 72 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 91 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 31.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.370 seconds - new frequency is 1
Cbc0001I Search completed - best objective -57.53671300000001, took 1061 iterations and 0 nodes (0.87 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.88

