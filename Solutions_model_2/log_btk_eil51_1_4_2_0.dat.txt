Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 280 (-23) elements
Clp1000I sum of infeasibilities 2.83955e-05 - average 3.05328e-07, 10 fixed columns
Coin0506I Presolve 74 (-19) rows, 41 (-10) columns and 222 (-58) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 41.810654
Clp0000I Optimal - objective value 41.810654
Coin0511I After Postsolve, objective 41.810654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.810654
Clp0000I Optimal - objective value 41.810654
Clp0000I Optimal - objective value 41.810654
Coin0511I After Postsolve, objective 41.810654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.81065389 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 280 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 9.43694
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.2219 iterations 28
Cbc0038I Solution found of 11.2219
Cbc0038I Relaxing continuous gives 11.2219
Cbc0038I Rounding solution of 2.96414 is better than previous of 11.2219

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 65 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 2.96414 to -8.0482 (0.04 seconds)
Cbc0038I Round again with cutoff of -11.4245
Cbc0038I Pass   2: suminf.    1.95547 (21) obj. -11.4245 iterations 26
Cbc0038I Pass   3: suminf.    1.80241 (31) obj. -11.4245 iterations 11
Cbc0038I Pass   4: suminf.    1.27078 (8) obj. -11.4245 iterations 48
Cbc0038I Pass   5: suminf.    1.04977 (8) obj. -11.4245 iterations 4
Cbc0038I Pass   6: suminf.    1.09130 (7) obj. -11.4245 iterations 9
Cbc0038I Pass   7: suminf.    1.08122 (7) obj. -11.4245 iterations 1
Cbc0038I Pass   8: suminf.    1.36697 (4) obj. -11.4245 iterations 10
Cbc0038I Pass   9: suminf.    1.36697 (4) obj. -11.4245 iterations 0
Cbc0038I Pass  10: suminf.    1.55759 (5) obj. -11.4245 iterations 5
Cbc0038I Pass  11: suminf.    0.65955 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  12: suminf.    0.65052 (5) obj. -11.4245 iterations 2
Cbc0038I Pass  13: suminf.    1.49166 (4) obj. -11.4245 iterations 6
Cbc0038I Pass  14: suminf.    1.49166 (4) obj. -11.4245 iterations 0
Cbc0038I Pass  15: suminf.    1.28022 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  16: suminf.    0.97142 (4) obj. -11.4245 iterations 3
Cbc0038I Pass  17: suminf.    0.94608 (3) obj. -11.4245 iterations 1
Cbc0038I Pass  18: suminf.    1.15015 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  19: suminf.    0.88621 (3) obj. -11.4245 iterations 2
Cbc0038I Pass  20: suminf.    1.56367 (5) obj. -11.4245 iterations 4
Cbc0038I Pass  21: suminf.    0.97142 (4) obj. -11.4245 iterations 1
Cbc0038I Pass  22: suminf.    0.94608 (3) obj. -11.4245 iterations 1
Cbc0038I Pass  23: suminf.    1.15015 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  24: suminf.    0.88621 (3) obj. -11.4245 iterations 2
Cbc0038I Pass  25: suminf.    1.56367 (5) obj. -11.4245 iterations 4
Cbc0038I Pass  26: suminf.    0.97142 (4) obj. -11.4245 iterations 1
Cbc0038I Pass  27: suminf.    0.94608 (3) obj. -11.4245 iterations 1
Cbc0038I Pass  28: suminf.    1.15015 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  29: suminf.    0.88621 (3) obj. -11.4245 iterations 2
Cbc0038I Pass  30: suminf.    1.56367 (5) obj. -11.4245 iterations 4
Cbc0038I Pass  31: suminf.    0.97142 (4) obj. -11.4245 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 67 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.0482 - took 0.06 seconds
Cbc0012I Integer solution of -8.0482 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 65 rows 36 columns
Cbc0031I 17 added rows had average density of 37.294118
Cbc0013I At root node, 17 cuts changed objective from -41.810654 to -31.183724 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6246 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1907 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8.048199999999994, took 6141 iterations and 36 nodes (0.67 seconds)
Cbc0032I Strong branching done 586 times (7864 iterations), fathomed 1 nodes and fixed 36 variables
Cbc0035I Maximum depth 9, 122 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-35) rows, 76 (-26) columns and 1007 (-571) elements
Clp1000I sum of infeasibilities 5.04571e-08 - average 7.31263e-10, 14 fixed columns
Coin0506I Presolve 56 (-13) rows, 62 (-14) columns and 713 (-294) elements
Clp0006I 0  Obj 40.988131 Dual inf 2.2864149 (62)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 4.9262425 - largest nonzero change 2.4275593e-05 ( 0.0013713985%) - largest zero change 2.9707923e-05
Clp0000I Optimal - objective value 54.336662
Clp0000I Optimal - objective value 54.336662
Coin0511I After Postsolve, objective 54.336662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.336662
Clp0000I Optimal - objective value 54.336662
Clp0000I Optimal - objective value 54.336662
Clp0000I Optimal - objective value 54.336662
Coin0511I After Postsolve, objective 54.336662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.33666155 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 84 columns (84 integer (84 of which binary)) and 1104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.136%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 6.42608
Cbc0038I Pass   1: suminf.    2.33197 (26) obj. -24.6773 iterations 14
Cbc0038I Pass   2: suminf.    2.33197 (26) obj. -24.6773 iterations 1
Cbc0038I Pass   3: suminf.    0.71140 (10) obj. 3.14603 iterations 16
Cbc0038I Solution found of 14.3059
Cbc0038I Rounding solution of 9.23831 is better than previous of 14.3059

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 84 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 9.23831 to -5.02857 (0.02 seconds)
Cbc0038I Round again with cutoff of -9.24081
Cbc0038I Pass   4: suminf.    2.33197 (26) obj. -24.6773 iterations 0
Cbc0038I Pass   5: suminf.    2.33197 (26) obj. -24.6773 iterations 1
Cbc0038I Pass   6: suminf.    1.77300 (13) obj. -9.24081 iterations 23
Cbc0038I Pass   7: suminf.    1.27811 (11) obj. -10.4451 iterations 4
Cbc0038I Pass   8: suminf.    0.38429 (6) obj. -9.24081 iterations 19
Cbc0038I Pass   9: suminf.    0.38429 (6) obj. -9.24081 iterations 0
Cbc0038I Pass  10: suminf.    0.39825 (1) obj. -9.24081 iterations 10
Cbc0038I Pass  11: suminf.    0.15909 (1) obj. -10.9149 iterations 3
Cbc0038I Pass  12: suminf.    0.39825 (1) obj. -9.24081 iterations 2
Cbc0038I Pass  13: suminf.    1.67667 (11) obj. -9.24081 iterations 24
Cbc0038I Pass  14: suminf.    1.28720 (8) obj. -9.24081 iterations 13
Cbc0038I Pass  15: suminf.    1.12829 (4) obj. -9.24081 iterations 7
Cbc0038I Pass  16: suminf.    1.12829 (4) obj. -9.24081 iterations 0
Cbc0038I Pass  17: suminf.    0.71220 (3) obj. -9.24081 iterations 5
Cbc0038I Pass  18: suminf.    0.40275 (3) obj. -11.6558 iterations 2
Cbc0038I Pass  19: suminf.    0.97566 (4) obj. -9.24081 iterations 7
Cbc0038I Pass  20: suminf.    0.76035 (3) obj. -9.24081 iterations 6
Cbc0038I Pass  21: suminf.    0.71933 (4) obj. -9.24081 iterations 4
Cbc0038I Pass  22: suminf.    0.70988 (4) obj. -9.24081 iterations 1
Cbc0038I Pass  23: suminf.    0.50623 (3) obj. -9.24081 iterations 5
Cbc0038I Pass  24: suminf.    0.50623 (3) obj. -9.24081 iterations 0
Cbc0038I Pass  25: suminf.    1.99717 (13) obj. -9.24081 iterations 21
Cbc0038I Pass  26: suminf.    1.95958 (10) obj. -9.24081 iterations 4
Cbc0038I Pass  27: suminf.    0.94518 (6) obj. -9.24081 iterations 25
Cbc0038I Pass  28: suminf.    0.94518 (6) obj. -9.24081 iterations 0
Cbc0038I Pass  29: suminf.    1.24235 (7) obj. -9.24081 iterations 14
Cbc0038I Pass  30: suminf.    0.88986 (7) obj. -9.24081 iterations 1
Cbc0038I Pass  31: suminf.    0.94518 (6) obj. -9.24081 iterations 9
Cbc0038I Pass  32: suminf.    2.53109 (12) obj. -9.24081 iterations 34
Cbc0038I Pass  33: suminf.    2.09944 (13) obj. -9.24081 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 84 columns, reduced to 46 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -5.02857 to -6.68908 (0.07 seconds)
Cbc0038I Round again with cutoff of -16.8227
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.33197 (26) obj. -24.6773 iterations 0
Cbc0038I Pass  34: suminf.    2.33197 (26) obj. -24.6773 iterations 1
Cbc0038I Pass  35: suminf.    1.75620 (12) obj. -16.8227 iterations 24
Cbc0038I Pass  36: suminf.    1.69213 (11) obj. -17.6055 iterations 4
Cbc0038I Pass  37: suminf.    0.79201 (5) obj. -16.8227 iterations 17
Cbc0038I Pass  38: suminf.    0.77576 (4) obj. -17.2649 iterations 5
Cbc0038I Pass  39: suminf.    0.68216 (3) obj. -16.8227 iterations 14
Cbc0038I Pass  40: suminf.    0.50322 (3) obj. -17.5384 iterations 5
Cbc0038I Pass  41: suminf.    2.51598 (14) obj. -16.8227 iterations 17
Cbc0038I Pass  42: suminf.    2.51598 (14) obj. -16.8227 iterations 2
Cbc0038I Pass  43: suminf.    0.78844 (5) obj. -16.8227 iterations 12
Cbc0038I Pass  44: suminf.    0.78844 (5) obj. -16.8227 iterations 3
Cbc0038I Pass  45: suminf.    0.97903 (4) obj. -16.8227 iterations 6
Cbc0038I Pass  46: suminf.    0.69072 (4) obj. -17.9759 iterations 4
Cbc0038I Pass  47: suminf.    0.93129 (4) obj. -16.8227 iterations 6
Cbc0038I Pass  48: suminf.    0.93129 (4) obj. -16.8227 iterations 0
Cbc0038I Pass  49: suminf.    2.05759 (11) obj. -16.8227 iterations 21
Cbc0038I Pass  50: suminf.    2.02269 (9) obj. -16.8227 iterations 3
Cbc0038I Pass  51: suminf.    1.14849 (7) obj. -16.8227 iterations 17
Cbc0038I Pass  52: suminf.    0.88258 (8) obj. -16.8227 iterations 7
Cbc0038I Pass  53: suminf.    1.69802 (8) obj. -16.8227 iterations 8
Cbc0038I Pass  54: suminf.    1.64245 (7) obj. -16.8227 iterations 5
Cbc0038I Pass  55: suminf.    1.84682 (8) obj. -16.8227 iterations 6
Cbc0038I Pass  56: suminf.    1.12264 (5) obj. -16.8227 iterations 6
Cbc0038I Pass  57: suminf.    1.07549 (5) obj. -16.8227 iterations 1
Cbc0038I Pass  58: suminf.    1.65727 (6) obj. -16.8227 iterations 4
Cbc0038I Pass  59: suminf.    1.09315 (5) obj. -16.9406 iterations 2
Cbc0038I Pass  60: suminf.    3.45322 (15) obj. -16.8227 iterations 15
Cbc0038I Pass  61: suminf.    1.89759 (10) obj. -16.8227 iterations 6
Cbc0038I Pass  62: suminf.    1.38003 (7) obj. -16.8227 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 84 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -6.68908 - took 0.08 seconds
Cbc0012I Integer solution of -6.6890808 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 77 rows 84 columns, reduced to 32 rows 39 columns
Cbc0031I 44 added rows had average density of 37.340909
Cbc0013I At root node, 44 cuts changed objective from -47.150081 to -15.600383 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14672 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1784 row cuts average 78.5 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 125 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1214 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 413 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.6890808 best solution, best possible -15.600383 (2.39 seconds)
Cbc0004I Integer solution of -7.0482 found after 5505 iterations and 13 nodes (2.70 seconds)
Cbc0012I Integer solution of -8.0482 found by rounding after 5860 iterations and 27 nodes (2.75 seconds)
Cbc0001I Search completed - best objective -8.048199999999994, took 6332 iterations and 40 nodes (2.77 seconds)
Cbc0032I Strong branching done 560 times (8647 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 14, 113 variables fixed on reduced cost
Total time (CPU seconds):       1.97   (Wallclock seconds):       2.78

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 280 (-23) elements
Clp1000I sum of infeasibilities 2.83955e-05 - average 3.05328e-07, 10 fixed columns
Coin0506I Presolve 74 (-19) rows, 41 (-10) columns and 222 (-58) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 41.810654
Clp0000I Optimal - objective value 41.810654
Coin0511I After Postsolve, objective 41.810654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.810654
Clp0000I Optimal - objective value 41.810654
Clp0000I Optimal - objective value 41.810654
Coin0511I After Postsolve, objective 41.810654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.81065389 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 280 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 9.43694
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.2219 iterations 28
Cbc0038I Solution found of 11.2219
Cbc0038I Relaxing continuous gives 11.2219
Cbc0038I Rounding solution of 2.96414 is better than previous of 11.2219

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 65 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 2.96414 to -8.0482 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.4245
Cbc0038I Pass   2: suminf.    1.95547 (21) obj. -11.4245 iterations 26
Cbc0038I Pass   3: suminf.    1.80241 (31) obj. -11.4245 iterations 11
Cbc0038I Pass   4: suminf.    1.27078 (8) obj. -11.4245 iterations 48
Cbc0038I Pass   5: suminf.    1.04977 (8) obj. -11.4245 iterations 4
Cbc0038I Pass   6: suminf.    1.09130 (7) obj. -11.4245 iterations 9
Cbc0038I Pass   7: suminf.    1.08122 (7) obj. -11.4245 iterations 1
Cbc0038I Pass   8: suminf.    1.36697 (4) obj. -11.4245 iterations 10
Cbc0038I Pass   9: suminf.    1.36697 (4) obj. -11.4245 iterations 0
Cbc0038I Pass  10: suminf.    1.55759 (5) obj. -11.4245 iterations 5
Cbc0038I Pass  11: suminf.    0.65955 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  12: suminf.    0.65052 (5) obj. -11.4245 iterations 2
Cbc0038I Pass  13: suminf.    1.49166 (4) obj. -11.4245 iterations 6
Cbc0038I Pass  14: suminf.    1.49166 (4) obj. -11.4245 iterations 0
Cbc0038I Pass  15: suminf.    1.28022 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  16: suminf.    0.97142 (4) obj. -11.4245 iterations 3
Cbc0038I Pass  17: suminf.    0.94608 (3) obj. -11.4245 iterations 1
Cbc0038I Pass  18: suminf.    1.15015 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  19: suminf.    0.88621 (3) obj. -11.4245 iterations 2
Cbc0038I Pass  20: suminf.    1.56367 (5) obj. -11.4245 iterations 4
Cbc0038I Pass  21: suminf.    0.97142 (4) obj. -11.4245 iterations 1
Cbc0038I Pass  22: suminf.    0.94608 (3) obj. -11.4245 iterations 1
Cbc0038I Pass  23: suminf.    1.15015 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  24: suminf.    0.88621 (3) obj. -11.4245 iterations 2
Cbc0038I Pass  25: suminf.    1.56367 (5) obj. -11.4245 iterations 4
Cbc0038I Pass  26: suminf.    0.97142 (4) obj. -11.4245 iterations 1
Cbc0038I Pass  27: suminf.    0.94608 (3) obj. -11.4245 iterations 1
Cbc0038I Pass  28: suminf.    1.15015 (4) obj. -11.4245 iterations 2
Cbc0038I Pass  29: suminf.    0.88621 (3) obj. -11.4245 iterations 2
Cbc0038I Pass  30: suminf.    1.56367 (5) obj. -11.4245 iterations 4
Cbc0038I Pass  31: suminf.    0.97142 (4) obj. -11.4245 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 67 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.0482 - took 0.06 seconds
Cbc0012I Integer solution of -8.0482 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 65 rows 36 columns
Cbc0031I 17 added rows had average density of 37.294118
Cbc0013I At root node, 17 cuts changed objective from -41.810654 to -31.183724 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6246 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1907 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8.048199999999994, took 6141 iterations and 36 nodes (0.68 seconds)
Cbc0032I Strong branching done 586 times (7864 iterations), fathomed 1 nodes and fixed 36 variables
Cbc0035I Maximum depth 9, 122 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 76 (-27) columns and 1007 (-572) elements
Clp1000I sum of infeasibilities 5.04571e-08 - average 7.31263e-10, 14 fixed columns
Coin0506I Presolve 56 (-13) rows, 62 (-14) columns and 713 (-294) elements
Clp0006I 0  Obj 40.988131 Dual inf 2.2864149 (62)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 4.9262425 - largest nonzero change 2.4275593e-05 ( 0.0013713985%) - largest zero change 2.9707923e-05
Clp0000I Optimal - objective value 54.336662
Clp0000I Optimal - objective value 54.336662
Coin0511I After Postsolve, objective 54.336662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.336662
Clp0000I Optimal - objective value 54.336662
Clp0000I Optimal - objective value 54.336662
Clp0000I Optimal - objective value 54.336662
Coin0511I After Postsolve, objective 54.336662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.33666155 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 84 columns (84 integer (84 of which binary)) and 1104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.136%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 6.42608
Cbc0038I Pass   1: suminf.    2.33197 (26) obj. -24.6773 iterations 14
Cbc0038I Pass   2: suminf.    2.33197 (26) obj. -24.6773 iterations 1
Cbc0038I Pass   3: suminf.    0.71140 (10) obj. 3.14603 iterations 16
Cbc0038I Solution found of 14.3059
Cbc0038I Rounding solution of 9.23831 is better than previous of 14.3059

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 84 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 9.23831 to -5.02857 (0.02 seconds)
Cbc0038I Round again with cutoff of -9.24081
Cbc0038I Pass   4: suminf.    2.33197 (26) obj. -24.6773 iterations 0
Cbc0038I Pass   5: suminf.    2.33197 (26) obj. -24.6773 iterations 1
Cbc0038I Pass   6: suminf.    1.77300 (13) obj. -9.24081 iterations 23
Cbc0038I Pass   7: suminf.    1.27811 (11) obj. -10.4451 iterations 4
Cbc0038I Pass   8: suminf.    0.38429 (6) obj. -9.24081 iterations 19
Cbc0038I Pass   9: suminf.    0.38429 (6) obj. -9.24081 iterations 0
Cbc0038I Pass  10: suminf.    0.39825 (1) obj. -9.24081 iterations 10
Cbc0038I Pass  11: suminf.    0.15909 (1) obj. -10.9149 iterations 3
Cbc0038I Pass  12: suminf.    0.39825 (1) obj. -9.24081 iterations 2
Cbc0038I Pass  13: suminf.    1.67667 (11) obj. -9.24081 iterations 24
Cbc0038I Pass  14: suminf.    1.28720 (8) obj. -9.24081 iterations 13
Cbc0038I Pass  15: suminf.    1.12829 (4) obj. -9.24081 iterations 7
Cbc0038I Pass  16: suminf.    1.12829 (4) obj. -9.24081 iterations 0
Cbc0038I Pass  17: suminf.    0.71220 (3) obj. -9.24081 iterations 5
Cbc0038I Pass  18: suminf.    0.40275 (3) obj. -11.6558 iterations 2
Cbc0038I Pass  19: suminf.    0.97566 (4) obj. -9.24081 iterations 7
Cbc0038I Pass  20: suminf.    0.76035 (3) obj. -9.24081 iterations 6
Cbc0038I Pass  21: suminf.    0.71933 (4) obj. -9.24081 iterations 4
Cbc0038I Pass  22: suminf.    0.70988 (4) obj. -9.24081 iterations 1
Cbc0038I Pass  23: suminf.    0.50623 (3) obj. -9.24081 iterations 5
Cbc0038I Pass  24: suminf.    0.50623 (3) obj. -9.24081 iterations 0
Cbc0038I Pass  25: suminf.    1.99717 (13) obj. -9.24081 iterations 21
Cbc0038I Pass  26: suminf.    1.95958 (10) obj. -9.24081 iterations 4
Cbc0038I Pass  27: suminf.    0.94518 (6) obj. -9.24081 iterations 25
Cbc0038I Pass  28: suminf.    0.94518 (6) obj. -9.24081 iterations 0
Cbc0038I Pass  29: suminf.    1.24235 (7) obj. -9.24081 iterations 14
Cbc0038I Pass  30: suminf.    0.88986 (7) obj. -9.24081 iterations 1
Cbc0038I Pass  31: suminf.    0.94518 (6) obj. -9.24081 iterations 9
Cbc0038I Pass  32: suminf.    2.53109 (12) obj. -9.24081 iterations 34
Cbc0038I Pass  33: suminf.    2.09944 (13) obj. -9.24081 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 84 columns, reduced to 46 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -5.02857 to -6.68908 (0.08 seconds)
Cbc0038I Round again with cutoff of -16.8227
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.33197 (26) obj. -24.6773 iterations 0
Cbc0038I Pass  34: suminf.    2.33197 (26) obj. -24.6773 iterations 1
Cbc0038I Pass  35: suminf.    1.75620 (12) obj. -16.8227 iterations 24
Cbc0038I Pass  36: suminf.    1.69213 (11) obj. -17.6055 iterations 4
Cbc0038I Pass  37: suminf.    0.79201 (5) obj. -16.8227 iterations 17
Cbc0038I Pass  38: suminf.    0.77576 (4) obj. -17.2649 iterations 5
Cbc0038I Pass  39: suminf.    0.68216 (3) obj. -16.8227 iterations 14
Cbc0038I Pass  40: suminf.    0.50322 (3) obj. -17.5384 iterations 5
Cbc0038I Pass  41: suminf.    2.51598 (14) obj. -16.8227 iterations 17
Cbc0038I Pass  42: suminf.    2.51598 (14) obj. -16.8227 iterations 2
Cbc0038I Pass  43: suminf.    0.78844 (5) obj. -16.8227 iterations 12
Cbc0038I Pass  44: suminf.    0.78844 (5) obj. -16.8227 iterations 3
Cbc0038I Pass  45: suminf.    0.97903 (4) obj. -16.8227 iterations 6
Cbc0038I Pass  46: suminf.    0.69072 (4) obj. -17.9759 iterations 4
Cbc0038I Pass  47: suminf.    0.93129 (4) obj. -16.8227 iterations 6
Cbc0038I Pass  48: suminf.    0.93129 (4) obj. -16.8227 iterations 0
Cbc0038I Pass  49: suminf.    2.05759 (11) obj. -16.8227 iterations 21
Cbc0038I Pass  50: suminf.    2.02269 (9) obj. -16.8227 iterations 3
Cbc0038I Pass  51: suminf.    1.14849 (7) obj. -16.8227 iterations 17
Cbc0038I Pass  52: suminf.    0.88258 (8) obj. -16.8227 iterations 7
Cbc0038I Pass  53: suminf.    1.69802 (8) obj. -16.8227 iterations 8
Cbc0038I Pass  54: suminf.    1.64245 (7) obj. -16.8227 iterations 5
Cbc0038I Pass  55: suminf.    1.84682 (8) obj. -16.8227 iterations 6
Cbc0038I Pass  56: suminf.    1.12264 (5) obj. -16.8227 iterations 6
Cbc0038I Pass  57: suminf.    1.07549 (5) obj. -16.8227 iterations 1
Cbc0038I Pass  58: suminf.    1.65727 (6) obj. -16.8227 iterations 4
Cbc0038I Pass  59: suminf.    1.09315 (5) obj. -16.9406 iterations 2
Cbc0038I Pass  60: suminf.    3.45322 (15) obj. -16.8227 iterations 15
Cbc0038I Pass  61: suminf.    1.89759 (10) obj. -16.8227 iterations 6
Cbc0038I Pass  62: suminf.    1.38003 (7) obj. -16.8227 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 84 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -6.68908 - took 0.08 seconds
Cbc0012I Integer solution of -6.6890808 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 77 rows 84 columns, reduced to 32 rows 39 columns
Cbc0031I 44 added rows had average density of 37.340909
Cbc0013I At root node, 44 cuts changed objective from -47.150081 to -15.600383 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14672 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1784 row cuts average 78.5 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 125 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1214 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 413 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.676 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.6890808 best solution, best possible -15.600383 (2.41 seconds)
Cbc0004I Integer solution of -7.0482 found after 5505 iterations and 13 nodes (2.71 seconds)
Cbc0012I Integer solution of -8.0482 found by rounding after 5860 iterations and 27 nodes (2.76 seconds)
Cbc0001I Search completed - best objective -8.048199999999994, took 6332 iterations and 40 nodes (2.78 seconds)
Cbc0032I Strong branching done 560 times (8647 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 14, 113 variables fixed on reduced cost
Total time (CPU seconds):       1.96   (Wallclock seconds):       2.79

