Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 62 (-37) rows, 33 (-17) columns and 154 (-131) elements
Clp0000I Optimal - objective value 8211.5529
Coin0511I After Postsolve, objective 8211.5529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8211.552941 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 33 columns (32 integer (32 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4
Cbc0038I Pass   1: suminf.    1.00000 (2) obj. -4804.7 iterations 16
Cbc0038I Solution found of -3711.06
Cbc0038I Relaxing continuous gives -3711.06
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3711.06 to -7064.37 (0.01 seconds)
Cbc0038I Round again with cutoff of -7178.88
Cbc0038I Pass   2: suminf.    1.09452 (9) obj. -7178.88 iterations 10
Cbc0038I Pass   3: suminf.    1.04772 (9) obj. -7178.88 iterations 1
Cbc0038I Pass   4: suminf.    2.15111 (9) obj. -7178.88 iterations 6
Cbc0038I Pass   5: suminf.    0.41039 (3) obj. -7178.88 iterations 5
Cbc0038I Pass   6: suminf.    0.15440 (7) obj. -7178.88 iterations 9
Cbc0038I Pass   7: suminf.    0.15440 (7) obj. -7178.88 iterations 0
Cbc0038I Pass   8: suminf.    1.85475 (6) obj. -7178.88 iterations 5
Cbc0038I Pass   9: suminf.    1.53202 (6) obj. -7178.88 iterations 1
Cbc0038I Pass  10: suminf.    1.00000 (4) obj. -7178.88 iterations 7
Cbc0038I Pass  11: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  12: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  13: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  14: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  15: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  16: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  17: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  18: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  19: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  20: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  21: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  22: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  23: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  24: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  25: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  26: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  27: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  28: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  29: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  30: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  31: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7064.37 - took 0.02 seconds
Cbc0012I Integer solution of -7064.372 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 62 rows 33 columns, reduced to 17 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 3.6666667
Cbc0013I At root node, 6 cuts changed objective from -8209.483 to -7071.663 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 191 row cuts average 3.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7064.372000000001, took 94 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-21) rows, 79 (-17) columns and 881 (-532) elements
Clp1000I sum of infeasibilities 4.429e-08 - average 5.75195e-10, 26 fixed columns
Coin0506I Presolve 53 (-24) rows, 53 (-26) columns and 207 (-674) elements
Clp0029I End of values pass after 53 iterations
Clp0000I Optimal - objective value 10118.143
Clp0000I Optimal - objective value 10118.143
Coin0511I After Postsolve, objective 10118.143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0192854 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 10118.143
Clp0000I Optimal - objective value 10118.143
Clp0000I Optimal - objective value 10118.143
Coin0511I After Postsolve, objective 10118.143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10118.14269 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 79 columns (79 integer (79 of which binary)) and 882 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.783%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 15.6279
Cbc0038I Pass   1: suminf.    3.43975 (20) obj. -4183.73 iterations 23
Cbc0038I Pass   2: suminf.    3.43975 (20) obj. -4183.73 iterations 1
Cbc0038I Pass   3: suminf.    0.82924 (10) obj. -2991.06 iterations 10
Cbc0038I Solution found of -2421.77
Cbc0038I Rounding solution of -2832.88 is better than previous of -2421.77

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 79 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -2832.88 to -6308.96 (0.02 seconds)
Cbc0038I Round again with cutoff of -6606.29
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.46604 (37) obj. -6606.29 iterations 15
Cbc0038I Pass   5: suminf.    6.46604 (37) obj. -6606.29 iterations 0
Cbc0038I Pass   6: suminf.    2.32977 (16) obj. -6606.29 iterations 25
Cbc0038I Pass   7: suminf.    2.32977 (16) obj. -6606.29 iterations 0
Cbc0038I Pass   8: suminf.    0.42821 (1) obj. -6606.29 iterations 24
Cbc0038I Pass   9: suminf.    0.41935 (1) obj. -6610.89 iterations 4
Cbc0038I Pass  10: suminf.    0.42821 (1) obj. -6606.29 iterations 3
Cbc0038I Pass  11: suminf.    4.08270 (13) obj. -6606.29 iterations 16
Cbc0038I Pass  12: suminf.    4.08270 (13) obj. -6606.29 iterations 1
Cbc0038I Pass  13: suminf.    2.15129 (5) obj. -6606.29 iterations 22
Cbc0038I Pass  14: suminf.    1.67835 (5) obj. -6606.29 iterations 2
Cbc0038I Pass  15: suminf.    1.03896 (4) obj. -6606.29 iterations 4
Cbc0038I Pass  16: suminf.    0.61935 (2) obj. -6872.25 iterations 2
Cbc0038I Pass  17: suminf.    0.61898 (2) obj. -6606.29 iterations 3
Cbc0038I Pass  18: suminf.    0.61898 (2) obj. -6606.29 iterations 0
Cbc0038I Pass  19: suminf.    0.26917 (2) obj. -6606.29 iterations 7
Cbc0038I Pass  20: suminf.    3.19862 (12) obj. -6606.29 iterations 22
Cbc0038I Pass  21: suminf.    3.10246 (12) obj. -6606.29 iterations 3
Cbc0038I Pass  22: suminf.    0.61898 (2) obj. -6606.29 iterations 18
Cbc0038I Pass  23: suminf.    4.47086 (16) obj. -6606.29 iterations 32
Cbc0038I Pass  24: suminf.    3.78733 (14) obj. -6606.29 iterations 5
Cbc0038I Pass  25: suminf.    3.39955 (13) obj. -6778.07 iterations 8
Cbc0038I Pass  26: suminf.    0.84588 (2) obj. -6606.29 iterations 20
Cbc0038I Solution found of -7052.37
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 79 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -7052.37 to -7064.37 (0.04 seconds)
Cbc0038I Round again with cutoff of -7507.95
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  27: suminf.    7.50853 (40) obj. -7507.95 iterations 1
Cbc0038I Pass  28: suminf.    7.50853 (40) obj. -7507.95 iterations 0
Cbc0038I Pass  29: suminf.    5.06915 (28) obj. -7507.95 iterations 12
Cbc0038I Pass  30: suminf.    5.06915 (28) obj. -7507.95 iterations 0
Cbc0038I Pass  31: suminf.    3.28854 (21) obj. -7507.95 iterations 19
Cbc0038I Pass  32: suminf.    3.28854 (21) obj. -7507.95 iterations 0
Cbc0038I Pass  33: suminf.    2.28448 (9) obj. -7507.95 iterations 28
Cbc0038I Pass  34: suminf.    2.27051 (14) obj. -7507.95 iterations 2
Cbc0038I Pass  35: suminf.    3.07349 (8) obj. -7507.95 iterations 10
Cbc0038I Pass  36: suminf.    3.07349 (8) obj. -7507.95 iterations 5
Cbc0038I Pass  37: suminf.    2.96678 (8) obj. -7507.95 iterations 4
Cbc0038I Pass  38: suminf.    2.83907 (12) obj. -7507.95 iterations 2
Cbc0038I Pass  39: suminf.    3.07349 (8) obj. -7507.95 iterations 6
Cbc0038I Pass  40: suminf.    4.30275 (13) obj. -7507.95 iterations 16
Cbc0038I Pass  41: suminf.    4.30275 (13) obj. -7507.95 iterations 5
Cbc0038I Pass  42: suminf.    3.07349 (8) obj. -7507.95 iterations 18
Cbc0038I Pass  43: suminf.    3.07349 (8) obj. -7507.95 iterations 0
Cbc0038I Pass  44: suminf.    2.96678 (8) obj. -7507.95 iterations 11
Cbc0038I Pass  45: suminf.    2.83907 (12) obj. -7507.95 iterations 12
Cbc0038I Pass  46: suminf.    3.07349 (8) obj. -7507.95 iterations 6
Cbc0038I Pass  47: suminf.    4.57403 (11) obj. -7507.95 iterations 13
Cbc0038I Pass  48: suminf.    2.63335 (10) obj. -7507.95 iterations 8
Cbc0038I Pass  49: suminf.    2.54084 (8) obj. -7566.59 iterations 8
Cbc0038I Pass  50: suminf.    1.20363 (4) obj. -7507.95 iterations 19
Cbc0038I Pass  51: suminf.    1.20363 (4) obj. -7507.95 iterations 1
Cbc0038I Pass  52: suminf.    1.05255 (4) obj. -7507.95 iterations 5
Cbc0038I Pass  53: suminf.    1.05255 (4) obj. -7507.95 iterations 1
Cbc0038I Pass  54: suminf.    1.20363 (4) obj. -7507.95 iterations 1
Cbc0038I Pass  55: suminf.    2.53714 (8) obj. -7507.95 iterations 13
Cbc0038I Pass  56: suminf.    2.53714 (8) obj. -7507.95 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 79 columns, reduced to 35 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -7064.37 - took 0.05 seconds
Cbc0012I Integer solution of -7064.372 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 77 rows 79 columns, reduced to 9 rows 10 columns
Cbc0031I 7 added rows had average density of 2
Cbc0013I At root node, 253 cuts changed objective from -9282.2555 to -7064.372 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 223 row cuts average 2.0 elements, 37 column cuts (37 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7064.372000000001, took 48 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 62 (-37) rows, 33 (-17) columns and 154 (-131) elements
Clp0000I Optimal - objective value 8211.5529
Coin0511I After Postsolve, objective 8211.5529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8211.552941 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 33 columns (32 integer (32 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4
Cbc0038I Pass   1: suminf.    1.00000 (2) obj. -4804.7 iterations 16
Cbc0038I Solution found of -3711.06
Cbc0038I Relaxing continuous gives -3711.06
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3711.06 to -7064.37 (0.01 seconds)
Cbc0038I Round again with cutoff of -7178.88
Cbc0038I Pass   2: suminf.    1.09452 (9) obj. -7178.88 iterations 10
Cbc0038I Pass   3: suminf.    1.04772 (9) obj. -7178.88 iterations 1
Cbc0038I Pass   4: suminf.    2.15111 (9) obj. -7178.88 iterations 6
Cbc0038I Pass   5: suminf.    0.41039 (3) obj. -7178.88 iterations 5
Cbc0038I Pass   6: suminf.    0.15440 (7) obj. -7178.88 iterations 9
Cbc0038I Pass   7: suminf.    0.15440 (7) obj. -7178.88 iterations 0
Cbc0038I Pass   8: suminf.    1.85475 (6) obj. -7178.88 iterations 5
Cbc0038I Pass   9: suminf.    1.53202 (6) obj. -7178.88 iterations 1
Cbc0038I Pass  10: suminf.    1.00000 (4) obj. -7178.88 iterations 7
Cbc0038I Pass  11: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  12: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  13: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  14: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  15: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  16: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  17: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  18: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  19: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  20: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  21: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  22: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  23: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  24: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  25: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  26: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  27: suminf.    0.91126 (4) obj. -7178.88 iterations 1
Cbc0038I Pass  28: suminf.    1.21071 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  29: suminf.    0.97272 (3) obj. -7178.88 iterations 1
Cbc0038I Pass  30: suminf.    1.00000 (4) obj. -7178.88 iterations 5
Cbc0038I Pass  31: suminf.    0.92512 (4) obj. -7178.88 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7064.37 - took 0.02 seconds
Cbc0012I Integer solution of -7064.372 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 62 rows 33 columns, reduced to 17 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 3.6666667
Cbc0013I At root node, 6 cuts changed objective from -8209.483 to -7071.663 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 191 row cuts average 3.0 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7064.372000000001, took 94 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-22) rows, 79 (-18) columns and 881 (-533) elements
Clp1000I sum of infeasibilities 4.429e-08 - average 5.75195e-10, 26 fixed columns
Coin0506I Presolve 53 (-24) rows, 53 (-26) columns and 207 (-674) elements
Clp0029I End of values pass after 53 iterations
Clp0000I Optimal - objective value 10118.143
Clp0000I Optimal - objective value 10118.143
Coin0511I After Postsolve, objective 10118.143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0192854 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 10118.143
Clp0000I Optimal - objective value 10118.143
Clp0000I Optimal - objective value 10118.143
Coin0511I After Postsolve, objective 10118.143, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10118.14269 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 79 columns (79 integer (79 of which binary)) and 882 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.783%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 15.6279
Cbc0038I Pass   1: suminf.    3.43975 (20) obj. -4183.73 iterations 23
Cbc0038I Pass   2: suminf.    3.43975 (20) obj. -4183.73 iterations 1
Cbc0038I Pass   3: suminf.    0.82924 (10) obj. -2991.06 iterations 10
Cbc0038I Solution found of -2421.77
Cbc0038I Rounding solution of -2832.88 is better than previous of -2421.77

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 79 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -2832.88 to -6308.96 (0.03 seconds)
Cbc0038I Round again with cutoff of -6606.29
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.46604 (37) obj. -6606.29 iterations 15
Cbc0038I Pass   5: suminf.    6.46604 (37) obj. -6606.29 iterations 0
Cbc0038I Pass   6: suminf.    2.32977 (16) obj. -6606.29 iterations 25
Cbc0038I Pass   7: suminf.    2.32977 (16) obj. -6606.29 iterations 0
Cbc0038I Pass   8: suminf.    0.42821 (1) obj. -6606.29 iterations 24
Cbc0038I Pass   9: suminf.    0.41935 (1) obj. -6610.89 iterations 4
Cbc0038I Pass  10: suminf.    0.42821 (1) obj. -6606.29 iterations 3
Cbc0038I Pass  11: suminf.    4.08270 (13) obj. -6606.29 iterations 16
Cbc0038I Pass  12: suminf.    4.08270 (13) obj. -6606.29 iterations 1
Cbc0038I Pass  13: suminf.    2.15129 (5) obj. -6606.29 iterations 22
Cbc0038I Pass  14: suminf.    1.67835 (5) obj. -6606.29 iterations 2
Cbc0038I Pass  15: suminf.    1.03896 (4) obj. -6606.29 iterations 4
Cbc0038I Pass  16: suminf.    0.61935 (2) obj. -6872.25 iterations 2
Cbc0038I Pass  17: suminf.    0.61898 (2) obj. -6606.29 iterations 3
Cbc0038I Pass  18: suminf.    0.61898 (2) obj. -6606.29 iterations 0
Cbc0038I Pass  19: suminf.    0.26917 (2) obj. -6606.29 iterations 7
Cbc0038I Pass  20: suminf.    3.19862 (12) obj. -6606.29 iterations 22
Cbc0038I Pass  21: suminf.    3.10246 (12) obj. -6606.29 iterations 3
Cbc0038I Pass  22: suminf.    0.61898 (2) obj. -6606.29 iterations 18
Cbc0038I Pass  23: suminf.    4.47086 (16) obj. -6606.29 iterations 32
Cbc0038I Pass  24: suminf.    3.78733 (14) obj. -6606.29 iterations 5
Cbc0038I Pass  25: suminf.    3.39955 (13) obj. -6778.07 iterations 8
Cbc0038I Pass  26: suminf.    0.84588 (2) obj. -6606.29 iterations 20
Cbc0038I Solution found of -7052.37
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 79 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -7052.37 to -7064.37 (0.04 seconds)
Cbc0038I Round again with cutoff of -7507.95
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  27: suminf.    7.50853 (40) obj. -7507.95 iterations 1
Cbc0038I Pass  28: suminf.    7.50853 (40) obj. -7507.95 iterations 0
Cbc0038I Pass  29: suminf.    5.06915 (28) obj. -7507.95 iterations 12
Cbc0038I Pass  30: suminf.    5.06915 (28) obj. -7507.95 iterations 0
Cbc0038I Pass  31: suminf.    3.28854 (21) obj. -7507.95 iterations 19
Cbc0038I Pass  32: suminf.    3.28854 (21) obj. -7507.95 iterations 0
Cbc0038I Pass  33: suminf.    2.28448 (9) obj. -7507.95 iterations 28
Cbc0038I Pass  34: suminf.    2.27051 (14) obj. -7507.95 iterations 2
Cbc0038I Pass  35: suminf.    3.07349 (8) obj. -7507.95 iterations 10
Cbc0038I Pass  36: suminf.    3.07349 (8) obj. -7507.95 iterations 5
Cbc0038I Pass  37: suminf.    2.96678 (8) obj. -7507.95 iterations 4
Cbc0038I Pass  38: suminf.    2.83907 (12) obj. -7507.95 iterations 2
Cbc0038I Pass  39: suminf.    3.07349 (8) obj. -7507.95 iterations 6
Cbc0038I Pass  40: suminf.    4.30275 (13) obj. -7507.95 iterations 16
Cbc0038I Pass  41: suminf.    4.30275 (13) obj. -7507.95 iterations 5
Cbc0038I Pass  42: suminf.    3.07349 (8) obj. -7507.95 iterations 18
Cbc0038I Pass  43: suminf.    3.07349 (8) obj. -7507.95 iterations 0
Cbc0038I Pass  44: suminf.    2.96678 (8) obj. -7507.95 iterations 11
Cbc0038I Pass  45: suminf.    2.83907 (12) obj. -7507.95 iterations 12
Cbc0038I Pass  46: suminf.    3.07349 (8) obj. -7507.95 iterations 6
Cbc0038I Pass  47: suminf.    4.57403 (11) obj. -7507.95 iterations 13
Cbc0038I Pass  48: suminf.    2.63335 (10) obj. -7507.95 iterations 8
Cbc0038I Pass  49: suminf.    2.54084 (8) obj. -7566.59 iterations 8
Cbc0038I Pass  50: suminf.    1.20363 (4) obj. -7507.95 iterations 19
Cbc0038I Pass  51: suminf.    1.20363 (4) obj. -7507.95 iterations 1
Cbc0038I Pass  52: suminf.    1.05255 (4) obj. -7507.95 iterations 5
Cbc0038I Pass  53: suminf.    1.05255 (4) obj. -7507.95 iterations 1
Cbc0038I Pass  54: suminf.    1.20363 (4) obj. -7507.95 iterations 1
Cbc0038I Pass  55: suminf.    2.53714 (8) obj. -7507.95 iterations 13
Cbc0038I Pass  56: suminf.    2.53714 (8) obj. -7507.95 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 79 columns, reduced to 35 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -7064.37 - took 0.05 seconds
Cbc0012I Integer solution of -7064.372 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 77 rows 79 columns, reduced to 9 rows 10 columns
Cbc0031I 7 added rows had average density of 2
Cbc0013I At root node, 253 cuts changed objective from -9282.2555 to -7064.372 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 223 row cuts average 2.0 elements, 37 column cuts (37 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -7064.372000000001, took 48 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

