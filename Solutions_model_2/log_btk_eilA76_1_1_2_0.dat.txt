Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 73 (-5) columns and 391 (-62) elements
Clp1000I sum of infeasibilities 0.000143845 - average 1.14162e-06, 17 fixed columns
Coin0506I Presolve 93 (-33) rows, 54 (-19) columns and 287 (-104) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 53.822591
Clp0000I Optimal - objective value 53.822591
Coin0511I After Postsolve, objective 53.822591, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24505573 - largest nonzero change 0 ( 0%) - largest zero change 2.9738336e-05
Clp0000I Optimal - objective value 53.822591
Clp0000I Optimal - objective value 53.822591
Clp0000I Optimal - objective value 53.822591
Coin0511I After Postsolve, objective 53.822591, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.82259138 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 73 columns (72 integer (72 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.08307
Cbc0038I Solution found of -12.9965
Cbc0038I Relaxing continuous gives -12.9965
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 73 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -12.9965 to -28.7995 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.3019
Cbc0038I Pass   1: suminf.    2.01031 (11) obj. -31.3019 iterations 32
Cbc0038I Pass   2: suminf.    1.02531 (3) obj. -31.3019 iterations 22
Cbc0038I Pass   3: suminf.    0.67354 (2) obj. -31.3019 iterations 6
Cbc0038I Pass   4: suminf.    0.78710 (2) obj. -31.3019 iterations 3
Cbc0038I Pass   5: suminf.    1.21325 (6) obj. -31.3019 iterations 8
Cbc0038I Pass   6: suminf.    1.04087 (4) obj. -31.3019 iterations 3
Cbc0038I Pass   7: suminf.    1.64740 (4) obj. -31.3019 iterations 8
Cbc0038I Pass   8: suminf.    1.64740 (4) obj. -31.3019 iterations 0
Cbc0038I Pass   9: suminf.    1.49253 (4) obj. -31.3019 iterations 5
Cbc0038I Pass  10: suminf.    1.04907 (4) obj. -31.3019 iterations 1
Cbc0038I Pass  11: suminf.    2.53533 (9) obj. -31.3019 iterations 10
Cbc0038I Pass  12: suminf.    1.45469 (7) obj. -31.3019 iterations 11
Cbc0038I Pass  13: suminf.    0.79072 (4) obj. -31.3019 iterations 8
Cbc0038I Pass  14: suminf.    0.67354 (2) obj. -31.3019 iterations 5
Cbc0038I Pass  15: suminf.    0.78710 (2) obj. -31.3019 iterations 3
Cbc0038I Pass  16: suminf.    1.57104 (10) obj. -31.3019 iterations 21
Cbc0038I Pass  17: suminf.    0.88951 (9) obj. -31.3019 iterations 13
Cbc0038I Pass  18: suminf.    3.13872 (11) obj. -31.3019 iterations 16
Cbc0038I Pass  19: suminf.    1.91084 (7) obj. -31.3019 iterations 7
Cbc0038I Pass  20: suminf.    1.09756 (6) obj. -31.3019 iterations 7
Cbc0038I Pass  21: suminf.    1.97112 (7) obj. -31.3019 iterations 13
Cbc0038I Pass  22: suminf.    1.87628 (6) obj. -31.3019 iterations 1
Cbc0038I Pass  23: suminf.    2.04291 (7) obj. -31.3019 iterations 4
Cbc0038I Pass  24: suminf.    1.41785 (5) obj. -31.3019 iterations 3
Cbc0038I Pass  25: suminf.    1.36627 (5) obj. -31.3019 iterations 2
Cbc0038I Pass  26: suminf.    1.88161 (6) obj. -31.3019 iterations 5
Cbc0038I Pass  27: suminf.    1.87628 (6) obj. -31.3019 iterations 2
Cbc0038I Pass  28: suminf.    2.04291 (7) obj. -31.3019 iterations 4
Cbc0038I Pass  29: suminf.    1.41785 (5) obj. -31.3019 iterations 3
Cbc0038I Pass  30: suminf.    1.36627 (5) obj. -31.3019 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 73 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -28.7995 - took 0.07 seconds
Cbc0012I Integer solution of -28.79951 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 126 rows 73 columns, reduced to 60 rows 36 columns
Cbc0031I 17 added rows had average density of 44.823529
Cbc0013I At root node, 17 cuts changed objective from -53.822591 to -46.13811 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9584 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1542 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -28.79951 best solution, best possible -46.13811 (0.70 seconds)
Cbc0038I Full problem 126 rows 73 columns, reduced to 18 rows 18 columns
Cbc0001I Search completed - best objective -28.79951, took 8079 iterations and 74 nodes (0.84 seconds)
Cbc0032I Strong branching done 732 times (13348 iterations), fathomed 4 nodes and fixed 24 variables
Cbc0035I Maximum depth 23, 99 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.85

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 121 (-31) columns and 1987 (-1316) elements
Clp1000I sum of infeasibilities 2.15141e-06 - average 2.08875e-08, 64 fixed columns
Coin0506I Presolve 41 (-62) rows, 55 (-66) columns and 187 (-1800) elements
Clp0006I 0  Obj -14.63 Dual inf 3.4213782 (54)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.5315886 - largest nonzero change 0 ( 0%) - largest zero change 2.9237551e-05
Clp0000I Optimal - objective value -12.139189
Clp0000I Optimal - objective value -12.139189
Coin0511I After Postsolve, objective -12.139189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -12.139189 Dual inf 127.83717 (49)
Clp0014I Perturbing problem by 0.001% of 1.6516222 - largest nonzero change 1.6657314e-05 ( 0.00095415479%) - largest zero change 2.940014e-05
Clp0000I Optimal - objective value 74.978899
Clp0000I Optimal - objective value 74.978899
Clp0000I Optimal - objective value 74.978899
Coin0511I After Postsolve, objective 74.978899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.97889869 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 121 columns (121 integer (121 of which binary)) and 1990 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 3.4757
Cbc0038I Pass   1: suminf.    1.54259 (27) obj. -59.8073 iterations 10
Cbc0038I Pass   2: suminf.    1.54259 (27) obj. -59.8073 iterations 1
Cbc0038I Pass   3: suminf.    0.59786 (15) obj. -40.5001 iterations 12
Cbc0038I Solution found of -24.1572
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 121 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -28.2243
Cbc0038I Pass   4: suminf.    1.54259 (27) obj. -59.8073 iterations 0
Cbc0038I Pass   5: suminf.    1.54259 (27) obj. -59.8073 iterations 1
Cbc0038I Pass   6: suminf.    0.22872 (8) obj. -33.8692 iterations 19
Cbc0038I Pass   7: suminf.    0.56444 (13) obj. -28.2243 iterations 15
Cbc0038I Pass   8: suminf.    1.22107 (7) obj. -28.2243 iterations 20
Cbc0038I Pass   9: suminf.    1.17584 (8) obj. -28.2243 iterations 1
Cbc0038I Pass  10: suminf.    1.22107 (7) obj. -28.2243 iterations 19
Cbc0038I Pass  11: suminf.    1.47829 (14) obj. -28.2243 iterations 21
Cbc0038I Pass  12: suminf.    0.91096 (11) obj. -28.2243 iterations 5
Cbc0038I Pass  13: suminf.    0.61971 (11) obj. -28.2243 iterations 7
Cbc0038I Pass  14: suminf.    1.22107 (7) obj. -28.2243 iterations 15
Cbc0038I Pass  15: suminf.    1.17584 (8) obj. -28.2243 iterations 1
Cbc0038I Pass  16: suminf.    1.22107 (7) obj. -28.2243 iterations 9
Cbc0038I Pass  17: suminf.    2.55046 (15) obj. -28.2243 iterations 14
Cbc0038I Pass  18: suminf.    2.54489 (14) obj. -28.2243 iterations 2
Cbc0038I Pass  19: suminf.    2.32385 (8) obj. -28.2243 iterations 25
Cbc0038I Pass  20: suminf.    1.36594 (8) obj. -28.2243 iterations 3
Cbc0038I Pass  21: suminf.    1.17584 (8) obj. -28.2243 iterations 3
Cbc0038I Pass  22: suminf.    1.22107 (7) obj. -28.2243 iterations 8
Cbc0038I Pass  23: suminf.    1.10999 (12) obj. -28.2243 iterations 11
Cbc0038I Pass  24: suminf.    0.87132 (13) obj. -28.2243 iterations 4
Cbc0038I Pass  25: suminf.    1.72107 (9) obj. -28.2243 iterations 12
Cbc0038I Pass  26: suminf.    1.17022 (10) obj. -28.2243 iterations 2
Cbc0038I Pass  27: suminf.    1.72107 (9) obj. -28.2243 iterations 4
Cbc0038I Pass  28: suminf.    1.28313 (13) obj. -28.2243 iterations 23
Cbc0038I Pass  29: suminf.    0.89856 (11) obj. -28.915 iterations 8
Cbc0038I Pass  30: suminf.    2.32821 (12) obj. -28.2243 iterations 18
Cbc0038I Pass  31: suminf.    2.32821 (12) obj. -28.2243 iterations 0
Cbc0038I Pass  32: suminf.    2.08461 (9) obj. -28.2243 iterations 9
Cbc0038I Pass  33: suminf.    2.08461 (9) obj. -28.2243 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 121 columns, reduced to 33 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -24.1572 to -27.1867 (0.06 seconds)
Cbc0038I Round again with cutoff of -35.5449
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.54259 (27) obj. -59.8073 iterations 0
Cbc0038I Pass  34: suminf.    1.54259 (27) obj. -59.8073 iterations 1
Cbc0038I Pass  35: suminf.    0.39782 (12) obj. -37.7001 iterations 15
Cbc0038I Pass  36: suminf.    0.66673 (14) obj. -35.5449 iterations 25
Cbc0038I Pass  37: suminf.    0.47832 (14) obj. -35.5449 iterations 5
Cbc0038I Pass  38: suminf.    1.56077 (11) obj. -35.5449 iterations 21
Cbc0038I Pass  39: suminf.    1.31146 (12) obj. -35.5449 iterations 1
Cbc0038I Pass  40: suminf.    1.56077 (11) obj. -35.5449 iterations 6
Cbc0038I Pass  41: suminf.    1.79071 (14) obj. -35.5449 iterations 9
Cbc0038I Pass  42: suminf.    1.79071 (14) obj. -35.5449 iterations 0
Cbc0038I Pass  43: suminf.    1.56077 (12) obj. -35.5449 iterations 7
Cbc0038I Pass  44: suminf.    3.41728 (19) obj. -35.5449 iterations 17
Cbc0038I Pass  45: suminf.    1.32285 (17) obj. -35.5449 iterations 5
Cbc0038I Pass  46: suminf.    1.22065 (15) obj. -35.5449 iterations 3
Cbc0038I Pass  47: suminf.    1.56077 (11) obj. -35.5449 iterations 16
Cbc0038I Pass  48: suminf.    1.31146 (12) obj. -35.5449 iterations 1
Cbc0038I Pass  49: suminf.    1.56077 (11) obj. -35.5449 iterations 5
Cbc0038I Pass  50: suminf.    1.64267 (16) obj. -35.5449 iterations 15
Cbc0038I Pass  51: suminf.    1.64267 (16) obj. -35.5449 iterations 0
Cbc0038I Pass  52: suminf.    2.48495 (12) obj. -35.5449 iterations 29
Cbc0038I Pass  53: suminf.    2.24877 (12) obj. -35.5449 iterations 2
Cbc0038I Pass  54: suminf.    1.56077 (11) obj. -35.5449 iterations 4
Cbc0038I Pass  55: suminf.    1.31146 (12) obj. -35.5449 iterations 3
Cbc0038I Pass  56: suminf.    1.56077 (11) obj. -35.5449 iterations 4
Cbc0038I Pass  57: suminf.    1.62519 (13) obj. -35.5449 iterations 4
Cbc0038I Pass  58: suminf.    1.38109 (13) obj. -35.5449 iterations 3
Cbc0038I Pass  59: suminf.    2.96861 (23) obj. -35.5449 iterations 17
Cbc0038I Pass  60: suminf.    2.60926 (23) obj. -35.5449 iterations 10
Cbc0038I Pass  61: suminf.    2.26219 (13) obj. -35.5449 iterations 22
Cbc0038I Pass  62: suminf.    2.16244 (13) obj. -35.5449 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 121 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -27.1867 to -28.3209 (0.10 seconds)
Cbc0038I Round again with cutoff of -44.3297
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.54259 (27) obj. -59.8073 iterations 0
Cbc0038I Pass  63: suminf.    1.54259 (27) obj. -59.8073 iterations 1
Cbc0038I Pass  64: suminf.    1.08372 (17) obj. -44.3297 iterations 11
Cbc0038I Pass  65: suminf.    1.56736 (22) obj. -44.3297 iterations 31
Cbc0038I Pass  66: suminf.    1.11080 (22) obj. -44.3297 iterations 1
Cbc0038I Pass  67: suminf.    2.67382 (21) obj. -44.3297 iterations 22
Cbc0038I Pass  68: suminf.    2.67382 (21) obj. -44.3297 iterations 2
Cbc0038I Pass  69: suminf.    2.74860 (21) obj. -44.3297 iterations 5
Cbc0038I Pass  70: suminf.    2.74860 (21) obj. -44.3297 iterations 2
Cbc0038I Pass  71: suminf.    2.67382 (21) obj. -44.3297 iterations 6
Cbc0038I Pass  72: suminf.    1.84305 (26) obj. -44.3297 iterations 18
Cbc0038I Pass  73: suminf.    1.69626 (28) obj. -44.3297 iterations 4
Cbc0038I Pass  74: suminf.    2.78113 (22) obj. -44.3297 iterations 14
Cbc0038I Pass  75: suminf.    2.78113 (22) obj. -44.3297 iterations 0
Cbc0038I Pass  76: suminf.    2.84921 (22) obj. -44.3297 iterations 5
Cbc0038I Pass  77: suminf.    2.84921 (22) obj. -44.3297 iterations 1
Cbc0038I Pass  78: suminf.    2.83434 (22) obj. -44.3297 iterations 3
Cbc0038I Pass  79: suminf.    2.83434 (22) obj. -44.3297 iterations 1
Cbc0038I Pass  80: suminf.    2.84921 (22) obj. -44.3297 iterations 3
Cbc0038I Pass  81: suminf.    3.03451 (22) obj. -44.3297 iterations 5
Cbc0038I Pass  82: suminf.    1.80680 (23) obj. -44.3297 iterations 3
Cbc0038I Pass  83: suminf.    1.80680 (23) obj. -44.3297 iterations 0
Cbc0038I Pass  84: suminf.    1.97340 (21) obj. -44.3297 iterations 10
Cbc0038I Pass  85: suminf.    1.95012 (22) obj. -44.3297 iterations 3
Cbc0038I Pass  86: suminf.    1.97340 (21) obj. -44.3297 iterations 11
Cbc0038I Pass  87: suminf.    3.09998 (26) obj. -44.3297 iterations 15
Cbc0038I Pass  88: suminf.    3.03696 (26) obj. -44.3297 iterations 2
Cbc0038I Pass  89: suminf.    3.00974 (23) obj. -44.3297 iterations 29
Cbc0038I Pass  90: suminf.    3.00974 (23) obj. -44.3297 iterations 1
Cbc0038I Pass  91: suminf.    3.00706 (23) obj. -44.3297 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -28.3209 - took 0.10 seconds
Cbc0012I Integer solution of -28.3209 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 103 rows 121 columns, reduced to 14 rows 16 columns
Cbc0031I 59 added rows had average density of 16.355932
Cbc0013I At root node, 59 cuts changed objective from -64.827364 to -31.801683 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 3250 row cuts average 8.0 elements, 1 column cuts (1 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 154 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 234 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 292 row cuts average 70.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.3209 best solution, best possible -31.801683 (0.67 seconds)
Cbc0010I After 13 nodes, 9 on tree, -28.3209 best solution, best possible -31.801683 (1.39 seconds)
Cbc0016I Integer solution of -28.38143 found by strong branching after 1209 iterations and 17 nodes (1.50 seconds)
Cbc0016I Integer solution of -28.63719 found by strong branching after 1241 iterations and 18 nodes (1.55 seconds)
Cbc0016I Integer solution of -28.79951 found by strong branching after 1313 iterations and 21 nodes (1.62 seconds)
Cbc0001I Search completed - best objective -28.79951, took 1616 iterations and 28 nodes (1.68 seconds)
Cbc0032I Strong branching done 492 times (9058 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 10, 57 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.69

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 73 (-5) columns and 391 (-62) elements
Clp1000I sum of infeasibilities 0.000143845 - average 1.14162e-06, 17 fixed columns
Coin0506I Presolve 93 (-33) rows, 54 (-19) columns and 287 (-104) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 53.822591
Clp0000I Optimal - objective value 53.822591
Coin0511I After Postsolve, objective 53.822591, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24505573 - largest nonzero change 0 ( 0%) - largest zero change 2.9738336e-05
Clp0000I Optimal - objective value 53.822591
Clp0000I Optimal - objective value 53.822591
Clp0000I Optimal - objective value 53.822591
Coin0511I After Postsolve, objective 53.822591, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.82259138 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 73 columns (72 integer (72 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.08307
Cbc0038I Solution found of -12.9965
Cbc0038I Relaxing continuous gives -12.9965
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 73 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -12.9965 to -28.7995 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.3019
Cbc0038I Pass   1: suminf.    2.01031 (11) obj. -31.3019 iterations 32
Cbc0038I Pass   2: suminf.    1.02531 (3) obj. -31.3019 iterations 22
Cbc0038I Pass   3: suminf.    0.67354 (2) obj. -31.3019 iterations 6
Cbc0038I Pass   4: suminf.    0.78710 (2) obj. -31.3019 iterations 3
Cbc0038I Pass   5: suminf.    1.21325 (6) obj. -31.3019 iterations 8
Cbc0038I Pass   6: suminf.    1.04087 (4) obj. -31.3019 iterations 3
Cbc0038I Pass   7: suminf.    1.64740 (4) obj. -31.3019 iterations 8
Cbc0038I Pass   8: suminf.    1.64740 (4) obj. -31.3019 iterations 0
Cbc0038I Pass   9: suminf.    1.49253 (4) obj. -31.3019 iterations 5
Cbc0038I Pass  10: suminf.    1.04907 (4) obj. -31.3019 iterations 1
Cbc0038I Pass  11: suminf.    2.53533 (9) obj. -31.3019 iterations 10
Cbc0038I Pass  12: suminf.    1.45469 (7) obj. -31.3019 iterations 11
Cbc0038I Pass  13: suminf.    0.79072 (4) obj. -31.3019 iterations 8
Cbc0038I Pass  14: suminf.    0.67354 (2) obj. -31.3019 iterations 5
Cbc0038I Pass  15: suminf.    0.78710 (2) obj. -31.3019 iterations 3
Cbc0038I Pass  16: suminf.    1.57104 (10) obj. -31.3019 iterations 21
Cbc0038I Pass  17: suminf.    0.88951 (9) obj. -31.3019 iterations 13
Cbc0038I Pass  18: suminf.    3.13872 (11) obj. -31.3019 iterations 16
Cbc0038I Pass  19: suminf.    1.91084 (7) obj. -31.3019 iterations 7
Cbc0038I Pass  20: suminf.    1.09756 (6) obj. -31.3019 iterations 7
Cbc0038I Pass  21: suminf.    1.97112 (7) obj. -31.3019 iterations 13
Cbc0038I Pass  22: suminf.    1.87628 (6) obj. -31.3019 iterations 1
Cbc0038I Pass  23: suminf.    2.04291 (7) obj. -31.3019 iterations 4
Cbc0038I Pass  24: suminf.    1.41785 (5) obj. -31.3019 iterations 3
Cbc0038I Pass  25: suminf.    1.36627 (5) obj. -31.3019 iterations 2
Cbc0038I Pass  26: suminf.    1.88161 (6) obj. -31.3019 iterations 5
Cbc0038I Pass  27: suminf.    1.87628 (6) obj. -31.3019 iterations 2
Cbc0038I Pass  28: suminf.    2.04291 (7) obj. -31.3019 iterations 4
Cbc0038I Pass  29: suminf.    1.41785 (5) obj. -31.3019 iterations 3
Cbc0038I Pass  30: suminf.    1.36627 (5) obj. -31.3019 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 73 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -28.7995 - took 0.06 seconds
Cbc0012I Integer solution of -28.79951 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 126 rows 73 columns, reduced to 60 rows 36 columns
Cbc0031I 17 added rows had average density of 44.823529
Cbc0013I At root node, 17 cuts changed objective from -53.822591 to -46.13811 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9584 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1542 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0010I After 1 nodes, 2 on tree, -28.79951 best solution, best possible -46.13811 (0.69 seconds)
Cbc0038I Full problem 126 rows 73 columns, reduced to 18 rows 18 columns
Cbc0001I Search completed - best objective -28.79951, took 8079 iterations and 74 nodes (0.93 seconds)
Cbc0032I Strong branching done 732 times (13348 iterations), fathomed 4 nodes and fixed 24 variables
Cbc0035I Maximum depth 23, 99 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 121 (-32) columns and 1987 (-1317) elements
Clp1000I sum of infeasibilities 2.15141e-06 - average 2.08875e-08, 64 fixed columns
Coin0506I Presolve 41 (-62) rows, 55 (-66) columns and 187 (-1800) elements
Clp0006I 0  Obj -14.63 Dual inf 3.4213782 (54)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.5315886 - largest nonzero change 0 ( 0%) - largest zero change 2.9237551e-05
Clp0000I Optimal - objective value -12.139189
Clp0000I Optimal - objective value -12.139189
Coin0511I After Postsolve, objective -12.139189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -12.139189 Dual inf 127.83717 (49)
Clp0014I Perturbing problem by 0.001% of 1.6516222 - largest nonzero change 1.6657314e-05 ( 0.00095415479%) - largest zero change 2.940014e-05
Clp0000I Optimal - objective value 74.978899
Clp0000I Optimal - objective value 74.978899
Clp0000I Optimal - objective value 74.978899
Coin0511I After Postsolve, objective 74.978899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.97889869 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 121 columns (121 integer (121 of which binary)) and 1990 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 3.4757
Cbc0038I Pass   1: suminf.    1.54259 (27) obj. -59.8073 iterations 10
Cbc0038I Pass   2: suminf.    1.54259 (27) obj. -59.8073 iterations 1
Cbc0038I Pass   3: suminf.    0.59786 (15) obj. -40.5001 iterations 12
Cbc0038I Solution found of -24.1572
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 121 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -28.2243
Cbc0038I Pass   4: suminf.    1.54259 (27) obj. -59.8073 iterations 0
Cbc0038I Pass   5: suminf.    1.54259 (27) obj. -59.8073 iterations 1
Cbc0038I Pass   6: suminf.    0.22872 (8) obj. -33.8692 iterations 19
Cbc0038I Pass   7: suminf.    0.56444 (13) obj. -28.2243 iterations 15
Cbc0038I Pass   8: suminf.    1.22107 (7) obj. -28.2243 iterations 20
Cbc0038I Pass   9: suminf.    1.17584 (8) obj. -28.2243 iterations 1
Cbc0038I Pass  10: suminf.    1.22107 (7) obj. -28.2243 iterations 19
Cbc0038I Pass  11: suminf.    1.47829 (14) obj. -28.2243 iterations 21
Cbc0038I Pass  12: suminf.    0.91096 (11) obj. -28.2243 iterations 5
Cbc0038I Pass  13: suminf.    0.61971 (11) obj. -28.2243 iterations 7
Cbc0038I Pass  14: suminf.    1.22107 (7) obj. -28.2243 iterations 15
Cbc0038I Pass  15: suminf.    1.17584 (8) obj. -28.2243 iterations 1
Cbc0038I Pass  16: suminf.    1.22107 (7) obj. -28.2243 iterations 9
Cbc0038I Pass  17: suminf.    2.55046 (15) obj. -28.2243 iterations 14
Cbc0038I Pass  18: suminf.    2.54489 (14) obj. -28.2243 iterations 2
Cbc0038I Pass  19: suminf.    2.32385 (8) obj. -28.2243 iterations 25
Cbc0038I Pass  20: suminf.    1.36594 (8) obj. -28.2243 iterations 3
Cbc0038I Pass  21: suminf.    1.17584 (8) obj. -28.2243 iterations 3
Cbc0038I Pass  22: suminf.    1.22107 (7) obj. -28.2243 iterations 8
Cbc0038I Pass  23: suminf.    1.10999 (12) obj. -28.2243 iterations 11
Cbc0038I Pass  24: suminf.    0.87132 (13) obj. -28.2243 iterations 4
Cbc0038I Pass  25: suminf.    1.72107 (9) obj. -28.2243 iterations 12
Cbc0038I Pass  26: suminf.    1.17022 (10) obj. -28.2243 iterations 2
Cbc0038I Pass  27: suminf.    1.72107 (9) obj. -28.2243 iterations 4
Cbc0038I Pass  28: suminf.    1.28313 (13) obj. -28.2243 iterations 23
Cbc0038I Pass  29: suminf.    0.89856 (11) obj. -28.915 iterations 8
Cbc0038I Pass  30: suminf.    2.32821 (12) obj. -28.2243 iterations 18
Cbc0038I Pass  31: suminf.    2.32821 (12) obj. -28.2243 iterations 0
Cbc0038I Pass  32: suminf.    2.08461 (9) obj. -28.2243 iterations 9
Cbc0038I Pass  33: suminf.    2.08461 (9) obj. -28.2243 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 121 columns, reduced to 33 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -24.1572 to -27.1867 (0.07 seconds)
Cbc0038I Round again with cutoff of -35.5449
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.54259 (27) obj. -59.8073 iterations 0
Cbc0038I Pass  34: suminf.    1.54259 (27) obj. -59.8073 iterations 1
Cbc0038I Pass  35: suminf.    0.39782 (12) obj. -37.7001 iterations 15
Cbc0038I Pass  36: suminf.    0.66673 (14) obj. -35.5449 iterations 25
Cbc0038I Pass  37: suminf.    0.47832 (14) obj. -35.5449 iterations 5
Cbc0038I Pass  38: suminf.    1.56077 (11) obj. -35.5449 iterations 21
Cbc0038I Pass  39: suminf.    1.31146 (12) obj. -35.5449 iterations 1
Cbc0038I Pass  40: suminf.    1.56077 (11) obj. -35.5449 iterations 6
Cbc0038I Pass  41: suminf.    1.79071 (14) obj. -35.5449 iterations 9
Cbc0038I Pass  42: suminf.    1.79071 (14) obj. -35.5449 iterations 0
Cbc0038I Pass  43: suminf.    1.56077 (12) obj. -35.5449 iterations 7
Cbc0038I Pass  44: suminf.    3.41728 (19) obj. -35.5449 iterations 17
Cbc0038I Pass  45: suminf.    1.32285 (17) obj. -35.5449 iterations 5
Cbc0038I Pass  46: suminf.    1.22065 (15) obj. -35.5449 iterations 3
Cbc0038I Pass  47: suminf.    1.56077 (11) obj. -35.5449 iterations 16
Cbc0038I Pass  48: suminf.    1.31146 (12) obj. -35.5449 iterations 1
Cbc0038I Pass  49: suminf.    1.56077 (11) obj. -35.5449 iterations 5
Cbc0038I Pass  50: suminf.    1.64267 (16) obj. -35.5449 iterations 15
Cbc0038I Pass  51: suminf.    1.64267 (16) obj. -35.5449 iterations 0
Cbc0038I Pass  52: suminf.    2.48495 (12) obj. -35.5449 iterations 29
Cbc0038I Pass  53: suminf.    2.24877 (12) obj. -35.5449 iterations 2
Cbc0038I Pass  54: suminf.    1.56077 (11) obj. -35.5449 iterations 4
Cbc0038I Pass  55: suminf.    1.31146 (12) obj. -35.5449 iterations 3
Cbc0038I Pass  56: suminf.    1.56077 (11) obj. -35.5449 iterations 4
Cbc0038I Pass  57: suminf.    1.62519 (13) obj. -35.5449 iterations 4
Cbc0038I Pass  58: suminf.    1.38109 (13) obj. -35.5449 iterations 3
Cbc0038I Pass  59: suminf.    2.96861 (23) obj. -35.5449 iterations 17
Cbc0038I Pass  60: suminf.    2.60926 (23) obj. -35.5449 iterations 10
Cbc0038I Pass  61: suminf.    2.26219 (13) obj. -35.5449 iterations 22
Cbc0038I Pass  62: suminf.    2.16244 (13) obj. -35.5449 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 121 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -27.1867 to -28.3209 (0.12 seconds)
Cbc0038I Round again with cutoff of -44.3297
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.54259 (27) obj. -59.8073 iterations 0
Cbc0038I Pass  63: suminf.    1.54259 (27) obj. -59.8073 iterations 1
Cbc0038I Pass  64: suminf.    1.08372 (17) obj. -44.3297 iterations 11
Cbc0038I Pass  65: suminf.    1.56736 (22) obj. -44.3297 iterations 31
Cbc0038I Pass  66: suminf.    1.11080 (22) obj. -44.3297 iterations 1
Cbc0038I Pass  67: suminf.    2.67382 (21) obj. -44.3297 iterations 22
Cbc0038I Pass  68: suminf.    2.67382 (21) obj. -44.3297 iterations 2
Cbc0038I Pass  69: suminf.    2.74860 (21) obj. -44.3297 iterations 5
Cbc0038I Pass  70: suminf.    2.74860 (21) obj. -44.3297 iterations 2
Cbc0038I Pass  71: suminf.    2.67382 (21) obj. -44.3297 iterations 6
Cbc0038I Pass  72: suminf.    1.84305 (26) obj. -44.3297 iterations 18
Cbc0038I Pass  73: suminf.    1.69626 (28) obj. -44.3297 iterations 4
Cbc0038I Pass  74: suminf.    2.78113 (22) obj. -44.3297 iterations 14
Cbc0038I Pass  75: suminf.    2.78113 (22) obj. -44.3297 iterations 0
Cbc0038I Pass  76: suminf.    2.84921 (22) obj. -44.3297 iterations 5
Cbc0038I Pass  77: suminf.    2.84921 (22) obj. -44.3297 iterations 1
Cbc0038I Pass  78: suminf.    2.83434 (22) obj. -44.3297 iterations 3
Cbc0038I Pass  79: suminf.    2.83434 (22) obj. -44.3297 iterations 1
Cbc0038I Pass  80: suminf.    2.84921 (22) obj. -44.3297 iterations 3
Cbc0038I Pass  81: suminf.    3.03451 (22) obj. -44.3297 iterations 5
Cbc0038I Pass  82: suminf.    1.80680 (23) obj. -44.3297 iterations 3
Cbc0038I Pass  83: suminf.    1.80680 (23) obj. -44.3297 iterations 0
Cbc0038I Pass  84: suminf.    1.97340 (21) obj. -44.3297 iterations 10
Cbc0038I Pass  85: suminf.    1.95012 (22) obj. -44.3297 iterations 3
Cbc0038I Pass  86: suminf.    1.97340 (21) obj. -44.3297 iterations 11
Cbc0038I Pass  87: suminf.    3.09998 (26) obj. -44.3297 iterations 15
Cbc0038I Pass  88: suminf.    3.03696 (26) obj. -44.3297 iterations 2
Cbc0038I Pass  89: suminf.    3.00974 (23) obj. -44.3297 iterations 29
Cbc0038I Pass  90: suminf.    3.00974 (23) obj. -44.3297 iterations 1
Cbc0038I Pass  91: suminf.    3.00706 (23) obj. -44.3297 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -28.3209 - took 0.11 seconds
Cbc0012I Integer solution of -28.3209 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 103 rows 121 columns, reduced to 14 rows 16 columns
Cbc0031I 59 added rows had average density of 16.355932
Cbc0013I At root node, 59 cuts changed objective from -64.827364 to -31.801683 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 3250 row cuts average 8.0 elements, 1 column cuts (1 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 154 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 234 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 292 row cuts average 70.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.3209 best solution, best possible -31.801683 (0.73 seconds)
Cbc0010I After 11 nodes, 8 on tree, -28.3209 best solution, best possible -31.801683 (1.46 seconds)
Cbc0016I Integer solution of -28.38143 found by strong branching after 1209 iterations and 17 nodes (1.64 seconds)
Cbc0016I Integer solution of -28.63719 found by strong branching after 1241 iterations and 18 nodes (1.69 seconds)
Cbc0016I Integer solution of -28.79951 found by strong branching after 1313 iterations and 21 nodes (1.77 seconds)
Cbc0001I Search completed - best objective -28.79951, took 1616 iterations and 28 nodes (1.85 seconds)
Cbc0032I Strong branching done 492 times (9058 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 10, 57 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.85

