Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 75 (-3) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 1.80534e-05 - average 1.36768e-07, 8 fixed columns
Coin0506I Presolve 117 (-15) rows, 67 (-8) columns and 360 (-46) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Coin0511I After Postsolve, objective 52.443134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Coin0511I After Postsolve, objective 52.443134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.44313352 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 75 columns (74 integer (74 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.99924
Cbc0038I Solution found of 0.195994
Cbc0038I Relaxing continuous gives -7.50049
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 76 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -7.50049 to -24.2583 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.0769
Cbc0038I Pass   1: suminf.    2.66374 (38) obj. -27.0769 iterations 44
Cbc0038I Pass   2: suminf.    0.84985 (4) obj. -27.0769 iterations 41
Cbc0038I Pass   3: suminf.    0.51810 (3) obj. -27.0769 iterations 1
Cbc0038I Pass   4: suminf.    1.15232 (4) obj. -27.0769 iterations 6
Cbc0038I Pass   5: suminf.    1.06774 (4) obj. -27.0769 iterations 2
Cbc0038I Pass   6: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass   7: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass   8: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass   9: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  10: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  11: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  12: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  13: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  14: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  15: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  16: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  17: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  18: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  19: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  20: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  21: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  22: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  23: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  24: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  25: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  26: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  27: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  28: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  29: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  30: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -24.2583 to -24.54 (0.10 seconds)
Cbc0038I Round again with cutoff of -32.1502
Cbc0038I Pass  30: suminf.    3.35405 (38) obj. -32.1502 iterations 0
Cbc0038I Pass  31: suminf.    2.58913 (9) obj. -32.1502 iterations 31
Cbc0038I Pass  32: suminf.    2.23142 (6) obj. -32.1502 iterations 8
Cbc0038I Pass  33: suminf.    1.87524 (6) obj. -32.1502 iterations 2
Cbc0038I Pass  34: suminf.    1.35583 (3) obj. -32.1502 iterations 12
Cbc0038I Pass  35: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  36: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  37: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  38: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  39: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  40: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  41: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  42: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  43: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  44: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  45: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  46: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  47: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  48: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  49: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  50: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  51: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  52: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  53: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  54: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  55: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  56: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  57: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  58: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  59: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -24.54 - took 0.12 seconds
Cbc0012I Integer solution of -24.54001 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 132 rows 75 columns, reduced to 77 rows 44 columns
Cbc0031I 23 added rows had average density of 65.869565
Cbc0013I At root node, 23 cuts changed objective from -52.443134 to -46.641174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10816 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1424 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.54001 best solution, best possible -46.641174 (0.88 seconds)
Cbc0038I Full problem 132 rows 75 columns, reduced to 43 rows 28 columns
Cbc0038I Full problem 132 rows 75 columns, reduced to 6 rows 9 columns
Cbc0001I Search completed - best objective -24.54001, took 11099 iterations and 142 nodes (1.27 seconds)
Cbc0032I Strong branching done 1134 times (18829 iterations), fathomed 14 nodes and fixed 55 variables
Cbc0035I Maximum depth 35, 306 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-58) rows, 112 (-40) columns and 1773 (-1530) elements
Clp1000I sum of infeasibilities 8.22372e-08 - average 8.56638e-10, 17 fixed columns
Coin0506I Presolve 83 (-13) rows, 95 (-17) columns and 1362 (-411) elements
Clp0006I 0  Obj 63.883517 Dual inf 8.1314446 (95)
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 1.8006874 - largest nonzero change 1.1603454e-05 ( 0.00085132148%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 72.679568
Clp0000I Optimal - objective value 72.679568
Coin0511I After Postsolve, objective 72.679568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 72.679568
Clp0000I Optimal - objective value 72.679568
Clp0000I Optimal - objective value 72.679568
Clp0000I Optimal - objective value 72.679568
Coin0511I After Postsolve, objective 72.679568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.67956833 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 114 columns (114 integer (114 of which binary)) and 1783 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.336%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 3.60765
Cbc0038I Pass   1: suminf.    3.00479 (33) obj. -64.3251 iterations 11
Cbc0038I Pass   2: suminf.    1.06259 (18) obj. -45.9748 iterations 15
Cbc0038I Pass   3: suminf.    0.35236 (7) obj. -32.8808 iterations 11
Cbc0038I Solution found of -19.5997
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24.1677
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.00479 (33) obj. -64.3251 iterations 0
Cbc0038I Pass   5: suminf.    1.06259 (18) obj. -45.9748 iterations 15
Cbc0038I Pass   6: suminf.    0.41034 (8) obj. -33.8228 iterations 10
Cbc0038I Pass   7: suminf.    0.45125 (4) obj. -24.1677 iterations 11
Cbc0038I Pass   8: suminf.    0.55917 (2) obj. -24.1677 iterations 6
Cbc0038I Pass   9: suminf.    0.55917 (2) obj. -24.1677 iterations 0
Cbc0038I Pass  10: suminf.    0.36048 (3) obj. -24.1677 iterations 10
Cbc0038I Pass  11: suminf.    0.36048 (3) obj. -24.1677 iterations 0
Cbc0038I Pass  12: suminf.    0.54545 (2) obj. -29.2991 iterations 8
Cbc0038I Pass  13: suminf.    0.54545 (2) obj. -29.2991 iterations 0
Cbc0038I Pass  14: suminf.    0.56228 (2) obj. -24.1677 iterations 6
Cbc0038I Pass  15: suminf.    0.55917 (2) obj. -24.1677 iterations 4
Cbc0038I Pass  16: suminf.    0.36048 (3) obj. -24.1677 iterations 10
Cbc0038I Pass  17: suminf.    0.36048 (3) obj. -24.1677 iterations 0
Cbc0038I Pass  18: suminf.    0.54545 (2) obj. -29.2991 iterations 8
Cbc0038I Pass  19: suminf.    0.54545 (2) obj. -29.2991 iterations 0
Cbc0038I Pass  20: suminf.    0.56228 (2) obj. -24.1677 iterations 6
Cbc0038I Pass  21: suminf.    0.55917 (2) obj. -24.1677 iterations 4
Cbc0038I Pass  22: suminf.    0.36048 (3) obj. -24.1677 iterations 10
Cbc0038I Pass  23: suminf.    0.36048 (3) obj. -24.1677 iterations 0
Cbc0038I Pass  24: suminf.    0.54545 (2) obj. -29.2991 iterations 8
Cbc0038I Pass  25: suminf.    0.54545 (2) obj. -29.2991 iterations 0
Cbc0038I Pass  26: suminf.    0.56228 (2) obj. -24.1677 iterations 6
Cbc0038I Pass  27: suminf.    0.55917 (2) obj. -24.1677 iterations 4
Cbc0038I Pass  28: suminf.    0.36048 (3) obj. -24.1677 iterations 10
Cbc0038I Pass  29: suminf.    0.36048 (3) obj. -24.1677 iterations 0
Cbc0038I Pass  30: suminf.    0.54545 (2) obj. -29.2991 iterations 8
Cbc0038I Pass  31: suminf.    0.54545 (2) obj. -29.2991 iterations 0
Cbc0038I Pass  32: suminf.    0.56228 (2) obj. -24.1677 iterations 6
Cbc0038I Pass  33: suminf.    0.55917 (2) obj. -24.1677 iterations 4
Cbc0038I Rounding solution of -20.9279 is better than previous of -19.5997

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -32.3901
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.00479 (33) obj. -64.3251 iterations 0
Cbc0038I Pass  34: suminf.    0.34500 (7) obj. -32.3901 iterations 32
Cbc0038I Pass  35: suminf.    0.59105 (7) obj. -32.3901 iterations 16
Cbc0038I Pass  36: suminf.    0.56884 (6) obj. -32.3901 iterations 3
Cbc0038I Pass  37: suminf.    0.83860 (4) obj. -32.3901 iterations 8
Cbc0038I Pass  38: suminf.    0.66919 (4) obj. -32.3901 iterations 2
Cbc0038I Pass  39: suminf.    0.74301 (4) obj. -32.3901 iterations 13
Cbc0038I Pass  40: suminf.    0.46173 (4) obj. -32.3901 iterations 7
Cbc0038I Pass  41: suminf.    1.82189 (11) obj. -32.3901 iterations 17
Cbc0038I Pass  42: suminf.    1.59597 (11) obj. -32.3901 iterations 4
Cbc0038I Pass  43: suminf.    1.41227 (7) obj. -32.3901 iterations 18
Cbc0038I Pass  44: suminf.    1.12397 (8) obj. -32.3901 iterations 4
Cbc0038I Pass  45: suminf.    1.46810 (8) obj. -32.3901 iterations 6
Cbc0038I Pass  46: suminf.    1.57166 (11) obj. -32.3901 iterations 32
Cbc0038I Pass  47: suminf.    1.00515 (9) obj. -32.3901 iterations 9
Cbc0038I Pass  48: suminf.    0.90403 (9) obj. -32.3901 iterations 13
Cbc0038I Pass  49: suminf.    0.90403 (9) obj. -32.3901 iterations 0
Cbc0038I Pass  50: suminf.    1.40832 (7) obj. -32.3901 iterations 11
Cbc0038I Pass  51: suminf.    0.55243 (6) obj. -32.3901 iterations 9
Cbc0038I Pass  52: suminf.    1.07322 (7) obj. -32.3901 iterations 11
Cbc0038I Pass  53: suminf.    0.90032 (9) obj. -32.3901 iterations 6
Cbc0038I Pass  54: suminf.    1.48430 (8) obj. -32.3901 iterations 5
Cbc0038I Pass  55: suminf.    1.03614 (5) obj. -32.3901 iterations 6
Cbc0038I Pass  56: suminf.    0.52807 (5) obj. -32.3901 iterations 5
Cbc0038I Pass  57: suminf.    0.54933 (5) obj. -32.3901 iterations 8
Cbc0038I Pass  58: suminf.    0.53733 (5) obj. -32.3901 iterations 6
Cbc0038I Pass  59: suminf.    1.82645 (13) obj. -32.3901 iterations 20
Cbc0038I Pass  60: suminf.    1.82645 (13) obj. -32.3901 iterations 2
Cbc0038I Pass  61: suminf.    1.36993 (8) obj. -32.3901 iterations 14
Cbc0038I Pass  62: suminf.    0.80068 (8) obj. -32.3901 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 13 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20.9279 - took 0.03 seconds
Cbc0012I Integer solution of -20.92788 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 6 rows 6 columns
Cbc0031I 48 added rows had average density of 40.8125
Cbc0013I At root node, 48 cuts changed objective from -65.279535 to -34.282635 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10208 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1557 row cuts average 103.4 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 437 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1118 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 369 row cuts average 54.8 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 27.1 elements, 0 column cuts (0 active)  in 0.633 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.92788 best solution, best possible -34.282635 (2.11 seconds)
Cbc0012I Integer solution of -24.26751 found by rounding after 3911 iterations and 1 nodes (2.11 seconds)
Cbc0004I Integer solution of -24.54001 found after 3936 iterations and 1 nodes (2.12 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 10 rows 16 columns
Cbc0038I Full problem 98 rows 114 columns, reduced to 8 rows 12 columns
Cbc0001I Search completed - best objective -24.54001, took 6467 iterations and 106 nodes (2.70 seconds)
Cbc0032I Strong branching done 892 times (12796 iterations), fathomed 21 nodes and fixed 29 variables
Cbc0035I Maximum depth 15, 204 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       2.71

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 75 (-3) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 1.80534e-05 - average 1.36768e-07, 8 fixed columns
Coin0506I Presolve 117 (-15) rows, 67 (-8) columns and 360 (-46) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Coin0511I After Postsolve, objective 52.443134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Clp0000I Optimal - objective value 52.443134
Coin0511I After Postsolve, objective 52.443134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.44313352 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 75 columns (74 integer (74 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.99924
Cbc0038I Solution found of 0.195994
Cbc0038I Relaxing continuous gives -7.50049
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 76 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -7.50049 to -24.2583 (0.06 seconds)
Cbc0038I Round again with cutoff of -27.0769
Cbc0038I Pass   1: suminf.    2.66374 (38) obj. -27.0769 iterations 44
Cbc0038I Pass   2: suminf.    0.84985 (4) obj. -27.0769 iterations 41
Cbc0038I Pass   3: suminf.    0.51810 (3) obj. -27.0769 iterations 1
Cbc0038I Pass   4: suminf.    1.15232 (4) obj. -27.0769 iterations 6
Cbc0038I Pass   5: suminf.    1.06774 (4) obj. -27.0769 iterations 2
Cbc0038I Pass   6: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass   7: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass   8: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass   9: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  10: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  11: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  12: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  13: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  14: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  15: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  16: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  17: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  18: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  19: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  20: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  21: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  22: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  23: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I Pass  24: suminf.    1.18453 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  25: suminf.    1.06774 (4) obj. -27.0769 iterations 4
Cbc0038I Pass  26: suminf.    1.06774 (4) obj. -27.0769 iterations 0
Cbc0038I Pass  27: suminf.    0.79049 (4) obj. -27.0769 iterations 3
Cbc0038I Pass  28: suminf.    0.57729 (5) obj. -27.0769 iterations 3
Cbc0038I Pass  29: suminf.    0.93135 (4) obj. -27.0769 iterations 7
Cbc0038I Pass  30: suminf.    0.88089 (4) obj. -27.0769 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -24.2583 to -24.54 (0.12 seconds)
Cbc0038I Round again with cutoff of -32.1502
Cbc0038I Pass  30: suminf.    3.35405 (38) obj. -32.1502 iterations 0
Cbc0038I Pass  31: suminf.    2.58913 (9) obj. -32.1502 iterations 31
Cbc0038I Pass  32: suminf.    2.23142 (6) obj. -32.1502 iterations 8
Cbc0038I Pass  33: suminf.    1.87524 (6) obj. -32.1502 iterations 2
Cbc0038I Pass  34: suminf.    1.35583 (3) obj. -32.1502 iterations 12
Cbc0038I Pass  35: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  36: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  37: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  38: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  39: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  40: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  41: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  42: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  43: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  44: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  45: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  46: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  47: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  48: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  49: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  50: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  51: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  52: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  53: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I Pass  54: suminf.    1.33012 (5) obj. -32.1502 iterations 8
Cbc0038I Pass  55: suminf.    0.89441 (4) obj. -32.1502 iterations 5
Cbc0038I Pass  56: suminf.    0.88703 (4) obj. -32.1502 iterations 2
Cbc0038I Pass  57: suminf.    1.57723 (4) obj. -32.1502 iterations 8
Cbc0038I Pass  58: suminf.    1.35583 (3) obj. -32.1502 iterations 1
Cbc0038I Pass  59: suminf.    1.02969 (4) obj. -32.1502 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -24.54 - took 0.14 seconds
Cbc0012I Integer solution of -24.54001 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 132 rows 75 columns, reduced to 77 rows 44 columns
Cbc0031I 23 added rows had average density of 65.869565
Cbc0013I At root node, 23 cuts changed objective from -52.443134 to -46.641174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10816 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1424 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.54001 best solution, best possible -46.641174 (1.01 seconds)
Cbc0038I Full problem 132 rows 75 columns, reduced to 43 rows 28 columns
Cbc0038I Full problem 132 rows 75 columns, reduced to 6 rows 9 columns
Cbc0001I Search completed - best objective -24.54001, took 11099 iterations and 142 nodes (1.42 seconds)
Cbc0032I Strong branching done 1134 times (18829 iterations), fathomed 14 nodes and fixed 55 variables
Cbc0035I Maximum depth 35, 306 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-59) rows, 112 (-41) columns and 1773 (-1531) elements
Clp1000I sum of infeasibilities 8.22372e-08 - average 8.56638e-10, 17 fixed columns
Coin0506I Presolve 83 (-13) rows, 95 (-17) columns and 1362 (-411) elements
Clp0006I 0  Obj 63.883517 Dual inf 8.1314446 (95)
Clp0029I End of values pass after 95 iterations
Clp0014I Perturbing problem by 0.001% of 1.8006874 - largest nonzero change 1.1603454e-05 ( 0.00085132148%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 72.679568
Clp0000I Optimal - objective value 72.679568
Coin0511I After Postsolve, objective 72.679568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 72.679568
Clp0000I Optimal - objective value 72.679568
Clp0000I Optimal - objective value 72.679568
Clp0000I Optimal - objective value 72.679568
Coin0511I After Postsolve, objective 72.679568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.67956833 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 114 columns (114 integer (114 of which binary)) and 1783 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.336%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 3.60765
Cbc0038I Pass   1: suminf.    3.00479 (33) obj. -64.3251 iterations 11
Cbc0038I Pass   2: suminf.    1.06259 (18) obj. -45.9748 iterations 15
Cbc0038I Pass   3: suminf.    0.35236 (7) obj. -32.8808 iterations 11
Cbc0038I Solution found of -19.5997
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24.1677
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.00479 (33) obj. -64.3251 iterations 0
Cbc0038I Pass   5: suminf.    1.06259 (18) obj. -45.9748 iterations 15
Cbc0038I Pass   6: suminf.    0.41034 (8) obj. -33.8228 iterations 10
Cbc0038I Pass   7: suminf.    0.45125 (4) obj. -24.1677 iterations 11
Cbc0038I Pass   8: suminf.    0.55917 (2) obj. -24.1677 iterations 6
Cbc0038I Pass   9: suminf.    0.55917 (2) obj. -24.1677 iterations 0
Cbc0038I Pass  10: suminf.    0.36048 (3) obj. -24.1677 iterations 10
Cbc0038I Pass  11: suminf.    0.36048 (3) obj. -24.1677 iterations 0
Cbc0038I Pass  12: suminf.    0.54545 (2) obj. -29.2991 iterations 8
Cbc0038I Pass  13: suminf.    0.54545 (2) obj. -29.2991 iterations 0
Cbc0038I Pass  14: suminf.    0.56228 (2) obj. -24.1677 iterations 6
Cbc0038I Pass  15: suminf.    0.55917 (2) obj. -24.1677 iterations 4
Cbc0038I Pass  16: suminf.    0.36048 (3) obj. -24.1677 iterations 10
Cbc0038I Pass  17: suminf.    0.36048 (3) obj. -24.1677 iterations 0
Cbc0038I Pass  18: suminf.    0.54545 (2) obj. -29.2991 iterations 8
Cbc0038I Pass  19: suminf.    0.54545 (2) obj. -29.2991 iterations 0
Cbc0038I Pass  20: suminf.    0.56228 (2) obj. -24.1677 iterations 6
Cbc0038I Pass  21: suminf.    0.55917 (2) obj. -24.1677 iterations 4
Cbc0038I Pass  22: suminf.    0.36048 (3) obj. -24.1677 iterations 10
Cbc0038I Pass  23: suminf.    0.36048 (3) obj. -24.1677 iterations 0
Cbc0038I Pass  24: suminf.    0.54545 (2) obj. -29.2991 iterations 8
Cbc0038I Pass  25: suminf.    0.54545 (2) obj. -29.2991 iterations 0
Cbc0038I Pass  26: suminf.    0.56228 (2) obj. -24.1677 iterations 6
Cbc0038I Pass  27: suminf.    0.55917 (2) obj. -24.1677 iterations 4
Cbc0038I Pass  28: suminf.    0.36048 (3) obj. -24.1677 iterations 10
Cbc0038I Pass  29: suminf.    0.36048 (3) obj. -24.1677 iterations 0
Cbc0038I Pass  30: suminf.    0.54545 (2) obj. -29.2991 iterations 8
Cbc0038I Pass  31: suminf.    0.54545 (2) obj. -29.2991 iterations 0
Cbc0038I Pass  32: suminf.    0.56228 (2) obj. -24.1677 iterations 6
Cbc0038I Pass  33: suminf.    0.55917 (2) obj. -24.1677 iterations 4
Cbc0038I Rounding solution of -20.9279 is better than previous of -19.5997

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -32.3901
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.00479 (33) obj. -64.3251 iterations 0
Cbc0038I Pass  34: suminf.    0.34500 (7) obj. -32.3901 iterations 32
Cbc0038I Pass  35: suminf.    0.59105 (7) obj. -32.3901 iterations 16
Cbc0038I Pass  36: suminf.    0.56884 (6) obj. -32.3901 iterations 3
Cbc0038I Pass  37: suminf.    0.83860 (4) obj. -32.3901 iterations 8
Cbc0038I Pass  38: suminf.    0.66919 (4) obj. -32.3901 iterations 2
Cbc0038I Pass  39: suminf.    0.74301 (4) obj. -32.3901 iterations 13
Cbc0038I Pass  40: suminf.    0.46173 (4) obj. -32.3901 iterations 7
Cbc0038I Pass  41: suminf.    1.82189 (11) obj. -32.3901 iterations 17
Cbc0038I Pass  42: suminf.    1.59597 (11) obj. -32.3901 iterations 4
Cbc0038I Pass  43: suminf.    1.41227 (7) obj. -32.3901 iterations 18
Cbc0038I Pass  44: suminf.    1.12397 (8) obj. -32.3901 iterations 4
Cbc0038I Pass  45: suminf.    1.46810 (8) obj. -32.3901 iterations 6
Cbc0038I Pass  46: suminf.    1.57166 (11) obj. -32.3901 iterations 32
Cbc0038I Pass  47: suminf.    1.00515 (9) obj. -32.3901 iterations 9
Cbc0038I Pass  48: suminf.    0.90403 (9) obj. -32.3901 iterations 13
Cbc0038I Pass  49: suminf.    0.90403 (9) obj. -32.3901 iterations 0
Cbc0038I Pass  50: suminf.    1.40832 (7) obj. -32.3901 iterations 11
Cbc0038I Pass  51: suminf.    0.55243 (6) obj. -32.3901 iterations 9
Cbc0038I Pass  52: suminf.    1.07322 (7) obj. -32.3901 iterations 11
Cbc0038I Pass  53: suminf.    0.90032 (9) obj. -32.3901 iterations 6
Cbc0038I Pass  54: suminf.    1.48430 (8) obj. -32.3901 iterations 5
Cbc0038I Pass  55: suminf.    1.03614 (5) obj. -32.3901 iterations 6
Cbc0038I Pass  56: suminf.    0.52807 (5) obj. -32.3901 iterations 5
Cbc0038I Pass  57: suminf.    0.54933 (5) obj. -32.3901 iterations 8
Cbc0038I Pass  58: suminf.    0.53733 (5) obj. -32.3901 iterations 6
Cbc0038I Pass  59: suminf.    1.82645 (13) obj. -32.3901 iterations 20
Cbc0038I Pass  60: suminf.    1.82645 (13) obj. -32.3901 iterations 2
Cbc0038I Pass  61: suminf.    1.36993 (8) obj. -32.3901 iterations 14
Cbc0038I Pass  62: suminf.    0.80068 (8) obj. -32.3901 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 13 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -20.9279 - took 0.04 seconds
Cbc0012I Integer solution of -20.92788 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 6 rows 6 columns
Cbc0031I 48 added rows had average density of 40.8125
Cbc0013I At root node, 48 cuts changed objective from -65.279535 to -34.282635 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10208 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1557 row cuts average 103.4 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 437 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1118 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 369 row cuts average 54.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 27.1 elements, 0 column cuts (0 active)  in 0.711 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.92788 best solution, best possible -34.282635 (2.46 seconds)
Cbc0012I Integer solution of -24.26751 found by rounding after 3911 iterations and 1 nodes (2.47 seconds)
Cbc0004I Integer solution of -24.54001 found after 3936 iterations and 1 nodes (2.47 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 10 rows 16 columns
Cbc0038I Full problem 98 rows 114 columns, reduced to 8 rows 12 columns
Cbc0001I Search completed - best objective -24.54001, took 6467 iterations and 106 nodes (3.07 seconds)
Cbc0032I Strong branching done 892 times (12796 iterations), fathomed 21 nodes and fixed 29 variables
Cbc0035I Maximum depth 15, 204 variables fixed on reduced cost
Total time (CPU seconds):       2.26   (Wallclock seconds):       3.09

