Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 23 (-10) columns and 116 (-67) elements
Clp1000I sum of infeasibilities 2.66811e-06 - average 6.84131e-08, 1 fixed columns
Coin0506I Presolve 37 (-2) rows, 22 (-1) columns and 110 (-6) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 44.910413
Clp0000I Optimal - objective value 44.910413
Coin0511I After Postsolve, objective 44.910413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.910413
Clp0000I Optimal - objective value 44.910413
Clp0000I Optimal - objective value 44.910413
Coin0511I After Postsolve, objective 44.910413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.91041336 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 23 columns (22 integer (22 of which binary)) and 117 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.105%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.07697
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.8634 iterations 10
Cbc0038I Solution found of -28.8634
Cbc0038I Relaxing continuous gives -28.8634
Cbc0038I Rounding solution of -29.6614 is better than previous of -28.8634

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -29.6614 to -31.3561 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.7116
Cbc0038I Pass   2: suminf.    0.10182 (1) obj. -32.7116 iterations 1
Cbc0038I Pass   3: suminf.    0.18947 (1) obj. -32.7116 iterations 1
Cbc0038I Pass   4: suminf.    1.08155 (4) obj. -32.7116 iterations 2
Cbc0038I Pass   5: suminf.    0.30000 (1) obj. -32.7116 iterations 5
Cbc0038I Pass   6: suminf.    0.30000 (1) obj. -32.7116 iterations 0
Cbc0038I Pass   7: suminf.    0.33625 (1) obj. -32.7116 iterations 3
Cbc0038I Pass   8: suminf.    0.30000 (1) obj. -32.7116 iterations 4
Cbc0038I Pass   9: suminf.    0.48963 (3) obj. -32.7116 iterations 6
Cbc0038I Pass  10: suminf.    0.32313 (2) obj. -32.7116 iterations 2
Cbc0038I Pass  11: suminf.    1.00170 (3) obj. -32.7116 iterations 4
Cbc0038I Pass  12: suminf.    0.32313 (2) obj. -32.7116 iterations 4
Cbc0038I Pass  13: suminf.    2.47462 (7) obj. -32.7116 iterations 5
Cbc0038I Pass  14: suminf.    1.31763 (4) obj. -32.7116 iterations 4
Cbc0038I Pass  15: suminf.    1.26535 (4) obj. -32.7116 iterations 4
Cbc0038I Pass  16: suminf.    0.05934 (2) obj. -32.7116 iterations 4
Cbc0038I Pass  17: suminf.    0.99623 (4) obj. -32.7116 iterations 5
Cbc0038I Pass  18: suminf.    0.38383 (2) obj. -32.7116 iterations 1
Cbc0038I Pass  19: suminf.    0.28190 (3) obj. -32.7116 iterations 3
Cbc0038I Pass  20: suminf.    0.28164 (3) obj. -32.7116 iterations 2
Cbc0038I Pass  21: suminf.    0.19767 (2) obj. -32.7116 iterations 6
Cbc0038I Pass  22: suminf.    0.19767 (2) obj. -32.7116 iterations 0
Cbc0038I Pass  23: suminf.    1.03153 (3) obj. -32.7116 iterations 5
Cbc0038I Pass  24: suminf.    0.13684 (1) obj. -34.8333 iterations 4
Cbc0038I Pass  25: suminf.    0.08070 (1) obj. -32.7116 iterations 1
Cbc0038I Pass  26: suminf.    0.13684 (1) obj. -32.7116 iterations 1
Cbc0038I Pass  27: suminf.    0.82273 (2) obj. -32.7116 iterations 3
Cbc0038I Pass  28: suminf.    2.60042 (7) obj. -32.7116 iterations 13
Cbc0038I Pass  29: suminf.    1.39479 (4) obj. -32.7116 iterations 4
Cbc0038I Pass  30: suminf.    0.19767 (2) obj. -32.7116 iterations 5
Cbc0038I Pass  31: suminf.    1.03153 (3) obj. -32.7116 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -31.3561 - took 0.04 seconds
Cbc0012I Integer solution of -31.356067 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 23 columns, reduced to 19 rows 12 columns
Cbc0031I 11 added rows had average density of 10.090909
Cbc0013I At root node, 11 cuts changed objective from -44.910413 to -34.093551 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 703 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 338 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 18 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.356067, took 1349 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 22 times (172 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-18) rows, 51 (-11) columns and 442 (-204) elements
Clp1000I sum of infeasibilities 3.27599e-08 - average 7.27999e-10, 31 fixed columns
Coin0506I Presolve 16 (-29) rows, 20 (-31) columns and 67 (-375) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 1.3397452 - largest nonzero change 0 ( 0%) - largest zero change 1.7866211e-05
Clp0000I Optimal - objective value 37.63852
Clp0000I Optimal - objective value 37.63852
Coin0511I After Postsolve, objective 37.63852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1429463 - largest nonzero change 0 ( 0%) - largest zero change 1.9561233e-05
Clp0000I Optimal - objective value 71.693839
Clp0000I Optimal - objective value 71.693839
Clp0000I Optimal - objective value 71.693839
Coin0511I After Postsolve, objective 71.693839, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.69383907 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 43 columns (43 integer (43 of which binary)) and 333 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.661%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.43563
Cbc0038I Pass   1: suminf.    1.91892 (12) obj. -48.3927 iterations 5
Cbc0038I Pass   2: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Solution found of -11.0708
Cbc0038I Rounding solution of -14.027 is better than previous of -11.0708

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -17.6156
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Pass   4: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Pass   5: suminf.    0.20074 (1) obj. -17.6156 iterations 18
Cbc0038I Pass   6: suminf.    0.30000 (1) obj. -33.8933 iterations 2
Cbc0038I Pass   7: suminf.    0.19048 (1) obj. -18.4825 iterations 11
Cbc0038I Pass   8: suminf.    0.19048 (1) obj. -18.4825 iterations 0
Cbc0038I Pass   9: suminf.    0.02531 (4) obj. -17.6156 iterations 3
Cbc0038I Pass  10: suminf.    0.18947 (1) obj. -19.0245 iterations 5
Cbc0038I Pass  11: suminf.    0.15220 (1) obj. -17.6156 iterations 1
Cbc0038I Pass  12: suminf.    0.67450 (4) obj. -17.6156 iterations 14
Cbc0038I Pass  13: suminf.    0.59500 (4) obj. -20.6509 iterations 3
Cbc0038I Pass  14: suminf.    0.38951 (3) obj. -17.6156 iterations 5
Cbc0038I Pass  15: suminf.    0.38951 (3) obj. -17.6156 iterations 0
Cbc0038I Pass  16: suminf.    0.69649 (2) obj. -17.6156 iterations 3
Cbc0038I Pass  17: suminf.    0.49718 (2) obj. -17.6156 iterations 1
Cbc0038I Pass  18: suminf.    0.52069 (3) obj. -17.6156 iterations 4
Cbc0038I Pass  19: suminf.    0.52069 (3) obj. -17.6156 iterations 1
Cbc0038I Pass  20: suminf.    0.74562 (2) obj. -17.6156 iterations 3
Cbc0038I Pass  21: suminf.    0.61874 (2) obj. -17.6156 iterations 1
Cbc0038I Pass  22: suminf.    1.15918 (6) obj. -17.6156 iterations 8
Cbc0038I Pass  23: suminf.    0.82845 (5) obj. -18.1787 iterations 1
Cbc0038I Pass  24: suminf.    1.11017 (3) obj. -17.6156 iterations 7
Cbc0038I Pass  25: suminf.    1.11017 (3) obj. -17.6156 iterations 0
Cbc0038I Pass  26: suminf.    0.74562 (2) obj. -17.6156 iterations 3
Cbc0038I Pass  27: suminf.    0.61874 (2) obj. -17.6156 iterations 1
Cbc0038I Pass  28: suminf.    0.88549 (7) obj. -19.3067 iterations 12
Cbc0038I Pass  29: suminf.    0.88549 (7) obj. -19.3067 iterations 0
Cbc0038I Pass  30: suminf.    0.79499 (3) obj. -17.6156 iterations 8
Cbc0038I Pass  31: suminf.    0.44595 (1) obj. -17.6156 iterations 1
Cbc0038I Pass  32: suminf.    0.38750 (1) obj. -19.5212 iterations 1
Cbc0038I Rounding solution of -29.6614 is better than previous of -14.027

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -29.6614 to -31.3561 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.0674
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Pass  33: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Pass  34: suminf.    0.49423 (3) obj. -35.0674 iterations 11
Cbc0038I Pass  35: suminf.    0.47424 (3) obj. -35.7191 iterations 2
Cbc0038I Pass  36: suminf.    0.69136 (2) obj. -35.0674 iterations 5
Cbc0038I Pass  37: suminf.    0.69136 (2) obj. -35.0674 iterations 0
Cbc0038I Pass  38: suminf.    0.46950 (2) obj. -35.0674 iterations 1
Cbc0038I Pass  39: suminf.    0.42500 (2) obj. -36.5183 iterations 1
Cbc0038I Pass  40: suminf.    1.07026 (12) obj. -35.0674 iterations 13
Cbc0038I Pass  41: suminf.    0.94034 (4) obj. -35.0674 iterations 4
Cbc0038I Pass  42: suminf.    0.99716 (12) obj. -35.0674 iterations 4
Cbc0038I Pass  43: suminf.    0.96051 (4) obj. -35.0674 iterations 1
Cbc0038I Pass  44: suminf.    0.90868 (11) obj. -35.0674 iterations 7
Cbc0038I Pass  45: suminf.    0.82923 (3) obj. -35.0674 iterations 1
Cbc0038I Pass  46: suminf.    0.91256 (3) obj. -35.0674 iterations 3
Cbc0038I Pass  47: suminf.    0.91256 (3) obj. -35.0674 iterations 1
Cbc0038I Pass  48: suminf.    0.82923 (3) obj. -35.0674 iterations 2
Cbc0038I Pass  49: suminf.    1.05147 (6) obj. -35.0674 iterations 5
Cbc0038I Pass  50: suminf.    0.44861 (3) obj. -35.3446 iterations 4
Cbc0038I Pass  51: suminf.    1.36033 (11) obj. -35.0674 iterations 5
Cbc0038I Pass  52: suminf.    0.54101 (3) obj. -35.0674 iterations 1
Cbc0038I Pass  53: suminf.    0.66732 (5) obj. -35.0674 iterations 3
Cbc0038I Pass  54: suminf.    0.66732 (5) obj. -35.0674 iterations 0
Cbc0038I Pass  55: suminf.    0.54101 (3) obj. -35.0674 iterations 4
Cbc0038I Pass  56: suminf.    0.44861 (3) obj. -35.3446 iterations 2
Cbc0038I Pass  57: suminf.    1.36033 (11) obj. -35.0674 iterations 5
Cbc0038I Pass  58: suminf.    0.54101 (3) obj. -35.0674 iterations 1
Cbc0038I Pass  59: suminf.    0.96737 (6) obj. -35.0674 iterations 13
Cbc0038I Pass  60: suminf.    0.96737 (6) obj. -35.0674 iterations 3
Cbc0038I Pass  61: suminf.    0.94932 (5) obj. -35.0674 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -31.3561 - took 0.02 seconds
Cbc0012I Integer solution of -31.356067 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 43 columns, reduced to 23 rows 25 columns
Cbc0031I 14 added rows had average density of 7.1428571
Cbc0013I At root node, 104 cuts changed objective from -49.912425 to -30.003551 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 2.6 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.356067, took 13 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 23 (-10) columns and 116 (-67) elements
Clp1000I sum of infeasibilities 2.66811e-06 - average 6.84131e-08, 1 fixed columns
Coin0506I Presolve 37 (-2) rows, 22 (-1) columns and 110 (-6) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 44.910413
Clp0000I Optimal - objective value 44.910413
Coin0511I After Postsolve, objective 44.910413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.910413
Clp0000I Optimal - objective value 44.910413
Clp0000I Optimal - objective value 44.910413
Coin0511I After Postsolve, objective 44.910413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.91041336 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 23 columns (22 integer (22 of which binary)) and 117 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.105%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.07697
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -28.8634 iterations 10
Cbc0038I Solution found of -28.8634
Cbc0038I Relaxing continuous gives -28.8634
Cbc0038I Rounding solution of -29.6614 is better than previous of -28.8634

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -29.6614 to -31.3561 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.7116
Cbc0038I Pass   2: suminf.    0.10182 (1) obj. -32.7116 iterations 1
Cbc0038I Pass   3: suminf.    0.18947 (1) obj. -32.7116 iterations 1
Cbc0038I Pass   4: suminf.    1.08155 (4) obj. -32.7116 iterations 2
Cbc0038I Pass   5: suminf.    0.30000 (1) obj. -32.7116 iterations 5
Cbc0038I Pass   6: suminf.    0.30000 (1) obj. -32.7116 iterations 0
Cbc0038I Pass   7: suminf.    0.33625 (1) obj. -32.7116 iterations 3
Cbc0038I Pass   8: suminf.    0.30000 (1) obj. -32.7116 iterations 4
Cbc0038I Pass   9: suminf.    0.48963 (3) obj. -32.7116 iterations 6
Cbc0038I Pass  10: suminf.    0.32313 (2) obj. -32.7116 iterations 2
Cbc0038I Pass  11: suminf.    1.00170 (3) obj. -32.7116 iterations 4
Cbc0038I Pass  12: suminf.    0.32313 (2) obj. -32.7116 iterations 4
Cbc0038I Pass  13: suminf.    2.47462 (7) obj. -32.7116 iterations 5
Cbc0038I Pass  14: suminf.    1.31763 (4) obj. -32.7116 iterations 4
Cbc0038I Pass  15: suminf.    1.26535 (4) obj. -32.7116 iterations 4
Cbc0038I Pass  16: suminf.    0.05934 (2) obj. -32.7116 iterations 4
Cbc0038I Pass  17: suminf.    0.99623 (4) obj. -32.7116 iterations 5
Cbc0038I Pass  18: suminf.    0.38383 (2) obj. -32.7116 iterations 1
Cbc0038I Pass  19: suminf.    0.28190 (3) obj. -32.7116 iterations 3
Cbc0038I Pass  20: suminf.    0.28164 (3) obj. -32.7116 iterations 2
Cbc0038I Pass  21: suminf.    0.19767 (2) obj. -32.7116 iterations 6
Cbc0038I Pass  22: suminf.    0.19767 (2) obj. -32.7116 iterations 0
Cbc0038I Pass  23: suminf.    1.03153 (3) obj. -32.7116 iterations 5
Cbc0038I Pass  24: suminf.    0.13684 (1) obj. -34.8333 iterations 4
Cbc0038I Pass  25: suminf.    0.08070 (1) obj. -32.7116 iterations 1
Cbc0038I Pass  26: suminf.    0.13684 (1) obj. -32.7116 iterations 1
Cbc0038I Pass  27: suminf.    0.82273 (2) obj. -32.7116 iterations 3
Cbc0038I Pass  28: suminf.    2.60042 (7) obj. -32.7116 iterations 13
Cbc0038I Pass  29: suminf.    1.39479 (4) obj. -32.7116 iterations 4
Cbc0038I Pass  30: suminf.    0.19767 (2) obj. -32.7116 iterations 5
Cbc0038I Pass  31: suminf.    1.03153 (3) obj. -32.7116 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 23 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -31.3561 - took 0.02 seconds
Cbc0012I Integer solution of -31.356067 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 23 columns, reduced to 19 rows 12 columns
Cbc0031I 11 added rows had average density of 10.090909
Cbc0013I At root node, 11 cuts changed objective from -44.910413 to -34.093551 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 703 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 338 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 18 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.356067, took 1349 iterations and 2 nodes (0.14 seconds)
Cbc0032I Strong branching done 22 times (172 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 43 (-20) columns and 330 (-319) elements
Clp1000I sum of infeasibilities 4.96645e-08 - average 1.30696e-09, 27 fixed columns
Coin0506I Presolve 11 (-27) rows, 16 (-27) columns and 49 (-281) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.7271569 - largest nonzero change 1.1922733e-05 ( 0.00087729594%) - largest zero change 2.1684264e-05
Clp0000I Optimal - objective value 22.652809
Clp0000I Optimal - objective value 22.652809
Coin0511I After Postsolve, objective 22.652809, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6730798 - largest nonzero change 1.1203287e-05 ( 0.00087729594%) - largest zero change 2.2470649e-05
Clp0000I Optimal - objective value 58.904025
Clp0000I Optimal - objective value 58.904025
Clp0000I Optimal - objective value 58.904025
Coin0511I After Postsolve, objective 58.904025, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.90402512 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 43 columns (43 integer (43 of which binary)) and 333 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.661%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.43563
Cbc0038I Pass   1: suminf.    1.91892 (12) obj. -48.3927 iterations 5
Cbc0038I Pass   2: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Solution found of -11.0708
Cbc0038I Rounding solution of -14.027 is better than previous of -11.0708

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -17.6156
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Pass   4: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Pass   5: suminf.    0.20074 (1) obj. -17.6156 iterations 18
Cbc0038I Pass   6: suminf.    0.30000 (1) obj. -33.8933 iterations 2
Cbc0038I Pass   7: suminf.    0.19048 (1) obj. -18.4825 iterations 11
Cbc0038I Pass   8: suminf.    0.19048 (1) obj. -18.4825 iterations 0
Cbc0038I Pass   9: suminf.    0.02531 (4) obj. -17.6156 iterations 3
Cbc0038I Pass  10: suminf.    0.18947 (1) obj. -19.0245 iterations 5
Cbc0038I Pass  11: suminf.    0.15220 (1) obj. -17.6156 iterations 1
Cbc0038I Pass  12: suminf.    0.67450 (4) obj. -17.6156 iterations 14
Cbc0038I Pass  13: suminf.    0.59500 (4) obj. -20.6509 iterations 3
Cbc0038I Pass  14: suminf.    0.38951 (3) obj. -17.6156 iterations 6
Cbc0038I Pass  15: suminf.    0.38951 (3) obj. -17.6156 iterations 0
Cbc0038I Pass  16: suminf.    0.69649 (2) obj. -17.6156 iterations 3
Cbc0038I Pass  17: suminf.    0.49718 (2) obj. -17.6156 iterations 1
Cbc0038I Pass  18: suminf.    0.52069 (3) obj. -17.6156 iterations 4
Cbc0038I Pass  19: suminf.    0.52069 (3) obj. -17.6156 iterations 1
Cbc0038I Pass  20: suminf.    0.74562 (2) obj. -17.6156 iterations 3
Cbc0038I Pass  21: suminf.    0.61874 (2) obj. -17.6156 iterations 1
Cbc0038I Pass  22: suminf.    1.15918 (6) obj. -17.6156 iterations 8
Cbc0038I Pass  23: suminf.    0.82845 (5) obj. -18.1787 iterations 1
Cbc0038I Pass  24: suminf.    1.11017 (3) obj. -17.6156 iterations 7
Cbc0038I Pass  25: suminf.    1.11017 (3) obj. -17.6156 iterations 0
Cbc0038I Pass  26: suminf.    0.74562 (2) obj. -17.6156 iterations 3
Cbc0038I Pass  27: suminf.    0.61874 (2) obj. -17.6156 iterations 1
Cbc0038I Pass  28: suminf.    0.88549 (7) obj. -19.3067 iterations 12
Cbc0038I Pass  29: suminf.    0.88549 (7) obj. -19.3067 iterations 0
Cbc0038I Pass  30: suminf.    0.79499 (3) obj. -17.6156 iterations 8
Cbc0038I Pass  31: suminf.    0.44595 (1) obj. -17.6156 iterations 1
Cbc0038I Pass  32: suminf.    0.38750 (1) obj. -19.5212 iterations 1
Cbc0038I Rounding solution of -29.6614 is better than previous of -14.027

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -29.6614 to -31.3561 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.0674
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Pass  33: suminf.    1.91892 (12) obj. -48.3927 iterations 0
Cbc0038I Pass  34: suminf.    0.49423 (3) obj. -35.0674 iterations 11
Cbc0038I Pass  35: suminf.    0.47424 (3) obj. -35.7191 iterations 2
Cbc0038I Pass  36: suminf.    0.69136 (2) obj. -35.0674 iterations 5
Cbc0038I Pass  37: suminf.    0.69136 (2) obj. -35.0674 iterations 0
Cbc0038I Pass  38: suminf.    0.46950 (2) obj. -35.0674 iterations 1
Cbc0038I Pass  39: suminf.    0.42500 (2) obj. -36.5183 iterations 1
Cbc0038I Pass  40: suminf.    1.07026 (12) obj. -35.0674 iterations 13
Cbc0038I Pass  41: suminf.    0.94034 (4) obj. -35.0674 iterations 4
Cbc0038I Pass  42: suminf.    0.99716 (12) obj. -35.0674 iterations 4
Cbc0038I Pass  43: suminf.    0.96051 (4) obj. -35.0674 iterations 1
Cbc0038I Pass  44: suminf.    0.90868 (11) obj. -35.0674 iterations 7
Cbc0038I Pass  45: suminf.    0.82923 (3) obj. -35.0674 iterations 1
Cbc0038I Pass  46: suminf.    0.91256 (3) obj. -35.0674 iterations 3
Cbc0038I Pass  47: suminf.    0.91256 (3) obj. -35.0674 iterations 1
Cbc0038I Pass  48: suminf.    0.82923 (3) obj. -35.0674 iterations 2
Cbc0038I Pass  49: suminf.    1.05147 (6) obj. -35.0674 iterations 5
Cbc0038I Pass  50: suminf.    0.44861 (3) obj. -35.3446 iterations 4
Cbc0038I Pass  51: suminf.    1.36033 (11) obj. -35.0674 iterations 5
Cbc0038I Pass  52: suminf.    0.54101 (3) obj. -35.0674 iterations 1
Cbc0038I Pass  53: suminf.    0.66732 (5) obj. -35.0674 iterations 3
Cbc0038I Pass  54: suminf.    0.66732 (5) obj. -35.0674 iterations 0
Cbc0038I Pass  55: suminf.    0.54101 (3) obj. -35.0674 iterations 4
Cbc0038I Pass  56: suminf.    0.44861 (3) obj. -35.3446 iterations 2
Cbc0038I Pass  57: suminf.    1.36033 (11) obj. -35.0674 iterations 5
Cbc0038I Pass  58: suminf.    0.54101 (3) obj. -35.0674 iterations 1
Cbc0038I Pass  59: suminf.    0.96737 (6) obj. -35.0674 iterations 13
Cbc0038I Pass  60: suminf.    0.96737 (6) obj. -35.0674 iterations 3
Cbc0038I Pass  61: suminf.    0.94932 (5) obj. -35.0674 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -31.3561 - took 0.02 seconds
Cbc0012I Integer solution of -31.356067 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 43 columns, reduced to 23 rows 25 columns
Cbc0031I 14 added rows had average density of 7.1428571
Cbc0013I At root node, 103 cuts changed objective from -49.912425 to -30.003551 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 2.6 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.356067, took 13 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

