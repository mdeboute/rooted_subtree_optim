Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 372 (-155) rows, 191 (-73) columns and 1109 (-436) elements
Clp1000I sum of infeasibilities 3.56132e-06 - average 9.57345e-09, 176 fixed columns
Coin0506I Presolve 14 (-358) rows, 14 (-177) columns and 51 (-1058) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Coin0511I After Postsolve, objective 219110.76, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14619844 - largest nonzero change 0 ( 0%) - largest zero change 2.9997876e-05
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Coin0511I After Postsolve, objective 219110.76, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 219110.7639 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 372 rows, 191 columns (190 integer (190 of which binary)) and 1109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.506%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.21922
Cbc0038I Solution found of -168337
Cbc0038I Relaxing continuous gives -168337
Cbc0038I Before mini branch and bound, 179 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -168337 to -185318 (0.01 seconds)
Cbc0038I Round again with cutoff of -188698
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.78788 (4) obj. -188698 iterations 70
Cbc0038I Pass   2: suminf.    0.25985 (2) obj. -212268 iterations 17
Cbc0038I Pass   3: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass   4: suminf.    0.15709 (1) obj. -188698 iterations 4
Cbc0038I Pass   5: suminf.    0.71130 (2) obj. -188698 iterations 5
Cbc0038I Pass   6: suminf.    0.15709 (1) obj. -188698 iterations 4
Cbc0038I Pass   7: suminf.    2.38656 (13) obj. -188698 iterations 30
Cbc0038I Pass   8: suminf.    0.01461 (1) obj. -188698 iterations 23
Cbc0038I Solution found of -189460
Cbc0038I Relaxing continuous gives -189460
Cbc0038I Rounding solution of -206441 is better than previous of -189460

Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -208975
Cbc0038I Reduced cost fixing fixed 75 variables on major pass 3
Cbc0038I Pass   9: suminf.    1.57257 (4) obj. -208975 iterations 0
Cbc0038I Pass  10: suminf.    0.18145 (2) obj. -213322 iterations 20
Cbc0038I Pass  11: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  12: suminf.    0.50845 (2) obj. -208975 iterations 5
Cbc0038I Pass  13: suminf.    1.24270 (4) obj. -208975 iterations 28
Cbc0038I Pass  14: suminf.    0.81231 (2) obj. -208975 iterations 23
Cbc0038I Pass  15: suminf.    0.70779 (2) obj. -215315 iterations 12
Cbc0038I Pass  16: suminf.    0.41374 (4) obj. -208975 iterations 24
Cbc0038I Pass  17: suminf.    0.41374 (4) obj. -208975 iterations 7
Cbc0038I Pass  18: suminf.    1.18717 (3) obj. -213795 iterations 18
Cbc0038I Pass  19: suminf.    2.36640 (9) obj. -208975 iterations 14
Cbc0038I Pass  20: suminf.    1.57257 (4) obj. -208975 iterations 20
Cbc0038I Pass  21: suminf.    0.18145 (2) obj. -213322 iterations 18
Cbc0038I Pass  22: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  23: suminf.    0.50845 (2) obj. -208975 iterations 5
Cbc0038I Pass  24: suminf.    1.46826 (7) obj. -208975 iterations 16
Cbc0038I Pass  25: suminf.    3.73407 (13) obj. -208975 iterations 37
Cbc0038I Pass  26: suminf.    1.51066 (5) obj. -208975 iterations 17
Cbc0038I Pass  27: suminf.    1.57257 (4) obj. -208975 iterations 15
Cbc0038I Pass  28: suminf.    0.18145 (2) obj. -213322 iterations 16
Cbc0038I Pass  29: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  30: suminf.    0.50845 (2) obj. -208975 iterations 4
Cbc0038I Pass  31: suminf.    1.27999 (4) obj. -208975 iterations 16
Cbc0038I Pass  32: suminf.    1.16135 (4) obj. -208975 iterations 11
Cbc0038I Pass  33: suminf.    1.19973 (4) obj. -208975 iterations 13
Cbc0038I Pass  34: suminf.    1.18717 (3) obj. -213795 iterations 12
Cbc0038I Pass  35: suminf.    0.70779 (2) obj. -215315 iterations 2
Cbc0038I Pass  36: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  37: suminf.    0.50845 (2) obj. -208975 iterations 4
Cbc0038I Pass  38: suminf.    2.76010 (7) obj. -208975 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 162 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -206441 - took 0.03 seconds
Cbc0012I Integer solution of -206441.41 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 372 rows 191 columns, reduced to 11 rows 12 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 10.5
Cbc0013I At root node, 3 cuts changed objective from -219110.76 to -206441.41 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.4 elements, 42 column cuts (42 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 185.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -206441.41, took 61 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 311 (-215) rows, 319 (-205) columns and 13162 (-22574) elements
Clp1000I sum of infeasibilities 2.33166e-05 - average 7.49731e-08, 243 fixed columns
Coin0506I Presolve 70 (-241) rows, 74 (-245) columns and 279 (-12883) elements
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 0.2725439 - largest nonzero change 2.7797641e-05 ( 0.0023693761%) - largest zero change 2.9968197e-05
Clp0000I Optimal - objective value 219073.76
Clp0000I Optimal - objective value 219073.76
Coin0511I After Postsolve, objective 219073.76, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1890141 - largest nonzero change 1.8713692e-05 ( 0.0011765296%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 219274.78
Clp0000I Optimal - objective value 219274.78
Clp0000I Optimal - objective value 219274.78
Coin0511I After Postsolve, objective 219274.78, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 219274.7825 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 311 rows, 319 columns (319 integer (319 of which binary)) and 13162 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.276%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 117 integers unsatisfied sum - 5.56477
Cbc0038I Pass   1: suminf.    1.73407 (93) obj. -142133 iterations 48
Cbc0038I Pass   2: suminf.    1.73407 (93) obj. -142133 iterations 1
Cbc0038I Pass   3: suminf.    1.08139 (65) obj. -142081 iterations 28
Cbc0038I Pass   4: suminf.    0.61636 (42) obj. -142041 iterations 23
Cbc0038I Pass   5: suminf.    0.14487 (13) obj. -142008 iterations 29
Cbc0038I Solution found of -141991
Cbc0038I Rounding solution of -168128 is better than previous of -141991

Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 311 rows 319 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -168128 to -185928 (0.14 seconds)
Cbc0038I Round again with cutoff of -189263
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   6: suminf.    3.87832 (110) obj. -189263 iterations 19
Cbc0038I Pass   7: suminf.    2.78940 (91) obj. -201599 iterations 37
Cbc0038I Pass   8: suminf.    2.46095 (90) obj. -192790 iterations 2
Cbc0038I Pass   9: suminf.    1.49977 (74) obj. -189263 iterations 26
Cbc0038I Pass  10: suminf.    1.41122 (47) obj. -212157 iterations 35
Cbc0038I Pass  11: suminf.    1.15151 (46) obj. -209241 iterations 7
Cbc0038I Pass  12: suminf.    0.49137 (22) obj. -209212 iterations 24
Cbc0038I Pass  13: suminf.    0.17447 (1) obj. -189263 iterations 28
Cbc0038I Pass  14: suminf.    0.72169 (2) obj. -189263 iterations 8
Cbc0038I Pass  15: suminf.    0.17447 (1) obj. -189263 iterations 7
Cbc0038I Pass  16: suminf.    1.87056 (25) obj. -189263 iterations 53
Cbc0038I Pass  17: suminf.    0.65056 (21) obj. -192892 iterations 23
Cbc0038I Pass  18: suminf.    0.47875 (1) obj. -189263 iterations 23
Cbc0038I Pass  19: suminf.    0.02062 (1) obj. -209184 iterations 4
Cbc0038I Pass  20: suminf.    0.17450 (1) obj. -189263 iterations 8
Cbc0038I Pass  21: suminf.    0.72171 (2) obj. -189263 iterations 6
Cbc0038I Pass  22: suminf.    0.17450 (1) obj. -189263 iterations 5
Cbc0038I Pass  23: suminf.    0.77466 (19) obj. -189263 iterations 49
Cbc0038I Pass  24: suminf.    0.76274 (25) obj. -189263 iterations 14
Cbc0038I Pass  25: suminf.    0.29166 (8) obj. -189263 iterations 33
Cbc0038I Pass  26: suminf.    0.23718 (8) obj. -189263 iterations 8
Cbc0038I Pass  27: suminf.    0.70779 (2) obj. -215313 iterations 24
Cbc0038I Pass  28: suminf.    0.02062 (1) obj. -209183 iterations 3
Cbc0038I Pass  29: suminf.    0.17453 (1) obj. -189263 iterations 6
Cbc0038I Pass  30: suminf.    0.72173 (2) obj. -189263 iterations 6
Cbc0038I Pass  31: suminf.    0.17453 (1) obj. -189263 iterations 5
Cbc0038I Pass  32: suminf.    2.24196 (28) obj. -189263 iterations 53
Cbc0038I Pass  33: suminf.    2.24196 (28) obj. -189263 iterations 6
Cbc0038I Pass  34: suminf.    0.70366 (19) obj. -189263 iterations 24
Cbc0038I Pass  35: suminf.    0.92566 (3) obj. -189263 iterations 31
Cbc0038I Rounding solution of -206441 is better than previous of -185928

Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous
Cbc0038I Full problem 311 rows 319 columns, reduced to 26 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I Round again with cutoff of -209008
Cbc0038I Reduced cost fixing fixed 77 variables on major pass 3
Cbc0038I Pass  35: suminf.    4.72431 (110) obj. -209008 iterations 0
Cbc0038I Pass  36: suminf.    2.55826 (87) obj. -212225 iterations 36
Cbc0038I Pass  37: suminf.    2.32491 (86) obj. -209308 iterations 3
Cbc0038I Pass  38: suminf.    1.93869 (74) obj. -209277 iterations 12
Cbc0038I Pass  39: suminf.    1.57878 (62) obj. -209262 iterations 12
Cbc0038I Pass  40: suminf.    0.95648 (40) obj. -209234 iterations 22
Cbc0038I Pass  41: suminf.    0.36885 (17) obj. -209205 iterations 23
Cbc0038I Pass  42: suminf.    0.50613 (2) obj. -209008 iterations 25
Cbc0038I Pass  43: suminf.    0.02062 (1) obj. -209185 iterations 8
Cbc0038I Pass  44: suminf.    2.30593 (25) obj. -209008 iterations 49
Cbc0038I Pass  45: suminf.    1.36837 (21) obj. -209008 iterations 16
Cbc0038I Pass  46: suminf.    0.91468 (10) obj. -215323 iterations 20
Cbc0038I Pass  47: suminf.    0.22595 (9) obj. -209193 iterations 3
Cbc0038I Pass  48: suminf.    0.50592 (2) obj. -209008 iterations 16
Cbc0038I Pass  49: suminf.    0.02062 (1) obj. -209180 iterations 7
Cbc0038I Pass  50: suminf.    3.52991 (32) obj. -209008 iterations 43
Cbc0038I Pass  51: suminf.    2.28554 (27) obj. -209008 iterations 24
Cbc0038I Pass  52: suminf.    0.39009 (9) obj. -212302 iterations 34
Cbc0038I Pass  53: suminf.    0.20439 (8) obj. -209191 iterations 3
Cbc0038I Pass  54: suminf.    0.50605 (2) obj. -209008 iterations 15
Cbc0038I Pass  55: suminf.    0.02062 (1) obj. -209183 iterations 7
Cbc0038I Pass  56: suminf.    1.34801 (24) obj. -209008 iterations 56
Cbc0038I Pass  57: suminf.    1.34801 (24) obj. -209008 iterations 9
Cbc0038I Pass  58: suminf.    1.24501 (8) obj. -209008 iterations 23
Cbc0038I Pass  59: suminf.    0.83928 (7) obj. -215302 iterations 5
Cbc0038I Pass  60: suminf.    0.15093 (6) obj. -209172 iterations 3
Cbc0038I Pass  61: suminf.    0.50538 (2) obj. -209008 iterations 11
Cbc0038I Pass  62: suminf.    0.02062 (1) obj. -209167 iterations 7
Cbc0038I Pass  63: suminf.    1.04576 (21) obj. -209008 iterations 43
Cbc0038I Pass  64: suminf.    0.53849 (19) obj. -209182 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 178 integers at bound fixed and 0 continuous
Cbc0038I Full problem 311 rows 319 columns, reduced to 92 rows 97 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -206441 - took 0.16 seconds
Cbc0012I Integer solution of -206441.41 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 311 rows 319 columns, reduced to 11 rows 12 columns
Cbc0031I 58 added rows had average density of 3.9482759
Cbc0013I At root node, 58 cuts changed objective from -219208.72 to -207232.41 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 613 row cuts average 15.2 elements, 71 column cuts (71 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 70 row cuts average 63.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 88.6 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0001I Search completed - best objective -206441.41, took 340 iterations and 0 nodes (0.55 seconds)
Cbc0032I Strong branching done 4 times (20 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 78 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 372 (-155) rows, 191 (-73) columns and 1109 (-436) elements
Clp1000I sum of infeasibilities 3.56132e-06 - average 9.57345e-09, 176 fixed columns
Coin0506I Presolve 14 (-358) rows, 14 (-177) columns and 51 (-1058) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Coin0511I After Postsolve, objective 219110.76, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14619844 - largest nonzero change 0 ( 0%) - largest zero change 2.9997876e-05
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Clp0000I Optimal - objective value 219110.76
Coin0511I After Postsolve, objective 219110.76, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 219110.7639 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 372 rows, 191 columns (190 integer (190 of which binary)) and 1109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.506%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.21922
Cbc0038I Solution found of -168337
Cbc0038I Relaxing continuous gives -168337
Cbc0038I Before mini branch and bound, 179 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -168337 to -185318 (0.01 seconds)
Cbc0038I Round again with cutoff of -188698
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.78788 (4) obj. -188698 iterations 70
Cbc0038I Pass   2: suminf.    0.25985 (2) obj. -212268 iterations 17
Cbc0038I Pass   3: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass   4: suminf.    0.15709 (1) obj. -188698 iterations 4
Cbc0038I Pass   5: suminf.    0.71130 (2) obj. -188698 iterations 5
Cbc0038I Pass   6: suminf.    0.15709 (1) obj. -188698 iterations 4
Cbc0038I Pass   7: suminf.    2.38656 (13) obj. -188698 iterations 30
Cbc0038I Pass   8: suminf.    0.01461 (1) obj. -188698 iterations 23
Cbc0038I Solution found of -189460
Cbc0038I Relaxing continuous gives -189460
Cbc0038I Rounding solution of -206441 is better than previous of -189460

Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -208975
Cbc0038I Reduced cost fixing fixed 75 variables on major pass 3
Cbc0038I Pass   9: suminf.    1.57257 (4) obj. -208975 iterations 0
Cbc0038I Pass  10: suminf.    0.18145 (2) obj. -213322 iterations 20
Cbc0038I Pass  11: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  12: suminf.    0.50845 (2) obj. -208975 iterations 5
Cbc0038I Pass  13: suminf.    1.24270 (4) obj. -208975 iterations 28
Cbc0038I Pass  14: suminf.    0.81231 (2) obj. -208975 iterations 23
Cbc0038I Pass  15: suminf.    0.70779 (2) obj. -215315 iterations 12
Cbc0038I Pass  16: suminf.    0.41374 (4) obj. -208975 iterations 24
Cbc0038I Pass  17: suminf.    0.41374 (4) obj. -208975 iterations 7
Cbc0038I Pass  18: suminf.    1.18717 (3) obj. -213795 iterations 18
Cbc0038I Pass  19: suminf.    2.36640 (9) obj. -208975 iterations 14
Cbc0038I Pass  20: suminf.    1.57257 (4) obj. -208975 iterations 20
Cbc0038I Pass  21: suminf.    0.18145 (2) obj. -213322 iterations 18
Cbc0038I Pass  22: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  23: suminf.    0.50845 (2) obj. -208975 iterations 5
Cbc0038I Pass  24: suminf.    1.46826 (7) obj. -208975 iterations 16
Cbc0038I Pass  25: suminf.    3.73407 (13) obj. -208975 iterations 37
Cbc0038I Pass  26: suminf.    1.51066 (5) obj. -208975 iterations 17
Cbc0038I Pass  27: suminf.    1.57257 (4) obj. -208975 iterations 15
Cbc0038I Pass  28: suminf.    0.18145 (2) obj. -213322 iterations 16
Cbc0038I Pass  29: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  30: suminf.    0.50845 (2) obj. -208975 iterations 4
Cbc0038I Pass  31: suminf.    1.27999 (4) obj. -208975 iterations 16
Cbc0038I Pass  32: suminf.    1.16135 (4) obj. -208975 iterations 11
Cbc0038I Pass  33: suminf.    1.19973 (4) obj. -208975 iterations 13
Cbc0038I Pass  34: suminf.    1.18717 (3) obj. -213795 iterations 12
Cbc0038I Pass  35: suminf.    0.70779 (2) obj. -215315 iterations 2
Cbc0038I Pass  36: suminf.    0.02062 (1) obj. -209188 iterations 3
Cbc0038I Pass  37: suminf.    0.50845 (2) obj. -208975 iterations 4
Cbc0038I Pass  38: suminf.    2.76010 (7) obj. -208975 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 162 integers at bound fixed and 0 continuous
Cbc0038I Full problem 372 rows 191 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -206441 - took 0.03 seconds
Cbc0012I Integer solution of -206441.41 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 372 rows 191 columns, reduced to 11 rows 12 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 10.5
Cbc0013I At root node, 3 cuts changed objective from -219110.76 to -206441.41 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.4 elements, 42 column cuts (42 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 185.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -206441.41, took 61 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 306 (-221) rows, 314 (-211) columns and 12818 (-22919) elements
Clp1000I sum of infeasibilities 2.57734e-05 - average 8.42268e-08, 236 fixed columns
Coin0506I Presolve 71 (-235) rows, 75 (-239) columns and 283 (-12535) elements
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 0.27125379 - largest nonzero change 1.019219e-05 ( 0.00086874748%) - largest zero change 2.9968197e-05
Clp0000I Optimal - objective value 219073.76
Clp0000I Optimal - objective value 219073.76
Coin0511I After Postsolve, objective 219073.76, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2162836 - largest nonzero change 2.2389909e-05 ( 0.0011765296%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 219274.78
Clp0000I Optimal - objective value 219274.78
Clp0000I Optimal - objective value 219274.78
Coin0511I After Postsolve, objective 219274.78, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 219274.7825 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 306 rows, 314 columns (314 integer (314 of which binary)) and 12818 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.308%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 117 integers unsatisfied sum - 5.64972
Cbc0038I Pass   1: suminf.    1.78407 (93) obj. -142133 iterations 53
Cbc0038I Pass   2: suminf.    1.78407 (93) obj. -142133 iterations 1
Cbc0038I Pass   3: suminf.    1.24481 (71) obj. -142094 iterations 22
Cbc0038I Pass   4: suminf.    1.00354 (60) obj. -142069 iterations 11
Cbc0038I Pass   5: suminf.    0.48154 (34) obj. -142029 iterations 26
Cbc0038I Pass   6: suminf.    0.13547 (12) obj. -142005 iterations 22
Cbc0038I Solution found of -141991
Cbc0038I Rounding solution of -168128 is better than previous of -141991

Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous
Cbc0038I Full problem 306 rows 314 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -168128 to -185928 (0.13 seconds)
Cbc0038I Round again with cutoff of -189263
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   7: suminf.    3.95548 (110) obj. -189263 iterations 20
Cbc0038I Pass   8: suminf.    1.96457 (89) obj. -189263 iterations 35
Cbc0038I Pass   9: suminf.    1.96457 (89) obj. -189263 iterations 4
Cbc0038I Pass  10: suminf.    2.43140 (78) obj. -201565 iterations 17
Cbc0038I Pass  11: suminf.    2.11600 (77) obj. -192756 iterations 3
Cbc0038I Pass  12: suminf.    1.17031 (58) obj. -189263 iterations 30
Cbc0038I Pass  13: suminf.    1.26782 (41) obj. -212148 iterations 26
Cbc0038I Pass  14: suminf.    0.99911 (40) obj. -209232 iterations 7
Cbc0038I Pass  15: suminf.    0.23568 (11) obj. -209198 iterations 29
Cbc0038I Pass  16: suminf.    0.17447 (1) obj. -189263 iterations 14
Cbc0038I Pass  17: suminf.    0.72169 (2) obj. -189263 iterations 6
Cbc0038I Pass  18: suminf.    0.17447 (1) obj. -189263 iterations 5
Cbc0038I Pass  19: suminf.    1.58064 (21) obj. -189263 iterations 50
Cbc0038I Pass  20: suminf.    0.90574 (24) obj. -189263 iterations 20
Cbc0038I Pass  21: suminf.    1.53310 (9) obj. -189263 iterations 38
Cbc0038I Pass  22: suminf.    1.53310 (9) obj. -189263 iterations 0
Cbc0038I Pass  23: suminf.    1.64102 (7) obj. -189263 iterations 24
Cbc0038I Pass  24: suminf.    1.64102 (7) obj. -189263 iterations 1
Cbc0038I Pass  25: suminf.    0.58314 (4) obj. -189263 iterations 20
Cbc0038I Pass  26: suminf.    0.54918 (2) obj. -189263 iterations 2
Cbc0038I Pass  27: suminf.    0.58204 (2) obj. -190126 iterations 2
Cbc0038I Pass  28: suminf.    1.00362 (18) obj. -189263 iterations 44
Cbc0038I Pass  29: suminf.    1.00362 (18) obj. -189263 iterations 12
Cbc0038I Pass  30: suminf.    0.81040 (4) obj. -189263 iterations 32
Cbc0038I Pass  31: suminf.    0.81040 (4) obj. -189263 iterations 0
Cbc0038I Pass  32: suminf.    0.58204 (2) obj. -190119 iterations 18
Cbc0038I Pass  33: suminf.    0.54945 (2) obj. -189263 iterations 1
Cbc0038I Pass  34: suminf.    0.58204 (2) obj. -190119 iterations 2
Cbc0038I Pass  35: suminf.    2.19117 (32) obj. -189263 iterations 52
Cbc0038I Pass  36: suminf.    2.09469 (31) obj. -189263 iterations 17
Cbc0038I Rounding solution of -194300 is better than previous of -185928

Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 306 rows 314 columns, reduced to 61 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -194300 to -195982 (0.20 seconds)
Cbc0038I Round again with cutoff of -200640
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  36: suminf.    4.44434 (110) obj. -200640 iterations 0
Cbc0038I Pass  37: suminf.    2.87379 (92) obj. -200640 iterations 30
Cbc0038I Pass  38: suminf.    2.83561 (92) obj. -200640 iterations 2
Cbc0038I Pass  39: suminf.    1.63877 (87) obj. -200640 iterations 19
Cbc0038I Pass  40: suminf.    1.63877 (87) obj. -200640 iterations 8
Cbc0038I Pass  41: suminf.    2.87746 (65) obj. -200640 iterations 34
Cbc0038I Pass  42: suminf.    1.45077 (48) obj. -212159 iterations 29
Cbc0038I Pass  43: suminf.    1.17977 (47) obj. -209243 iterations 9
Cbc0038I Pass  44: suminf.    0.89612 (37) obj. -209231 iterations 10
Cbc0038I Pass  45: suminf.    0.60346 (26) obj. -209217 iterations 11
Cbc0038I Pass  46: suminf.    0.25843 (12) obj. -209199 iterations 14
Cbc0038I Pass  47: suminf.    0.59196 (2) obj. -200640 iterations 16
Cbc0038I Pass  48: suminf.    0.70779 (2) obj. -215315 iterations 7
Cbc0038I Pass  49: suminf.    0.02062 (1) obj. -209185 iterations 3
Cbc0038I Pass  50: suminf.    2.39061 (19) obj. -200640 iterations 37
Cbc0038I Pass  51: suminf.    0.42487 (15) obj. -209207 iterations 18
Cbc0038I Pass  52: suminf.    0.11620 (5) obj. -209190 iterations 10
Cbc0038I Pass  53: suminf.    0.59203 (2) obj. -200640 iterations 9
Cbc0038I Pass  54: suminf.    0.70779 (2) obj. -215313 iterations 7
Cbc0038I Pass  55: suminf.    0.02062 (1) obj. -209183 iterations 3
Cbc0038I Pass  56: suminf.    1.77692 (26) obj. -200640 iterations 49
Cbc0038I Pass  57: suminf.    1.77692 (26) obj. -200640 iterations 7
Cbc0038I Pass  58: suminf.    1.32697 (7) obj. -200640 iterations 32
Cbc0038I Pass  59: suminf.    0.25985 (2) obj. -212262 iterations 23
Cbc0038I Pass  60: suminf.    0.02062 (1) obj. -209179 iterations 4
Cbc0038I Pass  61: suminf.    0.59219 (2) obj. -200640 iterations 5
Cbc0038I Pass  62: suminf.    0.70779 (2) obj. -215309 iterations 7
Cbc0038I Pass  63: suminf.    1.51874 (28) obj. -200640 iterations 61
Cbc0038I Pass  64: suminf.    1.51778 (26) obj. -200640 iterations 18
Cbc0038I Pass  65: suminf.    0.72020 (15) obj. -200640 iterations 26
Cbc0038I Rounding solution of -206441 is better than previous of -195982

Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 306 rows 314 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I Round again with cutoff of -210291
Cbc0038I Reduced cost fixing fixed 80 variables on major pass 4
Cbc0038I Pass  65: suminf.    4.85898 (110) obj. -210291 iterations 0
Cbc0038I Pass  66: suminf.    3.58883 (102) obj. -210291 iterations 20
Cbc0038I Pass  67: suminf.    3.58883 (102) obj. -210291 iterations 0
Cbc0038I Pass  68: suminf.    2.52840 (77) obj. -210291 iterations 36
Cbc0038I Pass  69: suminf.    2.52840 (77) obj. -210291 iterations 6
Cbc0038I Pass  70: suminf.    2.23746 (53) obj. -210291 iterations 34
Cbc0038I Pass  71: suminf.    1.59957 (52) obj. -212161 iterations 4
Cbc0038I Pass  72: suminf.    1.36690 (52) obj. -210291 iterations 10
Cbc0038I Pass  73: suminf.    0.83126 (28) obj. -212330 iterations 28
Cbc0038I Pass  74: suminf.    0.68191 (28) obj. -210291 iterations 3
Cbc0038I Pass  75: suminf.    0.31474 (4) obj. -210291 iterations 28
Cbc0038I Pass  76: suminf.    0.10575 (4) obj. -210291 iterations 4
Cbc0038I Pass  77: suminf.    0.27629 (2) obj. -210291 iterations 5
Cbc0038I Pass  78: suminf.    0.06404 (2) obj. -210291 iterations 3
Cbc0038I Pass  79: suminf.    1.61257 (27) obj. -210291 iterations 40
Cbc0038I Pass  80: suminf.    0.67756 (22) obj. -210291 iterations 16
Cbc0038I Pass  81: suminf.    0.47222 (12) obj. -212296 iterations 14
Cbc0038I Pass  82: suminf.    0.32807 (12) obj. -210291 iterations 3
Cbc0038I Pass  83: suminf.    0.27573 (2) obj. -210291 iterations 23
Cbc0038I Pass  84: suminf.    0.06459 (2) obj. -210291 iterations 3
Cbc0038I Pass  85: suminf.    1.05520 (25) obj. -210291 iterations 60
Cbc0038I Pass  86: suminf.    0.74393 (25) obj. -210291 iterations 27
Cbc0038I Pass  87: suminf.    0.33453 (5) obj. -210291 iterations 35
Cbc0038I Pass  88: suminf.    0.12861 (5) obj. -210291 iterations 4
Cbc0038I Pass  89: suminf.    0.27532 (2) obj. -210291 iterations 17
Cbc0038I Pass  90: suminf.    0.06498 (2) obj. -210291 iterations 3
Cbc0038I Pass  91: suminf.    0.98367 (23) obj. -210291 iterations 55
Cbc0038I Pass  92: suminf.    0.69275 (23) obj. -210291 iterations 19
Cbc0038I Pass  93: suminf.    0.27581 (2) obj. -210291 iterations 33
Cbc0038I Pass  94: suminf.    0.06451 (2) obj. -210291 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 179 integers at bound fixed and 0 continuous
Cbc0038I Full problem 306 rows 314 columns, reduced to 49 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -206441 - took 0.22 seconds
Cbc0012I Integer solution of -206441.41 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 306 rows 314 columns, reduced to 11 rows 12 columns
Cbc0031I 55 added rows had average density of 2.8727273
Cbc0013I At root node, 55 cuts changed objective from -219208.66 to -206857.65 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 676 row cuts average 14.0 elements, 75 column cuts (75 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 59.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 51.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 102.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0001I Search completed - best objective -206441.41, took 342 iterations and 0 nodes (0.60 seconds)
Cbc0032I Strong branching done 4 times (13 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.61

