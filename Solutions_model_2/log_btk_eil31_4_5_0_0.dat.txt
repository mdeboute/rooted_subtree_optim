Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 26 (-7) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 3.45262e-05 - average 7.67248e-07, 5 fixed columns
Coin0506I Presolve 36 (-9) rows, 21 (-5) columns and 107 (-28) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.2861784 - largest nonzero change 0 ( 0%) - largest zero change 2.041331e-05
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Coin0511I After Postsolve, objective 93.8123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Coin0511I After Postsolve, objective 93.8123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.81229978 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 26 columns (25 integer (25 of which binary)) and 145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.717%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.67744
Cbc0038I Pass   1: suminf.    0.27368 (1) obj. -76.1261 iterations 11
Cbc0038I Solution found of -49.4624
Cbc0038I Relaxing continuous gives -49.4624
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 21 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -49.4624 to -60.9466 (0.01 seconds)
Cbc0038I Round again with cutoff of -63.9218
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27368 (1) obj. -76.1261 iterations 0
Cbc0038I Pass   3: suminf.    0.39387 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   4: suminf.    2.02724 (7) obj. -63.9218 iterations 10
Cbc0038I Pass   5: suminf.    0.40779 (2) obj. -63.9218 iterations 8
Cbc0038I Pass   6: suminf.    0.37895 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   7: suminf.    0.32265 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   8: suminf.    1.42253 (5) obj. -63.9218 iterations 6
Cbc0038I Pass   9: suminf.    0.96621 (6) obj. -63.9218 iterations 4
Cbc0038I Pass  10: suminf.    0.43267 (2) obj. -63.9218 iterations 6
Cbc0038I Pass  11: suminf.    0.54676 (2) obj. -63.9218 iterations 2
Cbc0038I Pass  12: suminf.    0.54676 (2) obj. -63.9218 iterations 0
Cbc0038I Pass  13: suminf.    0.37895 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  14: suminf.    0.32265 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  15: suminf.    0.93367 (5) obj. -63.9218 iterations 13
Cbc0038I Pass  16: suminf.    0.57052 (4) obj. -63.9218 iterations 3
Cbc0038I Pass  17: suminf.    1.13021 (4) obj. -63.9218 iterations 4
Cbc0038I Pass  18: suminf.    0.48148 (2) obj. -71.0962 iterations 3
Cbc0038I Pass  19: suminf.    0.16229 (1) obj. -63.9218 iterations 2
Cbc0038I Pass  20: suminf.    0.22768 (4) obj. -63.9218 iterations 3
Cbc0038I Pass  21: suminf.    0.16229 (1) obj. -63.9218 iterations 3
Cbc0038I Pass  22: suminf.    0.44355 (2) obj. -63.9218 iterations 8
Cbc0038I Pass  23: suminf.    0.44355 (2) obj. -63.9218 iterations 1
Cbc0038I Pass  24: suminf.    0.53491 (2) obj. -63.9218 iterations 7
Cbc0038I Pass  25: suminf.    0.53491 (2) obj. -63.9218 iterations 0
Cbc0038I Pass  26: suminf.    0.47368 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  27: suminf.    0.38441 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  28: suminf.    2.74371 (9) obj. -63.9218 iterations 14
Cbc0038I Pass  29: suminf.    0.59960 (4) obj. -63.9218 iterations 5
Cbc0038I Pass  30: suminf.    0.19321 (3) obj. -63.9218 iterations 6
Cbc0038I Pass  31: suminf.    0.32265 (1) obj. -63.9218 iterations 4
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -60.9466 to -61.4245 (0.02 seconds)
Cbc0038I Round again with cutoff of -69.277
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27368 (1) obj. -76.1261 iterations 0
Cbc0038I Pass  32: suminf.    0.46025 (1) obj. -69.277 iterations 1
Cbc0038I Pass  33: suminf.    1.12836 (4) obj. -69.277 iterations 4
Cbc0038I Pass  34: suminf.    0.63366 (2) obj. -81.8461 iterations 2
Cbc0038I Pass  35: suminf.    3.36515 (10) obj. -69.277 iterations 8
Cbc0038I Pass  36: suminf.    2.36619 (7) obj. -69.277 iterations 4
Cbc0038I Pass  37: suminf.    0.95181 (6) obj. -69.277 iterations 3
Cbc0038I Pass  38: suminf.    0.95181 (6) obj. -69.277 iterations 0
Cbc0038I Pass  39: suminf.    0.39989 (2) obj. -69.277 iterations 7
Cbc0038I Pass  40: suminf.    0.27368 (1) obj. -76.1261 iterations 2
Cbc0038I Pass  41: suminf.    0.46025 (1) obj. -69.277 iterations 1
Cbc0038I Pass  42: suminf.    3.87579 (11) obj. -69.277 iterations 14
Cbc0038I Pass  43: suminf.    2.19780 (12) obj. -69.277 iterations 3
Cbc0038I Pass  44: suminf.    2.16928 (12) obj. -69.277 iterations 1
Cbc0038I Pass  45: suminf.    2.24059 (11) obj. -69.277 iterations 2
Cbc0038I Pass  46: suminf.    2.16928 (12) obj. -69.277 iterations 2
Cbc0038I Pass  47: suminf.    0.43021 (3) obj. -69.277 iterations 10
Cbc0038I Pass  48: suminf.    0.43083 (2) obj. -69.277 iterations 2
Cbc0038I Pass  49: suminf.    0.56251 (2) obj. -69.277 iterations 4
Cbc0038I Pass  50: suminf.    0.56145 (2) obj. -69.277 iterations 2
Cbc0038I Pass  51: suminf.    0.71287 (2) obj. -72.0053 iterations 2
Cbc0038I Pass  52: suminf.    0.54938 (4) obj. -69.277 iterations 5
Cbc0038I Pass  53: suminf.    0.54487 (4) obj. -69.277 iterations 4
Cbc0038I Pass  54: suminf.    0.33760 (3) obj. -72.9499 iterations 7
Cbc0038I Pass  55: suminf.    0.03158 (1) obj. -70.6216 iterations 2
Cbc0038I Pass  56: suminf.    0.05347 (1) obj. -69.277 iterations 1
Cbc0038I Pass  57: suminf.    1.09306 (5) obj. -69.277 iterations 7
Cbc0038I Pass  58: suminf.    1.09306 (5) obj. -69.277 iterations 2
Cbc0038I Pass  59: suminf.    0.84271 (3) obj. -69.277 iterations 4
Cbc0038I Pass  60: suminf.    0.47867 (2) obj. -75.77 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -61.4245 - took 0.07 seconds
Cbc0012I Integer solution of -61.42453 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 26 columns, reduced to 22 rows 14 columns
Cbc0031I 9 added rows had average density of 13.555556
Cbc0013I At root node, 9 cuts changed objective from -90.697694 to -76.053816 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 680 row cuts average 3.4 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 353 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -61.42453, took 1803 iterations and 12 nodes (0.16 seconds)
Cbc0032I Strong branching done 106 times (848 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 56 (-6) columns and 525 (-121) elements
Clp1000I sum of infeasibilities 1.59851e-08 - average 3.19701e-10, 12 fixed columns
Coin0506I Presolve 40 (-10) rows, 44 (-12) columns and 325 (-200) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.7551933 - largest nonzero change 0 ( 0%) - largest zero change 2.2441431e-05
Clp0000I Optimal - objective value 110.49179
Clp0000I Optimal - objective value 110.49179
Coin0511I After Postsolve, objective 110.49179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 110.49179
Clp0000I Optimal - objective value 110.49179
Clp0000I Optimal - objective value 110.49179
Coin0511I After Postsolve, objective 110.49179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 110.4917938 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 52 columns (52 integer (52 of which binary)) and 451 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.967%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 1.80084
Cbc0038I Pass   1: suminf.    1.09693 (12) obj. -87.2208 iterations 11
Cbc0038I Solution found of -49.5992
Cbc0038I Rounding solution of -60.9466 is better than previous of -49.5992

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -63.8491
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.09693 (12) obj. -87.2208 iterations 0
Cbc0038I Pass   3: suminf.    0.38816 (1) obj. -63.8491 iterations 16
Cbc0038I Pass   4: suminf.    0.30526 (1) obj. -75.1036 iterations 1
Cbc0038I Pass   5: suminf.    0.95245 (4) obj. -63.8491 iterations 3
Cbc0038I Pass   6: suminf.    0.35789 (2) obj. -76.0509 iterations 2
Cbc0038I Pass   7: suminf.    2.26713 (11) obj. -63.8491 iterations 15
Cbc0038I Pass   8: suminf.    2.26713 (11) obj. -63.8491 iterations 1
Cbc0038I Pass   9: suminf.    2.45821 (7) obj. -63.8491 iterations 19
Cbc0038I Pass  10: suminf.    2.34520 (6) obj. -63.8491 iterations 1
Cbc0038I Pass  11: suminf.    1.61953 (4) obj. -63.8491 iterations 6
Cbc0038I Pass  12: suminf.    0.85886 (3) obj. -67.5617 iterations 4
Cbc0038I Pass  13: suminf.    0.23522 (1) obj. -63.8491 iterations 3
Cbc0038I Pass  14: suminf.    0.34737 (1) obj. -67.9661 iterations 1
Cbc0038I Pass  15: suminf.    1.94936 (6) obj. -65.3038 iterations 9
Cbc0038I Pass  16: suminf.    1.52012 (5) obj. -63.8491 iterations 3
Cbc0038I Pass  17: suminf.    0.35222 (2) obj. -63.8491 iterations 5
Cbc0038I Pass  18: suminf.    0.35222 (2) obj. -63.8491 iterations 2
Cbc0038I Pass  19: suminf.    0.87017 (4) obj. -63.8491 iterations 4
Cbc0038I Pass  20: suminf.    0.87017 (4) obj. -63.8491 iterations 0
Cbc0038I Pass  21: suminf.    0.35222 (2) obj. -63.8491 iterations 4
Cbc0038I Pass  22: suminf.    1.27957 (9) obj. -63.8491 iterations 18
Cbc0038I Pass  23: suminf.    0.83375 (6) obj. -63.8491 iterations 4
Cbc0038I Pass  24: suminf.    0.75549 (6) obj. -67.6533 iterations 1
Cbc0038I Pass  25: suminf.    0.38142 (3) obj. -63.8491 iterations 8
Cbc0038I Pass  26: suminf.    0.38142 (3) obj. -63.8491 iterations 0
Cbc0038I Pass  27: suminf.    0.91263 (4) obj. -63.8491 iterations 6
Cbc0038I Pass  28: suminf.    0.91263 (4) obj. -63.8491 iterations 0
Cbc0038I Pass  29: suminf.    0.41520 (2) obj. -63.8491 iterations 4
Cbc0038I Pass  30: suminf.    0.41520 (2) obj. -63.8491 iterations 1
Cbc0038I Pass  31: suminf.    1.88525 (10) obj. -63.8491 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 52 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -49.5992 to -61.2139 (0.03 seconds)
Cbc0038I Round again with cutoff of -69.0733
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.09693 (12) obj. -87.2208 iterations 0
Cbc0038I Pass  32: suminf.    0.46953 (1) obj. -69.0733 iterations 17
Cbc0038I Pass  33: suminf.    0.30526 (1) obj. -75.1036 iterations 1
Cbc0038I Pass  34: suminf.    2.26069 (9) obj. -69.0733 iterations 10
Cbc0038I Pass  35: suminf.    0.45627 (4) obj. -73.9526 iterations 7
Cbc0038I Pass  36: suminf.    0.36057 (1) obj. -69.0733 iterations 5
Cbc0038I Pass  37: suminf.    0.30526 (1) obj. -71.1036 iterations 1
Cbc0038I Pass  38: suminf.    0.85992 (5) obj. -77.3152 iterations 5
Cbc0038I Pass  39: suminf.    0.50665 (4) obj. -75.9022 iterations 1
Cbc0038I Pass  40: suminf.    0.41505 (1) obj. -69.0733 iterations 5
Cbc0038I Pass  41: suminf.    0.30526 (1) obj. -73.1036 iterations 1
Cbc0038I Pass  42: suminf.    1.05647 (3) obj. -69.0733 iterations 7
Cbc0038I Pass  43: suminf.    0.29581 (1) obj. -69.0733 iterations 8
Cbc0038I Pass  44: suminf.    0.34737 (1) obj. -70.9661 iterations 1
Cbc0038I Pass  45: suminf.    1.05041 (9) obj. -69.0733 iterations 12
Cbc0038I Pass  46: suminf.    0.95841 (6) obj. -69.0733 iterations 7
Cbc0038I Pass  47: suminf.    0.85337 (4) obj. -69.0733 iterations 12
Cbc0038I Pass  48: suminf.    0.80672 (4) obj. -69.0733 iterations 3
Cbc0038I Pass  49: suminf.    1.50549 (5) obj. -69.0733 iterations 6
Cbc0038I Pass  50: suminf.    0.48340 (3) obj. -69.0733 iterations 6
Cbc0038I Pass  51: suminf.    1.60079 (5) obj. -69.0733 iterations 11
Cbc0038I Pass  52: suminf.    0.94967 (4) obj. -69.0733 iterations 3
Cbc0038I Pass  53: suminf.    0.37199 (2) obj. -69.0733 iterations 4
Cbc0038I Pass  54: suminf.    0.37199 (2) obj. -69.0733 iterations 1
Cbc0038I Pass  55: suminf.    0.94967 (4) obj. -69.0733 iterations 4
Cbc0038I Pass  56: suminf.    0.74054 (7) obj. -69.0733 iterations 18
Cbc0038I Pass  57: suminf.    0.60681 (6) obj. -69.0733 iterations 5
Cbc0038I Pass  58: suminf.    0.68091 (4) obj. -69.0733 iterations 11
Cbc0038I Pass  59: suminf.    0.32632 (1) obj. -69.348 iterations 4
Cbc0038I Pass  60: suminf.    0.33380 (1) obj. -69.0733 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 52 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -61.2139 - took 0.03 seconds
Cbc0012I Integer solution of -61.21393 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 19 added rows had average density of 17.052632
Cbc0013I At root node, 19 cuts changed objective from -89.970038 to -70.954695 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1874 row cuts average 2.9 elements, 4 column cuts (4 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 693 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 159 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 217 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 80 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.659 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -61.21393 best solution, best possible -70.954695 (1.42 seconds)
Cbc0004I Integer solution of -61.42453 found after 2493 iterations and 5 nodes (1.91 seconds)
Cbc0010I After 7 nodes, 4 on tree, -61.42453 best solution, best possible -70.954695 (2.14 seconds)
Cbc0001I Search completed - best objective -61.42453, took 3169 iterations and 22 nodes (2.51 seconds)
Cbc0032I Strong branching done 328 times (4149 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 23 variables fixed on reduced cost
Total time (CPU seconds):       1.67   (Wallclock seconds):       2.52

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 26 (-7) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 3.45262e-05 - average 7.67248e-07, 5 fixed columns
Coin0506I Presolve 36 (-9) rows, 21 (-5) columns and 107 (-28) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.2861784 - largest nonzero change 0 ( 0%) - largest zero change 2.041331e-05
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Coin0511I After Postsolve, objective 93.8123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Clp0000I Optimal - objective value 93.8123
Coin0511I After Postsolve, objective 93.8123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.81229978 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 26 columns (25 integer (25 of which binary)) and 145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.717%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.67744
Cbc0038I Pass   1: suminf.    0.27368 (1) obj. -76.1261 iterations 11
Cbc0038I Solution found of -49.4624
Cbc0038I Relaxing continuous gives -49.4624
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 21 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -49.4624 to -60.9466 (0.01 seconds)
Cbc0038I Round again with cutoff of -63.9218
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27368 (1) obj. -76.1261 iterations 0
Cbc0038I Pass   3: suminf.    0.39387 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   4: suminf.    2.02724 (7) obj. -63.9218 iterations 10
Cbc0038I Pass   5: suminf.    0.40779 (2) obj. -63.9218 iterations 8
Cbc0038I Pass   6: suminf.    0.37895 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   7: suminf.    0.32265 (1) obj. -63.9218 iterations 1
Cbc0038I Pass   8: suminf.    1.42253 (5) obj. -63.9218 iterations 6
Cbc0038I Pass   9: suminf.    0.96621 (6) obj. -63.9218 iterations 4
Cbc0038I Pass  10: suminf.    0.43267 (2) obj. -63.9218 iterations 6
Cbc0038I Pass  11: suminf.    0.54676 (2) obj. -63.9218 iterations 2
Cbc0038I Pass  12: suminf.    0.54676 (2) obj. -63.9218 iterations 0
Cbc0038I Pass  13: suminf.    0.37895 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  14: suminf.    0.32265 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  15: suminf.    0.93367 (5) obj. -63.9218 iterations 13
Cbc0038I Pass  16: suminf.    0.57052 (4) obj. -63.9218 iterations 3
Cbc0038I Pass  17: suminf.    1.13021 (4) obj. -63.9218 iterations 4
Cbc0038I Pass  18: suminf.    0.48148 (2) obj. -71.0962 iterations 3
Cbc0038I Pass  19: suminf.    0.16229 (1) obj. -63.9218 iterations 2
Cbc0038I Pass  20: suminf.    0.22768 (4) obj. -63.9218 iterations 3
Cbc0038I Pass  21: suminf.    0.16229 (1) obj. -63.9218 iterations 3
Cbc0038I Pass  22: suminf.    0.44355 (2) obj. -63.9218 iterations 8
Cbc0038I Pass  23: suminf.    0.44355 (2) obj. -63.9218 iterations 1
Cbc0038I Pass  24: suminf.    0.53491 (2) obj. -63.9218 iterations 7
Cbc0038I Pass  25: suminf.    0.53491 (2) obj. -63.9218 iterations 0
Cbc0038I Pass  26: suminf.    0.47368 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  27: suminf.    0.38441 (1) obj. -63.9218 iterations 1
Cbc0038I Pass  28: suminf.    2.74371 (9) obj. -63.9218 iterations 14
Cbc0038I Pass  29: suminf.    0.59960 (4) obj. -63.9218 iterations 5
Cbc0038I Pass  30: suminf.    0.19321 (3) obj. -63.9218 iterations 6
Cbc0038I Pass  31: suminf.    0.32265 (1) obj. -63.9218 iterations 4
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -60.9466 to -61.4245 (0.03 seconds)
Cbc0038I Round again with cutoff of -69.277
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27368 (1) obj. -76.1261 iterations 0
Cbc0038I Pass  32: suminf.    0.46025 (1) obj. -69.277 iterations 1
Cbc0038I Pass  33: suminf.    1.12836 (4) obj. -69.277 iterations 4
Cbc0038I Pass  34: suminf.    0.63366 (2) obj. -81.8461 iterations 2
Cbc0038I Pass  35: suminf.    3.36515 (10) obj. -69.277 iterations 8
Cbc0038I Pass  36: suminf.    2.36619 (7) obj. -69.277 iterations 4
Cbc0038I Pass  37: suminf.    0.95181 (6) obj. -69.277 iterations 3
Cbc0038I Pass  38: suminf.    0.95181 (6) obj. -69.277 iterations 0
Cbc0038I Pass  39: suminf.    0.39989 (2) obj. -69.277 iterations 7
Cbc0038I Pass  40: suminf.    0.27368 (1) obj. -76.1261 iterations 2
Cbc0038I Pass  41: suminf.    0.46025 (1) obj. -69.277 iterations 1
Cbc0038I Pass  42: suminf.    3.87579 (11) obj. -69.277 iterations 14
Cbc0038I Pass  43: suminf.    2.19780 (12) obj. -69.277 iterations 3
Cbc0038I Pass  44: suminf.    2.16928 (12) obj. -69.277 iterations 1
Cbc0038I Pass  45: suminf.    2.24059 (11) obj. -69.277 iterations 2
Cbc0038I Pass  46: suminf.    2.16928 (12) obj. -69.277 iterations 2
Cbc0038I Pass  47: suminf.    0.43021 (3) obj. -69.277 iterations 10
Cbc0038I Pass  48: suminf.    0.43083 (2) obj. -69.277 iterations 2
Cbc0038I Pass  49: suminf.    0.56251 (2) obj. -69.277 iterations 4
Cbc0038I Pass  50: suminf.    0.56145 (2) obj. -69.277 iterations 2
Cbc0038I Pass  51: suminf.    0.71287 (2) obj. -72.0053 iterations 2
Cbc0038I Pass  52: suminf.    0.54938 (4) obj. -69.277 iterations 5
Cbc0038I Pass  53: suminf.    0.54487 (4) obj. -69.277 iterations 4
Cbc0038I Pass  54: suminf.    0.33760 (3) obj. -72.9499 iterations 7
Cbc0038I Pass  55: suminf.    0.03158 (1) obj. -70.6216 iterations 2
Cbc0038I Pass  56: suminf.    0.05347 (1) obj. -69.277 iterations 1
Cbc0038I Pass  57: suminf.    1.09306 (5) obj. -69.277 iterations 7
Cbc0038I Pass  58: suminf.    1.09306 (5) obj. -69.277 iterations 2
Cbc0038I Pass  59: suminf.    0.84271 (3) obj. -69.277 iterations 4
Cbc0038I Pass  60: suminf.    0.47867 (2) obj. -75.77 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 26 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -61.4245 - took 0.03 seconds
Cbc0012I Integer solution of -61.42453 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 26 columns, reduced to 22 rows 14 columns
Cbc0031I 9 added rows had average density of 13.555556
Cbc0013I At root node, 9 cuts changed objective from -90.697694 to -76.053816 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 680 row cuts average 3.4 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 353 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -61.42453, took 1803 iterations and 12 nodes (0.19 seconds)
Cbc0032I Strong branching done 106 times (848 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 51 (-12) columns and 426 (-223) elements
Clp1000I sum of infeasibilities 4.04259e-08 - average 8.78824e-10, 34 fixed columns
Coin0506I Presolve 14 (-32) rows, 17 (-34) columns and 57 (-369) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 1.9166146 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 54.347544
Clp0000I Optimal - objective value 54.347544
Coin0511I After Postsolve, objective 54.347544, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5318547 - largest nonzero change 0 ( 0%) - largest zero change 2.6330067e-05
Clp0000I Optimal - objective value 102.45971
Clp0000I Optimal - objective value 102.45971
Clp0000I Optimal - objective value 102.45971
Coin0511I After Postsolve, objective 102.45971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.4597095 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 51 columns (51 integer (51 of which binary)) and 438 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.729%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 1.87591
Cbc0038I Pass   1: suminf.    1.03887 (12) obj. -87.2745 iterations 14
Cbc0038I Solution found of -49.5992
Cbc0038I Rounding solution of -60.9466 is better than previous of -49.5992

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -63.9039
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.03887 (12) obj. -87.2745 iterations 0
Cbc0038I Pass   3: suminf.    0.38966 (1) obj. -63.9039 iterations 16
Cbc0038I Pass   4: suminf.    0.30526 (1) obj. -75.1036 iterations 1
Cbc0038I Pass   5: suminf.    0.53828 (3) obj. -77.5843 iterations 5
Cbc0038I Pass   6: suminf.    0.19091 (2) obj. -64.8321 iterations 3
Cbc0038I Pass   7: suminf.    0.07327 (1) obj. -63.9039 iterations 3
Cbc0038I Pass   8: suminf.    0.34737 (1) obj. -73.9661 iterations 1
Cbc0038I Pass   9: suminf.    2.02917 (13) obj. -63.9039 iterations 11
Cbc0038I Pass  10: suminf.    2.01882 (11) obj. -63.9039 iterations 2
Cbc0038I Pass  11: suminf.    1.60258 (4) obj. -63.9039 iterations 13
Cbc0038I Pass  12: suminf.    1.09193 (4) obj. -63.9039 iterations 6
Cbc0038I Pass  13: suminf.    0.53315 (3) obj. -63.9039 iterations 6
Cbc0038I Pass  14: suminf.    1.60015 (7) obj. -63.9039 iterations 7
Cbc0038I Pass  15: suminf.    1.00933 (5) obj. -63.9039 iterations 4
Cbc0038I Pass  16: suminf.    1.02089 (3) obj. -63.9039 iterations 4
Cbc0038I Pass  17: suminf.    0.84070 (2) obj. -63.9039 iterations 1
Cbc0038I Pass  18: suminf.    0.80417 (3) obj. -68.2947 iterations 3
Cbc0038I Pass  19: suminf.    0.44690 (1) obj. -63.9039 iterations 3
Cbc0038I Pass  20: suminf.    0.30526 (1) obj. -69.1036 iterations 1
Cbc0038I Pass  21: suminf.    0.44690 (1) obj. -63.9039 iterations 1
Cbc0038I Pass  22: suminf.    1.50240 (8) obj. -64.2826 iterations 25
Cbc0038I Pass  23: suminf.    1.48303 (8) obj. -63.9039 iterations 2
Cbc0038I Pass  24: suminf.    1.00117 (3) obj. -63.9039 iterations 12
Cbc0038I Pass  25: suminf.    0.32632 (1) obj. -65.348 iterations 6
Cbc0038I Pass  26: suminf.    0.36565 (1) obj. -63.9039 iterations 1
Cbc0038I Pass  27: suminf.    0.79126 (8) obj. -63.9039 iterations 21
Cbc0038I Pass  28: suminf.    0.68320 (6) obj. -66.7256 iterations 2
Cbc0038I Pass  29: suminf.    0.48947 (4) obj. -63.9039 iterations 12
Cbc0038I Pass  30: suminf.    0.48947 (4) obj. -63.9039 iterations 0
Cbc0038I Pass  31: suminf.    1.04858 (5) obj. -63.9039 iterations 3
Cbc0038I Rounding solution of -61.2139 is better than previous of -60.9466

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 51 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -69.2268
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.03887 (12) obj. -87.2745 iterations 0
Cbc0038I Pass  32: suminf.    0.46535 (1) obj. -69.2268 iterations 16
Cbc0038I Pass  33: suminf.    0.30526 (1) obj. -75.1036 iterations 1
Cbc0038I Pass  34: suminf.    1.94755 (8) obj. -69.2268 iterations 17
Cbc0038I Pass  35: suminf.    0.96787 (5) obj. -72.0428 iterations 6
Cbc0038I Pass  36: suminf.    0.49638 (4) obj. -70.1568 iterations 1
Cbc0038I Pass  37: suminf.    0.10516 (2) obj. -69.2268 iterations 5
Cbc0038I Pass  38: suminf.    0.10516 (2) obj. -69.2268 iterations 0
Cbc0038I Pass  39: suminf.    0.19383 (2) obj. -69.2268 iterations 1
Cbc0038I Pass  40: suminf.    1.55974 (8) obj. -69.2268 iterations 14
Cbc0038I Pass  41: suminf.    0.63344 (6) obj. -69.2268 iterations 5
Cbc0038I Pass  42: suminf.    0.88199 (5) obj. -69.2268 iterations 9
Cbc0038I Pass  43: suminf.    0.84608 (5) obj. -69.2268 iterations 2
Cbc0038I Pass  44: suminf.    0.96515 (5) obj. -69.2268 iterations 3
Cbc0038I Pass  45: suminf.    0.48057 (5) obj. -69.2268 iterations 3
Cbc0038I Pass  46: suminf.    0.88199 (5) obj. -69.2268 iterations 7
Cbc0038I Pass  47: suminf.    0.80838 (5) obj. -69.2268 iterations 14
Cbc0038I Pass  48: suminf.    0.35745 (4) obj. -69.2268 iterations 3
Cbc0038I Pass  49: suminf.    0.27602 (4) obj. -69.2268 iterations 5
Cbc0038I Pass  50: suminf.    0.27602 (4) obj. -69.2268 iterations 0
Cbc0038I Pass  51: suminf.    0.85194 (4) obj. -69.2268 iterations 2
Cbc0038I Pass  52: suminf.    0.78599 (10) obj. -69.2268 iterations 12
Cbc0038I Pass  53: suminf.    0.33176 (4) obj. -69.2268 iterations 6
Cbc0038I Pass  54: suminf.    0.86677 (8) obj. -69.2268 iterations 8
Cbc0038I Pass  55: suminf.    0.86677 (8) obj. -69.2268 iterations 0
Cbc0038I Pass  56: suminf.    2.21093 (6) obj. -69.2268 iterations 10
Cbc0038I Pass  57: suminf.    0.94458 (4) obj. -69.2268 iterations 3
Cbc0038I Pass  58: suminf.    1.93893 (5) obj. -69.2268 iterations 3
Cbc0038I Pass  59: suminf.    1.89217 (5) obj. -69.2268 iterations 4
Cbc0038I Pass  60: suminf.    0.94458 (4) obj. -69.2268 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 51 columns, reduced to 26 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -61.2139 - took 0.02 seconds
Cbc0012I Integer solution of -61.21393 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 20 added rows had average density of 17.9
Cbc0013I At root node, 20 cuts changed objective from -90.518491 to -69.960001 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1158 row cuts average 2.6 elements, 9 column cuts (9 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 547 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 152 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.724 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -61.21393 best solution, best possible -69.960001 (1.48 seconds)
Cbc0012I Integer solution of -61.42453 found by rounding after 1942 iterations and 5 nodes (1.94 seconds)
Cbc0001I Search completed - best objective -61.42453, took 2055 iterations and 8 nodes (1.95 seconds)
Cbc0032I Strong branching done 164 times (2051 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.95

