Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 160 (-45) rows, 89 (-14) columns and 491 (-112) elements
Clp1000I sum of infeasibilities 2.73812e-05 - average 1.71133e-07, 22 fixed columns
Coin0506I Presolve 115 (-45) rows, 66 (-23) columns and 355 (-136) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 0.28340319 - largest nonzero change 0 ( 0%) - largest zero change 2.9637653e-05
Clp0000I Optimal - objective value 92.584734
Clp0000I Optimal - objective value 92.584734
Coin0511I After Postsolve, objective 92.584734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.584734
Clp0000I Optimal - objective value 92.584734
Clp0000I Optimal - objective value 92.584734
Coin0511I After Postsolve, objective 92.584734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.58473444 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 160 rows, 89 columns (88 integer (88 of which binary)) and 506 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.124%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.71572
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.7241 iterations 32
Cbc0038I Solution found of -19.7241
Cbc0038I Relaxing continuous gives -19.7241
Cbc0038I Rounding solution of -62.6612 is better than previous of -19.7241

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 89 columns, reduced to 30 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -62.6612 to -62.7491 (0.03 seconds)
Cbc0038I Round again with cutoff of -65.7327
Cbc0038I Pass   2: suminf.    1.48121 (4) obj. -65.7327 iterations 6
Cbc0038I Pass   3: suminf.    0.83239 (6) obj. -65.7327 iterations 8
Cbc0038I Pass   4: suminf.    1.39818 (5) obj. -65.7327 iterations 8
Cbc0038I Pass   5: suminf.    1.22541 (3) obj. -65.7327 iterations 2
Cbc0038I Pass   6: suminf.    0.66628 (2) obj. -65.7327 iterations 5
Cbc0038I Pass   7: suminf.    0.41463 (1) obj. -65.7327 iterations 2
Cbc0038I Pass   8: suminf.    0.33534 (1) obj. -65.7327 iterations 1
Cbc0038I Pass   9: suminf.    0.09441 (2) obj. -65.7327 iterations 20
Cbc0038I Pass  10: suminf.    0.09358 (2) obj. -65.7327 iterations 5
Cbc0038I Pass  11: suminf.    0.65913 (3) obj. -65.7327 iterations 6
Cbc0038I Pass  12: suminf.    1.14170 (4) obj. -65.7327 iterations 8
Cbc0038I Pass  13: suminf.    0.98901 (4) obj. -65.7327 iterations 6
Cbc0038I Pass  14: suminf.    1.15062 (3) obj. -65.7327 iterations 5
Cbc0038I Pass  15: suminf.    0.87322 (6) obj. -65.7327 iterations 3
Cbc0038I Pass  16: suminf.    1.23950 (5) obj. -65.7327 iterations 10
Cbc0038I Pass  17: suminf.    0.92986 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  18: suminf.    1.28940 (4) obj. -65.7327 iterations 3
Cbc0038I Pass  19: suminf.    0.57130 (3) obj. -65.7327 iterations 3
Cbc0038I Pass  20: suminf.    0.33689 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  21: suminf.    1.20565 (4) obj. -65.7327 iterations 5
Cbc0038I Pass  22: suminf.    1.01494 (4) obj. -65.7327 iterations 3
Cbc0038I Pass  23: suminf.    0.60770 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  24: suminf.    0.59408 (4) obj. -65.7327 iterations 1
Cbc0038I Pass  25: suminf.    1.33015 (4) obj. -65.7327 iterations 6
Cbc0038I Pass  26: suminf.    0.97621 (4) obj. -65.7327 iterations 5
Cbc0038I Pass  27: suminf.    0.90663 (4) obj. -65.7327 iterations 2
Cbc0038I Pass  28: suminf.    0.32548 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  29: suminf.    0.31839 (3) obj. -65.7327 iterations 2
Cbc0038I Pass  30: suminf.    1.20565 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  31: suminf.    1.01494 (4) obj. -65.7327 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 89 columns, reduced to 38 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -62.7491 to -65.0687 (0.07 seconds)
Cbc0038I Round again with cutoff of -71.1031
Cbc0038I Pass  31: suminf.    1.95561 (6) obj. -71.1031 iterations 1
Cbc0038I Pass  32: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  33: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  34: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  35: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  36: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I Pass  37: suminf.    1.95561 (6) obj. -71.1031 iterations 11
Cbc0038I Pass  38: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  39: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  40: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  41: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  42: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I Pass  43: suminf.    1.95561 (6) obj. -71.1031 iterations 11
Cbc0038I Pass  44: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  45: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  46: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  47: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  48: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I Pass  49: suminf.    1.95561 (6) obj. -71.1031 iterations 11
Cbc0038I Pass  50: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  51: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  52: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  53: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  54: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I Pass  55: suminf.    1.95561 (6) obj. -71.1031 iterations 11
Cbc0038I Pass  56: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  57: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  58: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  59: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  60: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 89 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -65.0687 - took 0.07 seconds
Cbc0012I Integer solution of -65.06871 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 160 rows 89 columns, reduced to 32 rows 23 columns
Cbc0031I 18 added rows had average density of 60.944444
Cbc0013I At root node, 18 cuts changed objective from -92.584734 to -81.033915 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4037 row cuts average 3.5 elements, 6 column cuts (6 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1244 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0004I Integer solution of -65.46699 found after 4493 iterations and 21 nodes (0.53 seconds)
Cbc0012I Integer solution of -65.92281 found by rounding after 4843 iterations and 40 nodes (0.56 seconds)
Cbc0038I Full problem 160 rows 89 columns, reduced to 2 rows 4 columns
Cbc0016I Integer solution of -65.92994 found by strong branching after 5096 iterations and 72 nodes (0.60 seconds)
Cbc0012I Integer solution of -66.27493 found by rounding after 5213 iterations and 84 nodes (0.61 seconds)
Cbc0038I Full problem 160 rows 89 columns, reduced to 6 rows 8 columns
Cbc0001I Search completed - best objective -66.27493, took 5371 iterations and 100 nodes (0.63 seconds)
Cbc0032I Strong branching done 516 times (4522 iterations), fathomed 11 nodes and fixed 39 variables
Cbc0035I Maximum depth 11, 283 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-78) rows, 142 (-60) columns and 2720 (-2933) elements
Clp1000I sum of infeasibilities 2.35503e-06 - average 1.86907e-08, 92 fixed columns
Coin0506I Presolve 41 (-85) rows, 49 (-93) columns and 175 (-2545) elements
Clp0006I 0  Obj 29.083851 Dual inf 205.14789 (45)
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 0.2873841 - largest nonzero change 1.0395189e-05 ( 0.0008514623%) - largest zero change 2.9637653e-05
Clp0000I Optimal - objective value 34.370591
Clp0000I Optimal - objective value 34.370591
Coin0511I After Postsolve, objective 34.370591, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 34.370591 Dual inf 137.01072 (55)
Clp0014I Perturbing problem by 0.001% of 1.7808597 - largest nonzero change 1.6000797e-05 ( 0.0012247315%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 113.56002
Clp0000I Optimal - objective value 113.56002
Clp0000I Optimal - objective value 113.56002
Coin0511I After Postsolve, objective 113.56002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.5600217 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 144 columns (144 integer (144 of which binary)) and 2736 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.183%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 4.26648
Cbc0038I Pass   1: suminf.    1.34333 (30) obj. -74.5939 iterations 27
Cbc0038I Pass   2: suminf.    1.34333 (30) obj. -74.5939 iterations 1
Cbc0038I Pass   3: suminf.    0.45340 (15) obj. -55.7869 iterations 15
Cbc0038I Solution found of -38.318
Cbc0038I Rounding solution of -49.3829 is better than previous of -38.318

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -49.3829 to -52.6209 (0.05 seconds)
Cbc0038I Round again with cutoff of -57.7126
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.34333 (30) obj. -74.5939 iterations 0
Cbc0038I Pass   5: suminf.    1.34333 (30) obj. -74.5939 iterations 1
Cbc0038I Pass   6: suminf.    0.50541 (11) obj. -57.7126 iterations 21
Cbc0038I Pass   7: suminf.    0.97725 (12) obj. -57.7126 iterations 19
Cbc0038I Pass   8: suminf.    0.56177 (11) obj. -57.7126 iterations 3
Cbc0038I Pass   9: suminf.    0.54354 (5) obj. -57.7126 iterations 13
Cbc0038I Pass  10: suminf.    0.51566 (3) obj. -57.7126 iterations 1
Cbc0038I Pass  11: suminf.    0.77017 (3) obj. -57.7126 iterations 2
Cbc0038I Pass  12: suminf.    0.69636 (5) obj. -57.7126 iterations 2
Cbc0038I Pass  13: suminf.    1.09190 (4) obj. -57.7126 iterations 8
Cbc0038I Pass  14: suminf.    1.05017 (4) obj. -57.7126 iterations 5
Cbc0038I Pass  15: suminf.    1.74203 (6) obj. -57.7126 iterations 7
Cbc0038I Pass  16: suminf.    1.88416 (5) obj. -57.7126 iterations 4
Cbc0038I Pass  17: suminf.    1.55044 (5) obj. -57.7126 iterations 3
Cbc0038I Pass  18: suminf.    1.09190 (4) obj. -57.7126 iterations 3
Cbc0038I Pass  19: suminf.    1.05017 (4) obj. -57.7126 iterations 6
Cbc0038I Pass  20: suminf.    1.74203 (6) obj. -57.7126 iterations 7
Cbc0038I Pass  21: suminf.    1.88416 (5) obj. -57.7126 iterations 4
Cbc0038I Pass  22: suminf.    1.55044 (5) obj. -57.7126 iterations 3
Cbc0038I Pass  23: suminf.    1.09190 (4) obj. -57.7126 iterations 3
Cbc0038I Pass  24: suminf.    1.05017 (4) obj. -57.7126 iterations 6
Cbc0038I Pass  25: suminf.    1.74203 (6) obj. -57.7126 iterations 6
Cbc0038I Pass  26: suminf.    1.88416 (5) obj. -57.7126 iterations 4
Cbc0038I Pass  27: suminf.    1.55044 (5) obj. -57.7126 iterations 3
Cbc0038I Pass  28: suminf.    1.09190 (4) obj. -57.7126 iterations 3
Cbc0038I Pass  29: suminf.    1.05017 (4) obj. -57.7126 iterations 5
Cbc0038I Pass  30: suminf.    1.74203 (6) obj. -57.7126 iterations 6
Cbc0038I Pass  31: suminf.    1.88416 (5) obj. -57.7126 iterations 5
Cbc0038I Pass  32: suminf.    1.55044 (5) obj. -57.7126 iterations 3
Cbc0038I Pass  33: suminf.    1.09190 (4) obj. -57.7126 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -52.6209 to -65.0687 (0.07 seconds)
Cbc0038I Round again with cutoff of -72.7624
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.34333 (30) obj. -74.5939 iterations 0
Cbc0038I Pass  34: suminf.    1.34333 (30) obj. -74.5939 iterations 1
Cbc0038I Pass  35: suminf.    1.34718 (29) obj. -72.7624 iterations 19
Cbc0038I Pass  36: suminf.    1.44466 (13) obj. -72.7624 iterations 48
Cbc0038I Pass  37: suminf.    1.44466 (13) obj. -72.7624 iterations 4
Cbc0038I Pass  38: suminf.    1.73165 (12) obj. -72.7624 iterations 8
Cbc0038I Pass  39: suminf.    1.34758 (12) obj. -72.7624 iterations 5
Cbc0038I Pass  40: suminf.    1.73165 (12) obj. -72.7624 iterations 7
Cbc0038I Pass  41: suminf.    3.51285 (22) obj. -72.7624 iterations 36
Cbc0038I Pass  42: suminf.    3.51285 (22) obj. -72.7624 iterations 3
Cbc0038I Pass  43: suminf.    2.98278 (14) obj. -72.7624 iterations 28
Cbc0038I Pass  44: suminf.    2.98278 (14) obj. -72.7624 iterations 2
Cbc0038I Pass  45: suminf.    3.07633 (14) obj. -72.7624 iterations 14
Cbc0038I Pass  46: suminf.    3.07633 (14) obj. -72.7624 iterations 2
Cbc0038I Pass  47: suminf.    2.98278 (14) obj. -72.7624 iterations 7
Cbc0038I Pass  48: suminf.    2.69754 (17) obj. -72.7624 iterations 26
Cbc0038I Pass  49: suminf.    2.69754 (17) obj. -72.7624 iterations 2
Cbc0038I Pass  50: suminf.    2.98278 (14) obj. -72.7624 iterations 21
Cbc0038I Pass  51: suminf.    2.98278 (14) obj. -72.7624 iterations 4
Cbc0038I Pass  52: suminf.    3.07633 (14) obj. -72.7624 iterations 15
Cbc0038I Pass  53: suminf.    3.07633 (14) obj. -72.7624 iterations 1
Cbc0038I Pass  54: suminf.    2.98278 (14) obj. -72.7624 iterations 5
Cbc0038I Pass  55: suminf.    1.29787 (17) obj. -72.7624 iterations 24
Cbc0038I Pass  56: suminf.    1.09044 (18) obj. -72.7624 iterations 8
Cbc0038I Pass  57: suminf.    2.75471 (16) obj. -72.7624 iterations 16
Cbc0038I Pass  58: suminf.    2.45609 (14) obj. -72.7624 iterations 4
Cbc0038I Pass  59: suminf.    2.57768 (14) obj. -72.7624 iterations 11
Cbc0038I Pass  60: suminf.    2.10279 (16) obj. -72.7624 iterations 4
Cbc0038I Pass  61: suminf.    2.75506 (16) obj. -72.7624 iterations 12
Cbc0038I Pass  62: suminf.    2.16416 (15) obj. -72.7624 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -65.0687 to -66.2749 (0.16 seconds)
Cbc0038I Round again with cutoff of -81.9946
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.22681 (41) obj. -81.9946 iterations 2
Cbc0038I Pass  63: suminf.    1.68227 (31) obj. -81.9946 iterations 1
Cbc0038I Pass  64: suminf.    2.65471 (26) obj. -81.9946 iterations 36
Cbc0038I Pass  65: suminf.    2.13345 (25) obj. -81.9946 iterations 7
Cbc0038I Pass  66: suminf.    2.38769 (22) obj. -81.9946 iterations 32
Cbc0038I Pass  67: suminf.    2.38769 (22) obj. -81.9946 iterations 2
Cbc0038I Pass  68: suminf.    2.52038 (22) obj. -81.9946 iterations 12
Cbc0038I Pass  69: suminf.    2.51928 (22) obj. -81.9946 iterations 6
Cbc0038I Pass  70: suminf.    2.50763 (22) obj. -81.9946 iterations 14
Cbc0038I Pass  71: suminf.    2.50605 (22) obj. -81.9946 iterations 4
Cbc0038I Pass  72: suminf.    2.52038 (22) obj. -81.9946 iterations 13
Cbc0038I Pass  73: suminf.    2.52669 (22) obj. -81.9946 iterations 27
Cbc0038I Pass  74: suminf.    2.07301 (22) obj. -81.9946 iterations 10
Cbc0038I Pass  75: suminf.    2.14340 (21) obj. -81.9946 iterations 19
Cbc0038I Pass  76: suminf.    2.01188 (22) obj. -81.9946 iterations 9
Cbc0038I Pass  77: suminf.    2.51928 (22) obj. -81.9946 iterations 17
Cbc0038I Pass  78: suminf.    2.51928 (22) obj. -81.9946 iterations 2
Cbc0038I Pass  79: suminf.    2.50763 (22) obj. -81.9946 iterations 18
Cbc0038I Pass  80: suminf.    2.50605 (22) obj. -81.9946 iterations 4
Cbc0038I Pass  81: suminf.    2.51928 (22) obj. -81.9946 iterations 4
Cbc0038I Pass  82: suminf.    3.13448 (24) obj. -81.9946 iterations 18
Cbc0038I Pass  83: suminf.    3.11785 (24) obj. -81.9946 iterations 2
Cbc0038I Pass  84: suminf.    3.48112 (24) obj. -81.9946 iterations 21
Cbc0038I Pass  85: suminf.    3.48112 (24) obj. -81.9946 iterations 5
Cbc0038I Pass  86: suminf.    3.43777 (24) obj. -81.9946 iterations 10
Cbc0038I Pass  87: suminf.    3.43777 (24) obj. -81.9946 iterations 4
Cbc0038I Pass  88: suminf.    3.48112 (24) obj. -81.9946 iterations 6
Cbc0038I Pass  89: suminf.    3.08171 (27) obj. -81.9946 iterations 18
Cbc0038I Pass  90: suminf.    2.53358 (26) obj. -81.9946 iterations 11
Cbc0038I Pass  91: suminf.    3.65051 (26) obj. -81.9946 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -66.2749 - took 0.13 seconds
Cbc0012I Integer solution of -66.27493 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 26 rows 30 columns
Cbc0031I 63 added rows had average density of 19.412698
Cbc0013I At root node, 63 cuts changed objective from -103.53662 to -74.429585 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 2245 row cuts average 8.7 elements, 4 column cuts (8 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 91.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 123 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 328 row cuts average 80.5 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -66.27493 best solution, best possible -74.429585 (0.61 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 7 rows 13 columns
Cbc0038I Full problem 191 rows 144 columns, reduced to 92 rows 108 columns
Cbc0044I Reduced cost fixing - 92 rows, 108 columns - restarting search
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.28094
Cbc0038I Pass   1: suminf.    1.99930 (30) obj. -73.7509 iterations 22
Cbc0038I Pass   2: suminf.    1.99930 (30) obj. -73.7509 iterations 1
Cbc0038I Pass   3: suminf.    1.12773 (15) obj. -66.2749 iterations 26
Cbc0038I Pass   4: suminf.    1.47287 (15) obj. -66.2749 iterations 25
Cbc0038I Pass   5: suminf.    1.47287 (15) obj. -66.2749 iterations 0
Cbc0038I Pass   6: suminf.    2.43652 (9) obj. -66.2749 iterations 30
Cbc0038I Pass   7: suminf.    2.43652 (9) obj. -66.2749 iterations 0
Cbc0038I Pass   8: suminf.    2.43652 (9) obj. -66.2749 iterations 4
Cbc0038I Pass   9: suminf.    2.43652 (9) obj. -66.2749 iterations 0
Cbc0038I Pass  10: suminf.    2.43652 (9) obj. -66.2749 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.90 seconds)
Cbc0038I Full problem 93 rows 108 columns, reduced to 93 rows 108 columns
Cbc0038I After 0.95 seconds - Feasibility pump exiting with objective of -61.2749 - took 0.06 seconds
Cbc0031I 62 added rows had average density of 19.387097
Cbc0013I At root node, 62 cuts changed objective from -101.58646 to -73.682445 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 1237 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 190 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 43.6 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 113 row cuts average 16.3 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -73.682445 (1.32 seconds)
Cbc0010I After 78 nodes, 6 on tree, 1e+50 best solution, best possible -73.682445 (2.35 seconds)
Cbc0010I After 146 nodes, 6 on tree, 1e+50 best solution, best possible -73.682445 (3.36 seconds)
Cbc0001I Search completed - best objective 1e+50, took 5462 iterations and 176 nodes (3.67 seconds)
Cbc0032I Strong branching done 2084 times (34027 iterations), fathomed 22 nodes and fixed 57 variables
Cbc0035I Maximum depth 12, 379 variables fixed on reduced cost
Cbc0038I Probing was tried 157 times and created 1809 cuts of which 0 were active after adding rounds of cuts (0.065 seconds)
Cbc0038I Gomory was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Cbc0038I Knapsack was tried 144 times and created 604 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Cbc0038I Clique was tried 144 times and created 681 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I OddWheel was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I MixedIntegerRounding2 was tried 144 times and created 941 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Cbc0038I FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 144 times and created 263 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
Cbc0038I ZeroHalf was tried 144 times and created 291 cuts of which 0 were active after adding rounds of cuts (0.760 seconds)
Cbc0038I Stored from first was tried 144 times and created 524 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -66.27493, took 6804 iterations and 226 nodes (3.67 seconds)
Cbc0032I Strong branching done 516 times (8900 iterations), fathomed 5 nodes and fixed 7 variables
Cbc0035I Maximum depth 14, 99 variables fixed on reduced cost
Total time (CPU seconds):       2.62   (Wallclock seconds):       3.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 160 (-45) rows, 89 (-14) columns and 491 (-112) elements
Clp1000I sum of infeasibilities 2.73812e-05 - average 1.71133e-07, 22 fixed columns
Coin0506I Presolve 115 (-45) rows, 66 (-23) columns and 355 (-136) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 0.28340319 - largest nonzero change 0 ( 0%) - largest zero change 2.9637653e-05
Clp0000I Optimal - objective value 92.584734
Clp0000I Optimal - objective value 92.584734
Coin0511I After Postsolve, objective 92.584734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.584734
Clp0000I Optimal - objective value 92.584734
Clp0000I Optimal - objective value 92.584734
Coin0511I After Postsolve, objective 92.584734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.58473444 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 160 rows, 89 columns (88 integer (88 of which binary)) and 506 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.124%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.71572
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -19.7241 iterations 32
Cbc0038I Solution found of -19.7241
Cbc0038I Relaxing continuous gives -19.7241
Cbc0038I Rounding solution of -62.6612 is better than previous of -19.7241

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 89 columns, reduced to 30 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -62.6612 to -62.7491 (0.02 seconds)
Cbc0038I Round again with cutoff of -65.7327
Cbc0038I Pass   2: suminf.    1.48121 (4) obj. -65.7327 iterations 6
Cbc0038I Pass   3: suminf.    0.83239 (6) obj. -65.7327 iterations 8
Cbc0038I Pass   4: suminf.    1.39818 (5) obj. -65.7327 iterations 8
Cbc0038I Pass   5: suminf.    1.22541 (3) obj. -65.7327 iterations 2
Cbc0038I Pass   6: suminf.    0.66628 (2) obj. -65.7327 iterations 5
Cbc0038I Pass   7: suminf.    0.41463 (1) obj. -65.7327 iterations 2
Cbc0038I Pass   8: suminf.    0.33534 (1) obj. -65.7327 iterations 1
Cbc0038I Pass   9: suminf.    0.09441 (2) obj. -65.7327 iterations 20
Cbc0038I Pass  10: suminf.    0.09358 (2) obj. -65.7327 iterations 5
Cbc0038I Pass  11: suminf.    0.65913 (3) obj. -65.7327 iterations 6
Cbc0038I Pass  12: suminf.    1.14170 (4) obj. -65.7327 iterations 8
Cbc0038I Pass  13: suminf.    0.98901 (4) obj. -65.7327 iterations 6
Cbc0038I Pass  14: suminf.    1.15062 (3) obj. -65.7327 iterations 5
Cbc0038I Pass  15: suminf.    0.87322 (6) obj. -65.7327 iterations 3
Cbc0038I Pass  16: suminf.    1.23950 (5) obj. -65.7327 iterations 10
Cbc0038I Pass  17: suminf.    0.92986 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  18: suminf.    1.28940 (4) obj. -65.7327 iterations 3
Cbc0038I Pass  19: suminf.    0.57130 (3) obj. -65.7327 iterations 3
Cbc0038I Pass  20: suminf.    0.33689 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  21: suminf.    1.20565 (4) obj. -65.7327 iterations 5
Cbc0038I Pass  22: suminf.    1.01494 (4) obj. -65.7327 iterations 3
Cbc0038I Pass  23: suminf.    0.60770 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  24: suminf.    0.59408 (4) obj. -65.7327 iterations 1
Cbc0038I Pass  25: suminf.    1.33015 (4) obj. -65.7327 iterations 6
Cbc0038I Pass  26: suminf.    0.97621 (4) obj. -65.7327 iterations 5
Cbc0038I Pass  27: suminf.    0.90663 (4) obj. -65.7327 iterations 2
Cbc0038I Pass  28: suminf.    0.32548 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  29: suminf.    0.31839 (3) obj. -65.7327 iterations 2
Cbc0038I Pass  30: suminf.    1.20565 (4) obj. -65.7327 iterations 4
Cbc0038I Pass  31: suminf.    1.01494 (4) obj. -65.7327 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 89 columns, reduced to 38 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -62.7491 to -65.0687 (0.06 seconds)
Cbc0038I Round again with cutoff of -71.1031
Cbc0038I Pass  31: suminf.    1.95561 (6) obj. -71.1031 iterations 1
Cbc0038I Pass  32: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  33: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  34: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  35: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  36: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I Pass  37: suminf.    1.95561 (6) obj. -71.1031 iterations 11
Cbc0038I Pass  38: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  39: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  40: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  41: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  42: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I Pass  43: suminf.    1.95561 (6) obj. -71.1031 iterations 11
Cbc0038I Pass  44: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  45: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  46: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  47: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  48: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I Pass  49: suminf.    1.95561 (6) obj. -71.1031 iterations 11
Cbc0038I Pass  50: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  51: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  52: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  53: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  54: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I Pass  55: suminf.    1.95561 (6) obj. -71.1031 iterations 11
Cbc0038I Pass  56: suminf.    1.24510 (6) obj. -71.1031 iterations 6
Cbc0038I Pass  57: suminf.    1.48448 (5) obj. -71.1031 iterations 7
Cbc0038I Pass  58: suminf.    1.48448 (5) obj. -71.1031 iterations 0
Cbc0038I Pass  59: suminf.    1.46990 (5) obj. -71.1031 iterations 8
Cbc0038I Pass  60: suminf.    1.87512 (5) obj. -71.1031 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 160 rows 89 columns, reduced to 34 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -65.0687 - took 0.07 seconds
Cbc0012I Integer solution of -65.06871 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 160 rows 89 columns, reduced to 32 rows 23 columns
Cbc0031I 18 added rows had average density of 60.944444
Cbc0013I At root node, 18 cuts changed objective from -92.584734 to -81.033915 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4037 row cuts average 3.5 elements, 6 column cuts (6 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1244 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0004I Integer solution of -65.46699 found after 4493 iterations and 21 nodes (0.55 seconds)
Cbc0012I Integer solution of -65.92281 found by rounding after 4843 iterations and 40 nodes (0.58 seconds)
Cbc0038I Full problem 160 rows 89 columns, reduced to 2 rows 4 columns
Cbc0016I Integer solution of -65.92994 found by strong branching after 5096 iterations and 72 nodes (0.62 seconds)
Cbc0012I Integer solution of -66.27493 found by rounding after 5213 iterations and 84 nodes (0.63 seconds)
Cbc0038I Full problem 160 rows 89 columns, reduced to 6 rows 8 columns
Cbc0001I Search completed - best objective -66.27493, took 5371 iterations and 100 nodes (0.65 seconds)
Cbc0032I Strong branching done 516 times (4522 iterations), fathomed 11 nodes and fixed 39 variables
Cbc0035I Maximum depth 11, 283 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-79) rows, 142 (-61) columns and 2720 (-2934) elements
Clp1000I sum of infeasibilities 2.35503e-06 - average 1.86907e-08, 92 fixed columns
Coin0506I Presolve 41 (-85) rows, 49 (-93) columns and 175 (-2545) elements
Clp0006I 0  Obj 29.083851 Dual inf 205.14789 (45)
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 0.2873841 - largest nonzero change 1.0395189e-05 ( 0.0008514623%) - largest zero change 2.9637653e-05
Clp0000I Optimal - objective value 34.370591
Clp0000I Optimal - objective value 34.370591
Coin0511I After Postsolve, objective 34.370591, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 34.370591 Dual inf 137.01072 (55)
Clp0014I Perturbing problem by 0.001% of 1.7808597 - largest nonzero change 1.6000797e-05 ( 0.0012247315%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 113.56002
Clp0000I Optimal - objective value 113.56002
Clp0000I Optimal - objective value 113.56002
Coin0511I After Postsolve, objective 113.56002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.5600217 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 144 columns (144 integer (144 of which binary)) and 2736 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.183%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 4.26648
Cbc0038I Pass   1: suminf.    1.34333 (30) obj. -74.5939 iterations 27
Cbc0038I Pass   2: suminf.    1.34333 (30) obj. -74.5939 iterations 1
Cbc0038I Pass   3: suminf.    0.45340 (15) obj. -55.7869 iterations 15
Cbc0038I Solution found of -38.318
Cbc0038I Rounding solution of -49.3829 is better than previous of -38.318

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -49.3829 to -52.6209 (0.05 seconds)
Cbc0038I Round again with cutoff of -57.7126
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.34333 (30) obj. -74.5939 iterations 0
Cbc0038I Pass   5: suminf.    1.34333 (30) obj. -74.5939 iterations 1
Cbc0038I Pass   6: suminf.    0.50541 (11) obj. -57.7126 iterations 21
Cbc0038I Pass   7: suminf.    0.97725 (12) obj. -57.7126 iterations 19
Cbc0038I Pass   8: suminf.    0.56177 (11) obj. -57.7126 iterations 3
Cbc0038I Pass   9: suminf.    0.54354 (5) obj. -57.7126 iterations 13
Cbc0038I Pass  10: suminf.    0.51566 (3) obj. -57.7126 iterations 1
Cbc0038I Pass  11: suminf.    0.77017 (3) obj. -57.7126 iterations 2
Cbc0038I Pass  12: suminf.    0.69636 (5) obj. -57.7126 iterations 2
Cbc0038I Pass  13: suminf.    1.09190 (4) obj. -57.7126 iterations 8
Cbc0038I Pass  14: suminf.    1.05017 (4) obj. -57.7126 iterations 5
Cbc0038I Pass  15: suminf.    1.74203 (6) obj. -57.7126 iterations 7
Cbc0038I Pass  16: suminf.    1.88416 (5) obj. -57.7126 iterations 4
Cbc0038I Pass  17: suminf.    1.55044 (5) obj. -57.7126 iterations 3
Cbc0038I Pass  18: suminf.    1.09190 (4) obj. -57.7126 iterations 3
Cbc0038I Pass  19: suminf.    1.05017 (4) obj. -57.7126 iterations 6
Cbc0038I Pass  20: suminf.    1.74203 (6) obj. -57.7126 iterations 7
Cbc0038I Pass  21: suminf.    1.88416 (5) obj. -57.7126 iterations 4
Cbc0038I Pass  22: suminf.    1.55044 (5) obj. -57.7126 iterations 3
Cbc0038I Pass  23: suminf.    1.09190 (4) obj. -57.7126 iterations 3
Cbc0038I Pass  24: suminf.    1.05017 (4) obj. -57.7126 iterations 6
Cbc0038I Pass  25: suminf.    1.74203 (6) obj. -57.7126 iterations 6
Cbc0038I Pass  26: suminf.    1.88416 (5) obj. -57.7126 iterations 4
Cbc0038I Pass  27: suminf.    1.55044 (5) obj. -57.7126 iterations 3
Cbc0038I Pass  28: suminf.    1.09190 (4) obj. -57.7126 iterations 3
Cbc0038I Pass  29: suminf.    1.05017 (4) obj. -57.7126 iterations 5
Cbc0038I Pass  30: suminf.    1.74203 (6) obj. -57.7126 iterations 6
Cbc0038I Pass  31: suminf.    1.88416 (5) obj. -57.7126 iterations 5
Cbc0038I Pass  32: suminf.    1.55044 (5) obj. -57.7126 iterations 3
Cbc0038I Pass  33: suminf.    1.09190 (4) obj. -57.7126 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -52.6209 to -65.0687 (0.07 seconds)
Cbc0038I Round again with cutoff of -72.7624
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.34333 (30) obj. -74.5939 iterations 0
Cbc0038I Pass  34: suminf.    1.34333 (30) obj. -74.5939 iterations 1
Cbc0038I Pass  35: suminf.    1.34718 (29) obj. -72.7624 iterations 19
Cbc0038I Pass  36: suminf.    1.44466 (13) obj. -72.7624 iterations 48
Cbc0038I Pass  37: suminf.    1.44466 (13) obj. -72.7624 iterations 4
Cbc0038I Pass  38: suminf.    1.73165 (12) obj. -72.7624 iterations 8
Cbc0038I Pass  39: suminf.    1.34758 (12) obj. -72.7624 iterations 5
Cbc0038I Pass  40: suminf.    1.73165 (12) obj. -72.7624 iterations 7
Cbc0038I Pass  41: suminf.    3.51285 (22) obj. -72.7624 iterations 36
Cbc0038I Pass  42: suminf.    3.51285 (22) obj. -72.7624 iterations 3
Cbc0038I Pass  43: suminf.    2.98278 (14) obj. -72.7624 iterations 28
Cbc0038I Pass  44: suminf.    2.98278 (14) obj. -72.7624 iterations 2
Cbc0038I Pass  45: suminf.    3.07633 (14) obj. -72.7624 iterations 14
Cbc0038I Pass  46: suminf.    3.07633 (14) obj. -72.7624 iterations 2
Cbc0038I Pass  47: suminf.    2.98278 (14) obj. -72.7624 iterations 7
Cbc0038I Pass  48: suminf.    2.69754 (17) obj. -72.7624 iterations 26
Cbc0038I Pass  49: suminf.    2.69754 (17) obj. -72.7624 iterations 2
Cbc0038I Pass  50: suminf.    2.98278 (14) obj. -72.7624 iterations 21
Cbc0038I Pass  51: suminf.    2.98278 (14) obj. -72.7624 iterations 4
Cbc0038I Pass  52: suminf.    3.07633 (14) obj. -72.7624 iterations 15
Cbc0038I Pass  53: suminf.    3.07633 (14) obj. -72.7624 iterations 1
Cbc0038I Pass  54: suminf.    2.98278 (14) obj. -72.7624 iterations 5
Cbc0038I Pass  55: suminf.    1.29787 (17) obj. -72.7624 iterations 24
Cbc0038I Pass  56: suminf.    1.09044 (18) obj. -72.7624 iterations 8
Cbc0038I Pass  57: suminf.    2.75471 (16) obj. -72.7624 iterations 16
Cbc0038I Pass  58: suminf.    2.45609 (14) obj. -72.7624 iterations 4
Cbc0038I Pass  59: suminf.    2.57768 (14) obj. -72.7624 iterations 11
Cbc0038I Pass  60: suminf.    2.10279 (16) obj. -72.7624 iterations 4
Cbc0038I Pass  61: suminf.    2.75506 (16) obj. -72.7624 iterations 12
Cbc0038I Pass  62: suminf.    2.16416 (15) obj. -72.7624 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -65.0687 to -66.2749 (0.15 seconds)
Cbc0038I Round again with cutoff of -81.9946
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.22681 (41) obj. -81.9946 iterations 2
Cbc0038I Pass  63: suminf.    1.68227 (31) obj. -81.9946 iterations 1
Cbc0038I Pass  64: suminf.    2.65471 (26) obj. -81.9946 iterations 36
Cbc0038I Pass  65: suminf.    2.13345 (25) obj. -81.9946 iterations 7
Cbc0038I Pass  66: suminf.    2.38769 (22) obj. -81.9946 iterations 32
Cbc0038I Pass  67: suminf.    2.38769 (22) obj. -81.9946 iterations 2
Cbc0038I Pass  68: suminf.    2.52038 (22) obj. -81.9946 iterations 12
Cbc0038I Pass  69: suminf.    2.51928 (22) obj. -81.9946 iterations 6
Cbc0038I Pass  70: suminf.    2.50763 (22) obj. -81.9946 iterations 14
Cbc0038I Pass  71: suminf.    2.50605 (22) obj. -81.9946 iterations 4
Cbc0038I Pass  72: suminf.    2.52038 (22) obj. -81.9946 iterations 13
Cbc0038I Pass  73: suminf.    2.52669 (22) obj. -81.9946 iterations 27
Cbc0038I Pass  74: suminf.    2.07301 (22) obj. -81.9946 iterations 10
Cbc0038I Pass  75: suminf.    2.14340 (21) obj. -81.9946 iterations 19
Cbc0038I Pass  76: suminf.    2.01188 (22) obj. -81.9946 iterations 9
Cbc0038I Pass  77: suminf.    2.51928 (22) obj. -81.9946 iterations 17
Cbc0038I Pass  78: suminf.    2.51928 (22) obj. -81.9946 iterations 2
Cbc0038I Pass  79: suminf.    2.50763 (22) obj. -81.9946 iterations 18
Cbc0038I Pass  80: suminf.    2.50605 (22) obj. -81.9946 iterations 4
Cbc0038I Pass  81: suminf.    2.51928 (22) obj. -81.9946 iterations 4
Cbc0038I Pass  82: suminf.    3.13448 (24) obj. -81.9946 iterations 18
Cbc0038I Pass  83: suminf.    3.11785 (24) obj. -81.9946 iterations 2
Cbc0038I Pass  84: suminf.    3.48112 (24) obj. -81.9946 iterations 21
Cbc0038I Pass  85: suminf.    3.48112 (24) obj. -81.9946 iterations 5
Cbc0038I Pass  86: suminf.    3.43777 (24) obj. -81.9946 iterations 10
Cbc0038I Pass  87: suminf.    3.43777 (24) obj. -81.9946 iterations 4
Cbc0038I Pass  88: suminf.    3.48112 (24) obj. -81.9946 iterations 6
Cbc0038I Pass  89: suminf.    3.08171 (27) obj. -81.9946 iterations 18
Cbc0038I Pass  90: suminf.    2.53358 (26) obj. -81.9946 iterations 11
Cbc0038I Pass  91: suminf.    3.65051 (26) obj. -81.9946 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -66.2749 - took 0.13 seconds
Cbc0012I Integer solution of -66.27493 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 26 rows 30 columns
Cbc0031I 63 added rows had average density of 19.412698
Cbc0013I At root node, 63 cuts changed objective from -103.53662 to -74.429585 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 2245 row cuts average 8.7 elements, 4 column cuts (8 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 91.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 123 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 328 row cuts average 80.5 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -66.27493 best solution, best possible -74.429585 (0.60 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 7 rows 13 columns
Cbc0038I Full problem 191 rows 144 columns, reduced to 92 rows 108 columns
Cbc0044I Reduced cost fixing - 92 rows, 108 columns - restarting search
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.28094
Cbc0038I Pass   1: suminf.    1.99930 (30) obj. -73.7509 iterations 22
Cbc0038I Pass   2: suminf.    1.99930 (30) obj. -73.7509 iterations 1
Cbc0038I Pass   3: suminf.    1.12773 (15) obj. -66.2749 iterations 26
Cbc0038I Pass   4: suminf.    1.47287 (15) obj. -66.2749 iterations 25
Cbc0038I Pass   5: suminf.    1.47287 (15) obj. -66.2749 iterations 0
Cbc0038I Pass   6: suminf.    2.43652 (9) obj. -66.2749 iterations 30
Cbc0038I Pass   7: suminf.    2.43652 (9) obj. -66.2749 iterations 0
Cbc0038I Pass   8: suminf.    2.43652 (9) obj. -66.2749 iterations 4
Cbc0038I Pass   9: suminf.    2.43652 (9) obj. -66.2749 iterations 0
Cbc0038I Pass  10: suminf.    2.43652 (9) obj. -66.2749 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 108 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.89 seconds)
Cbc0038I Full problem 93 rows 108 columns, reduced to 93 rows 108 columns
Cbc0038I After 0.94 seconds - Feasibility pump exiting with objective of -61.2749 - took 0.05 seconds
Cbc0031I 62 added rows had average density of 19.387097
Cbc0013I At root node, 62 cuts changed objective from -101.58646 to -73.682445 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 1237 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 190 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 43.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 113 row cuts average 16.3 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -73.682445 (1.31 seconds)
Cbc0010I After 83 nodes, 7 on tree, 1e+50 best solution, best possible -73.682445 (2.33 seconds)
Cbc0010I After 153 nodes, 4 on tree, 1e+50 best solution, best possible -73.682445 (3.36 seconds)
Cbc0001I Search completed - best objective 1e+50, took 5462 iterations and 176 nodes (3.56 seconds)
Cbc0032I Strong branching done 2084 times (34027 iterations), fathomed 22 nodes and fixed 57 variables
Cbc0035I Maximum depth 12, 379 variables fixed on reduced cost
Cbc0038I Probing was tried 157 times and created 1809 cuts of which 0 were active after adding rounds of cuts (0.065 seconds)
Cbc0038I Gomory was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Cbc0038I Knapsack was tried 144 times and created 604 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Cbc0038I Clique was tried 144 times and created 681 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I OddWheel was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I MixedIntegerRounding2 was tried 144 times and created 941 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
Cbc0038I FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 144 times and created 263 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
Cbc0038I ZeroHalf was tried 144 times and created 291 cuts of which 0 were active after adding rounds of cuts (0.740 seconds)
Cbc0038I Stored from first was tried 144 times and created 524 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -66.27493, took 6804 iterations and 226 nodes (3.56 seconds)
Cbc0032I Strong branching done 516 times (8900 iterations), fathomed 5 nodes and fixed 7 variables
Cbc0035I Maximum depth 14, 99 variables fixed on reduced cost
Total time (CPU seconds):       2.58   (Wallclock seconds):       3.57

