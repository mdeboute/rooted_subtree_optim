Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 4.02797e-05 - average 2.96174e-07, 20 fixed columns
Coin0506I Presolve 91 (-45) rows, 53 (-23) columns and 280 (-136) elements
Clp0029I End of values pass after 53 iterations
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Coin0511I After Postsolve, objective 65.255454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Coin0511I After Postsolve, objective 65.255454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.2554539 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 425 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.97607
Cbc0038I Solution found of -2.45054
Cbc0038I Relaxing continuous gives -4.95881
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 52 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -4.95881 to -36.7661 (0.06 seconds)
Cbc0038I Round again with cutoff of -39.6151
Cbc0038I Pass   1: suminf.    3.04888 (18) obj. -39.6151 iterations 56
Cbc0038I Pass   2: suminf.    2.68578 (7) obj. -39.6151 iterations 20
Cbc0038I Pass   3: suminf.    1.34805 (6) obj. -39.6151 iterations 5
Cbc0038I Pass   4: suminf.    1.06468 (4) obj. -39.6151 iterations 3
Cbc0038I Pass   5: suminf.    1.22946 (4) obj. -39.6151 iterations 5
Cbc0038I Pass   6: suminf.    1.84352 (5) obj. -39.6151 iterations 5
Cbc0038I Pass   7: suminf.    1.80541 (5) obj. -39.6151 iterations 3
Cbc0038I Pass   8: suminf.    2.02676 (5) obj. -39.6151 iterations 5
Cbc0038I Pass   9: suminf.    1.91445 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  10: suminf.    1.91445 (5) obj. -39.6151 iterations 0
Cbc0038I Pass  11: suminf.    1.46985 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  12: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  13: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  14: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  15: suminf.    1.61467 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  16: suminf.    0.93960 (4) obj. -39.6151 iterations 4
Cbc0038I Pass  17: suminf.    2.50464 (7) obj. -39.6151 iterations 6
Cbc0038I Pass  18: suminf.    1.77569 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  19: suminf.    1.55310 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  20: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  21: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  22: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  23: suminf.    1.61467 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  24: suminf.    0.93960 (4) obj. -39.6151 iterations 4
Cbc0038I Pass  25: suminf.    2.50464 (7) obj. -39.6151 iterations 6
Cbc0038I Pass  26: suminf.    1.77569 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  27: suminf.    1.55310 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  28: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  29: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  30: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 56 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -36.7661 to -38.3249 (0.11 seconds)
Cbc0038I Round again with cutoff of -44.7432
Cbc0038I Pass  30: suminf.    3.59447 (18) obj. -44.7432 iterations 0
Cbc0038I Pass  31: suminf.    2.30680 (6) obj. -44.7432 iterations 16
Cbc0038I Pass  32: suminf.    1.81759 (6) obj. -44.7432 iterations 3
Cbc0038I Pass  33: suminf.    2.30022 (8) obj. -44.7432 iterations 7
Cbc0038I Pass  34: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  35: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  36: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  37: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  38: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  39: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  40: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  41: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  42: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  43: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  44: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  45: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  46: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  47: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  48: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  49: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  50: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  51: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  52: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  53: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  54: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  55: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  56: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  57: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  58: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  59: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 56 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -38.3249 - took 0.12 seconds
Cbc0012I Integer solution of -38.32488 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 53 rows 35 columns
Cbc0031I 17 added rows had average density of 59.588235
Cbc0013I At root node, 17 cuts changed objective from -65.255454 to -58.026594 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11770 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1564 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 130 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.32488 best solution, best possible -58.026594 (0.82 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 6 rows 10 columns
Cbc0038I Full problem 135 rows 76 columns, reduced to 60 rows 37 columns
Cbc0001I Search completed - best objective -38.32488000000001, took 9900 iterations and 122 nodes (1.07 seconds)
Cbc0032I Strong branching done 786 times (12988 iterations), fathomed 11 nodes and fixed 38 variables
Cbc0035I Maximum depth 20, 316 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 117 (-35) columns and 1922 (-1381) elements
Clp1000I sum of infeasibilities 1.98566e-06 - average 1.92783e-08, 76 fixed columns
Coin0506I Presolve 30 (-73) rows, 40 (-77) columns and 134 (-1788) elements
Clp0006I 0  Obj 12.278887 Dual inf 559.44961 (39)
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 0.29791317 - largest nonzero change 2.7926465e-05 ( 0.0023983587%) - largest zero change 2.5905099e-05
Clp0000I Optimal - objective value 14.051128
Clp0000I Optimal - objective value 14.051128
Coin0511I After Postsolve, objective 14.051128, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 14.051128 Dual inf 57.310563 (42)
Clp0014I Perturbing problem by 0.001% of 1.5786622 - largest nonzero change 2.7033243e-05 ( 0.0017184739%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 83.132485
Clp0000I Optimal - objective value 83.132485
Clp0000I Optimal - objective value 83.132485
Coin0511I After Postsolve, objective 83.132485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.13248524 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 117 columns (117 integer (117 of which binary)) and 1933 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.561%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.15906
Cbc0038I Pass   1: suminf.    1.82709 (25) obj. -54.6141 iterations 15
Cbc0038I Pass   2: suminf.    1.82709 (25) obj. -54.6141 iterations 1
Cbc0038I Pass   3: suminf.    0.72716 (12) obj. -32.6232 iterations 13
Cbc0038I Pass   4: suminf.    0.06256 (2) obj. -20.4989 iterations 10
Cbc0038I Solution found of -17.5918
Cbc0038I Rounding solution of -28.507 is better than previous of -17.5918

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 117 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -33.3317
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.82709 (25) obj. -54.6141 iterations 0
Cbc0038I Pass   6: suminf.    1.82709 (25) obj. -54.6141 iterations 1
Cbc0038I Pass   7: suminf.    0.48698 (5) obj. -33.3317 iterations 34
Cbc0038I Pass   8: suminf.    0.24778 (4) obj. -33.3317 iterations 2
Cbc0038I Pass   9: suminf.    0.42976 (5) obj. -33.3317 iterations 7
Cbc0038I Pass  10: suminf.    0.42976 (5) obj. -33.3317 iterations 1
Cbc0038I Pass  11: suminf.    0.51862 (2) obj. -35.2412 iterations 6
Cbc0038I Pass  12: suminf.    0.38720 (2) obj. -33.3317 iterations 2
Cbc0038I Pass  13: suminf.    1.44417 (10) obj. -33.6076 iterations 44
Cbc0038I Pass  14: suminf.    0.66992 (7) obj. -35.0457 iterations 11
Cbc0038I Pass  15: suminf.    0.59708 (4) obj. -33.3317 iterations 9
Cbc0038I Pass  16: suminf.    0.47795 (4) obj. -33.3317 iterations 1
Cbc0038I Pass  17: suminf.    0.59708 (4) obj. -33.3317 iterations 3
Cbc0038I Pass  18: suminf.    0.91938 (11) obj. -33.3317 iterations 40
Cbc0038I Pass  19: suminf.    0.70930 (10) obj. -33.3317 iterations 4
Cbc0038I Pass  20: suminf.    0.91405 (7) obj. -33.3317 iterations 15
Cbc0038I Pass  21: suminf.    0.91405 (7) obj. -33.3317 iterations 0
Cbc0038I Pass  22: suminf.    1.03001 (4) obj. -33.3317 iterations 8
Cbc0038I Pass  23: suminf.    0.90213 (3) obj. -33.3317 iterations 3
Cbc0038I Pass  24: suminf.    0.87880 (3) obj. -33.7741 iterations 1
Cbc0038I Pass  25: suminf.    0.94200 (3) obj. -33.3317 iterations 3
Cbc0038I Pass  26: suminf.    1.74081 (12) obj. -33.3317 iterations 21
Cbc0038I Pass  27: suminf.    1.52064 (12) obj. -33.3317 iterations 7
Cbc0038I Pass  28: suminf.    1.05179 (5) obj. -33.3317 iterations 11
Cbc0038I Pass  29: suminf.    0.95260 (5) obj. -33.3317 iterations 2
Cbc0038I Pass  30: suminf.    1.15129 (4) obj. -33.3317 iterations 5
Cbc0038I Pass  31: suminf.    0.88708 (4) obj. -33.3317 iterations 1
Cbc0038I Pass  32: suminf.    0.94933 (4) obj. -33.3317 iterations 5
Cbc0038I Pass  33: suminf.    0.44136 (3) obj. -33.3317 iterations 1
Cbc0038I Pass  34: suminf.    0.78725 (3) obj. -33.3317 iterations 3
Cbc0038I Rounding solution of -34.0477 is better than previous of -28.507

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 117 columns, reduced to 26 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -42.5888
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.82709 (25) obj. -54.6141 iterations 0
Cbc0038I Pass  35: suminf.    1.82709 (25) obj. -54.6141 iterations 1
Cbc0038I Pass  36: suminf.    1.10744 (13) obj. -42.5888 iterations 24
Cbc0038I Pass  37: suminf.    0.88614 (12) obj. -42.5888 iterations 2
Cbc0038I Pass  38: suminf.    1.21646 (8) obj. -42.5888 iterations 15
Cbc0038I Pass  39: suminf.    1.21646 (8) obj. -42.5888 iterations 0
Cbc0038I Pass  40: suminf.    1.08185 (4) obj. -42.5888 iterations 11
Cbc0038I Pass  41: suminf.    0.67936 (3) obj. -43.7659 iterations 2
Cbc0038I Pass  42: suminf.    1.08185 (4) obj. -42.5888 iterations 6
Cbc0038I Pass  43: suminf.    1.50232 (9) obj. -42.5888 iterations 21
Cbc0038I Pass  44: suminf.    0.87003 (9) obj. -42.5888 iterations 7
Cbc0038I Pass  45: suminf.    0.75261 (4) obj. -42.5888 iterations 14
Cbc0038I Pass  46: suminf.    0.44287 (4) obj. -42.5888 iterations 10
Cbc0038I Pass  47: suminf.    1.17368 (4) obj. -42.5888 iterations 9
Cbc0038I Pass  48: suminf.    1.08595 (5) obj. -42.5888 iterations 3
Cbc0038I Pass  49: suminf.    1.17368 (4) obj. -42.5888 iterations 5
Cbc0038I Pass  50: suminf.    1.44046 (9) obj. -42.5888 iterations 16
Cbc0038I Pass  51: suminf.    0.87605 (7) obj. -42.8711 iterations 2
Cbc0038I Pass  52: suminf.    0.87022 (5) obj. -42.5888 iterations 11
Cbc0038I Pass  53: suminf.    0.34570 (4) obj. -42.7079 iterations 5
Cbc0038I Pass  54: suminf.    0.87022 (4) obj. -42.5888 iterations 5
Cbc0038I Pass  55: suminf.    2.21265 (14) obj. -42.5888 iterations 30
Cbc0038I Pass  56: suminf.    1.15785 (10) obj. -42.5888 iterations 6
Cbc0038I Pass  57: suminf.    1.09280 (10) obj. -42.5888 iterations 5
Cbc0038I Pass  58: suminf.    1.13667 (7) obj. -42.5888 iterations 15
Cbc0038I Pass  59: suminf.    0.86434 (8) obj. -42.5888 iterations 3
Cbc0038I Pass  60: suminf.    0.93794 (5) obj. -42.5888 iterations 16
Cbc0038I Pass  61: suminf.    0.83392 (5) obj. -42.5888 iterations 4
Cbc0038I Pass  62: suminf.    0.93794 (5) obj. -42.5888 iterations 6
Cbc0038I Pass  63: suminf.    1.46567 (11) obj. -42.5888 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 117 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -34.0477 - took 0.05 seconds
Cbc0012I Integer solution of -34.04767 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 48 added rows had average density of 28.5
Cbc0013I At root node, 48 cuts changed objective from -76.753031 to -44.984432 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 2352 row cuts average 4.9 elements, 9 column cuts (9 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 435 row cuts average 91.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 98 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 439 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 284 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -34.04767 best solution, best possible -44.984432 (0.56 seconds)
Cbc0012I Integer solution of -37.1065 found by rounding after 904 iterations and 2 nodes (0.70 seconds)
Cbc0012I Integer solution of -37.52121 found by DiveCoefficient after 919 iterations and 2 nodes (0.74 seconds)
Cbc0012I Integer solution of -37.91571 found by DiveCoefficient after 1021 iterations and 9 nodes (1.09 seconds)
Cbc0016I Integer solution of -38.2536 found by strong branching after 1047 iterations and 10 nodes (1.15 seconds)
Cbc0010I After 12 nodes, 7 on tree, -38.2536 best solution, best possible -44.984432 (1.29 seconds)
Cbc0016I Integer solution of -38.32488 found by strong branching after 1142 iterations and 17 nodes (1.48 seconds)
Cbc0010I After 26 nodes, 3 on tree, -38.32488 best solution, best possible -44.104834 (2.02 seconds)
Cbc0038I Full problem 102 rows 117 columns, reduced to 38 rows 53 columns
Cbc0010I After 41 nodes, 2 on tree, -38.32488 best solution, best possible -44.054908 (2.83 seconds)
Cbc0038I Full problem 150 rows 117 columns, reduced to 89 rows 102 columns
Cbc0044I Reduced cost fixing - 89 rows, 102 columns - restarting search
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.22685
Cbc0038I Pass   1: suminf.    2.32893 (25) obj. -53.8411 iterations 17
Cbc0038I Pass   2: suminf.    2.32893 (25) obj. -53.8411 iterations 0
Cbc0038I Pass   3: suminf.    0.71436 (10) obj. -38.3249 iterations 34
Cbc0038I Pass   4: suminf.    0.71436 (10) obj. -38.3249 iterations 0
Cbc0038I Pass   5: suminf.    0.90190 (4) obj. -38.3249 iterations 11
Cbc0038I Pass   6: suminf.    0.54400 (5) obj. -38.3249 iterations 5
Cbc0038I Pass   7: suminf.    0.95915 (3) obj. -38.3249 iterations 5
Cbc0038I Pass   8: suminf.    0.95915 (3) obj. -38.3249 iterations 0
Cbc0038I Pass   9: suminf.    0.63729 (3) obj. -40.295 iterations 2
Cbc0038I Pass  10: suminf.    0.59414 (2) obj. -40.0348 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 102 columns, reduced to 10 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (3.15 seconds)
Cbc0038I Full problem 90 rows 102 columns, reduced to 90 rows 102 columns
Cbc0038I After 3.48 seconds - Feasibility pump exiting with objective of -34.0477 - took 0.33 seconds
Cbc0031I 46 added rows had average density of 28.891304
Cbc0013I At root node, 46 cuts changed objective from -75.22643 to -44.626078 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5799 row cuts average 4.5 elements, 6 column cuts (6 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 555 row cuts average 88.8 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 281 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1095 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1174 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.636 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 625 row cuts average 22.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -44.625524 (5.29 seconds)
Cbc0010I After 22 nodes, 3 on tree, 1e+50 best solution, best possible -44.625524 (6.30 seconds)
Cbc0010I After 55 nodes, 4 on tree, 1e+50 best solution, best possible -44.625524 (7.37 seconds)
Cbc0010I After 85 nodes, 5 on tree, 1e+50 best solution, best possible -44.625524 (8.37 seconds)
Cbc0001I Search completed - best objective 1e+50, took 7158 iterations and 94 nodes (8.50 seconds)
Cbc0032I Strong branching done 1334 times (21074 iterations), fathomed 9 nodes and fixed 26 variables
Cbc0035I Maximum depth 11, 244 variables fixed on reduced cost
Cbc0038I Probing was tried 302 times and created 6615 cuts of which 0 were active after adding rounds of cuts (0.139 seconds)
Cbc0038I Gomory was tried 297 times and created 560 cuts of which 0 were active after adding rounds of cuts (0.132 seconds)
Cbc0038I Knapsack was tried 298 times and created 905 cuts of which 0 were active after adding rounds of cuts (0.092 seconds)
Cbc0038I Clique was tried 298 times and created 2117 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Cbc0038I MixedIntegerRounding2 was tried 298 times and created 1681 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 297 times and created 348 cuts of which 0 were active after adding rounds of cuts (0.078 seconds)
Cbc0038I ZeroHalf was tried 298 times and created 235 cuts of which 0 were active after adding rounds of cuts (1.844 seconds)
Cbc0038I Stored from first was tried 298 times and created 979 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -38.32488000000001, took 9893 iterations and 144 nodes (8.51 seconds)
Cbc0032I Strong branching done 872 times (10665 iterations), fathomed 5 nodes and fixed 5 variables
Cbc0035I Maximum depth 10, 89 variables fixed on reduced cost
Total time (CPU seconds):       5.70   (Wallclock seconds):       8.52

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 4.02797e-05 - average 2.96174e-07, 20 fixed columns
Coin0506I Presolve 91 (-45) rows, 53 (-23) columns and 280 (-136) elements
Clp0029I End of values pass after 53 iterations
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Coin0511I After Postsolve, objective 65.255454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Clp0000I Optimal - objective value 65.255454
Coin0511I After Postsolve, objective 65.255454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.2554539 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 76 columns (75 integer (75 of which binary)) and 425 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.97607
Cbc0038I Solution found of -2.45054
Cbc0038I Relaxing continuous gives -4.95881
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 52 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -4.95881 to -36.7661 (0.06 seconds)
Cbc0038I Round again with cutoff of -39.6151
Cbc0038I Pass   1: suminf.    3.04888 (18) obj. -39.6151 iterations 56
Cbc0038I Pass   2: suminf.    2.68578 (7) obj. -39.6151 iterations 20
Cbc0038I Pass   3: suminf.    1.34805 (6) obj. -39.6151 iterations 5
Cbc0038I Pass   4: suminf.    1.06468 (4) obj. -39.6151 iterations 3
Cbc0038I Pass   5: suminf.    1.22946 (4) obj. -39.6151 iterations 5
Cbc0038I Pass   6: suminf.    1.84352 (5) obj. -39.6151 iterations 5
Cbc0038I Pass   7: suminf.    1.80541 (5) obj. -39.6151 iterations 3
Cbc0038I Pass   8: suminf.    2.02676 (5) obj. -39.6151 iterations 5
Cbc0038I Pass   9: suminf.    1.91445 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  10: suminf.    1.91445 (5) obj. -39.6151 iterations 0
Cbc0038I Pass  11: suminf.    1.46985 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  12: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  13: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  14: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  15: suminf.    1.61467 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  16: suminf.    0.93960 (4) obj. -39.6151 iterations 4
Cbc0038I Pass  17: suminf.    2.50464 (7) obj. -39.6151 iterations 6
Cbc0038I Pass  18: suminf.    1.77569 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  19: suminf.    1.55310 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  20: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  21: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  22: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I Pass  23: suminf.    1.61467 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  24: suminf.    0.93960 (4) obj. -39.6151 iterations 4
Cbc0038I Pass  25: suminf.    2.50464 (7) obj. -39.6151 iterations 6
Cbc0038I Pass  26: suminf.    1.77569 (6) obj. -39.6151 iterations 4
Cbc0038I Pass  27: suminf.    1.55310 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  28: suminf.    1.44088 (7) obj. -39.6151 iterations 1
Cbc0038I Pass  29: suminf.    1.80782 (5) obj. -39.6151 iterations 5
Cbc0038I Pass  30: suminf.    1.04548 (5) obj. -39.6151 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 56 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -36.7661 to -38.3249 (0.11 seconds)
Cbc0038I Round again with cutoff of -44.7432
Cbc0038I Pass  30: suminf.    3.59447 (18) obj. -44.7432 iterations 0
Cbc0038I Pass  31: suminf.    2.30680 (6) obj. -44.7432 iterations 16
Cbc0038I Pass  32: suminf.    1.81759 (6) obj. -44.7432 iterations 3
Cbc0038I Pass  33: suminf.    2.30022 (8) obj. -44.7432 iterations 7
Cbc0038I Pass  34: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  35: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  36: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  37: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  38: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  39: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  40: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  41: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  42: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  43: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  44: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  45: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  46: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  47: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  48: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  49: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  50: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  51: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I Pass  52: suminf.    1.90923 (8) obj. -44.7432 iterations 1
Cbc0038I Pass  53: suminf.    2.42894 (6) obj. -44.7432 iterations 10
Cbc0038I Pass  54: suminf.    2.10527 (7) obj. -44.7432 iterations 3
Cbc0038I Pass  55: suminf.    2.52687 (6) obj. -44.7432 iterations 5
Cbc0038I Pass  56: suminf.    1.85428 (5) obj. -44.7432 iterations 3
Cbc0038I Pass  57: suminf.    2.30022 (8) obj. -44.7432 iterations 5
Cbc0038I Pass  58: suminf.    2.30147 (9) obj. -44.7432 iterations 1
Cbc0038I Pass  59: suminf.    1.94436 (6) obj. -44.7432 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 76 columns, reduced to 56 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -38.3249 - took 0.13 seconds
Cbc0012I Integer solution of -38.32488 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 53 rows 35 columns
Cbc0031I 17 added rows had average density of 59.588235
Cbc0013I At root node, 17 cuts changed objective from -65.255454 to -58.026594 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11770 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1564 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 130 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.32488 best solution, best possible -58.026594 (0.89 seconds)
Cbc0038I Full problem 135 rows 76 columns, reduced to 6 rows 10 columns
Cbc0038I Full problem 135 rows 76 columns, reduced to 60 rows 37 columns
Cbc0001I Search completed - best objective -38.32488000000001, took 9900 iterations and 122 nodes (1.16 seconds)
Cbc0032I Strong branching done 786 times (12988 iterations), fathomed 11 nodes and fixed 38 variables
Cbc0035I Maximum depth 20, 316 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 117 (-36) columns and 1922 (-1382) elements
Clp1000I sum of infeasibilities 1.98566e-06 - average 1.92783e-08, 76 fixed columns
Coin0506I Presolve 30 (-73) rows, 40 (-77) columns and 134 (-1788) elements
Clp0006I 0  Obj 12.278887 Dual inf 559.44961 (39)
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 0.29791317 - largest nonzero change 2.7926465e-05 ( 0.0023983587%) - largest zero change 2.5905099e-05
Clp0000I Optimal - objective value 14.051128
Clp0000I Optimal - objective value 14.051128
Coin0511I After Postsolve, objective 14.051128, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 14.051128 Dual inf 57.310563 (42)
Clp0014I Perturbing problem by 0.001% of 1.5786622 - largest nonzero change 2.7033243e-05 ( 0.0017184739%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 83.132485
Clp0000I Optimal - objective value 83.132485
Clp0000I Optimal - objective value 83.132485
Coin0511I After Postsolve, objective 83.132485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.13248524 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 117 columns (117 integer (117 of which binary)) and 1933 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.561%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 4.15906
Cbc0038I Pass   1: suminf.    1.82709 (25) obj. -54.6141 iterations 15
Cbc0038I Pass   2: suminf.    1.82709 (25) obj. -54.6141 iterations 1
Cbc0038I Pass   3: suminf.    0.72716 (12) obj. -32.6232 iterations 13
Cbc0038I Pass   4: suminf.    0.06256 (2) obj. -20.4989 iterations 10
Cbc0038I Solution found of -17.5918
Cbc0038I Rounding solution of -28.507 is better than previous of -17.5918

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 117 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -33.3317
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.82709 (25) obj. -54.6141 iterations 0
Cbc0038I Pass   6: suminf.    1.82709 (25) obj. -54.6141 iterations 1
Cbc0038I Pass   7: suminf.    0.48698 (5) obj. -33.3317 iterations 34
Cbc0038I Pass   8: suminf.    0.24778 (4) obj. -33.3317 iterations 2
Cbc0038I Pass   9: suminf.    0.42976 (5) obj. -33.3317 iterations 7
Cbc0038I Pass  10: suminf.    0.42976 (5) obj. -33.3317 iterations 1
Cbc0038I Pass  11: suminf.    0.51862 (2) obj. -35.2412 iterations 6
Cbc0038I Pass  12: suminf.    0.38720 (2) obj. -33.3317 iterations 2
Cbc0038I Pass  13: suminf.    1.44417 (10) obj. -33.6076 iterations 44
Cbc0038I Pass  14: suminf.    0.66992 (7) obj. -35.0457 iterations 11
Cbc0038I Pass  15: suminf.    0.59708 (4) obj. -33.3317 iterations 9
Cbc0038I Pass  16: suminf.    0.47795 (4) obj. -33.3317 iterations 1
Cbc0038I Pass  17: suminf.    0.59708 (4) obj. -33.3317 iterations 3
Cbc0038I Pass  18: suminf.    0.91938 (11) obj. -33.3317 iterations 40
Cbc0038I Pass  19: suminf.    0.70930 (10) obj. -33.3317 iterations 4
Cbc0038I Pass  20: suminf.    0.91405 (7) obj. -33.3317 iterations 15
Cbc0038I Pass  21: suminf.    0.91405 (7) obj. -33.3317 iterations 0
Cbc0038I Pass  22: suminf.    1.03001 (4) obj. -33.3317 iterations 8
Cbc0038I Pass  23: suminf.    0.90213 (3) obj. -33.3317 iterations 3
Cbc0038I Pass  24: suminf.    0.87880 (3) obj. -33.7741 iterations 1
Cbc0038I Pass  25: suminf.    0.94200 (3) obj. -33.3317 iterations 3
Cbc0038I Pass  26: suminf.    1.74081 (12) obj. -33.3317 iterations 21
Cbc0038I Pass  27: suminf.    1.52064 (12) obj. -33.3317 iterations 7
Cbc0038I Pass  28: suminf.    1.05179 (5) obj. -33.3317 iterations 11
Cbc0038I Pass  29: suminf.    0.95260 (5) obj. -33.3317 iterations 2
Cbc0038I Pass  30: suminf.    1.15129 (4) obj. -33.3317 iterations 5
Cbc0038I Pass  31: suminf.    0.88708 (4) obj. -33.3317 iterations 1
Cbc0038I Pass  32: suminf.    0.94933 (4) obj. -33.3317 iterations 5
Cbc0038I Pass  33: suminf.    0.44136 (3) obj. -33.3317 iterations 1
Cbc0038I Pass  34: suminf.    0.78725 (3) obj. -33.3317 iterations 3
Cbc0038I Rounding solution of -34.0477 is better than previous of -28.507

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 117 columns, reduced to 26 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -42.5888
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.82709 (25) obj. -54.6141 iterations 0
Cbc0038I Pass  35: suminf.    1.82709 (25) obj. -54.6141 iterations 1
Cbc0038I Pass  36: suminf.    1.10744 (13) obj. -42.5888 iterations 24
Cbc0038I Pass  37: suminf.    0.88614 (12) obj. -42.5888 iterations 2
Cbc0038I Pass  38: suminf.    1.21646 (8) obj. -42.5888 iterations 15
Cbc0038I Pass  39: suminf.    1.21646 (8) obj. -42.5888 iterations 0
Cbc0038I Pass  40: suminf.    1.08185 (4) obj. -42.5888 iterations 11
Cbc0038I Pass  41: suminf.    0.67936 (3) obj. -43.7659 iterations 2
Cbc0038I Pass  42: suminf.    1.08185 (4) obj. -42.5888 iterations 6
Cbc0038I Pass  43: suminf.    1.50232 (9) obj. -42.5888 iterations 21
Cbc0038I Pass  44: suminf.    0.87003 (9) obj. -42.5888 iterations 7
Cbc0038I Pass  45: suminf.    0.75261 (4) obj. -42.5888 iterations 14
Cbc0038I Pass  46: suminf.    0.44287 (4) obj. -42.5888 iterations 10
Cbc0038I Pass  47: suminf.    1.17368 (4) obj. -42.5888 iterations 9
Cbc0038I Pass  48: suminf.    1.08595 (5) obj. -42.5888 iterations 3
Cbc0038I Pass  49: suminf.    1.17368 (4) obj. -42.5888 iterations 5
Cbc0038I Pass  50: suminf.    1.44046 (9) obj. -42.5888 iterations 16
Cbc0038I Pass  51: suminf.    0.87605 (7) obj. -42.8711 iterations 2
Cbc0038I Pass  52: suminf.    0.87022 (5) obj. -42.5888 iterations 11
Cbc0038I Pass  53: suminf.    0.34570 (4) obj. -42.7079 iterations 5
Cbc0038I Pass  54: suminf.    0.87022 (4) obj. -42.5888 iterations 5
Cbc0038I Pass  55: suminf.    2.21265 (14) obj. -42.5888 iterations 30
Cbc0038I Pass  56: suminf.    1.15785 (10) obj. -42.5888 iterations 6
Cbc0038I Pass  57: suminf.    1.09280 (10) obj. -42.5888 iterations 5
Cbc0038I Pass  58: suminf.    1.13667 (7) obj. -42.5888 iterations 15
Cbc0038I Pass  59: suminf.    0.86434 (8) obj. -42.5888 iterations 3
Cbc0038I Pass  60: suminf.    0.93794 (5) obj. -42.5888 iterations 16
Cbc0038I Pass  61: suminf.    0.83392 (5) obj. -42.5888 iterations 4
Cbc0038I Pass  62: suminf.    0.93794 (5) obj. -42.5888 iterations 6
Cbc0038I Pass  63: suminf.    1.46567 (11) obj. -42.5888 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 117 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -34.0477 - took 0.06 seconds
Cbc0012I Integer solution of -34.04767 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 48 added rows had average density of 28.5
Cbc0013I At root node, 48 cuts changed objective from -76.753031 to -44.984432 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 2352 row cuts average 4.9 elements, 9 column cuts (9 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 435 row cuts average 91.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 98 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 439 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 284 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -34.04767 best solution, best possible -44.984432 (0.63 seconds)
Cbc0012I Integer solution of -37.1065 found by rounding after 904 iterations and 2 nodes (0.82 seconds)
Cbc0012I Integer solution of -37.52121 found by DiveCoefficient after 919 iterations and 2 nodes (0.89 seconds)
Cbc0010I After 8 nodes, 8 on tree, -37.52121 best solution, best possible -44.984432 (1.35 seconds)
Cbc0012I Integer solution of -37.91571 found by DiveCoefficient after 1021 iterations and 9 nodes (1.37 seconds)
Cbc0016I Integer solution of -38.2536 found by strong branching after 1047 iterations and 10 nodes (1.45 seconds)
Cbc0016I Integer solution of -38.32488 found by strong branching after 1142 iterations and 17 nodes (1.87 seconds)
Cbc0010I After 22 nodes, 1 on tree, -38.32488 best solution, best possible -44.104834 (2.22 seconds)
Cbc0010I After 37 nodes, 2 on tree, -38.32488 best solution, best possible -44.104834 (2.97 seconds)
Cbc0038I Full problem 102 rows 117 columns, reduced to 38 rows 53 columns
Cbc0010I After 46 nodes, 5 on tree, -38.32488 best solution, best possible -44.054908 (3.68 seconds)
Cbc0038I Full problem 150 rows 117 columns, reduced to 89 rows 102 columns
Cbc0044I Reduced cost fixing - 89 rows, 102 columns - restarting search
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.22685
Cbc0038I Pass   1: suminf.    2.32893 (25) obj. -53.8411 iterations 17
Cbc0038I Pass   2: suminf.    2.32893 (25) obj. -53.8411 iterations 0
Cbc0038I Pass   3: suminf.    0.71436 (10) obj. -38.3249 iterations 34
Cbc0038I Pass   4: suminf.    0.71436 (10) obj. -38.3249 iterations 0
Cbc0038I Pass   5: suminf.    0.90190 (4) obj. -38.3249 iterations 11
Cbc0038I Pass   6: suminf.    0.54400 (5) obj. -38.3249 iterations 5
Cbc0038I Pass   7: suminf.    0.95915 (3) obj. -38.3249 iterations 5
Cbc0038I Pass   8: suminf.    0.95915 (3) obj. -38.3249 iterations 0
Cbc0038I Pass   9: suminf.    0.63729 (3) obj. -40.295 iterations 2
Cbc0038I Pass  10: suminf.    0.59414 (2) obj. -40.0348 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 102 columns, reduced to 10 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (3.83 seconds)
Cbc0038I Full problem 90 rows 102 columns, reduced to 90 rows 102 columns
Cbc0038I After 4.22 seconds - Feasibility pump exiting with objective of -34.0477 - took 0.38 seconds
Cbc0031I 46 added rows had average density of 28.891304
Cbc0013I At root node, 46 cuts changed objective from -75.22643 to -44.626078 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5799 row cuts average 4.5 elements, 6 column cuts (6 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 555 row cuts average 88.8 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 281 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1095 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1174 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.686 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 625 row cuts average 22.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -44.625524 (6.20 seconds)
Cbc0010I After 21 nodes, 2 on tree, 1e+50 best solution, best possible -44.625524 (7.20 seconds)
Cbc0010I After 51 nodes, 6 on tree, 1e+50 best solution, best possible -44.625524 (8.26 seconds)
Cbc0010I After 74 nodes, 7 on tree, 1e+50 best solution, best possible -44.625524 (9.27 seconds)
Cbc0001I Search completed - best objective 1e+50, took 7158 iterations and 94 nodes (9.74 seconds)
Cbc0032I Strong branching done 1334 times (21074 iterations), fathomed 9 nodes and fixed 26 variables
Cbc0035I Maximum depth 11, 244 variables fixed on reduced cost
Cbc0038I Probing was tried 302 times and created 6615 cuts of which 0 were active after adding rounds of cuts (0.153 seconds)
Cbc0038I Gomory was tried 297 times and created 560 cuts of which 0 were active after adding rounds of cuts (0.146 seconds)
Cbc0038I Knapsack was tried 298 times and created 905 cuts of which 0 were active after adding rounds of cuts (0.099 seconds)
Cbc0038I Clique was tried 298 times and created 2117 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
Cbc0038I MixedIntegerRounding2 was tried 298 times and created 1681 cuts of which 0 were active after adding rounds of cuts (0.123 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 297 times and created 348 cuts of which 0 were active after adding rounds of cuts (0.088 seconds)
Cbc0038I ZeroHalf was tried 298 times and created 235 cuts of which 0 were active after adding rounds of cuts (1.994 seconds)
Cbc0038I Stored from first was tried 298 times and created 979 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -38.32488000000001, took 9893 iterations and 144 nodes (9.75 seconds)
Cbc0032I Strong branching done 872 times (10665 iterations), fathomed 5 nodes and fixed 5 variables
Cbc0035I Maximum depth 10, 89 variables fixed on reduced cost
Total time (CPU seconds):       6.42   (Wallclock seconds):       9.76

