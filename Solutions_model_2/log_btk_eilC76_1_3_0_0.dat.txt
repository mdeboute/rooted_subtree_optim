Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 5.03034e-08 - average 3.72618e-10, 6 fixed columns
Coin0506I Presolve 123 (-12) rows, 69 (-6) columns and 376 (-36) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Coin0511I After Postsolve, objective 38.113922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Coin0511I After Postsolve, objective 38.113922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.11392158 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 75 columns (74 integer (74 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.63671
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.04576 iterations 53
Cbc0038I Solution found of 9.04576
Cbc0038I Relaxing continuous gives 9.04576
Cbc0038I Rounding solution of -10.084 is better than previous of 9.04576

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -12.8871
Cbc0038I Pass   2: suminf.    1.79577 (33) obj. -12.8871 iterations 34
Cbc0038I Pass   3: suminf.    1.76347 (42) obj. -12.8871 iterations 12
Cbc0038I Pass   4: suminf.    2.43563 (9) obj. -12.8871 iterations 47
Cbc0038I Pass   5: suminf.    1.67569 (7) obj. -12.8871 iterations 4
Cbc0038I Pass   6: suminf.    1.30608 (5) obj. -12.8871 iterations 13
Cbc0038I Pass   7: suminf.    1.16592 (6) obj. -12.8871 iterations 1
Cbc0038I Pass   8: suminf.    2.04367 (6) obj. -12.8871 iterations 6
Cbc0038I Pass   9: suminf.    1.78346 (5) obj. -12.8871 iterations 3
Cbc0038I Pass  10: suminf.    1.30608 (5) obj. -12.8871 iterations 5
Cbc0038I Pass  11: suminf.    2.42594 (10) obj. -12.8871 iterations 16
Cbc0038I Pass  12: suminf.    1.93218 (9) obj. -12.8871 iterations 4
Cbc0038I Pass  13: suminf.    2.04401 (6) obj. -12.8871 iterations 8
Cbc0038I Pass  14: suminf.    1.76954 (5) obj. -12.8871 iterations 3
Cbc0038I Pass  15: suminf.    1.03863 (5) obj. -12.8871 iterations 7
Cbc0038I Pass  16: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  17: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  18: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  19: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I Pass  20: suminf.    1.76954 (5) obj. -12.8871 iterations 0
Cbc0038I Pass  21: suminf.    1.03863 (5) obj. -12.8871 iterations 6
Cbc0038I Pass  22: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  23: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  24: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  25: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I Pass  26: suminf.    1.76954 (5) obj. -12.8871 iterations 0
Cbc0038I Pass  27: suminf.    1.03863 (5) obj. -12.8871 iterations 7
Cbc0038I Pass  28: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  29: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  30: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  31: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -10.084 - took 0.07 seconds
Cbc0012I Integer solution of -10.084026 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 80 rows 46 columns
Cbc0031I 25 added rows had average density of 52.04
Cbc0013I At root node, 25 cuts changed objective from -38.113922 to -31.125959 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14542 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1977 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.084026 best solution, best possible -31.125959 (1.00 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 35 rows 25 columns
Cbc0012I Integer solution of -10.521466 found by RINS after 9573 iterations and 42 nodes (1.29 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 34 rows 24 columns
Cbc0001I Search completed - best objective -10.521466, took 11964 iterations and 140 nodes (1.47 seconds)
Cbc0032I Strong branching done 1394 times (24653 iterations), fathomed 11 nodes and fixed 41 variables
Cbc0035I Maximum depth 36, 136 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       1.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 115 (-37) columns and 1976 (-1327) elements
Clp1000I sum of infeasibilities 2.20719e-08 - average 2.16391e-10, 55 fixed columns
Coin0506I Presolve 48 (-54) rows, 60 (-55) columns and 210 (-1766) elements
Clp0006I 0  Obj -20.242585 Dual inf 0.97133798 (59)
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 3.2869784 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value -17.79673
Clp0000I Optimal - objective value -17.79673
Coin0511I After Postsolve, objective -17.79673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -17.79673 Dual inf 76.615541 (41)
Clp0014I Perturbing problem by 0.001% of 2.1532244 - largest nonzero change 1.8694827e-05 ( 0.0012247315%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 47.480809
Clp0000I Optimal - objective value 47.480809
Clp0000I Optimal - objective value 47.480809
Coin0511I After Postsolve, objective 47.480809, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.48080861 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 115 columns (115 integer (115 of which binary)) and 1978 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.945%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 5.40549
Cbc0038I Pass   1: suminf.    3.55066 (33) obj. -43.4374 iterations 14
Cbc0038I Pass   2: suminf.    3.55066 (33) obj. -43.4374 iterations 1
Cbc0038I Pass   3: suminf.    0.99888 (11) obj. -10.7257 iterations 22
Cbc0038I Solution found of 2.95811
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 2.95811 to 2.95811 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.90088
Cbc0038I Pass   4: suminf.    3.55066 (33) obj. -43.4374 iterations 0
Cbc0038I Pass   5: suminf.    3.55066 (33) obj. -43.4374 iterations 1
Cbc0038I Pass   6: suminf.    0.41342 (5) obj. -3.49513 iterations 28
Cbc0038I Pass   7: suminf.    0.42050 (2) obj. -1.90088 iterations 15
Cbc0038I Pass   8: suminf.    0.11429 (1) obj. -2.35617 iterations 4
Cbc0038I Pass   9: suminf.    1.92170 (12) obj. -1.90088 iterations 34
Cbc0038I Pass  10: suminf.    1.03639 (10) obj. -3.19883 iterations 7
Cbc0038I Pass  11: suminf.    0.46273 (5) obj. -1.90088 iterations 13
Cbc0038I Pass  12: suminf.    0.42049 (5) obj. -1.90088 iterations 3
Cbc0038I Pass  13: suminf.    0.81785 (3) obj. -1.90088 iterations 8
Cbc0038I Pass  14: suminf.    0.81785 (3) obj. -1.90088 iterations 0
Cbc0038I Pass  15: suminf.    1.03827 (3) obj. -1.90088 iterations 5
Cbc0038I Pass  16: suminf.    1.03827 (3) obj. -1.90088 iterations 0
Cbc0038I Pass  17: suminf.    0.81785 (3) obj. -1.90088 iterations 1
Cbc0038I Pass  18: suminf.    2.44807 (16) obj. -1.90088 iterations 38
Cbc0038I Pass  19: suminf.    1.48960 (12) obj. -1.90088 iterations 5
Cbc0038I Pass  20: suminf.    0.91116 (13) obj. -1.90088 iterations 5
Cbc0038I Pass  21: suminf.    1.16191 (11) obj. -1.90088 iterations 20
Cbc0038I Pass  22: suminf.    1.16191 (11) obj. -1.90088 iterations 0
Cbc0038I Pass  23: suminf.    2.69242 (12) obj. -1.90088 iterations 10
Cbc0038I Pass  24: suminf.    0.37310 (4) obj. -2.01802 iterations 8
Cbc0038I Pass  25: suminf.    0.35498 (4) obj. -1.90088 iterations 1
Cbc0038I Pass  26: suminf.    0.41215 (4) obj. -1.90088 iterations 3
Cbc0038I Pass  27: suminf.    2.01235 (13) obj. -1.90088 iterations 20
Cbc0038I Pass  28: suminf.    1.76061 (13) obj. -1.90088 iterations 5
Cbc0038I Pass  29: suminf.    0.79770 (4) obj. -1.90088 iterations 17
Cbc0038I Pass  30: suminf.    0.26197 (3) obj. -2.29986 iterations 5
Cbc0038I Pass  31: suminf.    0.87500 (6) obj. -1.90088 iterations 7
Cbc0038I Pass  32: suminf.    0.74548 (4) obj. -1.90088 iterations 1
Cbc0038I Pass  33: suminf.    0.93718 (15) obj. -1.90088 iterations 33
Cbc0038I Rounding solution of -4.75505 is better than previous of 2.95811

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 58 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -4.75505 to -10.084 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.1935
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.55066 (33) obj. -43.4374 iterations 0
Cbc0038I Pass  34: suminf.    3.55066 (33) obj. -43.4374 iterations 1
Cbc0038I Pass  35: suminf.    1.35302 (14) obj. -17.1935 iterations 25
Cbc0038I Pass  36: suminf.    1.35302 (14) obj. -17.1935 iterations 0
Cbc0038I Pass  37: suminf.    1.12034 (9) obj. -17.1935 iterations 24
Cbc0038I Pass  38: suminf.    1.12034 (9) obj. -17.1935 iterations 4
Cbc0038I Pass  39: suminf.    1.16282 (9) obj. -17.1935 iterations 8
Cbc0038I Pass  40: suminf.    1.16282 (9) obj. -17.1935 iterations 3
Cbc0038I Pass  41: suminf.    1.12034 (9) obj. -17.1935 iterations 11
Cbc0038I Pass  42: suminf.    1.25889 (13) obj. -17.1935 iterations 15
Cbc0038I Pass  43: suminf.    1.06418 (14) obj. -17.1935 iterations 4
Cbc0038I Pass  44: suminf.    1.38506 (20) obj. -17.1935 iterations 25
Cbc0038I Pass  45: suminf.    0.91883 (9) obj. -17.1935 iterations 9
Cbc0038I Pass  46: suminf.    1.00922 (9) obj. -17.1935 iterations 5
Cbc0038I Pass  47: suminf.    1.32268 (15) obj. -17.1935 iterations 18
Cbc0038I Pass  48: suminf.    1.30722 (14) obj. -17.1935 iterations 7
Cbc0038I Pass  49: suminf.    2.33987 (18) obj. -17.1935 iterations 16
Cbc0038I Pass  50: suminf.    1.94090 (13) obj. -17.1935 iterations 3
Cbc0038I Pass  51: suminf.    1.94805 (13) obj. -17.1935 iterations 5
Cbc0038I Pass  52: suminf.    1.94805 (13) obj. -17.1935 iterations 3
Cbc0038I Pass  53: suminf.    2.05126 (12) obj. -17.1935 iterations 6
Cbc0038I Pass  54: suminf.    1.70942 (12) obj. -17.1935 iterations 2
Cbc0038I Pass  55: suminf.    2.05126 (12) obj. -17.1935 iterations 4
Cbc0038I Pass  56: suminf.    3.17749 (20) obj. -17.1935 iterations 28
Cbc0038I Pass  57: suminf.    3.02718 (18) obj. -17.1935 iterations 6
Cbc0038I Pass  58: suminf.    1.94304 (13) obj. -17.1935 iterations 13
Cbc0038I Pass  59: suminf.    1.87086 (20) obj. -17.1935 iterations 3
Cbc0038I Pass  60: suminf.    6.62303 (25) obj. -17.1935 iterations 12
Cbc0038I Pass  61: suminf.    3.15811 (18) obj. -17.1935 iterations 16
Cbc0038I Pass  62: suminf.    3.15811 (18) obj. -17.1935 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 59 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -10.084 - took 0.11 seconds
Cbc0012I Integer solution of -10.084028 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 102 rows 115 columns, reduced to 49 rows 55 columns
Cbc0031I 61 added rows had average density of 39.852459
Cbc0013I At root node, 61 cuts changed objective from -45.63095 to -16.555369 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12368 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2053 row cuts average 107.6 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 845 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1377 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 397 row cuts average 55.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 238 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.618 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.084028 best solution, best possible -16.555369 (2.62 seconds)
Cbc0012I Integer solution of -10.26643 found by rounding after 5682 iterations and 5 nodes (2.86 seconds)
Cbc0016I Integer solution of -10.26644 found by strong branching after 5785 iterations and 8 nodes (3.13 seconds)
Cbc0010I After 12 nodes, 5 on tree, -10.26644 best solution, best possible -16.555369 (3.35 seconds)
Cbc0016I Integer solution of -10.521466 found by strong branching after 5937 iterations and 19 nodes (3.55 seconds)
Cbc0010I After 22 nodes, 3 on tree, -10.521466 best solution, best possible -15.156751 (4.09 seconds)
Cbc0010I After 34 nodes, 8 on tree, -10.521466 best solution, best possible -15.156751 (4.84 seconds)
Cbc0001I Search completed - best objective -10.521466, took 7868 iterations and 48 nodes (5.11 seconds)
Cbc0032I Strong branching done 702 times (13604 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 12, 95 variables fixed on reduced cost
Total time (CPU seconds):       3.58   (Wallclock seconds):       5.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 5.03034e-08 - average 3.72618e-10, 6 fixed columns
Coin0506I Presolve 123 (-12) rows, 69 (-6) columns and 376 (-36) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Coin0511I After Postsolve, objective 38.113922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Clp0000I Optimal - objective value 38.113922
Coin0511I After Postsolve, objective 38.113922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.11392158 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 75 columns (74 integer (74 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.174%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.63671
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.04576 iterations 53
Cbc0038I Solution found of 9.04576
Cbc0038I Relaxing continuous gives 9.04576
Cbc0038I Rounding solution of -10.084 is better than previous of 9.04576

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -12.8871
Cbc0038I Pass   2: suminf.    1.79577 (33) obj. -12.8871 iterations 34
Cbc0038I Pass   3: suminf.    1.76347 (42) obj. -12.8871 iterations 12
Cbc0038I Pass   4: suminf.    2.43563 (9) obj. -12.8871 iterations 47
Cbc0038I Pass   5: suminf.    1.67569 (7) obj. -12.8871 iterations 4
Cbc0038I Pass   6: suminf.    1.30608 (5) obj. -12.8871 iterations 13
Cbc0038I Pass   7: suminf.    1.16592 (6) obj. -12.8871 iterations 1
Cbc0038I Pass   8: suminf.    2.04367 (6) obj. -12.8871 iterations 6
Cbc0038I Pass   9: suminf.    1.78346 (5) obj. -12.8871 iterations 3
Cbc0038I Pass  10: suminf.    1.30608 (5) obj. -12.8871 iterations 5
Cbc0038I Pass  11: suminf.    2.42594 (10) obj. -12.8871 iterations 16
Cbc0038I Pass  12: suminf.    1.93218 (9) obj. -12.8871 iterations 4
Cbc0038I Pass  13: suminf.    2.04401 (6) obj. -12.8871 iterations 8
Cbc0038I Pass  14: suminf.    1.76954 (5) obj. -12.8871 iterations 3
Cbc0038I Pass  15: suminf.    1.03863 (5) obj. -12.8871 iterations 7
Cbc0038I Pass  16: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  17: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  18: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  19: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I Pass  20: suminf.    1.76954 (5) obj. -12.8871 iterations 0
Cbc0038I Pass  21: suminf.    1.03863 (5) obj. -12.8871 iterations 6
Cbc0038I Pass  22: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  23: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  24: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  25: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I Pass  26: suminf.    1.76954 (5) obj. -12.8871 iterations 0
Cbc0038I Pass  27: suminf.    1.03863 (5) obj. -12.8871 iterations 7
Cbc0038I Pass  28: suminf.    0.78838 (3) obj. -12.8871 iterations 4
Cbc0038I Pass  29: suminf.    0.71348 (5) obj. -12.8871 iterations 4
Cbc0038I Pass  30: suminf.    0.68122 (5) obj. -12.8871 iterations 2
Cbc0038I Pass  31: suminf.    1.76954 (5) obj. -12.8871 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 75 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -10.084 - took 0.08 seconds
Cbc0012I Integer solution of -10.084026 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 80 rows 46 columns
Cbc0031I 25 added rows had average density of 52.04
Cbc0013I At root node, 25 cuts changed objective from -38.113922 to -31.125959 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14542 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1977 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.084026 best solution, best possible -31.125959 (1.17 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 35 rows 25 columns
Cbc0012I Integer solution of -10.521466 found by RINS after 9573 iterations and 42 nodes (1.51 seconds)
Cbc0038I Full problem 135 rows 75 columns, reduced to 34 rows 24 columns
Cbc0001I Search completed - best objective -10.521466, took 11964 iterations and 140 nodes (1.71 seconds)
Cbc0032I Strong branching done 1394 times (24653 iterations), fathomed 11 nodes and fixed 41 variables
Cbc0035I Maximum depth 36, 136 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       1.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 115 (-38) columns and 1976 (-1328) elements
Clp1000I sum of infeasibilities 2.20719e-08 - average 2.16391e-10, 55 fixed columns
Coin0506I Presolve 48 (-54) rows, 60 (-55) columns and 210 (-1766) elements
Clp0006I 0  Obj -20.242585 Dual inf 0.97133798 (59)
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 3.2869784 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value -17.79673
Clp0000I Optimal - objective value -17.79673
Coin0511I After Postsolve, objective -17.79673, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -17.79673 Dual inf 76.615541 (41)
Clp0014I Perturbing problem by 0.001% of 2.1532244 - largest nonzero change 1.8694827e-05 ( 0.0012247315%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 47.480809
Clp0000I Optimal - objective value 47.480809
Clp0000I Optimal - objective value 47.480809
Coin0511I After Postsolve, objective 47.480809, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.48080861 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 115 columns (115 integer (115 of which binary)) and 1978 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.945%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 5.40549
Cbc0038I Pass   1: suminf.    3.55066 (33) obj. -43.4374 iterations 14
Cbc0038I Pass   2: suminf.    3.55066 (33) obj. -43.4374 iterations 1
Cbc0038I Pass   3: suminf.    0.99888 (11) obj. -10.7257 iterations 22
Cbc0038I Solution found of 2.95811
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 2.95811 to 2.95811 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.90088
Cbc0038I Pass   4: suminf.    3.55066 (33) obj. -43.4374 iterations 0
Cbc0038I Pass   5: suminf.    3.55066 (33) obj. -43.4374 iterations 1
Cbc0038I Pass   6: suminf.    0.41342 (5) obj. -3.49513 iterations 28
Cbc0038I Pass   7: suminf.    0.42050 (2) obj. -1.90088 iterations 15
Cbc0038I Pass   8: suminf.    0.11429 (1) obj. -2.35617 iterations 4
Cbc0038I Pass   9: suminf.    1.92170 (12) obj. -1.90088 iterations 34
Cbc0038I Pass  10: suminf.    1.03639 (10) obj. -3.19883 iterations 7
Cbc0038I Pass  11: suminf.    0.46273 (5) obj. -1.90088 iterations 13
Cbc0038I Pass  12: suminf.    0.42049 (5) obj. -1.90088 iterations 3
Cbc0038I Pass  13: suminf.    0.81785 (3) obj. -1.90088 iterations 8
Cbc0038I Pass  14: suminf.    0.81785 (3) obj. -1.90088 iterations 0
Cbc0038I Pass  15: suminf.    1.03827 (3) obj. -1.90088 iterations 5
Cbc0038I Pass  16: suminf.    1.03827 (3) obj. -1.90088 iterations 0
Cbc0038I Pass  17: suminf.    0.81785 (3) obj. -1.90088 iterations 1
Cbc0038I Pass  18: suminf.    2.44807 (16) obj. -1.90088 iterations 38
Cbc0038I Pass  19: suminf.    1.48960 (12) obj. -1.90088 iterations 5
Cbc0038I Pass  20: suminf.    0.91116 (13) obj. -1.90088 iterations 5
Cbc0038I Pass  21: suminf.    1.16191 (11) obj. -1.90088 iterations 20
Cbc0038I Pass  22: suminf.    1.16191 (11) obj. -1.90088 iterations 0
Cbc0038I Pass  23: suminf.    2.69242 (12) obj. -1.90088 iterations 10
Cbc0038I Pass  24: suminf.    0.37310 (4) obj. -2.01802 iterations 8
Cbc0038I Pass  25: suminf.    0.35498 (4) obj. -1.90088 iterations 1
Cbc0038I Pass  26: suminf.    0.41215 (4) obj. -1.90088 iterations 3
Cbc0038I Pass  27: suminf.    2.01235 (13) obj. -1.90088 iterations 20
Cbc0038I Pass  28: suminf.    1.76061 (13) obj. -1.90088 iterations 5
Cbc0038I Pass  29: suminf.    0.79770 (4) obj. -1.90088 iterations 17
Cbc0038I Pass  30: suminf.    0.26197 (3) obj. -2.29986 iterations 5
Cbc0038I Pass  31: suminf.    0.87500 (6) obj. -1.90088 iterations 7
Cbc0038I Pass  32: suminf.    0.74548 (4) obj. -1.90088 iterations 1
Cbc0038I Pass  33: suminf.    0.93718 (15) obj. -1.90088 iterations 33
Cbc0038I Rounding solution of -4.75505 is better than previous of 2.95811

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 58 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -4.75505 to -10.084 (0.11 seconds)
Cbc0038I Round again with cutoff of -17.1935
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.55066 (33) obj. -43.4374 iterations 0
Cbc0038I Pass  34: suminf.    3.55066 (33) obj. -43.4374 iterations 1
Cbc0038I Pass  35: suminf.    1.35302 (14) obj. -17.1935 iterations 25
Cbc0038I Pass  36: suminf.    1.35302 (14) obj. -17.1935 iterations 0
Cbc0038I Pass  37: suminf.    1.12034 (9) obj. -17.1935 iterations 24
Cbc0038I Pass  38: suminf.    1.12034 (9) obj. -17.1935 iterations 4
Cbc0038I Pass  39: suminf.    1.16282 (9) obj. -17.1935 iterations 8
Cbc0038I Pass  40: suminf.    1.16282 (9) obj. -17.1935 iterations 3
Cbc0038I Pass  41: suminf.    1.12034 (9) obj. -17.1935 iterations 11
Cbc0038I Pass  42: suminf.    1.25889 (13) obj. -17.1935 iterations 15
Cbc0038I Pass  43: suminf.    1.06418 (14) obj. -17.1935 iterations 4
Cbc0038I Pass  44: suminf.    1.38506 (20) obj. -17.1935 iterations 25
Cbc0038I Pass  45: suminf.    0.91883 (9) obj. -17.1935 iterations 9
Cbc0038I Pass  46: suminf.    1.00922 (9) obj. -17.1935 iterations 5
Cbc0038I Pass  47: suminf.    1.32268 (15) obj. -17.1935 iterations 18
Cbc0038I Pass  48: suminf.    1.30722 (14) obj. -17.1935 iterations 7
Cbc0038I Pass  49: suminf.    2.33987 (18) obj. -17.1935 iterations 16
Cbc0038I Pass  50: suminf.    1.94090 (13) obj. -17.1935 iterations 3
Cbc0038I Pass  51: suminf.    1.94805 (13) obj. -17.1935 iterations 5
Cbc0038I Pass  52: suminf.    1.94805 (13) obj. -17.1935 iterations 3
Cbc0038I Pass  53: suminf.    2.05126 (12) obj. -17.1935 iterations 6
Cbc0038I Pass  54: suminf.    1.70942 (12) obj. -17.1935 iterations 2
Cbc0038I Pass  55: suminf.    2.05126 (12) obj. -17.1935 iterations 4
Cbc0038I Pass  56: suminf.    3.17749 (20) obj. -17.1935 iterations 28
Cbc0038I Pass  57: suminf.    3.02718 (18) obj. -17.1935 iterations 6
Cbc0038I Pass  58: suminf.    1.94304 (13) obj. -17.1935 iterations 13
Cbc0038I Pass  59: suminf.    1.87086 (20) obj. -17.1935 iterations 3
Cbc0038I Pass  60: suminf.    6.62303 (25) obj. -17.1935 iterations 12
Cbc0038I Pass  61: suminf.    3.15811 (18) obj. -17.1935 iterations 16
Cbc0038I Pass  62: suminf.    3.15811 (18) obj. -17.1935 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 59 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -10.084 - took 0.13 seconds
Cbc0012I Integer solution of -10.084028 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 102 rows 115 columns, reduced to 49 rows 55 columns
Cbc0031I 61 added rows had average density of 39.852459
Cbc0013I At root node, 61 cuts changed objective from -45.63095 to -16.555369 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12368 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2053 row cuts average 107.6 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 845 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1377 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 397 row cuts average 55.3 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 238 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.681 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.084028 best solution, best possible -16.555369 (2.92 seconds)
Cbc0012I Integer solution of -10.26643 found by rounding after 5682 iterations and 5 nodes (3.21 seconds)
Cbc0016I Integer solution of -10.26644 found by strong branching after 5785 iterations and 8 nodes (3.51 seconds)
Cbc0010I After 11 nodes, 4 on tree, -10.26644 best solution, best possible -16.555369 (3.69 seconds)
Cbc0016I Integer solution of -10.521466 found by strong branching after 5937 iterations and 19 nodes (4.06 seconds)
Cbc0010I After 20 nodes, 1 on tree, -10.521466 best solution, best possible -15.156751 (4.52 seconds)
Cbc0010I After 25 nodes, 6 on tree, -10.521466 best solution, best possible -15.156751 (5.22 seconds)
Cbc0010I After 36 nodes, 8 on tree, -10.521466 best solution, best possible -15.156751 (5.93 seconds)
Cbc0001I Search completed - best objective -10.521466, took 7868 iterations and 48 nodes (6.14 seconds)
Cbc0032I Strong branching done 702 times (13604 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 12, 95 variables fixed on reduced cost
Total time (CPU seconds):       4.18   (Wallclock seconds):       6.16

