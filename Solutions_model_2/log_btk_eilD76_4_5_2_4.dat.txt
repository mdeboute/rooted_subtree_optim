Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 6.00308e-05 - average 4.38181e-07, 6 fixed columns
Coin0506I Presolve 125 (-12) rows, 70 (-6) columns and 382 (-36) elements
Clp0029I End of values pass after 70 iterations
Clp0000I Optimal - objective value 38.283949
Clp0000I Optimal - objective value 38.283949
Coin0511I After Postsolve, objective 38.283949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.283949
Clp0000I Optimal - objective value 38.283949
Clp0000I Optimal - objective value 38.283949
Coin0511I After Postsolve, objective 38.283949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.28394927 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 11.1312
Cbc0038I Solution found of 6.43853
Cbc0038I Relaxing continuous gives -4.26494
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 95 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -7.66693
Cbc0038I Pass   1: suminf.    1.05247 (45) obj. -7.66693 iterations 33
Cbc0038I Pass   2: suminf.    2.58784 (11) obj. -7.66693 iterations 47
Cbc0038I Pass   3: suminf.    1.97854 (10) obj. -7.66693 iterations 8
Cbc0038I Pass   4: suminf.    2.23639 (9) obj. -7.66693 iterations 16
Cbc0038I Pass   5: suminf.    2.23639 (9) obj. -7.66693 iterations 0
Cbc0038I Pass   6: suminf.    1.61639 (6) obj. -7.66693 iterations 12
Cbc0038I Pass   7: suminf.    1.25586 (4) obj. -7.66693 iterations 7
Cbc0038I Pass   8: suminf.    1.32008 (4) obj. -7.66693 iterations 3
Cbc0038I Pass   9: suminf.    1.11469 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  10: suminf.    1.98976 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  11: suminf.    1.60137 (9) obj. -7.66693 iterations 5
Cbc0038I Pass  12: suminf.    1.61639 (6) obj. -7.66693 iterations 11
Cbc0038I Pass  13: suminf.    1.61639 (6) obj. -7.66693 iterations 0
Cbc0038I Pass  14: suminf.    1.25586 (4) obj. -7.66693 iterations 7
Cbc0038I Pass  15: suminf.    1.32008 (4) obj. -7.66693 iterations 3
Cbc0038I Pass  16: suminf.    1.11469 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  17: suminf.    1.98976 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  18: suminf.    1.60137 (9) obj. -7.66693 iterations 5
Cbc0038I Pass  19: suminf.    1.61639 (6) obj. -7.66693 iterations 11
Cbc0038I Pass  20: suminf.    1.61639 (6) obj. -7.66693 iterations 0
Cbc0038I Pass  21: suminf.    1.25586 (4) obj. -7.66693 iterations 7
Cbc0038I Pass  22: suminf.    1.32008 (4) obj. -7.66693 iterations 3
Cbc0038I Pass  23: suminf.    1.11469 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  24: suminf.    1.98976 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  25: suminf.    1.60137 (9) obj. -7.66693 iterations 5
Cbc0038I Pass  26: suminf.    1.61639 (6) obj. -7.66693 iterations 11
Cbc0038I Pass  27: suminf.    1.61639 (6) obj. -7.66693 iterations 0
Cbc0038I Pass  28: suminf.    1.25586 (4) obj. -7.66693 iterations 7
Cbc0038I Pass  29: suminf.    1.32008 (4) obj. -7.66693 iterations 3
Cbc0038I Pass  30: suminf.    1.11469 (5) obj. -7.66693 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -4.26494 - took 0.10 seconds
Cbc0012I Integer solution of -4.26494 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 95 rows 53 columns
Cbc0031I 29 added rows had average density of 61.034483
Cbc0013I At root node, 29 cuts changed objective from -38.283949 to -29.667874 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16050 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2946 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.26494 best solution, best possible -29.667874 (1.24 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 69 rows 40 columns
Cbc0012I Integer solution of -4.64621 found by RINS after 11863 iterations and 41 nodes (1.59 seconds)
Cbc0016I Integer solution of -4.69391 found by strong branching after 12699 iterations and 79 nodes (1.66 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 5 rows 6 columns
Cbc0016I Integer solution of -4.74208 found by strong branching after 13150 iterations and 100 nodes (1.69 seconds)
Cbc0012I Integer solution of -4.77077 found by rounding after 13275 iterations and 108 nodes (1.70 seconds)
Cbc0001I Search completed - best objective -4.770769999999999, took 14103 iterations and 128 nodes (1.73 seconds)
Cbc0032I Strong branching done 1100 times (21395 iterations), fathomed 12 nodes and fixed 46 variables
Cbc0035I Maximum depth 39, 402 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       1.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 117 (-35) columns and 1897 (-1406) elements
Clp1000I sum of infeasibilities 8.87969e-08 - average 8.53817e-10, 55 fixed columns
Coin0506I Presolve 52 (-52) rows, 62 (-55) columns and 222 (-1675) elements
Clp0006I 0  Obj -9.8955528 Dual inf 2.2336615 (61)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 1.8100128 - largest nonzero change 2.1160669e-05 ( 0.00089285843%) - largest zero change 2.8508156e-05
Clp0000I Optimal - objective value -6.9367977
Clp0000I Optimal - objective value -6.9367977
Coin0511I After Postsolve, objective -6.9367977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -6.9367977 Dual inf 67.735963 (42)
Clp0014I Perturbing problem by 0.001% of 1.7654009 - largest nonzero change 2.3986182e-05 ( 0.0015420975%) - largest zero change 2.8717148e-05
Clp0000I Optimal - objective value 53.506958
Clp0000I Optimal - objective value 53.506958
Clp0000I Optimal - objective value 53.506958
Coin0511I After Postsolve, objective 53.506958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.50695808 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 1901 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.416%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 6.29224
Cbc0038I Pass   1: suminf.    2.01866 (28) obj. -30.5817 iterations 20
Cbc0038I Pass   2: suminf.    2.01866 (28) obj. -30.5817 iterations 1
Cbc0038I Pass   3: suminf.    0.89217 (15) obj. -1.6326 iterations 13
Cbc0038I Pass   4: suminf.    0.25116 (5) obj. 9.59589 iterations 10
Cbc0038I Solution found of 14.3447
Cbc0038I Rounding solution of 6.96031 is better than previous of 14.3447

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 6.96031 to 3.65947 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.66794
Cbc0038I Pass   5: suminf.    2.01866 (28) obj. -30.5817 iterations 0
Cbc0038I Pass   6: suminf.    2.01866 (28) obj. -30.5817 iterations 1
Cbc0038I Pass   7: suminf.    0.54848 (8) obj. -1.66794 iterations 30
Cbc0038I Pass   8: suminf.    0.54848 (8) obj. -1.66794 iterations 0
Cbc0038I Pass   9: suminf.    0.30545 (1) obj. -1.66794 iterations 8
Cbc0038I Pass  10: suminf.    0.12000 (1) obj. -4.26427 iterations 1
Cbc0038I Pass  11: suminf.    1.01244 (10) obj. -9.63932 iterations 22
Cbc0038I Pass  12: suminf.    0.85108 (9) obj. -9.40586 iterations 7
Cbc0038I Pass  13: suminf.    0.64582 (4) obj. -1.66794 iterations 10
Cbc0038I Pass  14: suminf.    0.64582 (4) obj. -1.66794 iterations 0
Cbc0038I Pass  15: suminf.    0.65858 (3) obj. -1.66794 iterations 6
Cbc0038I Pass  16: suminf.    0.47470 (2) obj. -1.66794 iterations 1
Cbc0038I Pass  17: suminf.    0.13333 (1) obj. -5.37465 iterations 2
Cbc0038I Pass  18: suminf.    0.39810 (1) obj. -1.66794 iterations 1
Cbc0038I Pass  19: suminf.    2.33401 (16) obj. -1.66794 iterations 38
Cbc0038I Pass  20: suminf.    2.33401 (16) obj. -1.66794 iterations 9
Cbc0038I Pass  21: suminf.    1.72106 (6) obj. -1.66794 iterations 20
Cbc0038I Pass  22: suminf.    1.54161 (6) obj. -1.66794 iterations 2
Cbc0038I Pass  23: suminf.    0.67742 (4) obj. -1.66794 iterations 7
Cbc0038I Pass  24: suminf.    0.67742 (4) obj. -1.66794 iterations 4
Cbc0038I Pass  25: suminf.    1.25010 (4) obj. -1.66794 iterations 4
Cbc0038I Pass  26: suminf.    0.74940 (4) obj. -4.79978 iterations 3
Cbc0038I Pass  27: suminf.    0.67742 (4) obj. -1.66794 iterations 5
Cbc0038I Pass  28: suminf.    1.59277 (13) obj. -1.66794 iterations 30
Cbc0038I Pass  29: suminf.    1.59277 (13) obj. -1.66794 iterations 5
Cbc0038I Pass  30: suminf.    2.34431 (7) obj. -1.66794 iterations 21
Cbc0038I Pass  31: suminf.    0.76763 (4) obj. -1.66794 iterations 3
Cbc0038I Pass  32: suminf.    0.67100 (9) obj. -1.66794 iterations 6
Cbc0038I Pass  33: suminf.    0.37226 (5) obj. -1.66794 iterations 18
Cbc0038I Pass  34: suminf.    0.27608 (4) obj. -1.66794 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 60 rows 71 columns
Cbc0038I Mini branch and bound improved solution from 3.65947 to -0.76534 (0.13 seconds)
Cbc0038I Round again with cutoff of -11.2571
Cbc0038I Pass  34: suminf.    2.01866 (28) obj. -30.5817 iterations 0
Cbc0038I Pass  35: suminf.    2.01866 (28) obj. -30.5817 iterations 1
Cbc0038I Pass  36: suminf.    0.98265 (19) obj. -11.2571 iterations 19
Cbc0038I Pass  37: suminf.    0.98265 (19) obj. -11.2571 iterations 0
Cbc0038I Pass  38: suminf.    0.89876 (10) obj. -11.2571 iterations 10
Cbc0038I Pass  39: suminf.    0.80427 (10) obj. -12.58 iterations 1
Cbc0038I Pass  40: suminf.    1.00338 (12) obj. -11.2571 iterations 26
Cbc0038I Pass  41: suminf.    1.00338 (12) obj. -11.2571 iterations 1
Cbc0038I Pass  42: suminf.    0.87931 (7) obj. -11.2571 iterations 19
Cbc0038I Pass  43: suminf.    0.87931 (7) obj. -11.2571 iterations 8
Cbc0038I Pass  44: suminf.    1.13678 (7) obj. -11.2571 iterations 11
Cbc0038I Pass  45: suminf.    0.50758 (7) obj. -11.2571 iterations 2
Cbc0038I Pass  46: suminf.    2.37472 (14) obj. -11.2571 iterations 20
Cbc0038I Pass  47: suminf.    1.83571 (16) obj. -11.2571 iterations 9
Cbc0038I Pass  48: suminf.    0.68811 (7) obj. -11.2571 iterations 15
Cbc0038I Pass  49: suminf.    0.63969 (5) obj. -11.2571 iterations 1
Cbc0038I Pass  50: suminf.    1.05261 (7) obj. -11.2571 iterations 17
Cbc0038I Pass  51: suminf.    0.85344 (7) obj. -11.2571 iterations 2
Cbc0038I Pass  52: suminf.    1.16479 (7) obj. -11.2571 iterations 6
Cbc0038I Pass  53: suminf.    1.92196 (14) obj. -11.2571 iterations 19
Cbc0038I Pass  54: suminf.    1.17311 (10) obj. -13.0774 iterations 5
Cbc0038I Pass  55: suminf.    1.54151 (8) obj. -11.2571 iterations 18
Cbc0038I Pass  56: suminf.    1.54151 (8) obj. -11.2571 iterations 0
Cbc0038I Pass  57: suminf.    1.93536 (9) obj. -11.2571 iterations 16
Cbc0038I Pass  58: suminf.    1.30080 (7) obj. -11.2571 iterations 4
Cbc0038I Pass  59: suminf.    1.32940 (10) obj. -11.2571 iterations 16
Cbc0038I Pass  60: suminf.    0.78247 (5) obj. -11.2571 iterations 11
Cbc0038I Pass  61: suminf.    0.91066 (7) obj. -11.2571 iterations 11
Cbc0038I Pass  62: suminf.    0.74325 (7) obj. -11.2571 iterations 2
Cbc0038I Pass  63: suminf.    1.00465 (7) obj. -11.2571 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -0.76534 - took 0.12 seconds
Cbc0012I Integer solution of -0.76534 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 38 rows 46 columns
Cbc0012I Integer solution of -3.13275 found by RINS after 0 iterations and 0 nodes (0.18 seconds)
Cbc0031I 64 added rows had average density of 44.265625
Cbc0013I At root node, 64 cuts changed objective from -49.613777 to -13.214164 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16819 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1739 row cuts average 111.2 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 588 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1433 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 388 row cuts average 57.3 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.446 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.13275 best solution, best possible -13.214164 (2.61 seconds)
Cbc0004I Integer solution of -4.26494 found after 7165 iterations and 1 nodes (2.62 seconds)
Cbc0010I After 10 nodes, 7 on tree, -4.26494 best solution, best possible -12.394408 (3.32 seconds)
Cbc0012I Integer solution of -4.60205 found by rounding after 9035 iterations and 24 nodes (3.43 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 48 rows 64 columns
Cbc0012I Integer solution of -4.69391 found by RINS after 9920 iterations and 41 nodes (3.66 seconds)
Cbc0016I Integer solution of -4.74208 found by strong branching after 10212 iterations and 60 nodes (3.70 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 18 rows 29 columns
Cbc0012I Integer solution of -4.77077 found by rounding after 11840 iterations and 103 nodes (3.87 seconds)
Cbc0001I Search completed - best objective -4.770769999999999, took 11959 iterations and 108 nodes (3.88 seconds)
Cbc0032I Strong branching done 994 times (17723 iterations), fathomed 9 nodes and fixed 14 variables
Cbc0035I Maximum depth 24, 154 variables fixed on reduced cost
Total time (CPU seconds):       3.26   (Wallclock seconds):       3.90

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 6.00308e-05 - average 4.38181e-07, 6 fixed columns
Coin0506I Presolve 125 (-12) rows, 70 (-6) columns and 382 (-36) elements
Clp0029I End of values pass after 70 iterations
Clp0000I Optimal - objective value 38.283949
Clp0000I Optimal - objective value 38.283949
Coin0511I After Postsolve, objective 38.283949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.283949
Clp0000I Optimal - objective value 38.283949
Clp0000I Optimal - objective value 38.283949
Coin0511I After Postsolve, objective 38.283949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.28394927 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 11.1312
Cbc0038I Solution found of 6.43853
Cbc0038I Relaxing continuous gives -4.26494
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 95 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -7.66693
Cbc0038I Pass   1: suminf.    1.05247 (45) obj. -7.66693 iterations 33
Cbc0038I Pass   2: suminf.    2.58784 (11) obj. -7.66693 iterations 47
Cbc0038I Pass   3: suminf.    1.97854 (10) obj. -7.66693 iterations 8
Cbc0038I Pass   4: suminf.    2.23639 (9) obj. -7.66693 iterations 16
Cbc0038I Pass   5: suminf.    2.23639 (9) obj. -7.66693 iterations 0
Cbc0038I Pass   6: suminf.    1.61639 (6) obj. -7.66693 iterations 12
Cbc0038I Pass   7: suminf.    1.25586 (4) obj. -7.66693 iterations 7
Cbc0038I Pass   8: suminf.    1.32008 (4) obj. -7.66693 iterations 3
Cbc0038I Pass   9: suminf.    1.11469 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  10: suminf.    1.98976 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  11: suminf.    1.60137 (9) obj. -7.66693 iterations 5
Cbc0038I Pass  12: suminf.    1.61639 (6) obj. -7.66693 iterations 11
Cbc0038I Pass  13: suminf.    1.61639 (6) obj. -7.66693 iterations 0
Cbc0038I Pass  14: suminf.    1.25586 (4) obj. -7.66693 iterations 7
Cbc0038I Pass  15: suminf.    1.32008 (4) obj. -7.66693 iterations 3
Cbc0038I Pass  16: suminf.    1.11469 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  17: suminf.    1.98976 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  18: suminf.    1.60137 (9) obj. -7.66693 iterations 5
Cbc0038I Pass  19: suminf.    1.61639 (6) obj. -7.66693 iterations 11
Cbc0038I Pass  20: suminf.    1.61639 (6) obj. -7.66693 iterations 0
Cbc0038I Pass  21: suminf.    1.25586 (4) obj. -7.66693 iterations 7
Cbc0038I Pass  22: suminf.    1.32008 (4) obj. -7.66693 iterations 3
Cbc0038I Pass  23: suminf.    1.11469 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  24: suminf.    1.98976 (5) obj. -7.66693 iterations 3
Cbc0038I Pass  25: suminf.    1.60137 (9) obj. -7.66693 iterations 5
Cbc0038I Pass  26: suminf.    1.61639 (6) obj. -7.66693 iterations 11
Cbc0038I Pass  27: suminf.    1.61639 (6) obj. -7.66693 iterations 0
Cbc0038I Pass  28: suminf.    1.25586 (4) obj. -7.66693 iterations 7
Cbc0038I Pass  29: suminf.    1.32008 (4) obj. -7.66693 iterations 3
Cbc0038I Pass  30: suminf.    1.11469 (5) obj. -7.66693 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 102 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -4.26494 - took 0.10 seconds
Cbc0012I Integer solution of -4.26494 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 95 rows 53 columns
Cbc0031I 29 added rows had average density of 61.034483
Cbc0013I At root node, 29 cuts changed objective from -38.283949 to -29.667874 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16050 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2946 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.26494 best solution, best possible -29.667874 (1.26 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 69 rows 40 columns
Cbc0012I Integer solution of -4.64621 found by RINS after 11863 iterations and 41 nodes (1.62 seconds)
Cbc0016I Integer solution of -4.69391 found by strong branching after 12699 iterations and 79 nodes (1.69 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 5 rows 6 columns
Cbc0016I Integer solution of -4.74208 found by strong branching after 13150 iterations and 100 nodes (1.72 seconds)
Cbc0012I Integer solution of -4.77077 found by rounding after 13275 iterations and 108 nodes (1.73 seconds)
Cbc0001I Search completed - best objective -4.770769999999999, took 14103 iterations and 128 nodes (1.76 seconds)
Cbc0032I Strong branching done 1100 times (21395 iterations), fathomed 12 nodes and fixed 46 variables
Cbc0035I Maximum depth 39, 402 variables fixed on reduced cost
Total time (CPU seconds):       1.72   (Wallclock seconds):       1.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 117 (-36) columns and 1897 (-1407) elements
Clp1000I sum of infeasibilities 8.87969e-08 - average 8.53817e-10, 55 fixed columns
Coin0506I Presolve 52 (-52) rows, 62 (-55) columns and 222 (-1675) elements
Clp0006I 0  Obj -9.8955528 Dual inf 2.2336615 (61)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 1.8100128 - largest nonzero change 2.1160669e-05 ( 0.00089285843%) - largest zero change 2.8508156e-05
Clp0000I Optimal - objective value -6.9367977
Clp0000I Optimal - objective value -6.9367977
Coin0511I After Postsolve, objective -6.9367977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -6.9367977 Dual inf 67.735963 (42)
Clp0014I Perturbing problem by 0.001% of 1.7654009 - largest nonzero change 2.3986182e-05 ( 0.0015420975%) - largest zero change 2.8717148e-05
Clp0000I Optimal - objective value 53.506958
Clp0000I Optimal - objective value 53.506958
Clp0000I Optimal - objective value 53.506958
Coin0511I After Postsolve, objective 53.506958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.50695808 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 1901 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.416%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 6.29224
Cbc0038I Pass   1: suminf.    2.01866 (28) obj. -30.5817 iterations 20
Cbc0038I Pass   2: suminf.    2.01866 (28) obj. -30.5817 iterations 1
Cbc0038I Pass   3: suminf.    0.89217 (15) obj. -1.6326 iterations 13
Cbc0038I Pass   4: suminf.    0.25116 (5) obj. 9.59589 iterations 10
Cbc0038I Solution found of 14.3447
Cbc0038I Rounding solution of 6.96031 is better than previous of 14.3447

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 6.96031 to 3.65947 (0.04 seconds)
Cbc0038I Round again with cutoff of -1.66794
Cbc0038I Pass   5: suminf.    2.01866 (28) obj. -30.5817 iterations 0
Cbc0038I Pass   6: suminf.    2.01866 (28) obj. -30.5817 iterations 1
Cbc0038I Pass   7: suminf.    0.54848 (8) obj. -1.66794 iterations 30
Cbc0038I Pass   8: suminf.    0.54848 (8) obj. -1.66794 iterations 0
Cbc0038I Pass   9: suminf.    0.30545 (1) obj. -1.66794 iterations 8
Cbc0038I Pass  10: suminf.    0.12000 (1) obj. -4.26427 iterations 1
Cbc0038I Pass  11: suminf.    1.01244 (10) obj. -9.63932 iterations 22
Cbc0038I Pass  12: suminf.    0.85108 (9) obj. -9.40586 iterations 7
Cbc0038I Pass  13: suminf.    0.64582 (4) obj. -1.66794 iterations 10
Cbc0038I Pass  14: suminf.    0.64582 (4) obj. -1.66794 iterations 0
Cbc0038I Pass  15: suminf.    0.65858 (3) obj. -1.66794 iterations 6
Cbc0038I Pass  16: suminf.    0.47470 (2) obj. -1.66794 iterations 1
Cbc0038I Pass  17: suminf.    0.13333 (1) obj. -5.37465 iterations 2
Cbc0038I Pass  18: suminf.    0.39810 (1) obj. -1.66794 iterations 1
Cbc0038I Pass  19: suminf.    2.33401 (16) obj. -1.66794 iterations 38
Cbc0038I Pass  20: suminf.    2.33401 (16) obj. -1.66794 iterations 9
Cbc0038I Pass  21: suminf.    1.72106 (6) obj. -1.66794 iterations 20
Cbc0038I Pass  22: suminf.    1.54161 (6) obj. -1.66794 iterations 2
Cbc0038I Pass  23: suminf.    0.67742 (4) obj. -1.66794 iterations 7
Cbc0038I Pass  24: suminf.    0.67742 (4) obj. -1.66794 iterations 4
Cbc0038I Pass  25: suminf.    1.25010 (4) obj. -1.66794 iterations 4
Cbc0038I Pass  26: suminf.    0.74940 (4) obj. -4.79978 iterations 3
Cbc0038I Pass  27: suminf.    0.67742 (4) obj. -1.66794 iterations 5
Cbc0038I Pass  28: suminf.    1.59277 (13) obj. -1.66794 iterations 30
Cbc0038I Pass  29: suminf.    1.59277 (13) obj. -1.66794 iterations 5
Cbc0038I Pass  30: suminf.    2.34431 (7) obj. -1.66794 iterations 21
Cbc0038I Pass  31: suminf.    0.76763 (4) obj. -1.66794 iterations 3
Cbc0038I Pass  32: suminf.    0.67100 (9) obj. -1.66794 iterations 6
Cbc0038I Pass  33: suminf.    0.37226 (5) obj. -1.66794 iterations 18
Cbc0038I Pass  34: suminf.    0.27608 (4) obj. -1.66794 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 60 rows 71 columns
Cbc0038I Mini branch and bound improved solution from 3.65947 to -0.76534 (0.13 seconds)
Cbc0038I Round again with cutoff of -11.2571
Cbc0038I Pass  34: suminf.    2.01866 (28) obj. -30.5817 iterations 0
Cbc0038I Pass  35: suminf.    2.01866 (28) obj. -30.5817 iterations 1
Cbc0038I Pass  36: suminf.    0.98265 (19) obj. -11.2571 iterations 19
Cbc0038I Pass  37: suminf.    0.98265 (19) obj. -11.2571 iterations 0
Cbc0038I Pass  38: suminf.    0.89876 (10) obj. -11.2571 iterations 10
Cbc0038I Pass  39: suminf.    0.80427 (10) obj. -12.58 iterations 1
Cbc0038I Pass  40: suminf.    1.00338 (12) obj. -11.2571 iterations 26
Cbc0038I Pass  41: suminf.    1.00338 (12) obj. -11.2571 iterations 1
Cbc0038I Pass  42: suminf.    0.87931 (7) obj. -11.2571 iterations 19
Cbc0038I Pass  43: suminf.    0.87931 (7) obj. -11.2571 iterations 8
Cbc0038I Pass  44: suminf.    1.13678 (7) obj. -11.2571 iterations 11
Cbc0038I Pass  45: suminf.    0.50758 (7) obj. -11.2571 iterations 2
Cbc0038I Pass  46: suminf.    2.37472 (14) obj. -11.2571 iterations 20
Cbc0038I Pass  47: suminf.    1.83571 (16) obj. -11.2571 iterations 9
Cbc0038I Pass  48: suminf.    0.68811 (7) obj. -11.2571 iterations 15
Cbc0038I Pass  49: suminf.    0.63969 (5) obj. -11.2571 iterations 1
Cbc0038I Pass  50: suminf.    1.05261 (7) obj. -11.2571 iterations 17
Cbc0038I Pass  51: suminf.    0.85344 (7) obj. -11.2571 iterations 2
Cbc0038I Pass  52: suminf.    1.16479 (7) obj. -11.2571 iterations 6
Cbc0038I Pass  53: suminf.    1.92196 (14) obj. -11.2571 iterations 19
Cbc0038I Pass  54: suminf.    1.17311 (10) obj. -13.0774 iterations 5
Cbc0038I Pass  55: suminf.    1.54151 (8) obj. -11.2571 iterations 18
Cbc0038I Pass  56: suminf.    1.54151 (8) obj. -11.2571 iterations 0
Cbc0038I Pass  57: suminf.    1.93536 (9) obj. -11.2571 iterations 16
Cbc0038I Pass  58: suminf.    1.30080 (7) obj. -11.2571 iterations 4
Cbc0038I Pass  59: suminf.    1.32940 (10) obj. -11.2571 iterations 16
Cbc0038I Pass  60: suminf.    0.78247 (5) obj. -11.2571 iterations 11
Cbc0038I Pass  61: suminf.    0.91066 (7) obj. -11.2571 iterations 11
Cbc0038I Pass  62: suminf.    0.74325 (7) obj. -11.2571 iterations 2
Cbc0038I Pass  63: suminf.    1.00465 (7) obj. -11.2571 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -0.76534 - took 0.12 seconds
Cbc0012I Integer solution of -0.76534 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 38 rows 46 columns
Cbc0012I Integer solution of -3.13275 found by RINS after 0 iterations and 0 nodes (0.18 seconds)
Cbc0031I 64 added rows had average density of 44.265625
Cbc0013I At root node, 64 cuts changed objective from -49.613777 to -13.214164 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16819 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1739 row cuts average 111.2 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 588 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1433 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 388 row cuts average 57.3 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.434 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.13275 best solution, best possible -13.214164 (2.56 seconds)
Cbc0004I Integer solution of -4.26494 found after 7165 iterations and 1 nodes (2.58 seconds)
Cbc0010I After 16 nodes, 9 on tree, -4.26494 best solution, best possible -12.394408 (3.27 seconds)
Cbc0012I Integer solution of -4.60205 found by rounding after 9035 iterations and 24 nodes (3.33 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 48 rows 64 columns
Cbc0012I Integer solution of -4.69391 found by RINS after 9920 iterations and 41 nodes (3.56 seconds)
Cbc0016I Integer solution of -4.74208 found by strong branching after 10212 iterations and 60 nodes (3.60 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 18 rows 29 columns
Cbc0012I Integer solution of -4.77077 found by rounding after 11840 iterations and 103 nodes (3.77 seconds)
Cbc0001I Search completed - best objective -4.770769999999999, took 11959 iterations and 108 nodes (3.78 seconds)
Cbc0032I Strong branching done 994 times (17723 iterations), fathomed 9 nodes and fixed 14 variables
Cbc0035I Maximum depth 24, 154 variables fixed on reduced cost
Total time (CPU seconds):       3.14   (Wallclock seconds):       3.80

