Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 1.15523e-05 - average 3.39773e-07, 1 fixed columns
Coin0506I Presolve 15 (-19) rows, 17 (-4) columns and 58 (-44) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Coin0511I After Postsolve, objective 193.05915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Coin0511I After Postsolve, objective 193.05915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.0591492 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.430%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.16813
Cbc0038I Pass   1: suminf.    0.36098 (1) obj. -124.205 iterations 8
Cbc0038I Solution found of -61.2079
Cbc0038I Relaxing continuous gives -61.2079
Cbc0038I Rounding solution of -93.8784 is better than previous of -61.2079

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -103.797
Cbc0038I Pass   2: suminf.    0.36098 (1) obj. -124.205 iterations 0
Cbc0038I Pass   3: suminf.    0.42734 (2) obj. -103.797 iterations 2
Cbc0038I Pass   4: suminf.    0.23902 (1) obj. -124.369 iterations 2
Cbc0038I Pass   5: suminf.    0.53074 (2) obj. -103.797 iterations 2
Cbc0038I Pass   6: suminf.    0.22439 (1) obj. -131.125 iterations 2
Cbc0038I Pass   7: suminf.    0.45492 (2) obj. -103.797 iterations 2
Cbc0038I Pass   8: suminf.    0.15122 (1) obj. -148.411 iterations 2
Cbc0038I Pass   9: suminf.    0.39396 (2) obj. -103.797 iterations 2
Cbc0038I Pass  10: suminf.    0.12683 (1) obj. -148.755 iterations 2
Cbc0038I Pass  11: suminf.    0.41713 (1) obj. -103.797 iterations 1
Cbc0038I Pass  12: suminf.    0.91300 (2) obj. -103.797 iterations 5
Cbc0038I Pass  13: suminf.    0.25099 (1) obj. -103.797 iterations 5
Cbc0038I Pass  14: suminf.    0.44943 (2) obj. -103.797 iterations 2
Cbc0038I Pass  15: suminf.    0.36238 (1) obj. -103.797 iterations 3
Cbc0038I Pass  16: suminf.    0.30096 (1) obj. -103.797 iterations 1
Cbc0038I Pass  17: suminf.    0.37683 (1) obj. -114.515 iterations 10
Cbc0038I Pass  18: suminf.    0.26344 (2) obj. -103.797 iterations 3
Cbc0038I Pass  19: suminf.    0.15035 (1) obj. -103.797 iterations 3
Cbc0038I Pass  20: suminf.    0.36683 (2) obj. -103.797 iterations 2
Cbc0038I Pass  21: suminf.    0.16390 (1) obj. -103.797 iterations 3
Cbc0038I Pass  22: suminf.    0.30841 (2) obj. -103.797 iterations 2
Cbc0038I Pass  23: suminf.    0.28389 (1) obj. -103.797 iterations 3
Cbc0038I Pass  24: suminf.    0.31901 (2) obj. -103.797 iterations 2
Cbc0038I Pass  25: suminf.    0.36238 (1) obj. -103.797 iterations 3
Cbc0038I Pass  26: suminf.    0.30096 (1) obj. -103.797 iterations 1
Cbc0038I Pass  27: suminf.    0.40002 (1) obj. -103.797 iterations 1
Cbc0038I Pass  28: suminf.    0.44087 (1) obj. -103.797 iterations 2
Cbc0038I Pass  29: suminf.    0.40002 (1) obj. -103.797 iterations 1
Cbc0038I Pass  30: suminf.    0.21654 (2) obj. -103.797 iterations 4
Cbc0038I Pass  31: suminf.    0.21654 (2) obj. -103.797 iterations 1
Cbc0038I Rounding solution of -103.29 is better than previous of -93.8784

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -103.29 to -105.342 (0.02 seconds)
Cbc0038I Round again with cutoff of -122.886
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36098 (1) obj. -124.205 iterations 0
Cbc0038I Pass  32: suminf.    0.40642 (2) obj. -122.886 iterations 2
Cbc0038I Pass  33: suminf.    0.47425 (3) obj. -122.886 iterations 8
Cbc0038I Pass  34: suminf.    0.47861 (2) obj. -122.886 iterations 3
Cbc0038I Pass  35: suminf.    0.46906 (2) obj. -122.886 iterations 1
Cbc0038I Pass  36: suminf.    0.49512 (1) obj. -126.096 iterations 2
Cbc0038I Pass  37: suminf.    0.45121 (2) obj. -122.886 iterations 2
Cbc0038I Pass  38: suminf.    0.38293 (1) obj. -138.353 iterations 2
Cbc0038I Pass  39: suminf.    0.45791 (2) obj. -122.886 iterations 2
Cbc0038I Pass  40: suminf.    0.35854 (1) obj. -138.697 iterations 2
Cbc0038I Pass  41: suminf.    0.48108 (1) obj. -122.886 iterations 1
Cbc0038I Pass  42: suminf.    0.84141 (4) obj. -122.886 iterations 2
Cbc0038I Pass  43: suminf.    0.60606 (3) obj. -122.886 iterations 3
Cbc0038I Pass  44: suminf.    0.48049 (1) obj. -122.886 iterations 2
Cbc0038I Pass  45: suminf.    0.49913 (2) obj. -122.886 iterations 2
Cbc0038I Pass  46: suminf.    0.35854 (1) obj. -138.697 iterations 2
Cbc0038I Pass  47: suminf.    0.48108 (1) obj. -122.886 iterations 1
Cbc0038I Pass  48: suminf.    0.48108 (1) obj. -122.886 iterations 0
Cbc0038I Pass  49: suminf.    0.54667 (2) obj. -122.886 iterations 10
Cbc0038I Pass  50: suminf.    0.54667 (2) obj. -122.886 iterations 0
Cbc0038I Pass  51: suminf.    0.55116 (2) obj. -122.886 iterations 2
Cbc0038I Pass  52: suminf.    0.21439 (1) obj. -145.556 iterations 2
Cbc0038I Pass  53: suminf.    0.55338 (3) obj. -122.886 iterations 3
Cbc0038I Pass  54: suminf.    0.54972 (2) obj. -122.886 iterations 2
Cbc0038I Pass  55: suminf.    0.57654 (2) obj. -122.886 iterations 3
Cbc0038I Pass  56: suminf.    0.42369 (2) obj. -122.886 iterations 3
Cbc0038I Pass  57: suminf.    0.42369 (2) obj. -122.886 iterations 0
Cbc0038I Pass  58: suminf.    0.47799 (1) obj. -122.886 iterations 3
Cbc0038I Pass  59: suminf.    0.44686 (1) obj. -122.886 iterations 1
Cbc0038I Pass  60: suminf.    0.46141 (2) obj. -122.886 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -105.342 to -107.383 (0.03 seconds)
Cbc0038I Round again with cutoff of -143.938
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.69222 (4) obj. -143.938 iterations 3
Cbc0038I Pass  61: suminf.    0.25243 (2) obj. -143.938 iterations 5
Cbc0038I Pass  62: suminf.    0.15122 (1) obj. -143.938 iterations 2
Cbc0038I Pass  63: suminf.    1.29999 (3) obj. -143.938 iterations 6
Cbc0038I Pass  64: suminf.    0.51305 (2) obj. -143.938 iterations 4
Cbc0038I Pass  65: suminf.    0.36860 (2) obj. -143.938 iterations 3
Cbc0038I Pass  66: suminf.    0.29366 (1) obj. -143.938 iterations 2
Cbc0038I Pass  67: suminf.    1.13826 (3) obj. -143.938 iterations 11
Cbc0038I Pass  68: suminf.    0.82862 (3) obj. -143.938 iterations 3
Cbc0038I Pass  69: suminf.    0.52878 (4) obj. -143.938 iterations 4
Cbc0038I Pass  70: suminf.    0.66040 (2) obj. -143.938 iterations 3
Cbc0038I Pass  71: suminf.    0.66040 (2) obj. -143.938 iterations 0
Cbc0038I Pass  72: suminf.    0.73000 (2) obj. -143.938 iterations 1
Cbc0038I Pass  73: suminf.    0.51112 (2) obj. -143.938 iterations 4
Cbc0038I Pass  74: suminf.    0.49058 (2) obj. -143.938 iterations 3
Cbc0038I Pass  75: suminf.    0.90957 (4) obj. -143.938 iterations 3
Cbc0038I Pass  76: suminf.    0.53180 (3) obj. -143.938 iterations 2
Cbc0038I Pass  77: suminf.    0.39041 (2) obj. -143.938 iterations 5
Cbc0038I Pass  78: suminf.    0.36946 (2) obj. -143.938 iterations 1
Cbc0038I Pass  79: suminf.    0.82794 (4) obj. -143.938 iterations 3
Cbc0038I Pass  80: suminf.    0.46540 (2) obj. -143.938 iterations 2
Cbc0038I Pass  81: suminf.    1.04044 (4) obj. -143.938 iterations 5
Cbc0038I Pass  82: suminf.    0.47728 (3) obj. -143.938 iterations 2
Cbc0038I Pass  83: suminf.    0.41172 (1) obj. -143.938 iterations 3
Cbc0038I Pass  84: suminf.    0.53581 (2) obj. -143.938 iterations 2
Cbc0038I Pass  85: suminf.    0.43883 (1) obj. -143.938 iterations 2
Cbc0038I Pass  86: suminf.    0.51455 (2) obj. -143.938 iterations 2
Cbc0038I Pass  87: suminf.    0.49650 (2) obj. -143.938 iterations 2
Cbc0038I Pass  88: suminf.    0.49650 (2) obj. -143.938 iterations 0
Cbc0038I Pass  89: suminf.    0.56284 (2) obj. -143.938 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -107.383 - took 0.03 seconds
Cbc0012I Integer solution of -107.38317 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 34 rows 21 columns, reduced to 11 rows 12 columns
Cbc0031I 8 added rows had average density of 16
Cbc0013I At root node, 8 cuts changed objective from -181.15191 to -111.76935 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 247 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.784 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -107.38317 best solution, best possible -111.76935 (1.60 seconds)
Cbc0012I Integer solution of -108.71554 found by DiveCoefficient after 1133 iterations and 4 nodes (1.62 seconds)
Cbc0001I Search completed - best objective -108.71554, took 1388 iterations and 14 nodes (1.64 seconds)
Cbc0032I Strong branching done 110 times (465 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.65

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 42 (-4) columns and 329 (-59) elements
Clp1000I sum of infeasibilities 0 - average 0, 22 fixed columns
Coin0506I Presolve 11 (-25) rows, 11 (-31) columns and 40 (-289) elements
Clp0006I 0  Obj 246.74205 Dual inf 2.675474 (11)
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 291.6403
Clp0000I Optimal - objective value 291.6403
Coin0511I After Postsolve, objective 291.6403, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 291.6403 Dual inf 376.35129 (5)
Clp0014I Perturbing problem by 0.001% of 1.085097 - largest nonzero change 1.836629e-05 ( 0.001836629%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 298.81391
Clp0000I Optimal - objective value 298.81391
Clp0000I Optimal - objective value 298.81391
Coin0511I After Postsolve, objective 298.81391, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 298.8139097 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 352 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.048%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.53807
Cbc0038I Pass   1: suminf.    0.50952 (3) obj. -81.3556 iterations 14
Cbc0038I Solution found of -65.7604
Cbc0038I Rounding solution of -100.118 is better than previous of -65.7604

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -106.59
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.76550 (4) obj. -106.59 iterations 1
Cbc0038I Pass   3: suminf.    0.40732 (1) obj. -124.189 iterations 5
Cbc0038I Pass   4: suminf.    0.41417 (1) obj. -106.59 iterations 1
Cbc0038I Pass   5: suminf.    1.32679 (5) obj. -106.59 iterations 6
Cbc0038I Pass   6: suminf.    0.64491 (3) obj. -106.59 iterations 2
Cbc0038I Pass   7: suminf.    0.44634 (1) obj. -124.588 iterations 4
Cbc0038I Pass   8: suminf.    0.26378 (1) obj. -106.59 iterations 1
Cbc0038I Pass   9: suminf.    3.09017 (8) obj. -106.59 iterations 9
Cbc0038I Pass  10: suminf.    0.68724 (2) obj. -106.59 iterations 6
Cbc0038I Pass  11: suminf.    0.27561 (1) obj. -114.302 iterations 3
Cbc0038I Pass  12: suminf.    0.19738 (1) obj. -106.59 iterations 1
Cbc0038I Pass  13: suminf.    1.30359 (4) obj. -106.59 iterations 5
Cbc0038I Pass  14: suminf.    0.66980 (2) obj. -106.59 iterations 2
Cbc0038I Pass  15: suminf.    0.43415 (1) obj. -116.792 iterations 3
Cbc0038I Pass  16: suminf.    0.33066 (1) obj. -106.59 iterations 1
Cbc0038I Pass  17: suminf.    2.64468 (9) obj. -106.59 iterations 10
Cbc0038I Pass  18: suminf.    0.40502 (2) obj. -106.59 iterations 9
Cbc0038I Pass  19: suminf.    0.44041 (2) obj. -106.59 iterations 2
Cbc0038I Pass  20: suminf.    0.09461 (1) obj. -106.59 iterations 2
Cbc0038I Pass  21: suminf.    0.12317 (1) obj. -109.406 iterations 2
Cbc0038I Pass  22: suminf.    2.17934 (8) obj. -106.59 iterations 8
Cbc0038I Pass  23: suminf.    0.50441 (2) obj. -106.59 iterations 7
Cbc0038I Pass  24: suminf.    0.03780 (1) obj. -107.382 iterations 3
Cbc0038I Pass  25: suminf.    0.02977 (1) obj. -106.59 iterations 1
Cbc0038I Pass  26: suminf.    3.64737 (10) obj. -106.59 iterations 17
Cbc0038I Pass  27: suminf.    2.17765 (6) obj. -106.59 iterations 5
Cbc0038I Pass  28: suminf.    1.15186 (4) obj. -106.59 iterations 4
Cbc0038I Pass  29: suminf.    0.78310 (3) obj. -106.59 iterations 4
Cbc0038I Pass  30: suminf.    0.78310 (3) obj. -106.59 iterations 0
Cbc0038I Pass  31: suminf.    0.82479 (3) obj. -106.59 iterations 1
Cbc0038I Rounding solution of -108.716 is better than previous of -100.118

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -119.942
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.90093 (4) obj. -119.942 iterations 0
Cbc0038I Pass  32: suminf.    0.40732 (1) obj. -124.189 iterations 5
Cbc0038I Pass  33: suminf.    0.45040 (1) obj. -119.942 iterations 1
Cbc0038I Pass  34: suminf.    1.82153 (6) obj. -119.942 iterations 11
Cbc0038I Pass  35: suminf.    1.21951 (4) obj. -119.942 iterations 4
Cbc0038I Pass  36: suminf.    1.16235 (4) obj. -119.942 iterations 3
Cbc0038I Pass  37: suminf.    1.16235 (4) obj. -119.942 iterations 0
Cbc0038I Pass  38: suminf.    1.23484 (4) obj. -119.942 iterations 1
Cbc0038I Pass  39: suminf.    1.53946 (6) obj. -119.942 iterations 6
Cbc0038I Pass  40: suminf.    1.53946 (6) obj. -119.942 iterations 0
Cbc0038I Pass  41: suminf.    1.46199 (5) obj. -119.942 iterations 2
Cbc0038I Pass  42: suminf.    1.23057 (5) obj. -119.942 iterations 2
Cbc0038I Pass  43: suminf.    1.68283 (5) obj. -119.942 iterations 2
Cbc0038I Pass  44: suminf.    1.92611 (7) obj. -119.942 iterations 6
Cbc0038I Pass  45: suminf.    1.43659 (6) obj. -119.942 iterations 4
Cbc0038I Pass  46: suminf.    1.32570 (5) obj. -119.942 iterations 2
Cbc0038I Pass  47: suminf.    1.13757 (5) obj. -119.942 iterations 3
Cbc0038I Pass  48: suminf.    1.42333 (5) obj. -119.942 iterations 2
Cbc0038I Pass  49: suminf.    1.97643 (6) obj. -119.942 iterations 4
Cbc0038I Pass  50: suminf.    1.77108 (5) obj. -119.942 iterations 2
Cbc0038I Pass  51: suminf.    1.29669 (5) obj. -119.942 iterations 1
Cbc0038I Pass  52: suminf.    1.77108 (5) obj. -119.942 iterations 2
Cbc0038I Pass  53: suminf.    2.14710 (7) obj. -119.942 iterations 5
Cbc0038I Pass  54: suminf.    1.91473 (6) obj. -119.942 iterations 1
Cbc0038I Pass  55: suminf.    1.79486 (6) obj. -119.942 iterations 2
Cbc0038I Pass  56: suminf.    1.79486 (6) obj. -119.942 iterations 0
Cbc0038I Pass  57: suminf.    1.93160 (6) obj. -119.942 iterations 2
Cbc0038I Pass  58: suminf.    2.06633 (8) obj. -119.942 iterations 13
Cbc0038I Pass  59: suminf.    1.43994 (6) obj. -119.942 iterations 2
Cbc0038I Pass  60: suminf.    1.38873 (5) obj. -119.942 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -108.716 - took 0.03 seconds
Cbc0012I Integer solution of -108.71554 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 1 rows 2 columns
Cbc0031I 8 added rows had average density of 12.5
Cbc0013I At root node, 8 cuts changed objective from -160.13827 to -110.16641 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 44 row cuts average 2.0 elements, 15 column cuts (15 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 60 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -108.71554 best solution, best possible -110.14384 (0.26 seconds)
Cbc0001I Search completed - best objective -108.71554, took 115 iterations and 2 nodes (0.27 seconds)
Cbc0032I Strong branching done 14 times (44 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.27

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 1.15523e-05 - average 3.39773e-07, 1 fixed columns
Coin0506I Presolve 15 (-19) rows, 17 (-4) columns and 58 (-44) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Coin0511I After Postsolve, objective 193.05915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Clp0000I Optimal - objective value 193.05915
Coin0511I After Postsolve, objective 193.05915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.0591492 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.430%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.16813
Cbc0038I Pass   1: suminf.    0.36098 (1) obj. -124.205 iterations 8
Cbc0038I Solution found of -61.2079
Cbc0038I Relaxing continuous gives -61.2079
Cbc0038I Rounding solution of -93.8784 is better than previous of -61.2079

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -103.797
Cbc0038I Pass   2: suminf.    0.36098 (1) obj. -124.205 iterations 0
Cbc0038I Pass   3: suminf.    0.42734 (2) obj. -103.797 iterations 2
Cbc0038I Pass   4: suminf.    0.23902 (1) obj. -124.369 iterations 2
Cbc0038I Pass   5: suminf.    0.53074 (2) obj. -103.797 iterations 2
Cbc0038I Pass   6: suminf.    0.22439 (1) obj. -131.125 iterations 2
Cbc0038I Pass   7: suminf.    0.45492 (2) obj. -103.797 iterations 2
Cbc0038I Pass   8: suminf.    0.15122 (1) obj. -148.411 iterations 2
Cbc0038I Pass   9: suminf.    0.39396 (2) obj. -103.797 iterations 2
Cbc0038I Pass  10: suminf.    0.12683 (1) obj. -148.755 iterations 2
Cbc0038I Pass  11: suminf.    0.41713 (1) obj. -103.797 iterations 1
Cbc0038I Pass  12: suminf.    0.91300 (2) obj. -103.797 iterations 5
Cbc0038I Pass  13: suminf.    0.25099 (1) obj. -103.797 iterations 5
Cbc0038I Pass  14: suminf.    0.44943 (2) obj. -103.797 iterations 2
Cbc0038I Pass  15: suminf.    0.36238 (1) obj. -103.797 iterations 3
Cbc0038I Pass  16: suminf.    0.30096 (1) obj. -103.797 iterations 1
Cbc0038I Pass  17: suminf.    0.37683 (1) obj. -114.515 iterations 10
Cbc0038I Pass  18: suminf.    0.26344 (2) obj. -103.797 iterations 3
Cbc0038I Pass  19: suminf.    0.15035 (1) obj. -103.797 iterations 3
Cbc0038I Pass  20: suminf.    0.36683 (2) obj. -103.797 iterations 2
Cbc0038I Pass  21: suminf.    0.16390 (1) obj. -103.797 iterations 3
Cbc0038I Pass  22: suminf.    0.30841 (2) obj. -103.797 iterations 2
Cbc0038I Pass  23: suminf.    0.28389 (1) obj. -103.797 iterations 3
Cbc0038I Pass  24: suminf.    0.31901 (2) obj. -103.797 iterations 2
Cbc0038I Pass  25: suminf.    0.36238 (1) obj. -103.797 iterations 3
Cbc0038I Pass  26: suminf.    0.30096 (1) obj. -103.797 iterations 1
Cbc0038I Pass  27: suminf.    0.40002 (1) obj. -103.797 iterations 1
Cbc0038I Pass  28: suminf.    0.44087 (1) obj. -103.797 iterations 2
Cbc0038I Pass  29: suminf.    0.40002 (1) obj. -103.797 iterations 1
Cbc0038I Pass  30: suminf.    0.21654 (2) obj. -103.797 iterations 4
Cbc0038I Pass  31: suminf.    0.21654 (2) obj. -103.797 iterations 1
Cbc0038I Rounding solution of -103.29 is better than previous of -93.8784

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -103.29 to -105.342 (0.01 seconds)
Cbc0038I Round again with cutoff of -122.886
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.36098 (1) obj. -124.205 iterations 0
Cbc0038I Pass  32: suminf.    0.40642 (2) obj. -122.886 iterations 2
Cbc0038I Pass  33: suminf.    0.47425 (3) obj. -122.886 iterations 8
Cbc0038I Pass  34: suminf.    0.47861 (2) obj. -122.886 iterations 3
Cbc0038I Pass  35: suminf.    0.46906 (2) obj. -122.886 iterations 1
Cbc0038I Pass  36: suminf.    0.49512 (1) obj. -126.096 iterations 2
Cbc0038I Pass  37: suminf.    0.45121 (2) obj. -122.886 iterations 2
Cbc0038I Pass  38: suminf.    0.38293 (1) obj. -138.353 iterations 2
Cbc0038I Pass  39: suminf.    0.45791 (2) obj. -122.886 iterations 2
Cbc0038I Pass  40: suminf.    0.35854 (1) obj. -138.697 iterations 2
Cbc0038I Pass  41: suminf.    0.48108 (1) obj. -122.886 iterations 1
Cbc0038I Pass  42: suminf.    0.84141 (4) obj. -122.886 iterations 2
Cbc0038I Pass  43: suminf.    0.60606 (3) obj. -122.886 iterations 3
Cbc0038I Pass  44: suminf.    0.48049 (1) obj. -122.886 iterations 2
Cbc0038I Pass  45: suminf.    0.49913 (2) obj. -122.886 iterations 2
Cbc0038I Pass  46: suminf.    0.35854 (1) obj. -138.697 iterations 2
Cbc0038I Pass  47: suminf.    0.48108 (1) obj. -122.886 iterations 1
Cbc0038I Pass  48: suminf.    0.48108 (1) obj. -122.886 iterations 0
Cbc0038I Pass  49: suminf.    0.54667 (2) obj. -122.886 iterations 10
Cbc0038I Pass  50: suminf.    0.54667 (2) obj. -122.886 iterations 0
Cbc0038I Pass  51: suminf.    0.55116 (2) obj. -122.886 iterations 2
Cbc0038I Pass  52: suminf.    0.21439 (1) obj. -145.556 iterations 2
Cbc0038I Pass  53: suminf.    0.55338 (3) obj. -122.886 iterations 3
Cbc0038I Pass  54: suminf.    0.54972 (2) obj. -122.886 iterations 2
Cbc0038I Pass  55: suminf.    0.57654 (2) obj. -122.886 iterations 3
Cbc0038I Pass  56: suminf.    0.42369 (2) obj. -122.886 iterations 3
Cbc0038I Pass  57: suminf.    0.42369 (2) obj. -122.886 iterations 0
Cbc0038I Pass  58: suminf.    0.47799 (1) obj. -122.886 iterations 3
Cbc0038I Pass  59: suminf.    0.44686 (1) obj. -122.886 iterations 1
Cbc0038I Pass  60: suminf.    0.46141 (2) obj. -122.886 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -105.342 to -107.383 (0.02 seconds)
Cbc0038I Round again with cutoff of -143.938
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.69222 (4) obj. -143.938 iterations 3
Cbc0038I Pass  61: suminf.    0.25243 (2) obj. -143.938 iterations 5
Cbc0038I Pass  62: suminf.    0.15122 (1) obj. -143.938 iterations 2
Cbc0038I Pass  63: suminf.    1.29999 (3) obj. -143.938 iterations 6
Cbc0038I Pass  64: suminf.    0.51305 (2) obj. -143.938 iterations 4
Cbc0038I Pass  65: suminf.    0.36860 (2) obj. -143.938 iterations 3
Cbc0038I Pass  66: suminf.    0.29366 (1) obj. -143.938 iterations 2
Cbc0038I Pass  67: suminf.    1.13826 (3) obj. -143.938 iterations 11
Cbc0038I Pass  68: suminf.    0.82862 (3) obj. -143.938 iterations 3
Cbc0038I Pass  69: suminf.    0.52878 (4) obj. -143.938 iterations 4
Cbc0038I Pass  70: suminf.    0.66040 (2) obj. -143.938 iterations 3
Cbc0038I Pass  71: suminf.    0.66040 (2) obj. -143.938 iterations 0
Cbc0038I Pass  72: suminf.    0.73000 (2) obj. -143.938 iterations 1
Cbc0038I Pass  73: suminf.    0.51112 (2) obj. -143.938 iterations 4
Cbc0038I Pass  74: suminf.    0.49058 (2) obj. -143.938 iterations 3
Cbc0038I Pass  75: suminf.    0.90957 (4) obj. -143.938 iterations 3
Cbc0038I Pass  76: suminf.    0.53180 (3) obj. -143.938 iterations 2
Cbc0038I Pass  77: suminf.    0.39041 (2) obj. -143.938 iterations 5
Cbc0038I Pass  78: suminf.    0.36946 (2) obj. -143.938 iterations 1
Cbc0038I Pass  79: suminf.    0.82794 (4) obj. -143.938 iterations 3
Cbc0038I Pass  80: suminf.    0.46540 (2) obj. -143.938 iterations 2
Cbc0038I Pass  81: suminf.    1.04044 (4) obj. -143.938 iterations 5
Cbc0038I Pass  82: suminf.    0.47728 (3) obj. -143.938 iterations 2
Cbc0038I Pass  83: suminf.    0.41172 (1) obj. -143.938 iterations 3
Cbc0038I Pass  84: suminf.    0.53581 (2) obj. -143.938 iterations 2
Cbc0038I Pass  85: suminf.    0.43883 (1) obj. -143.938 iterations 2
Cbc0038I Pass  86: suminf.    0.51455 (2) obj. -143.938 iterations 2
Cbc0038I Pass  87: suminf.    0.49650 (2) obj. -143.938 iterations 2
Cbc0038I Pass  88: suminf.    0.49650 (2) obj. -143.938 iterations 0
Cbc0038I Pass  89: suminf.    0.56284 (2) obj. -143.938 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -107.383 - took 0.02 seconds
Cbc0012I Integer solution of -107.38317 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 21 columns, reduced to 11 rows 12 columns
Cbc0031I 8 added rows had average density of 16
Cbc0013I At root node, 8 cuts changed objective from -181.15191 to -111.76935 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 247 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -107.38317 best solution, best possible -111.76935 (1.38 seconds)
Cbc0012I Integer solution of -108.71554 found by DiveCoefficient after 1133 iterations and 4 nodes (1.39 seconds)
Cbc0001I Search completed - best objective -108.71554, took 1388 iterations and 14 nodes (1.41 seconds)
Cbc0032I Strong branching done 110 times (465 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       1.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 41 (-6) columns and 316 (-73) elements
Clp1000I sum of infeasibilities 0 - average 0, 34 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-41) columns and 0 (-316) elements
Clp0000I Optimal - objective value 114.73814
Clp0000I Optimal - objective value 114.73814
Coin0511I After Postsolve, objective 114.73814, infeasibilities - dual 2.521175 (1), primal 0 (0)
Coin0512I Presolved model was optimal, full model needs cleaning up
Clp0006I 0  Obj 114.73814 Dual inf 472.07044 (28)
Clp0014I Perturbing problem by 0.001% of 1.540513 - largest nonzero change 1.5989058e-05 ( 0.0015989058%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 232.91184
Clp0000I Optimal - objective value 232.91184
Clp0000I Optimal - objective value 232.91184
Coin0511I After Postsolve, objective 232.91184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 232.9118375 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 41 columns (41 integer (41 of which binary)) and 325 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.639%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.10165
Cbc0038I Pass   1: suminf.    1.04988 (6) obj. -127.416 iterations 14
Cbc0038I Solution found of -91.6175
Cbc0038I Rounding solution of -94.9909 is better than previous of -91.6175

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -102.436
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.04988 (6) obj. -127.416 iterations 0
Cbc0038I Pass   3: suminf.    0.31537 (3) obj. -102.436 iterations 12
Cbc0038I Pass   4: suminf.    0.45854 (1) obj. -127.822 iterations 4
Cbc0038I Pass   5: suminf.    0.20103 (1) obj. -102.436 iterations 1
Cbc0038I Pass   6: suminf.    2.19933 (7) obj. -102.436 iterations 7
Cbc0038I Pass   7: suminf.    1.33795 (5) obj. -102.436 iterations 3
Cbc0038I Pass   8: suminf.    0.48613 (2) obj. -102.436 iterations 7
Cbc0038I Pass   9: suminf.    0.48613 (2) obj. -102.436 iterations 0
Cbc0038I Pass  10: suminf.    0.54488 (2) obj. -103.376 iterations 2
Cbc0038I Pass  11: suminf.    1.97687 (5) obj. -102.811 iterations 10
Cbc0038I Pass  12: suminf.    1.03282 (3) obj. -102.436 iterations 4
Cbc0038I Pass  13: suminf.    0.18404 (2) obj. -102.436 iterations 3
Cbc0038I Pass  14: suminf.    0.18404 (2) obj. -102.436 iterations 0
Cbc0038I Pass  15: suminf.    0.37902 (2) obj. -105.556 iterations 2
Cbc0038I Pass  16: suminf.    1.01851 (3) obj. -102.436 iterations 9
Cbc0038I Pass  17: suminf.    0.33331 (2) obj. -102.436 iterations 4
Cbc0038I Pass  18: suminf.    0.57841 (2) obj. -106.358 iterations 2
Cbc0038I Pass  19: suminf.    3.10525 (8) obj. -102.436 iterations 10
Cbc0038I Pass  20: suminf.    2.64719 (6) obj. -102.436 iterations 3
Cbc0038I Pass  21: suminf.    0.86166 (2) obj. -102.436 iterations 4
Cbc0038I Pass  22: suminf.    0.39221 (1) obj. -102.436 iterations 1
Cbc0038I Pass  23: suminf.    0.40732 (1) obj. -103.926 iterations 2
Cbc0038I Pass  24: suminf.    2.58926 (7) obj. -102.436 iterations 11
Cbc0038I Pass  25: suminf.    1.88318 (5) obj. -102.436 iterations 2
Cbc0038I Pass  26: suminf.    0.36319 (2) obj. -102.436 iterations 8
Cbc0038I Pass  27: suminf.    0.36319 (2) obj. -102.436 iterations 0
Cbc0038I Pass  28: suminf.    0.63500 (2) obj. -106.785 iterations 2
Cbc0038I Pass  29: suminf.    3.52501 (10) obj. -102.436 iterations 17
Cbc0038I Pass  30: suminf.    3.52501 (10) obj. -102.436 iterations 0
Cbc0038I Pass  31: suminf.    0.26707 (1) obj. -107.695 iterations 12
Cbc0038I Rounding solution of -101.603 is better than previous of -94.9909

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -115.837
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.04988 (6) obj. -127.416 iterations 0
Cbc0038I Pass  32: suminf.    0.70603 (3) obj. -115.837 iterations 12
Cbc0038I Pass  33: suminf.    0.45854 (1) obj. -127.822 iterations 4
Cbc0038I Pass  34: suminf.    0.33697 (1) obj. -115.837 iterations 1
Cbc0038I Pass  35: suminf.    2.36085 (8) obj. -115.837 iterations 10
Cbc0038I Pass  36: suminf.    1.68126 (6) obj. -115.837 iterations 3
Cbc0038I Pass  37: suminf.    0.79763 (4) obj. -115.837 iterations 3
Cbc0038I Pass  38: suminf.    0.67439 (3) obj. -115.837 iterations 6
Cbc0038I Pass  39: suminf.    0.67439 (3) obj. -115.837 iterations 0
Cbc0038I Pass  40: suminf.    0.95662 (3) obj. -115.837 iterations 2
Cbc0038I Pass  41: suminf.    1.57562 (4) obj. -115.837 iterations 9
Cbc0038I Pass  42: suminf.    0.65918 (2) obj. -115.837 iterations 5
Cbc0038I Pass  43: suminf.    0.71457 (2) obj. -116.723 iterations 2
Cbc0038I Pass  44: suminf.    1.59160 (5) obj. -115.837 iterations 7
Cbc0038I Pass  45: suminf.    0.86694 (2) obj. -116.779 iterations 5
Cbc0038I Pass  46: suminf.    0.44253 (2) obj. -115.837 iterations 3
Cbc0038I Pass  47: suminf.    0.44253 (2) obj. -115.837 iterations 0
Cbc0038I Pass  48: suminf.    0.67143 (2) obj. -115.837 iterations 4
Cbc0038I Pass  49: suminf.    2.42435 (8) obj. -115.837 iterations 10
Cbc0038I Pass  50: suminf.    1.90462 (6) obj. -115.837 iterations 5
Cbc0038I Pass  51: suminf.    1.65504 (5) obj. -115.837 iterations 5
Cbc0038I Pass  52: suminf.    1.65504 (5) obj. -115.837 iterations 0
Cbc0038I Pass  53: suminf.    1.67443 (5) obj. -115.837 iterations 1
Cbc0038I Pass  54: suminf.    1.48187 (5) obj. -115.837 iterations 2
Cbc0038I Pass  55: suminf.    1.65504 (5) obj. -115.837 iterations 1
Cbc0038I Pass  56: suminf.    1.31453 (5) obj. -115.837 iterations 9
Cbc0038I Pass  57: suminf.    1.05790 (3) obj. -115.837 iterations 4
Cbc0038I Pass  58: suminf.    1.15528 (5) obj. -115.837 iterations 6
Cbc0038I Pass  59: suminf.    1.15528 (5) obj. -115.837 iterations 0
Cbc0038I Pass  60: suminf.    1.43775 (5) obj. -115.837 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -101.603 - took 0.02 seconds
Cbc0012I Integer solution of -101.60317 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 41 columns, reduced to 8 rows 12 columns
Cbc0012I Integer solution of -108.71554 found by DiveCoefficient after 876 iterations and 0 nodes (1.48 seconds)
Cbc0031I 8 added rows had average density of 13.25
Cbc0013I At root node, 8 cuts changed objective from -127.09835 to -109.77784 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 4.2 elements, 8 column cuts (8 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 315 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 84 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.785 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -108.71554 best solution, best possible -109.77784 (1.48 seconds)
Cbc0001I Search completed - best objective -108.71554, took 1049 iterations and 10 nodes (1.50 seconds)
Cbc0032I Strong branching done 54 times (232 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       1.51

