Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 164 (-13) elements
Clp1000I sum of infeasibilities 0.00027201 - average 4.85732e-06, 3 fixed columns
Coin0506I Presolve 47 (-9) rows, 27 (-3) columns and 140 (-24) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 98.243964
Clp0000I Optimal - objective value 98.243964
Coin0511I After Postsolve, objective 98.243964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.243964
Clp0000I Optimal - objective value 98.243964
Clp0000I Optimal - objective value 98.243964
Coin0511I After Postsolve, objective 98.243964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.24396439 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.169%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.74435
Cbc0038I Pass   1: suminf.    0.08065 (1) obj. -25.8857 iterations 20
Cbc0038I Solution found of 9.18696
Cbc0038I Relaxing continuous gives 9.18696
Cbc0038I Rounding solution of -14.9347 is better than previous of 9.18696

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -14.9347 to -31.6223 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.2845
Cbc0038I Pass   2: suminf.    0.44329 (3) obj. -38.2845 iterations 2
Cbc0038I Pass   3: suminf.    0.51422 (5) obj. -38.2845 iterations 6
Cbc0038I Pass   4: suminf.    0.43939 (3) obj. -38.2845 iterations 2
Cbc0038I Pass   5: suminf.    0.64953 (2) obj. -38.2845 iterations 6
Cbc0038I Pass   6: suminf.    0.43540 (3) obj. -38.2845 iterations 3
Cbc0038I Pass   7: suminf.    0.64953 (2) obj. -38.2845 iterations 3
Cbc0038I Pass   8: suminf.    2.79336 (8) obj. -38.2845 iterations 12
Cbc0038I Pass   9: suminf.    1.42891 (6) obj. -38.2845 iterations 7
Cbc0038I Pass  10: suminf.    0.65253 (4) obj. -38.2845 iterations 10
Cbc0038I Pass  11: suminf.    0.65253 (4) obj. -38.2845 iterations 1
Cbc0038I Pass  12: suminf.    0.51422 (5) obj. -38.2845 iterations 14
Cbc0038I Pass  13: suminf.    0.43939 (3) obj. -38.2845 iterations 2
Cbc0038I Pass  14: suminf.    0.64953 (2) obj. -38.2845 iterations 6
Cbc0038I Pass  15: suminf.    0.43540 (3) obj. -38.2845 iterations 3
Cbc0038I Pass  16: suminf.    0.64953 (2) obj. -38.2845 iterations 3
Cbc0038I Pass  17: suminf.    1.14370 (4) obj. -38.2845 iterations 10
Cbc0038I Pass  18: suminf.    0.48050 (2) obj. -38.2845 iterations 7
Cbc0038I Pass  19: suminf.    0.44424 (3) obj. -38.2845 iterations 2
Cbc0038I Pass  20: suminf.    0.44424 (3) obj. -38.2845 iterations 0
Cbc0038I Pass  21: suminf.    0.87857 (2) obj. -38.2845 iterations 3
Cbc0038I Pass  22: suminf.    0.87857 (2) obj. -38.2845 iterations 0
Cbc0038I Pass  23: suminf.    2.93335 (11) obj. -38.2845 iterations 13
Cbc0038I Pass  24: suminf.    1.14953 (5) obj. -38.2845 iterations 8
Cbc0038I Pass  25: suminf.    0.76262 (5) obj. -38.2845 iterations 6
Cbc0038I Pass  26: suminf.    0.76262 (5) obj. -38.2845 iterations 0
Cbc0038I Pass  27: suminf.    0.71630 (3) obj. -38.2845 iterations 11
Cbc0038I Pass  28: suminf.    0.71630 (3) obj. -38.2845 iterations 0
Cbc0038I Pass  29: suminf.    0.44424 (3) obj. -38.2845 iterations 4
Cbc0038I Pass  30: suminf.    0.87857 (2) obj. -38.2845 iterations 3
Cbc0038I Pass  31: suminf.    0.87857 (2) obj. -38.2845 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -31.6223 to -34.7831 (0.05 seconds)
Cbc0038I Round again with cutoff of -50.2764
Cbc0038I Pass  31: suminf.    1.13928 (5) obj. -50.2764 iterations 3
Cbc0038I Pass  32: suminf.    1.00330 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  33: suminf.    0.81592 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  34: suminf.    1.24927 (5) obj. -50.2764 iterations 5
Cbc0038I Pass  35: suminf.    1.10335 (6) obj. -50.2764 iterations 2
Cbc0038I Pass  36: suminf.    0.99807 (5) obj. -50.2764 iterations 7
Cbc0038I Pass  37: suminf.    0.83043 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  38: suminf.    1.31327 (7) obj. -50.2764 iterations 6
Cbc0038I Pass  39: suminf.    1.26309 (6) obj. -50.2764 iterations 1
Cbc0038I Pass  40: suminf.    0.87513 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  41: suminf.    1.11257 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  42: suminf.    0.82152 (4) obj. -50.2764 iterations 3
Cbc0038I Pass  43: suminf.    0.84025 (4) obj. -50.2764 iterations 5
Cbc0038I Pass  44: suminf.    0.83043 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  45: suminf.    1.31327 (7) obj. -50.2764 iterations 6
Cbc0038I Pass  46: suminf.    1.26309 (6) obj. -50.2764 iterations 1
Cbc0038I Pass  47: suminf.    0.87513 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  48: suminf.    1.11257 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  49: suminf.    0.82152 (4) obj. -50.2764 iterations 3
Cbc0038I Pass  50: suminf.    0.84025 (4) obj. -50.2764 iterations 5
Cbc0038I Pass  51: suminf.    0.83043 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  52: suminf.    1.31327 (7) obj. -50.2764 iterations 6
Cbc0038I Pass  53: suminf.    1.26309 (6) obj. -50.2764 iterations 1
Cbc0038I Pass  54: suminf.    0.87513 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  55: suminf.    1.11257 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  56: suminf.    0.82152 (4) obj. -50.2764 iterations 3
Cbc0038I Pass  57: suminf.    0.84025 (4) obj. -50.2764 iterations 5
Cbc0038I Pass  58: suminf.    0.83043 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  59: suminf.    1.31327 (7) obj. -50.2764 iterations 6
Cbc0038I Pass  60: suminf.    1.26309 (6) obj. -50.2764 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -34.7831 - took 0.09 seconds
Cbc0012I Integer solution of -34.783057 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 38 rows 23 columns
Cbc0031I 11 added rows had average density of 24.909091
Cbc0013I At root node, 11 cuts changed objective from -98.243964 to -60.191489 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1628 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 814 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -37.531467 found by rounding after 2915 iterations and 3 nodes (0.26 seconds)
Cbc0012I Integer solution of -38.389967 found by DiveCoefficient after 2915 iterations and 3 nodes (0.26 seconds)
Cbc0001I Search completed - best objective -38.38996700000001, took 3082 iterations and 8 nodes (0.27 seconds)
Cbc0032I Strong branching done 110 times (1573 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-8) rows, 56 (-4) columns and 555 (-57) elements
Clp1000I sum of infeasibilities 3.15372e-09 - average 5.84021e-11, 43 fixed columns
Coin0506I Presolve 12 (-42) rows, 13 (-43) columns and 44 (-511) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 35.083344
Clp0000I Optimal - objective value 35.083344
Coin0511I After Postsolve, objective 35.083344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2200595 - largest nonzero change 2.6136232e-05 ( 0.002215676%) - largest zero change 2.8387211e-05
Clp0000I Optimal - objective value 128.11517
Clp0000I Optimal - objective value 128.11517
Clp0000I Optimal - objective value 128.11517
Coin0511I After Postsolve, objective 128.11517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 128.1151748 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 56 columns (56 integer (56 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.012%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 6.25282
Cbc0038I Pass   1: suminf.    3.02688 (17) obj. -71.0831 iterations 10
Cbc0038I Pass   2: suminf.    3.02688 (17) obj. -71.0831 iterations 1
Cbc0038I Pass   3: suminf.    0.12132 (2) obj. -5.53141 iterations 15
Cbc0038I Solution found of 4.80682
Cbc0038I Rounding solution of -5.30881 is better than previous of 4.80682

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -5.30881 to -25.3275 (0.01 seconds)
Cbc0038I Round again with cutoff of -34.1467
Cbc0038I Pass   4: suminf.    3.02688 (17) obj. -71.0831 iterations 0
Cbc0038I Pass   5: suminf.    3.02688 (17) obj. -71.0831 iterations 3
Cbc0038I Pass   6: suminf.    1.07954 (8) obj. -34.1467 iterations 10
Cbc0038I Pass   7: suminf.    0.86131 (5) obj. -34.1467 iterations 13
Cbc0038I Pass   8: suminf.    0.66134 (4) obj. -40.0691 iterations 1
Cbc0038I Pass   9: suminf.    0.44686 (1) obj. -34.1467 iterations 4
Cbc0038I Pass  10: suminf.    0.38710 (1) obj. -36.4266 iterations 1
Cbc0038I Pass  11: suminf.    1.00363 (4) obj. -41.7256 iterations 17
Cbc0038I Pass  12: suminf.    1.00363 (4) obj. -41.7256 iterations 2
Cbc0038I Pass  13: suminf.    0.78634 (5) obj. -34.1467 iterations 9
Cbc0038I Pass  14: suminf.    0.78634 (5) obj. -34.1467 iterations 0
Cbc0038I Pass  15: suminf.    0.44187 (2) obj. -34.1467 iterations 6
Cbc0038I Pass  16: suminf.    0.43613 (2) obj. -34.1467 iterations 4
Cbc0038I Pass  17: suminf.    0.69252 (2) obj. -34.1467 iterations 2
Cbc0038I Pass  18: suminf.    1.62882 (5) obj. -37.052 iterations 12
Cbc0038I Pass  19: suminf.    1.62882 (5) obj. -37.052 iterations 3
Cbc0038I Pass  20: suminf.    0.69720 (4) obj. -34.1467 iterations 6
Cbc0038I Pass  21: suminf.    0.64705 (4) obj. -34.1467 iterations 1
Cbc0038I Pass  22: suminf.    0.41012 (3) obj. -34.1467 iterations 5
Cbc0038I Pass  23: suminf.    0.41012 (3) obj. -34.1467 iterations 1
Cbc0038I Pass  24: suminf.    0.54269 (3) obj. -40.2034 iterations 2
Cbc0038I Pass  25: suminf.    0.38435 (2) obj. -34.1467 iterations 3
Cbc0038I Pass  26: suminf.    0.41012 (3) obj. -34.1467 iterations 5
Cbc0038I Pass  27: suminf.    2.14766 (10) obj. -38.3028 iterations 17
Cbc0038I Pass  28: suminf.    1.73781 (8) obj. -34.1467 iterations 4
Cbc0038I Pass  29: suminf.    0.39053 (2) obj. -34.1467 iterations 8
Cbc0038I Pass  30: suminf.    0.20654 (1) obj. -34.1467 iterations 2
Cbc0038I Pass  31: suminf.    0.29032 (1) obj. -37.3428 iterations 1
Cbc0038I Pass  32: suminf.    2.18377 (10) obj. -35.4549 iterations 26
Cbc0038I Pass  33: suminf.    2.18377 (10) obj. -35.4549 iterations 1
Cbc0038I Rounding solution of -33.7913 is better than previous of -25.3275

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -33.7913 to -36.6296 (0.02 seconds)
Cbc0038I Round again with cutoff of -52.0075
Cbc0038I Pass  33: suminf.    3.02688 (17) obj. -71.0831 iterations 0
Cbc0038I Pass  34: suminf.    3.02688 (17) obj. -71.0831 iterations 3
Cbc0038I Pass  35: suminf.    1.83246 (12) obj. -52.0075 iterations 28
Cbc0038I Pass  36: suminf.    1.27634 (11) obj. -52.0075 iterations 2
Cbc0038I Pass  37: suminf.    1.27634 (11) obj. -52.0075 iterations 0
Cbc0038I Pass  38: suminf.    0.88655 (3) obj. -52.0075 iterations 13
Cbc0038I Pass  39: suminf.    0.88655 (3) obj. -52.0075 iterations 0
Cbc0038I Pass  40: suminf.    1.25352 (4) obj. -52.0075 iterations 4
Cbc0038I Pass  41: suminf.    1.19830 (3) obj. -52.0075 iterations 1
Cbc0038I Pass  42: suminf.    1.26653 (4) obj. -52.0075 iterations 2
Cbc0038I Pass  43: suminf.    1.15158 (3) obj. -52.0075 iterations 1
Cbc0038I Pass  44: suminf.    2.22191 (7) obj. -55.3898 iterations 14
Cbc0038I Pass  45: suminf.    2.22191 (7) obj. -55.3898 iterations 6
Cbc0038I Pass  46: suminf.    1.94244 (7) obj. -52.0075 iterations 12
Cbc0038I Pass  47: suminf.    1.94244 (7) obj. -52.0075 iterations 0
Cbc0038I Pass  48: suminf.    1.24415 (4) obj. -52.0075 iterations 5
Cbc0038I Pass  49: suminf.    1.24415 (4) obj. -52.0075 iterations 1
Cbc0038I Pass  50: suminf.    1.31541 (4) obj. -52.0075 iterations 2
Cbc0038I Pass  51: suminf.    0.89828 (4) obj. -52.0075 iterations 2
Cbc0038I Pass  52: suminf.    0.88737 (3) obj. -52.0075 iterations 1
Cbc0038I Pass  53: suminf.    1.04475 (4) obj. -52.0075 iterations 2
Cbc0038I Pass  54: suminf.    1.00198 (3) obj. -52.0075 iterations 1
Cbc0038I Pass  55: suminf.    1.62411 (7) obj. -56.7364 iterations 11
Cbc0038I Pass  56: suminf.    1.62411 (7) obj. -56.7364 iterations 1
Cbc0038I Pass  57: suminf.    1.66073 (7) obj. -52.0075 iterations 13
Cbc0038I Pass  58: suminf.    1.09328 (8) obj. -52.0075 iterations 2
Cbc0038I Pass  59: suminf.    1.09328 (8) obj. -52.0075 iterations 0
Cbc0038I Pass  60: suminf.    1.31282 (5) obj. -52.0075 iterations 6
Cbc0038I Pass  61: suminf.    1.31282 (5) obj. -52.0075 iterations 0
Cbc0038I Pass  62: suminf.    1.21906 (3) obj. -52.0075 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -36.6296 - took 0.02 seconds
Cbc0012I Integer solution of -36.629577 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 54 rows 56 columns, reduced to 6 rows 8 columns
Cbc0031I 17 added rows had average density of 22.882353
Cbc0013I At root node, 17 cuts changed objective from -113.51856 to -43.704344 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1514 row cuts average 4.3 elements, 11 column cuts (11 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 686 row cuts average 40.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 90 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 65 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 298 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 224 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.646 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.629577 best solution, best possible -43.704344 (1.38 seconds)
Cbc0004I Integer solution of -38.389967 found after 1867 iterations and 2 nodes (1.40 seconds)
Cbc0001I Search completed - best objective -38.38996700000001, took 1936 iterations and 4 nodes (1.41 seconds)
Cbc0032I Strong branching done 72 times (874 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 164 (-13) elements
Clp1000I sum of infeasibilities 0.00027201 - average 4.85732e-06, 3 fixed columns
Coin0506I Presolve 47 (-9) rows, 27 (-3) columns and 140 (-24) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 98.243964
Clp0000I Optimal - objective value 98.243964
Coin0511I After Postsolve, objective 98.243964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.243964
Clp0000I Optimal - objective value 98.243964
Clp0000I Optimal - objective value 98.243964
Coin0511I After Postsolve, objective 98.243964, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.24396439 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.169%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.74435
Cbc0038I Pass   1: suminf.    0.08065 (1) obj. -25.8857 iterations 20
Cbc0038I Solution found of 9.18696
Cbc0038I Relaxing continuous gives 9.18696
Cbc0038I Rounding solution of -14.9347 is better than previous of 9.18696

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -14.9347 to -31.6223 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.2845
Cbc0038I Pass   2: suminf.    0.44329 (3) obj. -38.2845 iterations 2
Cbc0038I Pass   3: suminf.    0.51422 (5) obj. -38.2845 iterations 6
Cbc0038I Pass   4: suminf.    0.43939 (3) obj. -38.2845 iterations 2
Cbc0038I Pass   5: suminf.    0.64953 (2) obj. -38.2845 iterations 6
Cbc0038I Pass   6: suminf.    0.43540 (3) obj. -38.2845 iterations 3
Cbc0038I Pass   7: suminf.    0.64953 (2) obj. -38.2845 iterations 3
Cbc0038I Pass   8: suminf.    2.79336 (8) obj. -38.2845 iterations 12
Cbc0038I Pass   9: suminf.    1.42891 (6) obj. -38.2845 iterations 7
Cbc0038I Pass  10: suminf.    0.65253 (4) obj. -38.2845 iterations 10
Cbc0038I Pass  11: suminf.    0.65253 (4) obj. -38.2845 iterations 1
Cbc0038I Pass  12: suminf.    0.51422 (5) obj. -38.2845 iterations 14
Cbc0038I Pass  13: suminf.    0.43939 (3) obj. -38.2845 iterations 2
Cbc0038I Pass  14: suminf.    0.64953 (2) obj. -38.2845 iterations 6
Cbc0038I Pass  15: suminf.    0.43540 (3) obj. -38.2845 iterations 3
Cbc0038I Pass  16: suminf.    0.64953 (2) obj. -38.2845 iterations 3
Cbc0038I Pass  17: suminf.    1.14370 (4) obj. -38.2845 iterations 10
Cbc0038I Pass  18: suminf.    0.48050 (2) obj. -38.2845 iterations 7
Cbc0038I Pass  19: suminf.    0.44424 (3) obj. -38.2845 iterations 2
Cbc0038I Pass  20: suminf.    0.44424 (3) obj. -38.2845 iterations 0
Cbc0038I Pass  21: suminf.    0.87857 (2) obj. -38.2845 iterations 3
Cbc0038I Pass  22: suminf.    0.87857 (2) obj. -38.2845 iterations 0
Cbc0038I Pass  23: suminf.    2.93335 (11) obj. -38.2845 iterations 13
Cbc0038I Pass  24: suminf.    1.14953 (5) obj. -38.2845 iterations 8
Cbc0038I Pass  25: suminf.    0.76262 (5) obj. -38.2845 iterations 6
Cbc0038I Pass  26: suminf.    0.76262 (5) obj. -38.2845 iterations 0
Cbc0038I Pass  27: suminf.    0.71630 (3) obj. -38.2845 iterations 11
Cbc0038I Pass  28: suminf.    0.71630 (3) obj. -38.2845 iterations 0
Cbc0038I Pass  29: suminf.    0.44424 (3) obj. -38.2845 iterations 4
Cbc0038I Pass  30: suminf.    0.87857 (2) obj. -38.2845 iterations 3
Cbc0038I Pass  31: suminf.    0.87857 (2) obj. -38.2845 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -31.6223 to -34.7831 (0.05 seconds)
Cbc0038I Round again with cutoff of -50.2764
Cbc0038I Pass  31: suminf.    1.13928 (5) obj. -50.2764 iterations 3
Cbc0038I Pass  32: suminf.    1.00330 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  33: suminf.    0.81592 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  34: suminf.    1.24927 (5) obj. -50.2764 iterations 5
Cbc0038I Pass  35: suminf.    1.10335 (6) obj. -50.2764 iterations 2
Cbc0038I Pass  36: suminf.    0.99807 (5) obj. -50.2764 iterations 7
Cbc0038I Pass  37: suminf.    0.83043 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  38: suminf.    1.31327 (7) obj. -50.2764 iterations 6
Cbc0038I Pass  39: suminf.    1.26309 (6) obj. -50.2764 iterations 1
Cbc0038I Pass  40: suminf.    0.87513 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  41: suminf.    1.11257 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  42: suminf.    0.82152 (4) obj. -50.2764 iterations 3
Cbc0038I Pass  43: suminf.    0.84025 (4) obj. -50.2764 iterations 5
Cbc0038I Pass  44: suminf.    0.83043 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  45: suminf.    1.31327 (7) obj. -50.2764 iterations 6
Cbc0038I Pass  46: suminf.    1.26309 (6) obj. -50.2764 iterations 1
Cbc0038I Pass  47: suminf.    0.87513 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  48: suminf.    1.11257 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  49: suminf.    0.82152 (4) obj. -50.2764 iterations 3
Cbc0038I Pass  50: suminf.    0.84025 (4) obj. -50.2764 iterations 5
Cbc0038I Pass  51: suminf.    0.83043 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  52: suminf.    1.31327 (7) obj. -50.2764 iterations 6
Cbc0038I Pass  53: suminf.    1.26309 (6) obj. -50.2764 iterations 1
Cbc0038I Pass  54: suminf.    0.87513 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  55: suminf.    1.11257 (4) obj. -50.2764 iterations 7
Cbc0038I Pass  56: suminf.    0.82152 (4) obj. -50.2764 iterations 3
Cbc0038I Pass  57: suminf.    0.84025 (4) obj. -50.2764 iterations 5
Cbc0038I Pass  58: suminf.    0.83043 (4) obj. -50.2764 iterations 4
Cbc0038I Pass  59: suminf.    1.31327 (7) obj. -50.2764 iterations 6
Cbc0038I Pass  60: suminf.    1.26309 (6) obj. -50.2764 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -34.7831 - took 0.06 seconds
Cbc0012I Integer solution of -34.783057 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 38 rows 23 columns
Cbc0031I 11 added rows had average density of 24.909091
Cbc0013I At root node, 11 cuts changed objective from -98.243964 to -60.191489 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1628 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 814 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -37.531467 found by rounding after 2915 iterations and 3 nodes (0.30 seconds)
Cbc0012I Integer solution of -38.389967 found by DiveCoefficient after 2915 iterations and 3 nodes (0.30 seconds)
Cbc0001I Search completed - best objective -38.38996700000001, took 3082 iterations and 8 nodes (0.31 seconds)
Cbc0032I Strong branching done 110 times (1573 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 56 (-5) columns and 555 (-58) elements
Clp1000I sum of infeasibilities 3.15372e-09 - average 5.84021e-11, 43 fixed columns
Coin0506I Presolve 12 (-42) rows, 13 (-43) columns and 44 (-511) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 35.083344
Clp0000I Optimal - objective value 35.083344
Coin0511I After Postsolve, objective 35.083344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2200595 - largest nonzero change 2.6136232e-05 ( 0.002215676%) - largest zero change 2.8387211e-05
Clp0000I Optimal - objective value 128.11517
Clp0000I Optimal - objective value 128.11517
Clp0000I Optimal - objective value 128.11517
Coin0511I After Postsolve, objective 128.11517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 128.1151748 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 56 columns (56 integer (56 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.012%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 6.25282
Cbc0038I Pass   1: suminf.    3.02688 (17) obj. -71.0831 iterations 10
Cbc0038I Pass   2: suminf.    3.02688 (17) obj. -71.0831 iterations 1
Cbc0038I Pass   3: suminf.    0.12132 (2) obj. -5.53141 iterations 15
Cbc0038I Solution found of 4.80682
Cbc0038I Rounding solution of -5.30881 is better than previous of 4.80682

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -5.30881 to -25.3275 (0.01 seconds)
Cbc0038I Round again with cutoff of -34.1467
Cbc0038I Pass   4: suminf.    3.02688 (17) obj. -71.0831 iterations 0
Cbc0038I Pass   5: suminf.    3.02688 (17) obj. -71.0831 iterations 3
Cbc0038I Pass   6: suminf.    1.07954 (8) obj. -34.1467 iterations 10
Cbc0038I Pass   7: suminf.    0.86131 (5) obj. -34.1467 iterations 13
Cbc0038I Pass   8: suminf.    0.66134 (4) obj. -40.0691 iterations 1
Cbc0038I Pass   9: suminf.    0.44686 (1) obj. -34.1467 iterations 4
Cbc0038I Pass  10: suminf.    0.38710 (1) obj. -36.4266 iterations 1
Cbc0038I Pass  11: suminf.    1.00363 (4) obj. -41.7256 iterations 17
Cbc0038I Pass  12: suminf.    1.00363 (4) obj. -41.7256 iterations 2
Cbc0038I Pass  13: suminf.    0.78634 (5) obj. -34.1467 iterations 9
Cbc0038I Pass  14: suminf.    0.78634 (5) obj. -34.1467 iterations 0
Cbc0038I Pass  15: suminf.    0.44187 (2) obj. -34.1467 iterations 6
Cbc0038I Pass  16: suminf.    0.43613 (2) obj. -34.1467 iterations 4
Cbc0038I Pass  17: suminf.    0.69252 (2) obj. -34.1467 iterations 2
Cbc0038I Pass  18: suminf.    1.62882 (5) obj. -37.052 iterations 12
Cbc0038I Pass  19: suminf.    1.62882 (5) obj. -37.052 iterations 3
Cbc0038I Pass  20: suminf.    0.69720 (4) obj. -34.1467 iterations 6
Cbc0038I Pass  21: suminf.    0.64705 (4) obj. -34.1467 iterations 1
Cbc0038I Pass  22: suminf.    0.41012 (3) obj. -34.1467 iterations 5
Cbc0038I Pass  23: suminf.    0.41012 (3) obj. -34.1467 iterations 1
Cbc0038I Pass  24: suminf.    0.54269 (3) obj. -40.2034 iterations 2
Cbc0038I Pass  25: suminf.    0.38435 (2) obj. -34.1467 iterations 3
Cbc0038I Pass  26: suminf.    0.41012 (3) obj. -34.1467 iterations 5
Cbc0038I Pass  27: suminf.    2.14766 (10) obj. -38.3028 iterations 17
Cbc0038I Pass  28: suminf.    1.73781 (8) obj. -34.1467 iterations 4
Cbc0038I Pass  29: suminf.    0.39053 (2) obj. -34.1467 iterations 8
Cbc0038I Pass  30: suminf.    0.20654 (1) obj. -34.1467 iterations 2
Cbc0038I Pass  31: suminf.    0.29032 (1) obj. -37.3428 iterations 1
Cbc0038I Pass  32: suminf.    2.18377 (10) obj. -35.4549 iterations 26
Cbc0038I Pass  33: suminf.    2.18377 (10) obj. -35.4549 iterations 1
Cbc0038I Rounding solution of -33.7913 is better than previous of -25.3275

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -33.7913 to -36.6296 (0.02 seconds)
Cbc0038I Round again with cutoff of -52.0075
Cbc0038I Pass  33: suminf.    3.02688 (17) obj. -71.0831 iterations 0
Cbc0038I Pass  34: suminf.    3.02688 (17) obj. -71.0831 iterations 3
Cbc0038I Pass  35: suminf.    1.83246 (12) obj. -52.0075 iterations 28
Cbc0038I Pass  36: suminf.    1.27634 (11) obj. -52.0075 iterations 2
Cbc0038I Pass  37: suminf.    1.27634 (11) obj. -52.0075 iterations 0
Cbc0038I Pass  38: suminf.    0.88655 (3) obj. -52.0075 iterations 13
Cbc0038I Pass  39: suminf.    0.88655 (3) obj. -52.0075 iterations 0
Cbc0038I Pass  40: suminf.    1.25352 (4) obj. -52.0075 iterations 4
Cbc0038I Pass  41: suminf.    1.19830 (3) obj. -52.0075 iterations 1
Cbc0038I Pass  42: suminf.    1.26653 (4) obj. -52.0075 iterations 2
Cbc0038I Pass  43: suminf.    1.15158 (3) obj. -52.0075 iterations 1
Cbc0038I Pass  44: suminf.    2.22191 (7) obj. -55.3898 iterations 14
Cbc0038I Pass  45: suminf.    2.22191 (7) obj. -55.3898 iterations 6
Cbc0038I Pass  46: suminf.    1.94244 (7) obj. -52.0075 iterations 12
Cbc0038I Pass  47: suminf.    1.94244 (7) obj. -52.0075 iterations 0
Cbc0038I Pass  48: suminf.    1.24415 (4) obj. -52.0075 iterations 5
Cbc0038I Pass  49: suminf.    1.24415 (4) obj. -52.0075 iterations 1
Cbc0038I Pass  50: suminf.    1.31541 (4) obj. -52.0075 iterations 2
Cbc0038I Pass  51: suminf.    0.89828 (4) obj. -52.0075 iterations 2
Cbc0038I Pass  52: suminf.    0.88737 (3) obj. -52.0075 iterations 1
Cbc0038I Pass  53: suminf.    1.04475 (4) obj. -52.0075 iterations 2
Cbc0038I Pass  54: suminf.    1.00198 (3) obj. -52.0075 iterations 1
Cbc0038I Pass  55: suminf.    1.62411 (7) obj. -56.7364 iterations 11
Cbc0038I Pass  56: suminf.    1.62411 (7) obj. -56.7364 iterations 1
Cbc0038I Pass  57: suminf.    1.66073 (7) obj. -52.0075 iterations 13
Cbc0038I Pass  58: suminf.    1.09328 (8) obj. -52.0075 iterations 2
Cbc0038I Pass  59: suminf.    1.09328 (8) obj. -52.0075 iterations 0
Cbc0038I Pass  60: suminf.    1.31282 (5) obj. -52.0075 iterations 6
Cbc0038I Pass  61: suminf.    1.31282 (5) obj. -52.0075 iterations 0
Cbc0038I Pass  62: suminf.    1.21906 (3) obj. -52.0075 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -36.6296 - took 0.02 seconds
Cbc0012I Integer solution of -36.629577 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 54 rows 56 columns, reduced to 6 rows 8 columns
Cbc0031I 17 added rows had average density of 22.882353
Cbc0013I At root node, 17 cuts changed objective from -113.51856 to -43.704344 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1514 row cuts average 4.3 elements, 11 column cuts (11 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 686 row cuts average 40.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 90 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 65 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 298 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 224 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.814 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -36.629577 best solution, best possible -43.704344 (1.76 seconds)
Cbc0004I Integer solution of -38.389967 found after 1867 iterations and 2 nodes (1.79 seconds)
Cbc0001I Search completed - best objective -38.38996700000001, took 1936 iterations and 4 nodes (1.80 seconds)
Cbc0032I Strong branching done 72 times (874 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.80

