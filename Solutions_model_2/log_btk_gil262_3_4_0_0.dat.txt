Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 494 (-33) rows, 259 (-5) columns and 1477 (-68) elements
Clp1000I sum of infeasibilities 1.90444e-06 - average 3.85515e-09, 193 fixed columns
Coin0506I Presolve 109 (-385) rows, 64 (-195) columns and 336 (-1141) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Coin0511I After Postsolve, objective 304.08608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13392346 - largest nonzero change 0 ( 0%) - largest zero change 2.9759554e-05
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Coin0511I After Postsolve, objective 304.08608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 304.0860825 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 494 rows, 259 columns (258 integer (258 of which binary)) and 1477 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 9.87132
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -106.719 iterations 96
Cbc0038I Solution found of -106.719
Cbc0038I Relaxing continuous gives -106.719
Cbc0038I Rounding solution of -203.042 is better than previous of -106.719

Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 259 columns, reduced to 58 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -203.042 to -227.505 (0.04 seconds)
Cbc0038I Round again with cutoff of -235.163
Cbc0038I Pass   2: suminf.    2.22576 (9) obj. -235.163 iterations 25
Cbc0038I Pass   3: suminf.    1.93521 (9) obj. -235.163 iterations 16
Cbc0038I Pass   4: suminf.    1.33243 (6) obj. -235.163 iterations 41
Cbc0038I Pass   5: suminf.    0.92709 (6) obj. -235.163 iterations 7
Cbc0038I Pass   6: suminf.    2.77830 (8) obj. -235.163 iterations 19
Cbc0038I Pass   7: suminf.    2.77830 (8) obj. -235.163 iterations 0
Cbc0038I Pass   8: suminf.    1.35091 (8) obj. -235.163 iterations 26
Cbc0038I Pass   9: suminf.    5.27594 (14) obj. -235.163 iterations 51
Cbc0038I Pass  10: suminf.    3.44366 (13) obj. -235.163 iterations 30
Cbc0038I Pass  11: suminf.    2.40083 (9) obj. -235.163 iterations 44
Cbc0038I Pass  12: suminf.    2.31589 (11) obj. -235.163 iterations 16
Cbc0038I Pass  13: suminf.    4.00341 (11) obj. -235.163 iterations 36
Cbc0038I Pass  14: suminf.    3.41393 (12) obj. -235.163 iterations 33
Cbc0038I Pass  15: suminf.    1.78116 (10) obj. -235.163 iterations 35
Cbc0038I Pass  16: suminf.    1.71047 (8) obj. -235.163 iterations 12
Cbc0038I Pass  17: suminf.    2.80371 (8) obj. -235.163 iterations 24
Cbc0038I Pass  18: suminf.    2.44094 (8) obj. -235.163 iterations 8
Cbc0038I Pass  19: suminf.    2.05258 (7) obj. -235.163 iterations 16
Cbc0038I Pass  20: suminf.    2.33688 (6) obj. -235.163 iterations 20
Cbc0038I Pass  21: suminf.    1.72628 (6) obj. -235.163 iterations 40
Cbc0038I Pass  22: suminf.    1.53228 (10) obj. -235.163 iterations 9
Cbc0038I Pass  23: suminf.    1.41436 (7) obj. -235.163 iterations 12
Cbc0038I Pass  24: suminf.    2.54088 (7) obj. -235.163 iterations 25
Cbc0038I Pass  25: suminf.    1.88282 (6) obj. -235.163 iterations 20
Cbc0038I Pass  26: suminf.    2.15646 (6) obj. -235.163 iterations 25
Cbc0038I Pass  27: suminf.    1.72628 (6) obj. -235.163 iterations 8
Cbc0038I Pass  28: suminf.    1.53228 (10) obj. -235.163 iterations 9
Cbc0038I Pass  29: suminf.    1.41436 (7) obj. -235.163 iterations 11
Cbc0038I Pass  30: suminf.    2.54088 (7) obj. -235.163 iterations 24
Cbc0038I Pass  31: suminf.    1.88282 (6) obj. -235.163 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 259 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -227.505 - took 0.08 seconds
Cbc0012I Integer solution of -227.5048 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 494 rows 259 columns, reduced to 58 rows 35 columns
Cbc0031I 25 added rows had average density of 111.84
Cbc0013I At root node, 25 cuts changed objective from -304.08608 to -274.46269 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7782 row cuts average 3.3 elements, 5 column cuts (5 active)  in 0.363 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2015 row cuts average 246.9 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 242.8 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -227.5048 best solution, best possible -274.46216 (1.86 seconds)
Cbc0012I Integer solution of -230.4285 found by DiveCoefficient after 6444 iterations and 11 nodes (2.09 seconds)
Cbc0038I Full problem 494 rows 259 columns, reduced to 4 rows 8 columns
Cbc0038I Full problem 494 rows 259 columns, reduced to 14 rows 14 columns
Cbc0012I Integer solution of -234.129 found by rounding after 8100 iterations and 100 nodes (2.28 seconds)
Cbc0001I Search completed - best objective -234.129, took 10039 iterations and 148 nodes (2.46 seconds)
Cbc0032I Strong branching done 800 times (12953 iterations), fathomed 39 nodes and fixed 87 variables
Cbc0035I Maximum depth 17, 870 variables fixed on reduced cost
Total time (CPU seconds):       2.41   (Wallclock seconds):       2.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 361 (-165) rows, 383 (-141) columns and 18144 (-17592) elements
Clp1000I sum of infeasibilities 5.92912e-06 - average 1.64242e-08, 286 fixed columns
Coin0506I Presolve 80 (-281) rows, 95 (-288) columns and 340 (-17804) elements
Clp0006I 0  Obj 169.25005 Dual inf 8041.8807 (94)
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 0.22798251 - largest nonzero change 2.9472349e-05 ( 0.0025820745%) - largest zero change 2.9151495e-05
Clp0000I Optimal - objective value 181.2227
Clp0000I Optimal - objective value 181.2227
Coin0511I After Postsolve, objective 181.2227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 181.2227 Dual inf 570.25497 (136)
Clp0014I Perturbing problem by 0.001% of 1.7298573 - largest nonzero change 2.7237734e-05 ( 0.0025988751%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 365.51224
Clp0000I Optimal - objective value 365.51224
Clp0000I Optimal - objective value 365.51224
Coin0511I After Postsolve, objective 365.51224, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 365.5122434 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0004I processed model has 361 rows, 383 columns (383 integer (383 of which binary)) and 18144 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.017%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 127 integers unsatisfied sum - 9.99124
Cbc0038I Pass   1: suminf.    3.97723 (105) obj. -290.75 iterations 64
Cbc0038I Pass   2: suminf.    3.97723 (105) obj. -290.75 iterations 1
Cbc0038I Pass   3: suminf.    2.99598 (83) obj. -241.078 iterations 22
Cbc0038I Pass   4: suminf.    2.36708 (68) obj. -221.916 iterations 15
Cbc0038I Pass   5: suminf.    1.36677 (43) obj. -191.198 iterations 25
Cbc0038I Pass   6: suminf.    0.94790 (32) obj. -179.655 iterations 11
Cbc0038I Pass   7: suminf.    0.46450 (18) obj. -165.172 iterations 14
Cbc0038I Solution found of -145.694
Cbc0038I Rounding solution of -189.024 is better than previous of -145.694

Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 383 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -206.66
Cbc0038I Pass   8: suminf.    3.97723 (105) obj. -290.75 iterations 0
Cbc0038I Pass   9: suminf.    3.97723 (105) obj. -290.75 iterations 1
Cbc0038I Pass  10: suminf.    3.03878 (84) obj. -243.949 iterations 21
Cbc0038I Pass  11: suminf.    2.07994 (61) obj. -212.327 iterations 23
Cbc0038I Pass  12: suminf.    1.65544 (35) obj. -206.66 iterations 37
Cbc0038I Pass  13: suminf.    0.64918 (9) obj. -206.66 iterations 51
Cbc0038I Pass  14: suminf.    0.26340 (8) obj. -206.66 iterations 18
Cbc0038I Pass  15: suminf.    0.53149 (3) obj. -206.66 iterations 25
Cbc0038I Pass  16: suminf.    0.53149 (3) obj. -206.66 iterations 10
Cbc0038I Pass  17: suminf.    0.59476 (3) obj. -206.66 iterations 11
Cbc0038I Pass  18: suminf.    0.05039 (1) obj. -212.313 iterations 2
Cbc0038I Pass  19: suminf.    1.79090 (26) obj. -206.66 iterations 62
Cbc0038I Pass  20: suminf.    1.49627 (21) obj. -206.66 iterations 21
Cbc0038I Pass  21: suminf.    0.89312 (13) obj. -206.66 iterations 40
Cbc0038I Pass  22: suminf.    0.89312 (13) obj. -206.66 iterations 6
Cbc0038I Pass  23: suminf.    0.70831 (4) obj. -206.66 iterations 42
Cbc0038I Pass  24: suminf.    0.15611 (3) obj. -206.66 iterations 53
Cbc0038I Pass  25: suminf.    0.62700 (4) obj. -206.66 iterations 28
Cbc0038I Pass  26: suminf.    1.56306 (27) obj. -206.66 iterations 69
Cbc0038I Pass  27: suminf.    1.09414 (27) obj. -206.66 iterations 24
Cbc0038I Pass  28: suminf.    2.37894 (15) obj. -206.66 iterations 41
Cbc0038I Pass  29: suminf.    1.49439 (11) obj. -206.66 iterations 10
Cbc0038I Pass  30: suminf.    0.52876 (4) obj. -206.66 iterations 33
Cbc0038I Pass  31: suminf.    0.18027 (3) obj. -206.66 iterations 16
Cbc0038I Pass  32: suminf.    0.32948 (4) obj. -206.66 iterations 25
Cbc0038I Pass  33: suminf.    0.28715 (4) obj. -206.66 iterations 13
Cbc0038I Pass  34: suminf.    0.53311 (4) obj. -206.66 iterations 26
Cbc0038I Pass  35: suminf.    0.11359 (3) obj. -206.66 iterations 17
Cbc0038I Pass  36: suminf.    1.73259 (16) obj. -206.66 iterations 61
Cbc0038I Pass  37: suminf.    1.73259 (16) obj. -206.66 iterations 10
Cbc0038I Rounding solution of -198.069 is better than previous of -189.024

Cbc0038I Before mini branch and bound, 232 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 383 columns, reduced to 135 rows 151 columns - 36 fixed gives 99, 115 - still too large
Cbc0038I Full problem 361 rows 383 columns, reduced to 19 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -198.069 to -200.558 (0.23 seconds)
Cbc0038I Round again with cutoff of -238.405
Cbc0038I Pass  37: suminf.    3.97723 (105) obj. -290.75 iterations 0
Cbc0038I Pass  38: suminf.    3.97723 (105) obj. -290.75 iterations 1
Cbc0038I Pass  39: suminf.    3.03878 (84) obj. -243.949 iterations 21
Cbc0038I Pass  40: suminf.    2.79706 (67) obj. -238.405 iterations 22
Cbc0038I Pass  41: suminf.    2.04902 (46) obj. -238.405 iterations 34
Cbc0038I Pass  42: suminf.    1.96712 (45) obj. -238.405 iterations 15
Cbc0038I Pass  43: suminf.    2.04128 (34) obj. -238.405 iterations 69
Cbc0038I Pass  44: suminf.    1.86968 (32) obj. -238.405 iterations 21
Cbc0038I Pass  45: suminf.    1.40776 (25) obj. -238.405 iterations 62
Cbc0038I Pass  46: suminf.    1.35617 (25) obj. -238.405 iterations 18
Cbc0038I Pass  47: suminf.    2.41696 (23) obj. -238.405 iterations 31
Cbc0038I Pass  48: suminf.    1.41189 (17) obj. -238.405 iterations 9
Cbc0038I Pass  49: suminf.    1.41189 (17) obj. -238.405 iterations 0
Cbc0038I Pass  50: suminf.    1.23225 (15) obj. -238.405 iterations 24
Cbc0038I Pass  51: suminf.    0.78130 (14) obj. -238.405 iterations 27
Cbc0038I Pass  52: suminf.    1.10494 (19) obj. -238.405 iterations 43
Cbc0038I Pass  53: suminf.    1.10494 (19) obj. -238.405 iterations 13
Cbc0038I Pass  54: suminf.    3.02538 (16) obj. -238.405 iterations 45
Cbc0038I Pass  55: suminf.    3.02538 (16) obj. -238.405 iterations 4
Cbc0038I Pass  56: suminf.    2.40308 (15) obj. -238.405 iterations 29
Cbc0038I Pass  57: suminf.    2.35965 (16) obj. -238.405 iterations 8
Cbc0038I Pass  58: suminf.    2.62393 (16) obj. -238.405 iterations 22
Cbc0038I Pass  59: suminf.    2.62393 (16) obj. -238.405 iterations 4
Cbc0038I Pass  60: suminf.    2.74815 (16) obj. -238.405 iterations 30
Cbc0038I Pass  61: suminf.    2.74815 (16) obj. -238.405 iterations 8
Cbc0038I Pass  62: suminf.    2.62393 (16) obj. -238.405 iterations 19
Cbc0038I Pass  63: suminf.    2.97146 (36) obj. -238.405 iterations 47
Cbc0038I Pass  64: suminf.    2.62668 (35) obj. -238.405 iterations 14
Cbc0038I Pass  65: suminf.    2.88320 (25) obj. -238.405 iterations 36
Cbc0038I Pass  66: suminf.    2.67304 (25) obj. -238.405 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 383 columns, reduced to 24 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -200.558 - took 0.21 seconds
Cbc0012I Integer solution of -200.5579 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 361 rows 383 columns, reduced to 15 rows 18 columns
Cbc0031I 136 added rows had average density of 51.602941
Cbc0013I At root node, 136 cuts changed objective from -365.38268 to -252.48635 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19648 row cuts average 2.0 elements, 0 column cuts (92 active)  in 0.481 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2863 row cuts average 344.6 elements, 0 column cuts (0 active)  in 1.117 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 681 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5585 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.608 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2835 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.688 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 544 row cuts average 158.9 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 202 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.318 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -200.5579 best solution, best possible -252.48635 (6.73 seconds)
Cbc0012I Integer solution of -210.7004 found by rounding after 8235 iterations and 1 nodes (6.76 seconds)
Cbc0012I Integer solution of -211.7437 found by DiveCoefficient after 8372 iterations and 1 nodes (6.81 seconds)
Cbc0012I Integer solution of -213.4188 found by rounding after 8374 iterations and 2 nodes (6.82 seconds)
Cbc0012I Integer solution of -221.4091 found by DiveCoefficient after 8406 iterations and 2 nodes (6.88 seconds)
Cbc0012I Integer solution of -224.8296 found by DiveCoefficient after 8464 iterations and 3 nodes (6.93 seconds)
Cbc0012I Integer solution of -225.2202 found by rounding after 8785 iterations and 20 nodes (7.26 seconds)
Cbc0012I Integer solution of -228.0958 found by rounding after 8867 iterations and 30 nodes (7.33 seconds)
Cbc0012I Integer solution of -228.5719 found by DiveCoefficient after 8966 iterations and 32 nodes (7.43 seconds)
Cbc0010I After 32 nodes, 4 on tree, -228.5719 best solution, best possible -252.48635 (7.44 seconds)
Cbc0012I Integer solution of -230.4285 found by rounding after 9025 iterations and 34 nodes (7.45 seconds)
Cbc0038I Full problem 361 rows 383 columns, reduced to 160 rows 170 columns
Cbc0012I Integer solution of -234.129 found by RINS after 9535 iterations and 41 nodes (9.56 seconds)
Cbc0010I After 41 nodes, 2 on tree, -234.129 best solution, best possible -251.61428 (9.56 seconds)
Cbc0010I After 44 nodes, 5 on tree, -234.129 best solution, best possible -251.61428 (10.35 seconds)
Cbc0010I After 57 nodes, 6 on tree, -234.129 best solution, best possible -251.61428 (11.08 seconds)
Cbc0038I Full problem 361 rows 383 columns, reduced to 38 rows 42 columns
Cbc0010I After 108 nodes, 7 on tree, -234.129 best solution, best possible -251.61428 (11.79 seconds)
Cbc0010I After 138 nodes, 3 on tree, -234.129 best solution, best possible -251.61428 (12.58 seconds)
Cbc0010I After 156 nodes, 8 on tree, -234.129 best solution, best possible -251.61428 (13.29 seconds)
Cbc0010I After 203 nodes, 7 on tree, -234.129 best solution, best possible -251.61428 (14.00 seconds)
Cbc0010I After 217 nodes, 4 on tree, -234.129 best solution, best possible -251.61428 (14.78 seconds)
Cbc0010I After 278 nodes, 11 on tree, -234.129 best solution, best possible -251.61428 (15.48 seconds)
Cbc0038I Full problem 361 rows 383 columns, reduced to 15 rows 21 columns
Cbc0010I After 354 nodes, 6 on tree, -234.129 best solution, best possible -251.61428 (16.18 seconds)
Cbc0001I Search completed - best objective -234.129, took 25838 iterations and 370 nodes (16.37 seconds)
Cbc0032I Strong branching done 2548 times (37836 iterations), fathomed 19 nodes and fixed 32 variables
Cbc0035I Maximum depth 32, 1714 variables fixed on reduced cost
Total time (CPU seconds):       15.81   (Wallclock seconds):       16.46

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 494 (-33) rows, 259 (-5) columns and 1477 (-68) elements
Clp1000I sum of infeasibilities 1.90444e-06 - average 3.85515e-09, 193 fixed columns
Coin0506I Presolve 109 (-385) rows, 64 (-195) columns and 336 (-1141) elements
Clp0029I End of values pass after 64 iterations
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Coin0511I After Postsolve, objective 304.08608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13392346 - largest nonzero change 0 ( 0%) - largest zero change 2.9759554e-05
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Clp0000I Optimal - objective value 304.08608
Coin0511I After Postsolve, objective 304.08608, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 304.0860825 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 494 rows, 259 columns (258 integer (258 of which binary)) and 1477 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 9.87132
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -106.719 iterations 96
Cbc0038I Solution found of -106.719
Cbc0038I Relaxing continuous gives -106.719
Cbc0038I Rounding solution of -203.042 is better than previous of -106.719

Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 259 columns, reduced to 58 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -203.042 to -227.505 (0.04 seconds)
Cbc0038I Round again with cutoff of -235.163
Cbc0038I Pass   2: suminf.    2.22576 (9) obj. -235.163 iterations 25
Cbc0038I Pass   3: suminf.    1.93521 (9) obj. -235.163 iterations 16
Cbc0038I Pass   4: suminf.    1.33243 (6) obj. -235.163 iterations 41
Cbc0038I Pass   5: suminf.    0.92709 (6) obj. -235.163 iterations 7
Cbc0038I Pass   6: suminf.    2.77830 (8) obj. -235.163 iterations 19
Cbc0038I Pass   7: suminf.    2.77830 (8) obj. -235.163 iterations 0
Cbc0038I Pass   8: suminf.    1.35091 (8) obj. -235.163 iterations 26
Cbc0038I Pass   9: suminf.    5.27594 (14) obj. -235.163 iterations 51
Cbc0038I Pass  10: suminf.    3.44366 (13) obj. -235.163 iterations 30
Cbc0038I Pass  11: suminf.    2.40083 (9) obj. -235.163 iterations 44
Cbc0038I Pass  12: suminf.    2.31589 (11) obj. -235.163 iterations 16
Cbc0038I Pass  13: suminf.    4.00341 (11) obj. -235.163 iterations 36
Cbc0038I Pass  14: suminf.    3.41393 (12) obj. -235.163 iterations 33
Cbc0038I Pass  15: suminf.    1.78116 (10) obj. -235.163 iterations 35
Cbc0038I Pass  16: suminf.    1.71047 (8) obj. -235.163 iterations 12
Cbc0038I Pass  17: suminf.    2.80371 (8) obj. -235.163 iterations 24
Cbc0038I Pass  18: suminf.    2.44094 (8) obj. -235.163 iterations 8
Cbc0038I Pass  19: suminf.    2.05258 (7) obj. -235.163 iterations 16
Cbc0038I Pass  20: suminf.    2.33688 (6) obj. -235.163 iterations 20
Cbc0038I Pass  21: suminf.    1.72628 (6) obj. -235.163 iterations 40
Cbc0038I Pass  22: suminf.    1.53228 (10) obj. -235.163 iterations 9
Cbc0038I Pass  23: suminf.    1.41436 (7) obj. -235.163 iterations 12
Cbc0038I Pass  24: suminf.    2.54088 (7) obj. -235.163 iterations 25
Cbc0038I Pass  25: suminf.    1.88282 (6) obj. -235.163 iterations 20
Cbc0038I Pass  26: suminf.    2.15646 (6) obj. -235.163 iterations 25
Cbc0038I Pass  27: suminf.    1.72628 (6) obj. -235.163 iterations 8
Cbc0038I Pass  28: suminf.    1.53228 (10) obj. -235.163 iterations 9
Cbc0038I Pass  29: suminf.    1.41436 (7) obj. -235.163 iterations 11
Cbc0038I Pass  30: suminf.    2.54088 (7) obj. -235.163 iterations 24
Cbc0038I Pass  31: suminf.    1.88282 (6) obj. -235.163 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 259 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -227.505 - took 0.08 seconds
Cbc0012I Integer solution of -227.5048 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 494 rows 259 columns, reduced to 58 rows 35 columns
Cbc0031I 25 added rows had average density of 111.84
Cbc0013I At root node, 25 cuts changed objective from -304.08608 to -274.46269 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7782 row cuts average 3.3 elements, 5 column cuts (5 active)  in 0.357 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2015 row cuts average 246.9 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 242.8 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -227.5048 best solution, best possible -274.46216 (1.85 seconds)
Cbc0012I Integer solution of -230.4285 found by DiveCoefficient after 6444 iterations and 11 nodes (2.09 seconds)
Cbc0038I Full problem 494 rows 259 columns, reduced to 4 rows 8 columns
Cbc0038I Full problem 494 rows 259 columns, reduced to 14 rows 14 columns
Cbc0012I Integer solution of -234.129 found by rounding after 8100 iterations and 100 nodes (2.27 seconds)
Cbc0001I Search completed - best objective -234.129, took 10039 iterations and 148 nodes (2.43 seconds)
Cbc0032I Strong branching done 800 times (12953 iterations), fathomed 39 nodes and fixed 87 variables
Cbc0035I Maximum depth 17, 870 variables fixed on reduced cost
Total time (CPU seconds):       2.39   (Wallclock seconds):       2.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 361 (-166) rows, 383 (-142) columns and 18144 (-17593) elements
Clp1000I sum of infeasibilities 5.92912e-06 - average 1.64242e-08, 286 fixed columns
Coin0506I Presolve 80 (-281) rows, 95 (-288) columns and 340 (-17804) elements
Clp0006I 0  Obj 169.25005 Dual inf 8041.8807 (94)
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 0.22798251 - largest nonzero change 2.9472349e-05 ( 0.0025820745%) - largest zero change 2.9151495e-05
Clp0000I Optimal - objective value 181.2227
Clp0000I Optimal - objective value 181.2227
Coin0511I After Postsolve, objective 181.2227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 181.2227 Dual inf 570.25497 (136)
Clp0014I Perturbing problem by 0.001% of 1.7298573 - largest nonzero change 2.7237734e-05 ( 0.0025988751%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 365.51224
Clp0000I Optimal - objective value 365.51224
Clp0000I Optimal - objective value 365.51224
Coin0511I After Postsolve, objective 365.51224, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 365.5122434 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 361 rows, 383 columns (383 integer (383 of which binary)) and 18144 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.017%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 127 integers unsatisfied sum - 9.99124
Cbc0038I Pass   1: suminf.    3.97723 (105) obj. -290.75 iterations 64
Cbc0038I Pass   2: suminf.    3.97723 (105) obj. -290.75 iterations 1
Cbc0038I Pass   3: suminf.    2.99598 (83) obj. -241.078 iterations 22
Cbc0038I Pass   4: suminf.    2.36708 (68) obj. -221.916 iterations 15
Cbc0038I Pass   5: suminf.    1.36677 (43) obj. -191.198 iterations 25
Cbc0038I Pass   6: suminf.    0.94790 (32) obj. -179.655 iterations 11
Cbc0038I Pass   7: suminf.    0.46450 (18) obj. -165.172 iterations 14
Cbc0038I Solution found of -145.694
Cbc0038I Rounding solution of -189.024 is better than previous of -145.694

Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 383 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -206.66
Cbc0038I Pass   8: suminf.    3.97723 (105) obj. -290.75 iterations 0
Cbc0038I Pass   9: suminf.    3.97723 (105) obj. -290.75 iterations 1
Cbc0038I Pass  10: suminf.    3.03878 (84) obj. -243.949 iterations 21
Cbc0038I Pass  11: suminf.    2.07994 (61) obj. -212.327 iterations 23
Cbc0038I Pass  12: suminf.    1.65544 (35) obj. -206.66 iterations 37
Cbc0038I Pass  13: suminf.    0.64918 (9) obj. -206.66 iterations 51
Cbc0038I Pass  14: suminf.    0.26340 (8) obj. -206.66 iterations 18
Cbc0038I Pass  15: suminf.    0.53149 (3) obj. -206.66 iterations 25
Cbc0038I Pass  16: suminf.    0.53149 (3) obj. -206.66 iterations 10
Cbc0038I Pass  17: suminf.    0.59476 (3) obj. -206.66 iterations 11
Cbc0038I Pass  18: suminf.    0.05039 (1) obj. -212.313 iterations 2
Cbc0038I Pass  19: suminf.    1.79090 (26) obj. -206.66 iterations 62
Cbc0038I Pass  20: suminf.    1.49627 (21) obj. -206.66 iterations 21
Cbc0038I Pass  21: suminf.    0.89312 (13) obj. -206.66 iterations 40
Cbc0038I Pass  22: suminf.    0.89312 (13) obj. -206.66 iterations 6
Cbc0038I Pass  23: suminf.    0.70831 (4) obj. -206.66 iterations 42
Cbc0038I Pass  24: suminf.    0.15611 (3) obj. -206.66 iterations 53
Cbc0038I Pass  25: suminf.    0.62700 (4) obj. -206.66 iterations 28
Cbc0038I Pass  26: suminf.    1.56306 (27) obj. -206.66 iterations 69
Cbc0038I Pass  27: suminf.    1.09414 (27) obj. -206.66 iterations 24
Cbc0038I Pass  28: suminf.    2.37894 (15) obj. -206.66 iterations 41
Cbc0038I Pass  29: suminf.    1.49439 (11) obj. -206.66 iterations 10
Cbc0038I Pass  30: suminf.    0.52876 (4) obj. -206.66 iterations 33
Cbc0038I Pass  31: suminf.    0.18027 (3) obj. -206.66 iterations 16
Cbc0038I Pass  32: suminf.    0.32948 (4) obj. -206.66 iterations 25
Cbc0038I Pass  33: suminf.    0.28715 (4) obj. -206.66 iterations 13
Cbc0038I Pass  34: suminf.    0.53311 (4) obj. -206.66 iterations 26
Cbc0038I Pass  35: suminf.    0.11359 (3) obj. -206.66 iterations 17
Cbc0038I Pass  36: suminf.    1.73259 (16) obj. -206.66 iterations 61
Cbc0038I Pass  37: suminf.    1.73259 (16) obj. -206.66 iterations 10
Cbc0038I Rounding solution of -198.069 is better than previous of -189.024

Cbc0038I Before mini branch and bound, 232 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 383 columns, reduced to 135 rows 151 columns - 36 fixed gives 99, 115 - still too large
Cbc0038I Full problem 361 rows 383 columns, reduced to 19 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -198.069 to -200.558 (0.23 seconds)
Cbc0038I Round again with cutoff of -238.405
Cbc0038I Pass  37: suminf.    3.97723 (105) obj. -290.75 iterations 0
Cbc0038I Pass  38: suminf.    3.97723 (105) obj. -290.75 iterations 1
Cbc0038I Pass  39: suminf.    3.03878 (84) obj. -243.949 iterations 21
Cbc0038I Pass  40: suminf.    2.79706 (67) obj. -238.405 iterations 22
Cbc0038I Pass  41: suminf.    2.04902 (46) obj. -238.405 iterations 34
Cbc0038I Pass  42: suminf.    1.96712 (45) obj. -238.405 iterations 15
Cbc0038I Pass  43: suminf.    2.04128 (34) obj. -238.405 iterations 69
Cbc0038I Pass  44: suminf.    1.86968 (32) obj. -238.405 iterations 21
Cbc0038I Pass  45: suminf.    1.40776 (25) obj. -238.405 iterations 62
Cbc0038I Pass  46: suminf.    1.35617 (25) obj. -238.405 iterations 18
Cbc0038I Pass  47: suminf.    2.41696 (23) obj. -238.405 iterations 31
Cbc0038I Pass  48: suminf.    1.41189 (17) obj. -238.405 iterations 9
Cbc0038I Pass  49: suminf.    1.41189 (17) obj. -238.405 iterations 0
Cbc0038I Pass  50: suminf.    1.23225 (15) obj. -238.405 iterations 24
Cbc0038I Pass  51: suminf.    0.78130 (14) obj. -238.405 iterations 27
Cbc0038I Pass  52: suminf.    1.10494 (19) obj. -238.405 iterations 43
Cbc0038I Pass  53: suminf.    1.10494 (19) obj. -238.405 iterations 13
Cbc0038I Pass  54: suminf.    3.02538 (16) obj. -238.405 iterations 45
Cbc0038I Pass  55: suminf.    3.02538 (16) obj. -238.405 iterations 4
Cbc0038I Pass  56: suminf.    2.40308 (15) obj. -238.405 iterations 29
Cbc0038I Pass  57: suminf.    2.35965 (16) obj. -238.405 iterations 8
Cbc0038I Pass  58: suminf.    2.62393 (16) obj. -238.405 iterations 22
Cbc0038I Pass  59: suminf.    2.62393 (16) obj. -238.405 iterations 4
Cbc0038I Pass  60: suminf.    2.74815 (16) obj. -238.405 iterations 30
Cbc0038I Pass  61: suminf.    2.74815 (16) obj. -238.405 iterations 8
Cbc0038I Pass  62: suminf.    2.62393 (16) obj. -238.405 iterations 19
Cbc0038I Pass  63: suminf.    2.97146 (36) obj. -238.405 iterations 47
Cbc0038I Pass  64: suminf.    2.62668 (35) obj. -238.405 iterations 14
Cbc0038I Pass  65: suminf.    2.88320 (25) obj. -238.405 iterations 36
Cbc0038I Pass  66: suminf.    2.67304 (25) obj. -238.405 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 383 columns, reduced to 24 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -200.558 - took 0.20 seconds
Cbc0012I Integer solution of -200.5579 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 361 rows 383 columns, reduced to 15 rows 18 columns
Cbc0031I 136 added rows had average density of 51.602941
Cbc0013I At root node, 136 cuts changed objective from -365.38268 to -252.48635 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19648 row cuts average 2.0 elements, 0 column cuts (92 active)  in 0.476 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2863 row cuts average 344.6 elements, 0 column cuts (0 active)  in 1.090 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 681 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5585 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.603 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2835 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 544 row cuts average 158.9 elements, 0 column cuts (0 active)  in 0.239 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 202 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.310 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -200.5579 best solution, best possible -252.48635 (6.56 seconds)
Cbc0012I Integer solution of -210.7004 found by rounding after 8235 iterations and 1 nodes (6.59 seconds)
Cbc0012I Integer solution of -211.7437 found by DiveCoefficient after 8372 iterations and 1 nodes (6.63 seconds)
Cbc0012I Integer solution of -213.4188 found by rounding after 8374 iterations and 2 nodes (6.64 seconds)
Cbc0012I Integer solution of -221.4091 found by DiveCoefficient after 8406 iterations and 2 nodes (6.69 seconds)
Cbc0012I Integer solution of -224.8296 found by DiveCoefficient after 8464 iterations and 3 nodes (6.75 seconds)
Cbc0012I Integer solution of -225.2202 found by rounding after 8785 iterations and 20 nodes (7.05 seconds)
Cbc0012I Integer solution of -228.0958 found by rounding after 8867 iterations and 30 nodes (7.09 seconds)
Cbc0012I Integer solution of -228.5719 found by DiveCoefficient after 8966 iterations and 32 nodes (7.16 seconds)
Cbc0012I Integer solution of -230.4285 found by rounding after 9025 iterations and 34 nodes (7.18 seconds)
Cbc0010I After 37 nodes, 3 on tree, -230.4285 best solution, best possible -252.48635 (7.27 seconds)
Cbc0038I Full problem 361 rows 383 columns, reduced to 160 rows 170 columns
Cbc0012I Integer solution of -234.129 found by RINS after 9535 iterations and 41 nodes (8.88 seconds)
Cbc0010I After 41 nodes, 2 on tree, -234.129 best solution, best possible -251.61428 (8.88 seconds)
Cbc0010I After 45 nodes, 6 on tree, -234.129 best solution, best possible -251.61428 (9.61 seconds)
Cbc0010I After 64 nodes, 7 on tree, -234.129 best solution, best possible -251.61428 (10.31 seconds)
Cbc0038I Full problem 361 rows 383 columns, reduced to 38 rows 42 columns
Cbc0010I After 119 nodes, 7 on tree, -234.129 best solution, best possible -251.61428 (11.01 seconds)
Cbc0010I After 139 nodes, 4 on tree, -234.129 best solution, best possible -251.61428 (11.72 seconds)
Cbc0010I After 171 nodes, 7 on tree, -234.129 best solution, best possible -251.61428 (12.43 seconds)
Cbc0010I After 215 nodes, 2 on tree, -234.129 best solution, best possible -251.61428 (13.43 seconds)
Cbc0010I After 239 nodes, 7 on tree, -234.129 best solution, best possible -251.61428 (14.13 seconds)
Cbc0038I Full problem 361 rows 383 columns, reduced to 15 rows 21 columns
Cbc0010I After 317 nodes, 11 on tree, -234.129 best solution, best possible -251.61428 (14.83 seconds)
Cbc0001I Search completed - best objective -234.129, took 25838 iterations and 370 nodes (15.37 seconds)
Cbc0032I Strong branching done 2548 times (37836 iterations), fathomed 19 nodes and fixed 32 variables
Cbc0035I Maximum depth 32, 1714 variables fixed on reduced cost
Total time (CPU seconds):       15.01   (Wallclock seconds):       15.47

