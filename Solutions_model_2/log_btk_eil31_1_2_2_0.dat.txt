Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 29 (-4) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 5.61728e-06 - average 1.14638e-07, 2 fixed columns
Coin0506I Presolve 45 (-4) rows, 27 (-2) columns and 136 (-12) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Coin0511I After Postsolve, objective 61.621915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Coin0511I After Postsolve, objective 61.621915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.62191544 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 29 columns (28 integer (28 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.325%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.96571
Cbc0038I Solution found of 5.71668
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 0 to -38.5556 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.7852
Cbc0038I Pass   1: suminf.    1.92664 (5) obj. -40.7852 iterations 21
Cbc0038I Pass   2: suminf.    0.04065 (1) obj. -42.6883 iterations 8
Cbc0038I Pass   3: suminf.    0.12986 (1) obj. -40.7852 iterations 3
Cbc0038I Pass   4: suminf.    1.39992 (6) obj. -40.7852 iterations 11
Cbc0038I Pass   5: suminf.    1.13795 (4) obj. -40.7852 iterations 1
Cbc0038I Pass   6: suminf.    0.73216 (4) obj. -40.7852 iterations 5
Cbc0038I Pass   7: suminf.    0.73216 (4) obj. -40.7852 iterations 0
Cbc0038I Pass   8: suminf.    0.52973 (2) obj. -40.7852 iterations 11
Cbc0038I Pass   9: suminf.    0.27642 (1) obj. -45.4607 iterations 3
Cbc0038I Pass  10: suminf.    0.39529 (1) obj. -40.7852 iterations 1
Cbc0038I Pass  11: suminf.    0.54759 (2) obj. -40.7852 iterations 4
Cbc0038I Pass  12: suminf.    0.54759 (2) obj. -40.7852 iterations 2
Cbc0038I Pass  13: suminf.    1.09806 (5) obj. -40.7852 iterations 10
Cbc0038I Pass  14: suminf.    0.77139 (3) obj. -40.7852 iterations 4
Cbc0038I Pass  15: suminf.    0.72585 (2) obj. -40.7852 iterations 2
Cbc0038I Pass  16: suminf.    0.72585 (2) obj. -40.7852 iterations 0
Cbc0038I Pass  17: suminf.    0.89711 (2) obj. -44.3031 iterations 1
Cbc0038I Pass  18: suminf.    0.75294 (4) obj. -40.7852 iterations 8
Cbc0038I Pass  19: suminf.    0.40427 (3) obj. -40.7852 iterations 4
Cbc0038I Pass  20: suminf.    0.50920 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  21: suminf.    0.35330 (1) obj. -40.7852 iterations 2
Cbc0038I Pass  22: suminf.    0.35772 (1) obj. -40.9593 iterations 1
Cbc0038I Pass  23: suminf.    0.71797 (3) obj. -40.7852 iterations 8
Cbc0038I Pass  24: suminf.    0.71797 (3) obj. -40.7852 iterations 1
Cbc0038I Pass  25: suminf.    1.04262 (3) obj. -40.7852 iterations 6
Cbc0038I Pass  26: suminf.    0.87104 (3) obj. -40.7852 iterations 2
Cbc0038I Pass  27: suminf.    0.92940 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  28: suminf.    0.68123 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  29: suminf.    1.32401 (4) obj. -40.7852 iterations 10
Cbc0038I Pass  30: suminf.    0.78007 (5) obj. -40.7852 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -38.5556 - took 0.07 seconds
Cbc0012I Integer solution of -38.55558 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 47 rows 29 columns, reduced to 33 rows 20 columns
Cbc0031I 12 added rows had average density of 18.833333
Cbc0013I At root node, 12 cuts changed objective from -60.850874 to -52.5204 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1113 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 438 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -39.3334 found by DiveCoefficient after 2596 iterations and 10 nodes (0.22 seconds)
Cbc0001I Search completed - best objective -39.3334, took 2700 iterations and 14 nodes (0.23 seconds)
Cbc0032I Strong branching done 146 times (1521 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-22) rows, 49 (-13) columns and 408 (-238) elements
Clp1000I sum of infeasibilities 1.4667e-08 - average 3.57732e-10, 23 fixed columns
Coin0506I Presolve 19 (-22) rows, 26 (-23) columns and 84 (-324) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 1.3426689 - largest nonzero change 0 ( 0%) - largest zero change 2.5489217e-05
Clp0000I Optimal - objective value 28.8505
Clp0000I Optimal - objective value 28.8505
Coin0511I After Postsolve, objective 28.8505, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.149168 - largest nonzero change 1.5885464e-05 ( 0.001262127%) - largest zero change 1.7029246e-05
Clp0000I Optimal - objective value 67.566063
Clp0000I Optimal - objective value 67.566063
Clp0000I Optimal - objective value 67.566063
Coin0511I After Postsolve, objective 67.566063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.56606316 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 48 columns (48 integer (48 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.441%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.41458
Cbc0038I Pass   1: suminf.    0.81958 (7) obj. -39.9669 iterations 18
Cbc0038I Solution found of -27.5556
Cbc0038I Rounding solution of -38.2223 is better than previous of -27.5556

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -40.1691
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.82910 (8) obj. -40.1691 iterations 1
Cbc0038I Pass   3: suminf.    0.46611 (3) obj. -40.1691 iterations 11
Cbc0038I Pass   4: suminf.    0.45786 (2) obj. -40.1691 iterations 3
Cbc0038I Pass   5: suminf.    0.45786 (2) obj. -40.1691 iterations 0
Cbc0038I Pass   6: suminf.    0.62336 (2) obj. -43.669 iterations 1
Cbc0038I Pass   7: suminf.    0.45717 (2) obj. -40.1691 iterations 2
Cbc0038I Pass   8: suminf.    1.62302 (7) obj. -40.1691 iterations 7
Cbc0038I Pass   9: suminf.    1.04539 (6) obj. -40.1691 iterations 5
Cbc0038I Pass  10: suminf.    1.60659 (4) obj. -40.1691 iterations 10
Cbc0038I Pass  11: suminf.    0.66120 (3) obj. -40.1691 iterations 5
Cbc0038I Pass  12: suminf.    0.66120 (3) obj. -40.1691 iterations 1
Cbc0038I Pass  13: suminf.    0.92339 (3) obj. -40.1691 iterations 4
Cbc0038I Pass  14: suminf.    0.92339 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  15: suminf.    0.77081 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  16: suminf.    0.66120 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  17: suminf.    0.66120 (3) obj. -40.1691 iterations 1
Cbc0038I Pass  18: suminf.    0.92339 (3) obj. -40.1691 iterations 4
Cbc0038I Pass  19: suminf.    0.92339 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  20: suminf.    0.77081 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  21: suminf.    0.66120 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  22: suminf.    0.66120 (3) obj. -40.1691 iterations 1
Cbc0038I Pass  23: suminf.    0.92339 (3) obj. -40.1691 iterations 4
Cbc0038I Pass  24: suminf.    0.92339 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  25: suminf.    0.77081 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  26: suminf.    0.66120 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  27: suminf.    0.66120 (3) obj. -40.1691 iterations 1
Cbc0038I Pass  28: suminf.    0.92339 (3) obj. -40.1691 iterations 4
Cbc0038I Pass  29: suminf.    0.92339 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  30: suminf.    0.77081 (3) obj. -40.1691 iterations 2
Cbc0038I Pass  31: suminf.    0.66120 (3) obj. -40.1691 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -38.2223 - took 0.01 seconds
Cbc0012I Integer solution of -38.22228 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 16 added rows had average density of 15.5625
Cbc0013I At root node, 16 cuts changed objective from -57.68998 to -44.539864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 854 row cuts average 2.1 elements, 5 column cuts (5 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 720 row cuts average 37.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 101 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 45 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 141 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 231 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.22228 best solution, best possible -44.539864 (1.51 seconds)
Cbc0016I Integer solution of -38.33328 found by strong branching after 1554 iterations and 2 nodes (1.74 seconds)
Cbc0016I Integer solution of -39.3334 found by strong branching after 1710 iterations and 5 nodes (2.03 seconds)
Cbc0001I Search completed - best objective -39.3334, took 1824 iterations and 8 nodes (2.20 seconds)
Cbc0032I Strong branching done 152 times (1174 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.37   (Wallclock seconds):       2.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 29 (-4) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 5.61728e-06 - average 1.14638e-07, 2 fixed columns
Coin0506I Presolve 45 (-4) rows, 27 (-2) columns and 136 (-12) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Coin0511I After Postsolve, objective 61.621915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Clp0000I Optimal - objective value 61.621915
Coin0511I After Postsolve, objective 61.621915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.62191544 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 29 columns (28 integer (28 of which binary)) and 147 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.325%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.96571
Cbc0038I Solution found of 5.71668
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 0 to -38.5556 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.7852
Cbc0038I Pass   1: suminf.    1.92664 (5) obj. -40.7852 iterations 21
Cbc0038I Pass   2: suminf.    0.04065 (1) obj. -42.6883 iterations 8
Cbc0038I Pass   3: suminf.    0.12986 (1) obj. -40.7852 iterations 3
Cbc0038I Pass   4: suminf.    1.39992 (6) obj. -40.7852 iterations 11
Cbc0038I Pass   5: suminf.    1.13795 (4) obj. -40.7852 iterations 1
Cbc0038I Pass   6: suminf.    0.73216 (4) obj. -40.7852 iterations 5
Cbc0038I Pass   7: suminf.    0.73216 (4) obj. -40.7852 iterations 0
Cbc0038I Pass   8: suminf.    0.52973 (2) obj. -40.7852 iterations 11
Cbc0038I Pass   9: suminf.    0.27642 (1) obj. -45.4607 iterations 3
Cbc0038I Pass  10: suminf.    0.39529 (1) obj. -40.7852 iterations 1
Cbc0038I Pass  11: suminf.    0.54759 (2) obj. -40.7852 iterations 4
Cbc0038I Pass  12: suminf.    0.54759 (2) obj. -40.7852 iterations 2
Cbc0038I Pass  13: suminf.    1.09806 (5) obj. -40.7852 iterations 10
Cbc0038I Pass  14: suminf.    0.77139 (3) obj. -40.7852 iterations 4
Cbc0038I Pass  15: suminf.    0.72585 (2) obj. -40.7852 iterations 2
Cbc0038I Pass  16: suminf.    0.72585 (2) obj. -40.7852 iterations 0
Cbc0038I Pass  17: suminf.    0.89711 (2) obj. -44.3031 iterations 1
Cbc0038I Pass  18: suminf.    0.75294 (4) obj. -40.7852 iterations 8
Cbc0038I Pass  19: suminf.    0.40427 (3) obj. -40.7852 iterations 4
Cbc0038I Pass  20: suminf.    0.50920 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  21: suminf.    0.35330 (1) obj. -40.7852 iterations 2
Cbc0038I Pass  22: suminf.    0.35772 (1) obj. -40.9593 iterations 1
Cbc0038I Pass  23: suminf.    0.71797 (3) obj. -40.7852 iterations 8
Cbc0038I Pass  24: suminf.    0.71797 (3) obj. -40.7852 iterations 1
Cbc0038I Pass  25: suminf.    1.04262 (3) obj. -40.7852 iterations 6
Cbc0038I Pass  26: suminf.    0.87104 (3) obj. -40.7852 iterations 2
Cbc0038I Pass  27: suminf.    0.92940 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  28: suminf.    0.68123 (2) obj. -40.7852 iterations 1
Cbc0038I Pass  29: suminf.    1.32401 (4) obj. -40.7852 iterations 10
Cbc0038I Pass  30: suminf.    0.78007 (5) obj. -40.7852 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -38.5556 - took 0.07 seconds
Cbc0012I Integer solution of -38.55558 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 47 rows 29 columns, reduced to 33 rows 20 columns
Cbc0031I 12 added rows had average density of 18.833333
Cbc0013I At root node, 12 cuts changed objective from -60.850874 to -52.5204 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1113 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 438 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -39.3334 found by DiveCoefficient after 2596 iterations and 10 nodes (0.21 seconds)
Cbc0001I Search completed - best objective -39.3334, took 2700 iterations and 14 nodes (0.22 seconds)
Cbc0032I Strong branching done 146 times (1521 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 47 (-16) columns and 377 (-272) elements
Clp1000I sum of infeasibilities 1.44911e-08 - average 3.62276e-10, 23 fixed columns
Coin0506I Presolve 18 (-22) rows, 24 (-23) columns and 78 (-299) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.4589083 - largest nonzero change 0 ( 0%) - largest zero change 2.7730409e-05
Clp0000I Optimal - objective value 28.8505
Clp0000I Optimal - objective value 28.8505
Coin0511I After Postsolve, objective 28.8505, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2207428 - largest nonzero change 2.1395931e-05 ( 0.0020117201%) - largest zero change 1.9085629e-05
Clp0000I Optimal - objective value 67.566063
Clp0000I Optimal - objective value 67.566063
Clp0000I Optimal - objective value 67.566063
Coin0511I After Postsolve, objective 67.566063, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.56606316 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 47 columns (47 integer (47 of which binary)) and 387 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 2.99429
Cbc0038I Pass   1: suminf.    0.90221 (7) obj. -39.8195 iterations 14
Cbc0038I Solution found of -27.5556
Cbc0038I Rounding solution of -38.2223 is better than previous of -27.5556

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -40.1762
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.91905 (8) obj. -40.1762 iterations 1
Cbc0038I Pass   3: suminf.    0.46668 (3) obj. -40.1762 iterations 10
Cbc0038I Pass   4: suminf.    0.45821 (2) obj. -40.1762 iterations 3
Cbc0038I Pass   5: suminf.    0.45821 (2) obj. -40.1762 iterations 0
Cbc0038I Pass   6: suminf.    0.62336 (2) obj. -43.669 iterations 1
Cbc0038I Pass   7: suminf.    0.45750 (2) obj. -40.1762 iterations 2
Cbc0038I Pass   8: suminf.    0.50499 (2) obj. -40.1762 iterations 3
Cbc0038I Pass   9: suminf.    0.50499 (2) obj. -40.1762 iterations 2
Cbc0038I Pass  10: suminf.    0.50689 (2) obj. -40.1762 iterations 2
Cbc0038I Pass  11: suminf.    0.50689 (2) obj. -40.1762 iterations 0
Cbc0038I Pass  12: suminf.    0.62336 (2) obj. -42.669 iterations 1
Cbc0038I Pass  13: suminf.    1.21116 (8) obj. -40.1762 iterations 14
Cbc0038I Pass  14: suminf.    1.21116 (8) obj. -40.1762 iterations 1
Cbc0038I Pass  15: suminf.    1.87141 (5) obj. -40.1762 iterations 18
Cbc0038I Pass  16: suminf.    1.87141 (5) obj. -40.1762 iterations 1
Cbc0038I Pass  17: suminf.    1.63948 (4) obj. -40.1762 iterations 4
Cbc0038I Pass  18: suminf.    0.95024 (3) obj. -40.1762 iterations 4
Cbc0038I Pass  19: suminf.    1.10121 (3) obj. -40.1762 iterations 2
Cbc0038I Pass  20: suminf.    0.76562 (4) obj. -40.1762 iterations 5
Cbc0038I Pass  21: suminf.    0.76562 (4) obj. -40.1762 iterations 4
Cbc0038I Pass  22: suminf.    0.92859 (6) obj. -40.1762 iterations 15
Cbc0038I Pass  23: suminf.    0.84943 (5) obj. -41.2484 iterations 5
Cbc0038I Pass  24: suminf.    0.73655 (4) obj. -40.1762 iterations 8
Cbc0038I Pass  25: suminf.    0.70971 (4) obj. -40.1762 iterations 2
Cbc0038I Pass  26: suminf.    0.75758 (3) obj. -40.1762 iterations 4
Cbc0038I Pass  27: suminf.    1.15184 (5) obj. -40.1762 iterations 22
Cbc0038I Pass  28: suminf.    0.82911 (5) obj. -40.1762 iterations 5
Cbc0038I Pass  29: suminf.    1.26588 (4) obj. -40.1762 iterations 7
Cbc0038I Pass  30: suminf.    0.92480 (3) obj. -40.1762 iterations 3
Cbc0038I Pass  31: suminf.    0.92480 (3) obj. -40.1762 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 47 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -27.5556 to -38.3333 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.6931
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.08514 (8) obj. -43.6931 iterations 0
Cbc0038I Pass  32: suminf.    0.75110 (3) obj. -43.6931 iterations 10
Cbc0038I Pass  33: suminf.    0.62818 (3) obj. -43.6931 iterations 4
Cbc0038I Pass  34: suminf.    0.62818 (3) obj. -43.6931 iterations 2
Cbc0038I Pass  35: suminf.    0.71438 (3) obj. -43.6931 iterations 2
Cbc0038I Pass  36: suminf.    0.60833 (2) obj. -43.6931 iterations 2
Cbc0038I Pass  37: suminf.    0.58667 (2) obj. -44.1901 iterations 2
Cbc0038I Pass  38: suminf.    0.62818 (3) obj. -43.6931 iterations 5
Cbc0038I Pass  39: suminf.    0.62818 (3) obj. -43.6931 iterations 1
Cbc0038I Pass  40: suminf.    0.71438 (3) obj. -43.6931 iterations 2
Cbc0038I Pass  41: suminf.    0.60833 (2) obj. -43.6931 iterations 2
Cbc0038I Pass  42: suminf.    0.58667 (2) obj. -44.1901 iterations 2
Cbc0038I Pass  43: suminf.    0.62818 (3) obj. -43.6931 iterations 5
Cbc0038I Pass  44: suminf.    0.62818 (3) obj. -43.6931 iterations 1
Cbc0038I Pass  45: suminf.    0.71438 (3) obj. -43.6931 iterations 2
Cbc0038I Pass  46: suminf.    0.60833 (2) obj. -43.6931 iterations 2
Cbc0038I Pass  47: suminf.    0.58667 (2) obj. -44.1901 iterations 2
Cbc0038I Pass  48: suminf.    0.62818 (3) obj. -43.6931 iterations 6
Cbc0038I Pass  49: suminf.    0.62818 (3) obj. -43.6931 iterations 1
Cbc0038I Pass  50: suminf.    0.71438 (3) obj. -43.6931 iterations 2
Cbc0038I Pass  51: suminf.    0.60833 (2) obj. -43.6931 iterations 2
Cbc0038I Pass  52: suminf.    0.58667 (2) obj. -44.1901 iterations 2
Cbc0038I Pass  53: suminf.    0.62818 (3) obj. -43.6931 iterations 5
Cbc0038I Pass  54: suminf.    0.62818 (3) obj. -43.6931 iterations 1
Cbc0038I Pass  55: suminf.    0.71438 (3) obj. -43.6931 iterations 2
Cbc0038I Pass  56: suminf.    0.60833 (2) obj. -43.6931 iterations 2
Cbc0038I Pass  57: suminf.    0.58667 (2) obj. -44.1901 iterations 2
Cbc0038I Pass  58: suminf.    0.62818 (3) obj. -43.6931 iterations 5
Cbc0038I Pass  59: suminf.    0.62818 (3) obj. -43.6931 iterations 1
Cbc0038I Pass  60: suminf.    0.71438 (3) obj. -43.6931 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -38.3333 - took 0.02 seconds
Cbc0012I Integer solution of -38.33328 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 47 columns, reduced to 18 rows 20 columns
Cbc0031I 14 added rows had average density of 14.428571
Cbc0013I At root node, 14 cuts changed objective from -57.760558 to -44.821056 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 872 row cuts average 2.3 elements, 5 column cuts (5 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 475 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 76 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 19 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 159 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 224 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 98 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.699 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.33328 best solution, best possible -44.821056 (1.40 seconds)
Cbc0004I Integer solution of -39.3334 found after 1939 iterations and 7 nodes (1.97 seconds)
Cbc0010I After 9 nodes, 6 on tree, -39.3334 best solution, best possible -44.821056 (2.14 seconds)
Cbc0001I Search completed - best objective -39.3334, took 2346 iterations and 16 nodes (2.34 seconds)
Cbc0032I Strong branching done 236 times (2060 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 6, 23 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       2.35

