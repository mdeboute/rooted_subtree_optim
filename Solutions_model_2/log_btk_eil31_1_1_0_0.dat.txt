Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 29 (-4) columns and 154 (-29) elements
Clp1000I sum of infeasibilities 1.60392e-05 - average 3.08445e-07, 19 fixed columns
Coin0506I Presolve 16 (-36) rows, 9 (-20) columns and 43 (-111) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 2401.0002
Clp0000I Optimal - objective value 2401.0002
Coin0511I After Postsolve, objective 2401.0002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2401.0002
Clp0000I Optimal - objective value 2401.0002
Clp0000I Optimal - objective value 2401.0002
Coin0511I After Postsolve, objective 2401.0002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2401.000186 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 158 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.676%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.0629
Cbc0038I Pass   1: suminf.    0.90635 (3) obj. -2128.02 iterations 6
Cbc0038I Pass   2: suminf.    0.43200 (2) obj. -1822.04 iterations 1
Cbc0038I Solution found of -615.407
Cbc0038I Relaxing continuous gives -615.407
Cbc0038I Rounding solution of -1562.48 is better than previous of -615.407

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 13 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1635.57
Cbc0038I Pass   3: suminf.    0.90635 (3) obj. -2128.02 iterations 0
Cbc0038I Pass   4: suminf.    0.43200 (2) obj. -1822.04 iterations 3
Cbc0038I Pass   5: suminf.    0.80118 (2) obj. -1635.57 iterations 5
Cbc0038I Pass   6: suminf.    0.80118 (2) obj. -1635.57 iterations 0
Cbc0038I Pass   7: suminf.    0.07424 (1) obj. -1635.57 iterations 1
Cbc0038I Pass   8: suminf.    0.44776 (2) obj. -2106.33 iterations 2
Cbc0038I Pass   9: suminf.    1.54223 (5) obj. -1744.2 iterations 6
Cbc0038I Pass  10: suminf.    0.59287 (2) obj. -1635.57 iterations 6
Cbc0038I Pass  11: suminf.    0.59408 (2) obj. -1898.43 iterations 1
Cbc0038I Pass  12: suminf.    0.32222 (1) obj. -1705.79 iterations 1
Cbc0038I Pass  13: suminf.    0.69732 (2) obj. -1635.57 iterations 8
Cbc0038I Pass  14: suminf.    0.28421 (1) obj. -1692.02 iterations 2
Cbc0038I Pass  15: suminf.    0.32062 (1) obj. -1635.57 iterations 3
Cbc0038I Pass  16: suminf.    0.26767 (2) obj. -2041.92 iterations 2
Cbc0038I Pass  17: suminf.    0.66316 (2) obj. -1635.57 iterations 3
Cbc0038I Pass  18: suminf.    0.66316 (2) obj. -1635.57 iterations 0
Cbc0038I Pass  19: suminf.    1.31234 (4) obj. -1806.57 iterations 17
Cbc0038I Pass  20: suminf.    0.06250 (1) obj. -1692.5 iterations 8
Cbc0038I Pass  21: suminf.    0.37142 (1) obj. -1635.57 iterations 3
Cbc0038I Pass  22: suminf.    0.16667 (1) obj. -1837.17 iterations 1
Cbc0038I Pass  23: suminf.    1.09375 (5) obj. -1696.33 iterations 9
Cbc0038I Pass  24: suminf.    0.27277 (2) obj. -1754.55 iterations 7
Cbc0038I Pass  25: suminf.    0.96794 (2) obj. -1635.57 iterations 7
Cbc0038I Pass  26: suminf.    0.47889 (2) obj. -2017.25 iterations 2
Cbc0038I Pass  27: suminf.    0.05043 (1) obj. -1635.57 iterations 3
Cbc0038I Pass  28: suminf.    1.36175 (4) obj. -1763.75 iterations 7
Cbc0038I Pass  29: suminf.    0.65010 (2) obj. -1635.57 iterations 8
Cbc0038I Pass  30: suminf.    0.70044 (2) obj. -1934.03 iterations 2
Cbc0038I Pass  31: suminf.    0.31111 (1) obj. -1658.14 iterations 3
Cbc0038I Pass  32: suminf.    2.26857 (5) obj. -1635.57 iterations 10
Cbc0038I Rounding solution of -1606.61 is better than previous of -1562.48

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -1606.61 to -2005.78 (0.02 seconds)
Cbc0038I Round again with cutoff of -2063.31
Cbc0038I Pass  32: suminf.    0.90635 (3) obj. -2128.02 iterations 0
Cbc0038I Pass  33: suminf.    0.77712 (3) obj. -2063.31 iterations 4
Cbc0038I Pass  34: suminf.    0.45805 (2) obj. -2063.31 iterations 3
Cbc0038I Pass  35: suminf.    0.45805 (2) obj. -2063.31 iterations 0
Cbc0038I Pass  36: suminf.    0.50038 (2) obj. -2063.31 iterations 2
Cbc0038I Pass  37: suminf.    0.44776 (2) obj. -2106.33 iterations 2
Cbc0038I Pass  38: suminf.    0.49345 (2) obj. -2063.31 iterations 3
Cbc0038I Pass  39: suminf.    0.63499 (6) obj. -2063.31 iterations 14
Cbc0038I Pass  40: suminf.    0.16667 (1) obj. -2085.26 iterations 7
Cbc0038I Pass  41: suminf.    0.39661 (2) obj. -2063.31 iterations 2
Cbc0038I Pass  42: suminf.    1.27693 (7) obj. -2063.31 iterations 16
Cbc0038I Pass  43: suminf.    0.52083 (3) obj. -2063.31 iterations 5
Cbc0038I Pass  44: suminf.    0.87746 (3) obj. -2063.31 iterations 3
Cbc0038I Pass  45: suminf.    1.51219 (4) obj. -2063.31 iterations 15
Cbc0038I Pass  46: suminf.    0.71924 (4) obj. -2063.31 iterations 5
Cbc0038I Pass  47: suminf.    0.71924 (4) obj. -2063.31 iterations 1
Cbc0038I Pass  48: suminf.    1.65552 (5) obj. -2063.31 iterations 2
Cbc0038I Pass  49: suminf.    0.97047 (4) obj. -2063.31 iterations 1
Cbc0038I Pass  50: suminf.    1.27575 (5) obj. -2063.31 iterations 3
Cbc0038I Pass  51: suminf.    1.27575 (5) obj. -2063.31 iterations 1
Cbc0038I Pass  52: suminf.    0.58378 (4) obj. -2063.31 iterations 8
Cbc0038I Pass  53: suminf.    0.39444 (2) obj. -2063.31 iterations 6
Cbc0038I Pass  54: suminf.    0.32091 (1) obj. -2063.31 iterations 1
Cbc0038I Pass  55: suminf.    0.35317 (2) obj. -2095.1 iterations 2
Cbc0038I Pass  56: suminf.    0.98644 (3) obj. -2132.78 iterations 4
Cbc0038I Pass  57: suminf.    0.49491 (3) obj. -2063.31 iterations 3
Cbc0038I Pass  58: suminf.    0.78180 (5) obj. -2063.31 iterations 3
Cbc0038I Pass  59: suminf.    0.58378 (4) obj. -2063.31 iterations 3
Cbc0038I Pass  60: suminf.    0.39444 (2) obj. -2063.31 iterations 5
Cbc0038I Pass  61: suminf.    0.32091 (1) obj. -2063.31 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2005.78 - took 0.05 seconds
Cbc0012I Integer solution of -2005.783 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 17 rows 10 columns
Cbc0031I 10 added rows had average density of 21.1
Cbc0013I At root node, 10 cuts changed objective from -2293.3941 to -2153.6205 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 330 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 325 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 282 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.734 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2005.783 best solution, best possible -2153.6192 (1.46 seconds)
Cbc0001I Search completed - best objective -2005.783, took 1699 iterations and 10 nodes (2.10 seconds)
Cbc0032I Strong branching done 92 times (641 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       2.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 51 (-11) columns and 434 (-212) elements
Clp1000I sum of infeasibilities 6.65169e-09 - average 1.44602e-10, 44 fixed columns
Coin0506I Presolve 7 (-39) rows, 7 (-44) columns and 23 (-411) elements
Clp0006I 0  Obj 2367.5694 Dual inf 52.874457 (5)
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2367.5696
Clp0000I Optimal - objective value 2367.5696
Coin0511I After Postsolve, objective 2367.5696, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2367.5696 Dual inf 215.30927 (22)
Clp0014I Perturbing problem by 0.001% of 1.1401309 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 2415.5528
Clp0000I Optimal - objective value 2415.5528
Clp0000I Optimal - objective value 2415.5528
Coin0511I After Postsolve, objective 2415.5528, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2415.552778 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 50 columns (50 integer (50 of which binary)) and 421 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.00135
Cbc0038I Pass   1: suminf.    0.49450 (3) obj. -1822.97 iterations 13
Cbc0038I Pass   2: suminf.    0.49450 (3) obj. -1822.97 iterations 0
Cbc0038I Solution found of -615.407
Cbc0038I Rounding solution of -1562.48 is better than previous of -615.407

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 50 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1635.2
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.49450 (3) obj. -1822.97 iterations 0
Cbc0038I Pass   4: suminf.    0.49450 (3) obj. -1822.97 iterations 0
Cbc0038I Pass   5: suminf.    0.10585 (3) obj. -1635.2 iterations 5
Cbc0038I Pass   6: suminf.    0.10585 (3) obj. -1635.2 iterations 0
Cbc0038I Pass   7: suminf.    0.50132 (2) obj. -1990.05 iterations 5
Cbc0038I Pass   8: suminf.    0.38889 (1) obj. -1907.22 iterations 1
Cbc0038I Pass   9: suminf.    0.33483 (1) obj. -1635.2 iterations 2
Cbc0038I Pass  10: suminf.    0.49475 (2) obj. -1635.2 iterations 8
Cbc0038I Pass  11: suminf.    0.49475 (2) obj. -1635.2 iterations 2
Cbc0038I Pass  12: suminf.    0.41087 (2) obj. -1635.2 iterations 3
Cbc0038I Pass  13: suminf.    0.40861 (2) obj. -1635.2 iterations 1
Cbc0038I Pass  14: suminf.    0.79758 (5) obj. -1857.88 iterations 9
Cbc0038I Pass  15: suminf.    0.79758 (5) obj. -1857.88 iterations 2
Cbc0038I Pass  16: suminf.    0.81409 (2) obj. -1635.2 iterations 7
Cbc0038I Pass  17: suminf.    0.70484 (2) obj. -1868.87 iterations 1
Cbc0038I Pass  18: suminf.    0.26514 (2) obj. -1635.2 iterations 2
Cbc0038I Pass  19: suminf.    0.82259 (2) obj. -1635.2 iterations 2
Cbc0038I Pass  20: suminf.    0.85157 (5) obj. -1635.2 iterations 7
Cbc0038I Pass  21: suminf.    0.85157 (5) obj. -1635.2 iterations 1
Cbc0038I Pass  22: suminf.    0.50949 (2) obj. -1635.2 iterations 4
Cbc0038I Pass  23: suminf.    0.35314 (2) obj. -1635.2 iterations 2
Cbc0038I Pass  24: suminf.    0.42095 (2) obj. -1697.7 iterations 1
Cbc0038I Pass  25: suminf.    0.51260 (6) obj. -1936.92 iterations 14
Cbc0038I Pass  26: suminf.    0.21267 (3) obj. -1849.17 iterations 5
Cbc0038I Pass  27: suminf.    0.14452 (1) obj. -1635.2 iterations 5
Cbc0038I Pass  28: suminf.    0.20000 (1) obj. -1687.75 iterations 1
Cbc0038I Pass  29: suminf.    0.72797 (4) obj. -1635.2 iterations 19
Cbc0038I Pass  30: suminf.    0.32717 (5) obj. -1635.2 iterations 4
Cbc0038I Pass  31: suminf.    0.54130 (2) obj. -1635.2 iterations 7
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -1733.97 iterations 2
Cbc0038I Rounding solution of -1585.91 is better than previous of -1562.48

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 50 columns, reduced to 26 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1585.91 to -1982.35 (0.04 seconds)
Cbc0038I Round again with cutoff of -2043.82
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.13353 (5) obj. -2043.82 iterations 1
Cbc0038I Pass  33: suminf.    1.01505 (7) obj. -2043.82 iterations 2
Cbc0038I Pass  34: suminf.    0.43023 (2) obj. -2043.82 iterations 8
Cbc0038I Pass  35: suminf.    0.43023 (2) obj. -2043.82 iterations 0
Cbc0038I Pass  36: suminf.    0.49460 (2) obj. -2043.82 iterations 2
Cbc0038I Pass  37: suminf.    0.49193 (1) obj. -2043.82 iterations 2
Cbc0038I Pass  38: suminf.    0.44776 (2) obj. -2103.33 iterations 3
Cbc0038I Pass  39: suminf.    0.51095 (2) obj. -2043.82 iterations 4
Cbc0038I Pass  40: suminf.    1.01260 (4) obj. -2043.82 iterations 6
Cbc0038I Pass  41: suminf.    0.49791 (1) obj. -2043.82 iterations 6
Cbc0038I Pass  42: suminf.    0.44776 (2) obj. -2093.33 iterations 3
Cbc0038I Pass  43: suminf.    0.50034 (2) obj. -2043.82 iterations 4
Cbc0038I Pass  44: suminf.    2.29155 (8) obj. -2043.82 iterations 12
Cbc0038I Pass  45: suminf.    0.45673 (3) obj. -2043.82 iterations 10
Cbc0038I Pass  46: suminf.    0.23577 (1) obj. -2094.31 iterations 4
Cbc0038I Pass  47: suminf.    0.19386 (1) obj. -2043.82 iterations 1
Cbc0038I Pass  48: suminf.    1.22177 (10) obj. -2043.82 iterations 12
Cbc0038I Pass  49: suminf.    1.17920 (6) obj. -2043.82 iterations 3
Cbc0038I Pass  50: suminf.    0.36181 (3) obj. -2043.82 iterations 7
Cbc0038I Pass  51: suminf.    0.36181 (3) obj. -2043.82 iterations 0
Cbc0038I Pass  52: suminf.    1.13051 (4) obj. -2043.82 iterations 4
Cbc0038I Pass  53: suminf.    0.92553 (4) obj. -2043.82 iterations 2
Cbc0038I Pass  54: suminf.    0.57367 (3) obj. -2043.82 iterations 6
Cbc0038I Pass  55: suminf.    1.12313 (5) obj. -2043.82 iterations 10
Cbc0038I Pass  56: suminf.    0.64887 (4) obj. -2043.82 iterations 3
Cbc0038I Pass  57: suminf.    0.23362 (2) obj. -2043.82 iterations 5
Cbc0038I Pass  58: suminf.    0.23362 (2) obj. -2043.82 iterations 0
Cbc0038I Pass  59: suminf.    0.47037 (3) obj. -2043.82 iterations 3
Cbc0038I Pass  60: suminf.    0.47037 (3) obj. -2043.82 iterations 0
Cbc0038I Pass  61: suminf.    0.94231 (4) obj. -2043.82 iterations 2
Cbc0038I Rounding solution of -2005.78 is better than previous of -1982.35

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 50 columns, reduced to 30 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -2117.58
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.34698 (5) obj. -2117.58 iterations 0
Cbc0038I Pass  62: suminf.    1.19208 (8) obj. -2117.58 iterations 2
Cbc0038I Pass  63: suminf.    1.08486 (3) obj. -2117.58 iterations 8
Cbc0038I Pass  64: suminf.    0.85582 (3) obj. -2117.58 iterations 1
Cbc0038I Pass  65: suminf.    0.53955 (4) obj. -2117.58 iterations 6
Cbc0038I Pass  66: suminf.    0.53671 (3) obj. -2117.58 iterations 6
Cbc0038I Pass  67: suminf.    0.53671 (3) obj. -2117.58 iterations 0
Cbc0038I Pass  68: suminf.    2.44086 (7) obj. -2117.58 iterations 8
Cbc0038I Pass  69: suminf.    0.30936 (3) obj. -2117.58 iterations 6
Cbc0038I Pass  70: suminf.    0.27583 (7) obj. -2117.58 iterations 6
Cbc0038I Pass  71: suminf.    1.14360 (3) obj. -2117.58 iterations 11
Cbc0038I Pass  72: suminf.    1.11399 (3) obj. -2117.58 iterations 2
Cbc0038I Pass  73: suminf.    1.65047 (5) obj. -2117.58 iterations 4
Cbc0038I Pass  74: suminf.    1.36237 (4) obj. -2117.58 iterations 2
Cbc0038I Pass  75: suminf.    1.36237 (4) obj. -2117.58 iterations 1
Cbc0038I Pass  76: suminf.    0.38339 (2) obj. -2117.58 iterations 3
Cbc0038I Pass  77: suminf.    0.17642 (3) obj. -2117.58 iterations 4
Cbc0038I Pass  78: suminf.    0.58209 (4) obj. -2117.58 iterations 5
Cbc0038I Pass  79: suminf.    0.58209 (4) obj. -2117.58 iterations 0
Cbc0038I Pass  80: suminf.    0.60953 (3) obj. -2117.58 iterations 4
Cbc0038I Pass  81: suminf.    0.60953 (3) obj. -2117.58 iterations 0
Cbc0038I Pass  82: suminf.    1.15255 (5) obj. -2117.58 iterations 10
Cbc0038I Pass  83: suminf.    1.15255 (5) obj. -2117.58 iterations 1
Cbc0038I Pass  84: suminf.    0.49570 (3) obj. -2117.58 iterations 6
Cbc0038I Pass  85: suminf.    0.49570 (3) obj. -2117.58 iterations 0
Cbc0038I Pass  86: suminf.    2.27486 (5) obj. -2117.58 iterations 4
Cbc0038I Pass  87: suminf.    1.50203 (5) obj. -2117.58 iterations 1
Cbc0038I Pass  88: suminf.    0.54027 (3) obj. -2117.58 iterations 1
Cbc0038I Pass  89: suminf.    0.36800 (2) obj. -2134.92 iterations 3
Cbc0038I Pass  90: suminf.    0.55961 (3) obj. -2117.58 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 50 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -2005.78 - took 0.04 seconds
Cbc0012I Integer solution of -2005.783 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 44 rows 50 columns, reduced to 18 rows 18 columns
Cbc0031I 19 added rows had average density of 21.315789
Cbc0013I At root node, 19 cuts changed objective from -2289.7021 to -2151.8261 in 75 passes
Cbc0014I Cut generator 0 (Probing) - 502 row cuts average 4.1 elements, 6 column cuts (6 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 378 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 28 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.494 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2005.783 best solution, best possible -2151.8261 (1.05 seconds)
Cbc0001I Search completed - best objective -2005.783, took 1833 iterations and 12 nodes (1.69 seconds)
Cbc0032I Strong branching done 238 times (2767 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.69

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 29 (-4) columns and 154 (-29) elements
Clp1000I sum of infeasibilities 1.60392e-05 - average 3.08445e-07, 19 fixed columns
Coin0506I Presolve 16 (-36) rows, 9 (-20) columns and 43 (-111) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 2401.0002
Clp0000I Optimal - objective value 2401.0002
Coin0511I After Postsolve, objective 2401.0002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2401.0002
Clp0000I Optimal - objective value 2401.0002
Clp0000I Optimal - objective value 2401.0002
Coin0511I After Postsolve, objective 2401.0002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2401.000186 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 158 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.676%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.0629
Cbc0038I Pass   1: suminf.    0.90635 (3) obj. -2128.02 iterations 6
Cbc0038I Pass   2: suminf.    0.43200 (2) obj. -1822.04 iterations 1
Cbc0038I Solution found of -615.407
Cbc0038I Relaxing continuous gives -615.407
Cbc0038I Rounding solution of -1562.48 is better than previous of -615.407

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 13 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1635.57
Cbc0038I Pass   3: suminf.    0.90635 (3) obj. -2128.02 iterations 0
Cbc0038I Pass   4: suminf.    0.43200 (2) obj. -1822.04 iterations 3
Cbc0038I Pass   5: suminf.    0.80118 (2) obj. -1635.57 iterations 5
Cbc0038I Pass   6: suminf.    0.80118 (2) obj. -1635.57 iterations 0
Cbc0038I Pass   7: suminf.    0.07424 (1) obj. -1635.57 iterations 1
Cbc0038I Pass   8: suminf.    0.44776 (2) obj. -2106.33 iterations 2
Cbc0038I Pass   9: suminf.    1.54223 (5) obj. -1744.2 iterations 6
Cbc0038I Pass  10: suminf.    0.59287 (2) obj. -1635.57 iterations 6
Cbc0038I Pass  11: suminf.    0.59408 (2) obj. -1898.43 iterations 1
Cbc0038I Pass  12: suminf.    0.32222 (1) obj. -1705.79 iterations 1
Cbc0038I Pass  13: suminf.    0.69732 (2) obj. -1635.57 iterations 8
Cbc0038I Pass  14: suminf.    0.28421 (1) obj. -1692.02 iterations 2
Cbc0038I Pass  15: suminf.    0.32062 (1) obj. -1635.57 iterations 3
Cbc0038I Pass  16: suminf.    0.26767 (2) obj. -2041.92 iterations 2
Cbc0038I Pass  17: suminf.    0.66316 (2) obj. -1635.57 iterations 3
Cbc0038I Pass  18: suminf.    0.66316 (2) obj. -1635.57 iterations 0
Cbc0038I Pass  19: suminf.    1.31234 (4) obj. -1806.57 iterations 17
Cbc0038I Pass  20: suminf.    0.06250 (1) obj. -1692.5 iterations 8
Cbc0038I Pass  21: suminf.    0.37142 (1) obj. -1635.57 iterations 3
Cbc0038I Pass  22: suminf.    0.16667 (1) obj. -1837.17 iterations 1
Cbc0038I Pass  23: suminf.    1.09375 (5) obj. -1696.33 iterations 9
Cbc0038I Pass  24: suminf.    0.27277 (2) obj. -1754.55 iterations 7
Cbc0038I Pass  25: suminf.    0.96794 (2) obj. -1635.57 iterations 7
Cbc0038I Pass  26: suminf.    0.47889 (2) obj. -2017.25 iterations 2
Cbc0038I Pass  27: suminf.    0.05043 (1) obj. -1635.57 iterations 3
Cbc0038I Pass  28: suminf.    1.36175 (4) obj. -1763.75 iterations 7
Cbc0038I Pass  29: suminf.    0.65010 (2) obj. -1635.57 iterations 8
Cbc0038I Pass  30: suminf.    0.70044 (2) obj. -1934.03 iterations 2
Cbc0038I Pass  31: suminf.    0.31111 (1) obj. -1658.14 iterations 3
Cbc0038I Pass  32: suminf.    2.26857 (5) obj. -1635.57 iterations 10
Cbc0038I Rounding solution of -1606.61 is better than previous of -1562.48

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -1606.61 to -2005.78 (0.03 seconds)
Cbc0038I Round again with cutoff of -2063.31
Cbc0038I Pass  32: suminf.    0.90635 (3) obj. -2128.02 iterations 0
Cbc0038I Pass  33: suminf.    0.77712 (3) obj. -2063.31 iterations 4
Cbc0038I Pass  34: suminf.    0.45805 (2) obj. -2063.31 iterations 3
Cbc0038I Pass  35: suminf.    0.45805 (2) obj. -2063.31 iterations 0
Cbc0038I Pass  36: suminf.    0.50038 (2) obj. -2063.31 iterations 2
Cbc0038I Pass  37: suminf.    0.44776 (2) obj. -2106.33 iterations 2
Cbc0038I Pass  38: suminf.    0.49345 (2) obj. -2063.31 iterations 3
Cbc0038I Pass  39: suminf.    0.63499 (6) obj. -2063.31 iterations 14
Cbc0038I Pass  40: suminf.    0.16667 (1) obj. -2085.26 iterations 7
Cbc0038I Pass  41: suminf.    0.39661 (2) obj. -2063.31 iterations 2
Cbc0038I Pass  42: suminf.    1.27693 (7) obj. -2063.31 iterations 16
Cbc0038I Pass  43: suminf.    0.52083 (3) obj. -2063.31 iterations 5
Cbc0038I Pass  44: suminf.    0.87746 (3) obj. -2063.31 iterations 3
Cbc0038I Pass  45: suminf.    1.51219 (4) obj. -2063.31 iterations 15
Cbc0038I Pass  46: suminf.    0.71924 (4) obj. -2063.31 iterations 5
Cbc0038I Pass  47: suminf.    0.71924 (4) obj. -2063.31 iterations 1
Cbc0038I Pass  48: suminf.    1.65552 (5) obj. -2063.31 iterations 2
Cbc0038I Pass  49: suminf.    0.97047 (4) obj. -2063.31 iterations 1
Cbc0038I Pass  50: suminf.    1.27575 (5) obj. -2063.31 iterations 3
Cbc0038I Pass  51: suminf.    1.27575 (5) obj. -2063.31 iterations 1
Cbc0038I Pass  52: suminf.    0.58378 (4) obj. -2063.31 iterations 8
Cbc0038I Pass  53: suminf.    0.39444 (2) obj. -2063.31 iterations 6
Cbc0038I Pass  54: suminf.    0.32091 (1) obj. -2063.31 iterations 1
Cbc0038I Pass  55: suminf.    0.35317 (2) obj. -2095.1 iterations 2
Cbc0038I Pass  56: suminf.    0.98644 (3) obj. -2132.78 iterations 4
Cbc0038I Pass  57: suminf.    0.49491 (3) obj. -2063.31 iterations 3
Cbc0038I Pass  58: suminf.    0.78180 (5) obj. -2063.31 iterations 3
Cbc0038I Pass  59: suminf.    0.58378 (4) obj. -2063.31 iterations 3
Cbc0038I Pass  60: suminf.    0.39444 (2) obj. -2063.31 iterations 5
Cbc0038I Pass  61: suminf.    0.32091 (1) obj. -2063.31 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2005.78 - took 0.03 seconds
Cbc0012I Integer solution of -2005.783 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 17 rows 10 columns
Cbc0031I 10 added rows had average density of 21.1
Cbc0013I At root node, 10 cuts changed objective from -2293.3941 to -2153.6205 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 330 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 325 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 282 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.753 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2005.783 best solution, best possible -2153.6192 (1.46 seconds)
Cbc0001I Search completed - best objective -2005.783, took 1699 iterations and 10 nodes (2.09 seconds)
Cbc0032I Strong branching done 92 times (641 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       2.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 49 (-14) columns and 401 (-248) elements
Clp1000I sum of infeasibilities 3.60876e-09 - average 8.01947e-11, 42 fixed columns
Coin0506I Presolve 7 (-38) rows, 7 (-42) columns and 23 (-378) elements
Clp0006I 0  Obj 2367.5694 Dual inf 52.874457 (5)
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2367.5696
Clp0000I Optimal - objective value 2367.5696
Coin0511I After Postsolve, objective 2367.5696, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2367.5696 Dual inf 202.87512 (22)
Clp0014I Perturbing problem by 0.001% of 1.2017166 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 2415.5528
Clp0000I Optimal - objective value 2415.5528
Clp0000I Optimal - objective value 2415.5528
Coin0511I After Postsolve, objective 2415.5528, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2415.552778 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 49 columns (49 integer (49 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.916%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.21927
Cbc0038I Pass   1: suminf.    0.50343 (3) obj. -1822.97 iterations 13
Cbc0038I Pass   2: suminf.    0.50343 (3) obj. -1822.97 iterations 1
Cbc0038I Solution found of -615.407
Cbc0038I Rounding solution of -1562.48 is better than previous of -615.407

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 49 columns, reduced to 17 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1635.26
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.50343 (3) obj. -1822.97 iterations 0
Cbc0038I Pass   4: suminf.    0.50343 (3) obj. -1822.97 iterations 1
Cbc0038I Pass   5: suminf.    0.10563 (3) obj. -1635.26 iterations 6
Cbc0038I Pass   6: suminf.    0.10563 (3) obj. -1635.26 iterations 0
Cbc0038I Pass   7: suminf.    0.50132 (2) obj. -1990.05 iterations 5
Cbc0038I Pass   8: suminf.    0.38889 (1) obj. -1907.22 iterations 1
Cbc0038I Pass   9: suminf.    0.33489 (1) obj. -1635.26 iterations 2
Cbc0038I Pass  10: suminf.    2.36342 (9) obj. -1841.42 iterations 11
Cbc0038I Pass  11: suminf.    0.50682 (3) obj. -1715.34 iterations 9
Cbc0038I Solution found of -1712.85
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 49 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -1712.85 to -1982.35 (0.02 seconds)
Cbc0038I Round again with cutoff of -2043.93
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  12: suminf.    1.10320 (5) obj. -2043.93 iterations 1
Cbc0038I Pass  13: suminf.    0.98680 (7) obj. -2043.93 iterations 2
Cbc0038I Pass  14: suminf.    0.43042 (2) obj. -2043.93 iterations 8
Cbc0038I Pass  15: suminf.    0.43042 (2) obj. -2043.93 iterations 0
Cbc0038I Pass  16: suminf.    0.49471 (2) obj. -2043.93 iterations 2
Cbc0038I Pass  17: suminf.    0.49205 (1) obj. -2043.93 iterations 2
Cbc0038I Pass  18: suminf.    0.44776 (2) obj. -2103.33 iterations 3
Cbc0038I Pass  19: suminf.    0.51083 (2) obj. -2043.93 iterations 4
Cbc0038I Pass  20: suminf.    1.32475 (4) obj. -2043.93 iterations 15
Cbc0038I Pass  21: suminf.    0.92920 (3) obj. -2043.93 iterations 6
Cbc0038I Pass  22: suminf.    0.17736 (1) obj. -2043.93 iterations 5
Cbc0038I Pass  23: suminf.    0.23577 (1) obj. -2114.31 iterations 1
Cbc0038I Pass  24: suminf.    0.52291 (4) obj. -2043.93 iterations 9
Cbc0038I Pass  25: suminf.    0.52291 (4) obj. -2043.93 iterations 2
Cbc0038I Pass  26: suminf.    0.32322 (2) obj. -2043.93 iterations 7
Cbc0038I Pass  27: suminf.    0.17985 (1) obj. -2043.93 iterations 1
Cbc0038I Pass  28: suminf.    0.23577 (1) obj. -2111.31 iterations 1
Cbc0038I Pass  29: suminf.    0.45544 (4) obj. -2043.93 iterations 10
Cbc0038I Pass  30: suminf.    0.45544 (4) obj. -2043.93 iterations 1
Cbc0038I Pass  31: suminf.    0.36559 (2) obj. -2043.93 iterations 3
Cbc0038I Pass  32: suminf.    0.35710 (2) obj. -2043.93 iterations 1
Cbc0038I Pass  33: suminf.    1.80664 (9) obj. -2043.93 iterations 17
Cbc0038I Pass  34: suminf.    0.93599 (8) obj. -2043.93 iterations 6
Cbc0038I Pass  35: suminf.    0.35610 (2) obj. -2043.93 iterations 8
Cbc0038I Pass  36: suminf.    0.12222 (1) obj. -2109.42 iterations 2
Cbc0038I Pass  37: suminf.    0.18874 (1) obj. -2043.93 iterations 2
Cbc0038I Pass  38: suminf.    1.64282 (10) obj. -2043.93 iterations 11
Cbc0038I Pass  39: suminf.    0.44778 (4) obj. -2043.93 iterations 11
Cbc0038I Pass  40: suminf.    0.44952 (4) obj. -2043.93 iterations 4
Cbc0038I Pass  41: suminf.    0.44952 (4) obj. -2043.93 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 49 columns, reduced to 26 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1982.35 - took 0.02 seconds
Cbc0012I Integer solution of -1982.3463 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 49 columns, reduced to 17 rows 17 columns
Cbc0031I 13 added rows had average density of 18.307692
Cbc0013I At root node, 13 cuts changed objective from -2290.2836 to -2150.2651 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 713 row cuts average 3.8 elements, 3 column cuts (3 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 658 row cuts average 36.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 16 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 95 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 50 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.716 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1982.3463 best solution, best possible -2150.18 (1.46 seconds)
Cbc0016I Integer solution of -2005.783 found by strong branching after 1893 iterations and 2 nodes (1.70 seconds)
Cbc0001I Search completed - best objective -2005.783, took 2423 iterations and 10 nodes (2.07 seconds)
Cbc0032I Strong branching done 198 times (2077 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       2.08

