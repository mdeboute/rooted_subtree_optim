Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 142 (-63) rows, 78 (-25) columns and 434 (-169) elements
Clp1000I sum of infeasibilities 3.00625e-06 - average 2.11708e-08, 67 fixed columns
Coin0506I Presolve 7 (-135) rows, 8 (-70) columns and 24 (-410) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Coin0511I After Postsolve, objective 27548.958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4599542 - largest nonzero change 2.6417538e-05 ( 0.0014761077%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Coin0511I After Postsolve, objective 27548.958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 27548.95756 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 142 rows, 78 columns (77 integer (77 of which binary)) and 434 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.536585
Cbc0038I Pass   1: suminf.    0.45179 (2) obj. -27478.9 iterations 15
Cbc0038I Solution found of -21810.7
Cbc0038I Relaxing continuous gives -21810.7
Cbc0038I Rounding solution of -24823.4 is better than previous of -21810.7

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -24823.4 to -25282.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -25509
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45179 (2) obj. -27478.9 iterations 0
Cbc0038I Pass   3: suminf.    0.12052 (1) obj. -25509 iterations 2
Cbc0038I Pass   4: suminf.    0.05714 (1) obj. -25775.5 iterations 1
Cbc0038I Pass   5: suminf.    0.73167 (3) obj. -25509 iterations 17
Cbc0038I Pass   6: suminf.    0.70398 (2) obj. -25534.9 iterations 8
Cbc0038I Pass   7: suminf.    0.19645 (1) obj. -25509 iterations 2
Cbc0038I Pass   8: suminf.    0.17143 (1) obj. -25614.2 iterations 1
Cbc0038I Pass   9: suminf.    1.63437 (7) obj. -25509 iterations 16
Cbc0038I Pass  10: suminf.    1.63437 (7) obj. -25509 iterations 4
Cbc0038I Pass  11: suminf.    0.36250 (2) obj. -27147.8 iterations 12
Cbc0038I Pass  12: suminf.    0.36250 (2) obj. -27147.8 iterations 2
Cbc0038I Pass  13: suminf.    0.09107 (1) obj. -25509 iterations 3
Cbc0038I Pass  14: suminf.    0.09107 (1) obj. -25509 iterations 0
Cbc0038I Pass  15: suminf.    0.77282 (4) obj. -25509 iterations 24
Cbc0038I Pass  16: suminf.    0.76060 (3) obj. -25509 iterations 10
Cbc0038I Pass  17: suminf.    0.52857 (2) obj. -26348 iterations 5
Cbc0038I Pass  18: suminf.    0.27778 (1) obj. -26085.4 iterations 3
Cbc0038I Pass  19: suminf.    0.45540 (2) obj. -25509 iterations 2
Cbc0038I Pass  20: suminf.    1.15681 (4) obj. -25509 iterations 15
Cbc0038I Pass  21: suminf.    1.15681 (4) obj. -25509 iterations 3
Cbc0038I Pass  22: suminf.    0.41667 (1) obj. -26602.6 iterations 12
Cbc0038I Pass  23: suminf.    0.22032 (1) obj. -25509 iterations 2
Cbc0038I Pass  24: suminf.    0.31896 (3) obj. -25509 iterations 19
Cbc0038I Pass  25: suminf.    0.31896 (3) obj. -25509 iterations 1
Cbc0038I Pass  26: suminf.    0.22857 (1) obj. -26270 iterations 10
Cbc0038I Pass  27: suminf.    0.40953 (1) obj. -25509 iterations 1
Cbc0038I Pass  28: suminf.    0.78157 (3) obj. -25509 iterations 11
Cbc0038I Pass  29: suminf.    0.32277 (2) obj. -25509 iterations 10
Cbc0038I Pass  30: suminf.    0.45357 (2) obj. -25877.1 iterations 1
Cbc0038I Pass  31: suminf.    1.56702 (6) obj. -25509 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 17 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -25282.3 to -26501.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -26710.7
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.45179 (2) obj. -27478.9 iterations 0
Cbc0038I Pass  32: suminf.    0.50025 (2) obj. -26710.7 iterations 1
Cbc0038I Pass  33: suminf.    0.50025 (2) obj. -26710.7 iterations 3
Cbc0038I Pass  34: suminf.    0.44881 (1) obj. -26710.7 iterations 6
Cbc0038I Pass  35: suminf.    0.37321 (3) obj. -26710.7 iterations 11
Cbc0038I Pass  36: suminf.    0.37321 (3) obj. -26710.7 iterations 2
Cbc0038I Pass  37: suminf.    0.50025 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  38: suminf.    0.51470 (3) obj. -26710.7 iterations 10
Cbc0038I Pass  39: suminf.    0.22870 (2) obj. -26710.7 iterations 13
Cbc0038I Pass  40: suminf.    0.69876 (2) obj. -26710.7 iterations 7
Cbc0038I Pass  41: suminf.    0.52013 (3) obj. -26710.7 iterations 8
Cbc0038I Pass  42: suminf.    0.77259 (3) obj. -26710.7 iterations 16
Cbc0038I Pass  43: suminf.    0.55893 (2) obj. -27197.4 iterations 7
Cbc0038I Pass  44: suminf.    0.49081 (2) obj. -26710.7 iterations 1
Cbc0038I Pass  45: suminf.    0.49081 (2) obj. -26710.7 iterations 3
Cbc0038I Pass  46: suminf.    0.61702 (2) obj. -26710.7 iterations 9
Cbc0038I Pass  47: suminf.    0.49081 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  48: suminf.    0.82146 (3) obj. -26710.7 iterations 14
Cbc0038I Pass  49: suminf.    0.40898 (2) obj. -26710.7 iterations 12
Cbc0038I Pass  50: suminf.    0.45714 (2) obj. -26752.3 iterations 9
Cbc0038I Pass  51: suminf.    0.43740 (2) obj. -26710.7 iterations 2
Cbc0038I Pass  52: suminf.    0.49694 (2) obj. -26710.7 iterations 8
Cbc0038I Pass  53: suminf.    0.11707 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  54: suminf.    0.11111 (1) obj. -26715.9 iterations 12
Cbc0038I Pass  55: suminf.    0.11285 (1) obj. -26710.7 iterations 2
Cbc0038I Pass  56: suminf.    0.86963 (3) obj. -26710.7 iterations 16
Cbc0038I Pass  57: suminf.    0.77579 (3) obj. -26710.7 iterations 9
Cbc0038I Pass  58: suminf.    0.36418 (2) obj. -26710.7 iterations 6
Cbc0038I Pass  59: suminf.    0.19643 (2) obj. -27182.7 iterations 1
Cbc0038I Pass  60: suminf.    0.72666 (5) obj. -26710.7 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26501.1 - took 0.02 seconds
Cbc0012I Integer solution of -26501.098 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 142 rows 78 columns, reduced to 5 rows 6 columns
Cbc0031I 6 added rows had average density of 14.833333
Cbc0013I At root node, 6 cuts changed objective from -27548.958 to -26980.623 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 9.6 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 76.4 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26501.098, took 232 iterations and 6 nodes (0.51 seconds)
Cbc0032I Strong branching done 54 times (267 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-97) rows, 119 (-83) columns and 1892 (-3761) elements
Clp1000I sum of infeasibilities 1.54149e-06 - average 1.44064e-08, 73 fixed columns
Coin0506I Presolve 37 (-70) rows, 39 (-80) columns and 214 (-1678) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 27600.775
Clp0000I Optimal - objective value 27600.775
Coin0511I After Postsolve, objective 27600.775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9993563 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 27600.775
Clp0000I Optimal - objective value 27600.775
Clp0000I Optimal - objective value 27600.775
Coin0511I After Postsolve, objective 27600.775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 27600.77514 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 119 columns (119 integer (119 of which binary)) and 1894 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.2997
Cbc0038I Pass   1: suminf.    3.83191 (31) obj. -24692.1 iterations 25
Cbc0038I Pass   2: suminf.    3.83191 (31) obj. -24692.1 iterations 1
Cbc0038I Pass   3: suminf.    0.18382 (3) obj. -24657.5 iterations 28
Cbc0038I Solution found of -24654.7
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 119 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -24654.7 to -25282.3 (0.03 seconds)
Cbc0038I Round again with cutoff of -25513.5
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   4: suminf.    5.00025 (36) obj. -25513.5 iterations 3
Cbc0038I Pass   5: suminf.    5.00025 (36) obj. -25513.5 iterations 0
Cbc0038I Pass   6: suminf.    2.80074 (24) obj. -25513.5 iterations 19
Cbc0038I Pass   7: suminf.    2.19954 (24) obj. -25513.5 iterations 18
Cbc0038I Pass   8: suminf.    1.00706 (7) obj. -26673.6 iterations 27
Cbc0038I Pass   9: suminf.    0.58820 (2) obj. -25513.5 iterations 6
Cbc0038I Pass  10: suminf.    0.42565 (2) obj. -25513.5 iterations 1
Cbc0038I Pass  11: suminf.    0.11111 (1) obj. -26715.9 iterations 4
Cbc0038I Pass  12: suminf.    0.48977 (1) obj. -25513.5 iterations 2
Cbc0038I Pass  13: suminf.    1.69296 (13) obj. -25513.5 iterations 26
Cbc0038I Pass  14: suminf.    1.62770 (11) obj. -25639.7 iterations 9
Cbc0038I Pass  15: suminf.    0.25533 (1) obj. -25513.5 iterations 11
Cbc0038I Pass  16: suminf.    0.22857 (1) obj. -25626 iterations 1
Cbc0038I Pass  17: suminf.    4.54465 (14) obj. -25513.5 iterations 27
Cbc0038I Pass  18: suminf.    2.59121 (14) obj. -25513.5 iterations 16
Cbc0038I Pass  19: suminf.    2.59121 (14) obj. -25513.5 iterations 0
Cbc0038I Pass  20: suminf.    1.78117 (5) obj. -25513.5 iterations 18
Cbc0038I Pass  21: suminf.    1.78117 (5) obj. -25513.5 iterations 2
Cbc0038I Pass  22: suminf.    0.71607 (2) obj. -26518.2 iterations 12
Cbc0038I Pass  23: suminf.    0.50253 (2) obj. -25513.5 iterations 1
Cbc0038I Pass  24: suminf.    0.42634 (2) obj. -25513.5 iterations 2
Cbc0038I Pass  25: suminf.    0.10625 (1) obj. -25513.5 iterations 10
Cbc0038I Pass  26: suminf.    0.10625 (1) obj. -25513.5 iterations 0
Cbc0038I Pass  27: suminf.    0.41667 (1) obj. -26448.7 iterations 3
Cbc0038I Pass  28: suminf.    2.01705 (12) obj. -25513.5 iterations 21
Cbc0038I Pass  29: suminf.    1.01035 (5) obj. -25513.5 iterations 10
Cbc0038I Pass  30: suminf.    0.78748 (6) obj. -26242.6 iterations 3
Cbc0038I Pass  31: suminf.    0.41058 (1) obj. -25513.5 iterations 7
Cbc0038I Pass  32: suminf.    0.16786 (2) obj. -26238.4 iterations 4
Cbc0038I Pass  33: suminf.    2.15965 (10) obj. -25513.5 iterations 22
Cbc0038I Rounding solution of -26295.9 is better than previous of -25282.3

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 119 columns, reduced to 45 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -26295.9 to -26501.1 (0.07 seconds)
Cbc0038I Round again with cutoff of -26719.7
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.98057 (40) obj. -26719.7 iterations 5
Cbc0038I Pass  34: suminf.    4.61992 (36) obj. -26719.7 iterations 3
Cbc0038I Pass  35: suminf.    4.46397 (36) obj. -26719.7 iterations 5
Cbc0038I Pass  36: suminf.    2.64178 (24) obj. -26719.7 iterations 12
Cbc0038I Pass  37: suminf.    0.28954 (4) obj. -26719.7 iterations 34
Cbc0038I Pass  38: suminf.    0.28808 (4) obj. -26719.7 iterations 7
Cbc0038I Pass  39: suminf.    0.52342 (2) obj. -26719.7 iterations 12
Cbc0038I Pass  40: suminf.    0.19643 (2) obj. -27182.7 iterations 5
Cbc0038I Pass  41: suminf.    0.36097 (2) obj. -26719.7 iterations 1
Cbc0038I Pass  42: suminf.    2.14630 (8) obj. -26719.7 iterations 18
Cbc0038I Pass  43: suminf.    1.23431 (6) obj. -26763.7 iterations 12
Cbc0038I Pass  44: suminf.    0.48544 (1) obj. -26719.7 iterations 7
Cbc0038I Pass  45: suminf.    0.47222 (1) obj. -26759.5 iterations 3
Cbc0038I Pass  46: suminf.    1.81626 (11) obj. -26719.7 iterations 21
Cbc0038I Pass  47: suminf.    1.59453 (8) obj. -26719.7 iterations 7
Cbc0038I Pass  48: suminf.    0.73733 (2) obj. -26719.7 iterations 11
Cbc0038I Pass  49: suminf.    0.68148 (2) obj. -26719.7 iterations 5
Cbc0038I Pass  50: suminf.    1.55368 (8) obj. -26719.7 iterations 14
Cbc0038I Pass  51: suminf.    1.53812 (8) obj. -26770.9 iterations 6
Cbc0038I Pass  52: suminf.    0.48444 (1) obj. -26719.7 iterations 9
Cbc0038I Pass  53: suminf.    0.47222 (1) obj. -26756.5 iterations 3
Cbc0038I Pass  54: suminf.    1.22280 (7) obj. -26719.7 iterations 13
Cbc0038I Pass  55: suminf.    0.96346 (7) obj. -27177.6 iterations 8
Cbc0038I Pass  56: suminf.    0.35706 (2) obj. -26719.7 iterations 6
Cbc0038I Pass  57: suminf.    0.19643 (2) obj. -27171.7 iterations 3
Cbc0038I Pass  58: suminf.    1.29477 (9) obj. -26719.7 iterations 21
Cbc0038I Pass  59: suminf.    1.25234 (8) obj. -26901.2 iterations 9
Cbc0038I Pass  60: suminf.    0.36450 (2) obj. -26719.7 iterations 7
Cbc0038I Pass  61: suminf.    0.30357 (2) obj. -26891.1 iterations 2
Cbc0038I Pass  62: suminf.    1.32674 (9) obj. -26719.7 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 119 columns, reduced to 12 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -26501.1 - took 0.06 seconds
Cbc0012I Integer solution of -26501.098 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 107 rows 119 columns, reduced to 5 rows 6 columns
Cbc0031I 11 added rows had average density of 20.454545
Cbc0013I At root node, 11 cuts changed objective from -27556.058 to -26980.653 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 7.1 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 75 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26501.098 best solution, best possible -26973.252 (0.23 seconds)
Cbc0001I Search completed - best objective -26501.098, took 270 iterations and 6 nodes (0.42 seconds)
Cbc0032I Strong branching done 58 times (325 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 142 (-63) rows, 78 (-25) columns and 434 (-169) elements
Clp1000I sum of infeasibilities 3.00625e-06 - average 2.11708e-08, 67 fixed columns
Coin0506I Presolve 7 (-135) rows, 8 (-70) columns and 24 (-410) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Coin0511I After Postsolve, objective 27548.958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4599542 - largest nonzero change 2.6417538e-05 ( 0.0014761077%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Clp0000I Optimal - objective value 27548.958
Coin0511I After Postsolve, objective 27548.958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 27548.95756 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 142 rows, 78 columns (77 integer (77 of which binary)) and 434 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.536585
Cbc0038I Pass   1: suminf.    0.45179 (2) obj. -27478.9 iterations 15
Cbc0038I Solution found of -21810.7
Cbc0038I Relaxing continuous gives -21810.7
Cbc0038I Rounding solution of -24823.4 is better than previous of -21810.7

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -24823.4 to -25282.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -25509
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45179 (2) obj. -27478.9 iterations 0
Cbc0038I Pass   3: suminf.    0.12052 (1) obj. -25509 iterations 2
Cbc0038I Pass   4: suminf.    0.05714 (1) obj. -25775.5 iterations 1
Cbc0038I Pass   5: suminf.    0.73167 (3) obj. -25509 iterations 17
Cbc0038I Pass   6: suminf.    0.70398 (2) obj. -25534.9 iterations 8
Cbc0038I Pass   7: suminf.    0.19645 (1) obj. -25509 iterations 2
Cbc0038I Pass   8: suminf.    0.17143 (1) obj. -25614.2 iterations 1
Cbc0038I Pass   9: suminf.    1.63437 (7) obj. -25509 iterations 16
Cbc0038I Pass  10: suminf.    1.63437 (7) obj. -25509 iterations 4
Cbc0038I Pass  11: suminf.    0.36250 (2) obj. -27147.8 iterations 12
Cbc0038I Pass  12: suminf.    0.36250 (2) obj. -27147.8 iterations 2
Cbc0038I Pass  13: suminf.    0.09107 (1) obj. -25509 iterations 3
Cbc0038I Pass  14: suminf.    0.09107 (1) obj. -25509 iterations 0
Cbc0038I Pass  15: suminf.    0.77282 (4) obj. -25509 iterations 24
Cbc0038I Pass  16: suminf.    0.76060 (3) obj. -25509 iterations 10
Cbc0038I Pass  17: suminf.    0.52857 (2) obj. -26348 iterations 5
Cbc0038I Pass  18: suminf.    0.27778 (1) obj. -26085.4 iterations 3
Cbc0038I Pass  19: suminf.    0.45540 (2) obj. -25509 iterations 2
Cbc0038I Pass  20: suminf.    1.15681 (4) obj. -25509 iterations 15
Cbc0038I Pass  21: suminf.    1.15681 (4) obj. -25509 iterations 3
Cbc0038I Pass  22: suminf.    0.41667 (1) obj. -26602.6 iterations 12
Cbc0038I Pass  23: suminf.    0.22032 (1) obj. -25509 iterations 2
Cbc0038I Pass  24: suminf.    0.31896 (3) obj. -25509 iterations 19
Cbc0038I Pass  25: suminf.    0.31896 (3) obj. -25509 iterations 1
Cbc0038I Pass  26: suminf.    0.22857 (1) obj. -26270 iterations 10
Cbc0038I Pass  27: suminf.    0.40953 (1) obj. -25509 iterations 1
Cbc0038I Pass  28: suminf.    0.78157 (3) obj. -25509 iterations 11
Cbc0038I Pass  29: suminf.    0.32277 (2) obj. -25509 iterations 10
Cbc0038I Pass  30: suminf.    0.45357 (2) obj. -25877.1 iterations 1
Cbc0038I Pass  31: suminf.    1.56702 (6) obj. -25509 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 17 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -25282.3 to -26501.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -26710.7
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.45179 (2) obj. -27478.9 iterations 0
Cbc0038I Pass  32: suminf.    0.50025 (2) obj. -26710.7 iterations 1
Cbc0038I Pass  33: suminf.    0.50025 (2) obj. -26710.7 iterations 3
Cbc0038I Pass  34: suminf.    0.44881 (1) obj. -26710.7 iterations 6
Cbc0038I Pass  35: suminf.    0.37321 (3) obj. -26710.7 iterations 11
Cbc0038I Pass  36: suminf.    0.37321 (3) obj. -26710.7 iterations 2
Cbc0038I Pass  37: suminf.    0.50025 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  38: suminf.    0.51470 (3) obj. -26710.7 iterations 10
Cbc0038I Pass  39: suminf.    0.22870 (2) obj. -26710.7 iterations 13
Cbc0038I Pass  40: suminf.    0.69876 (2) obj. -26710.7 iterations 7
Cbc0038I Pass  41: suminf.    0.52013 (3) obj. -26710.7 iterations 8
Cbc0038I Pass  42: suminf.    0.77259 (3) obj. -26710.7 iterations 16
Cbc0038I Pass  43: suminf.    0.55893 (2) obj. -27197.4 iterations 7
Cbc0038I Pass  44: suminf.    0.49081 (2) obj. -26710.7 iterations 1
Cbc0038I Pass  45: suminf.    0.49081 (2) obj. -26710.7 iterations 3
Cbc0038I Pass  46: suminf.    0.61702 (2) obj. -26710.7 iterations 9
Cbc0038I Pass  47: suminf.    0.49081 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  48: suminf.    0.82146 (3) obj. -26710.7 iterations 14
Cbc0038I Pass  49: suminf.    0.40898 (2) obj. -26710.7 iterations 12
Cbc0038I Pass  50: suminf.    0.45714 (2) obj. -26752.3 iterations 9
Cbc0038I Pass  51: suminf.    0.43740 (2) obj. -26710.7 iterations 2
Cbc0038I Pass  52: suminf.    0.49694 (2) obj. -26710.7 iterations 8
Cbc0038I Pass  53: suminf.    0.11707 (2) obj. -26710.7 iterations 11
Cbc0038I Pass  54: suminf.    0.11111 (1) obj. -26715.9 iterations 12
Cbc0038I Pass  55: suminf.    0.11285 (1) obj. -26710.7 iterations 2
Cbc0038I Pass  56: suminf.    0.86963 (3) obj. -26710.7 iterations 16
Cbc0038I Pass  57: suminf.    0.77579 (3) obj. -26710.7 iterations 9
Cbc0038I Pass  58: suminf.    0.36418 (2) obj. -26710.7 iterations 6
Cbc0038I Pass  59: suminf.    0.19643 (2) obj. -27182.7 iterations 1
Cbc0038I Pass  60: suminf.    0.72666 (5) obj. -26710.7 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 78 columns, reduced to 9 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26501.1 - took 0.02 seconds
Cbc0012I Integer solution of -26501.098 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 142 rows 78 columns, reduced to 5 rows 6 columns
Cbc0031I 6 added rows had average density of 14.833333
Cbc0013I At root node, 6 cuts changed objective from -27548.958 to -26980.623 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 9.6 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 76.4 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26501.098, took 232 iterations and 6 nodes (0.59 seconds)
Cbc0032I Strong branching done 54 times (267 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-98) rows, 119 (-84) columns and 1892 (-3762) elements
Clp1000I sum of infeasibilities 1.54149e-06 - average 1.44064e-08, 73 fixed columns
Coin0506I Presolve 37 (-70) rows, 39 (-80) columns and 214 (-1678) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 27600.775
Clp0000I Optimal - objective value 27600.775
Coin0511I After Postsolve, objective 27600.775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9993563 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 27600.775
Clp0000I Optimal - objective value 27600.775
Clp0000I Optimal - objective value 27600.775
Coin0511I After Postsolve, objective 27600.775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 27600.77514 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 119 columns (119 integer (119 of which binary)) and 1894 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.160%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.2997
Cbc0038I Pass   1: suminf.    3.83191 (31) obj. -24692.1 iterations 25
Cbc0038I Pass   2: suminf.    3.83191 (31) obj. -24692.1 iterations 1
Cbc0038I Pass   3: suminf.    0.18382 (3) obj. -24657.5 iterations 28
Cbc0038I Solution found of -24654.7
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 119 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -24654.7 to -25282.3 (0.03 seconds)
Cbc0038I Round again with cutoff of -25513.5
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   4: suminf.    5.00025 (36) obj. -25513.5 iterations 3
Cbc0038I Pass   5: suminf.    5.00025 (36) obj. -25513.5 iterations 0
Cbc0038I Pass   6: suminf.    2.80074 (24) obj. -25513.5 iterations 19
Cbc0038I Pass   7: suminf.    2.19954 (24) obj. -25513.5 iterations 18
Cbc0038I Pass   8: suminf.    1.00706 (7) obj. -26673.6 iterations 27
Cbc0038I Pass   9: suminf.    0.58820 (2) obj. -25513.5 iterations 6
Cbc0038I Pass  10: suminf.    0.42565 (2) obj. -25513.5 iterations 1
Cbc0038I Pass  11: suminf.    0.11111 (1) obj. -26715.9 iterations 4
Cbc0038I Pass  12: suminf.    0.48977 (1) obj. -25513.5 iterations 2
Cbc0038I Pass  13: suminf.    1.69296 (13) obj. -25513.5 iterations 26
Cbc0038I Pass  14: suminf.    1.62770 (11) obj. -25639.7 iterations 9
Cbc0038I Pass  15: suminf.    0.25533 (1) obj. -25513.5 iterations 11
Cbc0038I Pass  16: suminf.    0.22857 (1) obj. -25626 iterations 1
Cbc0038I Pass  17: suminf.    4.54465 (14) obj. -25513.5 iterations 27
Cbc0038I Pass  18: suminf.    2.59121 (14) obj. -25513.5 iterations 16
Cbc0038I Pass  19: suminf.    2.59121 (14) obj. -25513.5 iterations 0
Cbc0038I Pass  20: suminf.    1.78117 (5) obj. -25513.5 iterations 18
Cbc0038I Pass  21: suminf.    1.78117 (5) obj. -25513.5 iterations 2
Cbc0038I Pass  22: suminf.    0.71607 (2) obj. -26518.2 iterations 12
Cbc0038I Pass  23: suminf.    0.50253 (2) obj. -25513.5 iterations 1
Cbc0038I Pass  24: suminf.    0.42634 (2) obj. -25513.5 iterations 2
Cbc0038I Pass  25: suminf.    0.10625 (1) obj. -25513.5 iterations 10
Cbc0038I Pass  26: suminf.    0.10625 (1) obj. -25513.5 iterations 0
Cbc0038I Pass  27: suminf.    0.41667 (1) obj. -26448.7 iterations 3
Cbc0038I Pass  28: suminf.    2.01705 (12) obj. -25513.5 iterations 21
Cbc0038I Pass  29: suminf.    1.01035 (5) obj. -25513.5 iterations 10
Cbc0038I Pass  30: suminf.    0.78748 (6) obj. -26242.6 iterations 3
Cbc0038I Pass  31: suminf.    0.41058 (1) obj. -25513.5 iterations 7
Cbc0038I Pass  32: suminf.    0.16786 (2) obj. -26238.4 iterations 4
Cbc0038I Pass  33: suminf.    2.15965 (10) obj. -25513.5 iterations 22
Cbc0038I Rounding solution of -26295.9 is better than previous of -25282.3

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 119 columns, reduced to 45 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -26295.9 to -26501.1 (0.08 seconds)
Cbc0038I Round again with cutoff of -26719.7
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.98057 (40) obj. -26719.7 iterations 5
Cbc0038I Pass  34: suminf.    4.61992 (36) obj. -26719.7 iterations 3
Cbc0038I Pass  35: suminf.    4.46397 (36) obj. -26719.7 iterations 5
Cbc0038I Pass  36: suminf.    2.64178 (24) obj. -26719.7 iterations 12
Cbc0038I Pass  37: suminf.    0.28954 (4) obj. -26719.7 iterations 34
Cbc0038I Pass  38: suminf.    0.28808 (4) obj. -26719.7 iterations 7
Cbc0038I Pass  39: suminf.    0.52342 (2) obj. -26719.7 iterations 12
Cbc0038I Pass  40: suminf.    0.19643 (2) obj. -27182.7 iterations 5
Cbc0038I Pass  41: suminf.    0.36097 (2) obj. -26719.7 iterations 1
Cbc0038I Pass  42: suminf.    2.14630 (8) obj. -26719.7 iterations 18
Cbc0038I Pass  43: suminf.    1.23431 (6) obj. -26763.7 iterations 12
Cbc0038I Pass  44: suminf.    0.48544 (1) obj. -26719.7 iterations 7
Cbc0038I Pass  45: suminf.    0.47222 (1) obj. -26759.5 iterations 3
Cbc0038I Pass  46: suminf.    1.81626 (11) obj. -26719.7 iterations 21
Cbc0038I Pass  47: suminf.    1.59453 (8) obj. -26719.7 iterations 7
Cbc0038I Pass  48: suminf.    0.73733 (2) obj. -26719.7 iterations 11
Cbc0038I Pass  49: suminf.    0.68148 (2) obj. -26719.7 iterations 5
Cbc0038I Pass  50: suminf.    1.55368 (8) obj. -26719.7 iterations 14
Cbc0038I Pass  51: suminf.    1.53812 (8) obj. -26770.9 iterations 6
Cbc0038I Pass  52: suminf.    0.48444 (1) obj. -26719.7 iterations 9
Cbc0038I Pass  53: suminf.    0.47222 (1) obj. -26756.5 iterations 3
Cbc0038I Pass  54: suminf.    1.22280 (7) obj. -26719.7 iterations 13
Cbc0038I Pass  55: suminf.    0.96346 (7) obj. -27177.6 iterations 8
Cbc0038I Pass  56: suminf.    0.35706 (2) obj. -26719.7 iterations 6
Cbc0038I Pass  57: suminf.    0.19643 (2) obj. -27171.7 iterations 3
Cbc0038I Pass  58: suminf.    1.29477 (9) obj. -26719.7 iterations 21
Cbc0038I Pass  59: suminf.    1.25234 (8) obj. -26901.2 iterations 9
Cbc0038I Pass  60: suminf.    0.36450 (2) obj. -26719.7 iterations 7
Cbc0038I Pass  61: suminf.    0.30357 (2) obj. -26891.1 iterations 2
Cbc0038I Pass  62: suminf.    1.32674 (9) obj. -26719.7 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 119 columns, reduced to 12 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -26501.1 - took 0.06 seconds
Cbc0012I Integer solution of -26501.098 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 107 rows 119 columns, reduced to 5 rows 6 columns
Cbc0031I 11 added rows had average density of 20.454545
Cbc0013I At root node, 11 cuts changed objective from -27556.058 to -26980.653 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 7.1 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 75 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26501.098 best solution, best possible -26973.252 (0.26 seconds)
Cbc0001I Search completed - best objective -26501.098, took 270 iterations and 6 nodes (0.46 seconds)
Cbc0032I Strong branching done 58 times (325 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.47

