Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 1.95939e-05 - average 3.87999e-08, 86 fixed columns
Coin0506I Presolve 334 (-171) rows, 176 (-86) columns and 996 (-506) elements
Clp0029I End of values pass after 176 iterations
Clp0014I Perturbing problem by 0.001% of 2.0479318 - largest nonzero change 0 ( 0%) - largest zero change 2.9283556e-05
Clp0000I Optimal - objective value 174.42556
Clp0000I Optimal - objective value 174.42556
Coin0511I After Postsolve, objective 174.42556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 174.42556
Clp0000I Optimal - objective value 174.42556
Clp0000I Optimal - objective value 174.42556
Coin0511I After Postsolve, objective 174.42556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 174.4255574 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 80 integers unsatisfied sum - 12.7336
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.9275 iterations 217
Cbc0038I Solution found of -2.9275
Cbc0038I Relaxing continuous gives -2.9275
Cbc0038I Rounding solution of -18.7172 is better than previous of -2.9275

Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 149 rows 81 columns
Cbc0038I Mini branch and bound improved solution from -18.7172 to -79.2547 (0.07 seconds)
Cbc0038I Round again with cutoff of -88.7719
Cbc0038I Pass   2: suminf.    2.67645 (15) obj. -88.7719 iterations 41
Cbc0038I Pass   3: suminf.    2.55932 (14) obj. -88.7719 iterations 1
Cbc0038I Pass   4: suminf.    2.55932 (14) obj. -88.7719 iterations 0
Cbc0038I Pass   5: suminf.    2.70776 (7) obj. -88.7719 iterations 29
Cbc0038I Pass   6: suminf.    2.01525 (6) obj. -88.7719 iterations 12
Cbc0038I Pass   7: suminf.    1.87812 (7) obj. -88.7719 iterations 11
Cbc0038I Pass   8: suminf.    1.84553 (13) obj. -88.7719 iterations 7
Cbc0038I Pass   9: suminf.    1.47592 (6) obj. -88.7719 iterations 28
Cbc0038I Pass  10: suminf.    1.34893 (6) obj. -88.7719 iterations 31
Cbc0038I Pass  11: suminf.    1.44060 (5) obj. -88.7719 iterations 27
Cbc0038I Pass  12: suminf.    1.42613 (5) obj. -88.7719 iterations 3
Cbc0038I Pass  13: suminf.    1.16279 (5) obj. -88.7719 iterations 10
Cbc0038I Pass  14: suminf.    1.09773 (6) obj. -88.7719 iterations 20
Cbc0038I Pass  15: suminf.    1.59513 (5) obj. -88.7719 iterations 23
Cbc0038I Pass  16: suminf.    1.52503 (5) obj. -88.7719 iterations 9
Cbc0038I Pass  17: suminf.    0.73702 (3) obj. -88.7719 iterations 13
Cbc0038I Pass  18: suminf.    1.50863 (5) obj. -88.7719 iterations 5
Cbc0038I Pass  19: suminf.    0.78893 (4) obj. -88.7719 iterations 7
Cbc0038I Pass  20: suminf.    3.99068 (12) obj. -88.7719 iterations 48
Cbc0038I Pass  21: suminf.    3.33057 (11) obj. -88.7719 iterations 28
Cbc0038I Pass  22: suminf.    3.02589 (12) obj. -88.7719 iterations 10
Cbc0038I Pass  23: suminf.    3.02589 (12) obj. -88.7719 iterations 0
Cbc0038I Pass  24: suminf.    2.36927 (5) obj. -88.7719 iterations 21
Cbc0038I Pass  25: suminf.    1.62608 (6) obj. -88.7719 iterations 10
Cbc0038I Pass  26: suminf.    2.28554 (5) obj. -88.7719 iterations 24
Cbc0038I Pass  27: suminf.    1.80649 (5) obj. -88.7719 iterations 4
Cbc0038I Pass  28: suminf.    1.64657 (5) obj. -88.7719 iterations 13
Cbc0038I Pass  29: suminf.    1.69813 (6) obj. -88.7719 iterations 10
Cbc0038I Pass  30: suminf.    1.58947 (4) obj. -88.7719 iterations 6
Cbc0038I Pass  31: suminf.    1.83087 (6) obj. -88.7719 iterations 10
Cbc0038I Rounding solution of -84.9814 is better than previous of -79.2547

Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 177 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -84.9814 to -97.3682 (0.17 seconds)
Cbc0038I Round again with cutoff of -112.78
Cbc0038I Pass  31: suminf.    3.73145 (17) obj. -112.78 iterations 9
Cbc0038I Pass  32: suminf.    3.60254 (14) obj. -112.78 iterations 13
Cbc0038I Pass  33: suminf.    3.60254 (14) obj. -112.78 iterations 0
Cbc0038I Pass  34: suminf.    3.75322 (13) obj. -112.78 iterations 29
Cbc0038I Pass  35: suminf.    3.54074 (14) obj. -112.78 iterations 23
Cbc0038I Pass  36: suminf.    3.19812 (10) obj. -112.78 iterations 15
Cbc0038I Pass  37: suminf.    2.72210 (8) obj. -112.78 iterations 15
Cbc0038I Pass  38: suminf.    2.37411 (15) obj. -112.78 iterations 35
Cbc0038I Pass  39: suminf.    3.54873 (9) obj. -112.78 iterations 40
Cbc0038I Pass  40: suminf.    2.98324 (9) obj. -112.78 iterations 20
Cbc0038I Pass  41: suminf.    2.71543 (11) obj. -112.78 iterations 13
Cbc0038I Pass  42: suminf.    1.66338 (7) obj. -112.78 iterations 26
Cbc0038I Pass  43: suminf.    1.76803 (7) obj. -112.78 iterations 30
Cbc0038I Pass  44: suminf.    1.62986 (7) obj. -112.78 iterations 14
Cbc0038I Pass  45: suminf.    2.62849 (8) obj. -112.78 iterations 28
Cbc0038I Pass  46: suminf.    2.27266 (7) obj. -112.78 iterations 13
Cbc0038I Pass  47: suminf.    1.81883 (6) obj. -112.78 iterations 15
Cbc0038I Pass  48: suminf.    2.45973 (8) obj. -112.78 iterations 29
Cbc0038I Pass  49: suminf.    2.41237 (14) obj. -112.78 iterations 13
Cbc0038I Pass  50: suminf.    2.74140 (9) obj. -112.78 iterations 27
Cbc0038I Pass  51: suminf.    2.04732 (9) obj. -112.78 iterations 15
Cbc0038I Pass  52: suminf.    1.83622 (7) obj. -112.78 iterations 10
Cbc0038I Pass  53: suminf.    2.51125 (8) obj. -112.78 iterations 13
Cbc0038I Pass  54: suminf.    1.93055 (7) obj. -112.78 iterations 14
Cbc0038I Pass  55: suminf.    1.84953 (7) obj. -112.78 iterations 11
Cbc0038I Pass  56: suminf.    2.61450 (10) obj. -112.78 iterations 24
Cbc0038I Pass  57: suminf.    2.41237 (14) obj. -112.78 iterations 15
Cbc0038I Pass  58: suminf.    2.41237 (14) obj. -112.78 iterations 0
Cbc0038I Pass  59: suminf.    2.27673 (12) obj. -112.78 iterations 20
Cbc0038I Pass  60: suminf.    2.14073 (7) obj. -112.78 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 173 rows 94 columns
Cbc0038I Mini branch and bound improved solution from -97.3682 to -97.7752 (0.27 seconds)
Cbc0038I Round again with cutoff of -131.273
Cbc0038I Pass  60: suminf.    4.74425 (23) obj. -131.273 iterations 17
Cbc0038I Pass  61: suminf.    4.73559 (22) obj. -131.273 iterations 9
Cbc0038I Pass  62: suminf.    6.02693 (20) obj. -131.273 iterations 38
Cbc0038I Pass  63: suminf.    4.77839 (23) obj. -131.273 iterations 34
Cbc0038I Pass  64: suminf.    4.60234 (25) obj. -131.273 iterations 15
Cbc0038I Pass  65: suminf.    4.60234 (25) obj. -131.273 iterations 0
Cbc0038I Pass  66: suminf.    4.83124 (19) obj. -131.273 iterations 31
Cbc0038I Pass  67: suminf.    4.73559 (22) obj. -131.273 iterations 28
Cbc0038I Pass  68: suminf.    4.83524 (18) obj. -131.273 iterations 27
Cbc0038I Pass  69: suminf.    8.17839 (26) obj. -131.273 iterations 63
Cbc0038I Pass  70: suminf.    4.18004 (13) obj. -131.273 iterations 49
Cbc0038I Pass  71: suminf.    4.17731 (13) obj. -131.273 iterations 11
Cbc0038I Pass  72: suminf.    5.45477 (14) obj. -131.273 iterations 32
Cbc0038I Pass  73: suminf.    4.28958 (12) obj. -131.273 iterations 18
Cbc0038I Pass  74: suminf.    4.38296 (11) obj. -131.273 iterations 22
Cbc0038I Pass  75: suminf.    4.22007 (11) obj. -131.273 iterations 12
Cbc0038I Pass  76: suminf.    3.74356 (11) obj. -131.273 iterations 12
Cbc0038I Pass  77: suminf.    3.40324 (13) obj. -131.273 iterations 39
Cbc0038I Pass  78: suminf.    3.24850 (12) obj. -131.273 iterations 10
Cbc0038I Pass  79: suminf.    4.83171 (12) obj. -131.273 iterations 34
Cbc0038I Pass  80: suminf.    3.73043 (11) obj. -131.273 iterations 7
Cbc0038I Pass  81: suminf.    3.72472 (11) obj. -131.273 iterations 4
Cbc0038I Pass  82: suminf.    3.70366 (14) obj. -131.273 iterations 13
Cbc0038I Pass  83: suminf.    3.95216 (14) obj. -131.273 iterations 31
Cbc0038I Pass  84: suminf.    3.33778 (15) obj. -131.273 iterations 31
Cbc0038I Pass  85: suminf.    4.58967 (15) obj. -131.273 iterations 29
Cbc0038I Pass  86: suminf.    3.39488 (17) obj. -131.273 iterations 32
Cbc0038I Pass  87: suminf.    3.21115 (15) obj. -131.273 iterations 15
Cbc0038I Pass  88: suminf.    3.21115 (15) obj. -131.273 iterations 0
Cbc0038I Pass  89: suminf.    4.13958 (13) obj. -131.273 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 194 rows 106 columns
Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
Cbc0038I After 0.38 seconds - Feasibility pump exiting with objective of -97.7752 - took 0.36 seconds
Cbc0012I Integer solution of -97.77524 found by feasibility pump after 0 iterations and 0 nodes (0.38 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 149 rows 81 columns
Cbc0031I 39 added rows had average density of 191.76923
Cbc0013I At root node, 39 cuts changed objective from -174.42556 to -160.30744 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 40255 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.521 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3778 row cuts average 257.0 elements, 0 column cuts (0 active)  in 0.531 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.661 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 234 row cuts average 252.8 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -97.77524 best solution, best possible -160.30744 (6.16 seconds)
Cbc0010I After 11 nodes, 9 on tree, -97.77524 best solution, best possible -160.30744 (6.88 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 11 rows 12 columns
Cbc0010I After 72 nodes, 22 on tree, -97.77524 best solution, best possible -160.30744 (7.58 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 20 rows 18 columns
Cbc0012I Integer solution of -98.006391 found by rounding after 29579 iterations and 194 nodes (8.14 seconds)
Cbc0012I Integer solution of -102.53756 found by rounding after 30074 iterations and 210 nodes (8.20 seconds)
Cbc0010I After 243 nodes, 10 on tree, -102.53756 best solution, best possible -160.30744 (8.30 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 77 rows 49 columns
Cbc0001I Search completed - best objective -102.53756, took 33688 iterations and 310 nodes (8.54 seconds)
Cbc0032I Strong branching done 3120 times (71854 iterations), fathomed 49 nodes and fixed 185 variables
Cbc0035I Maximum depth 67, 1972 variables fixed on reduced cost
Total time (CPU seconds):       8.38   (Wallclock seconds):       8.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 351 (-175) rows, 368 (-156) columns and 15636 (-20100) elements
Clp1000I sum of infeasibilities 3.63226e-06 - average 1.03483e-08, 192 fixed columns
Coin0506I Presolve 153 (-198) rows, 173 (-195) columns and 629 (-15007) elements
Clp0006I 0  Obj 45.899545 Dual inf 24.962357 (173)
Clp0029I End of values pass after 173 iterations
Clp0014I Perturbing problem by 0.001% of 1.4205115 - largest nonzero change 2.9686601e-05 ( 0.0024750985%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 46.909215
Clp0000I Optimal - objective value 46.909215
Coin0511I After Postsolve, objective 46.909215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 46.909215 Dual inf 198.76524 (108)
Clp0014I Perturbing problem by 0.001% of 1.8801027 - largest nonzero change 2.8501948e-05 ( 0.0025539644%) - largest zero change 2.9904552e-05
Clp0000I Optimal - objective value 221.86979
Clp0000I Optimal - objective value 221.86979
Clp0000I Optimal - objective value 221.86979
Coin0511I After Postsolve, objective 221.86979, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 221.8697881 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 351 rows, 368 columns (368 integer (368 of which binary)) and 15636 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 102 integers unsatisfied sum - 8.18083
Cbc0038I Pass   1: suminf.    4.83199 (90) obj. -219.743 iterations 20
Cbc0038I Pass   2: suminf.    3.94420 (88) obj. -206.751 iterations 7
Cbc0038I Pass   3: suminf.    3.18072 (75) obj. -164.503 iterations 13
Cbc0038I Pass   4: suminf.    1.96259 (53) obj. -130.499 iterations 22
Cbc0038I Pass   5: suminf.    1.12099 (36) obj. -110.547 iterations 17
Cbc0038I Pass   6: suminf.    0.61209 (24) obj. -97.1414 iterations 12
Cbc0038I Pass   7: suminf.    0.25462 (12) obj. -83.5569 iterations 12
Cbc0038I Solution found of -70.8307
Cbc0038I Rounding solution of -76.035 is better than previous of -70.8307

Cbc0038I Before mini branch and bound, 266 integers at bound fixed and 0 continuous
Cbc0038I Full problem 351 rows 368 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -76.035 to -80.9394 (0.14 seconds)
Cbc0038I Round again with cutoff of -95.0325
Cbc0038I Pass   8: suminf.    4.83199 (90) obj. -219.743 iterations 0
Cbc0038I Pass   9: suminf.    3.94420 (88) obj. -206.751 iterations 8
Cbc0038I Pass  10: suminf.    2.89765 (70) obj. -156.956 iterations 18
Cbc0038I Pass  11: suminf.    1.96259 (53) obj. -130.499 iterations 17
Cbc0038I Pass  12: suminf.    1.16544 (37) obj. -111.502 iterations 16
Cbc0038I Pass  13: suminf.    0.58508 (20) obj. -95.0325 iterations 23
Cbc0038I Pass  14: suminf.    0.59419 (3) obj. -95.0325 iterations 30
Cbc0038I Pass  15: suminf.    0.40905 (4) obj. -95.0325 iterations 13
Cbc0038I Pass  16: suminf.    0.45602 (4) obj. -95.0325 iterations 7
Cbc0038I Pass  17: suminf.    0.88576 (16) obj. -96.1973 iterations 71
Cbc0038I Pass  18: suminf.    0.70306 (12) obj. -95.5169 iterations 11
Cbc0038I Pass  19: suminf.    0.55482 (8) obj. -95.0325 iterations 47
Cbc0038I Pass  20: suminf.    0.54028 (6) obj. -95.0325 iterations 9
Cbc0038I Pass  21: suminf.    0.64417 (7) obj. -95.0325 iterations 58
Cbc0038I Pass  22: suminf.    0.64417 (7) obj. -95.0325 iterations 0
Cbc0038I Pass  23: suminf.    0.62983 (5) obj. -95.0325 iterations 13
Cbc0038I Pass  24: suminf.    0.42289 (4) obj. -96.0129 iterations 4
Cbc0038I Pass  25: suminf.    0.82681 (4) obj. -95.0325 iterations 29
Cbc0038I Pass  26: suminf.    0.82681 (4) obj. -95.0325 iterations 8
Cbc0038I Pass  27: suminf.    1.42188 (5) obj. -95.0325 iterations 14
Cbc0038I Pass  28: suminf.    1.42188 (5) obj. -95.0325 iterations 0
Cbc0038I Pass  29: suminf.    0.82681 (4) obj. -95.0325 iterations 12
Cbc0038I Pass  30: suminf.    4.02387 (24) obj. -95.0325 iterations 54
Cbc0038I Pass  31: suminf.    1.66962 (20) obj. -95.0325 iterations 15
Cbc0038I Pass  32: suminf.    1.32946 (19) obj. -95.0325 iterations 2
Cbc0038I Pass  33: suminf.    0.95540 (13) obj. -95.0325 iterations 20
Cbc0038I Pass  34: suminf.    0.75283 (13) obj. -95.0325 iterations 15
Cbc0038I Pass  35: suminf.    0.74616 (7) obj. -95.0325 iterations 21
Cbc0038I Pass  36: suminf.    0.48114 (7) obj. -95.0325 iterations 11
Cbc0038I Pass  37: suminf.    0.64990 (7) obj. -95.0325 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 351 rows 368 columns, reduced to 66 rows 76 columns
Cbc0038I Mini branch and bound improved solution from -80.9394 to -90.8272 (0.26 seconds)
Cbc0038I Round again with cutoff of -120.4
Cbc0038I Pass  37: suminf.    4.83199 (90) obj. -219.743 iterations 0
Cbc0038I Pass  38: suminf.    3.94420 (88) obj. -206.751 iterations 8
Cbc0038I Pass  39: suminf.    2.72974 (67) obj. -153.18 iterations 21
Cbc0038I Pass  40: suminf.    2.01607 (54) obj. -131.445 iterations 13
Cbc0038I Pass  41: suminf.    1.40414 (29) obj. -120.4 iterations 42
Cbc0038I Pass  42: suminf.    0.98779 (28) obj. -120.4 iterations 5
Cbc0038I Pass  43: suminf.    1.14072 (14) obj. -120.4 iterations 44
Cbc0038I Pass  44: suminf.    0.76051 (15) obj. -120.4 iterations 9
Cbc0038I Pass  45: suminf.    0.78082 (8) obj. -120.4 iterations 38
Cbc0038I Pass  46: suminf.    0.76948 (9) obj. -120.4 iterations 13
Cbc0038I Pass  47: suminf.    0.78082 (8) obj. -120.4 iterations 15
Cbc0038I Pass  48: suminf.    1.24829 (21) obj. -120.4 iterations 53
Cbc0038I Pass  49: suminf.    1.13567 (21) obj. -120.4 iterations 8
Cbc0038I Pass  50: suminf.    1.74700 (10) obj. -120.4 iterations 39
Cbc0038I Pass  51: suminf.    1.00621 (12) obj. -120.4 iterations 10
Cbc0038I Pass  52: suminf.    0.82938 (12) obj. -120.4 iterations 15
Cbc0038I Pass  53: suminf.    1.08357 (10) obj. -120.4 iterations 18
Cbc0038I Pass  54: suminf.    1.08357 (10) obj. -120.4 iterations 6
Cbc0038I Pass  55: suminf.    1.08552 (10) obj. -120.4 iterations 16
Cbc0038I Pass  56: suminf.    1.08552 (10) obj. -120.4 iterations 7
Cbc0038I Pass  57: suminf.    1.08357 (10) obj. -120.4 iterations 16
Cbc0038I Pass  58: suminf.    2.86876 (28) obj. -120.4 iterations 49
Cbc0038I Pass  59: suminf.    1.65938 (26) obj. -120.4 iterations 17
Cbc0038I Pass  60: suminf.    1.96773 (16) obj. -120.4 iterations 40
Cbc0038I Pass  61: suminf.    1.45763 (15) obj. -120.4 iterations 8
Cbc0038I Pass  62: suminf.    1.13544 (14) obj. -120.812 iterations 15
Cbc0038I Pass  63: suminf.    1.17099 (12) obj. -120.4 iterations 35
Cbc0038I Pass  64: suminf.    1.03734 (12) obj. -120.801 iterations 14
Cbc0038I Pass  65: suminf.    2.44414 (38) obj. -120.4 iterations 85
Cbc0038I Pass  66: suminf.    2.06901 (34) obj. -123.517 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 351 rows 368 columns, reduced to 51 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -90.8272 - took 0.25 seconds
Cbc0012I Integer solution of -90.82723 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
Cbc0038I Full problem 351 rows 368 columns, reduced to 39 rows 43 columns
Cbc0012I Integer solution of -91.82723 found by RINS after 0 iterations and 0 nodes (0.42 seconds)
Cbc0031I 119 added rows had average density of 112.90756
Cbc0013I At root node, 119 cuts changed objective from -221.86979 to -125.09876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28565 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.444 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3685 row cuts average 350.9 elements, 0 column cuts (0 active)  in 1.194 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 696 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5447 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.514 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3876 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.862 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 381 row cuts average 221.7 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 144 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.315 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -91.82723 best solution, best possible -125.09876 (7.78 seconds)
Cbc0012I Integer solution of -96.71636 found by DiveCoefficient after 12329 iterations and 2 nodes (7.91 seconds)
Cbc0012I Integer solution of -99.91175 found by rounding after 12408 iterations and 4 nodes (7.97 seconds)
Cbc0016I Integer solution of -102.53756 found by strong branching after 12471 iterations and 6 nodes (8.01 seconds)
Cbc0010I After 15 nodes, 2 on tree, -102.53756 best solution, best possible -124.77246 (8.79 seconds)
Cbc0010I After 24 nodes, 8 on tree, -102.53756 best solution, best possible -124.77246 (9.53 seconds)
Cbc0038I Full problem 351 rows 368 columns, reduced to 54 rows 62 columns
Cbc0010I After 68 nodes, 3 on tree, -102.53756 best solution, best possible -124.77246 (10.48 seconds)
Cbc0010I After 72 nodes, 7 on tree, -102.53756 best solution, best possible -124.77246 (11.26 seconds)
Cbc0010I After 76 nodes, 6 on tree, -102.53756 best solution, best possible -124.77246 (12.06 seconds)
Cbc0038I Full problem 351 rows 368 columns, reduced to 129 rows 149 columns
Cbc0010I After 91 nodes, 7 on tree, -102.53756 best solution, best possible -124.77246 (13.03 seconds)
Cbc0010I After 152 nodes, 5 on tree, -102.53756 best solution, best possible -124.77246 (13.74 seconds)
Cbc0010I After 185 nodes, 6 on tree, -102.53756 best solution, best possible -123.6192 (14.45 seconds)
Cbc0001I Search completed - best objective -102.53756, took 28034 iterations and 208 nodes (14.58 seconds)
Cbc0032I Strong branching done 1634 times (38627 iterations), fathomed 5 nodes and fixed 9 variables
Cbc0035I Maximum depth 31, 731 variables fixed on reduced cost
Total time (CPU seconds):       14.27   (Wallclock seconds):       14.68

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 505 (-22) rows, 262 (-2) columns and 1502 (-43) elements
Clp1000I sum of infeasibilities 1.95939e-05 - average 3.87999e-08, 86 fixed columns
Coin0506I Presolve 334 (-171) rows, 176 (-86) columns and 996 (-506) elements
Clp0029I End of values pass after 176 iterations
Clp0014I Perturbing problem by 0.001% of 2.0479318 - largest nonzero change 0 ( 0%) - largest zero change 2.9283556e-05
Clp0000I Optimal - objective value 174.42556
Clp0000I Optimal - objective value 174.42556
Coin0511I After Postsolve, objective 174.42556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 174.42556
Clp0000I Optimal - objective value 174.42556
Clp0000I Optimal - objective value 174.42556
Coin0511I After Postsolve, objective 174.42556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 174.4255574 - 0 iterations time 0.072, Presolve 0.00, Idiot 0.07

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 505 rows, 262 columns (261 integer (261 of which binary)) and 1502 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 80 integers unsatisfied sum - 12.7336
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.9275 iterations 217
Cbc0038I Solution found of -2.9275
Cbc0038I Relaxing continuous gives -2.9275
Cbc0038I Rounding solution of -18.7172 is better than previous of -2.9275

Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 149 rows 81 columns
Cbc0038I Mini branch and bound improved solution from -18.7172 to -79.2547 (0.07 seconds)
Cbc0038I Round again with cutoff of -88.7719
Cbc0038I Pass   2: suminf.    2.67645 (15) obj. -88.7719 iterations 41
Cbc0038I Pass   3: suminf.    2.55932 (14) obj. -88.7719 iterations 1
Cbc0038I Pass   4: suminf.    2.55932 (14) obj. -88.7719 iterations 0
Cbc0038I Pass   5: suminf.    2.70776 (7) obj. -88.7719 iterations 29
Cbc0038I Pass   6: suminf.    2.01525 (6) obj. -88.7719 iterations 12
Cbc0038I Pass   7: suminf.    1.87812 (7) obj. -88.7719 iterations 11
Cbc0038I Pass   8: suminf.    1.84553 (13) obj. -88.7719 iterations 7
Cbc0038I Pass   9: suminf.    1.47592 (6) obj. -88.7719 iterations 28
Cbc0038I Pass  10: suminf.    1.34893 (6) obj. -88.7719 iterations 31
Cbc0038I Pass  11: suminf.    1.44060 (5) obj. -88.7719 iterations 27
Cbc0038I Pass  12: suminf.    1.42613 (5) obj. -88.7719 iterations 3
Cbc0038I Pass  13: suminf.    1.16279 (5) obj. -88.7719 iterations 10
Cbc0038I Pass  14: suminf.    1.09773 (6) obj. -88.7719 iterations 20
Cbc0038I Pass  15: suminf.    1.59513 (5) obj. -88.7719 iterations 23
Cbc0038I Pass  16: suminf.    1.52503 (5) obj. -88.7719 iterations 9
Cbc0038I Pass  17: suminf.    0.73702 (3) obj. -88.7719 iterations 13
Cbc0038I Pass  18: suminf.    1.50863 (5) obj. -88.7719 iterations 5
Cbc0038I Pass  19: suminf.    0.78893 (4) obj. -88.7719 iterations 7
Cbc0038I Pass  20: suminf.    3.99068 (12) obj. -88.7719 iterations 48
Cbc0038I Pass  21: suminf.    3.33057 (11) obj. -88.7719 iterations 28
Cbc0038I Pass  22: suminf.    3.02589 (12) obj. -88.7719 iterations 10
Cbc0038I Pass  23: suminf.    3.02589 (12) obj. -88.7719 iterations 0
Cbc0038I Pass  24: suminf.    2.36927 (5) obj. -88.7719 iterations 21
Cbc0038I Pass  25: suminf.    1.62608 (6) obj. -88.7719 iterations 10
Cbc0038I Pass  26: suminf.    2.28554 (5) obj. -88.7719 iterations 24
Cbc0038I Pass  27: suminf.    1.80649 (5) obj. -88.7719 iterations 4
Cbc0038I Pass  28: suminf.    1.64657 (5) obj. -88.7719 iterations 13
Cbc0038I Pass  29: suminf.    1.69813 (6) obj. -88.7719 iterations 10
Cbc0038I Pass  30: suminf.    1.58947 (4) obj. -88.7719 iterations 6
Cbc0038I Pass  31: suminf.    1.83087 (6) obj. -88.7719 iterations 10
Cbc0038I Rounding solution of -84.9814 is better than previous of -79.2547

Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 177 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -84.9814 to -97.3682 (0.16 seconds)
Cbc0038I Round again with cutoff of -112.78
Cbc0038I Pass  31: suminf.    3.73145 (17) obj. -112.78 iterations 9
Cbc0038I Pass  32: suminf.    3.60254 (14) obj. -112.78 iterations 13
Cbc0038I Pass  33: suminf.    3.60254 (14) obj. -112.78 iterations 0
Cbc0038I Pass  34: suminf.    3.75322 (13) obj. -112.78 iterations 29
Cbc0038I Pass  35: suminf.    3.54074 (14) obj. -112.78 iterations 23
Cbc0038I Pass  36: suminf.    3.19812 (10) obj. -112.78 iterations 15
Cbc0038I Pass  37: suminf.    2.72210 (8) obj. -112.78 iterations 15
Cbc0038I Pass  38: suminf.    2.37411 (15) obj. -112.78 iterations 35
Cbc0038I Pass  39: suminf.    3.54873 (9) obj. -112.78 iterations 40
Cbc0038I Pass  40: suminf.    2.98324 (9) obj. -112.78 iterations 20
Cbc0038I Pass  41: suminf.    2.71543 (11) obj. -112.78 iterations 13
Cbc0038I Pass  42: suminf.    1.66338 (7) obj. -112.78 iterations 26
Cbc0038I Pass  43: suminf.    1.76803 (7) obj. -112.78 iterations 30
Cbc0038I Pass  44: suminf.    1.62986 (7) obj. -112.78 iterations 14
Cbc0038I Pass  45: suminf.    2.62849 (8) obj. -112.78 iterations 28
Cbc0038I Pass  46: suminf.    2.27266 (7) obj. -112.78 iterations 13
Cbc0038I Pass  47: suminf.    1.81883 (6) obj. -112.78 iterations 15
Cbc0038I Pass  48: suminf.    2.45973 (8) obj. -112.78 iterations 29
Cbc0038I Pass  49: suminf.    2.41237 (14) obj. -112.78 iterations 13
Cbc0038I Pass  50: suminf.    2.74140 (9) obj. -112.78 iterations 27
Cbc0038I Pass  51: suminf.    2.04732 (9) obj. -112.78 iterations 15
Cbc0038I Pass  52: suminf.    1.83622 (7) obj. -112.78 iterations 10
Cbc0038I Pass  53: suminf.    2.51125 (8) obj. -112.78 iterations 13
Cbc0038I Pass  54: suminf.    1.93055 (7) obj. -112.78 iterations 14
Cbc0038I Pass  55: suminf.    1.84953 (7) obj. -112.78 iterations 11
Cbc0038I Pass  56: suminf.    2.61450 (10) obj. -112.78 iterations 24
Cbc0038I Pass  57: suminf.    2.41237 (14) obj. -112.78 iterations 15
Cbc0038I Pass  58: suminf.    2.41237 (14) obj. -112.78 iterations 0
Cbc0038I Pass  59: suminf.    2.27673 (12) obj. -112.78 iterations 20
Cbc0038I Pass  60: suminf.    2.14073 (7) obj. -112.78 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 173 rows 94 columns
Cbc0038I Mini branch and bound improved solution from -97.3682 to -97.7752 (0.28 seconds)
Cbc0038I Round again with cutoff of -131.273
Cbc0038I Pass  60: suminf.    4.74425 (23) obj. -131.273 iterations 17
Cbc0038I Pass  61: suminf.    4.73559 (22) obj. -131.273 iterations 9
Cbc0038I Pass  62: suminf.    6.02693 (20) obj. -131.273 iterations 38
Cbc0038I Pass  63: suminf.    4.77839 (23) obj. -131.273 iterations 34
Cbc0038I Pass  64: suminf.    4.60234 (25) obj. -131.273 iterations 15
Cbc0038I Pass  65: suminf.    4.60234 (25) obj. -131.273 iterations 0
Cbc0038I Pass  66: suminf.    4.83124 (19) obj. -131.273 iterations 31
Cbc0038I Pass  67: suminf.    4.73559 (22) obj. -131.273 iterations 28
Cbc0038I Pass  68: suminf.    4.83524 (18) obj. -131.273 iterations 27
Cbc0038I Pass  69: suminf.    8.17839 (26) obj. -131.273 iterations 63
Cbc0038I Pass  70: suminf.    4.18004 (13) obj. -131.273 iterations 49
Cbc0038I Pass  71: suminf.    4.17731 (13) obj. -131.273 iterations 11
Cbc0038I Pass  72: suminf.    5.45477 (14) obj. -131.273 iterations 32
Cbc0038I Pass  73: suminf.    4.28958 (12) obj. -131.273 iterations 18
Cbc0038I Pass  74: suminf.    4.38296 (11) obj. -131.273 iterations 22
Cbc0038I Pass  75: suminf.    4.22007 (11) obj. -131.273 iterations 12
Cbc0038I Pass  76: suminf.    3.74356 (11) obj. -131.273 iterations 12
Cbc0038I Pass  77: suminf.    3.40324 (13) obj. -131.273 iterations 39
Cbc0038I Pass  78: suminf.    3.24850 (12) obj. -131.273 iterations 10
Cbc0038I Pass  79: suminf.    4.83171 (12) obj. -131.273 iterations 34
Cbc0038I Pass  80: suminf.    3.73043 (11) obj. -131.273 iterations 7
Cbc0038I Pass  81: suminf.    3.72472 (11) obj. -131.273 iterations 4
Cbc0038I Pass  82: suminf.    3.70366 (14) obj. -131.273 iterations 13
Cbc0038I Pass  83: suminf.    3.95216 (14) obj. -131.273 iterations 31
Cbc0038I Pass  84: suminf.    3.33778 (15) obj. -131.273 iterations 31
Cbc0038I Pass  85: suminf.    4.58967 (15) obj. -131.273 iterations 29
Cbc0038I Pass  86: suminf.    3.39488 (17) obj. -131.273 iterations 32
Cbc0038I Pass  87: suminf.    3.21115 (15) obj. -131.273 iterations 15
Cbc0038I Pass  88: suminf.    3.21115 (15) obj. -131.273 iterations 0
Cbc0038I Pass  89: suminf.    4.13958 (13) obj. -131.273 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 505 rows 262 columns, reduced to 194 rows 106 columns
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I After 0.39 seconds - Feasibility pump exiting with objective of -97.7752 - took 0.36 seconds
Cbc0012I Integer solution of -97.77524 found by feasibility pump after 0 iterations and 0 nodes (0.39 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 149 rows 81 columns
Cbc0031I 39 added rows had average density of 191.76923
Cbc0013I At root node, 39 cuts changed objective from -174.42556 to -160.30744 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 40255 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.522 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3778 row cuts average 257.0 elements, 0 column cuts (0 active)  in 0.536 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.668 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 234 row cuts average 252.8 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -97.77524 best solution, best possible -160.30744 (6.23 seconds)
Cbc0010I After 11 nodes, 9 on tree, -97.77524 best solution, best possible -160.30744 (6.96 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 11 rows 12 columns
Cbc0010I After 71 nodes, 23 on tree, -97.77524 best solution, best possible -160.30744 (7.67 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 20 rows 18 columns
Cbc0012I Integer solution of -98.006391 found by rounding after 29579 iterations and 194 nodes (8.25 seconds)
Cbc0012I Integer solution of -102.53756 found by rounding after 30074 iterations and 210 nodes (8.30 seconds)
Cbc0010I After 231 nodes, 15 on tree, -102.53756 best solution, best possible -160.30744 (8.37 seconds)
Cbc0038I Full problem 505 rows 262 columns, reduced to 77 rows 49 columns
Cbc0001I Search completed - best objective -102.53756, took 33688 iterations and 310 nodes (8.66 seconds)
Cbc0032I Strong branching done 3120 times (71854 iterations), fathomed 49 nodes and fixed 185 variables
Cbc0035I Maximum depth 67, 1972 variables fixed on reduced cost
Total time (CPU seconds):       8.50   (Wallclock seconds):       8.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 351 (-176) rows, 368 (-157) columns and 15636 (-20101) elements
Clp1000I sum of infeasibilities 3.63226e-06 - average 1.03483e-08, 192 fixed columns
Coin0506I Presolve 153 (-198) rows, 173 (-195) columns and 629 (-15007) elements
Clp0006I 0  Obj 45.899545 Dual inf 24.962357 (173)
Clp0029I End of values pass after 173 iterations
Clp0014I Perturbing problem by 0.001% of 1.4205115 - largest nonzero change 2.9686601e-05 ( 0.0024750985%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 46.909215
Clp0000I Optimal - objective value 46.909215
Coin0511I After Postsolve, objective 46.909215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 46.909215 Dual inf 198.76524 (108)
Clp0014I Perturbing problem by 0.001% of 1.8801027 - largest nonzero change 2.8501948e-05 ( 0.0025539644%) - largest zero change 2.9904552e-05
Clp0000I Optimal - objective value 221.86979
Clp0000I Optimal - objective value 221.86979
Clp0000I Optimal - objective value 221.86979
Coin0511I After Postsolve, objective 221.86979, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 221.8697881 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 351 rows, 368 columns (368 integer (368 of which binary)) and 15636 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 102 integers unsatisfied sum - 8.18083
Cbc0038I Pass   1: suminf.    4.83199 (90) obj. -219.743 iterations 20
Cbc0038I Pass   2: suminf.    3.94420 (88) obj. -206.751 iterations 7
Cbc0038I Pass   3: suminf.    3.18072 (75) obj. -164.503 iterations 13
Cbc0038I Pass   4: suminf.    1.96259 (53) obj. -130.499 iterations 22
Cbc0038I Pass   5: suminf.    1.12099 (36) obj. -110.547 iterations 17
Cbc0038I Pass   6: suminf.    0.61209 (24) obj. -97.1414 iterations 12
Cbc0038I Pass   7: suminf.    0.25462 (12) obj. -83.5569 iterations 12
Cbc0038I Solution found of -70.8307
Cbc0038I Rounding solution of -76.035 is better than previous of -70.8307

Cbc0038I Before mini branch and bound, 266 integers at bound fixed and 0 continuous
Cbc0038I Full problem 351 rows 368 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -76.035 to -80.9394 (0.14 seconds)
Cbc0038I Round again with cutoff of -95.0325
Cbc0038I Pass   8: suminf.    4.83199 (90) obj. -219.743 iterations 0
Cbc0038I Pass   9: suminf.    3.94420 (88) obj. -206.751 iterations 8
Cbc0038I Pass  10: suminf.    2.89765 (70) obj. -156.956 iterations 18
Cbc0038I Pass  11: suminf.    1.96259 (53) obj. -130.499 iterations 17
Cbc0038I Pass  12: suminf.    1.16544 (37) obj. -111.502 iterations 16
Cbc0038I Pass  13: suminf.    0.58508 (20) obj. -95.0325 iterations 23
Cbc0038I Pass  14: suminf.    0.59419 (3) obj. -95.0325 iterations 30
Cbc0038I Pass  15: suminf.    0.40905 (4) obj. -95.0325 iterations 13
Cbc0038I Pass  16: suminf.    0.45602 (4) obj. -95.0325 iterations 7
Cbc0038I Pass  17: suminf.    0.88576 (16) obj. -96.1973 iterations 71
Cbc0038I Pass  18: suminf.    0.70306 (12) obj. -95.5169 iterations 11
Cbc0038I Pass  19: suminf.    0.55482 (8) obj. -95.0325 iterations 47
Cbc0038I Pass  20: suminf.    0.54028 (6) obj. -95.0325 iterations 9
Cbc0038I Pass  21: suminf.    0.64417 (7) obj. -95.0325 iterations 58
Cbc0038I Pass  22: suminf.    0.64417 (7) obj. -95.0325 iterations 0
Cbc0038I Pass  23: suminf.    0.62983 (5) obj. -95.0325 iterations 13
Cbc0038I Pass  24: suminf.    0.42289 (4) obj. -96.0129 iterations 4
Cbc0038I Pass  25: suminf.    0.82681 (4) obj. -95.0325 iterations 29
Cbc0038I Pass  26: suminf.    0.82681 (4) obj. -95.0325 iterations 8
Cbc0038I Pass  27: suminf.    1.42188 (5) obj. -95.0325 iterations 14
Cbc0038I Pass  28: suminf.    1.42188 (5) obj. -95.0325 iterations 0
Cbc0038I Pass  29: suminf.    0.82681 (4) obj. -95.0325 iterations 12
Cbc0038I Pass  30: suminf.    4.02387 (24) obj. -95.0325 iterations 54
Cbc0038I Pass  31: suminf.    1.66962 (20) obj. -95.0325 iterations 15
Cbc0038I Pass  32: suminf.    1.32946 (19) obj. -95.0325 iterations 2
Cbc0038I Pass  33: suminf.    0.95540 (13) obj. -95.0325 iterations 20
Cbc0038I Pass  34: suminf.    0.75283 (13) obj. -95.0325 iterations 15
Cbc0038I Pass  35: suminf.    0.74616 (7) obj. -95.0325 iterations 21
Cbc0038I Pass  36: suminf.    0.48114 (7) obj. -95.0325 iterations 11
Cbc0038I Pass  37: suminf.    0.64990 (7) obj. -95.0325 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 351 rows 368 columns, reduced to 66 rows 76 columns
Cbc0038I Mini branch and bound improved solution from -80.9394 to -90.8272 (0.27 seconds)
Cbc0038I Round again with cutoff of -120.4
Cbc0038I Pass  37: suminf.    4.83199 (90) obj. -219.743 iterations 0
Cbc0038I Pass  38: suminf.    3.94420 (88) obj. -206.751 iterations 8
Cbc0038I Pass  39: suminf.    2.72974 (67) obj. -153.18 iterations 21
Cbc0038I Pass  40: suminf.    2.01607 (54) obj. -131.445 iterations 13
Cbc0038I Pass  41: suminf.    1.40414 (29) obj. -120.4 iterations 42
Cbc0038I Pass  42: suminf.    0.98779 (28) obj. -120.4 iterations 5
Cbc0038I Pass  43: suminf.    1.14072 (14) obj. -120.4 iterations 44
Cbc0038I Pass  44: suminf.    0.76051 (15) obj. -120.4 iterations 9
Cbc0038I Pass  45: suminf.    0.78082 (8) obj. -120.4 iterations 38
Cbc0038I Pass  46: suminf.    0.76948 (9) obj. -120.4 iterations 13
Cbc0038I Pass  47: suminf.    0.78082 (8) obj. -120.4 iterations 15
Cbc0038I Pass  48: suminf.    1.24829 (21) obj. -120.4 iterations 53
Cbc0038I Pass  49: suminf.    1.13567 (21) obj. -120.4 iterations 8
Cbc0038I Pass  50: suminf.    1.74700 (10) obj. -120.4 iterations 39
Cbc0038I Pass  51: suminf.    1.00621 (12) obj. -120.4 iterations 10
Cbc0038I Pass  52: suminf.    0.82938 (12) obj. -120.4 iterations 15
Cbc0038I Pass  53: suminf.    1.08357 (10) obj. -120.4 iterations 18
Cbc0038I Pass  54: suminf.    1.08357 (10) obj. -120.4 iterations 6
Cbc0038I Pass  55: suminf.    1.08552 (10) obj. -120.4 iterations 16
Cbc0038I Pass  56: suminf.    1.08552 (10) obj. -120.4 iterations 7
Cbc0038I Pass  57: suminf.    1.08357 (10) obj. -120.4 iterations 16
Cbc0038I Pass  58: suminf.    2.86876 (28) obj. -120.4 iterations 49
Cbc0038I Pass  59: suminf.    1.65938 (26) obj. -120.4 iterations 17
Cbc0038I Pass  60: suminf.    1.96773 (16) obj. -120.4 iterations 40
Cbc0038I Pass  61: suminf.    1.45763 (15) obj. -120.4 iterations 8
Cbc0038I Pass  62: suminf.    1.13544 (14) obj. -120.812 iterations 15
Cbc0038I Pass  63: suminf.    1.17099 (12) obj. -120.4 iterations 35
Cbc0038I Pass  64: suminf.    1.03734 (12) obj. -120.801 iterations 14
Cbc0038I Pass  65: suminf.    2.44414 (38) obj. -120.4 iterations 85
Cbc0038I Pass  66: suminf.    2.06901 (34) obj. -123.517 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 351 rows 368 columns, reduced to 51 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -90.8272 - took 0.25 seconds
Cbc0012I Integer solution of -90.82723 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
Cbc0038I Full problem 351 rows 368 columns, reduced to 39 rows 43 columns
Cbc0012I Integer solution of -91.82723 found by RINS after 0 iterations and 0 nodes (0.42 seconds)
Cbc0031I 119 added rows had average density of 112.90756
Cbc0013I At root node, 119 cuts changed objective from -221.86979 to -125.09876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28565 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.447 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3685 row cuts average 350.9 elements, 0 column cuts (0 active)  in 1.222 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 696 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5447 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.520 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3876 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.865 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 381 row cuts average 221.7 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 144 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.320 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -91.82723 best solution, best possible -125.09876 (7.85 seconds)
Cbc0012I Integer solution of -96.71636 found by DiveCoefficient after 12329 iterations and 2 nodes (7.99 seconds)
Cbc0012I Integer solution of -99.91175 found by rounding after 12408 iterations and 4 nodes (8.05 seconds)
Cbc0016I Integer solution of -102.53756 found by strong branching after 12471 iterations and 6 nodes (8.09 seconds)
Cbc0010I After 15 nodes, 2 on tree, -102.53756 best solution, best possible -124.77246 (8.91 seconds)
Cbc0010I After 24 nodes, 8 on tree, -102.53756 best solution, best possible -124.77246 (9.66 seconds)
Cbc0038I Full problem 351 rows 368 columns, reduced to 54 rows 62 columns
Cbc0010I After 68 nodes, 3 on tree, -102.53756 best solution, best possible -124.77246 (10.57 seconds)
Cbc0010I After 72 nodes, 7 on tree, -102.53756 best solution, best possible -124.77246 (11.33 seconds)
Cbc0010I After 76 nodes, 6 on tree, -102.53756 best solution, best possible -124.77246 (12.13 seconds)
Cbc0038I Full problem 351 rows 368 columns, reduced to 129 rows 149 columns
Cbc0010I After 91 nodes, 7 on tree, -102.53756 best solution, best possible -124.77246 (13.14 seconds)
Cbc0010I After 152 nodes, 5 on tree, -102.53756 best solution, best possible -124.77246 (13.85 seconds)
Cbc0010I After 185 nodes, 6 on tree, -102.53756 best solution, best possible -123.6192 (14.56 seconds)
Cbc0001I Search completed - best objective -102.53756, took 28034 iterations and 208 nodes (14.69 seconds)
Cbc0032I Strong branching done 1634 times (38627 iterations), fathomed 5 nodes and fixed 9 variables
Cbc0035I Maximum depth 31, 731 variables fixed on reduced cost
Total time (CPU seconds):       14.38   (Wallclock seconds):       14.80

