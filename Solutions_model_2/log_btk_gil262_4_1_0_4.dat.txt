Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 358 (-169) rows, 189 (-75) columns and 1072 (-473) elements
Clp1000I sum of infeasibilities 0.000108395 - average 3.02778e-07, 175 fixed columns
Coin0506I Presolve 13 (-345) rows, 13 (-176) columns and 43 (-1029) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 214549.69
Clp0000I Optimal - objective value 214549.69
Coin0511I After Postsolve, objective 214549.69, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14721105 - largest nonzero change 1.8840887e-05 ( 0.0017128079%) - largest zero change 2.9980795e-05
Clp0000I Optimal - objective value 214549.69
Clp0000I Optimal - objective value 214549.69
Clp0000I Optimal - objective value 214549.69
Coin0511I After Postsolve, objective 214549.69, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 214549.686 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 358 rows, 189 columns (188 integer (188 of which binary)) and 1072 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.497%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.235291
Cbc0038I Solution found of -210350
Cbc0038I Relaxing continuous gives -210350
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 358 rows 189 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -210770
Cbc0038I Reduced cost fixing fixed 124 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.01405 (2) obj. -210770 iterations 31
Cbc0038I Pass   2: suminf.    0.03093 (2) obj. -211274 iterations 9
Cbc0038I Pass   3: suminf.    1.16209 (6) obj. -210770 iterations 19
Cbc0038I Pass   4: suminf.    0.01405 (2) obj. -210770 iterations 29
Cbc0038I Pass   5: suminf.    0.03093 (2) obj. -211274 iterations 9
Cbc0038I Pass   6: suminf.    0.24082 (2) obj. -210770 iterations 15
Cbc0038I Pass   7: suminf.    0.11869 (3) obj. -210770 iterations 22
Cbc0038I Pass   8: suminf.    1.57167 (6) obj. -210770 iterations 24
Cbc0038I Pass   9: suminf.    1.57167 (6) obj. -210770 iterations 13
Cbc0038I Pass  10: suminf.    1.57167 (6) obj. -210770 iterations 3
Cbc0038I Pass  11: suminf.    1.57167 (6) obj. -210770 iterations 3
Cbc0038I Pass  12: suminf.    1.57167 (6) obj. -210770 iterations 4
Cbc0038I Pass  13: suminf.    0.82894 (7) obj. -210770 iterations 29
Cbc0038I Pass  14: suminf.    0.04639 (3) obj. -211619 iterations 21
Cbc0038I Pass  15: suminf.    2.42642 (8) obj. -210770 iterations 17
Cbc0038I Pass  16: suminf.    0.07656 (2) obj. -210770 iterations 8
Cbc0038I Pass  17: suminf.    0.01405 (2) obj. -210770 iterations 14
Cbc0038I Pass  18: suminf.    0.03093 (2) obj. -211274 iterations 7
Cbc0038I Pass  19: suminf.    0.85374 (4) obj. -210770 iterations 18
Cbc0038I Pass  20: suminf.    0.69344 (6) obj. -210770 iterations 25
Cbc0038I Pass  21: suminf.    0.29733 (3) obj. -210770 iterations 20
Cbc0038I Pass  22: suminf.    0.24082 (2) obj. -210770 iterations 21
Cbc0038I Pass  23: suminf.    1.58120 (6) obj. -210770 iterations 16
Cbc0038I Pass  24: suminf.    2.60279 (8) obj. -210770 iterations 15
Cbc0038I Pass  25: suminf.    2.85831 (8) obj. -210770 iterations 13
Cbc0038I Pass  26: suminf.    1.02816 (7) obj. -210770 iterations 27
Cbc0038I Pass  27: suminf.    2.00148 (9) obj. -210770 iterations 18
Cbc0038I Pass  28: suminf.    2.00148 (9) obj. -210770 iterations 11
Cbc0038I Pass  29: suminf.    2.09261 (10) obj. -210770 iterations 14
Cbc0038I Pass  30: suminf.    0.07656 (2) obj. -210770 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Full problem 358 rows 189 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -210350 - took 0.02 seconds
Cbc0012I Integer solution of -210350.3 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 358 rows 189 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 4.25
Cbc0013I At root node, 5 cuts changed objective from -214549.69 to -210350.3 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 2.4 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 180.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -210350.3, took 22 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 124 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-218) rows, 326 (-198) columns and 12409 (-23327) elements
Clp1000I sum of infeasibilities 1.31412e-05 - average 4.26661e-08, 281 fixed columns
Coin0506I Presolve 37 (-271) rows, 43 (-283) columns and 152 (-12257) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 0.34337767 - largest nonzero change 2.9188165e-05 ( 0.0025539644%) - largest zero change 2.970143e-05
Clp0000I Optimal - objective value 214402.82
Clp0000I Optimal - objective value 214402.82
Coin0511I After Postsolve, objective 214402.82, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4010727 - largest nonzero change 1.4327601e-05 ( 0.00100586%) - largest zero change 2.9900454e-05
Clp0000I Optimal - objective value 214700.85
Clp0000I Optimal - objective value 214700.85
Clp0000I Optimal - objective value 214700.85
Coin0511I After Postsolve, objective 214700.85, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 214700.8455 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0004I processed model has 308 rows, 326 columns (326 integer (326 of which binary)) and 12409 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.669%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 101 integers unsatisfied sum - 3.27273
Cbc0038I Pass   1: suminf.    1.92119 (80) obj. -155529 iterations 40
Cbc0038I Pass   2: suminf.    1.92119 (80) obj. -155529 iterations 1
Cbc0038I Pass   3: suminf.    1.21913 (62) obj. -155471 iterations 18
Cbc0038I Pass   4: suminf.    0.42290 (33) obj. -155433 iterations 29
Cbc0038I Pass   5: suminf.    0.04896 (5) obj. -155401 iterations 28
Cbc0038I Solution found of -155396
Cbc0038I Rounding solution of -169168 is better than previous of -155396

Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 326 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -169168 to -210350 (0.12 seconds)
Cbc0038I Round again with cutoff of -210785
Cbc0038I Reduced cost fixing fixed 121 variables on major pass 2
Cbc0038I Pass   6: suminf.    2.98816 (97) obj. -210785 iterations 9
Cbc0038I Pass   7: suminf.    2.44190 (85) obj. -210785 iterations 12
Cbc0038I Pass   8: suminf.    2.01456 (75) obj. -210785 iterations 10
Cbc0038I Pass   9: suminf.    1.19031 (51) obj. -210785 iterations 25
Cbc0038I Pass  10: suminf.    0.72929 (34) obj. -210785 iterations 22
Cbc0038I Pass  11: suminf.    0.34805 (25) obj. -210785 iterations 17
Cbc0038I Pass  12: suminf.    0.01572 (8) obj. -210785 iterations 19
Cbc0038I Pass  13: suminf.    0.03140 (8) obj. -210785 iterations 8
Cbc0038I Pass  14: suminf.    0.93068 (21) obj. -210785 iterations 43
Cbc0038I Pass  15: suminf.    0.91418 (18) obj. -210785 iterations 10
Cbc0038I Pass  16: suminf.    0.61730 (12) obj. -210785 iterations 15
Cbc0038I Pass  17: suminf.    0.20732 (16) obj. -210785 iterations 11
Cbc0038I Pass  18: suminf.    0.03149 (8) obj. -210785 iterations 17
Cbc0038I Pass  19: suminf.    0.01656 (8) obj. -210785 iterations 8
Cbc0038I Pass  20: suminf.    1.24112 (20) obj. -210785 iterations 36
Cbc0038I Pass  21: suminf.    1.06733 (21) obj. -210785 iterations 9
Cbc0038I Pass  22: suminf.    0.61289 (12) obj. -210785 iterations 18
Cbc0038I Pass  23: suminf.    0.20601 (15) obj. -210785 iterations 9
Cbc0038I Pass  24: suminf.    0.03139 (7) obj. -210785 iterations 15
Cbc0038I Pass  25: suminf.    0.01634 (7) obj. -210785 iterations 8
Cbc0038I Pass  26: suminf.    1.03853 (26) obj. -210785 iterations 51
Cbc0038I Pass  27: suminf.    0.75123 (29) obj. -210785 iterations 11
Cbc0038I Pass  28: suminf.    0.13941 (12) obj. -210785 iterations 18
Cbc0038I Pass  29: suminf.    0.03134 (6) obj. -210785 iterations 12
Cbc0038I Pass  30: suminf.    0.01664 (6) obj. -210785 iterations 7
Cbc0038I Pass  31: suminf.    1.30126 (24) obj. -210785 iterations 39
Cbc0038I Pass  32: suminf.    0.45988 (20) obj. -210785 iterations 14
Cbc0038I Pass  33: suminf.    0.03133 (6) obj. -210785 iterations 20
Cbc0038I Pass  34: suminf.    0.01646 (6) obj. -210785 iterations 7
Cbc0038I Pass  35: suminf.    2.25162 (27) obj. -210785 iterations 41
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 326 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -210350 - took 0.09 seconds
Cbc0012I Integer solution of -210350.3 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 308 rows 326 columns, reduced to 0 rows 0 columns
Cbc0031I 24 added rows had average density of 22.208333
Cbc0013I At root node, 89 cuts changed objective from -214567.3 to -210350.3 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 92 row cuts average 4.3 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 44.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 89.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0001I Search completed - best objective -210350.3, took 145 iterations and 0 nodes (0.30 seconds)
Cbc0035I Maximum depth 0, 125 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.31

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 358 (-169) rows, 189 (-75) columns and 1072 (-473) elements
Clp1000I sum of infeasibilities 0.000108395 - average 3.02778e-07, 175 fixed columns
Coin0506I Presolve 13 (-345) rows, 13 (-176) columns and 43 (-1029) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 214549.69
Clp0000I Optimal - objective value 214549.69
Coin0511I After Postsolve, objective 214549.69, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14721105 - largest nonzero change 1.8840887e-05 ( 0.0017128079%) - largest zero change 2.9980795e-05
Clp0000I Optimal - objective value 214549.69
Clp0000I Optimal - objective value 214549.69
Clp0000I Optimal - objective value 214549.69
Coin0511I After Postsolve, objective 214549.69, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 214549.686 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 358 rows, 189 columns (188 integer (188 of which binary)) and 1072 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.497%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.235291
Cbc0038I Solution found of -210350
Cbc0038I Relaxing continuous gives -210350
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 358 rows 189 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -210770
Cbc0038I Reduced cost fixing fixed 124 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.01405 (2) obj. -210770 iterations 31
Cbc0038I Pass   2: suminf.    0.03093 (2) obj. -211274 iterations 9
Cbc0038I Pass   3: suminf.    1.16209 (6) obj. -210770 iterations 19
Cbc0038I Pass   4: suminf.    0.01405 (2) obj. -210770 iterations 29
Cbc0038I Pass   5: suminf.    0.03093 (2) obj. -211274 iterations 9
Cbc0038I Pass   6: suminf.    0.24082 (2) obj. -210770 iterations 15
Cbc0038I Pass   7: suminf.    0.11869 (3) obj. -210770 iterations 22
Cbc0038I Pass   8: suminf.    1.57167 (6) obj. -210770 iterations 24
Cbc0038I Pass   9: suminf.    1.57167 (6) obj. -210770 iterations 13
Cbc0038I Pass  10: suminf.    1.57167 (6) obj. -210770 iterations 3
Cbc0038I Pass  11: suminf.    1.57167 (6) obj. -210770 iterations 3
Cbc0038I Pass  12: suminf.    1.57167 (6) obj. -210770 iterations 4
Cbc0038I Pass  13: suminf.    0.82894 (7) obj. -210770 iterations 29
Cbc0038I Pass  14: suminf.    0.04639 (3) obj. -211619 iterations 21
Cbc0038I Pass  15: suminf.    2.42642 (8) obj. -210770 iterations 17
Cbc0038I Pass  16: suminf.    0.07656 (2) obj. -210770 iterations 8
Cbc0038I Pass  17: suminf.    0.01405 (2) obj. -210770 iterations 14
Cbc0038I Pass  18: suminf.    0.03093 (2) obj. -211274 iterations 7
Cbc0038I Pass  19: suminf.    0.85374 (4) obj. -210770 iterations 18
Cbc0038I Pass  20: suminf.    0.69344 (6) obj. -210770 iterations 25
Cbc0038I Pass  21: suminf.    0.29733 (3) obj. -210770 iterations 20
Cbc0038I Pass  22: suminf.    0.24082 (2) obj. -210770 iterations 21
Cbc0038I Pass  23: suminf.    1.58120 (6) obj. -210770 iterations 16
Cbc0038I Pass  24: suminf.    2.60279 (8) obj. -210770 iterations 15
Cbc0038I Pass  25: suminf.    2.85831 (8) obj. -210770 iterations 13
Cbc0038I Pass  26: suminf.    1.02816 (7) obj. -210770 iterations 27
Cbc0038I Pass  27: suminf.    2.00148 (9) obj. -210770 iterations 18
Cbc0038I Pass  28: suminf.    2.00148 (9) obj. -210770 iterations 11
Cbc0038I Pass  29: suminf.    2.09261 (10) obj. -210770 iterations 14
Cbc0038I Pass  30: suminf.    0.07656 (2) obj. -210770 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Full problem 358 rows 189 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -210350 - took 0.02 seconds
Cbc0012I Integer solution of -210350.3 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 358 rows 189 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 4.25
Cbc0013I At root node, 5 cuts changed objective from -214549.69 to -210350.3 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 2.4 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 180.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -210350.3, took 22 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 124 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 308 (-219) rows, 326 (-199) columns and 12409 (-23328) elements
Clp1000I sum of infeasibilities 1.31412e-05 - average 4.26661e-08, 281 fixed columns
Coin0506I Presolve 37 (-271) rows, 43 (-283) columns and 152 (-12257) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 0.34337767 - largest nonzero change 2.9188165e-05 ( 0.0025539644%) - largest zero change 2.970143e-05
Clp0000I Optimal - objective value 214402.82
Clp0000I Optimal - objective value 214402.82
Coin0511I After Postsolve, objective 214402.82, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4010727 - largest nonzero change 1.4327601e-05 ( 0.00100586%) - largest zero change 2.9900454e-05
Clp0000I Optimal - objective value 214700.85
Clp0000I Optimal - objective value 214700.85
Clp0000I Optimal - objective value 214700.85
Coin0511I After Postsolve, objective 214700.85, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 214700.8455 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 308 rows, 326 columns (326 integer (326 of which binary)) and 12409 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.669%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 101 integers unsatisfied sum - 3.27273
Cbc0038I Pass   1: suminf.    1.92119 (80) obj. -155529 iterations 40
Cbc0038I Pass   2: suminf.    1.92119 (80) obj. -155529 iterations 1
Cbc0038I Pass   3: suminf.    1.21913 (62) obj. -155471 iterations 18
Cbc0038I Pass   4: suminf.    0.42290 (33) obj. -155433 iterations 29
Cbc0038I Pass   5: suminf.    0.04896 (5) obj. -155401 iterations 28
Cbc0038I Solution found of -155396
Cbc0038I Rounding solution of -169168 is better than previous of -155396

Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 326 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -169168 to -210350 (0.13 seconds)
Cbc0038I Round again with cutoff of -210785
Cbc0038I Reduced cost fixing fixed 121 variables on major pass 2
Cbc0038I Pass   6: suminf.    2.98816 (97) obj. -210785 iterations 9
Cbc0038I Pass   7: suminf.    2.44190 (85) obj. -210785 iterations 12
Cbc0038I Pass   8: suminf.    2.01456 (75) obj. -210785 iterations 10
Cbc0038I Pass   9: suminf.    1.19031 (51) obj. -210785 iterations 25
Cbc0038I Pass  10: suminf.    0.72929 (34) obj. -210785 iterations 22
Cbc0038I Pass  11: suminf.    0.34805 (25) obj. -210785 iterations 17
Cbc0038I Pass  12: suminf.    0.01572 (8) obj. -210785 iterations 19
Cbc0038I Pass  13: suminf.    0.03140 (8) obj. -210785 iterations 8
Cbc0038I Pass  14: suminf.    0.93068 (21) obj. -210785 iterations 43
Cbc0038I Pass  15: suminf.    0.91418 (18) obj. -210785 iterations 10
Cbc0038I Pass  16: suminf.    0.61730 (12) obj. -210785 iterations 15
Cbc0038I Pass  17: suminf.    0.20732 (16) obj. -210785 iterations 11
Cbc0038I Pass  18: suminf.    0.03149 (8) obj. -210785 iterations 17
Cbc0038I Pass  19: suminf.    0.01656 (8) obj. -210785 iterations 8
Cbc0038I Pass  20: suminf.    1.24112 (20) obj. -210785 iterations 36
Cbc0038I Pass  21: suminf.    1.06733 (21) obj. -210785 iterations 9
Cbc0038I Pass  22: suminf.    0.61289 (12) obj. -210785 iterations 18
Cbc0038I Pass  23: suminf.    0.20601 (15) obj. -210785 iterations 9
Cbc0038I Pass  24: suminf.    0.03139 (7) obj. -210785 iterations 15
Cbc0038I Pass  25: suminf.    0.01634 (7) obj. -210785 iterations 8
Cbc0038I Pass  26: suminf.    1.03853 (26) obj. -210785 iterations 51
Cbc0038I Pass  27: suminf.    0.75123 (29) obj. -210785 iterations 11
Cbc0038I Pass  28: suminf.    0.13941 (12) obj. -210785 iterations 18
Cbc0038I Pass  29: suminf.    0.03134 (6) obj. -210785 iterations 12
Cbc0038I Pass  30: suminf.    0.01664 (6) obj. -210785 iterations 7
Cbc0038I Pass  31: suminf.    1.30126 (24) obj. -210785 iterations 39
Cbc0038I Pass  32: suminf.    0.45988 (20) obj. -210785 iterations 14
Cbc0038I Pass  33: suminf.    0.03133 (6) obj. -210785 iterations 20
Cbc0038I Pass  34: suminf.    0.01646 (6) obj. -210785 iterations 7
Cbc0038I Pass  35: suminf.    2.25162 (27) obj. -210785 iterations 41
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 308 rows 326 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -210350 - took 0.10 seconds
Cbc0012I Integer solution of -210350.3 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 308 rows 326 columns, reduced to 0 rows 0 columns
Cbc0031I 24 added rows had average density of 22.208333
Cbc0013I At root node, 89 cuts changed objective from -214567.3 to -210350.3 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 92 row cuts average 4.3 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 44.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 89.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0001I Search completed - best objective -210350.3, took 145 iterations and 0 nodes (0.33 seconds)
Cbc0035I Maximum depth 0, 125 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.34

