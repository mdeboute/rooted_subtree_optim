Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 25 (-8) columns and 133 (-50) elements
Clp1000I sum of infeasibilities 5.93072e-06 - average 1.31794e-07, 16 fixed columns
Coin0506I Presolve 11 (-34) rows, 9 (-16) columns and 33 (-100) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 3242.5784
Clp0000I Optimal - objective value 3242.5784
Coin0511I After Postsolve, objective 3242.5784, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3242.5784
Clp0000I Optimal - objective value 3242.5784
Clp0000I Optimal - objective value 3242.5784
Coin0511I After Postsolve, objective 3242.5784, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3242.57837 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 138 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.275%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.24567
Cbc0038I Solution found of -2293
Cbc0038I Relaxing continuous gives -2293
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2376.44
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.05401 (1) obj. -2376.44 iterations 7
Cbc0038I Pass   2: suminf.    0.32500 (1) obj. -2795.12 iterations 1
Cbc0038I Pass   3: suminf.    0.12371 (2) obj. -2557.86 iterations 7
Cbc0038I Solution found of -2490
Cbc0038I Relaxing continuous gives -2490
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2616.49
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.20938 (1) obj. -2616.49 iterations 0
Cbc0038I Pass   5: suminf.    0.32500 (1) obj. -2795.12 iterations 1
Cbc0038I Pass   6: suminf.    0.51932 (3) obj. -2616.49 iterations 6
Cbc0038I Pass   7: suminf.    0.51932 (3) obj. -2616.49 iterations 2
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -2798.67 iterations 6
Cbc0038I Pass   9: suminf.    0.08575 (1) obj. -2616.49 iterations 3
Cbc0038I Pass  10: suminf.    0.24444 (1) obj. -2861.67 iterations 1
Cbc0038I Pass  11: suminf.    0.16134 (2) obj. -2616.49 iterations 3
Cbc0038I Pass  12: suminf.    0.41667 (1) obj. -2686.33 iterations 2
Cbc0038I Pass  13: suminf.    0.20938 (1) obj. -2616.49 iterations 2
Cbc0038I Pass  14: suminf.    0.31250 (1) obj. -2775.81 iterations 1
Cbc0038I Pass  15: suminf.    0.74288 (5) obj. -2616.49 iterations 7
Cbc0038I Pass  16: suminf.    0.51460 (3) obj. -2616.49 iterations 2
Cbc0038I Pass  17: suminf.    0.66750 (2) obj. -2616.49 iterations 3
Cbc0038I Pass  18: suminf.    0.25032 (2) obj. -2616.49 iterations 2
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -2731.8 iterations 2
Cbc0038I Pass  20: suminf.    1.45303 (4) obj. -2616.49 iterations 10
Cbc0038I Pass  21: suminf.    1.16961 (3) obj. -2616.49 iterations 3
Cbc0038I Pass  22: suminf.    0.66599 (2) obj. -2684.37 iterations 2
Cbc0038I Pass  23: suminf.    0.66279 (2) obj. -2616.49 iterations 2
Cbc0038I Pass  24: suminf.    0.65440 (3) obj. -2616.49 iterations 1
Cbc0038I Pass  25: suminf.    1.09505 (3) obj. -2616.49 iterations 2
Cbc0038I Pass  26: suminf.    1.53573 (5) obj. -2616.49 iterations 3
Cbc0038I Pass  27: suminf.    0.50799 (6) obj. -2616.49 iterations 7
Cbc0038I Pass  28: suminf.    0.21776 (2) obj. -2616.49 iterations 6
Cbc0038I Pass  29: suminf.    0.31878 (1) obj. -2616.49 iterations 1
Cbc0038I Pass  30: suminf.    0.31250 (1) obj. -2626.19 iterations 1
Cbc0038I Pass  31: suminf.    1.53231 (4) obj. -2833.08 iterations 4
Cbc0038I Pass  32: suminf.    0.88365 (5) obj. -2616.49 iterations 5
Cbc0038I Pass  33: suminf.    0.56510 (3) obj. -2616.49 iterations 2
Cbc0038I Rounding solution of -2506 is better than previous of -2490

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2767.07
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  33: suminf.    0.30684 (1) obj. -2767.07 iterations 0
Cbc0038I Pass  34: suminf.    0.32500 (1) obj. -2795.12 iterations 1
Cbc0038I Pass  35: suminf.    0.92602 (4) obj. -2767.07 iterations 6
Cbc0038I Pass  36: suminf.    0.34948 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  37: suminf.    0.34979 (2) obj. -2767.07 iterations 2
Cbc0038I Pass  38: suminf.    0.32229 (2) obj. -2767.07 iterations 1
Cbc0038I Pass  39: suminf.    0.88627 (3) obj. -2767.07 iterations 7
Cbc0038I Pass  40: suminf.    0.88771 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  41: suminf.    0.96515 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  42: suminf.    0.95602 (3) obj. -2767.07 iterations 1
Cbc0038I Pass  43: suminf.    1.19721 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  44: suminf.    0.64371 (3) obj. -2767.07 iterations 1
Cbc0038I Pass  45: suminf.    1.00993 (3) obj. -2767.07 iterations 5
Cbc0038I Pass  46: suminf.    0.50000 (1) obj. -2841.5 iterations 3
Cbc0038I Pass  47: suminf.    0.30684 (1) obj. -2767.07 iterations 2
Cbc0038I Pass  48: suminf.    0.31250 (1) obj. -2775.81 iterations 1
Cbc0038I Pass  49: suminf.    0.77237 (3) obj. -2767.07 iterations 8
Cbc0038I Pass  50: suminf.    0.66163 (2) obj. -2767.07 iterations 2
Cbc0038I Pass  51: suminf.    0.34948 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  52: suminf.    0.34979 (2) obj. -2767.07 iterations 2
Cbc0038I Pass  53: suminf.    0.32229 (2) obj. -2767.07 iterations 1
Cbc0038I Pass  54: suminf.    0.48049 (2) obj. -2767.07 iterations 1
Cbc0038I Pass  55: suminf.    0.32229 (2) obj. -2767.07 iterations 1
Cbc0038I Pass  56: suminf.    0.36622 (3) obj. -2767.07 iterations 1
Cbc0038I Pass  57: suminf.    0.66163 (2) obj. -2767.07 iterations 4
Cbc0038I Pass  58: suminf.    0.66163 (2) obj. -2767.07 iterations 0
Cbc0038I Pass  59: suminf.    0.34948 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  60: suminf.    0.34979 (2) obj. -2767.07 iterations 2
Cbc0038I Pass  61: suminf.    1.12137 (4) obj. -2767.07 iterations 7
Cbc0038I Pass  62: suminf.    0.39216 (3) obj. -2767.07 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2506 - took 0.02 seconds
Cbc0012I Integer solution of -2506 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 5 rows 7 columns
Cbc0031I 5 added rows had average density of 19
Cbc0013I At root node, 5 cuts changed objective from -3118.4273 to -2642.9748 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 195 row cuts average 5.4 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 214 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.762 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2506 best solution, best possible -2642.9748 (1.45 seconds)
Cbc0001I Search completed - best objective -2506, took 1139 iterations and 4 nodes (1.46 seconds)
Cbc0032I Strong branching done 22 times (125 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-21) rows, 46 (-16) columns and 375 (-273) elements
Clp1000I sum of infeasibilities 3.74261e-06 - average 8.70375e-08, 41 fixed columns
Coin0506I Presolve 5 (-38) rows, 5 (-41) columns and 15 (-360) elements
Clp0006I 0  Obj 3227.5783 Dual inf 10.363813 (4)
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 3227.5784
Clp0000I Optimal - objective value 3227.5784
Coin0511I After Postsolve, objective 3227.5784, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3227.5784 Dual inf 1451.3577 (21)
Clp0014I Perturbing problem by 0.001% of 1.4172169 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 3260.9363
Clp0000I Optimal - objective value 3260.9363
Clp0000I Optimal - objective value 3260.9363
Coin0511I After Postsolve, objective 3260.9363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3260.936297 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 44 columns (44 integer (44 of which binary)) and 328 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.044%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.5731
Cbc0038I Pass   1: suminf.    0.90619 (10) obj. -2304.83 iterations 8
Cbc0038I Solution found of -2293
Cbc0038I Rounding solution of -2308 is better than previous of -2293

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2390.94
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.99448 (11) obj. -2390.94 iterations 1
Cbc0038I Pass   3: suminf.    0.32500 (1) obj. -2795.12 iterations 13
Cbc0038I Pass   4: suminf.    0.06339 (1) obj. -2390.94 iterations 2
Cbc0038I Pass   5: suminf.    0.99625 (3) obj. -2390.94 iterations 8
Cbc0038I Pass   6: suminf.    0.99625 (3) obj. -2390.94 iterations 1
Cbc0038I Pass   7: suminf.    0.26667 (1) obj. -2816 iterations 3
Cbc0038I Pass   8: suminf.    0.45821 (1) obj. -2390.94 iterations 1
Cbc0038I Pass   9: suminf.    2.31787 (10) obj. -2390.94 iterations 11
Cbc0038I Pass  10: suminf.    0.54898 (5) obj. -2390.94 iterations 4
Cbc0038I Pass  11: suminf.    0.44942 (4) obj. -2390.94 iterations 1
Cbc0038I Pass  12: suminf.    0.13333 (1) obj. -2524 iterations 4
Cbc0038I Pass  13: suminf.    0.04721 (1) obj. -2390.94 iterations 1
Cbc0038I Pass  14: suminf.    0.28882 (4) obj. -2390.94 iterations 6
Cbc0038I Pass  15: suminf.    0.17936 (3) obj. -2390.94 iterations 1
Cbc0038I Pass  16: suminf.    0.13750 (1) obj. -2495.44 iterations 3
Cbc0038I Pass  17: suminf.    0.06986 (1) obj. -2390.94 iterations 1
Cbc0038I Pass  18: suminf.    1.03357 (5) obj. -2929.42 iterations 9
Cbc0038I Pass  19: suminf.    0.70882 (4) obj. -2833.29 iterations 2
Cbc0038I Pass  20: suminf.    0.29188 (4) obj. -2390.94 iterations 2
Cbc0038I Pass  21: suminf.    0.31250 (1) obj. -2764.81 iterations 4
Cbc0038I Pass  22: suminf.    0.07051 (1) obj. -2390.94 iterations 1
Cbc0038I Pass  23: suminf.    2.03122 (10) obj. -2390.94 iterations 15
Cbc0038I Pass  24: suminf.    2.03122 (10) obj. -2390.94 iterations 1
Cbc0038I Pass  25: suminf.    0.32500 (1) obj. -2789.12 iterations 15
Cbc0038I Pass  26: suminf.    0.06727 (1) obj. -2390.94 iterations 1
Cbc0038I Pass  27: suminf.    2.78443 (8) obj. -2390.94 iterations 16
Cbc0038I Pass  28: suminf.    0.95926 (5) obj. -2501.33 iterations 7
Cbc0038I Pass  29: suminf.    0.89481 (4) obj. -2469.91 iterations 2
Cbc0038I Solution found of -2466
Cbc0038I Rounding solution of -2470 is better than previous of -2466

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 44 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -2470 to -2506 (0.03 seconds)
Cbc0038I Round again with cutoff of -2631.27
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.24093 (11) obj. -2631.27 iterations 0
Cbc0038I Pass  31: suminf.    0.32500 (1) obj. -2795.12 iterations 13
Cbc0038I Pass  32: suminf.    0.21895 (1) obj. -2631.27 iterations 2
Cbc0038I Pass  33: suminf.    0.86157 (5) obj. -2631.27 iterations 8
Cbc0038I Pass  34: suminf.    0.56956 (4) obj. -2631.27 iterations 4
Cbc0038I Pass  35: suminf.    1.28242 (9) obj. -2631.27 iterations 4
Cbc0038I Pass  36: suminf.    0.70730 (5) obj. -2631.27 iterations 2
Cbc0038I Pass  37: suminf.    1.19856 (6) obj. -2631.27 iterations 7
Cbc0038I Pass  38: suminf.    1.19856 (6) obj. -2631.27 iterations 3
Cbc0038I Pass  39: suminf.    0.28750 (1) obj. -2723.19 iterations 6
Cbc0038I Pass  40: suminf.    0.22801 (1) obj. -2631.27 iterations 1
Cbc0038I Pass  41: suminf.    0.86998 (4) obj. -2631.27 iterations 6
Cbc0038I Pass  42: suminf.    0.49781 (3) obj. -2631.27 iterations 2
Cbc0038I Pass  43: suminf.    0.39658 (3) obj. -2631.27 iterations 2
Cbc0038I Pass  44: suminf.    0.39658 (3) obj. -2631.27 iterations 3
Cbc0038I Pass  45: suminf.    0.49781 (3) obj. -2631.27 iterations 3
Cbc0038I Pass  46: suminf.    1.08157 (8) obj. -2631.27 iterations 7
Cbc0038I Pass  47: suminf.    0.94432 (7) obj. -2631.27 iterations 2
Cbc0038I Pass  48: suminf.    1.46901 (11) obj. -2631.27 iterations 7
Cbc0038I Pass  49: suminf.    1.46901 (11) obj. -2631.27 iterations 2
Cbc0038I Pass  50: suminf.    0.39658 (3) obj. -2631.27 iterations 11
Cbc0038I Pass  51: suminf.    0.39658 (3) obj. -2631.27 iterations 1
Cbc0038I Pass  52: suminf.    0.49781 (3) obj. -2631.27 iterations 2
Cbc0038I Pass  53: suminf.    0.49781 (3) obj. -2631.27 iterations 0
Cbc0038I Pass  54: suminf.    0.10050 (1) obj. -2631.27 iterations 3
Cbc0038I Pass  55: suminf.    0.13333 (1) obj. -2682 iterations 1
Cbc0038I Pass  56: suminf.    0.10050 (1) obj. -2631.27 iterations 1
Cbc0038I Pass  57: suminf.    0.40297 (3) obj. -2631.27 iterations 6
Cbc0038I Pass  58: suminf.    0.33182 (2) obj. -2631.27 iterations 5
Cbc0038I Pass  59: suminf.    1.28744 (5) obj. -2631.27 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 44 columns, reduced to 23 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2506 - took 0.02 seconds
Cbc0012I Integer solution of -2506 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 44 columns, reduced to 6 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 19
Cbc0013I At root node, 8 cuts changed objective from -3128.3547 to -2389.88 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.3 elements, 20 column cuts (20 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 24 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2506, took 45 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 25 (-8) columns and 133 (-50) elements
Clp1000I sum of infeasibilities 5.93072e-06 - average 1.31794e-07, 16 fixed columns
Coin0506I Presolve 11 (-34) rows, 9 (-16) columns and 33 (-100) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 3242.5784
Clp0000I Optimal - objective value 3242.5784
Coin0511I After Postsolve, objective 3242.5784, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3242.5784
Clp0000I Optimal - objective value 3242.5784
Clp0000I Optimal - objective value 3242.5784
Coin0511I After Postsolve, objective 3242.5784, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3242.57837 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 138 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.275%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.24567
Cbc0038I Solution found of -2293
Cbc0038I Relaxing continuous gives -2293
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2376.44
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.05401 (1) obj. -2376.44 iterations 7
Cbc0038I Pass   2: suminf.    0.32500 (1) obj. -2795.12 iterations 1
Cbc0038I Pass   3: suminf.    0.12371 (2) obj. -2557.86 iterations 7
Cbc0038I Solution found of -2490
Cbc0038I Relaxing continuous gives -2490
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -2616.49
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.20938 (1) obj. -2616.49 iterations 0
Cbc0038I Pass   5: suminf.    0.32500 (1) obj. -2795.12 iterations 1
Cbc0038I Pass   6: suminf.    0.51932 (3) obj. -2616.49 iterations 6
Cbc0038I Pass   7: suminf.    0.51932 (3) obj. -2616.49 iterations 2
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -2798.67 iterations 6
Cbc0038I Pass   9: suminf.    0.08575 (1) obj. -2616.49 iterations 3
Cbc0038I Pass  10: suminf.    0.24444 (1) obj. -2861.67 iterations 1
Cbc0038I Pass  11: suminf.    0.16134 (2) obj. -2616.49 iterations 3
Cbc0038I Pass  12: suminf.    0.41667 (1) obj. -2686.33 iterations 2
Cbc0038I Pass  13: suminf.    0.20938 (1) obj. -2616.49 iterations 2
Cbc0038I Pass  14: suminf.    0.31250 (1) obj. -2775.81 iterations 1
Cbc0038I Pass  15: suminf.    0.74288 (5) obj. -2616.49 iterations 7
Cbc0038I Pass  16: suminf.    0.51460 (3) obj. -2616.49 iterations 2
Cbc0038I Pass  17: suminf.    0.66750 (2) obj. -2616.49 iterations 3
Cbc0038I Pass  18: suminf.    0.25032 (2) obj. -2616.49 iterations 2
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -2731.8 iterations 2
Cbc0038I Pass  20: suminf.    1.45303 (4) obj. -2616.49 iterations 10
Cbc0038I Pass  21: suminf.    1.16961 (3) obj. -2616.49 iterations 3
Cbc0038I Pass  22: suminf.    0.66599 (2) obj. -2684.37 iterations 2
Cbc0038I Pass  23: suminf.    0.66279 (2) obj. -2616.49 iterations 2
Cbc0038I Pass  24: suminf.    0.65440 (3) obj. -2616.49 iterations 1
Cbc0038I Pass  25: suminf.    1.09505 (3) obj. -2616.49 iterations 2
Cbc0038I Pass  26: suminf.    1.53573 (5) obj. -2616.49 iterations 3
Cbc0038I Pass  27: suminf.    0.50799 (6) obj. -2616.49 iterations 7
Cbc0038I Pass  28: suminf.    0.21776 (2) obj. -2616.49 iterations 6
Cbc0038I Pass  29: suminf.    0.31878 (1) obj. -2616.49 iterations 1
Cbc0038I Pass  30: suminf.    0.31250 (1) obj. -2626.19 iterations 1
Cbc0038I Pass  31: suminf.    1.53231 (4) obj. -2833.08 iterations 4
Cbc0038I Pass  32: suminf.    0.88365 (5) obj. -2616.49 iterations 5
Cbc0038I Pass  33: suminf.    0.56510 (3) obj. -2616.49 iterations 2
Cbc0038I Rounding solution of -2506 is better than previous of -2490

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2767.07
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  33: suminf.    0.30684 (1) obj. -2767.07 iterations 0
Cbc0038I Pass  34: suminf.    0.32500 (1) obj. -2795.12 iterations 1
Cbc0038I Pass  35: suminf.    0.92602 (4) obj. -2767.07 iterations 6
Cbc0038I Pass  36: suminf.    0.34948 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  37: suminf.    0.34979 (2) obj. -2767.07 iterations 2
Cbc0038I Pass  38: suminf.    0.32229 (2) obj. -2767.07 iterations 1
Cbc0038I Pass  39: suminf.    0.88627 (3) obj. -2767.07 iterations 7
Cbc0038I Pass  40: suminf.    0.88771 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  41: suminf.    0.96515 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  42: suminf.    0.95602 (3) obj. -2767.07 iterations 1
Cbc0038I Pass  43: suminf.    1.19721 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  44: suminf.    0.64371 (3) obj. -2767.07 iterations 1
Cbc0038I Pass  45: suminf.    1.00993 (3) obj. -2767.07 iterations 5
Cbc0038I Pass  46: suminf.    0.50000 (1) obj. -2841.5 iterations 3
Cbc0038I Pass  47: suminf.    0.30684 (1) obj. -2767.07 iterations 2
Cbc0038I Pass  48: suminf.    0.31250 (1) obj. -2775.81 iterations 1
Cbc0038I Pass  49: suminf.    0.77237 (3) obj. -2767.07 iterations 8
Cbc0038I Pass  50: suminf.    0.66163 (2) obj. -2767.07 iterations 2
Cbc0038I Pass  51: suminf.    0.34948 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  52: suminf.    0.34979 (2) obj. -2767.07 iterations 2
Cbc0038I Pass  53: suminf.    0.32229 (2) obj. -2767.07 iterations 1
Cbc0038I Pass  54: suminf.    0.48049 (2) obj. -2767.07 iterations 1
Cbc0038I Pass  55: suminf.    0.32229 (2) obj. -2767.07 iterations 1
Cbc0038I Pass  56: suminf.    0.36622 (3) obj. -2767.07 iterations 1
Cbc0038I Pass  57: suminf.    0.66163 (2) obj. -2767.07 iterations 4
Cbc0038I Pass  58: suminf.    0.66163 (2) obj. -2767.07 iterations 0
Cbc0038I Pass  59: suminf.    0.34948 (3) obj. -2767.07 iterations 2
Cbc0038I Pass  60: suminf.    0.34979 (2) obj. -2767.07 iterations 2
Cbc0038I Pass  61: suminf.    1.12137 (4) obj. -2767.07 iterations 7
Cbc0038I Pass  62: suminf.    0.39216 (3) obj. -2767.07 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2506 - took 0.02 seconds
Cbc0012I Integer solution of -2506 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 5 rows 7 columns
Cbc0031I 5 added rows had average density of 19
Cbc0013I At root node, 5 cuts changed objective from -3118.4273 to -2642.9748 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 195 row cuts average 5.4 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 214 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.740 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2506 best solution, best possible -2642.9748 (1.40 seconds)
Cbc0001I Search completed - best objective -2506, took 1139 iterations and 4 nodes (1.41 seconds)
Cbc0032I Strong branching done 22 times (125 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       1.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 43 (-20) columns and 318 (-331) elements
Clp1000I sum of infeasibilities 4.50269e-06 - average 1.12567e-07, 38 fixed columns
Coin0506I Presolve 5 (-35) rows, 5 (-38) columns and 15 (-303) elements
Clp0006I 0  Obj 3227.5783 Dual inf 10.363813 (4)
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 3227.5784
Clp0000I Optimal - objective value 3227.5784
Coin0511I After Postsolve, objective 3227.5784, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3227.5784 Dual inf 1364.9426 (21)
Clp0014I Perturbing problem by 0.001% of 1.4151383 - largest nonzero change 0 ( 0%) - largest zero change 1.836629e-05
Clp0000I Optimal - objective value 3260.9363
Clp0000I Optimal - objective value 3260.9363
Clp0000I Optimal - objective value 3260.9363
Coin0511I After Postsolve, objective 3260.9363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3260.936297 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 44 columns (44 integer (44 of which binary)) and 327 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.993%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.00258
Cbc0038I Pass   1: suminf.    0.32398 (4) obj. -1513.23 iterations 7
Cbc0038I Pass   2: suminf.    0.32398 (4) obj. -1513.23 iterations 0
Cbc0038I Solution found of -1506
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 44 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -1506 to -2293 (0.01 seconds)
Cbc0038I Round again with cutoff of -2377.69
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.44788 (12) obj. -2377.69 iterations 1
Cbc0038I Pass   4: suminf.    0.32500 (1) obj. -2795.12 iterations 12
Cbc0038I Pass   5: suminf.    0.05482 (1) obj. -2377.69 iterations 1
Cbc0038I Pass   6: suminf.    0.62745 (4) obj. -2377.69 iterations 8
Cbc0038I Pass   7: suminf.    0.47075 (1) obj. -2377.69 iterations 4
Cbc0038I Pass   8: suminf.    0.32500 (1) obj. -2602.88 iterations 1
Cbc0038I Pass   9: suminf.    0.59118 (5) obj. -2377.69 iterations 10
Cbc0038I Pass  10: suminf.    0.33955 (5) obj. -2377.69 iterations 3
Cbc0038I Pass  11: suminf.    0.59129 (2) obj. -2631.45 iterations 6
Cbc0038I Pass  12: suminf.    0.59129 (2) obj. -2631.45 iterations 0
Cbc0038I Pass  13: suminf.    0.73887 (4) obj. -2377.69 iterations 2
Cbc0038I Pass  14: suminf.    0.08750 (1) obj. -2489.01 iterations 4
Cbc0038I Pass  15: suminf.    0.08750 (1) obj. -2489.01 iterations 0
Cbc0038I Pass  16: suminf.    0.66726 (2) obj. -2377.69 iterations 2
Cbc0038I Pass  17: suminf.    1.37161 (5) obj. -2377.69 iterations 7
Cbc0038I Pass  18: suminf.    1.28219 (6) obj. -2377.69 iterations 2
Cbc0038I Pass  19: suminf.    0.46687 (1) obj. -2377.69 iterations 6
Cbc0038I Pass  20: suminf.    0.35000 (1) obj. -2558.25 iterations 1
Cbc0038I Pass  21: suminf.    0.71336 (4) obj. -2377.69 iterations 10
Cbc0038I Pass  22: suminf.    0.71336 (4) obj. -2377.69 iterations 1
Cbc0038I Pass  23: suminf.    0.27500 (1) obj. -2707.88 iterations 4
Cbc0038I Pass  24: suminf.    0.06129 (1) obj. -2377.69 iterations 1
Cbc0038I Pass  25: suminf.    0.92569 (8) obj. -2377.69 iterations 12
Cbc0038I Pass  26: suminf.    0.92569 (8) obj. -2377.69 iterations 0
Cbc0038I Pass  27: suminf.    0.40159 (3) obj. -2377.69 iterations 7
Cbc0038I Pass  28: suminf.    0.05805 (1) obj. -2377.69 iterations 3
Cbc0038I Pass  29: suminf.    0.10000 (1) obj. -2442.5 iterations 1
Cbc0038I Pass  30: suminf.    1.49204 (7) obj. -2377.69 iterations 19
Cbc0038I Pass  31: suminf.    0.73826 (4) obj. -2482.11 iterations 6
Cbc0038I Solution found of -2478
Cbc0038I Rounding solution of -2484 is better than previous of -2478

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 44 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -2484 to -2506 (0.02 seconds)
Cbc0038I Round again with cutoff of -2631.79
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.72653 (12) obj. -2631.79 iterations 0
Cbc0038I Pass  33: suminf.    0.32500 (1) obj. -2795.12 iterations 12
Cbc0038I Pass  34: suminf.    0.21928 (1) obj. -2631.79 iterations 1
Cbc0038I Pass  35: suminf.    0.50172 (3) obj. -2631.79 iterations 6
Cbc0038I Pass  36: suminf.    0.50172 (3) obj. -2631.79 iterations 1
Cbc0038I Pass  37: suminf.    1.23912 (3) obj. -2631.79 iterations 2
Cbc0038I Pass  38: suminf.    0.37500 (1) obj. -2703.38 iterations 3
Cbc0038I Pass  39: suminf.    0.21993 (1) obj. -2631.79 iterations 2
Cbc0038I Pass  40: suminf.    0.27500 (1) obj. -2716.88 iterations 1
Cbc0038I Pass  41: suminf.    1.81819 (8) obj. -2631.79 iterations 12
Cbc0038I Pass  42: suminf.    0.85811 (4) obj. -2631.79 iterations 4
Cbc0038I Pass  43: suminf.    0.25000 (1) obj. -2675.25 iterations 4
Cbc0038I Pass  44: suminf.    0.22187 (1) obj. -2631.79 iterations 1
Cbc0038I Pass  45: suminf.    2.49888 (8) obj. -2631.79 iterations 11
Cbc0038I Pass  46: suminf.    2.03748 (7) obj. -2631.79 iterations 1
Cbc0038I Pass  47: suminf.    1.14042 (6) obj. -2631.79 iterations 1
Cbc0038I Pass  48: suminf.    1.07450 (5) obj. -2631.79 iterations 2
Cbc0038I Pass  49: suminf.    0.25000 (1) obj. -2681.25 iterations 5
Cbc0038I Pass  50: suminf.    0.21798 (1) obj. -2631.79 iterations 1
Cbc0038I Pass  51: suminf.    0.83543 (4) obj. -2631.79 iterations 6
Cbc0038I Pass  52: suminf.    0.58049 (3) obj. -2631.79 iterations 3
Cbc0038I Pass  53: suminf.    0.25000 (1) obj. -2685.25 iterations 3
Cbc0038I Pass  54: suminf.    0.21540 (1) obj. -2631.79 iterations 1
Cbc0038I Pass  55: suminf.    1.46455 (5) obj. -2631.79 iterations 8
Cbc0038I Pass  56: suminf.    1.39985 (6) obj. -2631.79 iterations 1
Cbc0038I Pass  57: suminf.    0.52911 (3) obj. -2631.79 iterations 4
Cbc0038I Pass  58: suminf.    0.52911 (3) obj. -2631.79 iterations 0
Cbc0038I Pass  59: suminf.    0.73044 (3) obj. -2631.79 iterations 1
Cbc0038I Pass  60: suminf.    0.71794 (3) obj. -2631.79 iterations 1
Cbc0038I Pass  61: suminf.    0.56901 (3) obj. -2631.79 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 44 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -2506 - took 0.02 seconds
Cbc0012I Integer solution of -2506 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 44 columns, reduced to 6 rows 8 columns
Cbc0031I 11 added rows had average density of 16.545455
Cbc0013I At root node, 11 cuts changed objective from -3130.9325 to -2624.6153 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 369 row cuts average 2.8 elements, 12 column cuts (12 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 306 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 88 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.696 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2506 best solution, best possible -2624.613 (1.33 seconds)
Cbc0001I Search completed - best objective -2506, took 1198 iterations and 2 nodes (1.33 seconds)
Cbc0032I Strong branching done 26 times (259 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       1.33

