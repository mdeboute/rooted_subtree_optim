Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 53 (-22) elements
Clp1000I sum of infeasibilities 0 - average 0, 2 fixed columns
Coin0506I Presolve 15 (-3) rows, 10 (-2) columns and 43 (-10) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 72.668967
Clp0000I Optimal - objective value 72.668967
Coin0511I After Postsolve, objective 72.668967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.668967
Clp0000I Optimal - objective value 72.668967
Clp0000I Optimal - objective value 72.668967
Coin0511I After Postsolve, objective 72.668967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.66896729 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.04409
Cbc0038I Pass   1: suminf.    0.47368 (1) obj. -60.0332 iterations 4
Cbc0038I Solution found of -47.6999
Cbc0038I Relaxing continuous gives -47.6999
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -47.6999 to -49.8999 (0.00 seconds)
Cbc0038I Round again with cutoff of -51.8068
Cbc0038I Pass   2: suminf.    0.47368 (1) obj. -60.0332 iterations 0
Cbc0038I Pass   3: suminf.    0.13890 (1) obj. -51.8068 iterations 2
Cbc0038I Pass   4: suminf.    0.39073 (3) obj. -51.8068 iterations 3
Cbc0038I Pass   5: suminf.    0.47368 (1) obj. -51.8068 iterations 2
Cbc0038I Pass   6: suminf.    1.01645 (4) obj. -51.8068 iterations 5
Cbc0038I Pass   7: suminf.    1.01645 (4) obj. -51.8068 iterations 0
Cbc0038I Pass   8: suminf.    0.37500 (1) obj. -51.8068 iterations 4
Cbc0038I Pass   9: suminf.    0.06450 (1) obj. -51.8068 iterations 2
Cbc0038I Pass  10: suminf.    0.34820 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  11: suminf.    0.94217 (3) obj. -51.8068 iterations 2
Cbc0038I Pass  12: suminf.    0.34820 (2) obj. -51.8068 iterations 5
Cbc0038I Pass  13: suminf.    1.12442 (4) obj. -51.8068 iterations 4
Cbc0038I Pass  14: suminf.    0.57049 (3) obj. -51.8068 iterations 3
Cbc0038I Pass  15: suminf.    0.67242 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  16: suminf.    0.65769 (3) obj. -51.8068 iterations 1
Cbc0038I Pass  17: suminf.    0.27778 (1) obj. -52.3573 iterations 4
Cbc0038I Pass  18: suminf.    0.27778 (1) obj. -52.3573 iterations 0
Cbc0038I Pass  19: suminf.    0.57049 (3) obj. -51.8068 iterations 3
Cbc0038I Pass  20: suminf.    0.67242 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  21: suminf.    0.65769 (3) obj. -51.8068 iterations 1
Cbc0038I Pass  22: suminf.    0.27778 (1) obj. -52.3573 iterations 4
Cbc0038I Pass  23: suminf.    0.27778 (1) obj. -52.3573 iterations 0
Cbc0038I Pass  24: suminf.    0.57049 (3) obj. -51.8068 iterations 3
Cbc0038I Pass  25: suminf.    0.67242 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  26: suminf.    0.65769 (3) obj. -51.8068 iterations 1
Cbc0038I Pass  27: suminf.    0.27778 (1) obj. -52.3573 iterations 4
Cbc0038I Pass  28: suminf.    0.27778 (1) obj. -52.3573 iterations 0
Cbc0038I Pass  29: suminf.    0.57049 (3) obj. -51.8068 iterations 3
Cbc0038I Pass  30: suminf.    0.67242 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  31: suminf.    0.65769 (3) obj. -51.8068 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -49.8999 - took 0.01 seconds
Cbc0012I Integer solution of -49.8999 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 12 columns, reduced to 8 rows 6 columns
Cbc0031I 5 added rows had average density of 4.6
Cbc0013I At root node, 6 cuts changed objective from -68.968383 to -49.899936 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 34 row cuts average 3.3 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 66 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 3.5847409e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -49.8999, took 114 iterations and 0 nodes (0.38 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-8) rows, 24 (-2) columns and 124 (-29) elements
Clp1000I sum of infeasibilities 3.0395e-09 - average 1.51975e-10, 15 fixed columns
Coin0506I Presolve 6 (-14) rows, 9 (-15) columns and 24 (-100) elements
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 1.221168 - largest nonzero change 2.1229226e-05 ( 0.0010614613%) - largest zero change 1.9188505e-05
Clp0000I Optimal - objective value 87.119606
Clp0000I Optimal - objective value 87.119606
Coin0511I After Postsolve, objective 87.119606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8355504 - largest nonzero change 1.8594894e-05 ( 0.0010614613%) - largest zero change 2.6480259e-05
Clp0000I Optimal - objective value 118.61869
Clp0000I Optimal - objective value 118.61869
Clp0000I Optimal - objective value 118.61869
Coin0511I After Postsolve, objective 118.61869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 118.6186892 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 24 columns (24 integer (24 of which binary)) and 128 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.949%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.4335
Cbc0038I Pass   1: suminf.    0.46078 (3) obj. -52.9646 iterations 4
Cbc0038I Pass   2: suminf.    0.46078 (3) obj. -52.9646 iterations 0
Cbc0038I Solution found of -36.8999
Cbc0038I Rounding solution of -49.8999 is better than previous of -36.8999

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -49.8999 to -58.4333 (0.01 seconds)
Cbc0038I Round again with cutoff of -62.6193
Cbc0038I Pass   3: suminf.    0.98839 (10) obj. -62.6193 iterations 1
Cbc0038I Pass   4: suminf.    0.98839 (10) obj. -62.6193 iterations 0
Cbc0038I Pass   5: suminf.    0.65925 (2) obj. -62.6193 iterations 15
Cbc0038I Pass   6: suminf.    0.14158 (1) obj. -62.6193 iterations 2
Cbc0038I Pass   7: suminf.    0.14286 (1) obj. -83.7762 iterations 1
Cbc0038I Pass   8: suminf.    1.26495 (5) obj. -75.0373 iterations 7
Cbc0038I Pass   9: suminf.    1.26495 (5) obj. -75.0373 iterations 0
Cbc0038I Pass  10: suminf.    0.14158 (1) obj. -62.6193 iterations 6
Cbc0038I Pass  11: suminf.    1.55111 (5) obj. -91.44 iterations 7
Cbc0038I Pass  12: suminf.    1.55111 (5) obj. -91.44 iterations 0
Cbc0038I Pass  13: suminf.    0.14158 (1) obj. -62.6193 iterations 7
Cbc0038I Pass  14: suminf.    0.14286 (1) obj. -83.7762 iterations 1
Cbc0038I Pass  15: suminf.    0.55000 (2) obj. -63.5333 iterations 3
Cbc0038I Pass  16: suminf.    0.55000 (2) obj. -63.5333 iterations 0
Cbc0038I Pass  17: suminf.    1.67010 (7) obj. -62.6193 iterations 5
Cbc0038I Pass  18: suminf.    1.67010 (7) obj. -62.6193 iterations 0
Cbc0038I Pass  19: suminf.    0.35222 (1) obj. -62.6193 iterations 10
Cbc0038I Solution found of -73.0333
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 14 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -78.4853
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  20: suminf.    2.43350 (9) obj. -100.293 iterations 3
Cbc0038I Pass  21: suminf.    0.32181 (1) obj. -78.4853 iterations 13
Cbc0038I Pass  22: suminf.    0.14286 (1) obj. -83.7762 iterations 1
Cbc0038I Pass  23: suminf.    0.23810 (2) obj. -84.3476 iterations 2
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -83.7762 iterations 2
Cbc0038I Pass  25: suminf.    1.02052 (3) obj. -78.4853 iterations 2
Cbc0038I Pass  26: suminf.    0.72619 (3) obj. -79.9817 iterations 3
Cbc0038I Pass  27: suminf.    0.72619 (3) obj. -79.9817 iterations 0
Cbc0038I Pass  28: suminf.    1.37612 (6) obj. -78.4853 iterations 4
Cbc0038I Pass  29: suminf.    1.22826 (5) obj. -78.4853 iterations 4
Cbc0038I Pass  30: suminf.    0.36549 (4) obj. -78.4853 iterations 6
Cbc0038I Pass  31: suminf.    0.26159 (3) obj. -78.4853 iterations 1
Cbc0038I Pass  32: suminf.    0.57393 (3) obj. -78.4853 iterations 3
Cbc0038I Pass  33: suminf.    0.53509 (2) obj. -79.0666 iterations 1
Cbc0038I Pass  34: suminf.    0.32181 (1) obj. -78.4853 iterations 4
Cbc0038I Pass  35: suminf.    0.14286 (1) obj. -83.7762 iterations 1
Cbc0038I Pass  36: suminf.    0.59759 (4) obj. -78.4853 iterations 5
Cbc0038I Pass  37: suminf.    0.52288 (3) obj. -78.4853 iterations 3
Cbc0038I Pass  38: suminf.    0.76261 (2) obj. -78.4853 iterations 3
Cbc0038I Pass  39: suminf.    0.90787 (4) obj. -78.4853 iterations 5
Cbc0038I Pass  40: suminf.    0.69841 (3) obj. -80.065 iterations 2
Cbc0038I Pass  41: suminf.    0.32181 (1) obj. -78.4853 iterations 8
Cbc0038I Pass  42: suminf.    0.14286 (1) obj. -83.7762 iterations 1
Cbc0038I Pass  43: suminf.    1.61716 (5) obj. -78.4853 iterations 8
Cbc0038I Pass  44: suminf.    1.03675 (4) obj. -78.4853 iterations 2
Cbc0038I Pass  45: suminf.    0.50667 (2) obj. -80.0844 iterations 3
Cbc0038I Pass  46: suminf.    1.69825 (5) obj. -78.4853 iterations 5
Cbc0038I Pass  47: suminf.    1.09178 (4) obj. -78.4853 iterations 5
Cbc0038I Pass  48: suminf.    0.55990 (2) obj. -78.4853 iterations 4
Cbc0038I Pass  49: suminf.    0.53509 (2) obj. -79.0666 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 24 columns, reduced to 11 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -73.0333 - took 0.01 seconds
Cbc0012I Integer solution of -73.0333 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 18 rows 24 columns, reduced to 2 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 3.25
Cbc0013I At root node, 8 cuts changed objective from -100.2928 to -80.728978 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -73.0333, took 15 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 53 (-22) elements
Clp1000I sum of infeasibilities 0 - average 0, 2 fixed columns
Coin0506I Presolve 15 (-3) rows, 10 (-2) columns and 43 (-10) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 72.668967
Clp0000I Optimal - objective value 72.668967
Coin0511I After Postsolve, objective 72.668967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 72.668967
Clp0000I Optimal - objective value 72.668967
Clp0000I Optimal - objective value 72.668967
Coin0511I After Postsolve, objective 72.668967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 72.66896729 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.04409
Cbc0038I Pass   1: suminf.    0.47368 (1) obj. -60.0332 iterations 4
Cbc0038I Solution found of -47.6999
Cbc0038I Relaxing continuous gives -47.6999
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -47.6999 to -49.8999 (0.01 seconds)
Cbc0038I Round again with cutoff of -51.8068
Cbc0038I Pass   2: suminf.    0.47368 (1) obj. -60.0332 iterations 0
Cbc0038I Pass   3: suminf.    0.13890 (1) obj. -51.8068 iterations 2
Cbc0038I Pass   4: suminf.    0.39073 (3) obj. -51.8068 iterations 3
Cbc0038I Pass   5: suminf.    0.47368 (1) obj. -51.8068 iterations 2
Cbc0038I Pass   6: suminf.    1.01645 (4) obj. -51.8068 iterations 5
Cbc0038I Pass   7: suminf.    1.01645 (4) obj. -51.8068 iterations 0
Cbc0038I Pass   8: suminf.    0.37500 (1) obj. -51.8068 iterations 4
Cbc0038I Pass   9: suminf.    0.06450 (1) obj. -51.8068 iterations 2
Cbc0038I Pass  10: suminf.    0.34820 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  11: suminf.    0.94217 (3) obj. -51.8068 iterations 2
Cbc0038I Pass  12: suminf.    0.34820 (2) obj. -51.8068 iterations 5
Cbc0038I Pass  13: suminf.    1.12442 (4) obj. -51.8068 iterations 4
Cbc0038I Pass  14: suminf.    0.57049 (3) obj. -51.8068 iterations 3
Cbc0038I Pass  15: suminf.    0.67242 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  16: suminf.    0.65769 (3) obj. -51.8068 iterations 1
Cbc0038I Pass  17: suminf.    0.27778 (1) obj. -52.3573 iterations 4
Cbc0038I Pass  18: suminf.    0.27778 (1) obj. -52.3573 iterations 0
Cbc0038I Pass  19: suminf.    0.57049 (3) obj. -51.8068 iterations 3
Cbc0038I Pass  20: suminf.    0.67242 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  21: suminf.    0.65769 (3) obj. -51.8068 iterations 1
Cbc0038I Pass  22: suminf.    0.27778 (1) obj. -52.3573 iterations 4
Cbc0038I Pass  23: suminf.    0.27778 (1) obj. -52.3573 iterations 0
Cbc0038I Pass  24: suminf.    0.57049 (3) obj. -51.8068 iterations 3
Cbc0038I Pass  25: suminf.    0.67242 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  26: suminf.    0.65769 (3) obj. -51.8068 iterations 1
Cbc0038I Pass  27: suminf.    0.27778 (1) obj. -52.3573 iterations 4
Cbc0038I Pass  28: suminf.    0.27778 (1) obj. -52.3573 iterations 0
Cbc0038I Pass  29: suminf.    0.57049 (3) obj. -51.8068 iterations 3
Cbc0038I Pass  30: suminf.    0.67242 (2) obj. -51.8068 iterations 3
Cbc0038I Pass  31: suminf.    0.65769 (3) obj. -51.8068 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -49.8999 - took 0.01 seconds
Cbc0012I Integer solution of -49.8999 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 12 columns, reduced to 8 rows 6 columns
Cbc0031I 5 added rows had average density of 4.6
Cbc0013I At root node, 6 cuts changed objective from -68.968383 to -49.899936 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 34 row cuts average 3.3 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 66 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.240 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 3.5847409e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -49.8999, took 114 iterations and 0 nodes (0.46 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 22 (-5) columns and 108 (-46) elements
Clp1000I sum of infeasibilities 7.3851e-10 - average 4.10283e-11, 3 fixed columns
Coin0506I Presolve 16 (-2) rows, 19 (-3) columns and 82 (-26) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 83.858718
Clp0000I Optimal - objective value 83.858718
Coin0511I After Postsolve, objective 83.858718, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.858718
Clp0000I Optimal - objective value 83.858718
Clp0000I Optimal - objective value 83.858718
Coin0511I After Postsolve, objective 83.858718, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.85871829 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 22 columns (22 integer (22 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.606%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.25874
Cbc0038I Pass   1: suminf.    0.73743 (3) obj. -65.242 iterations 1
Cbc0038I Solution found of -47.6999
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -49.7762
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.73743 (3) obj. -65.242 iterations 0
Cbc0038I Pass   3: suminf.    0.08860 (1) obj. -49.7762 iterations 4
Cbc0038I Pass   4: suminf.    0.47368 (1) obj. -60.0332 iterations 1
Cbc0038I Pass   5: suminf.    0.62632 (2) obj. -54.5753 iterations 3
Cbc0038I Pass   6: suminf.    0.43000 (1) obj. -49.7762 iterations 2
Cbc0038I Pass   7: suminf.    0.47368 (1) obj. -52.0332 iterations 1
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -49.8999 iterations 6
Cbc0038I Solution found of -49.8999
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -53.6124
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.73743 (3) obj. -65.242 iterations 0
Cbc0038I Pass  10: suminf.    0.25231 (1) obj. -53.6124 iterations 3
Cbc0038I Pass  11: suminf.    0.47368 (1) obj. -60.0332 iterations 1
Cbc0038I Pass  12: suminf.    0.58480 (2) obj. -62.6999 iterations 1
Cbc0038I Pass  13: suminf.    0.58480 (2) obj. -62.6999 iterations 0
Cbc0038I Pass  14: suminf.    1.43251 (5) obj. -53.6124 iterations 5
Cbc0038I Pass  15: suminf.    1.00564 (3) obj. -53.6124 iterations 4
Cbc0038I Pass  16: suminf.    0.99767 (3) obj. -53.6124 iterations 1
Cbc0038I Pass  17: suminf.    0.99767 (3) obj. -53.6124 iterations 0
Cbc0038I Pass  18: suminf.    0.17647 (1) obj. -54.0254 iterations 3
Cbc0038I Pass  19: suminf.    0.17647 (1) obj. -54.0254 iterations 0
Cbc0038I Pass  20: suminf.    0.49164 (1) obj. -53.6124 iterations 2
Cbc0038I Pass  21: suminf.    0.47368 (1) obj. -54.0332 iterations 1
Cbc0038I Pass  22: suminf.    0.58758 (3) obj. -53.6124 iterations 3
Cbc0038I Pass  23: suminf.    0.57258 (2) obj. -53.6124 iterations 1
Cbc0038I Pass  24: suminf.    0.70222 (3) obj. -53.6124 iterations 1
Cbc0038I Pass  25: suminf.    0.57258 (2) obj. -53.6124 iterations 1
Cbc0038I Pass  26: suminf.    0.17647 (1) obj. -54.0254 iterations 2
Cbc0038I Pass  27: suminf.    0.49164 (1) obj. -53.6124 iterations 2
Cbc0038I Pass  28: suminf.    0.47368 (1) obj. -54.0332 iterations 1
Cbc0038I Pass  29: suminf.    1.11054 (3) obj. -53.6124 iterations 2
Cbc0038I Pass  30: suminf.    1.10304 (3) obj. -53.6124 iterations 1
Cbc0038I Pass  31: suminf.    1.10304 (3) obj. -53.6124 iterations 0
Cbc0038I Pass  32: suminf.    0.17647 (1) obj. -54.0254 iterations 3
Cbc0038I Pass  33: suminf.    0.17647 (1) obj. -54.0254 iterations 0
Cbc0038I Pass  34: suminf.    0.49164 (1) obj. -53.6124 iterations 2
Cbc0038I Pass  35: suminf.    0.47368 (1) obj. -54.0332 iterations 1
Cbc0038I Pass  36: suminf.    0.75584 (4) obj. -53.6124 iterations 7
Cbc0038I Pass  37: suminf.    0.75584 (4) obj. -53.6124 iterations 1
Cbc0038I Pass  38: suminf.    0.28751 (2) obj. -53.6124 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -49.8999 - took 0.01 seconds
Cbc0012I Integer solution of -49.8999 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 22 columns, reduced to 6 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 5.2
Cbc0013I At root node, 5 cuts changed objective from -68.461767 to -52.791184 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 3.8 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -49.8999, took 9 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

