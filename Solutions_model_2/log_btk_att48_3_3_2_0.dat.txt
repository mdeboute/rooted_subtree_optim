Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 47 (-3) columns and 264 (-21) elements
Clp1000I sum of infeasibilities 8.03643e-05 - average 9.02969e-07, 9 fixed columns
Coin0506I Presolve 71 (-18) rows, 38 (-9) columns and 210 (-54) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 2203.8503
Clp0000I Optimal - objective value 2203.8503
Coin0511I After Postsolve, objective 2203.8503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2203.8503
Clp0000I Optimal - objective value 2203.8503
Clp0000I Optimal - objective value 2203.8503
Coin0511I After Postsolve, objective 2203.8503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2203.850314 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 47 columns (46 integer (46 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.948%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 9.61141
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 194.63 iterations 26
Cbc0038I Solution found of 194.63
Cbc0038I Relaxing continuous gives 194.63
Cbc0038I Rounding solution of -256.962 is better than previous of 194.63

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 47 columns, reduced to 61 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -256.962 to -303.05 (0.03 seconds)
Cbc0038I Round again with cutoff of -493.13
Cbc0038I Pass   2: suminf.    1.05380 (5) obj. -493.13 iterations 4
Cbc0038I Pass   3: suminf.    1.44116 (4) obj. -493.13 iterations 6
Cbc0038I Pass   4: suminf.    1.38074 (5) obj. -493.13 iterations 3
Cbc0038I Pass   5: suminf.    1.93872 (7) obj. -493.13 iterations 8
Cbc0038I Pass   6: suminf.    1.88904 (8) obj. -493.13 iterations 2
Cbc0038I Pass   7: suminf.    2.06381 (8) obj. -493.13 iterations 12
Cbc0038I Pass   8: suminf.    2.06381 (8) obj. -493.13 iterations 0
Cbc0038I Pass   9: suminf.    2.50421 (7) obj. -493.13 iterations 6
Cbc0038I Pass  10: suminf.    2.32300 (8) obj. -493.13 iterations 3
Cbc0038I Pass  11: suminf.    2.32300 (8) obj. -493.13 iterations 0
Cbc0038I Pass  12: suminf.    2.83397 (8) obj. -493.13 iterations 5
Cbc0038I Pass  13: suminf.    2.10973 (7) obj. -493.13 iterations 4
Cbc0038I Pass  14: suminf.    2.10186 (8) obj. -493.13 iterations 1
Cbc0038I Pass  15: suminf.    2.62359 (8) obj. -493.13 iterations 5
Cbc0038I Pass  16: suminf.    2.62359 (8) obj. -493.13 iterations 1
Cbc0038I Pass  17: suminf.    2.78387 (7) obj. -493.13 iterations 5
Cbc0038I Pass  18: suminf.    2.71418 (8) obj. -493.13 iterations 4
Cbc0038I Pass  19: suminf.    3.17406 (9) obj. -493.13 iterations 4
Cbc0038I Pass  20: suminf.    2.68374 (9) obj. -493.13 iterations 2
Cbc0038I Pass  21: suminf.    2.68374 (9) obj. -493.13 iterations 0
Cbc0038I Pass  22: suminf.    2.67555 (7) obj. -493.13 iterations 7
Cbc0038I Pass  23: suminf.    1.26240 (6) obj. -493.13 iterations 1
Cbc0038I Pass  24: suminf.    1.25654 (5) obj. -493.13 iterations 1
Cbc0038I Pass  25: suminf.    2.46448 (8) obj. -493.13 iterations 5
Cbc0038I Pass  26: suminf.    2.44208 (9) obj. -493.13 iterations 10
Cbc0038I Pass  27: suminf.    1.81396 (6) obj. -493.13 iterations 5
Cbc0038I Pass  28: suminf.    1.91566 (5) obj. -493.13 iterations 5
Cbc0038I Pass  29: suminf.    1.89415 (6) obj. -493.13 iterations 1
Cbc0038I Pass  30: suminf.    2.35714 (7) obj. -493.13 iterations 4
Cbc0038I Pass  31: suminf.    2.35541 (14) obj. -493.13 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 47 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -303.05 - took 0.04 seconds
Cbc0012I Integer solution of -303.05 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 89 rows 47 columns, reduced to 61 rows 33 columns
Cbc0031I 25 added rows had average density of 27.08
Cbc0013I At root node, 25 cuts changed objective from -2203.8503 to -1287.5292 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5302 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1251 row cuts average 45.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 132 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0004I Integer solution of -368.8611 found after 5671 iterations and 8 nodes (0.52 seconds)
Cbc0001I Search completed - best objective -368.8611000000001, took 6591 iterations and 24 nodes (0.55 seconds)
Cbc0032I Strong branching done 396 times (7613 iterations), fathomed 0 nodes and fixed 18 variables
Cbc0035I Maximum depth 8, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-9) rows, 92 (-4) columns and 1317 (-96) elements
Clp1000I sum of infeasibilities 6.45341e-08 - average 7.25102e-10, 86 fixed columns
Coin0506I Presolve 6 (-83) rows, 6 (-86) columns and 19 (-1298) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value -1118.1778
Clp0000I Optimal - objective value -1118.1778
Coin0511I After Postsolve, objective -1118.1778, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5228429 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2856.4461
Clp0000I Optimal - objective value 2856.4461
Clp0000I Optimal - objective value 2856.4461
Coin0511I After Postsolve, objective 2856.4461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2856.446146 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 93 columns (93 integer (93 of which binary)) and 1322 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.11
Cbc0038I Pass   1: suminf.    1.61037 (17) obj. -1100.01 iterations 23
Cbc0038I Pass   2: suminf.    1.61037 (17) obj. -1100.01 iterations 15
Cbc0038I Pass   3: suminf.    0.21718 (6) obj. 46.434 iterations 11
Cbc0038I Solution found of 194.63
Cbc0038I Rounding solution of -185.703 is better than previous of 194.63

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 93 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -185.703 to -213.502 (0.03 seconds)
Cbc0038I Round again with cutoff of -439.149
Cbc0038I Pass   4: suminf.    1.61037 (17) obj. -1100.01 iterations 0
Cbc0038I Pass   5: suminf.    1.61037 (17) obj. -1100.01 iterations 6
Cbc0038I Pass   6: suminf.    0.69367 (7) obj. -439.149 iterations 13
Cbc0038I Pass   7: suminf.    0.66620 (7) obj. -439.149 iterations 1
Cbc0038I Pass   8: suminf.    0.85901 (3) obj. -439.149 iterations 16
Cbc0038I Pass   9: suminf.    0.85901 (3) obj. -439.149 iterations 1
Cbc0038I Pass  10: suminf.    0.84662 (3) obj. -439.149 iterations 2
Cbc0038I Pass  11: suminf.    0.84662 (3) obj. -439.149 iterations 0
Cbc0038I Pass  12: suminf.    0.85901 (3) obj. -439.149 iterations 1
Cbc0038I Pass  13: suminf.    2.14604 (22) obj. -439.149 iterations 30
Cbc0038I Pass  14: suminf.    2.14604 (22) obj. -439.149 iterations 6
Cbc0038I Pass  15: suminf.    1.80222 (15) obj. -439.149 iterations 9
Cbc0038I Pass  16: suminf.    1.36399 (13) obj. -513.848 iterations 2
Cbc0038I Pass  17: suminf.    1.08804 (7) obj. -439.149 iterations 17
Cbc0038I Pass  18: suminf.    0.73982 (5) obj. -460.342 iterations 3
Cbc0038I Pass  19: suminf.    1.04134 (5) obj. -439.149 iterations 6
Cbc0038I Pass  20: suminf.    0.54891 (3) obj. -454.451 iterations 4
Cbc0038I Pass  21: suminf.    0.97271 (4) obj. -439.149 iterations 4
Cbc0038I Pass  22: suminf.    2.47108 (14) obj. -439.149 iterations 30
Cbc0038I Pass  23: suminf.    2.42399 (14) obj. -457.704 iterations 4
Cbc0038I Pass  24: suminf.    0.78214 (3) obj. -439.149 iterations 22
Cbc0038I Pass  25: suminf.    0.62068 (3) obj. -491.784 iterations 4
Cbc0038I Pass  26: suminf.    0.78214 (3) obj. -439.149 iterations 4
Cbc0038I Pass  27: suminf.    2.52172 (11) obj. -439.149 iterations 27
Cbc0038I Pass  28: suminf.    1.20369 (7) obj. -439.149 iterations 8
Cbc0038I Pass  29: suminf.    1.20369 (7) obj. -439.149 iterations 1
Cbc0038I Pass  30: suminf.    0.87823 (4) obj. -439.149 iterations 7
Cbc0038I Pass  31: suminf.    0.87823 (4) obj. -439.149 iterations 0
Cbc0038I Pass  32: suminf.    0.74475 (4) obj. -439.149 iterations 8
Cbc0038I Pass  33: suminf.    0.74475 (4) obj. -439.149 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 93 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -213.502 to -368.861 (0.04 seconds)
Cbc0038I Round again with cutoff of -845.314
Cbc0038I Pass  33: suminf.    1.61037 (17) obj. -1100.01 iterations 0
Cbc0038I Pass  34: suminf.    1.61037 (17) obj. -1100.01 iterations 6
Cbc0038I Pass  35: suminf.    1.55610 (22) obj. -845.314 iterations 24
Cbc0038I Pass  36: suminf.    1.55610 (22) obj. -845.314 iterations 0
Cbc0038I Pass  37: suminf.    1.00505 (9) obj. -845.314 iterations 32
Cbc0038I Pass  38: suminf.    1.00505 (9) obj. -845.314 iterations 0
Cbc0038I Pass  39: suminf.    0.88647 (5) obj. -845.314 iterations 9
Cbc0038I Pass  40: suminf.    0.71287 (5) obj. -845.314 iterations 4
Cbc0038I Pass  41: suminf.    1.55395 (11) obj. -845.314 iterations 19
Cbc0038I Pass  42: suminf.    1.55395 (11) obj. -845.314 iterations 1
Cbc0038I Pass  43: suminf.    1.05512 (7) obj. -845.314 iterations 12
Cbc0038I Pass  44: suminf.    0.78527 (5) obj. -973.396 iterations 3
Cbc0038I Pass  45: suminf.    0.99174 (4) obj. -845.314 iterations 5
Cbc0038I Pass  46: suminf.    0.69436 (4) obj. -914.306 iterations 3
Cbc0038I Pass  47: suminf.    3.06210 (15) obj. -845.314 iterations 24
Cbc0038I Pass  48: suminf.    2.00730 (12) obj. -845.314 iterations 7
Cbc0038I Pass  49: suminf.    1.68320 (10) obj. -920.224 iterations 2
Cbc0038I Pass  50: suminf.    0.93971 (5) obj. -845.314 iterations 13
Cbc0038I Pass  51: suminf.    0.93971 (5) obj. -845.314 iterations 0
Cbc0038I Pass  52: suminf.    1.14148 (5) obj. -845.314 iterations 1
Cbc0038I Pass  53: suminf.    1.14148 (5) obj. -845.314 iterations 0
Cbc0038I Pass  54: suminf.    0.93971 (5) obj. -845.314 iterations 1
Cbc0038I Pass  55: suminf.    3.49624 (19) obj. -845.314 iterations 15
Cbc0038I Pass  56: suminf.    1.95612 (11) obj. -845.314 iterations 8
Cbc0038I Pass  57: suminf.    0.93971 (5) obj. -845.314 iterations 8
Cbc0038I Pass  58: suminf.    0.93971 (5) obj. -845.314 iterations 0
Cbc0038I Pass  59: suminf.    1.14148 (5) obj. -845.314 iterations 1
Cbc0038I Pass  60: suminf.    1.14148 (5) obj. -845.314 iterations 0
Cbc0038I Pass  61: suminf.    0.93971 (5) obj. -845.314 iterations 1
Cbc0038I Pass  62: suminf.    4.85538 (21) obj. -845.314 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 93 columns, reduced to 39 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -368.861 - took 0.03 seconds
Cbc0012I Integer solution of -368.8611 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 31 added rows had average density of 9.2580645
Cbc0013I At root node, 33 cuts changed objective from -2469.9737 to -368.8611 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 848 row cuts average 3.6 elements, 31 column cuts (31 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -368.8611000000001, took 246 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 47 (-3) columns and 264 (-21) elements
Clp1000I sum of infeasibilities 8.03643e-05 - average 9.02969e-07, 9 fixed columns
Coin0506I Presolve 71 (-18) rows, 38 (-9) columns and 210 (-54) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 2203.8503
Clp0000I Optimal - objective value 2203.8503
Coin0511I After Postsolve, objective 2203.8503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2203.8503
Clp0000I Optimal - objective value 2203.8503
Clp0000I Optimal - objective value 2203.8503
Coin0511I After Postsolve, objective 2203.8503, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2203.850314 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 47 columns (46 integer (46 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.948%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 9.61141
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 194.63 iterations 26
Cbc0038I Solution found of 194.63
Cbc0038I Relaxing continuous gives 194.63
Cbc0038I Rounding solution of -256.962 is better than previous of 194.63

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 47 columns, reduced to 61 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -256.962 to -303.05 (0.03 seconds)
Cbc0038I Round again with cutoff of -493.13
Cbc0038I Pass   2: suminf.    1.05380 (5) obj. -493.13 iterations 4
Cbc0038I Pass   3: suminf.    1.44116 (4) obj. -493.13 iterations 6
Cbc0038I Pass   4: suminf.    1.38074 (5) obj. -493.13 iterations 3
Cbc0038I Pass   5: suminf.    1.93872 (7) obj. -493.13 iterations 8
Cbc0038I Pass   6: suminf.    1.88904 (8) obj. -493.13 iterations 2
Cbc0038I Pass   7: suminf.    2.06381 (8) obj. -493.13 iterations 12
Cbc0038I Pass   8: suminf.    2.06381 (8) obj. -493.13 iterations 0
Cbc0038I Pass   9: suminf.    2.50421 (7) obj. -493.13 iterations 6
Cbc0038I Pass  10: suminf.    2.32300 (8) obj. -493.13 iterations 3
Cbc0038I Pass  11: suminf.    2.32300 (8) obj. -493.13 iterations 0
Cbc0038I Pass  12: suminf.    2.83397 (8) obj. -493.13 iterations 5
Cbc0038I Pass  13: suminf.    2.10973 (7) obj. -493.13 iterations 4
Cbc0038I Pass  14: suminf.    2.10186 (8) obj. -493.13 iterations 1
Cbc0038I Pass  15: suminf.    2.62359 (8) obj. -493.13 iterations 5
Cbc0038I Pass  16: suminf.    2.62359 (8) obj. -493.13 iterations 1
Cbc0038I Pass  17: suminf.    2.78387 (7) obj. -493.13 iterations 5
Cbc0038I Pass  18: suminf.    2.71418 (8) obj. -493.13 iterations 4
Cbc0038I Pass  19: suminf.    3.17406 (9) obj. -493.13 iterations 4
Cbc0038I Pass  20: suminf.    2.68374 (9) obj. -493.13 iterations 2
Cbc0038I Pass  21: suminf.    2.68374 (9) obj. -493.13 iterations 0
Cbc0038I Pass  22: suminf.    2.67555 (7) obj. -493.13 iterations 7
Cbc0038I Pass  23: suminf.    1.26240 (6) obj. -493.13 iterations 1
Cbc0038I Pass  24: suminf.    1.25654 (5) obj. -493.13 iterations 1
Cbc0038I Pass  25: suminf.    2.46448 (8) obj. -493.13 iterations 5
Cbc0038I Pass  26: suminf.    2.44208 (9) obj. -493.13 iterations 10
Cbc0038I Pass  27: suminf.    1.81396 (6) obj. -493.13 iterations 5
Cbc0038I Pass  28: suminf.    1.91566 (5) obj. -493.13 iterations 5
Cbc0038I Pass  29: suminf.    1.89415 (6) obj. -493.13 iterations 1
Cbc0038I Pass  30: suminf.    2.35714 (7) obj. -493.13 iterations 4
Cbc0038I Pass  31: suminf.    2.35541 (14) obj. -493.13 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 47 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -303.05 - took 0.05 seconds
Cbc0012I Integer solution of -303.05 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 47 columns, reduced to 61 rows 33 columns
Cbc0031I 25 added rows had average density of 27.08
Cbc0013I At root node, 25 cuts changed objective from -2203.8503 to -1287.5292 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5302 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1251 row cuts average 45.9 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 132 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0004I Integer solution of -368.8611 found after 5671 iterations and 8 nodes (0.55 seconds)
Cbc0001I Search completed - best objective -368.8611000000001, took 6591 iterations and 24 nodes (0.58 seconds)
Cbc0032I Strong branching done 396 times (7613 iterations), fathomed 0 nodes and fixed 18 variables
Cbc0035I Maximum depth 8, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.57   (Wallclock seconds):       0.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 92 (-5) columns and 1317 (-97) elements
Clp1000I sum of infeasibilities 6.45341e-08 - average 7.25102e-10, 86 fixed columns
Coin0506I Presolve 6 (-83) rows, 6 (-86) columns and 19 (-1298) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value -1118.1778
Clp0000I Optimal - objective value -1118.1778
Coin0511I After Postsolve, objective -1118.1778, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5228429 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2856.4461
Clp0000I Optimal - objective value 2856.4461
Clp0000I Optimal - objective value 2856.4461
Coin0511I After Postsolve, objective 2856.4461, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2856.446146 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 93 columns (93 integer (93 of which binary)) and 1322 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.11
Cbc0038I Pass   1: suminf.    1.61037 (17) obj. -1100.01 iterations 23
Cbc0038I Pass   2: suminf.    1.61037 (17) obj. -1100.01 iterations 15
Cbc0038I Pass   3: suminf.    0.21718 (6) obj. 46.434 iterations 11
Cbc0038I Solution found of 194.63
Cbc0038I Rounding solution of -185.703 is better than previous of 194.63

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 93 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -185.703 to -213.502 (0.02 seconds)
Cbc0038I Round again with cutoff of -439.149
Cbc0038I Pass   4: suminf.    1.61037 (17) obj. -1100.01 iterations 0
Cbc0038I Pass   5: suminf.    1.61037 (17) obj. -1100.01 iterations 6
Cbc0038I Pass   6: suminf.    0.69367 (7) obj. -439.149 iterations 13
Cbc0038I Pass   7: suminf.    0.66620 (7) obj. -439.149 iterations 1
Cbc0038I Pass   8: suminf.    0.85901 (3) obj. -439.149 iterations 16
Cbc0038I Pass   9: suminf.    0.85901 (3) obj. -439.149 iterations 1
Cbc0038I Pass  10: suminf.    0.84662 (3) obj. -439.149 iterations 2
Cbc0038I Pass  11: suminf.    0.84662 (3) obj. -439.149 iterations 0
Cbc0038I Pass  12: suminf.    0.85901 (3) obj. -439.149 iterations 1
Cbc0038I Pass  13: suminf.    2.14604 (22) obj. -439.149 iterations 30
Cbc0038I Pass  14: suminf.    2.14604 (22) obj. -439.149 iterations 6
Cbc0038I Pass  15: suminf.    1.80222 (15) obj. -439.149 iterations 9
Cbc0038I Pass  16: suminf.    1.36399 (13) obj. -513.848 iterations 2
Cbc0038I Pass  17: suminf.    1.08804 (7) obj. -439.149 iterations 17
Cbc0038I Pass  18: suminf.    0.73982 (5) obj. -460.342 iterations 3
Cbc0038I Pass  19: suminf.    1.04134 (5) obj. -439.149 iterations 6
Cbc0038I Pass  20: suminf.    0.54891 (3) obj. -454.451 iterations 4
Cbc0038I Pass  21: suminf.    0.97271 (4) obj. -439.149 iterations 4
Cbc0038I Pass  22: suminf.    2.47108 (14) obj. -439.149 iterations 30
Cbc0038I Pass  23: suminf.    2.42399 (14) obj. -457.704 iterations 4
Cbc0038I Pass  24: suminf.    0.78214 (3) obj. -439.149 iterations 22
Cbc0038I Pass  25: suminf.    0.62068 (3) obj. -491.784 iterations 4
Cbc0038I Pass  26: suminf.    0.78214 (3) obj. -439.149 iterations 4
Cbc0038I Pass  27: suminf.    2.52172 (11) obj. -439.149 iterations 27
Cbc0038I Pass  28: suminf.    1.20369 (7) obj. -439.149 iterations 8
Cbc0038I Pass  29: suminf.    1.20369 (7) obj. -439.149 iterations 1
Cbc0038I Pass  30: suminf.    0.87823 (4) obj. -439.149 iterations 7
Cbc0038I Pass  31: suminf.    0.87823 (4) obj. -439.149 iterations 0
Cbc0038I Pass  32: suminf.    0.74475 (4) obj. -439.149 iterations 8
Cbc0038I Pass  33: suminf.    0.74475 (4) obj. -439.149 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 93 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -213.502 to -368.861 (0.04 seconds)
Cbc0038I Round again with cutoff of -845.314
Cbc0038I Pass  33: suminf.    1.61037 (17) obj. -1100.01 iterations 0
Cbc0038I Pass  34: suminf.    1.61037 (17) obj. -1100.01 iterations 6
Cbc0038I Pass  35: suminf.    1.55610 (22) obj. -845.314 iterations 24
Cbc0038I Pass  36: suminf.    1.55610 (22) obj. -845.314 iterations 0
Cbc0038I Pass  37: suminf.    1.00505 (9) obj. -845.314 iterations 32
Cbc0038I Pass  38: suminf.    1.00505 (9) obj. -845.314 iterations 0
Cbc0038I Pass  39: suminf.    0.88647 (5) obj. -845.314 iterations 9
Cbc0038I Pass  40: suminf.    0.71287 (5) obj. -845.314 iterations 4
Cbc0038I Pass  41: suminf.    1.55395 (11) obj. -845.314 iterations 19
Cbc0038I Pass  42: suminf.    1.55395 (11) obj. -845.314 iterations 1
Cbc0038I Pass  43: suminf.    1.05512 (7) obj. -845.314 iterations 12
Cbc0038I Pass  44: suminf.    0.78527 (5) obj. -973.396 iterations 3
Cbc0038I Pass  45: suminf.    0.99174 (4) obj. -845.314 iterations 5
Cbc0038I Pass  46: suminf.    0.69436 (4) obj. -914.306 iterations 3
Cbc0038I Pass  47: suminf.    3.06210 (15) obj. -845.314 iterations 24
Cbc0038I Pass  48: suminf.    2.00730 (12) obj. -845.314 iterations 7
Cbc0038I Pass  49: suminf.    1.68320 (10) obj. -920.224 iterations 2
Cbc0038I Pass  50: suminf.    0.93971 (5) obj. -845.314 iterations 13
Cbc0038I Pass  51: suminf.    0.93971 (5) obj. -845.314 iterations 0
Cbc0038I Pass  52: suminf.    1.14148 (5) obj. -845.314 iterations 1
Cbc0038I Pass  53: suminf.    1.14148 (5) obj. -845.314 iterations 0
Cbc0038I Pass  54: suminf.    0.93971 (5) obj. -845.314 iterations 1
Cbc0038I Pass  55: suminf.    3.49624 (19) obj. -845.314 iterations 15
Cbc0038I Pass  56: suminf.    1.95612 (11) obj. -845.314 iterations 8
Cbc0038I Pass  57: suminf.    0.93971 (5) obj. -845.314 iterations 8
Cbc0038I Pass  58: suminf.    0.93971 (5) obj. -845.314 iterations 0
Cbc0038I Pass  59: suminf.    1.14148 (5) obj. -845.314 iterations 1
Cbc0038I Pass  60: suminf.    1.14148 (5) obj. -845.314 iterations 0
Cbc0038I Pass  61: suminf.    0.93971 (5) obj. -845.314 iterations 1
Cbc0038I Pass  62: suminf.    4.85538 (21) obj. -845.314 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 93 columns, reduced to 39 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -368.861 - took 0.03 seconds
Cbc0012I Integer solution of -368.8611 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 31 added rows had average density of 9.2580645
Cbc0013I At root node, 33 cuts changed objective from -2469.9737 to -368.8611 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 848 row cuts average 3.6 elements, 31 column cuts (31 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0001I Search completed - best objective -368.8611000000001, took 246 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.15

