Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 22 (-3) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 3.19528e-06 - average 9.39787e-08, 16 fixed columns
Coin0506I Presolve 1 (-33) rows, 2 (-20) columns and 2 (-102) elements
Clp0029I End of values pass after 1 iterations
Clp0000I Optimal - objective value 11925.344
Clp0000I Optimal - objective value 11925.344
Coin0511I After Postsolve, objective 11925.344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 11925.344
Clp0000I Optimal - objective value 11925.344
Clp0000I Optimal - objective value 11925.344
Coin0511I After Postsolve, objective 11925.344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11925.34401 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.275915
Cbc0038I Pass   1: suminf.    0.27591 (1) obj. -11217.3 iterations 2
Cbc0038I Solution found of -6102.14
Cbc0038I Relaxing continuous gives -6102.14
Cbc0038I Rounding solution of -7005.82 is better than previous of -6102.14

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -7426.97
Cbc0038I Pass   2: suminf.    0.27591 (1) obj. -11217.3 iterations 0
Cbc0038I Pass   3: suminf.    0.18754 (1) obj. -7426.97 iterations 1
Cbc0038I Pass   4: suminf.    0.45175 (3) obj. -7426.97 iterations 5
Cbc0038I Pass   5: suminf.    0.14154 (1) obj. -7426.97 iterations 2
Cbc0038I Pass   6: suminf.    0.29573 (1) obj. -8516.24 iterations 1
Cbc0038I Pass   7: suminf.    0.25171 (2) obj. -7426.97 iterations 3
Cbc0038I Pass   8: suminf.    0.12181 (1) obj. -7426.97 iterations 2
Cbc0038I Pass   9: suminf.    0.14329 (1) obj. -7578.77 iterations 1
Cbc0038I Pass  10: suminf.    0.43955 (3) obj. -7426.97 iterations 3
Cbc0038I Pass  11: suminf.    0.12934 (1) obj. -7426.97 iterations 2
Cbc0038I Pass  12: suminf.    0.14329 (1) obj. -7525.57 iterations 1
Cbc0038I Pass  13: suminf.    0.20897 (2) obj. -7426.97 iterations 4
Cbc0038I Pass  14: suminf.    0.20897 (2) obj. -7426.97 iterations 1
Cbc0038I Pass  15: suminf.    0.29573 (1) obj. -8477.91 iterations 1
Cbc0038I Pass  16: suminf.    0.14696 (1) obj. -7426.97 iterations 1
Cbc0038I Pass  17: suminf.    0.17430 (3) obj. -7426.97 iterations 11
Cbc0038I Pass  18: suminf.    0.17430 (3) obj. -7426.97 iterations 2
Cbc0038I Pass  19: suminf.    0.40396 (1) obj. -9281.61 iterations 2
Cbc0038I Pass  20: suminf.    0.14143 (1) obj. -7426.97 iterations 1
Cbc0038I Pass  21: suminf.    0.08185 (1) obj. -7426.97 iterations 2
Cbc0038I Pass  22: suminf.    0.12957 (1) obj. -7764.09 iterations 1
Cbc0038I Pass  23: suminf.    0.08185 (1) obj. -7426.97 iterations 1
Cbc0038I Pass  24: suminf.    0.15589 (1) obj. -7426.97 iterations 4
Cbc0038I Pass  25: suminf.    0.35061 (1) obj. -8802.51 iterations 1
Cbc0038I Pass  26: suminf.    0.15589 (1) obj. -7426.97 iterations 1
Cbc0038I Pass  27: suminf.    0.50562 (3) obj. -7426.97 iterations 7
Cbc0038I Pass  28: suminf.    0.08564 (1) obj. -7426.97 iterations 3
Cbc0038I Pass  29: suminf.    0.14360 (1) obj. -7836.42 iterations 1
Cbc0038I Pass  30: suminf.    0.55514 (2) obj. -7426.97 iterations 6
Cbc0038I Pass  31: suminf.    0.11494 (1) obj. -7426.97 iterations 1
Cbc0038I Rounding solution of -7097.18 is better than previous of -7005.82

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -7097.18 to -7120.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -8185.04
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27591 (1) obj. -11217.3 iterations 0
Cbc0038I Pass  32: suminf.    0.29485 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  33: suminf.    0.22174 (1) obj. -8185.04 iterations 6
Cbc0038I Pass  34: suminf.    0.22174 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  35: suminf.    0.27896 (1) obj. -8589.28 iterations 1
Cbc0038I Pass  36: suminf.    0.42351 (3) obj. -8185.04 iterations 10
Cbc0038I Pass  37: suminf.    0.42351 (3) obj. -8185.04 iterations 1
Cbc0038I Pass  38: suminf.    0.37735 (1) obj. -9425.85 iterations 4
Cbc0038I Pass  39: suminf.    0.20171 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  40: suminf.    0.92105 (3) obj. -8185.04 iterations 11
Cbc0038I Pass  41: suminf.    0.51888 (2) obj. -8185.04 iterations 5
Cbc0038I Pass  42: suminf.    0.28699 (1) obj. -8837.33 iterations 2
Cbc0038I Pass  43: suminf.    0.19465 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  44: suminf.    0.28914 (2) obj. -8185.04 iterations 6
Cbc0038I Pass  45: suminf.    0.28914 (2) obj. -8185.04 iterations 0
Cbc0038I Pass  46: suminf.    0.32916 (1) obj. -9015.98 iterations 3
Cbc0038I Pass  47: suminf.    0.21153 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  48: suminf.    0.34690 (2) obj. -8185.04 iterations 7
Cbc0038I Pass  49: suminf.    0.34690 (2) obj. -8185.04 iterations 4
Cbc0038I Pass  50: suminf.    0.29301 (1) obj. -8813.84 iterations 2
Cbc0038I Pass  51: suminf.    0.20400 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  52: suminf.    0.19062 (1) obj. -8185.04 iterations 3
Cbc0038I Pass  53: suminf.    0.19062 (1) obj. -8185.04 iterations 2
Cbc0038I Pass  54: suminf.    0.27494 (1) obj. -8780.74 iterations 1
Cbc0038I Pass  55: suminf.    0.21799 (1) obj. -8408.57 iterations 4
Cbc0038I Pass  56: suminf.    0.18635 (1) obj. -8185.04 iterations 2
Cbc0038I Pass  57: suminf.    0.21799 (1) obj. -8408.57 iterations 1
Cbc0038I Pass  58: suminf.    0.23323 (1) obj. -8401.64 iterations 3
Cbc0038I Pass  59: suminf.    0.20257 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  60: suminf.    0.23323 (1) obj. -8401.64 iterations 1
Cbc0038I Rounding solution of -7153.67 is better than previous of -7120.5

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 7 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -7153.67 to -7218.49 (0.02 seconds)
Cbc0038I Round again with cutoff of -9094.72
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.27591 (1) obj. -11217.3 iterations 0
Cbc0038I Pass  61: suminf.    0.42362 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  62: suminf.    0.39220 (1) obj. -9094.72 iterations 3
Cbc0038I Pass  63: suminf.    0.39220 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  64: suminf.    0.39976 (1) obj. -10564.4 iterations 1
Cbc0038I Pass  65: suminf.    0.58698 (2) obj. -9094.72 iterations 6
Cbc0038I Pass  66: suminf.    0.58698 (2) obj. -9094.72 iterations 0
Cbc0038I Pass  67: suminf.    0.40854 (1) obj. -9455.16 iterations 2
Cbc0038I Pass  68: suminf.    0.35751 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  69: suminf.    0.47106 (2) obj. -9094.72 iterations 5
Cbc0038I Pass  70: suminf.    0.47866 (1) obj. -9964.54 iterations 2
Cbc0038I Pass  71: suminf.    0.35553 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  72: suminf.    0.32713 (1) obj. -9094.72 iterations 4
Cbc0038I Pass  73: suminf.    0.32916 (1) obj. -9109.04 iterations 1
Cbc0038I Pass  74: suminf.    0.32713 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  75: suminf.    0.65089 (3) obj. -9094.72 iterations 5
Cbc0038I Pass  76: suminf.    0.65089 (3) obj. -9094.72 iterations 1
Cbc0038I Pass  77: suminf.    0.46189 (1) obj. -10278 iterations 2
Cbc0038I Pass  78: suminf.    0.37061 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  79: suminf.    0.54367 (2) obj. -9094.72 iterations 3
Cbc0038I Pass  80: suminf.    0.54367 (2) obj. -9094.72 iterations 1
Cbc0038I Pass  81: suminf.    0.49848 (1) obj. -10021 iterations 1
Cbc0038I Pass  82: suminf.    0.37040 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  83: suminf.    0.54367 (2) obj. -9094.72 iterations 1
Cbc0038I Pass  84: suminf.    0.40851 (2) obj. -9094.72 iterations 4
Cbc0038I Pass  85: suminf.    0.34644 (1) obj. -9094.72 iterations 2
Cbc0038I Pass  86: suminf.    0.35671 (1) obj. -9167.24 iterations 1
Cbc0038I Pass  87: suminf.    0.63283 (2) obj. -9094.72 iterations 4
Cbc0038I Pass  88: suminf.    0.35378 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  89: suminf.    0.41952 (1) obj. -9559.09 iterations 1
Cbc0038I Rounding solution of -7240.15 is better than previous of -7218.49

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 6 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -7240.15 to -7242.13 (0.03 seconds)
Cbc0038I Round again with cutoff of -9731.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 5
Cbc0038I Pass  89: suminf.    0.27591 (1) obj. -11217.3 iterations 0
Cbc0038I Pass  90: suminf.    0.48624 (1) obj. -9731.5 iterations 1
Cbc0038I Pass  91: suminf.    1.23019 (3) obj. -9731.5 iterations 5
Cbc0038I Pass  92: suminf.    1.23019 (3) obj. -9731.5 iterations 1
Cbc0038I Pass  93: suminf.    0.34756 (1) obj. -10914.5 iterations 2
Cbc0038I Pass  94: suminf.    0.48497 (1) obj. -9731.5 iterations 1
Cbc0038I Pass  95: suminf.    0.65417 (2) obj. -9731.5 iterations 4
Cbc0038I Pass  96: suminf.    0.40976 (1) obj. -10536 iterations 2
Cbc0038I Pass  97: suminf.    0.47637 (1) obj. -9731.5 iterations 1
Cbc0038I Pass  98: suminf.    0.48793 (1) obj. -9731.5 iterations 2
Cbc0038I Pass  99: suminf.    0.35640 (1) obj. -10660.7 iterations 1
Cbc0038I Pass 100: suminf.    0.48793 (1) obj. -9731.5 iterations 1
Cbc0038I Pass 101: suminf.    0.70308 (2) obj. -9731.5 iterations 4
Cbc0038I Pass 102: suminf.    0.47656 (1) obj. -9731.5 iterations 3
Cbc0038I Pass 103: suminf.    0.48598 (1) obj. -9996.19 iterations 1
Cbc0038I Pass 104: suminf.    0.69506 (4) obj. -9731.5 iterations 9
Cbc0038I Pass 105: suminf.    0.58977 (2) obj. -9731.5 iterations 3
Cbc0038I Pass 106: suminf.    0.45244 (1) obj. -10139.1 iterations 2
Cbc0038I Pass 107: suminf.    0.48986 (1) obj. -9731.5 iterations 1
Cbc0038I Pass 108: suminf.    0.78028 (2) obj. -9731.5 iterations 3
Cbc0038I Pass 109: suminf.    0.47073 (1) obj. -10050.3 iterations 2
Cbc0038I Pass 110: suminf.    0.48415 (1) obj. -9731.5 iterations 1
Cbc0038I Pass 111: suminf.    0.59529 (2) obj. -9731.5 iterations 6
Cbc0038I Pass 112: suminf.    0.59529 (2) obj. -9731.5 iterations 1
Cbc0038I Pass 113: suminf.    0.37043 (1) obj. -10624.4 iterations 2
Cbc0038I Pass 114: suminf.    0.49682 (1) obj. -9731.5 iterations 1
Cbc0038I Pass 115: suminf.    0.46355 (2) obj. -9731.5 iterations 3
Cbc0038I Pass 116: suminf.    0.46355 (2) obj. -9731.5 iterations 1
Cbc0038I Pass 117: suminf.    0.37043 (1) obj. -10677.6 iterations 2
Cbc0038I Pass 118: suminf.    0.49565 (1) obj. -9731.5 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -7242.13 - took 0.03 seconds
Cbc0012I Integer solution of -7242.1277 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -7245.6578 found by DiveCoefficient after 1035 iterations and 0 nodes (1.51 seconds)
Cbc0031I 8 added rows had average density of 15.75
Cbc0013I At root node, 8 cuts changed objective from -11217.319 to -7303.7889 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 61 row cuts average 4.1 elements, 2 column cuts (2 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 294 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 74 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 332 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 230 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.802 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7245.6578 best solution, best possible -7303.7889 (1.51 seconds)
Cbc0012I Integer solution of -7265.559 found by DiveCoefficient after 1042 iterations and 1 nodes (1.51 seconds)
Cbc0012I Integer solution of -7301.7457 found by DiveCoefficient after 1067 iterations and 1 nodes (1.52 seconds)
Cbc0001I Search completed - best objective -7301.745700000001, took 1131 iterations and 6 nodes (1.52 seconds)
Cbc0032I Strong branching done 42 times (256 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 44 (-2) columns and 341 (-47) elements
Clp1000I sum of infeasibilities 8.39536e-08 - average 2.33205e-09, 42 fixed columns
Coin0506I Presolve 0 (-36) rows, 0 (-44) columns and 0 (-341) elements
Clp0000I Optimal - objective value 11765.137
Clp0000I Optimal - objective value 11765.137
Coin0511I After Postsolve, objective 11765.137, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 11765.137 Dual inf 4520.4329 (25)
Clp0014I Perturbing problem by 0.001% of 0.90482784 - largest nonzero change 0 ( 0%) - largest zero change 2.6827504e-05
Clp0000I Optimal - objective value 12028.224
Clp0000I Optimal - objective value 12028.224
Clp0000I Optimal - objective value 12028.224
Coin0511I After Postsolve, objective 12028.224, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12028.2241 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 43 columns (43 integer (43 of which binary)) and 339 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 2.952
Cbc0038I Pass   1: suminf.    0.55117 (5) obj. -5981.3 iterations 14
Cbc0038I Pass   2: suminf.    0.55117 (5) obj. -5981.3 iterations 0
Cbc0038I Solution found of -306.035
Cbc0038I Rounding solution of -1047.05 is better than previous of -306.035

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 43 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -1047.05 to -6251.94 (0.01 seconds)
Cbc0038I Round again with cutoff of -6798.38
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.85487 (10) obj. -6798.38 iterations 1
Cbc0038I Pass   4: suminf.    0.85487 (10) obj. -6798.38 iterations 0
Cbc0038I Pass   5: suminf.    0.09835 (1) obj. -6798.38 iterations 10
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -11401.9 iterations 1
Cbc0038I Pass   7: suminf.    1.67744 (5) obj. -7923.46 iterations 12
Cbc0038I Pass   8: suminf.    1.12335 (4) obj. -6798.38 iterations 2
Cbc0038I Pass   9: suminf.    0.48667 (1) obj. -10017.7 iterations 4
Cbc0038I Pass  10: suminf.    0.05762 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  11: suminf.    2.10183 (6) obj. -6798.38 iterations 12
Cbc0038I Pass  12: suminf.    1.62731 (5) obj. -6798.38 iterations 2
Cbc0038I Pass  13: suminf.    0.26444 (1) obj. -8264.86 iterations 5
Cbc0038I Pass  14: suminf.    0.05686 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  15: suminf.    1.32718 (4) obj. -6798.38 iterations 5
Cbc0038I Pass  16: suminf.    0.88302 (3) obj. -6798.38 iterations 1
Cbc0038I Pass  17: suminf.    0.42857 (1) obj. -9468.96 iterations 3
Cbc0038I Pass  18: suminf.    0.05053 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  19: suminf.    2.84986 (8) obj. -6798.38 iterations 8
Cbc0038I Pass  20: suminf.    0.77031 (3) obj. -6798.38 iterations 5
Cbc0038I Pass  21: suminf.    0.42857 (1) obj. -9555.96 iterations 3
Cbc0038I Pass  22: suminf.    0.03822 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  23: suminf.    2.05341 (7) obj. -6798.38 iterations 11
Cbc0038I Pass  24: suminf.    0.01573 (1) obj. -6798.38 iterations 7
Cbc0038I Pass  25: suminf.    0.28571 (1) obj. -8705.65 iterations 1
Cbc0038I Pass  26: suminf.    2.04669 (7) obj. -6798.38 iterations 21
Cbc0038I Pass  27: suminf.    0.35714 (1) obj. -10601.2 iterations 9
Cbc0038I Pass  28: suminf.    0.10454 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  29: suminf.    2.12030 (6) obj. -6798.38 iterations 10
Cbc0038I Pass  30: suminf.    1.43648 (4) obj. -6798.38 iterations 2
Cbc0038I Pass  31: suminf.    0.35556 (1) obj. -9048.6 iterations 4
Cbc0038I Pass  32: suminf.    0.03702 (1) obj. -6798.38 iterations 1
Cbc0038I Rounding solution of -7168.8 is better than previous of -6251.94

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -8078.3
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.58685 (9) obj. -11458 iterations 1
Cbc0038I Pass  33: suminf.    0.27953 (1) obj. -8078.3 iterations 9
Cbc0038I Pass  34: suminf.    0.25000 (1) obj. -11401.9 iterations 1
Cbc0038I Pass  35: suminf.    1.51190 (4) obj. -10458.2 iterations 7
Cbc0038I Pass  36: suminf.    0.23835 (1) obj. -8078.3 iterations 4
Cbc0038I Pass  37: suminf.    0.42857 (1) obj. -10431.2 iterations 1
Cbc0038I Pass  38: suminf.    1.83647 (5) obj. -10040.7 iterations 8
Cbc0038I Pass  39: suminf.    1.40085 (4) obj. -8078.3 iterations 4
Cbc0038I Pass  40: suminf.    0.50000 (1) obj. -10001.7 iterations 4
Cbc0038I Pass  41: suminf.    0.22773 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  42: suminf.    0.89583 (3) obj. -8078.3 iterations 7
Cbc0038I Pass  43: suminf.    0.56582 (2) obj. -8078.3 iterations 2
Cbc0038I Pass  44: suminf.    0.47333 (1) obj. -9774.39 iterations 2
Cbc0038I Pass  45: suminf.    0.23324 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  46: suminf.    1.31795 (4) obj. -8078.3 iterations 7
Cbc0038I Pass  47: suminf.    0.94636 (3) obj. -8078.3 iterations 2
Cbc0038I Pass  48: suminf.    0.40000 (1) obj. -9280.18 iterations 3
Cbc0038I Pass  49: suminf.    0.22987 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  50: suminf.    0.92316 (4) obj. -8078.3 iterations 7
Cbc0038I Pass  51: suminf.    0.92316 (4) obj. -8078.3 iterations 1
Cbc0038I Pass  52: suminf.    0.49542 (1) obj. -9929.48 iterations 4
Cbc0038I Pass  53: suminf.    0.23338 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  54: suminf.    0.57333 (2) obj. -8078.3 iterations 6
Cbc0038I Pass  55: suminf.    0.57333 (2) obj. -8078.3 iterations 2
Cbc0038I Pass  56: suminf.    0.49181 (1) obj. -9856.54 iterations 2
Cbc0038I Pass  57: suminf.    0.24009 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  58: suminf.    1.82503 (5) obj. -8078.3 iterations 6
Cbc0038I Pass  59: suminf.    0.97598 (3) obj. -8078.3 iterations 2
Cbc0038I Pass  60: suminf.    0.48699 (1) obj. -9794.28 iterations 3
Cbc0038I Pass  61: suminf.    0.24408 (1) obj. -8078.3 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -7168.8 - took 0.02 seconds
Cbc0012I Integer solution of -7168.7965 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 43 columns, reduced to 2 rows 8 columns
Cbc0012I Integer solution of -7194.7278 found by RINS after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -7205.2937 found by DiveCoefficient after 1258 iterations and 0 nodes (1.49 seconds)
Cbc0031I 16 added rows had average density of 14.0625
Cbc0013I At root node, 16 cuts changed objective from -11716.338 to -7305.1488 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2541 row cuts average 9.6 elements, 6 column cuts (8 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 487 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 222 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 281 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.734 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7205.2937 best solution, best possible -7305.1488 (1.50 seconds)
Cbc0012I Integer solution of -7240.1522 found by rounding after 1289 iterations and 1 nodes (1.56 seconds)
Cbc0012I Integer solution of -7251.1346 found by rounding after 1294 iterations and 2 nodes (1.57 seconds)
Cbc0012I Integer solution of -7301.7457 found by DiveCoefficient after 1313 iterations and 2 nodes (1.61 seconds)
Cbc0001I Search completed - best objective -7301.745700000001, took 1363 iterations and 6 nodes (1.65 seconds)
Cbc0032I Strong branching done 76 times (798 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 1 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.66

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 22 (-3) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 3.19528e-06 - average 9.39787e-08, 16 fixed columns
Coin0506I Presolve 1 (-33) rows, 2 (-20) columns and 2 (-102) elements
Clp0029I End of values pass after 1 iterations
Clp0000I Optimal - objective value 11925.344
Clp0000I Optimal - objective value 11925.344
Coin0511I After Postsolve, objective 11925.344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 11925.344
Clp0000I Optimal - objective value 11925.344
Clp0000I Optimal - objective value 11925.344
Coin0511I After Postsolve, objective 11925.344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11925.34401 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.275915
Cbc0038I Pass   1: suminf.    0.27591 (1) obj. -11217.3 iterations 2
Cbc0038I Solution found of -6102.14
Cbc0038I Relaxing continuous gives -6102.14
Cbc0038I Rounding solution of -7005.82 is better than previous of -6102.14

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7426.97
Cbc0038I Pass   2: suminf.    0.27591 (1) obj. -11217.3 iterations 0
Cbc0038I Pass   3: suminf.    0.18754 (1) obj. -7426.97 iterations 1
Cbc0038I Pass   4: suminf.    0.45175 (3) obj. -7426.97 iterations 5
Cbc0038I Pass   5: suminf.    0.14154 (1) obj. -7426.97 iterations 2
Cbc0038I Pass   6: suminf.    0.29573 (1) obj. -8516.24 iterations 1
Cbc0038I Pass   7: suminf.    0.25171 (2) obj. -7426.97 iterations 3
Cbc0038I Pass   8: suminf.    0.12181 (1) obj. -7426.97 iterations 2
Cbc0038I Pass   9: suminf.    0.14329 (1) obj. -7578.77 iterations 1
Cbc0038I Pass  10: suminf.    0.43955 (3) obj. -7426.97 iterations 3
Cbc0038I Pass  11: suminf.    0.12934 (1) obj. -7426.97 iterations 2
Cbc0038I Pass  12: suminf.    0.14329 (1) obj. -7525.57 iterations 1
Cbc0038I Pass  13: suminf.    0.20897 (2) obj. -7426.97 iterations 4
Cbc0038I Pass  14: suminf.    0.20897 (2) obj. -7426.97 iterations 1
Cbc0038I Pass  15: suminf.    0.29573 (1) obj. -8477.91 iterations 1
Cbc0038I Pass  16: suminf.    0.14696 (1) obj. -7426.97 iterations 1
Cbc0038I Pass  17: suminf.    0.17430 (3) obj. -7426.97 iterations 11
Cbc0038I Pass  18: suminf.    0.17430 (3) obj. -7426.97 iterations 2
Cbc0038I Pass  19: suminf.    0.40396 (1) obj. -9281.61 iterations 2
Cbc0038I Pass  20: suminf.    0.14143 (1) obj. -7426.97 iterations 1
Cbc0038I Pass  21: suminf.    0.08185 (1) obj. -7426.97 iterations 2
Cbc0038I Pass  22: suminf.    0.12957 (1) obj. -7764.09 iterations 1
Cbc0038I Pass  23: suminf.    0.08185 (1) obj. -7426.97 iterations 1
Cbc0038I Pass  24: suminf.    0.15589 (1) obj. -7426.97 iterations 4
Cbc0038I Pass  25: suminf.    0.35061 (1) obj. -8802.51 iterations 1
Cbc0038I Pass  26: suminf.    0.15589 (1) obj. -7426.97 iterations 1
Cbc0038I Pass  27: suminf.    0.50562 (3) obj. -7426.97 iterations 7
Cbc0038I Pass  28: suminf.    0.08564 (1) obj. -7426.97 iterations 3
Cbc0038I Pass  29: suminf.    0.14360 (1) obj. -7836.42 iterations 1
Cbc0038I Pass  30: suminf.    0.55514 (2) obj. -7426.97 iterations 6
Cbc0038I Pass  31: suminf.    0.11494 (1) obj. -7426.97 iterations 1
Cbc0038I Rounding solution of -7097.18 is better than previous of -7005.82

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -7097.18 to -7120.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -8185.04
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27591 (1) obj. -11217.3 iterations 0
Cbc0038I Pass  32: suminf.    0.29485 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  33: suminf.    0.22174 (1) obj. -8185.04 iterations 6
Cbc0038I Pass  34: suminf.    0.22174 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  35: suminf.    0.27896 (1) obj. -8589.28 iterations 1
Cbc0038I Pass  36: suminf.    0.42351 (3) obj. -8185.04 iterations 10
Cbc0038I Pass  37: suminf.    0.42351 (3) obj. -8185.04 iterations 1
Cbc0038I Pass  38: suminf.    0.37735 (1) obj. -9425.85 iterations 4
Cbc0038I Pass  39: suminf.    0.20171 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  40: suminf.    0.92105 (3) obj. -8185.04 iterations 11
Cbc0038I Pass  41: suminf.    0.51888 (2) obj. -8185.04 iterations 5
Cbc0038I Pass  42: suminf.    0.28699 (1) obj. -8837.33 iterations 2
Cbc0038I Pass  43: suminf.    0.19465 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  44: suminf.    0.28914 (2) obj. -8185.04 iterations 6
Cbc0038I Pass  45: suminf.    0.28914 (2) obj. -8185.04 iterations 0
Cbc0038I Pass  46: suminf.    0.32916 (1) obj. -9015.98 iterations 3
Cbc0038I Pass  47: suminf.    0.21153 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  48: suminf.    0.34690 (2) obj. -8185.04 iterations 7
Cbc0038I Pass  49: suminf.    0.34690 (2) obj. -8185.04 iterations 4
Cbc0038I Pass  50: suminf.    0.29301 (1) obj. -8813.84 iterations 2
Cbc0038I Pass  51: suminf.    0.20400 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  52: suminf.    0.19062 (1) obj. -8185.04 iterations 3
Cbc0038I Pass  53: suminf.    0.19062 (1) obj. -8185.04 iterations 2
Cbc0038I Pass  54: suminf.    0.27494 (1) obj. -8780.74 iterations 1
Cbc0038I Pass  55: suminf.    0.21799 (1) obj. -8408.57 iterations 4
Cbc0038I Pass  56: suminf.    0.18635 (1) obj. -8185.04 iterations 2
Cbc0038I Pass  57: suminf.    0.21799 (1) obj. -8408.57 iterations 1
Cbc0038I Pass  58: suminf.    0.23323 (1) obj. -8401.64 iterations 3
Cbc0038I Pass  59: suminf.    0.20257 (1) obj. -8185.04 iterations 1
Cbc0038I Pass  60: suminf.    0.23323 (1) obj. -8401.64 iterations 1
Cbc0038I Rounding solution of -7153.67 is better than previous of -7120.5

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 7 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -7153.67 to -7218.49 (0.02 seconds)
Cbc0038I Round again with cutoff of -9094.72
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.27591 (1) obj. -11217.3 iterations 0
Cbc0038I Pass  61: suminf.    0.42362 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  62: suminf.    0.39220 (1) obj. -9094.72 iterations 3
Cbc0038I Pass  63: suminf.    0.39220 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  64: suminf.    0.39976 (1) obj. -10564.4 iterations 1
Cbc0038I Pass  65: suminf.    0.58698 (2) obj. -9094.72 iterations 6
Cbc0038I Pass  66: suminf.    0.58698 (2) obj. -9094.72 iterations 0
Cbc0038I Pass  67: suminf.    0.40854 (1) obj. -9455.16 iterations 2
Cbc0038I Pass  68: suminf.    0.35751 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  69: suminf.    0.47106 (2) obj. -9094.72 iterations 5
Cbc0038I Pass  70: suminf.    0.47866 (1) obj. -9964.54 iterations 2
Cbc0038I Pass  71: suminf.    0.35553 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  72: suminf.    0.32713 (1) obj. -9094.72 iterations 4
Cbc0038I Pass  73: suminf.    0.32916 (1) obj. -9109.04 iterations 1
Cbc0038I Pass  74: suminf.    0.32713 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  75: suminf.    0.65089 (3) obj. -9094.72 iterations 5
Cbc0038I Pass  76: suminf.    0.65089 (3) obj. -9094.72 iterations 1
Cbc0038I Pass  77: suminf.    0.46189 (1) obj. -10278 iterations 2
Cbc0038I Pass  78: suminf.    0.37061 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  79: suminf.    0.54367 (2) obj. -9094.72 iterations 3
Cbc0038I Pass  80: suminf.    0.54367 (2) obj. -9094.72 iterations 1
Cbc0038I Pass  81: suminf.    0.49848 (1) obj. -10021 iterations 1
Cbc0038I Pass  82: suminf.    0.37040 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  83: suminf.    0.54367 (2) obj. -9094.72 iterations 1
Cbc0038I Pass  84: suminf.    0.40851 (2) obj. -9094.72 iterations 4
Cbc0038I Pass  85: suminf.    0.34644 (1) obj. -9094.72 iterations 2
Cbc0038I Pass  86: suminf.    0.35671 (1) obj. -9167.24 iterations 1
Cbc0038I Pass  87: suminf.    0.63283 (2) obj. -9094.72 iterations 4
Cbc0038I Pass  88: suminf.    0.35378 (1) obj. -9094.72 iterations 1
Cbc0038I Pass  89: suminf.    0.41952 (1) obj. -9559.09 iterations 1
Cbc0038I Rounding solution of -7240.15 is better than previous of -7218.49

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 6 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -7240.15 to -7242.13 (0.03 seconds)
Cbc0038I Round again with cutoff of -9731.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 5
Cbc0038I Pass  89: suminf.    0.27591 (1) obj. -11217.3 iterations 0
Cbc0038I Pass  90: suminf.    0.48624 (1) obj. -9731.5 iterations 1
Cbc0038I Pass  91: suminf.    1.23019 (3) obj. -9731.5 iterations 5
Cbc0038I Pass  92: suminf.    1.23019 (3) obj. -9731.5 iterations 1
Cbc0038I Pass  93: suminf.    0.34756 (1) obj. -10914.5 iterations 2
Cbc0038I Pass  94: suminf.    0.48497 (1) obj. -9731.5 iterations 1
Cbc0038I Pass  95: suminf.    0.65417 (2) obj. -9731.5 iterations 4
Cbc0038I Pass  96: suminf.    0.40976 (1) obj. -10536 iterations 2
Cbc0038I Pass  97: suminf.    0.47637 (1) obj. -9731.5 iterations 1
Cbc0038I Pass  98: suminf.    0.48793 (1) obj. -9731.5 iterations 2
Cbc0038I Pass  99: suminf.    0.35640 (1) obj. -10660.7 iterations 1
Cbc0038I Pass 100: suminf.    0.48793 (1) obj. -9731.5 iterations 1
Cbc0038I Pass 101: suminf.    0.70308 (2) obj. -9731.5 iterations 4
Cbc0038I Pass 102: suminf.    0.47656 (1) obj. -9731.5 iterations 3
Cbc0038I Pass 103: suminf.    0.48598 (1) obj. -9996.19 iterations 1
Cbc0038I Pass 104: suminf.    0.69506 (4) obj. -9731.5 iterations 9
Cbc0038I Pass 105: suminf.    0.58977 (2) obj. -9731.5 iterations 3
Cbc0038I Pass 106: suminf.    0.45244 (1) obj. -10139.1 iterations 2
Cbc0038I Pass 107: suminf.    0.48986 (1) obj. -9731.5 iterations 1
Cbc0038I Pass 108: suminf.    0.78028 (2) obj. -9731.5 iterations 3
Cbc0038I Pass 109: suminf.    0.47073 (1) obj. -10050.3 iterations 2
Cbc0038I Pass 110: suminf.    0.48415 (1) obj. -9731.5 iterations 1
Cbc0038I Pass 111: suminf.    0.59529 (2) obj. -9731.5 iterations 6
Cbc0038I Pass 112: suminf.    0.59529 (2) obj. -9731.5 iterations 1
Cbc0038I Pass 113: suminf.    0.37043 (1) obj. -10624.4 iterations 2
Cbc0038I Pass 114: suminf.    0.49682 (1) obj. -9731.5 iterations 1
Cbc0038I Pass 115: suminf.    0.46355 (2) obj. -9731.5 iterations 3
Cbc0038I Pass 116: suminf.    0.46355 (2) obj. -9731.5 iterations 1
Cbc0038I Pass 117: suminf.    0.37043 (1) obj. -10677.6 iterations 2
Cbc0038I Pass 118: suminf.    0.49565 (1) obj. -9731.5 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -7242.13 - took 0.03 seconds
Cbc0012I Integer solution of -7242.1277 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -7245.6578 found by DiveCoefficient after 1035 iterations and 0 nodes (1.54 seconds)
Cbc0031I 8 added rows had average density of 15.75
Cbc0013I At root node, 8 cuts changed objective from -11217.319 to -7303.7889 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 61 row cuts average 4.1 elements, 2 column cuts (2 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 294 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 74 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 332 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 230 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.828 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7245.6578 best solution, best possible -7303.7889 (1.55 seconds)
Cbc0012I Integer solution of -7265.559 found by DiveCoefficient after 1042 iterations and 1 nodes (1.55 seconds)
Cbc0012I Integer solution of -7301.7457 found by DiveCoefficient after 1067 iterations and 1 nodes (1.55 seconds)
Cbc0001I Search completed - best objective -7301.745700000001, took 1131 iterations and 6 nodes (1.55 seconds)
Cbc0032I Strong branching done 42 times (256 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 43 (-4) columns and 331 (-58) elements
Clp1000I sum of infeasibilities 5.24607e-07 - average 1.49888e-08, 23 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-43) columns and 0 (-331) elements
Clp0000I Optimal - objective value 12028.224
Clp0000I Optimal - objective value 12028.224
Coin0511I After Postsolve, objective 12028.224, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 12028.224 Dual inf 2041.1886 (3)
Clp0014I Perturbing problem by 0.001% of 1.3034087 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 12028.224
Clp0000I Optimal - objective value 12028.224
Clp0000I Optimal - objective value 12028.224
Coin0511I After Postsolve, objective 12028.224, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12028.2241 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 43 columns (43 integer (43 of which binary)) and 339 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 2.952
Cbc0038I Pass   1: suminf.    0.55117 (5) obj. -5981.3 iterations 14
Cbc0038I Pass   2: suminf.    0.55117 (5) obj. -5981.3 iterations 0
Cbc0038I Solution found of -306.035
Cbc0038I Rounding solution of -1047.05 is better than previous of -306.035

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 43 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -1047.05 to -6251.94 (0.01 seconds)
Cbc0038I Round again with cutoff of -6798.38
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.85487 (10) obj. -6798.38 iterations 1
Cbc0038I Pass   4: suminf.    0.85487 (10) obj. -6798.38 iterations 0
Cbc0038I Pass   5: suminf.    0.09835 (1) obj. -6798.38 iterations 10
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -11401.9 iterations 1
Cbc0038I Pass   7: suminf.    1.67744 (5) obj. -7923.46 iterations 12
Cbc0038I Pass   8: suminf.    1.12335 (4) obj. -6798.38 iterations 2
Cbc0038I Pass   9: suminf.    0.48667 (1) obj. -10017.7 iterations 4
Cbc0038I Pass  10: suminf.    0.05762 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  11: suminf.    2.10183 (6) obj. -6798.38 iterations 12
Cbc0038I Pass  12: suminf.    1.62731 (5) obj. -6798.38 iterations 2
Cbc0038I Pass  13: suminf.    0.26444 (1) obj. -8264.86 iterations 5
Cbc0038I Pass  14: suminf.    0.05686 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  15: suminf.    1.32718 (4) obj. -6798.38 iterations 5
Cbc0038I Pass  16: suminf.    0.88302 (3) obj. -6798.38 iterations 1
Cbc0038I Pass  17: suminf.    0.42857 (1) obj. -9468.96 iterations 3
Cbc0038I Pass  18: suminf.    0.05053 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  19: suminf.    2.84986 (8) obj. -6798.38 iterations 8
Cbc0038I Pass  20: suminf.    0.77031 (3) obj. -6798.38 iterations 5
Cbc0038I Pass  21: suminf.    0.42857 (1) obj. -9555.96 iterations 3
Cbc0038I Pass  22: suminf.    0.03822 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  23: suminf.    2.05341 (7) obj. -6798.38 iterations 11
Cbc0038I Pass  24: suminf.    0.01573 (1) obj. -6798.38 iterations 7
Cbc0038I Pass  25: suminf.    0.28571 (1) obj. -8705.65 iterations 1
Cbc0038I Pass  26: suminf.    2.04669 (7) obj. -6798.38 iterations 21
Cbc0038I Pass  27: suminf.    0.35714 (1) obj. -10601.2 iterations 9
Cbc0038I Pass  28: suminf.    0.10454 (1) obj. -6798.38 iterations 1
Cbc0038I Pass  29: suminf.    2.12030 (6) obj. -6798.38 iterations 10
Cbc0038I Pass  30: suminf.    1.43648 (4) obj. -6798.38 iterations 2
Cbc0038I Pass  31: suminf.    0.35556 (1) obj. -9048.6 iterations 4
Cbc0038I Pass  32: suminf.    0.03702 (1) obj. -6798.38 iterations 1
Cbc0038I Rounding solution of -7168.8 is better than previous of -6251.94

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -8078.3
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.58685 (9) obj. -11458 iterations 1
Cbc0038I Pass  33: suminf.    0.27953 (1) obj. -8078.3 iterations 9
Cbc0038I Pass  34: suminf.    0.25000 (1) obj. -11401.9 iterations 1
Cbc0038I Pass  35: suminf.    1.51190 (4) obj. -10458.2 iterations 7
Cbc0038I Pass  36: suminf.    0.23835 (1) obj. -8078.3 iterations 4
Cbc0038I Pass  37: suminf.    0.42857 (1) obj. -10431.2 iterations 1
Cbc0038I Pass  38: suminf.    1.83647 (5) obj. -10040.7 iterations 8
Cbc0038I Pass  39: suminf.    1.40085 (4) obj. -8078.3 iterations 4
Cbc0038I Pass  40: suminf.    0.50000 (1) obj. -10001.7 iterations 4
Cbc0038I Pass  41: suminf.    0.22773 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  42: suminf.    0.89583 (3) obj. -8078.3 iterations 7
Cbc0038I Pass  43: suminf.    0.56582 (2) obj. -8078.3 iterations 2
Cbc0038I Pass  44: suminf.    0.47333 (1) obj. -9774.39 iterations 2
Cbc0038I Pass  45: suminf.    0.23324 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  46: suminf.    1.31795 (4) obj. -8078.3 iterations 7
Cbc0038I Pass  47: suminf.    0.94636 (3) obj. -8078.3 iterations 2
Cbc0038I Pass  48: suminf.    0.40000 (1) obj. -9280.18 iterations 3
Cbc0038I Pass  49: suminf.    0.22987 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  50: suminf.    0.92316 (4) obj. -8078.3 iterations 7
Cbc0038I Pass  51: suminf.    0.92316 (4) obj. -8078.3 iterations 1
Cbc0038I Pass  52: suminf.    0.49542 (1) obj. -9929.48 iterations 4
Cbc0038I Pass  53: suminf.    0.23338 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  54: suminf.    0.57333 (2) obj. -8078.3 iterations 6
Cbc0038I Pass  55: suminf.    0.57333 (2) obj. -8078.3 iterations 2
Cbc0038I Pass  56: suminf.    0.49181 (1) obj. -9856.54 iterations 2
Cbc0038I Pass  57: suminf.    0.24009 (1) obj. -8078.3 iterations 1
Cbc0038I Pass  58: suminf.    1.82503 (5) obj. -8078.3 iterations 6
Cbc0038I Pass  59: suminf.    0.97598 (3) obj. -8078.3 iterations 2
Cbc0038I Pass  60: suminf.    0.48699 (1) obj. -9794.28 iterations 3
Cbc0038I Pass  61: suminf.    0.24408 (1) obj. -8078.3 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -7168.8 - took 0.02 seconds
Cbc0012I Integer solution of -7168.7965 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 43 columns, reduced to 2 rows 8 columns
Cbc0012I Integer solution of -7194.7278 found by RINS after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -7205.2937 found by DiveCoefficient after 1258 iterations and 0 nodes (1.55 seconds)
Cbc0031I 16 added rows had average density of 14.0625
Cbc0013I At root node, 16 cuts changed objective from -11716.338 to -7305.1488 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2541 row cuts average 9.6 elements, 6 column cuts (8 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 487 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 222 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 281 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7205.2937 best solution, best possible -7305.1488 (1.56 seconds)
Cbc0012I Integer solution of -7240.1522 found by rounding after 1289 iterations and 1 nodes (1.61 seconds)
Cbc0012I Integer solution of -7251.1346 found by rounding after 1294 iterations and 2 nodes (1.62 seconds)
Cbc0012I Integer solution of -7301.7457 found by DiveCoefficient after 1313 iterations and 2 nodes (1.66 seconds)
Cbc0001I Search completed - best objective -7301.745700000001, took 1363 iterations and 6 nodes (1.70 seconds)
Cbc0032I Strong branching done 76 times (798 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 1 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.71

