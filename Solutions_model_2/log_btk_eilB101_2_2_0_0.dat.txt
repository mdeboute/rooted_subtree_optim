Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-32) rows, 97 (-6) columns and 532 (-71) elements
Clp1000I sum of infeasibilities 3.37552e-05 - average 1.95117e-07, 29 fixed columns
Coin0506I Presolve 117 (-56) rows, 67 (-30) columns and 360 (-172) elements
Clp0014I Perturbing problem by 0.001% of 0.22881766 - largest nonzero change 0 ( 0%) - largest zero change 2.6478744e-05
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Coin0511I After Postsolve, objective 43.862117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20326133 - largest nonzero change 0 ( 0%) - largest zero change 2.8396997e-05
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Coin0511I After Postsolve, objective 43.862117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.86211748 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 97 columns (96 integer (96 of which binary)) and 534 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.925%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.45623
Cbc0038I Solution found of 3.54297
Cbc0038I Relaxing continuous gives -3.68334
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 78 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -3.68334 to -18.1544 (0.05 seconds)
Cbc0038I Round again with cutoff of -20.7252
Cbc0038I Pass   1: suminf.    2.72383 (41) obj. -20.7252 iterations 53
Cbc0038I Pass   2: suminf.    1.13427 (6) obj. -20.7252 iterations 34
Cbc0038I Pass   3: suminf.    0.89377 (5) obj. -20.7252 iterations 10
Cbc0038I Pass   4: suminf.    1.52530 (5) obj. -20.7252 iterations 15
Cbc0038I Pass   5: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass   6: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass   7: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass   8: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass   9: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  10: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  11: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  12: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  13: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  14: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  15: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  16: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  17: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  18: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  19: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  20: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  21: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  22: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  23: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  24: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  25: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  26: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  27: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  28: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  29: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  30: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 106 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -18.1544 to -19.2395 (0.10 seconds)
Cbc0038I Round again with cutoff of -25.3526
Cbc0038I Pass  30: suminf.    3.46343 (41) obj. -25.3526 iterations 0
Cbc0038I Pass  31: suminf.    4.65331 (15) obj. -25.3526 iterations 42
Cbc0038I Pass  32: suminf.    2.86133 (13) obj. -25.3526 iterations 15
Cbc0038I Pass  33: suminf.    2.86133 (13) obj. -25.3526 iterations 1
Cbc0038I Pass  34: suminf.    2.43352 (8) obj. -25.3526 iterations 23
Cbc0038I Pass  35: suminf.    2.43352 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  36: suminf.    2.50328 (8) obj. -25.3526 iterations 16
Cbc0038I Pass  37: suminf.    2.23300 (7) obj. -25.3526 iterations 3
Cbc0038I Pass  38: suminf.    2.21118 (8) obj. -25.3526 iterations 1
Cbc0038I Pass  39: suminf.    2.13112 (8) obj. -25.3526 iterations 12
Cbc0038I Pass  40: suminf.    2.04163 (7) obj. -25.3526 iterations 5
Cbc0038I Pass  41: suminf.    1.71273 (8) obj. -25.3526 iterations 7
Cbc0038I Pass  42: suminf.    1.52418 (7) obj. -25.3526 iterations 6
Cbc0038I Pass  43: suminf.    3.32071 (12) obj. -25.3526 iterations 17
Cbc0038I Pass  44: suminf.    1.18612 (7) obj. -25.3526 iterations 18
Cbc0038I Pass  45: suminf.    2.71924 (8) obj. -25.3526 iterations 16
Cbc0038I Pass  46: suminf.    2.46512 (8) obj. -25.3526 iterations 4
Cbc0038I Pass  47: suminf.    2.46512 (8) obj. -25.3526 iterations 1
Cbc0038I Pass  48: suminf.    2.36694 (8) obj. -25.3526 iterations 8
Cbc0038I Pass  49: suminf.    2.12903 (11) obj. -25.3526 iterations 12
Cbc0038I Pass  50: suminf.    4.51616 (11) obj. -25.3526 iterations 16
Cbc0038I Pass  51: suminf.    2.92503 (8) obj. -25.3526 iterations 5
Cbc0038I Pass  52: suminf.    2.58578 (10) obj. -25.3526 iterations 10
Cbc0038I Pass  53: suminf.    2.39932 (11) obj. -25.3526 iterations 9
Cbc0038I Pass  54: suminf.    4.27223 (11) obj. -25.3526 iterations 17
Cbc0038I Pass  55: suminf.    3.27567 (8) obj. -25.3526 iterations 7
Cbc0038I Pass  56: suminf.    3.27567 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  57: suminf.    2.97548 (8) obj. -25.3526 iterations 15
Cbc0038I Pass  58: suminf.    2.97548 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  59: suminf.    2.97330 (8) obj. -25.3526 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 111 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -19.2395 - took 0.13 seconds
Cbc0012I Integer solution of -19.23949 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 173 rows 97 columns, reduced to 79 rows 46 columns
Cbc0031I 18 added rows had average density of 70.777778
Cbc0013I At root node, 18 cuts changed objective from -43.862117 to -37.10814 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11644 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1791 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 82.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.23949 best solution, best possible -37.10814 (1.23 seconds)
Cbc0012I Integer solution of -19.49417 found by rounding after 8558 iterations and 39 nodes (1.56 seconds)
Cbc0038I Full problem 173 rows 97 columns, reduced to 2 rows 3 columns
Cbc0038I Full problem 173 rows 97 columns, reduced to 25 rows 17 columns
Cbc0001I Search completed - best objective -19.49417, took 10581 iterations and 108 nodes (1.79 seconds)
Cbc0032I Strong branching done 956 times (18625 iterations), fathomed 12 nodes and fixed 21 variables
Cbc0035I Maximum depth 33, 343 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       1.81

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-82) rows, 141 (-61) columns and 2599 (-3054) elements
Clp1000I sum of infeasibilities 2.65767e-07 - average 2.17842e-09, 28 fixed columns
Coin0506I Presolve 97 (-25) rows, 113 (-28) columns and 1850 (-749) elements
Clp0006I 0  Obj 45.185872 Dual inf 11.205973 (113)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.6180506 - largest nonzero change 1.8050357e-05 ( 0.001282115%) - largest zero change 2.9733566e-05
Clp0000I Optimal - objective value 55.693406
Clp0000I Optimal - objective value 55.693406
Coin0511I After Postsolve, objective 55.693406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.693406
Clp0000I Optimal - objective value 55.693406
Clp0000I Optimal - objective value 55.693406
Clp0000I Optimal - objective value 55.693406
Coin0511I After Postsolve, objective 55.693406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.69340607 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 141 columns (141 integer (141 of which binary)) and 2610 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.097%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.42055
Cbc0038I Pass   1: suminf.    1.43270 (29) obj. -17.3473 iterations 25
Cbc0038I Pass   2: suminf.    1.43270 (29) obj. -17.3473 iterations 2
Cbc0038I Pass   3: suminf.    0.07418 (2) obj. 9.24868 iterations 27
Cbc0038I Solution found of 11.1745
Cbc0038I Rounding solution of 5.07832 is better than previous of 11.1745

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 141 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 5.07832 to 1.0358 (0.07 seconds)
Cbc0038I Round again with cutoff of -2.76041
Cbc0038I Pass   4: suminf.    1.43270 (29) obj. -17.3473 iterations 0
Cbc0038I Pass   5: suminf.    1.43270 (29) obj. -17.3473 iterations 1
Cbc0038I Pass   6: suminf.    0.76229 (13) obj. -2.76041 iterations 46
Cbc0038I Pass   7: suminf.    0.72427 (14) obj. -2.76041 iterations 7
Cbc0038I Pass   8: suminf.    1.29478 (7) obj. -2.76041 iterations 27
Cbc0038I Pass   9: suminf.    1.06027 (8) obj. -2.76041 iterations 7
Cbc0038I Pass  10: suminf.    0.79625 (6) obj. -2.76041 iterations 10
Cbc0038I Pass  11: suminf.    0.79312 (4) obj. -2.76041 iterations 4
Cbc0038I Pass  12: suminf.    0.97224 (4) obj. -2.76041 iterations 15
Cbc0038I Pass  13: suminf.    0.50206 (4) obj. -3.04281 iterations 10
Cbc0038I Pass  14: suminf.    0.80442 (5) obj. -2.76041 iterations 12
Cbc0038I Pass  15: suminf.    1.92477 (19) obj. -2.76041 iterations 49
Cbc0038I Pass  16: suminf.    1.19373 (15) obj. -3.09412 iterations 4
Cbc0038I Pass  17: suminf.    0.50949 (4) obj. -2.76041 iterations 24
Cbc0038I Pass  18: suminf.    0.32973 (4) obj. -2.76041 iterations 10
Cbc0038I Pass  19: suminf.    1.97455 (7) obj. -2.76041 iterations 10
Cbc0038I Pass  20: suminf.    1.97455 (7) obj. -2.76041 iterations 0
Cbc0038I Pass  21: suminf.    2.02749 (7) obj. -2.76041 iterations 8
Cbc0038I Pass  22: suminf.    2.02749 (7) obj. -2.76041 iterations 4
Cbc0038I Pass  23: suminf.    1.97455 (7) obj. -2.76041 iterations 5
Cbc0038I Pass  24: suminf.    1.46188 (14) obj. -2.76041 iterations 24
Cbc0038I Pass  25: suminf.    1.25976 (11) obj. -2.76041 iterations 20
Cbc0038I Pass  26: suminf.    1.18682 (5) obj. -2.76041 iterations 20
Cbc0038I Pass  27: suminf.    0.76052 (8) obj. -2.76041 iterations 9
Cbc0038I Pass  28: suminf.    2.30948 (9) obj. -2.76041 iterations 15
Cbc0038I Pass  29: suminf.    1.41921 (8) obj. -2.76041 iterations 2
Cbc0038I Pass  30: suminf.    1.41789 (8) obj. -2.76041 iterations 5
Cbc0038I Pass  31: suminf.    1.41789 (8) obj. -2.76041 iterations 4
Cbc0038I Pass  32: suminf.    1.41921 (8) obj. -2.76041 iterations 9
Cbc0038I Pass  33: suminf.    1.51290 (12) obj. -2.76041 iterations 20
Cbc0038I Rounding solution of -8.29814 is better than previous of 1.0358

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 141 columns, reduced to 40 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -8.29814 to -14.4571 (0.17 seconds)
Cbc0038I Round again with cutoff of -18.9509
Cbc0038I Pass  33: suminf.    2.28642 (35) obj. -18.9509 iterations 4
Cbc0038I Pass  34: suminf.    1.61373 (30) obj. -18.9509 iterations 11
Cbc0038I Pass  35: suminf.    2.66630 (27) obj. -18.9509 iterations 36
Cbc0038I Pass  36: suminf.    2.05552 (25) obj. -18.9509 iterations 8
Cbc0038I Pass  37: suminf.    2.72461 (21) obj. -18.9509 iterations 33
Cbc0038I Pass  38: suminf.    2.70577 (20) obj. -18.9509 iterations 2
Cbc0038I Pass  39: suminf.    2.76749 (20) obj. -18.9509 iterations 19
Cbc0038I Pass  40: suminf.    2.42256 (20) obj. -18.9509 iterations 7
Cbc0038I Pass  41: suminf.    2.76749 (20) obj. -18.9509 iterations 10
Cbc0038I Pass  42: suminf.    3.47484 (29) obj. -18.9509 iterations 26
Cbc0038I Pass  43: suminf.    3.02218 (26) obj. -18.9509 iterations 10
Cbc0038I Pass  44: suminf.    4.27621 (27) obj. -18.9509 iterations 19
Cbc0038I Pass  45: suminf.    3.93582 (25) obj. -18.9509 iterations 5
Cbc0038I Pass  46: suminf.    4.34118 (24) obj. -18.9509 iterations 29
Cbc0038I Pass  47: suminf.    4.34118 (24) obj. -18.9509 iterations 0
Cbc0038I Pass  48: suminf.    4.30548 (24) obj. -18.9509 iterations 4
Cbc0038I Pass  49: suminf.    4.30548 (24) obj. -18.9509 iterations 2
Cbc0038I Pass  50: suminf.    4.02020 (24) obj. -18.9509 iterations 3
Cbc0038I Pass  51: suminf.    4.02020 (24) obj. -18.9509 iterations 2
Cbc0038I Pass  52: suminf.    4.02020 (24) obj. -18.9509 iterations 2
Cbc0038I Pass  53: suminf.    4.67515 (26) obj. -18.9509 iterations 20
Cbc0038I Pass  54: suminf.    3.98255 (24) obj. -18.9509 iterations 13
Cbc0038I Pass  55: suminf.    2.60014 (24) obj. -18.9509 iterations 7
Cbc0038I Pass  56: suminf.    2.60014 (24) obj. -18.9509 iterations 0
Cbc0038I Pass  57: suminf.    3.86421 (22) obj. -18.9509 iterations 28
Cbc0038I Pass  58: suminf.    3.80675 (22) obj. -18.9509 iterations 6
Cbc0038I Pass  59: suminf.    3.86421 (22) obj. -18.9509 iterations 18
Cbc0038I Pass  60: suminf.    3.87602 (26) obj. -18.9509 iterations 16
Cbc0038I Pass  61: suminf.    2.77214 (24) obj. -18.9509 iterations 12
Cbc0038I Pass  62: suminf.    2.29141 (20) obj. -18.9509 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 141 columns, reduced to 37 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -14.4571 - took 0.13 seconds
Cbc0012I Integer solution of -14.45714 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 122 rows 141 columns, reduced to 37 rows 44 columns
Cbc0031I 56 added rows had average density of 33.232143
Cbc0013I At root node, 56 cuts changed objective from -36.925355 to -22.135334 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19307 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1586 row cuts average 132.8 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 95 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1019 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 665 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 84.2 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 197 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.836 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.45714 best solution, best possible -22.135334 (3.36 seconds)
Cbc0012I Integer solution of -19.49417 found by rounding after 5441 iterations and 1 nodes (3.37 seconds)
Cbc0010I After 14 nodes, 1 on tree, -19.49417 best solution, best possible -22.057926 (4.54 seconds)
Cbc0010I After 23 nodes, 2 on tree, -19.49417 best solution, best possible -21.449833 (5.34 seconds)
Cbc0001I Search completed - best objective -19.49417, took 7263 iterations and 28 nodes (5.77 seconds)
Cbc0032I Strong branching done 474 times (10266 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 91 variables fixed on reduced cost
Total time (CPU seconds):       4.17   (Wallclock seconds):       5.79

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-32) rows, 97 (-6) columns and 532 (-71) elements
Clp1000I sum of infeasibilities 3.37552e-05 - average 1.95117e-07, 29 fixed columns
Coin0506I Presolve 117 (-56) rows, 67 (-30) columns and 360 (-172) elements
Clp0014I Perturbing problem by 0.001% of 0.22881766 - largest nonzero change 0 ( 0%) - largest zero change 2.6478744e-05
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Coin0511I After Postsolve, objective 43.862117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20326133 - largest nonzero change 0 ( 0%) - largest zero change 2.8396997e-05
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Clp0000I Optimal - objective value 43.862117
Coin0511I After Postsolve, objective 43.862117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.86211748 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 97 columns (96 integer (96 of which binary)) and 534 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.925%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.45623
Cbc0038I Solution found of 3.54297
Cbc0038I Relaxing continuous gives -3.68334
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 78 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -3.68334 to -18.1544 (0.04 seconds)
Cbc0038I Round again with cutoff of -20.7252
Cbc0038I Pass   1: suminf.    2.72383 (41) obj. -20.7252 iterations 53
Cbc0038I Pass   2: suminf.    1.13427 (6) obj. -20.7252 iterations 34
Cbc0038I Pass   3: suminf.    0.89377 (5) obj. -20.7252 iterations 10
Cbc0038I Pass   4: suminf.    1.52530 (5) obj. -20.7252 iterations 15
Cbc0038I Pass   5: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass   6: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass   7: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass   8: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass   9: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  10: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  11: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  12: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  13: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  14: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  15: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  16: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  17: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  18: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  19: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  20: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  21: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  22: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  23: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  24: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  25: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I Pass  26: suminf.    1.00600 (4) obj. -20.7252 iterations 9
Cbc0038I Pass  27: suminf.    0.98092 (5) obj. -20.7252 iterations 3
Cbc0038I Pass  28: suminf.    1.66433 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  29: suminf.    1.52530 (5) obj. -20.7252 iterations 5
Cbc0038I Pass  30: suminf.    1.52530 (5) obj. -20.7252 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 106 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -18.1544 to -19.2395 (0.08 seconds)
Cbc0038I Round again with cutoff of -25.3526
Cbc0038I Pass  30: suminf.    3.46343 (41) obj. -25.3526 iterations 0
Cbc0038I Pass  31: suminf.    4.65331 (15) obj. -25.3526 iterations 42
Cbc0038I Pass  32: suminf.    2.86133 (13) obj. -25.3526 iterations 15
Cbc0038I Pass  33: suminf.    2.86133 (13) obj. -25.3526 iterations 1
Cbc0038I Pass  34: suminf.    2.43352 (8) obj. -25.3526 iterations 23
Cbc0038I Pass  35: suminf.    2.43352 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  36: suminf.    2.50328 (8) obj. -25.3526 iterations 16
Cbc0038I Pass  37: suminf.    2.23300 (7) obj. -25.3526 iterations 3
Cbc0038I Pass  38: suminf.    2.21118 (8) obj. -25.3526 iterations 1
Cbc0038I Pass  39: suminf.    2.13112 (8) obj. -25.3526 iterations 12
Cbc0038I Pass  40: suminf.    2.04163 (7) obj. -25.3526 iterations 5
Cbc0038I Pass  41: suminf.    1.71273 (8) obj. -25.3526 iterations 7
Cbc0038I Pass  42: suminf.    1.52418 (7) obj. -25.3526 iterations 6
Cbc0038I Pass  43: suminf.    3.32071 (12) obj. -25.3526 iterations 17
Cbc0038I Pass  44: suminf.    1.18612 (7) obj. -25.3526 iterations 18
Cbc0038I Pass  45: suminf.    2.71924 (8) obj. -25.3526 iterations 16
Cbc0038I Pass  46: suminf.    2.46512 (8) obj. -25.3526 iterations 4
Cbc0038I Pass  47: suminf.    2.46512 (8) obj. -25.3526 iterations 1
Cbc0038I Pass  48: suminf.    2.36694 (8) obj. -25.3526 iterations 8
Cbc0038I Pass  49: suminf.    2.12903 (11) obj. -25.3526 iterations 12
Cbc0038I Pass  50: suminf.    4.51616 (11) obj. -25.3526 iterations 16
Cbc0038I Pass  51: suminf.    2.92503 (8) obj. -25.3526 iterations 5
Cbc0038I Pass  52: suminf.    2.58578 (10) obj. -25.3526 iterations 10
Cbc0038I Pass  53: suminf.    2.39932 (11) obj. -25.3526 iterations 9
Cbc0038I Pass  54: suminf.    4.27223 (11) obj. -25.3526 iterations 17
Cbc0038I Pass  55: suminf.    3.27567 (8) obj. -25.3526 iterations 7
Cbc0038I Pass  56: suminf.    3.27567 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  57: suminf.    2.97548 (8) obj. -25.3526 iterations 15
Cbc0038I Pass  58: suminf.    2.97548 (8) obj. -25.3526 iterations 0
Cbc0038I Pass  59: suminf.    2.97330 (8) obj. -25.3526 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 97 columns, reduced to 111 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -19.2395 - took 0.11 seconds
Cbc0012I Integer solution of -19.23949 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 173 rows 97 columns, reduced to 79 rows 46 columns
Cbc0031I 18 added rows had average density of 70.777778
Cbc0013I At root node, 18 cuts changed objective from -43.862117 to -37.10814 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11644 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1791 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 82.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.23949 best solution, best possible -37.10814 (0.97 seconds)
Cbc0012I Integer solution of -19.49417 found by rounding after 8558 iterations and 39 nodes (1.20 seconds)
Cbc0038I Full problem 173 rows 97 columns, reduced to 2 rows 3 columns
Cbc0038I Full problem 173 rows 97 columns, reduced to 25 rows 17 columns
Cbc0001I Search completed - best objective -19.49417, took 10581 iterations and 108 nodes (1.38 seconds)
Cbc0032I Strong branching done 956 times (18625 iterations), fathomed 12 nodes and fixed 21 variables
Cbc0035I Maximum depth 33, 343 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-83) rows, 141 (-62) columns and 2599 (-3055) elements
Clp1000I sum of infeasibilities 2.65767e-07 - average 2.17842e-09, 28 fixed columns
Coin0506I Presolve 97 (-25) rows, 113 (-28) columns and 1850 (-749) elements
Clp0006I 0  Obj 45.185872 Dual inf 11.205973 (113)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.6180506 - largest nonzero change 1.8050357e-05 ( 0.001282115%) - largest zero change 2.9733566e-05
Clp0000I Optimal - objective value 55.693406
Clp0000I Optimal - objective value 55.693406
Coin0511I After Postsolve, objective 55.693406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.693406
Clp0000I Optimal - objective value 55.693406
Clp0000I Optimal - objective value 55.693406
Clp0000I Optimal - objective value 55.693406
Coin0511I After Postsolve, objective 55.693406, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.69340607 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 141 columns (141 integer (141 of which binary)) and 2610 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.097%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.42055
Cbc0038I Pass   1: suminf.    1.43270 (29) obj. -17.3473 iterations 25
Cbc0038I Pass   2: suminf.    1.43270 (29) obj. -17.3473 iterations 2
Cbc0038I Pass   3: suminf.    0.07418 (2) obj. 9.24868 iterations 27
Cbc0038I Solution found of 11.1745
Cbc0038I Rounding solution of 5.07832 is better than previous of 11.1745

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 141 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 5.07832 to 1.0358 (0.05 seconds)
Cbc0038I Round again with cutoff of -2.76041
Cbc0038I Pass   4: suminf.    1.43270 (29) obj. -17.3473 iterations 0
Cbc0038I Pass   5: suminf.    1.43270 (29) obj. -17.3473 iterations 1
Cbc0038I Pass   6: suminf.    0.76229 (13) obj. -2.76041 iterations 46
Cbc0038I Pass   7: suminf.    0.72427 (14) obj. -2.76041 iterations 7
Cbc0038I Pass   8: suminf.    1.29478 (7) obj. -2.76041 iterations 27
Cbc0038I Pass   9: suminf.    1.06027 (8) obj. -2.76041 iterations 7
Cbc0038I Pass  10: suminf.    0.79625 (6) obj. -2.76041 iterations 10
Cbc0038I Pass  11: suminf.    0.79312 (4) obj. -2.76041 iterations 4
Cbc0038I Pass  12: suminf.    0.97224 (4) obj. -2.76041 iterations 15
Cbc0038I Pass  13: suminf.    0.50206 (4) obj. -3.04281 iterations 10
Cbc0038I Pass  14: suminf.    0.80442 (5) obj. -2.76041 iterations 12
Cbc0038I Pass  15: suminf.    1.92477 (19) obj. -2.76041 iterations 49
Cbc0038I Pass  16: suminf.    1.19373 (15) obj. -3.09412 iterations 4
Cbc0038I Pass  17: suminf.    0.50949 (4) obj. -2.76041 iterations 24
Cbc0038I Pass  18: suminf.    0.32973 (4) obj. -2.76041 iterations 10
Cbc0038I Pass  19: suminf.    1.97455 (7) obj. -2.76041 iterations 10
Cbc0038I Pass  20: suminf.    1.97455 (7) obj. -2.76041 iterations 0
Cbc0038I Pass  21: suminf.    2.02749 (7) obj. -2.76041 iterations 8
Cbc0038I Pass  22: suminf.    2.02749 (7) obj. -2.76041 iterations 4
Cbc0038I Pass  23: suminf.    1.97455 (7) obj. -2.76041 iterations 5
Cbc0038I Pass  24: suminf.    1.46188 (14) obj. -2.76041 iterations 24
Cbc0038I Pass  25: suminf.    1.25976 (11) obj. -2.76041 iterations 20
Cbc0038I Pass  26: suminf.    1.18682 (5) obj. -2.76041 iterations 20
Cbc0038I Pass  27: suminf.    0.76052 (8) obj. -2.76041 iterations 9
Cbc0038I Pass  28: suminf.    2.30948 (9) obj. -2.76041 iterations 15
Cbc0038I Pass  29: suminf.    1.41921 (8) obj. -2.76041 iterations 2
Cbc0038I Pass  30: suminf.    1.41789 (8) obj. -2.76041 iterations 5
Cbc0038I Pass  31: suminf.    1.41789 (8) obj. -2.76041 iterations 4
Cbc0038I Pass  32: suminf.    1.41921 (8) obj. -2.76041 iterations 9
Cbc0038I Pass  33: suminf.    1.51290 (12) obj. -2.76041 iterations 20
Cbc0038I Rounding solution of -8.29814 is better than previous of 1.0358

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 141 columns, reduced to 40 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -8.29814 to -14.4571 (0.12 seconds)
Cbc0038I Round again with cutoff of -18.9509
Cbc0038I Pass  33: suminf.    2.28642 (35) obj. -18.9509 iterations 4
Cbc0038I Pass  34: suminf.    1.61373 (30) obj. -18.9509 iterations 11
Cbc0038I Pass  35: suminf.    2.66630 (27) obj. -18.9509 iterations 36
Cbc0038I Pass  36: suminf.    2.05552 (25) obj. -18.9509 iterations 8
Cbc0038I Pass  37: suminf.    2.72461 (21) obj. -18.9509 iterations 33
Cbc0038I Pass  38: suminf.    2.70577 (20) obj. -18.9509 iterations 2
Cbc0038I Pass  39: suminf.    2.76749 (20) obj. -18.9509 iterations 19
Cbc0038I Pass  40: suminf.    2.42256 (20) obj. -18.9509 iterations 7
Cbc0038I Pass  41: suminf.    2.76749 (20) obj. -18.9509 iterations 10
Cbc0038I Pass  42: suminf.    3.47484 (29) obj. -18.9509 iterations 26
Cbc0038I Pass  43: suminf.    3.02218 (26) obj. -18.9509 iterations 10
Cbc0038I Pass  44: suminf.    4.27621 (27) obj. -18.9509 iterations 19
Cbc0038I Pass  45: suminf.    3.93582 (25) obj. -18.9509 iterations 5
Cbc0038I Pass  46: suminf.    4.34118 (24) obj. -18.9509 iterations 29
Cbc0038I Pass  47: suminf.    4.34118 (24) obj. -18.9509 iterations 0
Cbc0038I Pass  48: suminf.    4.30548 (24) obj. -18.9509 iterations 4
Cbc0038I Pass  49: suminf.    4.30548 (24) obj. -18.9509 iterations 2
Cbc0038I Pass  50: suminf.    4.02020 (24) obj. -18.9509 iterations 3
Cbc0038I Pass  51: suminf.    4.02020 (24) obj. -18.9509 iterations 2
Cbc0038I Pass  52: suminf.    4.02020 (24) obj. -18.9509 iterations 2
Cbc0038I Pass  53: suminf.    4.67515 (26) obj. -18.9509 iterations 20
Cbc0038I Pass  54: suminf.    3.98255 (24) obj. -18.9509 iterations 13
Cbc0038I Pass  55: suminf.    2.60014 (24) obj. -18.9509 iterations 7
Cbc0038I Pass  56: suminf.    2.60014 (24) obj. -18.9509 iterations 0
Cbc0038I Pass  57: suminf.    3.86421 (22) obj. -18.9509 iterations 28
Cbc0038I Pass  58: suminf.    3.80675 (22) obj. -18.9509 iterations 6
Cbc0038I Pass  59: suminf.    3.86421 (22) obj. -18.9509 iterations 18
Cbc0038I Pass  60: suminf.    3.87602 (26) obj. -18.9509 iterations 16
Cbc0038I Pass  61: suminf.    2.77214 (24) obj. -18.9509 iterations 12
Cbc0038I Pass  62: suminf.    2.29141 (20) obj. -18.9509 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 141 columns, reduced to 37 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -14.4571 - took 0.10 seconds
Cbc0012I Integer solution of -14.45714 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 122 rows 141 columns, reduced to 37 rows 44 columns
Cbc0031I 56 added rows had average density of 33.232143
Cbc0013I At root node, 56 cuts changed objective from -36.925355 to -22.135334 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19307 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1586 row cuts average 132.8 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 95 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1019 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 665 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 84.2 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 197 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.45714 best solution, best possible -22.135334 (2.78 seconds)
Cbc0012I Integer solution of -19.49417 found by rounding after 5441 iterations and 1 nodes (2.79 seconds)
Cbc0010I After 14 nodes, 1 on tree, -19.49417 best solution, best possible -22.057926 (3.87 seconds)
Cbc0010I After 24 nodes, 3 on tree, -19.49417 best solution, best possible -21.449833 (4.71 seconds)
Cbc0001I Search completed - best objective -19.49417, took 7263 iterations and 28 nodes (4.91 seconds)
Cbc0032I Strong branching done 474 times (10266 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 91 variables fixed on reduced cost
Total time (CPU seconds):       3.59   (Wallclock seconds):       4.93

