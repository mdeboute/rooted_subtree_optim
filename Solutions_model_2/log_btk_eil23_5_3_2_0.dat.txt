Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 20 (-5) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 2.30901e-05 - average 6.41391e-07, 4 fixed columns
Coin0506I Presolve 11 (-25) rows, 13 (-7) columns and 42 (-62) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 2.6572727 - largest nonzero change 2.724971e-05 ( 0.0022179273%) - largest zero change 1.8314621e-05
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Coin0511I After Postsolve, objective 481.8145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Coin0511I After Postsolve, objective 481.8145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 481.8144999 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 20 columns (19 integer (19 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.63232
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -330.5 iterations 6
Cbc0038I Solution found of -330.5
Cbc0038I Relaxing continuous gives -330.5
Cbc0038I Rounding solution of -353.5 is better than previous of -330.5

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -364.873
Cbc0038I Pass   2: suminf.    0.29981 (4) obj. -364.873 iterations 2
Cbc0038I Pass   3: suminf.    0.47210 (1) obj. -364.873 iterations 5
Cbc0038I Pass   4: suminf.    0.33346 (1) obj. -364.873 iterations 1
Cbc0038I Pass   5: suminf.    0.70909 (2) obj. -364.873 iterations 2
Cbc0038I Pass   6: suminf.    0.43386 (1) obj. -364.873 iterations 2
Cbc0038I Pass   7: suminf.    0.39866 (1) obj. -364.873 iterations 1
Cbc0038I Pass   8: suminf.    0.51947 (2) obj. -364.873 iterations 6
Cbc0038I Pass   9: suminf.    0.51947 (2) obj. -364.873 iterations 1
Cbc0038I Pass  10: suminf.    0.37196 (1) obj. -364.873 iterations 3
Cbc0038I Pass  11: suminf.    0.37116 (1) obj. -364.873 iterations 1
Cbc0038I Pass  12: suminf.    1.11468 (6) obj. -364.873 iterations 9
Cbc0038I Pass  13: suminf.    0.27712 (1) obj. -369.308 iterations 9
Cbc0038I Pass  14: suminf.    0.29105 (1) obj. -364.873 iterations 1
Cbc0038I Pass  15: suminf.    0.39365 (2) obj. -364.873 iterations 3
Cbc0038I Pass  16: suminf.    0.39365 (2) obj. -364.873 iterations 2
Cbc0038I Pass  17: suminf.    0.22460 (2) obj. -364.873 iterations 7
Cbc0038I Pass  18: suminf.    0.22460 (2) obj. -364.873 iterations 0
Cbc0038I Pass  19: suminf.    0.25184 (2) obj. -364.873 iterations 2
Cbc0038I Pass  20: suminf.    0.25184 (2) obj. -364.873 iterations 0
Cbc0038I Pass  21: suminf.    0.54943 (4) obj. -364.873 iterations 3
Cbc0038I Pass  22: suminf.    0.44809 (4) obj. -364.873 iterations 5
Cbc0038I Pass  23: suminf.    0.21068 (3) obj. -364.873 iterations 5
Cbc0038I Pass  24: suminf.    1.10532 (3) obj. -364.873 iterations 2
Cbc0038I Pass  25: suminf.    0.40155 (2) obj. -364.873 iterations 2
Cbc0038I Pass  26: suminf.    0.21507 (3) obj. -364.873 iterations 3
Cbc0038I Pass  27: suminf.    0.21068 (3) obj. -364.873 iterations 2
Cbc0038I Pass  28: suminf.    0.21193 (3) obj. -364.873 iterations 7
Cbc0038I Pass  29: suminf.    0.21193 (3) obj. -364.873 iterations 0
Cbc0038I Pass  30: suminf.    0.30558 (2) obj. -364.873 iterations 5
Cbc0038I Pass  31: suminf.    0.30558 (2) obj. -364.873 iterations 0
Cbc0038I Rounding solution of -387.302 is better than previous of -353.5

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 22 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -403.037
Cbc0038I Pass  31: suminf.    0.75235 (4) obj. -403.037 iterations 0
Cbc0038I Pass  32: suminf.    0.47210 (1) obj. -403.037 iterations 5
Cbc0038I Pass  33: suminf.    0.45338 (1) obj. -403.037 iterations 1
Cbc0038I Pass  34: suminf.    1.06572 (4) obj. -403.037 iterations 12
Cbc0038I Pass  35: suminf.    1.05381 (4) obj. -403.037 iterations 4
Cbc0038I Pass  36: suminf.    0.49827 (2) obj. -403.037 iterations 6
Cbc0038I Pass  37: suminf.    0.47590 (2) obj. -403.037 iterations 2
Cbc0038I Pass  38: suminf.    0.47590 (2) obj. -403.037 iterations 0
Cbc0038I Pass  39: suminf.    0.53551 (2) obj. -403.037 iterations 3
Cbc0038I Pass  40: suminf.    0.82655 (2) obj. -403.037 iterations 5
Cbc0038I Pass  41: suminf.    0.82655 (2) obj. -403.037 iterations 0
Cbc0038I Pass  42: suminf.    0.47210 (1) obj. -403.037 iterations 2
Cbc0038I Pass  43: suminf.    0.45338 (1) obj. -403.037 iterations 1
Cbc0038I Pass  44: suminf.    1.74566 (6) obj. -403.037 iterations 10
Cbc0038I Pass  45: suminf.    1.08395 (4) obj. -403.037 iterations 2
Cbc0038I Pass  46: suminf.    1.05324 (4) obj. -403.037 iterations 3
Cbc0038I Pass  47: suminf.    0.47210 (1) obj. -403.037 iterations 5
Cbc0038I Pass  48: suminf.    0.43766 (1) obj. -403.037 iterations 1
Cbc0038I Pass  49: suminf.    2.68067 (8) obj. -403.037 iterations 13
Cbc0038I Pass  50: suminf.    1.17675 (4) obj. -403.037 iterations 6
Cbc0038I Pass  51: suminf.    1.05230 (3) obj. -403.037 iterations 4
Cbc0038I Pass  52: suminf.    0.86246 (2) obj. -403.037 iterations 2
Cbc0038I Pass  53: suminf.    0.84766 (3) obj. -403.037 iterations 2
Cbc0038I Pass  54: suminf.    0.84766 (3) obj. -403.037 iterations 0
Cbc0038I Pass  55: suminf.    1.09545 (6) obj. -403.037 iterations 7
Cbc0038I Pass  56: suminf.    1.09545 (6) obj. -403.037 iterations 3
Cbc0038I Pass  57: suminf.    0.85038 (3) obj. -403.037 iterations 5
Cbc0038I Pass  58: suminf.    0.59319 (2) obj. -403.037 iterations 2
Cbc0038I Pass  59: suminf.    0.38382 (3) obj. -403.037 iterations 3
Cbc0038I Pass  60: suminf.    0.38382 (3) obj. -403.037 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -387.302 to -402 (0.03 seconds)
Cbc0038I Round again with cutoff of -421.619
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.97269 (4) obj. -421.619 iterations 0
Cbc0038I Pass  61: suminf.    0.68404 (3) obj. -421.619 iterations 6
Cbc0038I Pass  62: suminf.    0.68404 (3) obj. -421.619 iterations 0
Cbc0038I Pass  63: suminf.    1.31565 (3) obj. -421.619 iterations 3
Cbc0038I Pass  64: suminf.    0.79331 (2) obj. -421.619 iterations 2
Cbc0038I Pass  65: suminf.    1.88205 (6) obj. -421.619 iterations 9
Cbc0038I Pass  66: suminf.    1.82964 (5) obj. -421.619 iterations 2
Cbc0038I Pass  67: suminf.    0.75527 (3) obj. -421.619 iterations 5
Cbc0038I Pass  68: suminf.    0.62788 (3) obj. -421.619 iterations 2
Cbc0038I Pass  69: suminf.    0.88122 (4) obj. -421.619 iterations 3
Cbc0038I Pass  70: suminf.    0.88122 (4) obj. -421.619 iterations 0
Cbc0038I Pass  71: suminf.    1.12663 (4) obj. -421.619 iterations 3
Cbc0038I Pass  72: suminf.    1.05786 (4) obj. -421.619 iterations 1
Cbc0038I Pass  73: suminf.    0.88122 (4) obj. -421.619 iterations 4
Cbc0038I Pass  74: suminf.    1.59008 (6) obj. -421.619 iterations 2
Cbc0038I Pass  75: suminf.    1.31743 (5) obj. -421.619 iterations 2
Cbc0038I Pass  76: suminf.    0.88489 (4) obj. -421.619 iterations 7
Cbc0038I Pass  77: suminf.    0.88122 (4) obj. -421.619 iterations 1
Cbc0038I Pass  78: suminf.    1.12663 (4) obj. -421.619 iterations 3
Cbc0038I Pass  79: suminf.    1.05786 (4) obj. -421.619 iterations 1
Cbc0038I Pass  80: suminf.    0.88122 (4) obj. -421.619 iterations 4
Cbc0038I Pass  81: suminf.    1.21389 (6) obj. -421.619 iterations 9
Cbc0038I Pass  82: suminf.    1.21389 (6) obj. -421.619 iterations 1
Cbc0038I Pass  83: suminf.    0.77723 (3) obj. -421.619 iterations 3
Cbc0038I Pass  84: suminf.    0.74646 (3) obj. -421.619 iterations 2
Cbc0038I Pass  85: suminf.    0.74646 (3) obj. -421.619 iterations 0
Cbc0038I Pass  86: suminf.    1.01066 (6) obj. -421.619 iterations 4
Cbc0038I Pass  87: suminf.    0.92037 (4) obj. -421.619 iterations 2
Cbc0038I Pass  88: suminf.    1.24224 (7) obj. -421.619 iterations 4
Cbc0038I Pass  89: suminf.    1.15159 (6) obj. -421.619 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -402 - took 0.03 seconds
Cbc0012I Integer solution of -402 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 20 columns, reduced to 7 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -464.97723 to -464.97723 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -402, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-7) rows, 43 (-3) columns and 347 (-41) elements
Clp1000I sum of infeasibilities 1.8174e-06 - average 4.43268e-08, 25 fixed columns
Coin0506I Presolve 10 (-31) rows, 11 (-32) columns and 44 (-303) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 791.74106
Clp0000I Optimal - objective value 791.74106
Coin0511I After Postsolve, objective 791.74106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0768382 - largest nonzero change 2.9404495e-05 ( 0.0023983587%) - largest zero change 1.7029246e-05
Clp0000I Optimal - objective value 817.54368
Clp0000I Optimal - objective value 817.54368
Clp0000I Optimal - objective value 817.54368
Coin0511I After Postsolve, objective 817.54368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 817.5436768 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 43 columns (43 integer (43 of which binary)) and 362 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.794%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.25062
Cbc0038I Pass   1: suminf.    0.08091 (1) obj. -646.428 iterations 27
Cbc0038I Solution found of -492.25
Cbc0038I Rounding solution of -529.75 is better than previous of -492.25

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -529.75 to -647.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -660.474
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.20879 (4) obj. -660.474 iterations 2
Cbc0038I Pass   3: suminf.    0.42951 (1) obj. -718.942 iterations 4
Cbc0038I Pass   4: suminf.    0.24579 (1) obj. -660.474 iterations 1
Cbc0038I Pass   5: suminf.    1.52213 (6) obj. -660.474 iterations 5
Cbc0038I Pass   6: suminf.    0.35175 (2) obj. -660.474 iterations 4
Cbc0038I Pass   7: suminf.    1.47197 (7) obj. -660.474 iterations 6
Cbc0038I Pass   8: suminf.    0.35175 (2) obj. -660.474 iterations 8
Cbc0038I Pass   9: suminf.    3.48446 (8) obj. -660.474 iterations 6
Cbc0038I Pass  10: suminf.    0.32810 (3) obj. -660.474 iterations 6
Cbc0038I Pass  11: suminf.    0.32810 (3) obj. -660.474 iterations 0
Cbc0038I Pass  12: suminf.    0.42951 (1) obj. -718.942 iterations 4
Cbc0038I Pass  13: suminf.    0.24579 (1) obj. -660.474 iterations 1
Cbc0038I Pass  14: suminf.    4.36865 (12) obj. -660.474 iterations 14
Cbc0038I Pass  15: suminf.    1.04741 (3) obj. -660.474 iterations 11
Cbc0038I Pass  16: suminf.    0.44925 (1) obj. -660.474 iterations 2
Cbc0038I Pass  17: suminf.    0.44925 (1) obj. -660.474 iterations 1
Cbc0038I Pass  18: suminf.    0.42415 (1) obj. -700.765 iterations 1
Cbc0038I Pass  19: suminf.    1.67545 (6) obj. -660.474 iterations 8
Cbc0038I Pass  20: suminf.    6.00797 (14) obj. -660.474 iterations 20
Cbc0038I Pass  21: suminf.    2.02493 (5) obj. -660.474 iterations 15
Cbc0038I Pass  22: suminf.    0.49179 (3) obj. -660.474 iterations 2
Cbc0038I Pass  23: suminf.    0.49179 (3) obj. -660.474 iterations 0
Cbc0038I Pass  24: suminf.    0.42341 (1) obj. -688.502 iterations 3
Cbc0038I Pass  25: suminf.    0.33535 (1) obj. -660.474 iterations 1
Cbc0038I Pass  26: suminf.    3.19377 (8) obj. -660.474 iterations 11
Cbc0038I Pass  27: suminf.    1.78507 (4) obj. -660.474 iterations 4
Cbc0038I Pass  28: suminf.    0.62883 (2) obj. -660.474 iterations 2
Cbc0038I Pass  29: suminf.    0.43561 (1) obj. -684.133 iterations 2
Cbc0038I Pass  30: suminf.    0.36127 (1) obj. -660.474 iterations 1
Cbc0038I Pass  31: suminf.    0.67293 (3) obj. -660.474 iterations 7
Cbc0038I Rounding solution of -658 is better than previous of -647.5

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 1 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -683.378
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.47003 (4) obj. -683.378 iterations 0
Cbc0038I Pass  32: suminf.    0.42951 (1) obj. -718.942 iterations 4
Cbc0038I Pass  33: suminf.    0.31776 (1) obj. -683.378 iterations 1
Cbc0038I Pass  34: suminf.    3.08815 (8) obj. -683.378 iterations 8
Cbc0038I Pass  35: suminf.    1.14229 (3) obj. -683.378 iterations 5
Cbc0038I Pass  36: suminf.    0.46610 (1) obj. -696.586 iterations 3
Cbc0038I Pass  37: suminf.    0.42460 (1) obj. -683.378 iterations 1
Cbc0038I Pass  38: suminf.    1.35120 (7) obj. -683.378 iterations 6
Cbc0038I Pass  39: suminf.    0.75890 (4) obj. -683.378 iterations 4
Cbc0038I Pass  40: suminf.    1.26314 (6) obj. -683.378 iterations 9
Cbc0038I Pass  41: suminf.    0.27649 (4) obj. -683.378 iterations 6
Cbc0038I Pass  42: suminf.    0.36854 (1) obj. -704.537 iterations 4
Cbc0038I Pass  43: suminf.    0.30205 (1) obj. -683.378 iterations 1
Cbc0038I Pass  44: suminf.    1.75746 (5) obj. -683.378 iterations 7
Cbc0038I Pass  45: suminf.    0.45675 (2) obj. -683.378 iterations 6
Cbc0038I Pass  46: suminf.    1.23584 (5) obj. -683.378 iterations 9
Cbc0038I Pass  47: suminf.    1.16556 (4) obj. -683.378 iterations 4
Cbc0038I Pass  48: suminf.    0.96271 (3) obj. -684.563 iterations 5
Cbc0038I Pass  49: suminf.    0.58707 (2) obj. -683.378 iterations 4
Cbc0038I Pass  50: suminf.    0.17794 (1) obj. -683.378 iterations 2
Cbc0038I Pass  51: suminf.    0.20390 (1) obj. -691.642 iterations 1
Cbc0038I Pass  52: suminf.    0.95030 (5) obj. -683.378 iterations 7
Cbc0038I Pass  53: suminf.    1.94401 (8) obj. -683.378 iterations 11
Cbc0038I Pass  54: suminf.    0.24863 (3) obj. -683.378 iterations 8
Cbc0038I Pass  55: suminf.    0.35230 (3) obj. -683.378 iterations 3
Cbc0038I Pass  56: suminf.    3.22990 (13) obj. -683.378 iterations 12
Cbc0038I Pass  57: suminf.    1.04075 (3) obj. -683.378 iterations 14
Cbc0038I Pass  58: suminf.    0.36854 (1) obj. -704.537 iterations 4
Cbc0038I Pass  59: suminf.    0.30205 (1) obj. -683.378 iterations 1
Cbc0038I Pass  60: suminf.    1.77100 (7) obj. -683.378 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 43 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -658 - took 0.04 seconds
Cbc0012I Integer solution of -658 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 40 rows 43 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -666.25 found by DiveCoefficient after 28 iterations and 0 nodes (0.06 seconds)
Cbc0031I 2 added rows had average density of 6
Cbc0013I At root node, 2 cuts changed objective from -680.73391 to -666.25 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -666.25, took 28 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 20 (-5) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 2.30901e-05 - average 6.41391e-07, 4 fixed columns
Coin0506I Presolve 11 (-25) rows, 13 (-7) columns and 42 (-62) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 2.6572727 - largest nonzero change 2.724971e-05 ( 0.0022179273%) - largest zero change 1.8314621e-05
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Coin0511I After Postsolve, objective 481.8145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Clp0000I Optimal - objective value 481.8145
Coin0511I After Postsolve, objective 481.8145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 481.8144999 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 20 columns (19 integer (19 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.63232
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -330.5 iterations 6
Cbc0038I Solution found of -330.5
Cbc0038I Relaxing continuous gives -330.5
Cbc0038I Rounding solution of -353.5 is better than previous of -330.5

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -364.873
Cbc0038I Pass   2: suminf.    0.29981 (4) obj. -364.873 iterations 2
Cbc0038I Pass   3: suminf.    0.47210 (1) obj. -364.873 iterations 5
Cbc0038I Pass   4: suminf.    0.33346 (1) obj. -364.873 iterations 1
Cbc0038I Pass   5: suminf.    0.70909 (2) obj. -364.873 iterations 2
Cbc0038I Pass   6: suminf.    0.43386 (1) obj. -364.873 iterations 2
Cbc0038I Pass   7: suminf.    0.39866 (1) obj. -364.873 iterations 1
Cbc0038I Pass   8: suminf.    0.51947 (2) obj. -364.873 iterations 6
Cbc0038I Pass   9: suminf.    0.51947 (2) obj. -364.873 iterations 1
Cbc0038I Pass  10: suminf.    0.37196 (1) obj. -364.873 iterations 3
Cbc0038I Pass  11: suminf.    0.37116 (1) obj. -364.873 iterations 1
Cbc0038I Pass  12: suminf.    1.11468 (6) obj. -364.873 iterations 9
Cbc0038I Pass  13: suminf.    0.27712 (1) obj. -369.308 iterations 9
Cbc0038I Pass  14: suminf.    0.29105 (1) obj. -364.873 iterations 1
Cbc0038I Pass  15: suminf.    0.39365 (2) obj. -364.873 iterations 3
Cbc0038I Pass  16: suminf.    0.39365 (2) obj. -364.873 iterations 2
Cbc0038I Pass  17: suminf.    0.22460 (2) obj. -364.873 iterations 7
Cbc0038I Pass  18: suminf.    0.22460 (2) obj. -364.873 iterations 0
Cbc0038I Pass  19: suminf.    0.25184 (2) obj. -364.873 iterations 2
Cbc0038I Pass  20: suminf.    0.25184 (2) obj. -364.873 iterations 0
Cbc0038I Pass  21: suminf.    0.54943 (4) obj. -364.873 iterations 3
Cbc0038I Pass  22: suminf.    0.44809 (4) obj. -364.873 iterations 5
Cbc0038I Pass  23: suminf.    0.21068 (3) obj. -364.873 iterations 5
Cbc0038I Pass  24: suminf.    1.10532 (3) obj. -364.873 iterations 2
Cbc0038I Pass  25: suminf.    0.40155 (2) obj. -364.873 iterations 2
Cbc0038I Pass  26: suminf.    0.21507 (3) obj. -364.873 iterations 3
Cbc0038I Pass  27: suminf.    0.21068 (3) obj. -364.873 iterations 2
Cbc0038I Pass  28: suminf.    0.21193 (3) obj. -364.873 iterations 7
Cbc0038I Pass  29: suminf.    0.21193 (3) obj. -364.873 iterations 0
Cbc0038I Pass  30: suminf.    0.30558 (2) obj. -364.873 iterations 5
Cbc0038I Pass  31: suminf.    0.30558 (2) obj. -364.873 iterations 0
Cbc0038I Rounding solution of -387.302 is better than previous of -353.5

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 22 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -403.037
Cbc0038I Pass  31: suminf.    0.75235 (4) obj. -403.037 iterations 0
Cbc0038I Pass  32: suminf.    0.47210 (1) obj. -403.037 iterations 5
Cbc0038I Pass  33: suminf.    0.45338 (1) obj. -403.037 iterations 1
Cbc0038I Pass  34: suminf.    1.06572 (4) obj. -403.037 iterations 12
Cbc0038I Pass  35: suminf.    1.05381 (4) obj. -403.037 iterations 4
Cbc0038I Pass  36: suminf.    0.49827 (2) obj. -403.037 iterations 6
Cbc0038I Pass  37: suminf.    0.47590 (2) obj. -403.037 iterations 2
Cbc0038I Pass  38: suminf.    0.47590 (2) obj. -403.037 iterations 0
Cbc0038I Pass  39: suminf.    0.53551 (2) obj. -403.037 iterations 3
Cbc0038I Pass  40: suminf.    0.82655 (2) obj. -403.037 iterations 5
Cbc0038I Pass  41: suminf.    0.82655 (2) obj. -403.037 iterations 0
Cbc0038I Pass  42: suminf.    0.47210 (1) obj. -403.037 iterations 2
Cbc0038I Pass  43: suminf.    0.45338 (1) obj. -403.037 iterations 1
Cbc0038I Pass  44: suminf.    1.74566 (6) obj. -403.037 iterations 10
Cbc0038I Pass  45: suminf.    1.08395 (4) obj. -403.037 iterations 2
Cbc0038I Pass  46: suminf.    1.05324 (4) obj. -403.037 iterations 3
Cbc0038I Pass  47: suminf.    0.47210 (1) obj. -403.037 iterations 5
Cbc0038I Pass  48: suminf.    0.43766 (1) obj. -403.037 iterations 1
Cbc0038I Pass  49: suminf.    2.68067 (8) obj. -403.037 iterations 13
Cbc0038I Pass  50: suminf.    1.17675 (4) obj. -403.037 iterations 6
Cbc0038I Pass  51: suminf.    1.05230 (3) obj. -403.037 iterations 4
Cbc0038I Pass  52: suminf.    0.86246 (2) obj. -403.037 iterations 2
Cbc0038I Pass  53: suminf.    0.84766 (3) obj. -403.037 iterations 2
Cbc0038I Pass  54: suminf.    0.84766 (3) obj. -403.037 iterations 0
Cbc0038I Pass  55: suminf.    1.09545 (6) obj. -403.037 iterations 7
Cbc0038I Pass  56: suminf.    1.09545 (6) obj. -403.037 iterations 3
Cbc0038I Pass  57: suminf.    0.85038 (3) obj. -403.037 iterations 5
Cbc0038I Pass  58: suminf.    0.59319 (2) obj. -403.037 iterations 2
Cbc0038I Pass  59: suminf.    0.38382 (3) obj. -403.037 iterations 3
Cbc0038I Pass  60: suminf.    0.38382 (3) obj. -403.037 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -387.302 to -402 (0.03 seconds)
Cbc0038I Round again with cutoff of -421.619
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.97269 (4) obj. -421.619 iterations 0
Cbc0038I Pass  61: suminf.    0.68404 (3) obj. -421.619 iterations 6
Cbc0038I Pass  62: suminf.    0.68404 (3) obj. -421.619 iterations 0
Cbc0038I Pass  63: suminf.    1.31565 (3) obj. -421.619 iterations 3
Cbc0038I Pass  64: suminf.    0.79331 (2) obj. -421.619 iterations 2
Cbc0038I Pass  65: suminf.    1.88205 (6) obj. -421.619 iterations 9
Cbc0038I Pass  66: suminf.    1.82964 (5) obj. -421.619 iterations 2
Cbc0038I Pass  67: suminf.    0.75527 (3) obj. -421.619 iterations 5
Cbc0038I Pass  68: suminf.    0.62788 (3) obj. -421.619 iterations 2
Cbc0038I Pass  69: suminf.    0.88122 (4) obj. -421.619 iterations 3
Cbc0038I Pass  70: suminf.    0.88122 (4) obj. -421.619 iterations 0
Cbc0038I Pass  71: suminf.    1.12663 (4) obj. -421.619 iterations 3
Cbc0038I Pass  72: suminf.    1.05786 (4) obj. -421.619 iterations 1
Cbc0038I Pass  73: suminf.    0.88122 (4) obj. -421.619 iterations 4
Cbc0038I Pass  74: suminf.    1.59008 (6) obj. -421.619 iterations 2
Cbc0038I Pass  75: suminf.    1.31743 (5) obj. -421.619 iterations 2
Cbc0038I Pass  76: suminf.    0.88489 (4) obj. -421.619 iterations 7
Cbc0038I Pass  77: suminf.    0.88122 (4) obj. -421.619 iterations 1
Cbc0038I Pass  78: suminf.    1.12663 (4) obj. -421.619 iterations 3
Cbc0038I Pass  79: suminf.    1.05786 (4) obj. -421.619 iterations 1
Cbc0038I Pass  80: suminf.    0.88122 (4) obj. -421.619 iterations 4
Cbc0038I Pass  81: suminf.    1.21389 (6) obj. -421.619 iterations 9
Cbc0038I Pass  82: suminf.    1.21389 (6) obj. -421.619 iterations 1
Cbc0038I Pass  83: suminf.    0.77723 (3) obj. -421.619 iterations 3
Cbc0038I Pass  84: suminf.    0.74646 (3) obj. -421.619 iterations 2
Cbc0038I Pass  85: suminf.    0.74646 (3) obj. -421.619 iterations 0
Cbc0038I Pass  86: suminf.    1.01066 (6) obj. -421.619 iterations 4
Cbc0038I Pass  87: suminf.    0.92037 (4) obj. -421.619 iterations 2
Cbc0038I Pass  88: suminf.    1.24224 (7) obj. -421.619 iterations 4
Cbc0038I Pass  89: suminf.    1.15159 (6) obj. -421.619 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 20 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -402 - took 0.02 seconds
Cbc0012I Integer solution of -402 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 20 columns, reduced to 7 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -464.97723 to -464.97723 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -402, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 40 (-7) columns and 288 (-101) elements
Clp1000I sum of infeasibilities 6.72108e-07 - average 1.76871e-08, 35 fixed columns
Coin0506I Presolve 0 (-38) rows, 0 (-40) columns and 0 (-288) elements
Clp0000I Optimal - objective value 365.08738
Clp0000I Optimal - objective value 365.08738
Coin0511I After Postsolve, objective 365.08738, infeasibilities - dual 5.4176828 (1), primal 0 (0)
Coin0512I Presolved model was optimal, full model needs cleaning up
Clp0014I Perturbing problem by 0.001% of 1.5171956 - largest nonzero change 1.4912486e-05 ( 0.0014912486%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 556.01885
Clp0000I Optimal - objective value 556.01885
Clp0000I Optimal - objective value 556.01885
Coin0511I After Postsolve, objective 556.01885, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 556.0188521 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 40 columns (40 integer (40 of which binary)) and 298 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.117%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.64715
Cbc0038I Pass   1: suminf.    0.97056 (5) obj. -286.962 iterations 12
Cbc0038I Pass   2: suminf.    0.97056 (5) obj. -286.962 iterations 0
Cbc0038I Solution found of 3.5
Cbc0038I Rounding solution of -107.25 is better than previous of 3.5

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 40 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -107.25 to -324 (0.01 seconds)
Cbc0038I Round again with cutoff of -343.064
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.80557 (11) obj. -343.064 iterations 1
Cbc0038I Pass   4: suminf.    1.80557 (11) obj. -343.064 iterations 0
Cbc0038I Pass   5: suminf.    0.35958 (1) obj. -343.064 iterations 14
Cbc0038I Pass   6: suminf.    0.26927 (1) obj. -371.805 iterations 1
Cbc0038I Pass   7: suminf.    1.30860 (4) obj. -369.61 iterations 5
Cbc0038I Pass   8: suminf.    1.30860 (4) obj. -369.61 iterations 1
Cbc0038I Pass   9: suminf.    0.37529 (1) obj. -343.064 iterations 4
Cbc0038I Pass  10: suminf.    0.33024 (1) obj. -357.4 iterations 1
Cbc0038I Pass  11: suminf.    2.37436 (9) obj. -343.064 iterations 8
Cbc0038I Pass  12: suminf.    2.22530 (7) obj. -387.341 iterations 3
Cbc0038I Pass  13: suminf.    2.73942 (10) obj. -343.064 iterations 7
Cbc0038I Pass  14: suminf.    2.73778 (10) obj. -356.913 iterations 3
Cbc0038I Pass  15: suminf.    0.36380 (2) obj. -343.064 iterations 9
Cbc0038I Pass  16: suminf.    0.33024 (1) obj. -348.4 iterations 1
Cbc0038I Pass  17: suminf.    0.34701 (1) obj. -343.064 iterations 1
Cbc0038I Pass  18: suminf.    1.50121 (5) obj. -343.064 iterations 6
Cbc0038I Pass  19: suminf.    1.15892 (4) obj. -343.064 iterations 1
Cbc0038I Pass  20: suminf.    0.29164 (1) obj. -343.064 iterations 3
Cbc0038I Pass  21: suminf.    0.48683 (1) obj. -405.183 iterations 1
Cbc0038I Pass  22: suminf.    1.83528 (5) obj. -343.064 iterations 11
Cbc0038I Pass  23: suminf.    0.53637 (2) obj. -377.915 iterations 8
Cbc0038I Pass  24: suminf.    0.28102 (1) obj. -343.064 iterations 2
Cbc0038I Pass  25: suminf.    0.19000 (1) obj. -372.033 iterations 1
Cbc0038I Pass  26: suminf.    2.11349 (7) obj. -343.064 iterations 12
Cbc0038I Pass  27: suminf.    1.72104 (5) obj. -343.064 iterations 3
Cbc0038I Pass  28: suminf.    0.42164 (1) obj. -343.064 iterations 4
Cbc0038I Pass  29: suminf.    0.28756 (1) obj. -385.734 iterations 1
Cbc0038I Pass  30: suminf.    1.58495 (7) obj. -343.064 iterations 13
Cbc0038I Pass  31: suminf.    0.16232 (2) obj. -343.064 iterations 6
Cbc0038I Pass  32: suminf.    0.36488 (1) obj. -413.372 iterations 2
Cbc0038I Rounding solution of -395.5 is better than previous of -324

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 40 columns, reduced to 24 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -419.079
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.09561 (10) obj. -429.74 iterations 1
Cbc0038I Pass  33: suminf.    2.09561 (10) obj. -429.74 iterations 0
Cbc0038I Pass  34: suminf.    1.37695 (4) obj. -419.079 iterations 11
Cbc0038I Pass  35: suminf.    0.74285 (2) obj. -452.673 iterations 2
Cbc0038I Pass  36: suminf.    0.49622 (1) obj. -419.079 iterations 2
Cbc0038I Pass  37: suminf.    0.40951 (1) obj. -446.673 iterations 1
Cbc0038I Pass  38: suminf.    1.67133 (4) obj. -441.366 iterations 6
Cbc0038I Pass  39: suminf.    0.43390 (1) obj. -432.411 iterations 5
Cbc0038I Pass  40: suminf.    0.47579 (1) obj. -419.079 iterations 1
Cbc0038I Pass  41: suminf.    1.33775 (4) obj. -421.57 iterations 5
Cbc0038I Pass  42: suminf.    0.54369 (2) obj. -419.079 iterations 6
Cbc0038I Pass  43: suminf.    0.57837 (2) obj. -419.079 iterations 2
Cbc0038I Pass  44: suminf.    1.71130 (6) obj. -419.079 iterations 16
Cbc0038I Pass  45: suminf.    1.71130 (6) obj. -419.079 iterations 1
Cbc0038I Pass  46: suminf.    0.88936 (4) obj. -419.079 iterations 4
Cbc0038I Pass  47: suminf.    0.88936 (4) obj. -419.079 iterations 0
Cbc0038I Pass  48: suminf.    0.52514 (2) obj. -419.079 iterations 2
Cbc0038I Pass  49: suminf.    0.51223 (2) obj. -419.079 iterations 1
Cbc0038I Pass  50: suminf.    2.02886 (6) obj. -419.079 iterations 8
Cbc0038I Pass  51: suminf.    1.16967 (3) obj. -426.709 iterations 5
Cbc0038I Pass  52: suminf.    0.51575 (2) obj. -419.079 iterations 3
Cbc0038I Pass  53: suminf.    2.40986 (7) obj. -419.079 iterations 10
Cbc0038I Pass  54: suminf.    1.92802 (5) obj. -419.079 iterations 4
Cbc0038I Pass  55: suminf.    1.02884 (3) obj. -419.079 iterations 5
Cbc0038I Pass  56: suminf.    0.93019 (3) obj. -419.079 iterations 1
Cbc0038I Pass  57: suminf.    2.06736 (5) obj. -419.079 iterations 8
Cbc0038I Pass  58: suminf.    1.22589 (3) obj. -451.997 iterations 3
Cbc0038I Pass  59: suminf.    0.42866 (1) obj. -419.079 iterations 3
Cbc0038I Pass  60: suminf.    0.39732 (1) obj. -429.054 iterations 1
Cbc0038I Pass  61: suminf.    0.79629 (3) obj. -419.079 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -395.5 - took 0.02 seconds
Cbc0012I Integer solution of -395.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -402 found by DiveCoefficient after 24 iterations and 0 nodes (0.03 seconds)
Cbc0013I At root node, 0 cuts changed objective from -418.9 to -402 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -402, took 24 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

