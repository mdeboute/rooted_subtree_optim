Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 56 (-22) columns and 305 (-148) elements
Clp1000I sum of infeasibilities 0.000136072 - average 1.36072e-06, 47 fixed columns
Coin0506I Presolve 14 (-86) rows, 8 (-48) columns and 38 (-267) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 4086.4637
Clp0000I Optimal - objective value 4086.4637
Coin0511I After Postsolve, objective 4086.4637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4086.4637
Clp0000I Optimal - objective value 4086.4637
Clp0000I Optimal - objective value 4086.4637
Coin0511I After Postsolve, objective 4086.4637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4086.46368 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 56 columns (55 integer (55 of which binary)) and 323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.975%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.63473
Cbc0038I Pass   1: suminf.    0.35294 (6) obj. -2257.14 iterations 2
Cbc0038I Pass   2: suminf.    0.35294 (6) obj. -2257.14 iterations 0
Cbc0038I Solution found of -2249.08
Cbc0038I Relaxing continuous gives -2286.79
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 17 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -2286.79 to -2295.35 (0.01 seconds)
Cbc0038I Round again with cutoff of -2466.98
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.56792 (7) obj. -2466.98 iterations 1
Cbc0038I Pass   4: suminf.    0.56792 (7) obj. -2466.98 iterations 0
Cbc0038I Pass   5: suminf.    0.54631 (7) obj. -2466.98 iterations 14
Cbc0038I Pass   6: suminf.    0.54631 (7) obj. -2466.98 iterations 0
Cbc0038I Pass   7: suminf.    2.13779 (11) obj. -2466.98 iterations 12
Cbc0038I Pass   8: suminf.    0.61670 (7) obj. -2466.98 iterations 9
Cbc0038I Pass   9: suminf.    2.98394 (7) obj. -2466.98 iterations 4
Cbc0038I Pass  10: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  11: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  12: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Pass  13: suminf.    0.64626 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  14: suminf.    2.98394 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  15: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  16: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  17: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Pass  18: suminf.    0.64626 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  19: suminf.    2.98394 (7) obj. -2466.98 iterations 4
Cbc0038I Pass  20: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  21: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  22: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Pass  23: suminf.    0.64626 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  24: suminf.    2.98394 (7) obj. -2466.98 iterations 4
Cbc0038I Pass  25: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  26: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  27: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Pass  28: suminf.    0.64626 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  29: suminf.    2.98394 (7) obj. -2466.98 iterations 4
Cbc0038I Pass  30: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  31: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  32: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Rounding solution of -2303.9 is better than previous of -2295.35

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 27 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2775.92
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.88441 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  33: suminf.    0.88441 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  34: suminf.    1.48773 (7) obj. -2775.92 iterations 14
Cbc0038I Pass  35: suminf.    1.48773 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  36: suminf.    2.21554 (9) obj. -2775.92 iterations 8
Cbc0038I Pass  37: suminf.    1.41900 (7) obj. -2775.92 iterations 3
Cbc0038I Pass  38: suminf.    1.82739 (7) obj. -2775.92 iterations 6
Cbc0038I Pass  39: suminf.    1.82739 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  40: suminf.    1.46694 (7) obj. -2775.92 iterations 14
Cbc0038I Pass  41: suminf.    1.46694 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  42: suminf.    1.67775 (11) obj. -2775.92 iterations 25
Cbc0038I Pass  43: suminf.    1.53165 (7) obj. -2775.92 iterations 8
Cbc0038I Pass  44: suminf.    2.84591 (7) obj. -2775.92 iterations 5
Cbc0038I Pass  45: suminf.    1.54708 (7) obj. -2775.92 iterations 3
Cbc0038I Pass  46: suminf.    2.84591 (7) obj. -2775.92 iterations 4
Cbc0038I Pass  47: suminf.    3.36182 (11) obj. -2775.92 iterations 12
Cbc0038I Pass  48: suminf.    2.08470 (8) obj. -2775.92 iterations 8
Cbc0038I Pass  49: suminf.    1.46651 (7) obj. -2775.92 iterations 5
Cbc0038I Pass  50: suminf.    1.46651 (7) obj. -2775.92 iterations 1
Cbc0038I Pass  51: suminf.    2.74278 (7) obj. -2775.92 iterations 2
Cbc0038I Pass  52: suminf.    2.74278 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  53: suminf.    1.46651 (7) obj. -2775.92 iterations 1
Cbc0038I Pass  54: suminf.    2.34437 (12) obj. -2775.92 iterations 10
Cbc0038I Pass  55: suminf.    1.23935 (6) obj. -2775.92 iterations 8
Cbc0038I Pass  56: suminf.    3.64862 (12) obj. -2775.92 iterations 8
Cbc0038I Pass  57: suminf.    1.48123 (7) obj. -2775.92 iterations 14
Cbc0038I Pass  58: suminf.    2.54521 (8) obj. -2775.92 iterations 4
Cbc0038I Pass  59: suminf.    2.90849 (9) obj. -2775.92 iterations 6
Cbc0038I Pass  60: suminf.    1.09500 (5) obj. -2775.92 iterations 9
Cbc0038I Pass  61: suminf.    1.09500 (5) obj. -2775.92 iterations 0
Cbc0038I Rounding solution of -2314.91 is better than previous of -2303.9

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 50 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -2314.91 to -2343.05 (0.04 seconds)
Cbc0038I Round again with cutoff of -3146.64
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.26420 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  62: suminf.    1.26420 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  63: suminf.    2.65099 (7) obj. -3146.64 iterations 14
Cbc0038I Pass  64: suminf.    2.65099 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  65: suminf.    3.86747 (10) obj. -3146.64 iterations 15
Cbc0038I Pass  66: suminf.    2.70483 (7) obj. -3146.64 iterations 8
Cbc0038I Pass  67: suminf.    3.16354 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  68: suminf.    3.16354 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  69: suminf.    2.70483 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  70: suminf.    3.41230 (9) obj. -3146.64 iterations 10
Cbc0038I Pass  71: suminf.    2.70973 (8) obj. -3146.64 iterations 14
Cbc0038I Pass  72: suminf.    3.08174 (7) obj. -3146.64 iterations 2
Cbc0038I Pass  73: suminf.    2.64551 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  74: suminf.    3.74513 (11) obj. -3146.64 iterations 6
Cbc0038I Pass  75: suminf.    2.28308 (6) obj. -3146.64 iterations 14
Cbc0038I Pass  76: suminf.    3.19918 (7) obj. -3146.64 iterations 2
Cbc0038I Pass  77: suminf.    3.19918 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  78: suminf.    2.67968 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  79: suminf.    2.67968 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  80: suminf.    3.14249 (9) obj. -3146.64 iterations 7
Cbc0038I Pass  81: suminf.    2.70973 (8) obj. -3146.64 iterations 16
Cbc0038I Pass  82: suminf.    3.08174 (7) obj. -3146.64 iterations 2
Cbc0038I Pass  83: suminf.    2.64551 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  84: suminf.    3.94756 (12) obj. -3146.64 iterations 9
Cbc0038I Pass  85: suminf.    2.15016 (6) obj. -3146.64 iterations 15
Cbc0038I Pass  86: suminf.    3.23522 (7) obj. -3146.64 iterations 3
Cbc0038I Pass  87: suminf.    3.23522 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  88: suminf.    2.52518 (7) obj. -3146.64 iterations 11
Cbc0038I Pass  89: suminf.    2.52518 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  90: suminf.    2.78364 (8) obj. -3146.64 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2343.05 - took 0.04 seconds
Cbc0012I Integer solution of -2343.0524 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 100 rows 56 columns, reduced to 23 rows 13 columns
Cbc0031I 10 added rows had average density of 4.8
Cbc0013I At root node, 35 cuts changed objective from -4011.657 to -2343.0524 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 87 row cuts average 3.5 elements, 19 column cuts (19 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2343.05242, took 97 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 107 (-45) columns and 1571 (-1732) elements
Clp1000I sum of infeasibilities 2.33302e-05 - average 2.40518e-07, 93 fixed columns
Coin0506I Presolve 10 (-87) rows, 12 (-95) columns and 40 (-1531) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 4053.8637
Clp0000I Optimal - objective value 4053.8637
Coin0511I After Postsolve, objective 4053.8637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0352714 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 4144.0434
Clp0000I Optimal - objective value 4144.0434
Clp0000I Optimal - objective value 4144.0434
Coin0511I After Postsolve, objective 4144.0434, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4144.043379 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 107 columns (107 integer (107 of which binary)) and 1584 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.477%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 14.8851
Cbc0038I Pass   1: suminf.    1.20838 (18) obj. -2295.96 iterations 6
Cbc0038I Pass   2: suminf.    1.20838 (18) obj. -2295.96 iterations 0
Cbc0038I Pass   3: suminf.    0.38460 (8) obj. -2274.8 iterations 10
Cbc0038I Solution found of -2264.35
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 49 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -2264.35 to -2295.35 (0.03 seconds)
Cbc0038I Round again with cutoff of -2477.22
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.62911 (44) obj. -2477.22 iterations 3
Cbc0038I Pass   5: suminf.    2.62911 (44) obj. -2477.22 iterations 0
Cbc0038I Pass   6: suminf.    0.79373 (24) obj. -2477.22 iterations 24
Cbc0038I Pass   7: suminf.    0.79373 (24) obj. -2477.22 iterations 0
Cbc0038I Pass   8: suminf.    0.84782 (14) obj. -2477.22 iterations 13
Cbc0038I Pass   9: suminf.    0.74548 (18) obj. -2477.22 iterations 2
Cbc0038I Pass  10: suminf.    0.76835 (7) obj. -2477.22 iterations 13
Cbc0038I Pass  11: suminf.    0.76835 (7) obj. -2477.22 iterations 0
Cbc0038I Pass  12: suminf.    0.57270 (7) obj. -2477.22 iterations 6
Cbc0038I Pass  13: suminf.    0.57270 (7) obj. -2477.22 iterations 0
Cbc0038I Pass  14: suminf.    0.94361 (12) obj. -2477.22 iterations 20
Cbc0038I Pass  15: suminf.    0.94361 (12) obj. -2477.22 iterations 5
Cbc0038I Pass  16: suminf.    1.42623 (3) obj. -3324.93 iterations 13
Cbc0038I Pass  17: suminf.    0.32066 (3) obj. -2477.22 iterations 1
Cbc0038I Pass  18: suminf.    0.57359 (7) obj. -2477.22 iterations 4
Cbc0038I Pass  19: suminf.    0.57359 (7) obj. -2477.22 iterations 0
Cbc0038I Pass  20: suminf.    0.77138 (7) obj. -2477.22 iterations 2
Cbc0038I Pass  21: suminf.    0.77138 (7) obj. -2477.22 iterations 0
Cbc0038I Pass  22: suminf.    3.16089 (24) obj. -2477.22 iterations 34
Cbc0038I Pass  23: suminf.    1.98215 (22) obj. -2477.22 iterations 8
Cbc0038I Pass  24: suminf.    2.23606 (8) obj. -2883.66 iterations 25
Cbc0038I Pass  25: suminf.    0.76368 (7) obj. -2477.22 iterations 3
Cbc0038I Pass  26: suminf.    1.53830 (15) obj. -2477.22 iterations 11
Cbc0038I Pass  27: suminf.    1.28576 (13) obj. -2477.22 iterations 3
Cbc0038I Pass  28: suminf.    2.25823 (8) obj. -2825.22 iterations 12
Cbc0038I Pass  29: suminf.    0.74362 (7) obj. -2477.22 iterations 3
Cbc0038I Pass  30: suminf.    2.62370 (8) obj. -2477.22 iterations 4
Cbc0038I Pass  31: suminf.    1.90500 (15) obj. -2477.22 iterations 14
Cbc0038I Pass  32: suminf.    1.90500 (15) obj. -2477.22 iterations 1
Cbc0038I Pass  33: suminf.    2.62500 (7) obj. -3098.58 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 55 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -2295.35 to -2308.23 (0.05 seconds)
Cbc0038I Round again with cutoff of -2804.58
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.27242 (44) obj. -2804.58 iterations 0
Cbc0038I Pass  34: suminf.    5.27242 (44) obj. -2804.58 iterations 0
Cbc0038I Pass  35: suminf.    2.38246 (26) obj. -2804.58 iterations 24
Cbc0038I Pass  36: suminf.    2.38246 (26) obj. -2804.58 iterations 0
Cbc0038I Pass  37: suminf.    0.89611 (8) obj. -2804.58 iterations 26
Cbc0038I Pass  38: suminf.    0.89611 (8) obj. -2804.58 iterations 0
Cbc0038I Pass  39: suminf.    1.76084 (7) obj. -2804.58 iterations 3
Cbc0038I Pass  40: suminf.    1.76084 (7) obj. -2804.58 iterations 0
Cbc0038I Pass  41: suminf.    0.86589 (7) obj. -2804.58 iterations 6
Cbc0038I Pass  42: suminf.    0.86589 (7) obj. -2804.58 iterations 0
Cbc0038I Pass  43: suminf.    3.59317 (14) obj. -2804.58 iterations 21
Cbc0038I Pass  44: suminf.    3.30696 (14) obj. -2804.58 iterations 5
Cbc0038I Pass  45: suminf.    1.75651 (7) obj. -2804.58 iterations 11
Cbc0038I Pass  46: suminf.    1.75651 (7) obj. -2804.58 iterations 1
Cbc0038I Pass  47: suminf.    2.59552 (7) obj. -2813.64 iterations 9
Cbc0038I Pass  48: suminf.    2.58792 (7) obj. -2804.58 iterations 3
Cbc0038I Pass  49: suminf.    1.75651 (7) obj. -2804.58 iterations 5
Cbc0038I Pass  50: suminf.    3.88838 (20) obj. -2804.58 iterations 17
Cbc0038I Pass  51: suminf.    2.89602 (19) obj. -2804.58 iterations 3
Cbc0038I Pass  52: suminf.    3.45679 (7) obj. -3402.21 iterations 15
Cbc0038I Pass  53: suminf.    2.26435 (8) obj. -2804.58 iterations 2
Cbc0038I Pass  54: suminf.    2.26435 (8) obj. -2804.58 iterations 0
Cbc0038I Pass  55: suminf.    1.75741 (7) obj. -2804.58 iterations 3
Cbc0038I Pass  56: suminf.    1.75741 (7) obj. -2804.58 iterations 1
Cbc0038I Pass  57: suminf.    2.27005 (7) obj. -3041.81 iterations 7
Cbc0038I Pass  58: suminf.    2.07114 (7) obj. -2804.58 iterations 1
Cbc0038I Pass  59: suminf.    1.75741 (7) obj. -2804.58 iterations 6
Cbc0038I Pass  60: suminf.    3.82699 (19) obj. -2804.58 iterations 17
Cbc0038I Pass  61: suminf.    2.77666 (16) obj. -2804.58 iterations 6
Cbc0038I Pass  62: suminf.    2.06419 (11) obj. -2804.58 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 107 columns, reduced to 52 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2308.23 - took 0.05 seconds
Cbc0012I Integer solution of -2308.2338 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0012I Integer solution of -2340.3952 found by DiveCoefficient after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 97 rows 107 columns, reduced to 49 rows 51 columns
Cbc0012I Integer solution of -2351.6451 found by DiveCoefficient after 470 iterations and 0 nodes (0.58 seconds)
Cbc0031I 47 added rows had average density of 18.021277
Cbc0013I At root node, 47 cuts changed objective from -4112.329 to -2360.4549 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 1321 row cuts average 3.5 elements, 11 column cuts (11 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 318 row cuts average 46.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 488 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 446 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.206 seconds - new frequency is -100
Cbc0012I Integer solution of -2352.2472 found by rounding after 631 iterations and 1 nodes (0.63 seconds)
Cbc0010I After 1 nodes, 2 on tree, -2352.2472 best solution, best possible -2360.238 (0.63 seconds)
Cbc0012I Integer solution of -2352.5065 found by rounding after 665 iterations and 2 nodes (0.64 seconds)
Cbc0001I Search completed - best objective -2352.50649, took 697 iterations and 6 nodes (0.64 seconds)
Cbc0032I Strong branching done 110 times (1417 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.64

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 56 (-22) columns and 305 (-148) elements
Clp1000I sum of infeasibilities 0.000136072 - average 1.36072e-06, 47 fixed columns
Coin0506I Presolve 14 (-86) rows, 8 (-48) columns and 38 (-267) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 4086.4637
Clp0000I Optimal - objective value 4086.4637
Coin0511I After Postsolve, objective 4086.4637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4086.4637
Clp0000I Optimal - objective value 4086.4637
Clp0000I Optimal - objective value 4086.4637
Coin0511I After Postsolve, objective 4086.4637, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4086.46368 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 56 columns (55 integer (55 of which binary)) and 323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.975%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.63473
Cbc0038I Pass   1: suminf.    0.35294 (6) obj. -2257.14 iterations 2
Cbc0038I Pass   2: suminf.    0.35294 (6) obj. -2257.14 iterations 0
Cbc0038I Solution found of -2249.08
Cbc0038I Relaxing continuous gives -2286.79
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 17 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -2286.79 to -2295.35 (0.01 seconds)
Cbc0038I Round again with cutoff of -2466.98
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.56792 (7) obj. -2466.98 iterations 1
Cbc0038I Pass   4: suminf.    0.56792 (7) obj. -2466.98 iterations 0
Cbc0038I Pass   5: suminf.    0.54631 (7) obj. -2466.98 iterations 14
Cbc0038I Pass   6: suminf.    0.54631 (7) obj. -2466.98 iterations 0
Cbc0038I Pass   7: suminf.    2.13779 (11) obj. -2466.98 iterations 12
Cbc0038I Pass   8: suminf.    0.61670 (7) obj. -2466.98 iterations 9
Cbc0038I Pass   9: suminf.    2.98394 (7) obj. -2466.98 iterations 4
Cbc0038I Pass  10: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  11: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  12: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Pass  13: suminf.    0.64626 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  14: suminf.    2.98394 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  15: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  16: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  17: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Pass  18: suminf.    0.64626 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  19: suminf.    2.98394 (7) obj. -2466.98 iterations 4
Cbc0038I Pass  20: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  21: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  22: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Pass  23: suminf.    0.64626 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  24: suminf.    2.98394 (7) obj. -2466.98 iterations 4
Cbc0038I Pass  25: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  26: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  27: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Pass  28: suminf.    0.64626 (7) obj. -2466.98 iterations 3
Cbc0038I Pass  29: suminf.    2.98394 (7) obj. -2466.98 iterations 4
Cbc0038I Pass  30: suminf.    1.58991 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  31: suminf.    0.46433 (7) obj. -2466.98 iterations 2
Cbc0038I Pass  32: suminf.    3.01796 (7) obj. -3249.25 iterations 7
Cbc0038I Rounding solution of -2303.9 is better than previous of -2295.35

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 27 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2775.92
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.88441 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  33: suminf.    0.88441 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  34: suminf.    1.48773 (7) obj. -2775.92 iterations 14
Cbc0038I Pass  35: suminf.    1.48773 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  36: suminf.    2.21554 (9) obj. -2775.92 iterations 8
Cbc0038I Pass  37: suminf.    1.41900 (7) obj. -2775.92 iterations 3
Cbc0038I Pass  38: suminf.    1.82739 (7) obj. -2775.92 iterations 6
Cbc0038I Pass  39: suminf.    1.82739 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  40: suminf.    1.46694 (7) obj. -2775.92 iterations 14
Cbc0038I Pass  41: suminf.    1.46694 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  42: suminf.    1.67775 (11) obj. -2775.92 iterations 25
Cbc0038I Pass  43: suminf.    1.53165 (7) obj. -2775.92 iterations 8
Cbc0038I Pass  44: suminf.    2.84591 (7) obj. -2775.92 iterations 5
Cbc0038I Pass  45: suminf.    1.54708 (7) obj. -2775.92 iterations 3
Cbc0038I Pass  46: suminf.    2.84591 (7) obj. -2775.92 iterations 4
Cbc0038I Pass  47: suminf.    3.36182 (11) obj. -2775.92 iterations 12
Cbc0038I Pass  48: suminf.    2.08470 (8) obj. -2775.92 iterations 8
Cbc0038I Pass  49: suminf.    1.46651 (7) obj. -2775.92 iterations 5
Cbc0038I Pass  50: suminf.    1.46651 (7) obj. -2775.92 iterations 1
Cbc0038I Pass  51: suminf.    2.74278 (7) obj. -2775.92 iterations 2
Cbc0038I Pass  52: suminf.    2.74278 (7) obj. -2775.92 iterations 0
Cbc0038I Pass  53: suminf.    1.46651 (7) obj. -2775.92 iterations 1
Cbc0038I Pass  54: suminf.    2.34437 (12) obj. -2775.92 iterations 10
Cbc0038I Pass  55: suminf.    1.23935 (6) obj. -2775.92 iterations 8
Cbc0038I Pass  56: suminf.    3.64862 (12) obj. -2775.92 iterations 8
Cbc0038I Pass  57: suminf.    1.48123 (7) obj. -2775.92 iterations 14
Cbc0038I Pass  58: suminf.    2.54521 (8) obj. -2775.92 iterations 4
Cbc0038I Pass  59: suminf.    2.90849 (9) obj. -2775.92 iterations 6
Cbc0038I Pass  60: suminf.    1.09500 (5) obj. -2775.92 iterations 9
Cbc0038I Pass  61: suminf.    1.09500 (5) obj. -2775.92 iterations 0
Cbc0038I Rounding solution of -2314.91 is better than previous of -2303.9

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 50 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -2314.91 to -2343.05 (0.04 seconds)
Cbc0038I Round again with cutoff of -3146.64
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.26420 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  62: suminf.    1.26420 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  63: suminf.    2.65099 (7) obj. -3146.64 iterations 14
Cbc0038I Pass  64: suminf.    2.65099 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  65: suminf.    3.86747 (10) obj. -3146.64 iterations 15
Cbc0038I Pass  66: suminf.    2.70483 (7) obj. -3146.64 iterations 8
Cbc0038I Pass  67: suminf.    3.16354 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  68: suminf.    3.16354 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  69: suminf.    2.70483 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  70: suminf.    3.41230 (9) obj. -3146.64 iterations 10
Cbc0038I Pass  71: suminf.    2.70973 (8) obj. -3146.64 iterations 14
Cbc0038I Pass  72: suminf.    3.08174 (7) obj. -3146.64 iterations 2
Cbc0038I Pass  73: suminf.    2.64551 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  74: suminf.    3.74513 (11) obj. -3146.64 iterations 6
Cbc0038I Pass  75: suminf.    2.28308 (6) obj. -3146.64 iterations 14
Cbc0038I Pass  76: suminf.    3.19918 (7) obj. -3146.64 iterations 2
Cbc0038I Pass  77: suminf.    3.19918 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  78: suminf.    2.67968 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  79: suminf.    2.67968 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  80: suminf.    3.14249 (9) obj. -3146.64 iterations 7
Cbc0038I Pass  81: suminf.    2.70973 (8) obj. -3146.64 iterations 16
Cbc0038I Pass  82: suminf.    3.08174 (7) obj. -3146.64 iterations 2
Cbc0038I Pass  83: suminf.    2.64551 (7) obj. -3146.64 iterations 1
Cbc0038I Pass  84: suminf.    3.94756 (12) obj. -3146.64 iterations 9
Cbc0038I Pass  85: suminf.    2.15016 (6) obj. -3146.64 iterations 15
Cbc0038I Pass  86: suminf.    3.23522 (7) obj. -3146.64 iterations 3
Cbc0038I Pass  87: suminf.    3.23522 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  88: suminf.    2.52518 (7) obj. -3146.64 iterations 11
Cbc0038I Pass  89: suminf.    2.52518 (7) obj. -3146.64 iterations 0
Cbc0038I Pass  90: suminf.    2.78364 (8) obj. -3146.64 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 56 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2343.05 - took 0.04 seconds
Cbc0012I Integer solution of -2343.0524 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 100 rows 56 columns, reduced to 23 rows 13 columns
Cbc0031I 10 added rows had average density of 4.8
Cbc0013I At root node, 35 cuts changed objective from -4011.657 to -2343.0524 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 87 row cuts average 3.5 elements, 19 column cuts (19 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2343.05242, took 97 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-59) rows, 106 (-47) columns and 1519 (-1785) elements
Clp1000I sum of infeasibilities 2.20408e-05 - average 2.29591e-07, 52 fixed columns
Coin0506I Presolve 53 (-43) rows, 53 (-53) columns and 286 (-1233) elements
Clp0029I End of values pass after 53 iterations
Clp0000I Optimal - objective value 4144.0434
Clp0000I Optimal - objective value 4144.0434
Coin0511I After Postsolve, objective 4144.0434, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4144.0434
Clp0000I Optimal - objective value 4144.0434
Clp0000I Optimal - objective value 4144.0434
Coin0511I After Postsolve, objective 4144.0434, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4144.043379 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 49 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 106 columns (106 integer (106 of which binary)) and 1532 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.378%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 13.8725
Cbc0038I Pass   1: suminf.    1.23563 (18) obj. -2295.91 iterations 9
Cbc0038I Pass   2: suminf.    1.23563 (18) obj. -2295.91 iterations 0
Cbc0038I Pass   3: suminf.    0.39483 (8) obj. -2274.79 iterations 10
Cbc0038I Solution found of -2264.35
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 106 columns, reduced to 49 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -2264.35 to -2295.35 (0.03 seconds)
Cbc0038I Round again with cutoff of -2477.38
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.55339 (44) obj. -2477.38 iterations 3
Cbc0038I Pass   5: suminf.    2.55339 (44) obj. -2477.38 iterations 0
Cbc0038I Pass   6: suminf.    0.77005 (23) obj. -2477.38 iterations 30
Cbc0038I Pass   7: suminf.    0.77005 (23) obj. -2477.38 iterations 0
Cbc0038I Pass   8: suminf.    0.78102 (9) obj. -2477.38 iterations 31
Cbc0038I Pass   9: suminf.    0.78102 (9) obj. -2477.38 iterations 0
Cbc0038I Pass  10: suminf.    0.57284 (7) obj. -2477.38 iterations 10
Cbc0038I Pass  11: suminf.    0.57284 (7) obj. -2477.38 iterations 0
Cbc0038I Pass  12: suminf.    0.76883 (7) obj. -2477.38 iterations 2
Cbc0038I Pass  13: suminf.    0.76883 (7) obj. -2477.38 iterations 0
Cbc0038I Pass  14: suminf.    1.19391 (15) obj. -2477.38 iterations 22
Cbc0038I Pass  15: suminf.    1.07806 (14) obj. -2477.38 iterations 10
Cbc0038I Pass  16: suminf.    1.05493 (7) obj. -2477.38 iterations 13
Cbc0038I Pass  17: suminf.    1.05493 (7) obj. -2477.38 iterations 0
Cbc0038I Pass  18: suminf.    0.75588 (7) obj. -2477.38 iterations 2
Cbc0038I Pass  19: suminf.    0.75588 (7) obj. -2477.38 iterations 0
Cbc0038I Pass  20: suminf.    1.56145 (22) obj. -2477.38 iterations 33
Cbc0038I Pass  21: suminf.    1.30508 (19) obj. -2477.38 iterations 5
Cbc0038I Pass  22: suminf.    1.16588 (8) obj. -2477.38 iterations 22
Cbc0038I Pass  23: suminf.    0.59616 (3) obj. -2477.38 iterations 2
Cbc0038I Pass  24: suminf.    0.31446 (3) obj. -2477.38 iterations 1
Cbc0038I Pass  25: suminf.    1.48610 (7) obj. -2901.07 iterations 4
Cbc0038I Pass  26: suminf.    1.50654 (12) obj. -2477.38 iterations 19
Cbc0038I Pass  27: suminf.    1.40374 (11) obj. -2477.38 iterations 3
Cbc0038I Pass  28: suminf.    2.49375 (7) obj. -3080.56 iterations 10
Cbc0038I Pass  29: suminf.    0.66500 (7) obj. -2477.38 iterations 2
Cbc0038I Pass  30: suminf.    2.82432 (8) obj. -3135.85 iterations 9
Cbc0038I Pass  31: suminf.    1.91322 (15) obj. -2477.38 iterations 21
Cbc0038I Pass  32: suminf.    1.91322 (15) obj. -2477.38 iterations 1
Cbc0038I Pass  33: suminf.    0.70391 (7) obj. -2477.38 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 106 columns, reduced to 51 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -2295.35 to -2332.64 (0.06 seconds)
Cbc0038I Round again with cutoff of -2805.02
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  33: suminf.    5.00870 (44) obj. -2805.02 iterations 0
Cbc0038I Pass  34: suminf.    5.00870 (44) obj. -2805.02 iterations 0
Cbc0038I Pass  35: suminf.    1.49157 (21) obj. -2805.02 iterations 32
Cbc0038I Pass  36: suminf.    1.49157 (21) obj. -2805.02 iterations 0
Cbc0038I Pass  37: suminf.    0.86628 (7) obj. -2805.02 iterations 23
Cbc0038I Pass  38: suminf.    0.86628 (7) obj. -2805.02 iterations 0
Cbc0038I Pass  39: suminf.    1.76218 (7) obj. -2805.02 iterations 2
Cbc0038I Pass  40: suminf.    1.76218 (7) obj. -2805.02 iterations 0
Cbc0038I Pass  41: suminf.    2.67820 (13) obj. -2805.02 iterations 12
Cbc0038I Pass  42: suminf.    2.62855 (10) obj. -2805.02 iterations 3
Cbc0038I Pass  43: suminf.    3.14268 (8) obj. -3169.21 iterations 9
Cbc0038I Pass  44: suminf.    1.76047 (7) obj. -2805.02 iterations 7
Cbc0038I Pass  45: suminf.    3.12457 (7) obj. -3033.47 iterations 5
Cbc0038I Pass  46: suminf.    3.88805 (20) obj. -2805.02 iterations 21
Cbc0038I Pass  47: suminf.    3.50385 (21) obj. -2805.02 iterations 4
Cbc0038I Pass  48: suminf.    1.98765 (7) obj. -3870.03 iterations 21
Cbc0038I Pass  49: suminf.    1.93975 (7) obj. -3698.58 iterations 1
Cbc0038I Pass  50: suminf.    1.78340 (7) obj. -2805.02 iterations 6
Cbc0038I Pass  51: suminf.    2.88070 (14) obj. -2805.02 iterations 18
Cbc0038I Pass  52: suminf.    2.88070 (14) obj. -2805.02 iterations 6
Cbc0038I Pass  53: suminf.    3.06547 (7) obj. -3508.32 iterations 13
Cbc0038I Pass  54: suminf.    1.77341 (7) obj. -2805.02 iterations 5
Cbc0038I Pass  55: suminf.    3.17023 (20) obj. -2805.02 iterations 18
Cbc0038I Pass  56: suminf.    2.87417 (17) obj. -2805.02 iterations 7
Cbc0038I Pass  57: suminf.    2.92443 (11) obj. -2805.02 iterations 12
Cbc0038I Pass  58: suminf.    2.92443 (11) obj. -2805.02 iterations 0
Cbc0038I Pass  59: suminf.    1.77341 (7) obj. -2805.02 iterations 9
Cbc0038I Pass  60: suminf.    1.77341 (7) obj. -2805.02 iterations 0
Cbc0038I Pass  61: suminf.    2.52375 (7) obj. -3195.99 iterations 6
Cbc0038I Pass  62: suminf.    1.41340 (7) obj. -2805.02 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 106 columns, reduced to 54 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -2332.64 - took 0.06 seconds
Cbc0012I Integer solution of -2332.6443 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0012I Integer solution of -2340.3952 found by DiveCoefficient after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 96 rows 106 columns, reduced to 49 rows 51 columns
Cbc0012I Integer solution of -2343.0524 found by DiveCoefficient after 222 iterations and 0 nodes (0.24 seconds)
Cbc0031I 41 added rows had average density of 8.2439024
Cbc0013I At root node, 41 cuts changed objective from -4113.8894 to -2343.0524 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1032 row cuts average 4.0 elements, 10 column cuts (14 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 99 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 164 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 257 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2343.05242, took 222 iterations and 0 nodes (0.24 seconds)
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.25

