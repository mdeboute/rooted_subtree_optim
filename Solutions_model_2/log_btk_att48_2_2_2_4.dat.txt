Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 48 (-2) columns and 268 (-17) elements
Clp1000I sum of infeasibilities 2.45715e-05 - average 2.73016e-07, 4 fixed columns
Coin0506I Presolve 80 (-10) rows, 43 (-5) columns and 238 (-30) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 23.259301 - largest nonzero change 0 ( 0%) - largest zero change 2.3379487e-05
Clp0000I Optimal - objective value 2447.2944
Clp0000I Optimal - objective value 2447.2944
Coin0511I After Postsolve, objective 2447.2944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2447.2944
Clp0000I Optimal - objective value 2447.2944
Clp0000I Optimal - objective value 2447.2944
Coin0511I After Postsolve, objective 2447.2944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2447.29439 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 48 columns (47 integer (47 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.5414
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.1041 iterations 34
Cbc0038I Solution found of -29.1041
Cbc0038I Relaxing continuous gives -29.1041
Cbc0038I Rounding solution of -409.627 is better than previous of -29.1041

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 47 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -409.627 to -551.292 (0.03 seconds)
Cbc0038I Round again with cutoff of -740.892
Cbc0038I Pass   2: suminf.    0.58630 (5) obj. -740.892 iterations 4
Cbc0038I Pass   3: suminf.    0.57251 (4) obj. -740.892 iterations 1
Cbc0038I Pass   4: suminf.    0.90018 (3) obj. -740.892 iterations 3
Cbc0038I Pass   5: suminf.    0.62148 (3) obj. -740.892 iterations 2
Cbc0038I Pass   6: suminf.    0.55257 (3) obj. -740.892 iterations 2
Cbc0038I Pass   7: suminf.    1.08643 (4) obj. -740.892 iterations 3
Cbc0038I Pass   8: suminf.    0.79766 (4) obj. -740.892 iterations 1
Cbc0038I Pass   9: suminf.    0.97928 (4) obj. -740.892 iterations 4
Cbc0038I Pass  10: suminf.    0.97928 (4) obj. -740.892 iterations 0
Cbc0038I Pass  11: suminf.    1.63290 (7) obj. -740.892 iterations 4
Cbc0038I Pass  12: suminf.    1.63290 (7) obj. -740.892 iterations 0
Cbc0038I Pass  13: suminf.    0.99723 (4) obj. -740.892 iterations 6
Cbc0038I Pass  14: suminf.    0.98315 (4) obj. -740.892 iterations 2
Cbc0038I Pass  15: suminf.    1.69408 (5) obj. -740.892 iterations 4
Cbc0038I Pass  16: suminf.    1.56711 (5) obj. -740.892 iterations 1
Cbc0038I Pass  17: suminf.    1.83538 (5) obj. -740.892 iterations 4
Cbc0038I Pass  18: suminf.    1.76413 (5) obj. -740.892 iterations 1
Cbc0038I Pass  19: suminf.    1.69408 (5) obj. -740.892 iterations 4
Cbc0038I Pass  20: suminf.    2.27382 (7) obj. -740.892 iterations 13
Cbc0038I Pass  21: suminf.    1.47720 (6) obj. -740.892 iterations 6
Cbc0038I Pass  22: suminf.    1.37890 (5) obj. -740.892 iterations 1
Cbc0038I Pass  23: suminf.    2.24205 (5) obj. -740.892 iterations 4
Cbc0038I Pass  24: suminf.    1.83020 (6) obj. -740.892 iterations 3
Cbc0038I Pass  25: suminf.    1.58944 (6) obj. -740.892 iterations 6
Cbc0038I Pass  26: suminf.    1.58944 (6) obj. -740.892 iterations 0
Cbc0038I Pass  27: suminf.    1.96341 (6) obj. -740.892 iterations 5
Cbc0038I Pass  28: suminf.    1.10852 (6) obj. -740.892 iterations 1
Cbc0038I Pass  29: suminf.    1.10571 (5) obj. -740.892 iterations 1
Cbc0038I Pass  30: suminf.    1.82797 (5) obj. -740.892 iterations 4
Cbc0038I Pass  31: suminf.    1.20345 (5) obj. -740.892 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 47 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -551.292 - took 0.08 seconds
Cbc0012I Integer solution of -551.2919 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 90 rows 48 columns, reduced to 47 rows 30 columns
Cbc0031I 23 added rows had average density of 20.086957
Cbc0013I At root node, 23 cuts changed objective from -2447.2944 to -1586.2762 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8188 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1616 row cuts average 47.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 41.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 12 nodes, 9 on tree, -551.2919 best solution, best possible -1586.2762 (0.69 seconds)
Cbc0001I Search completed - best objective -551.2919000000006, took 7436 iterations and 24 nodes (0.71 seconds)
Cbc0032I Strong branching done 370 times (8343 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 10, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-8) rows, 94 (-2) columns and 1349 (-64) elements
Clp1000I sum of infeasibilities 2.6378e-09 - average 2.93089e-11, 43 fixed columns
Coin0506I Presolve 13 (-77) rows, 16 (-78) columns and 78 (-1271) elements
Clp0006I 0  Obj 2637.4666 Dual inf 31.954401 (16)
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 3335.9103
Clp0000I Optimal - objective value 3335.9103
Coin0511I After Postsolve, objective 3335.9103, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3335.9103 Dual inf 2258.1092 (8)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.200847e-05 ( 0.0018094956%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 3335.9103
Clp0000I Optimal - objective value 3335.9103
Clp0000I Optimal - objective value 3335.9103
Coin0511I After Postsolve, objective 3335.9103, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3335.910264 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 94 columns (94 integer (94 of which binary)) and 1353 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 10.2263
Cbc0038I Pass   1: suminf.    3.56177 (23) obj. -1427.24 iterations 32
Cbc0038I Pass   2: suminf.    3.56177 (23) obj. -1427.24 iterations 1
Cbc0038I Pass   3: suminf.    1.42011 (12) obj. -582.178 iterations 11
Cbc0038I Pass   4: suminf.    0.04000 (1) obj. 135.019 iterations 11
Cbc0038I Solution found of 146.539
Cbc0038I Rounding solution of -94.337 is better than previous of 146.539

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -94.337 to -334.053 (0.03 seconds)
Cbc0038I Round again with cutoff of -605.101
Cbc0038I Pass   5: suminf.    3.56177 (23) obj. -1427.24 iterations 0
Cbc0038I Pass   6: suminf.    3.56177 (23) obj. -1427.24 iterations 1
Cbc0038I Pass   7: suminf.    1.12554 (15) obj. -605.101 iterations 36
Cbc0038I Pass   8: suminf.    1.06064 (14) obj. -865.925 iterations 1
Cbc0038I Pass   9: suminf.    1.08247 (8) obj. -605.101 iterations 22
Cbc0038I Pass  10: suminf.    0.49404 (2) obj. -605.101 iterations 1
Cbc0038I Pass  11: suminf.    0.35993 (2) obj. -648.552 iterations 1
Cbc0038I Pass  12: suminf.    1.08247 (8) obj. -605.101 iterations 2
Cbc0038I Pass  13: suminf.    1.65492 (11) obj. -605.101 iterations 21
Cbc0038I Pass  14: suminf.    0.90658 (5) obj. -685.551 iterations 12
Cbc0038I Pass  15: suminf.    0.97422 (11) obj. -605.101 iterations 12
Cbc0038I Pass  16: suminf.    0.97422 (11) obj. -605.101 iterations 0
Cbc0038I Pass  17: suminf.    1.45818 (6) obj. -605.101 iterations 22
Cbc0038I Pass  18: suminf.    1.45818 (6) obj. -605.101 iterations 0
Cbc0038I Pass  19: suminf.    0.55581 (3) obj. -605.101 iterations 19
Cbc0038I Pass  20: suminf.    0.54699 (3) obj. -608.736 iterations 3
Cbc0038I Pass  21: suminf.    0.55820 (3) obj. -605.101 iterations 2
Cbc0038I Pass  22: suminf.    4.13935 (16) obj. -605.101 iterations 30
Cbc0038I Pass  23: suminf.    2.60710 (14) obj. -1151.33 iterations 10
Cbc0038I Pass  24: suminf.    2.60710 (14) obj. -1151.33 iterations 0
Cbc0038I Pass  25: suminf.    0.74164 (3) obj. -605.101 iterations 16
Cbc0038I Pass  26: suminf.    0.56826 (3) obj. -661.274 iterations 1
Cbc0038I Pass  27: suminf.    2.03399 (17) obj. -605.101 iterations 24
Cbc0038I Pass  28: suminf.    1.97638 (12) obj. -605.101 iterations 5
Cbc0038I Pass  29: suminf.    1.18041 (10) obj. -605.101 iterations 10
Cbc0038I Pass  30: suminf.    1.18041 (10) obj. -605.101 iterations 0
Cbc0038I Pass  31: suminf.    0.61155 (3) obj. -605.101 iterations 19
Cbc0038I Pass  32: suminf.    0.61155 (3) obj. -605.101 iterations 2
Cbc0038I Pass  33: suminf.    0.56928 (2) obj. -605.101 iterations 2
Cbc0038I Pass  34: suminf.    0.50000 (2) obj. -672.653 iterations 4
Cbc0038I Rounding solution of -384.709 is better than previous of -334.053

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 42 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -384.709 to -551.292 (0.05 seconds)
Cbc0038I Round again with cutoff of -1092.99
Cbc0038I Pass  34: suminf.    3.56177 (23) obj. -1427.24 iterations 0
Cbc0038I Pass  35: suminf.    3.56177 (23) obj. -1427.24 iterations 1
Cbc0038I Pass  36: suminf.    1.72555 (20) obj. -1092.99 iterations 30
Cbc0038I Pass  37: suminf.    1.72555 (20) obj. -1092.99 iterations 0
Cbc0038I Pass  38: suminf.    1.36143 (10) obj. -1092.99 iterations 24
Cbc0038I Pass  39: suminf.    1.31017 (8) obj. -1208.93 iterations 2
Cbc0038I Pass  40: suminf.    1.18939 (5) obj. -1092.99 iterations 12
Cbc0038I Pass  41: suminf.    1.02743 (5) obj. -1092.99 iterations 3
Cbc0038I Pass  42: suminf.    0.83278 (4) obj. -1130.95 iterations 4
Cbc0038I Pass  43: suminf.    3.90296 (15) obj. -1092.99 iterations 21
Cbc0038I Pass  44: suminf.    2.48222 (12) obj. -1092.99 iterations 12
Cbc0038I Pass  45: suminf.    1.94714 (11) obj. -1092.99 iterations 4
Cbc0038I Pass  46: suminf.    1.19426 (5) obj. -1092.99 iterations 17
Cbc0038I Pass  47: suminf.    1.19426 (5) obj. -1092.99 iterations 1
Cbc0038I Pass  48: suminf.    1.18941 (5) obj. -1092.99 iterations 2
Cbc0038I Pass  49: suminf.    1.18941 (5) obj. -1092.99 iterations 1
Cbc0038I Pass  50: suminf.    1.19426 (5) obj. -1092.99 iterations 3
Cbc0038I Pass  51: suminf.    2.05368 (12) obj. -1092.99 iterations 17
Cbc0038I Pass  52: suminf.    2.05368 (12) obj. -1092.99 iterations 1
Cbc0038I Pass  53: suminf.    1.18939 (5) obj. -1092.99 iterations 20
Cbc0038I Pass  54: suminf.    1.02743 (5) obj. -1092.99 iterations 3
Cbc0038I Pass  55: suminf.    0.83278 (4) obj. -1130.95 iterations 4
Cbc0038I Pass  56: suminf.    3.23977 (19) obj. -1092.99 iterations 15
Cbc0038I Pass  57: suminf.    2.33076 (11) obj. -1211.87 iterations 10
Cbc0038I Pass  58: suminf.    2.02430 (11) obj. -1092.99 iterations 1
Cbc0038I Pass  59: suminf.    0.78626 (4) obj. -1092.99 iterations 19
Cbc0038I Pass  60: suminf.    0.78626 (4) obj. -1092.99 iterations 0
Cbc0038I Pass  61: suminf.    0.75609 (4) obj. -1092.99 iterations 4
Cbc0038I Pass  62: suminf.    0.75609 (4) obj. -1092.99 iterations 0
Cbc0038I Pass  63: suminf.    0.78626 (4) obj. -1092.99 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -551.292 - took 0.05 seconds
Cbc0012I Integer solution of -551.2919 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 64 added rows had average density of 25.25
Cbc0013I At root node, 64 cuts changed objective from -3044.5373 to -680.04228 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13348 row cuts average 6.5 elements, 1 column cuts (17 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1601 row cuts average 80.5 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 27 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1255 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 398 row cuts average 34.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.647 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -551.2919 best solution, best possible -680.04228 (2.40 seconds)
Cbc0001I Search completed - best objective -551.2919000000006, took 4072 iterations and 8 nodes (2.63 seconds)
Cbc0032I Strong branching done 296 times (8082 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 4 variables fixed on reduced cost
Total time (CPU seconds):       1.86   (Wallclock seconds):       2.64

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 48 (-2) columns and 268 (-17) elements
Clp1000I sum of infeasibilities 2.45715e-05 - average 2.73016e-07, 4 fixed columns
Coin0506I Presolve 80 (-10) rows, 43 (-5) columns and 238 (-30) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 23.259301 - largest nonzero change 0 ( 0%) - largest zero change 2.3379487e-05
Clp0000I Optimal - objective value 2447.2944
Clp0000I Optimal - objective value 2447.2944
Coin0511I After Postsolve, objective 2447.2944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2447.2944
Clp0000I Optimal - objective value 2447.2944
Clp0000I Optimal - objective value 2447.2944
Coin0511I After Postsolve, objective 2447.2944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2447.29439 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 48 columns (47 integer (47 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.5414
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.1041 iterations 34
Cbc0038I Solution found of -29.1041
Cbc0038I Relaxing continuous gives -29.1041
Cbc0038I Rounding solution of -409.627 is better than previous of -29.1041

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 47 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -409.627 to -551.292 (0.03 seconds)
Cbc0038I Round again with cutoff of -740.892
Cbc0038I Pass   2: suminf.    0.58630 (5) obj. -740.892 iterations 4
Cbc0038I Pass   3: suminf.    0.57251 (4) obj. -740.892 iterations 1
Cbc0038I Pass   4: suminf.    0.90018 (3) obj. -740.892 iterations 3
Cbc0038I Pass   5: suminf.    0.62148 (3) obj. -740.892 iterations 2
Cbc0038I Pass   6: suminf.    0.55257 (3) obj. -740.892 iterations 2
Cbc0038I Pass   7: suminf.    1.08643 (4) obj. -740.892 iterations 3
Cbc0038I Pass   8: suminf.    0.79766 (4) obj. -740.892 iterations 1
Cbc0038I Pass   9: suminf.    0.97928 (4) obj. -740.892 iterations 4
Cbc0038I Pass  10: suminf.    0.97928 (4) obj. -740.892 iterations 0
Cbc0038I Pass  11: suminf.    1.63290 (7) obj. -740.892 iterations 4
Cbc0038I Pass  12: suminf.    1.63290 (7) obj. -740.892 iterations 0
Cbc0038I Pass  13: suminf.    0.99723 (4) obj. -740.892 iterations 6
Cbc0038I Pass  14: suminf.    0.98315 (4) obj. -740.892 iterations 2
Cbc0038I Pass  15: suminf.    1.69408 (5) obj. -740.892 iterations 4
Cbc0038I Pass  16: suminf.    1.56711 (5) obj. -740.892 iterations 1
Cbc0038I Pass  17: suminf.    1.83538 (5) obj. -740.892 iterations 4
Cbc0038I Pass  18: suminf.    1.76413 (5) obj. -740.892 iterations 1
Cbc0038I Pass  19: suminf.    1.69408 (5) obj. -740.892 iterations 4
Cbc0038I Pass  20: suminf.    2.27382 (7) obj. -740.892 iterations 13
Cbc0038I Pass  21: suminf.    1.47720 (6) obj. -740.892 iterations 6
Cbc0038I Pass  22: suminf.    1.37890 (5) obj. -740.892 iterations 1
Cbc0038I Pass  23: suminf.    2.24205 (5) obj. -740.892 iterations 4
Cbc0038I Pass  24: suminf.    1.83020 (6) obj. -740.892 iterations 3
Cbc0038I Pass  25: suminf.    1.58944 (6) obj. -740.892 iterations 6
Cbc0038I Pass  26: suminf.    1.58944 (6) obj. -740.892 iterations 0
Cbc0038I Pass  27: suminf.    1.96341 (6) obj. -740.892 iterations 5
Cbc0038I Pass  28: suminf.    1.10852 (6) obj. -740.892 iterations 1
Cbc0038I Pass  29: suminf.    1.10571 (5) obj. -740.892 iterations 1
Cbc0038I Pass  30: suminf.    1.82797 (5) obj. -740.892 iterations 4
Cbc0038I Pass  31: suminf.    1.20345 (5) obj. -740.892 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 48 columns, reduced to 47 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -551.292 - took 0.07 seconds
Cbc0012I Integer solution of -551.2919 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 90 rows 48 columns, reduced to 47 rows 30 columns
Cbc0031I 23 added rows had average density of 20.086957
Cbc0013I At root node, 23 cuts changed objective from -2447.2944 to -1586.2762 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8188 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1616 row cuts average 47.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 41.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 22 nodes, 1 on tree, -551.2919 best solution, best possible -609.01818 (0.69 seconds)
Cbc0001I Search completed - best objective -551.2919000000006, took 7436 iterations and 24 nodes (0.70 seconds)
Cbc0032I Strong branching done 370 times (8343 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 10, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-9) rows, 94 (-3) columns and 1349 (-65) elements
Clp1000I sum of infeasibilities 2.6378e-09 - average 2.93089e-11, 43 fixed columns
Coin0506I Presolve 13 (-77) rows, 16 (-78) columns and 78 (-1271) elements
Clp0006I 0  Obj 2637.4666 Dual inf 31.954401 (16)
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 3335.9103
Clp0000I Optimal - objective value 3335.9103
Coin0511I After Postsolve, objective 3335.9103, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 3335.9103 Dual inf 2258.1092 (8)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.200847e-05 ( 0.0018094956%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 3335.9103
Clp0000I Optimal - objective value 3335.9103
Clp0000I Optimal - objective value 3335.9103
Coin0511I After Postsolve, objective 3335.9103, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3335.910264 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 94 columns (94 integer (94 of which binary)) and 1353 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 10.2263
Cbc0038I Pass   1: suminf.    3.56177 (23) obj. -1427.24 iterations 32
Cbc0038I Pass   2: suminf.    3.56177 (23) obj. -1427.24 iterations 1
Cbc0038I Pass   3: suminf.    1.42011 (12) obj. -582.178 iterations 11
Cbc0038I Pass   4: suminf.    0.04000 (1) obj. 135.019 iterations 11
Cbc0038I Solution found of 146.539
Cbc0038I Rounding solution of -94.337 is better than previous of 146.539

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -94.337 to -334.053 (0.02 seconds)
Cbc0038I Round again with cutoff of -605.101
Cbc0038I Pass   5: suminf.    3.56177 (23) obj. -1427.24 iterations 0
Cbc0038I Pass   6: suminf.    3.56177 (23) obj. -1427.24 iterations 1
Cbc0038I Pass   7: suminf.    1.12554 (15) obj. -605.101 iterations 36
Cbc0038I Pass   8: suminf.    1.06064 (14) obj. -865.925 iterations 1
Cbc0038I Pass   9: suminf.    1.08247 (8) obj. -605.101 iterations 22
Cbc0038I Pass  10: suminf.    0.49404 (2) obj. -605.101 iterations 1
Cbc0038I Pass  11: suminf.    0.35993 (2) obj. -648.552 iterations 1
Cbc0038I Pass  12: suminf.    1.08247 (8) obj. -605.101 iterations 2
Cbc0038I Pass  13: suminf.    1.65492 (11) obj. -605.101 iterations 21
Cbc0038I Pass  14: suminf.    0.90658 (5) obj. -685.551 iterations 12
Cbc0038I Pass  15: suminf.    0.97422 (11) obj. -605.101 iterations 12
Cbc0038I Pass  16: suminf.    0.97422 (11) obj. -605.101 iterations 0
Cbc0038I Pass  17: suminf.    1.45818 (6) obj. -605.101 iterations 22
Cbc0038I Pass  18: suminf.    1.45818 (6) obj. -605.101 iterations 0
Cbc0038I Pass  19: suminf.    0.55581 (3) obj. -605.101 iterations 19
Cbc0038I Pass  20: suminf.    0.54699 (3) obj. -608.736 iterations 3
Cbc0038I Pass  21: suminf.    0.55820 (3) obj. -605.101 iterations 2
Cbc0038I Pass  22: suminf.    4.13935 (16) obj. -605.101 iterations 30
Cbc0038I Pass  23: suminf.    2.60710 (14) obj. -1151.33 iterations 10
Cbc0038I Pass  24: suminf.    2.60710 (14) obj. -1151.33 iterations 0
Cbc0038I Pass  25: suminf.    0.74164 (3) obj. -605.101 iterations 16
Cbc0038I Pass  26: suminf.    0.56826 (3) obj. -661.274 iterations 1
Cbc0038I Pass  27: suminf.    2.03399 (17) obj. -605.101 iterations 24
Cbc0038I Pass  28: suminf.    1.97638 (12) obj. -605.101 iterations 5
Cbc0038I Pass  29: suminf.    1.18041 (10) obj. -605.101 iterations 10
Cbc0038I Pass  30: suminf.    1.18041 (10) obj. -605.101 iterations 0
Cbc0038I Pass  31: suminf.    0.61155 (3) obj. -605.101 iterations 19
Cbc0038I Pass  32: suminf.    0.61155 (3) obj. -605.101 iterations 2
Cbc0038I Pass  33: suminf.    0.56928 (2) obj. -605.101 iterations 2
Cbc0038I Pass  34: suminf.    0.50000 (2) obj. -672.653 iterations 4
Cbc0038I Rounding solution of -384.709 is better than previous of -334.053

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 42 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -384.709 to -551.292 (0.05 seconds)
Cbc0038I Round again with cutoff of -1092.99
Cbc0038I Pass  34: suminf.    3.56177 (23) obj. -1427.24 iterations 0
Cbc0038I Pass  35: suminf.    3.56177 (23) obj. -1427.24 iterations 1
Cbc0038I Pass  36: suminf.    1.72555 (20) obj. -1092.99 iterations 30
Cbc0038I Pass  37: suminf.    1.72555 (20) obj. -1092.99 iterations 0
Cbc0038I Pass  38: suminf.    1.36143 (10) obj. -1092.99 iterations 24
Cbc0038I Pass  39: suminf.    1.31017 (8) obj. -1208.93 iterations 2
Cbc0038I Pass  40: suminf.    1.18939 (5) obj. -1092.99 iterations 12
Cbc0038I Pass  41: suminf.    1.02743 (5) obj. -1092.99 iterations 3
Cbc0038I Pass  42: suminf.    0.83278 (4) obj. -1130.95 iterations 4
Cbc0038I Pass  43: suminf.    3.90296 (15) obj. -1092.99 iterations 21
Cbc0038I Pass  44: suminf.    2.48222 (12) obj. -1092.99 iterations 12
Cbc0038I Pass  45: suminf.    1.94714 (11) obj. -1092.99 iterations 4
Cbc0038I Pass  46: suminf.    1.19426 (5) obj. -1092.99 iterations 17
Cbc0038I Pass  47: suminf.    1.19426 (5) obj. -1092.99 iterations 1
Cbc0038I Pass  48: suminf.    1.18941 (5) obj. -1092.99 iterations 2
Cbc0038I Pass  49: suminf.    1.18941 (5) obj. -1092.99 iterations 1
Cbc0038I Pass  50: suminf.    1.19426 (5) obj. -1092.99 iterations 3
Cbc0038I Pass  51: suminf.    2.05368 (12) obj. -1092.99 iterations 17
Cbc0038I Pass  52: suminf.    2.05368 (12) obj. -1092.99 iterations 1
Cbc0038I Pass  53: suminf.    1.18939 (5) obj. -1092.99 iterations 20
Cbc0038I Pass  54: suminf.    1.02743 (5) obj. -1092.99 iterations 3
Cbc0038I Pass  55: suminf.    0.83278 (4) obj. -1130.95 iterations 4
Cbc0038I Pass  56: suminf.    3.23977 (19) obj. -1092.99 iterations 15
Cbc0038I Pass  57: suminf.    2.33076 (11) obj. -1211.87 iterations 10
Cbc0038I Pass  58: suminf.    2.02430 (11) obj. -1092.99 iterations 1
Cbc0038I Pass  59: suminf.    0.78626 (4) obj. -1092.99 iterations 19
Cbc0038I Pass  60: suminf.    0.78626 (4) obj. -1092.99 iterations 0
Cbc0038I Pass  61: suminf.    0.75609 (4) obj. -1092.99 iterations 4
Cbc0038I Pass  62: suminf.    0.75609 (4) obj. -1092.99 iterations 0
Cbc0038I Pass  63: suminf.    0.78626 (4) obj. -1092.99 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 94 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -551.292 - took 0.05 seconds
Cbc0012I Integer solution of -551.2919 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 64 added rows had average density of 25.25
Cbc0013I At root node, 64 cuts changed objective from -3044.5373 to -680.04228 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13348 row cuts average 6.5 elements, 1 column cuts (17 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1601 row cuts average 80.5 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 27 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1255 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 398 row cuts average 34.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -551.2919 best solution, best possible -680.04228 (2.51 seconds)
Cbc0001I Search completed - best objective -551.2919000000006, took 4072 iterations and 8 nodes (2.75 seconds)
Cbc0032I Strong branching done 296 times (8082 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 4 variables fixed on reduced cost
Total time (CPU seconds):       1.92   (Wallclock seconds):       2.76

