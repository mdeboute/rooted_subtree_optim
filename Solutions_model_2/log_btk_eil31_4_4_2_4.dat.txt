Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 9.76586e-06 - average 2.12301e-07, 4 fixed columns
Coin0506I Presolve 36 (-10) rows, 20 (-5) columns and 105 (-30) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 103.47156
Clp0000I Optimal - objective value 103.47156
Coin0511I After Postsolve, objective 103.47156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.47156
Clp0000I Optimal - objective value 103.47156
Clp0000I Optimal - objective value 103.47156
Coin0511I After Postsolve, objective 103.47156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.4715561 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.63376
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -44.9616 iterations 15
Cbc0038I Solution found of -44.9616
Cbc0038I Relaxing continuous gives -44.9616
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -44.9616 to -68.0723 (0.02 seconds)
Cbc0038I Round again with cutoff of -71.0618
Cbc0038I Pass   2: suminf.    1.00350 (5) obj. -71.0618 iterations 3
Cbc0038I Pass   3: suminf.    1.63640 (4) obj. -71.0618 iterations 8
Cbc0038I Pass   4: suminf.    0.97308 (3) obj. -71.0618 iterations 1
Cbc0038I Pass   5: suminf.    0.71044 (4) obj. -71.0618 iterations 2
Cbc0038I Pass   6: suminf.    0.27153 (3) obj. -73.3896 iterations 2
Cbc0038I Pass   7: suminf.    1.37262 (4) obj. -71.0618 iterations 8
Cbc0038I Pass   8: suminf.    1.36538 (4) obj. -71.0618 iterations 2
Cbc0038I Pass   9: suminf.    1.38465 (4) obj. -71.0618 iterations 5
Cbc0038I Pass  10: suminf.    1.10239 (3) obj. -71.0618 iterations 3
Cbc0038I Pass  11: suminf.    0.50327 (2) obj. -71.0618 iterations 3
Cbc0038I Pass  12: suminf.    0.86974 (5) obj. -71.0618 iterations 7
Cbc0038I Pass  13: suminf.    0.77909 (3) obj. -71.0618 iterations 8
Cbc0038I Pass  14: suminf.    2.65036 (7) obj. -71.0618 iterations 6
Cbc0038I Pass  15: suminf.    2.40492 (8) obj. -71.0618 iterations 3
Cbc0038I Pass  16: suminf.    1.73943 (6) obj. -71.0618 iterations 14
Cbc0038I Pass  17: suminf.    0.95129 (4) obj. -71.0618 iterations 2
Cbc0038I Pass  18: suminf.    0.85363 (4) obj. -71.0618 iterations 3
Cbc0038I Pass  19: suminf.    0.68674 (4) obj. -71.0618 iterations 1
Cbc0038I Pass  20: suminf.    1.22688 (6) obj. -71.0618 iterations 10
Cbc0038I Pass  21: suminf.    0.86974 (5) obj. -71.0618 iterations 4
Cbc0038I Pass  22: suminf.    0.77909 (3) obj. -71.0618 iterations 8
Cbc0038I Pass  23: suminf.    0.50327 (2) obj. -71.0618 iterations 2
Cbc0038I Pass  24: suminf.    1.21685 (4) obj. -71.0618 iterations 4
Cbc0038I Pass  25: suminf.    0.50327 (2) obj. -71.0618 iterations 4
Cbc0038I Pass  26: suminf.    1.59897 (6) obj. -71.0618 iterations 11
Cbc0038I Pass  27: suminf.    0.30538 (3) obj. -71.0618 iterations 4
Cbc0038I Pass  28: suminf.    0.30538 (3) obj. -71.0618 iterations 0
Cbc0038I Pass  29: suminf.    0.85363 (4) obj. -71.0618 iterations 4
Cbc0038I Pass  30: suminf.    0.68674 (4) obj. -71.0618 iterations 1
Cbc0038I Pass  31: suminf.    1.22688 (6) obj. -71.0618 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -68.0723 - took 0.07 seconds
Cbc0012I Integer solution of -68.07234 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 30 rows 17 columns
Cbc0031I 9 added rows had average density of 17
Cbc0013I At root node, 9 cuts changed objective from -97.965728 to -86.228012 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1061 row cuts average 4.4 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 416 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -68.07234, took 2730 iterations and 30 nodes (0.20 seconds)
Cbc0032I Strong branching done 242 times (1454 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-16) rows, 50 (-12) columns and 463 (-185) elements
Clp1000I sum of infeasibilities 7.94737e-08 - average 1.6557e-09, 13 fixed columns
Coin0506I Presolve 35 (-13) rows, 37 (-13) columns and 245 (-218) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 1.8640939 - largest nonzero change 0 ( 0%) - largest zero change 2.5223087e-05
Clp0000I Optimal - objective value 118.82881
Clp0000I Optimal - objective value 118.82881
Coin0511I After Postsolve, objective 118.82881, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 118.82881
Clp0000I Optimal - objective value 118.82881
Clp0000I Optimal - objective value 118.82881
Coin0511I After Postsolve, objective 118.82881, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 118.8288133 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 5.08145
Cbc0038I Pass   1: suminf.    1.64216 (12) obj. -83.0087 iterations 7
Cbc0038I Pass   2: suminf.    1.64216 (12) obj. -83.0087 iterations 0
Cbc0038I Solution found of -36.3412
Cbc0038I Rounding solution of -48.1629 is better than previous of -36.3412

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -52.7343
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.64216 (12) obj. -83.0087 iterations 0
Cbc0038I Pass   4: suminf.    1.64216 (12) obj. -83.0087 iterations 0
Cbc0038I Pass   5: suminf.    0.45939 (2) obj. -52.7343 iterations 13
Cbc0038I Pass   6: suminf.    0.08750 (1) obj. -68.5134 iterations 2
Cbc0038I Pass   7: suminf.    0.08750 (1) obj. -68.5134 iterations 0
Cbc0038I Pass   8: suminf.    0.15417 (2) obj. -68.38 iterations 3
Cbc0038I Pass   9: suminf.    0.15417 (2) obj. -68.38 iterations 1
Cbc0038I Pass  10: suminf.    0.51632 (2) obj. -52.7343 iterations 3
Cbc0038I Pass  11: suminf.    0.08750 (1) obj. -66.5134 iterations 2
Cbc0038I Pass  12: suminf.    0.08750 (1) obj. -66.5134 iterations 0
Cbc0038I Pass  13: suminf.    1.33845 (10) obj. -72.0596 iterations 8
Cbc0038I Pass  14: suminf.    1.33845 (10) obj. -72.0596 iterations 0
Cbc0038I Pass  15: suminf.    0.53452 (3) obj. -52.7343 iterations 13
Cbc0038I Pass  16: suminf.    0.35000 (1) obj. -55.2509 iterations 3
Cbc0038I Pass  17: suminf.    0.42138 (1) obj. -52.7343 iterations 1
Cbc0038I Pass  18: suminf.    0.43824 (3) obj. -52.7343 iterations 5
Cbc0038I Pass  19: suminf.    0.43824 (3) obj. -52.7343 iterations 1
Cbc0038I Pass  20: suminf.    0.46250 (1) obj. -59.9042 iterations 3
Cbc0038I Pass  21: suminf.    0.25914 (1) obj. -52.7343 iterations 1
Cbc0038I Pass  22: suminf.    0.91757 (3) obj. -52.8183 iterations 11
Cbc0038I Pass  23: suminf.    0.69337 (3) obj. -52.7343 iterations 6
Cbc0038I Pass  24: suminf.    0.36250 (1) obj. -59.4603 iterations 3
Cbc0038I Pass  25: suminf.    0.17173 (1) obj. -52.7343 iterations 1
Cbc0038I Pass  26: suminf.    2.08577 (13) obj. -52.7343 iterations 15
Cbc0038I Pass  27: suminf.    1.51864 (7) obj. -52.7343 iterations 8
Cbc0038I Pass  28: suminf.    0.90429 (2) obj. -52.7343 iterations 8
Cbc0038I Pass  29: suminf.    0.60185 (2) obj. -52.7343 iterations 7
Cbc0038I Pass  30: suminf.    0.37500 (1) obj. -53.4639 iterations 1
Cbc0038I Pass  31: suminf.    0.37500 (1) obj. -53.4639 iterations 0
Cbc0038I Pass  32: suminf.    0.69766 (5) obj. -62.6471 iterations 15
Cbc0038I Rounding solution of -68.0722 is better than previous of -48.1629

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -73.2331
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.64216 (12) obj. -83.0087 iterations 0
Cbc0038I Pass  33: suminf.    1.64216 (12) obj. -83.0087 iterations 0
Cbc0038I Pass  34: suminf.    0.74796 (5) obj. -73.2331 iterations 14
Cbc0038I Pass  35: suminf.    0.17858 (3) obj. -73.2331 iterations 5
Cbc0038I Pass  36: suminf.    0.30395 (2) obj. -73.2331 iterations 3
Cbc0038I Pass  37: suminf.    0.28311 (2) obj. -73.2331 iterations 1
Cbc0038I Pass  38: suminf.    0.86341 (5) obj. -73.2331 iterations 5
Cbc0038I Pass  39: suminf.    0.57577 (4) obj. -73.2331 iterations 2
Cbc0038I Pass  40: suminf.    0.51410 (3) obj. -73.2331 iterations 6
Cbc0038I Pass  41: suminf.    0.51410 (3) obj. -73.2331 iterations 0
Cbc0038I Pass  42: suminf.    0.49683 (3) obj. -73.2331 iterations 1
Cbc0038I Pass  43: suminf.    0.17083 (2) obj. -74.18 iterations 2
Cbc0038I Pass  44: suminf.    0.64860 (4) obj. -73.2331 iterations 4
Cbc0038I Pass  45: suminf.    1.11761 (6) obj. -73.2331 iterations 8
Cbc0038I Pass  46: suminf.    0.73685 (5) obj. -73.2331 iterations 2
Cbc0038I Pass  47: suminf.    0.42488 (3) obj. -73.2331 iterations 3
Cbc0038I Pass  48: suminf.    0.30413 (3) obj. -73.2331 iterations 1
Cbc0038I Pass  49: suminf.    0.58386 (3) obj. -73.2331 iterations 2
Cbc0038I Pass  50: suminf.    1.75471 (6) obj. -73.2331 iterations 10
Cbc0038I Pass  51: suminf.    1.61512 (6) obj. -73.2331 iterations 3
Cbc0038I Pass  52: suminf.    1.82788 (7) obj. -73.2331 iterations 11
Cbc0038I Pass  53: suminf.    1.38767 (5) obj. -73.2331 iterations 5
Cbc0038I Pass  54: suminf.    0.91721 (4) obj. -73.2331 iterations 3
Cbc0038I Pass  55: suminf.    0.45698 (3) obj. -73.2331 iterations 4
Cbc0038I Pass  56: suminf.    0.52329 (2) obj. -73.854 iterations 2
Cbc0038I Pass  57: suminf.    2.74511 (9) obj. -73.2331 iterations 9
Cbc0038I Pass  58: suminf.    2.17699 (9) obj. -73.2331 iterations 2
Cbc0038I Pass  59: suminf.    1.45991 (4) obj. -73.2331 iterations 11
Cbc0038I Pass  60: suminf.    0.91721 (4) obj. -73.2331 iterations 3
Cbc0038I Pass  61: suminf.    0.45698 (3) obj. -73.2331 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -68.0722 - took 0.06 seconds
Cbc0012I Integer solution of -68.07225 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 24 rows 26 columns
Cbc0031I 23 added rows had average density of 17.347826
Cbc0013I At root node, 23 cuts changed objective from -93.8763 to -80.524811 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3363 row cuts average 3.0 elements, 4 column cuts (4 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1069 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 430 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 264 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 265 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.659 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -68.07225 best solution, best possible -80.524811 (1.50 seconds)
Cbc0001I Search completed - best objective -68.07225, took 3537 iterations and 24 nodes (1.68 seconds)
Cbc0032I Strong branching done 392 times (3414 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.69

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 9.76586e-06 - average 2.12301e-07, 4 fixed columns
Coin0506I Presolve 36 (-10) rows, 20 (-5) columns and 105 (-30) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 103.47156
Clp0000I Optimal - objective value 103.47156
Coin0511I After Postsolve, objective 103.47156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 103.47156
Clp0000I Optimal - objective value 103.47156
Clp0000I Optimal - objective value 103.47156
Coin0511I After Postsolve, objective 103.47156, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.4715561 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.63376
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -44.9616 iterations 15
Cbc0038I Solution found of -44.9616
Cbc0038I Relaxing continuous gives -44.9616
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -44.9616 to -68.0723 (0.02 seconds)
Cbc0038I Round again with cutoff of -71.0618
Cbc0038I Pass   2: suminf.    1.00350 (5) obj. -71.0618 iterations 3
Cbc0038I Pass   3: suminf.    1.63640 (4) obj. -71.0618 iterations 8
Cbc0038I Pass   4: suminf.    0.97308 (3) obj. -71.0618 iterations 1
Cbc0038I Pass   5: suminf.    0.71044 (4) obj. -71.0618 iterations 2
Cbc0038I Pass   6: suminf.    0.27153 (3) obj. -73.3896 iterations 2
Cbc0038I Pass   7: suminf.    1.37262 (4) obj. -71.0618 iterations 8
Cbc0038I Pass   8: suminf.    1.36538 (4) obj. -71.0618 iterations 2
Cbc0038I Pass   9: suminf.    1.38465 (4) obj. -71.0618 iterations 5
Cbc0038I Pass  10: suminf.    1.10239 (3) obj. -71.0618 iterations 3
Cbc0038I Pass  11: suminf.    0.50327 (2) obj. -71.0618 iterations 3
Cbc0038I Pass  12: suminf.    0.86974 (5) obj. -71.0618 iterations 7
Cbc0038I Pass  13: suminf.    0.77909 (3) obj. -71.0618 iterations 8
Cbc0038I Pass  14: suminf.    2.65036 (7) obj. -71.0618 iterations 6
Cbc0038I Pass  15: suminf.    2.40492 (8) obj. -71.0618 iterations 3
Cbc0038I Pass  16: suminf.    1.73943 (6) obj. -71.0618 iterations 14
Cbc0038I Pass  17: suminf.    0.95129 (4) obj. -71.0618 iterations 2
Cbc0038I Pass  18: suminf.    0.85363 (4) obj. -71.0618 iterations 3
Cbc0038I Pass  19: suminf.    0.68674 (4) obj. -71.0618 iterations 1
Cbc0038I Pass  20: suminf.    1.22688 (6) obj. -71.0618 iterations 10
Cbc0038I Pass  21: suminf.    0.86974 (5) obj. -71.0618 iterations 4
Cbc0038I Pass  22: suminf.    0.77909 (3) obj. -71.0618 iterations 8
Cbc0038I Pass  23: suminf.    0.50327 (2) obj. -71.0618 iterations 2
Cbc0038I Pass  24: suminf.    1.21685 (4) obj. -71.0618 iterations 4
Cbc0038I Pass  25: suminf.    0.50327 (2) obj. -71.0618 iterations 4
Cbc0038I Pass  26: suminf.    1.59897 (6) obj. -71.0618 iterations 11
Cbc0038I Pass  27: suminf.    0.30538 (3) obj. -71.0618 iterations 4
Cbc0038I Pass  28: suminf.    0.30538 (3) obj. -71.0618 iterations 0
Cbc0038I Pass  29: suminf.    0.85363 (4) obj. -71.0618 iterations 4
Cbc0038I Pass  30: suminf.    0.68674 (4) obj. -71.0618 iterations 1
Cbc0038I Pass  31: suminf.    1.22688 (6) obj. -71.0618 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -68.0723 - took 0.04 seconds
Cbc0012I Integer solution of -68.07234 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 30 rows 17 columns
Cbc0031I 9 added rows had average density of 17
Cbc0013I At root node, 9 cuts changed objective from -97.965728 to -86.228012 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1061 row cuts average 4.4 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 416 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -68.07234, took 2730 iterations and 30 nodes (0.22 seconds)
Cbc0032I Strong branching done 242 times (1454 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 45 (-18) columns and 371 (-278) elements
Clp1000I sum of infeasibilities 7.93934e-10 - average 1.84636e-11, 5 fixed columns
Coin0506I Presolve 37 (-6) rows, 39 (-6) columns and 292 (-79) elements
Clp0029I End of values pass after 39 iterations
Clp0000I Optimal - objective value 109.83802
Clp0000I Optimal - objective value 109.83802
Coin0511I After Postsolve, objective 109.83802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 109.83802
Clp0000I Optimal - objective value 109.83802
Clp0000I Optimal - objective value 109.83802
Coin0511I After Postsolve, objective 109.83802, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 109.8380228 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 379 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.962%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 5.44014
Cbc0038I Pass   1: suminf.    1.98989 (13) obj. -83.661 iterations 7
Cbc0038I Pass   2: suminf.    1.98989 (13) obj. -83.661 iterations 0
Cbc0038I Solution found of -36.3412
Cbc0038I Rounding solution of -48.1629 is better than previous of -36.3412

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -52.7985
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.98989 (13) obj. -83.661 iterations 0
Cbc0038I Pass   4: suminf.    1.98989 (13) obj. -83.661 iterations 0
Cbc0038I Pass   5: suminf.    0.46121 (2) obj. -52.7985 iterations 20
Cbc0038I Pass   6: suminf.    0.08750 (1) obj. -68.5134 iterations 2
Cbc0038I Pass   7: suminf.    0.08750 (1) obj. -68.5134 iterations 0
Cbc0038I Pass   8: suminf.    0.15417 (2) obj. -68.38 iterations 3
Cbc0038I Pass   9: suminf.    0.15417 (2) obj. -68.38 iterations 1
Cbc0038I Pass  10: suminf.    0.51815 (2) obj. -52.7985 iterations 3
Cbc0038I Pass  11: suminf.    0.08750 (1) obj. -66.5134 iterations 2
Cbc0038I Pass  12: suminf.    0.08750 (1) obj. -66.5134 iterations 0
Cbc0038I Pass  13: suminf.    1.33845 (10) obj. -72.0596 iterations 8
Cbc0038I Pass  14: suminf.    1.33845 (10) obj. -72.0596 iterations 0
Cbc0038I Pass  15: suminf.    0.52982 (3) obj. -52.7985 iterations 13
Cbc0038I Pass  16: suminf.    0.35000 (1) obj. -55.2509 iterations 3
Cbc0038I Pass  17: suminf.    0.41956 (1) obj. -52.7985 iterations 1
Cbc0038I Pass  18: suminf.    0.56764 (3) obj. -52.7985 iterations 5
Cbc0038I Pass  19: suminf.    0.56764 (3) obj. -52.7985 iterations 1
Cbc0038I Pass  20: suminf.    0.46250 (1) obj. -59.9042 iterations 3
Cbc0038I Pass  21: suminf.    0.26096 (1) obj. -52.7985 iterations 1
Cbc0038I Pass  22: suminf.    1.15940 (9) obj. -52.7985 iterations 9
Cbc0038I Pass  23: suminf.    0.93103 (3) obj. -52.7985 iterations 4
Cbc0038I Pass  24: suminf.    0.44765 (2) obj. -52.7985 iterations 1
Cbc0038I Pass  25: suminf.    0.36250 (1) obj. -59.4603 iterations 2
Cbc0038I Pass  26: suminf.    0.17355 (1) obj. -52.7985 iterations 1
Cbc0038I Pass  27: suminf.    1.65142 (8) obj. -52.7985 iterations 14
Cbc0038I Pass  28: suminf.    1.41155 (6) obj. -52.7985 iterations 3
Cbc0038I Pass  29: suminf.    0.23750 (1) obj. -57.8435 iterations 7
Cbc0038I Pass  30: suminf.    0.38059 (1) obj. -52.7985 iterations 2
Cbc0038I Pass  31: suminf.    1.70926 (11) obj. -52.7985 iterations 14
Cbc0038I Pass  32: suminf.    1.31271 (5) obj. -52.7985 iterations 5
Cbc0038I Rounding solution of -68.0722 is better than previous of -48.1629

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -73.3614
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.98989 (13) obj. -83.661 iterations 0
Cbc0038I Pass  33: suminf.    1.98989 (13) obj. -83.661 iterations 0
Cbc0038I Pass  34: suminf.    0.71590 (5) obj. -73.3614 iterations 15
Cbc0038I Pass  35: suminf.    0.19481 (3) obj. -73.3614 iterations 5
Cbc0038I Pass  36: suminf.    0.29938 (2) obj. -73.3614 iterations 3
Cbc0038I Pass  37: suminf.    0.29770 (2) obj. -73.3614 iterations 1
Cbc0038I Pass  38: suminf.    0.83134 (5) obj. -73.3614 iterations 6
Cbc0038I Pass  39: suminf.    0.59182 (4) obj. -73.3614 iterations 2
Cbc0038I Pass  40: suminf.    0.54617 (3) obj. -73.3614 iterations 6
Cbc0038I Pass  41: suminf.    0.54617 (3) obj. -73.3614 iterations 0
Cbc0038I Pass  42: suminf.    0.49222 (3) obj. -73.3614 iterations 1
Cbc0038I Pass  43: suminf.    0.17083 (2) obj. -74.18 iterations 2
Cbc0038I Pass  44: suminf.    0.68067 (4) obj. -73.3614 iterations 4
Cbc0038I Pass  45: suminf.    1.14968 (6) obj. -73.3614 iterations 8
Cbc0038I Pass  46: suminf.    0.76891 (5) obj. -73.3614 iterations 2
Cbc0038I Pass  47: suminf.    0.42026 (3) obj. -73.3614 iterations 3
Cbc0038I Pass  48: suminf.    0.32037 (3) obj. -73.3614 iterations 1
Cbc0038I Pass  49: suminf.    0.55179 (3) obj. -73.3614 iterations 2
Cbc0038I Pass  50: suminf.    1.72264 (6) obj. -73.3614 iterations 10
Cbc0038I Pass  51: suminf.    1.62510 (6) obj. -73.3614 iterations 3
Cbc0038I Pass  52: suminf.    1.85551 (7) obj. -73.3614 iterations 10
Cbc0038I Pass  53: suminf.    1.41974 (5) obj. -73.3614 iterations 5
Cbc0038I Pass  54: suminf.    0.85784 (4) obj. -73.3614 iterations 3
Cbc0038I Pass  55: suminf.    0.46638 (3) obj. -73.3614 iterations 4
Cbc0038I Pass  56: suminf.    0.52329 (2) obj. -73.854 iterations 2
Cbc0038I Pass  57: suminf.    2.76010 (9) obj. -73.3614 iterations 9
Cbc0038I Pass  58: suminf.    2.20905 (9) obj. -73.3614 iterations 2
Cbc0038I Pass  59: suminf.    1.48441 (4) obj. -73.3614 iterations 11
Cbc0038I Pass  60: suminf.    0.85784 (4) obj. -73.3614 iterations 3
Cbc0038I Pass  61: suminf.    0.46638 (3) obj. -73.3614 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -68.0722 - took 0.07 seconds
Cbc0012I Integer solution of -68.07225 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 25 rows 27 columns
Cbc0031I 23 added rows had average density of 19.173913
Cbc0013I At root node, 23 cuts changed objective from -94.517603 to -80.076873 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2756 row cuts average 2.4 elements, 4 column cuts (4 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 658 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 58 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 332 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 252 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 229 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.738 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -68.07225 best solution, best possible -80.076873 (1.64 seconds)
Cbc0001I Search completed - best objective -68.07225, took 3412 iterations and 36 nodes (1.88 seconds)
Cbc0032I Strong branching done 550 times (4515 iterations), fathomed 2 nodes and fixed 16 variables
Cbc0035I Maximum depth 10, 37 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.88

