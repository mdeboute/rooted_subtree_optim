Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 73 (-5) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 1.2065e-05 - average 9.50001e-08, 7 fixed columns
Coin0506I Presolve 113 (-14) rows, 66 (-7) columns and 350 (-42) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.7902615 - largest nonzero change 0 ( 0%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 57.134949
Clp0000I Optimal - objective value 57.134949
Coin0511I After Postsolve, objective 57.134949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.134949
Clp0000I Optimal - objective value 57.134949
Clp0000I Optimal - objective value 57.134949
Coin0511I After Postsolve, objective 57.134949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.13494908 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 127 rows, 73 columns (72 integer (72 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.165%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 11.5304
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.01673 iterations 58
Cbc0038I Solution found of 6.01673
Cbc0038I Relaxing continuous gives 6.01673
Cbc0038I Rounding solution of -19.2302 is better than previous of 6.01673

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -19.2302 to -22.6688 (0.05 seconds)
Cbc0038I Round again with cutoff of -26.1155
Cbc0038I Pass   2: suminf.    3.69369 (14) obj. -26.1155 iterations 18
Cbc0038I Pass   3: suminf.    2.70091 (8) obj. -26.1155 iterations 11
Cbc0038I Pass   4: suminf.    0.55857 (5) obj. -26.1155 iterations 15
Cbc0038I Pass   5: suminf.    1.48631 (4) obj. -26.1155 iterations 13
Cbc0038I Pass   6: suminf.    0.53986 (5) obj. -26.1155 iterations 7
Cbc0038I Pass   7: suminf.    0.53645 (11) obj. -26.1155 iterations 5
Cbc0038I Pass   8: suminf.    1.62076 (6) obj. -26.1155 iterations 18
Cbc0038I Pass   9: suminf.    1.28425 (6) obj. -26.1155 iterations 1
Cbc0038I Pass  10: suminf.    1.33715 (5) obj. -26.1155 iterations 11
Cbc0038I Pass  11: suminf.    0.66182 (3) obj. -26.1155 iterations 2
Cbc0038I Pass  12: suminf.    0.44504 (3) obj. -26.1155 iterations 3
Cbc0038I Pass  13: suminf.    1.33715 (5) obj. -26.1155 iterations 5
Cbc0038I Pass  14: suminf.    2.49284 (9) obj. -26.1155 iterations 21
Cbc0038I Pass  15: suminf.    0.79734 (4) obj. -26.1155 iterations 10
Cbc0038I Pass  16: suminf.    0.79734 (4) obj. -26.1155 iterations 0
Cbc0038I Pass  17: suminf.    0.75172 (3) obj. -26.1155 iterations 5
Cbc0038I Pass  18: suminf.    0.71792 (3) obj. -26.1155 iterations 2
Cbc0038I Pass  19: suminf.    0.82131 (3) obj. -26.1155 iterations 3
Cbc0038I Pass  20: suminf.    0.78501 (3) obj. -26.1155 iterations 2
Cbc0038I Pass  21: suminf.    1.41996 (7) obj. -26.1155 iterations 15
Cbc0038I Pass  22: suminf.    1.09334 (6) obj. -26.1155 iterations 2
Cbc0038I Pass  23: suminf.    0.74670 (5) obj. -26.1155 iterations 3
Cbc0038I Pass  24: suminf.    1.85407 (5) obj. -26.1155 iterations 10
Cbc0038I Pass  25: suminf.    0.81775 (5) obj. -26.1155 iterations 2
Cbc0038I Pass  26: suminf.    0.79471 (5) obj. -26.1155 iterations 2
Cbc0038I Pass  27: suminf.    1.56027 (4) obj. -26.1155 iterations 6
Cbc0038I Pass  28: suminf.    1.56027 (4) obj. -26.1155 iterations 1
Cbc0038I Pass  29: suminf.    1.58094 (4) obj. -26.1155 iterations 4
Cbc0038I Pass  30: suminf.    1.56027 (4) obj. -26.1155 iterations 2
Cbc0038I Pass  31: suminf.    1.02192 (5) obj. -26.1155 iterations 37
Cbc0038I Rounding solution of -24.6459 is better than previous of -22.6688

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 89 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -24.6459 to -26.9848 (0.10 seconds)
Cbc0038I Round again with cutoff of -33.0149
Cbc0038I Pass  31: suminf.    3.97726 (14) obj. -33.0149 iterations 1
Cbc0038I Pass  32: suminf.    3.79779 (12) obj. -33.0149 iterations 5
Cbc0038I Pass  33: suminf.    1.61424 (7) obj. -33.0149 iterations 15
Cbc0038I Pass  34: suminf.    1.61424 (7) obj. -33.0149 iterations 0
Cbc0038I Pass  35: suminf.    2.69033 (8) obj. -33.0149 iterations 12
Cbc0038I Pass  36: suminf.    2.49983 (7) obj. -33.0149 iterations 5
Cbc0038I Pass  37: suminf.    2.29635 (7) obj. -33.0149 iterations 4
Cbc0038I Pass  38: suminf.    2.29635 (7) obj. -33.0149 iterations 0
Cbc0038I Pass  39: suminf.    2.49983 (7) obj. -33.0149 iterations 5
Cbc0038I Pass  40: suminf.    3.50759 (10) obj. -33.0149 iterations 17
Cbc0038I Pass  41: suminf.    2.37873 (10) obj. -33.0149 iterations 8
Cbc0038I Pass  42: suminf.    2.38607 (10) obj. -33.0149 iterations 2
Cbc0038I Pass  43: suminf.    2.68725 (8) obj. -33.0149 iterations 12
Cbc0038I Pass  44: suminf.    1.37181 (7) obj. -33.0149 iterations 4
Cbc0038I Pass  45: suminf.    1.14951 (6) obj. -33.0149 iterations 4
Cbc0038I Pass  46: suminf.    2.50278 (7) obj. -33.0149 iterations 9
Cbc0038I Pass  47: suminf.    1.44588 (8) obj. -33.0149 iterations 3
Cbc0038I Pass  48: suminf.    4.40145 (11) obj. -33.0149 iterations 12
Cbc0038I Pass  49: suminf.    2.12740 (9) obj. -33.0149 iterations 4
Cbc0038I Pass  50: suminf.    1.40133 (6) obj. -33.0149 iterations 7
Cbc0038I Pass  51: suminf.    3.30895 (9) obj. -33.0149 iterations 7
Cbc0038I Pass  52: suminf.    1.46481 (6) obj. -33.0149 iterations 5
Cbc0038I Pass  53: suminf.    2.96520 (9) obj. -33.0149 iterations 15
Cbc0038I Pass  54: suminf.    1.61611 (6) obj. -33.0149 iterations 10
Cbc0038I Pass  55: suminf.    2.13934 (5) obj. -33.0149 iterations 15
Cbc0038I Pass  56: suminf.    2.13934 (5) obj. -33.0149 iterations 0
Cbc0038I Pass  57: suminf.    1.43765 (5) obj. -33.0149 iterations 6
Cbc0038I Pass  58: suminf.    1.35688 (6) obj. -33.0149 iterations 3
Cbc0038I Pass  59: suminf.    2.83560 (7) obj. -33.0149 iterations 7
Cbc0038I Pass  60: suminf.    1.40316 (7) obj. -33.0149 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 86 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -26.9848 - took 0.15 seconds
Cbc0012I Integer solution of -26.9848 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 127 rows 73 columns, reduced to 72 rows 43 columns
Cbc0031I 28 added rows had average density of 35.5
Cbc0013I At root node, 28 cuts changed objective from -57.134949 to -48.636364 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17879 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2336 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.9848 best solution, best possible -48.636364 (1.07 seconds)
Cbc0012I Integer solution of -27.27005 found by rounding after 9890 iterations and 29 nodes (1.16 seconds)
Cbc0004I Integer solution of -27.53904 found after 9953 iterations and 42 nodes (1.16 seconds)
Cbc0038I Full problem 127 rows 73 columns, reduced to 8 rows 11 columns
Cbc0012I Integer solution of -28.87065 found by RINS after 9985 iterations and 47 nodes (1.17 seconds)
Cbc0012I Integer solution of -29.0227 found by rounding after 9999 iterations and 51 nodes (1.17 seconds)
Cbc0004I Integer solution of -29.04315 found after 10042 iterations and 56 nodes (1.18 seconds)
Cbc0004I Integer solution of -29.3988 found after 10050 iterations and 58 nodes (1.18 seconds)
Cbc0038I Full problem 127 rows 73 columns, reduced to 30 rows 23 columns
Cbc0001I Search completed - best objective -29.39879999999999, took 12109 iterations and 116 nodes (1.39 seconds)
Cbc0032I Strong branching done 1270 times (16736 iterations), fathomed 16 nodes and fixed 77 variables
Cbc0035I Maximum depth 19, 180 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 109 (-43) columns and 1739 (-1564) elements
Clp1000I sum of infeasibilities 5.05586e-08 - average 5.4955e-10, 18 fixed columns
Coin0506I Presolve 77 (-15) rows, 91 (-18) columns and 1330 (-409) elements
Clp0006I 0  Obj 58.424701 Dual inf 4.6728355 (90)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.2530773 - largest nonzero change 2.4850409e-05 ( 0.0016580886%) - largest zero change 2.5736794e-05
Clp0000I Optimal - objective value 73.238352
Clp0000I Optimal - objective value 73.238352
Coin0511I After Postsolve, objective 73.238352, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 73.238352
Clp0000I Optimal - objective value 73.238352
Clp0000I Optimal - objective value 73.238352
Clp0000I Optimal - objective value 73.238352
Coin0511I After Postsolve, objective 73.238352, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.23835232 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 112 columns (112 integer (112 of which binary)) and 1759 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.460%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 9.8754
Cbc0038I Pass   1: suminf.    2.28920 (30) obj. -33.5043 iterations 17
Cbc0038I Pass   2: suminf.    2.28920 (30) obj. -33.5043 iterations 0
Cbc0038I Pass   3: suminf.    0.50995 (9) obj. 2.95043 iterations 21
Cbc0038I Solution found of 12.378
Cbc0038I Rounding solution of -8.46887 is better than previous of 12.378

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 112 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -8.46887 to -24.8784 (0.03 seconds)
Cbc0038I Round again with cutoff of -28.8756
Cbc0038I Pass   4: suminf.    2.28920 (30) obj. -33.5043 iterations 0
Cbc0038I Pass   5: suminf.    2.28920 (30) obj. -33.5043 iterations 0
Cbc0038I Pass   6: suminf.    1.54854 (9) obj. -28.8756 iterations 31
Cbc0038I Pass   7: suminf.    1.54854 (9) obj. -28.8756 iterations 0
Cbc0038I Pass   8: suminf.    0.77694 (5) obj. -28.8756 iterations 15
Cbc0038I Pass   9: suminf.    0.53395 (4) obj. -28.8756 iterations 4
Cbc0038I Pass  10: suminf.    0.48346 (4) obj. -28.8756 iterations 11
Cbc0038I Pass  11: suminf.    0.40965 (4) obj. -28.8756 iterations 2
Cbc0038I Pass  12: suminf.    1.19853 (4) obj. -28.8756 iterations 7
Cbc0038I Pass  13: suminf.    1.77924 (13) obj. -28.8756 iterations 27
Cbc0038I Pass  14: suminf.    1.62489 (12) obj. -28.8756 iterations 4
Cbc0038I Pass  15: suminf.    1.01907 (4) obj. -28.8756 iterations 20
Cbc0038I Pass  16: suminf.    1.01907 (4) obj. -28.8756 iterations 0
Cbc0038I Pass  17: suminf.    0.59566 (3) obj. -28.8756 iterations 4
Cbc0038I Pass  18: suminf.    0.53578 (4) obj. -29.9585 iterations 2
Cbc0038I Pass  19: suminf.    1.07677 (5) obj. -28.8756 iterations 13
Cbc0038I Pass  20: suminf.    1.07677 (5) obj. -28.8756 iterations 1
Cbc0038I Pass  21: suminf.    1.30300 (4) obj. -28.8756 iterations 8
Cbc0038I Pass  22: suminf.    1.30300 (4) obj. -28.8756 iterations 0
Cbc0038I Pass  23: suminf.    0.44762 (4) obj. -28.8756 iterations 6
Cbc0038I Pass  24: suminf.    0.40965 (4) obj. -28.8756 iterations 2
Cbc0038I Pass  25: suminf.    1.19853 (4) obj. -28.8756 iterations 7
Cbc0038I Pass  26: suminf.    3.18704 (15) obj. -28.8756 iterations 34
Cbc0038I Pass  27: suminf.    2.75725 (12) obj. -28.8756 iterations 9
Cbc0038I Pass  28: suminf.    1.21725 (5) obj. -28.8756 iterations 16
Cbc0038I Pass  29: suminf.    0.91671 (4) obj. -28.8756 iterations 5
Cbc0038I Pass  30: suminf.    0.79128 (5) obj. -28.8756 iterations 6
Cbc0038I Pass  31: suminf.    0.79126 (5) obj. -28.8756 iterations 4
Cbc0038I Pass  32: suminf.    0.98576 (4) obj. -28.8756 iterations 11
Cbc0038I Pass  33: suminf.    2.47597 (12) obj. -28.8756 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 112 columns, reduced to 19 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -24.8784 to -25.6185 (0.06 seconds)
Cbc0038I Round again with cutoff of -36.0704
Cbc0038I Pass  33: suminf.    3.31457 (32) obj. -36.0704 iterations 1
Cbc0038I Pass  34: suminf.    2.67092 (33) obj. -36.0704 iterations 2
Cbc0038I Pass  35: suminf.    2.18177 (12) obj. -36.0704 iterations 39
Cbc0038I Pass  36: suminf.    1.69815 (12) obj. -36.0704 iterations 3
Cbc0038I Pass  37: suminf.    1.36928 (8) obj. -36.0704 iterations 19
Cbc0038I Pass  38: suminf.    0.86626 (8) obj. -36.0704 iterations 8
Cbc0038I Pass  39: suminf.    1.42785 (8) obj. -36.0704 iterations 12
Cbc0038I Pass  40: suminf.    0.93131 (8) obj. -36.0704 iterations 8
Cbc0038I Pass  41: suminf.    1.36928 (8) obj. -36.0704 iterations 9
Cbc0038I Pass  42: suminf.    2.13312 (12) obj. -36.0704 iterations 23
Cbc0038I Pass  43: suminf.    1.83674 (11) obj. -36.0704 iterations 5
Cbc0038I Pass  44: suminf.    2.69443 (17) obj. -36.0704 iterations 30
Cbc0038I Pass  45: suminf.    2.21595 (10) obj. -36.0704 iterations 5
Cbc0038I Pass  46: suminf.    2.40746 (8) obj. -36.0704 iterations 10
Cbc0038I Pass  47: suminf.    1.97602 (8) obj. -36.0704 iterations 4
Cbc0038I Pass  48: suminf.    2.21595 (10) obj. -36.0704 iterations 12
Cbc0038I Pass  49: suminf.    1.85397 (11) obj. -36.0704 iterations 24
Cbc0038I Pass  50: suminf.    1.57031 (9) obj. -36.0704 iterations 8
Cbc0038I Pass  51: suminf.    1.25047 (9) obj. -36.7931 iterations 4
Cbc0038I Pass  52: suminf.    1.35620 (8) obj. -36.0704 iterations 11
Cbc0038I Pass  53: suminf.    1.30925 (8) obj. -36.0704 iterations 4
Cbc0038I Pass  54: suminf.    1.63739 (8) obj. -36.0704 iterations 6
Cbc0038I Pass  55: suminf.    1.54074 (11) obj. -36.0704 iterations 5
Cbc0038I Pass  56: suminf.    1.77213 (10) obj. -36.0704 iterations 9
Cbc0038I Pass  57: suminf.    1.48571 (7) obj. -36.0704 iterations 4
Cbc0038I Pass  58: suminf.    2.26221 (10) obj. -36.0704 iterations 12
Cbc0038I Pass  59: suminf.    2.26221 (10) obj. -36.0704 iterations 0
Cbc0038I Pass  60: suminf.    2.32838 (8) obj. -36.0704 iterations 7
Cbc0038I Pass  61: suminf.    1.91820 (8) obj. -36.0704 iterations 4
Cbc0038I Pass  62: suminf.    2.21595 (10) obj. -36.0704 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -25.6185 - took 0.05 seconds
Cbc0012I Integer solution of -25.6185 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 95 rows 112 columns, reduced to 13 rows 14 columns
Cbc0031I 51 added rows had average density of 31.529412
Cbc0013I At root node, 51 cuts changed objective from -64.849688 to -35.686081 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15292 row cuts average 5.4 elements, 1 column cuts (1 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1770 row cuts average 105.2 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 415 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1299 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 56.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 50 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.693 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -25.6185 best solution, best possible -35.686081 (2.55 seconds)
Cbc0012I Integer solution of -26.94694 found by DiveCoefficient after 5336 iterations and 1 nodes (2.59 seconds)
Cbc0012I Integer solution of -27.09518 found by rounding after 5338 iterations and 3 nodes (2.59 seconds)
Cbc0012I Integer solution of -28.26743 found by rounding after 5340 iterations and 4 nodes (2.59 seconds)
Cbc0012I Integer solution of -28.40676 found by DiveCoefficient after 5366 iterations and 4 nodes (2.60 seconds)
Cbc0012I Integer solution of -28.555 found by rounding after 5368 iterations and 5 nodes (2.60 seconds)
Cbc0012I Integer solution of -28.82637 found by DiveCoefficient after 5380 iterations and 6 nodes (2.60 seconds)
Cbc0012I Integer solution of -28.87065 found by DiveCoefficient after 5413 iterations and 6 nodes (2.61 seconds)
Cbc0012I Integer solution of -29.04315 found by rounding after 5478 iterations and 13 nodes (2.62 seconds)
Cbc0012I Integer solution of -29.3988 found by DiveCoefficient after 5625 iterations and 21 nodes (2.64 seconds)
Cbc0038I Full problem 95 rows 112 columns, reduced to 39 rows 50 columns
Cbc0001I Search completed - best objective -29.39879999999999, took 7339 iterations and 48 nodes (3.17 seconds)
Cbc0032I Strong branching done 620 times (10628 iterations), fathomed 6 nodes and fixed 6 variables
Cbc0035I Maximum depth 10, 67 variables fixed on reduced cost
Total time (CPU seconds):       2.36   (Wallclock seconds):       3.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 73 (-5) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 1.2065e-05 - average 9.50001e-08, 7 fixed columns
Coin0506I Presolve 113 (-14) rows, 66 (-7) columns and 350 (-42) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.7902615 - largest nonzero change 0 ( 0%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 57.134949
Clp0000I Optimal - objective value 57.134949
Coin0511I After Postsolve, objective 57.134949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 57.134949
Clp0000I Optimal - objective value 57.134949
Clp0000I Optimal - objective value 57.134949
Coin0511I After Postsolve, objective 57.134949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.13494908 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 127 rows, 73 columns (72 integer (72 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.165%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 11.5304
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.01673 iterations 58
Cbc0038I Solution found of 6.01673
Cbc0038I Relaxing continuous gives 6.01673
Cbc0038I Rounding solution of -19.2302 is better than previous of 6.01673

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -19.2302 to -22.6688 (0.05 seconds)
Cbc0038I Round again with cutoff of -26.1155
Cbc0038I Pass   2: suminf.    3.69369 (14) obj. -26.1155 iterations 18
Cbc0038I Pass   3: suminf.    2.70091 (8) obj. -26.1155 iterations 11
Cbc0038I Pass   4: suminf.    0.55857 (5) obj. -26.1155 iterations 15
Cbc0038I Pass   5: suminf.    1.48631 (4) obj. -26.1155 iterations 13
Cbc0038I Pass   6: suminf.    0.53986 (5) obj. -26.1155 iterations 7
Cbc0038I Pass   7: suminf.    0.53645 (11) obj. -26.1155 iterations 5
Cbc0038I Pass   8: suminf.    1.62076 (6) obj. -26.1155 iterations 18
Cbc0038I Pass   9: suminf.    1.28425 (6) obj. -26.1155 iterations 1
Cbc0038I Pass  10: suminf.    1.33715 (5) obj. -26.1155 iterations 11
Cbc0038I Pass  11: suminf.    0.66182 (3) obj. -26.1155 iterations 2
Cbc0038I Pass  12: suminf.    0.44504 (3) obj. -26.1155 iterations 3
Cbc0038I Pass  13: suminf.    1.33715 (5) obj. -26.1155 iterations 5
Cbc0038I Pass  14: suminf.    2.49284 (9) obj. -26.1155 iterations 21
Cbc0038I Pass  15: suminf.    0.79734 (4) obj. -26.1155 iterations 10
Cbc0038I Pass  16: suminf.    0.79734 (4) obj. -26.1155 iterations 0
Cbc0038I Pass  17: suminf.    0.75172 (3) obj. -26.1155 iterations 5
Cbc0038I Pass  18: suminf.    0.71792 (3) obj. -26.1155 iterations 2
Cbc0038I Pass  19: suminf.    0.82131 (3) obj. -26.1155 iterations 3
Cbc0038I Pass  20: suminf.    0.78501 (3) obj. -26.1155 iterations 2
Cbc0038I Pass  21: suminf.    1.41996 (7) obj. -26.1155 iterations 15
Cbc0038I Pass  22: suminf.    1.09334 (6) obj. -26.1155 iterations 2
Cbc0038I Pass  23: suminf.    0.74670 (5) obj. -26.1155 iterations 3
Cbc0038I Pass  24: suminf.    1.85407 (5) obj. -26.1155 iterations 10
Cbc0038I Pass  25: suminf.    0.81775 (5) obj. -26.1155 iterations 2
Cbc0038I Pass  26: suminf.    0.79471 (5) obj. -26.1155 iterations 2
Cbc0038I Pass  27: suminf.    1.56027 (4) obj. -26.1155 iterations 6
Cbc0038I Pass  28: suminf.    1.56027 (4) obj. -26.1155 iterations 1
Cbc0038I Pass  29: suminf.    1.58094 (4) obj. -26.1155 iterations 4
Cbc0038I Pass  30: suminf.    1.56027 (4) obj. -26.1155 iterations 2
Cbc0038I Pass  31: suminf.    1.02192 (5) obj. -26.1155 iterations 37
Cbc0038I Rounding solution of -24.6459 is better than previous of -22.6688

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 89 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -24.6459 to -26.9848 (0.10 seconds)
Cbc0038I Round again with cutoff of -33.0149
Cbc0038I Pass  31: suminf.    3.97726 (14) obj. -33.0149 iterations 1
Cbc0038I Pass  32: suminf.    3.79779 (12) obj. -33.0149 iterations 5
Cbc0038I Pass  33: suminf.    1.61424 (7) obj. -33.0149 iterations 15
Cbc0038I Pass  34: suminf.    1.61424 (7) obj. -33.0149 iterations 0
Cbc0038I Pass  35: suminf.    2.69033 (8) obj. -33.0149 iterations 12
Cbc0038I Pass  36: suminf.    2.49983 (7) obj. -33.0149 iterations 5
Cbc0038I Pass  37: suminf.    2.29635 (7) obj. -33.0149 iterations 4
Cbc0038I Pass  38: suminf.    2.29635 (7) obj. -33.0149 iterations 0
Cbc0038I Pass  39: suminf.    2.49983 (7) obj. -33.0149 iterations 5
Cbc0038I Pass  40: suminf.    3.50759 (10) obj. -33.0149 iterations 17
Cbc0038I Pass  41: suminf.    2.37873 (10) obj. -33.0149 iterations 8
Cbc0038I Pass  42: suminf.    2.38607 (10) obj. -33.0149 iterations 2
Cbc0038I Pass  43: suminf.    2.68725 (8) obj. -33.0149 iterations 12
Cbc0038I Pass  44: suminf.    1.37181 (7) obj. -33.0149 iterations 4
Cbc0038I Pass  45: suminf.    1.14951 (6) obj. -33.0149 iterations 4
Cbc0038I Pass  46: suminf.    2.50278 (7) obj. -33.0149 iterations 9
Cbc0038I Pass  47: suminf.    1.44588 (8) obj. -33.0149 iterations 3
Cbc0038I Pass  48: suminf.    4.40145 (11) obj. -33.0149 iterations 12
Cbc0038I Pass  49: suminf.    2.12740 (9) obj. -33.0149 iterations 4
Cbc0038I Pass  50: suminf.    1.40133 (6) obj. -33.0149 iterations 7
Cbc0038I Pass  51: suminf.    3.30895 (9) obj. -33.0149 iterations 7
Cbc0038I Pass  52: suminf.    1.46481 (6) obj. -33.0149 iterations 5
Cbc0038I Pass  53: suminf.    2.96520 (9) obj. -33.0149 iterations 15
Cbc0038I Pass  54: suminf.    1.61611 (6) obj. -33.0149 iterations 10
Cbc0038I Pass  55: suminf.    2.13934 (5) obj. -33.0149 iterations 15
Cbc0038I Pass  56: suminf.    2.13934 (5) obj. -33.0149 iterations 0
Cbc0038I Pass  57: suminf.    1.43765 (5) obj. -33.0149 iterations 6
Cbc0038I Pass  58: suminf.    1.35688 (6) obj. -33.0149 iterations 3
Cbc0038I Pass  59: suminf.    2.83560 (7) obj. -33.0149 iterations 7
Cbc0038I Pass  60: suminf.    1.40316 (7) obj. -33.0149 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 73 columns, reduced to 86 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -26.9848 - took 0.15 seconds
Cbc0012I Integer solution of -26.9848 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 127 rows 73 columns, reduced to 72 rows 43 columns
Cbc0031I 28 added rows had average density of 35.5
Cbc0013I At root node, 28 cuts changed objective from -57.134949 to -48.636364 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17879 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2336 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.9848 best solution, best possible -48.636364 (1.05 seconds)
Cbc0012I Integer solution of -27.27005 found by rounding after 9890 iterations and 29 nodes (1.15 seconds)
Cbc0004I Integer solution of -27.53904 found after 9953 iterations and 42 nodes (1.15 seconds)
Cbc0038I Full problem 127 rows 73 columns, reduced to 8 rows 11 columns
Cbc0012I Integer solution of -28.87065 found by RINS after 9985 iterations and 47 nodes (1.16 seconds)
Cbc0012I Integer solution of -29.0227 found by rounding after 9999 iterations and 51 nodes (1.16 seconds)
Cbc0004I Integer solution of -29.04315 found after 10042 iterations and 56 nodes (1.16 seconds)
Cbc0004I Integer solution of -29.3988 found after 10050 iterations and 58 nodes (1.16 seconds)
Cbc0038I Full problem 127 rows 73 columns, reduced to 30 rows 23 columns
Cbc0001I Search completed - best objective -29.39879999999999, took 12109 iterations and 116 nodes (1.39 seconds)
Cbc0032I Strong branching done 1270 times (16736 iterations), fathomed 16 nodes and fixed 77 variables
Cbc0035I Maximum depth 19, 180 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 109 (-44) columns and 1739 (-1565) elements
Clp1000I sum of infeasibilities 5.05586e-08 - average 5.4955e-10, 18 fixed columns
Coin0506I Presolve 77 (-15) rows, 91 (-18) columns and 1330 (-409) elements
Clp0006I 0  Obj 58.424701 Dual inf 4.6728355 (90)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.2530773 - largest nonzero change 2.4850409e-05 ( 0.0016580886%) - largest zero change 2.5736794e-05
Clp0000I Optimal - objective value 73.238352
Clp0000I Optimal - objective value 73.238352
Coin0511I After Postsolve, objective 73.238352, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 73.238352
Clp0000I Optimal - objective value 73.238352
Clp0000I Optimal - objective value 73.238352
Clp0000I Optimal - objective value 73.238352
Coin0511I After Postsolve, objective 73.238352, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.23835232 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 112 columns (112 integer (112 of which binary)) and 1759 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.460%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 9.8754
Cbc0038I Pass   1: suminf.    2.28920 (30) obj. -33.5043 iterations 17
Cbc0038I Pass   2: suminf.    2.28920 (30) obj. -33.5043 iterations 0
Cbc0038I Pass   3: suminf.    0.50995 (9) obj. 2.95043 iterations 21
Cbc0038I Solution found of 12.378
Cbc0038I Rounding solution of -8.46887 is better than previous of 12.378

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 112 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -8.46887 to -24.8784 (0.04 seconds)
Cbc0038I Round again with cutoff of -28.8756
Cbc0038I Pass   4: suminf.    2.28920 (30) obj. -33.5043 iterations 0
Cbc0038I Pass   5: suminf.    2.28920 (30) obj. -33.5043 iterations 0
Cbc0038I Pass   6: suminf.    1.54854 (9) obj. -28.8756 iterations 31
Cbc0038I Pass   7: suminf.    1.54854 (9) obj. -28.8756 iterations 0
Cbc0038I Pass   8: suminf.    0.77694 (5) obj. -28.8756 iterations 15
Cbc0038I Pass   9: suminf.    0.53395 (4) obj. -28.8756 iterations 4
Cbc0038I Pass  10: suminf.    0.48346 (4) obj. -28.8756 iterations 11
Cbc0038I Pass  11: suminf.    0.40965 (4) obj. -28.8756 iterations 2
Cbc0038I Pass  12: suminf.    1.19853 (4) obj. -28.8756 iterations 7
Cbc0038I Pass  13: suminf.    1.77924 (13) obj. -28.8756 iterations 27
Cbc0038I Pass  14: suminf.    1.62489 (12) obj. -28.8756 iterations 4
Cbc0038I Pass  15: suminf.    1.01907 (4) obj. -28.8756 iterations 20
Cbc0038I Pass  16: suminf.    1.01907 (4) obj. -28.8756 iterations 0
Cbc0038I Pass  17: suminf.    0.59566 (3) obj. -28.8756 iterations 4
Cbc0038I Pass  18: suminf.    0.53578 (4) obj. -29.9585 iterations 2
Cbc0038I Pass  19: suminf.    1.07677 (5) obj. -28.8756 iterations 13
Cbc0038I Pass  20: suminf.    1.07677 (5) obj. -28.8756 iterations 1
Cbc0038I Pass  21: suminf.    1.30300 (4) obj. -28.8756 iterations 8
Cbc0038I Pass  22: suminf.    1.30300 (4) obj. -28.8756 iterations 0
Cbc0038I Pass  23: suminf.    0.44762 (4) obj. -28.8756 iterations 6
Cbc0038I Pass  24: suminf.    0.40965 (4) obj. -28.8756 iterations 2
Cbc0038I Pass  25: suminf.    1.19853 (4) obj. -28.8756 iterations 7
Cbc0038I Pass  26: suminf.    3.18704 (15) obj. -28.8756 iterations 34
Cbc0038I Pass  27: suminf.    2.75725 (12) obj. -28.8756 iterations 9
Cbc0038I Pass  28: suminf.    1.21725 (5) obj. -28.8756 iterations 16
Cbc0038I Pass  29: suminf.    0.91671 (4) obj. -28.8756 iterations 5
Cbc0038I Pass  30: suminf.    0.79128 (5) obj. -28.8756 iterations 6
Cbc0038I Pass  31: suminf.    0.79126 (5) obj. -28.8756 iterations 4
Cbc0038I Pass  32: suminf.    0.98576 (4) obj. -28.8756 iterations 11
Cbc0038I Pass  33: suminf.    2.47597 (12) obj. -28.8756 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 112 columns, reduced to 19 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -24.8784 to -25.6185 (0.06 seconds)
Cbc0038I Round again with cutoff of -36.0704
Cbc0038I Pass  33: suminf.    3.31457 (32) obj. -36.0704 iterations 1
Cbc0038I Pass  34: suminf.    2.67092 (33) obj. -36.0704 iterations 2
Cbc0038I Pass  35: suminf.    2.18177 (12) obj. -36.0704 iterations 39
Cbc0038I Pass  36: suminf.    1.69815 (12) obj. -36.0704 iterations 3
Cbc0038I Pass  37: suminf.    1.36928 (8) obj. -36.0704 iterations 19
Cbc0038I Pass  38: suminf.    0.86626 (8) obj. -36.0704 iterations 8
Cbc0038I Pass  39: suminf.    1.42785 (8) obj. -36.0704 iterations 12
Cbc0038I Pass  40: suminf.    0.93131 (8) obj. -36.0704 iterations 8
Cbc0038I Pass  41: suminf.    1.36928 (8) obj. -36.0704 iterations 9
Cbc0038I Pass  42: suminf.    2.13312 (12) obj. -36.0704 iterations 23
Cbc0038I Pass  43: suminf.    1.83674 (11) obj. -36.0704 iterations 5
Cbc0038I Pass  44: suminf.    2.69443 (17) obj. -36.0704 iterations 30
Cbc0038I Pass  45: suminf.    2.21595 (10) obj. -36.0704 iterations 5
Cbc0038I Pass  46: suminf.    2.40746 (8) obj. -36.0704 iterations 10
Cbc0038I Pass  47: suminf.    1.97602 (8) obj. -36.0704 iterations 4
Cbc0038I Pass  48: suminf.    2.21595 (10) obj. -36.0704 iterations 12
Cbc0038I Pass  49: suminf.    1.85397 (11) obj. -36.0704 iterations 24
Cbc0038I Pass  50: suminf.    1.57031 (9) obj. -36.0704 iterations 8
Cbc0038I Pass  51: suminf.    1.25047 (9) obj. -36.7931 iterations 4
Cbc0038I Pass  52: suminf.    1.35620 (8) obj. -36.0704 iterations 11
Cbc0038I Pass  53: suminf.    1.30925 (8) obj. -36.0704 iterations 4
Cbc0038I Pass  54: suminf.    1.63739 (8) obj. -36.0704 iterations 6
Cbc0038I Pass  55: suminf.    1.54074 (11) obj. -36.0704 iterations 5
Cbc0038I Pass  56: suminf.    1.77213 (10) obj. -36.0704 iterations 9
Cbc0038I Pass  57: suminf.    1.48571 (7) obj. -36.0704 iterations 4
Cbc0038I Pass  58: suminf.    2.26221 (10) obj. -36.0704 iterations 12
Cbc0038I Pass  59: suminf.    2.26221 (10) obj. -36.0704 iterations 0
Cbc0038I Pass  60: suminf.    2.32838 (8) obj. -36.0704 iterations 7
Cbc0038I Pass  61: suminf.    1.91820 (8) obj. -36.0704 iterations 4
Cbc0038I Pass  62: suminf.    2.21595 (10) obj. -36.0704 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -25.6185 - took 0.05 seconds
Cbc0012I Integer solution of -25.6185 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 95 rows 112 columns, reduced to 13 rows 14 columns
Cbc0031I 51 added rows had average density of 31.529412
Cbc0013I At root node, 51 cuts changed objective from -64.849688 to -35.686081 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15292 row cuts average 5.4 elements, 1 column cuts (1 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1770 row cuts average 105.2 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 415 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1299 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 56.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 50 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.694 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -25.6185 best solution, best possible -35.686081 (2.59 seconds)
Cbc0012I Integer solution of -26.94694 found by DiveCoefficient after 5336 iterations and 1 nodes (2.62 seconds)
Cbc0012I Integer solution of -27.09518 found by rounding after 5338 iterations and 3 nodes (2.63 seconds)
Cbc0012I Integer solution of -28.26743 found by rounding after 5340 iterations and 4 nodes (2.63 seconds)
Cbc0012I Integer solution of -28.40676 found by DiveCoefficient after 5366 iterations and 4 nodes (2.64 seconds)
Cbc0012I Integer solution of -28.555 found by rounding after 5368 iterations and 5 nodes (2.64 seconds)
Cbc0012I Integer solution of -28.82637 found by DiveCoefficient after 5380 iterations and 6 nodes (2.64 seconds)
Cbc0012I Integer solution of -28.87065 found by DiveCoefficient after 5413 iterations and 6 nodes (2.65 seconds)
Cbc0012I Integer solution of -29.04315 found by rounding after 5478 iterations and 13 nodes (2.66 seconds)
Cbc0012I Integer solution of -29.3988 found by DiveCoefficient after 5625 iterations and 21 nodes (2.68 seconds)
Cbc0038I Full problem 95 rows 112 columns, reduced to 39 rows 50 columns
Cbc0001I Search completed - best objective -29.39879999999999, took 7339 iterations and 48 nodes (3.22 seconds)
Cbc0032I Strong branching done 620 times (10628 iterations), fathomed 6 nodes and fixed 6 variables
Cbc0035I Maximum depth 10, 67 variables fixed on reduced cost
Total time (CPU seconds):       2.39   (Wallclock seconds):       3.24

