Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 423 (-30) elements
Clp1000I sum of infeasibilities 1.40963e-05 - average 1.01412e-07, 17 fixed columns
Coin0506I Presolve 107 (-32) rows, 59 (-17) columns and 325 (-98) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 54.29722
Clp0000I Optimal - objective value 54.29722
Coin0511I After Postsolve, objective 54.29722, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.29722
Clp0000I Optimal - objective value 54.29722
Clp0000I Optimal - objective value 54.29722
Coin0511I After Postsolve, objective 54.29722, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.29722003 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 432 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.281%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.26396
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.52926 iterations 41
Cbc0038I Solution found of -1.52926
Cbc0038I Relaxing continuous gives -1.52926
Cbc0038I Rounding solution of -13.0218 is better than previous of -1.52926

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 41 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -13.0218 to -21.7835 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.035
Cbc0038I Pass   2: suminf.    1.81294 (7) obj. -25.035 iterations 12
Cbc0038I Pass   3: suminf.    1.01400 (4) obj. -25.035 iterations 14
Cbc0038I Pass   4: suminf.    1.01400 (4) obj. -25.035 iterations 0
Cbc0038I Pass   5: suminf.    1.87377 (6) obj. -25.035 iterations 10
Cbc0038I Pass   6: suminf.    2.46992 (12) obj. -25.035 iterations 25
Cbc0038I Pass   7: suminf.    1.43474 (5) obj. -25.035 iterations 8
Cbc0038I Pass   8: suminf.    0.75041 (2) obj. -25.035 iterations 13
Cbc0038I Pass   9: suminf.    0.59935 (3) obj. -25.035 iterations 2
Cbc0038I Pass  10: suminf.    1.66197 (6) obj. -25.035 iterations 7
Cbc0038I Pass  11: suminf.    1.41733 (6) obj. -25.035 iterations 9
Cbc0038I Pass  12: suminf.    1.63054 (5) obj. -25.035 iterations 9
Cbc0038I Pass  13: suminf.    0.89207 (3) obj. -25.035 iterations 4
Cbc0038I Pass  14: suminf.    0.84833 (3) obj. -25.035 iterations 2
Cbc0038I Pass  15: suminf.    1.41733 (6) obj. -25.035 iterations 13
Cbc0038I Pass  16: suminf.    1.41733 (6) obj. -25.035 iterations 0
Cbc0038I Pass  17: suminf.    1.63054 (5) obj. -25.035 iterations 9
Cbc0038I Pass  18: suminf.    0.89207 (3) obj. -25.035 iterations 4
Cbc0038I Pass  19: suminf.    0.84833 (3) obj. -25.035 iterations 2
Cbc0038I Pass  20: suminf.    1.41733 (6) obj. -25.035 iterations 13
Cbc0038I Pass  21: suminf.    1.41733 (6) obj. -25.035 iterations 0
Cbc0038I Pass  22: suminf.    1.63054 (5) obj. -25.035 iterations 9
Cbc0038I Pass  23: suminf.    0.89207 (3) obj. -25.035 iterations 4
Cbc0038I Pass  24: suminf.    0.84833 (3) obj. -25.035 iterations 2
Cbc0038I Pass  25: suminf.    1.41733 (6) obj. -25.035 iterations 13
Cbc0038I Pass  26: suminf.    1.41733 (6) obj. -25.035 iterations 0
Cbc0038I Pass  27: suminf.    1.63054 (5) obj. -25.035 iterations 9
Cbc0038I Pass  28: suminf.    0.89207 (3) obj. -25.035 iterations 4
Cbc0038I Pass  29: suminf.    0.84833 (3) obj. -25.035 iterations 2
Cbc0038I Pass  30: suminf.    1.41733 (6) obj. -25.035 iterations 13
Cbc0038I Pass  31: suminf.    1.41733 (6) obj. -25.035 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -21.7835 - took 0.07 seconds
Cbc0012I Integer solution of -21.78354 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 41 rows 25 columns
Cbc0031I 21 added rows had average density of 48.619048
Cbc0013I At root node, 21 cuts changed objective from -54.29722 to -45.458095 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7944 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1590 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 4 nodes, 5 on tree, -21.78354 best solution, best possible -45.458095 (0.69 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 62 rows 36 columns
Cbc0012I Integer solution of -22.00093 found by RINS after 7207 iterations and 41 nodes (0.87 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 7 rows 10 columns
Cbc0001I Search completed - best objective -22.00093, took 9505 iterations and 106 nodes (1.00 seconds)
Cbc0032I Strong branching done 1050 times (18249 iterations), fathomed 8 nodes and fixed 44 variables
Cbc0035I Maximum depth 37, 321 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 112 (-40) columns and 1760 (-1543) elements
Clp1000I sum of infeasibilities 5.36604e-08 - average 5.31291e-10, 71 fixed columns
Coin0506I Presolve 34 (-67) rows, 41 (-71) columns and 145 (-1615) elements
Clp0006I 0  Obj 23.93017 Dual inf 86.684136 (41)
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 0.319046 - largest nonzero change 1.4696194e-05 ( 0.001262127%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 24.038053
Clp0000I Optimal - objective value 24.038053
Coin0511I After Postsolve, objective 24.038053, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 24.038053 Dual inf 39.45759 (37)
Clp0014I Perturbing problem by 0.001% of 1.6413374 - largest nonzero change 1.744775e-05 ( 0.001744775%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 74.287409
Clp0000I Optimal - objective value 74.287409
Clp0000I Optimal - objective value 74.287409
Coin0511I After Postsolve, objective 74.287409, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.28740936 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 114 columns (114 integer (114 of which binary)) and 1782 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.301%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 8.65832
Cbc0038I Pass   1: suminf.    1.05578 (25) obj. -20.7727 iterations 16
Cbc0038I Pass   2: suminf.    1.05578 (25) obj. -20.7727 iterations 0
Cbc0038I Pass   3: suminf.    0.49669 (14) obj. -6.53855 iterations 11
Cbc0038I Solution found of 16.541
Cbc0038I Rounding solution of -4.96384 is better than previous of 16.541

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -4.96384 to -16.0276 (0.04 seconds)
Cbc0038I Round again with cutoff of -21.1662
Cbc0038I Pass   4: suminf.    1.10849 (37) obj. -21.1662 iterations 1
Cbc0038I Pass   5: suminf.    1.10648 (27) obj. -21.1662 iterations 3
Cbc0038I Pass   6: suminf.    2.07343 (27) obj. -21.1662 iterations 11
Cbc0038I Pass   7: suminf.    2.07343 (27) obj. -21.1662 iterations 2
Cbc0038I Pass   8: suminf.    1.50531 (5) obj. -21.1662 iterations 38
Cbc0038I Pass   9: suminf.    0.94890 (6) obj. -21.1662 iterations 5
Cbc0038I Pass  10: suminf.    0.26194 (3) obj. -21.1662 iterations 7
Cbc0038I Pass  11: suminf.    0.26194 (3) obj. -21.1662 iterations 5
Cbc0038I Pass  12: suminf.    0.24272 (3) obj. -21.1662 iterations 6
Cbc0038I Pass  13: suminf.    0.24272 (3) obj. -21.1662 iterations 5
Cbc0038I Pass  14: suminf.    0.26194 (3) obj. -21.1662 iterations 6
Cbc0038I Pass  15: suminf.    1.57688 (14) obj. -21.1662 iterations 22
Cbc0038I Pass  16: suminf.    1.34682 (13) obj. -21.1662 iterations 9
Cbc0038I Pass  17: suminf.    0.58698 (3) obj. -21.1662 iterations 29
Cbc0038I Pass  18: suminf.    0.58698 (3) obj. -21.1662 iterations 1
Cbc0038I Pass  19: suminf.    0.59712 (3) obj. -21.1662 iterations 8
Cbc0038I Pass  20: suminf.    0.59712 (3) obj. -21.1662 iterations 5
Cbc0038I Pass  21: suminf.    0.58698 (3) obj. -21.1662 iterations 6
Cbc0038I Pass  22: suminf.    2.65799 (16) obj. -21.1662 iterations 30
Cbc0038I Pass  23: suminf.    1.62047 (11) obj. -21.1662 iterations 6
Cbc0038I Pass  24: suminf.    1.26482 (10) obj. -21.7604 iterations 2
Cbc0038I Pass  25: suminf.    2.36508 (10) obj. -21.1662 iterations 16
Cbc0038I Pass  26: suminf.    2.08825 (9) obj. -21.1662 iterations 5
Cbc0038I Pass  27: suminf.    0.97086 (5) obj. -21.1662 iterations 7
Cbc0038I Pass  28: suminf.    0.97086 (5) obj. -21.1662 iterations 1
Cbc0038I Pass  29: suminf.    0.27238 (4) obj. -21.1662 iterations 8
Cbc0038I Pass  30: suminf.    0.27238 (4) obj. -21.1662 iterations 1
Cbc0038I Pass  31: suminf.    0.15318 (2) obj. -24.2204 iterations 8
Cbc0038I Pass  32: suminf.    0.15318 (2) obj. -24.2204 iterations 0
Cbc0038I Pass  33: suminf.    0.23526 (3) obj. -21.1662 iterations 6
Cbc0038I Rounding solution of -16.8409 is better than previous of -16.0276

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 53 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -16.8409 to -19.6241 (0.09 seconds)
Cbc0038I Round again with cutoff of -30.4156
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.34774 (37) obj. -30.4156 iterations 0
Cbc0038I Pass  34: suminf.    2.18068 (27) obj. -30.4156 iterations 3
Cbc0038I Pass  35: suminf.    1.40282 (25) obj. -38.987 iterations 4
Cbc0038I Pass  36: suminf.    2.20992 (21) obj. -30.4156 iterations 20
Cbc0038I Pass  37: suminf.    1.99476 (20) obj. -30.4156 iterations 2
Cbc0038I Pass  38: suminf.    0.77621 (14) obj. -30.4156 iterations 36
Cbc0038I Pass  39: suminf.    0.77621 (14) obj. -30.4156 iterations 0
Cbc0038I Pass  40: suminf.    1.63218 (6) obj. -30.4156 iterations 15
Cbc0038I Pass  41: suminf.    0.98918 (5) obj. -30.4156 iterations 3
Cbc0038I Pass  42: suminf.    0.78745 (5) obj. -30.4156 iterations 5
Cbc0038I Pass  43: suminf.    1.11112 (5) obj. -30.4156 iterations 6
Cbc0038I Pass  44: suminf.    1.11112 (5) obj. -30.4156 iterations 2
Cbc0038I Pass  45: suminf.    1.12266 (5) obj. -30.4156 iterations 4
Cbc0038I Pass  46: suminf.    0.81794 (6) obj. -30.4156 iterations 3
Cbc0038I Pass  47: suminf.    1.12760 (5) obj. -30.4156 iterations 6
Cbc0038I Pass  48: suminf.    3.12513 (13) obj. -30.4156 iterations 12
Cbc0038I Pass  49: suminf.    2.16334 (11) obj. -30.4156 iterations 4
Cbc0038I Pass  50: suminf.    0.62237 (7) obj. -30.4156 iterations 12
Cbc0038I Pass  51: suminf.    0.62237 (7) obj. -30.4156 iterations 0
Cbc0038I Pass  52: suminf.    1.46350 (6) obj. -30.4156 iterations 3
Cbc0038I Pass  53: suminf.    1.41823 (7) obj. -30.4156 iterations 3
Cbc0038I Pass  54: suminf.    2.39940 (11) obj. -30.4156 iterations 5
Cbc0038I Pass  55: suminf.    0.74500 (6) obj. -30.4156 iterations 5
Cbc0038I Pass  56: suminf.    0.40582 (5) obj. -30.4156 iterations 3
Cbc0038I Pass  57: suminf.    0.74500 (6) obj. -30.4156 iterations 4
Cbc0038I Pass  58: suminf.    5.27292 (17) obj. -30.4156 iterations 12
Cbc0038I Pass  59: suminf.    1.78007 (10) obj. -30.4156 iterations 7
Cbc0038I Pass  60: suminf.    1.78007 (10) obj. -30.4156 iterations 0
Cbc0038I Pass  61: suminf.    1.70657 (6) obj. -30.4156 iterations 16
Cbc0038I Pass  62: suminf.    1.70657 (6) obj. -30.4156 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 53 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -19.6241 - took 0.10 seconds
Cbc0012I Integer solution of -19.62406 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 33 rows 37 columns
Cbc0031I 50 added rows had average density of 44.3
Cbc0013I At root node, 50 cuts changed objective from -67.413296 to -35.223833 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10252 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1506 row cuts average 104.7 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 478 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 984 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 62.9 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.663 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.62406 best solution, best possible -35.223833 (2.29 seconds)
Cbc0012I Integer solution of -20.00093 found by rounding after 4918 iterations and 5 nodes (2.49 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 38 rows 47 columns
Cbc0038I Full problem 103 rows 114 columns, reduced to 11 rows 17 columns
Cbc0010I After 119 nodes, 12 on tree, -20.00093 best solution, best possible -35.223833 (2.99 seconds)
Cbc0016I Integer solution of -20.16719 found by strong branching after 7881 iterations and 124 nodes (3.00 seconds)
Cbc0012I Integer solution of -20.94009 found by rounding after 7972 iterations and 133 nodes (3.02 seconds)
Cbc0016I Integer solution of -21.78354 found by strong branching after 9808 iterations and 171 nodes (3.28 seconds)
Cbc0010I After 225 nodes, 2 on tree, -21.78354 best solution, best possible -35.223833 (3.69 seconds)
Cbc0012I Integer solution of -22.00093 found by rounding after 13172 iterations and 236 nodes (3.77 seconds)
Cbc0001I Search completed - best objective -22.00093, took 13172 iterations and 236 nodes (3.77 seconds)
Cbc0032I Strong branching done 2602 times (27831 iterations), fathomed 36 nodes and fixed 53 variables
Cbc0035I Maximum depth 21, 841 variables fixed on reduced cost
Total time (CPU seconds):       3.07   (Wallclock seconds):       3.79

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 423 (-30) elements
Clp1000I sum of infeasibilities 1.40963e-05 - average 1.01412e-07, 17 fixed columns
Coin0506I Presolve 107 (-32) rows, 59 (-17) columns and 325 (-98) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 54.29722
Clp0000I Optimal - objective value 54.29722
Coin0511I After Postsolve, objective 54.29722, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.29722
Clp0000I Optimal - objective value 54.29722
Clp0000I Optimal - objective value 54.29722
Coin0511I After Postsolve, objective 54.29722, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.29722003 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 432 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.281%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.26396
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.52926 iterations 41
Cbc0038I Solution found of -1.52926
Cbc0038I Relaxing continuous gives -1.52926
Cbc0038I Rounding solution of -13.0218 is better than previous of -1.52926

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 41 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -13.0218 to -21.7835 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.035
Cbc0038I Pass   2: suminf.    1.81294 (7) obj. -25.035 iterations 12
Cbc0038I Pass   3: suminf.    1.01400 (4) obj. -25.035 iterations 14
Cbc0038I Pass   4: suminf.    1.01400 (4) obj. -25.035 iterations 0
Cbc0038I Pass   5: suminf.    1.87377 (6) obj. -25.035 iterations 10
Cbc0038I Pass   6: suminf.    2.46992 (12) obj. -25.035 iterations 25
Cbc0038I Pass   7: suminf.    1.43474 (5) obj. -25.035 iterations 8
Cbc0038I Pass   8: suminf.    0.75041 (2) obj. -25.035 iterations 13
Cbc0038I Pass   9: suminf.    0.59935 (3) obj. -25.035 iterations 2
Cbc0038I Pass  10: suminf.    1.66197 (6) obj. -25.035 iterations 7
Cbc0038I Pass  11: suminf.    1.41733 (6) obj. -25.035 iterations 9
Cbc0038I Pass  12: suminf.    1.63054 (5) obj. -25.035 iterations 9
Cbc0038I Pass  13: suminf.    0.89207 (3) obj. -25.035 iterations 4
Cbc0038I Pass  14: suminf.    0.84833 (3) obj. -25.035 iterations 2
Cbc0038I Pass  15: suminf.    1.41733 (6) obj. -25.035 iterations 13
Cbc0038I Pass  16: suminf.    1.41733 (6) obj. -25.035 iterations 0
Cbc0038I Pass  17: suminf.    1.63054 (5) obj. -25.035 iterations 9
Cbc0038I Pass  18: suminf.    0.89207 (3) obj. -25.035 iterations 4
Cbc0038I Pass  19: suminf.    0.84833 (3) obj. -25.035 iterations 2
Cbc0038I Pass  20: suminf.    1.41733 (6) obj. -25.035 iterations 13
Cbc0038I Pass  21: suminf.    1.41733 (6) obj. -25.035 iterations 0
Cbc0038I Pass  22: suminf.    1.63054 (5) obj. -25.035 iterations 9
Cbc0038I Pass  23: suminf.    0.89207 (3) obj. -25.035 iterations 4
Cbc0038I Pass  24: suminf.    0.84833 (3) obj. -25.035 iterations 2
Cbc0038I Pass  25: suminf.    1.41733 (6) obj. -25.035 iterations 13
Cbc0038I Pass  26: suminf.    1.41733 (6) obj. -25.035 iterations 0
Cbc0038I Pass  27: suminf.    1.63054 (5) obj. -25.035 iterations 9
Cbc0038I Pass  28: suminf.    0.89207 (3) obj. -25.035 iterations 4
Cbc0038I Pass  29: suminf.    0.84833 (3) obj. -25.035 iterations 2
Cbc0038I Pass  30: suminf.    1.41733 (6) obj. -25.035 iterations 13
Cbc0038I Pass  31: suminf.    1.41733 (6) obj. -25.035 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 59 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -21.7835 - took 0.07 seconds
Cbc0012I Integer solution of -21.78354 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 41 rows 25 columns
Cbc0031I 21 added rows had average density of 48.619048
Cbc0013I At root node, 21 cuts changed objective from -54.29722 to -45.458095 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7944 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1590 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 3 nodes, 4 on tree, -21.78354 best solution, best possible -45.458095 (0.68 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 62 rows 36 columns
Cbc0012I Integer solution of -22.00093 found by RINS after 7207 iterations and 41 nodes (0.87 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 7 rows 10 columns
Cbc0001I Search completed - best objective -22.00093, took 9505 iterations and 106 nodes (1.00 seconds)
Cbc0032I Strong branching done 1050 times (18249 iterations), fathomed 8 nodes and fixed 44 variables
Cbc0035I Maximum depth 37, 321 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.00

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 112 (-41) columns and 1760 (-1544) elements
Clp1000I sum of infeasibilities 5.36604e-08 - average 5.31291e-10, 71 fixed columns
Coin0506I Presolve 34 (-67) rows, 41 (-71) columns and 145 (-1615) elements
Clp0006I 0  Obj 23.93017 Dual inf 86.684136 (41)
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 0.319046 - largest nonzero change 1.4696194e-05 ( 0.001262127%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 24.038053
Clp0000I Optimal - objective value 24.038053
Coin0511I After Postsolve, objective 24.038053, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 24.038053 Dual inf 39.45759 (37)
Clp0014I Perturbing problem by 0.001% of 1.6413374 - largest nonzero change 1.744775e-05 ( 0.001744775%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 74.287409
Clp0000I Optimal - objective value 74.287409
Clp0000I Optimal - objective value 74.287409
Coin0511I After Postsolve, objective 74.287409, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.28740936 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 114 columns (114 integer (114 of which binary)) and 1782 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.301%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 8.65832
Cbc0038I Pass   1: suminf.    1.05578 (25) obj. -20.7727 iterations 16
Cbc0038I Pass   2: suminf.    1.05578 (25) obj. -20.7727 iterations 0
Cbc0038I Pass   3: suminf.    0.49669 (14) obj. -6.53855 iterations 11
Cbc0038I Solution found of 16.541
Cbc0038I Rounding solution of -4.96384 is better than previous of 16.541

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -4.96384 to -16.0276 (0.04 seconds)
Cbc0038I Round again with cutoff of -21.1662
Cbc0038I Pass   4: suminf.    1.10849 (37) obj. -21.1662 iterations 1
Cbc0038I Pass   5: suminf.    1.10648 (27) obj. -21.1662 iterations 3
Cbc0038I Pass   6: suminf.    2.07343 (27) obj. -21.1662 iterations 11
Cbc0038I Pass   7: suminf.    2.07343 (27) obj. -21.1662 iterations 2
Cbc0038I Pass   8: suminf.    1.50531 (5) obj. -21.1662 iterations 38
Cbc0038I Pass   9: suminf.    0.94890 (6) obj. -21.1662 iterations 5
Cbc0038I Pass  10: suminf.    0.26194 (3) obj. -21.1662 iterations 7
Cbc0038I Pass  11: suminf.    0.26194 (3) obj. -21.1662 iterations 5
Cbc0038I Pass  12: suminf.    0.24272 (3) obj. -21.1662 iterations 6
Cbc0038I Pass  13: suminf.    0.24272 (3) obj. -21.1662 iterations 5
Cbc0038I Pass  14: suminf.    0.26194 (3) obj. -21.1662 iterations 6
Cbc0038I Pass  15: suminf.    1.57688 (14) obj. -21.1662 iterations 22
Cbc0038I Pass  16: suminf.    1.34682 (13) obj. -21.1662 iterations 9
Cbc0038I Pass  17: suminf.    0.58698 (3) obj. -21.1662 iterations 29
Cbc0038I Pass  18: suminf.    0.58698 (3) obj. -21.1662 iterations 1
Cbc0038I Pass  19: suminf.    0.59712 (3) obj. -21.1662 iterations 8
Cbc0038I Pass  20: suminf.    0.59712 (3) obj. -21.1662 iterations 5
Cbc0038I Pass  21: suminf.    0.58698 (3) obj. -21.1662 iterations 6
Cbc0038I Pass  22: suminf.    2.65799 (16) obj. -21.1662 iterations 30
Cbc0038I Pass  23: suminf.    1.62047 (11) obj. -21.1662 iterations 6
Cbc0038I Pass  24: suminf.    1.26482 (10) obj. -21.7604 iterations 2
Cbc0038I Pass  25: suminf.    2.36508 (10) obj. -21.1662 iterations 16
Cbc0038I Pass  26: suminf.    2.08825 (9) obj. -21.1662 iterations 5
Cbc0038I Pass  27: suminf.    0.97086 (5) obj. -21.1662 iterations 7
Cbc0038I Pass  28: suminf.    0.97086 (5) obj. -21.1662 iterations 1
Cbc0038I Pass  29: suminf.    0.27238 (4) obj. -21.1662 iterations 8
Cbc0038I Pass  30: suminf.    0.27238 (4) obj. -21.1662 iterations 1
Cbc0038I Pass  31: suminf.    0.15318 (2) obj. -24.2204 iterations 8
Cbc0038I Pass  32: suminf.    0.15318 (2) obj. -24.2204 iterations 0
Cbc0038I Pass  33: suminf.    0.23526 (3) obj. -21.1662 iterations 6
Cbc0038I Rounding solution of -16.8409 is better than previous of -16.0276

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 53 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -16.8409 to -19.6241 (0.09 seconds)
Cbc0038I Round again with cutoff of -30.4156
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.34774 (37) obj. -30.4156 iterations 0
Cbc0038I Pass  34: suminf.    2.18068 (27) obj. -30.4156 iterations 3
Cbc0038I Pass  35: suminf.    1.40282 (25) obj. -38.987 iterations 4
Cbc0038I Pass  36: suminf.    2.20992 (21) obj. -30.4156 iterations 20
Cbc0038I Pass  37: suminf.    1.99476 (20) obj. -30.4156 iterations 2
Cbc0038I Pass  38: suminf.    0.77621 (14) obj. -30.4156 iterations 36
Cbc0038I Pass  39: suminf.    0.77621 (14) obj. -30.4156 iterations 0
Cbc0038I Pass  40: suminf.    1.63218 (6) obj. -30.4156 iterations 15
Cbc0038I Pass  41: suminf.    0.98918 (5) obj. -30.4156 iterations 3
Cbc0038I Pass  42: suminf.    0.78745 (5) obj. -30.4156 iterations 5
Cbc0038I Pass  43: suminf.    1.11112 (5) obj. -30.4156 iterations 6
Cbc0038I Pass  44: suminf.    1.11112 (5) obj. -30.4156 iterations 2
Cbc0038I Pass  45: suminf.    1.12266 (5) obj. -30.4156 iterations 4
Cbc0038I Pass  46: suminf.    0.81794 (6) obj. -30.4156 iterations 3
Cbc0038I Pass  47: suminf.    1.12760 (5) obj. -30.4156 iterations 6
Cbc0038I Pass  48: suminf.    3.12513 (13) obj. -30.4156 iterations 12
Cbc0038I Pass  49: suminf.    2.16334 (11) obj. -30.4156 iterations 4
Cbc0038I Pass  50: suminf.    0.62237 (7) obj. -30.4156 iterations 12
Cbc0038I Pass  51: suminf.    0.62237 (7) obj. -30.4156 iterations 0
Cbc0038I Pass  52: suminf.    1.46350 (6) obj. -30.4156 iterations 3
Cbc0038I Pass  53: suminf.    1.41823 (7) obj. -30.4156 iterations 3
Cbc0038I Pass  54: suminf.    2.39940 (11) obj. -30.4156 iterations 5
Cbc0038I Pass  55: suminf.    0.74500 (6) obj. -30.4156 iterations 5
Cbc0038I Pass  56: suminf.    0.40582 (5) obj. -30.4156 iterations 3
Cbc0038I Pass  57: suminf.    0.74500 (6) obj. -30.4156 iterations 4
Cbc0038I Pass  58: suminf.    5.27292 (17) obj. -30.4156 iterations 12
Cbc0038I Pass  59: suminf.    1.78007 (10) obj. -30.4156 iterations 7
Cbc0038I Pass  60: suminf.    1.78007 (10) obj. -30.4156 iterations 0
Cbc0038I Pass  61: suminf.    1.70657 (6) obj. -30.4156 iterations 16
Cbc0038I Pass  62: suminf.    1.70657 (6) obj. -30.4156 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 53 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -19.6241 - took 0.10 seconds
Cbc0012I Integer solution of -19.62406 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 33 rows 37 columns
Cbc0031I 50 added rows had average density of 44.3
Cbc0013I At root node, 50 cuts changed objective from -67.413296 to -35.223833 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10252 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1506 row cuts average 104.7 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 478 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 984 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 339 row cuts average 62.9 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.62406 best solution, best possible -35.223833 (2.31 seconds)
Cbc0012I Integer solution of -20.00093 found by rounding after 4918 iterations and 5 nodes (2.50 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 38 rows 47 columns
Cbc0038I Full problem 103 rows 114 columns, reduced to 11 rows 17 columns
Cbc0010I After 118 nodes, 11 on tree, -20.00093 best solution, best possible -35.223833 (3.02 seconds)
Cbc0016I Integer solution of -20.16719 found by strong branching after 7881 iterations and 124 nodes (3.03 seconds)
Cbc0012I Integer solution of -20.94009 found by rounding after 7972 iterations and 133 nodes (3.04 seconds)
Cbc0016I Integer solution of -21.78354 found by strong branching after 9808 iterations and 171 nodes (3.30 seconds)
Cbc0010I After 225 nodes, 2 on tree, -21.78354 best solution, best possible -35.223833 (3.73 seconds)
Cbc0012I Integer solution of -22.00093 found by rounding after 13172 iterations and 236 nodes (3.81 seconds)
Cbc0001I Search completed - best objective -22.00093, took 13172 iterations and 236 nodes (3.81 seconds)
Cbc0032I Strong branching done 2602 times (27831 iterations), fathomed 36 nodes and fixed 53 variables
Cbc0035I Maximum depth 21, 841 variables fixed on reduced cost
Total time (CPU seconds):       3.10   (Wallclock seconds):       3.83

