Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 28 (-4) columns and 142 (-35) elements
Clp1000I sum of infeasibilities 9.10731e-06 - average 1.93773e-07, 6 fixed columns
Coin0506I Presolve 36 (-11) rows, 22 (-6) columns and 108 (-34) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Coin0511I After Postsolve, objective 87.267147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Coin0511I After Postsolve, objective 87.267147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.26714703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.133%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.74459
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.65746 iterations 19
Cbc0038I Solution found of -5.65746
Cbc0038I Relaxing continuous gives -5.65746
Cbc0038I Rounding solution of -24.596 is better than previous of -5.65746

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -30.8632
Cbc0038I Pass   2: suminf.    0.55613 (2) obj. -30.8632 iterations 2
Cbc0038I Pass   3: suminf.    0.18548 (1) obj. -30.8632 iterations 2
Cbc0038I Pass   4: suminf.    0.75466 (4) obj. -30.8632 iterations 8
Cbc0038I Pass   5: suminf.    0.70586 (3) obj. -30.8632 iterations 3
Cbc0038I Pass   6: suminf.    0.24464 (2) obj. -30.8632 iterations 3
Cbc0038I Pass   7: suminf.    0.45036 (2) obj. -30.8632 iterations 4
Cbc0038I Pass   8: suminf.    0.15323 (1) obj. -30.8632 iterations 2
Cbc0038I Pass   9: suminf.    1.15685 (4) obj. -30.8632 iterations 5
Cbc0038I Pass  10: suminf.    1.15685 (4) obj. -30.8632 iterations 1
Cbc0038I Pass  11: suminf.    0.46874 (2) obj. -30.8632 iterations 6
Cbc0038I Pass  12: suminf.    0.25142 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  13: suminf.    0.56126 (2) obj. -30.8632 iterations 3
Cbc0038I Pass  14: suminf.    0.47730 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  15: suminf.    1.07133 (3) obj. -30.8632 iterations 3
Cbc0038I Pass  16: suminf.    0.74502 (3) obj. -30.8632 iterations 1
Cbc0038I Pass  17: suminf.    0.93174 (2) obj. -30.8632 iterations 3
Cbc0038I Pass  18: suminf.    0.53661 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  19: suminf.    0.31760 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  20: suminf.    0.76412 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  21: suminf.    1.29916 (7) obj. -30.8632 iterations 10
Cbc0038I Pass  22: suminf.    1.05726 (7) obj. -30.8632 iterations 6
Cbc0038I Pass  23: suminf.    0.62771 (3) obj. -30.8632 iterations 8
Cbc0038I Pass  24: suminf.    0.62771 (3) obj. -30.8632 iterations 0
Cbc0038I Pass  25: suminf.    0.74722 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  26: suminf.    0.74384 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  27: suminf.    0.82288 (3) obj. -30.8632 iterations 2
Cbc0038I Pass  28: suminf.    0.78927 (6) obj. -30.8632 iterations 7
Cbc0038I Pass  29: suminf.    0.63545 (4) obj. -30.8632 iterations 2
Cbc0038I Pass  30: suminf.    0.75114 (3) obj. -30.8632 iterations 5
Cbc0038I Pass  31: suminf.    0.60975 (3) obj. -30.8632 iterations 1
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -42.144
Cbc0038I Pass  31: suminf.    0.27200 (3) obj. -42.144 iterations 1
Cbc0038I Pass  32: suminf.    0.27200 (3) obj. -42.144 iterations 0
Cbc0038I Pass  33: suminf.    0.59705 (2) obj. -42.144 iterations 3
Cbc0038I Pass  34: suminf.    0.44863 (2) obj. -42.144 iterations 1
Cbc0038I Pass  35: suminf.    0.67684 (3) obj. -42.144 iterations 2
Cbc0038I Pass  36: suminf.    0.67684 (3) obj. -42.144 iterations 0
Cbc0038I Pass  37: suminf.    0.86717 (3) obj. -42.144 iterations 1
Cbc0038I Pass  38: suminf.    1.61295 (5) obj. -42.144 iterations 4
Cbc0038I Pass  39: suminf.    1.42580 (4) obj. -42.144 iterations 2
Cbc0038I Pass  40: suminf.    0.61993 (2) obj. -42.144 iterations 4
Cbc0038I Pass  41: suminf.    0.53151 (2) obj. -42.144 iterations 1
Cbc0038I Pass  42: suminf.    0.79265 (3) obj. -42.144 iterations 2
Cbc0038I Pass  43: suminf.    0.79265 (3) obj. -42.144 iterations 0
Cbc0038I Pass  44: suminf.    0.88630 (3) obj. -42.144 iterations 1
Cbc0038I Pass  45: suminf.    1.23627 (5) obj. -42.144 iterations 10
Cbc0038I Pass  46: suminf.    0.88806 (3) obj. -42.144 iterations 6
Cbc0038I Pass  47: suminf.    0.62546 (2) obj. -42.144 iterations 2
Cbc0038I Pass  48: suminf.    0.36765 (3) obj. -42.144 iterations 2
Cbc0038I Pass  49: suminf.    0.36765 (3) obj. -42.144 iterations 0
Cbc0038I Pass  50: suminf.    0.63630 (2) obj. -42.144 iterations 3
Cbc0038I Pass  51: suminf.    0.52429 (2) obj. -42.144 iterations 1
Cbc0038I Pass  52: suminf.    0.75290 (3) obj. -42.144 iterations 2
Cbc0038I Pass  53: suminf.    0.75290 (3) obj. -42.144 iterations 0
Cbc0038I Pass  54: suminf.    0.99109 (3) obj. -42.144 iterations 1
Cbc0038I Pass  55: suminf.    3.04062 (8) obj. -42.144 iterations 6
Cbc0038I Pass  56: suminf.    0.82472 (3) obj. -42.144 iterations 5
Cbc0038I Pass  57: suminf.    0.77987 (3) obj. -42.144 iterations 1
Cbc0038I Pass  58: suminf.    0.70366 (4) obj. -42.144 iterations 7
Cbc0038I Pass  59: suminf.    0.69379 (3) obj. -42.144 iterations 1
Cbc0038I Pass  60: suminf.    0.58366 (3) obj. -42.144 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.596 - took 0.06 seconds
Cbc0012I Integer solution of -24.596011 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 11 added rows had average density of 19
Cbc0013I At root node, 11 cuts changed objective from -87.267147 to -46.59464 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1739 row cuts average 4.1 elements, 2 column cuts (2 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 840 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.596011 best solution, best possible -46.593677 (1.50 seconds)
Cbc0016I Integer solution of -31.86196 found by strong branching after 2351 iterations and 4 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -31.86196000000001, took 2397 iterations and 6 nodes (1.53 seconds)
Cbc0032I Strong branching done 94 times (981 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.54

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-14) rows, 55 (-5) columns and 515 (-97) elements
Clp1000I sum of infeasibilities 2.0982e-09 - average 4.37126e-11, 51 fixed columns
Coin0506I Presolve 2 (-46) rows, 4 (-51) columns and 8 (-507) elements
Clp0006I 0  Obj 124.80369 Dual inf 9.9884894 (3)
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 128.70248
Clp0000I Optimal - objective value 128.70248
Coin0511I After Postsolve, objective 128.70248, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 128.70248 Dual inf 984.50901 (35)
Clp0014I Perturbing problem by 0.001% of 0.21123794 - largest nonzero change 0 ( 0%) - largest zero change 2.978651e-05
Clp0000I Optimal - objective value 239.56375
Clp0000I Optimal - objective value 239.56375
Clp0000I Optimal - objective value 239.56375
Coin0511I After Postsolve, objective 239.56375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 239.5637526 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 55 columns (55 integer (55 of which binary)) and 519 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.781%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 6.13268
Cbc0038I Pass   1: suminf.    2.15858 (15) obj. -65.0811 iterations 17
Cbc0038I Pass   2: suminf.    2.15858 (15) obj. -65.0811 iterations 1
Cbc0038I Solution found of -1.54444
Cbc0038I Rounding solution of -11.7451 is better than previous of -1.54444

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -11.7451 to -106.544 (0.01 seconds)
Cbc0038I Round again with cutoff of -117.081
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    4.26230 (23) obj. -187.132 iterations 8
Cbc0038I Pass   4: suminf.    4.26230 (23) obj. -187.132 iterations 0
Cbc0038I Pass   5: suminf.    0.33693 (4) obj. -117.081 iterations 23
Cbc0038I Pass   6: suminf.    0.29664 (2) obj. -117.081 iterations 5
Cbc0038I Pass   7: suminf.    0.29664 (2) obj. -117.081 iterations 0
Cbc0038I Pass   8: suminf.    0.22439 (2) obj. -138.702 iterations 1
Cbc0038I Pass   9: suminf.    0.13710 (1) obj. -135.949 iterations 1
Cbc0038I Pass  10: suminf.    2.42900 (8) obj. -132.819 iterations 12
Cbc0038I Pass  11: suminf.    1.24809 (5) obj. -117.081 iterations 5
Cbc0038I Pass  12: suminf.    0.66975 (5) obj. -117.081 iterations 8
Cbc0038I Pass  13: suminf.    0.66854 (5) obj. -117.081 iterations 1
Cbc0038I Pass  14: suminf.    0.26177 (2) obj. -117.081 iterations 5
Cbc0038I Solution found of -124.024
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -141.6
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  15: suminf.    4.26230 (23) obj. -187.132 iterations 0
Cbc0038I Pass  16: suminf.    4.26230 (23) obj. -187.132 iterations 0
Cbc0038I Pass  17: suminf.    0.92244 (8) obj. -141.6 iterations 17
Cbc0038I Pass  18: suminf.    0.40549 (3) obj. -141.6 iterations 9
Cbc0038I Pass  19: suminf.    0.40549 (3) obj. -141.6 iterations 0
Cbc0038I Pass  20: suminf.    0.75729 (3) obj. -141.6 iterations 1
Cbc0038I Pass  21: suminf.    0.40323 (2) obj. -147.691 iterations 2
Cbc0038I Pass  22: suminf.    0.40549 (3) obj. -141.6 iterations 2
Cbc0038I Pass  23: suminf.    2.20998 (8) obj. -141.6 iterations 12
Cbc0038I Pass  24: suminf.    2.17356 (8) obj. -141.6 iterations 3
Cbc0038I Pass  25: suminf.    0.67010 (4) obj. -141.6 iterations 10
Cbc0038I Pass  26: suminf.    0.47675 (3) obj. -141.6 iterations 2
Cbc0038I Pass  27: suminf.    0.46684 (3) obj. -141.6 iterations 1
Cbc0038I Pass  28: suminf.    0.48197 (3) obj. -141.6 iterations 2
Cbc0038I Pass  29: suminf.    2.43287 (9) obj. -141.6 iterations 9
Cbc0038I Pass  30: suminf.    1.80836 (7) obj. -155.209 iterations 4
Cbc0038I Pass  31: suminf.    0.48197 (3) obj. -141.6 iterations 7
Cbc0038I Pass  32: suminf.    2.36145 (12) obj. -141.6 iterations 18
Cbc0038I Pass  33: suminf.    2.10798 (11) obj. -141.6 iterations 5
Cbc0038I Pass  34: suminf.    0.46799 (3) obj. -141.6 iterations 14
Cbc0038I Pass  35: suminf.    0.46799 (3) obj. -141.6 iterations 0
Cbc0038I Pass  36: suminf.    0.72706 (3) obj. -141.6 iterations 1
Cbc0038I Pass  37: suminf.    0.40323 (2) obj. -146.691 iterations 2
Cbc0038I Pass  38: suminf.    0.46799 (3) obj. -141.6 iterations 2
Cbc0038I Pass  39: suminf.    1.68010 (7) obj. -141.6 iterations 14
Cbc0038I Pass  40: suminf.    1.41584 (6) obj. -146.099 iterations 5
Cbc0038I Pass  41: suminf.    0.56929 (3) obj. -141.6 iterations 7
Cbc0038I Pass  42: suminf.    0.56929 (3) obj. -141.6 iterations 0
Cbc0038I Pass  43: suminf.    0.64509 (3) obj. -141.6 iterations 1
Cbc0038I Pass  44: suminf.    0.44470 (2) obj. -147.02 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 2 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -124.024 - took 0.01 seconds
Cbc0012I Integer solution of -124.02389 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 48 rows 55 columns, reduced to 3 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 6
Cbc0013I At root node, 3 cuts changed objective from -140.4428 to -127.174 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 1.7 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -124.02389, took 49 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 28 (-4) columns and 142 (-35) elements
Clp1000I sum of infeasibilities 9.10731e-06 - average 1.93773e-07, 6 fixed columns
Coin0506I Presolve 36 (-11) rows, 22 (-6) columns and 108 (-34) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Coin0511I After Postsolve, objective 87.267147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Clp0000I Optimal - objective value 87.267147
Coin0511I After Postsolve, objective 87.267147, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.26714703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.133%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.74459
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.65746 iterations 19
Cbc0038I Solution found of -5.65746
Cbc0038I Relaxing continuous gives -5.65746
Cbc0038I Rounding solution of -24.596 is better than previous of -5.65746

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 29 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -30.8632
Cbc0038I Pass   2: suminf.    0.55613 (2) obj. -30.8632 iterations 2
Cbc0038I Pass   3: suminf.    0.18548 (1) obj. -30.8632 iterations 2
Cbc0038I Pass   4: suminf.    0.75466 (4) obj. -30.8632 iterations 8
Cbc0038I Pass   5: suminf.    0.70586 (3) obj. -30.8632 iterations 3
Cbc0038I Pass   6: suminf.    0.24464 (2) obj. -30.8632 iterations 3
Cbc0038I Pass   7: suminf.    0.45036 (2) obj. -30.8632 iterations 4
Cbc0038I Pass   8: suminf.    0.15323 (1) obj. -30.8632 iterations 2
Cbc0038I Pass   9: suminf.    1.15685 (4) obj. -30.8632 iterations 5
Cbc0038I Pass  10: suminf.    1.15685 (4) obj. -30.8632 iterations 1
Cbc0038I Pass  11: suminf.    0.46874 (2) obj. -30.8632 iterations 6
Cbc0038I Pass  12: suminf.    0.25142 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  13: suminf.    0.56126 (2) obj. -30.8632 iterations 3
Cbc0038I Pass  14: suminf.    0.47730 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  15: suminf.    1.07133 (3) obj. -30.8632 iterations 3
Cbc0038I Pass  16: suminf.    0.74502 (3) obj. -30.8632 iterations 1
Cbc0038I Pass  17: suminf.    0.93174 (2) obj. -30.8632 iterations 3
Cbc0038I Pass  18: suminf.    0.53661 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  19: suminf.    0.31760 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  20: suminf.    0.76412 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  21: suminf.    1.29916 (7) obj. -30.8632 iterations 10
Cbc0038I Pass  22: suminf.    1.05726 (7) obj. -30.8632 iterations 6
Cbc0038I Pass  23: suminf.    0.62771 (3) obj. -30.8632 iterations 8
Cbc0038I Pass  24: suminf.    0.62771 (3) obj. -30.8632 iterations 0
Cbc0038I Pass  25: suminf.    0.74722 (2) obj. -30.8632 iterations 2
Cbc0038I Pass  26: suminf.    0.74384 (2) obj. -30.8632 iterations 1
Cbc0038I Pass  27: suminf.    0.82288 (3) obj. -30.8632 iterations 2
Cbc0038I Pass  28: suminf.    0.78927 (6) obj. -30.8632 iterations 7
Cbc0038I Pass  29: suminf.    0.63545 (4) obj. -30.8632 iterations 2
Cbc0038I Pass  30: suminf.    0.75114 (3) obj. -30.8632 iterations 5
Cbc0038I Pass  31: suminf.    0.60975 (3) obj. -30.8632 iterations 1
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -42.144
Cbc0038I Pass  31: suminf.    0.27200 (3) obj. -42.144 iterations 1
Cbc0038I Pass  32: suminf.    0.27200 (3) obj. -42.144 iterations 0
Cbc0038I Pass  33: suminf.    0.59705 (2) obj. -42.144 iterations 3
Cbc0038I Pass  34: suminf.    0.44863 (2) obj. -42.144 iterations 1
Cbc0038I Pass  35: suminf.    0.67684 (3) obj. -42.144 iterations 2
Cbc0038I Pass  36: suminf.    0.67684 (3) obj. -42.144 iterations 0
Cbc0038I Pass  37: suminf.    0.86717 (3) obj. -42.144 iterations 1
Cbc0038I Pass  38: suminf.    1.61295 (5) obj. -42.144 iterations 4
Cbc0038I Pass  39: suminf.    1.42580 (4) obj. -42.144 iterations 2
Cbc0038I Pass  40: suminf.    0.61993 (2) obj. -42.144 iterations 4
Cbc0038I Pass  41: suminf.    0.53151 (2) obj. -42.144 iterations 1
Cbc0038I Pass  42: suminf.    0.79265 (3) obj. -42.144 iterations 2
Cbc0038I Pass  43: suminf.    0.79265 (3) obj. -42.144 iterations 0
Cbc0038I Pass  44: suminf.    0.88630 (3) obj. -42.144 iterations 1
Cbc0038I Pass  45: suminf.    1.23627 (5) obj. -42.144 iterations 10
Cbc0038I Pass  46: suminf.    0.88806 (3) obj. -42.144 iterations 6
Cbc0038I Pass  47: suminf.    0.62546 (2) obj. -42.144 iterations 2
Cbc0038I Pass  48: suminf.    0.36765 (3) obj. -42.144 iterations 2
Cbc0038I Pass  49: suminf.    0.36765 (3) obj. -42.144 iterations 0
Cbc0038I Pass  50: suminf.    0.63630 (2) obj. -42.144 iterations 3
Cbc0038I Pass  51: suminf.    0.52429 (2) obj. -42.144 iterations 1
Cbc0038I Pass  52: suminf.    0.75290 (3) obj. -42.144 iterations 2
Cbc0038I Pass  53: suminf.    0.75290 (3) obj. -42.144 iterations 0
Cbc0038I Pass  54: suminf.    0.99109 (3) obj. -42.144 iterations 1
Cbc0038I Pass  55: suminf.    3.04062 (8) obj. -42.144 iterations 6
Cbc0038I Pass  56: suminf.    0.82472 (3) obj. -42.144 iterations 5
Cbc0038I Pass  57: suminf.    0.77987 (3) obj. -42.144 iterations 1
Cbc0038I Pass  58: suminf.    0.70366 (4) obj. -42.144 iterations 7
Cbc0038I Pass  59: suminf.    0.69379 (3) obj. -42.144 iterations 1
Cbc0038I Pass  60: suminf.    0.58366 (3) obj. -42.144 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 28 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -24.596 - took 0.02 seconds
Cbc0012I Integer solution of -24.596011 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 11 added rows had average density of 19
Cbc0013I At root node, 11 cuts changed objective from -87.267147 to -46.59464 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1739 row cuts average 4.1 elements, 2 column cuts (2 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 840 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.792 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.596011 best solution, best possible -46.593677 (1.72 seconds)
Cbc0016I Integer solution of -31.86196 found by strong branching after 2351 iterations and 4 nodes (1.75 seconds)
Cbc0001I Search completed - best objective -31.86196000000001, took 2397 iterations and 6 nodes (1.75 seconds)
Cbc0032I Strong branching done 94 times (981 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 54 (-7) columns and 487 (-126) elements
Clp1000I sum of infeasibilities 1.46429e-10 - average 3.1155e-12, 48 fixed columns
Coin0506I Presolve 4 (-43) rows, 6 (-48) columns and 16 (-471) elements
Clp0006I 0  Obj 9.5216302 Dual inf 2.5739814 (6)
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 13.421348
Clp0000I Optimal - objective value 13.421348
Coin0511I After Postsolve, objective 13.421348, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 13.421348 Dual inf 937.10235 (34)
Clp0014I Perturbing problem by 0.001% of 0.21180281 - largest nonzero change 0 ( 0%) - largest zero change 2.9583866e-05
Clp0000I Optimal - objective value 133.68137
Clp0000I Optimal - objective value 133.68137
Clp0000I Optimal - objective value 133.68137
Coin0511I After Postsolve, objective 133.68137, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.6813723 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 54 columns (54 integer (54 of which binary)) and 491 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.628%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.50833
Cbc0038I Pass   1: suminf.    2.56103 (16) obj. -82.0521 iterations 9
Cbc0038I Pass   2: suminf.    2.56103 (16) obj. -82.0521 iterations 0
Cbc0038I Solution found of 11.2018
Cbc0038I Rounding solution of -2.74192 is better than previous of 11.2018

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -12.7978
Cbc0038I Pass   3: suminf.    2.56103 (16) obj. -82.0521 iterations 0
Cbc0038I Pass   4: suminf.    2.56103 (16) obj. -82.0521 iterations 0
Cbc0038I Pass   5: suminf.    0.36666 (1) obj. -12.7978 iterations 20
Cbc0038I Pass   6: suminf.    0.20161 (1) obj. -19.0522 iterations 1
Cbc0038I Pass   7: suminf.    1.45224 (5) obj. -37.3793 iterations 11
Cbc0038I Pass   8: suminf.    1.45224 (5) obj. -37.3793 iterations 1
Cbc0038I Pass   9: suminf.    0.53393 (2) obj. -12.7978 iterations 5
Cbc0038I Pass  10: suminf.    0.53393 (2) obj. -12.7978 iterations 0
Cbc0038I Pass  11: suminf.    0.42066 (2) obj. -12.7978 iterations 1
Cbc0038I Pass  12: suminf.    2.44391 (12) obj. -12.7978 iterations 14
Cbc0038I Pass  13: suminf.    1.35294 (8) obj. -12.7978 iterations 5
Cbc0038I Pass  14: suminf.    0.90825 (5) obj. -12.7978 iterations 2
Cbc0038I Pass  15: suminf.    0.36532 (2) obj. -12.7978 iterations 5
Cbc0038I Pass  16: suminf.    0.36398 (2) obj. -12.7978 iterations 1
Cbc0038I Pass  17: suminf.    0.37559 (2) obj. -13.191 iterations 1
Cbc0038I Pass  18: suminf.    2.68155 (8) obj. -13.9895 iterations 14
Cbc0038I Pass  19: suminf.    2.64411 (8) obj. -12.7978 iterations 2
Cbc0038I Pass  20: suminf.    0.91396 (4) obj. -12.7978 iterations 12
Cbc0038I Pass  21: suminf.    0.91396 (4) obj. -12.7978 iterations 0
Cbc0038I Pass  22: suminf.    1.24996 (4) obj. -12.7978 iterations 1
Cbc0038I Pass  23: suminf.    0.99541 (4) obj. -12.7978 iterations 2
Cbc0038I Pass  24: suminf.    1.71789 (8) obj. -15.3726 iterations 13
Cbc0038I Pass  25: suminf.    1.65552 (7) obj. -14.8187 iterations 2
Cbc0038I Pass  26: suminf.    0.99779 (4) obj. -12.7978 iterations 13
Cbc0038I Pass  27: suminf.    0.99779 (4) obj. -12.7978 iterations 0
Cbc0038I Pass  28: suminf.    1.27703 (4) obj. -12.7978 iterations 1
Cbc0038I Pass  29: suminf.    1.27703 (4) obj. -12.7978 iterations 0
Cbc0038I Pass  30: suminf.    0.99779 (4) obj. -12.7978 iterations 3
Cbc0038I Pass  31: suminf.    2.86649 (9) obj. -12.7978 iterations 19
Cbc0038I Pass  32: suminf.    2.38806 (10) obj. -12.7978 iterations 4
Cbc0038I Rounding solution of -7.10246 is better than previous of -2.74192

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 22 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -7.10246 to -23.5018 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.4615
Cbc0038I Pass  32: suminf.    2.56103 (16) obj. -82.0521 iterations 0
Cbc0038I Pass  33: suminf.    2.56103 (16) obj. -82.0521 iterations 0
Cbc0038I Pass  34: suminf.    0.96819 (5) obj. -39.4615 iterations 23
Cbc0038I Pass  35: suminf.    0.88502 (5) obj. -46.7339 iterations 1
Cbc0038I Pass  36: suminf.    0.33732 (3) obj. -39.4615 iterations 4
Cbc0038I Pass  37: suminf.    0.33732 (3) obj. -39.4615 iterations 0
Cbc0038I Pass  38: suminf.    0.86954 (3) obj. -39.4615 iterations 1
Cbc0038I Pass  39: suminf.    0.86954 (3) obj. -39.4615 iterations 0
Cbc0038I Pass  40: suminf.    0.33732 (3) obj. -39.4615 iterations 2
Cbc0038I Pass  41: suminf.    1.42109 (7) obj. -39.4615 iterations 7
Cbc0038I Pass  42: suminf.    1.25942 (5) obj. -42.0577 iterations 1
Cbc0038I Pass  43: suminf.    1.00530 (3) obj. -39.4615 iterations 5
Cbc0038I Pass  44: suminf.    1.00530 (3) obj. -39.4615 iterations 0
Cbc0038I Pass  45: suminf.    0.84999 (3) obj. -39.4615 iterations 1
Cbc0038I Pass  46: suminf.    0.71871 (3) obj. -44.3625 iterations 1
Cbc0038I Pass  47: suminf.    1.90432 (7) obj. -41.3752 iterations 12
Cbc0038I Pass  48: suminf.    1.90432 (7) obj. -41.3752 iterations 1
Cbc0038I Pass  49: suminf.    1.02395 (4) obj. -39.4615 iterations 7
Cbc0038I Pass  50: suminf.    1.02395 (4) obj. -39.4615 iterations 0
Cbc0038I Pass  51: suminf.    1.26663 (4) obj. -39.4615 iterations 1
Cbc0038I Pass  52: suminf.    1.26663 (4) obj. -39.4615 iterations 0
Cbc0038I Pass  53: suminf.    1.02395 (4) obj. -39.4615 iterations 2
Cbc0038I Pass  54: suminf.    1.65136 (7) obj. -39.4615 iterations 6
Cbc0038I Pass  55: suminf.    1.65136 (7) obj. -39.4615 iterations 0
Cbc0038I Pass  56: suminf.    1.05259 (4) obj. -39.4615 iterations 5
Cbc0038I Pass  57: suminf.    0.95686 (4) obj. -39.4615 iterations 1
Cbc0038I Pass  58: suminf.    1.05259 (4) obj. -39.4615 iterations 2
Cbc0038I Pass  59: suminf.    2.64520 (9) obj. -39.4615 iterations 11
Cbc0038I Pass  60: suminf.    2.64520 (9) obj. -39.4615 iterations 1
Cbc0038I Pass  61: suminf.    1.67865 (5) obj. -39.4615 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 8 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.5018 - took 0.02 seconds
Cbc0012I Integer solution of -23.50184 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -31.86196 found by DiveCoefficient after 1574 iterations and 0 nodes (1.71 seconds)
Cbc0031I 24 added rows had average density of 14.75
Cbc0013I At root node, 24 cuts changed objective from -103.29966 to -34.659518 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1265 row cuts average 3.6 elements, 11 column cuts (11 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 544 row cuts average 36.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 36 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 74 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 125 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.804 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.86196 best solution, best possible -34.659084 (1.72 seconds)
Cbc0001I Search completed - best objective -31.86196000000001, took 1720 iterations and 2 nodes (1.81 seconds)
Cbc0032I Strong branching done 46 times (716 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.82

