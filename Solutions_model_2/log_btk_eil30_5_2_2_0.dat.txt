Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 29 (-3) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 4.97127e-06 - average 9.94254e-08, 0 fixed columns
Coin0506I Presolve 50 (0) rows, 29 (0) columns and 150 (0) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Coin0511I After Postsolve, objective 94.227168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Coin0511I After Postsolve, objective 94.227168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.22716781 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 29 columns (28 integer (28 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.37408
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23.1413 iterations 20
Cbc0038I Solution found of -23.1413
Cbc0038I Relaxing continuous gives -23.1413
Cbc0038I Rounding solution of -26.3629 is better than previous of -23.1413

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -26.3629 to -36.155 (0.03 seconds)
Cbc0038I Round again with cutoff of -41.9478
Cbc0038I Pass   2: suminf.    0.48808 (2) obj. -41.9478 iterations 3
Cbc0038I Pass   3: suminf.    0.39433 (1) obj. -41.9478 iterations 2
Cbc0038I Pass   4: suminf.    0.23011 (1) obj. -41.9478 iterations 1
Cbc0038I Pass   5: suminf.    1.44538 (5) obj. -41.9478 iterations 4
Cbc0038I Pass   6: suminf.    1.27793 (4) obj. -41.9478 iterations 1
Cbc0038I Pass   7: suminf.    0.23698 (1) obj. -41.9478 iterations 4
Cbc0038I Pass   8: suminf.    0.48808 (2) obj. -41.9478 iterations 2
Cbc0038I Pass   9: suminf.    0.39433 (1) obj. -41.9478 iterations 2
Cbc0038I Pass  10: suminf.    0.23011 (1) obj. -41.9478 iterations 1
Cbc0038I Pass  11: suminf.    1.51056 (5) obj. -41.9478 iterations 5
Cbc0038I Pass  12: suminf.    1.40052 (5) obj. -41.9478 iterations 2
Cbc0038I Pass  13: suminf.    1.62033 (5) obj. -41.9478 iterations 4
Cbc0038I Pass  14: suminf.    1.24987 (4) obj. -41.9478 iterations 2
Cbc0038I Pass  15: suminf.    0.45890 (3) obj. -41.9478 iterations 7
Cbc0038I Pass  16: suminf.    1.85037 (8) obj. -41.9478 iterations 8
Cbc0038I Pass  17: suminf.    1.85037 (8) obj. -41.9478 iterations 0
Cbc0038I Pass  18: suminf.    1.25586 (3) obj. -41.9478 iterations 11
Cbc0038I Pass  19: suminf.    0.77412 (4) obj. -41.9478 iterations 3
Cbc0038I Pass  20: suminf.    1.14546 (3) obj. -41.9478 iterations 4
Cbc0038I Pass  21: suminf.    1.12008 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  22: suminf.    0.76291 (3) obj. -41.9478 iterations 3
Cbc0038I Pass  23: suminf.    0.62536 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  24: suminf.    2.14194 (6) obj. -41.9478 iterations 8
Cbc0038I Pass  25: suminf.    1.08016 (5) obj. -41.9478 iterations 4
Cbc0038I Pass  26: suminf.    1.25586 (3) obj. -41.9478 iterations 5
Cbc0038I Pass  27: suminf.    0.77412 (4) obj. -41.9478 iterations 3
Cbc0038I Pass  28: suminf.    1.14546 (3) obj. -41.9478 iterations 4
Cbc0038I Pass  29: suminf.    1.12008 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  30: suminf.    0.76291 (3) obj. -41.9478 iterations 3
Cbc0038I Pass  31: suminf.    0.62536 (3) obj. -41.9478 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -36.155 - took 0.07 seconds
Cbc0012I Integer solution of -36.15502 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 29 columns, reduced to 37 rows 23 columns
Cbc0031I 14 added rows had average density of 16.357143
Cbc0013I At root node, 14 cuts changed objective from -94.081856 to -66.319455 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2455 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 782 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 125 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -37.84508 found by DiveCoefficient after 2817 iterations and 6 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -37.84508, took 3448 iterations and 22 nodes (0.33 seconds)
Cbc0032I Strong branching done 310 times (3800 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 7, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 56 (-4) columns and 526 (-86) elements
Clp1000I sum of infeasibilities 1.4943e-09 - average 2.9886e-11, 42 fixed columns
Coin0506I Presolve 13 (-37) rows, 14 (-42) columns and 49 (-477) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 1.1277942 - largest nonzero change 1.5233511e-05 ( 0.0013115745%) - largest zero change 1.8653502e-05
Clp0000I Optimal - objective value 42.648768
Clp0000I Optimal - objective value 42.648768
Coin0511I After Postsolve, objective 42.648768, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20754662 - largest nonzero change 1.468792e-05 ( 0.0012451555%) - largest zero change 2.8096073e-05
Clp0000I Optimal - objective value 129.44353
Clp0000I Optimal - objective value 129.44353
Clp0000I Optimal - objective value 129.44353
Coin0511I After Postsolve, objective 129.44353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129.4435256 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 55 columns (55 integer (55 of which binary)) and 511 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.633%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.97434
Cbc0038I Pass   1: suminf.    3.00794 (16) obj. -70.8302 iterations 18
Cbc0038I Pass   2: suminf.    3.00794 (16) obj. -70.8302 iterations 1
Cbc0038I Solution found of -30.4582
Cbc0038I Rounding solution of -31.9857 is better than previous of -30.4582

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 55 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.9857 to -32.7257 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.0401
Cbc0038I Pass   3: suminf.    3.00794 (16) obj. -70.8302 iterations 0
Cbc0038I Pass   4: suminf.    3.00794 (16) obj. -70.8302 iterations 1
Cbc0038I Pass   5: suminf.    0.24058 (1) obj. -39.0401 iterations 25
Cbc0038I Pass   6: suminf.    0.24194 (1) obj. -39.0884 iterations 1
Cbc0038I Pass   7: suminf.    1.30941 (5) obj. -39.0401 iterations 11
Cbc0038I Pass   8: suminf.    1.30202 (4) obj. -39.0401 iterations 2
Cbc0038I Pass   9: suminf.    0.85297 (3) obj. -39.0401 iterations 5
Cbc0038I Pass  10: suminf.    0.65037 (2) obj. -40.2504 iterations 2
Cbc0038I Pass  11: suminf.    0.85297 (3) obj. -39.0401 iterations 3
Cbc0038I Pass  12: suminf.    3.40937 (9) obj. -39.0401 iterations 18
Cbc0038I Pass  13: suminf.    3.14674 (8) obj. -39.0401 iterations 2
Cbc0038I Pass  14: suminf.    3.00424 (8) obj. -42.4535 iterations 1
Cbc0038I Pass  15: suminf.    2.79002 (8) obj. -39.0401 iterations 2
Cbc0038I Pass  16: suminf.    1.27682 (4) obj. -39.0401 iterations 10
Cbc0038I Pass  17: suminf.    1.27682 (4) obj. -39.0401 iterations 1
Cbc0038I Pass  18: suminf.    1.07383 (4) obj. -39.0401 iterations 1
Cbc0038I Pass  19: suminf.    1.07383 (4) obj. -39.0401 iterations 0
Cbc0038I Pass  20: suminf.    1.27682 (4) obj. -39.0401 iterations 1
Cbc0038I Pass  21: suminf.    2.67382 (9) obj. -39.0401 iterations 14
Cbc0038I Pass  22: suminf.    2.67382 (9) obj. -39.0401 iterations 1
Cbc0038I Pass  23: suminf.    1.44003 (4) obj. -39.0401 iterations 15
Cbc0038I Pass  24: suminf.    1.44003 (4) obj. -39.0401 iterations 0
Cbc0038I Pass  25: suminf.    1.01759 (3) obj. -39.0401 iterations 3
Cbc0038I Pass  26: suminf.    1.01759 (3) obj. -39.0401 iterations 0
Cbc0038I Pass  27: suminf.    1.24504 (3) obj. -46.4986 iterations 1
Cbc0038I Pass  28: suminf.    0.92076 (3) obj. -39.0401 iterations 1
Cbc0038I Pass  29: suminf.    1.01759 (3) obj. -39.0401 iterations 2
Cbc0038I Pass  30: suminf.    3.04352 (13) obj. -39.0401 iterations 22
Cbc0038I Pass  31: suminf.    2.74733 (12) obj. -39.0401 iterations 4
Cbc0038I Pass  32: suminf.    2.22632 (7) obj. -39.0401 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 55 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -32.7257 to -36.155 (0.08 seconds)
Cbc0038I Round again with cutoff of -50.4058
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.00794 (16) obj. -70.8302 iterations 0
Cbc0038I Pass  33: suminf.    3.00794 (16) obj. -70.8302 iterations 1
Cbc0038I Pass  34: suminf.    0.73400 (2) obj. -50.4058 iterations 27
Cbc0038I Pass  35: suminf.    0.69415 (2) obj. -51.6875 iterations 1
Cbc0038I Pass  36: suminf.    0.64579 (2) obj. -50.4058 iterations 1
Cbc0038I Pass  37: suminf.    0.73400 (2) obj. -50.4058 iterations 1
Cbc0038I Pass  38: suminf.    3.02294 (15) obj. -50.4058 iterations 24
Cbc0038I Pass  39: suminf.    3.00440 (11) obj. -50.4058 iterations 3
Cbc0038I Pass  40: suminf.    1.65026 (4) obj. -50.4058 iterations 13
Cbc0038I Pass  41: suminf.    1.43189 (4) obj. -52.3712 iterations 4
Cbc0038I Pass  42: suminf.    1.59704 (5) obj. -50.4058 iterations 9
Cbc0038I Pass  43: suminf.    1.59704 (5) obj. -50.4058 iterations 5
Cbc0038I Pass  44: suminf.    1.35873 (4) obj. -50.4058 iterations 2
Cbc0038I Pass  45: suminf.    1.35873 (4) obj. -50.4058 iterations 1
Cbc0038I Pass  46: suminf.    1.52026 (4) obj. -50.4058 iterations 2
Cbc0038I Pass  47: suminf.    1.52026 (4) obj. -50.4058 iterations 0
Cbc0038I Pass  48: suminf.    1.35873 (4) obj. -50.4058 iterations 3
Cbc0038I Pass  49: suminf.    3.36516 (12) obj. -50.4058 iterations 19
Cbc0038I Pass  50: suminf.    2.68887 (11) obj. -50.4058 iterations 3
Cbc0038I Pass  51: suminf.    2.00760 (11) obj. -50.4058 iterations 15
Cbc0038I Pass  52: suminf.    1.92936 (7) obj. -50.4058 iterations 2
Cbc0038I Pass  53: suminf.    1.72679 (6) obj. -50.4058 iterations 5
Cbc0038I Pass  54: suminf.    1.67043 (9) obj. -50.4058 iterations 4
Cbc0038I Pass  55: suminf.    2.04170 (7) obj. -50.4058 iterations 7
Cbc0038I Pass  56: suminf.    1.25616 (5) obj. -50.4058 iterations 3
Cbc0038I Pass  57: suminf.    1.28446 (5) obj. -50.4058 iterations 4
Cbc0038I Pass  58: suminf.    1.28446 (5) obj. -50.4058 iterations 1
Cbc0038I Pass  59: suminf.    1.53248 (5) obj. -50.4058 iterations 4
Cbc0038I Pass  60: suminf.    1.53248 (5) obj. -50.4058 iterations 0
Cbc0038I Pass  61: suminf.    1.28446 (5) obj. -50.4058 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 55 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -36.155 - took 0.07 seconds
Cbc0012I Integer solution of -36.15502 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 49 rows 55 columns, reduced to 26 rows 30 columns
Cbc0031I 33 added rows had average density of 15.181818
Cbc0013I At root node, 33 cuts changed objective from -95.868854 to -42.179387 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2435 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 608 row cuts average 44.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 32 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 181 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 78 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.738 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.15502 best solution, best possible -42.179387 (1.70 seconds)
Cbc0010I After 6 nodes, 7 on tree, -36.15502 best solution, best possible -42.179387 (2.40 seconds)
Cbc0004I Integer solution of -36.84508 found after 2212 iterations and 10 nodes (2.57 seconds)
Cbc0012I Integer solution of -37.84508 found by DiveCoefficient after 2370 iterations and 15 nodes (2.68 seconds)
Cbc0001I Search completed - best objective -37.84508, took 2413 iterations and 18 nodes (2.68 seconds)
Cbc0032I Strong branching done 324 times (3753 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 7, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.74   (Wallclock seconds):       2.69

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 29 (-3) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 4.97127e-06 - average 9.94254e-08, 0 fixed columns
Coin0506I Presolve 50 (0) rows, 29 (0) columns and 150 (0) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Coin0511I After Postsolve, objective 94.227168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Clp0000I Optimal - objective value 94.227168
Coin0511I After Postsolve, objective 94.227168, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.22716781 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 29 columns (28 integer (28 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.039%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.37408
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23.1413 iterations 20
Cbc0038I Solution found of -23.1413
Cbc0038I Relaxing continuous gives -23.1413
Cbc0038I Rounding solution of -26.3629 is better than previous of -23.1413

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -26.3629 to -36.155 (0.03 seconds)
Cbc0038I Round again with cutoff of -41.9478
Cbc0038I Pass   2: suminf.    0.48808 (2) obj. -41.9478 iterations 3
Cbc0038I Pass   3: suminf.    0.39433 (1) obj. -41.9478 iterations 2
Cbc0038I Pass   4: suminf.    0.23011 (1) obj. -41.9478 iterations 1
Cbc0038I Pass   5: suminf.    1.44538 (5) obj. -41.9478 iterations 4
Cbc0038I Pass   6: suminf.    1.27793 (4) obj. -41.9478 iterations 1
Cbc0038I Pass   7: suminf.    0.23698 (1) obj. -41.9478 iterations 4
Cbc0038I Pass   8: suminf.    0.48808 (2) obj. -41.9478 iterations 2
Cbc0038I Pass   9: suminf.    0.39433 (1) obj. -41.9478 iterations 2
Cbc0038I Pass  10: suminf.    0.23011 (1) obj. -41.9478 iterations 1
Cbc0038I Pass  11: suminf.    1.51056 (5) obj. -41.9478 iterations 5
Cbc0038I Pass  12: suminf.    1.40052 (5) obj. -41.9478 iterations 2
Cbc0038I Pass  13: suminf.    1.62033 (5) obj. -41.9478 iterations 4
Cbc0038I Pass  14: suminf.    1.24987 (4) obj. -41.9478 iterations 2
Cbc0038I Pass  15: suminf.    0.45890 (3) obj. -41.9478 iterations 7
Cbc0038I Pass  16: suminf.    1.85037 (8) obj. -41.9478 iterations 8
Cbc0038I Pass  17: suminf.    1.85037 (8) obj. -41.9478 iterations 0
Cbc0038I Pass  18: suminf.    1.25586 (3) obj. -41.9478 iterations 11
Cbc0038I Pass  19: suminf.    0.77412 (4) obj. -41.9478 iterations 3
Cbc0038I Pass  20: suminf.    1.14546 (3) obj. -41.9478 iterations 4
Cbc0038I Pass  21: suminf.    1.12008 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  22: suminf.    0.76291 (3) obj. -41.9478 iterations 3
Cbc0038I Pass  23: suminf.    0.62536 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  24: suminf.    2.14194 (6) obj. -41.9478 iterations 8
Cbc0038I Pass  25: suminf.    1.08016 (5) obj. -41.9478 iterations 4
Cbc0038I Pass  26: suminf.    1.25586 (3) obj. -41.9478 iterations 5
Cbc0038I Pass  27: suminf.    0.77412 (4) obj. -41.9478 iterations 3
Cbc0038I Pass  28: suminf.    1.14546 (3) obj. -41.9478 iterations 4
Cbc0038I Pass  29: suminf.    1.12008 (3) obj. -41.9478 iterations 1
Cbc0038I Pass  30: suminf.    0.76291 (3) obj. -41.9478 iterations 3
Cbc0038I Pass  31: suminf.    0.62536 (3) obj. -41.9478 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 29 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -36.155 - took 0.04 seconds
Cbc0012I Integer solution of -36.15502 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 29 columns, reduced to 37 rows 23 columns
Cbc0031I 14 added rows had average density of 16.357143
Cbc0013I At root node, 14 cuts changed objective from -94.081856 to -66.319455 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2455 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 782 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 109 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 125 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0012I Integer solution of -37.84508 found by DiveCoefficient after 2817 iterations and 6 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -37.84508, took 3448 iterations and 22 nodes (0.33 seconds)
Cbc0032I Strong branching done 310 times (3800 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 7, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 55 (-6) columns and 507 (-106) elements
Clp1000I sum of infeasibilities 9.42225e-09 - average 1.92291e-10, 12 fixed columns
Coin0506I Presolve 38 (-11) rows, 43 (-12) columns and 316 (-191) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 96.439627
Clp0000I Optimal - objective value 96.439627
Coin0511I After Postsolve, objective 96.439627, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2848143 - largest nonzero change 1.8957029e-05 ( 0.0016580886%) - largest zero change 2.9735488e-05
Clp0000I Optimal - objective value 101.63436
Clp0000I Optimal - objective value 101.63436
Clp0000I Optimal - objective value 101.63436
Coin0511I After Postsolve, objective 101.63436, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.634359 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 55 columns (55 integer (55 of which binary)) and 511 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.633%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.83138
Cbc0038I Pass   1: suminf.    3.26435 (17) obj. -86.3944 iterations 17
Cbc0038I Pass   2: suminf.    3.26435 (17) obj. -86.3944 iterations 1
Cbc0038I Solution found of -30.4582
Cbc0038I Rounding solution of -31.9857 is better than previous of -30.4582

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 55 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.9857 to -32.7257 (0.02 seconds)
Cbc0038I Round again with cutoff of -39.2335
Cbc0038I Pass   3: suminf.    3.26435 (17) obj. -86.3944 iterations 0
Cbc0038I Pass   4: suminf.    3.26435 (17) obj. -86.3944 iterations 1
Cbc0038I Pass   5: suminf.    0.24825 (2) obj. -39.2335 iterations 32
Cbc0038I Pass   6: suminf.    0.62007 (2) obj. -53.3912 iterations 1
Cbc0038I Pass   7: suminf.    0.33333 (1) obj. -45.7915 iterations 1
Cbc0038I Pass   8: suminf.    2.12032 (7) obj. -39.2335 iterations 18
Cbc0038I Pass   9: suminf.    1.51445 (6) obj. -39.2335 iterations 4
Cbc0038I Pass  10: suminf.    1.05802 (3) obj. -39.2335 iterations 4
Cbc0038I Pass  11: suminf.    1.05802 (3) obj. -39.2335 iterations 0
Cbc0038I Pass  12: suminf.    1.08832 (3) obj. -39.2335 iterations 1
Cbc0038I Pass  13: suminf.    1.08832 (3) obj. -39.2335 iterations 0
Cbc0038I Pass  14: suminf.    2.26235 (10) obj. -39.2335 iterations 15
Cbc0038I Pass  15: suminf.    1.18567 (4) obj. -39.2335 iterations 3
Cbc0038I Pass  16: suminf.    1.15448 (3) obj. -39.2335 iterations 2
Cbc0038I Pass  17: suminf.    1.15448 (3) obj. -39.2335 iterations 0
Cbc0038I Pass  18: suminf.    1.18567 (3) obj. -39.2335 iterations 1
Cbc0038I Pass  19: suminf.    1.18567 (3) obj. -39.2335 iterations 0
Cbc0038I Pass  20: suminf.    1.99306 (10) obj. -39.2335 iterations 12
Cbc0038I Pass  21: suminf.    1.77000 (10) obj. -42.8025 iterations 1
Cbc0038I Pass  22: suminf.    0.90098 (4) obj. -39.2335 iterations 15
Cbc0038I Pass  23: suminf.    0.71459 (3) obj. -39.2335 iterations 2
Cbc0038I Pass  24: suminf.    0.85331 (3) obj. -39.2335 iterations 1
Cbc0038I Pass  25: suminf.    2.25806 (9) obj. -39.2335 iterations 23
Cbc0038I Pass  26: suminf.    2.25806 (9) obj. -39.2335 iterations 2
Cbc0038I Pass  27: suminf.    1.38017 (4) obj. -39.2335 iterations 12
Cbc0038I Pass  28: suminf.    0.65333 (2) obj. -39.7954 iterations 3
Cbc0038I Pass  29: suminf.    0.82135 (3) obj. -39.2335 iterations 3
Cbc0038I Pass  30: suminf.    0.82135 (3) obj. -39.2335 iterations 0
Cbc0038I Pass  31: suminf.    0.90586 (3) obj. -39.2335 iterations 2
Cbc0038I Pass  32: suminf.    0.90586 (3) obj. -39.2335 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 55 columns, reduced to 26 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -32.7257 to -34.1441 (0.04 seconds)
Cbc0038I Round again with cutoff of -50.9475
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.26435 (17) obj. -86.3944 iterations 0
Cbc0038I Pass  33: suminf.    3.26435 (17) obj. -86.3944 iterations 1
Cbc0038I Pass  34: suminf.    0.86074 (3) obj. -50.9475 iterations 27
Cbc0038I Pass  35: suminf.    0.62007 (2) obj. -53.3912 iterations 2
Cbc0038I Pass  36: suminf.    0.52787 (2) obj. -50.9475 iterations 1
Cbc0038I Pass  37: suminf.    0.72632 (2) obj. -50.9475 iterations 1
Cbc0038I Pass  38: suminf.    2.86586 (15) obj. -50.9475 iterations 21
Cbc0038I Pass  39: suminf.    2.84733 (11) obj. -50.9475 iterations 2
Cbc0038I Pass  40: suminf.    1.46335 (4) obj. -50.9475 iterations 13
Cbc0038I Pass  41: suminf.    1.46335 (4) obj. -50.9475 iterations 1
Cbc0038I Pass  42: suminf.    1.55328 (4) obj. -50.9475 iterations 1
Cbc0038I Pass  43: suminf.    1.35782 (4) obj. -54.0749 iterations 1
Cbc0038I Pass  44: suminf.    1.62038 (5) obj. -50.9475 iterations 10
Cbc0038I Pass  45: suminf.    0.88117 (4) obj. -50.9475 iterations 5
Cbc0038I Pass  46: suminf.    1.25824 (4) obj. -50.9475 iterations 2
Cbc0038I Pass  47: suminf.    1.25824 (4) obj. -50.9475 iterations 0
Cbc0038I Pass  48: suminf.    1.15666 (4) obj. -50.9475 iterations 1
Cbc0038I Pass  49: suminf.    3.32495 (12) obj. -50.9475 iterations 18
Cbc0038I Pass  50: suminf.    2.96720 (11) obj. -53.2885 iterations 5
Cbc0038I Pass  51: suminf.    2.21066 (8) obj. -51.8062 iterations 1
Cbc0038I Pass  52: suminf.    1.20693 (4) obj. -50.9475 iterations 9
Cbc0038I Pass  53: suminf.    1.20693 (4) obj. -50.9475 iterations 0
Cbc0038I Pass  54: suminf.    1.11414 (4) obj. -50.9475 iterations 1
Cbc0038I Pass  55: suminf.    0.87420 (3) obj. -51.0419 iterations 2
Cbc0038I Pass  56: suminf.    1.20693 (4) obj. -50.9475 iterations 3
Cbc0038I Pass  57: suminf.    4.23314 (14) obj. -50.9475 iterations 10
Cbc0038I Pass  58: suminf.    3.87892 (12) obj. -50.9475 iterations 9
Cbc0038I Pass  59: suminf.    1.96753 (7) obj. -50.9475 iterations 11
Cbc0038I Pass  60: suminf.    1.96060 (7) obj. -50.9475 iterations 3
Cbc0038I Pass  61: suminf.    1.60221 (6) obj. -50.9475 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 55 columns, reduced to 36 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -34.1441 - took 0.04 seconds
Cbc0012I Integer solution of -34.14407 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 49 rows 55 columns, reduced to 20 rows 20 columns
Cbc0031I 30 added rows had average density of 14.233333
Cbc0013I At root node, 30 cuts changed objective from -97.803327 to -43.441569 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2803 row cuts average 2.9 elements, 5 column cuts (5 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 656 row cuts average 46.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 70 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 92 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 291 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 243 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 128 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.778 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -34.14407 best solution, best possible -43.441569 (1.77 seconds)
Cbc0012I Integer solution of -35.62192 found by rounding after 1816 iterations and 1 nodes (1.78 seconds)
Cbc0012I Integer solution of -36.42548 found by rounding after 1914 iterations and 2 nodes (1.92 seconds)
Cbc0010I After 7 nodes, 4 on tree, -36.42548 best solution, best possible -43.439171 (2.65 seconds)
Cbc0012I Integer solution of -36.84508 found by rounding after 2530 iterations and 9 nodes (3.05 seconds)
Cbc0004I Integer solution of -37.84508 found after 2765 iterations and 16 nodes (3.34 seconds)
Cbc0001I Search completed - best objective -37.84508, took 2807 iterations and 18 nodes (3.34 seconds)
Cbc0032I Strong branching done 314 times (3253 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 7, 12 variables fixed on reduced cost
Total time (CPU seconds):       2.15   (Wallclock seconds):       3.35

