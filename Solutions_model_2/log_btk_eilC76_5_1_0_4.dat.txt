Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 63 (-15) columns and 349 (-104) elements
Clp1000I sum of infeasibilities 3.74254e-05 - average 3.25439e-07, 16 fixed columns
Coin0506I Presolve 71 (-44) rows, 40 (-23) columns and 216 (-133) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 2.4639841 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 200.3906
Clp0000I Optimal - objective value 200.3906
Coin0511I After Postsolve, objective 200.3906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 200.3906
Clp0000I Optimal - objective value 200.3906
Clp0000I Optimal - objective value 200.3906
Coin0511I After Postsolve, objective 200.3906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 200.3906006 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 63 columns (62 integer (62 of which binary)) and 349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.412%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.8217
Cbc0038I Pass   1: suminf.    1.08926 (3) obj. -158.838 iterations 19
Cbc0038I Solution found of -115.306
Cbc0038I Relaxing continuous gives -115.306
Cbc0038I Rounding solution of -123.633 is better than previous of -115.306

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 63 columns, reduced to 24 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -123.633 to -172.496 (0.02 seconds)
Cbc0038I Round again with cutoff of -175.285
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.89077 (11) obj. -175.285 iterations 6
Cbc0038I Pass   3: suminf.    0.27747 (8) obj. -175.285 iterations 9
Cbc0038I Pass   4: suminf.    1.48334 (6) obj. -175.285 iterations 19
Cbc0038I Pass   5: suminf.    1.22685 (8) obj. -175.285 iterations 7
Cbc0038I Pass   6: suminf.    1.78867 (6) obj. -175.285 iterations 12
Cbc0038I Pass   7: suminf.    1.27291 (5) obj. -175.285 iterations 11
Cbc0038I Pass   8: suminf.    1.00550 (4) obj. -175.285 iterations 9
Cbc0038I Pass   9: suminf.    0.93298 (4) obj. -175.285 iterations 5
Cbc0038I Pass  10: suminf.    1.38710 (4) obj. -175.285 iterations 3
Cbc0038I Pass  11: suminf.    1.54288 (6) obj. -175.285 iterations 6
Cbc0038I Pass  12: suminf.    1.44617 (5) obj. -175.285 iterations 6
Cbc0038I Pass  13: suminf.    0.93298 (4) obj. -175.285 iterations 13
Cbc0038I Pass  14: suminf.    1.23943 (9) obj. -175.285 iterations 3
Cbc0038I Pass  15: suminf.    1.11909 (6) obj. -175.285 iterations 2
Cbc0038I Pass  16: suminf.    2.07014 (6) obj. -175.285 iterations 3
Cbc0038I Pass  17: suminf.    1.66965 (9) obj. -175.285 iterations 9
Cbc0038I Pass  18: suminf.    1.78867 (6) obj. -175.285 iterations 12
Cbc0038I Pass  19: suminf.    1.27291 (5) obj. -175.285 iterations 10
Cbc0038I Pass  20: suminf.    1.00550 (4) obj. -175.285 iterations 8
Cbc0038I Pass  21: suminf.    0.93298 (4) obj. -175.285 iterations 4
Cbc0038I Pass  22: suminf.    1.38710 (4) obj. -175.285 iterations 3
Cbc0038I Pass  23: suminf.    3.21793 (13) obj. -175.285 iterations 17
Cbc0038I Pass  24: suminf.    1.99388 (7) obj. -175.285 iterations 6
Cbc0038I Pass  25: suminf.    1.90586 (6) obj. -175.285 iterations 5
Cbc0038I Pass  26: suminf.    1.00550 (4) obj. -175.285 iterations 10
Cbc0038I Pass  27: suminf.    0.93298 (4) obj. -175.285 iterations 4
Cbc0038I Pass  28: suminf.    1.38710 (4) obj. -175.285 iterations 2
Cbc0038I Pass  29: suminf.    1.27291 (5) obj. -175.285 iterations 5
Cbc0038I Pass  30: suminf.    1.00550 (4) obj. -175.285 iterations 8
Cbc0038I Pass  31: suminf.    3.53374 (12) obj. -175.285 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 63 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -172.496 - took 0.03 seconds
Cbc0012I Integer solution of -172.49593 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 115 rows 63 columns, reduced to 18 rows 13 columns
Cbc0031I 6 added rows had average density of 27.166667
Cbc0013I At root node, 6 cuts changed objective from -200.3906 to -186.28064 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 93 row cuts average 3.2 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 36.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -172.49593, took 311 iterations and 12 nodes (0.09 seconds)
Cbc0032I Strong branching done 122 times (597 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 68 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-63) rows, 100 (-52) columns and 1460 (-1843) elements
Clp1000I sum of infeasibilities 0 - average 0, 22 fixed columns
Coin0506I Presolve 72 (-19) rows, 78 (-22) columns and 1060 (-400) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 1.9885411 - largest nonzero change 2.9300801e-05 ( 0.0021548148%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 233.24991
Clp0000I Optimal - objective value 233.24991
Coin0511I After Postsolve, objective 233.24991, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0258383 - largest nonzero change 2.4905321e-05 ( 0.0012908064%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 233.24991
Clp0000I Optimal - objective value 233.24991
Clp0000I Optimal - objective value 233.24991
Coin0511I After Postsolve, objective 233.24991, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 233.2499146 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 100 columns (100 integer (100 of which binary)) and 1462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.706%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.92399
Cbc0038I Pass   1: suminf.    3.33339 (29) obj. -200.381 iterations 14
Cbc0038I Pass   2: suminf.    3.33339 (29) obj. -200.381 iterations 0
Cbc0038I Pass   3: suminf.    1.76042 (17) obj. -186.449 iterations 12
Cbc0038I Solution found of -161.396
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 100 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -161.396 to -172.496 (0.03 seconds)
Cbc0038I Round again with cutoff of -177.88
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.33339 (29) obj. -200.381 iterations 0
Cbc0038I Pass   5: suminf.    3.33339 (29) obj. -200.381 iterations 0
Cbc0038I Pass   6: suminf.    1.64042 (16) obj. -185.569 iterations 13
Cbc0038I Pass   7: suminf.    1.27195 (8) obj. -177.88 iterations 30
Cbc0038I Pass   8: suminf.    0.89217 (7) obj. -177.88 iterations 5
Cbc0038I Pass   9: suminf.    1.09279 (5) obj. -177.88 iterations 17
Cbc0038I Pass  10: suminf.    1.03863 (7) obj. -177.88 iterations 6
Cbc0038I Pass  11: suminf.    0.44037 (5) obj. -177.88 iterations 13
Cbc0038I Pass  12: suminf.    0.21428 (3) obj. -177.88 iterations 7
Cbc0038I Pass  13: suminf.    1.34029 (9) obj. -177.88 iterations 18
Cbc0038I Pass  14: suminf.    1.11832 (7) obj. -177.88 iterations 7
Cbc0038I Pass  15: suminf.    0.82525 (5) obj. -177.88 iterations 11
Cbc0038I Pass  16: suminf.    3.69034 (21) obj. -177.88 iterations 30
Cbc0038I Pass  17: suminf.    2.73170 (19) obj. -177.88 iterations 9
Cbc0038I Pass  18: suminf.    2.33945 (7) obj. -177.88 iterations 27
Cbc0038I Pass  19: suminf.    0.92862 (5) obj. -177.88 iterations 8
Cbc0038I Pass  20: suminf.    0.44037 (5) obj. -177.88 iterations 13
Cbc0038I Pass  21: suminf.    0.21428 (3) obj. -177.88 iterations 7
Cbc0038I Pass  22: suminf.    1.10875 (10) obj. -177.88 iterations 20
Cbc0038I Pass  23: suminf.    0.84871 (10) obj. -177.88 iterations 16
Cbc0038I Pass  24: suminf.    0.74411 (7) obj. -177.88 iterations 15
Cbc0038I Pass  25: suminf.    0.35892 (4) obj. -177.88 iterations 7
Cbc0038I Pass  26: suminf.    0.79336 (6) obj. -177.88 iterations 10
Cbc0038I Pass  27: suminf.    2.35912 (11) obj. -177.88 iterations 14
Cbc0038I Pass  28: suminf.    1.42275 (12) obj. -177.88 iterations 10
Cbc0038I Pass  29: suminf.    1.06090 (9) obj. -177.88 iterations 13
Cbc0038I Pass  30: suminf.    1.05744 (6) obj. -177.88 iterations 3
Cbc0038I Pass  31: suminf.    0.80853 (5) obj. -177.88 iterations 9
Cbc0038I Pass  32: suminf.    0.80958 (8) obj. -177.88 iterations 4
Cbc0038I Pass  33: suminf.    1.15821 (5) obj. -177.88 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 100 columns, reduced to 56 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -172.496 - took 0.04 seconds
Cbc0012I Integer solution of -172.49593 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 91 rows 100 columns, reduced to 5 rows 5 columns
Cbc0031I 38 added rows had average density of 12.263158
Cbc0013I At root node, 38 cuts changed objective from -226.33964 to -183.5925 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 779 row cuts average 2.9 elements, 27 column cuts (27 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 59.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 41.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0010I After 6 nodes, 7 on tree, -172.49593 best solution, best possible -183.58898 (0.54 seconds)
Cbc0001I Search completed - best objective -172.49593, took 798 iterations and 18 nodes (0.90 seconds)
Cbc0032I Strong branching done 334 times (3416 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.90

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 63 (-15) columns and 349 (-104) elements
Clp1000I sum of infeasibilities 3.74254e-05 - average 3.25439e-07, 16 fixed columns
Coin0506I Presolve 71 (-44) rows, 40 (-23) columns and 216 (-133) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 2.4639841 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 200.3906
Clp0000I Optimal - objective value 200.3906
Coin0511I After Postsolve, objective 200.3906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 200.3906
Clp0000I Optimal - objective value 200.3906
Clp0000I Optimal - objective value 200.3906
Coin0511I After Postsolve, objective 200.3906, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 200.3906006 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 63 columns (62 integer (62 of which binary)) and 349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.412%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.8217
Cbc0038I Pass   1: suminf.    1.08926 (3) obj. -158.838 iterations 19
Cbc0038I Solution found of -115.306
Cbc0038I Relaxing continuous gives -115.306
Cbc0038I Rounding solution of -123.633 is better than previous of -115.306

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 63 columns, reduced to 24 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -123.633 to -172.496 (0.01 seconds)
Cbc0038I Round again with cutoff of -175.285
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.89077 (11) obj. -175.285 iterations 6
Cbc0038I Pass   3: suminf.    0.27747 (8) obj. -175.285 iterations 9
Cbc0038I Pass   4: suminf.    1.48334 (6) obj. -175.285 iterations 19
Cbc0038I Pass   5: suminf.    1.22685 (8) obj. -175.285 iterations 7
Cbc0038I Pass   6: suminf.    1.78867 (6) obj. -175.285 iterations 12
Cbc0038I Pass   7: suminf.    1.27291 (5) obj. -175.285 iterations 11
Cbc0038I Pass   8: suminf.    1.00550 (4) obj. -175.285 iterations 9
Cbc0038I Pass   9: suminf.    0.93298 (4) obj. -175.285 iterations 5
Cbc0038I Pass  10: suminf.    1.38710 (4) obj. -175.285 iterations 3
Cbc0038I Pass  11: suminf.    1.54288 (6) obj. -175.285 iterations 6
Cbc0038I Pass  12: suminf.    1.44617 (5) obj. -175.285 iterations 6
Cbc0038I Pass  13: suminf.    0.93298 (4) obj. -175.285 iterations 13
Cbc0038I Pass  14: suminf.    1.23943 (9) obj. -175.285 iterations 3
Cbc0038I Pass  15: suminf.    1.11909 (6) obj. -175.285 iterations 2
Cbc0038I Pass  16: suminf.    2.07014 (6) obj. -175.285 iterations 3
Cbc0038I Pass  17: suminf.    1.66965 (9) obj. -175.285 iterations 9
Cbc0038I Pass  18: suminf.    1.78867 (6) obj. -175.285 iterations 12
Cbc0038I Pass  19: suminf.    1.27291 (5) obj. -175.285 iterations 10
Cbc0038I Pass  20: suminf.    1.00550 (4) obj. -175.285 iterations 8
Cbc0038I Pass  21: suminf.    0.93298 (4) obj. -175.285 iterations 4
Cbc0038I Pass  22: suminf.    1.38710 (4) obj. -175.285 iterations 3
Cbc0038I Pass  23: suminf.    3.21793 (13) obj. -175.285 iterations 17
Cbc0038I Pass  24: suminf.    1.99388 (7) obj. -175.285 iterations 6
Cbc0038I Pass  25: suminf.    1.90586 (6) obj. -175.285 iterations 5
Cbc0038I Pass  26: suminf.    1.00550 (4) obj. -175.285 iterations 10
Cbc0038I Pass  27: suminf.    0.93298 (4) obj. -175.285 iterations 4
Cbc0038I Pass  28: suminf.    1.38710 (4) obj. -175.285 iterations 2
Cbc0038I Pass  29: suminf.    1.27291 (5) obj. -175.285 iterations 5
Cbc0038I Pass  30: suminf.    1.00550 (4) obj. -175.285 iterations 8
Cbc0038I Pass  31: suminf.    3.53374 (12) obj. -175.285 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 63 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -172.496 - took 0.03 seconds
Cbc0012I Integer solution of -172.49593 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 115 rows 63 columns, reduced to 18 rows 13 columns
Cbc0031I 6 added rows had average density of 27.166667
Cbc0013I At root node, 6 cuts changed objective from -200.3906 to -186.28064 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 93 row cuts average 3.2 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 77 row cuts average 36.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -172.49593, took 311 iterations and 12 nodes (0.09 seconds)
Cbc0032I Strong branching done 122 times (597 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 68 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-64) rows, 100 (-53) columns and 1460 (-1844) elements
Clp1000I sum of infeasibilities 0 - average 0, 22 fixed columns
Coin0506I Presolve 72 (-19) rows, 78 (-22) columns and 1060 (-400) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 1.9885411 - largest nonzero change 2.9300801e-05 ( 0.0021548148%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 233.24991
Clp0000I Optimal - objective value 233.24991
Coin0511I After Postsolve, objective 233.24991, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0258383 - largest nonzero change 2.4905321e-05 ( 0.0012908064%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 233.24991
Clp0000I Optimal - objective value 233.24991
Clp0000I Optimal - objective value 233.24991
Coin0511I After Postsolve, objective 233.24991, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 233.2499146 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 100 columns (100 integer (100 of which binary)) and 1462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.706%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.92399
Cbc0038I Pass   1: suminf.    3.33339 (29) obj. -200.381 iterations 14
Cbc0038I Pass   2: suminf.    3.33339 (29) obj. -200.381 iterations 0
Cbc0038I Pass   3: suminf.    1.76042 (17) obj. -186.449 iterations 12
Cbc0038I Solution found of -161.396
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 100 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -161.396 to -172.496 (0.03 seconds)
Cbc0038I Round again with cutoff of -177.88
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.33339 (29) obj. -200.381 iterations 0
Cbc0038I Pass   5: suminf.    3.33339 (29) obj. -200.381 iterations 0
Cbc0038I Pass   6: suminf.    1.64042 (16) obj. -185.569 iterations 13
Cbc0038I Pass   7: suminf.    1.27195 (8) obj. -177.88 iterations 30
Cbc0038I Pass   8: suminf.    0.89217 (7) obj. -177.88 iterations 5
Cbc0038I Pass   9: suminf.    1.09279 (5) obj. -177.88 iterations 17
Cbc0038I Pass  10: suminf.    1.03863 (7) obj. -177.88 iterations 6
Cbc0038I Pass  11: suminf.    0.44037 (5) obj. -177.88 iterations 13
Cbc0038I Pass  12: suminf.    0.21428 (3) obj. -177.88 iterations 7
Cbc0038I Pass  13: suminf.    1.34029 (9) obj. -177.88 iterations 18
Cbc0038I Pass  14: suminf.    1.11832 (7) obj. -177.88 iterations 7
Cbc0038I Pass  15: suminf.    0.82525 (5) obj. -177.88 iterations 11
Cbc0038I Pass  16: suminf.    3.69034 (21) obj. -177.88 iterations 30
Cbc0038I Pass  17: suminf.    2.73170 (19) obj. -177.88 iterations 9
Cbc0038I Pass  18: suminf.    2.33945 (7) obj. -177.88 iterations 27
Cbc0038I Pass  19: suminf.    0.92862 (5) obj. -177.88 iterations 8
Cbc0038I Pass  20: suminf.    0.44037 (5) obj. -177.88 iterations 13
Cbc0038I Pass  21: suminf.    0.21428 (3) obj. -177.88 iterations 7
Cbc0038I Pass  22: suminf.    1.10875 (10) obj. -177.88 iterations 20
Cbc0038I Pass  23: suminf.    0.84871 (10) obj. -177.88 iterations 16
Cbc0038I Pass  24: suminf.    0.74411 (7) obj. -177.88 iterations 15
Cbc0038I Pass  25: suminf.    0.35892 (4) obj. -177.88 iterations 7
Cbc0038I Pass  26: suminf.    0.79336 (6) obj. -177.88 iterations 10
Cbc0038I Pass  27: suminf.    2.35912 (11) obj. -177.88 iterations 14
Cbc0038I Pass  28: suminf.    1.42275 (12) obj. -177.88 iterations 10
Cbc0038I Pass  29: suminf.    1.06090 (9) obj. -177.88 iterations 13
Cbc0038I Pass  30: suminf.    1.05744 (6) obj. -177.88 iterations 3
Cbc0038I Pass  31: suminf.    0.80853 (5) obj. -177.88 iterations 9
Cbc0038I Pass  32: suminf.    0.80958 (8) obj. -177.88 iterations 4
Cbc0038I Pass  33: suminf.    1.15821 (5) obj. -177.88 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 100 columns, reduced to 56 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -172.496 - took 0.04 seconds
Cbc0012I Integer solution of -172.49593 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 91 rows 100 columns, reduced to 5 rows 5 columns
Cbc0031I 38 added rows had average density of 12.263158
Cbc0013I At root node, 38 cuts changed objective from -226.33964 to -183.5925 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 779 row cuts average 2.9 elements, 27 column cuts (27 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 59.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 41.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -172.49593 best solution, best possible -183.58898 (0.56 seconds)
Cbc0001I Search completed - best objective -172.49593, took 798 iterations and 18 nodes (1.08 seconds)
Cbc0032I Strong branching done 334 times (3416 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       1.09

