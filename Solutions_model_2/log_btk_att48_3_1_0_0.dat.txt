Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 48 (-2) columns and 266 (-19) elements
Clp1000I sum of infeasibilities 0.000129555 - average 1.45567e-06, 1 fixed columns
Coin0506I Presolve 87 (-2) rows, 47 (-1) columns and 260 (-6) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 1.4774554 - largest nonzero change 0 ( 0%) - largest zero change 1.112934e-05
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Coin0511I After Postsolve, objective 175701.54, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Coin0511I After Postsolve, objective 175701.54, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 175701.5445 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 48 columns (47 integer (47 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 11.7444
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -79975.6 iterations 26
Cbc0038I Solution found of -79975.6
Cbc0038I Relaxing continuous gives -79975.6
Cbc0038I Rounding solution of -149608 is better than previous of -79975.6

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -149608 to -173632 (0.05 seconds)
Cbc0038I Round again with cutoff of -173839
Cbc0038I Pass   2: suminf.    4.81282 (12) obj. -173839 iterations 10
Cbc0038I Pass   3: suminf.    1.41403 (9) obj. -173839 iterations 12
Cbc0038I Pass   4: suminf.    1.15381 (10) obj. -173839 iterations 3
Cbc0038I Pass   5: suminf.    1.00000 (3) obj. -173839 iterations 23
Cbc0038I Pass   6: suminf.    0.84788 (3) obj. -173839 iterations 6
Cbc0038I Pass   7: suminf.    0.53092 (4) obj. -173839 iterations 3
Cbc0038I Pass   8: suminf.    1.00000 (3) obj. -173839 iterations 5
Cbc0038I Pass   9: suminf.    1.18482 (6) obj. -173839 iterations 7
Cbc0038I Pass  10: suminf.    1.00000 (6) obj. -173839 iterations 5
Cbc0038I Pass  11: suminf.    1.69507 (6) obj. -173839 iterations 17
Cbc0038I Pass  12: suminf.    1.19403 (8) obj. -173839 iterations 5
Cbc0038I Pass  13: suminf.    1.00000 (3) obj. -173839 iterations 11
Cbc0038I Pass  14: suminf.    1.00000 (4) obj. -173839 iterations 3
Cbc0038I Pass  15: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  16: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  17: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  18: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  19: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  20: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  21: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  22: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  23: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  24: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  25: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  26: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  27: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  28: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  29: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  30: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  31: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -173632 to -173662 (0.09 seconds)
Cbc0038I Round again with cutoff of -174212
Cbc0038I Pass  31: suminf.    5.00898 (13) obj. -174212 iterations 1
Cbc0038I Pass  32: suminf.    1.55330 (7) obj. -174212 iterations 13
Cbc0038I Pass  33: suminf.    1.00000 (5) obj. -174212 iterations 10
Cbc0038I Pass  34: suminf.    3.03371 (12) obj. -174212 iterations 11
Cbc0038I Pass  35: suminf.    1.00000 (5) obj. -174212 iterations 7
Cbc0038I Pass  36: suminf.    1.13951 (8) obj. -174212 iterations 7
Cbc0038I Pass  37: suminf.    1.10114 (6) obj. -174212 iterations 6
Cbc0038I Pass  38: suminf.    1.00000 (5) obj. -174212 iterations 6
Cbc0038I Pass  39: suminf.    1.00000 (5) obj. -174212 iterations 3
Cbc0038I Pass  40: suminf.    3.03371 (12) obj. -174212 iterations 11
Cbc0038I Pass  41: suminf.    1.00000 (5) obj. -174212 iterations 7
Cbc0038I Pass  42: suminf.    3.13483 (8) obj. -174212 iterations 21
Cbc0038I Pass  43: suminf.    2.31822 (8) obj. -174212 iterations 5
Cbc0038I Pass  44: suminf.    1.73514 (7) obj. -174212 iterations 1
Cbc0038I Pass  45: suminf.    3.20634 (7) obj. -174212 iterations 6
Cbc0038I Pass  46: suminf.    2.29139 (7) obj. -174212 iterations 1
Cbc0038I Pass  47: suminf.    1.00000 (4) obj. -174212 iterations 4
Cbc0038I Pass  48: suminf.    1.00000 (4) obj. -174212 iterations 3
Cbc0038I Pass  49: suminf.    1.46154 (4) obj. -174212 iterations 9
Cbc0038I Pass  50: suminf.    0.97616 (3) obj. -174212 iterations 1
Cbc0038I Pass  51: suminf.    0.94738 (3) obj. -174212 iterations 2
Cbc0038I Pass  52: suminf.    0.97758 (3) obj. -174212 iterations 3
Cbc0038I Pass  53: suminf.    1.81584 (10) obj. -174212 iterations 22
Cbc0038I Pass  54: suminf.    1.81584 (10) obj. -174212 iterations 3
Cbc0038I Pass  55: suminf.    2.69531 (9) obj. -174212 iterations 17
Cbc0038I Pass  56: suminf.    1.05138 (9) obj. -174212 iterations 6
Cbc0038I Pass  57: suminf.    2.37428 (7) obj. -174212 iterations 6
Cbc0038I Pass  58: suminf.    2.37428 (7) obj. -174212 iterations 0
Cbc0038I Pass  59: suminf.    1.05295 (5) obj. -174212 iterations 7
Cbc0038I Pass  60: suminf.    4.89352 (17) obj. -174212 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -173662 - took 0.10 seconds
Cbc0012I Integer solution of -173661.7 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 32 columns
Cbc0031I 19 added rows had average density of 31.526316
Cbc0013I At root node, 19 cuts changed objective from -175701.54 to -174695.14 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5991 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1351 row cuts average 46.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 40.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0016I Integer solution of -173699.8 found by strong branching after 5524 iterations and 20 nodes (0.66 seconds)
Cbc0001I Search completed - best objective -173699.8, took 5762 iterations and 26 nodes (0.66 seconds)
Cbc0032I Strong branching done 444 times (8894 iterations), fathomed 4 nodes and fixed 10 variables
Cbc0035I Maximum depth 11, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-10) rows, 93 (-3) columns and 1322 (-91) elements
Clp1000I sum of infeasibilities 1.89256e-07 - average 2.15064e-09, 63 fixed columns
Coin0506I Presolve 25 (-63) rows, 30 (-63) columns and 104 (-1218) elements
Clp0006I 0  Obj 171366.8 Dual inf 3423.799 (29)
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 1.5625031 - largest nonzero change 2.8167904e-05 ( 0.0014083952%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 172593
Clp0000I Optimal - objective value 172593
Coin0511I After Postsolve, objective 172593, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 172593 Dual inf 2925.5626 (48)
Clp0014I Perturbing problem by 0.001% of 3.4307104 - largest nonzero change 2.9394864e-05 ( 0.0029394864%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 176248.45
Clp0000I Optimal - objective value 176248.45
Clp0000I Optimal - objective value 176248.45
Coin0511I After Postsolve, objective 176248.45, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 176248.4536 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 93 columns (93 integer (93 of which binary)) and 1324 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.113%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 10.3339
Cbc0038I Pass   1: suminf.    2.32466 (21) obj. -128743 iterations 9
Cbc0038I Pass   2: suminf.    2.32466 (21) obj. -128743 iterations 0
Cbc0038I Pass   3: suminf.    0.82235 (10) obj. -127479 iterations 11
Cbc0038I Solution found of -126852
Cbc0038I Rounding solution of -173298 is better than previous of -126852

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -173560
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    7.22473 (39) obj. -173560 iterations 1
Cbc0038I Pass   5: suminf.    6.94287 (39) obj. -173560 iterations 1
Cbc0038I Pass   6: suminf.    4.35150 (27) obj. -173560 iterations 12
Cbc0038I Pass   7: suminf.    0.44130 (2) obj. -173560 iterations 30
Cbc0038I Pass   8: suminf.    0.40761 (2) obj. -173584 iterations 5
Cbc0038I Pass   9: suminf.    0.77999 (2) obj. -173560 iterations 9
Cbc0038I Pass  10: suminf.    0.77999 (2) obj. -173560 iterations 0
Cbc0038I Pass  11: suminf.    0.62168 (2) obj. -173560 iterations 1
Cbc0038I Pass  12: suminf.    0.46210 (2) obj. -173677 iterations 5
Cbc0038I Pass  13: suminf.    2.96494 (13) obj. -173697 iterations 20
Cbc0038I Pass  14: suminf.    1.70363 (8) obj. -173570 iterations 7
Cbc0038I Pass  15: suminf.    1.70363 (8) obj. -173570 iterations 2
Cbc0038I Pass  16: suminf.    1.49991 (4) obj. -173560 iterations 15
Cbc0038I Pass  17: suminf.    1.49991 (4) obj. -173560 iterations 0
Cbc0038I Pass  18: suminf.    1.50111 (4) obj. -173560 iterations 2
Cbc0038I Pass  19: suminf.    1.50535 (5) obj. -173560 iterations 6
Cbc0038I Pass  20: suminf.    0.50789 (2) obj. -173560 iterations 8
Cbc0038I Pass  21: suminf.    0.50789 (2) obj. -173560 iterations 1
Cbc0038I Pass  22: suminf.    0.64122 (2) obj. -173560 iterations 3
Cbc0038I Pass  23: suminf.    3.37411 (19) obj. -173560 iterations 28
Cbc0038I Pass  24: suminf.    1.70514 (11) obj. -173560 iterations 11
Cbc0038I Pass  25: suminf.    1.70493 (10) obj. -173562 iterations 2
Cbc0038I Pass  26: suminf.    1.12425 (5) obj. -173560 iterations 15
Cbc0038I Pass  27: suminf.    1.12425 (5) obj. -173560 iterations 0
Cbc0038I Pass  28: suminf.    0.76069 (3) obj. -173560 iterations 11
Cbc0038I Pass  29: suminf.    0.72030 (3) obj. -173570 iterations 3
Cbc0038I Pass  30: suminf.    0.93051 (5) obj. -173742 iterations 13
Cbc0038I Pass  31: suminf.    0.93051 (5) obj. -173742 iterations 2
Cbc0038I Pass  32: suminf.    0.68213 (3) obj. -173560 iterations 6
Cbc0038I Pass  33: suminf.    0.68213 (3) obj. -173560 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 93 columns, reduced to 39 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -126852 to -173700 (0.04 seconds)
Cbc0038I Round again with cutoff of -174142
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    7.17938 (39) obj. -174142 iterations 0
Cbc0038I Pass  34: suminf.    6.98156 (39) obj. -174142 iterations 1
Cbc0038I Pass  35: suminf.    3.78039 (24) obj. -174142 iterations 15
Cbc0038I Pass  36: suminf.    1.70213 (8) obj. -174142 iterations 24
Cbc0038I Pass  37: suminf.    1.70213 (8) obj. -174142 iterations 0
Cbc0038I Pass  38: suminf.    1.82570 (5) obj. -174142 iterations 5
Cbc0038I Pass  39: suminf.    1.55193 (9) obj. -174142 iterations 5
Cbc0038I Pass  40: suminf.    1.74971 (5) obj. -174142 iterations 11
Cbc0038I Pass  41: suminf.    1.34324 (5) obj. -174142 iterations 5
Cbc0038I Pass  42: suminf.    0.63059 (3) obj. -174169 iterations 5
Cbc0038I Pass  43: suminf.    0.53412 (2) obj. -174142 iterations 5
Cbc0038I Pass  44: suminf.    0.48774 (2) obj. -174159 iterations 3
Cbc0038I Pass  45: suminf.    3.04620 (10) obj. -174142 iterations 19
Cbc0038I Pass  46: suminf.    2.07053 (10) obj. -174142 iterations 3
Cbc0038I Pass  47: suminf.    1.78497 (9) obj. -174142 iterations 2
Cbc0038I Pass  48: suminf.    1.26944 (5) obj. -174142 iterations 6
Cbc0038I Pass  49: suminf.    1.16302 (5) obj. -174169 iterations 2
Cbc0038I Pass  50: suminf.    1.28869 (5) obj. -174142 iterations 6
Cbc0038I Pass  51: suminf.    1.78320 (9) obj. -174142 iterations 14
Cbc0038I Pass  52: suminf.    1.76563 (9) obj. -174146 iterations 3
Cbc0038I Pass  53: suminf.    1.15591 (5) obj. -174142 iterations 12
Cbc0038I Pass  54: suminf.    1.13802 (5) obj. -174146 iterations 2
Cbc0038I Pass  55: suminf.    3.65567 (16) obj. -174193 iterations 13
Cbc0038I Pass  56: suminf.    2.41239 (14) obj. -174142 iterations 6
Cbc0038I Pass  57: suminf.    2.41101 (13) obj. -174159 iterations 2
Cbc0038I Pass  58: suminf.    1.46986 (7) obj. -174142 iterations 13
Cbc0038I Pass  59: suminf.    1.34355 (7) obj. -174167 iterations 4
Cbc0038I Pass  60: suminf.    3.94322 (19) obj. -174142 iterations 17
Cbc0038I Pass  61: suminf.    2.89825 (18) obj. -174142 iterations 3
Cbc0038I Pass  62: suminf.    2.87382 (17) obj. -174429 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -173700 - took 0.04 seconds
Cbc0012I Integer solution of -173699.8 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 93 columns, reduced to 17 rows 20 columns
Cbc0031I 34 added rows had average density of 11.176471
Cbc0013I At root node, 120 cuts changed objective from -175912.13 to -173690.66 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 887 row cuts average 5.2 elements, 22 column cuts (44 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 92 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0001I Search completed - best objective -173699.8, took 240 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 48 (-2) columns and 266 (-19) elements
Clp1000I sum of infeasibilities 0.000129555 - average 1.45567e-06, 1 fixed columns
Coin0506I Presolve 87 (-2) rows, 47 (-1) columns and 260 (-6) elements
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 1.4774554 - largest nonzero change 0 ( 0%) - largest zero change 1.112934e-05
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Coin0511I After Postsolve, objective 175701.54, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Clp0000I Optimal - objective value 175701.54
Coin0511I After Postsolve, objective 175701.54, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 175701.5445 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 48 columns (47 integer (47 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 11.7444
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -79975.6 iterations 26
Cbc0038I Solution found of -79975.6
Cbc0038I Relaxing continuous gives -79975.6
Cbc0038I Rounding solution of -149608 is better than previous of -79975.6

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -149608 to -173632 (0.05 seconds)
Cbc0038I Round again with cutoff of -173839
Cbc0038I Pass   2: suminf.    4.81282 (12) obj. -173839 iterations 10
Cbc0038I Pass   3: suminf.    1.41403 (9) obj. -173839 iterations 12
Cbc0038I Pass   4: suminf.    1.15381 (10) obj. -173839 iterations 3
Cbc0038I Pass   5: suminf.    1.00000 (3) obj. -173839 iterations 23
Cbc0038I Pass   6: suminf.    0.84788 (3) obj. -173839 iterations 6
Cbc0038I Pass   7: suminf.    0.53092 (4) obj. -173839 iterations 3
Cbc0038I Pass   8: suminf.    1.00000 (3) obj. -173839 iterations 5
Cbc0038I Pass   9: suminf.    1.18482 (6) obj. -173839 iterations 7
Cbc0038I Pass  10: suminf.    1.00000 (6) obj. -173839 iterations 5
Cbc0038I Pass  11: suminf.    1.69507 (6) obj. -173839 iterations 17
Cbc0038I Pass  12: suminf.    1.19403 (8) obj. -173839 iterations 5
Cbc0038I Pass  13: suminf.    1.00000 (3) obj. -173839 iterations 11
Cbc0038I Pass  14: suminf.    1.00000 (4) obj. -173839 iterations 3
Cbc0038I Pass  15: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  16: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  17: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  18: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  19: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  20: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  21: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  22: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  23: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  24: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  25: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  26: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I Pass  27: suminf.    0.70544 (4) obj. -173839 iterations 3
Cbc0038I Pass  28: suminf.    1.45514 (5) obj. -173839 iterations 9
Cbc0038I Pass  29: suminf.    1.00000 (4) obj. -173839 iterations 4
Cbc0038I Pass  30: suminf.    1.05230 (5) obj. -173839 iterations 8
Cbc0038I Pass  31: suminf.    0.92756 (3) obj. -173839 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -173632 to -173662 (0.09 seconds)
Cbc0038I Round again with cutoff of -174212
Cbc0038I Pass  31: suminf.    5.00898 (13) obj. -174212 iterations 1
Cbc0038I Pass  32: suminf.    1.55330 (7) obj. -174212 iterations 13
Cbc0038I Pass  33: suminf.    1.00000 (5) obj. -174212 iterations 10
Cbc0038I Pass  34: suminf.    3.03371 (12) obj. -174212 iterations 11
Cbc0038I Pass  35: suminf.    1.00000 (5) obj. -174212 iterations 7
Cbc0038I Pass  36: suminf.    1.13951 (8) obj. -174212 iterations 7
Cbc0038I Pass  37: suminf.    1.10114 (6) obj. -174212 iterations 6
Cbc0038I Pass  38: suminf.    1.00000 (5) obj. -174212 iterations 6
Cbc0038I Pass  39: suminf.    1.00000 (5) obj. -174212 iterations 3
Cbc0038I Pass  40: suminf.    3.03371 (12) obj. -174212 iterations 11
Cbc0038I Pass  41: suminf.    1.00000 (5) obj. -174212 iterations 7
Cbc0038I Pass  42: suminf.    3.13483 (8) obj. -174212 iterations 21
Cbc0038I Pass  43: suminf.    2.31822 (8) obj. -174212 iterations 5
Cbc0038I Pass  44: suminf.    1.73514 (7) obj. -174212 iterations 1
Cbc0038I Pass  45: suminf.    3.20634 (7) obj. -174212 iterations 6
Cbc0038I Pass  46: suminf.    2.29139 (7) obj. -174212 iterations 1
Cbc0038I Pass  47: suminf.    1.00000 (4) obj. -174212 iterations 4
Cbc0038I Pass  48: suminf.    1.00000 (4) obj. -174212 iterations 3
Cbc0038I Pass  49: suminf.    1.46154 (4) obj. -174212 iterations 9
Cbc0038I Pass  50: suminf.    0.97616 (3) obj. -174212 iterations 1
Cbc0038I Pass  51: suminf.    0.94738 (3) obj. -174212 iterations 2
Cbc0038I Pass  52: suminf.    0.97758 (3) obj. -174212 iterations 3
Cbc0038I Pass  53: suminf.    1.81584 (10) obj. -174212 iterations 22
Cbc0038I Pass  54: suminf.    1.81584 (10) obj. -174212 iterations 3
Cbc0038I Pass  55: suminf.    2.69531 (9) obj. -174212 iterations 17
Cbc0038I Pass  56: suminf.    1.05138 (9) obj. -174212 iterations 6
Cbc0038I Pass  57: suminf.    2.37428 (7) obj. -174212 iterations 6
Cbc0038I Pass  58: suminf.    2.37428 (7) obj. -174212 iterations 0
Cbc0038I Pass  59: suminf.    1.05295 (5) obj. -174212 iterations 7
Cbc0038I Pass  60: suminf.    4.89352 (17) obj. -174212 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -173662 - took 0.10 seconds
Cbc0012I Integer solution of -173661.7 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 32 columns
Cbc0031I 19 added rows had average density of 31.526316
Cbc0013I At root node, 19 cuts changed objective from -175701.54 to -174695.14 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5991 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1351 row cuts average 46.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 40.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0010I After 6 nodes, 7 on tree, -173661.7 best solution, best possible -174695.14 (0.70 seconds)
Cbc0016I Integer solution of -173699.8 found by strong branching after 5524 iterations and 20 nodes (0.73 seconds)
Cbc0001I Search completed - best objective -173699.8, took 5762 iterations and 26 nodes (0.74 seconds)
Cbc0032I Strong branching done 444 times (8894 iterations), fathomed 4 nodes and fixed 10 variables
Cbc0035I Maximum depth 11, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 93 (-4) columns and 1322 (-92) elements
Clp1000I sum of infeasibilities 1.89256e-07 - average 2.15064e-09, 63 fixed columns
Coin0506I Presolve 25 (-63) rows, 30 (-63) columns and 104 (-1218) elements
Clp0006I 0  Obj 171366.8 Dual inf 3423.799 (29)
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 1.5625031 - largest nonzero change 2.8167904e-05 ( 0.0014083952%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 172593
Clp0000I Optimal - objective value 172593
Coin0511I After Postsolve, objective 172593, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 172593 Dual inf 2925.5626 (48)
Clp0014I Perturbing problem by 0.001% of 3.4307104 - largest nonzero change 2.9394864e-05 ( 0.0029394864%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 176248.45
Clp0000I Optimal - objective value 176248.45
Clp0000I Optimal - objective value 176248.45
Coin0511I After Postsolve, objective 176248.45, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 176248.4536 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 93 columns (93 integer (93 of which binary)) and 1324 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.113%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 10.3339
Cbc0038I Pass   1: suminf.    2.32466 (21) obj. -128743 iterations 9
Cbc0038I Pass   2: suminf.    2.32466 (21) obj. -128743 iterations 0
Cbc0038I Pass   3: suminf.    0.82235 (10) obj. -127479 iterations 11
Cbc0038I Solution found of -126852
Cbc0038I Rounding solution of -173298 is better than previous of -126852

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -173560
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    7.22473 (39) obj. -173560 iterations 1
Cbc0038I Pass   5: suminf.    6.94287 (39) obj. -173560 iterations 1
Cbc0038I Pass   6: suminf.    4.35150 (27) obj. -173560 iterations 12
Cbc0038I Pass   7: suminf.    0.44130 (2) obj. -173560 iterations 30
Cbc0038I Pass   8: suminf.    0.40761 (2) obj. -173584 iterations 5
Cbc0038I Pass   9: suminf.    0.77999 (2) obj. -173560 iterations 9
Cbc0038I Pass  10: suminf.    0.77999 (2) obj. -173560 iterations 0
Cbc0038I Pass  11: suminf.    0.62168 (2) obj. -173560 iterations 1
Cbc0038I Pass  12: suminf.    0.46210 (2) obj. -173677 iterations 5
Cbc0038I Pass  13: suminf.    2.96494 (13) obj. -173697 iterations 20
Cbc0038I Pass  14: suminf.    1.70363 (8) obj. -173570 iterations 7
Cbc0038I Pass  15: suminf.    1.70363 (8) obj. -173570 iterations 2
Cbc0038I Pass  16: suminf.    1.49991 (4) obj. -173560 iterations 15
Cbc0038I Pass  17: suminf.    1.49991 (4) obj. -173560 iterations 0
Cbc0038I Pass  18: suminf.    1.50111 (4) obj. -173560 iterations 2
Cbc0038I Pass  19: suminf.    1.50535 (5) obj. -173560 iterations 6
Cbc0038I Pass  20: suminf.    0.50789 (2) obj. -173560 iterations 8
Cbc0038I Pass  21: suminf.    0.50789 (2) obj. -173560 iterations 1
Cbc0038I Pass  22: suminf.    0.64122 (2) obj. -173560 iterations 3
Cbc0038I Pass  23: suminf.    3.37411 (19) obj. -173560 iterations 28
Cbc0038I Pass  24: suminf.    1.70514 (11) obj. -173560 iterations 11
Cbc0038I Pass  25: suminf.    1.70493 (10) obj. -173562 iterations 2
Cbc0038I Pass  26: suminf.    1.12425 (5) obj. -173560 iterations 15
Cbc0038I Pass  27: suminf.    1.12425 (5) obj. -173560 iterations 0
Cbc0038I Pass  28: suminf.    0.76069 (3) obj. -173560 iterations 11
Cbc0038I Pass  29: suminf.    0.72030 (3) obj. -173570 iterations 3
Cbc0038I Pass  30: suminf.    0.93051 (5) obj. -173742 iterations 13
Cbc0038I Pass  31: suminf.    0.93051 (5) obj. -173742 iterations 2
Cbc0038I Pass  32: suminf.    0.68213 (3) obj. -173560 iterations 6
Cbc0038I Pass  33: suminf.    0.68213 (3) obj. -173560 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 93 columns, reduced to 39 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -126852 to -173700 (0.04 seconds)
Cbc0038I Round again with cutoff of -174142
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    7.17938 (39) obj. -174142 iterations 0
Cbc0038I Pass  34: suminf.    6.98156 (39) obj. -174142 iterations 1
Cbc0038I Pass  35: suminf.    3.78039 (24) obj. -174142 iterations 15
Cbc0038I Pass  36: suminf.    1.70213 (8) obj. -174142 iterations 24
Cbc0038I Pass  37: suminf.    1.70213 (8) obj. -174142 iterations 0
Cbc0038I Pass  38: suminf.    1.82570 (5) obj. -174142 iterations 5
Cbc0038I Pass  39: suminf.    1.55193 (9) obj. -174142 iterations 5
Cbc0038I Pass  40: suminf.    1.74971 (5) obj. -174142 iterations 11
Cbc0038I Pass  41: suminf.    1.34324 (5) obj. -174142 iterations 5
Cbc0038I Pass  42: suminf.    0.63059 (3) obj. -174169 iterations 5
Cbc0038I Pass  43: suminf.    0.53412 (2) obj. -174142 iterations 5
Cbc0038I Pass  44: suminf.    0.48774 (2) obj. -174159 iterations 3
Cbc0038I Pass  45: suminf.    3.04620 (10) obj. -174142 iterations 19
Cbc0038I Pass  46: suminf.    2.07053 (10) obj. -174142 iterations 3
Cbc0038I Pass  47: suminf.    1.78497 (9) obj. -174142 iterations 2
Cbc0038I Pass  48: suminf.    1.26944 (5) obj. -174142 iterations 6
Cbc0038I Pass  49: suminf.    1.16302 (5) obj. -174169 iterations 2
Cbc0038I Pass  50: suminf.    1.28869 (5) obj. -174142 iterations 6
Cbc0038I Pass  51: suminf.    1.78320 (9) obj. -174142 iterations 14
Cbc0038I Pass  52: suminf.    1.76563 (9) obj. -174146 iterations 3
Cbc0038I Pass  53: suminf.    1.15591 (5) obj. -174142 iterations 12
Cbc0038I Pass  54: suminf.    1.13802 (5) obj. -174146 iterations 2
Cbc0038I Pass  55: suminf.    3.65567 (16) obj. -174193 iterations 13
Cbc0038I Pass  56: suminf.    2.41239 (14) obj. -174142 iterations 6
Cbc0038I Pass  57: suminf.    2.41101 (13) obj. -174159 iterations 2
Cbc0038I Pass  58: suminf.    1.46986 (7) obj. -174142 iterations 13
Cbc0038I Pass  59: suminf.    1.34355 (7) obj. -174167 iterations 4
Cbc0038I Pass  60: suminf.    3.94322 (19) obj. -174142 iterations 17
Cbc0038I Pass  61: suminf.    2.89825 (18) obj. -174142 iterations 3
Cbc0038I Pass  62: suminf.    2.87382 (17) obj. -174429 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -173700 - took 0.04 seconds
Cbc0012I Integer solution of -173699.8 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 93 columns, reduced to 17 rows 20 columns
Cbc0031I 34 added rows had average density of 11.176471
Cbc0013I At root node, 120 cuts changed objective from -175912.13 to -173690.66 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 887 row cuts average 5.2 elements, 22 column cuts (44 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 92 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0001I Search completed - best objective -173699.8, took 240 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.20

