Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 1.63617e-05 - average 3.24637e-08, 66 fixed columns
Coin0506I Presolve 373 (-131) rows, 196 (-66) columns and 1109 (-391) elements
Clp0029I End of values pass after 196 iterations
Clp0014I Perturbing problem by 0.001% of 2.0267577 - largest nonzero change 0 ( 0%) - largest zero change 2.9689391e-05
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Coin0511I After Postsolve, objective 148.47336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Coin0511I After Postsolve, objective 148.47336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.4733606 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 64 integers unsatisfied sum - 13.5896
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.7021 iterations 142
Cbc0038I Solution found of 14.7021
Cbc0038I Relaxing continuous gives 14.7021
Cbc0038I Rounding solution of -44.742 is better than previous of 14.7021

Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 118 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -44.742 to -77.4034 (0.06 seconds)
Cbc0038I Round again with cutoff of -84.5105
Cbc0038I Pass   2: suminf.    2.40368 (9) obj. -84.5105 iterations 27
Cbc0038I Pass   3: suminf.    1.89365 (6) obj. -84.5105 iterations 21
Cbc0038I Pass   4: suminf.    1.85916 (6) obj. -84.5105 iterations 21
Cbc0038I Pass   5: suminf.    1.85839 (5) obj. -84.5105 iterations 3
Cbc0038I Pass   6: suminf.    2.24794 (5) obj. -84.5105 iterations 14
Cbc0038I Pass   7: suminf.    4.78470 (13) obj. -84.5105 iterations 52
Cbc0038I Pass   8: suminf.    1.55068 (6) obj. -84.5105 iterations 43
Cbc0038I Pass   9: suminf.    1.55068 (6) obj. -84.5105 iterations 2
Cbc0038I Pass  10: suminf.    1.84567 (5) obj. -84.5105 iterations 30
Cbc0038I Pass  11: suminf.    1.84567 (5) obj. -84.5105 iterations 0
Cbc0038I Pass  12: suminf.    0.99964 (3) obj. -84.5105 iterations 10
Cbc0038I Pass  13: suminf.    0.95777 (4) obj. -84.5105 iterations 5
Cbc0038I Pass  14: suminf.    1.84969 (5) obj. -84.5105 iterations 10
Cbc0038I Pass  15: suminf.    1.81441 (5) obj. -84.5105 iterations 8
Cbc0038I Pass  16: suminf.    4.09930 (18) obj. -84.5105 iterations 42
Cbc0038I Pass  17: suminf.    2.15920 (10) obj. -84.5105 iterations 28
Cbc0038I Pass  18: suminf.    1.92851 (9) obj. -84.5105 iterations 3
Cbc0038I Pass  19: suminf.    1.95147 (9) obj. -84.5105 iterations 3
Cbc0038I Pass  20: suminf.    1.27315 (4) obj. -84.5105 iterations 34
Cbc0038I Pass  21: suminf.    1.16235 (3) obj. -84.5105 iterations 11
Cbc0038I Pass  22: suminf.    1.39650 (4) obj. -84.5105 iterations 11
Cbc0038I Pass  23: suminf.    1.39144 (4) obj. -84.5105 iterations 1
Cbc0038I Pass  24: suminf.    1.81251 (4) obj. -84.5105 iterations 13
Cbc0038I Pass  25: suminf.    1.81251 (4) obj. -84.5105 iterations 0
Cbc0038I Pass  26: suminf.    1.45917 (4) obj. -84.5105 iterations 8
Cbc0038I Pass  27: suminf.    1.41827 (4) obj. -84.5105 iterations 6
Cbc0038I Pass  28: suminf.    1.41442 (4) obj. -84.5105 iterations 1
Cbc0038I Pass  29: suminf.    1.81251 (4) obj. -84.5105 iterations 12
Cbc0038I Pass  30: suminf.    1.81251 (4) obj. -84.5105 iterations 0
Cbc0038I Pass  31: suminf.    1.45917 (4) obj. -84.5105 iterations 8
Cbc0038I Rounding solution of -77.7849 is better than previous of -77.4034

Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 158 rows 87 columns
Cbc0038I Mini branch and bound improved solution from -77.7849 to -79.9327 (0.15 seconds)
Cbc0038I Round again with cutoff of -97.3031
Cbc0038I Pass  31: suminf.    3.06522 (10) obj. -97.3031 iterations 8
Cbc0038I Pass  32: suminf.    2.21468 (7) obj. -97.3031 iterations 38
Cbc0038I Pass  33: suminf.    1.75150 (7) obj. -97.3031 iterations 23
Cbc0038I Pass  34: suminf.    2.52532 (7) obj. -97.3031 iterations 25
Cbc0038I Pass  35: suminf.    6.01589 (23) obj. -97.3031 iterations 50
Cbc0038I Pass  36: suminf.    2.36866 (14) obj. -97.3031 iterations 45
Cbc0038I Pass  37: suminf.    2.34119 (12) obj. -97.3031 iterations 6
Cbc0038I Pass  38: suminf.    3.10435 (8) obj. -97.3031 iterations 18
Cbc0038I Pass  39: suminf.    3.08112 (10) obj. -97.3031 iterations 10
Cbc0038I Pass  40: suminf.    3.35610 (12) obj. -97.3031 iterations 13
Cbc0038I Pass  41: suminf.    2.16856 (7) obj. -97.3031 iterations 12
Cbc0038I Pass  42: suminf.    1.84436 (7) obj. -97.3031 iterations 7
Cbc0038I Pass  43: suminf.    1.60366 (6) obj. -97.3031 iterations 4
Cbc0038I Pass  44: suminf.    1.41940 (7) obj. -97.3031 iterations 8
Cbc0038I Pass  45: suminf.    2.31765 (9) obj. -97.3031 iterations 21
Cbc0038I Pass  46: suminf.    2.29953 (7) obj. -97.3031 iterations 6
Cbc0038I Pass  47: suminf.    2.43127 (9) obj. -97.3031 iterations 10
Cbc0038I Pass  48: suminf.    2.40854 (8) obj. -97.3031 iterations 4
Cbc0038I Pass  49: suminf.    2.31998 (8) obj. -97.3031 iterations 15
Cbc0038I Pass  50: suminf.    7.47688 (24) obj. -97.3031 iterations 49
Cbc0038I Pass  51: suminf.    3.64487 (11) obj. -97.3031 iterations 53
Cbc0038I Pass  52: suminf.    2.90507 (11) obj. -97.3031 iterations 13
Cbc0038I Pass  53: suminf.    2.88089 (9) obj. -97.3031 iterations 9
Cbc0038I Pass  54: suminf.    2.33764 (7) obj. -97.3031 iterations 11
Cbc0038I Pass  55: suminf.    1.63809 (5) obj. -97.3031 iterations 10
Cbc0038I Pass  56: suminf.    1.62412 (6) obj. -97.3031 iterations 5
Cbc0038I Pass  57: suminf.    2.19118 (8) obj. -97.3031 iterations 10
Cbc0038I Pass  58: suminf.    1.73735 (7) obj. -97.3031 iterations 1
Cbc0038I Pass  59: suminf.    1.73369 (7) obj. -97.3031 iterations 3
Cbc0038I Pass  60: suminf.    2.91636 (8) obj. -97.3031 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 165 rows 90 columns
Cbc0038I Mini branch and bound improved solution from -79.9327 to -86.7623 (0.23 seconds)
Cbc0038I Round again with cutoff of -112.654
Cbc0038I Pass  60: suminf.    3.80096 (18) obj. -112.654 iterations 16
Cbc0038I Pass  61: suminf.    3.18987 (14) obj. -112.654 iterations 22
Cbc0038I Pass  62: suminf.    4.25263 (12) obj. -112.654 iterations 22
Cbc0038I Pass  63: suminf.    3.53785 (12) obj. -112.654 iterations 13
Cbc0038I Pass  64: suminf.    3.03983 (11) obj. -112.654 iterations 4
Cbc0038I Pass  65: suminf.    3.03983 (11) obj. -112.654 iterations 3
Cbc0038I Pass  66: suminf.    4.27023 (11) obj. -112.654 iterations 18
Cbc0038I Pass  67: suminf.    2.89791 (12) obj. -112.654 iterations 12
Cbc0038I Pass  68: suminf.    3.19731 (11) obj. -112.654 iterations 13
Cbc0038I Pass  69: suminf.    8.41558 (27) obj. -112.654 iterations 43
Cbc0038I Pass  70: suminf.    4.44698 (14) obj. -112.654 iterations 57
Cbc0038I Pass  71: suminf.    3.66034 (12) obj. -112.654 iterations 13
Cbc0038I Pass  72: suminf.    3.58025 (12) obj. -112.654 iterations 11
Cbc0038I Pass  73: suminf.    4.67537 (16) obj. -112.654 iterations 34
Cbc0038I Pass  74: suminf.    3.96610 (15) obj. -112.654 iterations 8
Cbc0038I Pass  75: suminf.    4.99136 (14) obj. -112.654 iterations 16
Cbc0038I Pass  76: suminf.    3.41278 (11) obj. -112.654 iterations 8
Cbc0038I Pass  77: suminf.    3.05790 (9) obj. -112.654 iterations 11
Cbc0038I Pass  78: suminf.    3.50329 (10) obj. -112.654 iterations 14
Cbc0038I Pass  79: suminf.    2.94453 (9) obj. -112.654 iterations 9
Cbc0038I Pass  80: suminf.    3.84528 (11) obj. -112.654 iterations 16
Cbc0038I Pass  81: suminf.    2.80449 (10) obj. -112.654 iterations 22
Cbc0038I Pass  82: suminf.    3.95485 (11) obj. -112.654 iterations 11
Cbc0038I Pass  83: suminf.    3.80229 (10) obj. -112.654 iterations 4
Cbc0038I Pass  84: suminf.    3.75954 (10) obj. -112.654 iterations 9
Cbc0038I Pass  85: suminf.    3.37702 (10) obj. -112.654 iterations 9
Cbc0038I Pass  86: suminf.    3.37702 (10) obj. -112.654 iterations 0
Cbc0038I Pass  87: suminf.    3.71863 (10) obj. -112.654 iterations 11
Cbc0038I Pass  88: suminf.    3.27289 (10) obj. -112.654 iterations 17
Cbc0038I Pass  89: suminf.    3.26562 (12) obj. -112.654 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 149 rows 82 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -86.7623 - took 0.31 seconds
Cbc0012I Integer solution of -86.76229 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 121 rows 67 columns
Cbc0031I 39 added rows had average density of 160.28205
Cbc0013I At root node, 39 cuts changed objective from -148.47336 to -133.40822 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26054 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.465 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2051 row cuts average 257.0 elements, 0 column cuts (0 active)  in 0.439 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.458 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 254.5 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -86.76229 best solution, best possible -133.40822 (4.64 seconds)
Cbc0010I After 7 nodes, 8 on tree, -86.76229 best solution, best possible -133.40822 (5.35 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 60 rows 42 columns
Cbc0010I After 75 nodes, 16 on tree, -86.76229 best solution, best possible -133.40822 (6.06 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 66 rows 41 columns
Cbc0038I Full problem 504 rows 262 columns, reduced to 18 rows 16 columns
Cbc0010I After 219 nodes, 11 on tree, -86.76229 best solution, best possible -133.40822 (6.76 seconds)
Cbc0001I Search completed - best objective -86.76228999999998, took 31631 iterations and 354 nodes (7.24 seconds)
Cbc0032I Strong branching done 3124 times (74868 iterations), fathomed 35 nodes and fixed 161 variables
Cbc0035I Maximum depth 85, 1900 variables fixed on reduced cost
Total time (CPU seconds):       7.10   (Wallclock seconds):       7.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 355 (-171) rows, 373 (-151) columns and 17232 (-18504) elements
Clp1000I sum of infeasibilities 2.89521e-06 - average 8.15551e-09, 229 fixed columns
Coin0506I Presolve 128 (-227) rows, 143 (-230) columns and 526 (-16706) elements
Clp0006I 0  Obj 24.554664 Dual inf 19.738971 (143)
Clp0029I End of values pass after 143 iterations
Clp0014I Perturbing problem by 0.001% of 1.590937 - largest nonzero change 2.5792763e-05 ( 0.0015531604%) - largest zero change 2.9637213e-05
Clp0000I Optimal - objective value 26.637098
Clp0000I Optimal - objective value 26.637098
Coin0511I After Postsolve, objective 26.637098, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 26.637098 Dual inf 297.88155 (117)
Clp0014I Perturbing problem by 0.001% of 1.9988319 - largest nonzero change 2.8834074e-05 ( 0.0027142434%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 191.78463
Clp0000I Optimal - objective value 191.78463
Clp0000I Optimal - objective value 191.78463
Coin0511I After Postsolve, objective 191.78463, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 191.7846314 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 355 rows, 373 columns (373 integer (373 of which binary)) and 17232 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.014%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 118 integers unsatisfied sum - 6.14788
Cbc0038I Pass   1: suminf.    2.77892 (92) obj. -178.301 iterations 48
Cbc0038I Pass   2: suminf.    2.77892 (92) obj. -178.301 iterations 1
Cbc0038I Pass   3: suminf.    1.20681 (68) obj. -100.161 iterations 25
Cbc0038I Pass   4: suminf.    0.60456 (42) obj. -69.904 iterations 26
Cbc0038I Pass   5: suminf.    0.26417 (22) obj. -50.2444 iterations 20
Cbc0038I Pass   6: suminf.    0.04016 (4) obj. -31.4811 iterations 18
Cbc0038I Solution found of -26.5319
Cbc0038I Rounding solution of -32.0486 is better than previous of -26.5319

Cbc0038I Before mini branch and bound, 253 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 68 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -32.0486 to -47.3858 (0.16 seconds)
Cbc0038I Round again with cutoff of -61.8258
Cbc0038I Pass   7: suminf.    2.77892 (92) obj. -178.301 iterations 0
Cbc0038I Pass   8: suminf.    2.77892 (92) obj. -178.301 iterations 1
Cbc0038I Pass   9: suminf.    1.82582 (72) obj. -125.231 iterations 20
Cbc0038I Pass  10: suminf.    0.72776 (47) obj. -75.7608 iterations 34
Cbc0038I Pass  11: suminf.    0.48874 (35) obj. -63.0198 iterations 12
Cbc0038I Pass  12: suminf.    0.71709 (15) obj. -61.8258 iterations 29
Cbc0038I Pass  13: suminf.    0.28764 (14) obj. -62.9506 iterations 6
Cbc0038I Pass  14: suminf.    0.52296 (24) obj. -61.8258 iterations 59
Cbc0038I Pass  15: suminf.    0.34029 (5) obj. -61.8258 iterations 3
Cbc0038I Pass  16: suminf.    0.61719 (3) obj. -61.8258 iterations 11
Cbc0038I Pass  17: suminf.    0.47375 (8) obj. -61.8258 iterations 9
Cbc0038I Pass  18: suminf.    0.83971 (3) obj. -61.8258 iterations 13
Cbc0038I Pass  19: suminf.    0.63909 (5) obj. -61.8258 iterations 6
Cbc0038I Pass  20: suminf.    1.13190 (5) obj. -61.8258 iterations 10
Cbc0038I Pass  21: suminf.    1.13190 (5) obj. -61.8258 iterations 0
Cbc0038I Pass  22: suminf.    1.00436 (6) obj. -61.8258 iterations 17
Cbc0038I Pass  23: suminf.    1.00436 (6) obj. -61.8258 iterations 0
Cbc0038I Pass  24: suminf.    1.13190 (5) obj. -61.8258 iterations 12
Cbc0038I Pass  25: suminf.    0.98979 (19) obj. -61.8258 iterations 62
Cbc0038I Pass  26: suminf.    0.98979 (19) obj. -61.8258 iterations 14
Cbc0038I Pass  27: suminf.    0.98735 (5) obj. -61.8258 iterations 21
Cbc0038I Pass  28: suminf.    0.54760 (5) obj. -61.8258 iterations 2
Cbc0038I Pass  29: suminf.    1.01971 (5) obj. -61.8258 iterations 7
Cbc0038I Pass  30: suminf.    0.40040 (4) obj. -64.0536 iterations 3
Cbc0038I Pass  31: suminf.    0.17531 (3) obj. -61.8258 iterations 8
Cbc0038I Pass  32: suminf.    0.96336 (4) obj. -61.8258 iterations 8
Cbc0038I Pass  33: suminf.    2.15249 (23) obj. -61.8258 iterations 54
Cbc0038I Pass  34: suminf.    0.78252 (18) obj. -62.0219 iterations 11
Cbc0038I Pass  35: suminf.    0.77154 (6) obj. -61.8258 iterations 37
Cbc0038I Pass  36: suminf.    0.73598 (6) obj. -61.8258 iterations 7
Cbc0038I Rounding solution of -50.6269 is better than previous of -47.3858

Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 116 rows 125 columns
Cbc0038I Mini branch and bound improved solution from -50.6269 to -74.4079 (0.32 seconds)
Cbc0038I Round again with cutoff of -97.8833
Cbc0038I Pass  36: suminf.    2.77892 (92) obj. -178.301 iterations 0
Cbc0038I Pass  37: suminf.    2.77892 (92) obj. -178.301 iterations 1
Cbc0038I Pass  38: suminf.    1.17388 (67) obj. -98.2264 iterations 29
Cbc0038I Pass  39: suminf.    1.50932 (42) obj. -97.8833 iterations 49
Cbc0038I Pass  40: suminf.    0.98128 (41) obj. -98.6855 iterations 6
Cbc0038I Pass  41: suminf.    1.82663 (50) obj. -97.8833 iterations 46
Cbc0038I Pass  42: suminf.    1.45718 (32) obj. -97.8833 iterations 6
Cbc0038I Pass  43: suminf.    1.65793 (24) obj. -97.8833 iterations 22
Cbc0038I Pass  44: suminf.    1.00605 (24) obj. -97.8833 iterations 8
Cbc0038I Pass  45: suminf.    2.14892 (32) obj. -97.8833 iterations 40
Cbc0038I Pass  46: suminf.    2.14892 (32) obj. -97.8833 iterations 0
Cbc0038I Pass  47: suminf.    2.36264 (28) obj. -97.8833 iterations 14
Cbc0038I Pass  48: suminf.    2.24278 (28) obj. -97.8833 iterations 4
Cbc0038I Pass  49: suminf.    2.51980 (19) obj. -97.8833 iterations 44
Cbc0038I Pass  50: suminf.    2.01708 (19) obj. -97.8833 iterations 10
Cbc0038I Pass  51: suminf.    2.41762 (19) obj. -97.8833 iterations 10
Cbc0038I Pass  52: suminf.    2.41762 (19) obj. -97.8833 iterations 6
Cbc0038I Pass  53: suminf.    2.51980 (19) obj. -97.8833 iterations 10
Cbc0038I Pass  54: suminf.    3.30102 (34) obj. -97.8833 iterations 37
Cbc0038I Pass  55: suminf.    2.85045 (32) obj. -97.8833 iterations 8
Cbc0038I Pass  56: suminf.    2.21358 (30) obj. -97.8833 iterations 2
Cbc0038I Pass  57: suminf.    2.14150 (28) obj. -97.8833 iterations 11
Cbc0038I Pass  58: suminf.    2.14150 (28) obj. -97.8833 iterations 0
Cbc0038I Pass  59: suminf.    2.28817 (25) obj. -97.8833 iterations 15
Cbc0038I Pass  60: suminf.    2.28817 (25) obj. -97.8833 iterations 5
Cbc0038I Pass  61: suminf.    2.38832 (21) obj. -97.8833 iterations 21
Cbc0038I Pass  62: suminf.    2.00085 (23) obj. -97.8833 iterations 6
Cbc0038I Pass  63: suminf.    2.38832 (21) obj. -97.8833 iterations 12
Cbc0038I Pass  64: suminf.    2.15004 (35) obj. -97.8833 iterations 48
Cbc0038I Pass  65: suminf.    1.89440 (37) obj. -97.8833 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 113 rows 119 columns
Cbc0038I Mini branch and bound improved solution from -74.4079 to -82.07 (0.42 seconds)
Cbc0038I Round again with cutoff of -126.054
Cbc0038I Pass  65: suminf.    2.77892 (92) obj. -178.301 iterations 0
Cbc0038I Pass  66: suminf.    2.77892 (92) obj. -178.301 iterations 1
Cbc0038I Pass  67: suminf.    1.93413 (72) obj. -126.054 iterations 25
Cbc0038I Pass  68: suminf.    1.78479 (50) obj. -126.054 iterations 58
Cbc0038I Pass  69: suminf.    1.28232 (50) obj. -126.054 iterations 4
Cbc0038I Pass  70: suminf.    3.72840 (53) obj. -126.054 iterations 34
Cbc0038I Pass  71: suminf.    3.09579 (54) obj. -126.054 iterations 2
Cbc0038I Pass  72: suminf.    2.83271 (57) obj. -126.054 iterations 3
Cbc0038I Pass  73: suminf.    3.39272 (54) obj. -126.054 iterations 25
Cbc0038I Pass  74: suminf.    2.76293 (52) obj. -126.054 iterations 13
Cbc0038I Pass  75: suminf.    3.25530 (50) obj. -126.054 iterations 7
Cbc0038I Pass  76: suminf.    2.85379 (50) obj. -126.054 iterations 6
Cbc0038I Pass  77: suminf.    2.88688 (49) obj. -126.054 iterations 6
Cbc0038I Pass  78: suminf.    2.85514 (49) obj. -126.054 iterations 4
Cbc0038I Pass  79: suminf.    2.81764 (47) obj. -126.054 iterations 31
Cbc0038I Pass  80: suminf.    2.81764 (47) obj. -126.054 iterations 4
Cbc0038I Pass  81: suminf.    2.82607 (45) obj. -126.054 iterations 13
Cbc0038I Pass  82: suminf.    2.82607 (45) obj. -126.054 iterations 3
Cbc0038I Pass  83: suminf.    2.85463 (45) obj. -126.054 iterations 22
Cbc0038I Pass  84: suminf.    2.85463 (45) obj. -126.054 iterations 3
Cbc0038I Pass  85: suminf.    3.17425 (45) obj. -126.054 iterations 8
Cbc0038I Pass  86: suminf.    3.17425 (45) obj. -126.054 iterations 5
Cbc0038I Pass  87: suminf.    2.85463 (45) obj. -126.054 iterations 12
Cbc0038I Pass  88: suminf.    3.36935 (47) obj. -126.054 iterations 37
Cbc0038I Pass  89: suminf.    3.36935 (47) obj. -126.054 iterations 10
Cbc0038I Pass  90: suminf.    3.29779 (45) obj. -126.054 iterations 13
Cbc0038I Pass  91: suminf.    2.85911 (45) obj. -126.054 iterations 9
Cbc0038I Pass  92: suminf.    2.97262 (45) obj. -126.054 iterations 24
Cbc0038I Pass  93: suminf.    2.97262 (45) obj. -126.054 iterations 3
Cbc0038I Pass  94: suminf.    2.98500 (45) obj. -126.054 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 103 rows 106 columns
Cbc0038I Mini branch and bound did not improve solution (0.49 seconds)
Cbc0038I After 0.49 seconds - Feasibility pump exiting with objective of -82.07 - took 0.38 seconds
Cbc0012I Integer solution of -82.07001 found by feasibility pump after 0 iterations and 0 nodes (0.49 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 26 rows 27 columns
Cbc0031I 137 added rows had average density of 97.313869
Cbc0013I At root node, 137 cuts changed objective from -191.78463 to -108.25129 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20451 row cuts average 2.0 elements, 0 column cuts (76 active)  in 0.431 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3230 row cuts average 353.9 elements, 0 column cuts (0 active)  in 1.121 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 594 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4781 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.461 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3188 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.863 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 410 row cuts average 208.0 elements, 0 column cuts (0 active)  in 0.229 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 230 row cuts average 40.6 elements, 0 column cuts (0 active)  in 0.230 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -82.07001 best solution, best possible -108.25129 (6.86 seconds)
Cbc0010I After 4 nodes, 3 on tree, -82.07001 best solution, best possible -108.25102 (7.68 seconds)
Cbc0010I After 17 nodes, 12 on tree, -82.07001 best solution, best possible -108.25102 (8.39 seconds)
Cbc0010I After 34 nodes, 20 on tree, -82.07001 best solution, best possible -108.25102 (9.18 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 32 rows 38 columns
Cbc0012I Integer solution of -86.76229 found by RINS after 15581 iterations and 42 nodes (9.39 seconds)
Cbc0010I After 62 nodes, 18 on tree, -86.76229 best solution, best possible -108.25102 (9.97 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 75 rows 87 columns
Cbc0010I After 91 nodes, 21 on tree, -86.76229 best solution, best possible -108.25102 (10.91 seconds)
Cbc0010I After 162 nodes, 18 on tree, -86.76229 best solution, best possible -108.25102 (11.61 seconds)
Cbc0010I After 227 nodes, 13 on tree, -86.76229 best solution, best possible -108.25102 (12.33 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 11 rows 15 columns
Cbc0010I After 293 nodes, 6 on tree, -86.76229 best solution, best possible -108.25102 (13.07 seconds)
Cbc0010I After 343 nodes, 6 on tree, -86.76229 best solution, best possible -108.25102 (13.78 seconds)
Cbc0010I After 425 nodes, 1 on tree, -86.76229 best solution, best possible -108.25102 (14.48 seconds)
Cbc0010I After 427 nodes, 2 on tree, -86.76229 best solution, best possible -107.88766 (15.22 seconds)
Cbc0010I After 430 nodes, 5 on tree, -86.76229 best solution, best possible -107.88766 (16.05 seconds)
Cbc0010I After 445 nodes, 12 on tree, -86.76229 best solution, best possible -107.88766 (16.76 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 37 rows 48 columns
Cbc0010I After 493 nodes, 13 on tree, -86.76229 best solution, best possible -107.88766 (17.60 seconds)
Cbc0010I After 521 nodes, 10 on tree, -86.76229 best solution, best possible -107.88766 (18.31 seconds)
Cbc0010I After 563 nodes, 11 on tree, -86.76229 best solution, best possible -107.88766 (19.03 seconds)
Cbc0010I After 599 nodes, 12 on tree, -86.76229 best solution, best possible -107.88766 (19.79 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 127 rows 137 columns
Cbc0010I After 611 nodes, 14 on tree, -86.76229 best solution, best possible -107.88766 (20.51 seconds)
Cbc0010I After 660 nodes, 12 on tree, -86.76229 best solution, best possible -107.88766 (21.23 seconds)
Cbc0010I After 703 nodes, 12 on tree, -86.76229 best solution, best possible -107.88766 (21.94 seconds)
Cbc0010I After 739 nodes, 4 on tree, -86.76229 best solution, best possible -107.88766 (22.83 seconds)
Cbc0010I After 748 nodes, 6 on tree, -86.76229 best solution, best possible -107.88766 (23.56 seconds)
Cbc0010I After 775 nodes, 4 on tree, -86.76229 best solution, best possible -107.88766 (24.27 seconds)
Cbc0010I After 797 nodes, 4 on tree, -86.76229 best solution, best possible -107.88766 (24.97 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 21 rows 31 columns
Cbc0010I After 817 nodes, 8 on tree, -86.76229 best solution, best possible -107.88766 (25.69 seconds)
Cbc0010I After 905 nodes, 5 on tree, -86.76229 best solution, best possible -107.88766 (26.41 seconds)
Cbc0001I Search completed - best objective -86.76228999999998, took 61551 iterations and 950 nodes (26.84 seconds)
Cbc0032I Strong branching done 3062 times (51314 iterations), fathomed 32 nodes and fixed 73 variables
Cbc0035I Maximum depth 27, 4522 variables fixed on reduced cost
Total time (CPU seconds):       26.02   (Wallclock seconds):       26.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 1.63617e-05 - average 3.24637e-08, 66 fixed columns
Coin0506I Presolve 373 (-131) rows, 196 (-66) columns and 1109 (-391) elements
Clp0029I End of values pass after 196 iterations
Clp0014I Perturbing problem by 0.001% of 2.0267577 - largest nonzero change 0 ( 0%) - largest zero change 2.9689391e-05
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Coin0511I After Postsolve, objective 148.47336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Clp0000I Optimal - objective value 148.47336
Coin0511I After Postsolve, objective 148.47336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.4733606 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 64 integers unsatisfied sum - 13.5896
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.7021 iterations 142
Cbc0038I Solution found of 14.7021
Cbc0038I Relaxing continuous gives 14.7021
Cbc0038I Rounding solution of -44.742 is better than previous of 14.7021

Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 118 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -44.742 to -77.4034 (0.07 seconds)
Cbc0038I Round again with cutoff of -84.5105
Cbc0038I Pass   2: suminf.    2.40368 (9) obj. -84.5105 iterations 27
Cbc0038I Pass   3: suminf.    1.89365 (6) obj. -84.5105 iterations 21
Cbc0038I Pass   4: suminf.    1.85916 (6) obj. -84.5105 iterations 21
Cbc0038I Pass   5: suminf.    1.85839 (5) obj. -84.5105 iterations 3
Cbc0038I Pass   6: suminf.    2.24794 (5) obj. -84.5105 iterations 14
Cbc0038I Pass   7: suminf.    4.78470 (13) obj. -84.5105 iterations 52
Cbc0038I Pass   8: suminf.    1.55068 (6) obj. -84.5105 iterations 43
Cbc0038I Pass   9: suminf.    1.55068 (6) obj. -84.5105 iterations 2
Cbc0038I Pass  10: suminf.    1.84567 (5) obj. -84.5105 iterations 30
Cbc0038I Pass  11: suminf.    1.84567 (5) obj. -84.5105 iterations 0
Cbc0038I Pass  12: suminf.    0.99964 (3) obj. -84.5105 iterations 10
Cbc0038I Pass  13: suminf.    0.95777 (4) obj. -84.5105 iterations 5
Cbc0038I Pass  14: suminf.    1.84969 (5) obj. -84.5105 iterations 10
Cbc0038I Pass  15: suminf.    1.81441 (5) obj. -84.5105 iterations 8
Cbc0038I Pass  16: suminf.    4.09930 (18) obj. -84.5105 iterations 42
Cbc0038I Pass  17: suminf.    2.15920 (10) obj. -84.5105 iterations 28
Cbc0038I Pass  18: suminf.    1.92851 (9) obj. -84.5105 iterations 3
Cbc0038I Pass  19: suminf.    1.95147 (9) obj. -84.5105 iterations 3
Cbc0038I Pass  20: suminf.    1.27315 (4) obj. -84.5105 iterations 34
Cbc0038I Pass  21: suminf.    1.16235 (3) obj. -84.5105 iterations 11
Cbc0038I Pass  22: suminf.    1.39650 (4) obj. -84.5105 iterations 11
Cbc0038I Pass  23: suminf.    1.39144 (4) obj. -84.5105 iterations 1
Cbc0038I Pass  24: suminf.    1.81251 (4) obj. -84.5105 iterations 13
Cbc0038I Pass  25: suminf.    1.81251 (4) obj. -84.5105 iterations 0
Cbc0038I Pass  26: suminf.    1.45917 (4) obj. -84.5105 iterations 8
Cbc0038I Pass  27: suminf.    1.41827 (4) obj. -84.5105 iterations 6
Cbc0038I Pass  28: suminf.    1.41442 (4) obj. -84.5105 iterations 1
Cbc0038I Pass  29: suminf.    1.81251 (4) obj. -84.5105 iterations 12
Cbc0038I Pass  30: suminf.    1.81251 (4) obj. -84.5105 iterations 0
Cbc0038I Pass  31: suminf.    1.45917 (4) obj. -84.5105 iterations 8
Cbc0038I Rounding solution of -77.7849 is better than previous of -77.4034

Cbc0038I Before mini branch and bound, 175 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 158 rows 87 columns
Cbc0038I Mini branch and bound improved solution from -77.7849 to -79.9327 (0.16 seconds)
Cbc0038I Round again with cutoff of -97.3031
Cbc0038I Pass  31: suminf.    3.06522 (10) obj. -97.3031 iterations 8
Cbc0038I Pass  32: suminf.    2.21468 (7) obj. -97.3031 iterations 38
Cbc0038I Pass  33: suminf.    1.75150 (7) obj. -97.3031 iterations 23
Cbc0038I Pass  34: suminf.    2.52532 (7) obj. -97.3031 iterations 25
Cbc0038I Pass  35: suminf.    6.01589 (23) obj. -97.3031 iterations 50
Cbc0038I Pass  36: suminf.    2.36866 (14) obj. -97.3031 iterations 45
Cbc0038I Pass  37: suminf.    2.34119 (12) obj. -97.3031 iterations 6
Cbc0038I Pass  38: suminf.    3.10435 (8) obj. -97.3031 iterations 18
Cbc0038I Pass  39: suminf.    3.08112 (10) obj. -97.3031 iterations 10
Cbc0038I Pass  40: suminf.    3.35610 (12) obj. -97.3031 iterations 13
Cbc0038I Pass  41: suminf.    2.16856 (7) obj. -97.3031 iterations 12
Cbc0038I Pass  42: suminf.    1.84436 (7) obj. -97.3031 iterations 7
Cbc0038I Pass  43: suminf.    1.60366 (6) obj. -97.3031 iterations 4
Cbc0038I Pass  44: suminf.    1.41940 (7) obj. -97.3031 iterations 8
Cbc0038I Pass  45: suminf.    2.31765 (9) obj. -97.3031 iterations 21
Cbc0038I Pass  46: suminf.    2.29953 (7) obj. -97.3031 iterations 6
Cbc0038I Pass  47: suminf.    2.43127 (9) obj. -97.3031 iterations 10
Cbc0038I Pass  48: suminf.    2.40854 (8) obj. -97.3031 iterations 4
Cbc0038I Pass  49: suminf.    2.31998 (8) obj. -97.3031 iterations 15
Cbc0038I Pass  50: suminf.    7.47688 (24) obj. -97.3031 iterations 49
Cbc0038I Pass  51: suminf.    3.64487 (11) obj. -97.3031 iterations 53
Cbc0038I Pass  52: suminf.    2.90507 (11) obj. -97.3031 iterations 13
Cbc0038I Pass  53: suminf.    2.88089 (9) obj. -97.3031 iterations 9
Cbc0038I Pass  54: suminf.    2.33764 (7) obj. -97.3031 iterations 11
Cbc0038I Pass  55: suminf.    1.63809 (5) obj. -97.3031 iterations 10
Cbc0038I Pass  56: suminf.    1.62412 (6) obj. -97.3031 iterations 5
Cbc0038I Pass  57: suminf.    2.19118 (8) obj. -97.3031 iterations 10
Cbc0038I Pass  58: suminf.    1.73735 (7) obj. -97.3031 iterations 1
Cbc0038I Pass  59: suminf.    1.73369 (7) obj. -97.3031 iterations 3
Cbc0038I Pass  60: suminf.    2.91636 (8) obj. -97.3031 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 165 rows 90 columns
Cbc0038I Mini branch and bound improved solution from -79.9327 to -86.7623 (0.24 seconds)
Cbc0038I Round again with cutoff of -112.654
Cbc0038I Pass  60: suminf.    3.80096 (18) obj. -112.654 iterations 16
Cbc0038I Pass  61: suminf.    3.18987 (14) obj. -112.654 iterations 22
Cbc0038I Pass  62: suminf.    4.25263 (12) obj. -112.654 iterations 22
Cbc0038I Pass  63: suminf.    3.53785 (12) obj. -112.654 iterations 13
Cbc0038I Pass  64: suminf.    3.03983 (11) obj. -112.654 iterations 4
Cbc0038I Pass  65: suminf.    3.03983 (11) obj. -112.654 iterations 3
Cbc0038I Pass  66: suminf.    4.27023 (11) obj. -112.654 iterations 18
Cbc0038I Pass  67: suminf.    2.89791 (12) obj. -112.654 iterations 12
Cbc0038I Pass  68: suminf.    3.19731 (11) obj. -112.654 iterations 13
Cbc0038I Pass  69: suminf.    8.41558 (27) obj. -112.654 iterations 43
Cbc0038I Pass  70: suminf.    4.44698 (14) obj. -112.654 iterations 57
Cbc0038I Pass  71: suminf.    3.66034 (12) obj. -112.654 iterations 13
Cbc0038I Pass  72: suminf.    3.58025 (12) obj. -112.654 iterations 11
Cbc0038I Pass  73: suminf.    4.67537 (16) obj. -112.654 iterations 34
Cbc0038I Pass  74: suminf.    3.96610 (15) obj. -112.654 iterations 8
Cbc0038I Pass  75: suminf.    4.99136 (14) obj. -112.654 iterations 16
Cbc0038I Pass  76: suminf.    3.41278 (11) obj. -112.654 iterations 8
Cbc0038I Pass  77: suminf.    3.05790 (9) obj. -112.654 iterations 11
Cbc0038I Pass  78: suminf.    3.50329 (10) obj. -112.654 iterations 14
Cbc0038I Pass  79: suminf.    2.94453 (9) obj. -112.654 iterations 9
Cbc0038I Pass  80: suminf.    3.84528 (11) obj. -112.654 iterations 16
Cbc0038I Pass  81: suminf.    2.80449 (10) obj. -112.654 iterations 22
Cbc0038I Pass  82: suminf.    3.95485 (11) obj. -112.654 iterations 11
Cbc0038I Pass  83: suminf.    3.80229 (10) obj. -112.654 iterations 4
Cbc0038I Pass  84: suminf.    3.75954 (10) obj. -112.654 iterations 9
Cbc0038I Pass  85: suminf.    3.37702 (10) obj. -112.654 iterations 9
Cbc0038I Pass  86: suminf.    3.37702 (10) obj. -112.654 iterations 0
Cbc0038I Pass  87: suminf.    3.71863 (10) obj. -112.654 iterations 11
Cbc0038I Pass  88: suminf.    3.27289 (10) obj. -112.654 iterations 17
Cbc0038I Pass  89: suminf.    3.26562 (12) obj. -112.654 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 149 rows 82 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -86.7623 - took 0.32 seconds
Cbc0012I Integer solution of -86.76229 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 121 rows 67 columns
Cbc0031I 39 added rows had average density of 160.28205
Cbc0013I At root node, 39 cuts changed objective from -148.47336 to -133.40822 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26054 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.467 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2051 row cuts average 257.0 elements, 0 column cuts (0 active)  in 0.441 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.467 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 254.5 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -86.76229 best solution, best possible -133.40822 (4.73 seconds)
Cbc0010I After 8 nodes, 9 on tree, -86.76229 best solution, best possible -133.40822 (5.44 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 60 rows 42 columns
Cbc0010I After 75 nodes, 16 on tree, -86.76229 best solution, best possible -133.40822 (6.16 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 66 rows 41 columns
Cbc0038I Full problem 504 rows 262 columns, reduced to 18 rows 16 columns
Cbc0010I After 209 nodes, 13 on tree, -86.76229 best solution, best possible -133.40822 (6.86 seconds)
Cbc0001I Search completed - best objective -86.76228999999998, took 31631 iterations and 354 nodes (7.36 seconds)
Cbc0032I Strong branching done 3124 times (74868 iterations), fathomed 35 nodes and fixed 161 variables
Cbc0035I Maximum depth 85, 1900 variables fixed on reduced cost
Total time (CPU seconds):       7.20   (Wallclock seconds):       7.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 355 (-172) rows, 373 (-152) columns and 17232 (-18505) elements
Clp1000I sum of infeasibilities 2.89521e-06 - average 8.15551e-09, 229 fixed columns
Coin0506I Presolve 128 (-227) rows, 143 (-230) columns and 526 (-16706) elements
Clp0006I 0  Obj 24.554664 Dual inf 19.738971 (143)
Clp0029I End of values pass after 143 iterations
Clp0014I Perturbing problem by 0.001% of 1.590937 - largest nonzero change 2.5792763e-05 ( 0.0015531604%) - largest zero change 2.9637213e-05
Clp0000I Optimal - objective value 26.637098
Clp0000I Optimal - objective value 26.637098
Coin0511I After Postsolve, objective 26.637098, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 26.637098 Dual inf 297.88155 (117)
Clp0014I Perturbing problem by 0.001% of 1.9988319 - largest nonzero change 2.8834074e-05 ( 0.0027142434%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 191.78463
Clp0000I Optimal - objective value 191.78463
Clp0000I Optimal - objective value 191.78463
Coin0511I After Postsolve, objective 191.78463, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 191.7846314 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 355 rows, 373 columns (373 integer (373 of which binary)) and 17232 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.014%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 118 integers unsatisfied sum - 6.14788
Cbc0038I Pass   1: suminf.    2.77892 (92) obj. -178.301 iterations 48
Cbc0038I Pass   2: suminf.    2.77892 (92) obj. -178.301 iterations 1
Cbc0038I Pass   3: suminf.    1.20681 (68) obj. -100.161 iterations 25
Cbc0038I Pass   4: suminf.    0.60456 (42) obj. -69.904 iterations 26
Cbc0038I Pass   5: suminf.    0.26417 (22) obj. -50.2444 iterations 20
Cbc0038I Pass   6: suminf.    0.04016 (4) obj. -31.4811 iterations 18
Cbc0038I Solution found of -26.5319
Cbc0038I Rounding solution of -32.0486 is better than previous of -26.5319

Cbc0038I Before mini branch and bound, 253 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 68 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -32.0486 to -47.3858 (0.15 seconds)
Cbc0038I Round again with cutoff of -61.8258
Cbc0038I Pass   7: suminf.    2.77892 (92) obj. -178.301 iterations 0
Cbc0038I Pass   8: suminf.    2.77892 (92) obj. -178.301 iterations 1
Cbc0038I Pass   9: suminf.    1.82582 (72) obj. -125.231 iterations 20
Cbc0038I Pass  10: suminf.    0.72776 (47) obj. -75.7608 iterations 34
Cbc0038I Pass  11: suminf.    0.48874 (35) obj. -63.0198 iterations 12
Cbc0038I Pass  12: suminf.    0.71709 (15) obj. -61.8258 iterations 29
Cbc0038I Pass  13: suminf.    0.28764 (14) obj. -62.9506 iterations 6
Cbc0038I Pass  14: suminf.    0.52296 (24) obj. -61.8258 iterations 59
Cbc0038I Pass  15: suminf.    0.34029 (5) obj. -61.8258 iterations 3
Cbc0038I Pass  16: suminf.    0.61719 (3) obj. -61.8258 iterations 11
Cbc0038I Pass  17: suminf.    0.47375 (8) obj. -61.8258 iterations 9
Cbc0038I Pass  18: suminf.    0.83971 (3) obj. -61.8258 iterations 13
Cbc0038I Pass  19: suminf.    0.63909 (5) obj. -61.8258 iterations 6
Cbc0038I Pass  20: suminf.    1.13190 (5) obj. -61.8258 iterations 10
Cbc0038I Pass  21: suminf.    1.13190 (5) obj. -61.8258 iterations 0
Cbc0038I Pass  22: suminf.    1.00436 (6) obj. -61.8258 iterations 17
Cbc0038I Pass  23: suminf.    1.00436 (6) obj. -61.8258 iterations 0
Cbc0038I Pass  24: suminf.    1.13190 (5) obj. -61.8258 iterations 12
Cbc0038I Pass  25: suminf.    0.98979 (19) obj. -61.8258 iterations 62
Cbc0038I Pass  26: suminf.    0.98979 (19) obj. -61.8258 iterations 14
Cbc0038I Pass  27: suminf.    0.98735 (5) obj. -61.8258 iterations 21
Cbc0038I Pass  28: suminf.    0.54760 (5) obj. -61.8258 iterations 2
Cbc0038I Pass  29: suminf.    1.01971 (5) obj. -61.8258 iterations 7
Cbc0038I Pass  30: suminf.    0.40040 (4) obj. -64.0536 iterations 3
Cbc0038I Pass  31: suminf.    0.17531 (3) obj. -61.8258 iterations 8
Cbc0038I Pass  32: suminf.    0.96336 (4) obj. -61.8258 iterations 8
Cbc0038I Pass  33: suminf.    2.15249 (23) obj. -61.8258 iterations 54
Cbc0038I Pass  34: suminf.    0.78252 (18) obj. -62.0219 iterations 11
Cbc0038I Pass  35: suminf.    0.77154 (6) obj. -61.8258 iterations 37
Cbc0038I Pass  36: suminf.    0.73598 (6) obj. -61.8258 iterations 7
Cbc0038I Rounding solution of -50.6269 is better than previous of -47.3858

Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 116 rows 125 columns
Cbc0038I Mini branch and bound improved solution from -50.6269 to -74.4079 (0.31 seconds)
Cbc0038I Round again with cutoff of -97.8833
Cbc0038I Pass  36: suminf.    2.77892 (92) obj. -178.301 iterations 0
Cbc0038I Pass  37: suminf.    2.77892 (92) obj. -178.301 iterations 1
Cbc0038I Pass  38: suminf.    1.17388 (67) obj. -98.2264 iterations 29
Cbc0038I Pass  39: suminf.    1.50932 (42) obj. -97.8833 iterations 49
Cbc0038I Pass  40: suminf.    0.98128 (41) obj. -98.6855 iterations 6
Cbc0038I Pass  41: suminf.    1.82663 (50) obj. -97.8833 iterations 46
Cbc0038I Pass  42: suminf.    1.45718 (32) obj. -97.8833 iterations 6
Cbc0038I Pass  43: suminf.    1.65793 (24) obj. -97.8833 iterations 22
Cbc0038I Pass  44: suminf.    1.00605 (24) obj. -97.8833 iterations 8
Cbc0038I Pass  45: suminf.    2.14892 (32) obj. -97.8833 iterations 40
Cbc0038I Pass  46: suminf.    2.14892 (32) obj. -97.8833 iterations 0
Cbc0038I Pass  47: suminf.    2.36264 (28) obj. -97.8833 iterations 14
Cbc0038I Pass  48: suminf.    2.24278 (28) obj. -97.8833 iterations 4
Cbc0038I Pass  49: suminf.    2.51980 (19) obj. -97.8833 iterations 44
Cbc0038I Pass  50: suminf.    2.01708 (19) obj. -97.8833 iterations 10
Cbc0038I Pass  51: suminf.    2.41762 (19) obj. -97.8833 iterations 10
Cbc0038I Pass  52: suminf.    2.41762 (19) obj. -97.8833 iterations 6
Cbc0038I Pass  53: suminf.    2.51980 (19) obj. -97.8833 iterations 10
Cbc0038I Pass  54: suminf.    3.30102 (34) obj. -97.8833 iterations 37
Cbc0038I Pass  55: suminf.    2.85045 (32) obj. -97.8833 iterations 8
Cbc0038I Pass  56: suminf.    2.21358 (30) obj. -97.8833 iterations 2
Cbc0038I Pass  57: suminf.    2.14150 (28) obj. -97.8833 iterations 11
Cbc0038I Pass  58: suminf.    2.14150 (28) obj. -97.8833 iterations 0
Cbc0038I Pass  59: suminf.    2.28817 (25) obj. -97.8833 iterations 15
Cbc0038I Pass  60: suminf.    2.28817 (25) obj. -97.8833 iterations 5
Cbc0038I Pass  61: suminf.    2.38832 (21) obj. -97.8833 iterations 21
Cbc0038I Pass  62: suminf.    2.00085 (23) obj. -97.8833 iterations 6
Cbc0038I Pass  63: suminf.    2.38832 (21) obj. -97.8833 iterations 12
Cbc0038I Pass  64: suminf.    2.15004 (35) obj. -97.8833 iterations 48
Cbc0038I Pass  65: suminf.    1.89440 (37) obj. -97.8833 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 113 rows 119 columns
Cbc0038I Mini branch and bound improved solution from -74.4079 to -82.07 (0.41 seconds)
Cbc0038I Round again with cutoff of -126.054
Cbc0038I Pass  65: suminf.    2.77892 (92) obj. -178.301 iterations 0
Cbc0038I Pass  66: suminf.    2.77892 (92) obj. -178.301 iterations 1
Cbc0038I Pass  67: suminf.    1.93413 (72) obj. -126.054 iterations 25
Cbc0038I Pass  68: suminf.    1.78479 (50) obj. -126.054 iterations 58
Cbc0038I Pass  69: suminf.    1.28232 (50) obj. -126.054 iterations 4
Cbc0038I Pass  70: suminf.    3.72840 (53) obj. -126.054 iterations 34
Cbc0038I Pass  71: suminf.    3.09579 (54) obj. -126.054 iterations 2
Cbc0038I Pass  72: suminf.    2.83271 (57) obj. -126.054 iterations 3
Cbc0038I Pass  73: suminf.    3.39272 (54) obj. -126.054 iterations 25
Cbc0038I Pass  74: suminf.    2.76293 (52) obj. -126.054 iterations 13
Cbc0038I Pass  75: suminf.    3.25530 (50) obj. -126.054 iterations 7
Cbc0038I Pass  76: suminf.    2.85379 (50) obj. -126.054 iterations 6
Cbc0038I Pass  77: suminf.    2.88688 (49) obj. -126.054 iterations 6
Cbc0038I Pass  78: suminf.    2.85514 (49) obj. -126.054 iterations 4
Cbc0038I Pass  79: suminf.    2.81764 (47) obj. -126.054 iterations 31
Cbc0038I Pass  80: suminf.    2.81764 (47) obj. -126.054 iterations 4
Cbc0038I Pass  81: suminf.    2.82607 (45) obj. -126.054 iterations 13
Cbc0038I Pass  82: suminf.    2.82607 (45) obj. -126.054 iterations 3
Cbc0038I Pass  83: suminf.    2.85463 (45) obj. -126.054 iterations 22
Cbc0038I Pass  84: suminf.    2.85463 (45) obj. -126.054 iterations 3
Cbc0038I Pass  85: suminf.    3.17425 (45) obj. -126.054 iterations 8
Cbc0038I Pass  86: suminf.    3.17425 (45) obj. -126.054 iterations 5
Cbc0038I Pass  87: suminf.    2.85463 (45) obj. -126.054 iterations 12
Cbc0038I Pass  88: suminf.    3.36935 (47) obj. -126.054 iterations 37
Cbc0038I Pass  89: suminf.    3.36935 (47) obj. -126.054 iterations 10
Cbc0038I Pass  90: suminf.    3.29779 (45) obj. -126.054 iterations 13
Cbc0038I Pass  91: suminf.    2.85911 (45) obj. -126.054 iterations 9
Cbc0038I Pass  92: suminf.    2.97262 (45) obj. -126.054 iterations 24
Cbc0038I Pass  93: suminf.    2.97262 (45) obj. -126.054 iterations 3
Cbc0038I Pass  94: suminf.    2.98500 (45) obj. -126.054 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 355 rows 373 columns, reduced to 103 rows 106 columns
Cbc0038I Mini branch and bound did not improve solution (0.49 seconds)
Cbc0038I After 0.49 seconds - Feasibility pump exiting with objective of -82.07 - took 0.38 seconds
Cbc0012I Integer solution of -82.07001 found by feasibility pump after 0 iterations and 0 nodes (0.49 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 26 rows 27 columns
Cbc0031I 137 added rows had average density of 97.313869
Cbc0013I At root node, 137 cuts changed objective from -191.78463 to -108.25129 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20451 row cuts average 2.0 elements, 0 column cuts (76 active)  in 0.453 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3230 row cuts average 353.9 elements, 0 column cuts (0 active)  in 1.183 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 594 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4781 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.477 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3188 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.891 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 410 row cuts average 208.0 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 230 row cuts average 40.6 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -82.07001 best solution, best possible -108.25129 (7.26 seconds)
Cbc0010I After 4 nodes, 3 on tree, -82.07001 best solution, best possible -108.25102 (8.11 seconds)
Cbc0010I After 15 nodes, 11 on tree, -82.07001 best solution, best possible -108.25102 (8.83 seconds)
Cbc0010I After 31 nodes, 18 on tree, -82.07001 best solution, best possible -108.25102 (9.54 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 32 rows 38 columns
Cbc0012I Integer solution of -86.76229 found by RINS after 15581 iterations and 42 nodes (9.90 seconds)
Cbc0010I After 61 nodes, 17 on tree, -86.76229 best solution, best possible -108.25102 (10.34 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 75 rows 87 columns
Cbc0010I After 91 nodes, 21 on tree, -86.76229 best solution, best possible -108.25102 (11.51 seconds)
Cbc0010I After 162 nodes, 18 on tree, -86.76229 best solution, best possible -108.25102 (12.23 seconds)
Cbc0010I After 224 nodes, 13 on tree, -86.76229 best solution, best possible -108.25102 (12.94 seconds)
Cbc0010I After 284 nodes, 5 on tree, -86.76229 best solution, best possible -108.25102 (13.68 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 11 rows 15 columns
Cbc0010I After 318 nodes, 6 on tree, -86.76229 best solution, best possible -108.25102 (14.39 seconds)
Cbc0010I After 404 nodes, 2 on tree, -86.76229 best solution, best possible -108.25102 (15.09 seconds)
Cbc0010I After 427 nodes, 2 on tree, -86.76229 best solution, best possible -107.88766 (16.15 seconds)
Cbc0010I After 429 nodes, 4 on tree, -86.76229 best solution, best possible -107.88766 (16.90 seconds)
Cbc0010I After 434 nodes, 8 on tree, -86.76229 best solution, best possible -107.88766 (17.64 seconds)
Cbc0010I After 476 nodes, 13 on tree, -86.76229 best solution, best possible -107.88766 (18.38 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 37 rows 48 columns
Cbc0010I After 519 nodes, 9 on tree, -86.76229 best solution, best possible -107.88766 (19.18 seconds)
Cbc0010I After 528 nodes, 13 on tree, -86.76229 best solution, best possible -107.88766 (19.90 seconds)
Cbc0010I After 579 nodes, 10 on tree, -86.76229 best solution, best possible -107.88766 (20.61 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 127 rows 137 columns
Cbc0010I After 600 nodes, 12 on tree, -86.76229 best solution, best possible -107.88766 (21.59 seconds)
Cbc0010I After 641 nodes, 14 on tree, -86.76229 best solution, best possible -107.88766 (22.33 seconds)
Cbc0010I After 678 nodes, 14 on tree, -86.76229 best solution, best possible -107.88766 (23.04 seconds)
Cbc0010I After 733 nodes, 7 on tree, -86.76229 best solution, best possible -107.88766 (23.77 seconds)
Cbc0010I After 744 nodes, 5 on tree, -86.76229 best solution, best possible -107.88766 (24.56 seconds)
Cbc0010I After 762 nodes, 5 on tree, -86.76229 best solution, best possible -107.88766 (25.27 seconds)
Cbc0010I After 780 nodes, 3 on tree, -86.76229 best solution, best possible -107.88766 (25.99 seconds)
Cbc0038I Full problem 355 rows 373 columns, reduced to 21 rows 31 columns
Cbc0010I After 803 nodes, 4 on tree, -86.76229 best solution, best possible -107.88766 (26.70 seconds)
Cbc0010I After 843 nodes, 12 on tree, -86.76229 best solution, best possible -107.88766 (27.40 seconds)
Cbc0010I After 915 nodes, 7 on tree, -86.76229 best solution, best possible -107.88766 (28.10 seconds)
Cbc0001I Search completed - best objective -86.76228999999998, took 61551 iterations and 950 nodes (28.33 seconds)
Cbc0032I Strong branching done 3062 times (51314 iterations), fathomed 32 nodes and fixed 73 variables
Cbc0035I Maximum depth 27, 4522 variables fixed on reduced cost
Total time (CPU seconds):       27.23   (Wallclock seconds):       28.42

