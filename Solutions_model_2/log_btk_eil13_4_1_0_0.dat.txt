Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 58 (-17) elements
Clp1000I sum of infeasibilities 3.67257e-08 - average 1.83628e-09, 2 fixed columns
Coin0506I Presolve 16 (-4) rows, 11 (-2) columns and 46 (-12) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 597.58071
Clp0000I Optimal - objective value 597.58071
Coin0511I After Postsolve, objective 597.58071, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 597.58071
Clp0000I Optimal - objective value 597.58071
Clp0000I Optimal - objective value 597.58071
Coin0511I After Postsolve, objective 597.58071, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 597.5807105 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.262%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.29808
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -479.003 iterations 7
Cbc0038I Solution found of -479.003
Cbc0038I Relaxing continuous gives -479.003
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -479.003 to -502.094 (0.01 seconds)
Cbc0038I Round again with cutoff of -509.673
Cbc0038I Pass   2: suminf.    0.18220 (2) obj. -509.673 iterations 2
Cbc0038I Pass   3: suminf.    0.42105 (1) obj. -546.265 iterations 2
Cbc0038I Pass   4: suminf.    0.83721 (2) obj. -528.83 iterations 4
Cbc0038I Pass   5: suminf.    0.25000 (1) obj. -535.563 iterations 3
Cbc0038I Pass   6: suminf.    0.10365 (1) obj. -509.673 iterations 1
Cbc0038I Pass   7: suminf.    0.34483 (2) obj. -517.76 iterations 4
Cbc0038I Pass   8: suminf.    0.26316 (1) obj. -511.993 iterations 2
Cbc0038I Pass   9: suminf.    0.43148 (2) obj. -509.673 iterations 5
Cbc0038I Pass  10: suminf.    0.39606 (2) obj. -509.673 iterations 2
Cbc0038I Pass  11: suminf.    1.30392 (4) obj. -509.673 iterations 5
Cbc0038I Pass  12: suminf.    0.43547 (1) obj. -509.673 iterations 2
Cbc0038I Pass  13: suminf.    0.38889 (1) obj. -511.014 iterations 3
Cbc0038I Pass  14: suminf.    0.39644 (1) obj. -509.673 iterations 1
Cbc0038I Pass  15: suminf.    1.30392 (4) obj. -509.673 iterations 2
Cbc0038I Pass  16: suminf.    0.22715 (3) obj. -509.673 iterations 6
Cbc0038I Pass  17: suminf.    0.17647 (1) obj. -509.673 iterations 2
Cbc0038I Pass  18: suminf.    0.19611 (1) obj. -509.673 iterations 3
Cbc0038I Pass  19: suminf.    0.55127 (2) obj. -509.673 iterations 5
Cbc0038I Pass  20: suminf.    0.54678 (2) obj. -536.238 iterations 5
Cbc0038I Pass  21: suminf.    0.38889 (1) obj. -511.014 iterations 1
Cbc0038I Pass  22: suminf.    0.39644 (1) obj. -509.673 iterations 1
Cbc0038I Pass  23: suminf.    0.58859 (3) obj. -509.673 iterations 4
Cbc0038I Pass  24: suminf.    0.39606 (2) obj. -509.673 iterations 2
Cbc0038I Pass  25: suminf.    1.30392 (4) obj. -509.673 iterations 5
Cbc0038I Pass  26: suminf.    0.43547 (1) obj. -509.673 iterations 2
Cbc0038I Pass  27: suminf.    0.38889 (1) obj. -511.014 iterations 3
Cbc0038I Pass  28: suminf.    0.39644 (1) obj. -509.673 iterations 1
Cbc0038I Pass  29: suminf.    0.43750 (2) obj. -535.634 iterations 8
Cbc0038I Pass  30: suminf.    0.38889 (1) obj. -515.267 iterations 2
Cbc0038I Pass  31: suminf.    0.42037 (1) obj. -509.673 iterations 2
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -523.314
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27738 (1) obj. -523.314 iterations 1
Cbc0038I Pass  32: suminf.    0.42105 (1) obj. -546.265 iterations 1
Cbc0038I Pass  33: suminf.    0.86197 (3) obj. -523.314 iterations 6
Cbc0038I Pass  34: suminf.    0.86197 (3) obj. -523.314 iterations 1
Cbc0038I Pass  35: suminf.    0.46588 (2) obj. -523.314 iterations 6
Cbc0038I Pass  36: suminf.    0.40422 (2) obj. -523.314 iterations 3
Cbc0038I Pass  37: suminf.    1.10175 (3) obj. -523.314 iterations 4
Cbc0038I Pass  38: suminf.    0.52018 (2) obj. -523.314 iterations 1
Cbc0038I Pass  39: suminf.    0.17647 (1) obj. -537.098 iterations 4
Cbc0038I Pass  40: suminf.    0.17647 (1) obj. -537.098 iterations 0
Cbc0038I Pass  41: suminf.    0.39277 (2) obj. -523.314 iterations 2
Cbc0038I Pass  42: suminf.    0.17647 (1) obj. -530.389 iterations 4
Cbc0038I Pass  43: suminf.    0.17647 (1) obj. -530.389 iterations 0
Cbc0038I Pass  44: suminf.    1.10220 (3) obj. -523.314 iterations 3
Cbc0038I Pass  45: suminf.    1.10175 (3) obj. -523.314 iterations 9
Cbc0038I Pass  46: suminf.    0.52018 (2) obj. -523.314 iterations 1
Cbc0038I Pass  47: suminf.    0.17647 (1) obj. -537.098 iterations 4
Cbc0038I Pass  48: suminf.    0.17647 (1) obj. -537.098 iterations 0
Cbc0038I Pass  49: suminf.    0.39277 (2) obj. -523.314 iterations 2
Cbc0038I Pass  50: suminf.    1.10220 (3) obj. -523.314 iterations 5
Cbc0038I Pass  51: suminf.    1.10175 (3) obj. -523.314 iterations 9
Cbc0038I Pass  52: suminf.    0.52018 (2) obj. -523.314 iterations 1
Cbc0038I Pass  53: suminf.    0.17647 (1) obj. -537.098 iterations 4
Cbc0038I Pass  54: suminf.    0.17647 (1) obj. -537.098 iterations 0
Cbc0038I Pass  55: suminf.    0.39277 (2) obj. -523.314 iterations 2
Cbc0038I Pass  56: suminf.    0.77990 (3) obj. -523.314 iterations 5
Cbc0038I Pass  57: suminf.    0.58861 (2) obj. -523.314 iterations 1
Cbc0038I Pass  58: suminf.    0.28012 (2) obj. -523.314 iterations 2
Cbc0038I Pass  59: suminf.    1.10175 (3) obj. -523.314 iterations 5
Cbc0038I Pass  60: suminf.    0.52018 (2) obj. -523.314 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -502.094 to -518.708 (0.01 seconds)
Cbc0038I Round again with cutoff of -539.682
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.37984 (1) obj. -539.682 iterations 0
Cbc0038I Pass  61: suminf.    0.42105 (1) obj. -546.265 iterations 1
Cbc0038I Pass  62: suminf.    0.44415 (2) obj. -539.682 iterations 4
Cbc0038I Pass  63: suminf.    0.44415 (2) obj. -539.682 iterations 0
Cbc0038I Pass  64: suminf.    0.70170 (2) obj. -539.682 iterations 3
Cbc0038I Pass  65: suminf.    0.30909 (1) obj. -539.682 iterations 3
Cbc0038I Pass  66: suminf.    0.30909 (1) obj. -539.682 iterations 0
Cbc0038I Pass  67: suminf.    0.64255 (3) obj. -539.682 iterations 3
Cbc0038I Pass  68: suminf.    0.34817 (2) obj. -539.682 iterations 2
Cbc0038I Pass  69: suminf.    0.41670 (3) obj. -539.682 iterations 1
Cbc0038I Pass  70: suminf.    0.34817 (2) obj. -539.682 iterations 1
Cbc0038I Pass  71: suminf.    2.05552 (5) obj. -539.682 iterations 6
Cbc0038I Pass  72: suminf.    1.05220 (3) obj. -539.682 iterations 8
Cbc0038I Pass  73: suminf.    0.24798 (3) obj. -539.682 iterations 5
Cbc0038I Pass  74: suminf.    0.71000 (3) obj. -539.682 iterations 6
Cbc0038I Pass  75: suminf.    0.42105 (1) obj. -546.265 iterations 4
Cbc0038I Pass  76: suminf.    0.37984 (1) obj. -539.682 iterations 2
Cbc0038I Pass  77: suminf.    2.31620 (7) obj. -539.682 iterations 11
Cbc0038I Pass  78: suminf.    0.91637 (5) obj. -539.682 iterations 6
Cbc0038I Pass  79: suminf.    0.80943 (3) obj. -539.682 iterations 2
Cbc0038I Pass  80: suminf.    0.55108 (3) obj. -539.682 iterations 4
Cbc0038I Pass  81: suminf.    0.47631 (2) obj. -539.682 iterations 1
Cbc0038I Pass  82: suminf.    0.33929 (2) obj. -539.682 iterations 3
Cbc0038I Pass  83: suminf.    1.54317 (4) obj. -539.682 iterations 14
Cbc0038I Pass  84: suminf.    0.44415 (2) obj. -539.682 iterations 4
Cbc0038I Pass  85: suminf.    0.44415 (2) obj. -539.682 iterations 0
Cbc0038I Pass  86: suminf.    0.70170 (2) obj. -539.682 iterations 4
Cbc0038I Pass  87: suminf.    0.42105 (1) obj. -546.265 iterations 3
Cbc0038I Pass  88: suminf.    0.37984 (1) obj. -539.682 iterations 2
Cbc0038I Pass  89: suminf.    0.43572 (2) obj. -539.682 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -518.708 - took 0.02 seconds
Cbc0012I Integer solution of -518.7077 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 13 rows 9 columns
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 20 cuts changed objective from -577.87667 to -518.14924 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -518.7077, took 71 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-10) rows, 22 (-4) columns and 107 (-46) elements
Clp1000I sum of infeasibilities 0 - average 0, 6 fixed columns
Coin0506I Presolve 13 (-5) rows, 16 (-6) columns and 71 (-36) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.8428473 - largest nonzero change 0 ( 0%) - largest zero change 1.4085211e-05
Clp0000I Optimal - objective value 595.95164
Clp0000I Optimal - objective value 595.95164
Coin0511I After Postsolve, objective 595.95164, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7213992 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 603.75726
Clp0000I Optimal - objective value 603.75726
Clp0000I Optimal - objective value 603.75726
Coin0511I After Postsolve, objective 603.75726, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 603.7572648 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 22 columns (22 integer (22 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.19912
Cbc0038I Pass   1: suminf.    0.41793 (3) obj. -501.817 iterations 2
Cbc0038I Solution found of -479.003
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -488
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.41793 (3) obj. -501.817 iterations 0
Cbc0038I Pass   3: suminf.    0.05632 (1) obj. -488 iterations 4
Cbc0038I Pass   4: suminf.    0.42105 (1) obj. -546.265 iterations 1
Cbc0038I Pass   5: suminf.    0.14557 (4) obj. -488 iterations 4
Cbc0038I Pass   6: suminf.    0.07510 (1) obj. -488 iterations 1
Cbc0038I Pass   7: suminf.    0.42105 (1) obj. -543.265 iterations 1
Cbc0038I Pass   8: suminf.    0.42105 (1) obj. -535.265 iterations 3
Cbc0038I Pass   9: suminf.    0.12518 (1) obj. -488 iterations 1
Cbc0038I Pass  10: suminf.    0.42105 (1) obj. -535.265 iterations 1
Cbc0038I Pass  11: suminf.    0.42105 (1) obj. -535.265 iterations 0
Cbc0038I Pass  12: suminf.    0.27064 (5) obj. -488 iterations 5
Cbc0038I Pass  13: suminf.    0.24191 (2) obj. -488 iterations 1
Cbc0038I Pass  14: suminf.    0.42105 (1) obj. -534.265 iterations 2
Cbc0038I Pass  15: suminf.    0.13144 (1) obj. -488 iterations 1
Cbc0038I Pass  16: suminf.    0.86009 (4) obj. -488 iterations 6
Cbc0038I Pass  17: suminf.    0.56944 (3) obj. -524.119 iterations 3
Cbc0038I Pass  18: suminf.    0.40859 (1) obj. -488 iterations 3
Cbc0038I Pass  19: suminf.    0.27778 (1) obj. -511.244 iterations 1
Cbc0038I Pass  20: suminf.    0.61616 (2) obj. -521.168 iterations 1
Cbc0038I Pass  21: suminf.    0.61616 (2) obj. -521.168 iterations 0
Cbc0038I Pass  22: suminf.    0.43607 (3) obj. -488 iterations 4
Cbc0038I Pass  23: suminf.    0.33232 (2) obj. -488 iterations 1
Cbc0038I Pass  24: suminf.    0.42105 (1) obj. -518.265 iterations 3
Cbc0038I Pass  25: suminf.    0.21979 (2) obj. -488 iterations 2
Cbc0038I Pass  26: suminf.    0.42105 (1) obj. -518.265 iterations 2
Cbc0038I Pass  27: suminf.    0.22222 (1) obj. -534.666 iterations 6
Cbc0038I Pass  28: suminf.    0.22222 (1) obj. -534.666 iterations 0
Cbc0038I Pass  29: suminf.    0.48486 (1) obj. -488 iterations 1
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -494.537 iterations 5
Cbc0038I Solution found of -494.537
Cbc0038I Rounding solution of -502.537 is better than previous of -494.537

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -515.825
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.52446 (4) obj. -515.825 iterations 1
Cbc0038I Pass  32: suminf.    0.42105 (1) obj. -546.265 iterations 4
Cbc0038I Pass  33: suminf.    0.23050 (1) obj. -515.825 iterations 1
Cbc0038I Pass  34: suminf.    0.22222 (1) obj. -534.81 iterations 8
Cbc0038I Pass  35: suminf.    0.22222 (1) obj. -534.81 iterations 2
Cbc0038I Pass  36: suminf.    0.32907 (1) obj. -515.825 iterations 1
Cbc0038I Pass  37: suminf.    1.78629 (7) obj. -515.825 iterations 7
Cbc0038I Pass  38: suminf.    1.25055 (4) obj. -515.825 iterations 2
Cbc0038I Pass  39: suminf.    0.49194 (2) obj. -515.825 iterations 5
Cbc0038I Pass  40: suminf.    0.51452 (2) obj. -515.825 iterations 2
Cbc0038I Pass  41: suminf.    0.38384 (2) obj. -533.386 iterations 2
Cbc0038I Pass  42: suminf.    0.25028 (1) obj. -515.825 iterations 2
Cbc0038I Pass  43: suminf.    0.22222 (1) obj. -520.81 iterations 1
Cbc0038I Pass  44: suminf.    1.00372 (7) obj. -515.825 iterations 8
Cbc0038I Pass  45: suminf.    0.39665 (2) obj. -515.825 iterations 3
Cbc0038I Pass  46: suminf.    0.33333 (2) obj. -526.477 iterations 2
Cbc0038I Pass  47: suminf.    0.26716 (1) obj. -515.825 iterations 2
Cbc0038I Pass  48: suminf.    0.22222 (1) obj. -523.81 iterations 1
Cbc0038I Pass  49: suminf.    0.90489 (4) obj. -531.075 iterations 6
Cbc0038I Pass  50: suminf.    0.90489 (4) obj. -531.075 iterations 0
Cbc0038I Pass  51: suminf.    0.35570 (1) obj. -515.825 iterations 5
Cbc0038I Pass  52: suminf.    0.42105 (1) obj. -526.265 iterations 1
Cbc0038I Pass  53: suminf.    0.41796 (2) obj. -515.825 iterations 3
Cbc0038I Pass  54: suminf.    0.34318 (1) obj. -515.825 iterations 2
Cbc0038I Pass  55: suminf.    0.34318 (1) obj. -515.825 iterations 0
Cbc0038I Pass  56: suminf.    0.42105 (1) obj. -528.265 iterations 1
Cbc0038I Pass  57: suminf.    0.61293 (3) obj. -515.825 iterations 5
Cbc0038I Pass  58: suminf.    0.54365 (4) obj. -515.825 iterations 1
Cbc0038I Pass  59: suminf.    0.31213 (2) obj. -515.825 iterations 6
Cbc0038I Pass  60: suminf.    0.22222 (1) obj. -516.81 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 9 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -502.537 - took 0.01 seconds
Cbc0012I Integer solution of -502.5371 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 16 rows 22 columns, reduced to 5 rows 7 columns
Cbc0012I Integer solution of -518.7077 found by DiveCoefficient after 77 iterations and 0 nodes (0.13 seconds)
Cbc0031I 9 added rows had average density of 7.2222222
Cbc0013I At root node, 9 cuts changed objective from -568.9755 to -518.7077 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 3.4 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 74 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0001I Search completed - best objective -518.7077, took 77 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 58 (-17) elements
Clp1000I sum of infeasibilities 3.67257e-08 - average 1.83628e-09, 2 fixed columns
Coin0506I Presolve 16 (-4) rows, 11 (-2) columns and 46 (-12) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 597.58071
Clp0000I Optimal - objective value 597.58071
Coin0511I After Postsolve, objective 597.58071, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 597.58071
Clp0000I Optimal - objective value 597.58071
Clp0000I Optimal - objective value 597.58071
Coin0511I After Postsolve, objective 597.58071, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 597.5807105 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 56 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.262%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.29808
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -479.003 iterations 7
Cbc0038I Solution found of -479.003
Cbc0038I Relaxing continuous gives -479.003
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -479.003 to -502.094 (0.01 seconds)
Cbc0038I Round again with cutoff of -509.673
Cbc0038I Pass   2: suminf.    0.18220 (2) obj. -509.673 iterations 2
Cbc0038I Pass   3: suminf.    0.42105 (1) obj. -546.265 iterations 2
Cbc0038I Pass   4: suminf.    0.83721 (2) obj. -528.83 iterations 4
Cbc0038I Pass   5: suminf.    0.25000 (1) obj. -535.563 iterations 3
Cbc0038I Pass   6: suminf.    0.10365 (1) obj. -509.673 iterations 1
Cbc0038I Pass   7: suminf.    0.34483 (2) obj. -517.76 iterations 4
Cbc0038I Pass   8: suminf.    0.26316 (1) obj. -511.993 iterations 2
Cbc0038I Pass   9: suminf.    0.43148 (2) obj. -509.673 iterations 5
Cbc0038I Pass  10: suminf.    0.39606 (2) obj. -509.673 iterations 2
Cbc0038I Pass  11: suminf.    1.30392 (4) obj. -509.673 iterations 5
Cbc0038I Pass  12: suminf.    0.43547 (1) obj. -509.673 iterations 2
Cbc0038I Pass  13: suminf.    0.38889 (1) obj. -511.014 iterations 3
Cbc0038I Pass  14: suminf.    0.39644 (1) obj. -509.673 iterations 1
Cbc0038I Pass  15: suminf.    1.30392 (4) obj. -509.673 iterations 2
Cbc0038I Pass  16: suminf.    0.22715 (3) obj. -509.673 iterations 6
Cbc0038I Pass  17: suminf.    0.17647 (1) obj. -509.673 iterations 2
Cbc0038I Pass  18: suminf.    0.19611 (1) obj. -509.673 iterations 3
Cbc0038I Pass  19: suminf.    0.55127 (2) obj. -509.673 iterations 5
Cbc0038I Pass  20: suminf.    0.54678 (2) obj. -536.238 iterations 5
Cbc0038I Pass  21: suminf.    0.38889 (1) obj. -511.014 iterations 1
Cbc0038I Pass  22: suminf.    0.39644 (1) obj. -509.673 iterations 1
Cbc0038I Pass  23: suminf.    0.58859 (3) obj. -509.673 iterations 4
Cbc0038I Pass  24: suminf.    0.39606 (2) obj. -509.673 iterations 2
Cbc0038I Pass  25: suminf.    1.30392 (4) obj. -509.673 iterations 5
Cbc0038I Pass  26: suminf.    0.43547 (1) obj. -509.673 iterations 2
Cbc0038I Pass  27: suminf.    0.38889 (1) obj. -511.014 iterations 3
Cbc0038I Pass  28: suminf.    0.39644 (1) obj. -509.673 iterations 1
Cbc0038I Pass  29: suminf.    0.43750 (2) obj. -535.634 iterations 8
Cbc0038I Pass  30: suminf.    0.38889 (1) obj. -515.267 iterations 2
Cbc0038I Pass  31: suminf.    0.42037 (1) obj. -509.673 iterations 2
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -523.314
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27738 (1) obj. -523.314 iterations 1
Cbc0038I Pass  32: suminf.    0.42105 (1) obj. -546.265 iterations 1
Cbc0038I Pass  33: suminf.    0.86197 (3) obj. -523.314 iterations 6
Cbc0038I Pass  34: suminf.    0.86197 (3) obj. -523.314 iterations 1
Cbc0038I Pass  35: suminf.    0.46588 (2) obj. -523.314 iterations 6
Cbc0038I Pass  36: suminf.    0.40422 (2) obj. -523.314 iterations 3
Cbc0038I Pass  37: suminf.    1.10175 (3) obj. -523.314 iterations 4
Cbc0038I Pass  38: suminf.    0.52018 (2) obj. -523.314 iterations 1
Cbc0038I Pass  39: suminf.    0.17647 (1) obj. -537.098 iterations 4
Cbc0038I Pass  40: suminf.    0.17647 (1) obj. -537.098 iterations 0
Cbc0038I Pass  41: suminf.    0.39277 (2) obj. -523.314 iterations 2
Cbc0038I Pass  42: suminf.    0.17647 (1) obj. -530.389 iterations 4
Cbc0038I Pass  43: suminf.    0.17647 (1) obj. -530.389 iterations 0
Cbc0038I Pass  44: suminf.    1.10220 (3) obj. -523.314 iterations 3
Cbc0038I Pass  45: suminf.    1.10175 (3) obj. -523.314 iterations 9
Cbc0038I Pass  46: suminf.    0.52018 (2) obj. -523.314 iterations 1
Cbc0038I Pass  47: suminf.    0.17647 (1) obj. -537.098 iterations 4
Cbc0038I Pass  48: suminf.    0.17647 (1) obj. -537.098 iterations 0
Cbc0038I Pass  49: suminf.    0.39277 (2) obj. -523.314 iterations 2
Cbc0038I Pass  50: suminf.    1.10220 (3) obj. -523.314 iterations 5
Cbc0038I Pass  51: suminf.    1.10175 (3) obj. -523.314 iterations 9
Cbc0038I Pass  52: suminf.    0.52018 (2) obj. -523.314 iterations 1
Cbc0038I Pass  53: suminf.    0.17647 (1) obj. -537.098 iterations 4
Cbc0038I Pass  54: suminf.    0.17647 (1) obj. -537.098 iterations 0
Cbc0038I Pass  55: suminf.    0.39277 (2) obj. -523.314 iterations 2
Cbc0038I Pass  56: suminf.    0.77990 (3) obj. -523.314 iterations 5
Cbc0038I Pass  57: suminf.    0.58861 (2) obj. -523.314 iterations 1
Cbc0038I Pass  58: suminf.    0.28012 (2) obj. -523.314 iterations 2
Cbc0038I Pass  59: suminf.    1.10175 (3) obj. -523.314 iterations 5
Cbc0038I Pass  60: suminf.    0.52018 (2) obj. -523.314 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -502.094 to -518.708 (0.01 seconds)
Cbc0038I Round again with cutoff of -539.682
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.37984 (1) obj. -539.682 iterations 0
Cbc0038I Pass  61: suminf.    0.42105 (1) obj. -546.265 iterations 1
Cbc0038I Pass  62: suminf.    0.44415 (2) obj. -539.682 iterations 4
Cbc0038I Pass  63: suminf.    0.44415 (2) obj. -539.682 iterations 0
Cbc0038I Pass  64: suminf.    0.70170 (2) obj. -539.682 iterations 3
Cbc0038I Pass  65: suminf.    0.30909 (1) obj. -539.682 iterations 3
Cbc0038I Pass  66: suminf.    0.30909 (1) obj. -539.682 iterations 0
Cbc0038I Pass  67: suminf.    0.64255 (3) obj. -539.682 iterations 3
Cbc0038I Pass  68: suminf.    0.34817 (2) obj. -539.682 iterations 2
Cbc0038I Pass  69: suminf.    0.41670 (3) obj. -539.682 iterations 1
Cbc0038I Pass  70: suminf.    0.34817 (2) obj. -539.682 iterations 1
Cbc0038I Pass  71: suminf.    2.05552 (5) obj. -539.682 iterations 6
Cbc0038I Pass  72: suminf.    1.05220 (3) obj. -539.682 iterations 8
Cbc0038I Pass  73: suminf.    0.24798 (3) obj. -539.682 iterations 5
Cbc0038I Pass  74: suminf.    0.71000 (3) obj. -539.682 iterations 6
Cbc0038I Pass  75: suminf.    0.42105 (1) obj. -546.265 iterations 4
Cbc0038I Pass  76: suminf.    0.37984 (1) obj. -539.682 iterations 2
Cbc0038I Pass  77: suminf.    2.31620 (7) obj. -539.682 iterations 11
Cbc0038I Pass  78: suminf.    0.91637 (5) obj. -539.682 iterations 6
Cbc0038I Pass  79: suminf.    0.80943 (3) obj. -539.682 iterations 2
Cbc0038I Pass  80: suminf.    0.55108 (3) obj. -539.682 iterations 4
Cbc0038I Pass  81: suminf.    0.47631 (2) obj. -539.682 iterations 1
Cbc0038I Pass  82: suminf.    0.33929 (2) obj. -539.682 iterations 3
Cbc0038I Pass  83: suminf.    1.54317 (4) obj. -539.682 iterations 14
Cbc0038I Pass  84: suminf.    0.44415 (2) obj. -539.682 iterations 4
Cbc0038I Pass  85: suminf.    0.44415 (2) obj. -539.682 iterations 0
Cbc0038I Pass  86: suminf.    0.70170 (2) obj. -539.682 iterations 4
Cbc0038I Pass  87: suminf.    0.42105 (1) obj. -546.265 iterations 3
Cbc0038I Pass  88: suminf.    0.37984 (1) obj. -539.682 iterations 2
Cbc0038I Pass  89: suminf.    0.43572 (2) obj. -539.682 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -518.708 - took 0.04 seconds
Cbc0012I Integer solution of -518.7077 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 13 rows 9 columns
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 20 cuts changed objective from -577.87667 to -518.14924 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 49 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -518.7077, took 71 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 22 (-5) columns and 107 (-47) elements
Clp1000I sum of infeasibilities 0 - average 0, 6 fixed columns
Coin0506I Presolve 13 (-5) rows, 16 (-6) columns and 71 (-36) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.8428473 - largest nonzero change 0 ( 0%) - largest zero change 1.4085211e-05
Clp0000I Optimal - objective value 595.95164
Clp0000I Optimal - objective value 595.95164
Coin0511I After Postsolve, objective 595.95164, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7213992 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 603.75726
Clp0000I Optimal - objective value 603.75726
Clp0000I Optimal - objective value 603.75726
Coin0511I After Postsolve, objective 603.75726, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 603.7572648 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 22 columns (22 integer (22 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.19912
Cbc0038I Pass   1: suminf.    0.41793 (3) obj. -501.817 iterations 2
Cbc0038I Solution found of -479.003
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -488
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.41793 (3) obj. -501.817 iterations 0
Cbc0038I Pass   3: suminf.    0.05632 (1) obj. -488 iterations 4
Cbc0038I Pass   4: suminf.    0.42105 (1) obj. -546.265 iterations 1
Cbc0038I Pass   5: suminf.    0.14557 (4) obj. -488 iterations 4
Cbc0038I Pass   6: suminf.    0.07510 (1) obj. -488 iterations 1
Cbc0038I Pass   7: suminf.    0.42105 (1) obj. -543.265 iterations 1
Cbc0038I Pass   8: suminf.    0.42105 (1) obj. -535.265 iterations 3
Cbc0038I Pass   9: suminf.    0.12518 (1) obj. -488 iterations 1
Cbc0038I Pass  10: suminf.    0.42105 (1) obj. -535.265 iterations 1
Cbc0038I Pass  11: suminf.    0.42105 (1) obj. -535.265 iterations 0
Cbc0038I Pass  12: suminf.    0.27064 (5) obj. -488 iterations 5
Cbc0038I Pass  13: suminf.    0.24191 (2) obj. -488 iterations 1
Cbc0038I Pass  14: suminf.    0.42105 (1) obj. -534.265 iterations 2
Cbc0038I Pass  15: suminf.    0.13144 (1) obj. -488 iterations 1
Cbc0038I Pass  16: suminf.    0.86009 (4) obj. -488 iterations 6
Cbc0038I Pass  17: suminf.    0.56944 (3) obj. -524.119 iterations 3
Cbc0038I Pass  18: suminf.    0.40859 (1) obj. -488 iterations 3
Cbc0038I Pass  19: suminf.    0.27778 (1) obj. -511.244 iterations 1
Cbc0038I Pass  20: suminf.    0.61616 (2) obj. -521.168 iterations 1
Cbc0038I Pass  21: suminf.    0.61616 (2) obj. -521.168 iterations 0
Cbc0038I Pass  22: suminf.    0.43607 (3) obj. -488 iterations 4
Cbc0038I Pass  23: suminf.    0.33232 (2) obj. -488 iterations 1
Cbc0038I Pass  24: suminf.    0.42105 (1) obj. -518.265 iterations 3
Cbc0038I Pass  25: suminf.    0.21979 (2) obj. -488 iterations 2
Cbc0038I Pass  26: suminf.    0.42105 (1) obj. -518.265 iterations 2
Cbc0038I Pass  27: suminf.    0.22222 (1) obj. -534.666 iterations 6
Cbc0038I Pass  28: suminf.    0.22222 (1) obj. -534.666 iterations 0
Cbc0038I Pass  29: suminf.    0.48486 (1) obj. -488 iterations 1
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -494.537 iterations 5
Cbc0038I Solution found of -494.537
Cbc0038I Rounding solution of -502.537 is better than previous of -494.537

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -515.825
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.52446 (4) obj. -515.825 iterations 1
Cbc0038I Pass  32: suminf.    0.42105 (1) obj. -546.265 iterations 4
Cbc0038I Pass  33: suminf.    0.23050 (1) obj. -515.825 iterations 1
Cbc0038I Pass  34: suminf.    0.22222 (1) obj. -534.81 iterations 8
Cbc0038I Pass  35: suminf.    0.22222 (1) obj. -534.81 iterations 2
Cbc0038I Pass  36: suminf.    0.32907 (1) obj. -515.825 iterations 1
Cbc0038I Pass  37: suminf.    1.78629 (7) obj. -515.825 iterations 7
Cbc0038I Pass  38: suminf.    1.25055 (4) obj. -515.825 iterations 2
Cbc0038I Pass  39: suminf.    0.49194 (2) obj. -515.825 iterations 5
Cbc0038I Pass  40: suminf.    0.51452 (2) obj. -515.825 iterations 2
Cbc0038I Pass  41: suminf.    0.38384 (2) obj. -533.386 iterations 2
Cbc0038I Pass  42: suminf.    0.25028 (1) obj. -515.825 iterations 2
Cbc0038I Pass  43: suminf.    0.22222 (1) obj. -520.81 iterations 1
Cbc0038I Pass  44: suminf.    1.00372 (7) obj. -515.825 iterations 8
Cbc0038I Pass  45: suminf.    0.39665 (2) obj. -515.825 iterations 3
Cbc0038I Pass  46: suminf.    0.33333 (2) obj. -526.477 iterations 2
Cbc0038I Pass  47: suminf.    0.26716 (1) obj. -515.825 iterations 2
Cbc0038I Pass  48: suminf.    0.22222 (1) obj. -523.81 iterations 1
Cbc0038I Pass  49: suminf.    0.90489 (4) obj. -531.075 iterations 6
Cbc0038I Pass  50: suminf.    0.90489 (4) obj. -531.075 iterations 0
Cbc0038I Pass  51: suminf.    0.35570 (1) obj. -515.825 iterations 5
Cbc0038I Pass  52: suminf.    0.42105 (1) obj. -526.265 iterations 1
Cbc0038I Pass  53: suminf.    0.41796 (2) obj. -515.825 iterations 3
Cbc0038I Pass  54: suminf.    0.34318 (1) obj. -515.825 iterations 2
Cbc0038I Pass  55: suminf.    0.34318 (1) obj. -515.825 iterations 0
Cbc0038I Pass  56: suminf.    0.42105 (1) obj. -528.265 iterations 1
Cbc0038I Pass  57: suminf.    0.61293 (3) obj. -515.825 iterations 5
Cbc0038I Pass  58: suminf.    0.54365 (4) obj. -515.825 iterations 1
Cbc0038I Pass  59: suminf.    0.31213 (2) obj. -515.825 iterations 6
Cbc0038I Pass  60: suminf.    0.22222 (1) obj. -516.81 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 9 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -502.537 - took 0.01 seconds
Cbc0012I Integer solution of -502.5371 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 16 rows 22 columns, reduced to 5 rows 7 columns
Cbc0012I Integer solution of -518.7077 found by DiveCoefficient after 77 iterations and 0 nodes (0.13 seconds)
Cbc0031I 9 added rows had average density of 7.2222222
Cbc0013I At root node, 9 cuts changed objective from -568.9755 to -518.7077 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 3.4 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 74 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0001I Search completed - best objective -518.7077, took 77 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

