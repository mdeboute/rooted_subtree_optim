Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 33 (-30) rows, 18 (-14) columns and 95 (-82) elements
Clp0000I Optimal - objective value 92.24353
Coin0511I After Postsolve, objective 92.24353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.24352987 - 20 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 18 columns (17 integer (17 of which binary)) and 95 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.63199
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5 iterations 18
Cbc0038I Solution found of -5
Cbc0038I Relaxing continuous gives -5
Cbc0038I Rounding solution of -14 is better than previous of -5

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -14 to -19 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.1224
Cbc0038I Pass   2: suminf.    0.77617 (4) obj. -27.1224 iterations 2
Cbc0038I Pass   3: suminf.    0.43143 (2) obj. -35.5796 iterations 6
Cbc0038I Pass   4: suminf.    0.93023 (3) obj. -27.1224 iterations 4
Cbc0038I Pass   5: suminf.    0.50429 (2) obj. -27.1224 iterations 5
Cbc0038I Pass   6: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass   7: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass   8: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass   9: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  10: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  11: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  12: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  13: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  14: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  15: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  16: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  17: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  18: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  19: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  20: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  21: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  22: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  23: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  24: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  25: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  26: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  27: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  28: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  29: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  30: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  31: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -19 - took 0.05 seconds
Cbc0012I Integer solution of -19 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 10 added rows had average density of 13.8
Cbc0013I At root node, 10 cuts changed objective from -91.225327 to -48.322851 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 765 row cuts average 2.9 elements, 1 column cuts (1 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 248 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 62 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19, took 1470 iterations and 6 nodes (0.13 seconds)
Cbc0032I Strong branching done 78 times (503 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-21) rows, 42 (-18) columns and 316 (-296) elements
Clp1000I sum of infeasibilities 1.22072e-08 - average 2.97737e-10, 5 fixed columns
Coin0506I Presolve 37 (-4) rows, 37 (-5) columns and 241 (-75) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 1.8774903 - largest nonzero change 1.0488724e-05 ( 0.00089285843%) - largest zero change 1.618399e-05
Clp0000I Optimal - objective value 134.31284
Clp0000I Optimal - objective value 134.31284
Coin0511I After Postsolve, objective 134.31284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7126036 - largest nonzero change 1.4176323e-05 ( 0.0012247315%) - largest zero change 2.398299e-05
Clp0000I Optimal - objective value 134.31284
Clp0000I Optimal - objective value 134.31284
Clp0000I Optimal - objective value 134.31284
Coin0511I After Postsolve, objective 134.31284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 134.3128404 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 41 columns (41 integer (41 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.317%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 9.24143
Cbc0038I Pass   1: suminf.    2.43046 (10) obj. 1.25807 iterations 11
Cbc0038I Pass   2: suminf.    2.43046 (10) obj. 1.25807 iterations 0
Cbc0038I Solution found of 47
Cbc0038I Rounding solution of 16 is better than previous of 47

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 41 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 16 to -6 (0.02 seconds)
Cbc0038I Round again with cutoff of -15.4117
Cbc0038I Pass   3: suminf.    3.54381 (13) obj. -15.4117 iterations 1
Cbc0038I Pass   4: suminf.    3.54381 (13) obj. -15.4117 iterations 0
Cbc0038I Pass   5: suminf.    1.28008 (4) obj. -15.4117 iterations 17
Cbc0038I Pass   6: suminf.    1.28008 (4) obj. -15.4117 iterations 0
Cbc0038I Pass   7: suminf.    0.32843 (1) obj. -15.4117 iterations 3
Cbc0038I Pass   8: suminf.    0.16935 (1) obj. -28.7742 iterations 1
Cbc0038I Pass   9: suminf.    1.62705 (5) obj. -15.4117 iterations 7
Cbc0038I Pass  10: suminf.    1.58945 (4) obj. -15.4117 iterations 1
Cbc0038I Pass  11: suminf.    0.33333 (1) obj. -18.6667 iterations 5
Cbc0038I Pass  12: suminf.    0.50874 (2) obj. -15.4117 iterations 3
Cbc0038I Pass  13: suminf.    1.75238 (5) obj. -27.519 iterations 9
Cbc0038I Pass  14: suminf.    1.75238 (5) obj. -27.519 iterations 1
Cbc0038I Pass  15: suminf.    2.55848 (9) obj. -15.4117 iterations 4
Cbc0038I Pass  16: suminf.    2.15031 (7) obj. -15.4117 iterations 2
Cbc0038I Pass  17: suminf.    0.50874 (2) obj. -15.4117 iterations 7
Cbc0038I Pass  18: suminf.    2.47915 (7) obj. -15.4117 iterations 12
Cbc0038I Pass  19: suminf.    1.99495 (6) obj. -15.4117 iterations 1
Cbc0038I Pass  20: suminf.    1.19505 (5) obj. -15.4117 iterations 4
Cbc0038I Pass  21: suminf.    1.00866 (3) obj. -15.4117 iterations 5
Cbc0038I Pass  22: suminf.    0.72588 (3) obj. -15.4117 iterations 3
Cbc0038I Pass  23: suminf.    2.84541 (7) obj. -15.4117 iterations 11
Cbc0038I Pass  24: suminf.    2.21120 (6) obj. -15.4117 iterations 1
Cbc0038I Pass  25: suminf.    1.76052 (5) obj. -21.0576 iterations 2
Cbc0038I Pass  26: suminf.    0.54947 (2) obj. -15.4117 iterations 5
Cbc0038I Pass  27: suminf.    0.54531 (3) obj. -18.2817 iterations 3
Cbc0038I Pass  28: suminf.    0.70179 (3) obj. -15.4117 iterations 2
Cbc0038I Pass  29: suminf.    0.26613 (1) obj. -20.6452 iterations 3
Cbc0038I Pass  30: suminf.    0.32843 (1) obj. -15.4117 iterations 1
Cbc0038I Pass  31: suminf.    4.25629 (15) obj. -15.4117 iterations 20
Cbc0038I Pass  32: suminf.    2.89267 (14) obj. -15.4117 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 41 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -6 to -17 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.6235
Cbc0038I Pass  32: suminf.    2.80920 (13) obj. -32.6235 iterations 1
Cbc0038I Pass  33: suminf.    2.76299 (13) obj. -32.6235 iterations 2
Cbc0038I Pass  34: suminf.    1.60888 (5) obj. -32.6235 iterations 18
Cbc0038I Pass  35: suminf.    1.39112 (4) obj. -32.6235 iterations 1
Cbc0038I Pass  36: suminf.    0.37195 (2) obj. -32.6235 iterations 4
Cbc0038I Pass  37: suminf.    0.37195 (2) obj. -32.6235 iterations 0
Cbc0038I Pass  38: suminf.    0.68486 (2) obj. -32.6235 iterations 1
Cbc0038I Pass  39: suminf.    0.61344 (2) obj. -39.3366 iterations 1
Cbc0038I Pass  40: suminf.    3.35930 (9) obj. -32.6235 iterations 9
Cbc0038I Pass  41: suminf.    1.55804 (4) obj. -36.1472 iterations 7
Cbc0038I Pass  42: suminf.    1.10911 (3) obj. -32.6235 iterations 4
Cbc0038I Pass  43: suminf.    1.09041 (3) obj. -32.6235 iterations 1
Cbc0038I Pass  44: suminf.    1.25700 (3) obj. -32.6235 iterations 2
Cbc0038I Pass  45: suminf.    1.16765 (3) obj. -35.5376 iterations 3
Cbc0038I Pass  46: suminf.    2.06511 (6) obj. -32.6235 iterations 7
Cbc0038I Pass  47: suminf.    1.69812 (6) obj. -32.6235 iterations 3
Cbc0038I Pass  48: suminf.    0.99010 (3) obj. -32.6235 iterations 5
Cbc0038I Pass  49: suminf.    0.96452 (3) obj. -33.1097 iterations 1
Cbc0038I Pass  50: suminf.    1.04733 (3) obj. -32.6235 iterations 2
Cbc0038I Pass  51: suminf.    0.61344 (2) obj. -39.3366 iterations 2
Cbc0038I Pass  52: suminf.    0.37195 (2) obj. -32.6235 iterations 1
Cbc0038I Pass  53: suminf.    0.37195 (2) obj. -32.6235 iterations 0
Cbc0038I Pass  54: suminf.    0.68486 (2) obj. -32.6235 iterations 1
Cbc0038I Pass  55: suminf.    2.60068 (7) obj. -32.6235 iterations 7
Cbc0038I Pass  56: suminf.    2.60068 (7) obj. -32.6235 iterations 4
Cbc0038I Pass  57: suminf.    2.97811 (10) obj. -32.6235 iterations 6
Cbc0038I Pass  58: suminf.    2.97811 (10) obj. -32.6235 iterations 1
Cbc0038I Pass  59: suminf.    0.79027 (3) obj. -32.6235 iterations 9
Cbc0038I Pass  60: suminf.    0.61290 (2) obj. -36.5645 iterations 2
Cbc0038I Pass  61: suminf.    0.37195 (2) obj. -32.6235 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 41 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -17 - took 0.04 seconds
Cbc0012I Integer solution of -17 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 40 rows 41 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -19 found by DiveCoefficient after 116 iterations and 0 nodes (0.18 seconds)
Cbc0031I 5 added rows had average density of 4.4
Cbc0013I At root node, 5 cuts changed objective from -91.117934 to -19 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 155 row cuts average 3.0 elements, 28 column cuts (28 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 43 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19, took 116 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 33 (-30) rows, 18 (-14) columns and 95 (-82) elements
Clp0000I Optimal - objective value 92.24353
Coin0511I After Postsolve, objective 92.24353, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.24352987 - 20 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 18 columns (17 integer (17 of which binary)) and 95 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.63199
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5 iterations 18
Cbc0038I Solution found of -5
Cbc0038I Relaxing continuous gives -5
Cbc0038I Rounding solution of -14 is better than previous of -5

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -14 to -19 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.1224
Cbc0038I Pass   2: suminf.    0.77617 (4) obj. -27.1224 iterations 2
Cbc0038I Pass   3: suminf.    0.43143 (2) obj. -35.5796 iterations 6
Cbc0038I Pass   4: suminf.    0.93023 (3) obj. -27.1224 iterations 4
Cbc0038I Pass   5: suminf.    0.50429 (2) obj. -27.1224 iterations 5
Cbc0038I Pass   6: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass   7: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass   8: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass   9: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  10: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  11: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  12: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  13: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  14: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  15: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  16: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  17: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  18: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  19: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  20: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  21: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  22: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  23: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  24: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  25: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  26: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  27: suminf.    0.58915 (2) obj. -27.1224 iterations 2
Cbc0038I Pass  28: suminf.    0.36286 (2) obj. -27.1224 iterations 1
Cbc0038I Pass  29: suminf.    0.83532 (3) obj. -27.1224 iterations 3
Cbc0038I Pass  30: suminf.    0.50429 (2) obj. -27.1224 iterations 3
Cbc0038I Pass  31: suminf.    0.46753 (2) obj. -27.1224 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 18 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -19 - took 0.02 seconds
Cbc0012I Integer solution of -19 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 10 added rows had average density of 13.8
Cbc0013I At root node, 10 cuts changed objective from -91.225327 to -48.322851 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 765 row cuts average 2.9 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 248 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 69 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 62 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19, took 1470 iterations and 6 nodes (0.14 seconds)
Cbc0032I Strong branching done 78 times (503 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-24) rows, 40 (-21) columns and 276 (-337) elements
Clp1000I sum of infeasibilities 2.21279e-08 - average 5.67381e-10, 28 fixed columns
Coin0506I Presolve 12 (-27) rows, 12 (-28) columns and 43 (-233) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 1.8473371 - largest nonzero change 2.0160654e-05 ( 0.0016580886%) - largest zero change 1.618399e-05
Clp0000I Optimal - objective value 39.361162
Clp0000I Optimal - objective value 39.361162
Coin0511I After Postsolve, objective 39.361162, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6989103 - largest nonzero change 2.9712573e-05 ( 0.0025820745%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 130.66476
Clp0000I Optimal - objective value 130.66476
Clp0000I Optimal - objective value 130.66476
Coin0511I After Postsolve, objective 130.66476, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 130.6647647 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 41 columns (41 integer (41 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.317%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 9.03752
Cbc0038I Pass   1: suminf.    0.70087 (6) obj. -6.4685 iterations 12
Cbc0038I Pass   2: suminf.    0.70087 (6) obj. -6.4685 iterations 1
Cbc0038I Solution found of 35
Cbc0038I Rounding solution of 14 is better than previous of 35

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 41 columns, reduced to 25 rows 26 columns
Cbc0038I Mini branch and bound improved solution from 14 to -8 (0.01 seconds)
Cbc0038I Round again with cutoff of -17.551
Cbc0038I Pass   3: suminf.    1.79332 (13) obj. -17.551 iterations 2
Cbc0038I Pass   4: suminf.    1.79332 (13) obj. -17.551 iterations 0
Cbc0038I Pass   5: suminf.    1.52211 (12) obj. -17.551 iterations 13
Cbc0038I Pass   6: suminf.    1.51813 (6) obj. -17.551 iterations 1
Cbc0038I Pass   7: suminf.    2.03107 (9) obj. -17.551 iterations 5
Cbc0038I Pass   8: suminf.    1.94960 (8) obj. -17.551 iterations 1
Cbc0038I Pass   9: suminf.    0.16935 (1) obj. -28.7742 iterations 11
Cbc0038I Pass  10: suminf.    0.30296 (1) obj. -17.551 iterations 1
Cbc0038I Pass  11: suminf.    1.45529 (5) obj. -17.551 iterations 6
Cbc0038I Pass  12: suminf.    1.45529 (5) obj. -17.551 iterations 3
Cbc0038I Pass  13: suminf.    0.07677 (1) obj. -17.551 iterations 4
Cbc0038I Pass  14: suminf.    0.02419 (1) obj. -21.9677 iterations 1
Cbc0038I Pass  15: suminf.    2.28754 (7) obj. -17.551 iterations 9
Cbc0038I Pass  16: suminf.    2.18779 (6) obj. -17.551 iterations 1
Cbc0038I Pass  17: suminf.    0.52603 (2) obj. -17.551 iterations 7
Cbc0038I Pass  18: suminf.    0.52603 (2) obj. -17.551 iterations 0
Cbc0038I Pass  19: suminf.    0.65371 (2) obj. -17.551 iterations 1
Cbc0038I Pass  20: suminf.    0.61344 (2) obj. -21.3366 iterations 1
Cbc0038I Pass  21: suminf.    1.63770 (4) obj. -33.3331 iterations 5
Cbc0038I Pass  22: suminf.    0.68145 (2) obj. -22.1048 iterations 4
Cbc0038I Pass  23: suminf.    0.24344 (1) obj. -17.551 iterations 2
Cbc0038I Pass  24: suminf.    0.20161 (1) obj. -21.0645 iterations 1
Cbc0038I Pass  25: suminf.    2.51122 (7) obj. -23.1859 iterations 14
Cbc0038I Pass  26: suminf.    2.51122 (7) obj. -23.1859 iterations 1
Cbc0038I Pass  27: suminf.    0.31219 (1) obj. -17.551 iterations 8
Cbc0038I Pass  28: suminf.    0.16935 (1) obj. -28.7742 iterations 2
Cbc0038I Pass  29: suminf.    0.30296 (1) obj. -17.551 iterations 1
Cbc0038I Pass  30: suminf.    2.46264 (7) obj. -17.551 iterations 8
Cbc0038I Pass  31: suminf.    2.35986 (6) obj. -17.551 iterations 2
Cbc0038I Pass  32: suminf.    2.33955 (6) obj. -43.3162 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 41 columns, reduced to 29 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -8 to -12 (0.03 seconds)
Cbc0038I Round again with cutoff of -32.9428
Cbc0038I Pass  32: suminf.    3.24013 (17) obj. -32.9428 iterations 1
Cbc0038I Pass  33: suminf.    3.07509 (18) obj. -32.9428 iterations 1
Cbc0038I Pass  34: suminf.    3.02481 (10) obj. -32.9428 iterations 22
Cbc0038I Pass  35: suminf.    2.57915 (8) obj. -32.9428 iterations 2
Cbc0038I Pass  36: suminf.    2.20321 (7) obj. -32.9428 iterations 1
Cbc0038I Pass  37: suminf.    0.38876 (2) obj. -32.9428 iterations 6
Cbc0038I Pass  38: suminf.    0.38876 (2) obj. -32.9428 iterations 0
Cbc0038I Pass  39: suminf.    0.68146 (2) obj. -32.9428 iterations 1
Cbc0038I Pass  40: suminf.    0.61344 (2) obj. -39.3366 iterations 1
Cbc0038I Pass  41: suminf.    4.03252 (14) obj. -32.9428 iterations 13
Cbc0038I Pass  42: suminf.    3.32021 (10) obj. -32.9428 iterations 4
Cbc0038I Pass  43: suminf.    0.44656 (2) obj. -32.9428 iterations 9
Cbc0038I Pass  44: suminf.    0.42097 (2) obj. -33.429 iterations 1
Cbc0038I Pass  45: suminf.    2.22061 (7) obj. -32.9428 iterations 7
Cbc0038I Pass  46: suminf.    2.22061 (7) obj. -32.9428 iterations 0
Cbc0038I Pass  47: suminf.    0.85700 (3) obj. -32.9428 iterations 6
Cbc0038I Pass  48: suminf.    0.80323 (3) obj. -33.9645 iterations 1
Cbc0038I Pass  49: suminf.    1.02669 (3) obj. -32.9428 iterations 2
Cbc0038I Pass  50: suminf.    0.61344 (2) obj. -39.3366 iterations 2
Cbc0038I Pass  51: suminf.    0.38876 (2) obj. -32.9428 iterations 1
Cbc0038I Pass  52: suminf.    0.38876 (2) obj. -32.9428 iterations 0
Cbc0038I Pass  53: suminf.    0.68146 (2) obj. -32.9428 iterations 1
Cbc0038I Pass  54: suminf.    1.66302 (5) obj. -32.9428 iterations 6
Cbc0038I Pass  55: suminf.    1.53838 (4) obj. -32.9428 iterations 3
Cbc0038I Pass  56: suminf.    3.12246 (8) obj. -32.9428 iterations 7
Cbc0038I Pass  57: suminf.    2.22497 (6) obj. -32.9428 iterations 6
Cbc0038I Pass  58: suminf.    0.94317 (3) obj. -32.9428 iterations 5
Cbc0038I Pass  59: suminf.    0.94317 (3) obj. -32.9428 iterations 0
Cbc0038I Pass  60: suminf.    1.28939 (3) obj. -32.9428 iterations 2
Cbc0038I Pass  61: suminf.    0.92308 (2) obj. -36.2308 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 41 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -12 to -19 (0.05 seconds)
Cbc0038I Round again with cutoff of -51.4131
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.41847 (23) obj. -51.4131 iterations 1
Cbc0038I Pass  62: suminf.    4.41847 (23) obj. -51.4131 iterations 0
Cbc0038I Pass  63: suminf.    2.74545 (9) obj. -51.4131 iterations 20
Cbc0038I Pass  64: suminf.    2.63283 (8) obj. -51.4131 iterations 1
Cbc0038I Pass  65: suminf.    1.24643 (4) obj. -51.4131 iterations 8
Cbc0038I Pass  66: suminf.    1.24643 (4) obj. -51.4131 iterations 0
Cbc0038I Pass  67: suminf.    1.30900 (4) obj. -51.4131 iterations 1
Cbc0038I Pass  68: suminf.    1.30900 (4) obj. -51.4131 iterations 0
Cbc0038I Pass  69: suminf.    1.53046 (6) obj. -51.4131 iterations 3
Cbc0038I Pass  70: suminf.    1.47539 (5) obj. -51.4131 iterations 2
Cbc0038I Pass  71: suminf.    1.24643 (4) obj. -51.4131 iterations 3
Cbc0038I Pass  72: suminf.    1.24643 (4) obj. -51.4131 iterations 0
Cbc0038I Pass  73: suminf.    1.30900 (4) obj. -51.4131 iterations 1
Cbc0038I Pass  74: suminf.    1.30900 (4) obj. -51.4131 iterations 0
Cbc0038I Pass  75: suminf.    2.70002 (10) obj. -51.4131 iterations 8
Cbc0038I Pass  76: suminf.    2.59575 (8) obj. -51.4131 iterations 2
Cbc0038I Pass  77: suminf.    2.44831 (9) obj. -51.4131 iterations 1
Cbc0038I Pass  78: suminf.    1.80956 (5) obj. -51.4131 iterations 9
Cbc0038I Pass  79: suminf.    1.79129 (5) obj. -51.4131 iterations 1
Cbc0038I Pass  80: suminf.    1.24643 (4) obj. -51.4131 iterations 5
Cbc0038I Pass  81: suminf.    1.24643 (4) obj. -51.4131 iterations 0
Cbc0038I Pass  82: suminf.    1.30900 (4) obj. -51.4131 iterations 1
Cbc0038I Pass  83: suminf.    1.30900 (4) obj. -51.4131 iterations 0
Cbc0038I Pass  84: suminf.    1.24643 (4) obj. -51.4131 iterations 2
Cbc0038I Pass  85: suminf.    2.82035 (7) obj. -51.4131 iterations 8
Cbc0038I Pass  86: suminf.    2.82035 (7) obj. -51.4131 iterations 4
Cbc0038I Pass  87: suminf.    1.24643 (4) obj. -51.4131 iterations 7
Cbc0038I Pass  88: suminf.    1.24643 (4) obj. -51.4131 iterations 0
Cbc0038I Pass  89: suminf.    1.30900 (4) obj. -51.4131 iterations 1
Cbc0038I Pass  90: suminf.    1.30900 (4) obj. -51.4131 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 41 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -19 - took 0.04 seconds
Cbc0012I Integer solution of -19 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 40 rows 41 columns, reduced to 29 rows 30 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 3
Cbc0013I At root node, 2 cuts changed objective from -94.51041 to -26.623377 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 88 row cuts average 2.0 elements, 27 column cuts (27 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19, took 50 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

