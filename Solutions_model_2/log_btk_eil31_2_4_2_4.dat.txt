Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-18) rows, 26 (-7) columns and 138 (-45) elements
Clp1000I sum of infeasibilities 8.47856e-06 - average 1.80395e-07, 5 fixed columns
Coin0506I Presolve 35 (-12) rows, 20 (-6) columns and 102 (-36) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Coin0511I After Postsolve, objective 55.475077, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Coin0511I After Postsolve, objective 55.475077, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.47507724 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 26 columns (25 integer (25 of which binary)) and 145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.35688
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.9463 iterations 12
Cbc0038I Solution found of -24.9463
Cbc0038I Relaxing continuous gives -24.9463
Cbc0038I Rounding solution of -25.9546 is better than previous of -24.9463

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -25.9546 to -31.3865 (0.01 seconds)
Cbc0038I Round again with cutoff of -33.7954
Cbc0038I Pass   2: suminf.    0.32877 (1) obj. -33.7954 iterations 1
Cbc0038I Pass   3: suminf.    0.45263 (1) obj. -33.7954 iterations 1
Cbc0038I Pass   4: suminf.    1.55226 (6) obj. -33.7954 iterations 4
Cbc0038I Pass   5: suminf.    0.57838 (2) obj. -33.7954 iterations 6
Cbc0038I Pass   6: suminf.    0.96561 (4) obj. -33.7954 iterations 4
Cbc0038I Pass   7: suminf.    0.56306 (3) obj. -33.7954 iterations 5
Cbc0038I Pass   8: suminf.    0.40779 (2) obj. -33.7954 iterations 2
Cbc0038I Pass   9: suminf.    0.40779 (2) obj. -33.7954 iterations 0
Cbc0038I Pass  10: suminf.    0.59142 (2) obj. -33.7954 iterations 2
Cbc0038I Pass  11: suminf.    0.57838 (2) obj. -33.7954 iterations 1
Cbc0038I Pass  12: suminf.    0.45263 (1) obj. -33.7954 iterations 2
Cbc0038I Pass  13: suminf.    0.32877 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  14: suminf.    1.16237 (5) obj. -33.7954 iterations 6
Cbc0038I Pass  15: suminf.    0.53796 (2) obj. -33.7954 iterations 5
Cbc0038I Pass  16: suminf.    1.97244 (6) obj. -33.7954 iterations 11
Cbc0038I Pass  17: suminf.    1.42816 (4) obj. -33.7954 iterations 4
Cbc0038I Pass  18: suminf.    0.79158 (3) obj. -33.7954 iterations 2
Cbc0038I Pass  19: suminf.    0.38120 (2) obj. -33.7954 iterations 5
Cbc0038I Pass  20: suminf.    0.28889 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  21: suminf.    0.27236 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  22: suminf.    1.25444 (4) obj. -33.7954 iterations 6
Cbc0038I Pass  23: suminf.    0.86500 (5) obj. -33.7954 iterations 5
Cbc0038I Pass  24: suminf.    0.73939 (3) obj. -33.7954 iterations 9
Cbc0038I Pass  25: suminf.    0.26316 (1) obj. -33.7954 iterations 2
Cbc0038I Pass  26: suminf.    0.26316 (1) obj. -33.7954 iterations 0
Cbc0038I Pass  27: suminf.    0.59987 (2) obj. -33.7954 iterations 2
Cbc0038I Pass  28: suminf.    0.59987 (2) obj. -33.7954 iterations 0
Cbc0038I Pass  29: suminf.    0.56240 (2) obj. -33.7954 iterations 4
Cbc0038I Pass  30: suminf.    0.55154 (2) obj. -33.7954 iterations 1
Cbc0038I Pass  31: suminf.    0.45556 (1) obj. -33.7954 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -31.3865 to -32.3948 (0.02 seconds)
Cbc0038I Round again with cutoff of -38.1314
Cbc0038I Pass  31: suminf.    0.49181 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  32: suminf.    0.58837 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  33: suminf.    0.58837 (2) obj. -38.1314 iterations 0
Cbc0038I Pass  34: suminf.    0.56740 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  35: suminf.    1.87884 (8) obj. -38.1314 iterations 12
Cbc0038I Pass  36: suminf.    1.60725 (6) obj. -38.1314 iterations 5
Cbc0038I Pass  37: suminf.    1.84855 (6) obj. -38.1314 iterations 11
Cbc0038I Pass  38: suminf.    1.21721 (4) obj. -38.1314 iterations 3
Cbc0038I Pass  39: suminf.    0.90864 (3) obj. -38.1314 iterations 3
Cbc0038I Pass  40: suminf.    0.80708 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  41: suminf.    0.80399 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  42: suminf.    0.78889 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  43: suminf.    0.80399 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  44: suminf.    1.85735 (7) obj. -38.1314 iterations 14
Cbc0038I Pass  45: suminf.    1.68299 (5) obj. -38.1314 iterations 2
Cbc0038I Pass  46: suminf.    1.67476 (6) obj. -38.1314 iterations 1
Cbc0038I Pass  47: suminf.    0.53430 (2) obj. -38.1314 iterations 9
Cbc0038I Pass  48: suminf.    0.47276 (2) obj. -38.1314 iterations 3
Cbc0038I Pass  49: suminf.    0.64897 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  50: suminf.    0.63999 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  51: suminf.    1.00034 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  52: suminf.    1.00034 (3) obj. -38.1314 iterations 0
Cbc0038I Pass  53: suminf.    0.89616 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  54: suminf.    2.08430 (9) obj. -38.1314 iterations 9
Cbc0038I Pass  55: suminf.    1.36601 (6) obj. -38.1314 iterations 4
Cbc0038I Pass  56: suminf.    0.84569 (4) obj. -38.1314 iterations 7
Cbc0038I Pass  57: suminf.    0.84023 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  58: suminf.    0.67294 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  59: suminf.    0.84023 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  60: suminf.    1.04967 (3) obj. -38.1314 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -32.3948 - took 0.05 seconds
Cbc0012I Integer solution of -32.39482 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 46 rows 26 columns, reduced to 17 rows 12 columns
Cbc0031I 5 added rows had average density of 20
Cbc0013I At root node, 5 cuts changed objective from -55.475077 to -41.960408 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 571 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 649 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0012I Integer solution of -32.88862 found by rounding after 1723 iterations and 4 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -32.88861999999999, took 1726 iterations and 4 nodes (0.14 seconds)
Cbc0032I Strong branching done 44 times (346 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 53 (-9) columns and 479 (-167) elements
Clp1000I sum of infeasibilities 2.89101e-06 - average 5.90001e-08, 43 fixed columns
Coin0506I Presolve 8 (-41) rows, 9 (-44) columns and 30 (-449) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 55.131877
Clp0000I Optimal - objective value 55.131877
Coin0511I After Postsolve, objective 55.131877, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1350352 - largest nonzero change 2.0475785e-05 ( 0.0016324266%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 98.769075
Clp0000I Optimal - objective value 98.769075
Clp0000I Optimal - objective value 98.769075
Coin0511I After Postsolve, objective 98.769075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.76907511 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 51 columns (51 integer (51 of which binary)) and 452 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.138%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.34989
Cbc0038I Pass   1: suminf.    0.10025 (2) obj. -15.8709 iterations 18
Cbc0038I Pass   2: suminf.    0.10025 (2) obj. -15.8709 iterations 1
Cbc0038I Solution found of -13.9712
Cbc0038I Rounding solution of -32.3948 is better than previous of -13.9712

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 51 columns, reduced to 17 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -34.62
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.48436 (17) obj. -34.62 iterations 6
Cbc0038I Pass   4: suminf.    1.44757 (14) obj. -34.62 iterations 1
Cbc0038I Pass   5: suminf.    1.28542 (6) obj. -34.62 iterations 25
Cbc0038I Pass   6: suminf.    1.24611 (6) obj. -34.62 iterations 1
Cbc0038I Pass   7: suminf.    1.28542 (6) obj. -34.62 iterations 6
Cbc0038I Pass   8: suminf.    1.49272 (6) obj. -34.62 iterations 2
Cbc0038I Pass   9: suminf.    1.39524 (7) obj. -34.62 iterations 1
Cbc0038I Pass  10: suminf.    1.39524 (7) obj. -34.62 iterations 0
Cbc0038I Pass  11: suminf.    1.27261 (6) obj. -34.62 iterations 5
Cbc0038I Pass  12: suminf.    1.24611 (6) obj. -34.62 iterations 3
Cbc0038I Pass  13: suminf.    1.28542 (6) obj. -34.62 iterations 6
Cbc0038I Pass  14: suminf.    2.42744 (8) obj. -34.62 iterations 7
Cbc0038I Pass  15: suminf.    2.26626 (7) obj. -34.62 iterations 8
Cbc0038I Pass  16: suminf.    1.79885 (6) obj. -34.62 iterations 7
Cbc0038I Pass  17: suminf.    1.78937 (7) obj. -34.62 iterations 2
Cbc0038I Pass  18: suminf.    1.41397 (5) obj. -34.62 iterations 8
Cbc0038I Pass  19: suminf.    0.80205 (3) obj. -35.5219 iterations 5
Cbc0038I Pass  20: suminf.    0.67542 (3) obj. -34.62 iterations 3
Cbc0038I Pass  21: suminf.    0.63426 (4) obj. -34.62 iterations 3
Cbc0038I Pass  22: suminf.    0.96245 (5) obj. -34.62 iterations 14
Cbc0038I Pass  23: suminf.    0.81995 (4) obj. -34.62 iterations 4
Cbc0038I Pass  24: suminf.    0.95790 (4) obj. -34.62 iterations 7
Cbc0038I Pass  25: suminf.    2.04620 (9) obj. -34.62 iterations 18
Cbc0038I Pass  26: suminf.    2.04197 (9) obj. -34.62 iterations 2
Cbc0038I Pass  27: suminf.    0.81995 (4) obj. -34.62 iterations 16
Cbc0038I Pass  28: suminf.    2.58868 (11) obj. -34.62 iterations 14
Cbc0038I Pass  29: suminf.    2.32522 (11) obj. -34.62 iterations 2
Cbc0038I Pass  30: suminf.    0.98078 (4) obj. -34.62 iterations 11
Cbc0038I Pass  31: suminf.    0.70920 (4) obj. -34.62 iterations 5
Cbc0038I Pass  32: suminf.    0.98846 (4) obj. -34.62 iterations 6
Cbc0038I Rounding solution of -32.8886 is better than previous of -32.3948

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 51 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -38.6251
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.38943 (17) obj. -38.6251 iterations 0
Cbc0038I Pass  33: suminf.    1.85585 (14) obj. -38.6251 iterations 1
Cbc0038I Pass  34: suminf.    1.28420 (13) obj. -38.6251 iterations 5
Cbc0038I Pass  35: suminf.    2.85337 (10) obj. -38.6251 iterations 23
Cbc0038I Pass  36: suminf.    2.17361 (8) obj. -38.6251 iterations 7
Cbc0038I Pass  37: suminf.    1.80280 (6) obj. -38.6251 iterations 11
Cbc0038I Pass  38: suminf.    1.80280 (6) obj. -38.6251 iterations 1
Cbc0038I Pass  39: suminf.    1.58289 (7) obj. -38.6251 iterations 15
Cbc0038I Pass  40: suminf.    1.58289 (7) obj. -38.6251 iterations 0
Cbc0038I Pass  41: suminf.    1.61089 (7) obj. -38.6251 iterations 5
Cbc0038I Pass  42: suminf.    1.61089 (7) obj. -38.6251 iterations 0
Cbc0038I Pass  43: suminf.    1.46394 (7) obj. -38.6251 iterations 6
Cbc0038I Pass  44: suminf.    1.46394 (7) obj. -38.6251 iterations 0
Cbc0038I Pass  45: suminf.    1.61089 (7) obj. -38.6251 iterations 4
Cbc0038I Pass  46: suminf.    1.80495 (9) obj. -38.6251 iterations 10
Cbc0038I Pass  47: suminf.    1.32275 (8) obj. -38.6251 iterations 1
Cbc0038I Pass  48: suminf.    2.34100 (7) obj. -38.6251 iterations 7
Cbc0038I Pass  49: suminf.    2.45648 (11) obj. -38.6251 iterations 8
Cbc0038I Pass  50: suminf.    1.89183 (9) obj. -38.6251 iterations 6
Cbc0038I Pass  51: suminf.    1.61340 (7) obj. -38.6251 iterations 12
Cbc0038I Pass  52: suminf.    1.46394 (7) obj. -38.6251 iterations 1
Cbc0038I Pass  53: suminf.    1.61089 (7) obj. -38.6251 iterations 4
Cbc0038I Pass  54: suminf.    1.61089 (7) obj. -38.6251 iterations 0
Cbc0038I Pass  55: suminf.    1.46394 (7) obj. -38.6251 iterations 4
Cbc0038I Pass  56: suminf.    1.88833 (9) obj. -38.6251 iterations 11
Cbc0038I Pass  57: suminf.    0.96868 (7) obj. -38.6251 iterations 3
Cbc0038I Pass  58: suminf.    1.42672 (6) obj. -38.6251 iterations 9
Cbc0038I Pass  59: suminf.    1.22791 (6) obj. -38.6251 iterations 3
Cbc0038I Pass  60: suminf.    1.54005 (6) obj. -38.6251 iterations 5
Cbc0038I Pass  61: suminf.    3.81255 (10) obj. -38.6251 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 51 columns, reduced to 32 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.8886 - took 0.02 seconds
Cbc0012I Integer solution of -32.88862 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 51 columns, reduced to 5 rows 5 columns
Cbc0031I 22 added rows had average density of 17.272727
Cbc0013I At root node, 22 cuts changed objective from -54.645405 to -35.186263 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1849 row cuts average 3.2 elements, 13 column cuts (13 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 535 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 129 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 240 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 110 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 177 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 232 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.88862 best solution, best possible -35.186263 (1.57 seconds)
Cbc0001I Search completed - best objective -32.88861999999999, took 1893 iterations and 6 nodes (1.78 seconds)
Cbc0032I Strong branching done 134 times (1686 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.78

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-18) rows, 26 (-7) columns and 138 (-45) elements
Clp1000I sum of infeasibilities 8.47856e-06 - average 1.80395e-07, 5 fixed columns
Coin0506I Presolve 35 (-12) rows, 20 (-6) columns and 102 (-36) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Coin0511I After Postsolve, objective 55.475077, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Clp0000I Optimal - objective value 55.475077
Coin0511I After Postsolve, objective 55.475077, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.47507724 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 26 columns (25 integer (25 of which binary)) and 145 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.35688
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -24.9463 iterations 12
Cbc0038I Solution found of -24.9463
Cbc0038I Relaxing continuous gives -24.9463
Cbc0038I Rounding solution of -25.9546 is better than previous of -24.9463

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -25.9546 to -31.3865 (0.01 seconds)
Cbc0038I Round again with cutoff of -33.7954
Cbc0038I Pass   2: suminf.    0.32877 (1) obj. -33.7954 iterations 1
Cbc0038I Pass   3: suminf.    0.45263 (1) obj. -33.7954 iterations 1
Cbc0038I Pass   4: suminf.    1.55226 (6) obj. -33.7954 iterations 4
Cbc0038I Pass   5: suminf.    0.57838 (2) obj. -33.7954 iterations 6
Cbc0038I Pass   6: suminf.    0.96561 (4) obj. -33.7954 iterations 4
Cbc0038I Pass   7: suminf.    0.56306 (3) obj. -33.7954 iterations 5
Cbc0038I Pass   8: suminf.    0.40779 (2) obj. -33.7954 iterations 2
Cbc0038I Pass   9: suminf.    0.40779 (2) obj. -33.7954 iterations 0
Cbc0038I Pass  10: suminf.    0.59142 (2) obj. -33.7954 iterations 2
Cbc0038I Pass  11: suminf.    0.57838 (2) obj. -33.7954 iterations 1
Cbc0038I Pass  12: suminf.    0.45263 (1) obj. -33.7954 iterations 2
Cbc0038I Pass  13: suminf.    0.32877 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  14: suminf.    1.16237 (5) obj. -33.7954 iterations 6
Cbc0038I Pass  15: suminf.    0.53796 (2) obj. -33.7954 iterations 5
Cbc0038I Pass  16: suminf.    1.97244 (6) obj. -33.7954 iterations 11
Cbc0038I Pass  17: suminf.    1.42816 (4) obj. -33.7954 iterations 4
Cbc0038I Pass  18: suminf.    0.79158 (3) obj. -33.7954 iterations 2
Cbc0038I Pass  19: suminf.    0.38120 (2) obj. -33.7954 iterations 5
Cbc0038I Pass  20: suminf.    0.28889 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  21: suminf.    0.27236 (1) obj. -33.7954 iterations 1
Cbc0038I Pass  22: suminf.    1.25444 (4) obj. -33.7954 iterations 6
Cbc0038I Pass  23: suminf.    0.86500 (5) obj. -33.7954 iterations 5
Cbc0038I Pass  24: suminf.    0.73939 (3) obj. -33.7954 iterations 9
Cbc0038I Pass  25: suminf.    0.26316 (1) obj. -33.7954 iterations 2
Cbc0038I Pass  26: suminf.    0.26316 (1) obj. -33.7954 iterations 0
Cbc0038I Pass  27: suminf.    0.59987 (2) obj. -33.7954 iterations 2
Cbc0038I Pass  28: suminf.    0.59987 (2) obj. -33.7954 iterations 0
Cbc0038I Pass  29: suminf.    0.56240 (2) obj. -33.7954 iterations 4
Cbc0038I Pass  30: suminf.    0.55154 (2) obj. -33.7954 iterations 1
Cbc0038I Pass  31: suminf.    0.45556 (1) obj. -33.7954 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -31.3865 to -32.3948 (0.02 seconds)
Cbc0038I Round again with cutoff of -38.1314
Cbc0038I Pass  31: suminf.    0.49181 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  32: suminf.    0.58837 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  33: suminf.    0.58837 (2) obj. -38.1314 iterations 0
Cbc0038I Pass  34: suminf.    0.56740 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  35: suminf.    1.87884 (8) obj. -38.1314 iterations 12
Cbc0038I Pass  36: suminf.    1.60725 (6) obj. -38.1314 iterations 5
Cbc0038I Pass  37: suminf.    1.84855 (6) obj. -38.1314 iterations 11
Cbc0038I Pass  38: suminf.    1.21721 (4) obj. -38.1314 iterations 3
Cbc0038I Pass  39: suminf.    0.90864 (3) obj. -38.1314 iterations 3
Cbc0038I Pass  40: suminf.    0.80708 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  41: suminf.    0.80399 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  42: suminf.    0.78889 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  43: suminf.    0.80399 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  44: suminf.    1.85735 (7) obj. -38.1314 iterations 14
Cbc0038I Pass  45: suminf.    1.68299 (5) obj. -38.1314 iterations 2
Cbc0038I Pass  46: suminf.    1.67476 (6) obj. -38.1314 iterations 1
Cbc0038I Pass  47: suminf.    0.53430 (2) obj. -38.1314 iterations 9
Cbc0038I Pass  48: suminf.    0.47276 (2) obj. -38.1314 iterations 3
Cbc0038I Pass  49: suminf.    0.64897 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  50: suminf.    0.63999 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  51: suminf.    1.00034 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  52: suminf.    1.00034 (3) obj. -38.1314 iterations 0
Cbc0038I Pass  53: suminf.    0.89616 (2) obj. -38.1314 iterations 1
Cbc0038I Pass  54: suminf.    2.08430 (9) obj. -38.1314 iterations 9
Cbc0038I Pass  55: suminf.    1.36601 (6) obj. -38.1314 iterations 4
Cbc0038I Pass  56: suminf.    0.84569 (4) obj. -38.1314 iterations 7
Cbc0038I Pass  57: suminf.    0.84023 (3) obj. -38.1314 iterations 1
Cbc0038I Pass  58: suminf.    0.67294 (2) obj. -38.1314 iterations 2
Cbc0038I Pass  59: suminf.    0.84023 (3) obj. -38.1314 iterations 2
Cbc0038I Pass  60: suminf.    1.04967 (3) obj. -38.1314 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -32.3948 - took 0.03 seconds
Cbc0012I Integer solution of -32.39482 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 46 rows 26 columns, reduced to 17 rows 12 columns
Cbc0031I 5 added rows had average density of 20
Cbc0013I At root node, 5 cuts changed objective from -55.475077 to -41.960408 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 571 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 649 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0012I Integer solution of -32.88862 found by rounding after 1723 iterations and 4 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -32.88861999999999, took 1726 iterations and 4 nodes (0.18 seconds)
Cbc0032I Strong branching done 44 times (346 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 48 (-15) columns and 397 (-252) elements
Clp1000I sum of infeasibilities 3.23739e-09 - average 7.1942e-11, 18 fixed columns
Coin0506I Presolve 18 (-27) rows, 19 (-29) columns and 87 (-310) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 0.1321606 - largest nonzero change 2.7816565e-05 ( 0.0025228206%) - largest zero change 0
Clp0000I Optimal - objective value 69.823443
Clp0000I Optimal - objective value 69.823443
Coin0511I After Postsolve, objective 69.823443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15029936 - largest nonzero change 0 ( 0%) - largest zero change 2.997959e-05
Clp0000I Optimal - objective value 69.823443
Clp0000I Optimal - objective value 69.823443
Clp0000I Optimal - objective value 69.823443
Coin0511I After Postsolve, objective 69.823443, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.82344322 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 48 columns (48 integer (48 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.226%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.69518
Cbc0038I Pass   1: suminf.    0.26307 (4) obj. -11.5067 iterations 19
Cbc0038I Pass   2: suminf.    0.26307 (4) obj. -11.5067 iterations 1
Cbc0038I Solution found of -1.31811
Cbc0038I Rounding solution of -10.3181 is better than previous of -1.31811

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 22 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -10.3181 to -24.1822 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.6008
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.73470 (9) obj. -27.6008 iterations 9
Cbc0038I Pass   4: suminf.    1.73470 (9) obj. -27.6008 iterations 1
Cbc0038I Pass   5: suminf.    0.50755 (3) obj. -28.0744 iterations 7
Cbc0038I Pass   6: suminf.    0.48773 (3) obj. -27.6008 iterations 1
Cbc0038I Pass   7: suminf.    0.63656 (2) obj. -27.6008 iterations 3
Cbc0038I Pass   8: suminf.    0.63656 (2) obj. -27.6008 iterations 0
Cbc0038I Pass   9: suminf.    0.45263 (1) obj. -34.1293 iterations 2
Cbc0038I Pass  10: suminf.    0.21008 (1) obj. -27.6008 iterations 1
Cbc0038I Pass  11: suminf.    0.82059 (7) obj. -27.6008 iterations 9
Cbc0038I Pass  12: suminf.    0.82059 (7) obj. -27.6008 iterations 1
Cbc0038I Pass  13: suminf.    0.80252 (3) obj. -27.6008 iterations 8
Cbc0038I Pass  14: suminf.    0.60592 (2) obj. -27.6008 iterations 1
Cbc0038I Pass  15: suminf.    0.68974 (2) obj. -27.6008 iterations 1
Cbc0038I Pass  16: suminf.    2.15470 (9) obj. -27.6008 iterations 15
Cbc0038I Pass  17: suminf.    2.10271 (8) obj. -27.6008 iterations 3
Cbc0038I Pass  18: suminf.    0.48871 (2) obj. -32.4665 iterations 10
Cbc0038I Pass  19: suminf.    0.27921 (2) obj. -31.134 iterations 2
Cbc0038I Pass  20: suminf.    0.62946 (2) obj. -27.6008 iterations 2
Cbc0038I Pass  21: suminf.    0.19745 (2) obj. -27.6008 iterations 2
Cbc0038I Pass  22: suminf.    0.60037 (2) obj. -27.6008 iterations 3
Cbc0038I Pass  23: suminf.    0.49791 (2) obj. -27.6008 iterations 3
Cbc0038I Pass  24: suminf.    0.50214 (2) obj. -27.6008 iterations 2
Cbc0038I Pass  25: suminf.    1.06582 (5) obj. -27.6008 iterations 17
Cbc0038I Pass  26: suminf.    0.94054 (5) obj. -31.1165 iterations 3
Cbc0038I Pass  27: suminf.    0.84267 (3) obj. -27.6008 iterations 9
Cbc0038I Pass  28: suminf.    0.84267 (3) obj. -27.6008 iterations 2
Cbc0038I Pass  29: suminf.    0.74919 (2) obj. -27.6008 iterations 3
Cbc0038I Pass  30: suminf.    0.55336 (2) obj. -27.6008 iterations 2
Cbc0038I Pass  31: suminf.    1.77705 (8) obj. -27.6008 iterations 8
Cbc0038I Pass  32: suminf.    1.69368 (7) obj. -35.8851 iterations 1
Cbc0038I Rounding solution of -25.9547 is better than previous of -24.1822

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -25.9547 to -32.8886 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.9842
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.29816 (9) obj. -37.9842 iterations 0
Cbc0038I Pass  33: suminf.    2.29816 (9) obj. -37.9842 iterations 1
Cbc0038I Pass  34: suminf.    1.13448 (4) obj. -37.9842 iterations 12
Cbc0038I Pass  35: suminf.    1.07727 (5) obj. -37.9842 iterations 2
Cbc0038I Pass  36: suminf.    0.72852 (2) obj. -38.9671 iterations 5
Cbc0038I Pass  37: suminf.    0.68409 (2) obj. -37.9842 iterations 1
Cbc0038I Pass  38: suminf.    0.83260 (2) obj. -37.9842 iterations 1
Cbc0038I Pass  39: suminf.    4.21329 (18) obj. -37.9842 iterations 17
Cbc0038I Pass  40: suminf.    2.71848 (15) obj. -37.9842 iterations 6
Cbc0038I Pass  41: suminf.    2.39369 (14) obj. -37.9842 iterations 1
Cbc0038I Pass  42: suminf.    1.90457 (5) obj. -37.9842 iterations 25
Cbc0038I Pass  43: suminf.    1.90457 (5) obj. -37.9842 iterations 0
Cbc0038I Pass  44: suminf.    1.45811 (5) obj. -37.9842 iterations 7
Cbc0038I Pass  45: suminf.    1.37277 (5) obj. -37.9842 iterations 2
Cbc0038I Pass  46: suminf.    1.37277 (5) obj. -37.9842 iterations 0
Cbc0038I Pass  47: suminf.    1.90457 (5) obj. -37.9842 iterations 3
Cbc0038I Pass  48: suminf.    1.90457 (5) obj. -37.9842 iterations 0
Cbc0038I Pass  49: suminf.    1.45811 (5) obj. -37.9842 iterations 7
Cbc0038I Pass  50: suminf.    1.37277 (5) obj. -37.9842 iterations 2
Cbc0038I Pass  51: suminf.    1.37277 (5) obj. -37.9842 iterations 0
Cbc0038I Pass  52: suminf.    1.90457 (5) obj. -37.9842 iterations 3
Cbc0038I Pass  53: suminf.    1.90457 (5) obj. -37.9842 iterations 0
Cbc0038I Pass  54: suminf.    1.45811 (5) obj. -37.9842 iterations 7
Cbc0038I Pass  55: suminf.    1.37277 (5) obj. -37.9842 iterations 2
Cbc0038I Pass  56: suminf.    1.37277 (5) obj. -37.9842 iterations 0
Cbc0038I Pass  57: suminf.    1.90457 (5) obj. -37.9842 iterations 3
Cbc0038I Pass  58: suminf.    1.90457 (5) obj. -37.9842 iterations 0
Cbc0038I Pass  59: suminf.    1.45811 (5) obj. -37.9842 iterations 7
Cbc0038I Pass  60: suminf.    1.37277 (5) obj. -37.9842 iterations 2
Cbc0038I Pass  61: suminf.    1.37277 (5) obj. -37.9842 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.8886 - took 0.03 seconds
Cbc0012I Integer solution of -32.88862 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 43 rows 48 columns, reduced to 5 rows 5 columns
Cbc0031I 21 added rows had average density of 16.809524
Cbc0013I At root node, 21 cuts changed objective from -58.366366 to -34.858408 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2140 row cuts average 3.2 elements, 10 column cuts (10 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 571 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 94 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 131 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 53 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 227 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 75 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.726 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.88862 best solution, best possible -34.858408 (1.55 seconds)
Cbc0001I Search completed - best objective -32.88861999999999, took 2318 iterations and 8 nodes (2.09 seconds)
Cbc0032I Strong branching done 156 times (1799 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       2.09

