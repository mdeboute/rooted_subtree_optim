Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-23) rows, 17 (-8) columns and 79 (-56) elements
Clp1000I sum of infeasibilities 2.83484e-06 - average 1.09032e-07, 10 fixed columns
Coin0506I Presolve 4 (-22) rows, 5 (-12) columns and 10 (-69) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Coin0511I After Postsolve, objective 8031.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Coin0511I After Postsolve, objective 8031.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8031.657005 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 17 columns (16 integer (16 of which binary)) and 80 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.891%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.669242
Cbc0038I Pass   1: suminf.    0.66924 (2) obj. -7943.58 iterations 2
Cbc0038I Solution found of -3248.98
Cbc0038I Relaxing continuous gives -3248.98
Cbc0038I Rounding solution of -3660.39 is better than previous of -3248.98

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -4088.71
Cbc0038I Pass   2: suminf.    0.66924 (2) obj. -7943.58 iterations 0
Cbc0038I Pass   3: suminf.    0.15074 (1) obj. -4088.71 iterations 2
Cbc0038I Pass   4: suminf.    0.15951 (1) obj. -7931.18 iterations 1
Cbc0038I Pass   5: suminf.    0.06227 (2) obj. -4088.71 iterations 5
Cbc0038I Pass   6: suminf.    0.06227 (2) obj. -4088.71 iterations 1
Cbc0038I Pass   7: suminf.    0.34854 (1) obj. -7154.45 iterations 2
Cbc0038I Pass   8: suminf.    0.10114 (1) obj. -4088.71 iterations 1
Cbc0038I Pass   9: suminf.    0.92992 (2) obj. -6237.29 iterations 2
Cbc0038I Pass  10: suminf.    0.10114 (1) obj. -4088.71 iterations 2
Cbc0038I Pass  11: suminf.    0.36219 (1) obj. -4088.71 iterations 3
Cbc0038I Pass  12: suminf.    0.36219 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  13: suminf.    0.24122 (1) obj. -6298.02 iterations 1
Cbc0038I Pass  14: suminf.    0.22659 (1) obj. -6371.22 iterations 1
Cbc0038I Pass  15: suminf.    0.36369 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  16: suminf.    0.22659 (1) obj. -6371.22 iterations 1
Cbc0038I Pass  17: suminf.    0.17415 (1) obj. -7857.98 iterations 5
Cbc0038I Pass  18: suminf.    0.17415 (1) obj. -7857.98 iterations 1
Cbc0038I Pass  19: suminf.    0.14924 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  20: suminf.    0.53520 (2) obj. -4088.71 iterations 4
Cbc0038I Pass  21: suminf.    0.53520 (2) obj. -4088.71 iterations 0
Cbc0038I Pass  22: suminf.    0.26073 (1) obj. -6725.13 iterations 2
Cbc0038I Pass  23: suminf.    0.26601 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  24: suminf.    0.51200 (3) obj. -4088.71 iterations 3
Cbc0038I Pass  25: suminf.    0.51200 (3) obj. -4088.71 iterations 0
Cbc0038I Pass  26: suminf.    0.27659 (1) obj. -6823.68 iterations 3
Cbc0038I Pass  27: suminf.    0.23247 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  28: suminf.    0.51232 (3) obj. -4088.71 iterations 2
Cbc0038I Pass  29: suminf.    0.51232 (3) obj. -4088.71 iterations 0
Cbc0038I Pass  30: suminf.    0.13024 (1) obj. -7638.37 iterations 3
Cbc0038I Pass  31: suminf.    0.23257 (1) obj. -4088.71 iterations 1
Cbc0038I Rounding solution of -3936.13 is better than previous of -3660.39

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 17 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3936.13 to -6757.14 (0.01 seconds)
Cbc0038I Round again with cutoff of -6994.43
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.66924 (2) obj. -7943.58 iterations 0
Cbc0038I Pass  32: suminf.    0.32767 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  33: suminf.    0.15951 (1) obj. -7931.18 iterations 1
Cbc0038I Pass  34: suminf.    0.32415 (1) obj. -7317.42 iterations 3
Cbc0038I Pass  35: suminf.    0.38213 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  36: suminf.    0.32415 (1) obj. -7317.42 iterations 1
Cbc0038I Pass  37: suminf.    0.73781 (2) obj. -6994.43 iterations 3
Cbc0038I Pass  38: suminf.    0.32415 (1) obj. -7317.42 iterations 3
Cbc0038I Pass  39: suminf.    0.11439 (1) obj. -7539.82 iterations 5
Cbc0038I Pass  40: suminf.    0.21229 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  41: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  42: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  43: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  44: suminf.    0.70764 (2) obj. -6994.43 iterations 4
Cbc0038I Pass  45: suminf.    0.70764 (2) obj. -6994.43 iterations 0
Cbc0038I Pass  46: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  47: suminf.    0.17537 (1) obj. -7200.14 iterations 1
Cbc0038I Pass  48: suminf.    0.44145 (3) obj. -6994.43 iterations 5
Cbc0038I Pass  49: suminf.    0.44145 (3) obj. -6994.43 iterations 1
Cbc0038I Pass  50: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  51: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  52: suminf.    0.70764 (2) obj. -6994.43 iterations 4
Cbc0038I Pass  53: suminf.    0.70764 (2) obj. -6994.43 iterations 0
Cbc0038I Pass  54: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  55: suminf.    0.17537 (1) obj. -7200.14 iterations 1
Cbc0038I Pass  56: suminf.    0.19366 (1) obj. -7291.37 iterations 4
Cbc0038I Pass  57: suminf.    0.19366 (1) obj. -7291.37 iterations 2
Cbc0038I Pass  58: suminf.    0.24696 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  59: suminf.    0.88838 (3) obj. -6994.43 iterations 2
Cbc0038I Pass  60: suminf.    0.58546 (2) obj. -6994.43 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 17 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -6757.14 - took 0.02 seconds
Cbc0012I Integer solution of -6757.14 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 26 rows 17 columns, reduced to 2 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7943.5768 to -6753.465 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6757.140000000001, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 42 (-4) columns and 321 (-67) elements
Clp1000I sum of infeasibilities 0 - average 0, 39 fixed columns
Coin0506I Presolve 3 (-33) rows, 3 (-39) columns and 7 (-314) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 7988.657
Clp0000I Optimal - objective value 7988.657
Coin0511I After Postsolve, objective 7988.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0816741 - largest nonzero change 0 ( 0%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 8122.1501
Clp0000I Optimal - objective value 8122.1501
Clp0000I Optimal - objective value 8122.1501
Coin0511I After Postsolve, objective 8122.1501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8122.150093 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 41 columns (41 integer (41 of which binary)) and 317 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 2.42874
Cbc0038I Pass   1: suminf.    0.66760 (5) obj. -7216.8 iterations 8
Cbc0038I Pass   2: suminf.    0.66760 (5) obj. -7216.8 iterations 1
Cbc0038I Solution found of -1837.38
Cbc0038I Rounding solution of -2240.46 is better than previous of -1837.38

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -2240.46 to -3248.98 (0.01 seconds)
Cbc0038I Round again with cutoff of -3727.76
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.66760 (5) obj. -7216.8 iterations 0
Cbc0038I Pass   4: suminf.    0.66760 (5) obj. -7216.8 iterations 2
Cbc0038I Pass   5: suminf.    0.33934 (1) obj. -3727.76 iterations 5
Cbc0038I Pass   6: suminf.    0.03756 (1) obj. -7198.94 iterations 1
Cbc0038I Pass   7: suminf.    1.36886 (8) obj. -7624.75 iterations 9
Cbc0038I Pass   8: suminf.    1.32850 (7) obj. -7624.55 iterations 1
Cbc0038I Pass   9: suminf.    0.08648 (1) obj. -3727.76 iterations 7
Cbc0038I Pass  10: suminf.    0.22049 (1) obj. -7588.49 iterations 1
Cbc0038I Pass  11: suminf.    0.22354 (2) obj. -6838.14 iterations 7
Cbc0038I Pass  12: suminf.    0.22354 (2) obj. -6838.14 iterations 2
Cbc0038I Pass  13: suminf.    0.34329 (1) obj. -3727.76 iterations 2
Cbc0038I Pass  14: suminf.    0.09854 (1) obj. -6837.26 iterations 1
Cbc0038I Pass  15: suminf.    0.35296 (3) obj. -5645.74 iterations 6
Cbc0038I Pass  16: suminf.    0.17805 (2) obj. -5709.56 iterations 2
Cbc0038I Pass  17: suminf.    0.43283 (1) obj. -3727.76 iterations 2
Cbc0038I Pass  18: suminf.    0.07805 (1) obj. -5704.16 iterations 1
Cbc0038I Pass  19: suminf.    1.67216 (6) obj. -3727.76 iterations 7
Cbc0038I Pass  20: suminf.    0.41331 (4) obj. -5711.22 iterations 4
Cbc0038I Pass  21: suminf.    1.74717 (7) obj. -3727.76 iterations 8
Cbc0038I Pass  22: suminf.    0.49664 (5) obj. -5692.8 iterations 5
Cbc0038I Pass  23: suminf.    0.42870 (1) obj. -3727.76 iterations 5
Cbc0038I Pass  24: suminf.    0.07805 (1) obj. -5681.16 iterations 1
Cbc0038I Pass  25: suminf.    1.72506 (7) obj. -3727.76 iterations 14
Cbc0038I Pass  26: suminf.    0.56431 (5) obj. -5292.82 iterations 5
Cbc0038I Pass  27: suminf.    0.42888 (1) obj. -3727.76 iterations 5
Cbc0038I Pass  28: suminf.    0.15122 (1) obj. -5274.54 iterations 1
Cbc0038I Pass  29: suminf.    0.35530 (2) obj. -5893.95 iterations 12
Cbc0038I Pass  30: suminf.    0.35530 (2) obj. -5893.95 iterations 3
Cbc0038I Pass  31: suminf.    0.34693 (1) obj. -3727.76 iterations 2
Cbc0038I Pass  32: suminf.    0.26439 (1) obj. -5893.05 iterations 1
Cbc0038I Rounding solution of -3660.39 is better than previous of -3248.98

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -3660.39 to -5718.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -6181.85
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.66760 (5) obj. -7216.8 iterations 0
Cbc0038I Pass  33: suminf.    0.66760 (5) obj. -7216.8 iterations 2
Cbc0038I Pass  34: suminf.    0.22014 (1) obj. -6181.85 iterations 5
Cbc0038I Pass  35: suminf.    0.03756 (1) obj. -7198.94 iterations 1
Cbc0038I Pass  36: suminf.    1.37756 (8) obj. -6181.85 iterations 7
Cbc0038I Pass  37: suminf.    0.32644 (4) obj. -7121.64 iterations 5
Cbc0038I Pass  38: suminf.    0.21894 (1) obj. -6181.85 iterations 4
Cbc0038I Pass  39: suminf.    0.05220 (1) obj. -7110.74 iterations 1
Cbc0038I Pass  40: suminf.    0.38945 (3) obj. -6292.36 iterations 5
Cbc0038I Pass  41: suminf.    0.21724 (1) obj. -6181.85 iterations 3
Cbc0038I Pass  42: suminf.    0.19854 (1) obj. -6286.05 iterations 1
Cbc0038I Pass  43: suminf.    0.94710 (4) obj. -6181.85 iterations 11
Cbc0038I Pass  44: suminf.    0.19141 (2) obj. -7188.64 iterations 5
Cbc0038I Pass  45: suminf.    0.21798 (1) obj. -6181.85 iterations 2
Cbc0038I Pass  46: suminf.    0.03756 (1) obj. -7186.94 iterations 1
Cbc0038I Pass  47: suminf.    0.15115 (2) obj. -6899.56 iterations 4
Cbc0038I Pass  48: suminf.    0.15115 (2) obj. -6899.56 iterations 0
Cbc0038I Pass  49: suminf.    0.13544 (1) obj. -6181.85 iterations 2
Cbc0038I Pass  50: suminf.    0.00829 (1) obj. -6890.13 iterations 1
Cbc0038I Pass  51: suminf.    0.25651 (3) obj. -7130.58 iterations 6
Cbc0038I Pass  52: suminf.    0.19141 (2) obj. -7186.64 iterations 2
Cbc0038I Pass  53: suminf.    0.21762 (1) obj. -6181.85 iterations 2
Cbc0038I Pass  54: suminf.    0.03756 (1) obj. -7184.94 iterations 1
Cbc0038I Pass  55: suminf.    0.46567 (4) obj. -6814.54 iterations 7
Cbc0038I Pass  56: suminf.    0.46567 (4) obj. -6814.54 iterations 0
Cbc0038I Pass  57: suminf.    0.17828 (1) obj. -6181.85 iterations 4
Cbc0038I Pass  58: suminf.    0.06805 (1) obj. -6795.91 iterations 1
Cbc0038I Pass  59: suminf.    0.12902 (2) obj. -6814.85 iterations 2
Cbc0038I Pass  60: suminf.    0.06805 (1) obj. -6795.91 iterations 2
Cbc0038I Pass  61: suminf.    0.53607 (3) obj. -6181.85 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -5718.1 to -6757.14 (0.03 seconds)
Cbc0038I Round again with cutoff of -7141.05
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.66760 (5) obj. -7216.8 iterations 0
Cbc0038I Pass  62: suminf.    0.66760 (5) obj. -7216.8 iterations 2
Cbc0038I Pass  63: suminf.    0.04795 (1) obj. -7141.05 iterations 5
Cbc0038I Pass  64: suminf.    0.03756 (1) obj. -7198.94 iterations 1
Cbc0038I Pass  65: suminf.    0.77783 (9) obj. -7141.05 iterations 6
Cbc0038I Pass  66: suminf.    0.33426 (3) obj. -7206.06 iterations 2
Cbc0038I Pass  67: suminf.    0.04724 (1) obj. -7141.05 iterations 3
Cbc0038I Pass  68: suminf.    0.03756 (1) obj. -7194.94 iterations 1
Cbc0038I Pass  69: suminf.    0.47877 (10) obj. -7141.05 iterations 12
Cbc0038I Pass  70: suminf.    0.46798 (9) obj. -7141.05 iterations 3
Cbc0038I Pass  71: suminf.    0.29602 (1) obj. -7141.05 iterations 12
Cbc0038I Pass  72: suminf.    0.17415 (1) obj. -7819.98 iterations 1
Cbc0038I Pass  73: suminf.    0.49410 (6) obj. -7141.05 iterations 7
Cbc0038I Pass  74: suminf.    0.49410 (6) obj. -7141.05 iterations 0
Cbc0038I Pass  75: suminf.    0.76925 (8) obj. -7141.05 iterations 3
Cbc0038I Pass  76: suminf.    0.76925 (8) obj. -7141.05 iterations 0
Cbc0038I Pass  77: suminf.    0.29656 (1) obj. -7141.05 iterations 11
Cbc0038I Pass  78: suminf.    0.17415 (1) obj. -7822.98 iterations 1
Cbc0038I Pass  79: suminf.    0.81750 (4) obj. -7412.25 iterations 8
Cbc0038I Pass  80: suminf.    0.80769 (3) obj. -7412.17 iterations 4
Cbc0038I Pass  81: suminf.    0.21473 (1) obj. -7141.05 iterations 3
Cbc0038I Pass  82: suminf.    0.16667 (1) obj. -7408.79 iterations 1
Cbc0038I Pass  83: suminf.    1.77029 (8) obj. -7141.05 iterations 10
Cbc0038I Pass  84: suminf.    1.17202 (6) obj. -7174.04 iterations 2
Cbc0038I Pass  85: suminf.    0.22373 (2) obj. -7141.05 iterations 6
Cbc0038I Pass  86: suminf.    0.22373 (2) obj. -7141.05 iterations 0
Cbc0038I Pass  87: suminf.    0.21760 (1) obj. -7141.05 iterations 4
Cbc0038I Pass  88: suminf.    0.16667 (1) obj. -7424.79 iterations 1
Cbc0038I Pass  89: suminf.    0.47619 (3) obj. -7446.31 iterations 2
Cbc0038I Pass  90: suminf.    0.30952 (2) obj. -7443.64 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 41 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -6757.14 - took 0.03 seconds
Cbc0012I Integer solution of -6757.14 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 41 columns, reduced to 13 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -8036.8327 to -8036.8327 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6757.140000000001, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-23) rows, 17 (-8) columns and 79 (-56) elements
Clp1000I sum of infeasibilities 2.83484e-06 - average 1.09032e-07, 10 fixed columns
Coin0506I Presolve 4 (-22) rows, 5 (-12) columns and 10 (-69) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Coin0511I After Postsolve, objective 8031.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Clp0000I Optimal - objective value 8031.657
Coin0511I After Postsolve, objective 8031.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8031.657005 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 17 columns (16 integer (16 of which binary)) and 80 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.891%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.669242
Cbc0038I Pass   1: suminf.    0.66924 (2) obj. -7943.58 iterations 2
Cbc0038I Solution found of -3248.98
Cbc0038I Relaxing continuous gives -3248.98
Cbc0038I Rounding solution of -3660.39 is better than previous of -3248.98

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -4088.71
Cbc0038I Pass   2: suminf.    0.66924 (2) obj. -7943.58 iterations 0
Cbc0038I Pass   3: suminf.    0.15074 (1) obj. -4088.71 iterations 2
Cbc0038I Pass   4: suminf.    0.15951 (1) obj. -7931.18 iterations 1
Cbc0038I Pass   5: suminf.    0.06227 (2) obj. -4088.71 iterations 5
Cbc0038I Pass   6: suminf.    0.06227 (2) obj. -4088.71 iterations 1
Cbc0038I Pass   7: suminf.    0.34854 (1) obj. -7154.45 iterations 2
Cbc0038I Pass   8: suminf.    0.10114 (1) obj. -4088.71 iterations 1
Cbc0038I Pass   9: suminf.    0.92992 (2) obj. -6237.29 iterations 2
Cbc0038I Pass  10: suminf.    0.10114 (1) obj. -4088.71 iterations 2
Cbc0038I Pass  11: suminf.    0.36219 (1) obj. -4088.71 iterations 3
Cbc0038I Pass  12: suminf.    0.36219 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  13: suminf.    0.24122 (1) obj. -6298.02 iterations 1
Cbc0038I Pass  14: suminf.    0.22659 (1) obj. -6371.22 iterations 1
Cbc0038I Pass  15: suminf.    0.36369 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  16: suminf.    0.22659 (1) obj. -6371.22 iterations 1
Cbc0038I Pass  17: suminf.    0.17415 (1) obj. -7857.98 iterations 5
Cbc0038I Pass  18: suminf.    0.17415 (1) obj. -7857.98 iterations 1
Cbc0038I Pass  19: suminf.    0.14924 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  20: suminf.    0.53520 (2) obj. -4088.71 iterations 4
Cbc0038I Pass  21: suminf.    0.53520 (2) obj. -4088.71 iterations 0
Cbc0038I Pass  22: suminf.    0.26073 (1) obj. -6725.13 iterations 2
Cbc0038I Pass  23: suminf.    0.26601 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  24: suminf.    0.51200 (3) obj. -4088.71 iterations 3
Cbc0038I Pass  25: suminf.    0.51200 (3) obj. -4088.71 iterations 0
Cbc0038I Pass  26: suminf.    0.27659 (1) obj. -6823.68 iterations 3
Cbc0038I Pass  27: suminf.    0.23247 (1) obj. -4088.71 iterations 1
Cbc0038I Pass  28: suminf.    0.51232 (3) obj. -4088.71 iterations 2
Cbc0038I Pass  29: suminf.    0.51232 (3) obj. -4088.71 iterations 0
Cbc0038I Pass  30: suminf.    0.13024 (1) obj. -7638.37 iterations 3
Cbc0038I Pass  31: suminf.    0.23257 (1) obj. -4088.71 iterations 1
Cbc0038I Rounding solution of -3936.13 is better than previous of -3660.39

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 17 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -3936.13 to -6757.14 (0.01 seconds)
Cbc0038I Round again with cutoff of -6994.43
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.66924 (2) obj. -7943.58 iterations 0
Cbc0038I Pass  32: suminf.    0.32767 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  33: suminf.    0.15951 (1) obj. -7931.18 iterations 1
Cbc0038I Pass  34: suminf.    0.32415 (1) obj. -7317.42 iterations 3
Cbc0038I Pass  35: suminf.    0.38213 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  36: suminf.    0.32415 (1) obj. -7317.42 iterations 1
Cbc0038I Pass  37: suminf.    0.73781 (2) obj. -6994.43 iterations 3
Cbc0038I Pass  38: suminf.    0.32415 (1) obj. -7317.42 iterations 3
Cbc0038I Pass  39: suminf.    0.11439 (1) obj. -7539.82 iterations 5
Cbc0038I Pass  40: suminf.    0.21229 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  41: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  42: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  43: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  44: suminf.    0.70764 (2) obj. -6994.43 iterations 4
Cbc0038I Pass  45: suminf.    0.70764 (2) obj. -6994.43 iterations 0
Cbc0038I Pass  46: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  47: suminf.    0.17537 (1) obj. -7200.14 iterations 1
Cbc0038I Pass  48: suminf.    0.44145 (3) obj. -6994.43 iterations 5
Cbc0038I Pass  49: suminf.    0.44145 (3) obj. -6994.43 iterations 1
Cbc0038I Pass  50: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  51: suminf.    0.11439 (1) obj. -7539.82 iterations 1
Cbc0038I Pass  52: suminf.    0.70764 (2) obj. -6994.43 iterations 4
Cbc0038I Pass  53: suminf.    0.70764 (2) obj. -6994.43 iterations 0
Cbc0038I Pass  54: suminf.    0.21229 (1) obj. -6994.43 iterations 2
Cbc0038I Pass  55: suminf.    0.17537 (1) obj. -7200.14 iterations 1
Cbc0038I Pass  56: suminf.    0.19366 (1) obj. -7291.37 iterations 4
Cbc0038I Pass  57: suminf.    0.19366 (1) obj. -7291.37 iterations 2
Cbc0038I Pass  58: suminf.    0.24696 (1) obj. -6994.43 iterations 1
Cbc0038I Pass  59: suminf.    0.88838 (3) obj. -6994.43 iterations 2
Cbc0038I Pass  60: suminf.    0.58546 (2) obj. -6994.43 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 17 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -6757.14 - took 0.02 seconds
Cbc0012I Integer solution of -6757.14 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 26 rows 17 columns, reduced to 2 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7943.5768 to -6753.465 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6757.140000000001, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 37 (-10) columns and 232 (-157) elements
Clp1000I sum of infeasibilities 7.67661e-11 - average 2.47633e-12, 34 fixed columns
Coin0506I Presolve 3 (-28) rows, 3 (-34) columns and 7 (-225) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 7988.657
Clp0000I Optimal - objective value 7988.657
Coin0511I After Postsolve, objective 7988.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3756349 - largest nonzero change 0 ( 0%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value 8122.1501
Clp0000I Optimal - objective value 8122.1501
Clp0000I Optimal - objective value 8122.1501
Coin0511I After Postsolve, objective 8122.1501, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8122.150093 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 37 columns (37 integer (37 of which binary)) and 239 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.036%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.85547
Cbc0038I Pass   1: suminf.    0.43049 (4) obj. -7213.08 iterations 16
Cbc0038I Pass   2: suminf.    0.43049 (4) obj. -7213.08 iterations 1
Cbc0038I Solution found of -1837.38
Cbc0038I Rounding solution of -2240.46 is better than previous of -1837.38

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -2240.46 to -3248.98 (0.01 seconds)
Cbc0038I Round again with cutoff of -3695.69
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.43049 (4) obj. -7213.08 iterations 0
Cbc0038I Pass   4: suminf.    0.43049 (4) obj. -7213.08 iterations 2
Cbc0038I Pass   5: suminf.    0.33358 (1) obj. -3695.69 iterations 6
Cbc0038I Pass   6: suminf.    0.03756 (1) obj. -7198.94 iterations 1
Cbc0038I Pass   7: suminf.    0.45345 (3) obj. -5650.68 iterations 9
Cbc0038I Pass   8: suminf.    0.18115 (2) obj. -5648.77 iterations 2
Cbc0038I Pass   9: suminf.    0.44002 (1) obj. -3695.69 iterations 2
Cbc0038I Pass  10: suminf.    0.09024 (1) obj. -5644.23 iterations 1
Cbc0038I Pass  11: suminf.    0.40041 (2) obj. -5638.78 iterations 3
Cbc0038I Pass  12: suminf.    0.09024 (1) obj. -5637.23 iterations 1
Cbc0038I Pass  13: suminf.    0.43876 (1) obj. -3695.69 iterations 1
Cbc0038I Pass  14: suminf.    2.55806 (8) obj. -3695.69 iterations 12
Cbc0038I Pass  15: suminf.    0.20732 (1) obj. -4530.73 iterations 4
Cbc0038I Pass  16: suminf.    0.20732 (1) obj. -4530.73 iterations 0
Cbc0038I Pass  17: suminf.    0.35721 (1) obj. -3695.69 iterations 1
Cbc0038I Pass  18: suminf.    1.46926 (6) obj. -3695.69 iterations 4
Cbc0038I Pass  19: suminf.    0.20732 (1) obj. -4532.73 iterations 2
Cbc0038I Pass  20: suminf.    0.20732 (1) obj. -4532.73 iterations 0
Cbc0038I Pass  21: suminf.    0.35757 (1) obj. -3695.69 iterations 1
Cbc0038I Pass  22: suminf.    0.89236 (2) obj. -3695.69 iterations 7
Cbc0038I Pass  23: suminf.    0.18293 (1) obj. -5167.63 iterations 3
Cbc0038I Pass  24: suminf.    0.44715 (1) obj. -3695.69 iterations 1
Cbc0038I Pass  25: suminf.    1.90786 (7) obj. -3695.69 iterations 13
Cbc0038I Pass  26: suminf.    0.89990 (5) obj. -4850.85 iterations 3
Cbc0038I Pass  27: suminf.    0.48208 (1) obj. -3695.69 iterations 5
Cbc0038I Pass  28: suminf.    0.27927 (1) obj. -4825.5 iterations 1
Cbc0038I Pass  29: suminf.    1.22522 (7) obj. -6133.57 iterations 13
Cbc0038I Pass  30: suminf.    1.04969 (6) obj. -6132.16 iterations 2
Cbc0038I Pass  31: suminf.    0.42403 (1) obj. -3695.69 iterations 8
Cbc0038I Pass  32: suminf.    0.14244 (1) obj. -6110.83 iterations 1
Cbc0038I Rounding solution of -4434.71 is better than previous of -3248.98

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 22 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -4434.71 to -5718.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -6117.7
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.43049 (4) obj. -7213.08 iterations 0
Cbc0038I Pass  33: suminf.    0.43049 (4) obj. -7213.08 iterations 2
Cbc0038I Pass  34: suminf.    0.23165 (1) obj. -6117.7 iterations 6
Cbc0038I Pass  35: suminf.    0.03756 (1) obj. -7198.94 iterations 1
Cbc0038I Pass  36: suminf.    0.87535 (4) obj. -6117.7 iterations 9
Cbc0038I Pass  37: suminf.    0.14867 (2) obj. -7171.72 iterations 4
Cbc0038I Pass  38: suminf.    0.22645 (1) obj. -6117.7 iterations 2
Cbc0038I Pass  39: suminf.    0.03756 (1) obj. -7169.94 iterations 1
Cbc0038I Pass  40: suminf.    0.18777 (3) obj. -6117.7 iterations 6
Cbc0038I Pass  41: suminf.    0.18777 (3) obj. -6117.7 iterations 0
Cbc0038I Pass  42: suminf.    0.22555 (1) obj. -6117.7 iterations 3
Cbc0038I Pass  43: suminf.    0.03756 (1) obj. -7164.94 iterations 1
Cbc0038I Pass  44: suminf.    0.11940 (2) obj. -6860.91 iterations 5
Cbc0038I Pass  45: suminf.    0.14138 (1) obj. -6117.7 iterations 2
Cbc0038I Pass  46: suminf.    0.00829 (1) obj. -6859.13 iterations 1
Cbc0038I Pass  47: suminf.    0.57457 (8) obj. -6117.7 iterations 11
Cbc0038I Pass  48: suminf.    0.20641 (3) obj. -6117.7 iterations 3
Cbc0038I Pass  49: suminf.    0.22214 (1) obj. -6117.7 iterations 3
Cbc0038I Pass  50: suminf.    0.03756 (1) obj. -7145.94 iterations 1
Cbc0038I Pass  51: suminf.    0.64417 (3) obj. -7150.27 iterations 4
Cbc0038I Pass  52: suminf.    0.22196 (1) obj. -6117.7 iterations 3
Cbc0038I Pass  53: suminf.    0.03756 (1) obj. -7144.94 iterations 1
Cbc0038I Pass  54: suminf.    1.08466 (5) obj. -6117.7 iterations 9
Cbc0038I Pass  55: suminf.    0.33049 (3) obj. -7166.18 iterations 4
Cbc0038I Pass  56: suminf.    0.22501 (1) obj. -6117.7 iterations 3
Cbc0038I Pass  57: suminf.    0.03756 (1) obj. -7161.94 iterations 1
Cbc0038I Pass  58: suminf.    0.50569 (2) obj. -6307.67 iterations 4
Cbc0038I Pass  59: suminf.    0.15341 (1) obj. -6305.9 iterations 1
Cbc0038I Pass  60: suminf.    0.18720 (1) obj. -6117.7 iterations 1
Cbc0038I Pass  61: suminf.    0.94271 (3) obj. -6117.7 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -5718.1 to -6757.14 (0.03 seconds)
Cbc0038I Round again with cutoff of -7044.83
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.43049 (4) obj. -7213.08 iterations 0
Cbc0038I Pass  62: suminf.    0.43049 (4) obj. -7213.08 iterations 2
Cbc0038I Pass  63: suminf.    0.06523 (1) obj. -7044.83 iterations 6
Cbc0038I Pass  64: suminf.    0.03756 (1) obj. -7198.94 iterations 1
Cbc0038I Pass  65: suminf.    0.57346 (3) obj. -7181.6 iterations 5
Cbc0038I Pass  66: suminf.    0.06128 (1) obj. -7044.83 iterations 3
Cbc0038I Pass  67: suminf.    0.03756 (1) obj. -7176.94 iterations 1
Cbc0038I Pass  68: suminf.    0.46235 (2) obj. -7184.82 iterations 2
Cbc0038I Pass  69: suminf.    0.06217 (1) obj. -7044.83 iterations 2
Cbc0038I Pass  70: suminf.    0.03756 (1) obj. -7181.94 iterations 1
Cbc0038I Pass  71: suminf.    0.44183 (3) obj. -7044.83 iterations 9
Cbc0038I Pass  72: suminf.    0.03756 (1) obj. -7178.94 iterations 4
Cbc0038I Pass  73: suminf.    0.06164 (1) obj. -7044.83 iterations 1
Cbc0038I Pass  74: suminf.    0.19505 (2) obj. -7078.89 iterations 9
Cbc0038I Pass  75: suminf.    0.05739 (1) obj. -7044.83 iterations 2
Cbc0038I Pass  76: suminf.    0.05220 (1) obj. -7073.74 iterations 1
Cbc0038I Pass  77: suminf.    0.39840 (5) obj. -7044.83 iterations 8
Cbc0038I Pass  78: suminf.    0.16456 (2) obj. -7055.25 iterations 4
Cbc0038I Pass  79: suminf.    0.02342 (1) obj. -7044.83 iterations 2
Cbc0038I Pass  80: suminf.    0.02171 (1) obj. -7054.4 iterations 1
Cbc0038I Pass  81: suminf.    0.70931 (5) obj. -7044.83 iterations 8
Cbc0038I Pass  82: suminf.    0.14671 (2) obj. -7061.77 iterations 5
Cbc0038I Pass  83: suminf.    0.02396 (1) obj. -7044.83 iterations 2
Cbc0038I Pass  84: suminf.    0.02171 (1) obj. -7057.4 iterations 1
Cbc0038I Pass  85: suminf.    0.16456 (2) obj. -7062.54 iterations 5
Cbc0038I Pass  86: suminf.    0.16456 (2) obj. -7062.54 iterations 2
Cbc0038I Pass  87: suminf.    0.02396 (1) obj. -7044.83 iterations 2
Cbc0038I Pass  88: suminf.    0.02171 (1) obj. -7057.4 iterations 1
Cbc0038I Pass  89: suminf.    0.29252 (4) obj. -7044.83 iterations 9
Cbc0038I Pass  90: suminf.    0.29252 (4) obj. -7044.83 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -6757.14 - took 0.02 seconds
Cbc0012I Integer solution of -6757.14 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 30 rows 37 columns, reduced to 14 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -7702.0525 to -7702.0525 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6757.140000000001, took 7 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

