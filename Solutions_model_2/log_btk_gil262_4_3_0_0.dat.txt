Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 494 (-33) rows, 256 (-8) columns and 1470 (-75) elements
Clp1000I sum of infeasibilities 1.58749e-05 - average 3.21354e-08, 96 fixed columns
Coin0506I Presolve 302 (-192) rows, 159 (-97) columns and 897 (-573) elements
Clp0029I End of values pass after 159 iterations
Clp0014I Perturbing problem by 0.001% of 2.3277775 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 228.60686
Clp0000I Optimal - objective value 228.60686
Coin0511I After Postsolve, objective 228.60686, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 228.60686
Clp0000I Optimal - objective value 228.60686
Clp0000I Optimal - objective value 228.60686
Coin0511I After Postsolve, objective 228.60686, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 228.6068642 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 494 rows, 256 columns (255 integer (255 of which binary)) and 1470 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.375%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.15877
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -73.917 iterations 104
Cbc0038I Solution found of -73.917
Cbc0038I Relaxing continuous gives -73.917
Cbc0038I Rounding solution of -135.507 is better than previous of -73.917

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 256 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -144.817
Cbc0038I Pass   2: suminf.    0.82166 (3) obj. -144.817 iterations 10
Cbc0038I Pass   3: suminf.    0.56218 (2) obj. -144.817 iterations 9
Cbc0038I Pass   4: suminf.    0.81644 (2) obj. -144.817 iterations 8
Cbc0038I Pass   5: suminf.    5.40789 (20) obj. -144.817 iterations 61
Cbc0038I Pass   6: suminf.    2.92218 (11) obj. -144.817 iterations 40
Cbc0038I Pass   7: suminf.    2.49766 (7) obj. -144.817 iterations 14
Cbc0038I Pass   8: suminf.    1.99080 (8) obj. -144.817 iterations 7
Cbc0038I Pass   9: suminf.    2.02363 (7) obj. -144.817 iterations 10
Cbc0038I Pass  10: suminf.    1.73651 (6) obj. -144.817 iterations 11
Cbc0038I Pass  11: suminf.    1.73651 (6) obj. -144.817 iterations 1
Cbc0038I Pass  12: suminf.    1.49486 (4) obj. -144.817 iterations 7
Cbc0038I Pass  13: suminf.    1.03347 (4) obj. -144.817 iterations 8
Cbc0038I Pass  14: suminf.    1.68509 (4) obj. -144.817 iterations 5
Cbc0038I Pass  15: suminf.    0.91143 (4) obj. -144.817 iterations 10
Cbc0038I Pass  16: suminf.    1.61570 (4) obj. -144.817 iterations 6
Cbc0038I Pass  17: suminf.    1.21926 (5) obj. -144.817 iterations 4
Cbc0038I Pass  18: suminf.    1.03347 (4) obj. -144.817 iterations 4
Cbc0038I Pass  19: suminf.    1.68509 (4) obj. -144.817 iterations 5
Cbc0038I Pass  20: suminf.    0.91143 (4) obj. -144.817 iterations 10
Cbc0038I Pass  21: suminf.    1.61570 (4) obj. -144.817 iterations 6
Cbc0038I Pass  22: suminf.    1.21926 (5) obj. -144.817 iterations 4
Cbc0038I Pass  23: suminf.    1.03347 (4) obj. -144.817 iterations 4
Cbc0038I Pass  24: suminf.    1.68509 (4) obj. -144.817 iterations 5
Cbc0038I Pass  25: suminf.    0.91143 (4) obj. -144.817 iterations 10
Cbc0038I Pass  26: suminf.    1.61570 (4) obj. -144.817 iterations 6
Cbc0038I Pass  27: suminf.    1.21926 (5) obj. -144.817 iterations 4
Cbc0038I Pass  28: suminf.    1.03347 (4) obj. -144.817 iterations 4
Cbc0038I Pass  29: suminf.    1.68509 (4) obj. -144.817 iterations 5
Cbc0038I Pass  30: suminf.    0.91143 (4) obj. -144.817 iterations 10
Cbc0038I Pass  31: suminf.    1.61570 (4) obj. -144.817 iterations 6
Cbc0038I Rounding solution of -143.143 is better than previous of -135.507

Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 256 columns, reduced to 103 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -143.143 to -154.078 (0.10 seconds)
Cbc0038I Round again with cutoff of -168.984
Cbc0038I Pass  31: suminf.    1.52430 (5) obj. -168.984 iterations 15
Cbc0038I Pass  32: suminf.    1.52002 (5) obj. -168.984 iterations 11
Cbc0038I Pass  33: suminf.    2.04203 (7) obj. -168.984 iterations 40
Cbc0038I Pass  34: suminf.    1.98162 (7) obj. -168.984 iterations 10
Cbc0038I Pass  35: suminf.    2.26796 (7) obj. -168.984 iterations 28
Cbc0038I Pass  36: suminf.    1.79512 (7) obj. -168.984 iterations 12
Cbc0038I Pass  37: suminf.    1.74020 (7) obj. -168.984 iterations 2
Cbc0038I Pass  38: suminf.    2.87029 (7) obj. -168.984 iterations 20
Cbc0038I Pass  39: suminf.    2.14772 (6) obj. -168.984 iterations 12
Cbc0038I Pass  40: suminf.    1.59037 (5) obj. -168.984 iterations 7
Cbc0038I Pass  41: suminf.    1.52002 (5) obj. -168.984 iterations 10
Cbc0038I Pass  42: suminf.    2.04203 (7) obj. -168.984 iterations 40
Cbc0038I Pass  43: suminf.    1.98162 (7) obj. -168.984 iterations 10
Cbc0038I Pass  44: suminf.    2.26796 (7) obj. -168.984 iterations 30
Cbc0038I Pass  45: suminf.    1.79512 (7) obj. -168.984 iterations 12
Cbc0038I Pass  46: suminf.    1.74020 (7) obj. -168.984 iterations 2
Cbc0038I Pass  47: suminf.    2.87029 (7) obj. -168.984 iterations 18
Cbc0038I Pass  48: suminf.    2.14772 (6) obj. -168.984 iterations 12
Cbc0038I Pass  49: suminf.    1.59037 (5) obj. -168.984 iterations 7
Cbc0038I Pass  50: suminf.    1.52002 (5) obj. -168.984 iterations 9
Cbc0038I Pass  51: suminf.    2.04203 (7) obj. -168.984 iterations 40
Cbc0038I Pass  52: suminf.    1.98162 (7) obj. -168.984 iterations 11
Cbc0038I Pass  53: suminf.    2.26796 (7) obj. -168.984 iterations 28
Cbc0038I Pass  54: suminf.    1.79512 (7) obj. -168.984 iterations 12
Cbc0038I Pass  55: suminf.    1.74020 (7) obj. -168.984 iterations 2
Cbc0038I Pass  56: suminf.    2.87029 (7) obj. -168.984 iterations 18
Cbc0038I Pass  57: suminf.    2.14772 (6) obj. -168.984 iterations 12
Cbc0038I Pass  58: suminf.    1.59037 (5) obj. -168.984 iterations 7
Cbc0038I Pass  59: suminf.    1.52002 (5) obj. -168.984 iterations 10
Cbc0038I Pass  60: suminf.    2.04203 (7) obj. -168.984 iterations 42
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 211 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 256 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -154.078 - took 0.11 seconds
Cbc0012I Integer solution of -154.07813 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 494 rows 256 columns, reduced to 76 rows 45 columns
Cbc0031I 28 added rows had average density of 137.5
Cbc0013I At root node, 28 cuts changed objective from -228.60686 to -205.81267 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18383 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.381 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1779 row cuts average 251.3 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.254 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 246.2 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -154.07813 best solution, best possible -205.81267 (2.68 seconds)
Cbc0038I Full problem 494 rows 256 columns, reduced to 41 rows 28 columns
Cbc0010I After 50 nodes, 9 on tree, -154.07813 best solution, best possible -205.81267 (3.39 seconds)
Cbc0038I Full problem 494 rows 256 columns, reduced to 138 rows 75 columns
Cbc0001I Search completed - best objective -154.07813, took 16817 iterations and 158 nodes (3.95 seconds)
Cbc0032I Strong branching done 1768 times (42837 iterations), fathomed 26 nodes and fixed 126 variables
Cbc0035I Maximum depth 44, 1810 variables fixed on reduced cost
Total time (CPU seconds):       3.88   (Wallclock seconds):       3.99

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 377 (-149) rows, 393 (-131) columns and 18728 (-17008) elements
Clp1000I sum of infeasibilities 4.11668e-06 - average 1.09196e-08, 95 fixed columns
Coin0506I Presolve 274 (-103) rows, 296 (-97) columns and 10497 (-8231) elements
Clp0006I 0  Obj 267.08237 Dual inf 58.077232 (291)
Clp0029I End of values pass after 296 iterations
Clp0014I Perturbing problem by 0.001% of 2.034962 - largest nonzero change 2.0902564e-05 ( 0.0014490735%) - largest zero change 2.9534641e-05
Clp0000I Optimal - objective value 289.3594
Clp0000I Optimal - objective value 289.3594
Coin0511I After Postsolve, objective 289.3594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 289.3594 Dual inf 43.267693 (1)
Clp0014I Perturbing problem by 0.001% of 2.106993 - largest nonzero change 2.2466662e-05 ( 0.0014083952%) - largest zero change 2.9597463e-05
Clp0000I Optimal - objective value 289.3594
Clp0000I Optimal - objective value 289.3594
Clp0000I Optimal - objective value 289.3594
Coin0511I After Postsolve, objective 289.3594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 289.3593985 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0004I processed model has 377 rows, 393 columns (393 integer (393 of which binary)) and 18728 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.904%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 136 integers unsatisfied sum - 6.40879
Cbc0038I Pass   1: suminf.    3.97201 (103) obj. -261.954 iterations 53
Cbc0038I Pass   2: suminf.    3.97201 (103) obj. -261.954 iterations 1
Cbc0038I Pass   3: suminf.    2.27819 (75) obj. -184.44 iterations 29
Cbc0038I Pass   4: suminf.    1.21490 (46) obj. -141.101 iterations 29
Cbc0038I Pass   5: suminf.    0.35541 (20) obj. -114.996 iterations 26
Cbc0038I Pass   6: suminf.    0.01163 (1) obj. -95.3517 iterations 19
Cbc0038I Solution found of -92.3866
Cbc0038I Rounding solution of -109.05 is better than previous of -92.3866

Cbc0038I Before mini branch and bound, 256 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 393 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -109.05 to -113.524 (0.15 seconds)
Cbc0038I Round again with cutoff of -131.09
Cbc0038I Pass   7: suminf.    3.97201 (103) obj. -261.954 iterations 0
Cbc0038I Pass   8: suminf.    3.97201 (103) obj. -261.954 iterations 1
Cbc0038I Pass   9: suminf.    2.66273 (85) obj. -200.777 iterations 23
Cbc0038I Pass  10: suminf.    1.64253 (58) obj. -153.638 iterations 27
Cbc0038I Pass  11: suminf.    1.03979 (41) obj. -136.277 iterations 17
Cbc0038I Pass  12: suminf.    0.78892 (28) obj. -131.09 iterations 15
Cbc0038I Pass  13: suminf.    0.57839 (6) obj. -131.09 iterations 55
Cbc0038I Pass  14: suminf.    1.30820 (3) obj. -131.09 iterations 31
Cbc0038I Pass  15: suminf.    1.15795 (35) obj. -131.09 iterations 12
Cbc0038I Pass  16: suminf.    1.24077 (22) obj. -131.09 iterations 48
Cbc0038I Pass  17: suminf.    0.98191 (19) obj. -131.209 iterations 7
Cbc0038I Pass  18: suminf.    0.96791 (11) obj. -131.09 iterations 54
Cbc0038I Pass  19: suminf.    0.67379 (11) obj. -131.09 iterations 17
Cbc0038I Pass  20: suminf.    1.01457 (8) obj. -131.09 iterations 21
Cbc0038I Pass  21: suminf.    0.59553 (8) obj. -131.676 iterations 26
Cbc0038I Pass  22: suminf.    1.01457 (8) obj. -131.09 iterations 17
Cbc0038I Pass  23: suminf.    2.33935 (35) obj. -131.09 iterations 66
Cbc0038I Pass  24: suminf.    2.33599 (35) obj. -131.09 iterations 15
Cbc0038I Pass  25: suminf.    0.88119 (14) obj. -131.09 iterations 37
Cbc0038I Pass  26: suminf.    0.88119 (14) obj. -131.09 iterations 0
Cbc0038I Pass  27: suminf.    1.01457 (8) obj. -131.09 iterations 21
Cbc0038I Pass  28: suminf.    0.59553 (8) obj. -131.676 iterations 24
Cbc0038I Pass  29: suminf.    1.01457 (8) obj. -131.09 iterations 17
Cbc0038I Pass  30: suminf.    1.86359 (31) obj. -131.09 iterations 67
Cbc0038I Pass  31: suminf.    1.82816 (30) obj. -131.09 iterations 8
Cbc0038I Pass  32: suminf.    1.53978 (23) obj. -131.09 iterations 27
Cbc0038I Pass  33: suminf.    1.39520 (23) obj. -131.09 iterations 14
Cbc0038I Pass  34: suminf.    1.70552 (22) obj. -131.09 iterations 19
Cbc0038I Pass  35: suminf.    1.49213 (23) obj. -131.09 iterations 15
Cbc0038I Pass  36: suminf.    1.23100 (10) obj. -131.09 iterations 42
Cbc0038I Rounding solution of -119.355 is better than previous of -113.524

Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 393 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -119.355 to -119.704 (0.24 seconds)
Cbc0038I Round again with cutoff of -162.708
Cbc0038I Pass  36: suminf.    3.97201 (103) obj. -261.954 iterations 0
Cbc0038I Pass  37: suminf.    3.97201 (103) obj. -261.954 iterations 1
Cbc0038I Pass  38: suminf.    2.50950 (81) obj. -195.97 iterations 27
Cbc0038I Pass  39: suminf.    1.88871 (63) obj. -162.708 iterations 20
Cbc0038I Pass  40: suminf.    1.58688 (48) obj. -170.076 iterations 16
Cbc0038I Pass  41: suminf.    1.49333 (33) obj. -162.708 iterations 26
Cbc0038I Pass  42: suminf.    1.19513 (66) obj. -162.708 iterations 38
Cbc0038I Pass  43: suminf.    1.28829 (27) obj. -162.708 iterations 22
Cbc0038I Pass  44: suminf.    1.18711 (59) obj. -162.708 iterations 10
Cbc0038I Pass  45: suminf.    2.20775 (40) obj. -162.708 iterations 43
Cbc0038I Pass  46: suminf.    2.08765 (40) obj. -162.708 iterations 8
Cbc0038I Pass  47: suminf.    1.78504 (28) obj. -162.708 iterations 60
Cbc0038I Pass  48: suminf.    1.49256 (28) obj. -162.708 iterations 10
Cbc0038I Pass  49: suminf.    1.23087 (24) obj. -162.708 iterations 22
Cbc0038I Pass  50: suminf.    1.23087 (24) obj. -162.708 iterations 6
Cbc0038I Pass  51: suminf.    1.48980 (24) obj. -162.708 iterations 6
Cbc0038I Pass  52: suminf.    1.48980 (24) obj. -162.708 iterations 6
Cbc0038I Pass  53: suminf.    1.37738 (20) obj. -162.708 iterations 25
Cbc0038I Pass  54: suminf.    1.12063 (20) obj. -163.221 iterations 20
Cbc0038I Pass  55: suminf.    1.37738 (20) obj. -162.708 iterations 21
Cbc0038I Pass  56: suminf.    2.74778 (43) obj. -162.708 iterations 79
Cbc0038I Pass  57: suminf.    1.61419 (33) obj. -162.708 iterations 33
Cbc0038I Pass  58: suminf.    1.98590 (27) obj. -162.708 iterations 31
Cbc0038I Pass  59: suminf.    1.88920 (27) obj. -162.708 iterations 15
Cbc0038I Pass  60: suminf.    1.36841 (27) obj. -162.708 iterations 7
Cbc0038I Pass  61: suminf.    1.52261 (21) obj. -162.708 iterations 35
Cbc0038I Pass  62: suminf.    1.20800 (21) obj. -162.708 iterations 15
Cbc0038I Pass  63: suminf.    3.33608 (47) obj. -162.708 iterations 86
Cbc0038I Pass  64: suminf.    2.89959 (45) obj. -162.708 iterations 20
Cbc0038I Pass  65: suminf.    4.30882 (36) obj. -162.708 iterations 44
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 393 columns, reduced to 50 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -119.704 - took 0.21 seconds
Cbc0012I Integer solution of -119.70429 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 377 rows 393 columns, reduced to 3 rows 6 columns
Cbc0031I 134 added rows had average density of 89.753731
Cbc0013I At root node, 134 cuts changed objective from -289.17981 to -182.38694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21762 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.551 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3041 row cuts average 348.9 elements, 0 column cuts (0 active)  in 1.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 479 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5570 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.528 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4104 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.663 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 509 row cuts average 174.1 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 275 row cuts average 38.8 elements, 0 column cuts (0 active)  in 0.254 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -119.70429 best solution, best possible -182.38694 (6.72 seconds)
Cbc0012I Integer solution of -130.79005 found by rounding after 8848 iterations and 1 nodes (6.76 seconds)
Cbc0012I Integer solution of -146.49083 found by DiveCoefficient after 8848 iterations and 1 nodes (6.76 seconds)
Cbc0012I Integer solution of -151.5983 found by DiveCoefficient after 9058 iterations and 1 nodes (6.83 seconds)
Cbc0012I Integer solution of -154.07813 found by DiveCoefficient after 9103 iterations and 3 nodes (6.85 seconds)
Cbc0010I After 7 nodes, 2 on tree, -154.07813 best solution, best possible -180.92197 (7.57 seconds)
Cbc0010I After 17 nodes, 7 on tree, -154.07813 best solution, best possible -180.92197 (8.29 seconds)
Cbc0038I Full problem 377 rows 393 columns, reduced to 73 rows 78 columns
Cbc0010I After 43 nodes, 2 on tree, -154.07813 best solution, best possible -180.92197 (9.17 seconds)
Cbc0010I After 62 nodes, 1 on tree, -154.07813 best solution, best possible -180.85443 (10.11 seconds)
Cbc0010I After 65 nodes, 4 on tree, -154.07813 best solution, best possible -180.85443 (10.84 seconds)
Cbc0010I After 71 nodes, 6 on tree, -154.07813 best solution, best possible -180.85443 (11.61 seconds)
Cbc0010I After 90 nodes, 8 on tree, -154.07813 best solution, best possible -180.85443 (12.34 seconds)
Cbc0038I Full problem 377 rows 393 columns, reduced to 35 rows 41 columns
Cbc0010I After 107 nodes, 8 on tree, -154.07813 best solution, best possible -180.85443 (13.04 seconds)
Cbc0010I After 142 nodes, 10 on tree, -154.07813 best solution, best possible -180.85443 (13.74 seconds)
Cbc0010I After 175 nodes, 12 on tree, -154.07813 best solution, best possible -180.85443 (14.45 seconds)
Cbc0010I After 218 nodes, 8 on tree, -154.07813 best solution, best possible -180.85443 (15.16 seconds)
Cbc0001I Search completed - best objective -154.07813, took 27499 iterations and 236 nodes (15.45 seconds)
Cbc0032I Strong branching done 2312 times (39378 iterations), fathomed 12 nodes and fixed 11 variables
Cbc0035I Maximum depth 27, 1829 variables fixed on reduced cost
Total time (CPU seconds):       15.06   (Wallclock seconds):       15.54

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 494 (-33) rows, 256 (-8) columns and 1470 (-75) elements
Clp1000I sum of infeasibilities 1.58749e-05 - average 3.21354e-08, 96 fixed columns
Coin0506I Presolve 302 (-192) rows, 159 (-97) columns and 897 (-573) elements
Clp0029I End of values pass after 159 iterations
Clp0014I Perturbing problem by 0.001% of 2.3277775 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 228.60686
Clp0000I Optimal - objective value 228.60686
Coin0511I After Postsolve, objective 228.60686, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 228.60686
Clp0000I Optimal - objective value 228.60686
Clp0000I Optimal - objective value 228.60686
Coin0511I After Postsolve, objective 228.60686, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 228.6068642 - 0 iterations time 0.072, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 494 rows, 256 columns (255 integer (255 of which binary)) and 1470 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.375%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.15877
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -73.917 iterations 104
Cbc0038I Solution found of -73.917
Cbc0038I Relaxing continuous gives -73.917
Cbc0038I Rounding solution of -135.507 is better than previous of -73.917

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 256 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -144.817
Cbc0038I Pass   2: suminf.    0.82166 (3) obj. -144.817 iterations 10
Cbc0038I Pass   3: suminf.    0.56218 (2) obj. -144.817 iterations 9
Cbc0038I Pass   4: suminf.    0.81644 (2) obj. -144.817 iterations 8
Cbc0038I Pass   5: suminf.    5.40789 (20) obj. -144.817 iterations 61
Cbc0038I Pass   6: suminf.    2.92218 (11) obj. -144.817 iterations 40
Cbc0038I Pass   7: suminf.    2.49766 (7) obj. -144.817 iterations 14
Cbc0038I Pass   8: suminf.    1.99080 (8) obj. -144.817 iterations 7
Cbc0038I Pass   9: suminf.    2.02363 (7) obj. -144.817 iterations 10
Cbc0038I Pass  10: suminf.    1.73651 (6) obj. -144.817 iterations 11
Cbc0038I Pass  11: suminf.    1.73651 (6) obj. -144.817 iterations 1
Cbc0038I Pass  12: suminf.    1.49486 (4) obj. -144.817 iterations 7
Cbc0038I Pass  13: suminf.    1.03347 (4) obj. -144.817 iterations 8
Cbc0038I Pass  14: suminf.    1.68509 (4) obj. -144.817 iterations 5
Cbc0038I Pass  15: suminf.    0.91143 (4) obj. -144.817 iterations 10
Cbc0038I Pass  16: suminf.    1.61570 (4) obj. -144.817 iterations 6
Cbc0038I Pass  17: suminf.    1.21926 (5) obj. -144.817 iterations 4
Cbc0038I Pass  18: suminf.    1.03347 (4) obj. -144.817 iterations 4
Cbc0038I Pass  19: suminf.    1.68509 (4) obj. -144.817 iterations 5
Cbc0038I Pass  20: suminf.    0.91143 (4) obj. -144.817 iterations 10
Cbc0038I Pass  21: suminf.    1.61570 (4) obj. -144.817 iterations 6
Cbc0038I Pass  22: suminf.    1.21926 (5) obj. -144.817 iterations 4
Cbc0038I Pass  23: suminf.    1.03347 (4) obj. -144.817 iterations 4
Cbc0038I Pass  24: suminf.    1.68509 (4) obj. -144.817 iterations 5
Cbc0038I Pass  25: suminf.    0.91143 (4) obj. -144.817 iterations 10
Cbc0038I Pass  26: suminf.    1.61570 (4) obj. -144.817 iterations 6
Cbc0038I Pass  27: suminf.    1.21926 (5) obj. -144.817 iterations 4
Cbc0038I Pass  28: suminf.    1.03347 (4) obj. -144.817 iterations 4
Cbc0038I Pass  29: suminf.    1.68509 (4) obj. -144.817 iterations 5
Cbc0038I Pass  30: suminf.    0.91143 (4) obj. -144.817 iterations 10
Cbc0038I Pass  31: suminf.    1.61570 (4) obj. -144.817 iterations 6
Cbc0038I Rounding solution of -143.143 is better than previous of -135.507

Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 256 columns, reduced to 103 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -143.143 to -154.078 (0.09 seconds)
Cbc0038I Round again with cutoff of -168.984
Cbc0038I Pass  31: suminf.    1.52430 (5) obj. -168.984 iterations 15
Cbc0038I Pass  32: suminf.    1.52002 (5) obj. -168.984 iterations 11
Cbc0038I Pass  33: suminf.    2.04203 (7) obj. -168.984 iterations 40
Cbc0038I Pass  34: suminf.    1.98162 (7) obj. -168.984 iterations 10
Cbc0038I Pass  35: suminf.    2.26796 (7) obj. -168.984 iterations 28
Cbc0038I Pass  36: suminf.    1.79512 (7) obj. -168.984 iterations 12
Cbc0038I Pass  37: suminf.    1.74020 (7) obj. -168.984 iterations 2
Cbc0038I Pass  38: suminf.    2.87029 (7) obj. -168.984 iterations 20
Cbc0038I Pass  39: suminf.    2.14772 (6) obj. -168.984 iterations 12
Cbc0038I Pass  40: suminf.    1.59037 (5) obj. -168.984 iterations 7
Cbc0038I Pass  41: suminf.    1.52002 (5) obj. -168.984 iterations 10
Cbc0038I Pass  42: suminf.    2.04203 (7) obj. -168.984 iterations 40
Cbc0038I Pass  43: suminf.    1.98162 (7) obj. -168.984 iterations 10
Cbc0038I Pass  44: suminf.    2.26796 (7) obj. -168.984 iterations 30
Cbc0038I Pass  45: suminf.    1.79512 (7) obj. -168.984 iterations 12
Cbc0038I Pass  46: suminf.    1.74020 (7) obj. -168.984 iterations 2
Cbc0038I Pass  47: suminf.    2.87029 (7) obj. -168.984 iterations 18
Cbc0038I Pass  48: suminf.    2.14772 (6) obj. -168.984 iterations 12
Cbc0038I Pass  49: suminf.    1.59037 (5) obj. -168.984 iterations 7
Cbc0038I Pass  50: suminf.    1.52002 (5) obj. -168.984 iterations 9
Cbc0038I Pass  51: suminf.    2.04203 (7) obj. -168.984 iterations 40
Cbc0038I Pass  52: suminf.    1.98162 (7) obj. -168.984 iterations 11
Cbc0038I Pass  53: suminf.    2.26796 (7) obj. -168.984 iterations 28
Cbc0038I Pass  54: suminf.    1.79512 (7) obj. -168.984 iterations 12
Cbc0038I Pass  55: suminf.    1.74020 (7) obj. -168.984 iterations 2
Cbc0038I Pass  56: suminf.    2.87029 (7) obj. -168.984 iterations 18
Cbc0038I Pass  57: suminf.    2.14772 (6) obj. -168.984 iterations 12
Cbc0038I Pass  58: suminf.    1.59037 (5) obj. -168.984 iterations 7
Cbc0038I Pass  59: suminf.    1.52002 (5) obj. -168.984 iterations 10
Cbc0038I Pass  60: suminf.    2.04203 (7) obj. -168.984 iterations 42
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 211 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 256 columns, reduced to 76 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -154.078 - took 0.11 seconds
Cbc0012I Integer solution of -154.07813 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 494 rows 256 columns, reduced to 76 rows 45 columns
Cbc0031I 28 added rows had average density of 137.5
Cbc0013I At root node, 28 cuts changed objective from -228.60686 to -205.81267 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18383 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.379 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1779 row cuts average 251.3 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.256 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 246.2 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -154.07813 best solution, best possible -205.81267 (2.69 seconds)
Cbc0038I Full problem 494 rows 256 columns, reduced to 41 rows 28 columns
Cbc0010I After 50 nodes, 9 on tree, -154.07813 best solution, best possible -205.81267 (3.40 seconds)
Cbc0038I Full problem 494 rows 256 columns, reduced to 138 rows 75 columns
Cbc0001I Search completed - best objective -154.07813, took 16817 iterations and 158 nodes (3.95 seconds)
Cbc0032I Strong branching done 1768 times (42837 iterations), fathomed 26 nodes and fixed 126 variables
Cbc0035I Maximum depth 44, 1810 variables fixed on reduced cost
Total time (CPU seconds):       3.88   (Wallclock seconds):       3.98

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 377 (-150) rows, 393 (-132) columns and 18728 (-17009) elements
Clp1000I sum of infeasibilities 4.11668e-06 - average 1.09196e-08, 95 fixed columns
Coin0506I Presolve 274 (-103) rows, 296 (-97) columns and 10497 (-8231) elements
Clp0006I 0  Obj 267.08237 Dual inf 58.077232 (291)
Clp0029I End of values pass after 296 iterations
Clp0014I Perturbing problem by 0.001% of 2.034962 - largest nonzero change 2.0902564e-05 ( 0.0014490735%) - largest zero change 2.9534641e-05
Clp0000I Optimal - objective value 289.3594
Clp0000I Optimal - objective value 289.3594
Coin0511I After Postsolve, objective 289.3594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 289.3594 Dual inf 43.267693 (1)
Clp0014I Perturbing problem by 0.001% of 2.106993 - largest nonzero change 2.2466662e-05 ( 0.0014083952%) - largest zero change 2.9597463e-05
Clp0000I Optimal - objective value 289.3594
Clp0000I Optimal - objective value 289.3594
Clp0000I Optimal - objective value 289.3594
Coin0511I After Postsolve, objective 289.3594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 289.3593985 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 377 rows, 393 columns (393 integer (393 of which binary)) and 18728 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.904%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 136 integers unsatisfied sum - 6.40879
Cbc0038I Pass   1: suminf.    3.97201 (103) obj. -261.954 iterations 53
Cbc0038I Pass   2: suminf.    3.97201 (103) obj. -261.954 iterations 1
Cbc0038I Pass   3: suminf.    2.27819 (75) obj. -184.44 iterations 29
Cbc0038I Pass   4: suminf.    1.21490 (46) obj. -141.101 iterations 29
Cbc0038I Pass   5: suminf.    0.35541 (20) obj. -114.996 iterations 26
Cbc0038I Pass   6: suminf.    0.01163 (1) obj. -95.3517 iterations 19
Cbc0038I Solution found of -92.3866
Cbc0038I Rounding solution of -109.05 is better than previous of -92.3866

Cbc0038I Before mini branch and bound, 256 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 393 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -109.05 to -113.524 (0.15 seconds)
Cbc0038I Round again with cutoff of -131.09
Cbc0038I Pass   7: suminf.    3.97201 (103) obj. -261.954 iterations 0
Cbc0038I Pass   8: suminf.    3.97201 (103) obj. -261.954 iterations 1
Cbc0038I Pass   9: suminf.    2.66273 (85) obj. -200.777 iterations 23
Cbc0038I Pass  10: suminf.    1.64253 (58) obj. -153.638 iterations 27
Cbc0038I Pass  11: suminf.    1.03979 (41) obj. -136.277 iterations 17
Cbc0038I Pass  12: suminf.    0.78892 (28) obj. -131.09 iterations 15
Cbc0038I Pass  13: suminf.    0.57839 (6) obj. -131.09 iterations 55
Cbc0038I Pass  14: suminf.    1.30820 (3) obj. -131.09 iterations 31
Cbc0038I Pass  15: suminf.    1.15795 (35) obj. -131.09 iterations 12
Cbc0038I Pass  16: suminf.    1.24077 (22) obj. -131.09 iterations 48
Cbc0038I Pass  17: suminf.    0.98191 (19) obj. -131.209 iterations 7
Cbc0038I Pass  18: suminf.    0.96791 (11) obj. -131.09 iterations 54
Cbc0038I Pass  19: suminf.    0.67379 (11) obj. -131.09 iterations 17
Cbc0038I Pass  20: suminf.    1.01457 (8) obj. -131.09 iterations 21
Cbc0038I Pass  21: suminf.    0.59553 (8) obj. -131.676 iterations 26
Cbc0038I Pass  22: suminf.    1.01457 (8) obj. -131.09 iterations 17
Cbc0038I Pass  23: suminf.    2.33935 (35) obj. -131.09 iterations 66
Cbc0038I Pass  24: suminf.    2.33599 (35) obj. -131.09 iterations 15
Cbc0038I Pass  25: suminf.    0.88119 (14) obj. -131.09 iterations 37
Cbc0038I Pass  26: suminf.    0.88119 (14) obj. -131.09 iterations 0
Cbc0038I Pass  27: suminf.    1.01457 (8) obj. -131.09 iterations 21
Cbc0038I Pass  28: suminf.    0.59553 (8) obj. -131.676 iterations 24
Cbc0038I Pass  29: suminf.    1.01457 (8) obj. -131.09 iterations 17
Cbc0038I Pass  30: suminf.    1.86359 (31) obj. -131.09 iterations 67
Cbc0038I Pass  31: suminf.    1.82816 (30) obj. -131.09 iterations 8
Cbc0038I Pass  32: suminf.    1.53978 (23) obj. -131.09 iterations 27
Cbc0038I Pass  33: suminf.    1.39520 (23) obj. -131.09 iterations 14
Cbc0038I Pass  34: suminf.    1.70552 (22) obj. -131.09 iterations 19
Cbc0038I Pass  35: suminf.    1.49213 (23) obj. -131.09 iterations 15
Cbc0038I Pass  36: suminf.    1.23100 (10) obj. -131.09 iterations 42
Cbc0038I Rounding solution of -119.355 is better than previous of -113.524

Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 393 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -119.355 to -119.704 (0.24 seconds)
Cbc0038I Round again with cutoff of -162.708
Cbc0038I Pass  36: suminf.    3.97201 (103) obj. -261.954 iterations 0
Cbc0038I Pass  37: suminf.    3.97201 (103) obj. -261.954 iterations 1
Cbc0038I Pass  38: suminf.    2.50950 (81) obj. -195.97 iterations 27
Cbc0038I Pass  39: suminf.    1.88871 (63) obj. -162.708 iterations 20
Cbc0038I Pass  40: suminf.    1.58688 (48) obj. -170.076 iterations 16
Cbc0038I Pass  41: suminf.    1.49333 (33) obj. -162.708 iterations 26
Cbc0038I Pass  42: suminf.    1.19513 (66) obj. -162.708 iterations 38
Cbc0038I Pass  43: suminf.    1.28829 (27) obj. -162.708 iterations 22
Cbc0038I Pass  44: suminf.    1.18711 (59) obj. -162.708 iterations 10
Cbc0038I Pass  45: suminf.    2.20775 (40) obj. -162.708 iterations 43
Cbc0038I Pass  46: suminf.    2.08765 (40) obj. -162.708 iterations 8
Cbc0038I Pass  47: suminf.    1.78504 (28) obj. -162.708 iterations 60
Cbc0038I Pass  48: suminf.    1.49256 (28) obj. -162.708 iterations 10
Cbc0038I Pass  49: suminf.    1.23087 (24) obj. -162.708 iterations 22
Cbc0038I Pass  50: suminf.    1.23087 (24) obj. -162.708 iterations 6
Cbc0038I Pass  51: suminf.    1.48980 (24) obj. -162.708 iterations 6
Cbc0038I Pass  52: suminf.    1.48980 (24) obj. -162.708 iterations 6
Cbc0038I Pass  53: suminf.    1.37738 (20) obj. -162.708 iterations 25
Cbc0038I Pass  54: suminf.    1.12063 (20) obj. -163.221 iterations 20
Cbc0038I Pass  55: suminf.    1.37738 (20) obj. -162.708 iterations 21
Cbc0038I Pass  56: suminf.    2.74778 (43) obj. -162.708 iterations 79
Cbc0038I Pass  57: suminf.    1.61419 (33) obj. -162.708 iterations 33
Cbc0038I Pass  58: suminf.    1.98590 (27) obj. -162.708 iterations 31
Cbc0038I Pass  59: suminf.    1.88920 (27) obj. -162.708 iterations 15
Cbc0038I Pass  60: suminf.    1.36841 (27) obj. -162.708 iterations 7
Cbc0038I Pass  61: suminf.    1.52261 (21) obj. -162.708 iterations 35
Cbc0038I Pass  62: suminf.    1.20800 (21) obj. -162.708 iterations 15
Cbc0038I Pass  63: suminf.    3.33608 (47) obj. -162.708 iterations 86
Cbc0038I Pass  64: suminf.    2.89959 (45) obj. -162.708 iterations 20
Cbc0038I Pass  65: suminf.    4.30882 (36) obj. -162.708 iterations 44
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 393 columns, reduced to 50 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -119.704 - took 0.22 seconds
Cbc0012I Integer solution of -119.70429 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 377 rows 393 columns, reduced to 3 rows 6 columns
Cbc0031I 134 added rows had average density of 89.753731
Cbc0013I At root node, 134 cuts changed objective from -289.17981 to -182.38694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21762 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.554 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3041 row cuts average 348.9 elements, 0 column cuts (0 active)  in 1.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 479 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5570 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.532 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4104 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.668 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 509 row cuts average 174.1 elements, 0 column cuts (0 active)  in 0.270 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 275 row cuts average 38.8 elements, 0 column cuts (0 active)  in 0.259 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -119.70429 best solution, best possible -182.38694 (6.81 seconds)
Cbc0012I Integer solution of -130.79005 found by rounding after 8848 iterations and 1 nodes (6.84 seconds)
Cbc0012I Integer solution of -146.49083 found by DiveCoefficient after 8848 iterations and 1 nodes (6.85 seconds)
Cbc0012I Integer solution of -151.5983 found by DiveCoefficient after 9058 iterations and 1 nodes (6.92 seconds)
Cbc0012I Integer solution of -154.07813 found by DiveCoefficient after 9103 iterations and 3 nodes (6.94 seconds)
Cbc0010I After 7 nodes, 2 on tree, -154.07813 best solution, best possible -180.92197 (7.67 seconds)
Cbc0010I After 17 nodes, 7 on tree, -154.07813 best solution, best possible -180.92197 (8.39 seconds)
Cbc0038I Full problem 377 rows 393 columns, reduced to 73 rows 78 columns
Cbc0010I After 43 nodes, 2 on tree, -154.07813 best solution, best possible -180.92197 (9.28 seconds)
Cbc0010I After 60 nodes, 2 on tree, -154.07813 best solution, best possible -180.92197 (9.98 seconds)
Cbc0010I After 64 nodes, 3 on tree, -154.07813 best solution, best possible -180.85443 (10.75 seconds)
Cbc0010I After 71 nodes, 6 on tree, -154.07813 best solution, best possible -180.85443 (11.77 seconds)
Cbc0010I After 90 nodes, 8 on tree, -154.07813 best solution, best possible -180.85443 (12.50 seconds)
Cbc0038I Full problem 377 rows 393 columns, reduced to 35 rows 41 columns
Cbc0010I After 109 nodes, 8 on tree, -154.07813 best solution, best possible -180.85443 (13.22 seconds)
Cbc0010I After 144 nodes, 9 on tree, -154.07813 best solution, best possible -180.85443 (13.93 seconds)
Cbc0010I After 177 nodes, 11 on tree, -154.07813 best solution, best possible -180.85443 (14.64 seconds)
Cbc0010I After 222 nodes, 7 on tree, -154.07813 best solution, best possible -180.85443 (15.34 seconds)
Cbc0001I Search completed - best objective -154.07813, took 27499 iterations and 236 nodes (15.59 seconds)
Cbc0032I Strong branching done 2312 times (39378 iterations), fathomed 12 nodes and fixed 11 variables
Cbc0035I Maximum depth 27, 1829 variables fixed on reduced cost
Total time (CPU seconds):       15.18   (Wallclock seconds):       15.68

