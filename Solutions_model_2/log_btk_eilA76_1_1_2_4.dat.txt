Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 72 (-6) columns and 397 (-56) elements
Clp1000I sum of infeasibilities 3.17378e-05 - average 2.44137e-07, 13 fixed columns
Coin0506I Presolve 104 (-26) rows, 58 (-14) columns and 317 (-80) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 0.29449888 - largest nonzero change 0 ( 0%) - largest zero change 2.8791164e-05
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Coin0511I After Postsolve, objective 42.387424, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Coin0511I After Postsolve, objective 42.387424, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.38742412 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 72 columns (71 integer (71 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.226%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.2103
Cbc0038I Solution found of 9.75966
Cbc0038I Relaxing continuous gives -1.01161
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 72 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -1.01161 to -11.1922 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.3118
Cbc0038I Pass   1: suminf.    2.43320 (38) obj. -14.3118 iterations 41
Cbc0038I Pass   2: suminf.    1.46956 (5) obj. -14.3118 iterations 42
Cbc0038I Pass   3: suminf.    1.06352 (4) obj. -14.3118 iterations 5
Cbc0038I Pass   4: suminf.    1.03393 (5) obj. -14.3118 iterations 18
Cbc0038I Pass   5: suminf.    1.03393 (5) obj. -14.3118 iterations 0
Cbc0038I Pass   6: suminf.    1.45957 (4) obj. -14.3118 iterations 7
Cbc0038I Pass   7: suminf.    0.88752 (4) obj. -14.3118 iterations 5
Cbc0038I Pass   8: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass   9: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  10: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  11: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  12: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  13: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  14: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  15: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  16: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  17: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  18: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  19: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  20: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  21: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  22: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  23: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  24: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  25: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  26: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  27: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  28: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  29: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  30: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 72 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.1922 - took 0.08 seconds
Cbc0012I Integer solution of -11.19216 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 130 rows 72 columns, reduced to 63 rows 36 columns
Cbc0012I Integer solution of -11.204414 found by RINS after 0 iterations and 0 nodes (0.13 seconds)
Cbc0031I 20 added rows had average density of 41.45
Cbc0013I At root node, 20 cuts changed objective from -42.387424 to -32.869981 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7663 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1087 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 13 nodes, 6 on tree, -11.204414 best solution, best possible -32.869981 (0.68 seconds)
Cbc0012I Integer solution of -11.2997 found by rounding after 6448 iterations and 23 nodes (0.70 seconds)
Cbc0016I Integer solution of -11.57281 found by strong branching after 6546 iterations and 27 nodes (0.71 seconds)
Cbc0038I Full problem 130 rows 72 columns, reduced to 26 rows 16 columns
Cbc0012I Integer solution of -11.61665 found by rounding after 7310 iterations and 51 nodes (0.76 seconds)
Cbc0004I Integer solution of -12.34517 found after 7447 iterations and 62 nodes (0.78 seconds)
Cbc0012I Integer solution of -12.47289 found by rounding after 7471 iterations and 64 nodes (0.78 seconds)
Cbc0016I Integer solution of -12.51796 found by strong branching after 7549 iterations and 67 nodes (0.78 seconds)
Cbc0001I Search completed - best objective -12.51796, took 8376 iterations and 92 nodes (0.87 seconds)
Cbc0032I Strong branching done 922 times (11173 iterations), fathomed 9 nodes and fixed 69 variables
Cbc0035I Maximum depth 12, 419 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 118 (-34) columns and 1913 (-1390) elements
Clp1000I sum of infeasibilities 4.61143e-08 - average 4.35041e-10, 18 fixed columns
Coin0506I Presolve 89 (-17) rows, 100 (-18) columns and 1456 (-457) elements
Clp0006I 0  Obj 49.253503 Dual inf 6.8850995 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 1.6582059 - largest nonzero change 1.6308042e-05 ( 0.0012557832%) - largest zero change 2.9006479e-05
Clp0000I Optimal - objective value 59.981603
Clp0000I Optimal - objective value 59.981603
Coin0511I After Postsolve, objective 59.981603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.981603
Clp0000I Optimal - objective value 59.981603
Clp0000I Optimal - objective value 59.981603
Clp0000I Optimal - objective value 59.981603
Coin0511I After Postsolve, objective 59.981603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.98160261 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 118 columns (118 integer (118 of which binary)) and 1917 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.18167
Cbc0038I Pass   1: suminf.    2.12633 (28) obj. -35.2678 iterations 19
Cbc0038I Pass   2: suminf.    2.00032 (27) obj. -34.0172 iterations 3
Cbc0038I Pass   3: suminf.    1.04103 (17) obj. -13.2428 iterations 10
Cbc0038I Solution found of 7.34687
Cbc0038I Rounding solution of -1.91202 is better than previous of 7.34687

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1.91202 to -9.02023 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.2097
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.12633 (28) obj. -35.2678 iterations 0
Cbc0038I Pass   5: suminf.    2.00032 (27) obj. -34.0172 iterations 4
Cbc0038I Pass   6: suminf.    0.53012 (12) obj. -13.2097 iterations 42
Cbc0038I Pass   7: suminf.    0.53012 (12) obj. -13.2097 iterations 0
Cbc0038I Pass   8: suminf.    0.99330 (5) obj. -13.2097 iterations 22
Cbc0038I Pass   9: suminf.    0.79650 (5) obj. -13.2097 iterations 1
Cbc0038I Pass  10: suminf.    1.54346 (5) obj. -13.2097 iterations 14
Cbc0038I Pass  11: suminf.    1.42431 (5) obj. -13.2097 iterations 2
Cbc0038I Pass  12: suminf.    0.99330 (5) obj. -13.2097 iterations 7
Cbc0038I Pass  13: suminf.    3.10414 (22) obj. -13.2097 iterations 24
Cbc0038I Pass  14: suminf.    2.02623 (20) obj. -13.2097 iterations 6
Cbc0038I Pass  15: suminf.    1.47892 (13) obj. -13.2097 iterations 14
Cbc0038I Pass  16: suminf.    0.94126 (7) obj. -13.2097 iterations 22
Cbc0038I Pass  17: suminf.    0.53783 (6) obj. -13.2097 iterations 6
Cbc0038I Pass  18: suminf.    0.99330 (5) obj. -13.2097 iterations 11
Cbc0038I Pass  19: suminf.    0.79650 (5) obj. -13.2097 iterations 1
Cbc0038I Pass  20: suminf.    1.54346 (5) obj. -13.2097 iterations 12
Cbc0038I Pass  21: suminf.    1.42431 (5) obj. -13.2097 iterations 2
Cbc0038I Pass  22: suminf.    0.99330 (5) obj. -13.2097 iterations 7
Cbc0038I Pass  23: suminf.    3.18878 (15) obj. -13.2097 iterations 23
Cbc0038I Pass  24: suminf.    1.51052 (13) obj. -13.2097 iterations 8
Cbc0038I Pass  25: suminf.    1.33487 (11) obj. -13.2097 iterations 3
Cbc0038I Pass  26: suminf.    0.92391 (12) obj. -13.2097 iterations 10
Cbc0038I Pass  27: suminf.    1.16765 (7) obj. -13.2097 iterations 17
Cbc0038I Pass  28: suminf.    0.56723 (5) obj. -13.2097 iterations 4
Cbc0038I Pass  29: suminf.    1.90536 (6) obj. -13.2097 iterations 8
Cbc0038I Pass  30: suminf.    1.71351 (6) obj. -13.2097 iterations 1
Cbc0038I Pass  31: suminf.    1.71351 (6) obj. -13.2097 iterations 1
Cbc0038I Pass  32: suminf.    1.01890 (6) obj. -13.2097 iterations 7
Cbc0038I Pass  33: suminf.    0.56723 (5) obj. -13.2097 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -9.02023 to -9.80575 (0.06 seconds)
Cbc0038I Round again with cutoff of -20.7507
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.12633 (28) obj. -35.2678 iterations 0
Cbc0038I Pass  34: suminf.    2.00032 (27) obj. -34.0172 iterations 4
Cbc0038I Pass  35: suminf.    1.58399 (14) obj. -20.7507 iterations 47
Cbc0038I Pass  36: suminf.    1.30622 (15) obj. -20.7507 iterations 1
Cbc0038I Pass  37: suminf.    2.10592 (9) obj. -20.7507 iterations 18
Cbc0038I Pass  38: suminf.    2.10592 (9) obj. -20.7507 iterations 2
Cbc0038I Pass  39: suminf.    1.31113 (9) obj. -20.7507 iterations 5
Cbc0038I Pass  40: suminf.    1.16819 (9) obj. -20.7507 iterations 1
Cbc0038I Pass  41: suminf.    2.10592 (9) obj. -20.7507 iterations 19
Cbc0038I Pass  42: suminf.    1.98416 (17) obj. -20.7507 iterations 26
Cbc0038I Pass  43: suminf.    1.82653 (19) obj. -20.7507 iterations 7
Cbc0038I Pass  44: suminf.    2.07506 (10) obj. -20.7507 iterations 17
Cbc0038I Pass  45: suminf.    0.80944 (9) obj. -20.7507 iterations 4
Cbc0038I Pass  46: suminf.    0.80944 (9) obj. -20.7507 iterations 0
Cbc0038I Pass  47: suminf.    2.07506 (10) obj. -20.7507 iterations 6
Cbc0038I Pass  48: suminf.    1.75974 (15) obj. -20.7507 iterations 14
Cbc0038I Pass  49: suminf.    1.41080 (14) obj. -20.7507 iterations 3
Cbc0038I Pass  50: suminf.    1.11345 (14) obj. -20.7507 iterations 4
Cbc0038I Pass  51: suminf.    1.65051 (10) obj. -20.7507 iterations 14
Cbc0038I Pass  52: suminf.    0.94689 (9) obj. -20.7507 iterations 4
Cbc0038I Pass  53: suminf.    1.65051 (10) obj. -20.7507 iterations 6
Cbc0038I Pass  54: suminf.    1.66519 (16) obj. -20.7507 iterations 17
Cbc0038I Pass  55: suminf.    1.39523 (15) obj. -20.7507 iterations 4
Cbc0038I Pass  56: suminf.    1.75370 (10) obj. -20.7507 iterations 13
Cbc0038I Pass  57: suminf.    1.75370 (10) obj. -20.7507 iterations 0
Cbc0038I Pass  58: suminf.    1.81074 (10) obj. -20.7507 iterations 4
Cbc0038I Pass  59: suminf.    1.81074 (10) obj. -20.7507 iterations 0
Cbc0038I Pass  60: suminf.    1.75370 (10) obj. -20.7507 iterations 3
Cbc0038I Pass  61: suminf.    1.79221 (14) obj. -20.7507 iterations 18
Cbc0038I Pass  62: suminf.    1.33054 (11) obj. -20.7507 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 29 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -9.80575 - took 0.06 seconds
Cbc0012I Integer solution of -9.8057538 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 20 rows 21 columns
Cbc0031I 51 added rows had average density of 37.529412
Cbc0013I At root node, 51 cuts changed objective from -50.914452 to -20.130297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7165 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1198 row cuts average 104.3 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 563 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 704 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 70.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 107 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.607 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.8057538 best solution, best possible -20.130297 (1.92 seconds)
Cbc0010I After 17 nodes, 8 on tree, -9.8057538 best solution, best possible -20.130297 (2.63 seconds)
Cbc0012I Integer solution of -12.34517 found by rounding after 3859 iterations and 19 nodes (2.69 seconds)
Cbc0016I Integer solution of -12.47289 found by strong branching after 3973 iterations and 25 nodes (2.89 seconds)
Cbc0016I Integer solution of -12.51796 found by strong branching after 3986 iterations and 26 nodes (2.95 seconds)
Cbc0010I After 41 nodes, 7 on tree, -12.51796 best solution, best possible -20.130297 (3.34 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 9 rows 14 columns
Cbc0001I Search completed - best objective -12.51796, took 4764 iterations and 50 nodes (3.46 seconds)
Cbc0032I Strong branching done 604 times (9112 iterations), fathomed 8 nodes and fixed 12 variables
Cbc0035I Maximum depth 17, 118 variables fixed on reduced cost
Total time (CPU seconds):       2.41   (Wallclock seconds):       3.47

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 72 (-6) columns and 397 (-56) elements
Clp1000I sum of infeasibilities 3.17378e-05 - average 2.44137e-07, 13 fixed columns
Coin0506I Presolve 104 (-26) rows, 58 (-14) columns and 317 (-80) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 0.29449888 - largest nonzero change 0 ( 0%) - largest zero change 2.8791164e-05
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Coin0511I After Postsolve, objective 42.387424, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Clp0000I Optimal - objective value 42.387424
Coin0511I After Postsolve, objective 42.387424, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.38742412 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 72 columns (71 integer (71 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.226%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.2103
Cbc0038I Solution found of 9.75966
Cbc0038I Relaxing continuous gives -1.01161
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 72 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -1.01161 to -11.1922 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.3118
Cbc0038I Pass   1: suminf.    2.43320 (38) obj. -14.3118 iterations 41
Cbc0038I Pass   2: suminf.    1.46956 (5) obj. -14.3118 iterations 42
Cbc0038I Pass   3: suminf.    1.06352 (4) obj. -14.3118 iterations 5
Cbc0038I Pass   4: suminf.    1.03393 (5) obj. -14.3118 iterations 18
Cbc0038I Pass   5: suminf.    1.03393 (5) obj. -14.3118 iterations 0
Cbc0038I Pass   6: suminf.    1.45957 (4) obj. -14.3118 iterations 7
Cbc0038I Pass   7: suminf.    0.88752 (4) obj. -14.3118 iterations 5
Cbc0038I Pass   8: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass   9: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  10: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  11: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  12: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  13: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  14: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  15: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  16: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  17: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  18: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  19: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  20: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  21: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  22: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  23: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  24: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  25: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I Pass  26: suminf.    0.51147 (3) obj. -14.3118 iterations 0
Cbc0038I Pass  27: suminf.    0.88752 (4) obj. -14.3118 iterations 6
Cbc0038I Pass  28: suminf.    0.88752 (4) obj. -14.3118 iterations 1
Cbc0038I Pass  29: suminf.    0.85057 (3) obj. -14.3118 iterations 6
Cbc0038I Pass  30: suminf.    0.51147 (3) obj. -14.3118 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 72 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.1922 - took 0.08 seconds
Cbc0012I Integer solution of -11.19216 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 130 rows 72 columns, reduced to 63 rows 36 columns
Cbc0012I Integer solution of -11.204414 found by RINS after 0 iterations and 0 nodes (0.13 seconds)
Cbc0031I 20 added rows had average density of 41.45
Cbc0013I At root node, 20 cuts changed objective from -42.387424 to -32.869981 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7663 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1087 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 157 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 10 nodes, 3 on tree, -11.204414 best solution, best possible -32.869981 (0.69 seconds)
Cbc0012I Integer solution of -11.2997 found by rounding after 6448 iterations and 23 nodes (0.74 seconds)
Cbc0016I Integer solution of -11.57281 found by strong branching after 6546 iterations and 27 nodes (0.75 seconds)
Cbc0038I Full problem 130 rows 72 columns, reduced to 26 rows 16 columns
Cbc0012I Integer solution of -11.61665 found by rounding after 7310 iterations and 51 nodes (0.81 seconds)
Cbc0004I Integer solution of -12.34517 found after 7447 iterations and 62 nodes (0.83 seconds)
Cbc0012I Integer solution of -12.47289 found by rounding after 7471 iterations and 64 nodes (0.83 seconds)
Cbc0016I Integer solution of -12.51796 found by strong branching after 7549 iterations and 67 nodes (0.84 seconds)
Cbc0001I Search completed - best objective -12.51796, took 8376 iterations and 92 nodes (0.93 seconds)
Cbc0032I Strong branching done 922 times (11173 iterations), fathomed 9 nodes and fixed 69 variables
Cbc0035I Maximum depth 12, 419 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       0.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 118 (-35) columns and 1913 (-1391) elements
Clp1000I sum of infeasibilities 4.61143e-08 - average 4.35041e-10, 18 fixed columns
Coin0506I Presolve 89 (-17) rows, 100 (-18) columns and 1456 (-457) elements
Clp0006I 0  Obj 49.253503 Dual inf 6.8850995 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 1.6582059 - largest nonzero change 1.6308042e-05 ( 0.0012557832%) - largest zero change 2.9006479e-05
Clp0000I Optimal - objective value 59.981603
Clp0000I Optimal - objective value 59.981603
Coin0511I After Postsolve, objective 59.981603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.981603
Clp0000I Optimal - objective value 59.981603
Clp0000I Optimal - objective value 59.981603
Clp0000I Optimal - objective value 59.981603
Coin0511I After Postsolve, objective 59.981603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.98160261 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 118 columns (118 integer (118 of which binary)) and 1917 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.18167
Cbc0038I Pass   1: suminf.    2.12633 (28) obj. -35.2678 iterations 19
Cbc0038I Pass   2: suminf.    2.00032 (27) obj. -34.0172 iterations 3
Cbc0038I Pass   3: suminf.    1.04103 (17) obj. -13.2428 iterations 10
Cbc0038I Solution found of 7.34687
Cbc0038I Rounding solution of -1.91202 is better than previous of 7.34687

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1.91202 to -9.02023 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.2097
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.12633 (28) obj. -35.2678 iterations 0
Cbc0038I Pass   5: suminf.    2.00032 (27) obj. -34.0172 iterations 4
Cbc0038I Pass   6: suminf.    0.53012 (12) obj. -13.2097 iterations 42
Cbc0038I Pass   7: suminf.    0.53012 (12) obj. -13.2097 iterations 0
Cbc0038I Pass   8: suminf.    0.99330 (5) obj. -13.2097 iterations 22
Cbc0038I Pass   9: suminf.    0.79650 (5) obj. -13.2097 iterations 1
Cbc0038I Pass  10: suminf.    1.54346 (5) obj. -13.2097 iterations 14
Cbc0038I Pass  11: suminf.    1.42431 (5) obj. -13.2097 iterations 2
Cbc0038I Pass  12: suminf.    0.99330 (5) obj. -13.2097 iterations 7
Cbc0038I Pass  13: suminf.    3.10414 (22) obj. -13.2097 iterations 24
Cbc0038I Pass  14: suminf.    2.02623 (20) obj. -13.2097 iterations 6
Cbc0038I Pass  15: suminf.    1.47892 (13) obj. -13.2097 iterations 14
Cbc0038I Pass  16: suminf.    0.94126 (7) obj. -13.2097 iterations 22
Cbc0038I Pass  17: suminf.    0.53783 (6) obj. -13.2097 iterations 6
Cbc0038I Pass  18: suminf.    0.99330 (5) obj. -13.2097 iterations 11
Cbc0038I Pass  19: suminf.    0.79650 (5) obj. -13.2097 iterations 1
Cbc0038I Pass  20: suminf.    1.54346 (5) obj. -13.2097 iterations 12
Cbc0038I Pass  21: suminf.    1.42431 (5) obj. -13.2097 iterations 2
Cbc0038I Pass  22: suminf.    0.99330 (5) obj. -13.2097 iterations 7
Cbc0038I Pass  23: suminf.    3.18878 (15) obj. -13.2097 iterations 23
Cbc0038I Pass  24: suminf.    1.51052 (13) obj. -13.2097 iterations 8
Cbc0038I Pass  25: suminf.    1.33487 (11) obj. -13.2097 iterations 3
Cbc0038I Pass  26: suminf.    0.92391 (12) obj. -13.2097 iterations 10
Cbc0038I Pass  27: suminf.    1.16765 (7) obj. -13.2097 iterations 17
Cbc0038I Pass  28: suminf.    0.56723 (5) obj. -13.2097 iterations 4
Cbc0038I Pass  29: suminf.    1.90536 (6) obj. -13.2097 iterations 8
Cbc0038I Pass  30: suminf.    1.71351 (6) obj. -13.2097 iterations 1
Cbc0038I Pass  31: suminf.    1.71351 (6) obj. -13.2097 iterations 1
Cbc0038I Pass  32: suminf.    1.01890 (6) obj. -13.2097 iterations 7
Cbc0038I Pass  33: suminf.    0.56723 (5) obj. -13.2097 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -9.02023 to -9.80575 (0.05 seconds)
Cbc0038I Round again with cutoff of -20.7507
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.12633 (28) obj. -35.2678 iterations 0
Cbc0038I Pass  34: suminf.    2.00032 (27) obj. -34.0172 iterations 4
Cbc0038I Pass  35: suminf.    1.58399 (14) obj. -20.7507 iterations 47
Cbc0038I Pass  36: suminf.    1.30622 (15) obj. -20.7507 iterations 1
Cbc0038I Pass  37: suminf.    2.10592 (9) obj. -20.7507 iterations 18
Cbc0038I Pass  38: suminf.    2.10592 (9) obj. -20.7507 iterations 2
Cbc0038I Pass  39: suminf.    1.31113 (9) obj. -20.7507 iterations 5
Cbc0038I Pass  40: suminf.    1.16819 (9) obj. -20.7507 iterations 1
Cbc0038I Pass  41: suminf.    2.10592 (9) obj. -20.7507 iterations 19
Cbc0038I Pass  42: suminf.    1.98416 (17) obj. -20.7507 iterations 26
Cbc0038I Pass  43: suminf.    1.82653 (19) obj. -20.7507 iterations 7
Cbc0038I Pass  44: suminf.    2.07506 (10) obj. -20.7507 iterations 17
Cbc0038I Pass  45: suminf.    0.80944 (9) obj. -20.7507 iterations 4
Cbc0038I Pass  46: suminf.    0.80944 (9) obj. -20.7507 iterations 0
Cbc0038I Pass  47: suminf.    2.07506 (10) obj. -20.7507 iterations 6
Cbc0038I Pass  48: suminf.    1.75974 (15) obj. -20.7507 iterations 14
Cbc0038I Pass  49: suminf.    1.41080 (14) obj. -20.7507 iterations 3
Cbc0038I Pass  50: suminf.    1.11345 (14) obj. -20.7507 iterations 4
Cbc0038I Pass  51: suminf.    1.65051 (10) obj. -20.7507 iterations 14
Cbc0038I Pass  52: suminf.    0.94689 (9) obj. -20.7507 iterations 4
Cbc0038I Pass  53: suminf.    1.65051 (10) obj. -20.7507 iterations 6
Cbc0038I Pass  54: suminf.    1.66519 (16) obj. -20.7507 iterations 17
Cbc0038I Pass  55: suminf.    1.39523 (15) obj. -20.7507 iterations 4
Cbc0038I Pass  56: suminf.    1.75370 (10) obj. -20.7507 iterations 13
Cbc0038I Pass  57: suminf.    1.75370 (10) obj. -20.7507 iterations 0
Cbc0038I Pass  58: suminf.    1.81074 (10) obj. -20.7507 iterations 4
Cbc0038I Pass  59: suminf.    1.81074 (10) obj. -20.7507 iterations 0
Cbc0038I Pass  60: suminf.    1.75370 (10) obj. -20.7507 iterations 3
Cbc0038I Pass  61: suminf.    1.79221 (14) obj. -20.7507 iterations 18
Cbc0038I Pass  62: suminf.    1.33054 (11) obj. -20.7507 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 29 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -9.80575 - took 0.07 seconds
Cbc0012I Integer solution of -9.8057538 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 20 rows 21 columns
Cbc0031I 51 added rows had average density of 37.529412
Cbc0013I At root node, 51 cuts changed objective from -50.914452 to -20.130297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7165 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1198 row cuts average 104.3 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 563 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 704 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 70.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 107 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.667 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.8057538 best solution, best possible -20.130297 (2.12 seconds)
Cbc0010I After 13 nodes, 8 on tree, -9.8057538 best solution, best possible -20.130297 (2.84 seconds)
Cbc0012I Integer solution of -12.34517 found by rounding after 3859 iterations and 19 nodes (3.01 seconds)
Cbc0016I Integer solution of -12.47289 found by strong branching after 3973 iterations and 25 nodes (3.24 seconds)
Cbc0016I Integer solution of -12.51796 found by strong branching after 3986 iterations and 26 nodes (3.30 seconds)
Cbc0010I After 32 nodes, 11 on tree, -12.51796 best solution, best possible -20.130297 (3.60 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 9 rows 14 columns
Cbc0001I Search completed - best objective -12.51796, took 4764 iterations and 50 nodes (3.89 seconds)
Cbc0032I Strong branching done 604 times (9112 iterations), fathomed 8 nodes and fixed 12 variables
Cbc0035I Maximum depth 17, 118 variables fixed on reduced cost
Total time (CPU seconds):       2.67   (Wallclock seconds):       3.91

