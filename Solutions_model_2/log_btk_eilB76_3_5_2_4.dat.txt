Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 73 (-5) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 0.000814457 - average 6.31362e-06, 22 fixed columns
Coin0506I Presolve 83 (-46) rows, 48 (-25) columns and 254 (-142) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.0349558 - largest nonzero change 0 ( 0%) - largest zero change 1.7963867e-05
Clp0000I Optimal - objective value 70.368689
Clp0000I Optimal - objective value 70.368689
Coin0511I After Postsolve, objective 70.368689, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.368689
Clp0000I Optimal - objective value 70.368689
Clp0000I Optimal - objective value 70.368689
Coin0511I After Postsolve, objective 70.368689, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.36868872 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 73 columns (72 integer (72 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.649%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.60625
Cbc0038I Solution found of 0.099401
Cbc0038I Relaxing continuous gives -9.4547
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 73 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -9.4547 to -42.7908 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.4752
Cbc0038I Pass   1: suminf.    2.66040 (24) obj. -45.4752 iterations 65
Cbc0038I Pass   2: suminf.    3.43321 (9) obj. -45.4752 iterations 27
Cbc0038I Pass   3: suminf.    2.22727 (9) obj. -45.4752 iterations 7
Cbc0038I Pass   4: suminf.    1.31520 (5) obj. -45.4752 iterations 11
Cbc0038I Pass   5: suminf.    1.12711 (7) obj. -45.4752 iterations 4
Cbc0038I Pass   6: suminf.    1.11310 (4) obj. -45.4752 iterations 9
Cbc0038I Pass   7: suminf.    0.73046 (4) obj. -45.4752 iterations 8
Cbc0038I Pass   8: suminf.    0.73046 (4) obj. -45.4752 iterations 0
Cbc0038I Pass   9: suminf.    1.11310 (4) obj. -45.4752 iterations 9
Cbc0038I Pass  10: suminf.    1.19799 (5) obj. -45.4752 iterations 13
Cbc0038I Pass  11: suminf.    1.02077 (5) obj. -45.4752 iterations 10
Cbc0038I Pass  12: suminf.    0.93964 (4) obj. -45.4752 iterations 4
Cbc0038I Pass  13: suminf.    0.71747 (3) obj. -45.4752 iterations 12
Cbc0038I Pass  14: suminf.    0.38005 (4) obj. -45.4752 iterations 13
Cbc0038I Pass  15: suminf.    1.11310 (4) obj. -45.4752 iterations 10
Cbc0038I Pass  16: suminf.    0.73046 (4) obj. -45.4752 iterations 8
Cbc0038I Pass  17: suminf.    0.73046 (4) obj. -45.4752 iterations 0
Cbc0038I Pass  18: suminf.    1.11310 (4) obj. -45.4752 iterations 8
Cbc0038I Pass  19: suminf.    1.52331 (7) obj. -45.4752 iterations 15
Cbc0038I Pass  20: suminf.    1.22238 (5) obj. -45.4752 iterations 14
Cbc0038I Pass  21: suminf.    1.31184 (4) obj. -45.4752 iterations 11
Cbc0038I Pass  22: suminf.    0.93990 (4) obj. -45.4752 iterations 3
Cbc0038I Pass  23: suminf.    1.07394 (4) obj. -45.4752 iterations 8
Cbc0038I Pass  24: suminf.    0.93990 (4) obj. -45.4752 iterations 4
Cbc0038I Pass  25: suminf.    3.17827 (8) obj. -45.4752 iterations 22
Cbc0038I Pass  26: suminf.    1.68422 (7) obj. -45.4752 iterations 19
Cbc0038I Pass  27: suminf.    1.68422 (7) obj. -45.4752 iterations 0
Cbc0038I Pass  28: suminf.    0.96673 (4) obj. -45.4752 iterations 15
Cbc0038I Pass  29: suminf.    0.88136 (4) obj. -45.4752 iterations 4
Cbc0038I Pass  30: suminf.    0.88136 (4) obj. -45.4752 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 73 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -42.7908 - took 0.05 seconds
Cbc0012I Integer solution of -42.79075 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 123 rows 73 columns, reduced to 55 rows 32 columns
Cbc0031I 17 added rows had average density of 41.941176
Cbc0013I At root node, 17 cuts changed objective from -69.634566 to -60.319391 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8104 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1462 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -42.79075 best solution, best possible -60.319391 (0.69 seconds)
Cbc0001I Search completed - best objective -42.79075, took 7045 iterations and 32 nodes (0.76 seconds)
Cbc0032I Strong branching done 464 times (8952 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 14, 69 variables fixed on reduced cost
Total time (CPU seconds):       0.75   (Wallclock seconds):       0.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 121 (-31) columns and 2049 (-1254) elements
Clp1000I sum of infeasibilities 1.49084e-08 - average 1.40645e-10, 69 fixed columns
Coin0506I Presolve 50 (-56) rows, 52 (-69) columns and 284 (-1765) elements
Clp0006I 0  Obj 157.26167 Dual inf 30.290816 (52)
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 167.65367
Clp0000I Optimal - objective value 167.65367
Coin0511I After Postsolve, objective 167.65367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 167.65367 Dual inf 8.2020804 (3)
Clp0014I Perturbing problem by 0.001% of 1.5160179 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 167.65367
Clp0000I Optimal - objective value 167.65367
Clp0000I Optimal - objective value 167.65367
Coin0511I After Postsolve, objective 167.65367, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.6536703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 121 columns (121 integer (121 of which binary)) and 2065 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.690%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.38491
Cbc0038I Pass   1: suminf.    0.23577 (14) obj. -38.8097 iterations 47
Cbc0038I Pass   2: suminf.    0.23577 (14) obj. -38.8097 iterations 0
Cbc0038I Pass   3: suminf.    0.02858 (2) obj. -17.2513 iterations 18
Cbc0038I Solution found of -14.294
Cbc0038I Rounding solution of -24.0928 is better than previous of -14.294

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 121 columns, reduced to 28 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -24.0928 to -53.294 (0.05 seconds)
Cbc0038I Round again with cutoff of -59.3519
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.91221 (42) obj. -59.3519 iterations 28
Cbc0038I Pass   5: suminf.    1.69348 (42) obj. -59.3519 iterations 1
Cbc0038I Pass   6: suminf.    1.63673 (43) obj. -59.3519 iterations 2
Cbc0038I Pass   7: suminf.    3.67049 (28) obj. -59.3519 iterations 17
Cbc0038I Pass   8: suminf.    0.84464 (4) obj. -59.3519 iterations 71
Cbc0038I Pass   9: suminf.    0.39233 (2) obj. -59.3519 iterations 7
Cbc0038I Pass  10: suminf.    0.51250 (5) obj. -59.3519 iterations 4
Cbc0038I Pass  11: suminf.    1.40685 (13) obj. -59.3519 iterations 18
Cbc0038I Pass  12: suminf.    1.40685 (13) obj. -59.3519 iterations 2
Cbc0038I Pass  13: suminf.    1.00849 (4) obj. -59.3519 iterations 39
Cbc0038I Pass  14: suminf.    0.48148 (1) obj. -59.6813 iterations 6
Cbc0038I Pass  15: suminf.    0.49933 (1) obj. -59.3519 iterations 3
Cbc0038I Pass  16: suminf.    2.67617 (11) obj. -59.3519 iterations 34
Cbc0038I Pass  17: suminf.    1.82617 (14) obj. -59.3519 iterations 9
Cbc0038I Pass  18: suminf.    1.33745 (4) obj. -59.3519 iterations 31
Cbc0038I Pass  19: suminf.    0.75882 (3) obj. -59.3519 iterations 9
Cbc0038I Pass  20: suminf.    0.40382 (3) obj. -59.3519 iterations 10
Cbc0038I Pass  21: suminf.    1.33745 (4) obj. -59.3519 iterations 8
Cbc0038I Pass  22: suminf.    1.41936 (14) obj. -59.3519 iterations 15
Cbc0038I Pass  23: suminf.    1.14400 (11) obj. -59.3519 iterations 4
Cbc0038I Pass  24: suminf.    0.97488 (3) obj. -59.3519 iterations 16
Cbc0038I Pass  25: suminf.    0.97488 (3) obj. -59.3519 iterations 4
Cbc0038I Pass  26: suminf.    1.15139 (6) obj. -59.3519 iterations 12
Cbc0038I Pass  27: suminf.    1.14134 (5) obj. -59.3519 iterations 2
Cbc0038I Pass  28: suminf.    1.00785 (4) obj. -59.3519 iterations 5
Cbc0038I Pass  29: suminf.    0.31683 (6) obj. -59.3519 iterations 2
Cbc0038I Pass  30: suminf.    1.15085 (4) obj. -59.3519 iterations 16
Cbc0038I Pass  31: suminf.    0.86300 (2) obj. -59.3519 iterations 3
Cbc0038I Pass  32: suminf.    0.82213 (2) obj. -59.3519 iterations 2
Cbc0038I Pass  33: suminf.    2.21319 (13) obj. -59.3519 iterations 16
Cbc0038I Rounding solution of -54.8642 is better than previous of -53.294

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 121 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -54.8642 to -58.2455 (0.08 seconds)
Cbc0038I Round again with cutoff of -70.256
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.95376 (42) obj. -70.256 iterations 0
Cbc0038I Pass  34: suminf.    2.80655 (42) obj. -70.256 iterations 1
Cbc0038I Pass  35: suminf.    2.77759 (43) obj. -70.256 iterations 2
Cbc0038I Pass  36: suminf.    3.30713 (23) obj. -70.256 iterations 25
Cbc0038I Pass  37: suminf.    1.29823 (11) obj. -70.256 iterations 23
Cbc0038I Pass  38: suminf.    1.36785 (5) obj. -70.256 iterations 15
Cbc0038I Pass  39: suminf.    0.92291 (5) obj. -70.256 iterations 7
Cbc0038I Pass  40: suminf.    1.21269 (5) obj. -70.256 iterations 4
Cbc0038I Pass  41: suminf.    1.21269 (5) obj. -70.256 iterations 3
Cbc0038I Pass  42: suminf.    1.10123 (6) obj. -70.256 iterations 5
Cbc0038I Pass  43: suminf.    1.62000 (13) obj. -70.256 iterations 17
Cbc0038I Pass  44: suminf.    1.61839 (13) obj. -70.256 iterations 1
Cbc0038I Pass  45: suminf.    1.75421 (6) obj. -70.256 iterations 17
Cbc0038I Pass  46: suminf.    1.75421 (6) obj. -70.256 iterations 2
Cbc0038I Pass  47: suminf.    1.54079 (6) obj. -70.256 iterations 6
Cbc0038I Pass  48: suminf.    1.21269 (5) obj. -70.256 iterations 6
Cbc0038I Pass  49: suminf.    1.10123 (6) obj. -70.256 iterations 7
Cbc0038I Pass  50: suminf.    0.92291 (5) obj. -70.256 iterations 4
Cbc0038I Pass  51: suminf.    1.21269 (5) obj. -70.256 iterations 5
Cbc0038I Pass  52: suminf.    1.98089 (13) obj. -70.256 iterations 13
Cbc0038I Pass  53: suminf.    1.64557 (13) obj. -70.256 iterations 3
Cbc0038I Pass  54: suminf.    1.75421 (6) obj. -70.256 iterations 14
Cbc0038I Pass  55: suminf.    1.75421 (6) obj. -70.256 iterations 2
Cbc0038I Pass  56: suminf.    1.54079 (6) obj. -70.256 iterations 6
Cbc0038I Pass  57: suminf.    1.21269 (5) obj. -70.256 iterations 5
Cbc0038I Pass  58: suminf.    1.10123 (6) obj. -70.256 iterations 5
Cbc0038I Pass  59: suminf.    0.92291 (5) obj. -70.256 iterations 4
Cbc0038I Pass  60: suminf.    1.21269 (5) obj. -70.256 iterations 4
Cbc0038I Pass  61: suminf.    4.06041 (12) obj. -70.256 iterations 11
Cbc0038I Pass  62: suminf.    2.77127 (8) obj. -70.256 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 121 columns, reduced to 45 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -58.2455 - took 0.06 seconds
Cbc0012I Integer solution of -58.2455 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 100 rows 121 columns, reduced to 29 rows 32 columns
Cbc0031I 39 added rows had average density of 10.076923
Cbc0013I At root node, 39 cuts changed objective from -113.87248 to -61.140915 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 363 row cuts average 2.4 elements, 24 column cuts (24 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 68 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 204 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -58.2455 best solution, best possible -61.099891 (0.39 seconds)
Cbc0001I Search completed - best objective -58.24549999999999, took 379 iterations and 2 nodes (0.45 seconds)
Cbc0032I Strong branching done 16 times (125 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.46

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 73 (-5) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 0.000814457 - average 6.31362e-06, 22 fixed columns
Coin0506I Presolve 83 (-46) rows, 48 (-25) columns and 254 (-142) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.0349558 - largest nonzero change 0 ( 0%) - largest zero change 1.7963867e-05
Clp0000I Optimal - objective value 70.368689
Clp0000I Optimal - objective value 70.368689
Coin0511I After Postsolve, objective 70.368689, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.368689
Clp0000I Optimal - objective value 70.368689
Clp0000I Optimal - objective value 70.368689
Coin0511I After Postsolve, objective 70.368689, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.36868872 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 73 columns (72 integer (72 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.649%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.60625
Cbc0038I Solution found of 0.099401
Cbc0038I Relaxing continuous gives -9.4547
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 73 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -9.4547 to -42.7908 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.4752
Cbc0038I Pass   1: suminf.    2.66040 (24) obj. -45.4752 iterations 65
Cbc0038I Pass   2: suminf.    3.43321 (9) obj. -45.4752 iterations 27
Cbc0038I Pass   3: suminf.    2.22727 (9) obj. -45.4752 iterations 7
Cbc0038I Pass   4: suminf.    1.31520 (5) obj. -45.4752 iterations 11
Cbc0038I Pass   5: suminf.    1.12711 (7) obj. -45.4752 iterations 4
Cbc0038I Pass   6: suminf.    1.11310 (4) obj. -45.4752 iterations 9
Cbc0038I Pass   7: suminf.    0.73046 (4) obj. -45.4752 iterations 8
Cbc0038I Pass   8: suminf.    0.73046 (4) obj. -45.4752 iterations 0
Cbc0038I Pass   9: suminf.    1.11310 (4) obj. -45.4752 iterations 9
Cbc0038I Pass  10: suminf.    1.19799 (5) obj. -45.4752 iterations 13
Cbc0038I Pass  11: suminf.    1.02077 (5) obj. -45.4752 iterations 10
Cbc0038I Pass  12: suminf.    0.93964 (4) obj. -45.4752 iterations 4
Cbc0038I Pass  13: suminf.    0.71747 (3) obj. -45.4752 iterations 12
Cbc0038I Pass  14: suminf.    0.38005 (4) obj. -45.4752 iterations 13
Cbc0038I Pass  15: suminf.    1.11310 (4) obj. -45.4752 iterations 10
Cbc0038I Pass  16: suminf.    0.73046 (4) obj. -45.4752 iterations 8
Cbc0038I Pass  17: suminf.    0.73046 (4) obj. -45.4752 iterations 0
Cbc0038I Pass  18: suminf.    1.11310 (4) obj. -45.4752 iterations 8
Cbc0038I Pass  19: suminf.    1.52331 (7) obj. -45.4752 iterations 15
Cbc0038I Pass  20: suminf.    1.22238 (5) obj. -45.4752 iterations 14
Cbc0038I Pass  21: suminf.    1.31184 (4) obj. -45.4752 iterations 11
Cbc0038I Pass  22: suminf.    0.93990 (4) obj. -45.4752 iterations 3
Cbc0038I Pass  23: suminf.    1.07394 (4) obj. -45.4752 iterations 8
Cbc0038I Pass  24: suminf.    0.93990 (4) obj. -45.4752 iterations 4
Cbc0038I Pass  25: suminf.    3.17827 (8) obj. -45.4752 iterations 22
Cbc0038I Pass  26: suminf.    1.68422 (7) obj. -45.4752 iterations 19
Cbc0038I Pass  27: suminf.    1.68422 (7) obj. -45.4752 iterations 0
Cbc0038I Pass  28: suminf.    0.96673 (4) obj. -45.4752 iterations 15
Cbc0038I Pass  29: suminf.    0.88136 (4) obj. -45.4752 iterations 4
Cbc0038I Pass  30: suminf.    0.88136 (4) obj. -45.4752 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 73 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -42.7908 - took 0.05 seconds
Cbc0012I Integer solution of -42.79075 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 123 rows 73 columns, reduced to 55 rows 32 columns
Cbc0031I 17 added rows had average density of 41.941176
Cbc0013I At root node, 17 cuts changed objective from -69.634566 to -60.319391 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8104 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1462 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -42.79075 best solution, best possible -60.319391 (0.68 seconds)
Cbc0001I Search completed - best objective -42.79075, took 7045 iterations and 32 nodes (0.84 seconds)
Cbc0032I Strong branching done 464 times (8952 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 14, 69 variables fixed on reduced cost
Total time (CPU seconds):       0.80   (Wallclock seconds):       0.85

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 119 (-34) columns and 1957 (-1347) elements
Clp1000I sum of infeasibilities 2.88176e-06 - average 2.77092e-08, 80 fixed columns
Coin0506I Presolve 28 (-76) rows, 38 (-81) columns and 127 (-1830) elements
Clp0006I 0  Obj -16.105084 Dual inf 6.0749924 (38)
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 1.2491973 - largest nonzero change 1.4514162e-05 ( 0.00096990836%) - largest zero change 2.9217856e-05
Clp0000I Optimal - objective value -13.265476
Clp0000I Optimal - objective value -13.265476
Coin0511I After Postsolve, objective -13.265476, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -13.265476 Dual inf 136.07279 (48)
Clp0014I Perturbing problem by 0.001% of 1.5267964 - largest nonzero change 2.5315201e-05 ( 0.0015420975%) - largest zero change 2.9726557e-05
Clp0000I Optimal - objective value 83.311714
Clp0000I Optimal - objective value 83.311714
Clp0000I Optimal - objective value 83.311714
Coin0511I After Postsolve, objective 83.311714, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.31171422 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 119 columns (119 integer (119 of which binary)) and 1972 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 3.2701
Cbc0038I Pass   1: suminf.    1.29669 (26) obj. -67.3339 iterations 14
Cbc0038I Pass   2: suminf.    0.99820 (24) obj. -63.7902 iterations 2
Cbc0038I Solution found of -20.8058
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 119 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -25.6808
Cbc0038I Pass   3: suminf.    1.29669 (26) obj. -67.3339 iterations 0
Cbc0038I Pass   4: suminf.    0.99820 (24) obj. -63.7902 iterations 2
Cbc0038I Pass   5: suminf.    0.44038 (4) obj. -25.6808 iterations 28
Cbc0038I Pass   6: suminf.    0.43074 (2) obj. -25.6808 iterations 15
Cbc0038I Pass   7: suminf.    0.84453 (2) obj. -25.6808 iterations 4
Cbc0038I Pass   8: suminf.    1.04602 (12) obj. -25.6808 iterations 24
Cbc0038I Pass   9: suminf.    0.74746 (11) obj. -29.2636 iterations 8
Cbc0038I Pass  10: suminf.    2.40219 (10) obj. -25.6808 iterations 26
Cbc0038I Pass  11: suminf.    1.54499 (13) obj. -25.6808 iterations 12
Cbc0038I Pass  12: suminf.    2.36648 (9) obj. -25.6808 iterations 10
Cbc0038I Pass  13: suminf.    2.19511 (8) obj. -25.6808 iterations 4
Cbc0038I Pass  14: suminf.    1.49495 (10) obj. -25.6808 iterations 12
Cbc0038I Pass  15: suminf.    2.29304 (8) obj. -25.6808 iterations 9
Cbc0038I Pass  16: suminf.    2.19511 (7) obj. -25.6808 iterations 5
Cbc0038I Pass  17: suminf.    1.06702 (8) obj. -25.6808 iterations 30
Cbc0038I Pass  18: suminf.    0.49121 (7) obj. -25.6808 iterations 5
Cbc0038I Pass  19: suminf.    0.87430 (7) obj. -25.6808 iterations 20
Cbc0038I Pass  20: suminf.    0.73038 (6) obj. -25.6808 iterations 3
Cbc0038I Pass  21: suminf.    1.44699 (7) obj. -25.6808 iterations 11
Cbc0038I Pass  22: suminf.    1.04987 (14) obj. -25.6808 iterations 10
Cbc0038I Pass  23: suminf.    2.04849 (9) obj. -25.6808 iterations 11
Cbc0038I Pass  24: suminf.    1.85666 (9) obj. -25.6808 iterations 3
Cbc0038I Pass  25: suminf.    2.04849 (9) obj. -25.6808 iterations 4
Cbc0038I Pass  26: suminf.    2.18441 (12) obj. -25.6808 iterations 10
Cbc0038I Pass  27: suminf.    0.48948 (8) obj. -25.6808 iterations 3
Cbc0038I Pass  28: suminf.    0.48242 (12) obj. -25.6808 iterations 4
Cbc0038I Pass  29: suminf.    2.05559 (9) obj. -25.6808 iterations 10
Cbc0038I Pass  30: suminf.    0.62398 (10) obj. -25.6808 iterations 4
Cbc0038I Pass  31: suminf.    0.62398 (10) obj. -25.6808 iterations 0
Cbc0038I Pass  32: suminf.    2.13289 (9) obj. -25.6808 iterations 5
Cbc0038I Rounding solution of -32.4449 is better than previous of -20.8058

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 119 columns, reduced to 39 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -32.4449 to -40.8217 (0.09 seconds)
Cbc0038I Round again with cutoff of -46.5685
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.29669 (26) obj. -67.3339 iterations 0
Cbc0038I Pass  33: suminf.    0.99820 (24) obj. -63.7902 iterations 2
Cbc0038I Pass  34: suminf.    1.07429 (13) obj. -46.5685 iterations 18
Cbc0038I Pass  35: suminf.    1.07429 (13) obj. -46.5685 iterations 0
Cbc0038I Pass  36: suminf.    2.45987 (20) obj. -46.5685 iterations 41
Cbc0038I Pass  37: suminf.    2.45768 (21) obj. -46.5685 iterations 1
Cbc0038I Pass  38: suminf.    3.29304 (18) obj. -46.5685 iterations 19
Cbc0038I Pass  39: suminf.    1.66391 (18) obj. -46.5685 iterations 8
Cbc0038I Pass  40: suminf.    1.41134 (18) obj. -47.1628 iterations 6
Cbc0038I Pass  41: suminf.    3.12675 (22) obj. -46.5685 iterations 20
Cbc0038I Pass  42: suminf.    1.36926 (17) obj. -46.5685 iterations 5
Cbc0038I Pass  43: suminf.    1.28000 (18) obj. -46.5685 iterations 5
Cbc0038I Pass  44: suminf.    3.12675 (22) obj. -46.5685 iterations 6
Cbc0038I Pass  45: suminf.    1.72223 (19) obj. -46.5685 iterations 18
Cbc0038I Pass  46: suminf.    1.37371 (20) obj. -46.5685 iterations 7
Cbc0038I Pass  47: suminf.    1.42102 (18) obj. -46.5685 iterations 15
Cbc0038I Pass  48: suminf.    1.42102 (18) obj. -46.5685 iterations 4
Cbc0038I Pass  49: suminf.    2.56820 (18) obj. -46.5685 iterations 6
Cbc0038I Pass  50: suminf.    2.56820 (18) obj. -46.5685 iterations 3
Cbc0038I Pass  51: suminf.    2.53282 (18) obj. -46.5685 iterations 13
Cbc0038I Pass  52: suminf.    2.53282 (18) obj. -46.5685 iterations 3
Cbc0038I Pass  53: suminf.    1.25635 (21) obj. -46.5685 iterations 7
Cbc0038I Pass  54: suminf.    1.18388 (20) obj. -46.5685 iterations 1
Cbc0038I Pass  55: suminf.    1.19965 (19) obj. -46.5685 iterations 4
Cbc0038I Pass  56: suminf.    1.09514 (19) obj. -46.5685 iterations 1
Cbc0038I Pass  57: suminf.    2.81784 (21) obj. -46.5685 iterations 14
Cbc0038I Pass  58: suminf.    1.36926 (17) obj. -46.5685 iterations 4
Cbc0038I Pass  59: suminf.    1.28000 (18) obj. -46.5685 iterations 5
Cbc0038I Pass  60: suminf.    3.12675 (22) obj. -46.5685 iterations 6
Cbc0038I Pass  61: suminf.    1.49033 (23) obj. -46.5685 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 119 columns, reduced to 38 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -40.8217 - took 0.07 seconds
Cbc0012I Integer solution of -40.82169 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 99 rows 119 columns, reduced to 10 rows 13 columns
Cbc0031I 54 added rows had average density of 15.5
Cbc0013I At root node, 54 cuts changed objective from -69.555546 to -47.164809 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 1950 row cuts average 6.5 elements, 4 column cuts (4 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 102 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 17 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 176 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 281 row cuts average 66.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -40.82169 best solution, best possible -47.164809 (0.57 seconds)
Cbc0012I Integer solution of -41.79075 found by DiveCoefficient after 1103 iterations and 6 nodes (1.17 seconds)
Cbc0010I After 7 nodes, 5 on tree, -41.79075 best solution, best possible -47.164809 (1.34 seconds)
Cbc0012I Integer solution of -42.79075 found by rounding after 1265 iterations and 9 nodes (1.35 seconds)
Cbc0001I Search completed - best objective -42.79075, took 1389 iterations and 12 nodes (1.35 seconds)
Cbc0032I Strong branching done 334 times (6511 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.36

