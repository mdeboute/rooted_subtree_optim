Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 72 (-6) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 1.08639e-05 - average 8.35683e-08, 11 fixed columns
Coin0506I Presolve 108 (-22) rows, 61 (-11) columns and 330 (-66) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0521963 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Coin0511I After Postsolve, objective 49.732167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Coin0511I After Postsolve, objective 49.732167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.73216688 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 72 columns (71 integer (71 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.42739
Cbc0038I Solution found of 0.780117
Cbc0038I Relaxing continuous gives -4.55745
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -4.55745 to -30.2483 (0.03 seconds)
Cbc0038I Round again with cutoff of -32.0622
Cbc0038I Pass   1: suminf.    2.58960 (19) obj. -32.0622 iterations 38
Cbc0038I Pass   2: suminf.    1.51891 (6) obj. -32.0622 iterations 26
Cbc0038I Pass   3: suminf.    1.07486 (6) obj. -32.0622 iterations 8
Cbc0038I Pass   4: suminf.    1.07486 (6) obj. -32.0622 iterations 1
Cbc0038I Pass   5: suminf.    1.35875 (4) obj. -32.0622 iterations 5
Cbc0038I Pass   6: suminf.    0.97107 (3) obj. -32.0622 iterations 3
Cbc0038I Pass   7: suminf.    0.80104 (3) obj. -32.0622 iterations 5
Cbc0038I Pass   8: suminf.    0.55352 (4) obj. -32.0622 iterations 7
Cbc0038I Pass   9: suminf.    1.28710 (4) obj. -32.0622 iterations 6
Cbc0038I Pass  10: suminf.    1.28252 (5) obj. -32.0622 iterations 1
Cbc0038I Pass  11: suminf.    0.94955 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  12: suminf.    0.91226 (6) obj. -32.0622 iterations 2
Cbc0038I Pass  13: suminf.    2.33257 (7) obj. -32.0622 iterations 9
Cbc0038I Pass  14: suminf.    1.85219 (9) obj. -32.0622 iterations 5
Cbc0038I Pass  15: suminf.    0.68855 (3) obj. -32.0622 iterations 9
Cbc0038I Pass  16: suminf.    0.48476 (3) obj. -32.0622 iterations 4
Cbc0038I Pass  17: suminf.    0.83722 (3) obj. -32.0622 iterations 10
Cbc0038I Pass  18: suminf.    0.68582 (5) obj. -32.0622 iterations 4
Cbc0038I Pass  19: suminf.    1.36120 (5) obj. -32.0622 iterations 11
Cbc0038I Pass  20: suminf.    0.97107 (3) obj. -32.0622 iterations 4
Cbc0038I Pass  21: suminf.    0.80104 (3) obj. -32.0622 iterations 5
Cbc0038I Pass  22: suminf.    0.55352 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  23: suminf.    1.28710 (4) obj. -32.0622 iterations 6
Cbc0038I Pass  24: suminf.    1.28252 (5) obj. -32.0622 iterations 1
Cbc0038I Pass  25: suminf.    0.94955 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  26: suminf.    0.91226 (6) obj. -32.0622 iterations 2
Cbc0038I Pass  27: suminf.    2.33257 (7) obj. -32.0622 iterations 9
Cbc0038I Pass  28: suminf.    1.85219 (9) obj. -32.0622 iterations 4
Cbc0038I Pass  29: suminf.    0.68855 (3) obj. -32.0622 iterations 8
Cbc0038I Pass  30: suminf.    0.48476 (3) obj. -32.0622 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -30.2483 - took 0.03 seconds
Cbc0012I Integer solution of -30.24826 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 57 rows 33 columns
Cbc0031I 22 added rows had average density of 47.818182
Cbc0013I At root node, 22 cuts changed objective from -48.386684 to -39.268374 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5975 row cuts average 4.3 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1249 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 71.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 21 nodes, 8 on tree, -30.24826 best solution, best possible -39.268374 (0.68 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 27 rows 18 columns
Cbc0001I Search completed - best objective -30.24826, took 6726 iterations and 54 nodes (0.74 seconds)
Cbc0032I Strong branching done 638 times (12926 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 26, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 114 (-38) columns and 1796 (-1507) elements
Clp1000I sum of infeasibilities 2.34717e-07 - average 2.30115e-09, 65 fixed columns
Coin0506I Presolve 48 (-54) rows, 49 (-65) columns and 329 (-1467) elements
Clp0006I 0  Obj 156.0822 Dual inf 6.6776666 (49)
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 164.99629
Clp0000I Optimal - objective value 164.99629
Coin0511I After Postsolve, objective 164.99629, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 164.99629
Clp0000I Optimal - objective value 164.99629
Clp0000I Optimal - objective value 164.99629
Clp0000I Optimal - objective value 164.99629
Coin0511I After Postsolve, objective 164.99629, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 164.9962854 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 57 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 113 columns (113 integer (113 of which binary)) and 1805 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 3.89178
Cbc0038I Pass   1: suminf.    1.60123 (28) obj. -67.8934 iterations 11
Cbc0038I Pass   2: suminf.    1.60123 (28) obj. -67.8934 iterations 1
Cbc0038I Pass   3: suminf.    0.58813 (15) obj. -51.2803 iterations 13
Cbc0038I Pass   4: suminf.    0.12804 (4) obj. -34.0274 iterations 11
Cbc0038I Solution found of -27.2507
Cbc0038I Rounding solution of -27.6392 is better than previous of -27.2507

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -27.6392 to -79.2507 (0.05 seconds)
Cbc0038I Round again with cutoff of -84.4716
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.32246 (33) obj. -84.4716 iterations 3
Cbc0038I Pass   6: suminf.    2.32246 (33) obj. -84.4716 iterations 0
Cbc0038I Pass   7: suminf.    1.71009 (23) obj. -115.549 iterations 10
Cbc0038I Pass   8: suminf.    0.34234 (2) obj. -84.4716 iterations 38
Cbc0038I Pass   9: suminf.    0.37288 (2) obj. -84.7847 iterations 4
Cbc0038I Pass  10: suminf.    1.67286 (13) obj. -84.4716 iterations 21
Cbc0038I Pass  11: suminf.    0.71600 (8) obj. -84.4716 iterations 10
Cbc0038I Pass  12: suminf.    0.75160 (3) obj. -84.4716 iterations 13
Cbc0038I Pass  13: suminf.    0.42655 (3) obj. -84.4716 iterations 7
Cbc0038I Pass  14: suminf.    0.94060 (4) obj. -84.4716 iterations 7
Cbc0038I Pass  15: suminf.    1.73508 (13) obj. -84.4716 iterations 29
Cbc0038I Pass  16: suminf.    0.83551 (10) obj. -97.3218 iterations 7
Cbc0038I Pass  17: suminf.    0.51878 (3) obj. -84.4716 iterations 26
Cbc0038I Pass  18: suminf.    0.23736 (3) obj. -84.4716 iterations 2
Cbc0038I Pass  19: suminf.    0.78982 (3) obj. -84.4716 iterations 10
Cbc0038I Pass  20: suminf.    0.78982 (3) obj. -84.4716 iterations 0
Cbc0038I Pass  21: suminf.    0.87123 (3) obj. -84.4716 iterations 3
Cbc0038I Pass  22: suminf.    1.82194 (10) obj. -84.4716 iterations 14
Cbc0038I Pass  23: suminf.    1.48007 (9) obj. -87.2065 iterations 3
Cbc0038I Pass  24: suminf.    0.73691 (4) obj. -84.4716 iterations 26
Cbc0038I Pass  25: suminf.    0.73691 (4) obj. -84.4716 iterations 4
Cbc0038I Pass  26: suminf.    0.78982 (3) obj. -84.4716 iterations 4
Cbc0038I Pass  27: suminf.    0.78982 (3) obj. -84.4716 iterations 2
Cbc0038I Pass  28: suminf.    0.87123 (3) obj. -84.4716 iterations 3
Cbc0038I Pass  29: suminf.    1.28673 (10) obj. -84.4716 iterations 16
Cbc0038I Pass  30: suminf.    0.63978 (8) obj. -89.3185 iterations 6
Cbc0038I Pass  31: suminf.    0.73691 (4) obj. -84.4716 iterations 28
Cbc0038I Pass  32: suminf.    0.73691 (4) obj. -84.4716 iterations 4
Cbc0038I Pass  33: suminf.    0.78982 (3) obj. -84.4716 iterations 4
Cbc0038I Pass  34: suminf.    0.78982 (3) obj. -84.4716 iterations 2
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 35 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -93.869
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.73128 (33) obj. -93.869 iterations 0
Cbc0038I Pass  35: suminf.    2.73128 (33) obj. -93.869 iterations 0
Cbc0038I Pass  36: suminf.    1.01374 (17) obj. -108.386 iterations 16
Cbc0038I Pass  37: suminf.    0.98300 (4) obj. -93.869 iterations 40
Cbc0038I Pass  38: suminf.    0.64903 (4) obj. -93.869 iterations 3
Cbc0038I Pass  39: suminf.    0.98300 (4) obj. -93.869 iterations 9
Cbc0038I Pass  40: suminf.    1.33935 (8) obj. -93.869 iterations 8
Cbc0038I Pass  41: suminf.    0.87590 (10) obj. -93.869 iterations 5
Cbc0038I Pass  42: suminf.    0.77570 (6) obj. -93.869 iterations 14
Cbc0038I Pass  43: suminf.    0.77570 (6) obj. -93.869 iterations 3
Cbc0038I Pass  44: suminf.    0.79058 (6) obj. -93.869 iterations 6
Cbc0038I Pass  45: suminf.    0.79058 (6) obj. -93.869 iterations 4
Cbc0038I Pass  46: suminf.    0.77570 (6) obj. -93.869 iterations 4
Cbc0038I Pass  47: suminf.    1.66142 (13) obj. -93.869 iterations 19
Cbc0038I Pass  48: suminf.    1.00534 (9) obj. -93.869 iterations 17
Cbc0038I Pass  49: suminf.    0.80906 (7) obj. -93.869 iterations 12
Cbc0038I Pass  50: suminf.    0.73489 (8) obj. -93.869 iterations 6
Cbc0038I Pass  51: suminf.    1.09812 (6) obj. -93.869 iterations 9
Cbc0038I Pass  52: suminf.    1.18570 (10) obj. -93.869 iterations 12
Cbc0038I Pass  53: suminf.    1.18570 (10) obj. -93.869 iterations 2
Cbc0038I Pass  54: suminf.    1.09812 (6) obj. -93.869 iterations 11
Cbc0038I Pass  55: suminf.    1.48724 (8) obj. -93.869 iterations 8
Cbc0038I Pass  56: suminf.    0.90331 (8) obj. -93.869 iterations 6
Cbc0038I Pass  57: suminf.    1.10904 (6) obj. -93.869 iterations 14
Cbc0038I Pass  58: suminf.    1.10904 (6) obj. -93.869 iterations 3
Cbc0038I Pass  59: suminf.    1.12392 (6) obj. -93.869 iterations 7
Cbc0038I Pass  60: suminf.    1.12392 (6) obj. -93.869 iterations 3
Cbc0038I Pass  61: suminf.    1.10904 (6) obj. -93.869 iterations 3
Cbc0038I Pass  62: suminf.    1.58139 (14) obj. -93.869 iterations 17
Cbc0038I Pass  63: suminf.    0.67948 (9) obj. -94.9249 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -79.2507 - took 0.04 seconds
Cbc0012I Integer solution of -79.250683 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 27 added rows had average density of 5.8888889
Cbc0013I At root node, 47 cuts changed objective from -131.45873 to -79.250683 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 234 row cuts average 2.0 elements, 44 column cuts (44 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 45.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 51.9 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0001I Search completed - best objective -79.25068300000001, took 170 iterations and 0 nodes (0.26 seconds)
Cbc0035I Maximum depth 0, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.27

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 72 (-6) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 1.08639e-05 - average 8.35683e-08, 11 fixed columns
Coin0506I Presolve 108 (-22) rows, 61 (-11) columns and 330 (-66) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0521963 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Coin0511I After Postsolve, objective 49.732167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Clp0000I Optimal - objective value 49.732167
Coin0511I After Postsolve, objective 49.732167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.73216688 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 72 columns (71 integer (71 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.42739
Cbc0038I Solution found of 0.780117
Cbc0038I Relaxing continuous gives -4.55745
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 57 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -4.55745 to -30.2483 (0.03 seconds)
Cbc0038I Round again with cutoff of -32.0622
Cbc0038I Pass   1: suminf.    2.58960 (19) obj. -32.0622 iterations 38
Cbc0038I Pass   2: suminf.    1.51891 (6) obj. -32.0622 iterations 26
Cbc0038I Pass   3: suminf.    1.07486 (6) obj. -32.0622 iterations 8
Cbc0038I Pass   4: suminf.    1.07486 (6) obj. -32.0622 iterations 1
Cbc0038I Pass   5: suminf.    1.35875 (4) obj. -32.0622 iterations 5
Cbc0038I Pass   6: suminf.    0.97107 (3) obj. -32.0622 iterations 3
Cbc0038I Pass   7: suminf.    0.80104 (3) obj. -32.0622 iterations 5
Cbc0038I Pass   8: suminf.    0.55352 (4) obj. -32.0622 iterations 7
Cbc0038I Pass   9: suminf.    1.28710 (4) obj. -32.0622 iterations 6
Cbc0038I Pass  10: suminf.    1.28252 (5) obj. -32.0622 iterations 1
Cbc0038I Pass  11: suminf.    0.94955 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  12: suminf.    0.91226 (6) obj. -32.0622 iterations 2
Cbc0038I Pass  13: suminf.    2.33257 (7) obj. -32.0622 iterations 9
Cbc0038I Pass  14: suminf.    1.85219 (9) obj. -32.0622 iterations 5
Cbc0038I Pass  15: suminf.    0.68855 (3) obj. -32.0622 iterations 9
Cbc0038I Pass  16: suminf.    0.48476 (3) obj. -32.0622 iterations 4
Cbc0038I Pass  17: suminf.    0.83722 (3) obj. -32.0622 iterations 10
Cbc0038I Pass  18: suminf.    0.68582 (5) obj. -32.0622 iterations 4
Cbc0038I Pass  19: suminf.    1.36120 (5) obj. -32.0622 iterations 11
Cbc0038I Pass  20: suminf.    0.97107 (3) obj. -32.0622 iterations 4
Cbc0038I Pass  21: suminf.    0.80104 (3) obj. -32.0622 iterations 5
Cbc0038I Pass  22: suminf.    0.55352 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  23: suminf.    1.28710 (4) obj. -32.0622 iterations 6
Cbc0038I Pass  24: suminf.    1.28252 (5) obj. -32.0622 iterations 1
Cbc0038I Pass  25: suminf.    0.94955 (4) obj. -32.0622 iterations 7
Cbc0038I Pass  26: suminf.    0.91226 (6) obj. -32.0622 iterations 2
Cbc0038I Pass  27: suminf.    2.33257 (7) obj. -32.0622 iterations 9
Cbc0038I Pass  28: suminf.    1.85219 (9) obj. -32.0622 iterations 4
Cbc0038I Pass  29: suminf.    0.68855 (3) obj. -32.0622 iterations 8
Cbc0038I Pass  30: suminf.    0.48476 (3) obj. -32.0622 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 72 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -30.2483 - took 0.03 seconds
Cbc0012I Integer solution of -30.24826 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 57 rows 33 columns
Cbc0031I 22 added rows had average density of 47.818182
Cbc0013I At root node, 22 cuts changed objective from -48.386684 to -39.268374 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5975 row cuts average 4.3 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1249 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 71.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 12 nodes, 9 on tree, -30.24826 best solution, best possible -39.268374 (0.69 seconds)
Cbc0038I Full problem 124 rows 72 columns, reduced to 27 rows 18 columns
Cbc0001I Search completed - best objective -30.24826, took 6726 iterations and 54 nodes (0.77 seconds)
Cbc0032I Strong branching done 638 times (12926 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 26, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 110 (-43) columns and 1660 (-1644) elements
Clp1000I sum of infeasibilities 3.98476e-08 - average 4.06608e-10, 23 fixed columns
Coin0506I Presolve 76 (-22) rows, 87 (-23) columns and 1109 (-551) elements
Clp0006I 0  Obj 49.853864 Dual inf 8.9815735 (86)
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 1.8335846 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 56.767019
Clp0000I Optimal - objective value 56.767019
Coin0511I After Postsolve, objective 56.767019, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.767019
Clp0000I Optimal - objective value 56.767019
Clp0000I Optimal - objective value 56.767019
Clp0000I Optimal - objective value 56.767019
Coin0511I After Postsolve, objective 56.767019, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.76701918 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 51 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 110 columns (110 integer (110 of which binary)) and 1696 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.598%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 3.00421
Cbc0038I Pass   1: suminf.    1.35081 (27) obj. -35.9979 iterations 27
Cbc0038I Pass   2: suminf.    1.35081 (27) obj. -35.9979 iterations 1
Cbc0038I Solution found of 3.81136
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 110 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 3.81136 to 2.53098 (0.04 seconds)
Cbc0038I Round again with cutoff of -2.31388
Cbc0038I Pass   3: suminf.    1.35081 (27) obj. -35.9979 iterations 0
Cbc0038I Pass   4: suminf.    1.35081 (27) obj. -35.9979 iterations 2
Cbc0038I Pass   5: suminf.    0.61852 (14) obj. -14.3236 iterations 13
Cbc0038I Pass   6: suminf.    0.31339 (4) obj. -2.31388 iterations 15
Cbc0038I Pass   7: suminf.    0.65856 (2) obj. -2.31388 iterations 11
Cbc0038I Pass   8: suminf.    0.50835 (4) obj. -2.31388 iterations 10
Cbc0038I Pass   9: suminf.    0.41950 (3) obj. -2.31388 iterations 7
Cbc0038I Pass  10: suminf.    0.40534 (3) obj. -2.31388 iterations 3
Cbc0038I Pass  11: suminf.    0.78562 (4) obj. -2.31388 iterations 3
Cbc0038I Pass  12: suminf.    2.57615 (12) obj. -2.31388 iterations 22
Cbc0038I Pass  13: suminf.    0.52380 (9) obj. -2.31388 iterations 14
Cbc0038I Pass  14: suminf.    0.41114 (7) obj. -2.79656 iterations 5
Cbc0038I Pass  15: suminf.    0.70264 (4) obj. -2.31388 iterations 19
Cbc0038I Pass  16: suminf.    0.54551 (4) obj. -2.31388 iterations 1
Cbc0038I Pass  17: suminf.    1.09548 (3) obj. -2.31388 iterations 7
Cbc0038I Pass  18: suminf.    0.99701 (3) obj. -3.89513 iterations 2
Cbc0038I Pass  19: suminf.    0.63560 (4) obj. -2.31388 iterations 13
Cbc0038I Pass  20: suminf.    0.63560 (4) obj. -2.31388 iterations 0
Cbc0038I Pass  21: suminf.    0.67404 (3) obj. -2.31388 iterations 8
Cbc0038I Pass  22: suminf.    0.60534 (3) obj. -2.31388 iterations 4
Cbc0038I Pass  23: suminf.    0.93493 (4) obj. -2.31388 iterations 4
Cbc0038I Pass  24: suminf.    1.33170 (13) obj. -2.31388 iterations 39
Cbc0038I Pass  25: suminf.    0.68745 (9) obj. -2.31388 iterations 16
Cbc0038I Pass  26: suminf.    0.87284 (5) obj. -2.31388 iterations 20
Cbc0038I Pass  27: suminf.    0.72650 (8) obj. -2.31388 iterations 4
Cbc0038I Pass  28: suminf.    1.36648 (6) obj. -2.31388 iterations 15
Cbc0038I Pass  29: suminf.    0.53073 (6) obj. -2.31388 iterations 15
Cbc0038I Pass  30: suminf.    0.52633 (5) obj. -2.31388 iterations 5
Cbc0038I Pass  31: suminf.    1.25084 (6) obj. -2.31388 iterations 14
Cbc0038I Pass  32: suminf.    1.24040 (7) obj. -2.31388 iterations 8
Cbc0038I Rounding solution of -0.74652 is better than previous of 2.53098

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 110 columns, reduced to 49 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -0.74652 to -30.2483 (0.08 seconds)
Cbc0038I Round again with cutoff of -33.382
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.35081 (27) obj. -35.9979 iterations 0
Cbc0038I Pass  33: suminf.    1.35081 (27) obj. -35.9979 iterations 2
Cbc0038I Pass  34: suminf.    2.50141 (24) obj. -33.382 iterations 30
Cbc0038I Pass  35: suminf.    2.08736 (24) obj. -33.382 iterations 4
Cbc0038I Pass  36: suminf.    2.15332 (21) obj. -33.382 iterations 23
Cbc0038I Pass  37: suminf.    2.06850 (22) obj. -33.382 iterations 6
Cbc0038I Pass  38: suminf.    2.10412 (22) obj. -33.382 iterations 11
Cbc0038I Pass  39: suminf.    2.06452 (22) obj. -33.382 iterations 10
Cbc0038I Pass  40: suminf.    2.17938 (22) obj. -33.382 iterations 13
Cbc0038I Pass  41: suminf.    2.13919 (22) obj. -33.382 iterations 8
Cbc0038I Pass  42: suminf.    2.20394 (22) obj. -33.382 iterations 11
Cbc0038I Pass  43: suminf.    2.16623 (22) obj. -33.382 iterations 8
Cbc0038I Pass  44: suminf.    2.17938 (22) obj. -33.382 iterations 9
Cbc0038I Pass  45: suminf.    2.17842 (22) obj. -33.382 iterations 5
Cbc0038I Pass  46: suminf.    2.13736 (22) obj. -33.382 iterations 7
Cbc0038I Pass  47: suminf.    2.17938 (22) obj. -33.382 iterations 13
Cbc0038I Pass  48: suminf.    2.13919 (22) obj. -33.382 iterations 8
Cbc0038I Pass  49: suminf.    2.20394 (22) obj. -33.382 iterations 12
Cbc0038I Pass  50: suminf.    2.16623 (22) obj. -33.382 iterations 8
Cbc0038I Pass  51: suminf.    2.17938 (22) obj. -33.382 iterations 13
Cbc0038I Pass  52: suminf.    2.31735 (22) obj. -33.382 iterations 16
Cbc0038I Pass  53: suminf.    1.85213 (20) obj. -33.4225 iterations 9
Cbc0038I Pass  54: suminf.    1.89257 (20) obj. -33.382 iterations 19
Cbc0038I Pass  55: suminf.    1.88540 (20) obj. -33.3892 iterations 10
Cbc0038I Pass  56: suminf.    1.89257 (20) obj. -33.382 iterations 14
Cbc0038I Pass  57: suminf.    1.35039 (23) obj. -33.382 iterations 18
Cbc0038I Pass  58: suminf.    1.30857 (22) obj. -33.382 iterations 6
Cbc0038I Pass  59: suminf.    2.10534 (22) obj. -33.382 iterations 22
Cbc0038I Pass  60: suminf.    1.81925 (22) obj. -33.382 iterations 4
Cbc0038I Pass  61: suminf.    3.58994 (23) obj. -33.382 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -30.2483 - took 0.06 seconds
Cbc0012I Integer solution of -30.24826 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 93 rows 110 columns, reduced to 12 rows 14 columns
Cbc0031I 62 added rows had average density of 12.451613
Cbc0013I At root node, 62 cuts changed objective from -45.916748 to -31.455345 in 39 passes
Cbc0014I Cut generator 0 (Probing) - 4115 row cuts average 7.2 elements, 5 column cuts (5 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 99 row cuts average 64.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 148 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 144 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 114 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 293 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.273 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.24826, took 1230 iterations and 0 nodes (0.88 seconds)
Cbc0032I Strong branching done 2 times (30 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.89

