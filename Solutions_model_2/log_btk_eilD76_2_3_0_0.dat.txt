Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 75 (-3) columns and 423 (-30) elements
Clp1000I sum of infeasibilities 2.9795e-05 - average 2.12821e-07, 9 fixed columns
Coin0506I Presolve 124 (-16) rows, 66 (-9) columns and 374 (-49) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 0.33416025 - largest nonzero change 0 ( 0%) - largest zero change 2.5825523e-05
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Coin0511I After Postsolve, objective 59.453568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Coin0511I After Postsolve, objective 59.453568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.45356839 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 75 columns (74 integer (74 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.57794
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.67825 iterations 53
Cbc0038I Solution found of -8.67825
Cbc0038I Relaxing continuous gives -8.67825
Cbc0038I Rounding solution of -29.0251 is better than previous of -8.67825

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 73 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -29.0251 to -36.7687 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.0373
Cbc0038I Pass   2: suminf.    3.06180 (11) obj. -39.0373 iterations 29
Cbc0038I Pass   3: suminf.    3.06180 (11) obj. -39.0373 iterations 0
Cbc0038I Pass   4: suminf.    2.51164 (7) obj. -39.0373 iterations 23
Cbc0038I Pass   5: suminf.    2.23638 (7) obj. -39.0373 iterations 5
Cbc0038I Pass   6: suminf.    3.00308 (7) obj. -39.0373 iterations 5
Cbc0038I Pass   7: suminf.    1.85988 (5) obj. -39.0373 iterations 9
Cbc0038I Pass   8: suminf.    1.85988 (5) obj. -39.0373 iterations 0
Cbc0038I Pass   9: suminf.    1.51290 (4) obj. -39.0373 iterations 5
Cbc0038I Pass  10: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  11: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  12: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  13: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  14: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  15: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  16: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  17: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  18: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  19: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  20: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  21: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  22: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  23: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  24: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  25: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  26: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  27: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  28: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  29: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  30: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  31: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -36.7687 to -38.8483 (0.09 seconds)
Cbc0038I Round again with cutoff of -43.1205
Cbc0038I Pass  31: suminf.    3.73167 (11) obj. -43.1205 iterations 0
Cbc0038I Pass  32: suminf.    3.73167 (11) obj. -43.1205 iterations 0
Cbc0038I Pass  33: suminf.    1.58518 (6) obj. -43.1205 iterations 17
Cbc0038I Pass  34: suminf.    1.58518 (6) obj. -43.1205 iterations 2
Cbc0038I Pass  35: suminf.    2.75418 (10) obj. -43.1205 iterations 15
Cbc0038I Pass  36: suminf.    2.75418 (10) obj. -43.1205 iterations 0
Cbc0038I Pass  37: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  38: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  39: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  40: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  41: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  42: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  43: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  44: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  45: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  46: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  47: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  48: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  49: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  50: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  51: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  52: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  53: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  54: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  55: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  56: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  57: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  58: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  59: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  60: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -38.8483 - took 0.11 seconds
Cbc0012I Integer solution of -38.848269 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0031I 27 added rows had average density of 50.740741
Cbc0013I At root node, 27 cuts changed objective from -59.453568 to -51.990956 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14202 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1949 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 271 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.848269 best solution, best possible -51.990956 (0.99 seconds)
Cbc0001I Search completed - best objective -38.84826899999999, took 8798 iterations and 42 nodes (1.25 seconds)
Cbc0032I Strong branching done 576 times (14006 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 20, 59 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 112 (-40) columns and 1856 (-1447) elements
Clp1000I sum of infeasibilities 2.5312e-07 - average 2.43385e-09, 16 fixed columns
Coin0506I Presolve 87 (-17) rows, 96 (-16) columns and 1481 (-375) elements
Clp0006I 0  Obj 55.963176 Dual inf 5.5804645 (95)
Clp0029I End of values pass after 96 iterations
Clp0014I Perturbing problem by 0.001% of 2.0982014 - largest nonzero change 2.948233e-05 ( 0.0016756202%) - largest zero change 2.9476262e-05
Clp0000I Optimal - objective value 69.093011
Clp0000I Optimal - objective value 69.093011
Coin0511I After Postsolve, objective 69.093011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 69.093011
Clp0000I Optimal - objective value 69.093011
Clp0000I Optimal - objective value 69.093011
Clp0000I Optimal - objective value 69.093011
Coin0511I After Postsolve, objective 69.093011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.09301056 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 113 columns (113 integer (113 of which binary)) and 1861 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 6.57788
Cbc0038I Pass   1: suminf.    2.06648 (30) obj. -54.2077 iterations 19
Cbc0038I Pass   2: suminf.    2.06648 (30) obj. -54.2077 iterations 3
Cbc0038I Pass   3: suminf.    0.77124 (17) obj. -33.6247 iterations 13
Cbc0038I Pass   4: suminf.    0.19593 (6) obj. -20.3636 iterations 11
Cbc0038I Solution found of -12.6211
Cbc0038I Rounding solution of -13.8858 is better than previous of -12.6211

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 113 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -19.0557
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.06648 (30) obj. -54.2077 iterations 0
Cbc0038I Pass   6: suminf.    2.06648 (30) obj. -54.2077 iterations 5
Cbc0038I Pass   7: suminf.    0.97089 (20) obj. -37.3625 iterations 10
Cbc0038I Pass   8: suminf.    0.97954 (7) obj. -19.0557 iterations 30
Cbc0038I Pass   9: suminf.    0.97604 (7) obj. -20.1577 iterations 4
Cbc0038I Pass  10: suminf.    1.08952 (3) obj. -19.0557 iterations 8
Cbc0038I Pass  11: suminf.    0.65098 (3) obj. -19.0557 iterations 1
Cbc0038I Pass  12: suminf.    0.78396 (2) obj. -19.0557 iterations 4
Cbc0038I Pass  13: suminf.    0.56221 (2) obj. -19.0557 iterations 2
Cbc0038I Pass  14: suminf.    1.59685 (12) obj. -20.2261 iterations 33
Cbc0038I Pass  15: suminf.    1.47791 (11) obj. -19.6407 iterations 6
Cbc0038I Pass  16: suminf.    1.06880 (6) obj. -19.0557 iterations 13
Cbc0038I Pass  17: suminf.    1.06880 (6) obj. -19.0557 iterations 0
Cbc0038I Pass  18: suminf.    1.89735 (6) obj. -19.0557 iterations 7
Cbc0038I Pass  19: suminf.    0.67387 (4) obj. -19.0557 iterations 3
Cbc0038I Pass  20: suminf.    0.67387 (4) obj. -19.0557 iterations 4
Cbc0038I Pass  21: suminf.    0.77286 (4) obj. -19.0557 iterations 6
Cbc0038I Pass  22: suminf.    0.77286 (4) obj. -19.0557 iterations 3
Cbc0038I Pass  23: suminf.    0.67387 (4) obj. -19.0557 iterations 5
Cbc0038I Pass  24: suminf.    1.69647 (11) obj. -19.0557 iterations 41
Cbc0038I Pass  25: suminf.    1.51292 (13) obj. -19.0557 iterations 7
Cbc0038I Pass  26: suminf.    1.38276 (5) obj. -19.0557 iterations 18
Cbc0038I Pass  27: suminf.    1.38276 (5) obj. -19.0557 iterations 0
Cbc0038I Pass  28: suminf.    1.03313 (3) obj. -19.0557 iterations 13
Cbc0038I Pass  29: suminf.    1.14465 (3) obj. -19.0557 iterations 4
Cbc0038I Pass  30: suminf.    0.64915 (3) obj. -19.0557 iterations 2
Cbc0038I Pass  31: suminf.    1.14465 (3) obj. -19.0557 iterations 4
Cbc0038I Pass  32: suminf.    1.93821 (10) obj. -24.8879 iterations 16
Cbc0038I Pass  33: suminf.    1.93821 (10) obj. -24.8879 iterations 4
Cbc0038I Pass  34: suminf.    1.18856 (3) obj. -19.0557 iterations 14
Cbc0038I Rounding solution of -16.8324 is better than previous of -13.8858

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 113 columns, reduced to 32 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -16.8324 to -29.6077 (0.06 seconds)
Cbc0038I Round again with cutoff of -36.8029
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.06648 (30) obj. -54.2077 iterations 0
Cbc0038I Pass  35: suminf.    2.06648 (30) obj. -54.2077 iterations 5
Cbc0038I Pass  36: suminf.    1.43684 (22) obj. -36.8029 iterations 26
Cbc0038I Pass  37: suminf.    1.43684 (22) obj. -36.8029 iterations 1
Cbc0038I Pass  38: suminf.    1.99928 (13) obj. -36.8029 iterations 35
Cbc0038I Pass  39: suminf.    1.56738 (11) obj. -38.1568 iterations 2
Cbc0038I Pass  40: suminf.    1.39139 (11) obj. -36.8029 iterations 2
Cbc0038I Pass  41: suminf.    1.39364 (9) obj. -36.8029 iterations 20
Cbc0038I Pass  42: suminf.    1.39364 (9) obj. -36.8029 iterations 6
Cbc0038I Pass  43: suminf.    1.35858 (9) obj. -36.8029 iterations 9
Cbc0038I Pass  44: suminf.    1.35858 (9) obj. -36.8029 iterations 6
Cbc0038I Pass  45: suminf.    1.39364 (9) obj. -36.8029 iterations 12
Cbc0038I Pass  46: suminf.    2.25059 (15) obj. -38.7658 iterations 25
Cbc0038I Pass  47: suminf.    2.11655 (14) obj. -38.0781 iterations 6
Cbc0038I Pass  48: suminf.    1.61634 (11) obj. -36.8029 iterations 21
Cbc0038I Pass  49: suminf.    1.61634 (11) obj. -36.8029 iterations 1
Cbc0038I Pass  50: suminf.    1.90238 (10) obj. -36.8029 iterations 15
Cbc0038I Pass  51: suminf.    1.51652 (10) obj. -37.5746 iterations 4
Cbc0038I Pass  52: suminf.    1.88855 (10) obj. -36.8029 iterations 13
Cbc0038I Pass  53: suminf.    1.88855 (10) obj. -36.8029 iterations 8
Cbc0038I Pass  54: suminf.    1.90238 (10) obj. -36.8029 iterations 9
Cbc0038I Pass  55: suminf.    1.51204 (10) obj. -37.5836 iterations 7
Cbc0038I Pass  56: suminf.    4.48170 (26) obj. -36.8029 iterations 17
Cbc0038I Pass  57: suminf.    2.61076 (16) obj. -36.8029 iterations 6
Cbc0038I Pass  58: suminf.    2.06548 (14) obj. -36.8029 iterations 4
Cbc0038I Pass  59: suminf.    2.16658 (11) obj. -36.8029 iterations 13
Cbc0038I Pass  60: suminf.    2.07614 (11) obj. -36.9838 iterations 4
Cbc0038I Pass  61: suminf.    2.16658 (11) obj. -36.8029 iterations 11
Cbc0038I Pass  62: suminf.    2.72606 (17) obj. -36.8029 iterations 25
Cbc0038I Pass  63: suminf.    2.71290 (16) obj. -36.8029 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 113 columns, reduced to 59 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -29.6077 to -38.8483 (0.09 seconds)
Cbc0038I Round again with cutoff of -46.8689
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.06648 (30) obj. -54.2077 iterations 0
Cbc0038I Pass  64: suminf.    2.06648 (30) obj. -54.2077 iterations 5
Cbc0038I Pass  65: suminf.    3.24113 (25) obj. -46.8689 iterations 28
Cbc0038I Pass  66: suminf.    2.39135 (23) obj. -46.8689 iterations 6
Cbc0038I Pass  67: suminf.    2.13929 (19) obj. -46.8689 iterations 31
Cbc0038I Pass  68: suminf.    1.95089 (18) obj. -46.8689 iterations 4
Cbc0038I Pass  69: suminf.    2.39722 (17) obj. -46.8689 iterations 20
Cbc0038I Pass  70: suminf.    2.39722 (17) obj. -46.8689 iterations 1
Cbc0038I Pass  71: suminf.    2.34733 (17) obj. -46.8689 iterations 7
Cbc0038I Pass  72: suminf.    2.34733 (17) obj. -46.8689 iterations 1
Cbc0038I Pass  73: suminf.    2.39722 (17) obj. -46.8689 iterations 11
Cbc0038I Pass  74: suminf.    3.65216 (22) obj. -46.8689 iterations 23
Cbc0038I Pass  75: suminf.    3.43148 (29) obj. -46.8689 iterations 6
Cbc0038I Pass  76: suminf.    4.11895 (20) obj. -46.8689 iterations 33
Cbc0038I Pass  77: suminf.    2.67673 (21) obj. -46.8689 iterations 6
Cbc0038I Pass  78: suminf.    2.67673 (21) obj. -46.8689 iterations 0
Cbc0038I Pass  79: suminf.    2.92325 (25) obj. -46.8689 iterations 18
Cbc0038I Pass  80: suminf.    2.92325 (25) obj. -46.8689 iterations 2
Cbc0038I Pass  81: suminf.    4.67677 (20) obj. -46.8689 iterations 11
Cbc0038I Pass  82: suminf.    2.25004 (16) obj. -47.1198 iterations 15
Cbc0038I Pass  83: suminf.    2.25004 (16) obj. -47.1198 iterations 0
Cbc0038I Pass  84: suminf.    2.30290 (24) obj. -46.8689 iterations 12
Cbc0038I Pass  85: suminf.    2.30290 (24) obj. -46.8689 iterations 2
Cbc0038I Pass  86: suminf.    4.67677 (20) obj. -46.8689 iterations 9
Cbc0038I Pass  87: suminf.    2.25004 (16) obj. -47.1198 iterations 16
Cbc0038I Pass  88: suminf.    2.25004 (16) obj. -47.1198 iterations 0
Cbc0038I Pass  89: suminf.    2.33226 (17) obj. -46.8689 iterations 11
Cbc0038I Pass  90: suminf.    2.30290 (24) obj. -46.8689 iterations 5
Cbc0038I Pass  91: suminf.    2.25397 (17) obj. -46.8689 iterations 7
Cbc0038I Pass  92: suminf.    2.22429 (24) obj. -46.8689 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -38.8483 - took 0.08 seconds
Cbc0012I Integer solution of -38.848269 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 105 rows 113 columns, reduced to 12 rows 16 columns
Cbc0031I 61 added rows had average density of 32.918033
Cbc0013I At root node, 61 cuts changed objective from -65.583426 to -41.458796 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20761 row cuts average 10.1 elements, 2 column cuts (2 active)  in 0.247 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1346 row cuts average 101.7 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 550 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 845 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 297 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 82 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.606 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.848269 best solution, best possible -41.458796 (2.75 seconds)
Cbc0010I After 13 nodes, 6 on tree, -38.848269 best solution, best possible -41.458485 (3.51 seconds)
Cbc0001I Search completed - best objective -38.84826899999999, took 7984 iterations and 20 nodes (3.54 seconds)
Cbc0032I Strong branching done 476 times (6043 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 38 variables fixed on reduced cost
Total time (CPU seconds):       2.83   (Wallclock seconds):       3.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 75 (-3) columns and 423 (-30) elements
Clp1000I sum of infeasibilities 2.9795e-05 - average 2.12821e-07, 9 fixed columns
Coin0506I Presolve 124 (-16) rows, 66 (-9) columns and 374 (-49) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 0.33416025 - largest nonzero change 0 ( 0%) - largest zero change 2.5825523e-05
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Coin0511I After Postsolve, objective 59.453568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Clp0000I Optimal - objective value 59.453568
Coin0511I After Postsolve, objective 59.453568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.45356839 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 75 columns (74 integer (74 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.57794
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.67825 iterations 53
Cbc0038I Solution found of -8.67825
Cbc0038I Relaxing continuous gives -8.67825
Cbc0038I Rounding solution of -29.0251 is better than previous of -8.67825

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 73 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -29.0251 to -36.7687 (0.08 seconds)
Cbc0038I Round again with cutoff of -39.0373
Cbc0038I Pass   2: suminf.    3.06180 (11) obj. -39.0373 iterations 29
Cbc0038I Pass   3: suminf.    3.06180 (11) obj. -39.0373 iterations 0
Cbc0038I Pass   4: suminf.    2.51164 (7) obj. -39.0373 iterations 23
Cbc0038I Pass   5: suminf.    2.23638 (7) obj. -39.0373 iterations 5
Cbc0038I Pass   6: suminf.    3.00308 (7) obj. -39.0373 iterations 5
Cbc0038I Pass   7: suminf.    1.85988 (5) obj. -39.0373 iterations 9
Cbc0038I Pass   8: suminf.    1.85988 (5) obj. -39.0373 iterations 0
Cbc0038I Pass   9: suminf.    1.51290 (4) obj. -39.0373 iterations 5
Cbc0038I Pass  10: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  11: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  12: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  13: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  14: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  15: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  16: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  17: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  18: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  19: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  20: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  21: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  22: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  23: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  24: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  25: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  26: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I Pass  27: suminf.    1.64858 (5) obj. -39.0373 iterations 6
Cbc0038I Pass  28: suminf.    1.41367 (5) obj. -39.0373 iterations 7
Cbc0038I Pass  29: suminf.    1.51290 (4) obj. -39.0373 iterations 8
Cbc0038I Pass  30: suminf.    1.36198 (4) obj. -39.0373 iterations 2
Cbc0038I Pass  31: suminf.    1.28793 (5) obj. -39.0373 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -36.7687 to -38.8483 (0.13 seconds)
Cbc0038I Round again with cutoff of -43.1205
Cbc0038I Pass  31: suminf.    3.73167 (11) obj. -43.1205 iterations 0
Cbc0038I Pass  32: suminf.    3.73167 (11) obj. -43.1205 iterations 0
Cbc0038I Pass  33: suminf.    1.58518 (6) obj. -43.1205 iterations 17
Cbc0038I Pass  34: suminf.    1.58518 (6) obj. -43.1205 iterations 2
Cbc0038I Pass  35: suminf.    2.75418 (10) obj. -43.1205 iterations 15
Cbc0038I Pass  36: suminf.    2.75418 (10) obj. -43.1205 iterations 0
Cbc0038I Pass  37: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  38: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  39: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  40: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  41: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  42: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  43: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  44: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  45: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  46: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  47: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  48: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  49: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  50: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  51: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  52: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  53: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  54: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  55: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I Pass  56: suminf.    2.75418 (10) obj. -43.1205 iterations 2
Cbc0038I Pass  57: suminf.    3.00554 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  58: suminf.    2.95565 (10) obj. -43.1205 iterations 3
Cbc0038I Pass  59: suminf.    4.15348 (10) obj. -43.1205 iterations 19
Cbc0038I Pass  60: suminf.    2.73733 (9) obj. -43.1205 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -38.8483 - took 0.15 seconds
Cbc0012I Integer solution of -38.848269 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 74 rows 44 columns
Cbc0031I 27 added rows had average density of 50.740741
Cbc0013I At root node, 27 cuts changed objective from -59.453568 to -51.990956 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14202 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1949 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 271 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.848269 best solution, best possible -51.990956 (1.09 seconds)
Cbc0001I Search completed - best objective -38.84826899999999, took 8798 iterations and 42 nodes (1.40 seconds)
Cbc0032I Strong branching done 576 times (14006 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 20, 59 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 112 (-41) columns and 1856 (-1448) elements
Clp1000I sum of infeasibilities 2.5312e-07 - average 2.43385e-09, 16 fixed columns
Coin0506I Presolve 87 (-17) rows, 96 (-16) columns and 1481 (-375) elements
Clp0006I 0  Obj 55.963176 Dual inf 5.5804645 (95)
Clp0029I End of values pass after 96 iterations
Clp0014I Perturbing problem by 0.001% of 2.0982014 - largest nonzero change 2.948233e-05 ( 0.0016756202%) - largest zero change 2.9476262e-05
Clp0000I Optimal - objective value 69.093011
Clp0000I Optimal - objective value 69.093011
Coin0511I After Postsolve, objective 69.093011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 69.093011
Clp0000I Optimal - objective value 69.093011
Clp0000I Optimal - objective value 69.093011
Clp0000I Optimal - objective value 69.093011
Coin0511I After Postsolve, objective 69.093011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.09301056 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 113 columns (113 integer (113 of which binary)) and 1861 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 6.57788
Cbc0038I Pass   1: suminf.    2.06648 (30) obj. -54.2077 iterations 19
Cbc0038I Pass   2: suminf.    2.06648 (30) obj. -54.2077 iterations 3
Cbc0038I Pass   3: suminf.    0.77124 (17) obj. -33.6247 iterations 13
Cbc0038I Pass   4: suminf.    0.19593 (6) obj. -20.3636 iterations 11
Cbc0038I Solution found of -12.6211
Cbc0038I Rounding solution of -13.8858 is better than previous of -12.6211

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 113 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -19.0557
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.06648 (30) obj. -54.2077 iterations 0
Cbc0038I Pass   6: suminf.    2.06648 (30) obj. -54.2077 iterations 5
Cbc0038I Pass   7: suminf.    0.97089 (20) obj. -37.3625 iterations 10
Cbc0038I Pass   8: suminf.    0.97954 (7) obj. -19.0557 iterations 30
Cbc0038I Pass   9: suminf.    0.97604 (7) obj. -20.1577 iterations 4
Cbc0038I Pass  10: suminf.    1.08952 (3) obj. -19.0557 iterations 8
Cbc0038I Pass  11: suminf.    0.65098 (3) obj. -19.0557 iterations 1
Cbc0038I Pass  12: suminf.    0.78396 (2) obj. -19.0557 iterations 4
Cbc0038I Pass  13: suminf.    0.56221 (2) obj. -19.0557 iterations 2
Cbc0038I Pass  14: suminf.    1.59685 (12) obj. -20.2261 iterations 33
Cbc0038I Pass  15: suminf.    1.47791 (11) obj. -19.6407 iterations 6
Cbc0038I Pass  16: suminf.    1.06880 (6) obj. -19.0557 iterations 13
Cbc0038I Pass  17: suminf.    1.06880 (6) obj. -19.0557 iterations 0
Cbc0038I Pass  18: suminf.    1.89735 (6) obj. -19.0557 iterations 7
Cbc0038I Pass  19: suminf.    0.67387 (4) obj. -19.0557 iterations 3
Cbc0038I Pass  20: suminf.    0.67387 (4) obj. -19.0557 iterations 4
Cbc0038I Pass  21: suminf.    0.77286 (4) obj. -19.0557 iterations 6
Cbc0038I Pass  22: suminf.    0.77286 (4) obj. -19.0557 iterations 3
Cbc0038I Pass  23: suminf.    0.67387 (4) obj. -19.0557 iterations 5
Cbc0038I Pass  24: suminf.    1.69647 (11) obj. -19.0557 iterations 41
Cbc0038I Pass  25: suminf.    1.51292 (13) obj. -19.0557 iterations 7
Cbc0038I Pass  26: suminf.    1.38276 (5) obj. -19.0557 iterations 18
Cbc0038I Pass  27: suminf.    1.38276 (5) obj. -19.0557 iterations 0
Cbc0038I Pass  28: suminf.    1.03313 (3) obj. -19.0557 iterations 13
Cbc0038I Pass  29: suminf.    1.14465 (3) obj. -19.0557 iterations 4
Cbc0038I Pass  30: suminf.    0.64915 (3) obj. -19.0557 iterations 2
Cbc0038I Pass  31: suminf.    1.14465 (3) obj. -19.0557 iterations 4
Cbc0038I Pass  32: suminf.    1.93821 (10) obj. -24.8879 iterations 16
Cbc0038I Pass  33: suminf.    1.93821 (10) obj. -24.8879 iterations 4
Cbc0038I Pass  34: suminf.    1.18856 (3) obj. -19.0557 iterations 14
Cbc0038I Rounding solution of -16.8324 is better than previous of -13.8858

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 113 columns, reduced to 32 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -16.8324 to -29.6077 (0.06 seconds)
Cbc0038I Round again with cutoff of -36.8029
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.06648 (30) obj. -54.2077 iterations 0
Cbc0038I Pass  35: suminf.    2.06648 (30) obj. -54.2077 iterations 5
Cbc0038I Pass  36: suminf.    1.43684 (22) obj. -36.8029 iterations 26
Cbc0038I Pass  37: suminf.    1.43684 (22) obj. -36.8029 iterations 1
Cbc0038I Pass  38: suminf.    1.99928 (13) obj. -36.8029 iterations 35
Cbc0038I Pass  39: suminf.    1.56738 (11) obj. -38.1568 iterations 2
Cbc0038I Pass  40: suminf.    1.39139 (11) obj. -36.8029 iterations 2
Cbc0038I Pass  41: suminf.    1.39364 (9) obj. -36.8029 iterations 20
Cbc0038I Pass  42: suminf.    1.39364 (9) obj. -36.8029 iterations 6
Cbc0038I Pass  43: suminf.    1.35858 (9) obj. -36.8029 iterations 9
Cbc0038I Pass  44: suminf.    1.35858 (9) obj. -36.8029 iterations 6
Cbc0038I Pass  45: suminf.    1.39364 (9) obj. -36.8029 iterations 12
Cbc0038I Pass  46: suminf.    2.25059 (15) obj. -38.7658 iterations 25
Cbc0038I Pass  47: suminf.    2.11655 (14) obj. -38.0781 iterations 6
Cbc0038I Pass  48: suminf.    1.61634 (11) obj. -36.8029 iterations 21
Cbc0038I Pass  49: suminf.    1.61634 (11) obj. -36.8029 iterations 1
Cbc0038I Pass  50: suminf.    1.90238 (10) obj. -36.8029 iterations 15
Cbc0038I Pass  51: suminf.    1.51652 (10) obj. -37.5746 iterations 4
Cbc0038I Pass  52: suminf.    1.88855 (10) obj. -36.8029 iterations 13
Cbc0038I Pass  53: suminf.    1.88855 (10) obj. -36.8029 iterations 8
Cbc0038I Pass  54: suminf.    1.90238 (10) obj. -36.8029 iterations 9
Cbc0038I Pass  55: suminf.    1.51204 (10) obj. -37.5836 iterations 7
Cbc0038I Pass  56: suminf.    4.48170 (26) obj. -36.8029 iterations 17
Cbc0038I Pass  57: suminf.    2.61076 (16) obj. -36.8029 iterations 6
Cbc0038I Pass  58: suminf.    2.06548 (14) obj. -36.8029 iterations 4
Cbc0038I Pass  59: suminf.    2.16658 (11) obj. -36.8029 iterations 13
Cbc0038I Pass  60: suminf.    2.07614 (11) obj. -36.9838 iterations 4
Cbc0038I Pass  61: suminf.    2.16658 (11) obj. -36.8029 iterations 11
Cbc0038I Pass  62: suminf.    2.72606 (17) obj. -36.8029 iterations 25
Cbc0038I Pass  63: suminf.    2.71290 (16) obj. -36.8029 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 113 columns, reduced to 59 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -29.6077 to -38.8483 (0.09 seconds)
Cbc0038I Round again with cutoff of -46.8689
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.06648 (30) obj. -54.2077 iterations 0
Cbc0038I Pass  64: suminf.    2.06648 (30) obj. -54.2077 iterations 5
Cbc0038I Pass  65: suminf.    3.24113 (25) obj. -46.8689 iterations 28
Cbc0038I Pass  66: suminf.    2.39135 (23) obj. -46.8689 iterations 6
Cbc0038I Pass  67: suminf.    2.13929 (19) obj. -46.8689 iterations 31
Cbc0038I Pass  68: suminf.    1.95089 (18) obj. -46.8689 iterations 4
Cbc0038I Pass  69: suminf.    2.39722 (17) obj. -46.8689 iterations 20
Cbc0038I Pass  70: suminf.    2.39722 (17) obj. -46.8689 iterations 1
Cbc0038I Pass  71: suminf.    2.34733 (17) obj. -46.8689 iterations 7
Cbc0038I Pass  72: suminf.    2.34733 (17) obj. -46.8689 iterations 1
Cbc0038I Pass  73: suminf.    2.39722 (17) obj. -46.8689 iterations 11
Cbc0038I Pass  74: suminf.    3.65216 (22) obj. -46.8689 iterations 23
Cbc0038I Pass  75: suminf.    3.43148 (29) obj. -46.8689 iterations 6
Cbc0038I Pass  76: suminf.    4.11895 (20) obj. -46.8689 iterations 33
Cbc0038I Pass  77: suminf.    2.67673 (21) obj. -46.8689 iterations 6
Cbc0038I Pass  78: suminf.    2.67673 (21) obj. -46.8689 iterations 0
Cbc0038I Pass  79: suminf.    2.92325 (25) obj. -46.8689 iterations 18
Cbc0038I Pass  80: suminf.    2.92325 (25) obj. -46.8689 iterations 2
Cbc0038I Pass  81: suminf.    4.67677 (20) obj. -46.8689 iterations 11
Cbc0038I Pass  82: suminf.    2.25004 (16) obj. -47.1198 iterations 15
Cbc0038I Pass  83: suminf.    2.25004 (16) obj. -47.1198 iterations 0
Cbc0038I Pass  84: suminf.    2.30290 (24) obj. -46.8689 iterations 12
Cbc0038I Pass  85: suminf.    2.30290 (24) obj. -46.8689 iterations 2
Cbc0038I Pass  86: suminf.    4.67677 (20) obj. -46.8689 iterations 9
Cbc0038I Pass  87: suminf.    2.25004 (16) obj. -47.1198 iterations 16
Cbc0038I Pass  88: suminf.    2.25004 (16) obj. -47.1198 iterations 0
Cbc0038I Pass  89: suminf.    2.33226 (17) obj. -46.8689 iterations 11
Cbc0038I Pass  90: suminf.    2.30290 (24) obj. -46.8689 iterations 5
Cbc0038I Pass  91: suminf.    2.25397 (17) obj. -46.8689 iterations 7
Cbc0038I Pass  92: suminf.    2.22429 (24) obj. -46.8689 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -38.8483 - took 0.09 seconds
Cbc0012I Integer solution of -38.848269 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 105 rows 113 columns, reduced to 12 rows 16 columns
Cbc0031I 61 added rows had average density of 32.918033
Cbc0013I At root node, 61 cuts changed objective from -65.583426 to -41.458796 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20761 row cuts average 10.1 elements, 2 column cuts (2 active)  in 0.244 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1346 row cuts average 101.7 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 550 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 845 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 297 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 82 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.593 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.848269 best solution, best possible -41.458796 (2.72 seconds)
Cbc0010I After 13 nodes, 6 on tree, -38.848269 best solution, best possible -41.458485 (3.48 seconds)
Cbc0001I Search completed - best objective -38.84826899999999, took 7984 iterations and 20 nodes (3.52 seconds)
Cbc0032I Strong branching done 476 times (6043 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 38 variables fixed on reduced cost
Total time (CPU seconds):       2.82   (Wallclock seconds):       3.54

