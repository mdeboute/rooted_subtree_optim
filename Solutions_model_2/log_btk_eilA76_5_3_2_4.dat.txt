Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000199561 - average 1.48926e-06, 12 fixed columns
Coin0506I Presolve 110 (-24) rows, 63 (-12) columns and 338 (-72) elements
Clp0029I End of values pass after 63 iterations
Clp0000I Optimal - objective value 35.429135
Clp0000I Optimal - objective value 35.429135
Coin0511I After Postsolve, objective 35.429135, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.429135
Clp0000I Optimal - objective value 35.429135
Clp0000I Optimal - objective value 35.429135
Coin0511I After Postsolve, objective 35.429135, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.42913523 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.289%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.4629
Cbc0038I Solution found of 4.99394
Cbc0038I Relaxing continuous gives -3.23214
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -3.23214 to -5.10679 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.12706
Cbc0038I Pass   1: suminf.    1.04240 (28) obj. -8.12706 iterations 28
Cbc0038I Pass   2: suminf.    2.93646 (9) obj. -8.12706 iterations 33
Cbc0038I Pass   3: suminf.    1.90520 (7) obj. -8.12706 iterations 7
Cbc0038I Pass   4: suminf.    1.27322 (4) obj. -8.12706 iterations 9
Cbc0038I Pass   5: suminf.    1.27321 (4) obj. -8.12706 iterations 1
Cbc0038I Pass   6: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass   7: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass   8: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass   9: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  10: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  11: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass  12: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  13: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  14: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  15: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  16: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass  17: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  18: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  19: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  20: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  21: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass  22: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  23: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  24: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  25: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  26: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass  27: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  28: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  29: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  30: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -5.10679 - took 0.05 seconds
Cbc0012I Integer solution of -5.10679 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 71 rows 41 columns
Cbc0031I 26 added rows had average density of 72.153846
Cbc0013I At root node, 26 cuts changed objective from -35.308566 to -29.418963 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15346 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2165 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.10679 best solution, best possible -29.418963 (0.95 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 33 rows 22 columns
Cbc0016I Integer solution of -5.14463 found by strong branching after 10412 iterations and 66 nodes (1.24 seconds)
Cbc0001I Search completed - best objective -5.144629999999999, took 11040 iterations and 78 nodes (1.25 seconds)
Cbc0032I Strong branching done 908 times (18135 iterations), fathomed 6 nodes and fixed 30 variables
Cbc0035I Maximum depth 29, 264 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 116 (-36) columns and 1899 (-1404) elements
Clp1000I sum of infeasibilities 2.70254e-07 - average 2.64955e-09, 31 fixed columns
Coin0506I Presolve 76 (-26) rows, 85 (-31) columns and 1114 (-785) elements
Clp0006I 0  Obj 35.86813 Dual inf 4.8338642 (84)
Clp0014I Perturbing problem by 0.001% of 1.9475808 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 47.383915
Clp0000I Optimal - objective value 47.383915
Coin0511I After Postsolve, objective 47.383915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.383915
Clp0000I Optimal - objective value 47.383915
Clp0000I Optimal - objective value 47.383915
Clp0000I Optimal - objective value 47.383915
Coin0511I After Postsolve, objective 47.383915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.38391533 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 116 columns (116 integer (116 of which binary)) and 1910 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.597%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.42929
Cbc0038I Pass   1: suminf.    1.47601 (32) obj. -20.0292 iterations 10
Cbc0038I Pass   2: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass   3: suminf.    0.16451 (5) obj. 19.0496 iterations 27
Cbc0038I Solution found of 25.8163
Cbc0038I Rounding solution of 18.5027 is better than previous of 25.8163

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 18.5027 to 13.5287 (0.03 seconds)
Cbc0038I Round again with cutoff of 8.1079
Cbc0038I Pass   4: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass   5: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass   6: suminf.    1.26961 (9) obj. 8.1079 iterations 26
Cbc0038I Pass   7: suminf.    0.54432 (8) obj. 1.65117 iterations 3
Cbc0038I Pass   8: suminf.    0.94372 (2) obj. 8.1079 iterations 10
Cbc0038I Pass   9: suminf.    0.77424 (2) obj. 7.76505 iterations 2
Cbc0038I Pass  10: suminf.    0.81558 (2) obj. 8.1079 iterations 2
Cbc0038I Pass  11: suminf.    1.55392 (11) obj. 8.1079 iterations 26
Cbc0038I Pass  12: suminf.    0.62017 (8) obj. 8.1079 iterations 7
Cbc0038I Pass  13: suminf.    0.62657 (4) obj. 8.1079 iterations 16
Cbc0038I Pass  14: suminf.    0.16801 (4) obj. 8.1079 iterations 10
Cbc0038I Pass  15: suminf.    2.05468 (5) obj. 8.1079 iterations 6
Cbc0038I Pass  16: suminf.    0.39829 (3) obj. 8.1079 iterations 3
Cbc0038I Pass  17: suminf.    1.73511 (4) obj. 8.1079 iterations 3
Cbc0038I Pass  18: suminf.    0.91773 (3) obj. 7.52616 iterations 2
Cbc0038I Pass  19: suminf.    0.84261 (3) obj. 8.1079 iterations 2
Cbc0038I Pass  20: suminf.    1.75314 (14) obj. 8.1079 iterations 41
Cbc0038I Pass  21: suminf.    1.30684 (13) obj. 8.1079 iterations 4
Cbc0038I Pass  22: suminf.    1.16530 (5) obj. 8.1079 iterations 16
Cbc0038I Pass  23: suminf.    0.42423 (5) obj. 8.1079 iterations 11
Cbc0038I Pass  24: suminf.    0.99747 (3) obj. 8.1079 iterations 6
Cbc0038I Pass  25: suminf.    0.45575 (2) obj. 8.1079 iterations 1
Cbc0038I Pass  26: suminf.    0.13309 (2) obj. 8.1079 iterations 1
Cbc0038I Pass  27: suminf.    0.99747 (3) obj. 8.1079 iterations 3
Cbc0038I Pass  28: suminf.    1.58696 (10) obj. 8.1079 iterations 17
Cbc0038I Pass  29: suminf.    1.25596 (10) obj. 5.79093 iterations 2
Cbc0038I Pass  30: suminf.    0.39490 (5) obj. 8.1079 iterations 15
Cbc0038I Pass  31: suminf.    0.39490 (5) obj. 8.1079 iterations 0
Cbc0038I Pass  32: suminf.    1.14254 (4) obj. 8.1079 iterations 5
Cbc0038I Pass  33: suminf.    1.14254 (4) obj. 8.1079 iterations 0
Cbc0038I Rounding solution of 5.55435 is better than previous of 13.5287

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 56 rows 63 columns
Cbc0038I Mini branch and bound improved solution from 5.55435 to -1.89355 (0.12 seconds)
Cbc0038I Round again with cutoff of -9.65061
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass  34: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass  35: suminf.    1.58227 (16) obj. -9.65061 iterations 19
Cbc0038I Pass  36: suminf.    0.98331 (15) obj. -15.2667 iterations 3
Cbc0038I Pass  37: suminf.    1.58967 (8) obj. -9.65061 iterations 21
Cbc0038I Pass  38: suminf.    1.54481 (8) obj. -9.65061 iterations 2
Cbc0038I Pass  39: suminf.    0.93635 (8) obj. -9.65061 iterations 2
Cbc0038I Pass  40: suminf.    1.73296 (10) obj. -9.65061 iterations 7
Cbc0038I Pass  41: suminf.    1.44911 (9) obj. -9.65061 iterations 3
Cbc0038I Pass  42: suminf.    1.87399 (14) obj. -9.65061 iterations 8
Cbc0038I Pass  43: suminf.    1.54976 (13) obj. -9.65061 iterations 4
Cbc0038I Pass  44: suminf.    2.18433 (12) obj. -9.65061 iterations 12
Cbc0038I Pass  45: suminf.    1.69898 (11) obj. -9.65061 iterations 5
Cbc0038I Pass  46: suminf.    1.60008 (11) obj. -9.65061 iterations 6
Cbc0038I Pass  47: suminf.    1.27644 (12) obj. -9.65061 iterations 3
Cbc0038I Pass  48: suminf.    1.39661 (11) obj. -9.65061 iterations 5
Cbc0038I Pass  49: suminf.    2.51119 (18) obj. -9.65061 iterations 17
Cbc0038I Pass  50: suminf.    2.25394 (18) obj. -9.65061 iterations 4
Cbc0038I Pass  51: suminf.    2.41204 (15) obj. -9.65061 iterations 15
Cbc0038I Pass  52: suminf.    1.49606 (14) obj. -9.65061 iterations 6
Cbc0038I Pass  53: suminf.    1.58914 (12) obj. -9.65061 iterations 11
Cbc0038I Pass  54: suminf.    1.58251 (12) obj. -9.65061 iterations 3
Cbc0038I Pass  55: suminf.    1.58914 (12) obj. -9.65061 iterations 1
Cbc0038I Pass  56: suminf.    2.42555 (19) obj. -9.65061 iterations 12
Cbc0038I Pass  57: suminf.    1.47036 (13) obj. -9.89023 iterations 7
Cbc0038I Pass  58: suminf.    1.43220 (14) obj. -9.65061 iterations 11
Cbc0038I Pass  59: suminf.    1.42962 (16) obj. -9.65061 iterations 2
Cbc0038I Pass  60: suminf.    2.69480 (15) obj. -9.65061 iterations 15
Cbc0038I Pass  61: suminf.    2.21966 (12) obj. -9.65061 iterations 4
Cbc0038I Pass  62: suminf.    1.60008 (11) obj. -9.65061 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 54 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -1.89355 to -2.31023 (0.17 seconds)
Cbc0038I Round again with cutoff of -18.959
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass  63: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass  64: suminf.    2.07366 (24) obj. -18.959 iterations 11
Cbc0038I Pass  65: suminf.    1.51934 (23) obj. -24.6026 iterations 3
Cbc0038I Pass  66: suminf.    1.48460 (12) obj. -18.959 iterations 23
Cbc0038I Pass  67: suminf.    1.42999 (14) obj. -18.959 iterations 4
Cbc0038I Pass  68: suminf.    2.41859 (15) obj. -18.959 iterations 6
Cbc0038I Pass  69: suminf.    1.94802 (13) obj. -18.959 iterations 2
Cbc0038I Pass  70: suminf.    2.72143 (14) obj. -18.959 iterations 3
Cbc0038I Pass  71: suminf.    2.72143 (14) obj. -18.959 iterations 1
Cbc0038I Pass  72: suminf.    2.55801 (13) obj. -18.959 iterations 9
Cbc0038I Pass  73: suminf.    2.30491 (14) obj. -18.959 iterations 3
Cbc0038I Pass  74: suminf.    2.83414 (13) obj. -18.959 iterations 7
Cbc0038I Pass  75: suminf.    2.31379 (13) obj. -18.959 iterations 2
Cbc0038I Pass  76: suminf.    2.53237 (13) obj. -18.959 iterations 8
Cbc0038I Pass  77: suminf.    2.64328 (16) obj. -18.959 iterations 16
Cbc0038I Pass  78: suminf.    2.35113 (15) obj. -18.959 iterations 6
Cbc0038I Pass  79: suminf.    1.94802 (13) obj. -18.959 iterations 13
Cbc0038I Pass  80: suminf.    1.94802 (13) obj. -18.959 iterations 0
Cbc0038I Pass  81: suminf.    2.78082 (14) obj. -18.959 iterations 4
Cbc0038I Pass  82: suminf.    2.78082 (14) obj. -18.959 iterations 1
Cbc0038I Pass  83: suminf.    2.83414 (13) obj. -18.959 iterations 4
Cbc0038I Pass  84: suminf.    2.31379 (13) obj. -18.959 iterations 2
Cbc0038I Pass  85: suminf.    2.53237 (13) obj. -18.959 iterations 8
Cbc0038I Pass  86: suminf.    2.38066 (15) obj. -18.959 iterations 15
Cbc0038I Pass  87: suminf.    2.38066 (15) obj. -18.959 iterations 1
Cbc0038I Pass  88: suminf.    1.94311 (12) obj. -18.959 iterations 14
Cbc0038I Pass  89: suminf.    1.83613 (12) obj. -18.959 iterations 2
Cbc0038I Pass  90: suminf.    2.32126 (14) obj. -18.959 iterations 17
Cbc0038I Pass  91: suminf.    2.04885 (12) obj. -18.959 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 53 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -2.31023 - took 0.20 seconds
Cbc0012I Integer solution of -2.31023 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 51 rows 53 columns
Cbc0031I 49 added rows had average density of 39.285714
Cbc0013I At root node, 49 cuts changed objective from -40.678443 to -15.038838 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14784 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2390 row cuts average 110.4 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 963 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 17 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1749 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 485 row cuts average 52.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 126 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.583 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.31023 best solution, best possible -15.038838 (2.57 seconds)
Cbc0012I Integer solution of -3.23214 found by rounding after 5409 iterations and 1 nodes (2.58 seconds)
Cbc0010I After 30 nodes, 8 on tree, -3.23214 best solution, best possible -12.733734 (3.28 seconds)
Cbc0012I Integer solution of -4.29895 found by rounding after 7447 iterations and 36 nodes (3.31 seconds)
Cbc0012I Integer solution of -4.80148 found by rounding after 7514 iterations and 38 nodes (3.32 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 3 rows 7 columns
Cbc0016I Integer solution of -5.10679 found by strong branching after 8225 iterations and 55 nodes (3.41 seconds)
Cbc0004I Integer solution of -5.14463 found after 8591 iterations and 63 nodes (3.45 seconds)
Cbc0001I Search completed - best objective -5.144629999999999, took 9033 iterations and 70 nodes (3.46 seconds)
Cbc0032I Strong branching done 776 times (12452 iterations), fathomed 3 nodes and fixed 24 variables
Cbc0035I Maximum depth 20, 121 variables fixed on reduced cost
Total time (CPU seconds):       2.72   (Wallclock seconds):       3.48

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000199561 - average 1.48926e-06, 12 fixed columns
Coin0506I Presolve 110 (-24) rows, 63 (-12) columns and 338 (-72) elements
Clp0029I End of values pass after 63 iterations
Clp0000I Optimal - objective value 35.429135
Clp0000I Optimal - objective value 35.429135
Coin0511I After Postsolve, objective 35.429135, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.429135
Clp0000I Optimal - objective value 35.429135
Clp0000I Optimal - objective value 35.429135
Coin0511I After Postsolve, objective 35.429135, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.42913523 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.289%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.4629
Cbc0038I Solution found of 4.99394
Cbc0038I Relaxing continuous gives -3.23214
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -3.23214 to -5.10679 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.12706
Cbc0038I Pass   1: suminf.    1.04240 (28) obj. -8.12706 iterations 28
Cbc0038I Pass   2: suminf.    2.93646 (9) obj. -8.12706 iterations 33
Cbc0038I Pass   3: suminf.    1.90520 (7) obj. -8.12706 iterations 7
Cbc0038I Pass   4: suminf.    1.27322 (4) obj. -8.12706 iterations 9
Cbc0038I Pass   5: suminf.    1.27321 (4) obj. -8.12706 iterations 1
Cbc0038I Pass   6: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass   7: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass   8: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass   9: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  10: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  11: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass  12: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  13: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  14: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  15: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  16: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass  17: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  18: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  19: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  20: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  21: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass  22: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  23: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  24: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  25: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  26: suminf.    1.33492 (4) obj. -8.12706 iterations 1
Cbc0038I Pass  27: suminf.    1.33492 (4) obj. -8.12706 iterations 0
Cbc0038I Pass  28: suminf.    1.71069 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  29: suminf.    1.27321 (4) obj. -8.12706 iterations 2
Cbc0038I Pass  30: suminf.    1.27321 (4) obj. -8.12706 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -5.10679 - took 0.05 seconds
Cbc0012I Integer solution of -5.10679 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 71 rows 41 columns
Cbc0031I 26 added rows had average density of 72.153846
Cbc0013I At root node, 26 cuts changed objective from -35.308566 to -29.418963 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15346 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2165 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.10679 best solution, best possible -29.418963 (1.10 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 33 rows 22 columns
Cbc0016I Integer solution of -5.14463 found by strong branching after 10412 iterations and 66 nodes (1.40 seconds)
Cbc0001I Search completed - best objective -5.144629999999999, took 11040 iterations and 78 nodes (1.41 seconds)
Cbc0032I Strong branching done 908 times (18135 iterations), fathomed 6 nodes and fixed 30 variables
Cbc0035I Maximum depth 29, 264 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 116 (-37) columns and 1899 (-1405) elements
Clp1000I sum of infeasibilities 2.70254e-07 - average 2.64955e-09, 31 fixed columns
Coin0506I Presolve 76 (-26) rows, 85 (-31) columns and 1114 (-785) elements
Clp0006I 0  Obj 35.86813 Dual inf 4.8338642 (84)
Clp0014I Perturbing problem by 0.001% of 1.9475808 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 47.383915
Clp0000I Optimal - objective value 47.383915
Coin0511I After Postsolve, objective 47.383915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.383915
Clp0000I Optimal - objective value 47.383915
Clp0000I Optimal - objective value 47.383915
Clp0000I Optimal - objective value 47.383915
Coin0511I After Postsolve, objective 47.383915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.38391533 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 116 columns (116 integer (116 of which binary)) and 1910 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.597%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 7.42929
Cbc0038I Pass   1: suminf.    1.47601 (32) obj. -20.0292 iterations 10
Cbc0038I Pass   2: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass   3: suminf.    0.16451 (5) obj. 19.0496 iterations 27
Cbc0038I Solution found of 25.8163
Cbc0038I Rounding solution of 18.5027 is better than previous of 25.8163

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 18.5027 to 13.5287 (0.03 seconds)
Cbc0038I Round again with cutoff of 8.1079
Cbc0038I Pass   4: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass   5: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass   6: suminf.    1.26961 (9) obj. 8.1079 iterations 26
Cbc0038I Pass   7: suminf.    0.54432 (8) obj. 1.65117 iterations 3
Cbc0038I Pass   8: suminf.    0.94372 (2) obj. 8.1079 iterations 10
Cbc0038I Pass   9: suminf.    0.77424 (2) obj. 7.76505 iterations 2
Cbc0038I Pass  10: suminf.    0.81558 (2) obj. 8.1079 iterations 2
Cbc0038I Pass  11: suminf.    1.55392 (11) obj. 8.1079 iterations 26
Cbc0038I Pass  12: suminf.    0.62017 (8) obj. 8.1079 iterations 7
Cbc0038I Pass  13: suminf.    0.62657 (4) obj. 8.1079 iterations 16
Cbc0038I Pass  14: suminf.    0.16801 (4) obj. 8.1079 iterations 10
Cbc0038I Pass  15: suminf.    2.05468 (5) obj. 8.1079 iterations 6
Cbc0038I Pass  16: suminf.    0.39829 (3) obj. 8.1079 iterations 3
Cbc0038I Pass  17: suminf.    1.73511 (4) obj. 8.1079 iterations 3
Cbc0038I Pass  18: suminf.    0.91773 (3) obj. 7.52616 iterations 2
Cbc0038I Pass  19: suminf.    0.84261 (3) obj. 8.1079 iterations 2
Cbc0038I Pass  20: suminf.    1.75314 (14) obj. 8.1079 iterations 41
Cbc0038I Pass  21: suminf.    1.30684 (13) obj. 8.1079 iterations 4
Cbc0038I Pass  22: suminf.    1.16530 (5) obj. 8.1079 iterations 16
Cbc0038I Pass  23: suminf.    0.42423 (5) obj. 8.1079 iterations 11
Cbc0038I Pass  24: suminf.    0.99747 (3) obj. 8.1079 iterations 6
Cbc0038I Pass  25: suminf.    0.45575 (2) obj. 8.1079 iterations 1
Cbc0038I Pass  26: suminf.    0.13309 (2) obj. 8.1079 iterations 1
Cbc0038I Pass  27: suminf.    0.99747 (3) obj. 8.1079 iterations 3
Cbc0038I Pass  28: suminf.    1.58696 (10) obj. 8.1079 iterations 17
Cbc0038I Pass  29: suminf.    1.25596 (10) obj. 5.79093 iterations 2
Cbc0038I Pass  30: suminf.    0.39490 (5) obj. 8.1079 iterations 15
Cbc0038I Pass  31: suminf.    0.39490 (5) obj. 8.1079 iterations 0
Cbc0038I Pass  32: suminf.    1.14254 (4) obj. 8.1079 iterations 5
Cbc0038I Pass  33: suminf.    1.14254 (4) obj. 8.1079 iterations 0
Cbc0038I Rounding solution of 5.55435 is better than previous of 13.5287

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 56 rows 63 columns
Cbc0038I Mini branch and bound improved solution from 5.55435 to -1.89355 (0.11 seconds)
Cbc0038I Round again with cutoff of -9.65061
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass  34: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass  35: suminf.    1.58227 (16) obj. -9.65061 iterations 19
Cbc0038I Pass  36: suminf.    0.98331 (15) obj. -15.2667 iterations 3
Cbc0038I Pass  37: suminf.    1.58967 (8) obj. -9.65061 iterations 21
Cbc0038I Pass  38: suminf.    1.54481 (8) obj. -9.65061 iterations 2
Cbc0038I Pass  39: suminf.    0.93635 (8) obj. -9.65061 iterations 2
Cbc0038I Pass  40: suminf.    1.73296 (10) obj. -9.65061 iterations 7
Cbc0038I Pass  41: suminf.    1.44911 (9) obj. -9.65061 iterations 3
Cbc0038I Pass  42: suminf.    1.87399 (14) obj. -9.65061 iterations 8
Cbc0038I Pass  43: suminf.    1.54976 (13) obj. -9.65061 iterations 4
Cbc0038I Pass  44: suminf.    2.18433 (12) obj. -9.65061 iterations 12
Cbc0038I Pass  45: suminf.    1.69898 (11) obj. -9.65061 iterations 5
Cbc0038I Pass  46: suminf.    1.60008 (11) obj. -9.65061 iterations 6
Cbc0038I Pass  47: suminf.    1.27644 (12) obj. -9.65061 iterations 3
Cbc0038I Pass  48: suminf.    1.39661 (11) obj. -9.65061 iterations 5
Cbc0038I Pass  49: suminf.    2.51119 (18) obj. -9.65061 iterations 17
Cbc0038I Pass  50: suminf.    2.25394 (18) obj. -9.65061 iterations 4
Cbc0038I Pass  51: suminf.    2.41204 (15) obj. -9.65061 iterations 15
Cbc0038I Pass  52: suminf.    1.49606 (14) obj. -9.65061 iterations 6
Cbc0038I Pass  53: suminf.    1.58914 (12) obj. -9.65061 iterations 11
Cbc0038I Pass  54: suminf.    1.58251 (12) obj. -9.65061 iterations 3
Cbc0038I Pass  55: suminf.    1.58914 (12) obj. -9.65061 iterations 1
Cbc0038I Pass  56: suminf.    2.42555 (19) obj. -9.65061 iterations 12
Cbc0038I Pass  57: suminf.    1.47036 (13) obj. -9.89023 iterations 7
Cbc0038I Pass  58: suminf.    1.43220 (14) obj. -9.65061 iterations 11
Cbc0038I Pass  59: suminf.    1.42962 (16) obj. -9.65061 iterations 2
Cbc0038I Pass  60: suminf.    2.69480 (15) obj. -9.65061 iterations 15
Cbc0038I Pass  61: suminf.    2.21966 (12) obj. -9.65061 iterations 4
Cbc0038I Pass  62: suminf.    1.60008 (11) obj. -9.65061 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 54 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -1.89355 to -2.31023 (0.16 seconds)
Cbc0038I Round again with cutoff of -18.959
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass  63: suminf.    1.47601 (32) obj. -20.0292 iterations 0
Cbc0038I Pass  64: suminf.    2.07366 (24) obj. -18.959 iterations 11
Cbc0038I Pass  65: suminf.    1.51934 (23) obj. -24.6026 iterations 3
Cbc0038I Pass  66: suminf.    1.48460 (12) obj. -18.959 iterations 23
Cbc0038I Pass  67: suminf.    1.42999 (14) obj. -18.959 iterations 4
Cbc0038I Pass  68: suminf.    2.41859 (15) obj. -18.959 iterations 6
Cbc0038I Pass  69: suminf.    1.94802 (13) obj. -18.959 iterations 2
Cbc0038I Pass  70: suminf.    2.72143 (14) obj. -18.959 iterations 3
Cbc0038I Pass  71: suminf.    2.72143 (14) obj. -18.959 iterations 1
Cbc0038I Pass  72: suminf.    2.55801 (13) obj. -18.959 iterations 9
Cbc0038I Pass  73: suminf.    2.30491 (14) obj. -18.959 iterations 3
Cbc0038I Pass  74: suminf.    2.83414 (13) obj. -18.959 iterations 7
Cbc0038I Pass  75: suminf.    2.31379 (13) obj. -18.959 iterations 2
Cbc0038I Pass  76: suminf.    2.53237 (13) obj. -18.959 iterations 8
Cbc0038I Pass  77: suminf.    2.64328 (16) obj. -18.959 iterations 16
Cbc0038I Pass  78: suminf.    2.35113 (15) obj. -18.959 iterations 6
Cbc0038I Pass  79: suminf.    1.94802 (13) obj. -18.959 iterations 13
Cbc0038I Pass  80: suminf.    1.94802 (13) obj. -18.959 iterations 0
Cbc0038I Pass  81: suminf.    2.78082 (14) obj. -18.959 iterations 4
Cbc0038I Pass  82: suminf.    2.78082 (14) obj. -18.959 iterations 1
Cbc0038I Pass  83: suminf.    2.83414 (13) obj. -18.959 iterations 4
Cbc0038I Pass  84: suminf.    2.31379 (13) obj. -18.959 iterations 2
Cbc0038I Pass  85: suminf.    2.53237 (13) obj. -18.959 iterations 8
Cbc0038I Pass  86: suminf.    2.38066 (15) obj. -18.959 iterations 15
Cbc0038I Pass  87: suminf.    2.38066 (15) obj. -18.959 iterations 1
Cbc0038I Pass  88: suminf.    1.94311 (12) obj. -18.959 iterations 14
Cbc0038I Pass  89: suminf.    1.83613 (12) obj. -18.959 iterations 2
Cbc0038I Pass  90: suminf.    2.32126 (14) obj. -18.959 iterations 17
Cbc0038I Pass  91: suminf.    2.04885 (12) obj. -18.959 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 53 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -2.31023 - took 0.20 seconds
Cbc0012I Integer solution of -2.31023 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 51 rows 53 columns
Cbc0031I 49 added rows had average density of 39.285714
Cbc0013I At root node, 49 cuts changed objective from -40.678443 to -15.038838 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14784 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2390 row cuts average 110.4 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 963 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 17 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1749 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 485 row cuts average 52.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 126 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.657 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.31023 best solution, best possible -15.038838 (2.95 seconds)
Cbc0012I Integer solution of -3.23214 found by rounding after 5409 iterations and 1 nodes (2.95 seconds)
Cbc0010I After 18 nodes, 8 on tree, -3.23214 best solution, best possible -12.733734 (3.68 seconds)
Cbc0012I Integer solution of -4.29895 found by rounding after 7447 iterations and 36 nodes (3.80 seconds)
Cbc0012I Integer solution of -4.80148 found by rounding after 7514 iterations and 38 nodes (3.82 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 3 rows 7 columns
Cbc0016I Integer solution of -5.10679 found by strong branching after 8225 iterations and 55 nodes (3.92 seconds)
Cbc0004I Integer solution of -5.14463 found after 8591 iterations and 63 nodes (3.97 seconds)
Cbc0001I Search completed - best objective -5.144629999999999, took 9033 iterations and 70 nodes (3.98 seconds)
Cbc0032I Strong branching done 776 times (12452 iterations), fathomed 3 nodes and fixed 24 variables
Cbc0035I Maximum depth 20, 121 variables fixed on reduced cost
Total time (CPU seconds):       3.06   (Wallclock seconds):       4.02

