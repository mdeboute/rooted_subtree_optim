Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 28 (-4) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 0.000137676 - average 2.64761e-06, 3 fixed columns
Coin0506I Presolve 40 (-12) rows, 24 (-4) columns and 120 (-32) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 94.393456
Clp0000I Optimal - objective value 94.393456
Coin0511I After Postsolve, objective 94.393456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.393456
Clp0000I Optimal - objective value 94.393456
Clp0000I Optimal - objective value 94.393456
Coin0511I After Postsolve, objective 94.393456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.39345597 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 28 columns (27 integer (27 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.383%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.8576
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.0775 iterations 19
Cbc0038I Solution found of -13.0775
Cbc0038I Relaxing continuous gives -13.0775
Cbc0038I Rounding solution of -28.6075 is better than previous of -13.0775

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -28.6075 to -48.5075 (0.02 seconds)
Cbc0038I Round again with cutoff of -53.0872
Cbc0038I Pass   2: suminf.    1.48392 (6) obj. -53.0872 iterations 6
Cbc0038I Pass   3: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass   4: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass   5: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass   6: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass   7: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass   8: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass   9: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  10: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  11: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass  12: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass  13: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass  14: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  15: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  16: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass  17: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass  18: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass  19: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  20: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  21: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass  22: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass  23: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass  24: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  25: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  26: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass  27: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass  28: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass  29: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  30: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  31: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.5075 - took 0.02 seconds
Cbc0012I Integer solution of -48.5075 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 28 columns, reduced to 28 rows 18 columns
Cbc0031I 7 added rows had average density of 20.714286
Cbc0013I At root node, 7 cuts changed objective from -94.282259 to -65.586662 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1309 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 674 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -48.50749999999999, took 2312 iterations and 8 nodes (0.22 seconds)
Cbc0032I Strong branching done 70 times (510 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 52 (-8) columns and 487 (-125) elements
Clp1000I sum of infeasibilities 2.66144e-06 - average 5.32288e-08, 36 fixed columns
Coin0506I Presolve 12 (-38) rows, 16 (-36) columns and 50 (-437) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.1148005 - largest nonzero change 2.3028965e-05 ( 0.0017698061%) - largest zero change 2.9890394e-05
Clp0000I Optimal - objective value 47.162795
Clp0000I Optimal - objective value 47.162795
Coin0511I After Postsolve, objective 47.162795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4360132 - largest nonzero change 2.0976223e-05 ( 0.0017698061%) - largest zero change 2.5826562e-05
Clp0000I Optimal - objective value 124.09561
Clp0000I Optimal - objective value 124.09561
Clp0000I Optimal - objective value 124.09561
Coin0511I After Postsolve, objective 124.09561, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 124.0956113 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 53 columns (53 integer (53 of which binary)) and 493 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.865%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.26628
Cbc0038I Pass   1: suminf.    1.99565 (10) obj. -67.5679 iterations 19
Cbc0038I Pass   2: suminf.    1.99565 (10) obj. -67.5679 iterations 1
Cbc0038I Solution found of -22.55
Cbc0038I Rounding solution of -25.7325 is better than previous of -22.55

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 53 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -25.7325 to -48.5075 (0.02 seconds)
Cbc0038I Round again with cutoff of -54.7026
Cbc0038I Pass   3: suminf.    1.99565 (10) obj. -67.5679 iterations 0
Cbc0038I Pass   4: suminf.    1.99565 (10) obj. -67.5679 iterations 1
Cbc0038I Pass   5: suminf.    1.26064 (16) obj. -54.7026 iterations 18
Cbc0038I Pass   6: suminf.    1.07070 (14) obj. -54.7026 iterations 4
Cbc0038I Pass   7: suminf.    0.96384 (6) obj. -54.7026 iterations 17
Cbc0038I Pass   8: suminf.    0.91594 (3) obj. -54.7026 iterations 3
Cbc0038I Pass   9: suminf.    0.10878 (2) obj. -54.7026 iterations 6
Cbc0038I Pass  10: suminf.    0.82721 (2) obj. -54.7026 iterations 1
Cbc0038I Pass  11: suminf.    0.49359 (2) obj. -62.5956 iterations 1
Cbc0038I Pass  12: suminf.    0.10878 (2) obj. -54.7026 iterations 3
Cbc0038I Pass  13: suminf.    1.47440 (5) obj. -54.7026 iterations 7
Cbc0038I Pass  14: suminf.    1.47440 (5) obj. -54.7026 iterations 0
Cbc0038I Pass  15: suminf.    0.99265 (3) obj. -54.7026 iterations 4
Cbc0038I Pass  16: suminf.    0.99265 (3) obj. -54.7026 iterations 1
Cbc0038I Pass  17: suminf.    0.31624 (3) obj. -54.7026 iterations 2
Cbc0038I Pass  18: suminf.    0.31624 (3) obj. -54.7026 iterations 0
Cbc0038I Pass  19: suminf.    0.99265 (3) obj. -54.7026 iterations 1
Cbc0038I Pass  20: suminf.    1.21160 (4) obj. -61.0717 iterations 12
Cbc0038I Pass  21: suminf.    1.04597 (4) obj. -54.7026 iterations 5
Cbc0038I Pass  22: suminf.    1.15071 (3) obj. -54.7026 iterations 4
Cbc0038I Pass  23: suminf.    0.92156 (3) obj. -54.7026 iterations 2
Cbc0038I Pass  24: suminf.    3.04029 (11) obj. -76.0356 iterations 13
Cbc0038I Pass  25: suminf.    3.04029 (11) obj. -76.0356 iterations 1
Cbc0038I Pass  26: suminf.    0.81082 (3) obj. -54.7026 iterations 16
Cbc0038I Pass  27: suminf.    0.78669 (3) obj. -54.7026 iterations 2
Cbc0038I Pass  28: suminf.    0.78669 (3) obj. -54.7026 iterations 0
Cbc0038I Pass  29: suminf.    0.81082 (3) obj. -54.7026 iterations 5
Cbc0038I Pass  30: suminf.    2.86189 (11) obj. -54.7026 iterations 12
Cbc0038I Pass  31: suminf.    2.86189 (11) obj. -54.7026 iterations 1
Cbc0038I Pass  32: suminf.    0.63899 (3) obj. -54.7026 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 53 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.5075 - took 0.02 seconds
Cbc0012I Integer solution of -48.5075 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 53 columns, reduced to 5 rows 4 columns
Cbc0031I 17 added rows had average density of 12.235294
Cbc0013I At root node, 17 cuts changed objective from -110.43569 to -52.506464 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 264 row cuts average 2.8 elements, 21 column cuts (21 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 383 row cuts average 25.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.698 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.5075 best solution, best possible -52.506464 (1.41 seconds)
Cbc0001I Search completed - best objective -48.50749999999999, took 1210 iterations and 8 nodes (1.44 seconds)
Cbc0032I Strong branching done 96 times (546 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       1.44

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 28 (-4) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 0.000137676 - average 2.64761e-06, 3 fixed columns
Coin0506I Presolve 40 (-12) rows, 24 (-4) columns and 120 (-32) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 94.393456
Clp0000I Optimal - objective value 94.393456
Coin0511I After Postsolve, objective 94.393456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.393456
Clp0000I Optimal - objective value 94.393456
Clp0000I Optimal - objective value 94.393456
Coin0511I After Postsolve, objective 94.393456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.39345597 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 28 columns (27 integer (27 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.383%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.8576
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.0775 iterations 19
Cbc0038I Solution found of -13.0775
Cbc0038I Relaxing continuous gives -13.0775
Cbc0038I Rounding solution of -28.6075 is better than previous of -13.0775

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -28.6075 to -48.5075 (0.02 seconds)
Cbc0038I Round again with cutoff of -53.0872
Cbc0038I Pass   2: suminf.    1.48392 (6) obj. -53.0872 iterations 6
Cbc0038I Pass   3: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass   4: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass   5: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass   6: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass   7: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass   8: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass   9: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  10: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  11: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass  12: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass  13: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass  14: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  15: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  16: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass  17: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass  18: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass  19: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  20: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  21: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass  22: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass  23: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass  24: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  25: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  26: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I Pass  27: suminf.    1.47116 (6) obj. -53.0872 iterations 8
Cbc0038I Pass  28: suminf.    1.10749 (5) obj. -53.0872 iterations 3
Cbc0038I Pass  29: suminf.    1.36528 (4) obj. -53.0872 iterations 5
Cbc0038I Pass  30: suminf.    0.89601 (4) obj. -53.0872 iterations 3
Cbc0038I Pass  31: suminf.    0.89601 (4) obj. -53.0872 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.5075 - took 0.03 seconds
Cbc0012I Integer solution of -48.5075 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 28 columns, reduced to 28 rows 18 columns
Cbc0031I 7 added rows had average density of 20.714286
Cbc0013I At root node, 7 cuts changed objective from -94.282259 to -65.586662 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1309 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 674 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -48.50749999999999, took 2312 iterations and 8 nodes (0.22 seconds)
Cbc0032I Strong branching done 70 times (510 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 52 (-9) columns and 487 (-126) elements
Clp1000I sum of infeasibilities 2.66144e-06 - average 5.32288e-08, 36 fixed columns
Coin0506I Presolve 12 (-38) rows, 16 (-36) columns and 50 (-437) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.1148005 - largest nonzero change 2.3028965e-05 ( 0.0017698061%) - largest zero change 2.9890394e-05
Clp0000I Optimal - objective value 47.162795
Clp0000I Optimal - objective value 47.162795
Coin0511I After Postsolve, objective 47.162795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4360132 - largest nonzero change 2.0976223e-05 ( 0.0017698061%) - largest zero change 2.5826562e-05
Clp0000I Optimal - objective value 124.09561
Clp0000I Optimal - objective value 124.09561
Clp0000I Optimal - objective value 124.09561
Coin0511I After Postsolve, objective 124.09561, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 124.0956113 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 53 columns (53 integer (53 of which binary)) and 493 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.865%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.26628
Cbc0038I Pass   1: suminf.    1.99565 (10) obj. -67.5679 iterations 19
Cbc0038I Pass   2: suminf.    1.99565 (10) obj. -67.5679 iterations 1
Cbc0038I Solution found of -22.55
Cbc0038I Rounding solution of -25.7325 is better than previous of -22.55

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 53 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -25.7325 to -48.5075 (0.02 seconds)
Cbc0038I Round again with cutoff of -54.7026
Cbc0038I Pass   3: suminf.    1.99565 (10) obj. -67.5679 iterations 0
Cbc0038I Pass   4: suminf.    1.99565 (10) obj. -67.5679 iterations 1
Cbc0038I Pass   5: suminf.    1.26064 (16) obj. -54.7026 iterations 18
Cbc0038I Pass   6: suminf.    1.07070 (14) obj. -54.7026 iterations 4
Cbc0038I Pass   7: suminf.    0.96384 (6) obj. -54.7026 iterations 17
Cbc0038I Pass   8: suminf.    0.91594 (3) obj. -54.7026 iterations 3
Cbc0038I Pass   9: suminf.    0.10878 (2) obj. -54.7026 iterations 6
Cbc0038I Pass  10: suminf.    0.82721 (2) obj. -54.7026 iterations 1
Cbc0038I Pass  11: suminf.    0.49359 (2) obj. -62.5956 iterations 1
Cbc0038I Pass  12: suminf.    0.10878 (2) obj. -54.7026 iterations 3
Cbc0038I Pass  13: suminf.    1.47440 (5) obj. -54.7026 iterations 7
Cbc0038I Pass  14: suminf.    1.47440 (5) obj. -54.7026 iterations 0
Cbc0038I Pass  15: suminf.    0.99265 (3) obj. -54.7026 iterations 4
Cbc0038I Pass  16: suminf.    0.99265 (3) obj. -54.7026 iterations 1
Cbc0038I Pass  17: suminf.    0.31624 (3) obj. -54.7026 iterations 2
Cbc0038I Pass  18: suminf.    0.31624 (3) obj. -54.7026 iterations 0
Cbc0038I Pass  19: suminf.    0.99265 (3) obj. -54.7026 iterations 1
Cbc0038I Pass  20: suminf.    1.21160 (4) obj. -61.0717 iterations 12
Cbc0038I Pass  21: suminf.    1.04597 (4) obj. -54.7026 iterations 5
Cbc0038I Pass  22: suminf.    1.15071 (3) obj. -54.7026 iterations 4
Cbc0038I Pass  23: suminf.    0.92156 (3) obj. -54.7026 iterations 2
Cbc0038I Pass  24: suminf.    3.04029 (11) obj. -76.0356 iterations 13
Cbc0038I Pass  25: suminf.    3.04029 (11) obj. -76.0356 iterations 1
Cbc0038I Pass  26: suminf.    0.81082 (3) obj. -54.7026 iterations 16
Cbc0038I Pass  27: suminf.    0.78669 (3) obj. -54.7026 iterations 2
Cbc0038I Pass  28: suminf.    0.78669 (3) obj. -54.7026 iterations 0
Cbc0038I Pass  29: suminf.    0.81082 (3) obj. -54.7026 iterations 5
Cbc0038I Pass  30: suminf.    2.86189 (11) obj. -54.7026 iterations 12
Cbc0038I Pass  31: suminf.    2.86189 (11) obj. -54.7026 iterations 1
Cbc0038I Pass  32: suminf.    0.63899 (3) obj. -54.7026 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 53 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.5075 - took 0.02 seconds
Cbc0012I Integer solution of -48.5075 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 53 columns, reduced to 5 rows 4 columns
Cbc0031I 17 added rows had average density of 12.235294
Cbc0013I At root node, 17 cuts changed objective from -110.43569 to -52.506464 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 264 row cuts average 2.8 elements, 21 column cuts (21 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 383 row cuts average 25.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.778 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.5075 best solution, best possible -52.506464 (1.54 seconds)
Cbc0001I Search completed - best objective -48.50749999999999, took 1210 iterations and 8 nodes (1.57 seconds)
Cbc0032I Strong branching done 96 times (546 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.57

