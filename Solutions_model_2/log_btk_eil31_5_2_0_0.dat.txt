Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 26 (-7) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 3.04772e-05 - average 6.77271e-07, 3 fixed columns
Coin0506I Presolve 39 (-6) rows, 23 (-3) columns and 117 (-18) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 85.685588
Clp0000I Optimal - objective value 85.685588
Coin0511I After Postsolve, objective 85.685588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.685588
Clp0000I Optimal - objective value 85.685588
Clp0000I Optimal - objective value 85.685588
Coin0511I After Postsolve, objective 85.685588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.68558834 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 26 columns (25 integer (25 of which binary)) and 140 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.588%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.78656
Cbc0038I Pass   1: suminf.    0.13333 (1) obj. -58.6383 iterations 11
Cbc0038I Solution found of -14.6539
Cbc0038I Relaxing continuous gives -14.6539
Cbc0038I Rounding solution of -29.3334 is better than previous of -14.6539

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 21 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -29.3334 to -43.2103 (0.01 seconds)
Cbc0038I Round again with cutoff of -46.6187
Cbc0038I Pass   2: suminf.    0.13333 (1) obj. -58.6383 iterations 0
Cbc0038I Pass   3: suminf.    0.37017 (1) obj. -46.6187 iterations 1
Cbc0038I Pass   4: suminf.    0.87427 (5) obj. -46.6187 iterations 7
Cbc0038I Pass   5: suminf.    0.87427 (5) obj. -46.6187 iterations 1
Cbc0038I Pass   6: suminf.    0.74565 (3) obj. -46.6187 iterations 6
Cbc0038I Pass   7: suminf.    0.42196 (2) obj. -46.6187 iterations 2
Cbc0038I Pass   8: suminf.    0.78030 (2) obj. -46.6187 iterations 5
Cbc0038I Pass   9: suminf.    0.19160 (2) obj. -46.6187 iterations 4
Cbc0038I Pass  10: suminf.    0.29938 (3) obj. -46.6187 iterations 6
Cbc0038I Pass  11: suminf.    0.29619 (2) obj. -46.6187 iterations 1
Cbc0038I Pass  12: suminf.    0.13333 (1) obj. -58.6383 iterations 3
Cbc0038I Pass  13: suminf.    0.37017 (1) obj. -46.6187 iterations 1
Cbc0038I Pass  14: suminf.    1.33161 (3) obj. -46.6187 iterations 6
Cbc0038I Pass  15: suminf.    1.02476 (3) obj. -46.6187 iterations 6
Cbc0038I Pass  16: suminf.    0.62353 (2) obj. -46.6187 iterations 1
Cbc0038I Pass  17: suminf.    0.46909 (2) obj. -46.6187 iterations 1
Cbc0038I Pass  18: suminf.    0.26667 (1) obj. -46.6407 iterations 4
Cbc0038I Pass  19: suminf.    0.66336 (3) obj. -46.6187 iterations 4
Cbc0038I Pass  20: suminf.    0.62353 (2) obj. -51.4343 iterations 3
Cbc0038I Pass  21: suminf.    1.02142 (4) obj. -46.6187 iterations 7
Cbc0038I Pass  22: suminf.    0.43249 (2) obj. -46.6187 iterations 5
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. -46.6187 iterations 2
Cbc0038I Pass  24: suminf.    0.16120 (1) obj. -46.6187 iterations 1
Cbc0038I Pass  25: suminf.    1.22805 (3) obj. -46.6187 iterations 10
Cbc0038I Pass  26: suminf.    0.58080 (2) obj. -46.6187 iterations 6
Cbc0038I Pass  27: suminf.    0.43333 (1) obj. -46.6187 iterations 1
Cbc0038I Pass  28: suminf.    0.43264 (1) obj. -46.6187 iterations 1
Cbc0038I Pass  29: suminf.    1.25446 (7) obj. -46.6187 iterations 11
Cbc0038I Pass  30: suminf.    0.89420 (5) obj. -46.6187 iterations 5
Cbc0038I Pass  31: suminf.    0.32513 (2) obj. -46.6187 iterations 4
Cbc0038I Rounding solution of -48.4513 is better than previous of -43.2103

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -48.4513 to -50.2846 (0.03 seconds)
Cbc0038I Round again with cutoff of -55.6866
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.13333 (1) obj. -58.6383 iterations 0
Cbc0038I Pass  32: suminf.    0.19149 (1) obj. -55.6866 iterations 1
Cbc0038I Pass  33: suminf.    0.30380 (2) obj. -57.9084 iterations 4
Cbc0038I Pass  34: suminf.    1.71861 (5) obj. -55.6866 iterations 15
Cbc0038I Pass  35: suminf.    0.75429 (4) obj. -55.6866 iterations 3
Cbc0038I Pass  36: suminf.    0.53319 (3) obj. -55.6866 iterations 1
Cbc0038I Pass  37: suminf.    0.90620 (3) obj. -55.6866 iterations 7
Cbc0038I Pass  38: suminf.    0.64084 (3) obj. -55.6866 iterations 4
Cbc0038I Pass  39: suminf.    0.52944 (2) obj. -55.6866 iterations 3
Cbc0038I Pass  40: suminf.    0.47483 (3) obj. -55.6866 iterations 2
Cbc0038I Pass  41: suminf.    0.42473 (2) obj. -55.6866 iterations 1
Cbc0038I Pass  42: suminf.    0.52944 (2) obj. -55.6866 iterations 2
Cbc0038I Pass  43: suminf.    1.85084 (5) obj. -55.6866 iterations 6
Cbc0038I Pass  44: suminf.    1.15708 (4) obj. -55.6866 iterations 3
Cbc0038I Pass  45: suminf.    0.94274 (3) obj. -55.6866 iterations 4
Cbc0038I Pass  46: suminf.    0.78710 (4) obj. -55.6866 iterations 1
Cbc0038I Pass  47: suminf.    1.70270 (8) obj. -55.6866 iterations 6
Cbc0038I Pass  48: suminf.    1.03766 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  49: suminf.    0.72965 (3) obj. -55.6866 iterations 1
Cbc0038I Pass  50: suminf.    0.94274 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  51: suminf.    0.78710 (4) obj. -55.6866 iterations 1
Cbc0038I Pass  52: suminf.    1.70270 (8) obj. -55.6866 iterations 5
Cbc0038I Pass  53: suminf.    1.03766 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  54: suminf.    0.72965 (3) obj. -55.6866 iterations 1
Cbc0038I Pass  55: suminf.    0.94274 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  56: suminf.    0.78710 (4) obj. -55.6866 iterations 1
Cbc0038I Pass  57: suminf.    1.70270 (8) obj. -55.6866 iterations 5
Cbc0038I Pass  58: suminf.    1.03766 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  59: suminf.    0.72965 (3) obj. -55.6866 iterations 1
Cbc0038I Pass  60: suminf.    0.94274 (3) obj. -55.6866 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -50.2846 - took 0.03 seconds
Cbc0012I Integer solution of -50.284623 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 26 columns, reduced to 25 rows 14 columns
Cbc0031I 7 added rows had average density of 18.714286
Cbc0013I At root node, 7 cuts changed objective from -77.293951 to -61.598617 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 316 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 371 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -50.351303 found by rounding after 1129 iterations and 1 nodes (0.13 seconds)
Cbc0012I Integer solution of -51.661603 found by DiveCoefficient after 1539 iterations and 5 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -51.661603, took 1696 iterations and 12 nodes (0.17 seconds)
Cbc0032I Strong branching done 88 times (500 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-19) rows, 50 (-12) columns and 420 (-228) elements
Clp1000I sum of infeasibilities 8.49405e-08 - average 1.88757e-09, 12 fixed columns
Coin0506I Presolve 35 (-10) rows, 38 (-12) columns and 256 (-164) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 104.83817
Clp0000I Optimal - objective value 104.83817
Coin0511I After Postsolve, objective 104.83817, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 104.83817
Clp0000I Optimal - objective value 104.83817
Clp0000I Optimal - objective value 104.83817
Coin0511I After Postsolve, objective 104.83817, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.8381651 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 356 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.971%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.46672
Cbc0038I Pass   1: suminf.    0.90374 (9) obj. -40.2991 iterations 18
Cbc0038I Pass   2: suminf.    0.90374 (9) obj. -40.2991 iterations 1
Cbc0038I Solution found of -26.7821
Cbc0038I Rounding solution of -33.5488 is better than previous of -26.7821

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -33.5488 to -43.2103 (0.02 seconds)
Cbc0038I Round again with cutoff of -47.0152
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.08214 (16) obj. -47.0152 iterations 6
Cbc0038I Pass   4: suminf.    1.41455 (10) obj. -47.0152 iterations 4
Cbc0038I Pass   5: suminf.    0.94541 (9) obj. -53.4562 iterations 2
Cbc0038I Pass   6: suminf.    0.13749 (1) obj. -47.0152 iterations 15
Cbc0038I Pass   7: suminf.    0.31250 (1) obj. -55.8631 iterations 1
Cbc0038I Pass   8: suminf.    0.93574 (3) obj. -47.0152 iterations 6
Cbc0038I Pass   9: suminf.    0.93574 (3) obj. -47.0152 iterations 0
Cbc0038I Pass  10: suminf.    0.34444 (1) obj. -50.8216 iterations 3
Cbc0038I Pass  11: suminf.    0.26915 (1) obj. -47.0152 iterations 1
Cbc0038I Pass  12: suminf.    2.84221 (7) obj. -47.0152 iterations 12
Cbc0038I Pass  13: suminf.    1.21248 (5) obj. -47.0152 iterations 3
Cbc0038I Pass  14: suminf.    1.21248 (5) obj. -47.0152 iterations 0
Cbc0038I Pass  15: suminf.    0.70846 (3) obj. -47.0152 iterations 3
Cbc0038I Pass  16: suminf.    0.28366 (10) obj. -47.0152 iterations 4
Cbc0038I Pass  17: suminf.    0.83282 (3) obj. -47.0152 iterations 9
Cbc0038I Pass  18: suminf.    0.72999 (3) obj. -47.0152 iterations 1
Cbc0038I Pass  19: suminf.    0.82824 (2) obj. -47.0152 iterations 7
Cbc0038I Pass  20: suminf.    0.81111 (2) obj. -47.8812 iterations 2
Cbc0038I Pass  21: suminf.    1.08999 (3) obj. -47.0152 iterations 3
Cbc0038I Pass  22: suminf.    0.96819 (3) obj. -47.0152 iterations 3
Cbc0038I Pass  23: suminf.    0.65239 (3) obj. -47.0152 iterations 1
Cbc0038I Pass  24: suminf.    0.91113 (3) obj. -47.0152 iterations 2
Cbc0038I Pass  25: suminf.    0.91113 (3) obj. -47.0152 iterations 1
Cbc0038I Pass  26: suminf.    1.03008 (3) obj. -47.0152 iterations 1
Cbc0038I Pass  27: suminf.    1.10056 (4) obj. -47.0152 iterations 4
Cbc0038I Pass  28: suminf.    0.96433 (3) obj. -47.0152 iterations 3
Cbc0038I Pass  29: suminf.    0.97347 (3) obj. -47.0152 iterations 4
Cbc0038I Pass  30: suminf.    0.69719 (2) obj. -47.0152 iterations 3
Cbc0038I Pass  31: suminf.    0.67083 (2) obj. -48.3475 iterations 2
Cbc0038I Pass  32: suminf.    0.73192 (3) obj. -47.0152 iterations 2
Cbc0038I Rounding solution of -47.6205 is better than previous of -43.2103

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 29 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -47.6205 to -51.6616 (0.04 seconds)
Cbc0038I Round again with cutoff of -57.5811
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.68245 (16) obj. -57.5811 iterations 2
Cbc0038I Pass  33: suminf.    2.68245 (16) obj. -57.5811 iterations 1
Cbc0038I Pass  34: suminf.    0.87530 (11) obj. -57.5811 iterations 26
Cbc0038I Pass  35: suminf.    0.93140 (4) obj. -57.5811 iterations 10
Cbc0038I Pass  36: suminf.    0.62761 (4) obj. -59.3367 iterations 6
Cbc0038I Pass  37: suminf.    1.03521 (3) obj. -57.5811 iterations 7
Cbc0038I Pass  38: suminf.    1.03521 (3) obj. -57.5811 iterations 0
Cbc0038I Pass  39: suminf.    1.13439 (3) obj. -57.5811 iterations 1
Cbc0038I Pass  40: suminf.    1.13439 (3) obj. -57.5811 iterations 0
Cbc0038I Pass  41: suminf.    1.06981 (3) obj. -57.5811 iterations 4
Cbc0038I Pass  42: suminf.    0.60340 (3) obj. -57.5811 iterations 4
Cbc0038I Pass  43: suminf.    0.58404 (4) obj. -57.5811 iterations 1
Cbc0038I Pass  44: suminf.    0.97015 (4) obj. -57.5811 iterations 3
Cbc0038I Pass  45: suminf.    0.97015 (4) obj. -57.5811 iterations 3
Cbc0038I Pass  46: suminf.    1.06981 (3) obj. -57.5811 iterations 4
Cbc0038I Pass  47: suminf.    1.06981 (3) obj. -57.5811 iterations 0
Cbc0038I Pass  48: suminf.    0.60340 (3) obj. -57.5811 iterations 4
Cbc0038I Pass  49: suminf.    0.58404 (4) obj. -57.5811 iterations 1
Cbc0038I Pass  50: suminf.    0.97015 (4) obj. -57.5811 iterations 3
Cbc0038I Pass  51: suminf.    0.97015 (4) obj. -57.5811 iterations 3
Cbc0038I Pass  52: suminf.    1.06981 (3) obj. -57.5811 iterations 4
Cbc0038I Pass  53: suminf.    1.06981 (3) obj. -57.5811 iterations 0
Cbc0038I Pass  54: suminf.    0.60340 (3) obj. -57.5811 iterations 4
Cbc0038I Pass  55: suminf.    0.58404 (4) obj. -57.5811 iterations 1
Cbc0038I Pass  56: suminf.    0.97015 (4) obj. -57.5811 iterations 3
Cbc0038I Pass  57: suminf.    0.97015 (4) obj. -57.5811 iterations 3
Cbc0038I Pass  58: suminf.    1.06981 (3) obj. -57.5811 iterations 4
Cbc0038I Pass  59: suminf.    1.06981 (3) obj. -57.5811 iterations 0
Cbc0038I Pass  60: suminf.    0.60340 (3) obj. -57.5811 iterations 4
Cbc0038I Pass  61: suminf.    0.58404 (4) obj. -57.5811 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 24 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -51.6616 - took 0.03 seconds
Cbc0012I Integer solution of -51.661603 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 17 rows 20 columns
Cbc0031I 21 added rows had average density of 13.333333
Cbc0013I At root node, 21 cuts changed objective from -81.258674 to -55.512165 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 990 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 571 row cuts average 35.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 25 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 40 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 161 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 229 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 70 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.764 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -51.661603 best solution, best possible -55.512165 (1.57 seconds)
Cbc0010I After 8 nodes, 5 on tree, -51.661603 best solution, best possible -55.512165 (2.36 seconds)
Cbc0001I Search completed - best objective -51.661603, took 2218 iterations and 16 nodes (2.72 seconds)
Cbc0032I Strong branching done 250 times (1819 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 27 variables fixed on reduced cost
Total time (CPU seconds):       1.70   (Wallclock seconds):       2.72

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 26 (-7) columns and 135 (-48) elements
Clp1000I sum of infeasibilities 3.04772e-05 - average 6.77271e-07, 3 fixed columns
Coin0506I Presolve 39 (-6) rows, 23 (-3) columns and 117 (-18) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 85.685588
Clp0000I Optimal - objective value 85.685588
Coin0511I After Postsolve, objective 85.685588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.685588
Clp0000I Optimal - objective value 85.685588
Clp0000I Optimal - objective value 85.685588
Coin0511I After Postsolve, objective 85.685588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.68558834 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 26 columns (25 integer (25 of which binary)) and 140 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.588%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.78656
Cbc0038I Pass   1: suminf.    0.13333 (1) obj. -58.6383 iterations 11
Cbc0038I Solution found of -14.6539
Cbc0038I Relaxing continuous gives -14.6539
Cbc0038I Rounding solution of -29.3334 is better than previous of -14.6539

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 21 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -29.3334 to -43.2103 (0.01 seconds)
Cbc0038I Round again with cutoff of -46.6187
Cbc0038I Pass   2: suminf.    0.13333 (1) obj. -58.6383 iterations 0
Cbc0038I Pass   3: suminf.    0.37017 (1) obj. -46.6187 iterations 1
Cbc0038I Pass   4: suminf.    0.87427 (5) obj. -46.6187 iterations 7
Cbc0038I Pass   5: suminf.    0.87427 (5) obj. -46.6187 iterations 1
Cbc0038I Pass   6: suminf.    0.74565 (3) obj. -46.6187 iterations 6
Cbc0038I Pass   7: suminf.    0.42196 (2) obj. -46.6187 iterations 2
Cbc0038I Pass   8: suminf.    0.78030 (2) obj. -46.6187 iterations 5
Cbc0038I Pass   9: suminf.    0.19160 (2) obj. -46.6187 iterations 4
Cbc0038I Pass  10: suminf.    0.29938 (3) obj. -46.6187 iterations 6
Cbc0038I Pass  11: suminf.    0.29619 (2) obj. -46.6187 iterations 1
Cbc0038I Pass  12: suminf.    0.13333 (1) obj. -58.6383 iterations 3
Cbc0038I Pass  13: suminf.    0.37017 (1) obj. -46.6187 iterations 1
Cbc0038I Pass  14: suminf.    1.33161 (3) obj. -46.6187 iterations 6
Cbc0038I Pass  15: suminf.    1.02476 (3) obj. -46.6187 iterations 6
Cbc0038I Pass  16: suminf.    0.62353 (2) obj. -46.6187 iterations 1
Cbc0038I Pass  17: suminf.    0.46909 (2) obj. -46.6187 iterations 1
Cbc0038I Pass  18: suminf.    0.26667 (1) obj. -46.6407 iterations 4
Cbc0038I Pass  19: suminf.    0.66336 (3) obj. -46.6187 iterations 4
Cbc0038I Pass  20: suminf.    0.62353 (2) obj. -51.4343 iterations 3
Cbc0038I Pass  21: suminf.    1.02142 (4) obj. -46.6187 iterations 7
Cbc0038I Pass  22: suminf.    0.43249 (2) obj. -46.6187 iterations 5
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. -46.6187 iterations 2
Cbc0038I Pass  24: suminf.    0.16120 (1) obj. -46.6187 iterations 1
Cbc0038I Pass  25: suminf.    1.22805 (3) obj. -46.6187 iterations 10
Cbc0038I Pass  26: suminf.    0.58080 (2) obj. -46.6187 iterations 6
Cbc0038I Pass  27: suminf.    0.43333 (1) obj. -46.6187 iterations 1
Cbc0038I Pass  28: suminf.    0.43264 (1) obj. -46.6187 iterations 1
Cbc0038I Pass  29: suminf.    1.25446 (7) obj. -46.6187 iterations 11
Cbc0038I Pass  30: suminf.    0.89420 (5) obj. -46.6187 iterations 5
Cbc0038I Pass  31: suminf.    0.32513 (2) obj. -46.6187 iterations 4
Cbc0038I Rounding solution of -48.4513 is better than previous of -43.2103

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -48.4513 to -50.2846 (0.03 seconds)
Cbc0038I Round again with cutoff of -55.6866
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.13333 (1) obj. -58.6383 iterations 0
Cbc0038I Pass  32: suminf.    0.19149 (1) obj. -55.6866 iterations 1
Cbc0038I Pass  33: suminf.    0.30380 (2) obj. -57.9084 iterations 4
Cbc0038I Pass  34: suminf.    1.71861 (5) obj. -55.6866 iterations 15
Cbc0038I Pass  35: suminf.    0.75429 (4) obj. -55.6866 iterations 3
Cbc0038I Pass  36: suminf.    0.53319 (3) obj. -55.6866 iterations 1
Cbc0038I Pass  37: suminf.    0.90620 (3) obj. -55.6866 iterations 7
Cbc0038I Pass  38: suminf.    0.64084 (3) obj. -55.6866 iterations 4
Cbc0038I Pass  39: suminf.    0.52944 (2) obj. -55.6866 iterations 3
Cbc0038I Pass  40: suminf.    0.47483 (3) obj. -55.6866 iterations 2
Cbc0038I Pass  41: suminf.    0.42473 (2) obj. -55.6866 iterations 1
Cbc0038I Pass  42: suminf.    0.52944 (2) obj. -55.6866 iterations 2
Cbc0038I Pass  43: suminf.    1.85084 (5) obj. -55.6866 iterations 6
Cbc0038I Pass  44: suminf.    1.15708 (4) obj. -55.6866 iterations 3
Cbc0038I Pass  45: suminf.    0.94274 (3) obj. -55.6866 iterations 4
Cbc0038I Pass  46: suminf.    0.78710 (4) obj. -55.6866 iterations 1
Cbc0038I Pass  47: suminf.    1.70270 (8) obj. -55.6866 iterations 6
Cbc0038I Pass  48: suminf.    1.03766 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  49: suminf.    0.72965 (3) obj. -55.6866 iterations 1
Cbc0038I Pass  50: suminf.    0.94274 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  51: suminf.    0.78710 (4) obj. -55.6866 iterations 1
Cbc0038I Pass  52: suminf.    1.70270 (8) obj. -55.6866 iterations 5
Cbc0038I Pass  53: suminf.    1.03766 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  54: suminf.    0.72965 (3) obj. -55.6866 iterations 1
Cbc0038I Pass  55: suminf.    0.94274 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  56: suminf.    0.78710 (4) obj. -55.6866 iterations 1
Cbc0038I Pass  57: suminf.    1.70270 (8) obj. -55.6866 iterations 5
Cbc0038I Pass  58: suminf.    1.03766 (3) obj. -55.6866 iterations 3
Cbc0038I Pass  59: suminf.    0.72965 (3) obj. -55.6866 iterations 1
Cbc0038I Pass  60: suminf.    0.94274 (3) obj. -55.6866 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 26 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -50.2846 - took 0.03 seconds
Cbc0012I Integer solution of -50.284623 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 26 columns, reduced to 25 rows 14 columns
Cbc0031I 7 added rows had average density of 18.714286
Cbc0013I At root node, 7 cuts changed objective from -77.293951 to -61.598617 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 316 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 371 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -50.351303 found by rounding after 1129 iterations and 1 nodes (0.13 seconds)
Cbc0012I Integer solution of -51.661603 found by DiveCoefficient after 1539 iterations and 5 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -51.661603, took 1696 iterations and 12 nodes (0.17 seconds)
Cbc0032I Strong branching done 88 times (500 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 46 (-17) columns and 349 (-300) elements
Clp1000I sum of infeasibilities 5.14891e-10 - average 1.25583e-11, 33 fixed columns
Coin0506I Presolve 10 (-31) rows, 13 (-33) columns and 41 (-308) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 2.3003121 - largest nonzero change 1.4353893e-05 ( 0.00091573104%) - largest zero change 0
Clp0000I Optimal - objective value 56.099553
Clp0000I Optimal - objective value 56.099553
Coin0511I After Postsolve, objective 56.099553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3363462 - largest nonzero change 1.2300919e-05 ( 0.00091573104%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 98.578514
Clp0000I Optimal - objective value 98.578514
Clp0000I Optimal - objective value 98.578514
Coin0511I After Postsolve, objective 98.578514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.5785135 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 361 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.971%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.36268
Cbc0038I Pass   1: suminf.    0.61839 (6) obj. -34.8623 iterations 17
Cbc0038I Pass   2: suminf.    0.61839 (6) obj. -34.8623 iterations 1
Cbc0038I Solution found of -26.7821
Cbc0038I Rounding solution of -33.5488 is better than previous of -26.7821

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -33.5488 to -43.2103 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.3822
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.87808 (13) obj. -46.3822 iterations 4
Cbc0038I Pass   4: suminf.    1.87808 (13) obj. -46.3822 iterations 1
Cbc0038I Pass   5: suminf.    0.45407 (1) obj. -46.3822 iterations 19
Cbc0038I Pass   6: suminf.    0.32500 (1) obj. -52.9077 iterations 1
Cbc0038I Pass   7: suminf.    1.16825 (5) obj. -46.3822 iterations 9
Cbc0038I Pass   8: suminf.    0.83341 (3) obj. -46.3822 iterations 4
Cbc0038I Pass   9: suminf.    0.69692 (2) obj. -46.3822 iterations 4
Cbc0038I Pass  10: suminf.    0.37778 (1) obj. -50.4445 iterations 4
Cbc0038I Pass  11: suminf.    0.45813 (1) obj. -46.3822 iterations 1
Cbc0038I Pass  12: suminf.    2.96720 (9) obj. -46.3822 iterations 16
Cbc0038I Pass  13: suminf.    1.35536 (6) obj. -46.3822 iterations 6
Cbc0038I Pass  14: suminf.    1.52839 (5) obj. -46.3822 iterations 3
Cbc0038I Pass  15: suminf.    0.60248 (3) obj. -46.3822 iterations 4
Cbc0038I Pass  16: suminf.    0.84941 (3) obj. -46.3822 iterations 2
Cbc0038I Pass  17: suminf.    0.84941 (3) obj. -46.3822 iterations 0
Cbc0038I Pass  18: suminf.    0.71376 (2) obj. -46.3822 iterations 4
Cbc0038I Pass  19: suminf.    0.70833 (2) obj. -46.6567 iterations 2
Cbc0038I Pass  20: suminf.    0.90530 (3) obj. -46.3822 iterations 2
Cbc0038I Pass  21: suminf.    0.90530 (3) obj. -46.3822 iterations 0
Cbc0038I Pass  22: suminf.    1.15504 (3) obj. -46.3822 iterations 2
Cbc0038I Pass  23: suminf.    0.97732 (3) obj. -46.3822 iterations 1
Cbc0038I Pass  24: suminf.    0.97732 (3) obj. -46.3822 iterations 0
Cbc0038I Pass  25: suminf.    0.71376 (2) obj. -46.3822 iterations 4
Cbc0038I Pass  26: suminf.    0.70833 (2) obj. -46.6567 iterations 2
Cbc0038I Pass  27: suminf.    0.90530 (3) obj. -46.3822 iterations 2
Cbc0038I Pass  28: suminf.    0.90530 (3) obj. -46.3822 iterations 0
Cbc0038I Pass  29: suminf.    1.15504 (3) obj. -46.3822 iterations 2
Cbc0038I Pass  30: suminf.    0.97732 (3) obj. -46.3822 iterations 1
Cbc0038I Pass  31: suminf.    0.97732 (3) obj. -46.3822 iterations 0
Cbc0038I Pass  32: suminf.    0.71376 (2) obj. -46.3822 iterations 4
Cbc0038I Rounding solution of -46.8333 is better than previous of -43.2103

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 28 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -46.8333 to -50.3513 (0.03 seconds)
Cbc0038I Round again with cutoff of -55.2668
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.33295 (14) obj. -55.2668 iterations 4
Cbc0038I Pass  33: suminf.    2.33295 (14) obj. -55.2668 iterations 1
Cbc0038I Pass  34: suminf.    1.24774 (5) obj. -55.2668 iterations 20
Cbc0038I Pass  35: suminf.    1.09743 (7) obj. -55.2668 iterations 2
Cbc0038I Pass  36: suminf.    0.48557 (5) obj. -55.2668 iterations 9
Cbc0038I Pass  37: suminf.    0.45835 (2) obj. -55.2668 iterations 1
Cbc0038I Pass  38: suminf.    0.71334 (4) obj. -62.2162 iterations 3
Cbc0038I Pass  39: suminf.    0.41357 (2) obj. -55.2668 iterations 3
Cbc0038I Pass  40: suminf.    0.50490 (2) obj. -55.2668 iterations 1
Cbc0038I Pass  41: suminf.    1.36611 (11) obj. -55.2668 iterations 11
Cbc0038I Pass  42: suminf.    1.36611 (11) obj. -55.2668 iterations 0
Cbc0038I Pass  43: suminf.    0.90778 (3) obj. -55.2668 iterations 11
Cbc0038I Pass  44: suminf.    0.90778 (3) obj. -55.2668 iterations 1
Cbc0038I Pass  45: suminf.    1.36993 (4) obj. -55.2668 iterations 5
Cbc0038I Pass  46: suminf.    0.87384 (4) obj. -55.2668 iterations 3
Cbc0038I Pass  47: suminf.    0.72319 (5) obj. -55.2668 iterations 1
Cbc0038I Pass  48: suminf.    0.77209 (4) obj. -55.2668 iterations 4
Cbc0038I Pass  49: suminf.    0.76470 (3) obj. -55.2668 iterations 1
Cbc0038I Pass  50: suminf.    0.80763 (3) obj. -55.2668 iterations 2
Cbc0038I Pass  51: suminf.    0.77838 (3) obj. -55.6178 iterations 1
Cbc0038I Pass  52: suminf.    0.77946 (3) obj. -55.2668 iterations 2
Cbc0038I Pass  53: suminf.    1.89163 (8) obj. -55.2668 iterations 10
Cbc0038I Pass  54: suminf.    1.35962 (7) obj. -55.2668 iterations 2
Cbc0038I Pass  55: suminf.    0.87548 (5) obj. -55.2668 iterations 8
Cbc0038I Pass  56: suminf.    0.87080 (5) obj. -55.2668 iterations 2
Cbc0038I Pass  57: suminf.    0.87695 (3) obj. -55.2668 iterations 5
Cbc0038I Pass  58: suminf.    0.87695 (3) obj. -55.2668 iterations 0
Cbc0038I Pass  59: suminf.    0.56667 (2) obj. -57.4205 iterations 3
Cbc0038I Pass  60: suminf.    0.56667 (2) obj. -57.4205 iterations 0
Cbc0038I Pass  61: suminf.    2.87308 (9) obj. -55.2668 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -50.3513 to -51.6616 (0.06 seconds)
Cbc0038I Round again with cutoff of -61.1652
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.74904 (14) obj. -61.1652 iterations 0
Cbc0038I Pass  62: suminf.    2.74904 (14) obj. -61.1652 iterations 1
Cbc0038I Pass  63: suminf.    2.03334 (10) obj. -61.1652 iterations 22
Cbc0038I Pass  64: suminf.    1.54560 (8) obj. -61.1652 iterations 2
Cbc0038I Pass  65: suminf.    1.47404 (6) obj. -61.1652 iterations 1
Cbc0038I Pass  66: suminf.    1.26658 (5) obj. -61.1652 iterations 9
Cbc0038I Pass  67: suminf.    0.63066 (3) obj. -61.1652 iterations 4
Cbc0038I Pass  68: suminf.    0.80093 (4) obj. -61.1652 iterations 2
Cbc0038I Pass  69: suminf.    1.87527 (6) obj. -61.1652 iterations 8
Cbc0038I Pass  70: suminf.    1.56498 (8) obj. -61.1652 iterations 3
Cbc0038I Pass  71: suminf.    1.56498 (8) obj. -61.1652 iterations 0
Cbc0038I Pass  72: suminf.    1.96892 (6) obj. -61.1652 iterations 9
Cbc0038I Pass  73: suminf.    1.84979 (6) obj. -61.1652 iterations 1
Cbc0038I Pass  74: suminf.    0.76807 (2) obj. -61.1652 iterations 6
Cbc0038I Pass  75: suminf.    0.63066 (3) obj. -61.1652 iterations 2
Cbc0038I Pass  76: suminf.    0.80093 (4) obj. -61.1652 iterations 2
Cbc0038I Pass  77: suminf.    2.42262 (8) obj. -61.1652 iterations 7
Cbc0038I Pass  78: suminf.    1.79949 (6) obj. -61.1652 iterations 2
Cbc0038I Pass  79: suminf.    1.12019 (4) obj. -61.1652 iterations 7
Cbc0038I Pass  80: suminf.    3.40370 (9) obj. -61.1652 iterations 8
Cbc0038I Pass  81: suminf.    1.51721 (5) obj. -61.1652 iterations 6
Cbc0038I Pass  82: suminf.    2.97166 (9) obj. -61.1652 iterations 5
Cbc0038I Pass  83: suminf.    2.12330 (7) obj. -61.1652 iterations 2
Cbc0038I Pass  84: suminf.    0.80093 (4) obj. -61.1652 iterations 7
Cbc0038I Pass  85: suminf.    0.63066 (3) obj. -61.1652 iterations 3
Cbc0038I Pass  86: suminf.    0.80093 (4) obj. -61.1652 iterations 2
Cbc0038I Pass  87: suminf.    2.66774 (8) obj. -61.1652 iterations 5
Cbc0038I Pass  88: suminf.    1.68958 (7) obj. -61.1652 iterations 1
Cbc0038I Pass  89: suminf.    1.21944 (4) obj. -61.1652 iterations 6
Cbc0038I Pass  90: suminf.    1.21944 (4) obj. -61.1652 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 30 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -51.6616 - took 0.05 seconds
Cbc0012I Integer solution of -51.661603 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 27 rows 21 columns
Cbc0031I 20 added rows had average density of 15.45
Cbc0013I At root node, 20 cuts changed objective from -74.92823 to -55.533711 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1087 row cuts average 2.5 elements, 6 column cuts (6 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 315 row cuts average 33.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 40 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 34 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 172 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 45 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -51.661603 best solution, best possible -55.533708 (1.53 seconds)
Cbc0010I After 10 nodes, 1 on tree, -51.661603 best solution, best possible -52.711486 (2.26 seconds)
Cbc0001I Search completed - best objective -51.661603, took 1837 iterations and 14 nodes (2.36 seconds)
Cbc0032I Strong branching done 224 times (1252 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.52   (Wallclock seconds):       2.37

