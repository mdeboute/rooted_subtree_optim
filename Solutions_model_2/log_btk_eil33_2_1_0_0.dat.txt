Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 32 (-3) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 1.61932e-05 - average 2.89164e-07, 5 fixed columns
Coin0506I Presolve 46 (-10) rows, 27 (-5) columns and 138 (-30) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 117.50039
Clp0000I Optimal - objective value 117.50039
Coin0511I After Postsolve, objective 117.50039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.50039
Clp0000I Optimal - objective value 117.50039
Clp0000I Optimal - objective value 117.50039
Coin0511I After Postsolve, objective 117.50039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.5003861 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 32 columns (31 integer (31 of which binary)) and 167 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.644%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.42267
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.9443 iterations 13
Cbc0038I Solution found of -10.9443
Cbc0038I Relaxing continuous gives -10.9443
Cbc0038I Rounding solution of -25.5781 is better than previous of -10.9443

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 20 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -25.5781 to -60.7684 (0.01 seconds)
Cbc0038I Round again with cutoff of -66.4417
Cbc0038I Pass   2: suminf.    1.06537 (3) obj. -66.4417 iterations 4
Cbc0038I Pass   3: suminf.    0.68615 (2) obj. -66.4417 iterations 3
Cbc0038I Pass   4: suminf.    1.06276 (3) obj. -66.4417 iterations 3
Cbc0038I Pass   5: suminf.    0.81595 (6) obj. -66.4417 iterations 7
Cbc0038I Pass   6: suminf.    0.72938 (4) obj. -66.4417 iterations 3
Cbc0038I Pass   7: suminf.    0.46962 (3) obj. -66.4417 iterations 2
Cbc0038I Pass   8: suminf.    0.85231 (2) obj. -66.4417 iterations 3
Cbc0038I Pass   9: suminf.    0.73506 (3) obj. -66.4417 iterations 3
Cbc0038I Pass  10: suminf.    0.95283 (5) obj. -66.4417 iterations 6
Cbc0038I Pass  11: suminf.    0.55062 (2) obj. -66.4417 iterations 6
Cbc0038I Pass  12: suminf.    0.26407 (2) obj. -66.4417 iterations 2
Cbc0038I Pass  13: suminf.    0.27599 (2) obj. -66.4417 iterations 2
Cbc0038I Pass  14: suminf.    0.27599 (2) obj. -66.4417 iterations 1
Cbc0038I Pass  15: suminf.    0.62215 (3) obj. -66.4417 iterations 3
Cbc0038I Pass  16: suminf.    0.93296 (3) obj. -66.4417 iterations 16
Cbc0038I Pass  17: suminf.    0.72716 (4) obj. -66.4417 iterations 6
Cbc0038I Pass  18: suminf.    1.37785 (3) obj. -66.4417 iterations 2
Cbc0038I Pass  19: suminf.    1.07219 (3) obj. -66.4417 iterations 1
Cbc0038I Pass  20: suminf.    1.06093 (4) obj. -66.4417 iterations 1
Cbc0038I Pass  21: suminf.    1.12317 (3) obj. -66.4417 iterations 2
Cbc0038I Pass  22: suminf.    1.12952 (4) obj. -66.4417 iterations 2
Cbc0038I Pass  23: suminf.    1.10609 (3) obj. -66.4417 iterations 2
Cbc0038I Pass  24: suminf.    1.07248 (3) obj. -66.4417 iterations 1
Cbc0038I Pass  25: suminf.    1.03853 (4) obj. -66.4417 iterations 5
Cbc0038I Pass  26: suminf.    1.03853 (4) obj. -66.4417 iterations 3
Cbc0038I Pass  27: suminf.    1.56235 (4) obj. -66.4417 iterations 6
Cbc0038I Pass  28: suminf.    1.06093 (4) obj. -66.4417 iterations 4
Cbc0038I Pass  29: suminf.    1.12317 (3) obj. -66.4417 iterations 2
Cbc0038I Pass  30: suminf.    1.12952 (4) obj. -66.4417 iterations 2
Cbc0038I Pass  31: suminf.    1.10609 (3) obj. -66.4417 iterations 2
Cbc0038I Rounding solution of -61.7795 is better than previous of -60.7684

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 24 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -76.6534
Cbc0038I Pass  31: suminf.    1.27730 (5) obj. -76.6534 iterations 1
Cbc0038I Pass  32: suminf.    1.26326 (4) obj. -76.6534 iterations 1
Cbc0038I Pass  33: suminf.    0.58035 (3) obj. -76.6534 iterations 6
Cbc0038I Pass  34: suminf.    0.51581 (3) obj. -76.6534 iterations 1
Cbc0038I Pass  35: suminf.    0.34459 (4) obj. -76.6534 iterations 2
Cbc0038I Pass  36: suminf.    0.34459 (4) obj. -76.6534 iterations 0
Cbc0038I Pass  37: suminf.    1.27251 (3) obj. -76.6534 iterations 7
Cbc0038I Pass  38: suminf.    1.27251 (3) obj. -76.6534 iterations 0
Cbc0038I Pass  39: suminf.    0.76460 (3) obj. -76.6534 iterations 1
Cbc0038I Pass  40: suminf.    0.93240 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  41: suminf.    0.93240 (3) obj. -76.6534 iterations 0
Cbc0038I Pass  42: suminf.    1.20788 (4) obj. -76.6534 iterations 5
Cbc0038I Pass  43: suminf.    0.72190 (4) obj. -76.6534 iterations 2
Cbc0038I Pass  44: suminf.    1.05572 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  45: suminf.    0.41567 (2) obj. -76.6534 iterations 3
Cbc0038I Pass  46: suminf.    0.82450 (2) obj. -76.6534 iterations 2
Cbc0038I Pass  47: suminf.    0.79451 (3) obj. -76.6534 iterations 1
Cbc0038I Pass  48: suminf.    0.49449 (3) obj. -76.6534 iterations 3
Cbc0038I Pass  49: suminf.    1.10219 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  50: suminf.    0.41267 (2) obj. -76.6534 iterations 3
Cbc0038I Pass  51: suminf.    0.72317 (2) obj. -76.6534 iterations 2
Cbc0038I Pass  52: suminf.    0.72317 (2) obj. -76.6534 iterations 0
Cbc0038I Pass  53: suminf.    0.49449 (3) obj. -76.6534 iterations 2
Cbc0038I Pass  54: suminf.    1.10219 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  55: suminf.    0.41267 (2) obj. -76.6534 iterations 3
Cbc0038I Pass  56: suminf.    0.72317 (2) obj. -76.6534 iterations 2
Cbc0038I Pass  57: suminf.    0.72317 (2) obj. -76.6534 iterations 0
Cbc0038I Pass  58: suminf.    0.49449 (3) obj. -76.6534 iterations 2
Cbc0038I Pass  59: suminf.    1.10219 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  60: suminf.    0.41267 (2) obj. -76.6534 iterations 3
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -88.9075
Cbc0038I Pass  60: suminf.    1.66755 (5) obj. -88.9075 iterations 0
Cbc0038I Pass  61: suminf.    1.28238 (3) obj. -88.9075 iterations 3
Cbc0038I Pass  62: suminf.    1.25284 (4) obj. -88.9075 iterations 3
Cbc0038I Pass  63: suminf.    1.09253 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  64: suminf.    1.43230 (4) obj. -88.9075 iterations 3
Cbc0038I Pass  65: suminf.    0.88106 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  66: suminf.    1.20828 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  67: suminf.    0.61844 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  68: suminf.    1.20828 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  69: suminf.    1.40979 (10) obj. -88.9075 iterations 14
Cbc0038I Pass  70: suminf.    1.02758 (6) obj. -88.9075 iterations 4
Cbc0038I Pass  71: suminf.    1.21364 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  72: suminf.    1.21364 (3) obj. -88.9075 iterations 0
Cbc0038I Pass  73: suminf.    1.47395 (4) obj. -88.9075 iterations 3
Cbc0038I Pass  74: suminf.    1.06804 (4) obj. -88.9075 iterations 1
Cbc0038I Pass  75: suminf.    1.07042 (3) obj. -88.9075 iterations 3
Cbc0038I Pass  76: suminf.    0.82412 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  77: suminf.    1.99291 (8) obj. -88.9075 iterations 13
Cbc0038I Pass  78: suminf.    1.73157 (8) obj. -88.9075 iterations 4
Cbc0038I Pass  79: suminf.    1.12406 (4) obj. -88.9075 iterations 11
Cbc0038I Pass  80: suminf.    1.04699 (3) obj. -88.9075 iterations 1
Cbc0038I Pass  81: suminf.    0.85855 (2) obj. -88.9075 iterations 2
Cbc0038I Pass  82: suminf.    0.64727 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  83: suminf.    0.88293 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  84: suminf.    1.78645 (6) obj. -88.9075 iterations 9
Cbc0038I Pass  85: suminf.    1.37743 (4) obj. -88.9075 iterations 5
Cbc0038I Pass  86: suminf.    1.27446 (4) obj. -88.9075 iterations 2
Cbc0038I Pass  87: suminf.    1.26586 (4) obj. -88.9075 iterations 1
Cbc0038I Pass  88: suminf.    1.14290 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  89: suminf.    0.77582 (3) obj. -88.9075 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 33 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -61.7795 - took 0.05 seconds
Cbc0012I Integer solution of -61.77948 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 32 columns, reduced to 20 rows 15 columns
Cbc0031I 13 added rows had average density of 19.384615
Cbc0013I At root node, 13 cuts changed objective from -117.50039 to -81.51124 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2069 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1091 row cuts average 31.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.657 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.77948 best solution, best possible -81.509681 (1.34 seconds)
Cbc0016I Integer solution of -62.07857 found by strong branching after 3318 iterations and 26 nodes (1.41 seconds)
Cbc0012I Integer solution of -62.652 found by DiveCoefficient after 3433 iterations and 27 nodes (1.41 seconds)
Cbc0012I Integer solution of -62.6564 found by DiveCoefficient after 3671 iterations and 38 nodes (1.44 seconds)
Cbc0038I Full problem 55 rows 32 columns, reduced to 7 rows 10 columns
Cbc0001I Search completed - best objective -62.65639999999999, took 3895 iterations and 44 nodes (1.46 seconds)
Cbc0032I Strong branching done 306 times (1982 iterations), fathomed 4 nodes and fixed 17 variables
Cbc0035I Maximum depth 7, 43 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-14) rows, 60 (-6) columns and 581 (-142) elements
Clp1000I sum of infeasibilities 7.64356e-09 - average 1.41547e-10, 39 fixed columns
Coin0506I Presolve 15 (-39) rows, 21 (-39) columns and 67 (-514) elements
Clp0006I 0  Obj 43.328211 Dual inf 1.980848 (19)
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.2052162 - largest nonzero change 2.06377e-05 ( 0.00093851637%) - largest zero change 2.8895045e-05
Clp0000I Optimal - objective value 43.329794
Clp0000I Optimal - objective value 43.329794
Coin0511I After Postsolve, objective 43.329794, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 43.329794 Dual inf 233.78503 (31)
Clp0014I Perturbing problem by 0.001% of 1.8161465 - largest nonzero change 1.604118e-05 ( 0.0011136878%) - largest zero change 2.9954928e-05
Clp0000I Optimal - objective value 149.53172
Clp0000I Optimal - objective value 149.53172
Clp0000I Optimal - objective value 149.53172
Coin0511I After Postsolve, objective 149.53172, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.531722 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 60 columns (60 integer (60 of which binary)) and 582 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.300%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.08669
Cbc0038I Pass   1: suminf.    2.39397 (16) obj. -92.2924 iterations 9
Cbc0038I Pass   2: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass   3: suminf.    0.42725 (6) obj. -32.2862 iterations 10
Cbc0038I Solution found of -23.9387
Cbc0038I Rounding solution of -60.9167 is better than previous of -23.9387

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -66.6747
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass   5: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass   6: suminf.    0.47712 (2) obj. -66.6747 iterations 25
Cbc0038I Pass   7: suminf.    0.43250 (1) obj. -67.6564 iterations 1
Cbc0038I Pass   8: suminf.    0.45815 (1) obj. -66.6747 iterations 1
Cbc0038I Pass   9: suminf.    1.31229 (6) obj. -66.6747 iterations 19
Cbc0038I Pass  10: suminf.    0.98719 (5) obj. -66.6747 iterations 2
Cbc0038I Pass  11: suminf.    0.72674 (3) obj. -66.6747 iterations 5
Cbc0038I Pass  12: suminf.    0.72674 (3) obj. -66.6747 iterations 0
Cbc0038I Pass  13: suminf.    0.93610 (3) obj. -66.6747 iterations 1
Cbc0038I Pass  14: suminf.    0.93610 (3) obj. -66.6747 iterations 0
Cbc0038I Pass  15: suminf.    2.11833 (10) obj. -66.6747 iterations 12
Cbc0038I Pass  16: suminf.    1.65039 (8) obj. -66.6747 iterations 3
Cbc0038I Pass  17: suminf.    0.90634 (3) obj. -66.6747 iterations 10
Cbc0038I Pass  18: suminf.    0.78942 (2) obj. -66.6747 iterations 3
Cbc0038I Pass  19: suminf.    1.67380 (7) obj. -66.6747 iterations 12
Cbc0038I Pass  20: suminf.    1.52662 (6) obj. -66.6747 iterations 4
Cbc0038I Pass  21: suminf.    1.31360 (5) obj. -66.6747 iterations 5
Cbc0038I Pass  22: suminf.    1.06718 (3) obj. -66.6747 iterations 3
Cbc0038I Pass  23: suminf.    1.06718 (3) obj. -66.6747 iterations 0
Cbc0038I Pass  24: suminf.    1.01815 (3) obj. -66.6747 iterations 1
Cbc0038I Pass  25: suminf.    1.01815 (3) obj. -66.6747 iterations 0
Cbc0038I Pass  26: suminf.    3.45221 (19) obj. -66.6747 iterations 20
Cbc0038I Pass  27: suminf.    1.71047 (9) obj. -66.6747 iterations 4
Cbc0038I Pass  28: suminf.    1.56451 (10) obj. -66.6747 iterations 4
Cbc0038I Pass  29: suminf.    1.74179 (7) obj. -66.6747 iterations 10
Cbc0038I Pass  30: suminf.    1.58096 (6) obj. -66.6747 iterations 4
Cbc0038I Pass  31: suminf.    2.33360 (8) obj. -66.6747 iterations 6
Cbc0038I Pass  32: suminf.    2.11188 (7) obj. -66.6747 iterations 3
Cbc0038I Pass  33: suminf.    1.18401 (5) obj. -66.6747 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 22 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -23.9387 to -61.7795 (0.03 seconds)
Cbc0038I Round again with cutoff of -77.0388
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass  34: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass  35: suminf.    0.76233 (2) obj. -77.0388 iterations 24
Cbc0038I Pass  36: suminf.    0.61107 (2) obj. -79.1564 iterations 1
Cbc0038I Pass  37: suminf.    0.76233 (2) obj. -77.0388 iterations 1
Cbc0038I Pass  38: suminf.    1.07529 (7) obj. -77.0388 iterations 14
Cbc0038I Pass  39: suminf.    1.07529 (7) obj. -77.0388 iterations 2
Cbc0038I Pass  40: suminf.    0.59551 (4) obj. -77.0388 iterations 5
Cbc0038I Pass  41: suminf.    0.44624 (3) obj. -78.2329 iterations 1
Cbc0038I Pass  42: suminf.    0.55480 (3) obj. -77.0388 iterations 2
Cbc0038I Pass  43: suminf.    2.77376 (10) obj. -77.0388 iterations 12
Cbc0038I Pass  44: suminf.    1.45101 (9) obj. -77.0388 iterations 1
Cbc0038I Pass  45: suminf.    0.67150 (5) obj. -77.0388 iterations 4
Cbc0038I Pass  46: suminf.    0.98350 (6) obj. -77.0388 iterations 6
Cbc0038I Pass  47: suminf.    0.98350 (6) obj. -77.0388 iterations 0
Cbc0038I Pass  48: suminf.    0.93134 (5) obj. -77.0388 iterations 7
Cbc0038I Pass  49: suminf.    0.81779 (6) obj. -77.0388 iterations 1
Cbc0038I Pass  50: suminf.    1.53815 (4) obj. -77.0388 iterations 6
Cbc0038I Pass  51: suminf.    0.87329 (3) obj. -77.0388 iterations 2
Cbc0038I Pass  52: suminf.    0.79374 (3) obj. -80.1579 iterations 1
Cbc0038I Pass  53: suminf.    1.06985 (3) obj. -77.0388 iterations 2
Cbc0038I Pass  54: suminf.    1.06985 (3) obj. -77.0388 iterations 0
Cbc0038I Pass  55: suminf.    1.01653 (3) obj. -77.0388 iterations 1
Cbc0038I Pass  56: suminf.    0.79185 (6) obj. -77.0388 iterations 8
Cbc0038I Pass  57: suminf.    0.77806 (5) obj. -77.1491 iterations 1
Cbc0038I Pass  58: suminf.    2.17943 (8) obj. -77.0388 iterations 4
Cbc0038I Pass  59: suminf.    1.02017 (4) obj. -77.0388 iterations 3
Cbc0038I Pass  60: suminf.    0.89188 (4) obj. -77.9367 iterations 1
Cbc0038I Pass  61: suminf.    1.03052 (7) obj. -77.0388 iterations 13
Cbc0038I Pass  62: suminf.    0.97575 (5) obj. -77.1876 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -61.7795 - took 0.03 seconds
Cbc0012I Integer solution of -61.77948 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 53 rows 60 columns, reduced to 10 rows 13 columns
Cbc0031I 29 added rows had average density of 11.862069
Cbc0013I At root node, 29 cuts changed objective from -118.49515 to -70.872711 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1902 row cuts average 2.9 elements, 7 column cuts (7 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 756 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 214 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 229 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 119 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.645 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -61.77948 best solution, best possible -70.872711 (1.40 seconds)
Cbc0010I After 8 nodes, 5 on tree, -61.77948 best solution, best possible -70.872711 (2.11 seconds)
Cbc0012I Integer solution of -62.652 found by DiveCoefficient after 2105 iterations and 11 nodes (2.17 seconds)
Cbc0004I Integer solution of -62.6564 found after 2374 iterations and 16 nodes (2.60 seconds)
Cbc0010I After 19 nodes, 3 on tree, -62.6564 best solution, best possible -70.872711 (2.83 seconds)
Cbc0001I Search completed - best objective -62.65639999999999, took 2772 iterations and 22 nodes (2.84 seconds)
Cbc0032I Strong branching done 322 times (2826 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 5, 32 variables fixed on reduced cost
Total time (CPU seconds):       1.81   (Wallclock seconds):       2.84

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 32 (-3) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 1.61932e-05 - average 2.89164e-07, 5 fixed columns
Coin0506I Presolve 46 (-10) rows, 27 (-5) columns and 138 (-30) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 117.50039
Clp0000I Optimal - objective value 117.50039
Coin0511I After Postsolve, objective 117.50039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.50039
Clp0000I Optimal - objective value 117.50039
Clp0000I Optimal - objective value 117.50039
Coin0511I After Postsolve, objective 117.50039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.5003861 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 32 columns (31 integer (31 of which binary)) and 167 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.644%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.42267
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.9443 iterations 13
Cbc0038I Solution found of -10.9443
Cbc0038I Relaxing continuous gives -10.9443
Cbc0038I Rounding solution of -25.5781 is better than previous of -10.9443

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 20 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -25.5781 to -60.7684 (0.01 seconds)
Cbc0038I Round again with cutoff of -66.4417
Cbc0038I Pass   2: suminf.    1.06537 (3) obj. -66.4417 iterations 4
Cbc0038I Pass   3: suminf.    0.68615 (2) obj. -66.4417 iterations 3
Cbc0038I Pass   4: suminf.    1.06276 (3) obj. -66.4417 iterations 3
Cbc0038I Pass   5: suminf.    0.81595 (6) obj. -66.4417 iterations 7
Cbc0038I Pass   6: suminf.    0.72938 (4) obj. -66.4417 iterations 3
Cbc0038I Pass   7: suminf.    0.46962 (3) obj. -66.4417 iterations 2
Cbc0038I Pass   8: suminf.    0.85231 (2) obj. -66.4417 iterations 3
Cbc0038I Pass   9: suminf.    0.73506 (3) obj. -66.4417 iterations 3
Cbc0038I Pass  10: suminf.    0.95283 (5) obj. -66.4417 iterations 6
Cbc0038I Pass  11: suminf.    0.55062 (2) obj. -66.4417 iterations 6
Cbc0038I Pass  12: suminf.    0.26407 (2) obj. -66.4417 iterations 2
Cbc0038I Pass  13: suminf.    0.27599 (2) obj. -66.4417 iterations 2
Cbc0038I Pass  14: suminf.    0.27599 (2) obj. -66.4417 iterations 1
Cbc0038I Pass  15: suminf.    0.62215 (3) obj. -66.4417 iterations 3
Cbc0038I Pass  16: suminf.    0.93296 (3) obj. -66.4417 iterations 16
Cbc0038I Pass  17: suminf.    0.72716 (4) obj. -66.4417 iterations 6
Cbc0038I Pass  18: suminf.    1.37785 (3) obj. -66.4417 iterations 2
Cbc0038I Pass  19: suminf.    1.07219 (3) obj. -66.4417 iterations 1
Cbc0038I Pass  20: suminf.    1.06093 (4) obj. -66.4417 iterations 1
Cbc0038I Pass  21: suminf.    1.12317 (3) obj. -66.4417 iterations 2
Cbc0038I Pass  22: suminf.    1.12952 (4) obj. -66.4417 iterations 2
Cbc0038I Pass  23: suminf.    1.10609 (3) obj. -66.4417 iterations 2
Cbc0038I Pass  24: suminf.    1.07248 (3) obj. -66.4417 iterations 1
Cbc0038I Pass  25: suminf.    1.03853 (4) obj. -66.4417 iterations 5
Cbc0038I Pass  26: suminf.    1.03853 (4) obj. -66.4417 iterations 3
Cbc0038I Pass  27: suminf.    1.56235 (4) obj. -66.4417 iterations 6
Cbc0038I Pass  28: suminf.    1.06093 (4) obj. -66.4417 iterations 4
Cbc0038I Pass  29: suminf.    1.12317 (3) obj. -66.4417 iterations 2
Cbc0038I Pass  30: suminf.    1.12952 (4) obj. -66.4417 iterations 2
Cbc0038I Pass  31: suminf.    1.10609 (3) obj. -66.4417 iterations 2
Cbc0038I Rounding solution of -61.7795 is better than previous of -60.7684

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 24 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -76.6534
Cbc0038I Pass  31: suminf.    1.27730 (5) obj. -76.6534 iterations 1
Cbc0038I Pass  32: suminf.    1.26326 (4) obj. -76.6534 iterations 1
Cbc0038I Pass  33: suminf.    0.58035 (3) obj. -76.6534 iterations 6
Cbc0038I Pass  34: suminf.    0.51581 (3) obj. -76.6534 iterations 1
Cbc0038I Pass  35: suminf.    0.34459 (4) obj. -76.6534 iterations 2
Cbc0038I Pass  36: suminf.    0.34459 (4) obj. -76.6534 iterations 0
Cbc0038I Pass  37: suminf.    1.27251 (3) obj. -76.6534 iterations 7
Cbc0038I Pass  38: suminf.    1.27251 (3) obj. -76.6534 iterations 0
Cbc0038I Pass  39: suminf.    0.76460 (3) obj. -76.6534 iterations 1
Cbc0038I Pass  40: suminf.    0.93240 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  41: suminf.    0.93240 (3) obj. -76.6534 iterations 0
Cbc0038I Pass  42: suminf.    1.20788 (4) obj. -76.6534 iterations 5
Cbc0038I Pass  43: suminf.    0.72190 (4) obj. -76.6534 iterations 2
Cbc0038I Pass  44: suminf.    1.05572 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  45: suminf.    0.41567 (2) obj. -76.6534 iterations 3
Cbc0038I Pass  46: suminf.    0.82450 (2) obj. -76.6534 iterations 2
Cbc0038I Pass  47: suminf.    0.79451 (3) obj. -76.6534 iterations 1
Cbc0038I Pass  48: suminf.    0.49449 (3) obj. -76.6534 iterations 3
Cbc0038I Pass  49: suminf.    1.10219 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  50: suminf.    0.41267 (2) obj. -76.6534 iterations 3
Cbc0038I Pass  51: suminf.    0.72317 (2) obj. -76.6534 iterations 2
Cbc0038I Pass  52: suminf.    0.72317 (2) obj. -76.6534 iterations 0
Cbc0038I Pass  53: suminf.    0.49449 (3) obj. -76.6534 iterations 2
Cbc0038I Pass  54: suminf.    1.10219 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  55: suminf.    0.41267 (2) obj. -76.6534 iterations 3
Cbc0038I Pass  56: suminf.    0.72317 (2) obj. -76.6534 iterations 2
Cbc0038I Pass  57: suminf.    0.72317 (2) obj. -76.6534 iterations 0
Cbc0038I Pass  58: suminf.    0.49449 (3) obj. -76.6534 iterations 2
Cbc0038I Pass  59: suminf.    1.10219 (3) obj. -76.6534 iterations 5
Cbc0038I Pass  60: suminf.    0.41267 (2) obj. -76.6534 iterations 3
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -88.9075
Cbc0038I Pass  60: suminf.    1.66755 (5) obj. -88.9075 iterations 0
Cbc0038I Pass  61: suminf.    1.28238 (3) obj. -88.9075 iterations 3
Cbc0038I Pass  62: suminf.    1.25284 (4) obj. -88.9075 iterations 3
Cbc0038I Pass  63: suminf.    1.09253 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  64: suminf.    1.43230 (4) obj. -88.9075 iterations 3
Cbc0038I Pass  65: suminf.    0.88106 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  66: suminf.    1.20828 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  67: suminf.    0.61844 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  68: suminf.    1.20828 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  69: suminf.    1.40979 (10) obj. -88.9075 iterations 14
Cbc0038I Pass  70: suminf.    1.02758 (6) obj. -88.9075 iterations 4
Cbc0038I Pass  71: suminf.    1.21364 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  72: suminf.    1.21364 (3) obj. -88.9075 iterations 0
Cbc0038I Pass  73: suminf.    1.47395 (4) obj. -88.9075 iterations 3
Cbc0038I Pass  74: suminf.    1.06804 (4) obj. -88.9075 iterations 1
Cbc0038I Pass  75: suminf.    1.07042 (3) obj. -88.9075 iterations 3
Cbc0038I Pass  76: suminf.    0.82412 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  77: suminf.    1.99291 (8) obj. -88.9075 iterations 13
Cbc0038I Pass  78: suminf.    1.73157 (8) obj. -88.9075 iterations 4
Cbc0038I Pass  79: suminf.    1.12406 (4) obj. -88.9075 iterations 11
Cbc0038I Pass  80: suminf.    1.04699 (3) obj. -88.9075 iterations 1
Cbc0038I Pass  81: suminf.    0.85855 (2) obj. -88.9075 iterations 2
Cbc0038I Pass  82: suminf.    0.64727 (3) obj. -88.9075 iterations 2
Cbc0038I Pass  83: suminf.    0.88293 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  84: suminf.    1.78645 (6) obj. -88.9075 iterations 9
Cbc0038I Pass  85: suminf.    1.37743 (4) obj. -88.9075 iterations 5
Cbc0038I Pass  86: suminf.    1.27446 (4) obj. -88.9075 iterations 2
Cbc0038I Pass  87: suminf.    1.26586 (4) obj. -88.9075 iterations 1
Cbc0038I Pass  88: suminf.    1.14290 (3) obj. -88.9075 iterations 4
Cbc0038I Pass  89: suminf.    0.77582 (3) obj. -88.9075 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 32 columns, reduced to 33 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -61.7795 - took 0.04 seconds
Cbc0012I Integer solution of -61.77948 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 32 columns, reduced to 20 rows 15 columns
Cbc0031I 13 added rows had average density of 19.384615
Cbc0013I At root node, 13 cuts changed objective from -117.50039 to -81.51124 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2069 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1091 row cuts average 31.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.715 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.77948 best solution, best possible -81.509681 (1.48 seconds)
Cbc0016I Integer solution of -62.07857 found by strong branching after 3318 iterations and 26 nodes (1.54 seconds)
Cbc0012I Integer solution of -62.652 found by DiveCoefficient after 3433 iterations and 27 nodes (1.55 seconds)
Cbc0012I Integer solution of -62.6564 found by DiveCoefficient after 3671 iterations and 38 nodes (1.57 seconds)
Cbc0038I Full problem 55 rows 32 columns, reduced to 7 rows 10 columns
Cbc0001I Search completed - best objective -62.65639999999999, took 3895 iterations and 44 nodes (1.60 seconds)
Cbc0032I Strong branching done 306 times (1982 iterations), fathomed 4 nodes and fixed 17 variables
Cbc0035I Maximum depth 7, 43 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 60 (-7) columns and 581 (-143) elements
Clp1000I sum of infeasibilities 7.64356e-09 - average 1.41547e-10, 39 fixed columns
Coin0506I Presolve 15 (-39) rows, 21 (-39) columns and 67 (-514) elements
Clp0006I 0  Obj 43.328211 Dual inf 1.980848 (19)
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 2.2052162 - largest nonzero change 2.06377e-05 ( 0.00093851637%) - largest zero change 2.8895045e-05
Clp0000I Optimal - objective value 43.329794
Clp0000I Optimal - objective value 43.329794
Coin0511I After Postsolve, objective 43.329794, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 43.329794 Dual inf 233.78503 (31)
Clp0014I Perturbing problem by 0.001% of 1.8161465 - largest nonzero change 1.604118e-05 ( 0.0011136878%) - largest zero change 2.9954928e-05
Clp0000I Optimal - objective value 149.53172
Clp0000I Optimal - objective value 149.53172
Clp0000I Optimal - objective value 149.53172
Coin0511I After Postsolve, objective 149.53172, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.531722 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 60 columns (60 integer (60 of which binary)) and 582 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.300%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.08669
Cbc0038I Pass   1: suminf.    2.39397 (16) obj. -92.2924 iterations 9
Cbc0038I Pass   2: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass   3: suminf.    0.42725 (6) obj. -32.2862 iterations 10
Cbc0038I Solution found of -23.9387
Cbc0038I Rounding solution of -60.9167 is better than previous of -23.9387

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -66.6747
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass   5: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass   6: suminf.    0.47712 (2) obj. -66.6747 iterations 25
Cbc0038I Pass   7: suminf.    0.43250 (1) obj. -67.6564 iterations 1
Cbc0038I Pass   8: suminf.    0.45815 (1) obj. -66.6747 iterations 1
Cbc0038I Pass   9: suminf.    1.31229 (6) obj. -66.6747 iterations 19
Cbc0038I Pass  10: suminf.    0.98719 (5) obj. -66.6747 iterations 2
Cbc0038I Pass  11: suminf.    0.72674 (3) obj. -66.6747 iterations 5
Cbc0038I Pass  12: suminf.    0.72674 (3) obj. -66.6747 iterations 0
Cbc0038I Pass  13: suminf.    0.93610 (3) obj. -66.6747 iterations 1
Cbc0038I Pass  14: suminf.    0.93610 (3) obj. -66.6747 iterations 0
Cbc0038I Pass  15: suminf.    2.11833 (10) obj. -66.6747 iterations 12
Cbc0038I Pass  16: suminf.    1.65039 (8) obj. -66.6747 iterations 3
Cbc0038I Pass  17: suminf.    0.90634 (3) obj. -66.6747 iterations 10
Cbc0038I Pass  18: suminf.    0.78942 (2) obj. -66.6747 iterations 3
Cbc0038I Pass  19: suminf.    1.67380 (7) obj. -66.6747 iterations 12
Cbc0038I Pass  20: suminf.    1.52662 (6) obj. -66.6747 iterations 4
Cbc0038I Pass  21: suminf.    1.31360 (5) obj. -66.6747 iterations 5
Cbc0038I Pass  22: suminf.    1.06718 (3) obj. -66.6747 iterations 3
Cbc0038I Pass  23: suminf.    1.06718 (3) obj. -66.6747 iterations 0
Cbc0038I Pass  24: suminf.    1.01815 (3) obj. -66.6747 iterations 1
Cbc0038I Pass  25: suminf.    1.01815 (3) obj. -66.6747 iterations 0
Cbc0038I Pass  26: suminf.    3.45221 (19) obj. -66.6747 iterations 20
Cbc0038I Pass  27: suminf.    1.71047 (9) obj. -66.6747 iterations 4
Cbc0038I Pass  28: suminf.    1.56451 (10) obj. -66.6747 iterations 4
Cbc0038I Pass  29: suminf.    1.74179 (7) obj. -66.6747 iterations 10
Cbc0038I Pass  30: suminf.    1.58096 (6) obj. -66.6747 iterations 4
Cbc0038I Pass  31: suminf.    2.33360 (8) obj. -66.6747 iterations 6
Cbc0038I Pass  32: suminf.    2.11188 (7) obj. -66.6747 iterations 3
Cbc0038I Pass  33: suminf.    1.18401 (5) obj. -66.6747 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 22 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -23.9387 to -61.7795 (0.03 seconds)
Cbc0038I Round again with cutoff of -77.0388
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass  34: suminf.    2.39397 (16) obj. -92.2924 iterations 0
Cbc0038I Pass  35: suminf.    0.76233 (2) obj. -77.0388 iterations 24
Cbc0038I Pass  36: suminf.    0.61107 (2) obj. -79.1564 iterations 1
Cbc0038I Pass  37: suminf.    0.76233 (2) obj. -77.0388 iterations 1
Cbc0038I Pass  38: suminf.    1.07529 (7) obj. -77.0388 iterations 14
Cbc0038I Pass  39: suminf.    1.07529 (7) obj. -77.0388 iterations 2
Cbc0038I Pass  40: suminf.    0.59551 (4) obj. -77.0388 iterations 5
Cbc0038I Pass  41: suminf.    0.44624 (3) obj. -78.2329 iterations 1
Cbc0038I Pass  42: suminf.    0.55480 (3) obj. -77.0388 iterations 2
Cbc0038I Pass  43: suminf.    2.77376 (10) obj. -77.0388 iterations 12
Cbc0038I Pass  44: suminf.    1.45101 (9) obj. -77.0388 iterations 1
Cbc0038I Pass  45: suminf.    0.67150 (5) obj. -77.0388 iterations 4
Cbc0038I Pass  46: suminf.    0.98350 (6) obj. -77.0388 iterations 6
Cbc0038I Pass  47: suminf.    0.98350 (6) obj. -77.0388 iterations 0
Cbc0038I Pass  48: suminf.    0.93134 (5) obj. -77.0388 iterations 7
Cbc0038I Pass  49: suminf.    0.81779 (6) obj. -77.0388 iterations 1
Cbc0038I Pass  50: suminf.    1.53815 (4) obj. -77.0388 iterations 6
Cbc0038I Pass  51: suminf.    0.87329 (3) obj. -77.0388 iterations 2
Cbc0038I Pass  52: suminf.    0.79374 (3) obj. -80.1579 iterations 1
Cbc0038I Pass  53: suminf.    1.06985 (3) obj. -77.0388 iterations 2
Cbc0038I Pass  54: suminf.    1.06985 (3) obj. -77.0388 iterations 0
Cbc0038I Pass  55: suminf.    1.01653 (3) obj. -77.0388 iterations 1
Cbc0038I Pass  56: suminf.    0.79185 (6) obj. -77.0388 iterations 8
Cbc0038I Pass  57: suminf.    0.77806 (5) obj. -77.1491 iterations 1
Cbc0038I Pass  58: suminf.    2.17943 (8) obj. -77.0388 iterations 4
Cbc0038I Pass  59: suminf.    1.02017 (4) obj. -77.0388 iterations 3
Cbc0038I Pass  60: suminf.    0.89188 (4) obj. -77.9367 iterations 1
Cbc0038I Pass  61: suminf.    1.03052 (7) obj. -77.0388 iterations 13
Cbc0038I Pass  62: suminf.    0.97575 (5) obj. -77.1876 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -61.7795 - took 0.03 seconds
Cbc0012I Integer solution of -61.77948 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 53 rows 60 columns, reduced to 10 rows 13 columns
Cbc0031I 29 added rows had average density of 11.862069
Cbc0013I At root node, 29 cuts changed objective from -118.49515 to -70.872711 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1902 row cuts average 2.9 elements, 7 column cuts (7 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 756 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 214 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 229 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 119 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.653 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -61.77948 best solution, best possible -70.872711 (1.39 seconds)
Cbc0010I After 9 nodes, 5 on tree, -61.77948 best solution, best possible -70.872711 (2.13 seconds)
Cbc0012I Integer solution of -62.652 found by DiveCoefficient after 2105 iterations and 11 nodes (2.15 seconds)
Cbc0004I Integer solution of -62.6564 found after 2374 iterations and 16 nodes (2.57 seconds)
Cbc0001I Search completed - best objective -62.65639999999999, took 2772 iterations and 22 nodes (2.80 seconds)
Cbc0032I Strong branching done 322 times (2826 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 5, 32 variables fixed on reduced cost
Total time (CPU seconds):       1.80   (Wallclock seconds):       2.80

