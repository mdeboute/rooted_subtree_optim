Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-43) rows, 62 (-16) columns and 341 (-112) elements
Clp1000I sum of infeasibilities 4.34015e-05 - average 3.87513e-07, 41 fixed columns
Coin0506I Presolve 30 (-82) rows, 19 (-43) columns and 92 (-249) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 389.66663
Clp0000I Optimal - objective value 389.66663
Coin0511I After Postsolve, objective 389.66663, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.33550074 - largest nonzero change 0 ( 0%) - largest zero change 2.9206076e-05
Clp0000I Optimal - objective value 389.66663
Clp0000I Optimal - objective value 389.66663
Clp0000I Optimal - objective value 389.66663
Coin0511I After Postsolve, objective 389.66663, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 389.6666273 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 112 rows, 62 columns (61 integer (61 of which binary)) and 341 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.419%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.05695
Cbc0038I Pass   1: suminf.    0.41935 (1) obj. -352.332 iterations 19
Cbc0038I Pass   2: suminf.    0.41935 (1) obj. -352.332 iterations 0
Cbc0038I Solution found of -321.709
Cbc0038I Relaxing continuous gives -321.709
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 62 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -321.709 to -367.225 (0.01 seconds)
Cbc0038I Round again with cutoff of -369.47
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.62100 (4) obj. -369.47 iterations 4
Cbc0038I Pass   4: suminf.    0.62100 (4) obj. -369.47 iterations 0
Cbc0038I Pass   5: suminf.    0.99922 (3) obj. -369.47 iterations 9
Cbc0038I Pass   6: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass   7: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass   8: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass   9: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  10: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  11: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  12: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass  13: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass  14: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  15: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  16: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  17: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass  18: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass  19: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  20: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  21: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  22: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass  23: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass  24: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  25: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  26: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  27: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass  28: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass  29: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  30: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  31: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  32: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 62 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -367.225 - took 0.01 seconds
Cbc0012I Integer solution of -367.2254 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 112 rows 62 columns, reduced to 20 rows 13 columns
Cbc0031I 8 added rows had average density of 13.625
Cbc0013I At root node, 8 cuts changed objective from -389.66663 to -373.64689 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 48 row cuts average 3.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 62 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -367.2254, took 96 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 20 times (113 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 102 (-50) columns and 1553 (-1750) elements
Clp1000I sum of infeasibilities 1.27339e-07 - average 1.38411e-09, 34 fixed columns
Coin0506I Presolve 61 (-31) rows, 65 (-37) columns and 723 (-830) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.8218848 - largest nonzero change 1.6056122e-05 ( 0.00091204228%) - largest zero change 2.0895631e-05
Clp0000I Optimal - objective value 424.72734
Clp0000I Optimal - objective value 424.72734
Coin0511I After Postsolve, objective 424.72734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9439942 - largest nonzero change 1.4445087e-05 ( 0.00086296483%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 427.72734
Clp0000I Optimal - objective value 427.72734
Clp0000I Optimal - objective value 427.72734
Coin0511I After Postsolve, objective 427.72734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 427.7273376 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 102 columns (102 integer (102 of which binary)) and 1555 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.906%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 8.05364
Cbc0038I Pass   1: suminf.    2.18650 (30) obj. -294.34 iterations 16
Cbc0038I Pass   2: suminf.    2.18650 (30) obj. -294.34 iterations 0
Cbc0038I Pass   3: suminf.    0.31843 (7) obj. -261.464 iterations 23
Cbc0038I Solution found of -254.783
Cbc0038I Rounding solution of -315.523 is better than previous of -254.783

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 102 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -315.523 to -353.978 (0.03 seconds)
Cbc0038I Round again with cutoff of -360.713
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.33528 (38) obj. -360.713 iterations 4
Cbc0038I Pass   5: suminf.    4.05251 (38) obj. -360.713 iterations 1
Cbc0038I Pass   6: suminf.    2.80031 (31) obj. -360.713 iterations 12
Cbc0038I Pass   7: suminf.    2.05485 (23) obj. -360.713 iterations 9
Cbc0038I Pass   8: suminf.    2.04773 (22) obj. -360.713 iterations 2
Cbc0038I Pass   9: suminf.    0.72626 (2) obj. -360.713 iterations 29
Cbc0038I Pass  10: suminf.    0.12771 (1) obj. -360.713 iterations 5
Cbc0038I Pass  11: suminf.    0.40541 (1) obj. -362.037 iterations 3
Cbc0038I Pass  12: suminf.    0.38779 (1) obj. -360.713 iterations 1
Cbc0038I Pass  13: suminf.    3.44994 (13) obj. -360.713 iterations 20
Cbc0038I Pass  14: suminf.    1.27572 (7) obj. -360.713 iterations 6
Cbc0038I Pass  15: suminf.    1.27572 (7) obj. -360.713 iterations 0
Cbc0038I Pass  16: suminf.    0.02703 (1) obj. -361.608 iterations 9
Cbc0038I Pass  17: suminf.    0.00839 (1) obj. -360.713 iterations 3
Cbc0038I Pass  18: suminf.    2.48145 (18) obj. -360.713 iterations 26
Cbc0038I Pass  19: suminf.    2.24282 (19) obj. -360.713 iterations 3
Cbc0038I Pass  20: suminf.    1.67499 (16) obj. -360.713 iterations 5
Cbc0038I Pass  21: suminf.    0.57459 (3) obj. -360.713 iterations 22
Cbc0038I Solution found of -364.311
Cbc0038I Rounding solution of -366.311 is better than previous of -364.311

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 102 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -366.311 to -367.225 (0.04 seconds)
Cbc0038I Round again with cutoff of -378.046
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  22: suminf.    5.26535 (38) obj. -378.046 iterations 0
Cbc0038I Pass  23: suminf.    1.63032 (12) obj. -378.046 iterations 32
Cbc0038I Pass  24: suminf.    1.52731 (11) obj. -378.046 iterations 5
Cbc0038I Pass  25: suminf.    0.60820 (4) obj. -378.046 iterations 21
Cbc0038I Pass  26: suminf.    0.60848 (4) obj. -378.046 iterations 4
Cbc0038I Pass  27: suminf.    1.10702 (4) obj. -378.046 iterations 14
Cbc0038I Pass  28: suminf.    0.44176 (4) obj. -378.046 iterations 6
Cbc0038I Pass  29: suminf.    1.05331 (4) obj. -378.046 iterations 8
Cbc0038I Pass  30: suminf.    1.03984 (4) obj. -378.046 iterations 3
Cbc0038I Pass  31: suminf.    0.55653 (4) obj. -378.046 iterations 6
Cbc0038I Pass  32: suminf.    1.56812 (8) obj. -378.046 iterations 15
Cbc0038I Pass  33: suminf.    1.56812 (8) obj. -378.046 iterations 4
Cbc0038I Pass  34: suminf.    1.10702 (4) obj. -378.046 iterations 16
Cbc0038I Pass  35: suminf.    0.44176 (4) obj. -378.046 iterations 6
Cbc0038I Pass  36: suminf.    1.05331 (4) obj. -378.046 iterations 8
Cbc0038I Pass  37: suminf.    1.03984 (4) obj. -378.046 iterations 5
Cbc0038I Pass  38: suminf.    0.55653 (4) obj. -378.046 iterations 6
Cbc0038I Pass  39: suminf.    2.60198 (11) obj. -378.046 iterations 21
Cbc0038I Pass  40: suminf.    1.20392 (8) obj. -378.046 iterations 6
Cbc0038I Pass  41: suminf.    0.60848 (4) obj. -378.046 iterations 13
Cbc0038I Pass  42: suminf.    0.60848 (4) obj. -378.046 iterations 3
Cbc0038I Pass  43: suminf.    1.10702 (4) obj. -378.046 iterations 14
Cbc0038I Pass  44: suminf.    0.44176 (4) obj. -378.046 iterations 6
Cbc0038I Pass  45: suminf.    1.05331 (4) obj. -378.046 iterations 8
Cbc0038I Pass  46: suminf.    1.03984 (4) obj. -378.046 iterations 5
Cbc0038I Pass  47: suminf.    0.55653 (4) obj. -378.046 iterations 6
Cbc0038I Pass  48: suminf.    1.29423 (13) obj. -378.046 iterations 12
Cbc0038I Pass  49: suminf.    0.81453 (6) obj. -378.046 iterations 11
Cbc0038I Pass  50: suminf.    1.10702 (4) obj. -378.046 iterations 13
Cbc0038I Pass  51: suminf.    0.44176 (4) obj. -378.046 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 102 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -367.225 - took 0.04 seconds
Cbc0012I Integer solution of -367.2254 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 92 rows 102 columns, reduced to 3 rows 3 columns
Cbc0031I 27 added rows had average density of 5.0740741
Cbc0013I At root node, 27 cuts changed objective from -421.33011 to -368.72257 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 482 row cuts average 11.2 elements, 34 column cuts (34 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 56 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 87 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0001I Search completed - best objective -367.2254, took 203 iterations and 2 nodes (0.41 seconds)
Cbc0032I Strong branching done 24 times (130 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.42

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-43) rows, 62 (-16) columns and 341 (-112) elements
Clp1000I sum of infeasibilities 4.34015e-05 - average 3.87513e-07, 41 fixed columns
Coin0506I Presolve 30 (-82) rows, 19 (-43) columns and 92 (-249) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 389.66663
Clp0000I Optimal - objective value 389.66663
Coin0511I After Postsolve, objective 389.66663, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.33550074 - largest nonzero change 0 ( 0%) - largest zero change 2.9206076e-05
Clp0000I Optimal - objective value 389.66663
Clp0000I Optimal - objective value 389.66663
Clp0000I Optimal - objective value 389.66663
Coin0511I After Postsolve, objective 389.66663, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 389.6666273 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 112 rows, 62 columns (61 integer (61 of which binary)) and 341 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.419%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.05695
Cbc0038I Pass   1: suminf.    0.41935 (1) obj. -352.332 iterations 19
Cbc0038I Pass   2: suminf.    0.41935 (1) obj. -352.332 iterations 0
Cbc0038I Solution found of -321.709
Cbc0038I Relaxing continuous gives -321.709
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 62 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -321.709 to -367.225 (0.01 seconds)
Cbc0038I Round again with cutoff of -369.47
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.62100 (4) obj. -369.47 iterations 4
Cbc0038I Pass   4: suminf.    0.62100 (4) obj. -369.47 iterations 0
Cbc0038I Pass   5: suminf.    0.99922 (3) obj. -369.47 iterations 9
Cbc0038I Pass   6: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass   7: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass   8: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass   9: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  10: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  11: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  12: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass  13: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass  14: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  15: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  16: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  17: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass  18: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass  19: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  20: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  21: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  22: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass  23: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass  24: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  25: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  26: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  27: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I Pass  28: suminf.    0.64521 (3) obj. -369.47 iterations 5
Cbc0038I Pass  29: suminf.    0.64521 (3) obj. -369.47 iterations 3
Cbc0038I Pass  30: suminf.    0.99922 (3) obj. -369.47 iterations 7
Cbc0038I Pass  31: suminf.    0.99922 (3) obj. -369.47 iterations 0
Cbc0038I Pass  32: suminf.    1.30282 (4) obj. -369.47 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 62 columns, reduced to 22 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -367.225 - took 0.01 seconds
Cbc0012I Integer solution of -367.2254 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 112 rows 62 columns, reduced to 20 rows 13 columns
Cbc0031I 8 added rows had average density of 13.625
Cbc0013I At root node, 8 cuts changed objective from -389.66663 to -373.64689 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 48 row cuts average 3.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 62 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -367.2254, took 96 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 20 times (113 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 102 (-51) columns and 1553 (-1751) elements
Clp1000I sum of infeasibilities 1.27339e-07 - average 1.38411e-09, 34 fixed columns
Coin0506I Presolve 61 (-31) rows, 65 (-37) columns and 723 (-830) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 2.8218848 - largest nonzero change 1.6056122e-05 ( 0.00091204228%) - largest zero change 2.0895631e-05
Clp0000I Optimal - objective value 424.72734
Clp0000I Optimal - objective value 424.72734
Coin0511I After Postsolve, objective 424.72734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9439942 - largest nonzero change 1.4445087e-05 ( 0.00086296483%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 427.72734
Clp0000I Optimal - objective value 427.72734
Clp0000I Optimal - objective value 427.72734
Coin0511I After Postsolve, objective 427.72734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 427.7273376 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 102 columns (102 integer (102 of which binary)) and 1555 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.906%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 8.05364
Cbc0038I Pass   1: suminf.    2.18650 (30) obj. -294.34 iterations 16
Cbc0038I Pass   2: suminf.    2.18650 (30) obj. -294.34 iterations 0
Cbc0038I Pass   3: suminf.    0.31843 (7) obj. -261.464 iterations 23
Cbc0038I Solution found of -254.783
Cbc0038I Rounding solution of -315.523 is better than previous of -254.783

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 102 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -315.523 to -353.978 (0.03 seconds)
Cbc0038I Round again with cutoff of -360.713
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.33528 (38) obj. -360.713 iterations 4
Cbc0038I Pass   5: suminf.    4.05251 (38) obj. -360.713 iterations 1
Cbc0038I Pass   6: suminf.    2.80031 (31) obj. -360.713 iterations 12
Cbc0038I Pass   7: suminf.    2.05485 (23) obj. -360.713 iterations 9
Cbc0038I Pass   8: suminf.    2.04773 (22) obj. -360.713 iterations 2
Cbc0038I Pass   9: suminf.    0.72626 (2) obj. -360.713 iterations 29
Cbc0038I Pass  10: suminf.    0.12771 (1) obj. -360.713 iterations 5
Cbc0038I Pass  11: suminf.    0.40541 (1) obj. -362.037 iterations 3
Cbc0038I Pass  12: suminf.    0.38779 (1) obj. -360.713 iterations 1
Cbc0038I Pass  13: suminf.    3.44994 (13) obj. -360.713 iterations 20
Cbc0038I Pass  14: suminf.    1.27572 (7) obj. -360.713 iterations 6
Cbc0038I Pass  15: suminf.    1.27572 (7) obj. -360.713 iterations 0
Cbc0038I Pass  16: suminf.    0.02703 (1) obj. -361.608 iterations 9
Cbc0038I Pass  17: suminf.    0.00839 (1) obj. -360.713 iterations 3
Cbc0038I Pass  18: suminf.    2.48145 (18) obj. -360.713 iterations 26
Cbc0038I Pass  19: suminf.    2.24282 (19) obj. -360.713 iterations 3
Cbc0038I Pass  20: suminf.    1.67499 (16) obj. -360.713 iterations 5
Cbc0038I Pass  21: suminf.    0.57459 (3) obj. -360.713 iterations 22
Cbc0038I Solution found of -364.311
Cbc0038I Rounding solution of -366.311 is better than previous of -364.311

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 102 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -366.311 to -367.225 (0.04 seconds)
Cbc0038I Round again with cutoff of -378.046
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  22: suminf.    5.26535 (38) obj. -378.046 iterations 0
Cbc0038I Pass  23: suminf.    1.63032 (12) obj. -378.046 iterations 32
Cbc0038I Pass  24: suminf.    1.52731 (11) obj. -378.046 iterations 5
Cbc0038I Pass  25: suminf.    0.60820 (4) obj. -378.046 iterations 21
Cbc0038I Pass  26: suminf.    0.60848 (4) obj. -378.046 iterations 4
Cbc0038I Pass  27: suminf.    1.10702 (4) obj. -378.046 iterations 14
Cbc0038I Pass  28: suminf.    0.44176 (4) obj. -378.046 iterations 6
Cbc0038I Pass  29: suminf.    1.05331 (4) obj. -378.046 iterations 8
Cbc0038I Pass  30: suminf.    1.03984 (4) obj. -378.046 iterations 3
Cbc0038I Pass  31: suminf.    0.55653 (4) obj. -378.046 iterations 6
Cbc0038I Pass  32: suminf.    1.56812 (8) obj. -378.046 iterations 15
Cbc0038I Pass  33: suminf.    1.56812 (8) obj. -378.046 iterations 4
Cbc0038I Pass  34: suminf.    1.10702 (4) obj. -378.046 iterations 16
Cbc0038I Pass  35: suminf.    0.44176 (4) obj. -378.046 iterations 6
Cbc0038I Pass  36: suminf.    1.05331 (4) obj. -378.046 iterations 8
Cbc0038I Pass  37: suminf.    1.03984 (4) obj. -378.046 iterations 5
Cbc0038I Pass  38: suminf.    0.55653 (4) obj. -378.046 iterations 6
Cbc0038I Pass  39: suminf.    2.60198 (11) obj. -378.046 iterations 21
Cbc0038I Pass  40: suminf.    1.20392 (8) obj. -378.046 iterations 6
Cbc0038I Pass  41: suminf.    0.60848 (4) obj. -378.046 iterations 13
Cbc0038I Pass  42: suminf.    0.60848 (4) obj. -378.046 iterations 3
Cbc0038I Pass  43: suminf.    1.10702 (4) obj. -378.046 iterations 14
Cbc0038I Pass  44: suminf.    0.44176 (4) obj. -378.046 iterations 6
Cbc0038I Pass  45: suminf.    1.05331 (4) obj. -378.046 iterations 8
Cbc0038I Pass  46: suminf.    1.03984 (4) obj. -378.046 iterations 5
Cbc0038I Pass  47: suminf.    0.55653 (4) obj. -378.046 iterations 6
Cbc0038I Pass  48: suminf.    1.29423 (13) obj. -378.046 iterations 12
Cbc0038I Pass  49: suminf.    0.81453 (6) obj. -378.046 iterations 11
Cbc0038I Pass  50: suminf.    1.10702 (4) obj. -378.046 iterations 13
Cbc0038I Pass  51: suminf.    0.44176 (4) obj. -378.046 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 102 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -367.225 - took 0.04 seconds
Cbc0012I Integer solution of -367.2254 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 92 rows 102 columns, reduced to 3 rows 3 columns
Cbc0031I 27 added rows had average density of 5.0740741
Cbc0013I At root node, 27 cuts changed objective from -421.33011 to -368.72257 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 482 row cuts average 11.2 elements, 34 column cuts (34 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 56 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 87 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0001I Search completed - best objective -367.2254, took 203 iterations and 2 nodes (0.38 seconds)
Cbc0032I Strong branching done 24 times (130 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.39

