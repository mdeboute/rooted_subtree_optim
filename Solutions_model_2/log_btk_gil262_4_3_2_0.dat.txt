Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 261 (-3) columns and 1498 (-47) elements
Clp1000I sum of infeasibilities 2.86558e-05 - average 5.68568e-08, 65 fixed columns
Coin0506I Presolve 371 (-133) rows, 193 (-68) columns and 1099 (-399) elements
Clp0029I End of values pass after 193 iterations
Clp0014I Perturbing problem by 0.001% of 2.1608484 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 138.91628
Clp0000I Optimal - objective value 138.91628
Coin0511I After Postsolve, objective 138.91628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 138.91628
Clp0000I Optimal - objective value 138.91628
Clp0000I Optimal - objective value 138.91628
Coin0511I After Postsolve, objective 138.91628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.916278 - 0 iterations time 0.072, Presolve 0.00, Idiot 0.07

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 261 columns (260 integer (260 of which binary)) and 1498 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 80 integers unsatisfied sum - 12.0741
Cbc0038I Solution found of 4.98837
Cbc0038I Relaxing continuous gives -9.67084
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 150 rows 81 columns
Cbc0038I Mini branch and bound improved solution from -9.67084 to -81.4524 (0.07 seconds)
Cbc0038I Round again with cutoff of -87.1988
Cbc0038I Pass   1: suminf.    3.98607 (43) obj. -87.1988 iterations 221
Cbc0038I Pass   2: suminf.    3.98607 (43) obj. -87.1988 iterations 0
Cbc0038I Pass   3: suminf.    3.24904 (11) obj. -87.1988 iterations 72
Cbc0038I Pass   4: suminf.    2.21233 (14) obj. -87.1988 iterations 36
Cbc0038I Pass   5: suminf.    3.10098 (10) obj. -87.1988 iterations 47
Cbc0038I Pass   6: suminf.    2.95028 (10) obj. -87.1988 iterations 17
Cbc0038I Pass   7: suminf.    3.31430 (11) obj. -87.1988 iterations 20
Cbc0038I Pass   8: suminf.    2.48122 (11) obj. -87.1988 iterations 7
Cbc0038I Pass   9: suminf.    2.47346 (11) obj. -87.1988 iterations 5
Cbc0038I Pass  10: suminf.    3.73471 (10) obj. -87.1988 iterations 11
Cbc0038I Pass  11: suminf.    3.68283 (11) obj. -87.1988 iterations 14
Cbc0038I Pass  12: suminf.    3.46173 (10) obj. -87.1988 iterations 3
Cbc0038I Pass  13: suminf.    2.88824 (11) obj. -87.1988 iterations 14
Cbc0038I Pass  14: suminf.    2.77933 (10) obj. -87.1988 iterations 29
Cbc0038I Pass  15: suminf.    2.41941 (7) obj. -87.1988 iterations 20
Cbc0038I Pass  16: suminf.    2.41941 (7) obj. -87.1988 iterations 0
Cbc0038I Pass  17: suminf.    2.63942 (7) obj. -87.1988 iterations 19
Cbc0038I Pass  18: suminf.    2.23526 (9) obj. -87.1988 iterations 12
Cbc0038I Pass  19: suminf.    4.24012 (11) obj. -87.1988 iterations 16
Cbc0038I Pass  20: suminf.    2.09036 (10) obj. -87.1988 iterations 10
Cbc0038I Pass  21: suminf.    2.09036 (10) obj. -87.1988 iterations 4
Cbc0038I Pass  22: suminf.    3.22378 (11) obj. -87.1988 iterations 17
Cbc0038I Pass  23: suminf.    2.50372 (11) obj. -87.1988 iterations 21
Cbc0038I Pass  24: suminf.    2.41941 (7) obj. -87.1988 iterations 6
Cbc0038I Pass  25: suminf.    2.41941 (7) obj. -87.1988 iterations 0
Cbc0038I Pass  26: suminf.    2.63942 (7) obj. -87.1988 iterations 20
Cbc0038I Pass  27: suminf.    2.23526 (9) obj. -87.1988 iterations 12
Cbc0038I Pass  28: suminf.    4.24012 (11) obj. -87.1988 iterations 15
Cbc0038I Pass  29: suminf.    2.09036 (10) obj. -87.1988 iterations 9
Cbc0038I Pass  30: suminf.    2.09036 (10) obj. -87.1988 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 160 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 187 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -81.4524 to -83.7328 (0.17 seconds)
Cbc0038I Round again with cutoff of -97.5423
Cbc0038I Pass  30: suminf.    4.66795 (60) obj. -97.5423 iterations 2
Cbc0038I Pass  31: suminf.    4.66795 (60) obj. -97.5423 iterations 0
Cbc0038I Pass  32: suminf.    4.51040 (14) obj. -97.5423 iterations 82
Cbc0038I Pass  33: suminf.    3.03189 (16) obj. -97.5423 iterations 32
Cbc0038I Pass  34: suminf.    3.03095 (17) obj. -97.5423 iterations 3
Cbc0038I Pass  35: suminf.    4.70358 (13) obj. -97.5423 iterations 56
Cbc0038I Pass  36: suminf.    3.93567 (15) obj. -97.5423 iterations 39
Cbc0038I Pass  37: suminf.    5.35858 (16) obj. -97.5423 iterations 30
Cbc0038I Pass  38: suminf.    5.08083 (23) obj. -97.5423 iterations 26
Cbc0038I Pass  39: suminf.    4.47350 (33) obj. -97.5423 iterations 29
Cbc0038I Pass  40: suminf.    4.33014 (46) obj. -97.5423 iterations 24
Cbc0038I Pass  41: suminf.    4.46496 (13) obj. -97.5423 iterations 77
Cbc0038I Pass  42: suminf.    3.35720 (14) obj. -97.5423 iterations 23
Cbc0038I Pass  43: suminf.    3.35720 (14) obj. -97.5423 iterations 2
Cbc0038I Pass  44: suminf.    5.30049 (15) obj. -97.5423 iterations 37
Cbc0038I Pass  45: suminf.    3.75024 (32) obj. -97.5423 iterations 43
Cbc0038I Pass  46: suminf.    5.39760 (16) obj. -97.5423 iterations 49
Cbc0038I Pass  47: suminf.    3.80262 (18) obj. -97.5423 iterations 26
Cbc0038I Pass  48: suminf.    3.80262 (18) obj. -97.5423 iterations 0
Cbc0038I Pass  49: suminf.    4.12801 (16) obj. -97.5423 iterations 22
Cbc0038I Pass  50: suminf.    3.39010 (16) obj. -97.5423 iterations 53
Cbc0038I Pass  51: suminf.    4.99962 (14) obj. -97.5423 iterations 31
Cbc0038I Pass  52: suminf.    9.75085 (34) obj. -97.5423 iterations 53
Cbc0038I Pass  53: suminf.    5.64661 (27) obj. -97.5423 iterations 64
Cbc0038I Pass  54: suminf.    5.43929 (19) obj. -97.5423 iterations 11
Cbc0038I Pass  55: suminf.    4.67780 (18) obj. -97.5423 iterations 4
Cbc0038I Pass  56: suminf.    4.09584 (17) obj. -97.5423 iterations 15
Cbc0038I Pass  57: suminf.    5.49026 (15) obj. -97.5423 iterations 37
Cbc0038I Pass  58: suminf.    3.74421 (14) obj. -97.5423 iterations 34
Cbc0038I Pass  59: suminf.    5.16244 (16) obj. -97.5423 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 146 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 215 rows 115 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -83.7328 - took 0.27 seconds
Cbc0012I Integer solution of -83.732763 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 150 rows 81 columns
Cbc0031I 38 added rows had average density of 130.44737
Cbc0013I At root node, 38 cuts changed objective from -138.91628 to -126.43503 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44201 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.522 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3676 row cuts average 258.7 elements, 0 column cuts (0 active)  in 0.556 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.662 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.226 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -83.732763 best solution, best possible -126.43503 (6.37 seconds)
Cbc0010I After 9 nodes, 8 on tree, -83.732763 best solution, best possible -126.43503 (7.09 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 41 rows 28 columns
Cbc0010I After 73 nodes, 10 on tree, -83.732763 best solution, best possible -126.43503 (7.80 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 146 rows 80 columns
Cbc0010I After 197 nodes, 4 on tree, -83.732763 best solution, best possible -126.43503 (8.51 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 36 rows 26 columns
Cbc0038I Full problem 504 rows 261 columns, reduced to 19 rows 14 columns
Cbc0001I Search completed - best objective -83.73276299999998, took 36928 iterations and 350 nodes (9.18 seconds)
Cbc0032I Strong branching done 3264 times (79489 iterations), fathomed 52 nodes and fixed 259 variables
Cbc0035I Maximum depth 60, 2055 variables fixed on reduced cost
Total time (CPU seconds):       9.00   (Wallclock seconds):       9.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 361 (-165) rows, 377 (-147) columns and 17030 (-18706) elements
Clp1000I sum of infeasibilities 2.28572e-06 - average 6.33163e-09, 236 fixed columns
Coin0506I Presolve 126 (-235) rows, 139 (-238) columns and 515 (-16515) elements
Clp0006I 0  Obj 63.83743 Dual inf 19.772479 (139)
Clp0029I End of values pass after 139 iterations
Clp0014I Perturbing problem by 0.001% of 1.4026239 - largest nonzero change 2.4326169e-05 ( 0.0019528221%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 67.690292
Clp0000I Optimal - objective value 67.690292
Coin0511I After Postsolve, objective 67.690292, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 67.690292 Dual inf 310.31848 (126)
Clp0014I Perturbing problem by 0.001% of 1.9687157 - largest nonzero change 2.9354515e-05 ( 0.001669401%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 241.98513
Clp0000I Optimal - objective value 241.98513
Clp0000I Optimal - objective value 241.98513
Coin0511I After Postsolve, objective 241.98513, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 241.9851311 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0004I processed model has 361 rows, 377 columns (377 integer (377 of which binary)) and 17030 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.815%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 121 integers unsatisfied sum - 5.61522
Cbc0038I Pass   1: suminf.    1.41365 (56) obj. -212.867 iterations 82
Cbc0038I Pass   2: suminf.    1.41365 (56) obj. -212.867 iterations 1
Cbc0038I Pass   3: suminf.    0.69212 (39) obj. -162.129 iterations 17
Cbc0038I Pass   4: suminf.    0.27324 (23) obj. -143.639 iterations 16
Cbc0038I Pass   5: suminf.    0.03119 (5) obj. -121.938 iterations 18
Cbc0038I Solution found of -115.975
Cbc0038I Rounding solution of -130.616 is better than previous of -115.975

Cbc0038I Before mini branch and bound, 255 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 377 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -141.753
Cbc0038I Pass   6: suminf.    1.41365 (56) obj. -212.867 iterations 0
Cbc0038I Pass   7: suminf.    1.41365 (56) obj. -212.867 iterations 1
Cbc0038I Pass   8: suminf.    0.53425 (34) obj. -154.378 iterations 22
Cbc0038I Pass   9: suminf.    0.35931 (20) obj. -141.753 iterations 23
Cbc0038I Pass  10: suminf.    1.09322 (4) obj. -141.753 iterations 38
Cbc0038I Pass  11: suminf.    0.90388 (4) obj. -141.753 iterations 35
Cbc0038I Pass  12: suminf.    0.62024 (5) obj. -141.753 iterations 46
Cbc0038I Pass  13: suminf.    0.90998 (4) obj. -141.753 iterations 11
Cbc0038I Pass  14: suminf.    0.85834 (6) obj. -141.753 iterations 7
Cbc0038I Pass  15: suminf.    0.78297 (5) obj. -141.753 iterations 10
Cbc0038I Pass  16: suminf.    2.16155 (37) obj. -141.753 iterations 121
Cbc0038I Pass  17: suminf.    1.38217 (12) obj. -141.753 iterations 82
Cbc0038I Pass  18: suminf.    0.83880 (11) obj. -141.753 iterations 24
Cbc0038I Pass  19: suminf.    1.24705 (7) obj. -141.753 iterations 28
Cbc0038I Pass  20: suminf.    0.85144 (7) obj. -141.753 iterations 7
Cbc0038I Pass  21: suminf.    1.71693 (46) obj. -141.753 iterations 86
Cbc0038I Pass  22: suminf.    1.41434 (30) obj. -141.753 iterations 14
Cbc0038I Pass  23: suminf.    1.74522 (22) obj. -141.753 iterations 41
Cbc0038I Pass  24: suminf.    0.97302 (40) obj. -141.753 iterations 13
Cbc0038I Pass  25: suminf.    0.39481 (10) obj. -141.753 iterations 60
Cbc0038I Pass  26: suminf.    0.44857 (9) obj. -141.753 iterations 10
Cbc0038I Pass  27: suminf.    1.46918 (52) obj. -141.753 iterations 47
Cbc0038I Pass  28: suminf.    1.46918 (52) obj. -141.753 iterations 10
Cbc0038I Pass  29: suminf.    1.72137 (40) obj. -141.753 iterations 43
Cbc0038I Pass  30: suminf.    1.72137 (40) obj. -141.753 iterations 1
Cbc0038I Pass  31: suminf.    1.32781 (32) obj. -141.753 iterations 50
Cbc0038I Pass  32: suminf.    1.32781 (32) obj. -141.753 iterations 9
Cbc0038I Pass  33: suminf.    1.70354 (30) obj. -141.753 iterations 20
Cbc0038I Pass  34: suminf.    1.60022 (33) obj. -141.753 iterations 16
Cbc0038I Pass  35: suminf.    1.78015 (25) obj. -141.753 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 232 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 377 columns, reduced to 135 rows 145 columns - 17 fixed gives 117, 127 - still too large
Cbc0038I Full problem 361 rows 377 columns, reduced to 33 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -130.616 - took 0.13 seconds
Cbc0012I Integer solution of -130.6162 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 361 rows 377 columns, reduced to 24 rows 26 columns
Cbc0031I 117 added rows had average density of 41.418803
Cbc0013I At root node, 117 cuts changed objective from -241.98513 to -139.38574 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 1833 row cuts average 7.1 elements, 33 column cuts (33 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 242 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 434 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 319 row cuts average 193.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 79 row cuts average 62.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -130.6162 best solution, best possible -139.37493 (0.93 seconds)
Cbc0012I Integer solution of -136.12073 found by DiveCoefficient after 951 iterations and 6 nodes (1.38 seconds)
Cbc0001I Search completed - best objective -136.12073, took 1774 iterations and 22 nodes (1.55 seconds)
Cbc0032I Strong branching done 432 times (13952 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 10, 175 variables fixed on reduced cost
Total time (CPU seconds):       1.47   (Wallclock seconds):       1.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 261 (-3) columns and 1498 (-47) elements
Clp1000I sum of infeasibilities 2.86558e-05 - average 5.68568e-08, 65 fixed columns
Coin0506I Presolve 371 (-133) rows, 193 (-68) columns and 1099 (-399) elements
Clp0029I End of values pass after 193 iterations
Clp0014I Perturbing problem by 0.001% of 2.1608484 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 138.91628
Clp0000I Optimal - objective value 138.91628
Coin0511I After Postsolve, objective 138.91628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 138.91628
Clp0000I Optimal - objective value 138.91628
Clp0000I Optimal - objective value 138.91628
Coin0511I After Postsolve, objective 138.91628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.916278 - 0 iterations time 0.072, Presolve 0.00, Idiot 0.07

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 261 columns (260 integer (260 of which binary)) and 1498 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 80 integers unsatisfied sum - 12.0741
Cbc0038I Solution found of 4.98837
Cbc0038I Relaxing continuous gives -9.67084
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 150 rows 81 columns
Cbc0038I Mini branch and bound improved solution from -9.67084 to -81.4524 (0.07 seconds)
Cbc0038I Round again with cutoff of -87.1988
Cbc0038I Pass   1: suminf.    3.98607 (43) obj. -87.1988 iterations 221
Cbc0038I Pass   2: suminf.    3.98607 (43) obj. -87.1988 iterations 0
Cbc0038I Pass   3: suminf.    3.24904 (11) obj. -87.1988 iterations 72
Cbc0038I Pass   4: suminf.    2.21233 (14) obj. -87.1988 iterations 36
Cbc0038I Pass   5: suminf.    3.10098 (10) obj. -87.1988 iterations 47
Cbc0038I Pass   6: suminf.    2.95028 (10) obj. -87.1988 iterations 17
Cbc0038I Pass   7: suminf.    3.31430 (11) obj. -87.1988 iterations 20
Cbc0038I Pass   8: suminf.    2.48122 (11) obj. -87.1988 iterations 7
Cbc0038I Pass   9: suminf.    2.47346 (11) obj. -87.1988 iterations 5
Cbc0038I Pass  10: suminf.    3.73471 (10) obj. -87.1988 iterations 11
Cbc0038I Pass  11: suminf.    3.68283 (11) obj. -87.1988 iterations 14
Cbc0038I Pass  12: suminf.    3.46173 (10) obj. -87.1988 iterations 3
Cbc0038I Pass  13: suminf.    2.88824 (11) obj. -87.1988 iterations 14
Cbc0038I Pass  14: suminf.    2.77933 (10) obj. -87.1988 iterations 29
Cbc0038I Pass  15: suminf.    2.41941 (7) obj. -87.1988 iterations 20
Cbc0038I Pass  16: suminf.    2.41941 (7) obj. -87.1988 iterations 0
Cbc0038I Pass  17: suminf.    2.63942 (7) obj. -87.1988 iterations 19
Cbc0038I Pass  18: suminf.    2.23526 (9) obj. -87.1988 iterations 12
Cbc0038I Pass  19: suminf.    4.24012 (11) obj. -87.1988 iterations 16
Cbc0038I Pass  20: suminf.    2.09036 (10) obj. -87.1988 iterations 10
Cbc0038I Pass  21: suminf.    2.09036 (10) obj. -87.1988 iterations 4
Cbc0038I Pass  22: suminf.    3.22378 (11) obj. -87.1988 iterations 17
Cbc0038I Pass  23: suminf.    2.50372 (11) obj. -87.1988 iterations 21
Cbc0038I Pass  24: suminf.    2.41941 (7) obj. -87.1988 iterations 6
Cbc0038I Pass  25: suminf.    2.41941 (7) obj. -87.1988 iterations 0
Cbc0038I Pass  26: suminf.    2.63942 (7) obj. -87.1988 iterations 20
Cbc0038I Pass  27: suminf.    2.23526 (9) obj. -87.1988 iterations 12
Cbc0038I Pass  28: suminf.    4.24012 (11) obj. -87.1988 iterations 15
Cbc0038I Pass  29: suminf.    2.09036 (10) obj. -87.1988 iterations 9
Cbc0038I Pass  30: suminf.    2.09036 (10) obj. -87.1988 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 160 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 187 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -81.4524 to -83.7328 (0.17 seconds)
Cbc0038I Round again with cutoff of -97.5423
Cbc0038I Pass  30: suminf.    4.66795 (60) obj. -97.5423 iterations 2
Cbc0038I Pass  31: suminf.    4.66795 (60) obj. -97.5423 iterations 0
Cbc0038I Pass  32: suminf.    4.51040 (14) obj. -97.5423 iterations 82
Cbc0038I Pass  33: suminf.    3.03189 (16) obj. -97.5423 iterations 32
Cbc0038I Pass  34: suminf.    3.03095 (17) obj. -97.5423 iterations 3
Cbc0038I Pass  35: suminf.    4.70358 (13) obj. -97.5423 iterations 56
Cbc0038I Pass  36: suminf.    3.93567 (15) obj. -97.5423 iterations 39
Cbc0038I Pass  37: suminf.    5.35858 (16) obj. -97.5423 iterations 30
Cbc0038I Pass  38: suminf.    5.08083 (23) obj. -97.5423 iterations 26
Cbc0038I Pass  39: suminf.    4.47350 (33) obj. -97.5423 iterations 29
Cbc0038I Pass  40: suminf.    4.33014 (46) obj. -97.5423 iterations 24
Cbc0038I Pass  41: suminf.    4.46496 (13) obj. -97.5423 iterations 77
Cbc0038I Pass  42: suminf.    3.35720 (14) obj. -97.5423 iterations 23
Cbc0038I Pass  43: suminf.    3.35720 (14) obj. -97.5423 iterations 2
Cbc0038I Pass  44: suminf.    5.30049 (15) obj. -97.5423 iterations 37
Cbc0038I Pass  45: suminf.    3.75024 (32) obj. -97.5423 iterations 43
Cbc0038I Pass  46: suminf.    5.39760 (16) obj. -97.5423 iterations 49
Cbc0038I Pass  47: suminf.    3.80262 (18) obj. -97.5423 iterations 26
Cbc0038I Pass  48: suminf.    3.80262 (18) obj. -97.5423 iterations 0
Cbc0038I Pass  49: suminf.    4.12801 (16) obj. -97.5423 iterations 22
Cbc0038I Pass  50: suminf.    3.39010 (16) obj. -97.5423 iterations 53
Cbc0038I Pass  51: suminf.    4.99962 (14) obj. -97.5423 iterations 31
Cbc0038I Pass  52: suminf.    9.75085 (34) obj. -97.5423 iterations 53
Cbc0038I Pass  53: suminf.    5.64661 (27) obj. -97.5423 iterations 64
Cbc0038I Pass  54: suminf.    5.43929 (19) obj. -97.5423 iterations 11
Cbc0038I Pass  55: suminf.    4.67780 (18) obj. -97.5423 iterations 4
Cbc0038I Pass  56: suminf.    4.09584 (17) obj. -97.5423 iterations 15
Cbc0038I Pass  57: suminf.    5.49026 (15) obj. -97.5423 iterations 37
Cbc0038I Pass  58: suminf.    3.74421 (14) obj. -97.5423 iterations 34
Cbc0038I Pass  59: suminf.    5.16244 (16) obj. -97.5423 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 146 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 215 rows 115 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -83.7328 - took 0.27 seconds
Cbc0012I Integer solution of -83.732763 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 150 rows 81 columns
Cbc0031I 38 added rows had average density of 130.44737
Cbc0013I At root node, 38 cuts changed objective from -138.91628 to -126.43503 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44201 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.521 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3676 row cuts average 258.7 elements, 0 column cuts (0 active)  in 0.552 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.656 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -83.732763 best solution, best possible -126.43503 (6.34 seconds)
Cbc0010I After 9 nodes, 8 on tree, -83.732763 best solution, best possible -126.43503 (7.05 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 41 rows 28 columns
Cbc0010I After 68 nodes, 11 on tree, -83.732763 best solution, best possible -126.43503 (7.76 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 146 rows 80 columns
Cbc0010I After 189 nodes, 7 on tree, -83.732763 best solution, best possible -126.43503 (8.46 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 36 rows 26 columns
Cbc0038I Full problem 504 rows 261 columns, reduced to 19 rows 14 columns
Cbc0010I After 341 nodes, 4 on tree, -83.732763 best solution, best possible -89.499712 (9.16 seconds)
Cbc0001I Search completed - best objective -83.73276299999998, took 36928 iterations and 350 nodes (9.20 seconds)
Cbc0032I Strong branching done 3264 times (79489 iterations), fathomed 52 nodes and fixed 259 variables
Cbc0035I Maximum depth 60, 2055 variables fixed on reduced cost
Total time (CPU seconds):       9.03   (Wallclock seconds):       9.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 360 (-167) rows, 376 (-149) columns and 16970 (-18767) elements
Clp1000I sum of infeasibilities 1.07842e-05 - average 2.9956e-08, 204 fixed columns
Coin0506I Presolve 155 (-205) rows, 169 (-207) columns and 623 (-16347) elements
Clp0006I 0  Obj -5.8728577 Dual inf 21.252735 (169)
Clp0029I End of values pass after 169 iterations
Clp0014I Perturbing problem by 0.001% of 1.4224332 - largest nonzero change 2.8874797e-05 ( 0.0023600025%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value -4.5140306
Clp0000I Optimal - objective value -4.5140306
Coin0511I After Postsolve, objective -4.5140306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.5140306 Dual inf 170.7006 (116)
Clp0014I Perturbing problem by 0.001% of 1.9720593 - largest nonzero change 2.7273797e-05 ( 0.0025543869%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 170.54762
Clp0000I Optimal - objective value 170.54762
Clp0000I Optimal - objective value 170.54762
Coin0511I After Postsolve, objective 170.54762, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.5476171 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 360 rows, 376 columns (376 integer (376 of which binary)) and 16970 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 105 integers unsatisfied sum - 4.72736
Cbc0038I Pass   1: suminf.    3.36514 (101) obj. -169.171 iterations 25
Cbc0038I Pass   2: suminf.    3.36514 (101) obj. -169.171 iterations 0
Cbc0038I Pass   3: suminf.    1.44202 (59) obj. -87.6598 iterations 26
Cbc0038I Pass   4: suminf.    0.81257 (42) obj. -68.4028 iterations 17
Cbc0038I Pass   5: suminf.    0.38496 (26) obj. -48.9346 iterations 16
Cbc0038I Pass   6: suminf.    0.08805 (8) obj. -30.2494 iterations 18
Cbc0038I Solution found of -21.3477
Cbc0038I Rounding solution of -40.6412 is better than previous of -21.3477

Cbc0038I Before mini branch and bound, 270 integers at bound fixed and 0 continuous
Cbc0038I Full problem 360 rows 376 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -53.6298
Cbc0038I Pass   7: suminf.    3.36514 (101) obj. -169.171 iterations 0
Cbc0038I Pass   8: suminf.    3.36514 (101) obj. -169.171 iterations 0
Cbc0038I Pass   9: suminf.    1.27682 (55) obj. -82.8668 iterations 34
Cbc0038I Pass  10: suminf.    0.75071 (40) obj. -66.4647 iterations 15
Cbc0038I Pass  11: suminf.    0.37885 (16) obj. -53.6298 iterations 33
Cbc0038I Pass  12: suminf.    0.26769 (16) obj. -56.1839 iterations 9
Cbc0038I Pass  13: suminf.    1.09090 (7) obj. -53.6298 iterations 49
Cbc0038I Pass  14: suminf.    1.09090 (7) obj. -53.6298 iterations 0
Cbc0038I Pass  15: suminf.    0.29724 (3) obj. -57.5389 iterations 21
Cbc0038I Pass  16: suminf.    0.29724 (3) obj. -57.5389 iterations 0
Cbc0038I Pass  17: suminf.    0.46697 (4) obj. -53.6298 iterations 28
Cbc0038I Pass  18: suminf.    0.36387 (6) obj. -53.6298 iterations 25
Cbc0038I Pass  19: suminf.    0.54617 (3) obj. -53.6298 iterations 7
Cbc0038I Pass  20: suminf.    0.46173 (2) obj. -53.6298 iterations 17
Cbc0038I Pass  21: suminf.    0.85043 (3) obj. -53.6298 iterations 10
Cbc0038I Pass  22: suminf.    0.50555 (3) obj. -56.7338 iterations 1
Cbc0038I Pass  23: suminf.    0.40576 (5) obj. -53.6298 iterations 24
Cbc0038I Pass  24: suminf.    0.36387 (6) obj. -53.6298 iterations 8
Cbc0038I Pass  25: suminf.    0.54617 (3) obj. -53.6298 iterations 7
Cbc0038I Pass  26: suminf.    0.46173 (2) obj. -53.6298 iterations 17
Cbc0038I Pass  27: suminf.    0.85043 (3) obj. -53.6298 iterations 10
Cbc0038I Pass  28: suminf.    0.50555 (3) obj. -56.7338 iterations 1
Cbc0038I Pass  29: suminf.    0.40576 (5) obj. -53.6298 iterations 24
Cbc0038I Pass  30: suminf.    0.36387 (6) obj. -53.6298 iterations 8
Cbc0038I Pass  31: suminf.    0.54617 (3) obj. -53.6298 iterations 7
Cbc0038I Pass  32: suminf.    0.46173 (2) obj. -53.6298 iterations 17
Cbc0038I Pass  33: suminf.    0.85043 (3) obj. -53.6298 iterations 10
Cbc0038I Pass  34: suminf.    0.50555 (3) obj. -56.7338 iterations 1
Cbc0038I Pass  35: suminf.    0.40576 (5) obj. -53.6298 iterations 24
Cbc0038I Pass  36: suminf.    0.36387 (6) obj. -53.6298 iterations 8
Cbc0038I Rounding solution of -45.2232 is better than previous of -40.6412

Cbc0038I Before mini branch and bound, 261 integers at bound fixed and 0 continuous
Cbc0038I Full problem 360 rows 376 columns, reduced to 110 rows 115 columns - 23 fixed gives 87, 92 - ok now
Cbc0038I Full problem 360 rows 376 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of -77.0091
Cbc0038I Pass  36: suminf.    3.36514 (101) obj. -169.171 iterations 0
Cbc0038I Pass  37: suminf.    3.36514 (101) obj. -169.171 iterations 0
Cbc0038I Pass  38: suminf.    1.64137 (63) obj. -103.809 iterations 26
Cbc0038I Pass  39: suminf.    1.12708 (51) obj. -79.0166 iterations 12
Cbc0038I Pass  40: suminf.    1.22983 (41) obj. -77.0091 iterations 16
Cbc0038I Pass  41: suminf.    0.82518 (41) obj. -85.5043 iterations 6
Cbc0038I Pass  42: suminf.    1.81210 (34) obj. -77.0091 iterations 42
Cbc0038I Pass  43: suminf.    0.60258 (17) obj. -77.0091 iterations 32
Cbc0038I Pass  44: suminf.    0.60258 (17) obj. -77.0091 iterations 0
Cbc0038I Pass  45: suminf.    0.71211 (30) obj. -77.0091 iterations 34
Cbc0038I Pass  46: suminf.    0.58222 (8) obj. -77.0091 iterations 14
Cbc0038I Pass  47: suminf.    0.63130 (6) obj. -77.0091 iterations 9
Cbc0038I Pass  48: suminf.    1.32008 (20) obj. -77.0091 iterations 82
Cbc0038I Pass  49: suminf.    0.67827 (18) obj. -77.0091 iterations 38
Cbc0038I Pass  50: suminf.    1.87488 (13) obj. -77.0091 iterations 35
Cbc0038I Pass  51: suminf.    1.18572 (12) obj. -77.0091 iterations 32
Cbc0038I Pass  52: suminf.    0.70068 (11) obj. -77.6096 iterations 13
Cbc0038I Pass  53: suminf.    1.70210 (28) obj. -77.0091 iterations 47
Cbc0038I Pass  54: suminf.    0.91100 (28) obj. -77.0091 iterations 13
Cbc0038I Pass  55: suminf.    1.73614 (18) obj. -77.0091 iterations 38
Cbc0038I Pass  56: suminf.    1.15426 (18) obj. -77.0091 iterations 13
Cbc0038I Pass  57: suminf.    1.70590 (16) obj. -77.0091 iterations 21
Cbc0038I Pass  58: suminf.    1.63027 (17) obj. -77.0091 iterations 7
Cbc0038I Pass  59: suminf.    1.71130 (16) obj. -77.0091 iterations 17
Cbc0038I Pass  60: suminf.    1.63606 (17) obj. -77.0091 iterations 7
Cbc0038I Pass  61: suminf.    1.70590 (16) obj. -77.0091 iterations 8
Cbc0038I Pass  62: suminf.    2.30789 (36) obj. -77.0091 iterations 61
Cbc0038I Pass  63: suminf.    1.56036 (31) obj. -77.0091 iterations 46
Cbc0038I Pass  64: suminf.    1.40456 (27) obj. -77.0091 iterations 33
Cbc0038I Pass  65: suminf.    1.32440 (27) obj. -77.0091 iterations 10
Cbc0038I Rounding solution of -45.8548 is better than previous of -45.2232

Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 360 rows 376 columns, reduced to 121 rows 130 columns - 27 fixed gives 91, 102 - ok now
Cbc0038I Full problem 360 rows 376 columns, reduced to 38 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -45.8548 to -50.8028 (0.30 seconds)
Cbc0038I Round again with cutoff of -105.064
Cbc0038I Pass  65: suminf.    3.36514 (101) obj. -169.171 iterations 0
Cbc0038I Pass  66: suminf.    3.36514 (101) obj. -169.171 iterations 0
Cbc0038I Pass  67: suminf.    2.49551 (55) obj. -105.064 iterations 44
Cbc0038I Pass  68: suminf.    1.55988 (54) obj. -105.064 iterations 14
Cbc0038I Pass  69: suminf.    1.27547 (54) obj. -109.629 iterations 10
Cbc0038I Pass  70: suminf.    1.03069 (39) obj. -105.064 iterations 44
Cbc0038I Pass  71: suminf.    0.81367 (39) obj. -106.366 iterations 5
Cbc0038I Pass  72: suminf.    1.16801 (30) obj. -105.064 iterations 47
Cbc0038I Pass  73: suminf.    0.75981 (30) obj. -106.697 iterations 7
Cbc0038I Pass  74: suminf.    0.80673 (19) obj. -105.064 iterations 48
Cbc0038I Pass  75: suminf.    0.78499 (19) obj. -105.13 iterations 9
Cbc0038I Pass  76: suminf.    0.80765 (18) obj. -105.064 iterations 37
Cbc0038I Pass  77: suminf.    0.79199 (18) obj. -105.096 iterations 9
Cbc0038I Pass  78: suminf.    1.25408 (17) obj. -105.064 iterations 35
Cbc0038I Pass  79: suminf.    1.18593 (18) obj. -105.064 iterations 7
Cbc0038I Pass  80: suminf.    1.52771 (42) obj. -105.064 iterations 8
Cbc0038I Pass  81: suminf.    1.52771 (42) obj. -105.064 iterations 1
Cbc0038I Pass  82: suminf.    1.46756 (39) obj. -105.064 iterations 20
Cbc0038I Pass  83: suminf.    1.32468 (38) obj. -105.327 iterations 12
Cbc0038I Pass  84: suminf.    1.74962 (36) obj. -105.064 iterations 54
Cbc0038I Pass  85: suminf.    1.71286 (37) obj. -105.064 iterations 7
Cbc0038I Pass  86: suminf.    1.72081 (37) obj. -105.064 iterations 7
Cbc0038I Pass  87: suminf.    2.04439 (41) obj. -105.064 iterations 42
Cbc0038I Pass  88: suminf.    1.73801 (41) obj. -105.064 iterations 19
Cbc0038I Pass  89: suminf.    1.99179 (38) obj. -105.064 iterations 30
Cbc0038I Pass  90: suminf.    1.99179 (38) obj. -105.064 iterations 5
Cbc0038I Pass  91: suminf.    2.03899 (37) obj. -105.064 iterations 27
Cbc0038I Pass  92: suminf.    1.79247 (38) obj. -105.064 iterations 10
Cbc0038I Pass  93: suminf.    2.09303 (38) obj. -105.064 iterations 10
Cbc0038I Pass  94: suminf.    1.64984 (36) obj. -105.761 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 260 integers at bound fixed and 0 continuous
Cbc0038I Full problem 360 rows 376 columns, reduced to 41 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -50.8028 - took 0.27 seconds
Cbc0012I Integer solution of -50.802765 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 360 rows 376 columns, reduced to 3 rows 5 columns
Cbc0031I 136 added rows had average density of 48.919118
Cbc0013I At root node, 136 cuts changed objective from -170.52641 to -116.18347 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41126 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.474 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2788 row cuts average 364.8 elements, 0 column cuts (0 active)  in 1.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 254 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5119 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.758 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1945 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.797 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 369 row cuts average 223.6 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 302 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.535 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -50.802765 best solution, best possible -116.18347 (8.37 seconds)
Cbc0010I After 2 nodes, 1 on tree, -50.802765 best solution, best possible -112.4566 (9.12 seconds)
Cbc0012I Integer solution of -67.684115 found by rounding after 14767 iterations and 4 nodes (9.43 seconds)
Cbc0010I After 5 nodes, 2 on tree, -67.684115 best solution, best possible -112.4566 (9.95 seconds)
Cbc0012I Integer solution of -71.91799 found by rounding after 15153 iterations and 7 nodes (10.28 seconds)
Cbc0012I Integer solution of -81.222763 found by rounding after 15568 iterations and 12 nodes (10.60 seconds)
Cbc0010I After 13 nodes, 7 on tree, -81.222763 best solution, best possible -112.4566 (10.66 seconds)
Cbc0010I After 39 nodes, 16 on tree, -81.222763 best solution, best possible -112.4566 (11.38 seconds)
Cbc0038I Full problem 360 rows 376 columns, reduced to 64 rows 77 columns
Cbc0012I Integer solution of -81.452363 found by RINS after 17873 iterations and 43 nodes (11.53 seconds)
Cbc0012I Integer solution of -83.732763 found by rounding after 18659 iterations and 55 nodes (11.66 seconds)
Cbc0038I Full problem 360 rows 376 columns, reduced to 26 rows 35 columns
Cbc0010I After 96 nodes, 12 on tree, -83.732763 best solution, best possible -112.4566 (12.13 seconds)
Cbc0010I After 165 nodes, 2 on tree, -83.732763 best solution, best possible -112.4566 (13.41 seconds)
Cbc0010I After 168 nodes, 5 on tree, -83.732763 best solution, best possible -112.4566 (14.55 seconds)
Cbc0010I After 219 nodes, 4 on tree, -83.732763 best solution, best possible -112.4566 (15.27 seconds)
Cbc0010I After 239 nodes, 2 on tree, -83.732763 best solution, best possible -112.4566 (16.14 seconds)
Cbc0010I After 242 nodes, 4 on tree, -83.732763 best solution, best possible -112.4566 (17.16 seconds)
Cbc0010I After 273 nodes, 5 on tree, -83.732763 best solution, best possible -112.4566 (17.90 seconds)
Cbc0001I Search completed - best objective -83.73276299999998, took 35968 iterations and 294 nodes (18.55 seconds)
Cbc0032I Strong branching done 2250 times (44791 iterations), fathomed 10 nodes and fixed 20 variables
Cbc0035I Maximum depth 24, 2209 variables fixed on reduced cost
Total time (CPU seconds):       18.21   (Wallclock seconds):       18.64

