Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 47 (-3) columns and 256 (-29) elements
Clp1000I sum of infeasibilities 2.13002e-05 - average 2.50591e-07, 11 fixed columns
Coin0506I Presolve 55 (-30) rows, 33 (-14) columns and 168 (-88) elements
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 1.6841629 - largest nonzero change 0 ( 0%) - largest zero change 1.199713e-05
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Coin0511I After Postsolve, objective 2387.6579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Coin0511I After Postsolve, objective 2387.6579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2387.657857 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 47 columns (46 integer (46 of which binary)) and 256 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.859%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 10.2542
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 172.108 iterations 28
Cbc0038I Solution found of 172.108
Cbc0038I Relaxing continuous gives 172.108
Cbc0038I Rounding solution of -150.95 is better than previous of 172.108

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -150.95 to -456.675 (0.03 seconds)
Cbc0038I Round again with cutoff of -649.773
Cbc0038I Pass   2: suminf.    1.21796 (5) obj. -649.773 iterations 5
Cbc0038I Pass   3: suminf.    1.40658 (4) obj. -649.773 iterations 8
Cbc0038I Pass   4: suminf.    0.87389 (3) obj. -649.773 iterations 1
Cbc0038I Pass   5: suminf.    1.48377 (5) obj. -649.773 iterations 5
Cbc0038I Pass   6: suminf.    2.12772 (6) obj. -649.773 iterations 6
Cbc0038I Pass   7: suminf.    1.46664 (5) obj. -649.773 iterations 3
Cbc0038I Pass   8: suminf.    1.41022 (4) obj. -649.773 iterations 1
Cbc0038I Pass   9: suminf.    0.97191 (4) obj. -649.773 iterations 4
Cbc0038I Pass  10: suminf.    1.97886 (5) obj. -649.773 iterations 5
Cbc0038I Pass  11: suminf.    1.47447 (4) obj. -649.773 iterations 2
Cbc0038I Pass  12: suminf.    1.21339 (4) obj. -649.773 iterations 6
Cbc0038I Pass  13: suminf.    1.03892 (4) obj. -649.773 iterations 3
Cbc0038I Pass  14: suminf.    2.11680 (6) obj. -649.773 iterations 5
Cbc0038I Pass  15: suminf.    1.59844 (7) obj. -649.773 iterations 3
Cbc0038I Pass  16: suminf.    1.59844 (7) obj. -649.773 iterations 0
Cbc0038I Pass  17: suminf.    1.73938 (5) obj. -649.773 iterations 8
Cbc0038I Pass  18: suminf.    0.87709 (3) obj. -649.773 iterations 3
Cbc0038I Pass  19: suminf.    1.23509 (5) obj. -649.773 iterations 5
Cbc0038I Pass  20: suminf.    1.23509 (5) obj. -649.773 iterations 0
Cbc0038I Pass  21: suminf.    2.08731 (6) obj. -649.773 iterations 4
Cbc0038I Pass  22: suminf.    1.92877 (7) obj. -649.773 iterations 1
Cbc0038I Pass  23: suminf.    1.92877 (7) obj. -649.773 iterations 0
Cbc0038I Pass  24: suminf.    1.34812 (5) obj. -649.773 iterations 12
Cbc0038I Pass  25: suminf.    1.34812 (5) obj. -649.773 iterations 0
Cbc0038I Pass  26: suminf.    1.93994 (6) obj. -649.773 iterations 4
Cbc0038I Pass  27: suminf.    1.93994 (6) obj. -649.773 iterations 0
Cbc0038I Pass  28: suminf.    2.03847 (6) obj. -649.773 iterations 5
Cbc0038I Pass  29: suminf.    1.35527 (5) obj. -649.773 iterations 3
Cbc0038I Pass  30: suminf.    1.34812 (5) obj. -649.773 iterations 5
Cbc0038I Pass  31: suminf.    1.93994 (6) obj. -649.773 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -456.675 - took 0.05 seconds
Cbc0012I Integer solution of -456.6747 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0031I 22 added rows had average density of 25.818182
Cbc0013I At root node, 22 cuts changed objective from -2387.6579 to -1493.9052 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4214 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1264 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0004I Integer solution of -489.7047 found after 4903 iterations and 12 nodes (0.60 seconds)
Cbc0016I Integer solution of -500.9147 found by strong branching after 5052 iterations and 15 nodes (0.61 seconds)
Cbc0001I Search completed - best objective -500.9147000000003, took 5214 iterations and 18 nodes (0.61 seconds)
Cbc0032I Strong branching done 340 times (6731 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 8, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-12) rows, 93 (-3) columns and 1319 (-94) elements
Clp1000I sum of infeasibilities 2.52889e-08 - average 2.94057e-10, 86 fixed columns
Coin0506I Presolve 5 (-81) rows, 7 (-86) columns and 15 (-1304) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -1.9538
Clp0000I Optimal - objective value -1.9538
Coin0511I After Postsolve, objective -1.9538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.4972281 - largest nonzero change 2.3720924e-05 ( 0.00076683715%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 3143.8199
Clp0000I Optimal - objective value 3143.8199
Clp0000I Optimal - objective value 3143.8199
Coin0511I After Postsolve, objective 3143.8199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3143.819907 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 93 columns (93 integer (93 of which binary)) and 1323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.119%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 12.8638
Cbc0038I Pass   1: suminf.    3.19114 (28) obj. -1491.86 iterations 23
Cbc0038I Pass   2: suminf.    3.19114 (28) obj. -1491.86 iterations 1
Cbc0038I Pass   3: suminf.    1.35652 (17) obj. -500.792 iterations 11
Cbc0038I Pass   4: suminf.    0.31611 (6) obj. -57.8021 iterations 11
Cbc0038I Solution found of 173.61
Cbc0038I Rounding solution of -258.197 is better than previous of 173.61

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 93 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -512.6
Cbc0038I Pass   5: suminf.    3.19114 (28) obj. -1491.86 iterations 0
Cbc0038I Pass   6: suminf.    3.19114 (28) obj. -1491.86 iterations 1
Cbc0038I Pass   7: suminf.    1.03283 (11) obj. -512.6 iterations 40
Cbc0038I Pass   8: suminf.    0.94806 (10) obj. -512.6 iterations 3
Cbc0038I Pass   9: suminf.    1.05350 (10) obj. -512.6 iterations 13
Cbc0038I Pass  10: suminf.    1.05350 (10) obj. -512.6 iterations 0
Cbc0038I Pass  11: suminf.    0.70800 (3) obj. -512.6 iterations 11
Cbc0038I Pass  12: suminf.    0.48261 (2) obj. -518.932 iterations 4
Cbc0038I Pass  13: suminf.    0.50163 (2) obj. -512.6 iterations 4
Cbc0038I Pass  14: suminf.    2.67732 (10) obj. -512.6 iterations 23
Cbc0038I Pass  15: suminf.    1.54229 (8) obj. -512.6 iterations 3
Cbc0038I Pass  16: suminf.    1.40543 (7) obj. -592.848 iterations 1
Cbc0038I Pass  17: suminf.    0.89771 (5) obj. -512.6 iterations 10
Cbc0038I Pass  18: suminf.    0.80976 (3) obj. -512.6 iterations 2
Cbc0038I Pass  19: suminf.    0.65277 (3) obj. -539.602 iterations 4
Cbc0038I Pass  20: suminf.    2.88458 (15) obj. -512.6 iterations 21
Cbc0038I Pass  21: suminf.    2.84088 (14) obj. -523.657 iterations 5
Cbc0038I Pass  22: suminf.    2.08952 (6) obj. -512.6 iterations 16
Cbc0038I Pass  23: suminf.    1.15753 (5) obj. -512.6 iterations 13
Cbc0038I Pass  24: suminf.    1.16217 (5) obj. -512.6 iterations 8
Cbc0038I Pass  25: suminf.    1.00653 (6) obj. -512.6 iterations 2
Cbc0038I Pass  26: suminf.    0.27863 (1) obj. -512.6 iterations 10
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -545.545 iterations 5
Cbc0038I Pass  28: suminf.    0.27863 (1) obj. -512.6 iterations 3
Cbc0038I Pass  29: suminf.    3.34352 (13) obj. -512.6 iterations 18
Cbc0038I Pass  30: suminf.    2.07990 (9) obj. -682.3 iterations 6
Cbc0038I Pass  31: suminf.    2.07990 (9) obj. -682.3 iterations 0
Cbc0038I Pass  32: suminf.    0.46049 (2) obj. -512.6 iterations 15
Cbc0038I Pass  33: suminf.    0.46049 (2) obj. -512.6 iterations 0
Cbc0038I Pass  34: suminf.    0.67539 (2) obj. -512.6 iterations 1
Cbc0038I Rounding solution of -326.345 is better than previous of -258.197

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 93 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -326.345 to -411.961 (0.04 seconds)
Cbc0038I Round again with cutoff of -970.524
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.19114 (28) obj. -1491.86 iterations 0
Cbc0038I Pass  35: suminf.    3.19114 (28) obj. -1491.86 iterations 1
Cbc0038I Pass  36: suminf.    1.72044 (18) obj. -970.524 iterations 31
Cbc0038I Pass  37: suminf.    1.71263 (25) obj. -970.524 iterations 1
Cbc0038I Pass  38: suminf.    1.50176 (11) obj. -970.524 iterations 19
Cbc0038I Pass  39: suminf.    1.49795 (11) obj. -970.524 iterations 1
Cbc0038I Pass  40: suminf.    1.16303 (5) obj. -970.524 iterations 18
Cbc0038I Pass  41: suminf.    1.16303 (5) obj. -970.524 iterations 0
Cbc0038I Pass  42: suminf.    1.00187 (3) obj. -970.524 iterations 6
Cbc0038I Pass  43: suminf.    1.00187 (3) obj. -970.524 iterations 1
Cbc0038I Pass  44: suminf.    0.89024 (3) obj. -970.524 iterations 3
Cbc0038I Pass  45: suminf.    0.89024 (3) obj. -970.524 iterations 1
Cbc0038I Pass  46: suminf.    2.38788 (11) obj. -970.524 iterations 16
Cbc0038I Pass  47: suminf.    2.41769 (10) obj. -970.524 iterations 4
Cbc0038I Pass  48: suminf.    0.93049 (5) obj. -970.524 iterations 8
Cbc0038I Pass  49: suminf.    0.62412 (3) obj. -1027.75 iterations 4
Cbc0038I Pass  50: suminf.    0.89024 (3) obj. -970.524 iterations 3
Cbc0038I Pass  51: suminf.    0.89024 (3) obj. -970.524 iterations 0
Cbc0038I Pass  52: suminf.    1.00187 (3) obj. -970.524 iterations 1
Cbc0038I Pass  53: suminf.    1.00187 (3) obj. -970.524 iterations 0
Cbc0038I Pass  54: suminf.    0.89024 (3) obj. -970.524 iterations 2
Cbc0038I Pass  55: suminf.    2.09277 (15) obj. -970.524 iterations 19
Cbc0038I Pass  56: suminf.    2.06168 (10) obj. -970.524 iterations 6
Cbc0038I Pass  57: suminf.    1.14539 (6) obj. -970.524 iterations 9
Cbc0038I Pass  58: suminf.    0.91234 (4) obj. -1020.38 iterations 4
Cbc0038I Pass  59: suminf.    0.89024 (3) obj. -970.524 iterations 6
Cbc0038I Pass  60: suminf.    0.89024 (3) obj. -970.524 iterations 0
Cbc0038I Pass  61: suminf.    1.00187 (3) obj. -970.524 iterations 1
Cbc0038I Pass  62: suminf.    1.00187 (3) obj. -970.524 iterations 0
Cbc0038I Pass  63: suminf.    0.89024 (3) obj. -970.524 iterations 2
Cbc0038I Rounding solution of -420.062 is better than previous of -411.961

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 93 columns, reduced to 23 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -1520.03
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    3.51104 (32) obj. -1520.03 iterations 6
Cbc0038I Pass  64: suminf.    3.40956 (41) obj. -1520.03 iterations 9
Cbc0038I Pass  65: suminf.    3.09939 (16) obj. -1520.03 iterations 32
Cbc0038I Pass  66: suminf.    2.68419 (15) obj. -1520.03 iterations 3
Cbc0038I Pass  67: suminf.    2.42538 (9) obj. -1520.03 iterations 29
Cbc0038I Pass  68: suminf.    2.24770 (9) obj. -1520.03 iterations 2
Cbc0038I Pass  69: suminf.    2.27909 (8) obj. -1520.03 iterations 13
Cbc0038I Pass  70: suminf.    2.04083 (8) obj. -1545.05 iterations 8
Cbc0038I Pass  71: suminf.    3.30013 (13) obj. -1520.03 iterations 12
Cbc0038I Pass  72: suminf.    3.30013 (13) obj. -1520.03 iterations 1
Cbc0038I Pass  73: suminf.    6.48369 (25) obj. -1520.03 iterations 19
Cbc0038I Pass  74: suminf.    6.48369 (25) obj. -1520.03 iterations 2
Cbc0038I Pass  75: suminf.    4.13641 (16) obj. -1520.03 iterations 23
Cbc0038I Pass  76: suminf.    4.13641 (16) obj. -1520.03 iterations 0
Cbc0038I Pass  77: suminf.    4.32795 (14) obj. -1520.03 iterations 16
Cbc0038I Pass  78: suminf.    3.36985 (14) obj. -1520.03 iterations 6
Cbc0038I Pass  79: suminf.    3.36985 (14) obj. -1520.03 iterations 0
Cbc0038I Pass  80: suminf.    4.53216 (13) obj. -1520.03 iterations 11
Cbc0038I Pass  81: suminf.    5.75369 (19) obj. -1520.03 iterations 15
Cbc0038I Pass  82: suminf.    4.96616 (15) obj. -1520.03 iterations 14
Cbc0038I Pass  83: suminf.    4.79034 (15) obj. -1520.03 iterations 1
Cbc0038I Pass  84: suminf.    3.73033 (16) obj. -1520.03 iterations 19
Cbc0038I Pass  85: suminf.    3.72241 (14) obj. -1520.03 iterations 2
Cbc0038I Pass  86: suminf.    5.24630 (14) obj. -1520.03 iterations 12
Cbc0038I Pass  87: suminf.    5.24630 (14) obj. -1520.03 iterations 5
Cbc0038I Pass  88: suminf.    5.24630 (14) obj. -1520.03 iterations 4
Cbc0038I Pass  89: suminf.    5.10419 (17) obj. -1520.03 iterations 21
Cbc0038I Pass  90: suminf.    5.08344 (16) obj. -1520.03 iterations 7
Cbc0038I Pass  91: suminf.    3.44983 (13) obj. -1520.03 iterations 14
Cbc0038I Pass  92: suminf.    3.40765 (12) obj. -1520.03 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 93 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -420.062 - took 0.09 seconds
Cbc0012I Integer solution of -420.0617 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 86 rows 93 columns, reduced to 0 rows 0 columns
Cbc0031I 39 added rows had average density of 12.153846
Cbc0013I At root node, 39 cuts changed objective from -2802.2216 to -600.02885 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4244 row cuts average 4.9 elements, 22 column cuts (22 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 410 row cuts average 57.1 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 447 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 304 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.706 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -420.0617 best solution, best possible -600.02885 (1.70 seconds)
Cbc0004I Integer solution of -473.6657 found after 1839 iterations and 2 nodes (1.74 seconds)
Cbc0016I Integer solution of -500.9147 found by strong branching after 1882 iterations and 3 nodes (1.75 seconds)
Cbc0001I Search completed - best objective -500.9147000000003, took 1905 iterations and 4 nodes (1.75 seconds)
Cbc0032I Strong branching done 128 times (2304 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.76

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-14) rows, 47 (-3) columns and 256 (-29) elements
Clp1000I sum of infeasibilities 2.13002e-05 - average 2.50591e-07, 11 fixed columns
Coin0506I Presolve 55 (-30) rows, 33 (-14) columns and 168 (-88) elements
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 1.6841629 - largest nonzero change 0 ( 0%) - largest zero change 1.199713e-05
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Coin0511I After Postsolve, objective 2387.6579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Clp0000I Optimal - objective value 2387.6579
Coin0511I After Postsolve, objective 2387.6579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2387.657857 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 85 rows, 47 columns (46 integer (46 of which binary)) and 256 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.859%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 10.2542
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 172.108 iterations 28
Cbc0038I Solution found of 172.108
Cbc0038I Relaxing continuous gives 172.108
Cbc0038I Rounding solution of -150.95 is better than previous of 172.108

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -150.95 to -456.675 (0.03 seconds)
Cbc0038I Round again with cutoff of -649.773
Cbc0038I Pass   2: suminf.    1.21796 (5) obj. -649.773 iterations 5
Cbc0038I Pass   3: suminf.    1.40658 (4) obj. -649.773 iterations 8
Cbc0038I Pass   4: suminf.    0.87389 (3) obj. -649.773 iterations 1
Cbc0038I Pass   5: suminf.    1.48377 (5) obj. -649.773 iterations 5
Cbc0038I Pass   6: suminf.    2.12772 (6) obj. -649.773 iterations 6
Cbc0038I Pass   7: suminf.    1.46664 (5) obj. -649.773 iterations 3
Cbc0038I Pass   8: suminf.    1.41022 (4) obj. -649.773 iterations 1
Cbc0038I Pass   9: suminf.    0.97191 (4) obj. -649.773 iterations 4
Cbc0038I Pass  10: suminf.    1.97886 (5) obj. -649.773 iterations 5
Cbc0038I Pass  11: suminf.    1.47447 (4) obj. -649.773 iterations 2
Cbc0038I Pass  12: suminf.    1.21339 (4) obj. -649.773 iterations 6
Cbc0038I Pass  13: suminf.    1.03892 (4) obj. -649.773 iterations 3
Cbc0038I Pass  14: suminf.    2.11680 (6) obj. -649.773 iterations 5
Cbc0038I Pass  15: suminf.    1.59844 (7) obj. -649.773 iterations 3
Cbc0038I Pass  16: suminf.    1.59844 (7) obj. -649.773 iterations 0
Cbc0038I Pass  17: suminf.    1.73938 (5) obj. -649.773 iterations 8
Cbc0038I Pass  18: suminf.    0.87709 (3) obj. -649.773 iterations 3
Cbc0038I Pass  19: suminf.    1.23509 (5) obj. -649.773 iterations 5
Cbc0038I Pass  20: suminf.    1.23509 (5) obj. -649.773 iterations 0
Cbc0038I Pass  21: suminf.    2.08731 (6) obj. -649.773 iterations 4
Cbc0038I Pass  22: suminf.    1.92877 (7) obj. -649.773 iterations 1
Cbc0038I Pass  23: suminf.    1.92877 (7) obj. -649.773 iterations 0
Cbc0038I Pass  24: suminf.    1.34812 (5) obj. -649.773 iterations 12
Cbc0038I Pass  25: suminf.    1.34812 (5) obj. -649.773 iterations 0
Cbc0038I Pass  26: suminf.    1.93994 (6) obj. -649.773 iterations 4
Cbc0038I Pass  27: suminf.    1.93994 (6) obj. -649.773 iterations 0
Cbc0038I Pass  28: suminf.    2.03847 (6) obj. -649.773 iterations 5
Cbc0038I Pass  29: suminf.    1.35527 (5) obj. -649.773 iterations 3
Cbc0038I Pass  30: suminf.    1.34812 (5) obj. -649.773 iterations 5
Cbc0038I Pass  31: suminf.    1.93994 (6) obj. -649.773 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -456.675 - took 0.08 seconds
Cbc0012I Integer solution of -456.6747 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 85 rows 47 columns, reduced to 46 rows 28 columns
Cbc0031I 22 added rows had average density of 25.818182
Cbc0013I At root node, 22 cuts changed objective from -2387.6579 to -1493.9052 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4214 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1264 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0004I Integer solution of -489.7047 found after 4903 iterations and 12 nodes (0.50 seconds)
Cbc0016I Integer solution of -500.9147 found by strong branching after 5052 iterations and 15 nodes (0.51 seconds)
Cbc0001I Search completed - best objective -500.9147000000003, took 5214 iterations and 18 nodes (0.51 seconds)
Cbc0032I Strong branching done 340 times (6731 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 8, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 93 (-4) columns and 1319 (-95) elements
Clp1000I sum of infeasibilities 2.52889e-08 - average 2.94057e-10, 86 fixed columns
Coin0506I Presolve 5 (-81) rows, 7 (-86) columns and 15 (-1304) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -1.9538
Clp0000I Optimal - objective value -1.9538
Coin0511I After Postsolve, objective -1.9538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.4972281 - largest nonzero change 2.3720924e-05 ( 0.00076683715%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 3143.8199
Clp0000I Optimal - objective value 3143.8199
Clp0000I Optimal - objective value 3143.8199
Coin0511I After Postsolve, objective 3143.8199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3143.819907 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 93 columns (93 integer (93 of which binary)) and 1323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.119%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 12.8638
Cbc0038I Pass   1: suminf.    3.19114 (28) obj. -1491.86 iterations 23
Cbc0038I Pass   2: suminf.    3.19114 (28) obj. -1491.86 iterations 1
Cbc0038I Pass   3: suminf.    1.35652 (17) obj. -500.792 iterations 11
Cbc0038I Pass   4: suminf.    0.31611 (6) obj. -57.8021 iterations 11
Cbc0038I Solution found of 173.61
Cbc0038I Rounding solution of -258.197 is better than previous of 173.61

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 93 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -512.6
Cbc0038I Pass   5: suminf.    3.19114 (28) obj. -1491.86 iterations 0
Cbc0038I Pass   6: suminf.    3.19114 (28) obj. -1491.86 iterations 1
Cbc0038I Pass   7: suminf.    1.03283 (11) obj. -512.6 iterations 40
Cbc0038I Pass   8: suminf.    0.94806 (10) obj. -512.6 iterations 3
Cbc0038I Pass   9: suminf.    1.05350 (10) obj. -512.6 iterations 13
Cbc0038I Pass  10: suminf.    1.05350 (10) obj. -512.6 iterations 0
Cbc0038I Pass  11: suminf.    0.70800 (3) obj. -512.6 iterations 11
Cbc0038I Pass  12: suminf.    0.48261 (2) obj. -518.932 iterations 4
Cbc0038I Pass  13: suminf.    0.50163 (2) obj. -512.6 iterations 4
Cbc0038I Pass  14: suminf.    2.67732 (10) obj. -512.6 iterations 23
Cbc0038I Pass  15: suminf.    1.54229 (8) obj. -512.6 iterations 3
Cbc0038I Pass  16: suminf.    1.40543 (7) obj. -592.848 iterations 1
Cbc0038I Pass  17: suminf.    0.89771 (5) obj. -512.6 iterations 10
Cbc0038I Pass  18: suminf.    0.80976 (3) obj. -512.6 iterations 2
Cbc0038I Pass  19: suminf.    0.65277 (3) obj. -539.602 iterations 4
Cbc0038I Pass  20: suminf.    2.88458 (15) obj. -512.6 iterations 21
Cbc0038I Pass  21: suminf.    2.84088 (14) obj. -523.657 iterations 5
Cbc0038I Pass  22: suminf.    2.08952 (6) obj. -512.6 iterations 16
Cbc0038I Pass  23: suminf.    1.15753 (5) obj. -512.6 iterations 13
Cbc0038I Pass  24: suminf.    1.16217 (5) obj. -512.6 iterations 8
Cbc0038I Pass  25: suminf.    1.00653 (6) obj. -512.6 iterations 2
Cbc0038I Pass  26: suminf.    0.27863 (1) obj. -512.6 iterations 10
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -545.545 iterations 5
Cbc0038I Pass  28: suminf.    0.27863 (1) obj. -512.6 iterations 3
Cbc0038I Pass  29: suminf.    3.34352 (13) obj. -512.6 iterations 18
Cbc0038I Pass  30: suminf.    2.07990 (9) obj. -682.3 iterations 6
Cbc0038I Pass  31: suminf.    2.07990 (9) obj. -682.3 iterations 0
Cbc0038I Pass  32: suminf.    0.46049 (2) obj. -512.6 iterations 15
Cbc0038I Pass  33: suminf.    0.46049 (2) obj. -512.6 iterations 0
Cbc0038I Pass  34: suminf.    0.67539 (2) obj. -512.6 iterations 1
Cbc0038I Rounding solution of -326.345 is better than previous of -258.197

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 93 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -326.345 to -411.961 (0.04 seconds)
Cbc0038I Round again with cutoff of -970.524
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.19114 (28) obj. -1491.86 iterations 0
Cbc0038I Pass  35: suminf.    3.19114 (28) obj. -1491.86 iterations 1
Cbc0038I Pass  36: suminf.    1.72044 (18) obj. -970.524 iterations 31
Cbc0038I Pass  37: suminf.    1.71263 (25) obj. -970.524 iterations 1
Cbc0038I Pass  38: suminf.    1.50176 (11) obj. -970.524 iterations 19
Cbc0038I Pass  39: suminf.    1.49795 (11) obj. -970.524 iterations 1
Cbc0038I Pass  40: suminf.    1.16303 (5) obj. -970.524 iterations 18
Cbc0038I Pass  41: suminf.    1.16303 (5) obj. -970.524 iterations 0
Cbc0038I Pass  42: suminf.    1.00187 (3) obj. -970.524 iterations 6
Cbc0038I Pass  43: suminf.    1.00187 (3) obj. -970.524 iterations 1
Cbc0038I Pass  44: suminf.    0.89024 (3) obj. -970.524 iterations 3
Cbc0038I Pass  45: suminf.    0.89024 (3) obj. -970.524 iterations 1
Cbc0038I Pass  46: suminf.    2.38788 (11) obj. -970.524 iterations 16
Cbc0038I Pass  47: suminf.    2.41769 (10) obj. -970.524 iterations 4
Cbc0038I Pass  48: suminf.    0.93049 (5) obj. -970.524 iterations 8
Cbc0038I Pass  49: suminf.    0.62412 (3) obj. -1027.75 iterations 4
Cbc0038I Pass  50: suminf.    0.89024 (3) obj. -970.524 iterations 3
Cbc0038I Pass  51: suminf.    0.89024 (3) obj. -970.524 iterations 0
Cbc0038I Pass  52: suminf.    1.00187 (3) obj. -970.524 iterations 1
Cbc0038I Pass  53: suminf.    1.00187 (3) obj. -970.524 iterations 0
Cbc0038I Pass  54: suminf.    0.89024 (3) obj. -970.524 iterations 2
Cbc0038I Pass  55: suminf.    2.09277 (15) obj. -970.524 iterations 19
Cbc0038I Pass  56: suminf.    2.06168 (10) obj. -970.524 iterations 6
Cbc0038I Pass  57: suminf.    1.14539 (6) obj. -970.524 iterations 9
Cbc0038I Pass  58: suminf.    0.91234 (4) obj. -1020.38 iterations 4
Cbc0038I Pass  59: suminf.    0.89024 (3) obj. -970.524 iterations 6
Cbc0038I Pass  60: suminf.    0.89024 (3) obj. -970.524 iterations 0
Cbc0038I Pass  61: suminf.    1.00187 (3) obj. -970.524 iterations 1
Cbc0038I Pass  62: suminf.    1.00187 (3) obj. -970.524 iterations 0
Cbc0038I Pass  63: suminf.    0.89024 (3) obj. -970.524 iterations 2
Cbc0038I Rounding solution of -420.062 is better than previous of -411.961

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 93 columns, reduced to 23 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -1520.03
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    3.51104 (32) obj. -1520.03 iterations 6
Cbc0038I Pass  64: suminf.    3.40956 (41) obj. -1520.03 iterations 9
Cbc0038I Pass  65: suminf.    3.09939 (16) obj. -1520.03 iterations 32
Cbc0038I Pass  66: suminf.    2.68419 (15) obj. -1520.03 iterations 3
Cbc0038I Pass  67: suminf.    2.42538 (9) obj. -1520.03 iterations 29
Cbc0038I Pass  68: suminf.    2.24770 (9) obj. -1520.03 iterations 2
Cbc0038I Pass  69: suminf.    2.27909 (8) obj. -1520.03 iterations 13
Cbc0038I Pass  70: suminf.    2.04083 (8) obj. -1545.05 iterations 8
Cbc0038I Pass  71: suminf.    3.30013 (13) obj. -1520.03 iterations 12
Cbc0038I Pass  72: suminf.    3.30013 (13) obj. -1520.03 iterations 1
Cbc0038I Pass  73: suminf.    6.48369 (25) obj. -1520.03 iterations 19
Cbc0038I Pass  74: suminf.    6.48369 (25) obj. -1520.03 iterations 2
Cbc0038I Pass  75: suminf.    4.13641 (16) obj. -1520.03 iterations 23
Cbc0038I Pass  76: suminf.    4.13641 (16) obj. -1520.03 iterations 0
Cbc0038I Pass  77: suminf.    4.32795 (14) obj. -1520.03 iterations 16
Cbc0038I Pass  78: suminf.    3.36985 (14) obj. -1520.03 iterations 6
Cbc0038I Pass  79: suminf.    3.36985 (14) obj. -1520.03 iterations 0
Cbc0038I Pass  80: suminf.    4.53216 (13) obj. -1520.03 iterations 11
Cbc0038I Pass  81: suminf.    5.75369 (19) obj. -1520.03 iterations 15
Cbc0038I Pass  82: suminf.    4.96616 (15) obj. -1520.03 iterations 14
Cbc0038I Pass  83: suminf.    4.79034 (15) obj. -1520.03 iterations 1
Cbc0038I Pass  84: suminf.    3.73033 (16) obj. -1520.03 iterations 19
Cbc0038I Pass  85: suminf.    3.72241 (14) obj. -1520.03 iterations 2
Cbc0038I Pass  86: suminf.    5.24630 (14) obj. -1520.03 iterations 12
Cbc0038I Pass  87: suminf.    5.24630 (14) obj. -1520.03 iterations 5
Cbc0038I Pass  88: suminf.    5.24630 (14) obj. -1520.03 iterations 4
Cbc0038I Pass  89: suminf.    5.10419 (17) obj. -1520.03 iterations 21
Cbc0038I Pass  90: suminf.    5.08344 (16) obj. -1520.03 iterations 7
Cbc0038I Pass  91: suminf.    3.44983 (13) obj. -1520.03 iterations 14
Cbc0038I Pass  92: suminf.    3.40765 (12) obj. -1520.03 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 93 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -420.062 - took 0.09 seconds
Cbc0012I Integer solution of -420.0617 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 86 rows 93 columns, reduced to 0 rows 0 columns
Cbc0031I 39 added rows had average density of 12.153846
Cbc0013I At root node, 39 cuts changed objective from -2802.2216 to -600.02885 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4244 row cuts average 4.9 elements, 22 column cuts (22 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 410 row cuts average 57.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 447 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 304 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.705 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -420.0617 best solution, best possible -600.02885 (1.71 seconds)
Cbc0004I Integer solution of -473.6657 found after 1839 iterations and 2 nodes (1.75 seconds)
Cbc0016I Integer solution of -500.9147 found by strong branching after 1882 iterations and 3 nodes (1.75 seconds)
Cbc0001I Search completed - best objective -500.9147000000003, took 1905 iterations and 4 nodes (1.75 seconds)
Cbc0032I Strong branching done 128 times (2304 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.25   (Wallclock seconds):       1.76

