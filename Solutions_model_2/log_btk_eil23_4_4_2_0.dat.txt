Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 0.000239634 - average 6.14446e-06, 12 fixed columns
Coin0506I Presolve 9 (-30) rows, 10 (-12) columns and 32 (-82) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 7675.5949
Clp0000I Optimal - objective value 7675.5949
Coin0511I After Postsolve, objective 7675.5949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1009158 - largest nonzero change 1.3784032e-05 ( 0.00055854008%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 7675.5949
Clp0000I Optimal - objective value 7675.5949
Clp0000I Optimal - objective value 7675.5949
Coin0511I After Postsolve, objective 7675.5949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7675.594919 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.963901
Cbc0038I Pass   1: suminf.    0.12636 (1) obj. -6481.98 iterations 10
Cbc0038I Solution found of -5383.33
Cbc0038I Relaxing continuous gives -5383.33
Cbc0038I Rounding solution of -5930.51 is better than previous of -5383.33

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5999.74
Cbc0038I Pass   2: suminf.    0.12636 (1) obj. -6481.98 iterations 0
Cbc0038I Pass   3: suminf.    0.39719 (3) obj. -5999.74 iterations 2
Cbc0038I Pass   4: suminf.    0.27671 (1) obj. -6188.8 iterations 3
Cbc0038I Pass   5: suminf.    0.24120 (1) obj. -5999.74 iterations 1
Cbc0038I Pass   6: suminf.    0.41412 (2) obj. -6216.65 iterations 5
Cbc0038I Pass   7: suminf.    0.30377 (2) obj. -5999.74 iterations 3
Cbc0038I Pass   8: suminf.    0.40425 (2) obj. -6278.48 iterations 2
Cbc0038I Pass   9: suminf.    0.28349 (2) obj. -5999.74 iterations 1
Cbc0038I Pass  10: suminf.    0.30377 (2) obj. -5999.74 iterations 2
Cbc0038I Pass  11: suminf.    0.86873 (3) obj. -6097.18 iterations 5
Cbc0038I Pass  12: suminf.    0.31202 (1) obj. -5999.74 iterations 5
Cbc0038I Pass  13: suminf.    0.31407 (1) obj. -6010.68 iterations 1
Cbc0038I Pass  14: suminf.    0.36113 (2) obj. -5999.74 iterations 3
Cbc0038I Pass  15: suminf.    0.51099 (2) obj. -6121.79 iterations 3
Cbc0038I Pass  16: suminf.    0.45811 (2) obj. -5999.74 iterations 1
Cbc0038I Pass  17: suminf.    0.36113 (2) obj. -5999.74 iterations 2
Cbc0038I Pass  18: suminf.    0.36113 (2) obj. -5999.74 iterations 0
Cbc0038I Pass  19: suminf.    0.46872 (3) obj. -5999.74 iterations 8
Cbc0038I Pass  20: suminf.    0.46872 (3) obj. -5999.74 iterations 2
Cbc0038I Pass  21: suminf.    0.63097 (3) obj. -5999.74 iterations 3
Cbc0038I Pass  22: suminf.    0.63097 (3) obj. -5999.74 iterations 0
Cbc0038I Pass  23: suminf.    0.46872 (3) obj. -5999.74 iterations 3
Cbc0038I Pass  24: suminf.    0.10737 (3) obj. -6079.47 iterations 14
Cbc0038I Pass  25: suminf.    0.05333 (2) obj. -6073.08 iterations 6
Cbc0038I Pass  26: suminf.    0.73388 (2) obj. -5999.74 iterations 3
Cbc0038I Pass  27: suminf.    0.52643 (2) obj. -6106.28 iterations 2
Cbc0038I Pass  28: suminf.    0.48027 (2) obj. -5999.74 iterations 1
Cbc0038I Pass  29: suminf.    0.73388 (2) obj. -5999.74 iterations 2
Cbc0038I Pass  30: suminf.    0.66609 (2) obj. -5999.74 iterations 8
Cbc0038I Pass  31: suminf.    0.46596 (3) obj. -5999.74 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5930.51 - took 0.01 seconds
Cbc0012I Integer solution of -5930.5091 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -5974.7571 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 39 rows 22 columns, reduced to 8 rows 9 columns
Cbc0012I Integer solution of -6339.5742 found by DiveCoefficient after 883 iterations and 0 nodes (1.31 seconds)
Cbc0031I 8 added rows had average density of 16.625
Cbc0013I At root node, 8 cuts changed objective from -6622.819 to -6456.9827 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 193 row cuts average 2.9 elements, 4 column cuts (4 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 355 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 70 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.706 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6339.5742 best solution, best possible -6456.9827 (1.31 seconds)
Cbc0012I Integer solution of -6378.9061 found by DiveCoefficient after 885 iterations and 1 nodes (1.32 seconds)
Cbc0012I Integer solution of -6380.5031 found by DiveCoefficient after 1271 iterations and 12 nodes (1.35 seconds)
Cbc0001I Search completed - best objective -6380.5031, took 1292 iterations and 12 nodes (1.35 seconds)
Cbc0032I Strong branching done 98 times (332 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       1.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 39 (-7) columns and 302 (-86) elements
Clp1000I sum of infeasibilities 3.43243e-08 - average 9.53454e-10, 33 fixed columns
Coin0506I Presolve 5 (-31) rows, 6 (-33) columns and 17 (-285) elements
Clp0006I 0  Obj 7666.9557 Dual inf 384.40865 (6)
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 7667.3217
Clp0000I Optimal - objective value 7667.3217
Coin0511I After Postsolve, objective 7667.3217, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 7667.3217 Dual inf 2098.1633 (18)
Clp0014I Perturbing problem by 0.001% of 0.16667924 - largest nonzero change 0 ( 0%) - largest zero change 2.5139777e-05
Clp0000I Optimal - objective value 7734.5589
Clp0000I Optimal - objective value 7734.5589
Clp0000I Optimal - objective value 7734.5589
Coin0511I After Postsolve, objective 7734.5589, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7734.558922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 40 columns (40 integer (40 of which binary)) and 308 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.611%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.68555
Cbc0038I Pass   1: suminf.    0.37636 (2) obj. -6493.98 iterations 16
Cbc0038I Solution found of -5383.33
Cbc0038I Rounding solution of -5930.51 is better than previous of -5383.33

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -5930.51 to -6124.25 (0.02 seconds)
Cbc0038I Round again with cutoff of -6176.04
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.37636 (2) obj. -6493.98 iterations 0
Cbc0038I Pass   3: suminf.    0.36964 (1) obj. -6176.04 iterations 2
Cbc0038I Pass   4: suminf.    0.12636 (1) obj. -6481.98 iterations 1
Cbc0038I Pass   5: suminf.    2.09728 (6) obj. -6176.04 iterations 11
Cbc0038I Pass   6: suminf.    0.14165 (6) obj. -6176.04 iterations 7
Cbc0038I Pass   7: suminf.    0.78220 (3) obj. -6176.04 iterations 6
Cbc0038I Pass   8: suminf.    0.78220 (3) obj. -6176.04 iterations 0
Cbc0038I Pass   9: suminf.    0.33636 (1) obj. -6317.73 iterations 2
Cbc0038I Pass  10: suminf.    0.04539 (2) obj. -6176.04 iterations 2
Cbc0038I Pass  11: suminf.    0.99375 (6) obj. -6176.04 iterations 8
Cbc0038I Pass  12: suminf.    0.06949 (4) obj. -6176.04 iterations 5
Cbc0038I Pass  13: suminf.    0.78220 (3) obj. -6176.04 iterations 4
Cbc0038I Pass  14: suminf.    0.78220 (3) obj. -6176.04 iterations 0
Cbc0038I Pass  15: suminf.    0.33636 (1) obj. -6317.73 iterations 2
Cbc0038I Pass  16: suminf.    0.04539 (2) obj. -6176.04 iterations 2
Cbc0038I Pass  17: suminf.    0.77143 (5) obj. -6176.04 iterations 11
Cbc0038I Pass  18: suminf.    0.25764 (3) obj. -6176.04 iterations 2
Cbc0038I Pass  19: suminf.    0.53236 (3) obj. -6176.04 iterations 1
Cbc0038I Pass  20: suminf.    2.01717 (7) obj. -6176.04 iterations 8
Cbc0038I Pass  21: suminf.    1.40582 (5) obj. -6176.04 iterations 3
Cbc0038I Pass  22: suminf.    0.71818 (2) obj. -6195.01 iterations 2
Cbc0038I Pass  23: suminf.    0.53135 (4) obj. -6176.04 iterations 3
Cbc0038I Pass  24: suminf.    0.86203 (4) obj. -6176.04 iterations 3
Cbc0038I Pass  25: suminf.    0.44748 (3) obj. -6176.04 iterations 1
Cbc0038I Pass  26: suminf.    0.55024 (3) obj. -6176.04 iterations 4
Cbc0038I Pass  27: suminf.    0.55024 (3) obj. -6176.04 iterations 0
Cbc0038I Pass  28: suminf.    0.44748 (3) obj. -6176.04 iterations 1
Cbc0038I Pass  29: suminf.    2.50563 (9) obj. -6176.04 iterations 14
Cbc0038I Pass  30: suminf.    0.84091 (3) obj. -6363.98 iterations 8
Cbc0038I Pass  31: suminf.    3.96562 (12) obj. -6176.04 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 10 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -6124.25 to -6380.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -6432.83
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.37636 (2) obj. -6493.98 iterations 0
Cbc0038I Pass  32: suminf.    0.16545 (1) obj. -6432.83 iterations 2
Cbc0038I Pass  33: suminf.    0.12636 (1) obj. -6481.98 iterations 1
Cbc0038I Pass  34: suminf.    3.06917 (11) obj. -6432.83 iterations 14
Cbc0038I Pass  35: suminf.    1.15803 (5) obj. -6432.83 iterations 8
Cbc0038I Pass  36: suminf.    1.13386 (5) obj. -6432.83 iterations 2
Cbc0038I Pass  37: suminf.    0.68259 (2) obj. -6432.83 iterations 5
Cbc0038I Pass  38: suminf.    0.32791 (2) obj. -6432.83 iterations 2
Cbc0038I Pass  39: suminf.    0.98487 (4) obj. -6432.83 iterations 3
Cbc0038I Pass  40: suminf.    0.57081 (3) obj. -6432.83 iterations 2
Cbc0038I Pass  41: suminf.    0.84322 (5) obj. -6432.83 iterations 3
Cbc0038I Pass  42: suminf.    0.66364 (4) obj. -6432.83 iterations 1
Cbc0038I Pass  43: suminf.    2.50836 (8) obj. -6432.83 iterations 8
Cbc0038I Pass  44: suminf.    0.95787 (4) obj. -6432.83 iterations 6
Cbc0038I Pass  45: suminf.    0.77628 (4) obj. -6432.83 iterations 2
Cbc0038I Pass  46: suminf.    0.66686 (2) obj. -6432.83 iterations 4
Cbc0038I Pass  47: suminf.    0.34968 (2) obj. -6432.83 iterations 2
Cbc0038I Pass  48: suminf.    1.61035 (6) obj. -6432.83 iterations 8
Cbc0038I Pass  49: suminf.    0.39000 (3) obj. -6432.83 iterations 5
Cbc0038I Pass  50: suminf.    0.14299 (3) obj. -6432.83 iterations 3
Cbc0038I Pass  51: suminf.    0.14299 (3) obj. -6432.83 iterations 0
Cbc0038I Pass  52: suminf.    0.11563 (3) obj. -6432.83 iterations 3
Cbc0038I Pass  53: suminf.    0.11563 (3) obj. -6432.83 iterations 0
Cbc0038I Pass  54: suminf.    0.55980 (2) obj. -6432.83 iterations 3
Cbc0038I Pass  55: suminf.    0.11666 (2) obj. -6432.83 iterations 2
Cbc0038I Pass  56: suminf.    1.76667 (6) obj. -6432.83 iterations 13
Cbc0038I Pass  57: suminf.    0.66807 (4) obj. -6432.83 iterations 7
Cbc0038I Pass  58: suminf.    0.60497 (2) obj. -6432.83 iterations 2
Cbc0038I Pass  59: suminf.    0.12636 (1) obj. -6446.98 iterations 2
Cbc0038I Pass  60: suminf.    0.13761 (1) obj. -6432.83 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 9 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -6380.5 - took 0.02 seconds
Cbc0012I Integer solution of -6380.5031 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 40 columns, reduced to 3 rows 5 columns
Cbc0031I 9 added rows had average density of 16.888889
Cbc0013I At root node, 9 cuts changed objective from -6642.1446 to -6460.7109 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 2.0 elements, 11 column cuts (11 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 84 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 69 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6380.5031 best solution, best possible -6460.7109 (0.35 seconds)
Cbc0001I Search completed - best objective -6380.5031, took 302 iterations and 6 nodes (0.37 seconds)
Cbc0032I Strong branching done 60 times (256 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 22 (-3) columns and 114 (-21) elements
Clp1000I sum of infeasibilities 0.000239634 - average 6.14446e-06, 12 fixed columns
Coin0506I Presolve 9 (-30) rows, 10 (-12) columns and 32 (-82) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 7675.5949
Clp0000I Optimal - objective value 7675.5949
Coin0511I After Postsolve, objective 7675.5949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1009158 - largest nonzero change 1.3784032e-05 ( 0.00055854008%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 7675.5949
Clp0000I Optimal - objective value 7675.5949
Clp0000I Optimal - objective value 7675.5949
Coin0511I After Postsolve, objective 7675.5949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7675.594919 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 22 columns (21 integer (21 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.963901
Cbc0038I Pass   1: suminf.    0.12636 (1) obj. -6481.98 iterations 10
Cbc0038I Solution found of -5383.33
Cbc0038I Relaxing continuous gives -5383.33
Cbc0038I Rounding solution of -5930.51 is better than previous of -5383.33

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -5999.74
Cbc0038I Pass   2: suminf.    0.12636 (1) obj. -6481.98 iterations 0
Cbc0038I Pass   3: suminf.    0.39719 (3) obj. -5999.74 iterations 2
Cbc0038I Pass   4: suminf.    0.27671 (1) obj. -6188.8 iterations 3
Cbc0038I Pass   5: suminf.    0.24120 (1) obj. -5999.74 iterations 1
Cbc0038I Pass   6: suminf.    0.41412 (2) obj. -6216.65 iterations 5
Cbc0038I Pass   7: suminf.    0.30377 (2) obj. -5999.74 iterations 3
Cbc0038I Pass   8: suminf.    0.40425 (2) obj. -6278.48 iterations 2
Cbc0038I Pass   9: suminf.    0.28349 (2) obj. -5999.74 iterations 1
Cbc0038I Pass  10: suminf.    0.30377 (2) obj. -5999.74 iterations 2
Cbc0038I Pass  11: suminf.    0.86873 (3) obj. -6097.18 iterations 5
Cbc0038I Pass  12: suminf.    0.31202 (1) obj. -5999.74 iterations 5
Cbc0038I Pass  13: suminf.    0.31407 (1) obj. -6010.68 iterations 1
Cbc0038I Pass  14: suminf.    0.36113 (2) obj. -5999.74 iterations 3
Cbc0038I Pass  15: suminf.    0.51099 (2) obj. -6121.79 iterations 3
Cbc0038I Pass  16: suminf.    0.45811 (2) obj. -5999.74 iterations 1
Cbc0038I Pass  17: suminf.    0.36113 (2) obj. -5999.74 iterations 2
Cbc0038I Pass  18: suminf.    0.36113 (2) obj. -5999.74 iterations 0
Cbc0038I Pass  19: suminf.    0.46872 (3) obj. -5999.74 iterations 8
Cbc0038I Pass  20: suminf.    0.46872 (3) obj. -5999.74 iterations 2
Cbc0038I Pass  21: suminf.    0.63097 (3) obj. -5999.74 iterations 3
Cbc0038I Pass  22: suminf.    0.63097 (3) obj. -5999.74 iterations 0
Cbc0038I Pass  23: suminf.    0.46872 (3) obj. -5999.74 iterations 3
Cbc0038I Pass  24: suminf.    0.10737 (3) obj. -6079.47 iterations 14
Cbc0038I Pass  25: suminf.    0.05333 (2) obj. -6073.08 iterations 6
Cbc0038I Pass  26: suminf.    0.73388 (2) obj. -5999.74 iterations 3
Cbc0038I Pass  27: suminf.    0.52643 (2) obj. -6106.28 iterations 2
Cbc0038I Pass  28: suminf.    0.48027 (2) obj. -5999.74 iterations 1
Cbc0038I Pass  29: suminf.    0.73388 (2) obj. -5999.74 iterations 2
Cbc0038I Pass  30: suminf.    0.66609 (2) obj. -5999.74 iterations 8
Cbc0038I Pass  31: suminf.    0.46596 (3) obj. -5999.74 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 22 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -5930.51 - took 0.01 seconds
Cbc0012I Integer solution of -5930.5091 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -5974.7571 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 39 rows 22 columns, reduced to 8 rows 9 columns
Cbc0012I Integer solution of -6339.5742 found by DiveCoefficient after 883 iterations and 0 nodes (1.45 seconds)
Cbc0031I 8 added rows had average density of 16.625
Cbc0013I At root node, 8 cuts changed objective from -6622.819 to -6456.9827 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 193 row cuts average 2.9 elements, 4 column cuts (4 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 355 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 70 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.756 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6339.5742 best solution, best possible -6456.9827 (1.45 seconds)
Cbc0012I Integer solution of -6378.9061 found by DiveCoefficient after 885 iterations and 1 nodes (1.45 seconds)
Cbc0012I Integer solution of -6380.5031 found by DiveCoefficient after 1271 iterations and 12 nodes (1.48 seconds)
Cbc0001I Search completed - best objective -6380.5031, took 1292 iterations and 12 nodes (1.48 seconds)
Cbc0032I Strong branching done 98 times (332 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       1.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 38 (-9) columns and 292 (-97) elements
Clp1000I sum of infeasibilities 4.57464e-10 - average 1.30704e-11, 34 fixed columns
Coin0506I Presolve 4 (-31) rows, 4 (-34) columns and 12 (-280) elements
Clp0006I 0  Obj 7667.3217 Dual inf 314.07348 (4)
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 7667.3217
Clp0000I Optimal - objective value 7667.3217
Coin0511I After Postsolve, objective 7667.3217, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 7667.3217 Dual inf 643.41183 (18)
Clp0014I Perturbing problem by 0.001% of 1.4478096 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 7734.5589
Clp0000I Optimal - objective value 7734.5589
Clp0000I Optimal - objective value 7734.5589
Coin0511I After Postsolve, objective 7734.5589, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7734.558922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 40 columns (40 integer (40 of which binary)) and 315 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.611%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.8705
Cbc0038I Pass   1: suminf.    0.37636 (2) obj. -6493.98 iterations 10
Cbc0038I Solution found of -5383.33
Cbc0038I Rounding solution of -5930.51 is better than previous of -5383.33

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -5930.51 to -6124.25 (0.02 seconds)
Cbc0038I Round again with cutoff of -6174.78
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.37636 (2) obj. -6493.98 iterations 0
Cbc0038I Pass   3: suminf.    0.37065 (1) obj. -6174.78 iterations 2
Cbc0038I Pass   4: suminf.    0.12636 (1) obj. -6481.98 iterations 1
Cbc0038I Pass   5: suminf.    1.38105 (4) obj. -6174.78 iterations 7
Cbc0038I Pass   6: suminf.    0.17858 (1) obj. -6174.78 iterations 4
Cbc0038I Pass   7: suminf.    0.26000 (2) obj. -6439.02 iterations 3
Cbc0038I Pass   8: suminf.    0.29838 (1) obj. -6174.78 iterations 2
Cbc0038I Pass   9: suminf.    0.29838 (1) obj. -6174.78 iterations 0
Cbc0038I Pass  10: suminf.    0.67364 (3) obj. -6174.78 iterations 5
Cbc0038I Pass  11: suminf.    0.32667 (1) obj. -6174.78 iterations 3
Cbc0038I Pass  12: suminf.    0.26000 (2) obj. -6419.02 iterations 2
Cbc0038I Pass  13: suminf.    0.32667 (1) obj. -6174.78 iterations 2
Cbc0038I Pass  14: suminf.    1.49891 (7) obj. -6174.78 iterations 12
Cbc0038I Pass  15: suminf.    0.25000 (1) obj. -6247.76 iterations 7
Cbc0038I Solution found of -6235.76
Cbc0038I Rounding solution of -6255.76 is better than previous of -6235.76

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6330.51
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 3
Cbc0038I Pass  16: suminf.    0.37636 (2) obj. -6493.98 iterations 0
Cbc0038I Pass  17: suminf.    0.24681 (1) obj. -6330.51 iterations 2
Cbc0038I Pass  18: suminf.    0.12636 (1) obj. -6481.98 iterations 1
Cbc0038I Pass  19: suminf.    1.62515 (6) obj. -6395.3 iterations 9
Cbc0038I Pass  20: suminf.    0.51000 (3) obj. -6441.02 iterations 6
Cbc0038I Pass  21: suminf.    0.44076 (2) obj. -6330.51 iterations 2
Cbc0038I Pass  22: suminf.    0.26000 (2) obj. -6429.02 iterations 1
Cbc0038I Pass  23: suminf.    1.53826 (7) obj. -6330.51 iterations 9
Cbc0038I Pass  24: suminf.    0.93623 (4) obj. -6359.31 iterations 5
Cbc0038I Pass  25: suminf.    0.35844 (2) obj. -6330.51 iterations 3
Cbc0038I Pass  26: suminf.    0.12636 (1) obj. -6456.98 iterations 1
Cbc0038I Pass  27: suminf.    0.22693 (1) obj. -6330.51 iterations 1
Cbc0038I Pass  28: suminf.    1.20362 (5) obj. -6330.51 iterations 10
Cbc0038I Pass  29: suminf.    0.25000 (1) obj. -6333.17 iterations 6
Cbc0038I Pass  30: suminf.    0.01712 (2) obj. -6330.51 iterations 3
Cbc0038I Pass  31: suminf.    0.22273 (1) obj. -6469.36 iterations 2
Cbc0038I Pass  32: suminf.    0.03322 (1) obj. -6330.51 iterations 1
Cbc0038I Pass  33: suminf.    1.54268 (6) obj. -6330.51 iterations 10
Cbc0038I Pass  34: suminf.    0.80680 (4) obj. -6330.51 iterations 3
Cbc0038I Pass  35: suminf.    0.89399 (2) obj. -6330.51 iterations 5
Cbc0038I Pass  36: suminf.    0.12059 (1) obj. -6330.51 iterations 3
Cbc0038I Pass  37: suminf.    0.27727 (1) obj. -6445.31 iterations 1
Cbc0038I Pass  38: suminf.    1.56746 (6) obj. -6330.51 iterations 5
Cbc0038I Pass  39: suminf.    0.37894 (4) obj. -6330.51 iterations 5
Cbc0038I Pass  40: suminf.    0.88617 (2) obj. -6347.88 iterations 4
Cbc0038I Pass  41: suminf.    0.85875 (2) obj. -6330.51 iterations 1
Cbc0038I Pass  42: suminf.    1.38760 (5) obj. -6330.51 iterations 3
Cbc0038I Pass  43: suminf.    0.85875 (2) obj. -6330.51 iterations 3
Cbc0038I Pass  44: suminf.    0.93808 (5) obj. -6330.51 iterations 9
Cbc0038I Pass  45: suminf.    0.65489 (3) obj. -6330.51 iterations 2
Cbc0038I Rounding solution of -6380.5 is better than previous of -6255.76

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 11 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -6455.21
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 4
Cbc0038I Pass  45: suminf.    0.37636 (2) obj. -6493.98 iterations 0
Cbc0038I Pass  46: suminf.    0.14765 (1) obj. -6455.21 iterations 2
Cbc0038I Pass  47: suminf.    0.12636 (1) obj. -6481.98 iterations 1
Cbc0038I Pass  48: suminf.    0.89206 (3) obj. -6455.21 iterations 3
Cbc0038I Pass  49: suminf.    0.64257 (2) obj. -6455.21 iterations 3
Cbc0038I Pass  50: suminf.    0.60089 (2) obj. -6525.84 iterations 1
Cbc0038I Pass  51: suminf.    0.51533 (2) obj. -6455.21 iterations 1
Cbc0038I Pass  52: suminf.    0.51533 (2) obj. -6455.21 iterations 0
Cbc0038I Pass  53: suminf.    0.87728 (3) obj. -6455.21 iterations 5
Cbc0038I Pass  54: suminf.    0.87723 (3) obj. -6455.21 iterations 3
Cbc0038I Pass  55: suminf.    0.53709 (2) obj. -6455.21 iterations 3
Cbc0038I Pass  56: suminf.    0.63667 (2) obj. -6455.21 iterations 1
Cbc0038I Pass  57: suminf.    0.60089 (2) obj. -6515.84 iterations 1
Cbc0038I Pass  58: suminf.    0.53709 (2) obj. -6455.21 iterations 1
Cbc0038I Pass  59: suminf.    1.64089 (6) obj. -6455.21 iterations 6
Cbc0038I Pass  60: suminf.    0.86464 (3) obj. -6455.21 iterations 3
Cbc0038I Pass  61: suminf.    0.65711 (3) obj. -6455.21 iterations 3
Cbc0038I Pass  62: suminf.    0.63165 (2) obj. -6455.21 iterations 2
Cbc0038I Pass  63: suminf.    0.39837 (2) obj. -6455.21 iterations 2
Cbc0038I Pass  64: suminf.    0.99195 (4) obj. -6455.21 iterations 6
Cbc0038I Pass  65: suminf.    0.72625 (3) obj. -6455.21 iterations 2
Cbc0038I Pass  66: suminf.    0.53376 (2) obj. -6517.43 iterations 3
Cbc0038I Pass  67: suminf.    0.75163 (4) obj. -6455.21 iterations 5
Cbc0038I Pass  68: suminf.    0.75163 (4) obj. -6455.21 iterations 1
Cbc0038I Pass  69: suminf.    0.63165 (2) obj. -6455.21 iterations 4
Cbc0038I Pass  70: suminf.    0.39837 (2) obj. -6455.21 iterations 2
Cbc0038I Pass  71: suminf.    0.82321 (3) obj. -6455.21 iterations 3
Cbc0038I Pass  72: suminf.    0.39091 (1) obj. -6487.7 iterations 2
Cbc0038I Pass  73: suminf.    0.43526 (1) obj. -6455.21 iterations 1
Cbc0038I Pass  74: suminf.    1.14058 (3) obj. -6455.21 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -6380.5 - took 0.02 seconds
Cbc0012I Integer solution of -6380.5031 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 37 rows 40 columns, reduced to 3 rows 5 columns
Cbc0031I 8 added rows had average density of 14.25
Cbc0013I At root node, 8 cuts changed objective from -6629.5145 to -6469.8179 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.9 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 73 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6380.5031 best solution, best possible -6469.8179 (0.23 seconds)
Cbc0001I Search completed - best objective -6380.5031, took 197 iterations and 6 nodes (0.24 seconds)
Cbc0032I Strong branching done 62 times (260 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.25

