Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 32 (-3) columns and 171 (-24) elements
Clp1000I sum of infeasibilities 1.89465e-05 - average 3.32394e-07, 3 fixed columns
Coin0506I Presolve 51 (-6) rows, 29 (-3) columns and 153 (-18) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Coin0511I After Postsolve, objective 100.10517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Coin0511I After Postsolve, objective 100.10517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.1051685 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 32 columns (31 integer (31 of which binary)) and 171 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.644%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.6319
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.0663 iterations 22
Cbc0038I Solution found of -20.0663
Cbc0038I Relaxing continuous gives -20.0663
Cbc0038I Rounding solution of -30.5067 is better than previous of -20.0663

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -30.5067 to -48.8965 (0.02 seconds)
Cbc0038I Round again with cutoff of -54.0174
Cbc0038I Pass   2: suminf.    0.32653 (3) obj. -54.0174 iterations 3
Cbc0038I Pass   3: suminf.    0.32653 (3) obj. -54.0174 iterations 0
Cbc0038I Pass   4: suminf.    0.25188 (2) obj. -54.0174 iterations 4
Cbc0038I Pass   5: suminf.    0.25188 (2) obj. -54.0174 iterations 0
Cbc0038I Pass   6: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass   7: suminf.    0.45040 (2) obj. -54.0174 iterations 0
Cbc0038I Pass   8: suminf.    0.78336 (3) obj. -54.0174 iterations 3
Cbc0038I Pass   9: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass  10: suminf.    2.07203 (6) obj. -54.0174 iterations 7
Cbc0038I Pass  11: suminf.    1.68098 (6) obj. -54.0174 iterations 4
Cbc0038I Pass  12: suminf.    1.31304 (5) obj. -54.0174 iterations 3
Cbc0038I Pass  13: suminf.    1.90032 (6) obj. -54.0174 iterations 6
Cbc0038I Pass  14: suminf.    0.45939 (2) obj. -54.0174 iterations 6
Cbc0038I Pass  15: suminf.    0.45040 (2) obj. -54.0174 iterations 1
Cbc0038I Pass  16: suminf.    0.78336 (3) obj. -54.0174 iterations 3
Cbc0038I Pass  17: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass  18: suminf.    0.78336 (3) obj. -54.0174 iterations 4
Cbc0038I Pass  19: suminf.    2.60991 (8) obj. -54.0174 iterations 10
Cbc0038I Pass  20: suminf.    0.84743 (4) obj. -54.0174 iterations 5
Cbc0038I Pass  21: suminf.    0.84743 (4) obj. -54.0174 iterations 0
Cbc0038I Pass  22: suminf.    0.85598 (3) obj. -54.0174 iterations 4
Cbc0038I Pass  23: suminf.    0.18127 (1) obj. -54.0174 iterations 4
Cbc0038I Pass  24: suminf.    0.18127 (1) obj. -54.0174 iterations 1
Cbc0038I Pass  25: suminf.    0.42446 (1) obj. -54.0174 iterations 2
Cbc0038I Pass  26: suminf.    2.06009 (6) obj. -54.0174 iterations 5
Cbc0038I Pass  27: suminf.    1.88225 (6) obj. -54.0174 iterations 5
Cbc0038I Pass  28: suminf.    0.92207 (3) obj. -54.0174 iterations 5
Cbc0038I Pass  29: suminf.    0.92207 (3) obj. -54.0174 iterations 0
Cbc0038I Pass  30: suminf.    0.31514 (3) obj. -54.0174 iterations 3
Cbc0038I Pass  31: suminf.    0.31514 (3) obj. -54.0174 iterations 0
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -63.235
Cbc0038I Pass  31: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  32: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  33: suminf.    0.58472 (2) obj. -63.235 iterations 3
Cbc0038I Pass  34: suminf.    0.57565 (3) obj. -63.235 iterations 2
Cbc0038I Pass  35: suminf.    1.02020 (3) obj. -63.235 iterations 5
Cbc0038I Pass  36: suminf.    0.77668 (2) obj. -63.235 iterations 2
Cbc0038I Pass  37: suminf.    0.77668 (2) obj. -63.235 iterations 0
Cbc0038I Pass  38: suminf.    2.83083 (8) obj. -63.235 iterations 7
Cbc0038I Pass  39: suminf.    1.73120 (7) obj. -63.235 iterations 7
Cbc0038I Pass  40: suminf.    1.73120 (7) obj. -63.235 iterations 0
Cbc0038I Pass  41: suminf.    1.10746 (3) obj. -63.235 iterations 7
Cbc0038I Pass  42: suminf.    0.65280 (3) obj. -63.235 iterations 3
Cbc0038I Pass  43: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  44: suminf.    0.58472 (2) obj. -63.235 iterations 3
Cbc0038I Pass  45: suminf.    0.57565 (3) obj. -63.235 iterations 2
Cbc0038I Pass  46: suminf.    1.02020 (3) obj. -63.235 iterations 5
Cbc0038I Pass  47: suminf.    0.77668 (2) obj. -63.235 iterations 2
Cbc0038I Pass  48: suminf.    0.77668 (2) obj. -63.235 iterations 0
Cbc0038I Pass  49: suminf.    1.01469 (3) obj. -63.235 iterations 8
Cbc0038I Pass  50: suminf.    1.01469 (3) obj. -63.235 iterations 0
Cbc0038I Pass  51: suminf.    0.96756 (3) obj. -63.235 iterations 2
Cbc0038I Pass  52: suminf.    0.95316 (3) obj. -63.235 iterations 1
Cbc0038I Pass  53: suminf.    0.95233 (3) obj. -63.235 iterations 2
Cbc0038I Pass  54: suminf.    0.67287 (4) obj. -63.235 iterations 2
Cbc0038I Pass  55: suminf.    1.04684 (4) obj. -63.235 iterations 5
Cbc0038I Pass  56: suminf.    0.88307 (3) obj. -63.235 iterations 1
Cbc0038I Pass  57: suminf.    0.71592 (3) obj. -63.235 iterations 1
Cbc0038I Pass  58: suminf.    0.82051 (3) obj. -63.235 iterations 2
Cbc0038I Pass  59: suminf.    0.53505 (4) obj. -63.235 iterations 2
Cbc0038I Pass  60: suminf.    1.81893 (5) obj. -63.235 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -48.8965 - took 0.07 seconds
Cbc0012I Integer solution of -48.89648 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 57 rows 32 columns, reduced to 39 rows 23 columns
Cbc0031I 14 added rows had average density of 24.142857
Cbc0013I At root node, 14 cuts changed objective from -100.10517 to -73.959696 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1688 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 774 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 148 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48.89648, took 3057 iterations and 14 nodes (0.27 seconds)
Cbc0032I Strong branching done 158 times (1551 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-14) rows, 59 (-7) columns and 589 (-134) elements
Clp1000I sum of infeasibilities 6.20605e-06 - average 1.14927e-07, 11 fixed columns
Coin0506I Presolve 42 (-12) rows, 45 (-14) columns and 370 (-219) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 1.1419907 - largest nonzero change 2.521464e-05 ( 0.0021869008%) - largest zero change 2.6674284e-05
Clp0000I Optimal - objective value 127.25358
Clp0000I Optimal - objective value 127.25358
Coin0511I After Postsolve, objective 127.25358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 127.25358
Clp0000I Optimal - objective value 127.25358
Clp0000I Optimal - objective value 127.25358
Coin0511I After Postsolve, objective 127.25358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 127.2535769 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 59 columns (59 integer (59 of which binary)) and 593 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.620%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.98506
Cbc0038I Pass   1: suminf.    1.92123 (14) obj. -45.4116 iterations 9
Cbc0038I Pass   2: suminf.    1.92123 (14) obj. -45.4116 iterations 0
Cbc0038I Solution found of -7.59767
Cbc0038I Rounding solution of -11.1397 is better than previous of -7.59767

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11.1397 to -40.7015 (0.02 seconds)
Cbc0038I Round again with cutoff of -47.7942
Cbc0038I Pass   3: suminf.    2.32304 (20) obj. -47.7942 iterations 1
Cbc0038I Pass   4: suminf.    1.98488 (15) obj. -47.7942 iterations 1
Cbc0038I Pass   5: suminf.    0.93203 (4) obj. -47.7942 iterations 14
Cbc0038I Pass   6: suminf.    0.84719 (4) obj. -50.0359 iterations 2
Cbc0038I Pass   7: suminf.    0.74342 (11) obj. -47.7942 iterations 4
Cbc0038I Pass   8: suminf.    0.74342 (11) obj. -47.7942 iterations 2
Cbc0038I Pass   9: suminf.    0.57248 (2) obj. -47.7942 iterations 13
Cbc0038I Pass  10: suminf.    0.57248 (2) obj. -47.7942 iterations 0
Cbc0038I Pass  11: suminf.    0.58298 (2) obj. -48.0272 iterations 2
Cbc0038I Pass  12: suminf.    2.23626 (9) obj. -47.7942 iterations 11
Cbc0038I Pass  13: suminf.    2.23626 (9) obj. -47.7942 iterations 1
Cbc0038I Pass  14: suminf.    1.03504 (3) obj. -47.7942 iterations 8
Cbc0038I Pass  15: suminf.    0.68735 (3) obj. -47.7942 iterations 1
Cbc0038I Pass  16: suminf.    2.96166 (9) obj. -47.7942 iterations 10
Cbc0038I Pass  17: suminf.    1.57402 (5) obj. -47.7942 iterations 8
Cbc0038I Pass  18: suminf.    1.57402 (5) obj. -47.7942 iterations 0
Cbc0038I Pass  19: suminf.    0.96346 (4) obj. -47.7942 iterations 7
Cbc0038I Pass  20: suminf.    0.96346 (4) obj. -47.7942 iterations 0
Cbc0038I Pass  21: suminf.    0.67693 (3) obj. -47.7942 iterations 1
Cbc0038I Pass  22: suminf.    0.67693 (3) obj. -47.7942 iterations 0
Cbc0038I Pass  23: suminf.    0.85851 (3) obj. -58.6996 iterations 1
Cbc0038I Pass  24: suminf.    0.46504 (2) obj. -47.7942 iterations 2
Cbc0038I Pass  25: suminf.    0.77419 (2) obj. -47.7942 iterations 1
Cbc0038I Pass  26: suminf.    2.28859 (9) obj. -47.7942 iterations 16
Cbc0038I Pass  27: suminf.    1.96356 (8) obj. -56.2247 iterations 4
Cbc0038I Pass  28: suminf.    1.10047 (4) obj. -47.7942 iterations 7
Cbc0038I Pass  29: suminf.    0.87553 (3) obj. -49.2167 iterations 2
Cbc0038I Pass  30: suminf.    2.94243 (12) obj. -47.7942 iterations 17
Cbc0038I Pass  31: suminf.    2.94243 (12) obj. -47.7942 iterations 0
Cbc0038I Pass  32: suminf.    0.77410 (5) obj. -47.7942 iterations 12
Cbc0038I Rounding solution of -44.1926 is better than previous of -40.7015

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 37 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -44.1926 to -46.6257 (0.07 seconds)
Cbc0038I Round again with cutoff of -60.561
Cbc0038I Pass  32: suminf.    3.31114 (22) obj. -60.561 iterations 1
Cbc0038I Pass  33: suminf.    3.14248 (20) obj. -60.561 iterations 1
Cbc0038I Pass  34: suminf.    1.78618 (7) obj. -60.561 iterations 21
Cbc0038I Pass  35: suminf.    1.75101 (6) obj. -64.0041 iterations 1
Cbc0038I Pass  36: suminf.    1.52443 (4) obj. -60.561 iterations 5
Cbc0038I Pass  37: suminf.    0.44280 (3) obj. -60.561 iterations 3
Cbc0038I Pass  38: suminf.    0.99047 (4) obj. -60.561 iterations 2
Cbc0038I Pass  39: suminf.    0.99047 (4) obj. -60.561 iterations 0
Cbc0038I Pass  40: suminf.    0.99987 (4) obj. -60.561 iterations 2
Cbc0038I Pass  41: suminf.    0.84897 (4) obj. -60.561 iterations 2
Cbc0038I Pass  42: suminf.    1.14274 (4) obj. -60.561 iterations 2
Cbc0038I Pass  43: suminf.    0.84876 (3) obj. -60.561 iterations 2
Cbc0038I Pass  44: suminf.    1.09555 (3) obj. -60.561 iterations 1
Cbc0038I Pass  45: suminf.    2.66869 (9) obj. -60.561 iterations 12
Cbc0038I Pass  46: suminf.    1.23045 (5) obj. -60.561 iterations 8
Cbc0038I Pass  47: suminf.    0.84876 (3) obj. -60.561 iterations 5
Cbc0038I Pass  48: suminf.    2.48961 (9) obj. -60.561 iterations 8
Cbc0038I Pass  49: suminf.    1.94127 (8) obj. -60.561 iterations 1
Cbc0038I Pass  50: suminf.    1.91781 (8) obj. -60.9363 iterations 2
Cbc0038I Pass  51: suminf.    1.36752 (4) obj. -60.561 iterations 9
Cbc0038I Pass  52: suminf.    0.84876 (3) obj. -60.561 iterations 2
Cbc0038I Pass  53: suminf.    1.09555 (3) obj. -60.561 iterations 1
Cbc0038I Pass  54: suminf.    2.20774 (8) obj. -60.561 iterations 8
Cbc0038I Pass  55: suminf.    1.64829 (7) obj. -60.561 iterations 5
Cbc0038I Pass  56: suminf.    1.48423 (7) obj. -60.561 iterations 1
Cbc0038I Pass  57: suminf.    0.90512 (4) obj. -60.561 iterations 5
Cbc0038I Pass  58: suminf.    0.52976 (4) obj. -60.561 iterations 1
Cbc0038I Pass  59: suminf.    2.62142 (12) obj. -60.561 iterations 10
Cbc0038I Pass  60: suminf.    2.48586 (10) obj. -60.561 iterations 2
Cbc0038I Pass  61: suminf.    1.19994 (4) obj. -60.561 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -46.6257 to -48.8965 (0.10 seconds)
Cbc0038I Round again with cutoff of -75.881
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.40971 (22) obj. -75.881 iterations 0
Cbc0038I Pass  62: suminf.    4.40971 (22) obj. -75.881 iterations 0
Cbc0038I Pass  63: suminf.    1.84947 (9) obj. -75.881 iterations 26
Cbc0038I Pass  64: suminf.    1.84947 (9) obj. -75.881 iterations 0
Cbc0038I Pass  65: suminf.    1.90870 (6) obj. -75.881 iterations 8
Cbc0038I Pass  66: suminf.    1.58328 (6) obj. -75.881 iterations 1
Cbc0038I Pass  67: suminf.    1.90870 (6) obj. -75.881 iterations 3
Cbc0038I Pass  68: suminf.    1.63416 (6) obj. -75.881 iterations 6
Cbc0038I Pass  69: suminf.    1.57126 (6) obj. -75.881 iterations 4
Cbc0038I Pass  70: suminf.    3.02994 (12) obj. -75.881 iterations 9
Cbc0038I Pass  71: suminf.    1.87894 (6) obj. -75.881 iterations 9
Cbc0038I Pass  72: suminf.    1.82167 (6) obj. -76.2247 iterations 2
Cbc0038I Pass  73: suminf.    1.87894 (6) obj. -75.881 iterations 4
Cbc0038I Pass  74: suminf.    2.67969 (11) obj. -75.881 iterations 11
Cbc0038I Pass  75: suminf.    2.58331 (10) obj. -75.881 iterations 1
Cbc0038I Pass  76: suminf.    1.81204 (6) obj. -75.881 iterations 11
Cbc0038I Pass  77: suminf.    1.72515 (6) obj. -75.881 iterations 1
Cbc0038I Pass  78: suminf.    3.37121 (12) obj. -75.881 iterations 11
Cbc0038I Pass  79: suminf.    3.37121 (12) obj. -75.881 iterations 2
Cbc0038I Pass  80: suminf.    1.73170 (8) obj. -75.881 iterations 10
Cbc0038I Pass  81: suminf.    1.73170 (8) obj. -75.881 iterations 0
Cbc0038I Pass  82: suminf.    1.82423 (6) obj. -75.881 iterations 7
Cbc0038I Pass  83: suminf.    1.67092 (6) obj. -76.8009 iterations 2
Cbc0038I Pass  84: suminf.    2.74425 (10) obj. -75.881 iterations 6
Cbc0038I Pass  85: suminf.    2.13441 (9) obj. -75.881 iterations 1
Cbc0038I Pass  86: suminf.    1.81204 (6) obj. -75.881 iterations 7
Cbc0038I Pass  87: suminf.    1.72515 (6) obj. -75.881 iterations 1
Cbc0038I Pass  88: suminf.    1.81204 (6) obj. -75.881 iterations 3
Cbc0038I Pass  89: suminf.    3.93819 (13) obj. -75.881 iterations 14
Cbc0038I Pass  90: suminf.    2.57803 (10) obj. -75.881 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -48.8965 - took 0.10 seconds
Cbc0012I Integer solution of -48.89648 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 54 rows 59 columns, reduced to 25 rows 30 columns
Cbc0031I 31 added rows had average density of 12.580645
Cbc0013I At root node, 31 cuts changed objective from -111.62786 to -54.722993 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2422 row cuts average 3.2 elements, 8 column cuts (8 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 745 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 362 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 304 row cuts average 23.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 50 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.708 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.89648 best solution, best possible -54.722993 (1.66 seconds)
Cbc0001I Search completed - best objective -48.89648, took 2038 iterations and 10 nodes (1.72 seconds)
Cbc0032I Strong branching done 156 times (1556 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 34 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.73

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 32 (-3) columns and 171 (-24) elements
Clp1000I sum of infeasibilities 1.89465e-05 - average 3.32394e-07, 3 fixed columns
Coin0506I Presolve 51 (-6) rows, 29 (-3) columns and 153 (-18) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Coin0511I After Postsolve, objective 100.10517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Clp0000I Optimal - objective value 100.10517
Coin0511I After Postsolve, objective 100.10517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.1051685 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 32 columns (31 integer (31 of which binary)) and 171 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.644%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 6.6319
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.0663 iterations 22
Cbc0038I Solution found of -20.0663
Cbc0038I Relaxing continuous gives -20.0663
Cbc0038I Rounding solution of -30.5067 is better than previous of -20.0663

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -30.5067 to -48.8965 (0.02 seconds)
Cbc0038I Round again with cutoff of -54.0174
Cbc0038I Pass   2: suminf.    0.32653 (3) obj. -54.0174 iterations 3
Cbc0038I Pass   3: suminf.    0.32653 (3) obj. -54.0174 iterations 0
Cbc0038I Pass   4: suminf.    0.25188 (2) obj. -54.0174 iterations 4
Cbc0038I Pass   5: suminf.    0.25188 (2) obj. -54.0174 iterations 0
Cbc0038I Pass   6: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass   7: suminf.    0.45040 (2) obj. -54.0174 iterations 0
Cbc0038I Pass   8: suminf.    0.78336 (3) obj. -54.0174 iterations 3
Cbc0038I Pass   9: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass  10: suminf.    2.07203 (6) obj. -54.0174 iterations 7
Cbc0038I Pass  11: suminf.    1.68098 (6) obj. -54.0174 iterations 4
Cbc0038I Pass  12: suminf.    1.31304 (5) obj. -54.0174 iterations 3
Cbc0038I Pass  13: suminf.    1.90032 (6) obj. -54.0174 iterations 6
Cbc0038I Pass  14: suminf.    0.45939 (2) obj. -54.0174 iterations 6
Cbc0038I Pass  15: suminf.    0.45040 (2) obj. -54.0174 iterations 1
Cbc0038I Pass  16: suminf.    0.78336 (3) obj. -54.0174 iterations 3
Cbc0038I Pass  17: suminf.    0.45040 (2) obj. -54.0174 iterations 2
Cbc0038I Pass  18: suminf.    0.78336 (3) obj. -54.0174 iterations 4
Cbc0038I Pass  19: suminf.    2.60991 (8) obj. -54.0174 iterations 10
Cbc0038I Pass  20: suminf.    0.84743 (4) obj. -54.0174 iterations 5
Cbc0038I Pass  21: suminf.    0.84743 (4) obj. -54.0174 iterations 0
Cbc0038I Pass  22: suminf.    0.85598 (3) obj. -54.0174 iterations 4
Cbc0038I Pass  23: suminf.    0.18127 (1) obj. -54.0174 iterations 4
Cbc0038I Pass  24: suminf.    0.18127 (1) obj. -54.0174 iterations 1
Cbc0038I Pass  25: suminf.    0.42446 (1) obj. -54.0174 iterations 2
Cbc0038I Pass  26: suminf.    2.06009 (6) obj. -54.0174 iterations 5
Cbc0038I Pass  27: suminf.    1.88225 (6) obj. -54.0174 iterations 5
Cbc0038I Pass  28: suminf.    0.92207 (3) obj. -54.0174 iterations 5
Cbc0038I Pass  29: suminf.    0.92207 (3) obj. -54.0174 iterations 0
Cbc0038I Pass  30: suminf.    0.31514 (3) obj. -54.0174 iterations 3
Cbc0038I Pass  31: suminf.    0.31514 (3) obj. -54.0174 iterations 0
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -63.235
Cbc0038I Pass  31: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  32: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  33: suminf.    0.58472 (2) obj. -63.235 iterations 3
Cbc0038I Pass  34: suminf.    0.57565 (3) obj. -63.235 iterations 2
Cbc0038I Pass  35: suminf.    1.02020 (3) obj. -63.235 iterations 5
Cbc0038I Pass  36: suminf.    0.77668 (2) obj. -63.235 iterations 2
Cbc0038I Pass  37: suminf.    0.77668 (2) obj. -63.235 iterations 0
Cbc0038I Pass  38: suminf.    2.83083 (8) obj. -63.235 iterations 7
Cbc0038I Pass  39: suminf.    1.73120 (7) obj. -63.235 iterations 7
Cbc0038I Pass  40: suminf.    1.73120 (7) obj. -63.235 iterations 0
Cbc0038I Pass  41: suminf.    1.10746 (3) obj. -63.235 iterations 7
Cbc0038I Pass  42: suminf.    0.65280 (3) obj. -63.235 iterations 3
Cbc0038I Pass  43: suminf.    0.65280 (3) obj. -63.235 iterations 0
Cbc0038I Pass  44: suminf.    0.58472 (2) obj. -63.235 iterations 3
Cbc0038I Pass  45: suminf.    0.57565 (3) obj. -63.235 iterations 2
Cbc0038I Pass  46: suminf.    1.02020 (3) obj. -63.235 iterations 5
Cbc0038I Pass  47: suminf.    0.77668 (2) obj. -63.235 iterations 2
Cbc0038I Pass  48: suminf.    0.77668 (2) obj. -63.235 iterations 0
Cbc0038I Pass  49: suminf.    1.01469 (3) obj. -63.235 iterations 8
Cbc0038I Pass  50: suminf.    1.01469 (3) obj. -63.235 iterations 0
Cbc0038I Pass  51: suminf.    0.96756 (3) obj. -63.235 iterations 2
Cbc0038I Pass  52: suminf.    0.95316 (3) obj. -63.235 iterations 1
Cbc0038I Pass  53: suminf.    0.95233 (3) obj. -63.235 iterations 2
Cbc0038I Pass  54: suminf.    0.67287 (4) obj. -63.235 iterations 2
Cbc0038I Pass  55: suminf.    1.04684 (4) obj. -63.235 iterations 5
Cbc0038I Pass  56: suminf.    0.88307 (3) obj. -63.235 iterations 1
Cbc0038I Pass  57: suminf.    0.71592 (3) obj. -63.235 iterations 1
Cbc0038I Pass  58: suminf.    0.82051 (3) obj. -63.235 iterations 2
Cbc0038I Pass  59: suminf.    0.53505 (4) obj. -63.235 iterations 2
Cbc0038I Pass  60: suminf.    1.81893 (5) obj. -63.235 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 32 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -48.8965 - took 0.04 seconds
Cbc0012I Integer solution of -48.89648 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 57 rows 32 columns, reduced to 39 rows 23 columns
Cbc0031I 14 added rows had average density of 24.142857
Cbc0013I At root node, 14 cuts changed objective from -100.10517 to -73.959696 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1688 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 774 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 148 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48.89648, took 3057 iterations and 14 nodes (0.27 seconds)
Cbc0032I Strong branching done 158 times (1551 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 59 (-8) columns and 589 (-135) elements
Clp1000I sum of infeasibilities 6.20605e-06 - average 1.14927e-07, 11 fixed columns
Coin0506I Presolve 42 (-12) rows, 45 (-14) columns and 370 (-219) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 1.1419907 - largest nonzero change 2.521464e-05 ( 0.0021869008%) - largest zero change 2.6674284e-05
Clp0000I Optimal - objective value 127.25358
Clp0000I Optimal - objective value 127.25358
Coin0511I After Postsolve, objective 127.25358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 127.25358
Clp0000I Optimal - objective value 127.25358
Clp0000I Optimal - objective value 127.25358
Coin0511I After Postsolve, objective 127.25358, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 127.2535769 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 59 columns (59 integer (59 of which binary)) and 593 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.620%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.98506
Cbc0038I Pass   1: suminf.    1.92123 (14) obj. -45.4116 iterations 9
Cbc0038I Pass   2: suminf.    1.92123 (14) obj. -45.4116 iterations 0
Cbc0038I Solution found of -7.59767
Cbc0038I Rounding solution of -11.1397 is better than previous of -7.59767

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11.1397 to -40.7015 (0.02 seconds)
Cbc0038I Round again with cutoff of -47.7942
Cbc0038I Pass   3: suminf.    2.32304 (20) obj. -47.7942 iterations 1
Cbc0038I Pass   4: suminf.    1.98488 (15) obj. -47.7942 iterations 1
Cbc0038I Pass   5: suminf.    0.93203 (4) obj. -47.7942 iterations 14
Cbc0038I Pass   6: suminf.    0.84719 (4) obj. -50.0359 iterations 2
Cbc0038I Pass   7: suminf.    0.74342 (11) obj. -47.7942 iterations 4
Cbc0038I Pass   8: suminf.    0.74342 (11) obj. -47.7942 iterations 2
Cbc0038I Pass   9: suminf.    0.57248 (2) obj. -47.7942 iterations 13
Cbc0038I Pass  10: suminf.    0.57248 (2) obj. -47.7942 iterations 0
Cbc0038I Pass  11: suminf.    0.58298 (2) obj. -48.0272 iterations 2
Cbc0038I Pass  12: suminf.    2.23626 (9) obj. -47.7942 iterations 11
Cbc0038I Pass  13: suminf.    2.23626 (9) obj. -47.7942 iterations 1
Cbc0038I Pass  14: suminf.    1.03504 (3) obj. -47.7942 iterations 8
Cbc0038I Pass  15: suminf.    0.68735 (3) obj. -47.7942 iterations 1
Cbc0038I Pass  16: suminf.    2.96166 (9) obj. -47.7942 iterations 10
Cbc0038I Pass  17: suminf.    1.57402 (5) obj. -47.7942 iterations 8
Cbc0038I Pass  18: suminf.    1.57402 (5) obj. -47.7942 iterations 0
Cbc0038I Pass  19: suminf.    0.96346 (4) obj. -47.7942 iterations 7
Cbc0038I Pass  20: suminf.    0.96346 (4) obj. -47.7942 iterations 0
Cbc0038I Pass  21: suminf.    0.67693 (3) obj. -47.7942 iterations 1
Cbc0038I Pass  22: suminf.    0.67693 (3) obj. -47.7942 iterations 0
Cbc0038I Pass  23: suminf.    0.85851 (3) obj. -58.6996 iterations 1
Cbc0038I Pass  24: suminf.    0.46504 (2) obj. -47.7942 iterations 2
Cbc0038I Pass  25: suminf.    0.77419 (2) obj. -47.7942 iterations 1
Cbc0038I Pass  26: suminf.    2.28859 (9) obj. -47.7942 iterations 16
Cbc0038I Pass  27: suminf.    1.96356 (8) obj. -56.2247 iterations 4
Cbc0038I Pass  28: suminf.    1.10047 (4) obj. -47.7942 iterations 7
Cbc0038I Pass  29: suminf.    0.87553 (3) obj. -49.2167 iterations 2
Cbc0038I Pass  30: suminf.    2.94243 (12) obj. -47.7942 iterations 17
Cbc0038I Pass  31: suminf.    2.94243 (12) obj. -47.7942 iterations 0
Cbc0038I Pass  32: suminf.    0.77410 (5) obj. -47.7942 iterations 12
Cbc0038I Rounding solution of -44.1926 is better than previous of -40.7015

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 37 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -44.1926 to -46.6257 (0.07 seconds)
Cbc0038I Round again with cutoff of -60.561
Cbc0038I Pass  32: suminf.    3.31114 (22) obj. -60.561 iterations 1
Cbc0038I Pass  33: suminf.    3.14248 (20) obj. -60.561 iterations 1
Cbc0038I Pass  34: suminf.    1.78618 (7) obj. -60.561 iterations 21
Cbc0038I Pass  35: suminf.    1.75101 (6) obj. -64.0041 iterations 1
Cbc0038I Pass  36: suminf.    1.52443 (4) obj. -60.561 iterations 5
Cbc0038I Pass  37: suminf.    0.44280 (3) obj. -60.561 iterations 3
Cbc0038I Pass  38: suminf.    0.99047 (4) obj. -60.561 iterations 2
Cbc0038I Pass  39: suminf.    0.99047 (4) obj. -60.561 iterations 0
Cbc0038I Pass  40: suminf.    0.99987 (4) obj. -60.561 iterations 2
Cbc0038I Pass  41: suminf.    0.84897 (4) obj. -60.561 iterations 2
Cbc0038I Pass  42: suminf.    1.14274 (4) obj. -60.561 iterations 2
Cbc0038I Pass  43: suminf.    0.84876 (3) obj. -60.561 iterations 2
Cbc0038I Pass  44: suminf.    1.09555 (3) obj. -60.561 iterations 1
Cbc0038I Pass  45: suminf.    2.66869 (9) obj. -60.561 iterations 12
Cbc0038I Pass  46: suminf.    1.23045 (5) obj. -60.561 iterations 8
Cbc0038I Pass  47: suminf.    0.84876 (3) obj. -60.561 iterations 5
Cbc0038I Pass  48: suminf.    2.48961 (9) obj. -60.561 iterations 8
Cbc0038I Pass  49: suminf.    1.94127 (8) obj. -60.561 iterations 1
Cbc0038I Pass  50: suminf.    1.91781 (8) obj. -60.9363 iterations 2
Cbc0038I Pass  51: suminf.    1.36752 (4) obj. -60.561 iterations 9
Cbc0038I Pass  52: suminf.    0.84876 (3) obj. -60.561 iterations 2
Cbc0038I Pass  53: suminf.    1.09555 (3) obj. -60.561 iterations 1
Cbc0038I Pass  54: suminf.    2.20774 (8) obj. -60.561 iterations 8
Cbc0038I Pass  55: suminf.    1.64829 (7) obj. -60.561 iterations 5
Cbc0038I Pass  56: suminf.    1.48423 (7) obj. -60.561 iterations 1
Cbc0038I Pass  57: suminf.    0.90512 (4) obj. -60.561 iterations 5
Cbc0038I Pass  58: suminf.    0.52976 (4) obj. -60.561 iterations 1
Cbc0038I Pass  59: suminf.    2.62142 (12) obj. -60.561 iterations 10
Cbc0038I Pass  60: suminf.    2.48586 (10) obj. -60.561 iterations 2
Cbc0038I Pass  61: suminf.    1.19994 (4) obj. -60.561 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -46.6257 to -48.8965 (0.11 seconds)
Cbc0038I Round again with cutoff of -75.881
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.40971 (22) obj. -75.881 iterations 0
Cbc0038I Pass  62: suminf.    4.40971 (22) obj. -75.881 iterations 0
Cbc0038I Pass  63: suminf.    1.84947 (9) obj. -75.881 iterations 26
Cbc0038I Pass  64: suminf.    1.84947 (9) obj. -75.881 iterations 0
Cbc0038I Pass  65: suminf.    1.90870 (6) obj. -75.881 iterations 8
Cbc0038I Pass  66: suminf.    1.58328 (6) obj. -75.881 iterations 1
Cbc0038I Pass  67: suminf.    1.90870 (6) obj. -75.881 iterations 3
Cbc0038I Pass  68: suminf.    1.63416 (6) obj. -75.881 iterations 6
Cbc0038I Pass  69: suminf.    1.57126 (6) obj. -75.881 iterations 4
Cbc0038I Pass  70: suminf.    3.02994 (12) obj. -75.881 iterations 9
Cbc0038I Pass  71: suminf.    1.87894 (6) obj. -75.881 iterations 9
Cbc0038I Pass  72: suminf.    1.82167 (6) obj. -76.2247 iterations 2
Cbc0038I Pass  73: suminf.    1.87894 (6) obj. -75.881 iterations 4
Cbc0038I Pass  74: suminf.    2.67969 (11) obj. -75.881 iterations 11
Cbc0038I Pass  75: suminf.    2.58331 (10) obj. -75.881 iterations 1
Cbc0038I Pass  76: suminf.    1.81204 (6) obj. -75.881 iterations 11
Cbc0038I Pass  77: suminf.    1.72515 (6) obj. -75.881 iterations 1
Cbc0038I Pass  78: suminf.    3.37121 (12) obj. -75.881 iterations 11
Cbc0038I Pass  79: suminf.    3.37121 (12) obj. -75.881 iterations 2
Cbc0038I Pass  80: suminf.    1.73170 (8) obj. -75.881 iterations 10
Cbc0038I Pass  81: suminf.    1.73170 (8) obj. -75.881 iterations 0
Cbc0038I Pass  82: suminf.    1.82423 (6) obj. -75.881 iterations 7
Cbc0038I Pass  83: suminf.    1.67092 (6) obj. -76.8009 iterations 2
Cbc0038I Pass  84: suminf.    2.74425 (10) obj. -75.881 iterations 6
Cbc0038I Pass  85: suminf.    2.13441 (9) obj. -75.881 iterations 1
Cbc0038I Pass  86: suminf.    1.81204 (6) obj. -75.881 iterations 7
Cbc0038I Pass  87: suminf.    1.72515 (6) obj. -75.881 iterations 1
Cbc0038I Pass  88: suminf.    1.81204 (6) obj. -75.881 iterations 3
Cbc0038I Pass  89: suminf.    3.93819 (13) obj. -75.881 iterations 14
Cbc0038I Pass  90: suminf.    2.57803 (10) obj. -75.881 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 59 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -48.8965 - took 0.10 seconds
Cbc0012I Integer solution of -48.89648 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 54 rows 59 columns, reduced to 25 rows 30 columns
Cbc0031I 31 added rows had average density of 12.580645
Cbc0013I At root node, 31 cuts changed objective from -111.62786 to -54.722993 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2422 row cuts average 3.2 elements, 8 column cuts (8 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 745 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 362 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 304 row cuts average 23.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 50 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.89648 best solution, best possible -54.722993 (1.66 seconds)
Cbc0001I Search completed - best objective -48.89648, took 2038 iterations and 10 nodes (1.73 seconds)
Cbc0032I Strong branching done 156 times (1556 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 34 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.73

