Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 557 (-46) elements
Clp1000I sum of infeasibilities 0.00127146 - average 6.98605e-06, 10 fixed columns
Coin0506I Presolve 163 (-19) rows, 90 (-10) columns and 499 (-58) elements
Clp0014I Perturbing problem by 0.001% of 0.26498524 - largest nonzero change 0 ( 0%) - largest zero change 2.9932119e-05
Clp0000I Optimal - objective value 37.49662
Clp0000I Optimal - objective value 37.49662
Coin0511I After Postsolve, objective 37.49662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.49662
Clp0000I Optimal - objective value 37.49662
Clp0000I Optimal - objective value 37.49662
Coin0511I After Postsolve, objective 37.49662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.49662002 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.2374
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.8108 iterations 65
Cbc0038I Solution found of 8.8108
Cbc0038I Relaxing continuous gives 8.8108
Cbc0038I Rounding solution of -4.21949 is better than previous of 8.8108

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.21949 to -7.03769 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.0837
Cbc0038I Pass   2: suminf.    2.80861 (12) obj. -10.0837 iterations 14
Cbc0038I Pass   3: suminf.    1.55848 (6) obj. -10.0837 iterations 14
Cbc0038I Pass   4: suminf.    1.36061 (6) obj. -10.0837 iterations 2
Cbc0038I Pass   5: suminf.    2.39528 (7) obj. -10.0837 iterations 5
Cbc0038I Pass   6: suminf.    2.11665 (6) obj. -10.0837 iterations 7
Cbc0038I Pass   7: suminf.    1.61585 (5) obj. -10.0837 iterations 2
Cbc0038I Pass   8: suminf.    2.49095 (7) obj. -10.0837 iterations 6
Cbc0038I Pass   9: suminf.    2.14091 (6) obj. -10.0837 iterations 2
Cbc0038I Pass  10: suminf.    1.61585 (5) obj. -10.0837 iterations 4
Cbc0038I Pass  11: suminf.    4.16633 (13) obj. -10.0837 iterations 25
Cbc0038I Pass  12: suminf.    2.18829 (8) obj. -10.0837 iterations 15
Cbc0038I Pass  13: suminf.    2.18829 (8) obj. -10.0837 iterations 1
Cbc0038I Pass  14: suminf.    2.70033 (11) obj. -10.0837 iterations 13
Cbc0038I Pass  15: suminf.    2.01587 (10) obj. -10.0837 iterations 3
Cbc0038I Pass  16: suminf.    2.00231 (9) obj. -10.0837 iterations 2
Cbc0038I Pass  17: suminf.    2.33704 (8) obj. -10.0837 iterations 11
Cbc0038I Pass  18: suminf.    1.84819 (6) obj. -10.0837 iterations 4
Cbc0038I Pass  19: suminf.    2.57286 (7) obj. -10.0837 iterations 5
Cbc0038I Pass  20: suminf.    2.26732 (6) obj. -10.0837 iterations 2
Cbc0038I Pass  21: suminf.    1.96795 (6) obj. -10.0837 iterations 6
Cbc0038I Pass  22: suminf.    1.96795 (6) obj. -10.0837 iterations 0
Cbc0038I Pass  23: suminf.    2.31702 (6) obj. -10.0837 iterations 7
Cbc0038I Pass  24: suminf.    2.30323 (7) obj. -10.0837 iterations 1
Cbc0038I Pass  25: suminf.    2.42456 (7) obj. -10.0837 iterations 4
Cbc0038I Pass  26: suminf.    1.98910 (7) obj. -10.0837 iterations 2
Cbc0038I Pass  27: suminf.    1.96795 (6) obj. -10.0837 iterations 1
Cbc0038I Pass  28: suminf.    2.31702 (6) obj. -10.0837 iterations 7
Cbc0038I Pass  29: suminf.    2.30323 (7) obj. -10.0837 iterations 1
Cbc0038I Pass  30: suminf.    2.42456 (7) obj. -10.0837 iterations 4
Cbc0038I Pass  31: suminf.    1.98910 (7) obj. -10.0837 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 83 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -7.03769 - took 0.10 seconds
Cbc0012I Integer solution of -7.037689 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0031I 34 added rows had average density of 83.117647
Cbc0013I At root node, 34 cuts changed objective from -37.49662 to -28.815933 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15767 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2296 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.185 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 87.6 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.037689 best solution, best possible -28.815933 (1.66 seconds)
Cbc0012I Integer solution of -7.255212 found by rounding after 11159 iterations and 22 nodes (1.97 seconds)
Cbc0012I Integer solution of -7.971516 found by rounding after 11195 iterations and 23 nodes (1.97 seconds)
Cbc0012I Integer solution of -8.488338 found by rounding after 11208 iterations and 24 nodes (1.98 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 55 rows 37 columns
Cbc0012I Integer solution of -8.929516 found by rounding after 12791 iterations and 77 nodes (2.12 seconds)
Cbc0001I Search completed - best objective -8.929516, took 13897 iterations and 100 nodes (2.16 seconds)
Cbc0032I Strong branching done 1090 times (24851 iterations), fathomed 4 nodes and fixed 77 variables
Cbc0035I Maximum depth 25, 169 variables fixed on reduced cost
Total time (CPU seconds):       2.11   (Wallclock seconds):       2.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-79) rows, 141 (-61) columns and 2442 (-3211) elements
Clp1000I sum of infeasibilities 1.10105e-07 - average 8.80844e-10, 29 fixed columns
Coin0506I Presolve 98 (-27) rows, 112 (-29) columns and 1793 (-649) elements
Clp0006I 0  Obj 32.308529 Dual inf 6.1596798 (110)
Clp0029I End of values pass after 112 iterations
Clp0014I Perturbing problem by 0.001% of 1.7293032 - largest nonzero change 2.0965207e-05 ( 0.0018307317%) - largest zero change 2.7458857e-05
Clp0000I Optimal - objective value 48.780499
Clp0000I Optimal - objective value 48.780499
Coin0511I After Postsolve, objective 48.780499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.780499 Dual inf 4.5563181 (5)
Clp0014I Perturbing problem by 0.001% of 1.5113863 - largest nonzero change 2.950459e-05 ( 0.0024275985%) - largest zero change 2.9698139e-05
Clp0000I Optimal - objective value 51.897048
Clp0000I Optimal - objective value 51.897048
Clp0000I Optimal - objective value 51.897048
Coin0511I After Postsolve, objective 51.897048, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.89704803 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 141 columns (141 integer (141 of which binary)) and 2446 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.671%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.0356
Cbc0038I Pass   1: suminf.    2.99878 (33) obj. -11.1875 iterations 24
Cbc0038I Pass   2: suminf.    2.99878 (33) obj. -11.1875 iterations 0
Cbc0038I Pass   3: suminf.    0.42569 (6) obj. 29.704 iterations 27
Cbc0038I Solution found of 38.0663
Cbc0038I Rounding solution of 11.7645 is better than previous of 38.0663

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 141 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 11.7645 to 1.57997 (0.04 seconds)
Cbc0038I Round again with cutoff of -3.28875
Cbc0038I Pass   4: suminf.    2.99878 (33) obj. -11.1875 iterations 0
Cbc0038I Pass   5: suminf.    2.99878 (33) obj. -11.1875 iterations 0
Cbc0038I Pass   6: suminf.    2.26936 (15) obj. -3.28875 iterations 28
Cbc0038I Pass   7: suminf.    2.25785 (14) obj. -3.8628 iterations 1
Cbc0038I Pass   8: suminf.    1.44035 (4) obj. -3.28875 iterations 18
Cbc0038I Pass   9: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I Pass  10: suminf.    0.77341 (4) obj. -3.28875 iterations 2
Cbc0038I Pass  11: suminf.    0.77341 (4) obj. -3.28875 iterations 0
Cbc0038I Pass  12: suminf.    0.37034 (3) obj. -3.28875 iterations 8
Cbc0038I Pass  13: suminf.    0.34514 (3) obj. -3.28875 iterations 3
Cbc0038I Pass  14: suminf.    1.44035 (4) obj. -3.28875 iterations 7
Cbc0038I Pass  15: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I Pass  16: suminf.    0.77341 (4) obj. -3.28875 iterations 2
Cbc0038I Pass  17: suminf.    0.77341 (4) obj. -3.28875 iterations 0
Cbc0038I Pass  18: suminf.    0.37034 (3) obj. -3.28875 iterations 10
Cbc0038I Pass  19: suminf.    0.34514 (3) obj. -3.28875 iterations 2
Cbc0038I Pass  20: suminf.    1.44035 (4) obj. -3.28875 iterations 6
Cbc0038I Pass  21: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I Pass  22: suminf.    0.77341 (4) obj. -3.28875 iterations 2
Cbc0038I Pass  23: suminf.    0.77341 (4) obj. -3.28875 iterations 0
Cbc0038I Pass  24: suminf.    0.37034 (3) obj. -3.28875 iterations 8
Cbc0038I Pass  25: suminf.    0.34514 (3) obj. -3.28875 iterations 3
Cbc0038I Pass  26: suminf.    1.44035 (4) obj. -3.28875 iterations 7
Cbc0038I Pass  27: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I Pass  28: suminf.    0.77341 (4) obj. -3.28875 iterations 2
Cbc0038I Pass  29: suminf.    0.77341 (4) obj. -3.28875 iterations 0
Cbc0038I Pass  30: suminf.    0.37034 (3) obj. -3.28875 iterations 8
Cbc0038I Pass  31: suminf.    0.34514 (3) obj. -3.28875 iterations 2
Cbc0038I Pass  32: suminf.    1.44035 (4) obj. -3.28875 iterations 6
Cbc0038I Pass  33: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 141 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 1.57997 to -1.40667 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.0523
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.22715 (39) obj. -12.0523 iterations 1
Cbc0038I Pass  34: suminf.    3.21498 (34) obj. -12.0523 iterations 2
Cbc0038I Pass  35: suminf.    2.95569 (28) obj. -12.0523 iterations 19
Cbc0038I Pass  36: suminf.    2.95569 (28) obj. -12.0523 iterations 3
Cbc0038I Pass  37: suminf.    1.47506 (13) obj. -12.0523 iterations 21
Cbc0038I Pass  38: suminf.    1.47506 (13) obj. -12.0523 iterations 0
Cbc0038I Pass  39: suminf.    1.25758 (5) obj. -12.0523 iterations 24
Cbc0038I Pass  40: suminf.    1.15907 (5) obj. -12.0523 iterations 3
Cbc0038I Pass  41: suminf.    1.74323 (5) obj. -12.0523 iterations 7
Cbc0038I Pass  42: suminf.    1.49058 (5) obj. -12.0523 iterations 1
Cbc0038I Pass  43: suminf.    1.25758 (5) obj. -12.0523 iterations 12
Cbc0038I Pass  44: suminf.    5.29361 (23) obj. -12.0523 iterations 40
Cbc0038I Pass  45: suminf.    2.77494 (16) obj. -12.0523 iterations 23
Cbc0038I Pass  46: suminf.    2.76243 (16) obj. -12.1524 iterations 1
Cbc0038I Pass  47: suminf.    2.69827 (10) obj. -12.0523 iterations 25
Cbc0038I Pass  48: suminf.    0.85973 (5) obj. -13.4894 iterations 10
Cbc0038I Pass  49: suminf.    1.11258 (6) obj. -12.0523 iterations 5
Cbc0038I Pass  50: suminf.    1.11258 (6) obj. -12.0523 iterations 1
Cbc0038I Pass  51: suminf.    0.59391 (4) obj. -12.0523 iterations 3
Cbc0038I Pass  52: suminf.    0.59149 (5) obj. -12.0523 iterations 1
Cbc0038I Pass  53: suminf.    1.11258 (6) obj. -12.0523 iterations 4
Cbc0038I Pass  54: suminf.    4.47822 (19) obj. -12.0523 iterations 29
Cbc0038I Pass  55: suminf.    3.51485 (15) obj. -12.0523 iterations 15
Cbc0038I Pass  56: suminf.    1.80419 (7) obj. -12.0523 iterations 24
Cbc0038I Pass  57: suminf.    1.35234 (6) obj. -12.0523 iterations 5
Cbc0038I Pass  58: suminf.    1.95404 (11) obj. -12.0523 iterations 10
Cbc0038I Pass  59: suminf.    1.91299 (8) obj. -12.0523 iterations 2
Cbc0038I Pass  60: suminf.    1.56601 (7) obj. -12.0523 iterations 9
Cbc0038I Pass  61: suminf.    1.56319 (6) obj. -12.0523 iterations 7
Cbc0038I Pass  62: suminf.    2.02593 (6) obj. -12.0523 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 141 columns, reduced to 31 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -1.40667 - took 0.05 seconds
Cbc0012I Integer solution of -1.406673 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 125 rows 141 columns, reduced to 6 rows 8 columns
Cbc0031I 52 added rows had average density of 53.288462
Cbc0013I At root node, 52 cuts changed objective from -47.106325 to -16.384508 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16652 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2343 row cuts average 137.4 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1269 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1235 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 89.7 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.412 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.406673 best solution, best possible -16.384508 (2.66 seconds)
Cbc0012I Integer solution of -7.156047 found by rounding after 7370 iterations and 1 nodes (2.68 seconds)
Cbc0012I Integer solution of -8.193354 found by DiveCoefficient after 7370 iterations and 1 nodes (2.68 seconds)
Cbc0012I Integer solution of -8.479203 found by DiveCoefficient after 7544 iterations and 1 nodes (2.70 seconds)
Cbc0016I Integer solution of -8.929516 found by strong branching after 7565 iterations and 2 nodes (2.70 seconds)
Cbc0010I After 8 nodes, 3 on tree, -8.929516 best solution, best possible -15.853188 (3.42 seconds)
Cbc0010I After 42 nodes, 7 on tree, -8.929516 best solution, best possible -15.853188 (4.15 seconds)
Cbc0038I Full problem 125 rows 141 columns, reduced to 46 rows 67 columns
Cbc0038I Full problem 125 rows 141 columns, reduced to 75 rows 87 columns
Cbc0010I After 108 nodes, 13 on tree, -8.929516 best solution, best possible -15.853188 (4.86 seconds)
Cbc0010I After 164 nodes, 2 on tree, -8.929516 best solution, best possible -15.853188 (5.60 seconds)
Cbc0010I After 180 nodes, 6 on tree, -8.929516 best solution, best possible -14.616131 (6.31 seconds)
Cbc0010I After 226 nodes, 1 on tree, -8.929516 best solution, best possible -11.434377 (7.02 seconds)
Cbc0001I Search completed - best objective -8.929516, took 20515 iterations and 230 nodes (7.16 seconds)
Cbc0032I Strong branching done 2674 times (58785 iterations), fathomed 22 nodes and fixed 27 variables
Cbc0035I Maximum depth 29, 487 variables fixed on reduced cost
Total time (CPU seconds):       6.62   (Wallclock seconds):       7.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 557 (-46) elements
Clp1000I sum of infeasibilities 0.00127146 - average 6.98605e-06, 10 fixed columns
Coin0506I Presolve 163 (-19) rows, 90 (-10) columns and 499 (-58) elements
Clp0014I Perturbing problem by 0.001% of 0.26498524 - largest nonzero change 0 ( 0%) - largest zero change 2.9932119e-05
Clp0000I Optimal - objective value 37.49662
Clp0000I Optimal - objective value 37.49662
Coin0511I After Postsolve, objective 37.49662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.49662
Clp0000I Optimal - objective value 37.49662
Clp0000I Optimal - objective value 37.49662
Coin0511I After Postsolve, objective 37.49662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.49662002 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.2374
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.8108 iterations 65
Cbc0038I Solution found of 8.8108
Cbc0038I Relaxing continuous gives 8.8108
Cbc0038I Rounding solution of -4.21949 is better than previous of 8.8108

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.21949 to -7.03769 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.0837
Cbc0038I Pass   2: suminf.    2.80861 (12) obj. -10.0837 iterations 14
Cbc0038I Pass   3: suminf.    1.55848 (6) obj. -10.0837 iterations 14
Cbc0038I Pass   4: suminf.    1.36061 (6) obj. -10.0837 iterations 2
Cbc0038I Pass   5: suminf.    2.39528 (7) obj. -10.0837 iterations 5
Cbc0038I Pass   6: suminf.    2.11665 (6) obj. -10.0837 iterations 7
Cbc0038I Pass   7: suminf.    1.61585 (5) obj. -10.0837 iterations 2
Cbc0038I Pass   8: suminf.    2.49095 (7) obj. -10.0837 iterations 6
Cbc0038I Pass   9: suminf.    2.14091 (6) obj. -10.0837 iterations 2
Cbc0038I Pass  10: suminf.    1.61585 (5) obj. -10.0837 iterations 4
Cbc0038I Pass  11: suminf.    4.16633 (13) obj. -10.0837 iterations 25
Cbc0038I Pass  12: suminf.    2.18829 (8) obj. -10.0837 iterations 15
Cbc0038I Pass  13: suminf.    2.18829 (8) obj. -10.0837 iterations 1
Cbc0038I Pass  14: suminf.    2.70033 (11) obj. -10.0837 iterations 13
Cbc0038I Pass  15: suminf.    2.01587 (10) obj. -10.0837 iterations 3
Cbc0038I Pass  16: suminf.    2.00231 (9) obj. -10.0837 iterations 2
Cbc0038I Pass  17: suminf.    2.33704 (8) obj. -10.0837 iterations 11
Cbc0038I Pass  18: suminf.    1.84819 (6) obj. -10.0837 iterations 4
Cbc0038I Pass  19: suminf.    2.57286 (7) obj. -10.0837 iterations 5
Cbc0038I Pass  20: suminf.    2.26732 (6) obj. -10.0837 iterations 2
Cbc0038I Pass  21: suminf.    1.96795 (6) obj. -10.0837 iterations 6
Cbc0038I Pass  22: suminf.    1.96795 (6) obj. -10.0837 iterations 0
Cbc0038I Pass  23: suminf.    2.31702 (6) obj. -10.0837 iterations 7
Cbc0038I Pass  24: suminf.    2.30323 (7) obj. -10.0837 iterations 1
Cbc0038I Pass  25: suminf.    2.42456 (7) obj. -10.0837 iterations 4
Cbc0038I Pass  26: suminf.    1.98910 (7) obj. -10.0837 iterations 2
Cbc0038I Pass  27: suminf.    1.96795 (6) obj. -10.0837 iterations 1
Cbc0038I Pass  28: suminf.    2.31702 (6) obj. -10.0837 iterations 7
Cbc0038I Pass  29: suminf.    2.30323 (7) obj. -10.0837 iterations 1
Cbc0038I Pass  30: suminf.    2.42456 (7) obj. -10.0837 iterations 4
Cbc0038I Pass  31: suminf.    1.98910 (7) obj. -10.0837 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 83 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -7.03769 - took 0.10 seconds
Cbc0012I Integer solution of -7.037689 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0031I 34 added rows had average density of 83.117647
Cbc0013I At root node, 34 cuts changed objective from -37.49662 to -28.815933 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15767 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2296 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 180 row cuts average 87.6 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.037689 best solution, best possible -28.815933 (1.67 seconds)
Cbc0012I Integer solution of -7.255212 found by rounding after 11159 iterations and 22 nodes (1.97 seconds)
Cbc0012I Integer solution of -7.971516 found by rounding after 11195 iterations and 23 nodes (1.97 seconds)
Cbc0012I Integer solution of -8.488338 found by rounding after 11208 iterations and 24 nodes (1.97 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 55 rows 37 columns
Cbc0012I Integer solution of -8.929516 found by rounding after 12791 iterations and 77 nodes (2.12 seconds)
Cbc0001I Search completed - best objective -8.929516, took 13897 iterations and 100 nodes (2.17 seconds)
Cbc0032I Strong branching done 1090 times (24851 iterations), fathomed 4 nodes and fixed 77 variables
Cbc0035I Maximum depth 25, 169 variables fixed on reduced cost
Total time (CPU seconds):       2.12   (Wallclock seconds):       2.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-80) rows, 141 (-62) columns and 2442 (-3212) elements
Clp1000I sum of infeasibilities 1.10105e-07 - average 8.80844e-10, 29 fixed columns
Coin0506I Presolve 98 (-27) rows, 112 (-29) columns and 1793 (-649) elements
Clp0006I 0  Obj 32.308529 Dual inf 6.1596798 (110)
Clp0029I End of values pass after 112 iterations
Clp0014I Perturbing problem by 0.001% of 1.7293032 - largest nonzero change 2.0965207e-05 ( 0.0018307317%) - largest zero change 2.7458857e-05
Clp0000I Optimal - objective value 48.780499
Clp0000I Optimal - objective value 48.780499
Coin0511I After Postsolve, objective 48.780499, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.780499 Dual inf 4.5563181 (5)
Clp0014I Perturbing problem by 0.001% of 1.5113863 - largest nonzero change 2.950459e-05 ( 0.0024275985%) - largest zero change 2.9698139e-05
Clp0000I Optimal - objective value 51.897048
Clp0000I Optimal - objective value 51.897048
Clp0000I Optimal - objective value 51.897048
Coin0511I After Postsolve, objective 51.897048, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.89704803 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 141 columns (141 integer (141 of which binary)) and 2446 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.671%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.0356
Cbc0038I Pass   1: suminf.    2.99878 (33) obj. -11.1875 iterations 24
Cbc0038I Pass   2: suminf.    2.99878 (33) obj. -11.1875 iterations 0
Cbc0038I Pass   3: suminf.    0.42569 (6) obj. 29.704 iterations 27
Cbc0038I Solution found of 38.0663
Cbc0038I Rounding solution of 11.7645 is better than previous of 38.0663

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 141 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 11.7645 to 1.57997 (0.04 seconds)
Cbc0038I Round again with cutoff of -3.28875
Cbc0038I Pass   4: suminf.    2.99878 (33) obj. -11.1875 iterations 0
Cbc0038I Pass   5: suminf.    2.99878 (33) obj. -11.1875 iterations 0
Cbc0038I Pass   6: suminf.    2.26936 (15) obj. -3.28875 iterations 28
Cbc0038I Pass   7: suminf.    2.25785 (14) obj. -3.8628 iterations 1
Cbc0038I Pass   8: suminf.    1.44035 (4) obj. -3.28875 iterations 18
Cbc0038I Pass   9: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I Pass  10: suminf.    0.77341 (4) obj. -3.28875 iterations 2
Cbc0038I Pass  11: suminf.    0.77341 (4) obj. -3.28875 iterations 0
Cbc0038I Pass  12: suminf.    0.37034 (3) obj. -3.28875 iterations 8
Cbc0038I Pass  13: suminf.    0.34514 (3) obj. -3.28875 iterations 3
Cbc0038I Pass  14: suminf.    1.44035 (4) obj. -3.28875 iterations 7
Cbc0038I Pass  15: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I Pass  16: suminf.    0.77341 (4) obj. -3.28875 iterations 2
Cbc0038I Pass  17: suminf.    0.77341 (4) obj. -3.28875 iterations 0
Cbc0038I Pass  18: suminf.    0.37034 (3) obj. -3.28875 iterations 10
Cbc0038I Pass  19: suminf.    0.34514 (3) obj. -3.28875 iterations 2
Cbc0038I Pass  20: suminf.    1.44035 (4) obj. -3.28875 iterations 6
Cbc0038I Pass  21: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I Pass  22: suminf.    0.77341 (4) obj. -3.28875 iterations 2
Cbc0038I Pass  23: suminf.    0.77341 (4) obj. -3.28875 iterations 0
Cbc0038I Pass  24: suminf.    0.37034 (3) obj. -3.28875 iterations 8
Cbc0038I Pass  25: suminf.    0.34514 (3) obj. -3.28875 iterations 3
Cbc0038I Pass  26: suminf.    1.44035 (4) obj. -3.28875 iterations 7
Cbc0038I Pass  27: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I Pass  28: suminf.    0.77341 (4) obj. -3.28875 iterations 2
Cbc0038I Pass  29: suminf.    0.77341 (4) obj. -3.28875 iterations 0
Cbc0038I Pass  30: suminf.    0.37034 (3) obj. -3.28875 iterations 8
Cbc0038I Pass  31: suminf.    0.34514 (3) obj. -3.28875 iterations 2
Cbc0038I Pass  32: suminf.    1.44035 (4) obj. -3.28875 iterations 6
Cbc0038I Pass  33: suminf.    1.33063 (4) obj. -3.28875 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 90 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 141 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 1.57997 to -1.40667 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.0523
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.22715 (39) obj. -12.0523 iterations 1
Cbc0038I Pass  34: suminf.    3.21498 (34) obj. -12.0523 iterations 2
Cbc0038I Pass  35: suminf.    2.95569 (28) obj. -12.0523 iterations 19
Cbc0038I Pass  36: suminf.    2.95569 (28) obj. -12.0523 iterations 3
Cbc0038I Pass  37: suminf.    1.47506 (13) obj. -12.0523 iterations 21
Cbc0038I Pass  38: suminf.    1.47506 (13) obj. -12.0523 iterations 0
Cbc0038I Pass  39: suminf.    1.25758 (5) obj. -12.0523 iterations 24
Cbc0038I Pass  40: suminf.    1.15907 (5) obj. -12.0523 iterations 3
Cbc0038I Pass  41: suminf.    1.74323 (5) obj. -12.0523 iterations 7
Cbc0038I Pass  42: suminf.    1.49058 (5) obj. -12.0523 iterations 1
Cbc0038I Pass  43: suminf.    1.25758 (5) obj. -12.0523 iterations 12
Cbc0038I Pass  44: suminf.    5.29361 (23) obj. -12.0523 iterations 40
Cbc0038I Pass  45: suminf.    2.77494 (16) obj. -12.0523 iterations 23
Cbc0038I Pass  46: suminf.    2.76243 (16) obj. -12.1524 iterations 1
Cbc0038I Pass  47: suminf.    2.69827 (10) obj. -12.0523 iterations 25
Cbc0038I Pass  48: suminf.    0.85973 (5) obj. -13.4894 iterations 10
Cbc0038I Pass  49: suminf.    1.11258 (6) obj. -12.0523 iterations 5
Cbc0038I Pass  50: suminf.    1.11258 (6) obj. -12.0523 iterations 1
Cbc0038I Pass  51: suminf.    0.59391 (4) obj. -12.0523 iterations 3
Cbc0038I Pass  52: suminf.    0.59149 (5) obj. -12.0523 iterations 1
Cbc0038I Pass  53: suminf.    1.11258 (6) obj. -12.0523 iterations 4
Cbc0038I Pass  54: suminf.    4.47822 (19) obj. -12.0523 iterations 29
Cbc0038I Pass  55: suminf.    3.51485 (15) obj. -12.0523 iterations 15
Cbc0038I Pass  56: suminf.    1.80419 (7) obj. -12.0523 iterations 24
Cbc0038I Pass  57: suminf.    1.35234 (6) obj. -12.0523 iterations 5
Cbc0038I Pass  58: suminf.    1.95404 (11) obj. -12.0523 iterations 10
Cbc0038I Pass  59: suminf.    1.91299 (8) obj. -12.0523 iterations 2
Cbc0038I Pass  60: suminf.    1.56601 (7) obj. -12.0523 iterations 9
Cbc0038I Pass  61: suminf.    1.56319 (6) obj. -12.0523 iterations 7
Cbc0038I Pass  62: suminf.    2.02593 (6) obj. -12.0523 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 141 columns, reduced to 31 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -1.40667 - took 0.05 seconds
Cbc0012I Integer solution of -1.406673 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 125 rows 141 columns, reduced to 6 rows 8 columns
Cbc0031I 52 added rows had average density of 53.288462
Cbc0013I At root node, 52 cuts changed objective from -47.106325 to -16.384508 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16652 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2343 row cuts average 137.4 elements, 0 column cuts (0 active)  in 0.255 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1269 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1235 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 89.7 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 27 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.414 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.406673 best solution, best possible -16.384508 (2.72 seconds)
Cbc0012I Integer solution of -7.156047 found by rounding after 7370 iterations and 1 nodes (2.73 seconds)
Cbc0012I Integer solution of -8.193354 found by DiveCoefficient after 7370 iterations and 1 nodes (2.73 seconds)
Cbc0012I Integer solution of -8.479203 found by DiveCoefficient after 7544 iterations and 1 nodes (2.75 seconds)
Cbc0016I Integer solution of -8.929516 found by strong branching after 7565 iterations and 2 nodes (2.75 seconds)
Cbc0010I After 7 nodes, 2 on tree, -8.929516 best solution, best possible -15.853188 (3.50 seconds)
Cbc0010I After 32 nodes, 11 on tree, -8.929516 best solution, best possible -15.853188 (4.22 seconds)
Cbc0038I Full problem 125 rows 141 columns, reduced to 46 rows 67 columns
Cbc0038I Full problem 125 rows 141 columns, reduced to 75 rows 87 columns
Cbc0010I After 92 nodes, 11 on tree, -8.929516 best solution, best possible -15.853188 (5.04 seconds)
Cbc0010I After 153 nodes, 5 on tree, -8.929516 best solution, best possible -15.853188 (5.76 seconds)
Cbc0010I After 176 nodes, 8 on tree, -8.929516 best solution, best possible -14.616131 (6.47 seconds)
Cbc0010I After 218 nodes, 5 on tree, -8.929516 best solution, best possible -14.616131 (7.18 seconds)
Cbc0001I Search completed - best objective -8.929516, took 20515 iterations and 230 nodes (7.48 seconds)
Cbc0032I Strong branching done 2674 times (58785 iterations), fathomed 22 nodes and fixed 27 variables
Cbc0035I Maximum depth 29, 487 variables fixed on reduced cost
Total time (CPU seconds):       6.86   (Wallclock seconds):       7.51

