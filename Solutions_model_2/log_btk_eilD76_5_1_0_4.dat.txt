Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 62 (-16) columns and 339 (-114) elements
Clp1000I sum of infeasibilities 6.24173e-06 - average 5.62318e-08, 51 fixed columns
Coin0506I Presolve 14 (-97) rows, 11 (-51) columns and 44 (-295) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 18024.3
Clp0000I Optimal - objective value 18024.3
Coin0511I After Postsolve, objective 18024.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.45253298 - largest nonzero change 2.1915523e-05 ( 0.0017128079%) - largest zero change 2.8365385e-05
Clp0000I Optimal - objective value 18024.3
Clp0000I Optimal - objective value 18024.3
Clp0000I Optimal - objective value 18024.3
Coin0511I After Postsolve, objective 18024.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 18024.29976 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 111 rows, 62 columns (61 integer (61 of which binary)) and 339 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.406%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.77135
Cbc0038I Solution found of -14446.9
Cbc0038I Relaxing continuous gives -14446.9
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 62 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -14446.9 to -16163.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -16349.2
Cbc0038I Pass   1: suminf.    0.41143 (7) obj. -16349.2 iterations 12
Cbc0038I Pass   2: suminf.    0.41143 (7) obj. -16349.2 iterations 0
Cbc0038I Pass   3: suminf.    1.04159 (4) obj. -16349.2 iterations 17
Cbc0038I Pass   4: suminf.    0.34495 (1) obj. -16349.2 iterations 3
Cbc0038I Pass   5: suminf.    0.31034 (1) obj. -16459.4 iterations 1
Cbc0038I Pass   6: suminf.    2.19646 (6) obj. -16349.2 iterations 14
Cbc0038I Pass   7: suminf.    0.76093 (2) obj. -16349.2 iterations 11
Cbc0038I Pass   8: suminf.    0.37218 (3) obj. -17135.6 iterations 3
Cbc0038I Pass   9: suminf.    0.76093 (2) obj. -16349.2 iterations 3
Cbc0038I Pass  10: suminf.    1.13649 (4) obj. -16349.2 iterations 16
Cbc0038I Pass  11: suminf.    0.96117 (2) obj. -16349.2 iterations 7
Cbc0038I Pass  12: suminf.    0.29032 (1) obj. -17072.4 iterations 6
Cbc0038I Solution found of -16691.9
Cbc0038I Relaxing continuous gives -16691.9
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 62 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -16691.9 to -17305.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -17449.2
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  13: suminf.    2.03438 (7) obj. -17449.2 iterations 2
Cbc0038I Pass  14: suminf.    1.69635 (7) obj. -17449.2 iterations 3
Cbc0038I Pass  15: suminf.    0.66000 (3) obj. -17461.7 iterations 13
Cbc0038I Pass  16: suminf.    0.66000 (3) obj. -17461.7 iterations 0
Cbc0038I Pass  17: suminf.    0.88798 (4) obj. -17449.2 iterations 9
Cbc0038I Pass  18: suminf.    1.30726 (6) obj. -17449.2 iterations 6
Cbc0038I Pass  19: suminf.    1.30726 (6) obj. -17449.2 iterations 3
Cbc0038I Pass  20: suminf.    1.12685 (5) obj. -17449.2 iterations 8
Cbc0038I Pass  21: suminf.    1.12685 (5) obj. -17449.2 iterations 2
Cbc0038I Pass  22: suminf.    1.61692 (5) obj. -17449.2 iterations 5
Cbc0038I Pass  23: suminf.    1.48897 (6) obj. -17449.2 iterations 15
Cbc0038I Pass  24: suminf.    1.27840 (5) obj. -17449.2 iterations 7
Cbc0038I Pass  25: suminf.    1.10725 (5) obj. -17449.2 iterations 4
Cbc0038I Pass  26: suminf.    0.91333 (3) obj. -17556.9 iterations 6
Cbc0038I Pass  27: suminf.    0.97746 (3) obj. -17449.2 iterations 6
Cbc0038I Pass  28: suminf.    1.74047 (4) obj. -17449.2 iterations 9
Cbc0038I Pass  29: suminf.    1.31472 (4) obj. -17449.2 iterations 6
Cbc0038I Pass  30: suminf.    0.73564 (5) obj. -17449.2 iterations 6
Cbc0038I Pass  31: suminf.    3.79132 (8) obj. -17449.2 iterations 11
Cbc0038I Pass  32: suminf.    1.19760 (6) obj. -17449.2 iterations 10
Cbc0038I Pass  33: suminf.    1.55196 (10) obj. -17449.2 iterations 6
Cbc0038I Pass  34: suminf.    1.38817 (6) obj. -17449.2 iterations 2
Cbc0038I Pass  35: suminf.    0.56229 (8) obj. -17449.2 iterations 8
Cbc0038I Pass  36: suminf.    0.01941 (6) obj. -17449.2 iterations 10
Cbc0038I Pass  37: suminf.    2.66330 (7) obj. -17449.2 iterations 7
Cbc0038I Pass  38: suminf.    2.32860 (6) obj. -17449.2 iterations 6
Cbc0038I Pass  39: suminf.    0.80239 (4) obj. -17449.2 iterations 5
Cbc0038I Pass  40: suminf.    0.80239 (4) obj. -17449.2 iterations 0
Cbc0038I Pass  41: suminf.    0.31050 (3) obj. -17449.2 iterations 11
Cbc0038I Pass  42: suminf.    0.25448 (2) obj. -17449.2 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 62 columns, reduced to 23 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -17305.4 to -17445.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -17621.7
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  42: suminf.    2.45713 (7) obj. -17621.7 iterations 2
Cbc0038I Pass  43: suminf.    0.72474 (6) obj. -17621.7 iterations 13
Cbc0038I Pass  44: suminf.    0.72474 (6) obj. -17621.7 iterations 0
Cbc0038I Pass  45: suminf.    2.61598 (7) obj. -17621.7 iterations 10
Cbc0038I Pass  46: suminf.    0.96261 (2) obj. -17621.7 iterations 10
Cbc0038I Pass  47: suminf.    0.96261 (2) obj. -17621.7 iterations 0
Cbc0038I Pass  48: suminf.    0.96668 (2) obj. -17621.7 iterations 5
Cbc0038I Pass  49: suminf.    1.04867 (4) obj. -17621.7 iterations 4
Cbc0038I Pass  50: suminf.    0.96668 (2) obj. -17621.7 iterations 4
Cbc0038I Pass  51: suminf.    1.05650 (5) obj. -17621.7 iterations 9
Cbc0038I Pass  52: suminf.    0.77928 (7) obj. -17621.7 iterations 22
Cbc0038I Pass  53: suminf.    0.51224 (7) obj. -17621.7 iterations 4
Cbc0038I Pass  54: suminf.    1.81346 (8) obj. -17621.7 iterations 11
Cbc0038I Pass  55: suminf.    0.62219 (7) obj. -17621.7 iterations 5
Cbc0038I Pass  56: suminf.    2.61598 (7) obj. -17621.7 iterations 10
Cbc0038I Pass  57: suminf.    0.96261 (2) obj. -17621.7 iterations 10
Cbc0038I Pass  58: suminf.    0.96261 (2) obj. -17621.7 iterations 0
Cbc0038I Pass  59: suminf.    0.96668 (2) obj. -17621.7 iterations 5
Cbc0038I Pass  60: suminf.    1.70278 (6) obj. -17621.7 iterations 13
Cbc0038I Pass  61: suminf.    1.67858 (8) obj. -17621.7 iterations 4
Cbc0038I Pass  62: suminf.    1.70596 (6) obj. -17621.7 iterations 8
Cbc0038I Pass  63: suminf.    1.70596 (6) obj. -17621.7 iterations 1
Cbc0038I Pass  64: suminf.    1.92538 (5) obj. -17621.7 iterations 4
Cbc0038I Pass  65: suminf.    1.79902 (4) obj. -17621.7 iterations 1
Cbc0038I Pass  66: suminf.    0.51714 (6) obj. -17621.7 iterations 7
Cbc0038I Pass  67: suminf.    1.42218 (7) obj. -17621.7 iterations 6
Cbc0038I Pass  68: suminf.    0.90881 (3) obj. -17641.3 iterations 10
Cbc0038I Pass  69: suminf.    0.97776 (3) obj. -17621.7 iterations 7
Cbc0038I Pass  70: suminf.    1.09938 (4) obj. -17621.7 iterations 5
Cbc0038I Pass  71: suminf.    0.92308 (3) obj. -17676.8 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 62 columns, reduced to 18 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -17445.7 - took 0.03 seconds
Cbc0012I Integer solution of -17445.655 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 111 rows 62 columns, reduced to 15 rows 12 columns
Cbc0031I 6 added rows had average density of 12.5
Cbc0013I At root node, 44 cuts changed objective from -18024.3 to -17445.655 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 2.5 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 60.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0001I Search completed - best objective -17445.655, took 55 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-64) rows, 101 (-51) columns and 1408 (-1895) elements
Clp1000I sum of infeasibilities 1.31522e-06 - average 1.46135e-08, 92 fixed columns
Coin0506I Presolve 8 (-82) rows, 8 (-93) columns and 28 (-1380) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 18021.3
Clp0000I Optimal - objective value 18021.3
Coin0511I After Postsolve, objective 18021.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.1414441 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 18077.535
Clp0000I Optimal - objective value 18077.535
Clp0000I Optimal - objective value 18077.535
Coin0511I After Postsolve, objective 18077.535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 18077.53493 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 101 columns (101 integer (101 of which binary)) and 1410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.341%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 8.50011
Cbc0038I Pass   1: suminf.    1.38065 (20) obj. -13195.9 iterations 29
Cbc0038I Pass   2: suminf.    1.38065 (20) obj. -13195.9 iterations 0
Cbc0038I Solution found of -13164.4
Cbc0038I Rounding solution of -14195.8 is better than previous of -13164.4

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 101 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -14195.8 to -16599.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -16746.9
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.74687 (32) obj. -16746.9 iterations 19
Cbc0038I Pass   4: suminf.    2.74687 (32) obj. -16746.9 iterations 0
Cbc0038I Pass   5: suminf.    2.26755 (23) obj. -16791.1 iterations 18
Cbc0038I Pass   6: suminf.    1.63173 (23) obj. -16746.9 iterations 8
Cbc0038I Pass   7: suminf.    2.46591 (18) obj. -16746.9 iterations 17
Cbc0038I Pass   8: suminf.    1.39047 (19) obj. -16746.9 iterations 7
Cbc0038I Pass   9: suminf.    2.52439 (7) obj. -16746.9 iterations 14
Cbc0038I Pass  10: suminf.    0.45162 (3) obj. -16746.9 iterations 5
Cbc0038I Pass  11: suminf.    0.45162 (3) obj. -16746.9 iterations 0
Cbc0038I Pass  12: suminf.    0.42693 (2) obj. -16746.9 iterations 7
Cbc0038I Pass  13: suminf.    0.40554 (2) obj. -16746.9 iterations 6
Cbc0038I Pass  14: suminf.    1.46783 (8) obj. -16746.9 iterations 17
Cbc0038I Pass  15: suminf.    1.36013 (8) obj. -16746.9 iterations 6
Cbc0038I Pass  16: suminf.    2.32483 (7) obj. -16746.9 iterations 14
Cbc0038I Pass  17: suminf.    2.32483 (7) obj. -16746.9 iterations 0
Cbc0038I Pass  18: suminf.    0.41140 (3) obj. -16804.4 iterations 14
Cbc0038I Pass  19: suminf.    0.41140 (3) obj. -16804.4 iterations 0
Cbc0038I Pass  20: suminf.    0.46237 (3) obj. -16746.9 iterations 1
Cbc0038I Pass  21: suminf.    2.65181 (19) obj. -16746.9 iterations 29
Cbc0038I Pass  22: suminf.    2.63414 (16) obj. -16746.9 iterations 4
Cbc0038I Pass  23: suminf.    0.58893 (2) obj. -16746.9 iterations 18
Cbc0038I Pass  24: suminf.    0.58893 (2) obj. -16746.9 iterations 1
Cbc0038I Pass  25: suminf.    0.87218 (3) obj. -16926.7 iterations 6
Cbc0038I Pass  26: suminf.    0.87772 (2) obj. -16746.9 iterations 2
Cbc0038I Pass  27: suminf.    0.87772 (2) obj. -16746.9 iterations 0
Cbc0038I Pass  28: suminf.    1.58715 (13) obj. -16746.9 iterations 21
Cbc0038I Pass  29: suminf.    1.52388 (11) obj. -16746.9 iterations 9
Cbc0038I Pass  30: suminf.    1.40545 (4) obj. -16746.9 iterations 15
Cbc0038I Pass  31: suminf.    0.57568 (2) obj. -16746.9 iterations 2
Cbc0038I Pass  32: suminf.    0.41353 (3) obj. -17080.9 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 101 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -16599.7 to -17305.4 (0.05 seconds)
Cbc0038I Round again with cutoff of -17458.6
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.74692 (34) obj. -17458.6 iterations 6
Cbc0038I Pass  33: suminf.    4.74692 (34) obj. -17458.6 iterations 1
Cbc0038I Pass  34: suminf.    1.71987 (14) obj. -17458.6 iterations 28
Cbc0038I Pass  35: suminf.    1.71987 (14) obj. -17458.6 iterations 0
Cbc0038I Pass  36: suminf.    0.59316 (3) obj. -17458.6 iterations 14
Cbc0038I Pass  37: suminf.    0.08165 (1) obj. -17458.6 iterations 5
Cbc0038I Pass  38: suminf.    0.24940 (3) obj. -17458.6 iterations 4
Cbc0038I Pass  39: suminf.    2.41432 (11) obj. -17458.6 iterations 11
Cbc0038I Pass  40: suminf.    2.20595 (12) obj. -17458.6 iterations 3
Cbc0038I Pass  41: suminf.    0.71132 (6) obj. -17458.6 iterations 6
Cbc0038I Pass  42: suminf.    0.56039 (5) obj. -17458.6 iterations 10
Cbc0038I Pass  43: suminf.    0.25248 (3) obj. -17458.6 iterations 9
Cbc0038I Pass  44: suminf.    0.08272 (1) obj. -17458.6 iterations 5
Cbc0038I Pass  45: suminf.    0.88199 (12) obj. -17458.6 iterations 19
Cbc0038I Pass  46: suminf.    0.78643 (8) obj. -17458.6 iterations 11
Cbc0038I Pass  47: suminf.    1.08523 (12) obj. -17458.6 iterations 12
Cbc0038I Pass  48: suminf.    1.02416 (10) obj. -17458.6 iterations 7
Cbc0038I Pass  49: suminf.    0.25403 (3) obj. -17458.6 iterations 12
Cbc0038I Pass  50: suminf.    0.08325 (1) obj. -17458.6 iterations 4
Cbc0038I Pass  51: suminf.    2.78924 (15) obj. -17458.6 iterations 22
Cbc0038I Pass  52: suminf.    1.93896 (11) obj. -17458.6 iterations 3
Cbc0038I Pass  53: suminf.    3.02309 (8) obj. -17458.6 iterations 10
Cbc0038I Pass  54: suminf.    0.10798 (2) obj. -17583.7 iterations 14
Cbc0038I Pass  55: suminf.    0.10798 (2) obj. -17583.7 iterations 0
Cbc0038I Pass  56: suminf.    0.21655 (2) obj. -17458.6 iterations 6
Cbc0038I Pass  57: suminf.    0.89055 (8) obj. -17458.6 iterations 16
Cbc0038I Pass  58: suminf.    0.65993 (6) obj. -17458.6 iterations 8
Cbc0038I Pass  59: suminf.    0.59274 (2) obj. -17458.6 iterations 13
Cbc0038I Pass  60: suminf.    0.56854 (2) obj. -17458.6 iterations 6
Cbc0038I Pass  61: suminf.    0.25475 (2) obj. -17458.6 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 101 columns, reduced to 34 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -17305.4 - took 0.05 seconds
Cbc0012I Integer solution of -17305.377 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 90 rows 101 columns, reduced to 26 rows 27 columns
Cbc0031I 26 added rows had average density of 21.192308
Cbc0013I At root node, 26 cuts changed objective from -18068.813 to -17490.936 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 490 row cuts average 7.5 elements, 21 column cuts (21 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0004I Integer solution of -17445.655 found after 351 iterations and 1 nodes (0.34 seconds)
Cbc0001I Search completed - best objective -17445.655, took 369 iterations and 2 nodes (0.34 seconds)
Cbc0032I Strong branching done 66 times (748 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.34

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 62 (-16) columns and 339 (-114) elements
Clp1000I sum of infeasibilities 6.24173e-06 - average 5.62318e-08, 51 fixed columns
Coin0506I Presolve 14 (-97) rows, 11 (-51) columns and 44 (-295) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 18024.3
Clp0000I Optimal - objective value 18024.3
Coin0511I After Postsolve, objective 18024.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.45253298 - largest nonzero change 2.1915523e-05 ( 0.0017128079%) - largest zero change 2.8365385e-05
Clp0000I Optimal - objective value 18024.3
Clp0000I Optimal - objective value 18024.3
Clp0000I Optimal - objective value 18024.3
Coin0511I After Postsolve, objective 18024.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 18024.29976 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 111 rows, 62 columns (61 integer (61 of which binary)) and 339 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.406%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.77135
Cbc0038I Solution found of -14446.9
Cbc0038I Relaxing continuous gives -14446.9
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 62 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -14446.9 to -16163.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -16349.2
Cbc0038I Pass   1: suminf.    0.41143 (7) obj. -16349.2 iterations 12
Cbc0038I Pass   2: suminf.    0.41143 (7) obj. -16349.2 iterations 0
Cbc0038I Pass   3: suminf.    1.04159 (4) obj. -16349.2 iterations 17
Cbc0038I Pass   4: suminf.    0.34495 (1) obj. -16349.2 iterations 3
Cbc0038I Pass   5: suminf.    0.31034 (1) obj. -16459.4 iterations 1
Cbc0038I Pass   6: suminf.    2.19646 (6) obj. -16349.2 iterations 14
Cbc0038I Pass   7: suminf.    0.76093 (2) obj. -16349.2 iterations 11
Cbc0038I Pass   8: suminf.    0.37218 (3) obj. -17135.6 iterations 3
Cbc0038I Pass   9: suminf.    0.76093 (2) obj. -16349.2 iterations 3
Cbc0038I Pass  10: suminf.    1.13649 (4) obj. -16349.2 iterations 16
Cbc0038I Pass  11: suminf.    0.96117 (2) obj. -16349.2 iterations 7
Cbc0038I Pass  12: suminf.    0.29032 (1) obj. -17072.4 iterations 6
Cbc0038I Solution found of -16691.9
Cbc0038I Relaxing continuous gives -16691.9
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 62 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -16691.9 to -17305.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -17449.2
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  13: suminf.    2.03438 (7) obj. -17449.2 iterations 2
Cbc0038I Pass  14: suminf.    1.69635 (7) obj. -17449.2 iterations 3
Cbc0038I Pass  15: suminf.    0.66000 (3) obj. -17461.7 iterations 13
Cbc0038I Pass  16: suminf.    0.66000 (3) obj. -17461.7 iterations 0
Cbc0038I Pass  17: suminf.    0.88798 (4) obj. -17449.2 iterations 9
Cbc0038I Pass  18: suminf.    1.30726 (6) obj. -17449.2 iterations 6
Cbc0038I Pass  19: suminf.    1.30726 (6) obj. -17449.2 iterations 3
Cbc0038I Pass  20: suminf.    1.12685 (5) obj. -17449.2 iterations 8
Cbc0038I Pass  21: suminf.    1.12685 (5) obj. -17449.2 iterations 2
Cbc0038I Pass  22: suminf.    1.61692 (5) obj. -17449.2 iterations 5
Cbc0038I Pass  23: suminf.    1.48897 (6) obj. -17449.2 iterations 15
Cbc0038I Pass  24: suminf.    1.27840 (5) obj. -17449.2 iterations 7
Cbc0038I Pass  25: suminf.    1.10725 (5) obj. -17449.2 iterations 4
Cbc0038I Pass  26: suminf.    0.91333 (3) obj. -17556.9 iterations 6
Cbc0038I Pass  27: suminf.    0.97746 (3) obj. -17449.2 iterations 6
Cbc0038I Pass  28: suminf.    1.74047 (4) obj. -17449.2 iterations 9
Cbc0038I Pass  29: suminf.    1.31472 (4) obj. -17449.2 iterations 6
Cbc0038I Pass  30: suminf.    0.73564 (5) obj. -17449.2 iterations 6
Cbc0038I Pass  31: suminf.    3.79132 (8) obj. -17449.2 iterations 11
Cbc0038I Pass  32: suminf.    1.19760 (6) obj. -17449.2 iterations 10
Cbc0038I Pass  33: suminf.    1.55196 (10) obj. -17449.2 iterations 6
Cbc0038I Pass  34: suminf.    1.38817 (6) obj. -17449.2 iterations 2
Cbc0038I Pass  35: suminf.    0.56229 (8) obj. -17449.2 iterations 8
Cbc0038I Pass  36: suminf.    0.01941 (6) obj. -17449.2 iterations 10
Cbc0038I Pass  37: suminf.    2.66330 (7) obj. -17449.2 iterations 7
Cbc0038I Pass  38: suminf.    2.32860 (6) obj. -17449.2 iterations 6
Cbc0038I Pass  39: suminf.    0.80239 (4) obj. -17449.2 iterations 5
Cbc0038I Pass  40: suminf.    0.80239 (4) obj. -17449.2 iterations 0
Cbc0038I Pass  41: suminf.    0.31050 (3) obj. -17449.2 iterations 11
Cbc0038I Pass  42: suminf.    0.25448 (2) obj. -17449.2 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 62 columns, reduced to 23 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -17305.4 to -17445.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -17621.7
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  42: suminf.    2.45713 (7) obj. -17621.7 iterations 2
Cbc0038I Pass  43: suminf.    0.72474 (6) obj. -17621.7 iterations 13
Cbc0038I Pass  44: suminf.    0.72474 (6) obj. -17621.7 iterations 0
Cbc0038I Pass  45: suminf.    2.61598 (7) obj. -17621.7 iterations 10
Cbc0038I Pass  46: suminf.    0.96261 (2) obj. -17621.7 iterations 10
Cbc0038I Pass  47: suminf.    0.96261 (2) obj. -17621.7 iterations 0
Cbc0038I Pass  48: suminf.    0.96668 (2) obj. -17621.7 iterations 5
Cbc0038I Pass  49: suminf.    1.04867 (4) obj. -17621.7 iterations 4
Cbc0038I Pass  50: suminf.    0.96668 (2) obj. -17621.7 iterations 4
Cbc0038I Pass  51: suminf.    1.05650 (5) obj. -17621.7 iterations 9
Cbc0038I Pass  52: suminf.    0.77928 (7) obj. -17621.7 iterations 22
Cbc0038I Pass  53: suminf.    0.51224 (7) obj. -17621.7 iterations 4
Cbc0038I Pass  54: suminf.    1.81346 (8) obj. -17621.7 iterations 11
Cbc0038I Pass  55: suminf.    0.62219 (7) obj. -17621.7 iterations 5
Cbc0038I Pass  56: suminf.    2.61598 (7) obj. -17621.7 iterations 10
Cbc0038I Pass  57: suminf.    0.96261 (2) obj. -17621.7 iterations 10
Cbc0038I Pass  58: suminf.    0.96261 (2) obj. -17621.7 iterations 0
Cbc0038I Pass  59: suminf.    0.96668 (2) obj. -17621.7 iterations 5
Cbc0038I Pass  60: suminf.    1.70278 (6) obj. -17621.7 iterations 13
Cbc0038I Pass  61: suminf.    1.67858 (8) obj. -17621.7 iterations 4
Cbc0038I Pass  62: suminf.    1.70596 (6) obj. -17621.7 iterations 8
Cbc0038I Pass  63: suminf.    1.70596 (6) obj. -17621.7 iterations 1
Cbc0038I Pass  64: suminf.    1.92538 (5) obj. -17621.7 iterations 4
Cbc0038I Pass  65: suminf.    1.79902 (4) obj. -17621.7 iterations 1
Cbc0038I Pass  66: suminf.    0.51714 (6) obj. -17621.7 iterations 7
Cbc0038I Pass  67: suminf.    1.42218 (7) obj. -17621.7 iterations 6
Cbc0038I Pass  68: suminf.    0.90881 (3) obj. -17641.3 iterations 10
Cbc0038I Pass  69: suminf.    0.97776 (3) obj. -17621.7 iterations 7
Cbc0038I Pass  70: suminf.    1.09938 (4) obj. -17621.7 iterations 5
Cbc0038I Pass  71: suminf.    0.92308 (3) obj. -17676.8 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 62 columns, reduced to 18 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -17445.7 - took 0.03 seconds
Cbc0012I Integer solution of -17445.655 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 111 rows 62 columns, reduced to 15 rows 12 columns
Cbc0031I 6 added rows had average density of 12.5
Cbc0013I At root node, 44 cuts changed objective from -18024.3 to -17445.655 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 2.5 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 60.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0001I Search completed - best objective -17445.655, took 55 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-65) rows, 101 (-52) columns and 1408 (-1896) elements
Clp1000I sum of infeasibilities 1.31522e-06 - average 1.46135e-08, 92 fixed columns
Coin0506I Presolve 8 (-82) rows, 8 (-93) columns and 28 (-1380) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 18021.3
Clp0000I Optimal - objective value 18021.3
Coin0511I After Postsolve, objective 18021.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.1414441 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 18077.535
Clp0000I Optimal - objective value 18077.535
Clp0000I Optimal - objective value 18077.535
Coin0511I After Postsolve, objective 18077.535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 18077.53493 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 101 columns (101 integer (101 of which binary)) and 1410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.341%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 8.50011
Cbc0038I Pass   1: suminf.    1.38065 (20) obj. -13195.9 iterations 29
Cbc0038I Pass   2: suminf.    1.38065 (20) obj. -13195.9 iterations 0
Cbc0038I Solution found of -13164.4
Cbc0038I Rounding solution of -14195.8 is better than previous of -13164.4

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 101 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -14195.8 to -16599.7 (0.04 seconds)
Cbc0038I Round again with cutoff of -16746.9
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.74687 (32) obj. -16746.9 iterations 19
Cbc0038I Pass   4: suminf.    2.74687 (32) obj. -16746.9 iterations 0
Cbc0038I Pass   5: suminf.    2.26755 (23) obj. -16791.1 iterations 18
Cbc0038I Pass   6: suminf.    1.63173 (23) obj. -16746.9 iterations 8
Cbc0038I Pass   7: suminf.    2.46591 (18) obj. -16746.9 iterations 17
Cbc0038I Pass   8: suminf.    1.39047 (19) obj. -16746.9 iterations 7
Cbc0038I Pass   9: suminf.    2.52439 (7) obj. -16746.9 iterations 14
Cbc0038I Pass  10: suminf.    0.45162 (3) obj. -16746.9 iterations 5
Cbc0038I Pass  11: suminf.    0.45162 (3) obj. -16746.9 iterations 0
Cbc0038I Pass  12: suminf.    0.42693 (2) obj. -16746.9 iterations 7
Cbc0038I Pass  13: suminf.    0.40554 (2) obj. -16746.9 iterations 6
Cbc0038I Pass  14: suminf.    1.46783 (8) obj. -16746.9 iterations 17
Cbc0038I Pass  15: suminf.    1.36013 (8) obj. -16746.9 iterations 6
Cbc0038I Pass  16: suminf.    2.32483 (7) obj. -16746.9 iterations 14
Cbc0038I Pass  17: suminf.    2.32483 (7) obj. -16746.9 iterations 0
Cbc0038I Pass  18: suminf.    0.41140 (3) obj. -16804.4 iterations 14
Cbc0038I Pass  19: suminf.    0.41140 (3) obj. -16804.4 iterations 0
Cbc0038I Pass  20: suminf.    0.46237 (3) obj. -16746.9 iterations 1
Cbc0038I Pass  21: suminf.    2.65181 (19) obj. -16746.9 iterations 29
Cbc0038I Pass  22: suminf.    2.63414 (16) obj. -16746.9 iterations 4
Cbc0038I Pass  23: suminf.    0.58893 (2) obj. -16746.9 iterations 18
Cbc0038I Pass  24: suminf.    0.58893 (2) obj. -16746.9 iterations 1
Cbc0038I Pass  25: suminf.    0.87218 (3) obj. -16926.7 iterations 6
Cbc0038I Pass  26: suminf.    0.87772 (2) obj. -16746.9 iterations 2
Cbc0038I Pass  27: suminf.    0.87772 (2) obj. -16746.9 iterations 0
Cbc0038I Pass  28: suminf.    1.58715 (13) obj. -16746.9 iterations 21
Cbc0038I Pass  29: suminf.    1.52388 (11) obj. -16746.9 iterations 9
Cbc0038I Pass  30: suminf.    1.40545 (4) obj. -16746.9 iterations 15
Cbc0038I Pass  31: suminf.    0.57568 (2) obj. -16746.9 iterations 2
Cbc0038I Pass  32: suminf.    0.41353 (3) obj. -17080.9 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 101 columns, reduced to 32 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -16599.7 to -17305.4 (0.06 seconds)
Cbc0038I Round again with cutoff of -17458.6
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.74692 (34) obj. -17458.6 iterations 6
Cbc0038I Pass  33: suminf.    4.74692 (34) obj. -17458.6 iterations 1
Cbc0038I Pass  34: suminf.    1.71987 (14) obj. -17458.6 iterations 28
Cbc0038I Pass  35: suminf.    1.71987 (14) obj. -17458.6 iterations 0
Cbc0038I Pass  36: suminf.    0.59316 (3) obj. -17458.6 iterations 14
Cbc0038I Pass  37: suminf.    0.08165 (1) obj. -17458.6 iterations 5
Cbc0038I Pass  38: suminf.    0.24940 (3) obj. -17458.6 iterations 4
Cbc0038I Pass  39: suminf.    2.41432 (11) obj. -17458.6 iterations 11
Cbc0038I Pass  40: suminf.    2.20595 (12) obj. -17458.6 iterations 3
Cbc0038I Pass  41: suminf.    0.71132 (6) obj. -17458.6 iterations 6
Cbc0038I Pass  42: suminf.    0.56039 (5) obj. -17458.6 iterations 10
Cbc0038I Pass  43: suminf.    0.25248 (3) obj. -17458.6 iterations 9
Cbc0038I Pass  44: suminf.    0.08272 (1) obj. -17458.6 iterations 5
Cbc0038I Pass  45: suminf.    0.88199 (12) obj. -17458.6 iterations 19
Cbc0038I Pass  46: suminf.    0.78643 (8) obj. -17458.6 iterations 11
Cbc0038I Pass  47: suminf.    1.08523 (12) obj. -17458.6 iterations 12
Cbc0038I Pass  48: suminf.    1.02416 (10) obj. -17458.6 iterations 7
Cbc0038I Pass  49: suminf.    0.25403 (3) obj. -17458.6 iterations 12
Cbc0038I Pass  50: suminf.    0.08325 (1) obj. -17458.6 iterations 4
Cbc0038I Pass  51: suminf.    2.78924 (15) obj. -17458.6 iterations 22
Cbc0038I Pass  52: suminf.    1.93896 (11) obj. -17458.6 iterations 3
Cbc0038I Pass  53: suminf.    3.02309 (8) obj. -17458.6 iterations 10
Cbc0038I Pass  54: suminf.    0.10798 (2) obj. -17583.7 iterations 14
Cbc0038I Pass  55: suminf.    0.10798 (2) obj. -17583.7 iterations 0
Cbc0038I Pass  56: suminf.    0.21655 (2) obj. -17458.6 iterations 6
Cbc0038I Pass  57: suminf.    0.89055 (8) obj. -17458.6 iterations 16
Cbc0038I Pass  58: suminf.    0.65993 (6) obj. -17458.6 iterations 8
Cbc0038I Pass  59: suminf.    0.59274 (2) obj. -17458.6 iterations 13
Cbc0038I Pass  60: suminf.    0.56854 (2) obj. -17458.6 iterations 6
Cbc0038I Pass  61: suminf.    0.25475 (2) obj. -17458.6 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 101 columns, reduced to 34 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -17305.4 - took 0.05 seconds
Cbc0012I Integer solution of -17305.377 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 90 rows 101 columns, reduced to 26 rows 27 columns
Cbc0031I 26 added rows had average density of 21.192308
Cbc0013I At root node, 26 cuts changed objective from -18068.813 to -17490.936 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 490 row cuts average 7.5 elements, 21 column cuts (21 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0004I Integer solution of -17445.655 found after 351 iterations and 1 nodes (0.36 seconds)
Cbc0001I Search completed - best objective -17445.655, took 369 iterations and 2 nodes (0.36 seconds)
Cbc0032I Strong branching done 66 times (748 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.37

