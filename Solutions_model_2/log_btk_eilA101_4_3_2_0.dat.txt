Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 101 (-2) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 1.84034e-05 - average 1.01676e-07, 10 fixed columns
Coin0506I Presolve 157 (-24) rows, 89 (-12) columns and 484 (-72) elements
Clp0014I Perturbing problem by 0.001% of 2.1877323 - largest nonzero change 0 ( 0%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 36.263433
Clp0000I Optimal - objective value 36.263433
Coin0511I After Postsolve, objective 36.263433, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.263433
Clp0000I Optimal - objective value 36.263433
Clp0000I Optimal - objective value 36.263433
Coin0511I After Postsolve, objective 36.263433, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.2634331 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 181 rows, 101 columns (100 integer (100 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 14.2818
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.67618 iterations 60
Cbc0038I Solution found of 9.67618
Cbc0038I Relaxing continuous gives 9.67618
Cbc0038I Rounding solution of -4.26102 is better than previous of 9.67618

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 79 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -4.26102 to -7.34279 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.2349
Cbc0038I Pass   2: suminf.    3.56187 (11) obj. -10.2349 iterations 14
Cbc0038I Pass   3: suminf.    3.56187 (11) obj. -10.2349 iterations 1
Cbc0038I Pass   4: suminf.    2.99249 (12) obj. -10.2349 iterations 22
Cbc0038I Pass   5: suminf.    2.26298 (8) obj. -10.2349 iterations 5
Cbc0038I Pass   6: suminf.    1.98649 (8) obj. -10.2349 iterations 5
Cbc0038I Pass   7: suminf.    3.46121 (12) obj. -10.2349 iterations 12
Cbc0038I Pass   8: suminf.    2.12794 (11) obj. -10.2349 iterations 20
Cbc0038I Pass   9: suminf.    2.12794 (11) obj. -10.2349 iterations 0
Cbc0038I Pass  10: suminf.    2.01885 (8) obj. -10.2349 iterations 15
Cbc0038I Pass  11: suminf.    1.59904 (7) obj. -10.2349 iterations 2
Cbc0038I Pass  12: suminf.    1.98107 (7) obj. -10.2349 iterations 9
Cbc0038I Pass  13: suminf.    1.39823 (6) obj. -10.2349 iterations 2
Cbc0038I Pass  14: suminf.    1.05584 (7) obj. -10.2349 iterations 2
Cbc0038I Pass  15: suminf.    3.02535 (11) obj. -10.2349 iterations 8
Cbc0038I Pass  16: suminf.    1.91891 (10) obj. -10.2349 iterations 9
Cbc0038I Pass  17: suminf.    1.59550 (8) obj. -10.2349 iterations 3
Cbc0038I Pass  18: suminf.    3.40638 (11) obj. -10.2349 iterations 7
Cbc0038I Pass  19: suminf.    5.55583 (16) obj. -10.2349 iterations 37
Cbc0038I Pass  20: suminf.    1.59176 (6) obj. -10.2349 iterations 16
Cbc0038I Pass  21: suminf.    1.47474 (7) obj. -10.2349 iterations 4
Cbc0038I Pass  22: suminf.    2.27880 (7) obj. -10.2349 iterations 18
Cbc0038I Pass  23: suminf.    2.25020 (8) obj. -10.2349 iterations 1
Cbc0038I Pass  24: suminf.    2.45353 (8) obj. -10.2349 iterations 11
Cbc0038I Pass  25: suminf.    2.43175 (8) obj. -10.2349 iterations 2
Cbc0038I Pass  26: suminf.    1.93003 (6) obj. -10.2349 iterations 10
Cbc0038I Pass  27: suminf.    1.68609 (7) obj. -10.2349 iterations 4
Cbc0038I Pass  28: suminf.    1.90565 (7) obj. -10.2349 iterations 10
Cbc0038I Pass  29: suminf.    1.88620 (7) obj. -10.2349 iterations 1
Cbc0038I Pass  30: suminf.    2.72850 (12) obj. -10.2349 iterations 13
Cbc0038I Pass  31: suminf.    2.95892 (11) obj. -10.2349 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 97 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -7.34279 - took 0.10 seconds
Cbc0012I Integer solution of -7.34279 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 79 rows 46 columns
Cbc0031I 36 added rows had average density of 71.305556
Cbc0013I At root node, 36 cuts changed objective from -36.263433 to -27.713033 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22137 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2802 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 38 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.34279 best solution, best possible -27.713033 (1.69 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 96 rows 57 columns
Cbc0038I Full problem 181 rows 101 columns, reduced to 39 rows 30 columns
Cbc0010I After 132 nodes, 5 on tree, -7.34279 best solution, best possible -27.713033 (2.39 seconds)
Cbc0001I Search completed - best objective -7.342790000000008, took 16791 iterations and 154 nodes (2.42 seconds)
Cbc0032I Strong branching done 1374 times (27276 iterations), fathomed 22 nodes and fixed 45 variables
Cbc0035I Maximum depth 43, 316 variables fixed on reduced cost
Total time (CPU seconds):       2.32   (Wallclock seconds):       2.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-79) rows, 144 (-58) columns and 2745 (-2908) elements
Clp1000I sum of infeasibilities 1.30656e-07 - average 1.04525e-09, 29 fixed columns
Coin0506I Presolve 96 (-29) rows, 115 (-29) columns and 1834 (-911) elements
Clp0006I 0  Obj 37.055468 Dual inf 5.1562363 (115)
Clp0029I End of values pass after 115 iterations
Clp0014I Perturbing problem by 0.001% of 2.1272699 - largest nonzero change 2.2081745e-05 ( 0.0015823696%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 54.345368
Clp0000I Optimal - objective value 54.345368
Coin0511I After Postsolve, objective 54.345368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.345368
Clp0000I Optimal - objective value 54.345368
Clp0000I Optimal - objective value 54.345368
Clp0000I Optimal - objective value 54.345368
Coin0511I After Postsolve, objective 54.345368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34536835 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 146 columns (146 integer (146 of which binary)) and 2755 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.019%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.62828
Cbc0038I Pass   1: suminf.    3.93023 (37) obj. -39.9606 iterations 16
Cbc0038I Pass   2: suminf.    3.93023 (37) obj. -39.9606 iterations 1
Cbc0038I Pass   3: suminf.    1.14091 (14) obj. -11.0948 iterations 23
Cbc0038I Solution found of 2.7143
Cbc0038I Rounding solution of -1.70071 is better than previous of 2.7143

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 146 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -1.70071 to -6.10007 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.4458
Cbc0038I Pass   4: suminf.    3.93023 (37) obj. -39.9606 iterations 0
Cbc0038I Pass   5: suminf.    3.93023 (37) obj. -39.9606 iterations 1
Cbc0038I Pass   6: suminf.    2.11390 (23) obj. -19.1218 iterations 14
Cbc0038I Pass   7: suminf.    1.14597 (11) obj. -10.4458 iterations 21
Cbc0038I Pass   8: suminf.    0.86901 (11) obj. -11.8306 iterations 2
Cbc0038I Pass   9: suminf.    0.65023 (6) obj. -10.4458 iterations 16
Cbc0038I Pass  10: suminf.    0.65023 (6) obj. -10.4458 iterations 0
Cbc0038I Pass  11: suminf.    1.22440 (4) obj. -10.4458 iterations 8
Cbc0038I Pass  12: suminf.    0.19428 (2) obj. -10.4458 iterations 11
Cbc0038I Pass  13: suminf.    0.74232 (3) obj. -10.4458 iterations 4
Cbc0038I Pass  14: suminf.    0.19428 (2) obj. -10.4458 iterations 10
Cbc0038I Pass  15: suminf.    2.27949 (17) obj. -10.4458 iterations 49
Cbc0038I Pass  16: suminf.    1.92618 (16) obj. -10.4458 iterations 12
Cbc0038I Pass  17: suminf.    1.09263 (7) obj. -10.4458 iterations 28
Cbc0038I Pass  18: suminf.    1.09263 (7) obj. -10.4458 iterations 0
Cbc0038I Pass  19: suminf.    0.90653 (7) obj. -10.4458 iterations 18
Cbc0038I Pass  20: suminf.    0.56465 (3) obj. -10.4458 iterations 6
Cbc0038I Pass  21: suminf.    0.46433 (4) obj. -10.4458 iterations 11
Cbc0038I Pass  22: suminf.    0.46433 (4) obj. -10.4458 iterations 0
Cbc0038I Pass  23: suminf.    0.43773 (3) obj. -10.4458 iterations 10
Cbc0038I Pass  24: suminf.    0.43773 (3) obj. -10.4458 iterations 0
Cbc0038I Pass  25: suminf.    1.68317 (11) obj. -10.4458 iterations 34
Cbc0038I Pass  26: suminf.    1.68317 (11) obj. -10.4458 iterations 4
Cbc0038I Pass  27: suminf.    1.22462 (7) obj. -10.4458 iterations 22
Cbc0038I Pass  28: suminf.    1.05713 (8) obj. -10.4458 iterations 5
Cbc0038I Pass  29: suminf.    1.72205 (8) obj. -10.4458 iterations 18
Cbc0038I Pass  30: suminf.    0.81452 (5) obj. -10.4458 iterations 11
Cbc0038I Pass  31: suminf.    0.68993 (6) obj. -10.4458 iterations 3
Cbc0038I Pass  32: suminf.    1.72205 (8) obj. -10.4458 iterations 15
Cbc0038I Pass  33: suminf.    1.61502 (15) obj. -10.4458 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 146 columns, reduced to 20 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -6.10007 to -6.58403 (0.07 seconds)
Cbc0038I Round again with cutoff of -18.2679
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.93023 (37) obj. -39.9606 iterations 0
Cbc0038I Pass  34: suminf.    3.93023 (37) obj. -39.9606 iterations 1
Cbc0038I Pass  35: suminf.    1.96249 (19) obj. -18.2679 iterations 26
Cbc0038I Pass  36: suminf.    1.96249 (19) obj. -18.2679 iterations 0
Cbc0038I Pass  37: suminf.    1.27834 (7) obj. -18.2679 iterations 38
Cbc0038I Pass  38: suminf.    1.27834 (7) obj. -18.2679 iterations 6
Cbc0038I Pass  39: suminf.    1.28708 (7) obj. -18.2679 iterations 13
Cbc0038I Pass  40: suminf.    1.28708 (7) obj. -18.2679 iterations 0
Cbc0038I Pass  41: suminf.    1.46101 (10) obj. -18.2679 iterations 16
Cbc0038I Pass  42: suminf.    1.43314 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  43: suminf.    1.31566 (10) obj. -18.2679 iterations 12
Cbc0038I Pass  44: suminf.    1.29032 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  45: suminf.    3.14226 (17) obj. -21.4997 iterations 30
Cbc0038I Pass  46: suminf.    3.14226 (17) obj. -21.4997 iterations 2
Cbc0038I Pass  47: suminf.    1.27834 (7) obj. -18.2679 iterations 20
Cbc0038I Pass  48: suminf.    1.27834 (7) obj. -18.2679 iterations 3
Cbc0038I Pass  49: suminf.    1.28708 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  50: suminf.    1.28708 (7) obj. -18.2679 iterations 0
Cbc0038I Pass  51: suminf.    1.46101 (10) obj. -18.2679 iterations 15
Cbc0038I Pass  52: suminf.    1.43314 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  53: suminf.    1.31566 (10) obj. -18.2679 iterations 12
Cbc0038I Pass  54: suminf.    1.29032 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  55: suminf.    2.03439 (13) obj. -18.2679 iterations 33
Cbc0038I Pass  56: suminf.    1.78431 (13) obj. -18.3317 iterations 5
Cbc0038I Pass  57: suminf.    2.78216 (13) obj. -18.2679 iterations 24
Cbc0038I Pass  58: suminf.    2.72957 (15) obj. -18.2679 iterations 7
Cbc0038I Pass  59: suminf.    1.39973 (9) obj. -18.2679 iterations 16
Cbc0038I Pass  60: suminf.    1.25990 (12) obj. -18.2679 iterations 9
Cbc0038I Pass  61: suminf.    1.85007 (10) obj. -18.2679 iterations 14
Cbc0038I Pass  62: suminf.    1.26358 (8) obj. -18.4871 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -6.58403 - took 0.06 seconds
Cbc0012I Integer solution of -6.58403 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 12 rows 17 columns
Cbc0031I 74 added rows had average density of 46.851351
Cbc0013I At root node, 74 cuts changed objective from -49.556461 to -19.209559 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24890 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.185 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2557 row cuts average 142.6 elements, 0 column cuts (0 active)  in 0.266 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1062 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1706 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 449 row cuts average 79.6 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.328 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.58403 best solution, best possible -19.209559 (2.97 seconds)
Cbc0010I After 5 nodes, 4 on tree, -6.58403 best solution, best possible -16.285478 (3.70 seconds)
Cbc0012I Integer solution of -6.616334 found by rounding after 10254 iterations and 13 nodes (4.01 seconds)
Cbc0012I Integer solution of -6.76626 found by rounding after 11219 iterations and 39 nodes (4.30 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 4 rows 5 columns
Cbc0012I Integer solution of -7.015535 found by rounding after 11277 iterations and 45 nodes (4.32 seconds)
Cbc0016I Integer solution of -7.34279 found by strong branching after 11434 iterations and 54 nodes (4.34 seconds)
Cbc0010I After 84 nodes, 12 on tree, -7.34279 best solution, best possible -16.285478 (4.40 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 8 rows 12 columns
Cbc0001I Search completed - best objective -7.342790000000008, took 15194 iterations and 160 nodes (4.81 seconds)
Cbc0032I Strong branching done 1442 times (26180 iterations), fathomed 32 nodes and fixed 26 variables
Cbc0035I Maximum depth 20, 531 variables fixed on reduced cost
Total time (CPU seconds):       4.36   (Wallclock seconds):       4.84

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 101 (-2) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 1.84034e-05 - average 1.01676e-07, 10 fixed columns
Coin0506I Presolve 157 (-24) rows, 89 (-12) columns and 484 (-72) elements
Clp0014I Perturbing problem by 0.001% of 2.1877323 - largest nonzero change 0 ( 0%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 36.263433
Clp0000I Optimal - objective value 36.263433
Coin0511I After Postsolve, objective 36.263433, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.263433
Clp0000I Optimal - objective value 36.263433
Clp0000I Optimal - objective value 36.263433
Coin0511I After Postsolve, objective 36.263433, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.2634331 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 181 rows, 101 columns (100 integer (100 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 14.2818
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.67618 iterations 60
Cbc0038I Solution found of 9.67618
Cbc0038I Relaxing continuous gives 9.67618
Cbc0038I Rounding solution of -4.26102 is better than previous of 9.67618

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 79 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -4.26102 to -7.34279 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.2349
Cbc0038I Pass   2: suminf.    3.56187 (11) obj. -10.2349 iterations 14
Cbc0038I Pass   3: suminf.    3.56187 (11) obj. -10.2349 iterations 1
Cbc0038I Pass   4: suminf.    2.99249 (12) obj. -10.2349 iterations 22
Cbc0038I Pass   5: suminf.    2.26298 (8) obj. -10.2349 iterations 5
Cbc0038I Pass   6: suminf.    1.98649 (8) obj. -10.2349 iterations 5
Cbc0038I Pass   7: suminf.    3.46121 (12) obj. -10.2349 iterations 12
Cbc0038I Pass   8: suminf.    2.12794 (11) obj. -10.2349 iterations 20
Cbc0038I Pass   9: suminf.    2.12794 (11) obj. -10.2349 iterations 0
Cbc0038I Pass  10: suminf.    2.01885 (8) obj. -10.2349 iterations 15
Cbc0038I Pass  11: suminf.    1.59904 (7) obj. -10.2349 iterations 2
Cbc0038I Pass  12: suminf.    1.98107 (7) obj. -10.2349 iterations 9
Cbc0038I Pass  13: suminf.    1.39823 (6) obj. -10.2349 iterations 2
Cbc0038I Pass  14: suminf.    1.05584 (7) obj. -10.2349 iterations 2
Cbc0038I Pass  15: suminf.    3.02535 (11) obj. -10.2349 iterations 8
Cbc0038I Pass  16: suminf.    1.91891 (10) obj. -10.2349 iterations 9
Cbc0038I Pass  17: suminf.    1.59550 (8) obj. -10.2349 iterations 3
Cbc0038I Pass  18: suminf.    3.40638 (11) obj. -10.2349 iterations 7
Cbc0038I Pass  19: suminf.    5.55583 (16) obj. -10.2349 iterations 37
Cbc0038I Pass  20: suminf.    1.59176 (6) obj. -10.2349 iterations 16
Cbc0038I Pass  21: suminf.    1.47474 (7) obj. -10.2349 iterations 4
Cbc0038I Pass  22: suminf.    2.27880 (7) obj. -10.2349 iterations 18
Cbc0038I Pass  23: suminf.    2.25020 (8) obj. -10.2349 iterations 1
Cbc0038I Pass  24: suminf.    2.45353 (8) obj. -10.2349 iterations 11
Cbc0038I Pass  25: suminf.    2.43175 (8) obj. -10.2349 iterations 2
Cbc0038I Pass  26: suminf.    1.93003 (6) obj. -10.2349 iterations 10
Cbc0038I Pass  27: suminf.    1.68609 (7) obj. -10.2349 iterations 4
Cbc0038I Pass  28: suminf.    1.90565 (7) obj. -10.2349 iterations 10
Cbc0038I Pass  29: suminf.    1.88620 (7) obj. -10.2349 iterations 1
Cbc0038I Pass  30: suminf.    2.72850 (12) obj. -10.2349 iterations 13
Cbc0038I Pass  31: suminf.    2.95892 (11) obj. -10.2349 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 97 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -7.34279 - took 0.11 seconds
Cbc0012I Integer solution of -7.34279 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 79 rows 46 columns
Cbc0031I 36 added rows had average density of 71.305556
Cbc0013I At root node, 36 cuts changed objective from -36.263433 to -27.713033 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22137 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2802 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 38 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.34279 best solution, best possible -27.713033 (1.80 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 96 rows 57 columns
Cbc0038I Full problem 181 rows 101 columns, reduced to 39 rows 30 columns
Cbc0010I After 113 nodes, 9 on tree, -7.34279 best solution, best possible -27.713033 (2.50 seconds)
Cbc0001I Search completed - best objective -7.342790000000008, took 16791 iterations and 154 nodes (2.57 seconds)
Cbc0032I Strong branching done 1374 times (27276 iterations), fathomed 22 nodes and fixed 45 variables
Cbc0035I Maximum depth 43, 316 variables fixed on reduced cost
Total time (CPU seconds):       2.47   (Wallclock seconds):       2.60

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-80) rows, 144 (-59) columns and 2745 (-2909) elements
Clp1000I sum of infeasibilities 1.30656e-07 - average 1.04525e-09, 29 fixed columns
Coin0506I Presolve 96 (-29) rows, 115 (-29) columns and 1834 (-911) elements
Clp0006I 0  Obj 37.055468 Dual inf 5.1562363 (115)
Clp0029I End of values pass after 115 iterations
Clp0014I Perturbing problem by 0.001% of 2.1272699 - largest nonzero change 2.2081745e-05 ( 0.0015823696%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 54.345368
Clp0000I Optimal - objective value 54.345368
Coin0511I After Postsolve, objective 54.345368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.345368
Clp0000I Optimal - objective value 54.345368
Clp0000I Optimal - objective value 54.345368
Clp0000I Optimal - objective value 54.345368
Coin0511I After Postsolve, objective 54.345368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34536835 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 146 columns (146 integer (146 of which binary)) and 2755 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.019%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.62828
Cbc0038I Pass   1: suminf.    3.93023 (37) obj. -39.9606 iterations 16
Cbc0038I Pass   2: suminf.    3.93023 (37) obj. -39.9606 iterations 1
Cbc0038I Pass   3: suminf.    1.14091 (14) obj. -11.0948 iterations 23
Cbc0038I Solution found of 2.7143
Cbc0038I Rounding solution of -1.70071 is better than previous of 2.7143

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 146 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -1.70071 to -6.10007 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.4458
Cbc0038I Pass   4: suminf.    3.93023 (37) obj. -39.9606 iterations 0
Cbc0038I Pass   5: suminf.    3.93023 (37) obj. -39.9606 iterations 1
Cbc0038I Pass   6: suminf.    2.11390 (23) obj. -19.1218 iterations 14
Cbc0038I Pass   7: suminf.    1.14597 (11) obj. -10.4458 iterations 21
Cbc0038I Pass   8: suminf.    0.86901 (11) obj. -11.8306 iterations 2
Cbc0038I Pass   9: suminf.    0.65023 (6) obj. -10.4458 iterations 16
Cbc0038I Pass  10: suminf.    0.65023 (6) obj. -10.4458 iterations 0
Cbc0038I Pass  11: suminf.    1.22440 (4) obj. -10.4458 iterations 8
Cbc0038I Pass  12: suminf.    0.19428 (2) obj. -10.4458 iterations 11
Cbc0038I Pass  13: suminf.    0.74232 (3) obj. -10.4458 iterations 4
Cbc0038I Pass  14: suminf.    0.19428 (2) obj. -10.4458 iterations 10
Cbc0038I Pass  15: suminf.    2.27949 (17) obj. -10.4458 iterations 49
Cbc0038I Pass  16: suminf.    1.92618 (16) obj. -10.4458 iterations 12
Cbc0038I Pass  17: suminf.    1.09263 (7) obj. -10.4458 iterations 28
Cbc0038I Pass  18: suminf.    1.09263 (7) obj. -10.4458 iterations 0
Cbc0038I Pass  19: suminf.    0.90653 (7) obj. -10.4458 iterations 18
Cbc0038I Pass  20: suminf.    0.56465 (3) obj. -10.4458 iterations 6
Cbc0038I Pass  21: suminf.    0.46433 (4) obj. -10.4458 iterations 11
Cbc0038I Pass  22: suminf.    0.46433 (4) obj. -10.4458 iterations 0
Cbc0038I Pass  23: suminf.    0.43773 (3) obj. -10.4458 iterations 10
Cbc0038I Pass  24: suminf.    0.43773 (3) obj. -10.4458 iterations 0
Cbc0038I Pass  25: suminf.    1.68317 (11) obj. -10.4458 iterations 34
Cbc0038I Pass  26: suminf.    1.68317 (11) obj. -10.4458 iterations 4
Cbc0038I Pass  27: suminf.    1.22462 (7) obj. -10.4458 iterations 22
Cbc0038I Pass  28: suminf.    1.05713 (8) obj. -10.4458 iterations 5
Cbc0038I Pass  29: suminf.    1.72205 (8) obj. -10.4458 iterations 18
Cbc0038I Pass  30: suminf.    0.81452 (5) obj. -10.4458 iterations 11
Cbc0038I Pass  31: suminf.    0.68993 (6) obj. -10.4458 iterations 3
Cbc0038I Pass  32: suminf.    1.72205 (8) obj. -10.4458 iterations 15
Cbc0038I Pass  33: suminf.    1.61502 (15) obj. -10.4458 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 146 columns, reduced to 20 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -6.10007 to -6.58403 (0.08 seconds)
Cbc0038I Round again with cutoff of -18.2679
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.93023 (37) obj. -39.9606 iterations 0
Cbc0038I Pass  34: suminf.    3.93023 (37) obj. -39.9606 iterations 1
Cbc0038I Pass  35: suminf.    1.96249 (19) obj. -18.2679 iterations 26
Cbc0038I Pass  36: suminf.    1.96249 (19) obj. -18.2679 iterations 0
Cbc0038I Pass  37: suminf.    1.27834 (7) obj. -18.2679 iterations 38
Cbc0038I Pass  38: suminf.    1.27834 (7) obj. -18.2679 iterations 6
Cbc0038I Pass  39: suminf.    1.28708 (7) obj. -18.2679 iterations 13
Cbc0038I Pass  40: suminf.    1.28708 (7) obj. -18.2679 iterations 0
Cbc0038I Pass  41: suminf.    1.46101 (10) obj. -18.2679 iterations 16
Cbc0038I Pass  42: suminf.    1.43314 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  43: suminf.    1.31566 (10) obj. -18.2679 iterations 12
Cbc0038I Pass  44: suminf.    1.29032 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  45: suminf.    3.14226 (17) obj. -21.4997 iterations 30
Cbc0038I Pass  46: suminf.    3.14226 (17) obj. -21.4997 iterations 2
Cbc0038I Pass  47: suminf.    1.27834 (7) obj. -18.2679 iterations 20
Cbc0038I Pass  48: suminf.    1.27834 (7) obj. -18.2679 iterations 3
Cbc0038I Pass  49: suminf.    1.28708 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  50: suminf.    1.28708 (7) obj. -18.2679 iterations 0
Cbc0038I Pass  51: suminf.    1.46101 (10) obj. -18.2679 iterations 15
Cbc0038I Pass  52: suminf.    1.43314 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  53: suminf.    1.31566 (10) obj. -18.2679 iterations 12
Cbc0038I Pass  54: suminf.    1.29032 (7) obj. -18.2679 iterations 9
Cbc0038I Pass  55: suminf.    2.03439 (13) obj. -18.2679 iterations 33
Cbc0038I Pass  56: suminf.    1.78431 (13) obj. -18.3317 iterations 5
Cbc0038I Pass  57: suminf.    2.78216 (13) obj. -18.2679 iterations 24
Cbc0038I Pass  58: suminf.    2.72957 (15) obj. -18.2679 iterations 7
Cbc0038I Pass  59: suminf.    1.39973 (9) obj. -18.2679 iterations 16
Cbc0038I Pass  60: suminf.    1.25990 (12) obj. -18.2679 iterations 9
Cbc0038I Pass  61: suminf.    1.85007 (10) obj. -18.2679 iterations 14
Cbc0038I Pass  62: suminf.    1.26358 (8) obj. -18.4871 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -6.58403 - took 0.07 seconds
Cbc0012I Integer solution of -6.58403 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 12 rows 17 columns
Cbc0031I 74 added rows had average density of 46.851351
Cbc0013I At root node, 74 cuts changed objective from -49.556461 to -19.209559 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24890 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.192 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2557 row cuts average 142.6 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1062 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1706 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 449 row cuts average 79.6 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.333 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.58403 best solution, best possible -19.209559 (3.01 seconds)
Cbc0010I After 4 nodes, 3 on tree, -6.58403 best solution, best possible -16.285478 (3.74 seconds)
Cbc0012I Integer solution of -6.616334 found by rounding after 10254 iterations and 13 nodes (4.10 seconds)
Cbc0012I Integer solution of -6.76626 found by rounding after 11219 iterations and 39 nodes (4.39 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 4 rows 5 columns
Cbc0012I Integer solution of -7.015535 found by rounding after 11277 iterations and 45 nodes (4.42 seconds)
Cbc0016I Integer solution of -7.34279 found by strong branching after 11434 iterations and 54 nodes (4.43 seconds)
Cbc0010I After 54 nodes, 11 on tree, -7.34279 best solution, best possible -16.285478 (4.44 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 8 rows 12 columns
Cbc0001I Search completed - best objective -7.342790000000008, took 15194 iterations and 160 nodes (4.93 seconds)
Cbc0032I Strong branching done 1442 times (26180 iterations), fathomed 32 nodes and fixed 26 variables
Cbc0035I Maximum depth 20, 531 variables fixed on reduced cost
Total time (CPU seconds):       4.51   (Wallclock seconds):       4.96

