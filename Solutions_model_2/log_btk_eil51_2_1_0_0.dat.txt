Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 3.9251e-05 - average 4.41022e-07, 4 fixed columns
Coin0506I Presolve 81 (-8) rows, 47 (-4) columns and 248 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 35.669777
Clp0000I Optimal - objective value 35.669777
Coin0511I After Postsolve, objective 35.669777, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.669777
Clp0000I Optimal - objective value 35.669777
Clp0000I Optimal - objective value 35.669777
Coin0511I After Postsolve, objective 35.669777, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.66977722 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 9.14371
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.51327 iterations 31
Cbc0038I Solution found of 5.51327
Cbc0038I Relaxing continuous gives 5.51327
Cbc0038I Rounding solution of 2.47374 is better than previous of 5.51327

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 2.47374 to -6.96136 (0.05 seconds)
Cbc0038I Round again with cutoff of -9.83229
Cbc0038I Pass   2: suminf.    1.85416 (16) obj. -9.83229 iterations 24
Cbc0038I Pass   3: suminf.    1.59072 (28) obj. -9.83229 iterations 14
Cbc0038I Pass   4: suminf.    2.01343 (8) obj. -9.83229 iterations 25
Cbc0038I Pass   5: suminf.    1.16690 (6) obj. -9.83229 iterations 2
Cbc0038I Pass   6: suminf.    1.88487 (6) obj. -9.83229 iterations 14
Cbc0038I Pass   7: suminf.    1.67211 (5) obj. -9.83229 iterations 2
Cbc0038I Pass   8: suminf.    2.37863 (6) obj. -9.83229 iterations 5
Cbc0038I Pass   9: suminf.    2.57490 (8) obj. -9.83229 iterations 10
Cbc0038I Pass  10: suminf.    1.15324 (6) obj. -9.83229 iterations 6
Cbc0038I Pass  11: suminf.    1.15787 (6) obj. -9.83229 iterations 1
Cbc0038I Pass  12: suminf.    1.22211 (4) obj. -9.83229 iterations 9
Cbc0038I Pass  13: suminf.    1.16600 (5) obj. -9.83229 iterations 2
Cbc0038I Pass  14: suminf.    1.56716 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  15: suminf.    1.48345 (5) obj. -9.83229 iterations 3
Cbc0038I Pass  16: suminf.    1.42788 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  17: suminf.    1.27557 (5) obj. -9.83229 iterations 3
Cbc0038I Pass  18: suminf.    1.95981 (6) obj. -9.83229 iterations 7
Cbc0038I Pass  19: suminf.    1.48345 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  20: suminf.    1.48345 (5) obj. -9.83229 iterations 1
Cbc0038I Pass  21: suminf.    1.42788 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  22: suminf.    1.27557 (5) obj. -9.83229 iterations 3
Cbc0038I Pass  23: suminf.    1.95981 (6) obj. -9.83229 iterations 7
Cbc0038I Pass  24: suminf.    1.48345 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  25: suminf.    1.48345 (5) obj. -9.83229 iterations 1
Cbc0038I Pass  26: suminf.    1.42788 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  27: suminf.    1.27557 (5) obj. -9.83229 iterations 3
Cbc0038I Pass  28: suminf.    1.95981 (6) obj. -9.83229 iterations 7
Cbc0038I Pass  29: suminf.    1.48345 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  30: suminf.    1.48345 (5) obj. -9.83229 iterations 1
Cbc0038I Pass  31: suminf.    1.42788 (5) obj. -9.83229 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -6.96136 to -7.65282 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.9998
Cbc0038I Pass  31: suminf.    3.14348 (16) obj. -14.9998 iterations 0
Cbc0038I Pass  32: suminf.    1.85097 (5) obj. -14.9998 iterations 17
Cbc0038I Pass  33: suminf.    1.79418 (6) obj. -14.9998 iterations 5
Cbc0038I Pass  34: suminf.    2.15112 (8) obj. -14.9998 iterations 12
Cbc0038I Pass  35: suminf.    2.15112 (8) obj. -14.9998 iterations 0
Cbc0038I Pass  36: suminf.    3.33236 (11) obj. -14.9998 iterations 9
Cbc0038I Pass  37: suminf.    3.31985 (11) obj. -14.9998 iterations 1
Cbc0038I Pass  38: suminf.    2.17636 (7) obj. -14.9998 iterations 16
Cbc0038I Pass  39: suminf.    2.16088 (7) obj. -14.9998 iterations 5
Cbc0038I Pass  40: suminf.    1.99730 (6) obj. -14.9998 iterations 10
Cbc0038I Pass  41: suminf.    1.48164 (4) obj. -14.9998 iterations 4
Cbc0038I Pass  42: suminf.    1.43298 (5) obj. -14.9998 iterations 2
Cbc0038I Pass  43: suminf.    2.41953 (7) obj. -14.9998 iterations 14
Cbc0038I Pass  44: suminf.    1.93882 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  45: suminf.    1.92882 (7) obj. -14.9998 iterations 1
Cbc0038I Pass  46: suminf.    2.79027 (7) obj. -14.9998 iterations 9
Cbc0038I Pass  47: suminf.    2.41424 (7) obj. -14.9998 iterations 5
Cbc0038I Pass  48: suminf.    1.85915 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  49: suminf.    2.85977 (7) obj. -14.9998 iterations 8
Cbc0038I Pass  50: suminf.    2.41953 (7) obj. -14.9998 iterations 7
Cbc0038I Pass  51: suminf.    1.93882 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  52: suminf.    1.92882 (7) obj. -14.9998 iterations 1
Cbc0038I Pass  53: suminf.    2.79027 (7) obj. -14.9998 iterations 9
Cbc0038I Pass  54: suminf.    2.41424 (7) obj. -14.9998 iterations 5
Cbc0038I Pass  55: suminf.    1.85915 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  56: suminf.    2.85977 (7) obj. -14.9998 iterations 8
Cbc0038I Pass  57: suminf.    2.41953 (7) obj. -14.9998 iterations 7
Cbc0038I Pass  58: suminf.    1.93882 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  59: suminf.    1.92882 (7) obj. -14.9998 iterations 1
Cbc0038I Pass  60: suminf.    2.79027 (7) obj. -14.9998 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.65282 - took 0.08 seconds
Cbc0012I Integer solution of -7.65282 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 64 rows 38 columns
Cbc0031I 23 added rows had average density of 37.086957
Cbc0013I At root node, 23 cuts changed objective from -35.669777 to -25.351723 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8376 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1546 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 156 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 42.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 14 nodes, 9 on tree, -7.65282 best solution, best possible -25.351723 (0.67 seconds)
Cbc0001I Search completed - best objective -7.652819999999998, took 7067 iterations and 38 nodes (0.72 seconds)
Cbc0032I Strong branching done 486 times (10437 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 16, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-35) rows, 80 (-22) columns and 932 (-646) elements
Clp1000I sum of infeasibilities 1.38802e-07 - average 2.01162e-09, 42 fixed columns
Coin0506I Presolve 27 (-42) rows, 38 (-42) columns and 124 (-808) elements
Clp0006I 0  Obj -16.622322 Dual inf 54.765766 (38)
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 0.45537961 - largest nonzero change 2.841949e-05 ( 0.0022368729%) - largest zero change 2.9661335e-05
Clp0000I Optimal - objective value -14.747151
Clp0000I Optimal - objective value -14.747151
Coin0511I After Postsolve, objective -14.747151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -14.747151 Dual inf 22.839737 (30)
Clp0014I Perturbing problem by 0.001% of 4.1099976 - largest nonzero change 2.1336772e-05 ( 0.0011136878%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 46.104675
Clp0000I Optimal - objective value 46.104675
Clp0000I Optimal - objective value 46.104675
Coin0511I After Postsolve, objective 46.104675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.10467528 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 80 columns (80 integer (80 of which binary)) and 934 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.576%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 6.2826
Cbc0038I Pass   1: suminf.    3.17316 (21) obj. -34.2482 iterations 11
Cbc0038I Pass   2: suminf.    3.17316 (21) obj. -34.2482 iterations 1
Cbc0038I Solution found of -1.23117
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -1.23117 to -1.34804 (0.01 seconds)
Cbc0038I Round again with cutoff of -4.79205
Cbc0038I Pass   3: suminf.    3.17316 (21) obj. -34.2482 iterations 0
Cbc0038I Pass   4: suminf.    3.17316 (21) obj. -34.2482 iterations 3
Cbc0038I Pass   5: suminf.    0.28782 (1) obj. -4.79205 iterations 22
Cbc0038I Pass   6: suminf.    0.15556 (1) obj. -5.45339 iterations 2
Cbc0038I Pass   7: suminf.    1.31284 (8) obj. -7.3426 iterations 19
Cbc0038I Pass   8: suminf.    1.15390 (7) obj. -5.84766 iterations 4
Cbc0038I Pass   9: suminf.    0.63645 (3) obj. -4.79205 iterations 9
Cbc0038I Pass  10: suminf.    0.62194 (4) obj. -4.79205 iterations 2
Cbc0038I Pass  11: suminf.    0.71414 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  12: suminf.    0.71414 (4) obj. -4.79205 iterations 0
Cbc0038I Pass  13: suminf.    0.62194 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  14: suminf.    1.68790 (8) obj. -4.79205 iterations 17
Cbc0038I Pass  15: suminf.    1.68790 (8) obj. -4.79205 iterations 4
Cbc0038I Pass  16: suminf.    1.19202 (4) obj. -4.79205 iterations 11
Cbc0038I Pass  17: suminf.    0.82843 (4) obj. -4.79205 iterations 4
Cbc0038I Pass  18: suminf.    0.79510 (4) obj. -4.79205 iterations 4
Cbc0038I Pass  19: suminf.    0.79510 (4) obj. -4.79205 iterations 2
Cbc0038I Pass  20: suminf.    0.82843 (4) obj. -4.79205 iterations 4
Cbc0038I Pass  21: suminf.    2.34849 (14) obj. -4.79205 iterations 34
Cbc0038I Pass  22: suminf.    1.59662 (12) obj. -4.79205 iterations 13
Cbc0038I Pass  23: suminf.    1.35785 (6) obj. -4.79205 iterations 16
Cbc0038I Pass  24: suminf.    1.25583 (6) obj. -4.79205 iterations 4
Cbc0038I Pass  25: suminf.    1.31635 (5) obj. -4.79205 iterations 3
Cbc0038I Pass  26: suminf.    0.97412 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  27: suminf.    0.97412 (4) obj. -4.79205 iterations 1
Cbc0038I Pass  28: suminf.    0.94079 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  29: suminf.    0.94079 (4) obj. -4.79205 iterations 1
Cbc0038I Pass  30: suminf.    0.97412 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  31: suminf.    0.59961 (6) obj. -4.79205 iterations 10
Cbc0038I Pass  32: suminf.    0.51798 (4) obj. -4.81896 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 11 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1.34804 - took 0.02 seconds
Cbc0012I Integer solution of -1.34804 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 69 rows 80 columns, reduced to 8 rows 9 columns
Cbc0031I 35 added rows had average density of 28.057143
Cbc0013I At root node, 35 cuts changed objective from -35.787288 to -13.395699 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8404 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1321 row cuts average 76.7 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 97 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1037 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 299 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.632 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.34804 best solution, best possible -13.395699 (1.67 seconds)
Cbc0012I Integer solution of -4.0035 found by rounding after 4154 iterations and 1 nodes (1.67 seconds)
Cbc0012I Integer solution of -4.79832 found by rounding after 4752 iterations and 8 nodes (1.91 seconds)
Cbc0012I Integer solution of -5.22912 found by DiveCoefficient after 4795 iterations and 10 nodes (1.91 seconds)
Cbc0012I Integer solution of -7.2633 found by DiveCoefficient after 5006 iterations and 16 nodes (1.93 seconds)
Cbc0004I Integer solution of -7.65282 found after 5013 iterations and 16 nodes (1.93 seconds)
Cbc0001I Search completed - best objective -7.652819999999998, took 5116 iterations and 18 nodes (1.93 seconds)
Cbc0032I Strong branching done 380 times (3955 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 51 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       1.94

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 3.9251e-05 - average 4.41022e-07, 4 fixed columns
Coin0506I Presolve 81 (-8) rows, 47 (-4) columns and 248 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 35.669777
Clp0000I Optimal - objective value 35.669777
Coin0511I After Postsolve, objective 35.669777, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.669777
Clp0000I Optimal - objective value 35.669777
Clp0000I Optimal - objective value 35.669777
Coin0511I After Postsolve, objective 35.669777, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.66977722 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 9.14371
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.51327 iterations 31
Cbc0038I Solution found of 5.51327
Cbc0038I Relaxing continuous gives 5.51327
Cbc0038I Rounding solution of 2.47374 is better than previous of 5.51327

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 2.47374 to -6.96136 (0.05 seconds)
Cbc0038I Round again with cutoff of -9.83229
Cbc0038I Pass   2: suminf.    1.85416 (16) obj. -9.83229 iterations 24
Cbc0038I Pass   3: suminf.    1.59072 (28) obj. -9.83229 iterations 14
Cbc0038I Pass   4: suminf.    2.01343 (8) obj. -9.83229 iterations 25
Cbc0038I Pass   5: suminf.    1.16690 (6) obj. -9.83229 iterations 2
Cbc0038I Pass   6: suminf.    1.88487 (6) obj. -9.83229 iterations 14
Cbc0038I Pass   7: suminf.    1.67211 (5) obj. -9.83229 iterations 2
Cbc0038I Pass   8: suminf.    2.37863 (6) obj. -9.83229 iterations 5
Cbc0038I Pass   9: suminf.    2.57490 (8) obj. -9.83229 iterations 10
Cbc0038I Pass  10: suminf.    1.15324 (6) obj. -9.83229 iterations 6
Cbc0038I Pass  11: suminf.    1.15787 (6) obj. -9.83229 iterations 1
Cbc0038I Pass  12: suminf.    1.22211 (4) obj. -9.83229 iterations 9
Cbc0038I Pass  13: suminf.    1.16600 (5) obj. -9.83229 iterations 2
Cbc0038I Pass  14: suminf.    1.56716 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  15: suminf.    1.48345 (5) obj. -9.83229 iterations 3
Cbc0038I Pass  16: suminf.    1.42788 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  17: suminf.    1.27557 (5) obj. -9.83229 iterations 3
Cbc0038I Pass  18: suminf.    1.95981 (6) obj. -9.83229 iterations 7
Cbc0038I Pass  19: suminf.    1.48345 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  20: suminf.    1.48345 (5) obj. -9.83229 iterations 1
Cbc0038I Pass  21: suminf.    1.42788 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  22: suminf.    1.27557 (5) obj. -9.83229 iterations 3
Cbc0038I Pass  23: suminf.    1.95981 (6) obj. -9.83229 iterations 7
Cbc0038I Pass  24: suminf.    1.48345 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  25: suminf.    1.48345 (5) obj. -9.83229 iterations 1
Cbc0038I Pass  26: suminf.    1.42788 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  27: suminf.    1.27557 (5) obj. -9.83229 iterations 3
Cbc0038I Pass  28: suminf.    1.95981 (6) obj. -9.83229 iterations 7
Cbc0038I Pass  29: suminf.    1.48345 (5) obj. -9.83229 iterations 4
Cbc0038I Pass  30: suminf.    1.48345 (5) obj. -9.83229 iterations 1
Cbc0038I Pass  31: suminf.    1.42788 (5) obj. -9.83229 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -6.96136 to -7.65282 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.9998
Cbc0038I Pass  31: suminf.    3.14348 (16) obj. -14.9998 iterations 0
Cbc0038I Pass  32: suminf.    1.85097 (5) obj. -14.9998 iterations 17
Cbc0038I Pass  33: suminf.    1.79418 (6) obj. -14.9998 iterations 5
Cbc0038I Pass  34: suminf.    2.15112 (8) obj. -14.9998 iterations 12
Cbc0038I Pass  35: suminf.    2.15112 (8) obj. -14.9998 iterations 0
Cbc0038I Pass  36: suminf.    3.33236 (11) obj. -14.9998 iterations 9
Cbc0038I Pass  37: suminf.    3.31985 (11) obj. -14.9998 iterations 1
Cbc0038I Pass  38: suminf.    2.17636 (7) obj. -14.9998 iterations 16
Cbc0038I Pass  39: suminf.    2.16088 (7) obj. -14.9998 iterations 5
Cbc0038I Pass  40: suminf.    1.99730 (6) obj. -14.9998 iterations 10
Cbc0038I Pass  41: suminf.    1.48164 (4) obj. -14.9998 iterations 4
Cbc0038I Pass  42: suminf.    1.43298 (5) obj. -14.9998 iterations 2
Cbc0038I Pass  43: suminf.    2.41953 (7) obj. -14.9998 iterations 14
Cbc0038I Pass  44: suminf.    1.93882 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  45: suminf.    1.92882 (7) obj. -14.9998 iterations 1
Cbc0038I Pass  46: suminf.    2.79027 (7) obj. -14.9998 iterations 9
Cbc0038I Pass  47: suminf.    2.41424 (7) obj. -14.9998 iterations 5
Cbc0038I Pass  48: suminf.    1.85915 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  49: suminf.    2.85977 (7) obj. -14.9998 iterations 8
Cbc0038I Pass  50: suminf.    2.41953 (7) obj. -14.9998 iterations 7
Cbc0038I Pass  51: suminf.    1.93882 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  52: suminf.    1.92882 (7) obj. -14.9998 iterations 1
Cbc0038I Pass  53: suminf.    2.79027 (7) obj. -14.9998 iterations 9
Cbc0038I Pass  54: suminf.    2.41424 (7) obj. -14.9998 iterations 5
Cbc0038I Pass  55: suminf.    1.85915 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  56: suminf.    2.85977 (7) obj. -14.9998 iterations 8
Cbc0038I Pass  57: suminf.    2.41953 (7) obj. -14.9998 iterations 7
Cbc0038I Pass  58: suminf.    1.93882 (7) obj. -14.9998 iterations 3
Cbc0038I Pass  59: suminf.    1.92882 (7) obj. -14.9998 iterations 1
Cbc0038I Pass  60: suminf.    2.79027 (7) obj. -14.9998 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.65282 - took 0.08 seconds
Cbc0012I Integer solution of -7.65282 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 64 rows 38 columns
Cbc0031I 23 added rows had average density of 37.086957
Cbc0013I At root node, 23 cuts changed objective from -35.669777 to -25.351723 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8376 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1546 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 156 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 42.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -7.65282 best solution, best possible -25.351723 (0.69 seconds)
Cbc0001I Search completed - best objective -7.652819999999998, took 7067 iterations and 38 nodes (0.82 seconds)
Cbc0032I Strong branching done 486 times (10437 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 16, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.83

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 80 (-23) columns and 932 (-647) elements
Clp1000I sum of infeasibilities 1.38802e-07 - average 2.01162e-09, 42 fixed columns
Coin0506I Presolve 27 (-42) rows, 38 (-42) columns and 124 (-808) elements
Clp0006I 0  Obj -16.622322 Dual inf 54.765766 (38)
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 0.45537961 - largest nonzero change 2.841949e-05 ( 0.0022368729%) - largest zero change 2.9661335e-05
Clp0000I Optimal - objective value -14.747151
Clp0000I Optimal - objective value -14.747151
Coin0511I After Postsolve, objective -14.747151, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -14.747151 Dual inf 22.839737 (30)
Clp0014I Perturbing problem by 0.001% of 4.1099976 - largest nonzero change 2.1336772e-05 ( 0.0011136878%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 46.104675
Clp0000I Optimal - objective value 46.104675
Clp0000I Optimal - objective value 46.104675
Coin0511I After Postsolve, objective 46.104675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.10467528 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 80 columns (80 integer (80 of which binary)) and 934 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.576%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 6.2826
Cbc0038I Pass   1: suminf.    3.17316 (21) obj. -34.2482 iterations 11
Cbc0038I Pass   2: suminf.    3.17316 (21) obj. -34.2482 iterations 1
Cbc0038I Solution found of -1.23117
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -1.23117 to -1.34804 (0.02 seconds)
Cbc0038I Round again with cutoff of -4.79205
Cbc0038I Pass   3: suminf.    3.17316 (21) obj. -34.2482 iterations 0
Cbc0038I Pass   4: suminf.    3.17316 (21) obj. -34.2482 iterations 3
Cbc0038I Pass   5: suminf.    0.28782 (1) obj. -4.79205 iterations 22
Cbc0038I Pass   6: suminf.    0.15556 (1) obj. -5.45339 iterations 2
Cbc0038I Pass   7: suminf.    1.31284 (8) obj. -7.3426 iterations 19
Cbc0038I Pass   8: suminf.    1.15390 (7) obj. -5.84766 iterations 4
Cbc0038I Pass   9: suminf.    0.63645 (3) obj. -4.79205 iterations 9
Cbc0038I Pass  10: suminf.    0.62194 (4) obj. -4.79205 iterations 2
Cbc0038I Pass  11: suminf.    0.71414 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  12: suminf.    0.71414 (4) obj. -4.79205 iterations 0
Cbc0038I Pass  13: suminf.    0.62194 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  14: suminf.    1.68790 (8) obj. -4.79205 iterations 17
Cbc0038I Pass  15: suminf.    1.68790 (8) obj. -4.79205 iterations 4
Cbc0038I Pass  16: suminf.    1.19202 (4) obj. -4.79205 iterations 11
Cbc0038I Pass  17: suminf.    0.82843 (4) obj. -4.79205 iterations 4
Cbc0038I Pass  18: suminf.    0.79510 (4) obj. -4.79205 iterations 4
Cbc0038I Pass  19: suminf.    0.79510 (4) obj. -4.79205 iterations 2
Cbc0038I Pass  20: suminf.    0.82843 (4) obj. -4.79205 iterations 4
Cbc0038I Pass  21: suminf.    2.34849 (14) obj. -4.79205 iterations 34
Cbc0038I Pass  22: suminf.    1.59662 (12) obj. -4.79205 iterations 13
Cbc0038I Pass  23: suminf.    1.35785 (6) obj. -4.79205 iterations 16
Cbc0038I Pass  24: suminf.    1.25583 (6) obj. -4.79205 iterations 4
Cbc0038I Pass  25: suminf.    1.31635 (5) obj. -4.79205 iterations 3
Cbc0038I Pass  26: suminf.    0.97412 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  27: suminf.    0.97412 (4) obj. -4.79205 iterations 1
Cbc0038I Pass  28: suminf.    0.94079 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  29: suminf.    0.94079 (4) obj. -4.79205 iterations 1
Cbc0038I Pass  30: suminf.    0.97412 (4) obj. -4.79205 iterations 3
Cbc0038I Pass  31: suminf.    0.59961 (6) obj. -4.79205 iterations 10
Cbc0038I Pass  32: suminf.    0.51798 (4) obj. -4.81896 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 11 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -1.34804 - took 0.02 seconds
Cbc0012I Integer solution of -1.34804 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 69 rows 80 columns, reduced to 8 rows 9 columns
Cbc0031I 35 added rows had average density of 28.057143
Cbc0013I At root node, 35 cuts changed objective from -35.787288 to -13.395699 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8404 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1321 row cuts average 76.7 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 97 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1037 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 299 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.710 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.34804 best solution, best possible -13.395699 (1.94 seconds)
Cbc0012I Integer solution of -4.0035 found by rounding after 4154 iterations and 1 nodes (1.94 seconds)
Cbc0012I Integer solution of -4.79832 found by rounding after 4752 iterations and 8 nodes (2.19 seconds)
Cbc0012I Integer solution of -5.22912 found by DiveCoefficient after 4795 iterations and 10 nodes (2.20 seconds)
Cbc0012I Integer solution of -7.2633 found by DiveCoefficient after 5006 iterations and 16 nodes (2.22 seconds)
Cbc0004I Integer solution of -7.65282 found after 5013 iterations and 16 nodes (2.22 seconds)
Cbc0001I Search completed - best objective -7.652819999999998, took 5116 iterations and 18 nodes (2.23 seconds)
Cbc0032I Strong branching done 380 times (3955 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 51 variables fixed on reduced cost
Total time (CPU seconds):       1.64   (Wallclock seconds):       2.24

