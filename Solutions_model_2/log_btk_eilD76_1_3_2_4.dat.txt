Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-12) rows, 76 (-2) columns and 430 (-23) elements
Clp1000I sum of infeasibilities 3.80344e-05 - average 2.65975e-07, 6 fixed columns
Coin0506I Presolve 131 (-12) rows, 70 (-6) columns and 394 (-36) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.32231226 - largest nonzero change 0 ( 0%) - largest zero change 2.1322823e-05
Clp0000I Optimal - objective value 37.773381
Clp0000I Optimal - objective value 37.773381
Coin0511I After Postsolve, objective 37.773381, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.773381
Clp0000I Optimal - objective value 37.773381
Clp0000I Optimal - objective value 37.773381
Coin0511I After Postsolve, objective 37.773381, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.77338126 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 143 rows, 76 columns (75 integer (75 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.213%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 11.8463
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.2745 iterations 67
Cbc0038I Solution found of 18.2745
Cbc0038I Relaxing continuous gives 18.2745
Cbc0038I Rounding solution of -5.6716 is better than previous of 18.2745

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 90 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -5.6716 to -11.8847 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.4736
Cbc0038I Pass   2: suminf.    4.04682 (35) obj. -14.4736 iterations 38
Cbc0038I Pass   3: suminf.    3.96043 (44) obj. -14.4736 iterations 14
Cbc0038I Pass   4: suminf.    3.34782 (9) obj. -14.4736 iterations 42
Cbc0038I Pass   5: suminf.    2.71008 (9) obj. -14.4736 iterations 5
Cbc0038I Pass   6: suminf.    1.64450 (6) obj. -14.4736 iterations 5
Cbc0038I Pass   7: suminf.    1.63385 (5) obj. -14.4736 iterations 11
Cbc0038I Pass   8: suminf.    1.63377 (6) obj. -14.4736 iterations 1
Cbc0038I Pass   9: suminf.    3.39443 (10) obj. -14.4736 iterations 12
Cbc0038I Pass  10: suminf.    2.35745 (7) obj. -14.4736 iterations 13
Cbc0038I Pass  11: suminf.    1.71889 (6) obj. -14.4736 iterations 5
Cbc0038I Pass  12: suminf.    1.36553 (5) obj. -14.4736 iterations 2
Cbc0038I Pass  13: suminf.    2.48821 (9) obj. -14.4736 iterations 9
Cbc0038I Pass  14: suminf.    2.19647 (7) obj. -14.4736 iterations 8
Cbc0038I Pass  15: suminf.    1.89984 (11) obj. -14.4736 iterations 11
Cbc0038I Pass  16: suminf.    2.12211 (7) obj. -14.4736 iterations 11
Cbc0038I Pass  17: suminf.    2.12211 (7) obj. -14.4736 iterations 0
Cbc0038I Pass  18: suminf.    2.06690 (8) obj. -14.4736 iterations 7
Cbc0038I Pass  19: suminf.    2.28985 (8) obj. -14.4736 iterations 6
Cbc0038I Pass  20: suminf.    2.14493 (7) obj. -14.4736 iterations 1
Cbc0038I Pass  21: suminf.    2.12676 (11) obj. -14.4736 iterations 4
Cbc0038I Pass  22: suminf.    2.85842 (8) obj. -14.4736 iterations 12
Cbc0038I Pass  23: suminf.    2.77274 (9) obj. -14.4736 iterations 1
Cbc0038I Pass  24: suminf.    2.77274 (9) obj. -14.4736 iterations 0
Cbc0038I Pass  25: suminf.    1.84899 (8) obj. -14.4736 iterations 11
Cbc0038I Pass  26: suminf.    1.84899 (8) obj. -14.4736 iterations 0
Cbc0038I Pass  27: suminf.    2.70288 (8) obj. -14.4736 iterations 6
Cbc0038I Pass  28: suminf.    1.96538 (7) obj. -14.4736 iterations 1
Cbc0038I Pass  29: suminf.    1.88220 (10) obj. -14.4736 iterations 2
Cbc0038I Pass  30: suminf.    1.57680 (6) obj. -14.4736 iterations 12
Cbc0038I Pass  31: suminf.    0.91300 (7) obj. -14.4736 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 100 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -11.8847 - took 0.10 seconds
Cbc0012I Integer solution of -11.88469 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 143 rows 76 columns, reduced to 90 rows 48 columns
Cbc0031I 32 added rows had average density of 48.875
Cbc0013I At root node, 32 cuts changed objective from -37.773381 to -29.30846 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12706 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2394 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.88469 best solution, best possible -29.30846 (1.05 seconds)
Cbc0038I Full problem 143 rows 76 columns, reduced to 75 rows 42 columns
Cbc0001I Search completed - best objective -11.88469000000001, took 11488 iterations and 68 nodes (1.45 seconds)
Cbc0032I Strong branching done 904 times (15962 iterations), fathomed 8 nodes and fixed 1 variables
Cbc0035I Maximum depth 33, 101 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 112 (-40) columns and 1700 (-1603) elements
Clp1000I sum of infeasibilities 4.43432e-08 - average 4.22316e-10, 24 fixed columns
Coin0506I Presolve 82 (-23) rows, 88 (-24) columns and 1200 (-500) elements
Clp0006I 0  Obj 42.090532 Dual inf 5.0545254 (88)
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 2.1327855 - largest nonzero change 2.3422641e-05 ( 0.0014083952%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 56.451732
Clp0000I Optimal - objective value 56.451732
Coin0511I After Postsolve, objective 56.451732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.451732 Dual inf 2.6120742 (4)
Clp0014I Perturbing problem by 0.001% of 1.6940204 - largest nonzero change 2.9757015e-05 ( 0.0023600025%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 58.910951
Clp0000I Optimal - objective value 58.910951
Clp0000I Optimal - objective value 58.910951
Coin0511I After Postsolve, objective 58.910951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.91095133 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 112 columns (112 integer (112 of which binary)) and 1702 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.194%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 8.61493
Cbc0038I Pass   1: suminf.    4.85957 (30) obj. -34.2436 iterations 20
Cbc0038I Pass   2: suminf.    4.85957 (30) obj. -34.2436 iterations 1
Cbc0038I Pass   3: suminf.    0.91671 (9) obj. -10.3196 iterations 21
Cbc0038I Solution found of 4.07799
Cbc0038I Rounding solution of 1.0858 is better than previous of 4.07799

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 112 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 1.0858 to -11.8847 (0.03 seconds)
Cbc0038I Round again with cutoff of -15.9272
Cbc0038I Pass   4: suminf.    4.85957 (30) obj. -34.2436 iterations 0
Cbc0038I Pass   5: suminf.    4.85957 (30) obj. -34.2436 iterations 1
Cbc0038I Pass   6: suminf.    1.34102 (7) obj. -15.9272 iterations 33
Cbc0038I Pass   7: suminf.    1.09895 (5) obj. -19.6886 iterations 3
Cbc0038I Pass   8: suminf.    0.34904 (3) obj. -15.9272 iterations 16
Cbc0038I Pass   9: suminf.    0.34904 (3) obj. -15.9272 iterations 0
Cbc0038I Pass  10: suminf.    0.48286 (4) obj. -15.9272 iterations 13
Cbc0038I Pass  11: suminf.    0.46006 (3) obj. -15.9272 iterations 16
Cbc0038I Pass  12: suminf.    0.34904 (3) obj. -15.9272 iterations 10
Cbc0038I Pass  13: suminf.    4.59714 (15) obj. -15.9272 iterations 38
Cbc0038I Pass  14: suminf.    2.57418 (12) obj. -15.9272 iterations 7
Cbc0038I Pass  15: suminf.    2.22157 (10) obj. -17.7567 iterations 4
Cbc0038I Pass  16: suminf.    1.01132 (6) obj. -15.9272 iterations 16
Cbc0038I Pass  17: suminf.    0.85814 (5) obj. -15.9272 iterations 5
Cbc0038I Pass  18: suminf.    1.06843 (7) obj. -15.9272 iterations 13
Cbc0038I Pass  19: suminf.    1.06809 (7) obj. -15.9272 iterations 1
Cbc0038I Pass  20: suminf.    0.80172 (5) obj. -15.9272 iterations 3
Cbc0038I Pass  21: suminf.    0.80172 (5) obj. -15.9272 iterations 1
Cbc0038I Pass  22: suminf.    3.20676 (14) obj. -15.9272 iterations 40
Cbc0038I Pass  23: suminf.    2.88801 (14) obj. -15.9272 iterations 10
Cbc0038I Pass  24: suminf.    2.46772 (10) obj. -15.9272 iterations 14
Cbc0038I Pass  25: suminf.    2.13074 (9) obj. -15.9272 iterations 2
Cbc0038I Pass  26: suminf.    1.09024 (6) obj. -15.9272 iterations 10
Cbc0038I Pass  27: suminf.    0.76638 (6) obj. -16.195 iterations 9
Cbc0038I Pass  28: suminf.    1.71350 (7) obj. -15.9272 iterations 10
Cbc0038I Pass  29: suminf.    1.33226 (5) obj. -15.9272 iterations 7
Cbc0038I Pass  30: suminf.    0.89941 (5) obj. -15.9272 iterations 2
Cbc0038I Pass  31: suminf.    0.68400 (4) obj. -17.2521 iterations 1
Cbc0038I Pass  32: suminf.    0.98551 (4) obj. -15.9272 iterations 2
Cbc0038I Pass  33: suminf.    0.86841 (4) obj. -15.9272 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 112 columns, reduced to 2 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -11.8847 - took 0.03 seconds
Cbc0012I Integer solution of -11.88469 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 49 added rows had average density of 38.285714
Cbc0013I At root node, 49 cuts changed objective from -52.308742 to -17.155831 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14810 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2131 row cuts average 106.8 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 219 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 585 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2550 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 526 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.648 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.88469 best solution, best possible -17.155831 (2.56 seconds)
Cbc0001I Search completed - best objective -11.88469000000001, took 7660 iterations and 18 nodes (3.14 seconds)
Cbc0032I Strong branching done 410 times (7509 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 87 variables fixed on reduced cost
Total time (CPU seconds):       2.36   (Wallclock seconds):       3.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-12) rows, 76 (-2) columns and 430 (-23) elements
Clp1000I sum of infeasibilities 3.80344e-05 - average 2.65975e-07, 6 fixed columns
Coin0506I Presolve 131 (-12) rows, 70 (-6) columns and 394 (-36) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.32231226 - largest nonzero change 0 ( 0%) - largest zero change 2.1322823e-05
Clp0000I Optimal - objective value 37.773381
Clp0000I Optimal - objective value 37.773381
Coin0511I After Postsolve, objective 37.773381, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.773381
Clp0000I Optimal - objective value 37.773381
Clp0000I Optimal - objective value 37.773381
Coin0511I After Postsolve, objective 37.773381, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.77338126 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 143 rows, 76 columns (75 integer (75 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.213%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 11.8463
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.2745 iterations 67
Cbc0038I Solution found of 18.2745
Cbc0038I Relaxing continuous gives 18.2745
Cbc0038I Rounding solution of -5.6716 is better than previous of 18.2745

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 90 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -5.6716 to -11.8847 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.4736
Cbc0038I Pass   2: suminf.    4.04682 (35) obj. -14.4736 iterations 38
Cbc0038I Pass   3: suminf.    3.96043 (44) obj. -14.4736 iterations 14
Cbc0038I Pass   4: suminf.    3.34782 (9) obj. -14.4736 iterations 42
Cbc0038I Pass   5: suminf.    2.71008 (9) obj. -14.4736 iterations 5
Cbc0038I Pass   6: suminf.    1.64450 (6) obj. -14.4736 iterations 5
Cbc0038I Pass   7: suminf.    1.63385 (5) obj. -14.4736 iterations 11
Cbc0038I Pass   8: suminf.    1.63377 (6) obj. -14.4736 iterations 1
Cbc0038I Pass   9: suminf.    3.39443 (10) obj. -14.4736 iterations 12
Cbc0038I Pass  10: suminf.    2.35745 (7) obj. -14.4736 iterations 13
Cbc0038I Pass  11: suminf.    1.71889 (6) obj. -14.4736 iterations 5
Cbc0038I Pass  12: suminf.    1.36553 (5) obj. -14.4736 iterations 2
Cbc0038I Pass  13: suminf.    2.48821 (9) obj. -14.4736 iterations 9
Cbc0038I Pass  14: suminf.    2.19647 (7) obj. -14.4736 iterations 8
Cbc0038I Pass  15: suminf.    1.89984 (11) obj. -14.4736 iterations 11
Cbc0038I Pass  16: suminf.    2.12211 (7) obj. -14.4736 iterations 11
Cbc0038I Pass  17: suminf.    2.12211 (7) obj. -14.4736 iterations 0
Cbc0038I Pass  18: suminf.    2.06690 (8) obj. -14.4736 iterations 7
Cbc0038I Pass  19: suminf.    2.28985 (8) obj. -14.4736 iterations 6
Cbc0038I Pass  20: suminf.    2.14493 (7) obj. -14.4736 iterations 1
Cbc0038I Pass  21: suminf.    2.12676 (11) obj. -14.4736 iterations 4
Cbc0038I Pass  22: suminf.    2.85842 (8) obj. -14.4736 iterations 12
Cbc0038I Pass  23: suminf.    2.77274 (9) obj. -14.4736 iterations 1
Cbc0038I Pass  24: suminf.    2.77274 (9) obj. -14.4736 iterations 0
Cbc0038I Pass  25: suminf.    1.84899 (8) obj. -14.4736 iterations 11
Cbc0038I Pass  26: suminf.    1.84899 (8) obj. -14.4736 iterations 0
Cbc0038I Pass  27: suminf.    2.70288 (8) obj. -14.4736 iterations 6
Cbc0038I Pass  28: suminf.    1.96538 (7) obj. -14.4736 iterations 1
Cbc0038I Pass  29: suminf.    1.88220 (10) obj. -14.4736 iterations 2
Cbc0038I Pass  30: suminf.    1.57680 (6) obj. -14.4736 iterations 12
Cbc0038I Pass  31: suminf.    0.91300 (7) obj. -14.4736 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 100 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -11.8847 - took 0.10 seconds
Cbc0012I Integer solution of -11.88469 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 143 rows 76 columns, reduced to 90 rows 48 columns
Cbc0031I 32 added rows had average density of 48.875
Cbc0013I At root node, 32 cuts changed objective from -37.773381 to -29.30846 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12706 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2394 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11.88469 best solution, best possible -29.30846 (0.99 seconds)
Cbc0038I Full problem 143 rows 76 columns, reduced to 75 rows 42 columns
Cbc0001I Search completed - best objective -11.88469000000001, took 11488 iterations and 68 nodes (1.37 seconds)
Cbc0032I Strong branching done 904 times (15962 iterations), fathomed 8 nodes and fixed 1 variables
Cbc0035I Maximum depth 33, 101 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 112 (-41) columns and 1700 (-1604) elements
Clp1000I sum of infeasibilities 4.43432e-08 - average 4.22316e-10, 24 fixed columns
Coin0506I Presolve 82 (-23) rows, 88 (-24) columns and 1200 (-500) elements
Clp0006I 0  Obj 42.090532 Dual inf 5.0545254 (88)
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 2.1327855 - largest nonzero change 2.3422641e-05 ( 0.0014083952%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 56.451732
Clp0000I Optimal - objective value 56.451732
Coin0511I After Postsolve, objective 56.451732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.451732 Dual inf 2.6120742 (4)
Clp0014I Perturbing problem by 0.001% of 1.6940204 - largest nonzero change 2.9757015e-05 ( 0.0023600025%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 58.910951
Clp0000I Optimal - objective value 58.910951
Clp0000I Optimal - objective value 58.910951
Coin0511I After Postsolve, objective 58.910951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.91095133 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 112 columns (112 integer (112 of which binary)) and 1702 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.194%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 8.61493
Cbc0038I Pass   1: suminf.    4.85957 (30) obj. -34.2436 iterations 20
Cbc0038I Pass   2: suminf.    4.85957 (30) obj. -34.2436 iterations 1
Cbc0038I Pass   3: suminf.    0.91671 (9) obj. -10.3196 iterations 21
Cbc0038I Solution found of 4.07799
Cbc0038I Rounding solution of 1.0858 is better than previous of 4.07799

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 112 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 1.0858 to -11.8847 (0.03 seconds)
Cbc0038I Round again with cutoff of -15.9272
Cbc0038I Pass   4: suminf.    4.85957 (30) obj. -34.2436 iterations 0
Cbc0038I Pass   5: suminf.    4.85957 (30) obj. -34.2436 iterations 1
Cbc0038I Pass   6: suminf.    1.34102 (7) obj. -15.9272 iterations 33
Cbc0038I Pass   7: suminf.    1.09895 (5) obj. -19.6886 iterations 3
Cbc0038I Pass   8: suminf.    0.34904 (3) obj. -15.9272 iterations 16
Cbc0038I Pass   9: suminf.    0.34904 (3) obj. -15.9272 iterations 0
Cbc0038I Pass  10: suminf.    0.48286 (4) obj. -15.9272 iterations 13
Cbc0038I Pass  11: suminf.    0.46006 (3) obj. -15.9272 iterations 16
Cbc0038I Pass  12: suminf.    0.34904 (3) obj. -15.9272 iterations 10
Cbc0038I Pass  13: suminf.    4.59714 (15) obj. -15.9272 iterations 38
Cbc0038I Pass  14: suminf.    2.57418 (12) obj. -15.9272 iterations 7
Cbc0038I Pass  15: suminf.    2.22157 (10) obj. -17.7567 iterations 4
Cbc0038I Pass  16: suminf.    1.01132 (6) obj. -15.9272 iterations 16
Cbc0038I Pass  17: suminf.    0.85814 (5) obj. -15.9272 iterations 5
Cbc0038I Pass  18: suminf.    1.06843 (7) obj. -15.9272 iterations 13
Cbc0038I Pass  19: suminf.    1.06809 (7) obj. -15.9272 iterations 1
Cbc0038I Pass  20: suminf.    0.80172 (5) obj. -15.9272 iterations 3
Cbc0038I Pass  21: suminf.    0.80172 (5) obj. -15.9272 iterations 1
Cbc0038I Pass  22: suminf.    3.20676 (14) obj. -15.9272 iterations 40
Cbc0038I Pass  23: suminf.    2.88801 (14) obj. -15.9272 iterations 10
Cbc0038I Pass  24: suminf.    2.46772 (10) obj. -15.9272 iterations 14
Cbc0038I Pass  25: suminf.    2.13074 (9) obj. -15.9272 iterations 2
Cbc0038I Pass  26: suminf.    1.09024 (6) obj. -15.9272 iterations 10
Cbc0038I Pass  27: suminf.    0.76638 (6) obj. -16.195 iterations 9
Cbc0038I Pass  28: suminf.    1.71350 (7) obj. -15.9272 iterations 10
Cbc0038I Pass  29: suminf.    1.33226 (5) obj. -15.9272 iterations 7
Cbc0038I Pass  30: suminf.    0.89941 (5) obj. -15.9272 iterations 2
Cbc0038I Pass  31: suminf.    0.68400 (4) obj. -17.2521 iterations 1
Cbc0038I Pass  32: suminf.    0.98551 (4) obj. -15.9272 iterations 2
Cbc0038I Pass  33: suminf.    0.86841 (4) obj. -15.9272 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 112 columns, reduced to 2 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -11.8847 - took 0.03 seconds
Cbc0012I Integer solution of -11.88469 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 49 added rows had average density of 38.285714
Cbc0013I At root node, 49 cuts changed objective from -52.308742 to -17.155831 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14810 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2131 row cuts average 106.8 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 219 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 585 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2550 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 526 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.628 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.88469 best solution, best possible -17.155831 (2.47 seconds)
Cbc0001I Search completed - best objective -11.88469000000001, took 7660 iterations and 18 nodes (3.02 seconds)
Cbc0032I Strong branching done 410 times (7509 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 87 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       3.04

