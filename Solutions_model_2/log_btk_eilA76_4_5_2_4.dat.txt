Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 72 (-6) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 5.57635e-05 - average 4.35652e-07, 13 fixed columns
Coin0506I Presolve 101 (-27) rows, 57 (-15) columns and 308 (-84) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Coin0511I After Postsolve, objective 39.612728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25578669 - largest nonzero change 0 ( 0%) - largest zero change 2.9738336e-05
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Coin0511I After Postsolve, objective 39.612728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.61272816 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 72 columns (71 integer (71 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.5703
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.87271 iterations 43
Cbc0038I Solution found of 8.87271
Cbc0038I Relaxing continuous gives 8.87271
Cbc0038I Rounding solution of 3.23176 is better than previous of 8.87271

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 3.23176 to -14.322 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.8512
Cbc0038I Pass   2: suminf.    2.95876 (13) obj. -16.8512 iterations 15
Cbc0038I Pass   3: suminf.    1.91468 (8) obj. -16.8512 iterations 14
Cbc0038I Pass   4: suminf.    1.90882 (7) obj. -16.8512 iterations 2
Cbc0038I Pass   5: suminf.    1.17760 (4) obj. -16.8512 iterations 7
Cbc0038I Pass   6: suminf.    1.17760 (4) obj. -16.8512 iterations 0
Cbc0038I Pass   7: suminf.    1.30347 (4) obj. -16.8512 iterations 5
Cbc0038I Pass   8: suminf.    1.22640 (4) obj. -16.8512 iterations 3
Cbc0038I Pass   9: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  10: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  11: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  12: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  13: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  14: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  15: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I Pass  16: suminf.    1.22640 (4) obj. -16.8512 iterations 1
Cbc0038I Pass  17: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  18: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  19: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  20: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  21: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  22: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  23: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I Pass  24: suminf.    1.22640 (4) obj. -16.8512 iterations 1
Cbc0038I Pass  25: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  26: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  27: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  28: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  29: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  30: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  31: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -14.322 - took 0.07 seconds
Cbc0012I Integer solution of -14.322 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0031I 21 added rows had average density of 55.571429
Cbc0013I At root node, 21 cuts changed objective from -39.612728 to -31.937197 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8990 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1533 row cuts average 71.8 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -14.322 best solution, best possible -31.937197 (0.71 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 2 rows 3 columns
Cbc0004I Integer solution of -14.58708 found after 8007 iterations and 76 nodes (0.89 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 7 rows 12 columns
Cbc0001I Search completed - best objective -14.58708, took 8821 iterations and 104 nodes (0.93 seconds)
Cbc0032I Strong branching done 914 times (14832 iterations), fathomed 11 nodes and fixed 41 variables
Cbc0035I Maximum depth 20, 190 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       0.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 111 (-41) columns and 1828 (-1475) elements
Clp1000I sum of infeasibilities 1.43149e-07 - average 1.47576e-09, 11 fixed columns
Coin0506I Presolve 85 (-12) rows, 98 (-13) columns and 1539 (-289) elements
Clp0006I 0  Obj 44.841344 Dual inf 9.3571211 (96)
Clp0029I End of values pass after 97 iterations
Clp0014I Perturbing problem by 0.001% of 1.915906 - largest nonzero change 2.2435554e-05 ( 0.0016580886%) - largest zero change 2.9575442e-05
Clp0000I Optimal - objective value 55.799721
Clp0000I Optimal - objective value 55.799721
Coin0511I After Postsolve, objective 55.799721, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.799721
Clp0000I Optimal - objective value 55.799721
Clp0000I Optimal - objective value 55.799721
Clp0000I Optimal - objective value 55.799721
Coin0511I After Postsolve, objective 55.799721, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.799721 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 111 columns (111 integer (111 of which binary)) and 1830 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.884%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.40447
Cbc0038I Pass   1: suminf.    2.27492 (26) obj. -40.8184 iterations 19
Cbc0038I Pass   2: suminf.    2.27492 (26) obj. -40.8184 iterations 1
Cbc0038I Pass   3: suminf.    0.20333 (4) obj. -6.74653 iterations 22
Cbc0038I Solution found of -2.94986
Cbc0038I Rounding solution of -5.41136 is better than previous of -2.94986

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -5.41136 to -6.73294 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.8245
Cbc0038I Pass   4: suminf.    2.27492 (26) obj. -40.8184 iterations 0
Cbc0038I Pass   5: suminf.    2.27492 (26) obj. -40.8184 iterations 1
Cbc0038I Pass   6: suminf.    0.73119 (6) obj. -10.8245 iterations 29
Cbc0038I Pass   7: suminf.    0.30431 (12) obj. -10.8245 iterations 13
Cbc0038I Pass   8: suminf.    0.30431 (12) obj. -10.8245 iterations 0
Cbc0038I Pass   9: suminf.    1.74000 (7) obj. -10.8245 iterations 23
Cbc0038I Pass  10: suminf.    0.54053 (6) obj. -10.8245 iterations 8
Cbc0038I Pass  11: suminf.    0.54053 (6) obj. -10.8245 iterations 0
Cbc0038I Pass  12: suminf.    1.91709 (9) obj. -10.8245 iterations 12
Cbc0038I Pass  13: suminf.    1.91709 (9) obj. -10.8245 iterations 0
Cbc0038I Pass  14: suminf.    1.62255 (9) obj. -10.8245 iterations 5
Cbc0038I Pass  15: suminf.    1.59081 (10) obj. -10.8245 iterations 7
Cbc0038I Pass  16: suminf.    1.68626 (7) obj. -10.8245 iterations 11
Cbc0038I Pass  17: suminf.    1.51632 (7) obj. -10.8245 iterations 5
Cbc0038I Pass  18: suminf.    1.88600 (7) obj. -10.8245 iterations 6
Cbc0038I Pass  19: suminf.    1.22725 (6) obj. -10.8245 iterations 4
Cbc0038I Pass  20: suminf.    0.75249 (6) obj. -10.8245 iterations 5
Cbc0038I Pass  21: suminf.    0.48900 (7) obj. -10.8245 iterations 5
Cbc0038I Pass  22: suminf.    1.79427 (6) obj. -10.8245 iterations 10
Cbc0038I Pass  23: suminf.    1.05876 (12) obj. -10.8245 iterations 31
Cbc0038I Pass  24: suminf.    1.05876 (12) obj. -10.8245 iterations 3
Cbc0038I Pass  25: suminf.    0.92736 (7) obj. -10.8245 iterations 26
Cbc0038I Pass  26: suminf.    0.89856 (8) obj. -10.8245 iterations 5
Cbc0038I Pass  27: suminf.    1.88600 (7) obj. -10.8245 iterations 11
Cbc0038I Pass  28: suminf.    1.22725 (6) obj. -10.8245 iterations 4
Cbc0038I Pass  29: suminf.    0.75249 (6) obj. -10.8245 iterations 5
Cbc0038I Pass  30: suminf.    0.48900 (7) obj. -10.8245 iterations 5
Cbc0038I Pass  31: suminf.    1.79427 (6) obj. -10.8245 iterations 10
Cbc0038I Pass  32: suminf.    2.56136 (17) obj. -10.8245 iterations 46
Cbc0038I Pass  33: suminf.    1.15322 (18) obj. -10.8245 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 44 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -6.73294 to -13.2286 (0.07 seconds)
Cbc0038I Round again with cutoff of -20.1125
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.27492 (26) obj. -40.8184 iterations 0
Cbc0038I Pass  34: suminf.    2.27492 (26) obj. -40.8184 iterations 1
Cbc0038I Pass  35: suminf.    1.40872 (20) obj. -20.1125 iterations 30
Cbc0038I Pass  36: suminf.    1.40872 (20) obj. -20.1125 iterations 0
Cbc0038I Pass  37: suminf.    1.85455 (9) obj. -20.1125 iterations 27
Cbc0038I Pass  38: suminf.    1.79878 (9) obj. -20.1125 iterations 7
Cbc0038I Pass  39: suminf.    1.85455 (9) obj. -20.1125 iterations 8
Cbc0038I Pass  40: suminf.    2.10946 (18) obj. -20.1125 iterations 19
Cbc0038I Pass  41: suminf.    1.98316 (17) obj. -20.1125 iterations 4
Cbc0038I Pass  42: suminf.    1.41515 (11) obj. -20.1125 iterations 21
Cbc0038I Pass  43: suminf.    0.99233 (15) obj. -20.1125 iterations 3
Cbc0038I Pass  44: suminf.    2.39889 (11) obj. -20.1125 iterations 23
Cbc0038I Pass  45: suminf.    2.39889 (11) obj. -20.1125 iterations 0
Cbc0038I Pass  46: suminf.    2.38526 (12) obj. -20.1125 iterations 8
Cbc0038I Pass  47: suminf.    1.88091 (11) obj. -20.1125 iterations 8
Cbc0038I Pass  48: suminf.    1.85724 (13) obj. -20.1125 iterations 4
Cbc0038I Pass  49: suminf.    2.08391 (11) obj. -20.1125 iterations 9
Cbc0038I Pass  50: suminf.    2.08391 (11) obj. -20.1125 iterations 3
Cbc0038I Pass  51: suminf.    2.38580 (11) obj. -20.1125 iterations 8
Cbc0038I Pass  52: suminf.    1.66427 (11) obj. -20.1125 iterations 7
Cbc0038I Pass  53: suminf.    2.08391 (11) obj. -20.1125 iterations 9
Cbc0038I Pass  54: suminf.    1.88737 (17) obj. -20.1125 iterations 16
Cbc0038I Pass  55: suminf.    1.71245 (20) obj. -20.1125 iterations 11
Cbc0038I Pass  56: suminf.    2.12478 (13) obj. -20.1125 iterations 16
Cbc0038I Pass  57: suminf.    2.12478 (13) obj. -20.1125 iterations 0
Cbc0038I Pass  58: suminf.    2.25735 (13) obj. -20.1125 iterations 11
Cbc0038I Pass  59: suminf.    1.86648 (13) obj. -20.1125 iterations 4
Cbc0038I Pass  60: suminf.    1.88824 (13) obj. -20.1125 iterations 6
Cbc0038I Pass  61: suminf.    1.88824 (13) obj. -20.1125 iterations 2
Cbc0038I Pass  62: suminf.    1.86648 (13) obj. -20.1125 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -13.2286 - took 0.09 seconds
Cbc0012I Integer solution of -13.22863 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 97 rows 111 columns, reduced to 19 rows 24 columns
Cbc0031I 59 added rows had average density of 33.830508
Cbc0013I At root node, 59 cuts changed objective from -47.647332 to -18.172238 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9907 row cuts average 7.9 elements, 3 column cuts (5 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1265 row cuts average 95.3 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 324 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 712 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 61.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.637 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.22863 best solution, best possible -18.172238 (2.18 seconds)
Cbc0012I Integer solution of -13.26649 found by DiveCoefficient after 3467 iterations and 1 nodes (2.19 seconds)
Cbc0012I Integer solution of -14.322 found by DiveCoefficient after 3509 iterations and 5 nodes (2.21 seconds)
Cbc0012I Integer solution of -14.58708 found by DiveCoefficient after 4692 iterations and 34 nodes (2.60 seconds)
Cbc0001I Search completed - best objective -14.58708, took 5217 iterations and 44 nodes (2.69 seconds)
Cbc0032I Strong branching done 616 times (8865 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 8, 67 variables fixed on reduced cost
Total time (CPU seconds):       2.10   (Wallclock seconds):       2.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 72 (-6) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 5.57635e-05 - average 4.35652e-07, 13 fixed columns
Coin0506I Presolve 101 (-27) rows, 57 (-15) columns and 308 (-84) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Coin0511I After Postsolve, objective 39.612728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25578669 - largest nonzero change 0 ( 0%) - largest zero change 2.9738336e-05
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Clp0000I Optimal - objective value 39.612728
Coin0511I After Postsolve, objective 39.612728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.61272816 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 72 columns (71 integer (71 of which binary)) and 392 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.5703
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.87271 iterations 43
Cbc0038I Solution found of 8.87271
Cbc0038I Relaxing continuous gives 8.87271
Cbc0038I Rounding solution of 3.23176 is better than previous of 8.87271

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 3.23176 to -14.322 (0.04 seconds)
Cbc0038I Round again with cutoff of -16.8512
Cbc0038I Pass   2: suminf.    2.95876 (13) obj. -16.8512 iterations 15
Cbc0038I Pass   3: suminf.    1.91468 (8) obj. -16.8512 iterations 14
Cbc0038I Pass   4: suminf.    1.90882 (7) obj. -16.8512 iterations 2
Cbc0038I Pass   5: suminf.    1.17760 (4) obj. -16.8512 iterations 7
Cbc0038I Pass   6: suminf.    1.17760 (4) obj. -16.8512 iterations 0
Cbc0038I Pass   7: suminf.    1.30347 (4) obj. -16.8512 iterations 5
Cbc0038I Pass   8: suminf.    1.22640 (4) obj. -16.8512 iterations 3
Cbc0038I Pass   9: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  10: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  11: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  12: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  13: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  14: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  15: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I Pass  16: suminf.    1.22640 (4) obj. -16.8512 iterations 1
Cbc0038I Pass  17: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  18: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  19: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  20: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  21: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  22: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  23: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I Pass  24: suminf.    1.22640 (4) obj. -16.8512 iterations 1
Cbc0038I Pass  25: suminf.    1.99661 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  26: suminf.    1.91630 (6) obj. -16.8512 iterations 2
Cbc0038I Pass  27: suminf.    2.79600 (7) obj. -16.8512 iterations 7
Cbc0038I Pass  28: suminf.    2.34002 (6) obj. -16.8512 iterations 4
Cbc0038I Pass  29: suminf.    2.28589 (6) obj. -16.8512 iterations 1
Cbc0038I Pass  30: suminf.    1.68359 (6) obj. -16.8512 iterations 9
Cbc0038I Pass  31: suminf.    1.26312 (3) obj. -16.8512 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -14.322 - took 0.05 seconds
Cbc0012I Integer solution of -14.322 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 60 rows 35 columns
Cbc0031I 21 added rows had average density of 55.571429
Cbc0013I At root node, 21 cuts changed objective from -39.612728 to -31.937197 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8990 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1533 row cuts average 71.8 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.322 best solution, best possible -31.937197 (0.72 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 2 rows 3 columns
Cbc0004I Integer solution of -14.58708 found after 8007 iterations and 76 nodes (1.01 seconds)
Cbc0038I Full problem 128 rows 72 columns, reduced to 7 rows 12 columns
Cbc0001I Search completed - best objective -14.58708, took 8821 iterations and 104 nodes (1.07 seconds)
Cbc0032I Strong branching done 914 times (14832 iterations), fathomed 11 nodes and fixed 41 variables
Cbc0035I Maximum depth 20, 190 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 111 (-42) columns and 1828 (-1476) elements
Clp1000I sum of infeasibilities 1.43149e-07 - average 1.47576e-09, 11 fixed columns
Coin0506I Presolve 85 (-12) rows, 98 (-13) columns and 1539 (-289) elements
Clp0006I 0  Obj 44.841344 Dual inf 9.3571211 (96)
Clp0029I End of values pass after 97 iterations
Clp0014I Perturbing problem by 0.001% of 1.915906 - largest nonzero change 2.2435554e-05 ( 0.0016580886%) - largest zero change 2.9575442e-05
Clp0000I Optimal - objective value 55.799721
Clp0000I Optimal - objective value 55.799721
Coin0511I After Postsolve, objective 55.799721, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.799721
Clp0000I Optimal - objective value 55.799721
Clp0000I Optimal - objective value 55.799721
Clp0000I Optimal - objective value 55.799721
Coin0511I After Postsolve, objective 55.799721, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.799721 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 111 columns (111 integer (111 of which binary)) and 1830 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.884%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.40447
Cbc0038I Pass   1: suminf.    2.27492 (26) obj. -40.8184 iterations 19
Cbc0038I Pass   2: suminf.    2.27492 (26) obj. -40.8184 iterations 1
Cbc0038I Pass   3: suminf.    0.20333 (4) obj. -6.74653 iterations 22
Cbc0038I Solution found of -2.94986
Cbc0038I Rounding solution of -5.41136 is better than previous of -2.94986

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -5.41136 to -6.73294 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.8245
Cbc0038I Pass   4: suminf.    2.27492 (26) obj. -40.8184 iterations 0
Cbc0038I Pass   5: suminf.    2.27492 (26) obj. -40.8184 iterations 1
Cbc0038I Pass   6: suminf.    0.73119 (6) obj. -10.8245 iterations 29
Cbc0038I Pass   7: suminf.    0.30431 (12) obj. -10.8245 iterations 13
Cbc0038I Pass   8: suminf.    0.30431 (12) obj. -10.8245 iterations 0
Cbc0038I Pass   9: suminf.    1.74000 (7) obj. -10.8245 iterations 23
Cbc0038I Pass  10: suminf.    0.54053 (6) obj. -10.8245 iterations 8
Cbc0038I Pass  11: suminf.    0.54053 (6) obj. -10.8245 iterations 0
Cbc0038I Pass  12: suminf.    1.91709 (9) obj. -10.8245 iterations 12
Cbc0038I Pass  13: suminf.    1.91709 (9) obj. -10.8245 iterations 0
Cbc0038I Pass  14: suminf.    1.62255 (9) obj. -10.8245 iterations 5
Cbc0038I Pass  15: suminf.    1.59081 (10) obj. -10.8245 iterations 7
Cbc0038I Pass  16: suminf.    1.68626 (7) obj. -10.8245 iterations 11
Cbc0038I Pass  17: suminf.    1.51632 (7) obj. -10.8245 iterations 5
Cbc0038I Pass  18: suminf.    1.88600 (7) obj. -10.8245 iterations 6
Cbc0038I Pass  19: suminf.    1.22725 (6) obj. -10.8245 iterations 4
Cbc0038I Pass  20: suminf.    0.75249 (6) obj. -10.8245 iterations 5
Cbc0038I Pass  21: suminf.    0.48900 (7) obj. -10.8245 iterations 5
Cbc0038I Pass  22: suminf.    1.79427 (6) obj. -10.8245 iterations 10
Cbc0038I Pass  23: suminf.    1.05876 (12) obj. -10.8245 iterations 31
Cbc0038I Pass  24: suminf.    1.05876 (12) obj. -10.8245 iterations 3
Cbc0038I Pass  25: suminf.    0.92736 (7) obj. -10.8245 iterations 26
Cbc0038I Pass  26: suminf.    0.89856 (8) obj. -10.8245 iterations 5
Cbc0038I Pass  27: suminf.    1.88600 (7) obj. -10.8245 iterations 11
Cbc0038I Pass  28: suminf.    1.22725 (6) obj. -10.8245 iterations 4
Cbc0038I Pass  29: suminf.    0.75249 (6) obj. -10.8245 iterations 5
Cbc0038I Pass  30: suminf.    0.48900 (7) obj. -10.8245 iterations 5
Cbc0038I Pass  31: suminf.    1.79427 (6) obj. -10.8245 iterations 10
Cbc0038I Pass  32: suminf.    2.56136 (17) obj. -10.8245 iterations 46
Cbc0038I Pass  33: suminf.    1.15322 (18) obj. -10.8245 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 44 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -6.73294 to -13.2286 (0.07 seconds)
Cbc0038I Round again with cutoff of -20.1125
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.27492 (26) obj. -40.8184 iterations 0
Cbc0038I Pass  34: suminf.    2.27492 (26) obj. -40.8184 iterations 1
Cbc0038I Pass  35: suminf.    1.40872 (20) obj. -20.1125 iterations 30
Cbc0038I Pass  36: suminf.    1.40872 (20) obj. -20.1125 iterations 0
Cbc0038I Pass  37: suminf.    1.85455 (9) obj. -20.1125 iterations 27
Cbc0038I Pass  38: suminf.    1.79878 (9) obj. -20.1125 iterations 7
Cbc0038I Pass  39: suminf.    1.85455 (9) obj. -20.1125 iterations 8
Cbc0038I Pass  40: suminf.    2.10946 (18) obj. -20.1125 iterations 19
Cbc0038I Pass  41: suminf.    1.98316 (17) obj. -20.1125 iterations 4
Cbc0038I Pass  42: suminf.    1.41515 (11) obj. -20.1125 iterations 21
Cbc0038I Pass  43: suminf.    0.99233 (15) obj. -20.1125 iterations 3
Cbc0038I Pass  44: suminf.    2.39889 (11) obj. -20.1125 iterations 23
Cbc0038I Pass  45: suminf.    2.39889 (11) obj. -20.1125 iterations 0
Cbc0038I Pass  46: suminf.    2.38526 (12) obj. -20.1125 iterations 8
Cbc0038I Pass  47: suminf.    1.88091 (11) obj. -20.1125 iterations 8
Cbc0038I Pass  48: suminf.    1.85724 (13) obj. -20.1125 iterations 4
Cbc0038I Pass  49: suminf.    2.08391 (11) obj. -20.1125 iterations 9
Cbc0038I Pass  50: suminf.    2.08391 (11) obj. -20.1125 iterations 3
Cbc0038I Pass  51: suminf.    2.38580 (11) obj. -20.1125 iterations 8
Cbc0038I Pass  52: suminf.    1.66427 (11) obj. -20.1125 iterations 7
Cbc0038I Pass  53: suminf.    2.08391 (11) obj. -20.1125 iterations 9
Cbc0038I Pass  54: suminf.    1.88737 (17) obj. -20.1125 iterations 16
Cbc0038I Pass  55: suminf.    1.71245 (20) obj. -20.1125 iterations 11
Cbc0038I Pass  56: suminf.    2.12478 (13) obj. -20.1125 iterations 16
Cbc0038I Pass  57: suminf.    2.12478 (13) obj. -20.1125 iterations 0
Cbc0038I Pass  58: suminf.    2.25735 (13) obj. -20.1125 iterations 11
Cbc0038I Pass  59: suminf.    1.86648 (13) obj. -20.1125 iterations 4
Cbc0038I Pass  60: suminf.    1.88824 (13) obj. -20.1125 iterations 6
Cbc0038I Pass  61: suminf.    1.88824 (13) obj. -20.1125 iterations 2
Cbc0038I Pass  62: suminf.    1.86648 (13) obj. -20.1125 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 111 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -13.2286 - took 0.11 seconds
Cbc0012I Integer solution of -13.22863 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 97 rows 111 columns, reduced to 19 rows 24 columns
Cbc0031I 59 added rows had average density of 33.830508
Cbc0013I At root node, 59 cuts changed objective from -47.647332 to -18.172238 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9907 row cuts average 7.9 elements, 3 column cuts (5 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1265 row cuts average 95.3 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 324 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 712 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 61.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.713 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.22863 best solution, best possible -18.172238 (2.50 seconds)
Cbc0012I Integer solution of -13.26649 found by DiveCoefficient after 3467 iterations and 1 nodes (2.52 seconds)
Cbc0012I Integer solution of -14.322 found by DiveCoefficient after 3509 iterations and 5 nodes (2.54 seconds)
Cbc0012I Integer solution of -14.58708 found by DiveCoefficient after 4692 iterations and 34 nodes (3.00 seconds)
Cbc0001I Search completed - best objective -14.58708, took 5217 iterations and 44 nodes (3.10 seconds)
Cbc0032I Strong branching done 616 times (8865 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 8, 67 variables fixed on reduced cost
Total time (CPU seconds):       2.39   (Wallclock seconds):       3.11

