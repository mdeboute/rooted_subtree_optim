Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.78492e-06 - average 3.46733e-08, 11 fixed columns
Coin0506I Presolve 116 (-22) rows, 65 (-11) columns and 354 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Coin0511I After Postsolve, objective 62.063977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Coin0511I After Postsolve, objective 62.063977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.06397678 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 12.2594
Cbc0038I Solution found of 11.9736
Cbc0038I Relaxing continuous gives -2.88416
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.88416 to -26.3902 (0.05 seconds)
Cbc0038I Round again with cutoff of -29.9576
Cbc0038I Pass   1: suminf.    4.83634 (34) obj. -29.9576 iterations 33
Cbc0038I Pass   2: suminf.    2.64792 (10) obj. -29.9576 iterations 36
Cbc0038I Pass   3: suminf.    2.64792 (10) obj. -29.9576 iterations 2
Cbc0038I Pass   4: suminf.    3.29116 (9) obj. -29.9576 iterations 17
Cbc0038I Pass   5: suminf.    2.00726 (7) obj. -29.9576 iterations 3
Cbc0038I Pass   6: suminf.    0.79731 (4) obj. -29.9576 iterations 6
Cbc0038I Pass   7: suminf.    0.79044 (4) obj. -29.9576 iterations 1
Cbc0038I Pass   8: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass   9: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  10: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  11: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  12: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  13: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  14: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  15: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  16: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  17: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  18: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  19: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  20: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  21: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  22: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  23: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  24: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  25: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  26: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  27: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  28: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  29: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  30: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -26.3902 to -26.9804 (0.11 seconds)
Cbc0038I Round again with cutoff of -36.3789
Cbc0038I Pass  30: suminf.    5.98342 (34) obj. -36.3789 iterations 0
Cbc0038I Pass  31: suminf.    2.10498 (7) obj. -36.3789 iterations 29
Cbc0038I Pass  32: suminf.    2.99436 (9) obj. -36.3789 iterations 9
Cbc0038I Pass  33: suminf.    2.99436 (9) obj. -36.3789 iterations 0
Cbc0038I Pass  34: suminf.    2.94115 (8) obj. -36.3789 iterations 7
Cbc0038I Pass  35: suminf.    2.70370 (7) obj. -36.3789 iterations 1
Cbc0038I Pass  36: suminf.    2.70370 (7) obj. -36.3789 iterations 0
Cbc0038I Pass  37: suminf.    2.50437 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  38: suminf.    2.50017 (7) obj. -36.3789 iterations 1
Cbc0038I Pass  39: suminf.    2.70266 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  40: suminf.    2.70266 (7) obj. -36.3789 iterations 0
Cbc0038I Pass  41: suminf.    2.28621 (13) obj. -36.3789 iterations 14
Cbc0038I Pass  42: suminf.    2.10960 (10) obj. -36.3789 iterations 7
Cbc0038I Pass  43: suminf.    4.24508 (13) obj. -36.3789 iterations 21
Cbc0038I Pass  44: suminf.    3.92226 (11) obj. -36.3789 iterations 2
Cbc0038I Pass  45: suminf.    3.14828 (8) obj. -36.3789 iterations 3
Cbc0038I Pass  46: suminf.    1.65841 (7) obj. -36.3789 iterations 3
Cbc0038I Pass  47: suminf.    1.54594 (6) obj. -36.3789 iterations 1
Cbc0038I Pass  48: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  49: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I Pass  50: suminf.    2.33901 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  51: suminf.    1.54594 (6) obj. -36.3789 iterations 3
Cbc0038I Pass  52: suminf.    1.54594 (6) obj. -36.3789 iterations 0
Cbc0038I Pass  53: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  54: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I Pass  55: suminf.    2.33901 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  56: suminf.    1.54594 (6) obj. -36.3789 iterations 3
Cbc0038I Pass  57: suminf.    1.54594 (6) obj. -36.3789 iterations 0
Cbc0038I Pass  58: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  59: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -26.9804 - took 0.14 seconds
Cbc0012I Integer solution of -26.980405 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 41 columns
Cbc0031I 32 added rows had average density of 62.59375
Cbc0013I At root node, 32 cuts changed objective from -62.063977 to -52.891958 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11388 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2109 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.980405 best solution, best possible -52.891958 (0.96 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 13 rows 18 columns
Cbc0038I Full problem 138 rows 76 columns, reduced to 20 rows 19 columns
Cbc0012I Integer solution of -27.049195 found by RINS after 9601 iterations and 91 nodes (1.23 seconds)
Cbc0012I Integer solution of -28.631955 found by rounding after 9771 iterations and 113 nodes (1.25 seconds)
Cbc0001I Search completed - best objective -28.631955, took 11346 iterations and 170 nodes (1.38 seconds)
Cbc0032I Strong branching done 1574 times (23311 iterations), fathomed 23 nodes and fixed 76 variables
Cbc0035I Maximum depth 30, 514 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 114 (-38) columns and 1901 (-1402) elements
Clp1000I sum of infeasibilities 1.05638e-07 - average 1.03567e-09, 63 fixed columns
Coin0506I Presolve 41 (-61) rows, 51 (-63) columns and 178 (-1723) elements
Clp0006I 0  Obj 13.036764 Dual inf 1.1439628 (51)
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 3.5462882 - largest nonzero change 1.3122549e-05 ( 0.00051403249%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 21.265412
Clp0000I Optimal - objective value 21.265412
Coin0511I After Postsolve, objective 21.265412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21.265412 Dual inf 67.056815 (39)
Clp0014I Perturbing problem by 0.001% of 2.1034382 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.9905824e-05
Clp0000I Optimal - objective value 77.545468
Clp0000I Optimal - objective value 77.545468
Clp0000I Optimal - objective value 77.545468
Coin0511I After Postsolve, objective 77.545468, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.54546811 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 114 columns (114 integer (114 of which binary)) and 1903 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.769%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 6.39096
Cbc0038I Pass   1: suminf.    4.42047 (32) obj. -59.8533 iterations 17
Cbc0038I Pass   2: suminf.    4.42047 (32) obj. -59.8533 iterations 1
Cbc0038I Pass   3: suminf.    2.63170 (21) obj. -48.9696 iterations 11
Cbc0038I Solution found of -20.9536
Cbc0038I Rounding solution of -24.8893 is better than previous of -20.9536

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -29.4817
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.42047 (32) obj. -59.8533 iterations 0
Cbc0038I Pass   5: suminf.    4.42047 (32) obj. -59.8533 iterations 1
Cbc0038I Pass   6: suminf.    2.77170 (22) obj. -50.6896 iterations 10
Cbc0038I Pass   7: suminf.    0.82732 (6) obj. -29.4817 iterations 29
Cbc0038I Pass   8: suminf.    0.82732 (6) obj. -29.4817 iterations 1
Cbc0038I Pass   9: suminf.    0.84049 (4) obj. -29.4817 iterations 13
Cbc0038I Pass  10: suminf.    0.82611 (3) obj. -29.4817 iterations 3
Cbc0038I Pass  11: suminf.    1.31560 (4) obj. -29.4817 iterations 5
Cbc0038I Pass  12: suminf.    0.84330 (4) obj. -29.4817 iterations 2
Cbc0038I Pass  13: suminf.    1.43205 (4) obj. -29.4817 iterations 5
Cbc0038I Pass  14: suminf.    1.41700 (6) obj. -29.4817 iterations 4
Cbc0038I Pass  15: suminf.    1.32497 (5) obj. -29.4817 iterations 8
Cbc0038I Pass  16: suminf.    1.09124 (4) obj. -29.4817 iterations 5
Cbc0038I Pass  17: suminf.    1.43205 (4) obj. -29.4817 iterations 6
Cbc0038I Pass  18: suminf.    2.31223 (14) obj. -29.4817 iterations 17
Cbc0038I Pass  19: suminf.    1.60584 (11) obj. -29.4817 iterations 7
Cbc0038I Pass  20: suminf.    1.24089 (5) obj. -29.4817 iterations 14
Cbc0038I Pass  21: suminf.    1.04035 (5) obj. -29.4817 iterations 3
Cbc0038I Pass  22: suminf.    0.99555 (4) obj. -29.4817 iterations 8
Cbc0038I Pass  23: suminf.    0.99555 (4) obj. -29.4817 iterations 0
Cbc0038I Pass  24: suminf.    1.33530 (5) obj. -29.4817 iterations 8
Cbc0038I Pass  25: suminf.    1.10724 (4) obj. -29.4817 iterations 4
Cbc0038I Pass  26: suminf.    1.43205 (4) obj. -29.4817 iterations 7
Cbc0038I Pass  27: suminf.    1.41700 (6) obj. -29.4817 iterations 4
Cbc0038I Pass  28: suminf.    1.32497 (5) obj. -29.4817 iterations 8
Cbc0038I Pass  29: suminf.    1.09124 (4) obj. -29.4817 iterations 5
Cbc0038I Pass  30: suminf.    2.59945 (11) obj. -29.4817 iterations 30
Cbc0038I Pass  31: suminf.    1.79618 (10) obj. -29.4817 iterations 12
Cbc0038I Pass  32: suminf.    1.60942 (8) obj. -29.4817 iterations 19
Cbc0038I Pass  33: suminf.    1.60942 (8) obj. -29.4817 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 16 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -20.9536 to -27.3619 (0.05 seconds)
Cbc0038I Round again with cutoff of -37.7478
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.42047 (32) obj. -59.8533 iterations 0
Cbc0038I Pass  34: suminf.    4.42047 (32) obj. -59.8533 iterations 1
Cbc0038I Pass  35: suminf.    1.69347 (14) obj. -41.175 iterations 18
Cbc0038I Pass  36: suminf.    1.46847 (8) obj. -37.7478 iterations 24
Cbc0038I Pass  37: suminf.    1.18879 (8) obj. -37.7478 iterations 1
Cbc0038I Pass  38: suminf.    1.70800 (8) obj. -37.7478 iterations 17
Cbc0038I Pass  39: suminf.    1.69608 (10) obj. -37.7478 iterations 3
Cbc0038I Pass  40: suminf.    1.62467 (8) obj. -37.7478 iterations 19
Cbc0038I Pass  41: suminf.    1.61274 (10) obj. -37.7478 iterations 10
Cbc0038I Pass  42: suminf.    1.70800 (8) obj. -37.7478 iterations 12
Cbc0038I Pass  43: suminf.    2.66908 (15) obj. -37.7478 iterations 33
Cbc0038I Pass  44: suminf.    1.82601 (12) obj. -38.0191 iterations 9
Cbc0038I Pass  45: suminf.    1.84995 (11) obj. -37.7478 iterations 16
Cbc0038I Pass  46: suminf.    1.72979 (12) obj. -37.7478 iterations 7
Cbc0038I Pass  47: suminf.    1.79291 (10) obj. -37.7478 iterations 8
Cbc0038I Pass  48: suminf.    1.74534 (11) obj. -37.7478 iterations 4
Cbc0038I Pass  49: suminf.    2.81039 (11) obj. -37.7478 iterations 12
Cbc0038I Pass  50: suminf.    2.32159 (8) obj. -37.7478 iterations 3
Cbc0038I Pass  51: suminf.    2.28831 (10) obj. -37.7478 iterations 9
Cbc0038I Pass  52: suminf.    2.23826 (8) obj. -37.7478 iterations 16
Cbc0038I Pass  53: suminf.    2.20497 (10) obj. -37.7478 iterations 8
Cbc0038I Pass  54: suminf.    2.32159 (8) obj. -37.7478 iterations 10
Cbc0038I Pass  55: suminf.    2.17205 (14) obj. -37.7478 iterations 22
Cbc0038I Pass  56: suminf.    1.95246 (11) obj. -37.7478 iterations 12
Cbc0038I Pass  57: suminf.    1.68164 (8) obj. -37.7478 iterations 13
Cbc0038I Pass  58: suminf.    1.47628 (8) obj. -37.7478 iterations 5
Cbc0038I Pass  59: suminf.    2.66165 (13) obj. -37.7478 iterations 13
Cbc0038I Pass  60: suminf.    2.66165 (13) obj. -37.7478 iterations 0
Cbc0038I Pass  61: suminf.    1.60178 (10) obj. -37.7478 iterations 8
Cbc0038I Pass  62: suminf.    1.60178 (10) obj. -37.7478 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -27.3619 - took 0.06 seconds
Cbc0012I Integer solution of -27.361895 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 102 rows 114 columns, reduced to 8 rows 11 columns
Cbc0031I 56 added rows had average density of 40.803571
Cbc0013I At root node, 56 cuts changed objective from -70.81209 to -38.354972 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16538 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2147 row cuts average 108.2 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 917 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1604 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 389 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.517 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.361895 best solution, best possible -38.354972 (2.37 seconds)
Cbc0010I After 20 nodes, 7 on tree, -27.361895 best solution, best possible -38.354972 (3.10 seconds)
Cbc0016I Integer solution of -27.805195 found by strong branching after 8368 iterations and 36 nodes (3.29 seconds)
Cbc0016I Integer solution of -27.895325 found by strong branching after 8441 iterations and 37 nodes (3.30 seconds)
Cbc0038I Full problem 102 rows 114 columns, reduced to 2 rows 6 columns
Cbc0016I Integer solution of -28.631955 found by strong branching after 9291 iterations and 53 nodes (3.42 seconds)
Cbc0010I After 67 nodes, 4 on tree, -28.631955 best solution, best possible -38.354972 (3.82 seconds)
Cbc0038I Full problem 102 rows 114 columns, reduced to 38 rows 52 columns
Cbc0010I After 94 nodes, 1 on tree, -28.631955 best solution, best possible -30.162814 (4.65 seconds)
Cbc0001I Search completed - best objective -28.631955, took 13131 iterations and 102 nodes (4.69 seconds)
Cbc0032I Strong branching done 1436 times (17397 iterations), fathomed 9 nodes and fixed 18 variables
Cbc0035I Maximum depth 16, 280 variables fixed on reduced cost
Total time (CPU seconds):       4.05   (Wallclock seconds):       4.71

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.78492e-06 - average 3.46733e-08, 11 fixed columns
Coin0506I Presolve 116 (-22) rows, 65 (-11) columns and 354 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Coin0511I After Postsolve, objective 62.063977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Clp0000I Optimal - objective value 62.063977
Coin0511I After Postsolve, objective 62.063977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.06397678 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 12.2594
Cbc0038I Solution found of 11.9736
Cbc0038I Relaxing continuous gives -2.88416
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -2.88416 to -26.3902 (0.05 seconds)
Cbc0038I Round again with cutoff of -29.9576
Cbc0038I Pass   1: suminf.    4.83634 (34) obj. -29.9576 iterations 33
Cbc0038I Pass   2: suminf.    2.64792 (10) obj. -29.9576 iterations 36
Cbc0038I Pass   3: suminf.    2.64792 (10) obj. -29.9576 iterations 2
Cbc0038I Pass   4: suminf.    3.29116 (9) obj. -29.9576 iterations 17
Cbc0038I Pass   5: suminf.    2.00726 (7) obj. -29.9576 iterations 3
Cbc0038I Pass   6: suminf.    0.79731 (4) obj. -29.9576 iterations 6
Cbc0038I Pass   7: suminf.    0.79044 (4) obj. -29.9576 iterations 1
Cbc0038I Pass   8: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass   9: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  10: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  11: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  12: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  13: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  14: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  15: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  16: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  17: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  18: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  19: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  20: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  21: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  22: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  23: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  24: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  25: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I Pass  26: suminf.    1.50035 (5) obj. -29.9576 iterations 5
Cbc0038I Pass  27: suminf.    0.79044 (4) obj. -29.9576 iterations 4
Cbc0038I Pass  28: suminf.    1.16073 (5) obj. -29.9576 iterations 4
Cbc0038I Pass  29: suminf.    0.90258 (4) obj. -29.9576 iterations 2
Cbc0038I Pass  30: suminf.    0.83727 (5) obj. -29.9576 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 90 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -26.3902 to -26.9804 (0.11 seconds)
Cbc0038I Round again with cutoff of -36.3789
Cbc0038I Pass  30: suminf.    5.98342 (34) obj. -36.3789 iterations 0
Cbc0038I Pass  31: suminf.    2.10498 (7) obj. -36.3789 iterations 29
Cbc0038I Pass  32: suminf.    2.99436 (9) obj. -36.3789 iterations 9
Cbc0038I Pass  33: suminf.    2.99436 (9) obj. -36.3789 iterations 0
Cbc0038I Pass  34: suminf.    2.94115 (8) obj. -36.3789 iterations 7
Cbc0038I Pass  35: suminf.    2.70370 (7) obj. -36.3789 iterations 1
Cbc0038I Pass  36: suminf.    2.70370 (7) obj. -36.3789 iterations 0
Cbc0038I Pass  37: suminf.    2.50437 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  38: suminf.    2.50017 (7) obj. -36.3789 iterations 1
Cbc0038I Pass  39: suminf.    2.70266 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  40: suminf.    2.70266 (7) obj. -36.3789 iterations 0
Cbc0038I Pass  41: suminf.    2.28621 (13) obj. -36.3789 iterations 14
Cbc0038I Pass  42: suminf.    2.10960 (10) obj. -36.3789 iterations 7
Cbc0038I Pass  43: suminf.    4.24508 (13) obj. -36.3789 iterations 21
Cbc0038I Pass  44: suminf.    3.92226 (11) obj. -36.3789 iterations 2
Cbc0038I Pass  45: suminf.    3.14828 (8) obj. -36.3789 iterations 3
Cbc0038I Pass  46: suminf.    1.65841 (7) obj. -36.3789 iterations 3
Cbc0038I Pass  47: suminf.    1.54594 (6) obj. -36.3789 iterations 1
Cbc0038I Pass  48: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  49: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I Pass  50: suminf.    2.33901 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  51: suminf.    1.54594 (6) obj. -36.3789 iterations 3
Cbc0038I Pass  52: suminf.    1.54594 (6) obj. -36.3789 iterations 0
Cbc0038I Pass  53: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  54: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I Pass  55: suminf.    2.33901 (7) obj. -36.3789 iterations 5
Cbc0038I Pass  56: suminf.    1.54594 (6) obj. -36.3789 iterations 3
Cbc0038I Pass  57: suminf.    1.54594 (6) obj. -36.3789 iterations 0
Cbc0038I Pass  58: suminf.    2.35401 (7) obj. -36.3789 iterations 6
Cbc0038I Pass  59: suminf.    1.31472 (6) obj. -36.3789 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 91 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -26.9804 - took 0.15 seconds
Cbc0012I Integer solution of -26.980405 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 74 rows 41 columns
Cbc0031I 32 added rows had average density of 62.59375
Cbc0013I At root node, 32 cuts changed objective from -62.063977 to -52.891958 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11388 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2109 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.980405 best solution, best possible -52.891958 (1.07 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 13 rows 18 columns
Cbc0038I Full problem 138 rows 76 columns, reduced to 20 rows 19 columns
Cbc0012I Integer solution of -27.049195 found by RINS after 9601 iterations and 91 nodes (1.38 seconds)
Cbc0012I Integer solution of -28.631955 found by rounding after 9771 iterations and 113 nodes (1.40 seconds)
Cbc0001I Search completed - best objective -28.631955, took 11346 iterations and 170 nodes (1.55 seconds)
Cbc0032I Strong branching done 1574 times (23311 iterations), fathomed 23 nodes and fixed 76 variables
Cbc0035I Maximum depth 30, 514 variables fixed on reduced cost
Total time (CPU seconds):       1.48   (Wallclock seconds):       1.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 114 (-39) columns and 1901 (-1403) elements
Clp1000I sum of infeasibilities 1.05638e-07 - average 1.03567e-09, 63 fixed columns
Coin0506I Presolve 41 (-61) rows, 51 (-63) columns and 178 (-1723) elements
Clp0006I 0  Obj 13.036764 Dual inf 1.1439628 (51)
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 3.5462882 - largest nonzero change 1.3122549e-05 ( 0.00051403249%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 21.265412
Clp0000I Optimal - objective value 21.265412
Coin0511I After Postsolve, objective 21.265412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21.265412 Dual inf 67.056815 (39)
Clp0014I Perturbing problem by 0.001% of 2.1034382 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.9905824e-05
Clp0000I Optimal - objective value 77.545468
Clp0000I Optimal - objective value 77.545468
Clp0000I Optimal - objective value 77.545468
Coin0511I After Postsolve, objective 77.545468, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.54546811 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 114 columns (114 integer (114 of which binary)) and 1903 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.769%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 6.39096
Cbc0038I Pass   1: suminf.    4.42047 (32) obj. -59.8533 iterations 17
Cbc0038I Pass   2: suminf.    4.42047 (32) obj. -59.8533 iterations 1
Cbc0038I Pass   3: suminf.    2.63170 (21) obj. -48.9696 iterations 11
Cbc0038I Solution found of -20.9536
Cbc0038I Rounding solution of -24.8893 is better than previous of -20.9536

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -29.4817
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.42047 (32) obj. -59.8533 iterations 0
Cbc0038I Pass   5: suminf.    4.42047 (32) obj. -59.8533 iterations 1
Cbc0038I Pass   6: suminf.    2.77170 (22) obj. -50.6896 iterations 10
Cbc0038I Pass   7: suminf.    0.82732 (6) obj. -29.4817 iterations 29
Cbc0038I Pass   8: suminf.    0.82732 (6) obj. -29.4817 iterations 1
Cbc0038I Pass   9: suminf.    0.84049 (4) obj. -29.4817 iterations 13
Cbc0038I Pass  10: suminf.    0.82611 (3) obj. -29.4817 iterations 3
Cbc0038I Pass  11: suminf.    1.31560 (4) obj. -29.4817 iterations 5
Cbc0038I Pass  12: suminf.    0.84330 (4) obj. -29.4817 iterations 2
Cbc0038I Pass  13: suminf.    1.43205 (4) obj. -29.4817 iterations 5
Cbc0038I Pass  14: suminf.    1.41700 (6) obj. -29.4817 iterations 4
Cbc0038I Pass  15: suminf.    1.32497 (5) obj. -29.4817 iterations 8
Cbc0038I Pass  16: suminf.    1.09124 (4) obj. -29.4817 iterations 5
Cbc0038I Pass  17: suminf.    1.43205 (4) obj. -29.4817 iterations 6
Cbc0038I Pass  18: suminf.    2.31223 (14) obj. -29.4817 iterations 17
Cbc0038I Pass  19: suminf.    1.60584 (11) obj. -29.4817 iterations 7
Cbc0038I Pass  20: suminf.    1.24089 (5) obj. -29.4817 iterations 14
Cbc0038I Pass  21: suminf.    1.04035 (5) obj. -29.4817 iterations 3
Cbc0038I Pass  22: suminf.    0.99555 (4) obj. -29.4817 iterations 8
Cbc0038I Pass  23: suminf.    0.99555 (4) obj. -29.4817 iterations 0
Cbc0038I Pass  24: suminf.    1.33530 (5) obj. -29.4817 iterations 8
Cbc0038I Pass  25: suminf.    1.10724 (4) obj. -29.4817 iterations 4
Cbc0038I Pass  26: suminf.    1.43205 (4) obj. -29.4817 iterations 7
Cbc0038I Pass  27: suminf.    1.41700 (6) obj. -29.4817 iterations 4
Cbc0038I Pass  28: suminf.    1.32497 (5) obj. -29.4817 iterations 8
Cbc0038I Pass  29: suminf.    1.09124 (4) obj. -29.4817 iterations 5
Cbc0038I Pass  30: suminf.    2.59945 (11) obj. -29.4817 iterations 30
Cbc0038I Pass  31: suminf.    1.79618 (10) obj. -29.4817 iterations 12
Cbc0038I Pass  32: suminf.    1.60942 (8) obj. -29.4817 iterations 19
Cbc0038I Pass  33: suminf.    1.60942 (8) obj. -29.4817 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 16 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -20.9536 to -27.3619 (0.05 seconds)
Cbc0038I Round again with cutoff of -37.7478
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.42047 (32) obj. -59.8533 iterations 0
Cbc0038I Pass  34: suminf.    4.42047 (32) obj. -59.8533 iterations 1
Cbc0038I Pass  35: suminf.    1.69347 (14) obj. -41.175 iterations 18
Cbc0038I Pass  36: suminf.    1.46847 (8) obj. -37.7478 iterations 24
Cbc0038I Pass  37: suminf.    1.18879 (8) obj. -37.7478 iterations 1
Cbc0038I Pass  38: suminf.    1.70800 (8) obj. -37.7478 iterations 17
Cbc0038I Pass  39: suminf.    1.69608 (10) obj. -37.7478 iterations 3
Cbc0038I Pass  40: suminf.    1.62467 (8) obj. -37.7478 iterations 19
Cbc0038I Pass  41: suminf.    1.61274 (10) obj. -37.7478 iterations 10
Cbc0038I Pass  42: suminf.    1.70800 (8) obj. -37.7478 iterations 12
Cbc0038I Pass  43: suminf.    2.66908 (15) obj. -37.7478 iterations 33
Cbc0038I Pass  44: suminf.    1.82601 (12) obj. -38.0191 iterations 9
Cbc0038I Pass  45: suminf.    1.84995 (11) obj. -37.7478 iterations 16
Cbc0038I Pass  46: suminf.    1.72979 (12) obj. -37.7478 iterations 7
Cbc0038I Pass  47: suminf.    1.79291 (10) obj. -37.7478 iterations 8
Cbc0038I Pass  48: suminf.    1.74534 (11) obj. -37.7478 iterations 4
Cbc0038I Pass  49: suminf.    2.81039 (11) obj. -37.7478 iterations 12
Cbc0038I Pass  50: suminf.    2.32159 (8) obj. -37.7478 iterations 3
Cbc0038I Pass  51: suminf.    2.28831 (10) obj. -37.7478 iterations 9
Cbc0038I Pass  52: suminf.    2.23826 (8) obj. -37.7478 iterations 16
Cbc0038I Pass  53: suminf.    2.20497 (10) obj. -37.7478 iterations 8
Cbc0038I Pass  54: suminf.    2.32159 (8) obj. -37.7478 iterations 10
Cbc0038I Pass  55: suminf.    2.17205 (14) obj. -37.7478 iterations 22
Cbc0038I Pass  56: suminf.    1.95246 (11) obj. -37.7478 iterations 12
Cbc0038I Pass  57: suminf.    1.68164 (8) obj. -37.7478 iterations 13
Cbc0038I Pass  58: suminf.    1.47628 (8) obj. -37.7478 iterations 5
Cbc0038I Pass  59: suminf.    2.66165 (13) obj. -37.7478 iterations 13
Cbc0038I Pass  60: suminf.    2.66165 (13) obj. -37.7478 iterations 0
Cbc0038I Pass  61: suminf.    1.60178 (10) obj. -37.7478 iterations 8
Cbc0038I Pass  62: suminf.    1.60178 (10) obj. -37.7478 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 114 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -27.3619 - took 0.06 seconds
Cbc0012I Integer solution of -27.361895 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 102 rows 114 columns, reduced to 8 rows 11 columns
Cbc0031I 56 added rows had average density of 40.803571
Cbc0013I At root node, 56 cuts changed objective from -70.81209 to -38.354972 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16538 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2147 row cuts average 108.2 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 917 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1604 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 389 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.551 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.361895 best solution, best possible -38.354972 (2.63 seconds)
Cbc0010I After 16 nodes, 7 on tree, -27.361895 best solution, best possible -38.354972 (3.35 seconds)
Cbc0016I Integer solution of -27.805195 found by strong branching after 8368 iterations and 36 nodes (3.66 seconds)
Cbc0016I Integer solution of -27.895325 found by strong branching after 8441 iterations and 37 nodes (3.67 seconds)
Cbc0038I Full problem 102 rows 114 columns, reduced to 2 rows 6 columns
Cbc0016I Integer solution of -28.631955 found by strong branching after 9291 iterations and 53 nodes (3.81 seconds)
Cbc0010I After 62 nodes, 3 on tree, -28.631955 best solution, best possible -38.354972 (4.08 seconds)
Cbc0010I After 86 nodes, 6 on tree, -28.631955 best solution, best possible -38.354972 (4.78 seconds)
Cbc0038I Full problem 102 rows 114 columns, reduced to 38 rows 52 columns
Cbc0001I Search completed - best objective -28.631955, took 13131 iterations and 102 nodes (5.21 seconds)
Cbc0032I Strong branching done 1436 times (17397 iterations), fathomed 9 nodes and fixed 18 variables
Cbc0035I Maximum depth 16, 280 variables fixed on reduced cost
Total time (CPU seconds):       4.44   (Wallclock seconds):       5.23

