Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 174 (-31) rows, 99 (-4) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 0.000113566 - average 6.52676e-07, 28 fixed columns
Coin0506I Presolve 114 (-60) rows, 67 (-32) columns and 354 (-184) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 0.2298937 - largest nonzero change 0 ( 0%) - largest zero change 2.5826331e-05
Clp0000I Optimal - objective value 53.617114
Clp0000I Optimal - objective value 53.617114
Coin0511I After Postsolve, objective 53.617114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.617114
Clp0000I Optimal - objective value 53.617114
Clp0000I Optimal - objective value 53.617114
Coin0511I After Postsolve, objective 53.617114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.61711387 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 174 rows, 99 columns (98 integer (98 of which binary)) and 543 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.21754
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.44043 iterations 58
Cbc0038I Solution found of -4.44043
Cbc0038I Relaxing continuous gives -4.44043
Cbc0038I Rounding solution of -19.9922 is better than previous of -4.44043

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 99 columns, reduced to 61 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -19.9922 to -27.7674 (0.04 seconds)
Cbc0038I Round again with cutoff of -30.3525
Cbc0038I Pass   2: suminf.    2.34849 (11) obj. -30.3525 iterations 18
Cbc0038I Pass   3: suminf.    2.24355 (6) obj. -30.3525 iterations 15
Cbc0038I Pass   4: suminf.    2.24355 (6) obj. -30.3525 iterations 0
Cbc0038I Pass   5: suminf.    2.86150 (11) obj. -30.3525 iterations 12
Cbc0038I Pass   6: suminf.    2.85077 (11) obj. -30.3525 iterations 1
Cbc0038I Pass   7: suminf.    2.24326 (6) obj. -30.3525 iterations 17
Cbc0038I Pass   8: suminf.    1.66247 (5) obj. -30.3525 iterations 13
Cbc0038I Pass   9: suminf.    1.53358 (5) obj. -30.3525 iterations 2
Cbc0038I Pass  10: suminf.    2.77373 (11) obj. -30.3525 iterations 12
Cbc0038I Pass  11: suminf.    2.24355 (6) obj. -30.3525 iterations 16
Cbc0038I Pass  12: suminf.    2.24355 (6) obj. -30.3525 iterations 0
Cbc0038I Pass  13: suminf.    2.86150 (11) obj. -30.3525 iterations 13
Cbc0038I Pass  14: suminf.    2.85077 (11) obj. -30.3525 iterations 1
Cbc0038I Pass  15: suminf.    2.24326 (6) obj. -30.3525 iterations 17
Cbc0038I Pass  16: suminf.    1.66247 (5) obj. -30.3525 iterations 13
Cbc0038I Pass  17: suminf.    1.53358 (5) obj. -30.3525 iterations 2
Cbc0038I Pass  18: suminf.    2.77373 (11) obj. -30.3525 iterations 12
Cbc0038I Pass  19: suminf.    2.24355 (6) obj. -30.3525 iterations 16
Cbc0038I Pass  20: suminf.    2.24355 (6) obj. -30.3525 iterations 0
Cbc0038I Pass  21: suminf.    2.86150 (11) obj. -30.3525 iterations 13
Cbc0038I Pass  22: suminf.    2.85077 (11) obj. -30.3525 iterations 1
Cbc0038I Pass  23: suminf.    2.24326 (6) obj. -30.3525 iterations 17
Cbc0038I Pass  24: suminf.    1.66247 (5) obj. -30.3525 iterations 13
Cbc0038I Pass  25: suminf.    1.53358 (5) obj. -30.3525 iterations 2
Cbc0038I Pass  26: suminf.    2.77373 (11) obj. -30.3525 iterations 12
Cbc0038I Pass  27: suminf.    2.24355 (6) obj. -30.3525 iterations 16
Cbc0038I Pass  28: suminf.    2.24355 (6) obj. -30.3525 iterations 0
Cbc0038I Pass  29: suminf.    2.86150 (11) obj. -30.3525 iterations 13
Cbc0038I Pass  30: suminf.    2.85077 (11) obj. -30.3525 iterations 1
Cbc0038I Pass  31: suminf.    2.24326 (6) obj. -30.3525 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 99 columns, reduced to 72 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -27.7674 - took 0.07 seconds
Cbc0012I Integer solution of -27.7674 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 174 rows 99 columns, reduced to 61 rows 37 columns
Cbc0031I 26 added rows had average density of 62.653846
Cbc0013I At root node, 26 cuts changed objective from -53.617114 to -47.505154 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11871 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1941 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.7674 best solution, best possible -47.505154 (0.90 seconds)
Cbc0038I Full problem 174 rows 99 columns, reduced to 54 rows 35 columns
Cbc0038I Full problem 174 rows 99 columns, reduced to 72 rows 43 columns
Cbc0001I Search completed - best objective -27.76739999999999, took 10468 iterations and 130 nodes (1.34 seconds)
Cbc0032I Strong branching done 1088 times (19328 iterations), fathomed 13 nodes and fixed 57 variables
Cbc0035I Maximum depth 30, 496 variables fixed on reduced cost
Total time (CPU seconds):       1.30   (Wallclock seconds):       1.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-86) rows, 140 (-62) columns and 2279 (-3374) elements
Clp1000I sum of infeasibilities 1.82775e-07 - average 1.54894e-09, 54 fixed columns
Coin0506I Presolve 72 (-46) rows, 86 (-54) columns and 1085 (-1194) elements
Clp0006I 0  Obj 96.663687 Primal inf 3.5932352e-07 (1) Dual inf 1.6821277e+10 (86)
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.583892 - largest nonzero change 1.5894123e-05 ( 0.0012247315%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 107.10293
Clp0000I Optimal - objective value 107.10293
Coin0511I After Postsolve, objective 107.10293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 107.10293 Dual inf 15.047896 (1)
Clp0014I Perturbing problem by 0.001% of 1.2782968 - largest nonzero change 1.3812746e-05 ( 0.001103913%) - largest zero change 2.9707416e-05
Clp0000I Optimal - objective value 107.10293
Clp0000I Optimal - objective value 107.10293
Clp0000I Optimal - objective value 107.10293
Coin0511I After Postsolve, objective 107.10293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.1029338 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 140 columns (140 integer (140 of which binary)) and 2286 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.09213
Cbc0038I Pass   1: suminf.    2.50530 (32) obj. -86.7693 iterations 12
Cbc0038I Pass   2: suminf.    2.50530 (32) obj. -86.7693 iterations 1
Cbc0038I Pass   3: suminf.    0.82455 (13) obj. -66.689 iterations 19
Cbc0038I Solution found of -47.0199
Cbc0038I Rounding solution of -50.9454 is better than previous of -47.0199

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 140 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -55.7206
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.50530 (32) obj. -86.7693 iterations 0
Cbc0038I Pass   5: suminf.    2.50530 (32) obj. -86.7693 iterations 1
Cbc0038I Pass   6: suminf.    1.10947 (17) obj. -72.2604 iterations 15
Cbc0038I Pass   7: suminf.    0.69095 (5) obj. -55.7206 iterations 22
Cbc0038I Pass   8: suminf.    0.50300 (5) obj. -59.2601 iterations 4
Cbc0038I Pass   9: suminf.    0.23919 (3) obj. -55.7206 iterations 9
Cbc0038I Pass  10: suminf.    0.22408 (3) obj. -55.7206 iterations 2
Cbc0038I Pass  11: suminf.    0.61182 (3) obj. -55.7206 iterations 6
Cbc0038I Pass  12: suminf.    1.36892 (16) obj. -55.7206 iterations 38
Cbc0038I Pass  13: suminf.    1.14681 (16) obj. -55.7206 iterations 12
Cbc0038I Pass  14: suminf.    0.71200 (4) obj. -55.7206 iterations 20
Cbc0038I Pass  15: suminf.    0.46023 (2) obj. -55.7206 iterations 6
Cbc0038I Pass  16: suminf.    0.13810 (2) obj. -56.687 iterations 4
Cbc0038I Pass  17: suminf.    0.46023 (2) obj. -55.7206 iterations 4
Cbc0038I Pass  18: suminf.    1.06732 (11) obj. -55.7206 iterations 28
Cbc0038I Pass  19: suminf.    1.01131 (9) obj. -58.2342 iterations 4
Cbc0038I Pass  20: suminf.    0.58501 (5) obj. -55.7206 iterations 14
Cbc0038I Pass  21: suminf.    0.57564 (5) obj. -55.7206 iterations 3
Cbc0038I Pass  22: suminf.    0.57268 (3) obj. -55.7206 iterations 13
Cbc0038I Pass  23: suminf.    0.56760 (3) obj. -55.7206 iterations 2
Cbc0038I Pass  24: suminf.    0.57268 (3) obj. -55.7206 iterations 5
Cbc0038I Pass  25: suminf.    0.92648 (9) obj. -55.7206 iterations 23
Cbc0038I Pass  26: suminf.    0.57834 (7) obj. -55.7206 iterations 7
Cbc0038I Pass  27: suminf.    0.91232 (8) obj. -55.7206 iterations 10
Cbc0038I Pass  28: suminf.    0.74253 (8) obj. -55.7206 iterations 2
Cbc0038I Pass  29: suminf.    0.49335 (3) obj. -55.7206 iterations 16
Cbc0038I Pass  30: suminf.    0.38793 (4) obj. -55.7206 iterations 2
Cbc0038I Pass  31: suminf.    0.69658 (2) obj. -55.7206 iterations 13
Cbc0038I Pass  32: suminf.    0.08284 (2) obj. -55.7206 iterations 6
Cbc0038I Pass  33: suminf.    0.55301 (3) obj. -55.7206 iterations 4
Cbc0038I Rounding solution of -53.87 is better than previous of -50.9454

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 140 columns, reduced to 14 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -64.316
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.50530 (32) obj. -86.7693 iterations 0
Cbc0038I Pass  34: suminf.    2.50530 (32) obj. -86.7693 iterations 1
Cbc0038I Pass  35: suminf.    0.68741 (11) obj. -64.8261 iterations 21
Cbc0038I Pass  36: suminf.    1.01815 (7) obj. -64.316 iterations 17
Cbc0038I Pass  37: suminf.    0.96125 (9) obj. -64.316 iterations 2
Cbc0038I Pass  38: suminf.    0.53855 (8) obj. -64.316 iterations 11
Cbc0038I Pass  39: suminf.    0.46195 (6) obj. -64.316 iterations 7
Cbc0038I Pass  40: suminf.    0.81689 (5) obj. -64.316 iterations 8
Cbc0038I Pass  41: suminf.    0.72951 (13) obj. -64.316 iterations 26
Cbc0038I Pass  42: suminf.    0.71235 (8) obj. -64.316 iterations 14
Cbc0038I Pass  43: suminf.    1.12738 (6) obj. -64.316 iterations 16
Cbc0038I Pass  44: suminf.    1.12738 (6) obj. -64.316 iterations 1
Cbc0038I Pass  45: suminf.    1.25150 (9) obj. -64.316 iterations 14
Cbc0038I Pass  46: suminf.    0.75411 (6) obj. -64.316 iterations 9
Cbc0038I Pass  47: suminf.    0.56564 (9) obj. -64.316 iterations 8
Cbc0038I Pass  48: suminf.    0.65292 (10) obj. -64.316 iterations 13
Cbc0038I Pass  49: suminf.    0.63043 (9) obj. -64.316 iterations 7
Cbc0038I Pass  50: suminf.    1.06186 (9) obj. -64.316 iterations 10
Cbc0038I Pass  51: suminf.    0.57733 (8) obj. -64.316 iterations 10
Cbc0038I Pass  52: suminf.    0.89638 (8) obj. -64.316 iterations 12
Cbc0038I Pass  53: suminf.    1.66757 (17) obj. -64.316 iterations 24
Cbc0038I Pass  54: suminf.    1.08317 (12) obj. -64.3481 iterations 11
Cbc0038I Pass  55: suminf.    0.92537 (9) obj. -64.316 iterations 20
Cbc0038I Pass  56: suminf.    0.92537 (9) obj. -64.316 iterations 1
Cbc0038I Pass  57: suminf.    1.07421 (9) obj. -64.316 iterations 26
Cbc0038I Pass  58: suminf.    0.47712 (8) obj. -64.316 iterations 10
Cbc0038I Pass  59: suminf.    0.94899 (8) obj. -64.316 iterations 15
Cbc0038I Pass  60: suminf.    0.57733 (8) obj. -64.316 iterations 9
Cbc0038I Pass  61: suminf.    0.89638 (8) obj. -64.316 iterations 10
Cbc0038I Pass  62: suminf.    1.07712 (9) obj. -64.316 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 140 columns, reduced to 13 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -53.87 - took 0.05 seconds
Cbc0012I Integer solution of -53.87001 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 41 added rows had average density of 6.9756098
Cbc0013I At root node, 41 cuts changed objective from -98.69733 to -55.166959 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 293 row cuts average 2.0 elements, 14 column cuts (14 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 60 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 59 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 44.3 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -53.87001 best solution, best possible -55.163885 (0.40 seconds)
Cbc0001I Search completed - best objective -53.87000999999999, took 501 iterations and 14 nodes (0.91 seconds)
Cbc0032I Strong branching done 104 times (647 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 4, 90 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.91

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 174 (-31) rows, 99 (-4) columns and 538 (-65) elements
Clp1000I sum of infeasibilities 0.000113566 - average 6.52676e-07, 28 fixed columns
Coin0506I Presolve 114 (-60) rows, 67 (-32) columns and 354 (-184) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 0.2298937 - largest nonzero change 0 ( 0%) - largest zero change 2.5826331e-05
Clp0000I Optimal - objective value 53.617114
Clp0000I Optimal - objective value 53.617114
Coin0511I After Postsolve, objective 53.617114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.617114
Clp0000I Optimal - objective value 53.617114
Clp0000I Optimal - objective value 53.617114
Coin0511I After Postsolve, objective 53.617114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.61711387 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 174 rows, 99 columns (98 integer (98 of which binary)) and 543 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.21754
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.44043 iterations 58
Cbc0038I Solution found of -4.44043
Cbc0038I Relaxing continuous gives -4.44043
Cbc0038I Rounding solution of -19.9922 is better than previous of -4.44043

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 99 columns, reduced to 61 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -19.9922 to -27.7674 (0.04 seconds)
Cbc0038I Round again with cutoff of -30.3525
Cbc0038I Pass   2: suminf.    2.34849 (11) obj. -30.3525 iterations 18
Cbc0038I Pass   3: suminf.    2.24355 (6) obj. -30.3525 iterations 15
Cbc0038I Pass   4: suminf.    2.24355 (6) obj. -30.3525 iterations 0
Cbc0038I Pass   5: suminf.    2.86150 (11) obj. -30.3525 iterations 12
Cbc0038I Pass   6: suminf.    2.85077 (11) obj. -30.3525 iterations 1
Cbc0038I Pass   7: suminf.    2.24326 (6) obj. -30.3525 iterations 17
Cbc0038I Pass   8: suminf.    1.66247 (5) obj. -30.3525 iterations 13
Cbc0038I Pass   9: suminf.    1.53358 (5) obj. -30.3525 iterations 2
Cbc0038I Pass  10: suminf.    2.77373 (11) obj. -30.3525 iterations 12
Cbc0038I Pass  11: suminf.    2.24355 (6) obj. -30.3525 iterations 16
Cbc0038I Pass  12: suminf.    2.24355 (6) obj. -30.3525 iterations 0
Cbc0038I Pass  13: suminf.    2.86150 (11) obj. -30.3525 iterations 13
Cbc0038I Pass  14: suminf.    2.85077 (11) obj. -30.3525 iterations 1
Cbc0038I Pass  15: suminf.    2.24326 (6) obj. -30.3525 iterations 17
Cbc0038I Pass  16: suminf.    1.66247 (5) obj. -30.3525 iterations 13
Cbc0038I Pass  17: suminf.    1.53358 (5) obj. -30.3525 iterations 2
Cbc0038I Pass  18: suminf.    2.77373 (11) obj. -30.3525 iterations 12
Cbc0038I Pass  19: suminf.    2.24355 (6) obj. -30.3525 iterations 16
Cbc0038I Pass  20: suminf.    2.24355 (6) obj. -30.3525 iterations 0
Cbc0038I Pass  21: suminf.    2.86150 (11) obj. -30.3525 iterations 13
Cbc0038I Pass  22: suminf.    2.85077 (11) obj. -30.3525 iterations 1
Cbc0038I Pass  23: suminf.    2.24326 (6) obj. -30.3525 iterations 17
Cbc0038I Pass  24: suminf.    1.66247 (5) obj. -30.3525 iterations 13
Cbc0038I Pass  25: suminf.    1.53358 (5) obj. -30.3525 iterations 2
Cbc0038I Pass  26: suminf.    2.77373 (11) obj. -30.3525 iterations 12
Cbc0038I Pass  27: suminf.    2.24355 (6) obj. -30.3525 iterations 16
Cbc0038I Pass  28: suminf.    2.24355 (6) obj. -30.3525 iterations 0
Cbc0038I Pass  29: suminf.    2.86150 (11) obj. -30.3525 iterations 13
Cbc0038I Pass  30: suminf.    2.85077 (11) obj. -30.3525 iterations 1
Cbc0038I Pass  31: suminf.    2.24326 (6) obj. -30.3525 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 99 columns, reduced to 72 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -27.7674 - took 0.07 seconds
Cbc0012I Integer solution of -27.7674 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 174 rows 99 columns, reduced to 61 rows 37 columns
Cbc0031I 26 added rows had average density of 62.653846
Cbc0013I At root node, 26 cuts changed objective from -53.617114 to -47.505154 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11871 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1941 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.7674 best solution, best possible -47.505154 (0.84 seconds)
Cbc0038I Full problem 174 rows 99 columns, reduced to 54 rows 35 columns
Cbc0038I Full problem 174 rows 99 columns, reduced to 72 rows 43 columns
Cbc0001I Search completed - best objective -27.76739999999999, took 10468 iterations and 130 nodes (1.25 seconds)
Cbc0032I Strong branching done 1088 times (19328 iterations), fathomed 13 nodes and fixed 57 variables
Cbc0035I Maximum depth 30, 496 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-88) rows, 139 (-64) columns and 2244 (-3410) elements
Clp1000I sum of infeasibilities 2.5682e-07 - average 2.19505e-09, 38 fixed columns
Coin0506I Presolve 83 (-34) rows, 101 (-38) columns and 1368 (-876) elements
Clp0006I 0  Obj 57.611945 Dual inf 23.092763 (101)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 1.5211918 - largest nonzero change 1.4640137e-05 ( 0.00089819337%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 69.433658
Clp0000I Optimal - objective value 69.433658
Coin0511I After Postsolve, objective 69.433658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 69.433658
Clp0000I Optimal - objective value 69.433658
Clp0000I Optimal - objective value 69.433658
Clp0000I Optimal - objective value 69.433658
Coin0511I After Postsolve, objective 69.433658, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.43365843 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 139 columns (139 integer (139 of which binary)) and 2251 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.97761
Cbc0038I Pass   1: suminf.    1.99713 (32) obj. -39.9116 iterations 20
Cbc0038I Pass   2: suminf.    1.99713 (32) obj. -39.9116 iterations 0
Cbc0038I Pass   3: suminf.    0.17706 (4) obj. -3.43886 iterations 28
Cbc0038I Solution found of 0.38408
Cbc0038I Rounding solution of -12 is better than previous of 0.38408

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 139 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16.8702
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.99713 (32) obj. -39.9116 iterations 0
Cbc0038I Pass   5: suminf.    1.99713 (32) obj. -39.9116 iterations 0
Cbc0038I Pass   6: suminf.    1.02191 (13) obj. -16.8702 iterations 21
Cbc0038I Pass   7: suminf.    0.72935 (5) obj. -16.8702 iterations 18
Cbc0038I Pass   8: suminf.    0.47539 (4) obj. -16.8702 iterations 2
Cbc0038I Pass   9: suminf.    0.76743 (2) obj. -16.8702 iterations 13
Cbc0038I Pass  10: suminf.    0.57775 (2) obj. -16.8702 iterations 11
Cbc0038I Pass  11: suminf.    0.24535 (3) obj. -16.8702 iterations 10
Cbc0038I Pass  12: suminf.    0.24535 (3) obj. -16.8702 iterations 0
Cbc0038I Pass  13: suminf.    0.57775 (2) obj. -16.8702 iterations 9
Cbc0038I Pass  14: suminf.    2.24056 (16) obj. -16.8702 iterations 43
Cbc0038I Pass  15: suminf.    1.01183 (15) obj. -16.8702 iterations 14
Cbc0038I Pass  16: suminf.    0.53880 (7) obj. -16.8702 iterations 22
Cbc0038I Pass  17: suminf.    0.38843 (3) obj. -17.0516 iterations 4
Cbc0038I Pass  18: suminf.    0.52975 (6) obj. -16.8702 iterations 13
Cbc0038I Pass  19: suminf.    0.32948 (2) obj. -17.3941 iterations 7
Cbc0038I Pass  20: suminf.    1.36419 (11) obj. -16.8702 iterations 25
Cbc0038I Pass  21: suminf.    1.33261 (10) obj. -16.8702 iterations 3
Cbc0038I Pass  22: suminf.    1.01449 (8) obj. -16.8702 iterations 13
Cbc0038I Pass  23: suminf.    1.01449 (8) obj. -16.8702 iterations 1
Cbc0038I Pass  24: suminf.    1.19289 (7) obj. -16.8702 iterations 8
Cbc0038I Pass  25: suminf.    1.18732 (8) obj. -16.8702 iterations 4
Cbc0038I Pass  26: suminf.    1.73897 (7) obj. -16.8702 iterations 10
Cbc0038I Pass  27: suminf.    0.63860 (4) obj. -16.8702 iterations 6
Cbc0038I Pass  28: suminf.    0.29136 (3) obj. -18.0727 iterations 3
Cbc0038I Pass  29: suminf.    1.20908 (6) obj. -16.8702 iterations 13
Cbc0038I Pass  30: suminf.    0.58128 (3) obj. -17.326 iterations 6
Cbc0038I Pass  31: suminf.    1.55293 (14) obj. -16.8702 iterations 27
Cbc0038I Pass  32: suminf.    0.74407 (11) obj. -16.8702 iterations 7
Cbc0038I Pass  33: suminf.    0.60884 (5) obj. -16.8702 iterations 14
Cbc0038I Rounding solution of -16.7643 is better than previous of -12

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 139 columns, reduced to 37 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -16.7643 to -27.7674 (0.10 seconds)
Cbc0038I Round again with cutoff of -34.3543
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.99713 (32) obj. -39.9116 iterations 0
Cbc0038I Pass  34: suminf.    1.99713 (32) obj. -39.9116 iterations 0
Cbc0038I Pass  35: suminf.    1.59176 (15) obj. -34.3543 iterations 33
Cbc0038I Pass  36: suminf.    1.30585 (17) obj. -34.3543 iterations 6
Cbc0038I Pass  37: suminf.    1.01465 (11) obj. -34.3543 iterations 24
Cbc0038I Pass  38: suminf.    1.01465 (11) obj. -34.3543 iterations 2
Cbc0038I Pass  39: suminf.    1.91209 (14) obj. -34.3543 iterations 18
Cbc0038I Pass  40: suminf.    1.86457 (14) obj. -34.3543 iterations 1
Cbc0038I Pass  41: suminf.    1.27772 (10) obj. -34.3543 iterations 5
Cbc0038I Pass  42: suminf.    0.93512 (11) obj. -34.3543 iterations 1
Cbc0038I Pass  43: suminf.    1.89155 (14) obj. -34.3543 iterations 8
Cbc0038I Pass  44: suminf.    1.84166 (14) obj. -34.3543 iterations 1
Cbc0038I Pass  45: suminf.    1.27772 (10) obj. -34.3543 iterations 5
Cbc0038I Pass  46: suminf.    1.73615 (16) obj. -34.3543 iterations 20
Cbc0038I Pass  47: suminf.    1.73275 (15) obj. -34.3543 iterations 5
Cbc0038I Pass  48: suminf.    2.09457 (12) obj. -34.3543 iterations 9
Cbc0038I Pass  49: suminf.    1.35915 (16) obj. -34.3543 iterations 11
Cbc0038I Pass  50: suminf.    1.07568 (12) obj. -34.3543 iterations 10
Cbc0038I Pass  51: suminf.    1.96281 (15) obj. -34.3543 iterations 13
Cbc0038I Pass  52: suminf.    1.88916 (15) obj. -34.3543 iterations 1
Cbc0038I Pass  53: suminf.    1.34220 (11) obj. -34.3543 iterations 6
Cbc0038I Pass  54: suminf.    0.96375 (12) obj. -34.3543 iterations 1
Cbc0038I Pass  55: suminf.    1.01465 (11) obj. -34.3543 iterations 7
Cbc0038I Pass  56: suminf.    1.01465 (11) obj. -34.3543 iterations 2
Cbc0038I Pass  57: suminf.    1.91209 (14) obj. -34.3543 iterations 18
Cbc0038I Pass  58: suminf.    1.86457 (14) obj. -34.3543 iterations 1
Cbc0038I Pass  59: suminf.    1.27772 (10) obj. -34.3543 iterations 6
Cbc0038I Pass  60: suminf.    0.93512 (11) obj. -34.3543 iterations 1
Cbc0038I Pass  61: suminf.    1.89155 (14) obj. -34.3543 iterations 9
Cbc0038I Pass  62: suminf.    1.84166 (14) obj. -34.3543 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -27.7674 - took 0.12 seconds
Cbc0012I Integer solution of -27.7674 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 30 rows 36 columns
Cbc0031I 51 added rows had average density of 41.470588
Cbc0013I At root node, 51 cuts changed objective from -60.701724 to -35.536143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16869 row cuts average 6.4 elements, 2 column cuts (2 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2114 row cuts average 128.2 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 765 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1371 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 355 row cuts average 69.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 125 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.396 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.7674 best solution, best possible -35.536143 (2.32 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 0 rows 0 columns
Cbc0010I After 85 nodes, 8 on tree, -27.7674 best solution, best possible -34.652257 (3.02 seconds)
Cbc0038I Full problem 117 rows 139 columns, reduced to 3 rows 4 columns
Cbc0001I Search completed - best objective -27.76739999999999, took 7975 iterations and 108 nodes (3.13 seconds)
Cbc0032I Strong branching done 718 times (10968 iterations), fathomed 25 nodes and fixed 19 variables
Cbc0035I Maximum depth 18, 182 variables fixed on reduced cost
Total time (CPU seconds):       2.57   (Wallclock seconds):       3.15

