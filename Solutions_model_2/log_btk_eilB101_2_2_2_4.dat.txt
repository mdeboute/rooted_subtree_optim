Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 99 (-4) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 7.73936e-05 - average 4.27589e-07, 18 fixed columns
Coin0506I Presolve 146 (-35) rows, 81 (-18) columns and 447 (-105) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 0.23136978 - largest nonzero change 0 ( 0%) - largest zero change 2.9899e-05
Clp0000I Optimal - objective value 34.184833
Clp0000I Optimal - objective value 34.184833
Coin0511I After Postsolve, objective 34.184833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.184833
Clp0000I Optimal - objective value 34.184833
Clp0000I Optimal - objective value 34.184833
Coin0511I After Postsolve, objective 34.184833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.1848332 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.52109
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.44097 iterations 75
Cbc0038I Solution found of 4.44097
Cbc0038I Relaxing continuous gives 4.44097
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 4.44097 to -7.23304 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.92831
Cbc0038I Pass   2: suminf.    2.21778 (10) obj. -9.92831 iterations 28
Cbc0038I Pass   3: suminf.    1.78286 (5) obj. -9.92831 iterations 20
Cbc0038I Pass   4: suminf.    1.51168 (5) obj. -9.92831 iterations 4
Cbc0038I Pass   5: suminf.    1.39308 (5) obj. -9.92831 iterations 3
Cbc0038I Pass   6: suminf.    2.14562 (5) obj. -9.92831 iterations 7
Cbc0038I Pass   7: suminf.    1.33760 (5) obj. -9.92831 iterations 6
Cbc0038I Pass   8: suminf.    2.52493 (7) obj. -9.92831 iterations 5
Cbc0038I Pass   9: suminf.    1.30689 (7) obj. -9.92831 iterations 9
Cbc0038I Pass  10: suminf.    1.99770 (6) obj. -9.92831 iterations 23
Cbc0038I Pass  11: suminf.    1.99770 (6) obj. -9.92831 iterations 4
Cbc0038I Pass  12: suminf.    1.15990 (6) obj. -9.92831 iterations 12
Cbc0038I Pass  13: suminf.    1.15990 (6) obj. -9.92831 iterations 0
Cbc0038I Pass  14: suminf.    2.29098 (6) obj. -9.92831 iterations 8
Cbc0038I Pass  15: suminf.    2.03363 (6) obj. -9.92831 iterations 1
Cbc0038I Pass  16: suminf.    1.31271 (6) obj. -9.92831 iterations 7
Cbc0038I Pass  17: suminf.    1.30689 (7) obj. -9.92831 iterations 7
Cbc0038I Pass  18: suminf.    1.99770 (6) obj. -9.92831 iterations 23
Cbc0038I Pass  19: suminf.    1.99770 (6) obj. -9.92831 iterations 4
Cbc0038I Pass  20: suminf.    1.15990 (6) obj. -9.92831 iterations 12
Cbc0038I Pass  21: suminf.    1.15990 (6) obj. -9.92831 iterations 0
Cbc0038I Pass  22: suminf.    2.29098 (6) obj. -9.92831 iterations 8
Cbc0038I Pass  23: suminf.    2.03363 (6) obj. -9.92831 iterations 1
Cbc0038I Pass  24: suminf.    1.31271 (6) obj. -9.92831 iterations 7
Cbc0038I Pass  25: suminf.    1.30689 (7) obj. -9.92831 iterations 7
Cbc0038I Pass  26: suminf.    1.99770 (6) obj. -9.92831 iterations 23
Cbc0038I Pass  27: suminf.    1.99770 (6) obj. -9.92831 iterations 4
Cbc0038I Pass  28: suminf.    1.15990 (6) obj. -9.92831 iterations 12
Cbc0038I Pass  29: suminf.    1.15990 (6) obj. -9.92831 iterations 0
Cbc0038I Pass  30: suminf.    2.29098 (6) obj. -9.92831 iterations 8
Cbc0038I Pass  31: suminf.    2.03363 (6) obj. -9.92831 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 84 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -7.23304 - took 0.10 seconds
Cbc0012I Integer solution of -7.23304 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 79 rows 45 columns
Cbc0031I 22 added rows had average density of 64.136364
Cbc0013I At root node, 22 cuts changed objective from -34.184833 to -27.94457 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12978 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1665 row cuts average 98.8 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.23304 best solution, best possible -27.94457 (1.13 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 86 rows 49 columns
Cbc0038I Full problem 181 rows 99 columns, reduced to 6 rows 8 columns
Cbc0001I Search completed - best objective -7.233040000000003, took 11595 iterations and 128 nodes (1.77 seconds)
Cbc0032I Strong branching done 1166 times (21267 iterations), fathomed 14 nodes and fixed 47 variables
Cbc0035I Maximum depth 33, 497 variables fixed on reduced cost
Total time (CPU seconds):       1.71   (Wallclock seconds):       1.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-77) rows, 142 (-60) columns and 2365 (-3288) elements
Clp1000I sum of infeasibilities 3.61563e-06 - average 2.84696e-08, 62 fixed columns
Coin0506I Presolve 65 (-62) rows, 78 (-64) columns and 281 (-2084) elements
Clp0006I 0  Obj -23.373852 Dual inf 187.06291 (77)
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 0.22534847 - largest nonzero change 1.9548903e-05 ( 0.0016756202%) - largest zero change 2.9801181e-05
Clp0000I Optimal - objective value -22.622725
Clp0000I Optimal - objective value -22.622725
Coin0511I After Postsolve, objective -22.622725, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -22.622725 Dual inf 109.47658 (44)
Clp0014I Perturbing problem by 0.001% of 1.3028189 - largest nonzero change 2.039401e-05 ( 0.0014083952%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 48.005657
Clp0000I Optimal - objective value 48.005657
Clp0000I Optimal - objective value 48.005657
Coin0511I After Postsolve, objective 48.005657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.00565685 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 142 columns (142 integer (142 of which binary)) and 2371 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.421%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 5.03183
Cbc0038I Pass   1: suminf.    1.74031 (33) obj. -20.7646 iterations 28
Cbc0038I Pass   2: suminf.    1.74031 (33) obj. -20.7646 iterations 1
Cbc0038I Pass   3: suminf.    0.64294 (17) obj. -1.22521 iterations 16
Cbc0038I Solution found of 18.0154
Cbc0038I Rounding solution of 10.6743 is better than previous of 18.0154

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 10.6743 to 7.86316 (0.04 seconds)
Cbc0038I Round again with cutoff of 3.201
Cbc0038I Pass   4: suminf.    1.74031 (33) obj. -20.7646 iterations 0
Cbc0038I Pass   5: suminf.    1.74031 (33) obj. -20.7646 iterations 1
Cbc0038I Pass   6: suminf.    0.68632 (12) obj. 3.201 iterations 37
Cbc0038I Pass   7: suminf.    1.18975 (8) obj. 3.201 iterations 26
Cbc0038I Pass   8: suminf.    1.18975 (8) obj. 3.201 iterations 3
Cbc0038I Pass   9: suminf.    1.64283 (6) obj. 3.201 iterations 36
Cbc0038I Pass  10: suminf.    1.64283 (6) obj. 3.201 iterations 0
Cbc0038I Pass  11: suminf.    1.25745 (5) obj. 1.52575 iterations 16
Cbc0038I Pass  12: suminf.    0.86576 (5) obj. 3.201 iterations 19
Cbc0038I Pass  13: suminf.    1.15534 (4) obj. 3.201 iterations 16
Cbc0038I Pass  14: suminf.    0.81206 (4) obj. 3.201 iterations 2
Cbc0038I Pass  15: suminf.    0.93775 (4) obj. 3.201 iterations 9
Cbc0038I Pass  16: suminf.    1.44401 (15) obj. -6.1162 iterations 36
Cbc0038I Pass  17: suminf.    0.93589 (12) obj. -6.02632 iterations 11
Cbc0038I Pass  18: suminf.    1.80557 (11) obj. 3.201 iterations 32
Cbc0038I Pass  19: suminf.    1.25328 (14) obj. 3.201 iterations 3
Cbc0038I Pass  20: suminf.    1.64283 (6) obj. 3.201 iterations 19
Cbc0038I Pass  21: suminf.    1.64283 (6) obj. 3.201 iterations 11
Cbc0038I Pass  22: suminf.    1.25745 (5) obj. 1.52575 iterations 13
Cbc0038I Pass  23: suminf.    0.86576 (5) obj. 3.201 iterations 18
Cbc0038I Pass  24: suminf.    1.15534 (4) obj. 3.201 iterations 14
Cbc0038I Pass  25: suminf.    0.81206 (4) obj. 3.201 iterations 2
Cbc0038I Pass  26: suminf.    0.93775 (4) obj. 3.201 iterations 7
Cbc0038I Pass  27: suminf.    1.06350 (8) obj. 3.201 iterations 28
Cbc0038I Pass  28: suminf.    0.72855 (6) obj. 1.82466 iterations 6
Cbc0038I Pass  29: suminf.    1.16097 (6) obj. 3.201 iterations 27
Cbc0038I Pass  30: suminf.    1.05317 (9) obj. 3.201 iterations 6
Cbc0038I Pass  31: suminf.    0.95867 (4) obj. 3.201 iterations 16
Cbc0038I Pass  32: suminf.    0.51703 (2) obj. 2.78564 iterations 2
Cbc0038I Pass  33: suminf.    0.56494 (4) obj. 3.201 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 36 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 7.86316 to -7.23304 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.538
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.74031 (33) obj. -20.7646 iterations 0
Cbc0038I Pass  34: suminf.    1.74031 (33) obj. -20.7646 iterations 1
Cbc0038I Pass  35: suminf.    3.08418 (22) obj. -13.538 iterations 55
Cbc0038I Pass  36: suminf.    2.49245 (20) obj. -13.538 iterations 9
Cbc0038I Pass  37: suminf.    2.39903 (16) obj. -13.538 iterations 19
Cbc0038I Pass  38: suminf.    2.07449 (18) obj. -13.538 iterations 12
Cbc0038I Pass  39: suminf.    2.61213 (17) obj. -13.538 iterations 21
Cbc0038I Pass  40: suminf.    2.22316 (18) obj. -13.538 iterations 12
Cbc0038I Pass  41: suminf.    2.61213 (17) obj. -13.538 iterations 24
Cbc0038I Pass  42: suminf.    2.26358 (18) obj. -13.538 iterations 13
Cbc0038I Pass  43: suminf.    2.01127 (20) obj. -13.538 iterations 18
Cbc0038I Pass  44: suminf.    2.01127 (20) obj. -13.538 iterations 1
Cbc0038I Pass  45: suminf.    2.77574 (21) obj. -13.538 iterations 26
Cbc0038I Pass  46: suminf.    2.68774 (20) obj. -13.538 iterations 4
Cbc0038I Pass  47: suminf.    2.72721 (19) obj. -13.538 iterations 8
Cbc0038I Pass  48: suminf.    2.69870 (20) obj. -13.538 iterations 5
Cbc0038I Pass  49: suminf.    2.71438 (19) obj. -13.538 iterations 7
Cbc0038I Pass  50: suminf.    1.97438 (17) obj. -13.538 iterations 22
Cbc0038I Pass  51: suminf.    1.97438 (17) obj. -13.538 iterations 0
Cbc0038I Pass  52: suminf.    2.77574 (21) obj. -13.538 iterations 44
Cbc0038I Pass  53: suminf.    2.68774 (20) obj. -13.538 iterations 4
Cbc0038I Pass  54: suminf.    2.66275 (18) obj. -13.538 iterations 12
Cbc0038I Pass  55: suminf.    2.65086 (19) obj. -13.538 iterations 6
Cbc0038I Pass  56: suminf.    2.64547 (18) obj. -13.538 iterations 9
Cbc0038I Pass  57: suminf.    2.63435 (19) obj. -13.538 iterations 6
Cbc0038I Pass  58: suminf.    2.65634 (18) obj. -13.538 iterations 8
Cbc0038I Pass  59: suminf.    2.64521 (19) obj. -13.538 iterations 6
Cbc0038I Pass  60: suminf.    2.64547 (18) obj. -13.538 iterations 8
Cbc0038I Pass  61: suminf.    2.02112 (16) obj. -13.538 iterations 18
Cbc0038I Pass  62: suminf.    1.68697 (16) obj. -13.538 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.23304 - took 0.06 seconds
Cbc0012I Integer solution of -7.23304 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 11 rows 14 columns
Cbc0031I 54 added rows had average density of 40.055556
Cbc0013I At root node, 54 cuts changed objective from -38.757473 to -13.008121 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11349 row cuts average 2.1 elements, 0 column cuts (39 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1274 row cuts average 129.4 elements, 0 column cuts (0 active)  in 0.193 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 660 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1228 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 85.6 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 137 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.23304 best solution, best possible -13.008121 (2.76 seconds)
Cbc0010I After 5 nodes, 4 on tree, -7.23304 best solution, best possible -12.439349 (3.55 seconds)
Cbc0010I After 25 nodes, 8 on tree, -7.23304 best solution, best possible -12.439349 (4.26 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 13 rows 14 columns
Cbc0001I Search completed - best objective -7.233040000000003, took 7393 iterations and 52 nodes (4.90 seconds)
Cbc0032I Strong branching done 610 times (13519 iterations), fathomed 5 nodes and fixed 12 variables
Cbc0035I Maximum depth 17, 201 variables fixed on reduced cost
Total time (CPU seconds):       3.41   (Wallclock seconds):       4.92

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 99 (-4) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 7.73936e-05 - average 4.27589e-07, 18 fixed columns
Coin0506I Presolve 146 (-35) rows, 81 (-18) columns and 447 (-105) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 0.23136978 - largest nonzero change 0 ( 0%) - largest zero change 2.9899e-05
Clp0000I Optimal - objective value 34.184833
Clp0000I Optimal - objective value 34.184833
Coin0511I After Postsolve, objective 34.184833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.184833
Clp0000I Optimal - objective value 34.184833
Clp0000I Optimal - objective value 34.184833
Coin0511I After Postsolve, objective 34.184833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.1848332 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.52109
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.44097 iterations 75
Cbc0038I Solution found of 4.44097
Cbc0038I Relaxing continuous gives 4.44097
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 79 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 4.44097 to -7.23304 (0.05 seconds)
Cbc0038I Round again with cutoff of -9.92831
Cbc0038I Pass   2: suminf.    2.21778 (10) obj. -9.92831 iterations 28
Cbc0038I Pass   3: suminf.    1.78286 (5) obj. -9.92831 iterations 20
Cbc0038I Pass   4: suminf.    1.51168 (5) obj. -9.92831 iterations 4
Cbc0038I Pass   5: suminf.    1.39308 (5) obj. -9.92831 iterations 3
Cbc0038I Pass   6: suminf.    2.14562 (5) obj. -9.92831 iterations 7
Cbc0038I Pass   7: suminf.    1.33760 (5) obj. -9.92831 iterations 6
Cbc0038I Pass   8: suminf.    2.52493 (7) obj. -9.92831 iterations 5
Cbc0038I Pass   9: suminf.    1.30689 (7) obj. -9.92831 iterations 9
Cbc0038I Pass  10: suminf.    1.99770 (6) obj. -9.92831 iterations 23
Cbc0038I Pass  11: suminf.    1.99770 (6) obj. -9.92831 iterations 4
Cbc0038I Pass  12: suminf.    1.15990 (6) obj. -9.92831 iterations 12
Cbc0038I Pass  13: suminf.    1.15990 (6) obj. -9.92831 iterations 0
Cbc0038I Pass  14: suminf.    2.29098 (6) obj. -9.92831 iterations 8
Cbc0038I Pass  15: suminf.    2.03363 (6) obj. -9.92831 iterations 1
Cbc0038I Pass  16: suminf.    1.31271 (6) obj. -9.92831 iterations 7
Cbc0038I Pass  17: suminf.    1.30689 (7) obj. -9.92831 iterations 7
Cbc0038I Pass  18: suminf.    1.99770 (6) obj. -9.92831 iterations 23
Cbc0038I Pass  19: suminf.    1.99770 (6) obj. -9.92831 iterations 4
Cbc0038I Pass  20: suminf.    1.15990 (6) obj. -9.92831 iterations 12
Cbc0038I Pass  21: suminf.    1.15990 (6) obj. -9.92831 iterations 0
Cbc0038I Pass  22: suminf.    2.29098 (6) obj. -9.92831 iterations 8
Cbc0038I Pass  23: suminf.    2.03363 (6) obj. -9.92831 iterations 1
Cbc0038I Pass  24: suminf.    1.31271 (6) obj. -9.92831 iterations 7
Cbc0038I Pass  25: suminf.    1.30689 (7) obj. -9.92831 iterations 7
Cbc0038I Pass  26: suminf.    1.99770 (6) obj. -9.92831 iterations 23
Cbc0038I Pass  27: suminf.    1.99770 (6) obj. -9.92831 iterations 4
Cbc0038I Pass  28: suminf.    1.15990 (6) obj. -9.92831 iterations 12
Cbc0038I Pass  29: suminf.    1.15990 (6) obj. -9.92831 iterations 0
Cbc0038I Pass  30: suminf.    2.29098 (6) obj. -9.92831 iterations 8
Cbc0038I Pass  31: suminf.    2.03363 (6) obj. -9.92831 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 99 columns, reduced to 84 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.23304 - took 0.09 seconds
Cbc0012I Integer solution of -7.23304 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 79 rows 45 columns
Cbc0031I 22 added rows had average density of 64.136364
Cbc0013I At root node, 22 cuts changed objective from -34.184833 to -27.94457 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12978 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1665 row cuts average 98.8 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.23304 best solution, best possible -27.94457 (1.02 seconds)
Cbc0038I Full problem 181 rows 99 columns, reduced to 86 rows 49 columns
Cbc0038I Full problem 181 rows 99 columns, reduced to 6 rows 8 columns
Cbc0001I Search completed - best objective -7.233040000000003, took 11595 iterations and 128 nodes (1.60 seconds)
Cbc0032I Strong branching done 1166 times (21267 iterations), fathomed 14 nodes and fixed 47 variables
Cbc0035I Maximum depth 33, 497 variables fixed on reduced cost
Total time (CPU seconds):       1.56   (Wallclock seconds):       1.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 142 (-61) columns and 2365 (-3289) elements
Clp1000I sum of infeasibilities 3.61563e-06 - average 2.84696e-08, 62 fixed columns
Coin0506I Presolve 65 (-62) rows, 78 (-64) columns and 281 (-2084) elements
Clp0006I 0  Obj -23.373852 Dual inf 187.06291 (77)
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 0.22534847 - largest nonzero change 1.9548903e-05 ( 0.0016756202%) - largest zero change 2.9801181e-05
Clp0000I Optimal - objective value -22.622725
Clp0000I Optimal - objective value -22.622725
Coin0511I After Postsolve, objective -22.622725, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -22.622725 Dual inf 109.47658 (44)
Clp0014I Perturbing problem by 0.001% of 1.3028189 - largest nonzero change 2.039401e-05 ( 0.0014083952%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 48.005657
Clp0000I Optimal - objective value 48.005657
Clp0000I Optimal - objective value 48.005657
Coin0511I After Postsolve, objective 48.005657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.00565685 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 142 columns (142 integer (142 of which binary)) and 2371 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.421%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 5.03183
Cbc0038I Pass   1: suminf.    1.74031 (33) obj. -20.7646 iterations 28
Cbc0038I Pass   2: suminf.    1.74031 (33) obj. -20.7646 iterations 1
Cbc0038I Pass   3: suminf.    0.64294 (17) obj. -1.22521 iterations 16
Cbc0038I Solution found of 18.0154
Cbc0038I Rounding solution of 10.6743 is better than previous of 18.0154

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 10.6743 to 7.86316 (0.03 seconds)
Cbc0038I Round again with cutoff of 3.201
Cbc0038I Pass   4: suminf.    1.74031 (33) obj. -20.7646 iterations 0
Cbc0038I Pass   5: suminf.    1.74031 (33) obj. -20.7646 iterations 1
Cbc0038I Pass   6: suminf.    0.68632 (12) obj. 3.201 iterations 37
Cbc0038I Pass   7: suminf.    1.18975 (8) obj. 3.201 iterations 26
Cbc0038I Pass   8: suminf.    1.18975 (8) obj. 3.201 iterations 3
Cbc0038I Pass   9: suminf.    1.64283 (6) obj. 3.201 iterations 36
Cbc0038I Pass  10: suminf.    1.64283 (6) obj. 3.201 iterations 0
Cbc0038I Pass  11: suminf.    1.25745 (5) obj. 1.52575 iterations 16
Cbc0038I Pass  12: suminf.    0.86576 (5) obj. 3.201 iterations 19
Cbc0038I Pass  13: suminf.    1.15534 (4) obj. 3.201 iterations 16
Cbc0038I Pass  14: suminf.    0.81206 (4) obj. 3.201 iterations 2
Cbc0038I Pass  15: suminf.    0.93775 (4) obj. 3.201 iterations 9
Cbc0038I Pass  16: suminf.    1.44401 (15) obj. -6.1162 iterations 36
Cbc0038I Pass  17: suminf.    0.93589 (12) obj. -6.02632 iterations 11
Cbc0038I Pass  18: suminf.    1.80557 (11) obj. 3.201 iterations 32
Cbc0038I Pass  19: suminf.    1.25328 (14) obj. 3.201 iterations 3
Cbc0038I Pass  20: suminf.    1.64283 (6) obj. 3.201 iterations 19
Cbc0038I Pass  21: suminf.    1.64283 (6) obj. 3.201 iterations 11
Cbc0038I Pass  22: suminf.    1.25745 (5) obj. 1.52575 iterations 13
Cbc0038I Pass  23: suminf.    0.86576 (5) obj. 3.201 iterations 18
Cbc0038I Pass  24: suminf.    1.15534 (4) obj. 3.201 iterations 14
Cbc0038I Pass  25: suminf.    0.81206 (4) obj. 3.201 iterations 2
Cbc0038I Pass  26: suminf.    0.93775 (4) obj. 3.201 iterations 7
Cbc0038I Pass  27: suminf.    1.06350 (8) obj. 3.201 iterations 28
Cbc0038I Pass  28: suminf.    0.72855 (6) obj. 1.82466 iterations 6
Cbc0038I Pass  29: suminf.    1.16097 (6) obj. 3.201 iterations 27
Cbc0038I Pass  30: suminf.    1.05317 (9) obj. 3.201 iterations 6
Cbc0038I Pass  31: suminf.    0.95867 (4) obj. 3.201 iterations 16
Cbc0038I Pass  32: suminf.    0.51703 (2) obj. 2.78564 iterations 2
Cbc0038I Pass  33: suminf.    0.56494 (4) obj. 3.201 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 36 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 7.86316 to -7.23304 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.538
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.74031 (33) obj. -20.7646 iterations 0
Cbc0038I Pass  34: suminf.    1.74031 (33) obj. -20.7646 iterations 1
Cbc0038I Pass  35: suminf.    3.08418 (22) obj. -13.538 iterations 55
Cbc0038I Pass  36: suminf.    2.49245 (20) obj. -13.538 iterations 9
Cbc0038I Pass  37: suminf.    2.39903 (16) obj. -13.538 iterations 19
Cbc0038I Pass  38: suminf.    2.07449 (18) obj. -13.538 iterations 12
Cbc0038I Pass  39: suminf.    2.61213 (17) obj. -13.538 iterations 21
Cbc0038I Pass  40: suminf.    2.22316 (18) obj. -13.538 iterations 12
Cbc0038I Pass  41: suminf.    2.61213 (17) obj. -13.538 iterations 24
Cbc0038I Pass  42: suminf.    2.26358 (18) obj. -13.538 iterations 13
Cbc0038I Pass  43: suminf.    2.01127 (20) obj. -13.538 iterations 18
Cbc0038I Pass  44: suminf.    2.01127 (20) obj. -13.538 iterations 1
Cbc0038I Pass  45: suminf.    2.77574 (21) obj. -13.538 iterations 26
Cbc0038I Pass  46: suminf.    2.68774 (20) obj. -13.538 iterations 4
Cbc0038I Pass  47: suminf.    2.72721 (19) obj. -13.538 iterations 8
Cbc0038I Pass  48: suminf.    2.69870 (20) obj. -13.538 iterations 5
Cbc0038I Pass  49: suminf.    2.71438 (19) obj. -13.538 iterations 7
Cbc0038I Pass  50: suminf.    1.97438 (17) obj. -13.538 iterations 22
Cbc0038I Pass  51: suminf.    1.97438 (17) obj. -13.538 iterations 0
Cbc0038I Pass  52: suminf.    2.77574 (21) obj. -13.538 iterations 44
Cbc0038I Pass  53: suminf.    2.68774 (20) obj. -13.538 iterations 4
Cbc0038I Pass  54: suminf.    2.66275 (18) obj. -13.538 iterations 12
Cbc0038I Pass  55: suminf.    2.65086 (19) obj. -13.538 iterations 6
Cbc0038I Pass  56: suminf.    2.64547 (18) obj. -13.538 iterations 9
Cbc0038I Pass  57: suminf.    2.63435 (19) obj. -13.538 iterations 6
Cbc0038I Pass  58: suminf.    2.65634 (18) obj. -13.538 iterations 8
Cbc0038I Pass  59: suminf.    2.64521 (19) obj. -13.538 iterations 6
Cbc0038I Pass  60: suminf.    2.64547 (18) obj. -13.538 iterations 8
Cbc0038I Pass  61: suminf.    2.02112 (16) obj. -13.538 iterations 18
Cbc0038I Pass  62: suminf.    1.68697 (16) obj. -13.538 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -7.23304 - took 0.05 seconds
Cbc0012I Integer solution of -7.23304 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 11 rows 14 columns
Cbc0031I 54 added rows had average density of 40.055556
Cbc0013I At root node, 54 cuts changed objective from -38.757473 to -13.008121 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11349 row cuts average 2.1 elements, 0 column cuts (39 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1274 row cuts average 129.4 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 660 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1228 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 85.6 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 137 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.23304 best solution, best possible -13.008121 (2.63 seconds)
Cbc0010I After 5 nodes, 4 on tree, -7.23304 best solution, best possible -12.439349 (3.38 seconds)
Cbc0010I After 26 nodes, 8 on tree, -7.23304 best solution, best possible -12.439349 (4.08 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 13 rows 14 columns
Cbc0001I Search completed - best objective -7.233040000000003, took 7393 iterations and 52 nodes (4.65 seconds)
Cbc0032I Strong branching done 610 times (13519 iterations), fathomed 5 nodes and fixed 12 variables
Cbc0035I Maximum depth 17, 201 variables fixed on reduced cost
Total time (CPU seconds):       3.23   (Wallclock seconds):       4.66

