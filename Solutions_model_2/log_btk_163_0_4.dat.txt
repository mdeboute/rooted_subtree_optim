Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 162 (-166) rows, 82 (-83) columns and 403 (-411) elements
Clp0000I Optimal - objective value 4136.9846
Coin0511I After Postsolve, objective 4136.9846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4136.984579 - 76 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 162 rows, 82 columns (81 integer (81 of which binary)) and 403 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.190%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 20.2464
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2250 iterations 67
Cbc0038I Solution found of 2250
Cbc0038I Relaxing continuous gives 2250
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 107 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 2250 to 1220 (0.03 seconds)
Cbc0038I Round again with cutoff of 683.402
Cbc0038I Pass   2: suminf.    0.26775 (4) obj. 683.402 iterations 4
Cbc0038I Pass   3: suminf.    0.65791 (7) obj. 683.402 iterations 11
Cbc0038I Pass   4: suminf.    0.43514 (7) obj. 683.402 iterations 14
Cbc0038I Pass   5: suminf.    0.44680 (7) obj. 683.402 iterations 16
Cbc0038I Pass   6: suminf.    0.99133 (8) obj. 683.402 iterations 13
Cbc0038I Pass   7: suminf.    0.75368 (8) obj. 683.402 iterations 8
Cbc0038I Pass   8: suminf.    2.42322 (15) obj. 683.402 iterations 18
Cbc0038I Pass   9: suminf.    1.74632 (13) obj. 683.402 iterations 7
Cbc0038I Pass  10: suminf.    1.74315 (12) obj. 683.402 iterations 1
Cbc0038I Pass  11: suminf.    3.71393 (17) obj. 683.402 iterations 21
Cbc0038I Pass  12: suminf.    3.32367 (15) obj. 683.402 iterations 5
Cbc0038I Pass  13: suminf.    2.57293 (12) obj. 683.402 iterations 13
Cbc0038I Pass  14: suminf.    2.44910 (11) obj. 683.402 iterations 4
Cbc0038I Pass  15: suminf.    2.39915 (12) obj. 683.402 iterations 23
Cbc0038I Pass  16: suminf.    2.39915 (12) obj. 683.402 iterations 1
Cbc0038I Pass  17: suminf.    0.16805 (1) obj. 683.402 iterations 22
Cbc0038I Pass  18: suminf.    0.16805 (1) obj. 683.402 iterations 0
Cbc0038I Solution found of 683.402
Cbc0038I Relaxing continuous gives 360
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 150 rows 77 columns - 1 fixed gives 149, 76 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -540.197
Cbc0038I Pass  19: suminf.    0.79824 (7) obj. -540.197 iterations 3
Cbc0038I Pass  20: suminf.    1.82941 (13) obj. -540.197 iterations 20
Cbc0038I Pass  21: suminf.    3.20677 (14) obj. -540.197 iterations 19
Cbc0038I Pass  22: suminf.    1.40572 (10) obj. -540.197 iterations 8
Cbc0038I Pass  23: suminf.    1.38153 (10) obj. -540.197 iterations 6
Cbc0038I Pass  24: suminf.    2.37559 (21) obj. -540.197 iterations 25
Cbc0038I Pass  25: suminf.    2.35671 (19) obj. -540.197 iterations 1
Cbc0038I Pass  26: suminf.    3.85641 (19) obj. -540.197 iterations 10
Cbc0038I Pass  27: suminf.    2.71199 (15) obj. -540.197 iterations 11
Cbc0038I Pass  28: suminf.    2.45445 (12) obj. -540.197 iterations 5
Cbc0038I Pass  29: suminf.    3.40592 (24) obj. -540.197 iterations 26
Cbc0038I Pass  30: suminf.    3.27658 (20) obj. -540.197 iterations 4
Cbc0038I Pass  31: suminf.    5.44363 (19) obj. -540.197 iterations 24
Cbc0038I Pass  32: suminf.    2.63494 (14) obj. -540.197 iterations 18
Cbc0038I Pass  33: suminf.    2.63494 (14) obj. -540.197 iterations 2
Cbc0038I Pass  34: suminf.    4.90749 (28) obj. -540.197 iterations 30
Cbc0038I Pass  35: suminf.    3.95188 (20) obj. -540.197 iterations 9
Cbc0038I Pass  36: suminf.    3.69181 (16) obj. -540.197 iterations 18
Cbc0038I Pass  37: suminf.    2.63494 (14) obj. -540.197 iterations 6
Cbc0038I Pass  38: suminf.    2.63494 (14) obj. -540.197 iterations 2
Cbc0038I Pass  39: suminf.    4.90749 (28) obj. -540.197 iterations 30
Cbc0038I Pass  40: suminf.    3.95188 (20) obj. -540.197 iterations 9
Cbc0038I Pass  41: suminf.    5.50444 (21) obj. -540.197 iterations 23
Cbc0038I Pass  42: suminf.    4.13286 (16) obj. -540.197 iterations 14
Cbc0038I Pass  43: suminf.    4.13286 (16) obj. -540.197 iterations 0
Cbc0038I Pass  44: suminf.    7.01264 (25) obj. -540.197 iterations 25
Cbc0038I Pass  45: suminf.    5.97248 (26) obj. -540.197 iterations 5
Cbc0038I Pass  46: suminf.    4.92898 (21) obj. -540.197 iterations 10
Cbc0038I Pass  47: suminf.    8.40242 (22) obj. -540.197 iterations 30
Cbc0038I Pass  48: suminf.    4.72792 (16) obj. -540.197 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 132 rows 72 columns - 1 fixed gives 131, 71 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 360 - took 0.05 seconds
Cbc0012I Integer solution of 360 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -2185 found by DiveCoefficient after 19 iterations and 0 nodes (0.07 seconds)
Cbc0013I At root node, 0 cuts changed objective from -4136.9846 to -2185 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 940 row cuts average 2.8 elements, 8 column cuts (8 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2185, took 19 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-154) rows, 173 (-153) columns and 3546 (-10471) elements
Clp1000I sum of infeasibilities 0.00758336 - average 4.38344e-05, 116 fixed columns
Coin0506I Presolve 0 (-173) rows, 0 (-173) columns and 0 (-3546) elements
Clp0000I Optimal - objective value -4335
Clp0000I Optimal - objective value -4335
Coin0511I After Postsolve, objective -4335, infeasibilities - dual 135 (1), primal 0 (0)
Coin0512I Presolved model was optimal, full model needs cleaning up
Clp0014I Perturbing problem by 0.001% of 8.4521949 - largest nonzero change 2.8366669e-05 ( 0.0021960712%) - largest zero change 2.965703e-05
Clp0000I Optimal - objective value 10393.103
Clp0000I Optimal - objective value 10393.103
Clp0000I Optimal - objective value 10393.103
Coin0511I After Postsolve, objective 10393.103, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10393.10252 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 173 columns (173 integer (173 of which binary)) and 3549 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.774%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 83 integers unsatisfied sum - 22.0641
Cbc0038I Pass   1: suminf.   12.55742 (45) obj. -4168.44 iterations 35
Cbc0038I Pass   2: suminf.   12.55742 (45) obj. -4168.44 iterations 1
Cbc0038I Pass   3: suminf.    8.20735 (34) obj. -1579.76 iterations 11
Cbc0038I Pass   4: suminf.    3.30057 (19) obj. -184.067 iterations 15
Cbc0038I Pass   5: suminf.    0.43672 (6) obj. 1638.83 iterations 13
Cbc0038I Solution found of 2365
Cbc0038I Rounding solution of 2305 is better than previous of 2365

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 173 columns, reduced to 37 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of 1461.72
Cbc0038I Pass   6: suminf.   12.55742 (45) obj. -4168.44 iterations 0
Cbc0038I Pass   7: suminf.   12.55742 (45) obj. -4168.44 iterations 1
Cbc0038I Pass   8: suminf.    2.42531 (16) obj. 488.346 iterations 29
Cbc0038I Pass   9: suminf.    0.76660 (2) obj. 1461.72 iterations 19
Cbc0038I Pass  10: suminf.    0.76660 (2) obj. 1461.72 iterations 0
Cbc0038I Pass  11: suminf.    0.89413 (2) obj. 1461.72 iterations 2
Cbc0038I Pass  12: suminf.    4.83983 (20) obj. 1461.72 iterations 63
Cbc0038I Pass  13: suminf.    4.83983 (20) obj. 1461.72 iterations 3
Cbc0038I Pass  14: suminf.    2.86276 (12) obj. 1461.72 iterations 12
Cbc0038I Pass  15: suminf.    2.86276 (12) obj. 1461.72 iterations 0
Cbc0038I Pass  16: suminf.    2.22605 (7) obj. 1461.72 iterations 12
Cbc0038I Pass  17: suminf.    2.22605 (7) obj. 1461.72 iterations 0
Cbc0038I Pass  18: suminf.    2.07611 (7) obj. 1461.72 iterations 4
Cbc0038I Pass  19: suminf.    2.07611 (7) obj. 1461.72 iterations 0
Cbc0038I Pass  20: suminf.    2.22989 (7) obj. 1461.72 iterations 4
Cbc0038I Pass  21: suminf.    3.99661 (13) obj. 1461.72 iterations 22
Cbc0038I Pass  22: suminf.    3.51340 (12) obj. 1461.72 iterations 3
Cbc0038I Pass  23: suminf.    2.13461 (6) obj. 1461.72 iterations 12
Cbc0038I Pass  24: suminf.    2.13461 (6) obj. 1461.72 iterations 0
Cbc0038I Pass  25: suminf.    2.29636 (6) obj. 1461.72 iterations 3
Cbc0038I Pass  26: suminf.    2.29636 (6) obj. 1461.72 iterations 0
Cbc0038I Pass  27: suminf.    2.13461 (6) obj. 1461.72 iterations 1
Cbc0038I Pass  28: suminf.    4.16272 (31) obj. 1461.72 iterations 33
Cbc0038I Pass  29: suminf.    3.65466 (12) obj. 1461.72 iterations 6
Cbc0038I Pass  30: suminf.    3.29558 (12) obj. 1461.72 iterations 2
Cbc0038I Pass  31: suminf.    3.76124 (10) obj. 1461.72 iterations 11
Cbc0038I Pass  32: suminf.    3.37057 (10) obj. 1461.72 iterations 2
Cbc0038I Pass  33: suminf.    4.37262 (16) obj. 1461.72 iterations 26
Cbc0038I Pass  34: suminf.    4.08813 (15) obj. 1024.33 iterations 5
Cbc0038I Pass  35: suminf.    3.28776 (11) obj. 1461.72 iterations 8
Cbc0038I Rounding solution of 1905 is better than previous of 2305

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 173 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -47.181
Cbc0038I Pass  35: suminf.   12.55742 (45) obj. -4168.44 iterations 0
Cbc0038I Pass  36: suminf.   12.55742 (45) obj. -4168.44 iterations 1
Cbc0038I Pass  37: suminf.    7.17569 (31) obj. -1382.39 iterations 14
Cbc0038I Pass  38: suminf.    2.60793 (16) obj. -47.181 iterations 19
Cbc0038I Pass  39: suminf.    2.59415 (16) obj. -61.6542 iterations 1
Cbc0038I Pass  40: suminf.    1.86551 (10) obj. -47.181 iterations 14
Cbc0038I Pass  41: suminf.    1.86551 (10) obj. -47.181 iterations 1
Cbc0038I Pass  42: suminf.    2.07636 (6) obj. -47.181 iterations 19
Cbc0038I Pass  43: suminf.    2.07636 (6) obj. -47.181 iterations 1
Cbc0038I Pass  44: suminf.    2.23633 (6) obj. -47.181 iterations 4
Cbc0038I Pass  45: suminf.    2.23633 (6) obj. -47.181 iterations 1
Cbc0038I Pass  46: suminf.    2.07636 (6) obj. -47.181 iterations 2
Cbc0038I Pass  47: suminf.    4.77783 (19) obj. -47.181 iterations 27
Cbc0038I Pass  48: suminf.    4.75968 (19) obj. -47.181 iterations 6
Cbc0038I Pass  49: suminf.    5.11730 (14) obj. -47.181 iterations 27
Cbc0038I Pass  50: suminf.    4.98242 (14) obj. -47.181 iterations 2
Cbc0038I Pass  51: suminf.    7.03266 (20) obj. -47.181 iterations 25
Cbc0038I Pass  52: suminf.    7.03266 (20) obj. -47.181 iterations 1
Cbc0038I Pass  53: suminf.    5.49685 (16) obj. -47.181 iterations 10
Cbc0038I Pass  54: suminf.    5.49665 (16) obj. -47.181 iterations 1
Cbc0038I Pass  55: suminf.    5.49685 (16) obj. -47.181 iterations 1
Cbc0038I Pass  56: suminf.    6.82687 (19) obj. -47.181 iterations 34
Cbc0038I Pass  57: suminf.    6.82687 (19) obj. -47.181 iterations 5
Cbc0038I Pass  58: suminf.    5.79004 (15) obj. -47.181 iterations 11
Cbc0038I Pass  59: suminf.    5.79004 (15) obj. -47.181 iterations 0
Cbc0038I Pass  60: suminf.    5.73346 (15) obj. -47.181 iterations 2
Cbc0038I Pass  61: suminf.    5.73346 (15) obj. -47.181 iterations 0
Cbc0038I Pass  62: suminf.    5.79004 (15) obj. -47.181 iterations 2
Cbc0038I Pass  63: suminf.    6.00905 (18) obj. -47.181 iterations 23
Cbc0038I Pass  64: suminf.    6.00905 (18) obj. -47.181 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of 1905 - took 0.06 seconds
Cbc0012I Integer solution of 1905 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 173 rows 173 columns, reduced to 38 rows 40 columns
Cbc0012I Integer solution of -2185 found by DiveCoefficient after 139 iterations and 0 nodes (0.20 seconds)
Cbc0031I 48 added rows had average density of 4.8125
Cbc0013I At root node, 48 cuts changed objective from -6082.7894 to -2185 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1844 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 72 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 84 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2185, took 139 iterations and 0 nodes (0.20 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 162 (-166) rows, 82 (-83) columns and 403 (-411) elements
Clp0000I Optimal - objective value 4136.9846
Coin0511I After Postsolve, objective 4136.9846, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4136.984579 - 76 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 162 rows, 82 columns (81 integer (81 of which binary)) and 403 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.190%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 20.2464
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2250 iterations 67
Cbc0038I Solution found of 2250
Cbc0038I Relaxing continuous gives 2250
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 107 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 2250 to 1220 (0.03 seconds)
Cbc0038I Round again with cutoff of 683.402
Cbc0038I Pass   2: suminf.    0.26775 (4) obj. 683.402 iterations 4
Cbc0038I Pass   3: suminf.    0.65791 (7) obj. 683.402 iterations 11
Cbc0038I Pass   4: suminf.    0.43514 (7) obj. 683.402 iterations 14
Cbc0038I Pass   5: suminf.    0.44680 (7) obj. 683.402 iterations 16
Cbc0038I Pass   6: suminf.    0.99133 (8) obj. 683.402 iterations 13
Cbc0038I Pass   7: suminf.    0.75368 (8) obj. 683.402 iterations 8
Cbc0038I Pass   8: suminf.    2.42322 (15) obj. 683.402 iterations 18
Cbc0038I Pass   9: suminf.    1.74632 (13) obj. 683.402 iterations 7
Cbc0038I Pass  10: suminf.    1.74315 (12) obj. 683.402 iterations 1
Cbc0038I Pass  11: suminf.    3.71393 (17) obj. 683.402 iterations 21
Cbc0038I Pass  12: suminf.    3.32367 (15) obj. 683.402 iterations 5
Cbc0038I Pass  13: suminf.    2.57293 (12) obj. 683.402 iterations 13
Cbc0038I Pass  14: suminf.    2.44910 (11) obj. 683.402 iterations 4
Cbc0038I Pass  15: suminf.    2.39915 (12) obj. 683.402 iterations 23
Cbc0038I Pass  16: suminf.    2.39915 (12) obj. 683.402 iterations 1
Cbc0038I Pass  17: suminf.    0.16805 (1) obj. 683.402 iterations 22
Cbc0038I Pass  18: suminf.    0.16805 (1) obj. 683.402 iterations 0
Cbc0038I Solution found of 683.402
Cbc0038I Relaxing continuous gives 360
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 150 rows 77 columns - 1 fixed gives 149, 76 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -540.197
Cbc0038I Pass  19: suminf.    0.79824 (7) obj. -540.197 iterations 3
Cbc0038I Pass  20: suminf.    1.82941 (13) obj. -540.197 iterations 20
Cbc0038I Pass  21: suminf.    3.20677 (14) obj. -540.197 iterations 19
Cbc0038I Pass  22: suminf.    1.40572 (10) obj. -540.197 iterations 8
Cbc0038I Pass  23: suminf.    1.38153 (10) obj. -540.197 iterations 6
Cbc0038I Pass  24: suminf.    2.37559 (21) obj. -540.197 iterations 25
Cbc0038I Pass  25: suminf.    2.35671 (19) obj. -540.197 iterations 1
Cbc0038I Pass  26: suminf.    3.85641 (19) obj. -540.197 iterations 10
Cbc0038I Pass  27: suminf.    2.71199 (15) obj. -540.197 iterations 11
Cbc0038I Pass  28: suminf.    2.45445 (12) obj. -540.197 iterations 5
Cbc0038I Pass  29: suminf.    3.40592 (24) obj. -540.197 iterations 26
Cbc0038I Pass  30: suminf.    3.27658 (20) obj. -540.197 iterations 4
Cbc0038I Pass  31: suminf.    5.44363 (19) obj. -540.197 iterations 24
Cbc0038I Pass  32: suminf.    2.63494 (14) obj. -540.197 iterations 18
Cbc0038I Pass  33: suminf.    2.63494 (14) obj. -540.197 iterations 2
Cbc0038I Pass  34: suminf.    4.90749 (28) obj. -540.197 iterations 30
Cbc0038I Pass  35: suminf.    3.95188 (20) obj. -540.197 iterations 9
Cbc0038I Pass  36: suminf.    3.69181 (16) obj. -540.197 iterations 18
Cbc0038I Pass  37: suminf.    2.63494 (14) obj. -540.197 iterations 6
Cbc0038I Pass  38: suminf.    2.63494 (14) obj. -540.197 iterations 2
Cbc0038I Pass  39: suminf.    4.90749 (28) obj. -540.197 iterations 30
Cbc0038I Pass  40: suminf.    3.95188 (20) obj. -540.197 iterations 9
Cbc0038I Pass  41: suminf.    5.50444 (21) obj. -540.197 iterations 23
Cbc0038I Pass  42: suminf.    4.13286 (16) obj. -540.197 iterations 14
Cbc0038I Pass  43: suminf.    4.13286 (16) obj. -540.197 iterations 0
Cbc0038I Pass  44: suminf.    7.01264 (25) obj. -540.197 iterations 25
Cbc0038I Pass  45: suminf.    5.97248 (26) obj. -540.197 iterations 5
Cbc0038I Pass  46: suminf.    4.92898 (21) obj. -540.197 iterations 10
Cbc0038I Pass  47: suminf.    8.40242 (22) obj. -540.197 iterations 30
Cbc0038I Pass  48: suminf.    4.72792 (16) obj. -540.197 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 162 rows 82 columns, reduced to 132 rows 72 columns - 1 fixed gives 131, 71 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 360 - took 0.05 seconds
Cbc0012I Integer solution of 360 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -2185 found by DiveCoefficient after 19 iterations and 0 nodes (0.07 seconds)
Cbc0013I At root node, 0 cuts changed objective from -4136.9846 to -2185 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 940 row cuts average 2.8 elements, 8 column cuts (8 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2185, took 19 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 173 (-155) rows, 173 (-154) columns and 3546 (-10472) elements
Clp1000I sum of infeasibilities 0.00758336 - average 4.38344e-05, 116 fixed columns
Coin0506I Presolve 0 (-173) rows, 0 (-173) columns and 0 (-3546) elements
Clp0000I Optimal - objective value -4335
Clp0000I Optimal - objective value -4335
Coin0511I After Postsolve, objective -4335, infeasibilities - dual 135 (1), primal 0 (0)
Coin0512I Presolved model was optimal, full model needs cleaning up
Clp0014I Perturbing problem by 0.001% of 8.4521949 - largest nonzero change 2.8366669e-05 ( 0.0021960712%) - largest zero change 2.965703e-05
Clp0000I Optimal - objective value 10393.103
Clp0000I Optimal - objective value 10393.103
Clp0000I Optimal - objective value 10393.103
Coin0511I After Postsolve, objective 10393.103, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 10393.10252 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 173 columns (173 integer (173 of which binary)) and 3549 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.774%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 83 integers unsatisfied sum - 22.0641
Cbc0038I Pass   1: suminf.   12.55742 (45) obj. -4168.44 iterations 35
Cbc0038I Pass   2: suminf.   12.55742 (45) obj. -4168.44 iterations 1
Cbc0038I Pass   3: suminf.    8.20735 (34) obj. -1579.76 iterations 11
Cbc0038I Pass   4: suminf.    3.30057 (19) obj. -184.067 iterations 15
Cbc0038I Pass   5: suminf.    0.43672 (6) obj. 1638.83 iterations 13
Cbc0038I Solution found of 2365
Cbc0038I Rounding solution of 2305 is better than previous of 2365

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 173 columns, reduced to 37 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of 1461.72
Cbc0038I Pass   6: suminf.   12.55742 (45) obj. -4168.44 iterations 0
Cbc0038I Pass   7: suminf.   12.55742 (45) obj. -4168.44 iterations 1
Cbc0038I Pass   8: suminf.    2.42531 (16) obj. 488.346 iterations 29
Cbc0038I Pass   9: suminf.    0.76660 (2) obj. 1461.72 iterations 19
Cbc0038I Pass  10: suminf.    0.76660 (2) obj. 1461.72 iterations 0
Cbc0038I Pass  11: suminf.    0.89413 (2) obj. 1461.72 iterations 2
Cbc0038I Pass  12: suminf.    4.83983 (20) obj. 1461.72 iterations 63
Cbc0038I Pass  13: suminf.    4.83983 (20) obj. 1461.72 iterations 3
Cbc0038I Pass  14: suminf.    2.86276 (12) obj. 1461.72 iterations 12
Cbc0038I Pass  15: suminf.    2.86276 (12) obj. 1461.72 iterations 0
Cbc0038I Pass  16: suminf.    2.22605 (7) obj. 1461.72 iterations 12
Cbc0038I Pass  17: suminf.    2.22605 (7) obj. 1461.72 iterations 0
Cbc0038I Pass  18: suminf.    2.07611 (7) obj. 1461.72 iterations 4
Cbc0038I Pass  19: suminf.    2.07611 (7) obj. 1461.72 iterations 0
Cbc0038I Pass  20: suminf.    2.22989 (7) obj. 1461.72 iterations 4
Cbc0038I Pass  21: suminf.    3.99661 (13) obj. 1461.72 iterations 22
Cbc0038I Pass  22: suminf.    3.51340 (12) obj. 1461.72 iterations 3
Cbc0038I Pass  23: suminf.    2.13461 (6) obj. 1461.72 iterations 12
Cbc0038I Pass  24: suminf.    2.13461 (6) obj. 1461.72 iterations 0
Cbc0038I Pass  25: suminf.    2.29636 (6) obj. 1461.72 iterations 3
Cbc0038I Pass  26: suminf.    2.29636 (6) obj. 1461.72 iterations 0
Cbc0038I Pass  27: suminf.    2.13461 (6) obj. 1461.72 iterations 1
Cbc0038I Pass  28: suminf.    4.16272 (31) obj. 1461.72 iterations 33
Cbc0038I Pass  29: suminf.    3.65466 (12) obj. 1461.72 iterations 6
Cbc0038I Pass  30: suminf.    3.29558 (12) obj. 1461.72 iterations 2
Cbc0038I Pass  31: suminf.    3.76124 (10) obj. 1461.72 iterations 11
Cbc0038I Pass  32: suminf.    3.37057 (10) obj. 1461.72 iterations 2
Cbc0038I Pass  33: suminf.    4.37262 (16) obj. 1461.72 iterations 26
Cbc0038I Pass  34: suminf.    4.08813 (15) obj. 1024.33 iterations 5
Cbc0038I Pass  35: suminf.    3.28776 (11) obj. 1461.72 iterations 8
Cbc0038I Rounding solution of 1905 is better than previous of 2305

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 173 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -47.181
Cbc0038I Pass  35: suminf.   12.55742 (45) obj. -4168.44 iterations 0
Cbc0038I Pass  36: suminf.   12.55742 (45) obj. -4168.44 iterations 1
Cbc0038I Pass  37: suminf.    7.17569 (31) obj. -1382.39 iterations 14
Cbc0038I Pass  38: suminf.    2.60793 (16) obj. -47.181 iterations 19
Cbc0038I Pass  39: suminf.    2.59415 (16) obj. -61.6542 iterations 1
Cbc0038I Pass  40: suminf.    1.86551 (10) obj. -47.181 iterations 14
Cbc0038I Pass  41: suminf.    1.86551 (10) obj. -47.181 iterations 1
Cbc0038I Pass  42: suminf.    2.07636 (6) obj. -47.181 iterations 19
Cbc0038I Pass  43: suminf.    2.07636 (6) obj. -47.181 iterations 1
Cbc0038I Pass  44: suminf.    2.23633 (6) obj. -47.181 iterations 4
Cbc0038I Pass  45: suminf.    2.23633 (6) obj. -47.181 iterations 1
Cbc0038I Pass  46: suminf.    2.07636 (6) obj. -47.181 iterations 2
Cbc0038I Pass  47: suminf.    4.77783 (19) obj. -47.181 iterations 27
Cbc0038I Pass  48: suminf.    4.75968 (19) obj. -47.181 iterations 6
Cbc0038I Pass  49: suminf.    5.11730 (14) obj. -47.181 iterations 27
Cbc0038I Pass  50: suminf.    4.98242 (14) obj. -47.181 iterations 2
Cbc0038I Pass  51: suminf.    7.03266 (20) obj. -47.181 iterations 25
Cbc0038I Pass  52: suminf.    7.03266 (20) obj. -47.181 iterations 1
Cbc0038I Pass  53: suminf.    5.49685 (16) obj. -47.181 iterations 10
Cbc0038I Pass  54: suminf.    5.49665 (16) obj. -47.181 iterations 1
Cbc0038I Pass  55: suminf.    5.49685 (16) obj. -47.181 iterations 1
Cbc0038I Pass  56: suminf.    6.82687 (19) obj. -47.181 iterations 34
Cbc0038I Pass  57: suminf.    6.82687 (19) obj. -47.181 iterations 5
Cbc0038I Pass  58: suminf.    5.79004 (15) obj. -47.181 iterations 11
Cbc0038I Pass  59: suminf.    5.79004 (15) obj. -47.181 iterations 0
Cbc0038I Pass  60: suminf.    5.73346 (15) obj. -47.181 iterations 2
Cbc0038I Pass  61: suminf.    5.73346 (15) obj. -47.181 iterations 0
Cbc0038I Pass  62: suminf.    5.79004 (15) obj. -47.181 iterations 2
Cbc0038I Pass  63: suminf.    6.00905 (18) obj. -47.181 iterations 23
Cbc0038I Pass  64: suminf.    6.00905 (18) obj. -47.181 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of 1905 - took 0.07 seconds
Cbc0012I Integer solution of 1905 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 173 rows 173 columns, reduced to 38 rows 40 columns
Cbc0012I Integer solution of -2185 found by DiveCoefficient after 139 iterations and 0 nodes (0.21 seconds)
Cbc0031I 48 added rows had average density of 4.8125
Cbc0013I At root node, 48 cuts changed objective from -6082.7894 to -2185 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1844 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 72 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 84 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2185, took 139 iterations and 0 nodes (0.21 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.22

