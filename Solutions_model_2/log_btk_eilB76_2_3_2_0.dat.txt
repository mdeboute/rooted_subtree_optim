Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 69 (-9) columns and 377 (-76) elements
Clp1000I sum of infeasibilities 1.16649e-05 - average 9.4837e-08, 13 fixed columns
Coin0506I Presolve 93 (-30) rows, 55 (-14) columns and 289 (-88) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Coin0511I After Postsolve, objective 46.06788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Coin0511I After Postsolve, objective 46.06788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.06787963 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 69 columns (68 integer (68 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.023%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.91398
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.76243 iterations 24
Cbc0038I Solution found of -5.76243
Cbc0038I Relaxing continuous gives -5.76243
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 69 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -5.76243 to -16.9051 (0.02 seconds)
Cbc0038I Round again with cutoff of -19.7784
Cbc0038I Pass   2: suminf.    0.85669 (3) obj. -19.7784 iterations 6
Cbc0038I Pass   3: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass   4: suminf.    1.00527 (3) obj. -19.7784 iterations 5
Cbc0038I Pass   5: suminf.    1.70208 (5) obj. -19.7784 iterations 12
Cbc0038I Pass   6: suminf.    1.64392 (5) obj. -19.7784 iterations 9
Cbc0038I Pass   7: suminf.    1.63943 (7) obj. -19.7784 iterations 2
Cbc0038I Pass   8: suminf.    0.50993 (4) obj. -19.7784 iterations 13
Cbc0038I Pass   9: suminf.    0.85669 (3) obj. -19.7784 iterations 8
Cbc0038I Pass  10: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass  11: suminf.    1.00527 (3) obj. -19.7784 iterations 4
Cbc0038I Pass  12: suminf.    0.85669 (3) obj. -19.7784 iterations 3
Cbc0038I Pass  13: suminf.    1.91190 (9) obj. -19.7784 iterations 12
Cbc0038I Pass  14: suminf.    1.64651 (5) obj. -19.7784 iterations 5
Cbc0038I Pass  15: suminf.    1.61380 (6) obj. -19.7784 iterations 1
Cbc0038I Pass  16: suminf.    0.85669 (3) obj. -19.7784 iterations 11
Cbc0038I Pass  17: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass  18: suminf.    1.00527 (3) obj. -19.7784 iterations 4
Cbc0038I Pass  19: suminf.    0.85669 (3) obj. -19.7784 iterations 3
Cbc0038I Pass  20: suminf.    3.22642 (11) obj. -19.7784 iterations 19
Cbc0038I Pass  21: suminf.    1.17573 (3) obj. -19.7784 iterations 14
Cbc0038I Pass  22: suminf.    1.01836 (4) obj. -19.7784 iterations 2
Cbc0038I Pass  23: suminf.    4.64439 (14) obj. -19.7784 iterations 23
Cbc0038I Pass  24: suminf.    1.45103 (5) obj. -19.7784 iterations 27
Cbc0038I Pass  25: suminf.    0.77938 (5) obj. -19.7784 iterations 3
Cbc0038I Pass  26: suminf.    0.91134 (7) obj. -19.7784 iterations 6
Cbc0038I Pass  27: suminf.    0.91134 (7) obj. -19.7784 iterations 0
Cbc0038I Pass  28: suminf.    1.57506 (5) obj. -19.7784 iterations 10
Cbc0038I Pass  29: suminf.    1.12548 (5) obj. -19.7784 iterations 5
Cbc0038I Pass  30: suminf.    1.21146 (5) obj. -19.7784 iterations 9
Cbc0038I Pass  31: suminf.    0.85669 (3) obj. -19.7784 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 69 columns, reduced to 57 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -16.9051 - took 0.03 seconds
Cbc0012I Integer solution of -16.90513 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 118 rows 69 columns, reduced to 28 rows 18 columns
Cbc0031I 18 added rows had average density of 27.555556
Cbc0013I At root node, 18 cuts changed objective from -45.63709 to -31.927934 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3466 row cuts average 5.4 elements, 1 column cuts (1 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 856 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 219 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -16.90513, took 4213 iterations and 36 nodes (0.45 seconds)
Cbc0032I Strong branching done 472 times (8363 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 16, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 116 (-36) columns and 1975 (-1328) elements
Clp1000I sum of infeasibilities 2.09852e-06 - average 2.0374e-08, 92 fixed columns
Coin0506I Presolve 14 (-89) rows, 23 (-93) columns and 70 (-1905) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 3.7365224 - largest nonzero change 2.4282891e-05 ( 0.00049733985%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 25.861145
Clp0000I Optimal - objective value 25.861145
Coin0511I After Postsolve, objective 25.861145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8464773 - largest nonzero change 2.5629712e-05 ( 0.0015380202%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 111.88816
Clp0000I Optimal - objective value 111.88816
Clp0000I Optimal - objective value 111.88816
Coin0511I After Postsolve, objective 111.88816, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 111.8881562 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 63 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 116 columns (116 integer (116 of which binary)) and 2011 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.089%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 3.69148
Cbc0038I Pass   1: suminf.    0.67500 (18) obj. -33.4985 iterations 28
Cbc0038I Pass   2: suminf.    0.67500 (18) obj. -33.4985 iterations 0
Cbc0038I Solution found of 5.69367
Cbc0038I Rounding solution of -1.7612 is better than previous of 5.69367

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1.7612 to -44.3063 (0.04 seconds)
Cbc0038I Round again with cutoff of -49.912
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.55229 (35) obj. -49.912 iterations 17
Cbc0038I Pass   4: suminf.    1.55229 (35) obj. -49.912 iterations 0
Cbc0038I Pass   5: suminf.    0.32080 (7) obj. -54.7844 iterations 30
Cbc0038I Pass   6: suminf.    0.48937 (2) obj. -49.912 iterations 9
Cbc0038I Pass   7: suminf.    0.17138 (2) obj. -54.4899 iterations 1
Cbc0038I Pass   8: suminf.    0.13235 (1) obj. -53.8504 iterations 1
Cbc0038I Pass   9: suminf.    1.53728 (13) obj. -49.912 iterations 20
Cbc0038I Pass  10: suminf.    1.50727 (11) obj. -49.912 iterations 3
Cbc0038I Pass  11: suminf.    0.92310 (9) obj. -49.912 iterations 12
Cbc0038I Pass  12: suminf.    0.92310 (9) obj. -49.912 iterations 0
Cbc0038I Pass  13: suminf.    0.48092 (3) obj. -49.912 iterations 6
Cbc0038I Pass  14: suminf.    0.46906 (2) obj. -49.912 iterations 4
Cbc0038I Pass  15: suminf.    0.47836 (2) obj. -49.912 iterations 4
Cbc0038I Pass  16: suminf.    1.60131 (16) obj. -49.912 iterations 26
Cbc0038I Pass  17: suminf.    1.60131 (16) obj. -49.912 iterations 1
Cbc0038I Pass  18: suminf.    0.85034 (3) obj. -49.912 iterations 15
Cbc0038I Pass  19: suminf.    0.37061 (3) obj. -49.912 iterations 15
Cbc0038I Pass  20: suminf.    0.79592 (3) obj. -49.912 iterations 5
Cbc0038I Pass  21: suminf.    0.74240 (3) obj. -49.912 iterations 3
Cbc0038I Pass  22: suminf.    0.31482 (2) obj. -49.912 iterations 5
Cbc0038I Pass  23: suminf.    0.13235 (1) obj. -50.8504 iterations 3
Cbc0038I Pass  24: suminf.    0.31482 (2) obj. -49.912 iterations 2
Cbc0038I Pass  25: suminf.    1.54603 (10) obj. -49.912 iterations 19
Cbc0038I Pass  26: suminf.    1.29555 (11) obj. -49.912 iterations 7
Cbc0038I Pass  27: suminf.    0.96013 (4) obj. -49.912 iterations 13
Cbc0038I Pass  28: suminf.    0.24174 (3) obj. -49.912 iterations 2
Cbc0038I Pass  29: suminf.    0.58388 (3) obj. -49.912 iterations 2
Cbc0038I Pass  30: suminf.    0.58388 (3) obj. -49.912 iterations 1
Cbc0038I Pass  31: suminf.    0.45040 (4) obj. -49.912 iterations 3
Cbc0038I Pass  32: suminf.    1.20078 (8) obj. -49.912 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 42 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -44.3063 - took 0.02 seconds
Cbc0012I Integer solution of -44.30633 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 22 added rows had average density of 7.3181818
Cbc0013I At root node, 22 cuts changed objective from -100.36258 to -44.342436 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 167 row cuts average 2.0 elements, 22 column cuts (22 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 25 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -44.30632999999999, took 90 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 55 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 69 (-9) columns and 377 (-76) elements
Clp1000I sum of infeasibilities 1.16649e-05 - average 9.4837e-08, 13 fixed columns
Coin0506I Presolve 93 (-30) rows, 55 (-14) columns and 289 (-88) elements
Clp0029I End of values pass after 55 iterations
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Coin0511I After Postsolve, objective 46.06788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Clp0000I Optimal - objective value 46.06788
Coin0511I After Postsolve, objective 46.06788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.06787963 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 69 columns (68 integer (68 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.023%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.91398
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.76243 iterations 24
Cbc0038I Solution found of -5.76243
Cbc0038I Relaxing continuous gives -5.76243
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 69 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -5.76243 to -16.9051 (0.02 seconds)
Cbc0038I Round again with cutoff of -19.7784
Cbc0038I Pass   2: suminf.    0.85669 (3) obj. -19.7784 iterations 6
Cbc0038I Pass   3: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass   4: suminf.    1.00527 (3) obj. -19.7784 iterations 5
Cbc0038I Pass   5: suminf.    1.70208 (5) obj. -19.7784 iterations 12
Cbc0038I Pass   6: suminf.    1.64392 (5) obj. -19.7784 iterations 9
Cbc0038I Pass   7: suminf.    1.63943 (7) obj. -19.7784 iterations 2
Cbc0038I Pass   8: suminf.    0.50993 (4) obj. -19.7784 iterations 13
Cbc0038I Pass   9: suminf.    0.85669 (3) obj. -19.7784 iterations 8
Cbc0038I Pass  10: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass  11: suminf.    1.00527 (3) obj. -19.7784 iterations 4
Cbc0038I Pass  12: suminf.    0.85669 (3) obj. -19.7784 iterations 3
Cbc0038I Pass  13: suminf.    1.91190 (9) obj. -19.7784 iterations 12
Cbc0038I Pass  14: suminf.    1.64651 (5) obj. -19.7784 iterations 5
Cbc0038I Pass  15: suminf.    1.61380 (6) obj. -19.7784 iterations 1
Cbc0038I Pass  16: suminf.    0.85669 (3) obj. -19.7784 iterations 11
Cbc0038I Pass  17: suminf.    0.85669 (3) obj. -19.7784 iterations 0
Cbc0038I Pass  18: suminf.    1.00527 (3) obj. -19.7784 iterations 4
Cbc0038I Pass  19: suminf.    0.85669 (3) obj. -19.7784 iterations 3
Cbc0038I Pass  20: suminf.    3.22642 (11) obj. -19.7784 iterations 19
Cbc0038I Pass  21: suminf.    1.17573 (3) obj. -19.7784 iterations 14
Cbc0038I Pass  22: suminf.    1.01836 (4) obj. -19.7784 iterations 2
Cbc0038I Pass  23: suminf.    4.64439 (14) obj. -19.7784 iterations 23
Cbc0038I Pass  24: suminf.    1.45103 (5) obj. -19.7784 iterations 27
Cbc0038I Pass  25: suminf.    0.77938 (5) obj. -19.7784 iterations 3
Cbc0038I Pass  26: suminf.    0.91134 (7) obj. -19.7784 iterations 6
Cbc0038I Pass  27: suminf.    0.91134 (7) obj. -19.7784 iterations 0
Cbc0038I Pass  28: suminf.    1.57506 (5) obj. -19.7784 iterations 10
Cbc0038I Pass  29: suminf.    1.12548 (5) obj. -19.7784 iterations 5
Cbc0038I Pass  30: suminf.    1.21146 (5) obj. -19.7784 iterations 9
Cbc0038I Pass  31: suminf.    0.85669 (3) obj. -19.7784 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 69 columns, reduced to 57 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -16.9051 - took 0.03 seconds
Cbc0012I Integer solution of -16.90513 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 118 rows 69 columns, reduced to 28 rows 18 columns
Cbc0031I 18 added rows had average density of 27.555556
Cbc0013I At root node, 18 cuts changed objective from -45.63709 to -31.927934 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3466 row cuts average 5.4 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 856 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 219 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -16.90513, took 4213 iterations and 36 nodes (0.57 seconds)
Cbc0032I Strong branching done 472 times (8363 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 16, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 115 (-38) columns and 1936 (-1368) elements
Clp1000I sum of infeasibilities 1.83688e-08 - average 1.80086e-10, 40 fixed columns
Coin0506I Presolve 62 (-40) rows, 70 (-45) columns and 824 (-1112) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 2.759192 - largest nonzero change 2.7137483e-05 ( 0.0018908272%) - largest zero change 2.5578832e-05
Clp0000I Optimal - objective value 61.308589
Clp0000I Optimal - objective value 61.308589
Coin0511I After Postsolve, objective 61.308589, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.308589
Clp0000I Optimal - objective value 61.308589
Clp0000I Optimal - objective value 61.308589
Coin0511I After Postsolve, objective 61.308589, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.30858899 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 63 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 115 columns (115 integer (115 of which binary)) and 1971 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.058%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 1.92987
Cbc0038I Pass   1: suminf.    1.70708 (30) obj. -49.5955 iterations 17
Cbc0038I Pass   2: suminf.    1.00694 (19) obj. -33.6717 iterations 11
Cbc0038I Solution found of 1.27559
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.97822
Cbc0038I Pass   3: suminf.    1.70708 (30) obj. -49.5955 iterations 0
Cbc0038I Pass   4: suminf.    0.88511 (17) obj. -27.0966 iterations 13
Cbc0038I Pass   5: suminf.    0.31725 (7) obj. -7.32145 iterations 10
Cbc0038I Pass   6: suminf.    0.47514 (2) obj. -3.97822 iterations 14
Cbc0038I Pass   7: suminf.    0.13777 (2) obj. -9.92853 iterations 2
Cbc0038I Pass   8: suminf.    0.05970 (1) obj. -9.06769 iterations 1
Cbc0038I Pass   9: suminf.    0.75118 (7) obj. -7.49131 iterations 23
Cbc0038I Pass  10: suminf.    0.52834 (7) obj. -3.97822 iterations 6
Cbc0038I Pass  11: suminf.    0.28161 (3) obj. -3.97822 iterations 9
Cbc0038I Pass  12: suminf.    0.14374 (4) obj. -3.97822 iterations 11
Cbc0038I Pass  13: suminf.    0.61348 (4) obj. -3.97822 iterations 6
Cbc0038I Pass  14: suminf.    0.61348 (4) obj. -3.97822 iterations 1
Cbc0038I Pass  15: suminf.    0.50143 (4) obj. -3.97822 iterations 2
Cbc0038I Pass  16: suminf.    0.16531 (2) obj. -5.64822 iterations 3
Cbc0038I Pass  17: suminf.    0.61348 (4) obj. -3.97822 iterations 2
Cbc0038I Pass  18: suminf.    0.88763 (13) obj. -3.97822 iterations 27
Cbc0038I Pass  19: suminf.    0.43626 (8) obj. -3.97822 iterations 10
Cbc0038I Pass  20: suminf.    0.44460 (6) obj. -3.97822 iterations 13
Cbc0038I Pass  21: suminf.    0.78848 (3) obj. -3.97822 iterations 6
Cbc0038I Pass  22: suminf.    0.25643 (4) obj. -3.97822 iterations 5
Cbc0038I Pass  23: suminf.    0.82172 (4) obj. -3.97822 iterations 3
Cbc0038I Pass  24: suminf.    0.82172 (4) obj. -3.97822 iterations 1
Cbc0038I Pass  25: suminf.    0.68227 (4) obj. -3.97822 iterations 2
Cbc0038I Pass  26: suminf.    0.95013 (7) obj. -3.97822 iterations 20
Cbc0038I Pass  27: suminf.    0.31834 (6) obj. -4.75916 iterations 10
Cbc0038I Pass  28: suminf.    0.48839 (4) obj. -3.97822 iterations 10
Cbc0038I Pass  29: suminf.    0.48839 (4) obj. -3.97822 iterations 0
Cbc0038I Pass  30: suminf.    0.81974 (4) obj. -3.97822 iterations 2
Cbc0038I Pass  31: suminf.    0.81974 (4) obj. -3.97822 iterations 1
Cbc0038I Pass  32: suminf.    0.48839 (4) obj. -3.97822 iterations 2
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 115 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -13.4349
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.70708 (30) obj. -49.5955 iterations 0
Cbc0038I Pass  33: suminf.    0.82450 (16) obj. -26.1572 iterations 14
Cbc0038I Pass  34: suminf.    0.42235 (6) obj. -13.4349 iterations 14
Cbc0038I Pass  35: suminf.    0.22695 (5) obj. -13.8647 iterations 3
Cbc0038I Pass  36: suminf.    0.68738 (6) obj. -13.4349 iterations 10
Cbc0038I Pass  37: suminf.    0.68738 (6) obj. -13.4349 iterations 0
Cbc0038I Pass  38: suminf.    0.65605 (3) obj. -13.4349 iterations 6
Cbc0038I Pass  39: suminf.    0.35063 (4) obj. -13.4349 iterations 5
Cbc0038I Pass  40: suminf.    0.64685 (4) obj. -13.4349 iterations 3
Cbc0038I Pass  41: suminf.    2.23380 (21) obj. -13.4349 iterations 14
Cbc0038I Pass  42: suminf.    1.10068 (8) obj. -13.4349 iterations 6
Cbc0038I Pass  43: suminf.    0.38005 (5) obj. -13.4349 iterations 8
Cbc0038I Pass  44: suminf.    0.32054 (7) obj. -13.4349 iterations 6
Cbc0038I Pass  45: suminf.    0.79136 (4) obj. -13.4349 iterations 8
Cbc0038I Pass  46: suminf.    0.44727 (5) obj. -13.4349 iterations 7
Cbc0038I Pass  47: suminf.    0.86026 (5) obj. -13.4349 iterations 4
Cbc0038I Pass  48: suminf.    2.25501 (12) obj. -13.4349 iterations 11
Cbc0038I Pass  49: suminf.    0.64959 (11) obj. -13.4349 iterations 2
Cbc0038I Pass  50: suminf.    0.64451 (11) obj. -13.4349 iterations 3
Cbc0038I Pass  51: suminf.    1.08229 (6) obj. -13.4349 iterations 12
Cbc0038I Pass  52: suminf.    0.44618 (5) obj. -13.4349 iterations 4
Cbc0038I Pass  53: suminf.    0.18380 (3) obj. -13.5136 iterations 2
Cbc0038I Pass  54: suminf.    0.65388 (7) obj. -13.4349 iterations 8
Cbc0038I Pass  55: suminf.    0.65388 (7) obj. -13.4349 iterations 0
Cbc0038I Pass  56: suminf.    0.69344 (8) obj. -13.4349 iterations 6
Cbc0038I Pass  57: suminf.    0.51254 (5) obj. -13.4349 iterations 5
Cbc0038I Pass  58: suminf.    0.52693 (5) obj. -13.4349 iterations 4
Cbc0038I Pass  59: suminf.    1.39455 (11) obj. -13.4349 iterations 24
Cbc0038I Pass  60: suminf.    0.96160 (10) obj. -13.4349 iterations 10
Cbc0038I Pass  61: suminf.    0.83620 (6) obj. -13.4349 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 1.27559 - took 0.04 seconds
Cbc0012I Integer solution of 1.27559 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -2.35122 found by DiveCoefficient after 3305 iterations and 0 nodes (2.15 seconds)
Cbc0031I 42 added rows had average density of 30.119048
Cbc0013I At root node, 42 cuts changed objective from -51.261633 to -19.821811 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6036 row cuts average 2.0 elements, 0 column cuts (8 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1105 row cuts average 101.5 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 75 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 406 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 102 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 521 row cuts average 34.2 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 274 row cuts average 69.6 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 391 row cuts average 30.6 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.35122 best solution, best possible -19.821811 (2.20 seconds)
Cbc0012I Integer solution of -2.89635 found by DiveCoefficient after 3331 iterations and 1 nodes (2.22 seconds)
Cbc0012I Integer solution of -4.39333 found by DiveCoefficient after 3413 iterations and 1 nodes (2.32 seconds)
Cbc0012I Integer solution of -13.25135 found by DiveCoefficient after 3420 iterations and 2 nodes (2.37 seconds)
Cbc0012I Integer solution of -14.25135 found by DiveCoefficient after 3464 iterations and 3 nodes (2.45 seconds)
Cbc0012I Integer solution of -15.25135 found by DiveCoefficient after 3492 iterations and 4 nodes (2.47 seconds)
Cbc0012I Integer solution of -16.25135 found by DiveCoefficient after 3586 iterations and 5 nodes (2.54 seconds)
Cbc0012I Integer solution of -16.90513 found by rounding after 4100 iterations and 11 nodes (2.74 seconds)
Cbc0001I Search completed - best objective -16.90513, took 4305 iterations and 14 nodes (2.75 seconds)
Cbc0032I Strong branching done 328 times (6939 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 74 variables fixed on reduced cost
Total time (CPU seconds):       1.96   (Wallclock seconds):       2.76

