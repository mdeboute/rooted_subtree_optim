Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 63 (-6) rows, 33 (-2) columns and 184 (-11) elements
Clp1000I sum of infeasibilities 0.000277057 - average 4.39773e-06, 1 fixed columns
Coin0506I Presolve 61 (-2) rows, 32 (-1) columns and 178 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 95.150377
Clp0000I Optimal - objective value 95.150377
Coin0511I After Postsolve, objective 95.150377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.150377
Clp0000I Optimal - objective value 95.150377
Clp0000I Optimal - objective value 95.150377
Coin0511I After Postsolve, objective 95.150377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.15037664 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 63 rows, 33 columns (32 integer (32 of which binary)) and 184 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.74347
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.2693 iterations 27
Cbc0038I Solution found of -10.2693
Cbc0038I Relaxing continuous gives -10.2693
Cbc0038I Rounding solution of -36.9392 is better than previous of -10.2693

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 33 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -36.9392 to -40.7376 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.1789
Cbc0038I Pass   2: suminf.    1.63914 (5) obj. -46.1789 iterations 9
Cbc0038I Pass   3: suminf.    1.25913 (4) obj. -46.1789 iterations 8
Cbc0038I Pass   4: suminf.    1.40798 (4) obj. -46.1789 iterations 6
Cbc0038I Pass   5: suminf.    0.50961 (2) obj. -46.1789 iterations 9
Cbc0038I Pass   6: suminf.    0.96336 (2) obj. -46.1789 iterations 6
Cbc0038I Pass   7: suminf.    0.51557 (2) obj. -46.1789 iterations 3
Cbc0038I Pass   8: suminf.    0.92036 (3) obj. -46.1789 iterations 10
Cbc0038I Pass   9: suminf.    0.92036 (3) obj. -46.1789 iterations 1
Cbc0038I Pass  10: suminf.    1.61564 (5) obj. -46.1789 iterations 7
Cbc0038I Pass  11: suminf.    0.89399 (4) obj. -46.1789 iterations 5
Cbc0038I Pass  12: suminf.    1.66678 (8) obj. -46.1789 iterations 10
Cbc0038I Pass  13: suminf.    0.49354 (3) obj. -46.1789 iterations 4
Cbc0038I Pass  14: suminf.    0.49354 (3) obj. -46.1789 iterations 1
Cbc0038I Pass  15: suminf.    0.91295 (3) obj. -46.1789 iterations 6
Cbc0038I Pass  16: suminf.    1.13914 (4) obj. -46.1789 iterations 7
Cbc0038I Pass  17: suminf.    0.71186 (3) obj. -46.1789 iterations 1
Cbc0038I Pass  18: suminf.    1.36269 (4) obj. -46.1789 iterations 5
Cbc0038I Pass  19: suminf.    0.78246 (3) obj. -46.1789 iterations 6
Cbc0038I Pass  20: suminf.    1.36269 (4) obj. -46.1789 iterations 7
Cbc0038I Pass  21: suminf.    1.25913 (4) obj. -46.1789 iterations 11
Cbc0038I Pass  22: suminf.    1.25913 (4) obj. -46.1789 iterations 3
Cbc0038I Pass  23: suminf.    1.40798 (4) obj. -46.1789 iterations 6
Cbc0038I Pass  24: suminf.    0.50961 (2) obj. -46.1789 iterations 9
Cbc0038I Pass  25: suminf.    0.96336 (2) obj. -46.1789 iterations 4
Cbc0038I Pass  26: suminf.    0.51557 (2) obj. -46.1789 iterations 3
Cbc0038I Pass  27: suminf.    1.30107 (5) obj. -46.1789 iterations 9
Cbc0038I Pass  28: suminf.    1.15818 (5) obj. -46.1789 iterations 2
Cbc0038I Pass  29: suminf.    0.89759 (4) obj. -46.1789 iterations 2
Cbc0038I Pass  30: suminf.    0.89408 (4) obj. -46.1789 iterations 1
Cbc0038I Pass  31: suminf.    1.53314 (5) obj. -46.1789 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 33 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -40.7376 - took 0.05 seconds
Cbc0012I Integer solution of -40.73757 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 63 rows 33 columns, reduced to 36 rows 21 columns
Cbc0031I 11 added rows had average density of 25
Cbc0013I At root node, 11 cuts changed objective from -95.150377 to -69.415745 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1811 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 751 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0012I Integer solution of -42.77283 found by DiveCoefficient after 2924 iterations and 6 nodes (0.27 seconds)
Cbc0001I Search completed - best objective -42.77283, took 3020 iterations and 10 nodes (0.27 seconds)
Cbc0032I Strong branching done 158 times (1918 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 3, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-9) rows, 60 (-6) columns and 592 (-131) elements
Clp1000I sum of infeasibilities 8.14822e-08 - average 1.38105e-09, 9 fixed columns
Coin0506I Presolve 50 (-9) rows, 51 (-9) columns and 469 (-123) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 1.6225374 - largest nonzero change 1.1054976e-05 ( 0.00089285843%) - largest zero change 2.8565298e-05
Clp0000I Optimal - objective value 92.407084
Clp0000I Optimal - objective value 92.407084
Coin0511I After Postsolve, objective 92.407084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5360603 - largest nonzero change 1.1312619e-05 ( 0.0010750271%) - largest zero change 2.9492588e-05
Clp0000I Optimal - objective value 102.02677
Clp0000I Optimal - objective value 102.02677
Clp0000I Optimal - objective value 102.02677
Coin0511I After Postsolve, objective 102.02677, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.0267745 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 60 columns (60 integer (60 of which binary)) and 594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.05593
Cbc0038I Pass   1: suminf.    1.71167 (13) obj. -69.6819 iterations 18
Cbc0038I Pass   2: suminf.    1.71167 (13) obj. -69.6819 iterations 1
Cbc0038I Pass   3: suminf.    0.16438 (3) obj. -21.8619 iterations 10
Cbc0038I Solution found of -17.1374
Cbc0038I Rounding solution of -36.9392 is better than previous of -17.1374

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 60 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -42.9376
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.71167 (13) obj. -69.6819 iterations 0
Cbc0038I Pass   5: suminf.    1.71167 (13) obj. -69.6819 iterations 1
Cbc0038I Pass   6: suminf.    0.56969 (2) obj. -42.9376 iterations 42
Cbc0038I Pass   7: suminf.    0.56969 (2) obj. -42.9376 iterations 1
Cbc0038I Pass   8: suminf.    0.73946 (2) obj. -42.9376 iterations 4
Cbc0038I Pass   9: suminf.    0.62903 (2) obj. -45.4775 iterations 1
Cbc0038I Pass  10: suminf.    1.73455 (11) obj. -42.9376 iterations 15
Cbc0038I Pass  11: suminf.    1.69863 (9) obj. -42.9376 iterations 5
Cbc0038I Pass  12: suminf.    1.07533 (3) obj. -42.9376 iterations 11
Cbc0038I Pass  13: suminf.    0.78519 (3) obj. -42.9376 iterations 4
Cbc0038I Pass  14: suminf.    2.34780 (9) obj. -42.9376 iterations 14
Cbc0038I Pass  15: suminf.    2.34780 (9) obj. -42.9376 iterations 3
Cbc0038I Pass  16: suminf.    2.45547 (7) obj. -42.9376 iterations 9
Cbc0038I Pass  17: suminf.    1.63488 (5) obj. -43.8508 iterations 3
Cbc0038I Pass  18: suminf.    1.56898 (5) obj. -42.9376 iterations 3
Cbc0038I Pass  19: suminf.    2.44662 (7) obj. -42.9376 iterations 3
Cbc0038I Pass  20: suminf.    3.21019 (12) obj. -42.9376 iterations 16
Cbc0038I Pass  21: suminf.    3.10186 (12) obj. -42.9376 iterations 4
Cbc0038I Pass  22: suminf.    1.09319 (7) obj. -42.9376 iterations 14
Cbc0038I Pass  23: suminf.    1.02911 (6) obj. -42.9376 iterations 4
Cbc0038I Pass  24: suminf.    2.08740 (8) obj. -42.9376 iterations 2
Cbc0038I Pass  25: suminf.    1.48764 (6) obj. -42.9376 iterations 2
Cbc0038I Pass  26: suminf.    1.89292 (7) obj. -42.9376 iterations 4
Cbc0038I Pass  27: suminf.    4.04641 (16) obj. -42.9376 iterations 25
Cbc0038I Pass  28: suminf.    2.55740 (14) obj. -42.9376 iterations 10
Cbc0038I Pass  29: suminf.    2.55740 (14) obj. -42.9376 iterations 0
Cbc0038I Pass  30: suminf.    0.99741 (8) obj. -42.9376 iterations 15
Cbc0038I Pass  31: suminf.    0.99096 (7) obj. -42.9376 iterations 2
Cbc0038I Pass  32: suminf.    1.11696 (8) obj. -42.9376 iterations 7
Cbc0038I Pass  33: suminf.    1.09321 (7) obj. -42.9376 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 60 columns, reduced to 40 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -17.1374 to -37.7121 (0.05 seconds)
Cbc0038I Round again with cutoff of -53.7346
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.71167 (13) obj. -69.6819 iterations 0
Cbc0038I Pass  34: suminf.    1.71167 (13) obj. -69.6819 iterations 1
Cbc0038I Pass  35: suminf.    1.22716 (9) obj. -53.7346 iterations 38
Cbc0038I Pass  36: suminf.    1.22716 (9) obj. -53.7346 iterations 3
Cbc0038I Pass  37: suminf.    1.21757 (3) obj. -53.7346 iterations 8
Cbc0038I Pass  38: suminf.    1.17104 (3) obj. -54.8047 iterations 1
Cbc0038I Pass  39: suminf.    1.21757 (3) obj. -53.7346 iterations 5
Cbc0038I Pass  40: suminf.    2.83146 (9) obj. -53.7346 iterations 17
Cbc0038I Pass  41: suminf.    1.50415 (7) obj. -53.7346 iterations 8
Cbc0038I Pass  42: suminf.    1.19322 (7) obj. -53.7346 iterations 7
Cbc0038I Pass  43: suminf.    0.88733 (6) obj. -53.7346 iterations 10
Cbc0038I Pass  44: suminf.    0.78909 (6) obj. -53.7346 iterations 5
Cbc0038I Pass  45: suminf.    1.41817 (8) obj. -53.7346 iterations 7
Cbc0038I Pass  46: suminf.    1.41304 (9) obj. -53.7346 iterations 2
Cbc0038I Pass  47: suminf.    1.03086 (9) obj. -53.7346 iterations 12
Cbc0038I Pass  48: suminf.    1.01252 (4) obj. -53.7346 iterations 2
Cbc0038I Pass  49: suminf.    1.14041 (9) obj. -53.7346 iterations 3
Cbc0038I Pass  50: suminf.    1.12298 (4) obj. -53.7346 iterations 1
Cbc0038I Pass  51: suminf.    1.03086 (9) obj. -53.7346 iterations 10
Cbc0038I Pass  52: suminf.    2.86828 (11) obj. -53.7346 iterations 19
Cbc0038I Pass  53: suminf.    1.69647 (9) obj. -53.7346 iterations 6
Cbc0038I Pass  54: suminf.    1.63582 (10) obj. -53.7346 iterations 1
Cbc0038I Pass  55: suminf.    2.84981 (10) obj. -53.7346 iterations 14
Cbc0038I Pass  56: suminf.    1.74855 (8) obj. -53.7346 iterations 1
Cbc0038I Pass  57: suminf.    1.42800 (8) obj. -53.7346 iterations 3
Cbc0038I Pass  58: suminf.    2.84981 (10) obj. -53.7346 iterations 3
Cbc0038I Pass  59: suminf.    4.83838 (19) obj. -53.7346 iterations 8
Cbc0038I Pass  60: suminf.    2.86417 (8) obj. -53.7346 iterations 5
Cbc0038I Pass  61: suminf.    1.87933 (11) obj. -53.7346 iterations 9
Cbc0038I Pass  62: suminf.    1.83772 (10) obj. -53.7346 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 60 columns, reduced to 37 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -37.7121 - took 0.05 seconds
Cbc0012I Integer solution of -37.71208 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 59 rows 60 columns, reduced to 30 rows 32 columns
Cbc0031I 24 added rows had average density of 17
Cbc0013I At root node, 24 cuts changed objective from -96.922686 to -44.099832 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1353 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 588 row cuts average 45.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 301 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 259 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.715 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -37.71208 best solution, best possible -44.099829 (1.62 seconds)
Cbc0012I Integer solution of -42.77283 found by DiveCoefficient after 1664 iterations and 4 nodes (1.95 seconds)
Cbc0001I Search completed - best objective -42.77283, took 1747 iterations and 8 nodes (1.98 seconds)
Cbc0032I Strong branching done 142 times (1458 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       1.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 63 (-6) rows, 33 (-2) columns and 184 (-11) elements
Clp1000I sum of infeasibilities 0.000277057 - average 4.39773e-06, 1 fixed columns
Coin0506I Presolve 61 (-2) rows, 32 (-1) columns and 178 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 95.150377
Clp0000I Optimal - objective value 95.150377
Coin0511I After Postsolve, objective 95.150377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.150377
Clp0000I Optimal - objective value 95.150377
Clp0000I Optimal - objective value 95.150377
Coin0511I After Postsolve, objective 95.150377, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.15037664 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 63 rows, 33 columns (32 integer (32 of which binary)) and 184 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.74347
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.2693 iterations 27
Cbc0038I Solution found of -10.2693
Cbc0038I Relaxing continuous gives -10.2693
Cbc0038I Rounding solution of -36.9392 is better than previous of -10.2693

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 33 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -36.9392 to -40.7376 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.1789
Cbc0038I Pass   2: suminf.    1.63914 (5) obj. -46.1789 iterations 9
Cbc0038I Pass   3: suminf.    1.25913 (4) obj. -46.1789 iterations 8
Cbc0038I Pass   4: suminf.    1.40798 (4) obj. -46.1789 iterations 6
Cbc0038I Pass   5: suminf.    0.50961 (2) obj. -46.1789 iterations 9
Cbc0038I Pass   6: suminf.    0.96336 (2) obj. -46.1789 iterations 6
Cbc0038I Pass   7: suminf.    0.51557 (2) obj. -46.1789 iterations 3
Cbc0038I Pass   8: suminf.    0.92036 (3) obj. -46.1789 iterations 10
Cbc0038I Pass   9: suminf.    0.92036 (3) obj. -46.1789 iterations 1
Cbc0038I Pass  10: suminf.    1.61564 (5) obj. -46.1789 iterations 7
Cbc0038I Pass  11: suminf.    0.89399 (4) obj. -46.1789 iterations 5
Cbc0038I Pass  12: suminf.    1.66678 (8) obj. -46.1789 iterations 10
Cbc0038I Pass  13: suminf.    0.49354 (3) obj. -46.1789 iterations 4
Cbc0038I Pass  14: suminf.    0.49354 (3) obj. -46.1789 iterations 1
Cbc0038I Pass  15: suminf.    0.91295 (3) obj. -46.1789 iterations 6
Cbc0038I Pass  16: suminf.    1.13914 (4) obj. -46.1789 iterations 7
Cbc0038I Pass  17: suminf.    0.71186 (3) obj. -46.1789 iterations 1
Cbc0038I Pass  18: suminf.    1.36269 (4) obj. -46.1789 iterations 5
Cbc0038I Pass  19: suminf.    0.78246 (3) obj. -46.1789 iterations 6
Cbc0038I Pass  20: suminf.    1.36269 (4) obj. -46.1789 iterations 7
Cbc0038I Pass  21: suminf.    1.25913 (4) obj. -46.1789 iterations 11
Cbc0038I Pass  22: suminf.    1.25913 (4) obj. -46.1789 iterations 3
Cbc0038I Pass  23: suminf.    1.40798 (4) obj. -46.1789 iterations 6
Cbc0038I Pass  24: suminf.    0.50961 (2) obj. -46.1789 iterations 9
Cbc0038I Pass  25: suminf.    0.96336 (2) obj. -46.1789 iterations 4
Cbc0038I Pass  26: suminf.    0.51557 (2) obj. -46.1789 iterations 3
Cbc0038I Pass  27: suminf.    1.30107 (5) obj. -46.1789 iterations 9
Cbc0038I Pass  28: suminf.    1.15818 (5) obj. -46.1789 iterations 2
Cbc0038I Pass  29: suminf.    0.89759 (4) obj. -46.1789 iterations 2
Cbc0038I Pass  30: suminf.    0.89408 (4) obj. -46.1789 iterations 1
Cbc0038I Pass  31: suminf.    1.53314 (5) obj. -46.1789 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 33 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -40.7376 - took 0.03 seconds
Cbc0012I Integer solution of -40.73757 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 63 rows 33 columns, reduced to 36 rows 21 columns
Cbc0031I 11 added rows had average density of 25
Cbc0013I At root node, 11 cuts changed objective from -95.150377 to -69.415745 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1811 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 751 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0012I Integer solution of -42.77283 found by DiveCoefficient after 2924 iterations and 6 nodes (0.27 seconds)
Cbc0001I Search completed - best objective -42.77283, took 3020 iterations and 10 nodes (0.27 seconds)
Cbc0032I Strong branching done 158 times (1918 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 3, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 60 (-7) columns and 592 (-132) elements
Clp1000I sum of infeasibilities 8.14822e-08 - average 1.38105e-09, 9 fixed columns
Coin0506I Presolve 50 (-9) rows, 51 (-9) columns and 469 (-123) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 1.6225374 - largest nonzero change 1.1054976e-05 ( 0.00089285843%) - largest zero change 2.8565298e-05
Clp0000I Optimal - objective value 92.407084
Clp0000I Optimal - objective value 92.407084
Coin0511I After Postsolve, objective 92.407084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5360603 - largest nonzero change 1.1312619e-05 ( 0.0010750271%) - largest zero change 2.9492588e-05
Clp0000I Optimal - objective value 102.02677
Clp0000I Optimal - objective value 102.02677
Clp0000I Optimal - objective value 102.02677
Coin0511I After Postsolve, objective 102.02677, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 102.0267745 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 60 columns (60 integer (60 of which binary)) and 594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.05593
Cbc0038I Pass   1: suminf.    1.71167 (13) obj. -69.6819 iterations 18
Cbc0038I Pass   2: suminf.    1.71167 (13) obj. -69.6819 iterations 1
Cbc0038I Pass   3: suminf.    0.16438 (3) obj. -21.8619 iterations 10
Cbc0038I Solution found of -17.1374
Cbc0038I Rounding solution of -36.9392 is better than previous of -17.1374

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 60 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -42.9376
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.71167 (13) obj. -69.6819 iterations 0
Cbc0038I Pass   5: suminf.    1.71167 (13) obj. -69.6819 iterations 1
Cbc0038I Pass   6: suminf.    0.56969 (2) obj. -42.9376 iterations 42
Cbc0038I Pass   7: suminf.    0.56969 (2) obj. -42.9376 iterations 1
Cbc0038I Pass   8: suminf.    0.73946 (2) obj. -42.9376 iterations 4
Cbc0038I Pass   9: suminf.    0.62903 (2) obj. -45.4775 iterations 1
Cbc0038I Pass  10: suminf.    1.73455 (11) obj. -42.9376 iterations 15
Cbc0038I Pass  11: suminf.    1.69863 (9) obj. -42.9376 iterations 5
Cbc0038I Pass  12: suminf.    1.07533 (3) obj. -42.9376 iterations 11
Cbc0038I Pass  13: suminf.    0.78519 (3) obj. -42.9376 iterations 4
Cbc0038I Pass  14: suminf.    2.34780 (9) obj. -42.9376 iterations 14
Cbc0038I Pass  15: suminf.    2.34780 (9) obj. -42.9376 iterations 3
Cbc0038I Pass  16: suminf.    2.45547 (7) obj. -42.9376 iterations 9
Cbc0038I Pass  17: suminf.    1.63488 (5) obj. -43.8508 iterations 3
Cbc0038I Pass  18: suminf.    1.56898 (5) obj. -42.9376 iterations 3
Cbc0038I Pass  19: suminf.    2.44662 (7) obj. -42.9376 iterations 3
Cbc0038I Pass  20: suminf.    3.21019 (12) obj. -42.9376 iterations 16
Cbc0038I Pass  21: suminf.    3.10186 (12) obj. -42.9376 iterations 4
Cbc0038I Pass  22: suminf.    1.09319 (7) obj. -42.9376 iterations 14
Cbc0038I Pass  23: suminf.    1.02911 (6) obj. -42.9376 iterations 4
Cbc0038I Pass  24: suminf.    2.08740 (8) obj. -42.9376 iterations 2
Cbc0038I Pass  25: suminf.    1.48764 (6) obj. -42.9376 iterations 2
Cbc0038I Pass  26: suminf.    1.89292 (7) obj. -42.9376 iterations 4
Cbc0038I Pass  27: suminf.    4.04641 (16) obj. -42.9376 iterations 25
Cbc0038I Pass  28: suminf.    2.55740 (14) obj. -42.9376 iterations 10
Cbc0038I Pass  29: suminf.    2.55740 (14) obj. -42.9376 iterations 0
Cbc0038I Pass  30: suminf.    0.99741 (8) obj. -42.9376 iterations 15
Cbc0038I Pass  31: suminf.    0.99096 (7) obj. -42.9376 iterations 2
Cbc0038I Pass  32: suminf.    1.11696 (8) obj. -42.9376 iterations 7
Cbc0038I Pass  33: suminf.    1.09321 (7) obj. -42.9376 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 60 columns, reduced to 40 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -17.1374 to -37.7121 (0.04 seconds)
Cbc0038I Round again with cutoff of -53.7346
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.71167 (13) obj. -69.6819 iterations 0
Cbc0038I Pass  34: suminf.    1.71167 (13) obj. -69.6819 iterations 1
Cbc0038I Pass  35: suminf.    1.22716 (9) obj. -53.7346 iterations 38
Cbc0038I Pass  36: suminf.    1.22716 (9) obj. -53.7346 iterations 3
Cbc0038I Pass  37: suminf.    1.21757 (3) obj. -53.7346 iterations 8
Cbc0038I Pass  38: suminf.    1.17104 (3) obj. -54.8047 iterations 1
Cbc0038I Pass  39: suminf.    1.21757 (3) obj. -53.7346 iterations 5
Cbc0038I Pass  40: suminf.    2.83146 (9) obj. -53.7346 iterations 17
Cbc0038I Pass  41: suminf.    1.50415 (7) obj. -53.7346 iterations 8
Cbc0038I Pass  42: suminf.    1.19322 (7) obj. -53.7346 iterations 7
Cbc0038I Pass  43: suminf.    0.88733 (6) obj. -53.7346 iterations 10
Cbc0038I Pass  44: suminf.    0.78909 (6) obj. -53.7346 iterations 5
Cbc0038I Pass  45: suminf.    1.41817 (8) obj. -53.7346 iterations 7
Cbc0038I Pass  46: suminf.    1.41304 (9) obj. -53.7346 iterations 2
Cbc0038I Pass  47: suminf.    1.03086 (9) obj. -53.7346 iterations 12
Cbc0038I Pass  48: suminf.    1.01252 (4) obj. -53.7346 iterations 2
Cbc0038I Pass  49: suminf.    1.14041 (9) obj. -53.7346 iterations 3
Cbc0038I Pass  50: suminf.    1.12298 (4) obj. -53.7346 iterations 1
Cbc0038I Pass  51: suminf.    1.03086 (9) obj. -53.7346 iterations 10
Cbc0038I Pass  52: suminf.    2.86828 (11) obj. -53.7346 iterations 19
Cbc0038I Pass  53: suminf.    1.69647 (9) obj. -53.7346 iterations 6
Cbc0038I Pass  54: suminf.    1.63582 (10) obj. -53.7346 iterations 1
Cbc0038I Pass  55: suminf.    2.84981 (10) obj. -53.7346 iterations 14
Cbc0038I Pass  56: suminf.    1.74855 (8) obj. -53.7346 iterations 1
Cbc0038I Pass  57: suminf.    1.42800 (8) obj. -53.7346 iterations 3
Cbc0038I Pass  58: suminf.    2.84981 (10) obj. -53.7346 iterations 3
Cbc0038I Pass  59: suminf.    4.83838 (19) obj. -53.7346 iterations 8
Cbc0038I Pass  60: suminf.    2.86417 (8) obj. -53.7346 iterations 5
Cbc0038I Pass  61: suminf.    1.87933 (11) obj. -53.7346 iterations 9
Cbc0038I Pass  62: suminf.    1.83772 (10) obj. -53.7346 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 60 columns, reduced to 37 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -37.7121 - took 0.05 seconds
Cbc0012I Integer solution of -37.71208 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 59 rows 60 columns, reduced to 30 rows 32 columns
Cbc0031I 24 added rows had average density of 17
Cbc0013I At root node, 24 cuts changed objective from -96.922686 to -44.099832 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1353 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 588 row cuts average 45.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 301 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 259 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.724 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -37.71208 best solution, best possible -44.099829 (1.61 seconds)
Cbc0012I Integer solution of -42.77283 found by DiveCoefficient after 1664 iterations and 4 nodes (1.91 seconds)
Cbc0001I Search completed - best objective -42.77283, took 1747 iterations and 8 nodes (1.94 seconds)
Cbc0032I Strong branching done 142 times (1458 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.94

