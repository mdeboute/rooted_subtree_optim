Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 39 (-30) rows, 21 (-14) columns and 114 (-81) elements
Clp0000I Optimal - objective value 168.89663
Coin0511I After Postsolve, objective 168.89663, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.8966291 - 27 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 21 columns (20 integer (20 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.430%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 7.03078
Cbc0038I Pass   1: suminf.    0.28827 (2) obj. -62.0187 iterations 21
Cbc0038I Solution found of -17
Cbc0038I Relaxing continuous gives -17
Cbc0038I Rounding solution of -23.5 is better than previous of -17

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 21 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -23.5 to -107 (0.01 seconds)
Cbc0038I Round again with cutoff of -113.361
Cbc0038I Pass   2: suminf.    1.78039 (12) obj. -113.361 iterations 11
Cbc0038I Pass   3: suminf.    1.77934 (12) obj. -113.361 iterations 2
Cbc0038I Pass   4: suminf.    0.71874 (13) obj. -113.361 iterations 21
Cbc0038I Pass   5: suminf.    0.67623 (15) obj. -113.361 iterations 4
Cbc0038I Pass   6: suminf.    2.56534 (12) obj. -113.361 iterations 25
Cbc0038I Pass   7: suminf.    2.52353 (11) obj. -113.361 iterations 2
Cbc0038I Pass   8: suminf.    1.00438 (10) obj. -113.361 iterations 18
Cbc0038I Pass   9: suminf.    2.57144 (11) obj. -113.361 iterations 4
Cbc0038I Pass  10: suminf.    0.74337 (13) obj. -113.361 iterations 5
Cbc0038I Pass  11: suminf.    0.67623 (15) obj. -113.361 iterations 4
Cbc0038I Pass  12: suminf.    2.56534 (12) obj. -113.361 iterations 25
Cbc0038I Pass  13: suminf.    2.52353 (11) obj. -113.361 iterations 2
Cbc0038I Pass  14: suminf.    1.00438 (10) obj. -113.361 iterations 18
Cbc0038I Pass  15: suminf.    0.75924 (18) obj. -113.361 iterations 10
Cbc0038I Pass  16: suminf.    1.03212 (11) obj. -113.361 iterations 8
Cbc0038I Pass  17: suminf.    2.98968 (9) obj. -113.361 iterations 11
Cbc0038I Pass  18: suminf.    2.53865 (9) obj. -113.361 iterations 4
Cbc0038I Pass  19: suminf.    1.73963 (8) obj. -113.361 iterations 10
Cbc0038I Pass  20: suminf.    1.74048 (7) obj. -113.361 iterations 1
Cbc0038I Pass  21: suminf.    2.52627 (12) obj. -113.361 iterations 11
Cbc0038I Pass  22: suminf.    2.47504 (11) obj. -113.361 iterations 4
Cbc0038I Pass  23: suminf.    0.67623 (15) obj. -113.361 iterations 16
Cbc0038I Pass  24: suminf.    2.56534 (12) obj. -113.361 iterations 25
Cbc0038I Pass  25: suminf.    2.52353 (11) obj. -113.361 iterations 2
Cbc0038I Pass  26: suminf.    1.00438 (10) obj. -113.361 iterations 18
Cbc0038I Pass  27: suminf.    1.33284 (9) obj. -113.361 iterations 4
Cbc0038I Pass  28: suminf.    0.85999 (16) obj. -113.361 iterations 7
Cbc0038I Pass  29: suminf.    0.69318 (13) obj. -113.361 iterations 8
Cbc0038I Pass  30: suminf.    1.26561 (6) obj. -113.361 iterations 8
Cbc0038I Pass  31: suminf.    0.98003 (6) obj. -113.361 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 21 columns, reduced to 39 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -107 - took 0.05 seconds
Cbc0012I Integer solution of -107 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -166.11455 to -166.11455 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -107, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-25) rows, 44 (-22) columns and 315 (-408) elements
Clp1000I sum of infeasibilities 5.62617e-08 - average 1.30841e-09, 27 fixed columns
Coin0506I Presolve 16 (-27) rows, 17 (-27) columns and 62 (-253) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 3.059244 - largest nonzero change 0 ( 0%) - largest zero change 2.1929668e-05
Clp0000I Optimal - objective value 64.555183
Clp0000I Optimal - objective value 64.555183
Coin0511I After Postsolve, objective 64.555183, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1760507 - largest nonzero change 0 ( 0%) - largest zero change 1.8069328e-05
Clp0000I Optimal - objective value 210.21635
Clp0000I Optimal - objective value 210.21635
Clp0000I Optimal - objective value 210.21635
Coin0511I After Postsolve, objective 210.21635, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 210.2163451 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 46 columns (46 integer (46 of which binary)) and 327 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.755%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.45457
Cbc0038I Pass   1: suminf.    0.87276 (10) obj. -120.476 iterations 7
Cbc0038I Solution found of -11
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -11 to -61 (0.02 seconds)
Cbc0038I Round again with cutoff of -68.9621
Cbc0038I Pass   2: suminf.    0.87276 (10) obj. -120.476 iterations 0
Cbc0038I Pass   3: suminf.    0.05029 (2) obj. -68.9621 iterations 9
Cbc0038I Pass   4: suminf.    0.05029 (2) obj. -68.9621 iterations 0
Cbc0038I Pass   5: suminf.    0.75005 (4) obj. -68.9621 iterations 6
Cbc0038I Pass   6: suminf.    0.40169 (4) obj. -83.2449 iterations 2
Cbc0038I Pass   7: suminf.    0.46434 (2) obj. -68.9621 iterations 3
Cbc0038I Pass   8: suminf.    0.20526 (2) obj. -79.5842 iterations 1
Cbc0038I Pass   9: suminf.    0.11257 (6) obj. -68.9621 iterations 13
Cbc0038I Pass  10: suminf.    0.11257 (6) obj. -68.9621 iterations 0
Cbc0038I Pass  11: suminf.    0.77197 (5) obj. -68.9621 iterations 3
Cbc0038I Pass  12: suminf.    0.77197 (5) obj. -68.9621 iterations 0
Cbc0038I Pass  13: suminf.    0.50235 (2) obj. -68.9621 iterations 5
Cbc0038I Pass  14: suminf.    0.20526 (2) obj. -87.0842 iterations 1
Cbc0038I Pass  15: suminf.    0.55273 (2) obj. -68.9621 iterations 1
Cbc0038I Pass  16: suminf.    0.55273 (2) obj. -68.9621 iterations 0
Cbc0038I Pass  17: suminf.    0.99321 (5) obj. -68.9621 iterations 7
Cbc0038I Pass  18: suminf.    0.49538 (5) obj. -68.9621 iterations 3
Cbc0038I Pass  19: suminf.    0.46128 (2) obj. -68.9621 iterations 5
Cbc0038I Pass  20: suminf.    0.15891 (2) obj. -81.359 iterations 1
Cbc0038I Pass  21: suminf.    0.82113 (5) obj. -68.9621 iterations 10
Cbc0038I Pass  22: suminf.    0.53549 (4) obj. -68.9621 iterations 1
Cbc0038I Pass  23: suminf.    0.74016 (3) obj. -68.9621 iterations 3
Cbc0038I Pass  24: suminf.    0.70517 (3) obj. -79.4254 iterations 1
Cbc0038I Pass  25: suminf.    0.45625 (3) obj. -68.9621 iterations 1
Cbc0038I Pass  26: suminf.    0.45625 (3) obj. -68.9621 iterations 0
Cbc0038I Pass  27: suminf.    1.22020 (9) obj. -68.9621 iterations 16
Cbc0038I Pass  28: suminf.    1.22020 (9) obj. -68.9621 iterations 2
Cbc0038I Pass  29: suminf.    0.26922 (2) obj. -68.9621 iterations 8
Cbc0038I Pass  30: suminf.    0.20526 (2) obj. -71.5842 iterations 1
Cbc0038I Pass  31: suminf.    0.58893 (8) obj. -68.9621 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -61 to -107 (0.03 seconds)
Cbc0038I Round again with cutoff of -113.224
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.87276 (10) obj. -120.476 iterations 0
Cbc0038I Pass  32: suminf.    0.73034 (4) obj. -113.224 iterations 11
Cbc0038I Pass  33: suminf.    0.73034 (4) obj. -113.224 iterations 0
Cbc0038I Pass  34: suminf.    0.64499 (3) obj. -113.224 iterations 5
Cbc0038I Pass  35: suminf.    0.62835 (3) obj. -118.201 iterations 1
Cbc0038I Pass  36: suminf.    0.68822 (3) obj. -113.224 iterations 1
Cbc0038I Pass  37: suminf.    0.68822 (3) obj. -113.224 iterations 0
Cbc0038I Pass  38: suminf.    1.84461 (7) obj. -113.224 iterations 6
Cbc0038I Pass  39: suminf.    1.03952 (5) obj. -113.224 iterations 2
Cbc0038I Pass  40: suminf.    1.23523 (9) obj. -113.224 iterations 6
Cbc0038I Pass  41: suminf.    1.00997 (5) obj. -113.224 iterations 2
Cbc0038I Pass  42: suminf.    1.45016 (5) obj. -113.224 iterations 2
Cbc0038I Pass  43: suminf.    1.66606 (8) obj. -113.224 iterations 8
Cbc0038I Pass  44: suminf.    1.66606 (8) obj. -113.224 iterations 0
Cbc0038I Pass  45: suminf.    1.34237 (5) obj. -113.224 iterations 4
Cbc0038I Pass  46: suminf.    1.25997 (5) obj. -113.224 iterations 2
Cbc0038I Pass  47: suminf.    1.12614 (6) obj. -113.224 iterations 6
Cbc0038I Pass  48: suminf.    1.12614 (6) obj. -113.224 iterations 2
Cbc0038I Pass  49: suminf.    1.82799 (8) obj. -113.224 iterations 5
Cbc0038I Pass  50: suminf.    1.82799 (8) obj. -113.224 iterations 0
Cbc0038I Pass  51: suminf.    2.27142 (8) obj. -113.224 iterations 3
Cbc0038I Pass  52: suminf.    2.18800 (7) obj. -113.224 iterations 3
Cbc0038I Pass  53: suminf.    1.12209 (5) obj. -113.224 iterations 4
Cbc0038I Pass  54: suminf.    0.92293 (5) obj. -113.224 iterations 4
Cbc0038I Pass  55: suminf.    1.82799 (8) obj. -113.224 iterations 5
Cbc0038I Pass  56: suminf.    1.82799 (8) obj. -113.224 iterations 0
Cbc0038I Pass  57: suminf.    2.27142 (8) obj. -113.224 iterations 3
Cbc0038I Pass  58: suminf.    2.18800 (7) obj. -113.224 iterations 3
Cbc0038I Pass  59: suminf.    1.12209 (5) obj. -113.224 iterations 4
Cbc0038I Pass  60: suminf.    0.92293 (5) obj. -113.224 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -107 - took 0.02 seconds
Cbc0012I Integer solution of -107 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 45 rows 46 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -136.12167 to -82.00104 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 2.0 elements, 14 column cuts (14 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -107, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 39 (-30) rows, 21 (-14) columns and 114 (-81) elements
Clp0000I Optimal - objective value 168.89663
Coin0511I After Postsolve, objective 168.89663, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.8966291 - 27 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 21 columns (20 integer (20 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.430%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 7.03078
Cbc0038I Pass   1: suminf.    0.28827 (2) obj. -62.0187 iterations 21
Cbc0038I Solution found of -17
Cbc0038I Relaxing continuous gives -17
Cbc0038I Rounding solution of -23.5 is better than previous of -17

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 21 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -23.5 to -107 (0.01 seconds)
Cbc0038I Round again with cutoff of -113.361
Cbc0038I Pass   2: suminf.    1.78039 (12) obj. -113.361 iterations 11
Cbc0038I Pass   3: suminf.    1.77934 (12) obj. -113.361 iterations 2
Cbc0038I Pass   4: suminf.    0.71874 (13) obj. -113.361 iterations 21
Cbc0038I Pass   5: suminf.    0.67623 (15) obj. -113.361 iterations 4
Cbc0038I Pass   6: suminf.    2.56534 (12) obj. -113.361 iterations 25
Cbc0038I Pass   7: suminf.    2.52353 (11) obj. -113.361 iterations 2
Cbc0038I Pass   8: suminf.    1.00438 (10) obj. -113.361 iterations 18
Cbc0038I Pass   9: suminf.    2.57144 (11) obj. -113.361 iterations 4
Cbc0038I Pass  10: suminf.    0.74337 (13) obj. -113.361 iterations 5
Cbc0038I Pass  11: suminf.    0.67623 (15) obj. -113.361 iterations 4
Cbc0038I Pass  12: suminf.    2.56534 (12) obj. -113.361 iterations 25
Cbc0038I Pass  13: suminf.    2.52353 (11) obj. -113.361 iterations 2
Cbc0038I Pass  14: suminf.    1.00438 (10) obj. -113.361 iterations 18
Cbc0038I Pass  15: suminf.    0.75924 (18) obj. -113.361 iterations 10
Cbc0038I Pass  16: suminf.    1.03212 (11) obj. -113.361 iterations 8
Cbc0038I Pass  17: suminf.    2.98968 (9) obj. -113.361 iterations 11
Cbc0038I Pass  18: suminf.    2.53865 (9) obj. -113.361 iterations 4
Cbc0038I Pass  19: suminf.    1.73963 (8) obj. -113.361 iterations 10
Cbc0038I Pass  20: suminf.    1.74048 (7) obj. -113.361 iterations 1
Cbc0038I Pass  21: suminf.    2.52627 (12) obj. -113.361 iterations 11
Cbc0038I Pass  22: suminf.    2.47504 (11) obj. -113.361 iterations 4
Cbc0038I Pass  23: suminf.    0.67623 (15) obj. -113.361 iterations 16
Cbc0038I Pass  24: suminf.    2.56534 (12) obj. -113.361 iterations 25
Cbc0038I Pass  25: suminf.    2.52353 (11) obj. -113.361 iterations 2
Cbc0038I Pass  26: suminf.    1.00438 (10) obj. -113.361 iterations 18
Cbc0038I Pass  27: suminf.    1.33284 (9) obj. -113.361 iterations 4
Cbc0038I Pass  28: suminf.    0.85999 (16) obj. -113.361 iterations 7
Cbc0038I Pass  29: suminf.    0.69318 (13) obj. -113.361 iterations 8
Cbc0038I Pass  30: suminf.    1.26561 (6) obj. -113.361 iterations 8
Cbc0038I Pass  31: suminf.    0.98003 (6) obj. -113.361 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 21 columns, reduced to 39 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -107 - took 0.03 seconds
Cbc0012I Integer solution of -107 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -166.11455 to -166.11455 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -107, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-26) rows, 44 (-23) columns and 315 (-409) elements
Clp1000I sum of infeasibilities 5.62617e-08 - average 1.30841e-09, 27 fixed columns
Coin0506I Presolve 16 (-27) rows, 17 (-27) columns and 62 (-253) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 3.059244 - largest nonzero change 0 ( 0%) - largest zero change 2.1929668e-05
Clp0000I Optimal - objective value 64.555183
Clp0000I Optimal - objective value 64.555183
Coin0511I After Postsolve, objective 64.555183, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1760507 - largest nonzero change 0 ( 0%) - largest zero change 1.8069328e-05
Clp0000I Optimal - objective value 210.21635
Clp0000I Optimal - objective value 210.21635
Clp0000I Optimal - objective value 210.21635
Coin0511I After Postsolve, objective 210.21635, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 210.2163451 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 46 columns (46 integer (46 of which binary)) and 327 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.755%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.45457
Cbc0038I Pass   1: suminf.    0.87276 (10) obj. -120.476 iterations 7
Cbc0038I Solution found of -11
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -11 to -61 (0.02 seconds)
Cbc0038I Round again with cutoff of -68.9621
Cbc0038I Pass   2: suminf.    0.87276 (10) obj. -120.476 iterations 0
Cbc0038I Pass   3: suminf.    0.05029 (2) obj. -68.9621 iterations 9
Cbc0038I Pass   4: suminf.    0.05029 (2) obj. -68.9621 iterations 0
Cbc0038I Pass   5: suminf.    0.75005 (4) obj. -68.9621 iterations 6
Cbc0038I Pass   6: suminf.    0.40169 (4) obj. -83.2449 iterations 2
Cbc0038I Pass   7: suminf.    0.46434 (2) obj. -68.9621 iterations 3
Cbc0038I Pass   8: suminf.    0.20526 (2) obj. -79.5842 iterations 1
Cbc0038I Pass   9: suminf.    0.11257 (6) obj. -68.9621 iterations 13
Cbc0038I Pass  10: suminf.    0.11257 (6) obj. -68.9621 iterations 0
Cbc0038I Pass  11: suminf.    0.77197 (5) obj. -68.9621 iterations 3
Cbc0038I Pass  12: suminf.    0.77197 (5) obj. -68.9621 iterations 0
Cbc0038I Pass  13: suminf.    0.50235 (2) obj. -68.9621 iterations 5
Cbc0038I Pass  14: suminf.    0.20526 (2) obj. -87.0842 iterations 1
Cbc0038I Pass  15: suminf.    0.55273 (2) obj. -68.9621 iterations 1
Cbc0038I Pass  16: suminf.    0.55273 (2) obj. -68.9621 iterations 0
Cbc0038I Pass  17: suminf.    0.99321 (5) obj. -68.9621 iterations 7
Cbc0038I Pass  18: suminf.    0.49538 (5) obj. -68.9621 iterations 3
Cbc0038I Pass  19: suminf.    0.46128 (2) obj. -68.9621 iterations 5
Cbc0038I Pass  20: suminf.    0.15891 (2) obj. -81.359 iterations 1
Cbc0038I Pass  21: suminf.    0.82113 (5) obj. -68.9621 iterations 10
Cbc0038I Pass  22: suminf.    0.53549 (4) obj. -68.9621 iterations 1
Cbc0038I Pass  23: suminf.    0.74016 (3) obj. -68.9621 iterations 3
Cbc0038I Pass  24: suminf.    0.70517 (3) obj. -79.4254 iterations 1
Cbc0038I Pass  25: suminf.    0.45625 (3) obj. -68.9621 iterations 1
Cbc0038I Pass  26: suminf.    0.45625 (3) obj. -68.9621 iterations 0
Cbc0038I Pass  27: suminf.    1.22020 (9) obj. -68.9621 iterations 16
Cbc0038I Pass  28: suminf.    1.22020 (9) obj. -68.9621 iterations 2
Cbc0038I Pass  29: suminf.    0.26922 (2) obj. -68.9621 iterations 8
Cbc0038I Pass  30: suminf.    0.20526 (2) obj. -71.5842 iterations 1
Cbc0038I Pass  31: suminf.    0.58893 (8) obj. -68.9621 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -61 to -107 (0.03 seconds)
Cbc0038I Round again with cutoff of -113.224
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.87276 (10) obj. -120.476 iterations 0
Cbc0038I Pass  32: suminf.    0.73034 (4) obj. -113.224 iterations 11
Cbc0038I Pass  33: suminf.    0.73034 (4) obj. -113.224 iterations 0
Cbc0038I Pass  34: suminf.    0.64499 (3) obj. -113.224 iterations 5
Cbc0038I Pass  35: suminf.    0.62835 (3) obj. -118.201 iterations 1
Cbc0038I Pass  36: suminf.    0.68822 (3) obj. -113.224 iterations 1
Cbc0038I Pass  37: suminf.    0.68822 (3) obj. -113.224 iterations 0
Cbc0038I Pass  38: suminf.    1.84461 (7) obj. -113.224 iterations 6
Cbc0038I Pass  39: suminf.    1.03952 (5) obj. -113.224 iterations 2
Cbc0038I Pass  40: suminf.    1.23523 (9) obj. -113.224 iterations 6
Cbc0038I Pass  41: suminf.    1.00997 (5) obj. -113.224 iterations 2
Cbc0038I Pass  42: suminf.    1.45016 (5) obj. -113.224 iterations 2
Cbc0038I Pass  43: suminf.    1.66606 (8) obj. -113.224 iterations 8
Cbc0038I Pass  44: suminf.    1.66606 (8) obj. -113.224 iterations 0
Cbc0038I Pass  45: suminf.    1.34237 (5) obj. -113.224 iterations 4
Cbc0038I Pass  46: suminf.    1.25997 (5) obj. -113.224 iterations 2
Cbc0038I Pass  47: suminf.    1.12614 (6) obj. -113.224 iterations 6
Cbc0038I Pass  48: suminf.    1.12614 (6) obj. -113.224 iterations 2
Cbc0038I Pass  49: suminf.    1.82799 (8) obj. -113.224 iterations 5
Cbc0038I Pass  50: suminf.    1.82799 (8) obj. -113.224 iterations 0
Cbc0038I Pass  51: suminf.    2.27142 (8) obj. -113.224 iterations 3
Cbc0038I Pass  52: suminf.    2.18800 (7) obj. -113.224 iterations 3
Cbc0038I Pass  53: suminf.    1.12209 (5) obj. -113.224 iterations 4
Cbc0038I Pass  54: suminf.    0.92293 (5) obj. -113.224 iterations 4
Cbc0038I Pass  55: suminf.    1.82799 (8) obj. -113.224 iterations 5
Cbc0038I Pass  56: suminf.    1.82799 (8) obj. -113.224 iterations 0
Cbc0038I Pass  57: suminf.    2.27142 (8) obj. -113.224 iterations 3
Cbc0038I Pass  58: suminf.    2.18800 (7) obj. -113.224 iterations 3
Cbc0038I Pass  59: suminf.    1.12209 (5) obj. -113.224 iterations 4
Cbc0038I Pass  60: suminf.    0.92293 (5) obj. -113.224 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -107 - took 0.02 seconds
Cbc0012I Integer solution of -107 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 45 rows 46 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -136.12167 to -82.00104 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 2.0 elements, 14 column cuts (14 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -107, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

