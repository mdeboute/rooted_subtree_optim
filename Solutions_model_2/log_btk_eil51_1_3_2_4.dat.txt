Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-23) rows, 51 (-2) columns and 258 (-45) elements
Clp1000I sum of infeasibilities 1.442e-05 - average 1.75854e-07, 2 fixed columns
Coin0506I Presolve 78 (-4) rows, 49 (-2) columns and 246 (-12) elements
Clp0014I Perturbing problem by 0.001% of 5.3481154 - largest nonzero change 0 ( 0%) - largest zero change 2.671199e-05
Clp0000I Optimal - objective value 40.15971
Clp0000I Optimal - objective value 40.15971
Coin0511I After Postsolve, objective 40.15971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.15971
Clp0000I Optimal - objective value 40.15971
Clp0000I Optimal - objective value 40.15971
Coin0511I After Postsolve, objective 40.15971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.1597096 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 82 rows, 51 columns (50 integer (50 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.523%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 10.0381
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 17.4473 iterations 34
Cbc0038I Solution found of 17.4473
Cbc0038I Relaxing continuous gives 17.4473
Cbc0038I Rounding solution of 17.2881 is better than previous of 17.4473

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 51 columns, reduced to 57 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 17.2881 to -9.9287 (0.03 seconds)
Cbc0038I Round again with cutoff of -12.9519
Cbc0038I Pass   2: suminf.    2.25180 (20) obj. -12.9519 iterations 22
Cbc0038I Pass   3: suminf.    2.17714 (27) obj. -12.9519 iterations 8
Cbc0038I Pass   4: suminf.    0.64337 (5) obj. -12.9519 iterations 42
Cbc0038I Pass   5: suminf.    0.64337 (5) obj. -12.9519 iterations 1
Cbc0038I Pass   6: suminf.    1.39918 (6) obj. -12.9519 iterations 7
Cbc0038I Pass   7: suminf.    0.74454 (5) obj. -12.9519 iterations 3
Cbc0038I Pass   8: suminf.    0.66712 (5) obj. -12.9519 iterations 1
Cbc0038I Pass   9: suminf.    1.29272 (6) obj. -12.9519 iterations 7
Cbc0038I Pass  10: suminf.    1.00966 (4) obj. -12.9519 iterations 3
Cbc0038I Pass  11: suminf.    1.28904 (6) obj. -12.9519 iterations 5
Cbc0038I Pass  12: suminf.    1.06882 (4) obj. -12.9519 iterations 2
Cbc0038I Pass  13: suminf.    3.18406 (9) obj. -12.9519 iterations 12
Cbc0038I Pass  14: suminf.    1.37593 (4) obj. -12.9519 iterations 18
Cbc0038I Pass  15: suminf.    1.37593 (4) obj. -12.9519 iterations 0
Cbc0038I Pass  16: suminf.    1.80302 (4) obj. -12.9519 iterations 1
Cbc0038I Pass  17: suminf.    1.37593 (4) obj. -12.9519 iterations 2
Cbc0038I Pass  18: suminf.    2.67894 (7) obj. -12.9519 iterations 20
Cbc0038I Pass  19: suminf.    1.91263 (6) obj. -12.9519 iterations 3
Cbc0038I Pass  20: suminf.    1.44893 (5) obj. -12.9519 iterations 7
Cbc0038I Pass  21: suminf.    1.42553 (4) obj. -12.9519 iterations 1
Cbc0038I Pass  22: suminf.    1.42553 (4) obj. -12.9519 iterations 0
Cbc0038I Pass  23: suminf.    0.88100 (4) obj. -12.9519 iterations 5
Cbc0038I Pass  24: suminf.    0.86111 (3) obj. -12.9519 iterations 1
Cbc0038I Pass  25: suminf.    0.89530 (3) obj. -12.9519 iterations 4
Cbc0038I Pass  26: suminf.    0.79478 (3) obj. -12.9519 iterations 2
Cbc0038I Pass  27: suminf.    0.89530 (3) obj. -12.9519 iterations 2
Cbc0038I Pass  28: suminf.    1.80881 (10) obj. -12.9519 iterations 16
Cbc0038I Pass  29: suminf.    0.92757 (4) obj. -12.9519 iterations 12
Cbc0038I Pass  30: suminf.    0.91402 (4) obj. -12.9519 iterations 1
Cbc0038I Pass  31: suminf.    0.86044 (3) obj. -12.9519 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 51 columns, reduced to 61 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -9.9287 - took 0.04 seconds
Cbc0012I Integer solution of -9.928701 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 82 rows 51 columns, reduced to 57 rows 37 columns
Cbc0031I 18 added rows had average density of 37.777778
Cbc0013I At root node, 18 cuts changed objective from -40.15971 to -27.293791 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8406 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1913 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 88 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0012I Integer solution of -10.141491 found by rounding after 5886 iterations and 22 nodes (0.53 seconds)
Cbc0004I Integer solution of -10.399161 found after 5903 iterations and 29 nodes (0.53 seconds)
Cbc0001I Search completed - best objective -10.39916100000001, took 6261 iterations and 36 nodes (0.53 seconds)
Cbc0032I Strong branching done 430 times (7438 iterations), fathomed 2 nodes and fixed 9 variables
Cbc0035I Maximum depth 16, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.54

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 66 (-38) rows, 84 (-18) columns and 1052 (-526) elements
Clp1000I sum of infeasibilities 4.04358e-08 - average 6.12664e-10, 18 fixed columns
Coin0506I Presolve 51 (-15) rows, 66 (-18) columns and 595 (-457) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 3.984774 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 61.707731
Clp0000I Optimal - objective value 61.707731
Coin0511I After Postsolve, objective 61.707731, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.4786424 - largest nonzero change 1.7539653e-05 ( 0.0009598595%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 62.368445
Clp0000I Optimal - objective value 62.368445
Clp0000I Optimal - objective value 62.368445
Coin0511I After Postsolve, objective 62.368445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.36844531 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 67 rows, 85 columns (85 integer (85 of which binary)) and 1061 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.722%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.22455
Cbc0038I Pass   1: suminf.    1.56952 (21) obj. -26.8686 iterations 7
Cbc0038I Pass   2: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Solution found of 21.0167
Cbc0038I Rounding solution of 3.00147 is better than previous of 21.0167

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 85 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 3.00147 to 2.13539 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.27858
Cbc0038I Pass   3: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass   4: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass   5: suminf.    0.73102 (6) obj. -3.27858 iterations 17
Cbc0038I Pass   6: suminf.    0.43437 (6) obj. -5.65182 iterations 1
Cbc0038I Pass   7: suminf.    0.64588 (7) obj. -3.27858 iterations 6
Cbc0038I Pass   8: suminf.    0.49301 (6) obj. -6.00473 iterations 1
Cbc0038I Pass   9: suminf.    0.55534 (2) obj. -3.27858 iterations 7
Cbc0038I Pass  10: suminf.    0.28286 (2) obj. -5.45847 iterations 1
Cbc0038I Pass  11: suminf.    3.07492 (15) obj. -3.27858 iterations 14
Cbc0038I Pass  12: suminf.    1.35104 (10) obj. -5.21551 iterations 7
Cbc0038I Pass  13: suminf.    0.61133 (2) obj. -3.27858 iterations 13
Cbc0038I Pass  14: suminf.    0.25000 (1) obj. -6.45032 iterations 5
Cbc0038I Pass  15: suminf.    0.42621 (1) obj. -3.27858 iterations 2
Cbc0038I Pass  16: suminf.    1.52615 (9) obj. -3.27858 iterations 25
Cbc0038I Pass  17: suminf.    1.25114 (8) obj. -3.27858 iterations 3
Cbc0038I Pass  18: suminf.    0.20373 (1) obj. -3.27858 iterations 8
Cbc0038I Pass  19: suminf.    0.18000 (1) obj. -3.70573 iterations 1
Cbc0038I Pass  20: suminf.    2.07651 (14) obj. -3.27858 iterations 30
Cbc0038I Pass  21: suminf.    0.87206 (8) obj. -3.35364 iterations 7
Cbc0038I Pass  22: suminf.    0.44378 (2) obj. -3.27858 iterations 9
Cbc0038I Pass  23: suminf.    0.44378 (2) obj. -3.27858 iterations 0
Cbc0038I Pass  24: suminf.    0.60925 (2) obj. -3.27858 iterations 2
Cbc0038I Pass  25: suminf.    0.54481 (3) obj. -5.23026 iterations 2
Cbc0038I Pass  26: suminf.    0.44378 (2) obj. -3.27858 iterations 4
Cbc0038I Pass  27: suminf.    1.18444 (7) obj. -3.27858 iterations 17
Cbc0038I Pass  28: suminf.    1.18444 (7) obj. -3.27858 iterations 0
Cbc0038I Pass  29: suminf.    0.41782 (2) obj. -3.27858 iterations 10
Cbc0038I Pass  30: suminf.    0.41782 (2) obj. -3.27858 iterations 0
Cbc0038I Pass  31: suminf.    0.71636 (3) obj. -3.27858 iterations 3
Cbc0038I Pass  32: suminf.    0.64908 (3) obj. -4.45212 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 85 columns, reduced to 44 rows 59 columns
Cbc0038I Mini branch and bound improved solution from 2.13539 to -3.69743 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.3587
Cbc0038I Pass  32: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass  33: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass  34: suminf.    0.73369 (8) obj. -13.3587 iterations 21
Cbc0038I Pass  35: suminf.    0.73369 (8) obj. -13.3587 iterations 0
Cbc0038I Pass  36: suminf.    1.54355 (9) obj. -13.3587 iterations 9
Cbc0038I Pass  37: suminf.    0.85383 (9) obj. -13.3587 iterations 1
Cbc0038I Pass  38: suminf.    0.37757 (3) obj. -13.3587 iterations 11
Cbc0038I Pass  39: suminf.    0.36802 (3) obj. -13.3985 iterations 4
Cbc0038I Pass  40: suminf.    0.37491 (3) obj. -13.3587 iterations 2
Cbc0038I Pass  41: suminf.    2.28503 (11) obj. -13.3587 iterations 13
Cbc0038I Pass  42: suminf.    1.04957 (7) obj. -13.3587 iterations 7
Cbc0038I Pass  43: suminf.    0.96072 (7) obj. -13.3587 iterations 1
Cbc0038I Pass  44: suminf.    1.08428 (5) obj. -13.3587 iterations 7
Cbc0038I Pass  45: suminf.    0.75054 (5) obj. -13.3587 iterations 8
Cbc0038I Pass  46: suminf.    1.04996 (4) obj. -13.3587 iterations 6
Cbc0038I Pass  47: suminf.    0.79251 (3) obj. -13.3587 iterations 6
Cbc0038I Pass  48: suminf.    0.59504 (4) obj. -13.3587 iterations 3
Cbc0038I Pass  49: suminf.    0.59504 (4) obj. -13.3587 iterations 0
Cbc0038I Pass  50: suminf.    0.71487 (4) obj. -13.3587 iterations 2
Cbc0038I Pass  51: suminf.    0.71487 (4) obj. -13.3587 iterations 0
Cbc0038I Pass  52: suminf.    0.89894 (4) obj. -13.3587 iterations 2
Cbc0038I Pass  53: suminf.    0.89894 (4) obj. -13.3587 iterations 0
Cbc0038I Pass  54: suminf.    1.84156 (12) obj. -21.412 iterations 17
Cbc0038I Pass  55: suminf.    1.52352 (8) obj. -20.8684 iterations 7
Cbc0038I Pass  56: suminf.    0.40771 (4) obj. -13.3587 iterations 8
Cbc0038I Pass  57: suminf.    0.40771 (4) obj. -13.3587 iterations 0
Cbc0038I Pass  58: suminf.    0.58303 (3) obj. -13.3587 iterations 5
Cbc0038I Pass  59: suminf.    1.84381 (9) obj. -13.3587 iterations 13
Cbc0038I Pass  60: suminf.    1.47071 (7) obj. -13.3587 iterations 4
Cbc0038I Pass  61: suminf.    1.05757 (6) obj. -13.3587 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 85 columns, reduced to 36 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -3.69743 to -5.41424 (0.12 seconds)
Cbc0038I Round again with cutoff of -24.9521
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass  62: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass  63: suminf.    2.15050 (15) obj. -24.9521 iterations 25
Cbc0038I Pass  64: suminf.    2.15050 (15) obj. -24.9521 iterations 0
Cbc0038I Pass  65: suminf.    1.96395 (11) obj. -24.9521 iterations 14
Cbc0038I Pass  66: suminf.    1.24785 (10) obj. -24.9521 iterations 2
Cbc0038I Pass  67: suminf.    1.95610 (9) obj. -24.9521 iterations 8
Cbc0038I Pass  68: suminf.    1.09404 (9) obj. -24.9521 iterations 2
Cbc0038I Pass  69: suminf.    1.24928 (9) obj. -24.9521 iterations 5
Cbc0038I Pass  70: suminf.    2.21180 (16) obj. -24.9521 iterations 17
Cbc0038I Pass  71: suminf.    2.05803 (12) obj. -24.9521 iterations 3
Cbc0038I Pass  72: suminf.    1.24142 (11) obj. -24.9521 iterations 22
Cbc0038I Pass  73: suminf.    1.24142 (11) obj. -24.9521 iterations 0
Cbc0038I Pass  74: suminf.    2.96999 (12) obj. -24.9521 iterations 9
Cbc0038I Pass  75: suminf.    1.95099 (11) obj. -24.9521 iterations 2
Cbc0038I Pass  76: suminf.    1.81286 (11) obj. -24.9521 iterations 1
Cbc0038I Pass  77: suminf.    3.01250 (11) obj. -24.9521 iterations 8
Cbc0038I Pass  78: suminf.    1.79101 (11) obj. -24.9521 iterations 6
Cbc0038I Pass  79: suminf.    3.01250 (11) obj. -24.9521 iterations 3
Cbc0038I Pass  80: suminf.    3.41810 (14) obj. -24.9521 iterations 11
Cbc0038I Pass  81: suminf.    3.30225 (13) obj. -24.9521 iterations 2
Cbc0038I Pass  82: suminf.    2.30533 (12) obj. -24.9521 iterations 8
Cbc0038I Pass  83: suminf.    2.21592 (11) obj. -24.9521 iterations 3
Cbc0038I Pass  84: suminf.    2.07794 (11) obj. -24.9521 iterations 5
Cbc0038I Pass  85: suminf.    1.81078 (11) obj. -24.9521 iterations 4
Cbc0038I Pass  86: suminf.    2.07794 (11) obj. -24.9521 iterations 7
Cbc0038I Pass  87: suminf.    1.80223 (11) obj. -24.9521 iterations 4
Cbc0038I Pass  88: suminf.    4.28243 (18) obj. -24.9521 iterations 16
Cbc0038I Pass  89: suminf.    2.31788 (12) obj. -24.9521 iterations 11
Cbc0038I Pass  90: suminf.    2.11896 (12) obj. -26.2087 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 85 columns, reduced to 37 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -5.41424 - took 0.12 seconds
Cbc0012I Integer solution of -5.414241 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 67 rows 85 columns, reduced to 31 rows 39 columns
Cbc0031I 45 added rows had average density of 17.377778
Cbc0013I At root node, 45 cuts changed objective from -52.003431 to -13.621111 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9183 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 996 row cuts average 78.9 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 684 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 273 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.669 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.414241 best solution, best possible -13.621111 (1.89 seconds)
Cbc0012I Integer solution of -10.141491 found by rounding after 3602 iterations and 3 nodes (2.04 seconds)
Cbc0012I Integer solution of -10.399161 found by rounding after 3636 iterations and 8 nodes (2.05 seconds)
Cbc0001I Search completed - best objective -10.39916100000001, took 4021 iterations and 20 nodes (2.17 seconds)
Cbc0032I Strong branching done 308 times (5969 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 42 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-23) rows, 51 (-2) columns and 258 (-45) elements
Clp1000I sum of infeasibilities 1.442e-05 - average 1.75854e-07, 2 fixed columns
Coin0506I Presolve 78 (-4) rows, 49 (-2) columns and 246 (-12) elements
Clp0014I Perturbing problem by 0.001% of 5.3481154 - largest nonzero change 0 ( 0%) - largest zero change 2.671199e-05
Clp0000I Optimal - objective value 40.15971
Clp0000I Optimal - objective value 40.15971
Coin0511I After Postsolve, objective 40.15971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.15971
Clp0000I Optimal - objective value 40.15971
Clp0000I Optimal - objective value 40.15971
Coin0511I After Postsolve, objective 40.15971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.1597096 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 82 rows, 51 columns (50 integer (50 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.523%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 10.0381
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 17.4473 iterations 34
Cbc0038I Solution found of 17.4473
Cbc0038I Relaxing continuous gives 17.4473
Cbc0038I Rounding solution of 17.2881 is better than previous of 17.4473

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 51 columns, reduced to 57 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 17.2881 to -9.9287 (0.03 seconds)
Cbc0038I Round again with cutoff of -12.9519
Cbc0038I Pass   2: suminf.    2.25180 (20) obj. -12.9519 iterations 22
Cbc0038I Pass   3: suminf.    2.17714 (27) obj. -12.9519 iterations 8
Cbc0038I Pass   4: suminf.    0.64337 (5) obj. -12.9519 iterations 42
Cbc0038I Pass   5: suminf.    0.64337 (5) obj. -12.9519 iterations 1
Cbc0038I Pass   6: suminf.    1.39918 (6) obj. -12.9519 iterations 7
Cbc0038I Pass   7: suminf.    0.74454 (5) obj. -12.9519 iterations 3
Cbc0038I Pass   8: suminf.    0.66712 (5) obj. -12.9519 iterations 1
Cbc0038I Pass   9: suminf.    1.29272 (6) obj. -12.9519 iterations 7
Cbc0038I Pass  10: suminf.    1.00966 (4) obj. -12.9519 iterations 3
Cbc0038I Pass  11: suminf.    1.28904 (6) obj. -12.9519 iterations 5
Cbc0038I Pass  12: suminf.    1.06882 (4) obj. -12.9519 iterations 2
Cbc0038I Pass  13: suminf.    3.18406 (9) obj. -12.9519 iterations 12
Cbc0038I Pass  14: suminf.    1.37593 (4) obj. -12.9519 iterations 18
Cbc0038I Pass  15: suminf.    1.37593 (4) obj. -12.9519 iterations 0
Cbc0038I Pass  16: suminf.    1.80302 (4) obj. -12.9519 iterations 1
Cbc0038I Pass  17: suminf.    1.37593 (4) obj. -12.9519 iterations 2
Cbc0038I Pass  18: suminf.    2.67894 (7) obj. -12.9519 iterations 20
Cbc0038I Pass  19: suminf.    1.91263 (6) obj. -12.9519 iterations 3
Cbc0038I Pass  20: suminf.    1.44893 (5) obj. -12.9519 iterations 7
Cbc0038I Pass  21: suminf.    1.42553 (4) obj. -12.9519 iterations 1
Cbc0038I Pass  22: suminf.    1.42553 (4) obj. -12.9519 iterations 0
Cbc0038I Pass  23: suminf.    0.88100 (4) obj. -12.9519 iterations 5
Cbc0038I Pass  24: suminf.    0.86111 (3) obj. -12.9519 iterations 1
Cbc0038I Pass  25: suminf.    0.89530 (3) obj. -12.9519 iterations 4
Cbc0038I Pass  26: suminf.    0.79478 (3) obj. -12.9519 iterations 2
Cbc0038I Pass  27: suminf.    0.89530 (3) obj. -12.9519 iterations 2
Cbc0038I Pass  28: suminf.    1.80881 (10) obj. -12.9519 iterations 16
Cbc0038I Pass  29: suminf.    0.92757 (4) obj. -12.9519 iterations 12
Cbc0038I Pass  30: suminf.    0.91402 (4) obj. -12.9519 iterations 1
Cbc0038I Pass  31: suminf.    0.86044 (3) obj. -12.9519 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 82 rows 51 columns, reduced to 61 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -9.9287 - took 0.05 seconds
Cbc0012I Integer solution of -9.928701 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 82 rows 51 columns, reduced to 57 rows 37 columns
Cbc0031I 18 added rows had average density of 37.777778
Cbc0013I At root node, 18 cuts changed objective from -40.15971 to -27.293791 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8406 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1913 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 88 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0012I Integer solution of -10.141491 found by rounding after 5886 iterations and 22 nodes (0.67 seconds)
Cbc0004I Integer solution of -10.399161 found after 5903 iterations and 29 nodes (0.67 seconds)
Cbc0001I Search completed - best objective -10.39916100000001, took 6261 iterations and 36 nodes (0.68 seconds)
Cbc0032I Strong branching done 430 times (7438 iterations), fathomed 2 nodes and fixed 9 variables
Cbc0035I Maximum depth 16, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 66 (-39) rows, 84 (-19) columns and 1052 (-527) elements
Clp1000I sum of infeasibilities 4.04358e-08 - average 6.12664e-10, 18 fixed columns
Coin0506I Presolve 51 (-15) rows, 66 (-18) columns and 595 (-457) elements
Clp0006I 0  Obj 44.070248 Dual inf 1.3632863 (66)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 3.984774 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 61.707731
Clp0000I Optimal - objective value 61.707731
Coin0511I After Postsolve, objective 61.707731, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.707731 Dual inf 0.27444124 (1)
Clp0014I Perturbing problem by 0.001% of 4.4786424 - largest nonzero change 1.7539653e-05 ( 0.0009598595%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 62.368445
Clp0000I Optimal - objective value 62.368445
Clp0000I Optimal - objective value 62.368445
Coin0511I After Postsolve, objective 62.368445, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.36844531 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 67 rows, 85 columns (85 integer (85 of which binary)) and 1061 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.722%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.22455
Cbc0038I Pass   1: suminf.    1.56952 (21) obj. -26.8686 iterations 7
Cbc0038I Pass   2: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Solution found of 21.0167
Cbc0038I Rounding solution of 3.00147 is better than previous of 21.0167

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 85 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 3.00147 to 2.13539 (0.02 seconds)
Cbc0038I Round again with cutoff of -3.27858
Cbc0038I Pass   3: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass   4: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass   5: suminf.    0.73102 (6) obj. -3.27858 iterations 17
Cbc0038I Pass   6: suminf.    0.43437 (6) obj. -5.65182 iterations 1
Cbc0038I Pass   7: suminf.    0.64588 (7) obj. -3.27858 iterations 6
Cbc0038I Pass   8: suminf.    0.49301 (6) obj. -6.00473 iterations 1
Cbc0038I Pass   9: suminf.    0.55534 (2) obj. -3.27858 iterations 7
Cbc0038I Pass  10: suminf.    0.28286 (2) obj. -5.45847 iterations 1
Cbc0038I Pass  11: suminf.    3.07492 (15) obj. -3.27858 iterations 14
Cbc0038I Pass  12: suminf.    1.35104 (10) obj. -5.21551 iterations 7
Cbc0038I Pass  13: suminf.    0.61133 (2) obj. -3.27858 iterations 13
Cbc0038I Pass  14: suminf.    0.25000 (1) obj. -6.45032 iterations 5
Cbc0038I Pass  15: suminf.    0.42621 (1) obj. -3.27858 iterations 2
Cbc0038I Pass  16: suminf.    1.52615 (9) obj. -3.27858 iterations 25
Cbc0038I Pass  17: suminf.    1.25114 (8) obj. -3.27858 iterations 3
Cbc0038I Pass  18: suminf.    0.20373 (1) obj. -3.27858 iterations 8
Cbc0038I Pass  19: suminf.    0.18000 (1) obj. -3.70573 iterations 1
Cbc0038I Pass  20: suminf.    2.07651 (14) obj. -3.27858 iterations 30
Cbc0038I Pass  21: suminf.    0.87206 (8) obj. -3.35364 iterations 7
Cbc0038I Pass  22: suminf.    0.44378 (2) obj. -3.27858 iterations 9
Cbc0038I Pass  23: suminf.    0.44378 (2) obj. -3.27858 iterations 0
Cbc0038I Pass  24: suminf.    0.60925 (2) obj. -3.27858 iterations 2
Cbc0038I Pass  25: suminf.    0.54481 (3) obj. -5.23026 iterations 2
Cbc0038I Pass  26: suminf.    0.44378 (2) obj. -3.27858 iterations 4
Cbc0038I Pass  27: suminf.    1.18444 (7) obj. -3.27858 iterations 17
Cbc0038I Pass  28: suminf.    1.18444 (7) obj. -3.27858 iterations 0
Cbc0038I Pass  29: suminf.    0.41782 (2) obj. -3.27858 iterations 10
Cbc0038I Pass  30: suminf.    0.41782 (2) obj. -3.27858 iterations 0
Cbc0038I Pass  31: suminf.    0.71636 (3) obj. -3.27858 iterations 3
Cbc0038I Pass  32: suminf.    0.64908 (3) obj. -4.45212 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 85 columns, reduced to 44 rows 59 columns
Cbc0038I Mini branch and bound improved solution from 2.13539 to -3.69743 (0.08 seconds)
Cbc0038I Round again with cutoff of -13.3587
Cbc0038I Pass  32: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass  33: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass  34: suminf.    0.73369 (8) obj. -13.3587 iterations 21
Cbc0038I Pass  35: suminf.    0.73369 (8) obj. -13.3587 iterations 0
Cbc0038I Pass  36: suminf.    1.54355 (9) obj. -13.3587 iterations 9
Cbc0038I Pass  37: suminf.    0.85383 (9) obj. -13.3587 iterations 1
Cbc0038I Pass  38: suminf.    0.37757 (3) obj. -13.3587 iterations 11
Cbc0038I Pass  39: suminf.    0.36802 (3) obj. -13.3985 iterations 4
Cbc0038I Pass  40: suminf.    0.37491 (3) obj. -13.3587 iterations 2
Cbc0038I Pass  41: suminf.    2.28503 (11) obj. -13.3587 iterations 13
Cbc0038I Pass  42: suminf.    1.04957 (7) obj. -13.3587 iterations 7
Cbc0038I Pass  43: suminf.    0.96072 (7) obj. -13.3587 iterations 1
Cbc0038I Pass  44: suminf.    1.08428 (5) obj. -13.3587 iterations 7
Cbc0038I Pass  45: suminf.    0.75054 (5) obj. -13.3587 iterations 8
Cbc0038I Pass  46: suminf.    1.04996 (4) obj. -13.3587 iterations 6
Cbc0038I Pass  47: suminf.    0.79251 (3) obj. -13.3587 iterations 6
Cbc0038I Pass  48: suminf.    0.59504 (4) obj. -13.3587 iterations 3
Cbc0038I Pass  49: suminf.    0.59504 (4) obj. -13.3587 iterations 0
Cbc0038I Pass  50: suminf.    0.71487 (4) obj. -13.3587 iterations 2
Cbc0038I Pass  51: suminf.    0.71487 (4) obj. -13.3587 iterations 0
Cbc0038I Pass  52: suminf.    0.89894 (4) obj. -13.3587 iterations 2
Cbc0038I Pass  53: suminf.    0.89894 (4) obj. -13.3587 iterations 0
Cbc0038I Pass  54: suminf.    1.84156 (12) obj. -21.412 iterations 17
Cbc0038I Pass  55: suminf.    1.52352 (8) obj. -20.8684 iterations 7
Cbc0038I Pass  56: suminf.    0.40771 (4) obj. -13.3587 iterations 8
Cbc0038I Pass  57: suminf.    0.40771 (4) obj. -13.3587 iterations 0
Cbc0038I Pass  58: suminf.    0.58303 (3) obj. -13.3587 iterations 5
Cbc0038I Pass  59: suminf.    1.84381 (9) obj. -13.3587 iterations 13
Cbc0038I Pass  60: suminf.    1.47071 (7) obj. -13.3587 iterations 4
Cbc0038I Pass  61: suminf.    1.05757 (6) obj. -13.3587 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 85 columns, reduced to 36 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -3.69743 to -5.41424 (0.14 seconds)
Cbc0038I Round again with cutoff of -24.9521
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass  62: suminf.    1.56952 (21) obj. -26.8686 iterations 0
Cbc0038I Pass  63: suminf.    2.15050 (15) obj. -24.9521 iterations 25
Cbc0038I Pass  64: suminf.    2.15050 (15) obj. -24.9521 iterations 0
Cbc0038I Pass  65: suminf.    1.96395 (11) obj. -24.9521 iterations 14
Cbc0038I Pass  66: suminf.    1.24785 (10) obj. -24.9521 iterations 2
Cbc0038I Pass  67: suminf.    1.95610 (9) obj. -24.9521 iterations 8
Cbc0038I Pass  68: suminf.    1.09404 (9) obj. -24.9521 iterations 2
Cbc0038I Pass  69: suminf.    1.24928 (9) obj. -24.9521 iterations 5
Cbc0038I Pass  70: suminf.    2.21180 (16) obj. -24.9521 iterations 17
Cbc0038I Pass  71: suminf.    2.05803 (12) obj. -24.9521 iterations 3
Cbc0038I Pass  72: suminf.    1.24142 (11) obj. -24.9521 iterations 22
Cbc0038I Pass  73: suminf.    1.24142 (11) obj. -24.9521 iterations 0
Cbc0038I Pass  74: suminf.    2.96999 (12) obj. -24.9521 iterations 9
Cbc0038I Pass  75: suminf.    1.95099 (11) obj. -24.9521 iterations 2
Cbc0038I Pass  76: suminf.    1.81286 (11) obj. -24.9521 iterations 1
Cbc0038I Pass  77: suminf.    3.01250 (11) obj. -24.9521 iterations 8
Cbc0038I Pass  78: suminf.    1.79101 (11) obj. -24.9521 iterations 6
Cbc0038I Pass  79: suminf.    3.01250 (11) obj. -24.9521 iterations 3
Cbc0038I Pass  80: suminf.    3.41810 (14) obj. -24.9521 iterations 11
Cbc0038I Pass  81: suminf.    3.30225 (13) obj. -24.9521 iterations 2
Cbc0038I Pass  82: suminf.    2.30533 (12) obj. -24.9521 iterations 8
Cbc0038I Pass  83: suminf.    2.21592 (11) obj. -24.9521 iterations 3
Cbc0038I Pass  84: suminf.    2.07794 (11) obj. -24.9521 iterations 5
Cbc0038I Pass  85: suminf.    1.81078 (11) obj. -24.9521 iterations 4
Cbc0038I Pass  86: suminf.    2.07794 (11) obj. -24.9521 iterations 7
Cbc0038I Pass  87: suminf.    1.80223 (11) obj. -24.9521 iterations 4
Cbc0038I Pass  88: suminf.    4.28243 (18) obj. -24.9521 iterations 16
Cbc0038I Pass  89: suminf.    2.31788 (12) obj. -24.9521 iterations 11
Cbc0038I Pass  90: suminf.    2.11896 (12) obj. -26.2087 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 85 columns, reduced to 37 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -5.41424 - took 0.14 seconds
Cbc0012I Integer solution of -5.414241 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 67 rows 85 columns, reduced to 31 rows 39 columns
Cbc0031I 45 added rows had average density of 17.377778
Cbc0013I At root node, 45 cuts changed objective from -52.003431 to -13.621111 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9183 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 996 row cuts average 78.9 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 684 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 273 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.801 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.414241 best solution, best possible -13.621111 (2.31 seconds)
Cbc0012I Integer solution of -10.141491 found by rounding after 3602 iterations and 3 nodes (2.58 seconds)
Cbc0012I Integer solution of -10.399161 found by rounding after 3636 iterations and 8 nodes (2.59 seconds)
Cbc0001I Search completed - best objective -10.39916100000001, took 4021 iterations and 20 nodes (2.72 seconds)
Cbc0032I Strong branching done 308 times (5969 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 42 variables fixed on reduced cost
Total time (CPU seconds):       1.97   (Wallclock seconds):       2.73

