Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 46 (-4) columns and 258 (-27) elements
Clp1000I sum of infeasibilities 0.039228 - average 0.000450896, 14 fixed columns
Coin0506I Presolve 51 (-36) rows, 31 (-15) columns and 156 (-102) elements
Clp0000I Optimal - objective value 4273.1915
Clp0000I Optimal - objective value 4273.1915
Coin0511I After Postsolve, objective 4273.1915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5531936 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 4273.1915
Clp0000I Optimal - objective value 4273.1915
Clp0000I Optimal - objective value 4273.1915
Coin0511I After Postsolve, objective 4273.1915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4273.191506 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 46 columns (45 integer (45 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.987%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 12.1806
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 108.253 iterations 26
Cbc0038I Solution found of 108.253
Cbc0038I Relaxing continuous gives 108.253
Cbc0038I Rounding solution of -772.497 is better than previous of 108.253

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 46 columns, reduced to 51 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -772.497 to -3054.02 (0.02 seconds)
Cbc0038I Round again with cutoff of -3175.94
Cbc0038I Pass   2: suminf.    4.29595 (13) obj. -3175.94 iterations 12
Cbc0038I Pass   3: suminf.    0.78670 (4) obj. -3175.94 iterations 12
Cbc0038I Pass   4: suminf.    0.82308 (4) obj. -3175.94 iterations 5
Cbc0038I Pass   5: suminf.    0.39794 (3) obj. -3175.94 iterations 3
Cbc0038I Pass   6: suminf.    1.09269 (4) obj. -3175.94 iterations 3
Cbc0038I Pass   7: suminf.    1.00000 (4) obj. -3175.94 iterations 1
Cbc0038I Pass   8: suminf.    1.00000 (5) obj. -3175.94 iterations 2
Cbc0038I Pass   9: suminf.    2.19163 (7) obj. -3175.94 iterations 4
Cbc0038I Pass  10: suminf.    1.57277 (5) obj. -3175.94 iterations 2
Cbc0038I Pass  11: suminf.    3.45337 (12) obj. -3175.94 iterations 19
Cbc0038I Pass  12: suminf.    3.40415 (12) obj. -3175.94 iterations 3
Cbc0038I Pass  13: suminf.    3.99567 (10) obj. -3175.94 iterations 9
Cbc0038I Pass  14: suminf.    0.34889 (2) obj. -3175.94 iterations 10
Cbc0038I Pass  15: suminf.    0.28515 (2) obj. -3175.94 iterations 1
Cbc0038I Pass  16: suminf.    0.96459 (4) obj. -3175.94 iterations 3
Cbc0038I Pass  17: suminf.    6.15568 (17) obj. -3175.94 iterations 23
Cbc0038I Pass  18: suminf.    3.61692 (13) obj. -3175.94 iterations 13
Cbc0038I Pass  19: suminf.    3.28795 (12) obj. -3175.94 iterations 1
Cbc0038I Pass  20: suminf.    3.59038 (10) obj. -3175.94 iterations 13
Cbc0038I Pass  21: suminf.    0.97782 (5) obj. -3175.94 iterations 9
Cbc0038I Pass  22: suminf.    1.11209 (6) obj. -3175.94 iterations 7
Cbc0038I Pass  23: suminf.    0.74133 (4) obj. -3175.94 iterations 4
Cbc0038I Pass  24: suminf.    1.22737 (5) obj. -3175.94 iterations 4
Cbc0038I Pass  25: suminf.    1.00000 (4) obj. -3175.94 iterations 2
Cbc0038I Pass  26: suminf.    1.00000 (6) obj. -3175.94 iterations 5
Cbc0038I Pass  27: suminf.    3.48030 (9) obj. -3175.94 iterations 8
Cbc0038I Pass  28: suminf.    0.97782 (5) obj. -3175.94 iterations 7
Cbc0038I Pass  29: suminf.    1.11209 (6) obj. -3175.94 iterations 7
Cbc0038I Pass  30: suminf.    0.74133 (4) obj. -3175.94 iterations 4
Cbc0038I Pass  31: suminf.    1.22737 (5) obj. -3175.94 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 46 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3054.02 - took 0.02 seconds
Cbc0012I Integer solution of -3054.0242 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 87 rows 46 columns, reduced to 51 rows 31 columns
Cbc0031I 11 added rows had average density of 42
Cbc0013I At root node, 11 cuts changed objective from -4273.1915 to -3201.8388 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1813 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 570 row cuts average 43.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3054.024200000001, took 1890 iterations and 0 nodes (0.24 seconds)
Cbc0032I Strong branching done 28 times (470 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-9) rows, 92 (-4) columns and 1276 (-137) elements
Clp1000I sum of infeasibilities 2.22045e-16 - average 2.49488e-18, 49 fixed columns
Coin0506I Presolve 28 (-61) rows, 28 (-64) columns and 69 (-1207) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 5.1382707 - largest nonzero change 1.5284019e-05 ( 0.0011059966%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 5777.075
Clp0000I Optimal - objective value 5777.075
Coin0511I After Postsolve, objective 5777.075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5303697 - largest nonzero change 1.7422423e-05 ( 0.0017422423%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 5935.4581
Clp0000I Optimal - objective value 5935.4581
Clp0000I Optimal - objective value 5935.4581
Coin0511I After Postsolve, objective 5935.4581, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5935.458149 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 92 columns (92 integer (92 of which binary)) and 1284 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.009%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 14.3604
Cbc0038I Pass   1: suminf.    3.67950 (26) obj. -2200.46 iterations 22
Cbc0038I Pass   2: suminf.    3.67950 (26) obj. -2200.46 iterations 2
Cbc0038I Pass   3: suminf.    0.68883 (9) obj. -37.9958 iterations 17
Cbc0038I Solution found of 168.5
Cbc0038I Rounding solution of -924.669 is better than previous of 168.5

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 92 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -924.669 to -3054.02 (0.03 seconds)
Cbc0038I Round again with cutoff of -3299.02
Cbc0038I Pass   4: suminf.    6.17114 (35) obj. -3299.02 iterations 9
Cbc0038I Pass   5: suminf.    6.17114 (35) obj. -3299.02 iterations 0
Cbc0038I Pass   6: suminf.    5.28127 (29) obj. -3299.02 iterations 21
Cbc0038I Pass   7: suminf.    5.10395 (28) obj. -3299.02 iterations 2
Cbc0038I Pass   8: suminf.    0.99561 (5) obj. -3299.02 iterations 31
Cbc0038I Pass   9: suminf.    0.99561 (5) obj. -3299.02 iterations 0
Cbc0038I Pass  10: suminf.    0.68101 (3) obj. -3299.02 iterations 11
Cbc0038I Pass  11: suminf.    0.82169 (3) obj. -3299.02 iterations 11
Cbc0038I Pass  12: suminf.    4.66113 (13) obj. -3299.02 iterations 23
Cbc0038I Pass  13: suminf.    1.89381 (8) obj. -3299.02 iterations 15
Cbc0038I Pass  14: suminf.    0.82169 (3) obj. -3299.02 iterations 12
Cbc0038I Pass  15: suminf.    4.68130 (15) obj. -3299.02 iterations 33
Cbc0038I Pass  16: suminf.    4.50018 (14) obj. -3299.02 iterations 9
Cbc0038I Pass  17: suminf.    1.86308 (7) obj. -3299.02 iterations 13
Cbc0038I Pass  18: suminf.    1.20436 (3) obj. -3299.02 iterations 14
Cbc0038I Pass  19: suminf.    0.60523 (2) obj. -3385.49 iterations 6
Cbc0038I Pass  20: suminf.    0.61708 (2) obj. -3299.02 iterations 3
Cbc0038I Pass  21: suminf.    0.61708 (2) obj. -3299.02 iterations 0
Cbc0038I Pass  22: suminf.    1.00000 (3) obj. -3299.02 iterations 8
Cbc0038I Pass  23: suminf.    1.00000 (6) obj. -3299.02 iterations 3
Cbc0038I Pass  24: suminf.    0.82169 (3) obj. -3299.02 iterations 5
Cbc0038I Pass  25: suminf.    0.82169 (3) obj. -3299.02 iterations 2
Cbc0038I Pass  26: suminf.    0.68101 (3) obj. -3299.02 iterations 10
Cbc0038I Pass  27: suminf.    2.94883 (11) obj. -3299.02 iterations 16
Cbc0038I Pass  28: suminf.    2.93485 (11) obj. -3299.02 iterations 3
Cbc0038I Pass  29: suminf.    0.53062 (2) obj. -3299.02 iterations 16
Cbc0038I Pass  30: suminf.    0.31111 (1) obj. -3413.92 iterations 2
Cbc0038I Pass  31: suminf.    0.42043 (1) obj. -3299.02 iterations 1
Cbc0038I Pass  32: suminf.    4.01974 (15) obj. -3299.02 iterations 31
Cbc0038I Pass  33: suminf.    4.01263 (13) obj. -3299.02 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 92 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3054.02 - took 0.02 seconds
Cbc0012I Integer solution of -3054.0242 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 89 rows 92 columns, reduced to 0 rows 0 columns
Cbc0031I 26 added rows had average density of 8.6153846
Cbc0013I At root node, 451 cuts changed objective from -5503.9601 to -3054.0242 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 363 row cuts average 2.0 elements, 22 column cuts (22 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3054.024200000001, took 19 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 46 (-4) columns and 258 (-27) elements
Clp1000I sum of infeasibilities 0.039228 - average 0.000450896, 14 fixed columns
Coin0506I Presolve 51 (-36) rows, 31 (-15) columns and 156 (-102) elements
Clp0000I Optimal - objective value 4273.1915
Clp0000I Optimal - objective value 4273.1915
Coin0511I After Postsolve, objective 4273.1915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5531936 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 4273.1915
Clp0000I Optimal - objective value 4273.1915
Clp0000I Optimal - objective value 4273.1915
Coin0511I After Postsolve, objective 4273.1915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4273.191506 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 46 columns (45 integer (45 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.987%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 12.1806
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 108.253 iterations 26
Cbc0038I Solution found of 108.253
Cbc0038I Relaxing continuous gives 108.253
Cbc0038I Rounding solution of -772.497 is better than previous of 108.253

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 46 columns, reduced to 51 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -772.497 to -3054.02 (0.01 seconds)
Cbc0038I Round again with cutoff of -3175.94
Cbc0038I Pass   2: suminf.    4.29595 (13) obj. -3175.94 iterations 12
Cbc0038I Pass   3: suminf.    0.78670 (4) obj. -3175.94 iterations 12
Cbc0038I Pass   4: suminf.    0.82308 (4) obj. -3175.94 iterations 5
Cbc0038I Pass   5: suminf.    0.39794 (3) obj. -3175.94 iterations 3
Cbc0038I Pass   6: suminf.    1.09269 (4) obj. -3175.94 iterations 3
Cbc0038I Pass   7: suminf.    1.00000 (4) obj. -3175.94 iterations 1
Cbc0038I Pass   8: suminf.    1.00000 (5) obj. -3175.94 iterations 2
Cbc0038I Pass   9: suminf.    2.19163 (7) obj. -3175.94 iterations 4
Cbc0038I Pass  10: suminf.    1.57277 (5) obj. -3175.94 iterations 2
Cbc0038I Pass  11: suminf.    3.45337 (12) obj. -3175.94 iterations 19
Cbc0038I Pass  12: suminf.    3.40415 (12) obj. -3175.94 iterations 3
Cbc0038I Pass  13: suminf.    3.99567 (10) obj. -3175.94 iterations 9
Cbc0038I Pass  14: suminf.    0.34889 (2) obj. -3175.94 iterations 10
Cbc0038I Pass  15: suminf.    0.28515 (2) obj. -3175.94 iterations 1
Cbc0038I Pass  16: suminf.    0.96459 (4) obj. -3175.94 iterations 3
Cbc0038I Pass  17: suminf.    6.15568 (17) obj. -3175.94 iterations 23
Cbc0038I Pass  18: suminf.    3.61692 (13) obj. -3175.94 iterations 13
Cbc0038I Pass  19: suminf.    3.28795 (12) obj. -3175.94 iterations 1
Cbc0038I Pass  20: suminf.    3.59038 (10) obj. -3175.94 iterations 13
Cbc0038I Pass  21: suminf.    0.97782 (5) obj. -3175.94 iterations 9
Cbc0038I Pass  22: suminf.    1.11209 (6) obj. -3175.94 iterations 7
Cbc0038I Pass  23: suminf.    0.74133 (4) obj. -3175.94 iterations 4
Cbc0038I Pass  24: suminf.    1.22737 (5) obj. -3175.94 iterations 4
Cbc0038I Pass  25: suminf.    1.00000 (4) obj. -3175.94 iterations 2
Cbc0038I Pass  26: suminf.    1.00000 (6) obj. -3175.94 iterations 5
Cbc0038I Pass  27: suminf.    3.48030 (9) obj. -3175.94 iterations 8
Cbc0038I Pass  28: suminf.    0.97782 (5) obj. -3175.94 iterations 7
Cbc0038I Pass  29: suminf.    1.11209 (6) obj. -3175.94 iterations 7
Cbc0038I Pass  30: suminf.    0.74133 (4) obj. -3175.94 iterations 4
Cbc0038I Pass  31: suminf.    1.22737 (5) obj. -3175.94 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 46 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3054.02 - took 0.02 seconds
Cbc0012I Integer solution of -3054.0242 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 87 rows 46 columns, reduced to 51 rows 31 columns
Cbc0031I 11 added rows had average density of 42
Cbc0013I At root node, 11 cuts changed objective from -4273.1915 to -3201.8388 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1813 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 570 row cuts average 43.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3054.024200000001, took 1890 iterations and 0 nodes (0.24 seconds)
Cbc0032I Strong branching done 28 times (470 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 92 (-5) columns and 1276 (-138) elements
Clp1000I sum of infeasibilities 2.22045e-16 - average 2.49488e-18, 49 fixed columns
Coin0506I Presolve 28 (-61) rows, 28 (-64) columns and 69 (-1207) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 5.1382707 - largest nonzero change 1.5284019e-05 ( 0.0011059966%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 5777.075
Clp0000I Optimal - objective value 5777.075
Coin0511I After Postsolve, objective 5777.075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5303697 - largest nonzero change 1.7422423e-05 ( 0.0017422423%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 5935.4581
Clp0000I Optimal - objective value 5935.4581
Clp0000I Optimal - objective value 5935.4581
Coin0511I After Postsolve, objective 5935.4581, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5935.458149 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 92 columns (92 integer (92 of which binary)) and 1284 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.009%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 14.3604
Cbc0038I Pass   1: suminf.    3.67950 (26) obj. -2200.46 iterations 22
Cbc0038I Pass   2: suminf.    3.67950 (26) obj. -2200.46 iterations 2
Cbc0038I Pass   3: suminf.    0.68883 (9) obj. -37.9958 iterations 17
Cbc0038I Solution found of 168.5
Cbc0038I Rounding solution of -924.669 is better than previous of 168.5

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 92 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -924.669 to -3054.02 (0.03 seconds)
Cbc0038I Round again with cutoff of -3299.02
Cbc0038I Pass   4: suminf.    6.17114 (35) obj. -3299.02 iterations 9
Cbc0038I Pass   5: suminf.    6.17114 (35) obj. -3299.02 iterations 0
Cbc0038I Pass   6: suminf.    5.28127 (29) obj. -3299.02 iterations 21
Cbc0038I Pass   7: suminf.    5.10395 (28) obj. -3299.02 iterations 2
Cbc0038I Pass   8: suminf.    0.99561 (5) obj. -3299.02 iterations 31
Cbc0038I Pass   9: suminf.    0.99561 (5) obj. -3299.02 iterations 0
Cbc0038I Pass  10: suminf.    0.68101 (3) obj. -3299.02 iterations 11
Cbc0038I Pass  11: suminf.    0.82169 (3) obj. -3299.02 iterations 11
Cbc0038I Pass  12: suminf.    4.66113 (13) obj. -3299.02 iterations 23
Cbc0038I Pass  13: suminf.    1.89381 (8) obj. -3299.02 iterations 15
Cbc0038I Pass  14: suminf.    0.82169 (3) obj. -3299.02 iterations 12
Cbc0038I Pass  15: suminf.    4.68130 (15) obj. -3299.02 iterations 33
Cbc0038I Pass  16: suminf.    4.50018 (14) obj. -3299.02 iterations 9
Cbc0038I Pass  17: suminf.    1.86308 (7) obj. -3299.02 iterations 13
Cbc0038I Pass  18: suminf.    1.20436 (3) obj. -3299.02 iterations 14
Cbc0038I Pass  19: suminf.    0.60523 (2) obj. -3385.49 iterations 6
Cbc0038I Pass  20: suminf.    0.61708 (2) obj. -3299.02 iterations 3
Cbc0038I Pass  21: suminf.    0.61708 (2) obj. -3299.02 iterations 0
Cbc0038I Pass  22: suminf.    1.00000 (3) obj. -3299.02 iterations 8
Cbc0038I Pass  23: suminf.    1.00000 (6) obj. -3299.02 iterations 3
Cbc0038I Pass  24: suminf.    0.82169 (3) obj. -3299.02 iterations 5
Cbc0038I Pass  25: suminf.    0.82169 (3) obj. -3299.02 iterations 2
Cbc0038I Pass  26: suminf.    0.68101 (3) obj. -3299.02 iterations 10
Cbc0038I Pass  27: suminf.    2.94883 (11) obj. -3299.02 iterations 16
Cbc0038I Pass  28: suminf.    2.93485 (11) obj. -3299.02 iterations 3
Cbc0038I Pass  29: suminf.    0.53062 (2) obj. -3299.02 iterations 16
Cbc0038I Pass  30: suminf.    0.31111 (1) obj. -3413.92 iterations 2
Cbc0038I Pass  31: suminf.    0.42043 (1) obj. -3299.02 iterations 1
Cbc0038I Pass  32: suminf.    4.01974 (15) obj. -3299.02 iterations 31
Cbc0038I Pass  33: suminf.    4.01263 (13) obj. -3299.02 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 92 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3054.02 - took 0.02 seconds
Cbc0012I Integer solution of -3054.0242 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 89 rows 92 columns, reduced to 0 rows 0 columns
Cbc0031I 26 added rows had average density of 8.6153846
Cbc0013I At root node, 451 cuts changed objective from -5503.9601 to -3054.0242 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 363 row cuts average 2.0 elements, 22 column cuts (22 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3054.024200000001, took 19 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

