Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 0.000667526 - average 7.5003e-06, 7 fixed columns
Coin0506I Presolve 74 (-15) rows, 43 (-8) columns and 226 (-46) elements
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Coin0511I After Postsolve, objective 38.705548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Coin0511I After Postsolve, objective 38.705548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.70554802 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.13651
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.3484 iterations 27
Cbc0038I Solution found of 18.3484
Cbc0038I Relaxing continuous gives 18.3484
Cbc0038I Rounding solution of -2.66132 is better than previous of 18.3484

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 44 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -2.66132 to -9.81492 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.7041
Cbc0038I Pass   2: suminf.    3.28316 (12) obj. -12.7041 iterations 13
Cbc0038I Pass   3: suminf.    3.17597 (15) obj. -12.7041 iterations 8
Cbc0038I Pass   4: suminf.    0.40833 (3) obj. -12.7041 iterations 23
Cbc0038I Pass   5: suminf.    0.40833 (3) obj. -12.7041 iterations 2
Cbc0038I Pass   6: suminf.    1.24547 (4) obj. -12.7041 iterations 6
Cbc0038I Pass   7: suminf.    1.41837 (4) obj. -12.7041 iterations 2
Cbc0038I Pass   8: suminf.    1.41837 (4) obj. -12.7041 iterations 0
Cbc0038I Pass   9: suminf.    1.30930 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  10: suminf.    1.30930 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  11: suminf.    1.50376 (7) obj. -12.7041 iterations 12
Cbc0038I Pass  12: suminf.    0.82344 (3) obj. -12.7041 iterations 5
Cbc0038I Pass  13: suminf.    0.63055 (3) obj. -12.7041 iterations 1
Cbc0038I Pass  14: suminf.    1.00494 (4) obj. -12.7041 iterations 4
Cbc0038I Pass  15: suminf.    0.72193 (3) obj. -12.7041 iterations 2
Cbc0038I Pass  16: suminf.    0.83520 (4) obj. -12.7041 iterations 4
Cbc0038I Pass  17: suminf.    0.83520 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  18: suminf.    1.44696 (3) obj. -12.7041 iterations 2
Cbc0038I Pass  19: suminf.    1.27775 (4) obj. -12.7041 iterations 1
Cbc0038I Pass  20: suminf.    1.19705 (4) obj. -12.7041 iterations 3
Cbc0038I Pass  21: suminf.    0.97980 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  22: suminf.    1.68111 (5) obj. -12.7041 iterations 2
Cbc0038I Pass  23: suminf.    1.20264 (4) obj. -12.7041 iterations 1
Cbc0038I Pass  24: suminf.    1.48421 (6) obj. -12.7041 iterations 11
Cbc0038I Pass  25: suminf.    1.41510 (5) obj. -12.7041 iterations 4
Cbc0038I Pass  26: suminf.    0.98676 (4) obj. -12.7041 iterations 6
Cbc0038I Pass  27: suminf.    1.64729 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  28: suminf.    0.75579 (3) obj. -12.7041 iterations 3
Cbc0038I Pass  29: suminf.    1.41011 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  30: suminf.    1.41011 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  31: suminf.    1.41297 (4) obj. -12.7041 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -9.81492 - took 0.05 seconds
Cbc0012I Integer solution of -9.81492 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 44 rows 29 columns
Cbc0031I 21 added rows had average density of 35.666667
Cbc0013I At root node, 21 cuts changed objective from -38.705548 to -27.715683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7591 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1402 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 134 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -9.814920000000008, took 6789 iterations and 26 nodes (0.61 seconds)
Cbc0032I Strong branching done 440 times (8763 iterations), fathomed 0 nodes and fixed 20 variables
Cbc0035I Maximum depth 10, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 75 (-29) rows, 86 (-16) columns and 1125 (-453) elements
Clp1000I sum of infeasibilities 6.14582e-08 - average 8.19443e-10, 16 fixed columns
Coin0506I Presolve 60 (-15) rows, 69 (-17) columns and 725 (-400) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 5.1899808 - largest nonzero change 2.5491894e-05 ( 0.0015070958%) - largest zero change 2.6507229e-05
Clp0000I Optimal - objective value 55.270296
Clp0000I Optimal - objective value 55.270296
Coin0511I After Postsolve, objective 55.270296, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.270296
Clp0000I Optimal - objective value 55.270296
Clp0000I Optimal - objective value 55.270296
Coin0511I After Postsolve, objective 55.270296, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.27029612 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 75 rows, 86 columns (86 integer (86 of which binary)) and 1129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.990%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 6.63742
Cbc0038I Pass   1: suminf.    3.29010 (24) obj. -41.7065 iterations 15
Cbc0038I Pass   2: suminf.    3.29010 (24) obj. -41.7065 iterations 1
Cbc0038I Pass   3: suminf.    0.30737 (3) obj. -1.89784 iterations 21
Cbc0038I Solution found of 1.68765
Cbc0038I Rounding solution of -4.28681 is better than previous of 1.68765

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 86 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -4.28681 to -6.59114 (0.02 seconds)
Cbc0038I Round again with cutoff of -11.1162
Cbc0038I Pass   4: suminf.    3.29010 (24) obj. -41.7065 iterations 0
Cbc0038I Pass   5: suminf.    3.29010 (24) obj. -41.7065 iterations 1
Cbc0038I Pass   6: suminf.    1.26641 (10) obj. -11.1162 iterations 16
Cbc0038I Pass   7: suminf.    0.66903 (2) obj. -11.1162 iterations 12
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -13.8369 iterations 2
Cbc0038I Pass   9: suminf.    0.42672 (1) obj. -11.1162 iterations 1
Cbc0038I Pass  10: suminf.    2.29360 (10) obj. -11.1162 iterations 28
Cbc0038I Pass  11: suminf.    1.12932 (6) obj. -14.6158 iterations 11
Cbc0038I Pass  12: suminf.    0.52240 (3) obj. -11.1162 iterations 8
Cbc0038I Pass  13: suminf.    0.38450 (2) obj. -13.0054 iterations 1
Cbc0038I Pass  14: suminf.    0.66898 (2) obj. -11.1162 iterations 2
Cbc0038I Pass  15: suminf.    0.66898 (2) obj. -11.1162 iterations 0
Cbc0038I Pass  16: suminf.    0.46060 (2) obj. -11.1162 iterations 3
Cbc0038I Pass  17: suminf.    2.83028 (16) obj. -11.1162 iterations 19
Cbc0038I Pass  18: suminf.    1.65008 (10) obj. -11.1162 iterations 6
Cbc0038I Pass  19: suminf.    1.53602 (10) obj. -12.485 iterations 1
Cbc0038I Pass  20: suminf.    0.83480 (3) obj. -11.1162 iterations 13
Cbc0038I Pass  21: suminf.    0.60464 (3) obj. -12.0369 iterations 2
Cbc0038I Pass  22: suminf.    0.97027 (3) obj. -11.1162 iterations 7
Cbc0038I Pass  23: suminf.    0.49144 (2) obj. -11.1162 iterations 3
Cbc0038I Pass  24: suminf.    0.79868 (2) obj. -11.1162 iterations 3
Cbc0038I Pass  25: suminf.    2.37641 (13) obj. -11.1162 iterations 24
Cbc0038I Pass  26: suminf.    2.37126 (13) obj. -11.1162 iterations 7
Cbc0038I Pass  27: suminf.    1.24480 (5) obj. -11.1162 iterations 14
Cbc0038I Pass  28: suminf.    0.88912 (7) obj. -11.1162 iterations 11
Cbc0038I Pass  29: suminf.    0.83387 (4) obj. -11.1162 iterations 12
Cbc0038I Pass  30: suminf.    0.68793 (6) obj. -11.1162 iterations 6
Cbc0038I Pass  31: suminf.    0.96415 (4) obj. -11.1162 iterations 8
Cbc0038I Pass  32: suminf.    1.55251 (11) obj. -11.1162 iterations 22
Cbc0038I Pass  33: suminf.    1.54008 (10) obj. -11.1162 iterations 5
Cbc0038I Rounding solution of -7.5538 is better than previous of -6.59114

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 86 columns, reduced to 20 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.5538 to -9.81492 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.2612
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.29010 (24) obj. -41.7065 iterations 0
Cbc0038I Pass  34: suminf.    3.29010 (24) obj. -41.7065 iterations 1
Cbc0038I Pass  35: suminf.    1.45677 (11) obj. -19.2612 iterations 17
Cbc0038I Pass  36: suminf.    1.45677 (11) obj. -19.2612 iterations 0
Cbc0038I Pass  37: suminf.    0.65792 (5) obj. -19.2612 iterations 18
Cbc0038I Pass  38: suminf.    0.65792 (5) obj. -19.2612 iterations 0
Cbc0038I Pass  39: suminf.    0.96923 (4) obj. -19.2612 iterations 11
Cbc0038I Pass  40: suminf.    0.96923 (4) obj. -19.2612 iterations 1
Cbc0038I Pass  41: suminf.    0.88489 (3) obj. -19.2612 iterations 4
Cbc0038I Pass  42: suminf.    0.84749 (3) obj. -19.2612 iterations 1
Cbc0038I Pass  43: suminf.    0.88860 (3) obj. -19.2612 iterations 3
Cbc0038I Pass  44: suminf.    1.93254 (12) obj. -19.2612 iterations 27
Cbc0038I Pass  45: suminf.    1.20693 (8) obj. -19.2612 iterations 6
Cbc0038I Pass  46: suminf.    1.72836 (6) obj. -19.2612 iterations 9
Cbc0038I Pass  47: suminf.    1.72836 (6) obj. -19.2612 iterations 0
Cbc0038I Pass  48: suminf.    1.23775 (9) obj. -19.2612 iterations 8
Cbc0038I Pass  49: suminf.    0.94415 (7) obj. -19.2612 iterations 3
Cbc0038I Pass  50: suminf.    1.32584 (6) obj. -19.2612 iterations 15
Cbc0038I Pass  51: suminf.    0.86678 (5) obj. -19.2612 iterations 6
Cbc0038I Pass  52: suminf.    2.04899 (10) obj. -19.2612 iterations 18
Cbc0038I Pass  53: suminf.    1.61000 (9) obj. -19.2612 iterations 6
Cbc0038I Pass  54: suminf.    0.99239 (7) obj. -19.2612 iterations 8
Cbc0038I Pass  55: suminf.    0.99239 (7) obj. -19.2612 iterations 0
Cbc0038I Pass  56: suminf.    2.28386 (9) obj. -19.2612 iterations 8
Cbc0038I Pass  57: suminf.    1.23671 (9) obj. -19.2612 iterations 8
Cbc0038I Pass  58: suminf.    0.86035 (6) obj. -19.2612 iterations 5
Cbc0038I Pass  59: suminf.    1.04422 (7) obj. -19.2612 iterations 3
Cbc0038I Pass  60: suminf.    1.04354 (10) obj. -19.2612 iterations 4
Cbc0038I Pass  61: suminf.    1.81668 (7) obj. -19.2612 iterations 17
Cbc0038I Pass  62: suminf.    1.08412 (6) obj. -19.2612 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 86 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -9.81492 - took 0.03 seconds
Cbc0012I Integer solution of -9.81492 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 75 rows 86 columns, reduced to 6 rows 6 columns
Cbc0031I 47 added rows had average density of 22.87234
Cbc0013I At root node, 47 cuts changed objective from -51.841096 to -11.903079 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8734 row cuts average 6.2 elements, 3 column cuts (39 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1323 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 939 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 310 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.632 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.81492 best solution, best possible -11.903079 (1.86 seconds)
Cbc0001I Search completed - best objective -9.814920000000008, took 3195 iterations and 8 nodes (2.00 seconds)
Cbc0032I Strong branching done 192 times (3428 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       2.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 0.000667526 - average 7.5003e-06, 7 fixed columns
Coin0506I Presolve 74 (-15) rows, 43 (-8) columns and 226 (-46) elements
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Coin0511I After Postsolve, objective 38.705548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Clp0000I Optimal - objective value 38.705548
Coin0511I After Postsolve, objective 38.705548, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.70554802 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.13651
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.3484 iterations 27
Cbc0038I Solution found of 18.3484
Cbc0038I Relaxing continuous gives 18.3484
Cbc0038I Rounding solution of -2.66132 is better than previous of 18.3484

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 44 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -2.66132 to -9.81492 (0.04 seconds)
Cbc0038I Round again with cutoff of -12.7041
Cbc0038I Pass   2: suminf.    3.28316 (12) obj. -12.7041 iterations 13
Cbc0038I Pass   3: suminf.    3.17597 (15) obj. -12.7041 iterations 8
Cbc0038I Pass   4: suminf.    0.40833 (3) obj. -12.7041 iterations 23
Cbc0038I Pass   5: suminf.    0.40833 (3) obj. -12.7041 iterations 2
Cbc0038I Pass   6: suminf.    1.24547 (4) obj. -12.7041 iterations 6
Cbc0038I Pass   7: suminf.    1.41837 (4) obj. -12.7041 iterations 2
Cbc0038I Pass   8: suminf.    1.41837 (4) obj. -12.7041 iterations 0
Cbc0038I Pass   9: suminf.    1.30930 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  10: suminf.    1.30930 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  11: suminf.    1.50376 (7) obj. -12.7041 iterations 12
Cbc0038I Pass  12: suminf.    0.82344 (3) obj. -12.7041 iterations 5
Cbc0038I Pass  13: suminf.    0.63055 (3) obj. -12.7041 iterations 1
Cbc0038I Pass  14: suminf.    1.00494 (4) obj. -12.7041 iterations 4
Cbc0038I Pass  15: suminf.    0.72193 (3) obj. -12.7041 iterations 2
Cbc0038I Pass  16: suminf.    0.83520 (4) obj. -12.7041 iterations 4
Cbc0038I Pass  17: suminf.    0.83520 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  18: suminf.    1.44696 (3) obj. -12.7041 iterations 2
Cbc0038I Pass  19: suminf.    1.27775 (4) obj. -12.7041 iterations 1
Cbc0038I Pass  20: suminf.    1.19705 (4) obj. -12.7041 iterations 3
Cbc0038I Pass  21: suminf.    0.97980 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  22: suminf.    1.68111 (5) obj. -12.7041 iterations 2
Cbc0038I Pass  23: suminf.    1.20264 (4) obj. -12.7041 iterations 1
Cbc0038I Pass  24: suminf.    1.48421 (6) obj. -12.7041 iterations 11
Cbc0038I Pass  25: suminf.    1.41510 (5) obj. -12.7041 iterations 4
Cbc0038I Pass  26: suminf.    0.98676 (4) obj. -12.7041 iterations 6
Cbc0038I Pass  27: suminf.    1.64729 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  28: suminf.    0.75579 (3) obj. -12.7041 iterations 3
Cbc0038I Pass  29: suminf.    1.41011 (4) obj. -12.7041 iterations 2
Cbc0038I Pass  30: suminf.    1.41011 (4) obj. -12.7041 iterations 0
Cbc0038I Pass  31: suminf.    1.41297 (4) obj. -12.7041 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -9.81492 - took 0.06 seconds
Cbc0012I Integer solution of -9.81492 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 44 rows 29 columns
Cbc0031I 21 added rows had average density of 35.666667
Cbc0013I At root node, 21 cuts changed objective from -38.705548 to -27.715683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7591 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1402 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 134 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -9.814920000000008, took 6789 iterations and 26 nodes (0.62 seconds)
Cbc0032I Strong branching done 440 times (8763 iterations), fathomed 0 nodes and fixed 20 variables
Cbc0035I Maximum depth 10, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 75 (-30) rows, 86 (-17) columns and 1125 (-454) elements
Clp1000I sum of infeasibilities 6.14582e-08 - average 8.19443e-10, 16 fixed columns
Coin0506I Presolve 60 (-15) rows, 69 (-17) columns and 725 (-400) elements
Clp0006I 0  Obj 32.207232 Dual inf 1.8514769 (69)
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 5.1899808 - largest nonzero change 2.5491894e-05 ( 0.0015070958%) - largest zero change 2.6507229e-05
Clp0000I Optimal - objective value 55.270296
Clp0000I Optimal - objective value 55.270296
Coin0511I After Postsolve, objective 55.270296, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.270296
Clp0000I Optimal - objective value 55.270296
Clp0000I Optimal - objective value 55.270296
Clp0000I Optimal - objective value 55.270296
Coin0511I After Postsolve, objective 55.270296, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.27029612 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 75 rows, 86 columns (86 integer (86 of which binary)) and 1129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.990%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 6.63742
Cbc0038I Pass   1: suminf.    3.29010 (24) obj. -41.7065 iterations 15
Cbc0038I Pass   2: suminf.    3.29010 (24) obj. -41.7065 iterations 1
Cbc0038I Pass   3: suminf.    0.30737 (3) obj. -1.89784 iterations 21
Cbc0038I Solution found of 1.68765
Cbc0038I Rounding solution of -4.28681 is better than previous of 1.68765

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 86 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -4.28681 to -6.59114 (0.02 seconds)
Cbc0038I Round again with cutoff of -11.1162
Cbc0038I Pass   4: suminf.    3.29010 (24) obj. -41.7065 iterations 0
Cbc0038I Pass   5: suminf.    3.29010 (24) obj. -41.7065 iterations 1
Cbc0038I Pass   6: suminf.    1.26641 (10) obj. -11.1162 iterations 16
Cbc0038I Pass   7: suminf.    0.66903 (2) obj. -11.1162 iterations 12
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -13.8369 iterations 2
Cbc0038I Pass   9: suminf.    0.42672 (1) obj. -11.1162 iterations 1
Cbc0038I Pass  10: suminf.    2.29360 (10) obj. -11.1162 iterations 28
Cbc0038I Pass  11: suminf.    1.12932 (6) obj. -14.6158 iterations 11
Cbc0038I Pass  12: suminf.    0.52240 (3) obj. -11.1162 iterations 8
Cbc0038I Pass  13: suminf.    0.38450 (2) obj. -13.0054 iterations 1
Cbc0038I Pass  14: suminf.    0.66898 (2) obj. -11.1162 iterations 2
Cbc0038I Pass  15: suminf.    0.66898 (2) obj. -11.1162 iterations 0
Cbc0038I Pass  16: suminf.    0.46060 (2) obj. -11.1162 iterations 3
Cbc0038I Pass  17: suminf.    2.83028 (16) obj. -11.1162 iterations 19
Cbc0038I Pass  18: suminf.    1.65008 (10) obj. -11.1162 iterations 6
Cbc0038I Pass  19: suminf.    1.53602 (10) obj. -12.485 iterations 1
Cbc0038I Pass  20: suminf.    0.83480 (3) obj. -11.1162 iterations 13
Cbc0038I Pass  21: suminf.    0.60464 (3) obj. -12.0369 iterations 2
Cbc0038I Pass  22: suminf.    0.97027 (3) obj. -11.1162 iterations 7
Cbc0038I Pass  23: suminf.    0.49144 (2) obj. -11.1162 iterations 3
Cbc0038I Pass  24: suminf.    0.79868 (2) obj. -11.1162 iterations 3
Cbc0038I Pass  25: suminf.    2.37641 (13) obj. -11.1162 iterations 24
Cbc0038I Pass  26: suminf.    2.37126 (13) obj. -11.1162 iterations 7
Cbc0038I Pass  27: suminf.    1.24480 (5) obj. -11.1162 iterations 14
Cbc0038I Pass  28: suminf.    0.88912 (7) obj. -11.1162 iterations 11
Cbc0038I Pass  29: suminf.    0.83387 (4) obj. -11.1162 iterations 12
Cbc0038I Pass  30: suminf.    0.68793 (6) obj. -11.1162 iterations 6
Cbc0038I Pass  31: suminf.    0.96415 (4) obj. -11.1162 iterations 8
Cbc0038I Pass  32: suminf.    1.55251 (11) obj. -11.1162 iterations 22
Cbc0038I Pass  33: suminf.    1.54008 (10) obj. -11.1162 iterations 5
Cbc0038I Rounding solution of -7.5538 is better than previous of -6.59114

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 86 columns, reduced to 20 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.5538 to -9.81492 (0.03 seconds)
Cbc0038I Round again with cutoff of -19.2612
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.29010 (24) obj. -41.7065 iterations 0
Cbc0038I Pass  34: suminf.    3.29010 (24) obj. -41.7065 iterations 1
Cbc0038I Pass  35: suminf.    1.45677 (11) obj. -19.2612 iterations 17
Cbc0038I Pass  36: suminf.    1.45677 (11) obj. -19.2612 iterations 0
Cbc0038I Pass  37: suminf.    0.65792 (5) obj. -19.2612 iterations 18
Cbc0038I Pass  38: suminf.    0.65792 (5) obj. -19.2612 iterations 0
Cbc0038I Pass  39: suminf.    0.96923 (4) obj. -19.2612 iterations 11
Cbc0038I Pass  40: suminf.    0.96923 (4) obj. -19.2612 iterations 1
Cbc0038I Pass  41: suminf.    0.88489 (3) obj. -19.2612 iterations 4
Cbc0038I Pass  42: suminf.    0.84749 (3) obj. -19.2612 iterations 1
Cbc0038I Pass  43: suminf.    0.88860 (3) obj. -19.2612 iterations 3
Cbc0038I Pass  44: suminf.    1.93254 (12) obj. -19.2612 iterations 27
Cbc0038I Pass  45: suminf.    1.20693 (8) obj. -19.2612 iterations 6
Cbc0038I Pass  46: suminf.    1.72836 (6) obj. -19.2612 iterations 9
Cbc0038I Pass  47: suminf.    1.72836 (6) obj. -19.2612 iterations 0
Cbc0038I Pass  48: suminf.    1.23775 (9) obj. -19.2612 iterations 8
Cbc0038I Pass  49: suminf.    0.94415 (7) obj. -19.2612 iterations 3
Cbc0038I Pass  50: suminf.    1.32584 (6) obj. -19.2612 iterations 15
Cbc0038I Pass  51: suminf.    0.86678 (5) obj. -19.2612 iterations 6
Cbc0038I Pass  52: suminf.    2.04899 (10) obj. -19.2612 iterations 18
Cbc0038I Pass  53: suminf.    1.61000 (9) obj. -19.2612 iterations 6
Cbc0038I Pass  54: suminf.    0.99239 (7) obj. -19.2612 iterations 8
Cbc0038I Pass  55: suminf.    0.99239 (7) obj. -19.2612 iterations 0
Cbc0038I Pass  56: suminf.    2.28386 (9) obj. -19.2612 iterations 8
Cbc0038I Pass  57: suminf.    1.23671 (9) obj. -19.2612 iterations 8
Cbc0038I Pass  58: suminf.    0.86035 (6) obj. -19.2612 iterations 5
Cbc0038I Pass  59: suminf.    1.04422 (7) obj. -19.2612 iterations 3
Cbc0038I Pass  60: suminf.    1.04354 (10) obj. -19.2612 iterations 4
Cbc0038I Pass  61: suminf.    1.81668 (7) obj. -19.2612 iterations 17
Cbc0038I Pass  62: suminf.    1.08412 (6) obj. -19.2612 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 86 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -9.81492 - took 0.03 seconds
Cbc0012I Integer solution of -9.81492 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 75 rows 86 columns, reduced to 6 rows 6 columns
Cbc0031I 47 added rows had average density of 22.87234
Cbc0013I At root node, 47 cuts changed objective from -51.841096 to -11.903079 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8734 row cuts average 6.2 elements, 3 column cuts (39 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1323 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 939 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 310 row cuts average 35.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.647 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.81492 best solution, best possible -11.903079 (1.88 seconds)
Cbc0001I Search completed - best objective -9.814920000000008, took 3195 iterations and 8 nodes (2.04 seconds)
Cbc0032I Strong branching done 192 times (3428 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       2.06

