Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 9.789e-06 - average 5.23476e-08, 14 fixed columns
Coin0506I Presolve 157 (-30) rows, 85 (-16) columns and 476 (-92) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 2.5236562 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Coin0511I After Postsolve, objective 45.594969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Coin0511I After Postsolve, objective 45.594969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.59496892 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 13.1892
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.0285 iterations 81
Cbc0038I Solution found of 10.0285
Cbc0038I Relaxing continuous gives 10.0285
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 107 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 10.0285 to -6.55949 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.4631
Cbc0038I Pass   2: suminf.    2.18765 (9) obj. -10.4631 iterations 20
Cbc0038I Pass   3: suminf.    1.71898 (35) obj. -10.4631 iterations 24
Cbc0038I Pass   4: suminf.    1.66572 (7) obj. -10.4631 iterations 36
Cbc0038I Pass   5: suminf.    0.86109 (6) obj. -10.4631 iterations 2
Cbc0038I Pass   6: suminf.    1.43766 (6) obj. -10.4631 iterations 11
Cbc0038I Pass   7: suminf.    1.43766 (6) obj. -10.4631 iterations 0
Cbc0038I Pass   8: suminf.    1.47722 (5) obj. -10.4631 iterations 7
Cbc0038I Pass   9: suminf.    0.70837 (3) obj. -10.4631 iterations 3
Cbc0038I Pass  10: suminf.    1.26637 (5) obj. -10.4631 iterations 3
Cbc0038I Pass  11: suminf.    1.26637 (5) obj. -10.4631 iterations 0
Cbc0038I Pass  12: suminf.    1.62099 (5) obj. -10.4631 iterations 4
Cbc0038I Pass  13: suminf.    1.62099 (5) obj. -10.4631 iterations 0
Cbc0038I Pass  14: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  15: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  16: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  17: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  18: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  19: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  20: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  21: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  22: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  23: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  24: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  25: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  26: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  27: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  28: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  29: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  30: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  31: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 121 rows 66 columns - 1 fixed gives 113, 65 - ok now
Cbc0038I Full problem 187 rows 101 columns, reduced to 113 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -6.55949 to -6.61962 (0.14 seconds)
Cbc0038I Round again with cutoff of -17.4895
Cbc0038I Pass  31: suminf.    2.76630 (9) obj. -17.4895 iterations 0
Cbc0038I Pass  32: suminf.    2.12427 (7) obj. -17.4895 iterations 14
Cbc0038I Pass  33: suminf.    2.03794 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  34: suminf.    1.32032 (6) obj. -17.4895 iterations 12
Cbc0038I Pass  35: suminf.    1.15733 (6) obj. -17.4895 iterations 3
Cbc0038I Pass  36: suminf.    2.12427 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  37: suminf.    5.00486 (15) obj. -17.4895 iterations 28
Cbc0038I Pass  38: suminf.    2.52712 (10) obj. -17.4895 iterations 20
Cbc0038I Pass  39: suminf.    1.68354 (6) obj. -17.4895 iterations 16
Cbc0038I Pass  40: suminf.    1.68354 (6) obj. -17.4895 iterations 0
Cbc0038I Pass  41: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  42: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  43: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  44: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  45: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  46: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  47: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  48: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  49: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  50: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  51: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  52: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  53: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  54: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  55: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  56: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  57: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  58: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  59: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  60: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 115 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -6.61962 - took 0.18 seconds
Cbc0012I Integer solution of -6.619618 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 111 rows 60 columns
Cbc0031I 27 added rows had average density of 76
Cbc0013I At root node, 27 cuts changed objective from -45.594969 to -33.994625 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20210 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2531 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.619618 best solution, best possible -33.994625 (1.83 seconds)
Cbc0012I Integer solution of -7.6741791 found by rounding after 11264 iterations and 40 nodes (2.07 seconds)
Cbc0001I Search completed - best objective -7.674179120000005, took 12158 iterations and 68 nodes (2.15 seconds)
Cbc0032I Strong branching done 856 times (15484 iterations), fathomed 6 nodes and fixed 66 variables
Cbc0035I Maximum depth 15, 210 variables fixed on reduced cost
Total time (CPU seconds):       2.04   (Wallclock seconds):       2.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-69) rows, 148 (-54) columns and 2735 (-2918) elements
Clp1000I sum of infeasibilities 1.97764e-07 - average 1.46492e-09, 23 fixed columns
Coin0506I Presolve 116 (-19) rows, 125 (-23) columns and 2144 (-591) elements
Clp0006I 0  Obj 46.239382 Dual inf 7.773439 (124)
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 2.0279473 - largest nonzero change 2.6069221e-05 ( 0.0014083952%) - largest zero change 2.9482467e-05
Clp0000I Optimal - objective value 63.175674
Clp0000I Optimal - objective value 63.175674
Coin0511I After Postsolve, objective 63.175674, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 63.175674
Clp0000I Optimal - objective value 63.175674
Clp0000I Optimal - objective value 63.175674
Clp0000I Optimal - objective value 63.175674
Coin0511I After Postsolve, objective 63.175674, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.17567434 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 150 columns (150 integer (150 of which binary)) and 2793 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.774%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 11.3737
Cbc0038I Pass   1: suminf.    3.04516 (37) obj. -12.8065 iterations 31
Cbc0038I Pass   2: suminf.    3.04516 (37) obj. -12.8065 iterations 1
Cbc0038I Pass   3: suminf.    1.72327 (23) obj. 6.22353 iterations 14
Cbc0038I Pass   4: suminf.    0.67865 (10) obj. 22.7788 iterations 13
Cbc0038I Solution found of 32.1002
Cbc0038I Rounding solution of 13.9932 is better than previous of 32.1002

Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 150 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 8.24384
Cbc0038I Pass   5: suminf.    3.04516 (37) obj. -12.8065 iterations 0
Cbc0038I Pass   6: suminf.    3.04516 (37) obj. -12.8065 iterations 1
Cbc0038I Pass   7: suminf.    1.02299 (11) obj. 8.24384 iterations 38
Cbc0038I Pass   8: suminf.    0.83586 (10) obj. 8.24384 iterations 4
Cbc0038I Pass   9: suminf.    0.61599 (7) obj. 8.24384 iterations 14
Cbc0038I Pass  10: suminf.    0.56991 (6) obj. 8.24384 iterations 3
Cbc0038I Pass  11: suminf.    1.29860 (10) obj. 8.24384 iterations 9
Cbc0038I Pass  12: suminf.    1.29860 (10) obj. 8.24384 iterations 0
Cbc0038I Pass  13: suminf.    0.97628 (4) obj. 8.24384 iterations 16
Cbc0038I Pass  14: suminf.    0.96167 (4) obj. 8.24384 iterations 4
Cbc0038I Pass  15: suminf.    0.94899 (3) obj. 8.24384 iterations 7
Cbc0038I Pass  16: suminf.    0.94899 (3) obj. 8.24384 iterations 0
Cbc0038I Pass  17: suminf.    0.96167 (4) obj. 8.24384 iterations 9
Cbc0038I Pass  18: suminf.    2.19363 (20) obj. 8.24384 iterations 55
Cbc0038I Pass  19: suminf.    2.15440 (20) obj. 8.24384 iterations 9
Cbc0038I Pass  20: suminf.    1.69574 (9) obj. 8.24384 iterations 30
Cbc0038I Pass  21: suminf.    1.69574 (9) obj. 8.24384 iterations 0
Cbc0038I Pass  22: suminf.    1.33407 (4) obj. 8.24384 iterations 19
Cbc0038I Pass  23: suminf.    1.33407 (4) obj. 8.24384 iterations 4
Cbc0038I Pass  24: suminf.    0.95597 (5) obj. 8.24384 iterations 4
Cbc0038I Pass  25: suminf.    0.95597 (5) obj. 8.24384 iterations 0
Cbc0038I Pass  26: suminf.    1.33407 (4) obj. 8.24384 iterations 7
Cbc0038I Pass  27: suminf.    2.16909 (20) obj. 8.24384 iterations 35
Cbc0038I Pass  28: suminf.    2.14085 (17) obj. 8.24384 iterations 11
Cbc0038I Pass  29: suminf.    0.95532 (5) obj. 8.24384 iterations 20
Cbc0038I Pass  30: suminf.    0.89248 (5) obj. 8.24384 iterations 7
Cbc0038I Pass  31: suminf.    0.91145 (6) obj. 8.24384 iterations 9
Cbc0038I Pass  32: suminf.    0.91145 (6) obj. 8.24384 iterations 0
Cbc0038I Pass  33: suminf.    1.11923 (6) obj. 8.24384 iterations 9
Cbc0038I Pass  34: suminf.    2.07496 (17) obj. 8.24384 iterations 29
Cbc0038I Rounding solution of 11.0367 is better than previous of 13.9932

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 150 columns, reduced to 39 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -2.10479
Cbc0038I Pass  34: suminf.    3.04516 (37) obj. -12.8065 iterations 0
Cbc0038I Pass  35: suminf.    3.04516 (37) obj. -12.8065 iterations 1
Cbc0038I Pass  36: suminf.    1.47583 (29) obj. -2.10479 iterations 34
Cbc0038I Pass  37: suminf.    1.45929 (22) obj. -2.10479 iterations 1
Cbc0038I Pass  38: suminf.    2.48212 (15) obj. -2.10479 iterations 18
Cbc0038I Pass  39: suminf.    2.41962 (14) obj. -2.10479 iterations 4
Cbc0038I Pass  40: suminf.    2.44897 (14) obj. -2.10479 iterations 24
Cbc0038I Pass  41: suminf.    1.62456 (7) obj. -2.10479 iterations 4
Cbc0038I Pass  42: suminf.    1.36091 (8) obj. -2.10479 iterations 10
Cbc0038I Pass  43: suminf.    2.44897 (14) obj. -2.10479 iterations 12
Cbc0038I Pass  44: suminf.    2.21980 (14) obj. -2.10479 iterations 28
Cbc0038I Pass  45: suminf.    2.21980 (14) obj. -2.10479 iterations 6
Cbc0038I Pass  46: suminf.    1.91355 (8) obj. -2.10479 iterations 17
Cbc0038I Pass  47: suminf.    1.45222 (11) obj. -2.10479 iterations 5
Cbc0038I Pass  48: suminf.    1.91058 (8) obj. -2.10479 iterations 15
Cbc0038I Pass  49: suminf.    1.91058 (8) obj. -2.10479 iterations 2
Cbc0038I Pass  50: suminf.    2.32942 (9) obj. -2.10479 iterations 9
Cbc0038I Pass  51: suminf.    1.60850 (7) obj. -2.10479 iterations 9
Cbc0038I Pass  52: suminf.    1.27567 (8) obj. -2.10479 iterations 5
Cbc0038I Pass  53: suminf.    1.69233 (7) obj. -2.10479 iterations 7
Cbc0038I Pass  54: suminf.    2.76954 (16) obj. -2.10479 iterations 30
Cbc0038I Pass  55: suminf.    2.50461 (15) obj. -2.10479 iterations 6
Cbc0038I Pass  56: suminf.    1.48122 (9) obj. -2.10479 iterations 19
Cbc0038I Pass  57: suminf.    1.15964 (7) obj. -2.29639 iterations 10
Cbc0038I Pass  58: suminf.    2.85174 (17) obj. -2.10479 iterations 19
Cbc0038I Pass  59: suminf.    2.85174 (17) obj. -2.10479 iterations 3
Cbc0038I Pass  60: suminf.    2.17598 (12) obj. -2.10479 iterations 22
Cbc0038I Pass  61: suminf.    2.17598 (12) obj. -2.10479 iterations 2
Cbc0038I Pass  62: suminf.    2.19161 (10) obj. -2.10479 iterations 10
Cbc0038I Pass  63: suminf.    1.80599 (11) obj. -2.10479 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 150 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 11.0367 to 8.08109 (0.13 seconds)
Cbc0038I Round again with cutoff of -14.5231
Cbc0038I Pass  63: suminf.    3.52457 (42) obj. -14.5231 iterations 1
Cbc0038I Pass  64: suminf.    3.11980 (38) obj. -14.5231 iterations 1
Cbc0038I Pass  65: suminf.    3.68451 (35) obj. -14.5231 iterations 23
Cbc0038I Pass  66: suminf.    3.68451 (35) obj. -14.5231 iterations 2
Cbc0038I Pass  67: suminf.    3.04948 (21) obj. -14.5231 iterations 25
Cbc0038I Pass  68: suminf.    3.04948 (21) obj. -14.5231 iterations 3
Cbc0038I Pass  69: suminf.    3.35561 (24) obj. -14.5231 iterations 20
Cbc0038I Pass  70: suminf.    2.88750 (17) obj. -14.5231 iterations 14
Cbc0038I Pass  71: suminf.    2.54035 (18) obj. -14.5231 iterations 6
Cbc0038I Pass  72: suminf.    4.99516 (21) obj. -14.5231 iterations 28
Cbc0038I Pass  73: suminf.    4.44218 (22) obj. -14.5231 iterations 4
Cbc0038I Pass  74: suminf.    4.23517 (23) obj. -14.5231 iterations 2
Cbc0038I Pass  75: suminf.    5.32273 (21) obj. -14.5231 iterations 12
Cbc0038I Pass  76: suminf.    4.44218 (22) obj. -14.5231 iterations 13
Cbc0038I Pass  77: suminf.    5.15981 (30) obj. -14.5231 iterations 50
Cbc0038I Pass  78: suminf.    3.60972 (24) obj. -14.5231 iterations 15
Cbc0038I Pass  79: suminf.    3.28449 (24) obj. -14.5231 iterations 2
Cbc0038I Pass  80: suminf.    2.66296 (17) obj. -14.5231 iterations 40
Cbc0038I Pass  81: suminf.    2.56034 (20) obj. -14.5231 iterations 9
Cbc0038I Pass  82: suminf.    2.66296 (17) obj. -14.5231 iterations 9
Cbc0038I Pass  83: suminf.    4.98118 (24) obj. -14.5231 iterations 24
Cbc0038I Pass  84: suminf.    3.65738 (22) obj. -14.5231 iterations 6
Cbc0038I Pass  85: suminf.    3.03554 (20) obj. -14.5231 iterations 21
Cbc0038I Pass  86: suminf.    2.96148 (18) obj. -14.5231 iterations 9
Cbc0038I Pass  87: suminf.    3.53053 (24) obj. -14.5231 iterations 20
Cbc0038I Pass  88: suminf.    3.53053 (24) obj. -14.5231 iterations 2
Cbc0038I Pass  89: suminf.    2.93175 (17) obj. -14.5231 iterations 16
Cbc0038I Pass  90: suminf.    2.92755 (20) obj. -14.5231 iterations 12
Cbc0038I Pass  91: suminf.    6.01641 (22) obj. -14.5231 iterations 21
Cbc0038I Pass  92: suminf.    6.01641 (22) obj. -14.5231 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 150 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of 8.08109 - took 0.12 seconds
Cbc0012I Integer solution of 8.0810929 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 137 rows 150 columns, reduced to 16 rows 17 columns
Cbc0012I Integer solution of 4.3965349 found by DiveCoefficient after 6017 iterations and 0 nodes (3.20 seconds)
Cbc0031I 71 added rows had average density of 46.690141
Cbc0013I At root node, 71 cuts changed objective from -43.499321 to -12.873277 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22235 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.203 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1917 row cuts average 145.1 elements, 0 column cuts (0 active)  in 0.306 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1194 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 845 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 330 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.530 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 4.3965349 best solution, best possible -12.873277 (3.36 seconds)
Cbc0012I Integer solution of 0.80005388 found by rounding after 6156 iterations and 1 nodes (3.37 seconds)
Cbc0004I Integer solution of -4.18986 found after 6266 iterations and 1 nodes (3.38 seconds)
Cbc0010I After 3 nodes, 2 on tree, -4.18986 best solution, best possible -12.50592 (4.14 seconds)
Cbc0010I After 24 nodes, 8 on tree, -4.18986 best solution, best possible -12.50592 (4.85 seconds)
Cbc0016I Integer solution of -4.834795 found by strong branching after 8349 iterations and 28 nodes (4.90 seconds)
Cbc0012I Integer solution of -7.6741791 found by rounding after 8913 iterations and 38 nodes (4.98 seconds)
Cbc0038I Full problem 137 rows 150 columns, reduced to 73 rows 84 columns
Cbc0001I Search completed - best objective -7.674179120000005, took 9807 iterations and 56 nodes (5.19 seconds)
Cbc0032I Strong branching done 838 times (21106 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 22, 163 variables fixed on reduced cost
Total time (CPU seconds):       4.51   (Wallclock seconds):       5.22

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 9.789e-06 - average 5.23476e-08, 14 fixed columns
Coin0506I Presolve 157 (-30) rows, 85 (-16) columns and 476 (-92) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 2.5236562 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Coin0511I After Postsolve, objective 45.594969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Clp0000I Optimal - objective value 45.594969
Coin0511I After Postsolve, objective 45.594969, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.59496892 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 13.1892
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.0285 iterations 81
Cbc0038I Solution found of 10.0285
Cbc0038I Relaxing continuous gives 10.0285
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 107 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 10.0285 to -6.55949 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.4631
Cbc0038I Pass   2: suminf.    2.18765 (9) obj. -10.4631 iterations 20
Cbc0038I Pass   3: suminf.    1.71898 (35) obj. -10.4631 iterations 24
Cbc0038I Pass   4: suminf.    1.66572 (7) obj. -10.4631 iterations 36
Cbc0038I Pass   5: suminf.    0.86109 (6) obj. -10.4631 iterations 2
Cbc0038I Pass   6: suminf.    1.43766 (6) obj. -10.4631 iterations 11
Cbc0038I Pass   7: suminf.    1.43766 (6) obj. -10.4631 iterations 0
Cbc0038I Pass   8: suminf.    1.47722 (5) obj. -10.4631 iterations 7
Cbc0038I Pass   9: suminf.    0.70837 (3) obj. -10.4631 iterations 3
Cbc0038I Pass  10: suminf.    1.26637 (5) obj. -10.4631 iterations 3
Cbc0038I Pass  11: suminf.    1.26637 (5) obj. -10.4631 iterations 0
Cbc0038I Pass  12: suminf.    1.62099 (5) obj. -10.4631 iterations 4
Cbc0038I Pass  13: suminf.    1.62099 (5) obj. -10.4631 iterations 0
Cbc0038I Pass  14: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  15: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  16: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  17: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  18: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  19: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  20: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  21: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  22: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  23: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  24: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  25: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  26: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I Pass  27: suminf.    1.65739 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  28: suminf.    1.62099 (5) obj. -10.4631 iterations 1
Cbc0038I Pass  29: suminf.    1.90748 (6) obj. -10.4631 iterations 6
Cbc0038I Pass  30: suminf.    1.90748 (6) obj. -10.4631 iterations 0
Cbc0038I Pass  31: suminf.    1.85804 (5) obj. -10.4631 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 121 rows 66 columns - 1 fixed gives 113, 65 - ok now
Cbc0038I Full problem 187 rows 101 columns, reduced to 113 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -6.55949 to -6.61962 (0.14 seconds)
Cbc0038I Round again with cutoff of -17.4895
Cbc0038I Pass  31: suminf.    2.76630 (9) obj. -17.4895 iterations 0
Cbc0038I Pass  32: suminf.    2.12427 (7) obj. -17.4895 iterations 14
Cbc0038I Pass  33: suminf.    2.03794 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  34: suminf.    1.32032 (6) obj. -17.4895 iterations 12
Cbc0038I Pass  35: suminf.    1.15733 (6) obj. -17.4895 iterations 3
Cbc0038I Pass  36: suminf.    2.12427 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  37: suminf.    5.00486 (15) obj. -17.4895 iterations 28
Cbc0038I Pass  38: suminf.    2.52712 (10) obj. -17.4895 iterations 20
Cbc0038I Pass  39: suminf.    1.68354 (6) obj. -17.4895 iterations 16
Cbc0038I Pass  40: suminf.    1.68354 (6) obj. -17.4895 iterations 0
Cbc0038I Pass  41: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  42: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  43: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  44: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  45: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  46: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  47: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  48: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  49: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  50: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  51: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  52: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  53: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  54: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  55: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I Pass  56: suminf.    2.12555 (7) obj. -17.4895 iterations 10
Cbc0038I Pass  57: suminf.    1.60395 (5) obj. -17.4895 iterations 6
Cbc0038I Pass  58: suminf.    1.55400 (5) obj. -17.4895 iterations 2
Cbc0038I Pass  59: suminf.    1.70365 (7) obj. -17.4895 iterations 9
Cbc0038I Pass  60: suminf.    1.68354 (6) obj. -17.4895 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 115 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -6.61962 - took 0.18 seconds
Cbc0012I Integer solution of -6.619618 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 111 rows 60 columns
Cbc0031I 27 added rows had average density of 76
Cbc0013I At root node, 27 cuts changed objective from -45.594969 to -33.994625 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20210 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2531 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.619618 best solution, best possible -33.994625 (1.70 seconds)
Cbc0012I Integer solution of -7.6741791 found by rounding after 11264 iterations and 40 nodes (1.93 seconds)
Cbc0001I Search completed - best objective -7.674179120000005, took 12158 iterations and 68 nodes (2.00 seconds)
Cbc0032I Strong branching done 856 times (15484 iterations), fathomed 6 nodes and fixed 66 variables
Cbc0035I Maximum depth 15, 210 variables fixed on reduced cost
Total time (CPU seconds):       1.94   (Wallclock seconds):       2.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-70) rows, 148 (-55) columns and 2735 (-2919) elements
Clp1000I sum of infeasibilities 1.97764e-07 - average 1.46492e-09, 23 fixed columns
Coin0506I Presolve 116 (-19) rows, 125 (-23) columns and 2144 (-591) elements
Clp0006I 0  Obj 46.239382 Dual inf 7.773439 (124)
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 2.0279473 - largest nonzero change 2.6069221e-05 ( 0.0014083952%) - largest zero change 2.9482467e-05
Clp0000I Optimal - objective value 63.175674
Clp0000I Optimal - objective value 63.175674
Coin0511I After Postsolve, objective 63.175674, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 63.175674
Clp0000I Optimal - objective value 63.175674
Clp0000I Optimal - objective value 63.175674
Clp0000I Optimal - objective value 63.175674
Coin0511I After Postsolve, objective 63.175674, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.17567434 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 150 columns (150 integer (150 of which binary)) and 2793 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.774%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 11.3737
Cbc0038I Pass   1: suminf.    3.04516 (37) obj. -12.8065 iterations 31
Cbc0038I Pass   2: suminf.    3.04516 (37) obj. -12.8065 iterations 1
Cbc0038I Pass   3: suminf.    1.72327 (23) obj. 6.22353 iterations 14
Cbc0038I Pass   4: suminf.    0.67865 (10) obj. 22.7788 iterations 13
Cbc0038I Solution found of 32.1002
Cbc0038I Rounding solution of 13.9932 is better than previous of 32.1002

Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 150 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 8.24384
Cbc0038I Pass   5: suminf.    3.04516 (37) obj. -12.8065 iterations 0
Cbc0038I Pass   6: suminf.    3.04516 (37) obj. -12.8065 iterations 1
Cbc0038I Pass   7: suminf.    1.02299 (11) obj. 8.24384 iterations 38
Cbc0038I Pass   8: suminf.    0.83586 (10) obj. 8.24384 iterations 4
Cbc0038I Pass   9: suminf.    0.61599 (7) obj. 8.24384 iterations 14
Cbc0038I Pass  10: suminf.    0.56991 (6) obj. 8.24384 iterations 3
Cbc0038I Pass  11: suminf.    1.29860 (10) obj. 8.24384 iterations 9
Cbc0038I Pass  12: suminf.    1.29860 (10) obj. 8.24384 iterations 0
Cbc0038I Pass  13: suminf.    0.97628 (4) obj. 8.24384 iterations 16
Cbc0038I Pass  14: suminf.    0.96167 (4) obj. 8.24384 iterations 4
Cbc0038I Pass  15: suminf.    0.94899 (3) obj. 8.24384 iterations 7
Cbc0038I Pass  16: suminf.    0.94899 (3) obj. 8.24384 iterations 0
Cbc0038I Pass  17: suminf.    0.96167 (4) obj. 8.24384 iterations 9
Cbc0038I Pass  18: suminf.    2.19363 (20) obj. 8.24384 iterations 55
Cbc0038I Pass  19: suminf.    2.15440 (20) obj. 8.24384 iterations 9
Cbc0038I Pass  20: suminf.    1.69574 (9) obj. 8.24384 iterations 30
Cbc0038I Pass  21: suminf.    1.69574 (9) obj. 8.24384 iterations 0
Cbc0038I Pass  22: suminf.    1.33407 (4) obj. 8.24384 iterations 19
Cbc0038I Pass  23: suminf.    1.33407 (4) obj. 8.24384 iterations 4
Cbc0038I Pass  24: suminf.    0.95597 (5) obj. 8.24384 iterations 4
Cbc0038I Pass  25: suminf.    0.95597 (5) obj. 8.24384 iterations 0
Cbc0038I Pass  26: suminf.    1.33407 (4) obj. 8.24384 iterations 7
Cbc0038I Pass  27: suminf.    2.16909 (20) obj. 8.24384 iterations 35
Cbc0038I Pass  28: suminf.    2.14085 (17) obj. 8.24384 iterations 11
Cbc0038I Pass  29: suminf.    0.95532 (5) obj. 8.24384 iterations 20
Cbc0038I Pass  30: suminf.    0.89248 (5) obj. 8.24384 iterations 7
Cbc0038I Pass  31: suminf.    0.91145 (6) obj. 8.24384 iterations 9
Cbc0038I Pass  32: suminf.    0.91145 (6) obj. 8.24384 iterations 0
Cbc0038I Pass  33: suminf.    1.11923 (6) obj. 8.24384 iterations 9
Cbc0038I Pass  34: suminf.    2.07496 (17) obj. 8.24384 iterations 29
Cbc0038I Rounding solution of 11.0367 is better than previous of 13.9932

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 150 columns, reduced to 39 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -2.10479
Cbc0038I Pass  34: suminf.    3.04516 (37) obj. -12.8065 iterations 0
Cbc0038I Pass  35: suminf.    3.04516 (37) obj. -12.8065 iterations 1
Cbc0038I Pass  36: suminf.    1.47583 (29) obj. -2.10479 iterations 34
Cbc0038I Pass  37: suminf.    1.45929 (22) obj. -2.10479 iterations 1
Cbc0038I Pass  38: suminf.    2.48212 (15) obj. -2.10479 iterations 18
Cbc0038I Pass  39: suminf.    2.41962 (14) obj. -2.10479 iterations 4
Cbc0038I Pass  40: suminf.    2.44897 (14) obj. -2.10479 iterations 24
Cbc0038I Pass  41: suminf.    1.62456 (7) obj. -2.10479 iterations 4
Cbc0038I Pass  42: suminf.    1.36091 (8) obj. -2.10479 iterations 10
Cbc0038I Pass  43: suminf.    2.44897 (14) obj. -2.10479 iterations 12
Cbc0038I Pass  44: suminf.    2.21980 (14) obj. -2.10479 iterations 28
Cbc0038I Pass  45: suminf.    2.21980 (14) obj. -2.10479 iterations 6
Cbc0038I Pass  46: suminf.    1.91355 (8) obj. -2.10479 iterations 17
Cbc0038I Pass  47: suminf.    1.45222 (11) obj. -2.10479 iterations 5
Cbc0038I Pass  48: suminf.    1.91058 (8) obj. -2.10479 iterations 15
Cbc0038I Pass  49: suminf.    1.91058 (8) obj. -2.10479 iterations 2
Cbc0038I Pass  50: suminf.    2.32942 (9) obj. -2.10479 iterations 9
Cbc0038I Pass  51: suminf.    1.60850 (7) obj. -2.10479 iterations 9
Cbc0038I Pass  52: suminf.    1.27567 (8) obj. -2.10479 iterations 5
Cbc0038I Pass  53: suminf.    1.69233 (7) obj. -2.10479 iterations 7
Cbc0038I Pass  54: suminf.    2.76954 (16) obj. -2.10479 iterations 30
Cbc0038I Pass  55: suminf.    2.50461 (15) obj. -2.10479 iterations 6
Cbc0038I Pass  56: suminf.    1.48122 (9) obj. -2.10479 iterations 19
Cbc0038I Pass  57: suminf.    1.15964 (7) obj. -2.29639 iterations 10
Cbc0038I Pass  58: suminf.    2.85174 (17) obj. -2.10479 iterations 19
Cbc0038I Pass  59: suminf.    2.85174 (17) obj. -2.10479 iterations 3
Cbc0038I Pass  60: suminf.    2.17598 (12) obj. -2.10479 iterations 22
Cbc0038I Pass  61: suminf.    2.17598 (12) obj. -2.10479 iterations 2
Cbc0038I Pass  62: suminf.    2.19161 (10) obj. -2.10479 iterations 10
Cbc0038I Pass  63: suminf.    1.80599 (11) obj. -2.10479 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 150 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 11.0367 to 8.08109 (0.13 seconds)
Cbc0038I Round again with cutoff of -14.5231
Cbc0038I Pass  63: suminf.    3.52457 (42) obj. -14.5231 iterations 1
Cbc0038I Pass  64: suminf.    3.11980 (38) obj. -14.5231 iterations 1
Cbc0038I Pass  65: suminf.    3.68451 (35) obj. -14.5231 iterations 23
Cbc0038I Pass  66: suminf.    3.68451 (35) obj. -14.5231 iterations 2
Cbc0038I Pass  67: suminf.    3.04948 (21) obj. -14.5231 iterations 25
Cbc0038I Pass  68: suminf.    3.04948 (21) obj. -14.5231 iterations 3
Cbc0038I Pass  69: suminf.    3.35561 (24) obj. -14.5231 iterations 20
Cbc0038I Pass  70: suminf.    2.88750 (17) obj. -14.5231 iterations 14
Cbc0038I Pass  71: suminf.    2.54035 (18) obj. -14.5231 iterations 6
Cbc0038I Pass  72: suminf.    4.99516 (21) obj. -14.5231 iterations 28
Cbc0038I Pass  73: suminf.    4.44218 (22) obj. -14.5231 iterations 4
Cbc0038I Pass  74: suminf.    4.23517 (23) obj. -14.5231 iterations 2
Cbc0038I Pass  75: suminf.    5.32273 (21) obj. -14.5231 iterations 12
Cbc0038I Pass  76: suminf.    4.44218 (22) obj. -14.5231 iterations 13
Cbc0038I Pass  77: suminf.    5.15981 (30) obj. -14.5231 iterations 50
Cbc0038I Pass  78: suminf.    3.60972 (24) obj. -14.5231 iterations 15
Cbc0038I Pass  79: suminf.    3.28449 (24) obj. -14.5231 iterations 2
Cbc0038I Pass  80: suminf.    2.66296 (17) obj. -14.5231 iterations 40
Cbc0038I Pass  81: suminf.    2.56034 (20) obj. -14.5231 iterations 9
Cbc0038I Pass  82: suminf.    2.66296 (17) obj. -14.5231 iterations 9
Cbc0038I Pass  83: suminf.    4.98118 (24) obj. -14.5231 iterations 24
Cbc0038I Pass  84: suminf.    3.65738 (22) obj. -14.5231 iterations 6
Cbc0038I Pass  85: suminf.    3.03554 (20) obj. -14.5231 iterations 21
Cbc0038I Pass  86: suminf.    2.96148 (18) obj. -14.5231 iterations 9
Cbc0038I Pass  87: suminf.    3.53053 (24) obj. -14.5231 iterations 20
Cbc0038I Pass  88: suminf.    3.53053 (24) obj. -14.5231 iterations 2
Cbc0038I Pass  89: suminf.    2.93175 (17) obj. -14.5231 iterations 16
Cbc0038I Pass  90: suminf.    2.92755 (20) obj. -14.5231 iterations 12
Cbc0038I Pass  91: suminf.    6.01641 (22) obj. -14.5231 iterations 21
Cbc0038I Pass  92: suminf.    6.01641 (22) obj. -14.5231 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 150 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of 8.08109 - took 0.11 seconds
Cbc0012I Integer solution of 8.0810929 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 137 rows 150 columns, reduced to 16 rows 17 columns
Cbc0012I Integer solution of 4.3965349 found by DiveCoefficient after 6017 iterations and 0 nodes (2.80 seconds)
Cbc0031I 71 added rows had average density of 46.690141
Cbc0013I At root node, 71 cuts changed objective from -43.499321 to -12.873277 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22235 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1917 row cuts average 145.1 elements, 0 column cuts (0 active)  in 0.281 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1194 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 845 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 330 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.456 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 4.3965349 best solution, best possible -12.873277 (2.96 seconds)
Cbc0012I Integer solution of 0.80005388 found by rounding after 6156 iterations and 1 nodes (2.97 seconds)
Cbc0004I Integer solution of -4.18986 found after 6266 iterations and 1 nodes (2.98 seconds)
Cbc0010I After 3 nodes, 2 on tree, -4.18986 best solution, best possible -12.50592 (3.72 seconds)
Cbc0010I After 25 nodes, 9 on tree, -4.18986 best solution, best possible -12.50592 (4.43 seconds)
Cbc0016I Integer solution of -4.834795 found by strong branching after 8349 iterations and 28 nodes (4.46 seconds)
Cbc0012I Integer solution of -7.6741791 found by rounding after 8913 iterations and 38 nodes (4.53 seconds)
Cbc0038I Full problem 137 rows 150 columns, reduced to 73 rows 84 columns
Cbc0001I Search completed - best objective -7.674179120000005, took 9807 iterations and 56 nodes (4.74 seconds)
Cbc0032I Strong branching done 838 times (21106 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 22, 163 variables fixed on reduced cost
Total time (CPU seconds):       4.27   (Wallclock seconds):       4.77

