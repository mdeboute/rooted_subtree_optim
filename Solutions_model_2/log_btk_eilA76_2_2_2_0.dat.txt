Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 75 (-3) columns and 407 (-46) elements
Clp1000I sum of infeasibilities 0.000165053 - average 1.2504e-06, 13 fixed columns
Coin0506I Presolve 110 (-22) rows, 62 (-13) columns and 337 (-70) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.1893502 - largest nonzero change 0 ( 0%) - largest zero change 2.4989863e-05
Clp0000I Optimal - objective value 47.93226
Clp0000I Optimal - objective value 47.93226
Coin0511I After Postsolve, objective 47.93226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.93226
Clp0000I Optimal - objective value 47.93226
Clp0000I Optimal - objective value 47.93226
Coin0511I After Postsolve, objective 47.93226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.93226038 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 75 columns (74 integer (74 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.148%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.00354
Cbc0038I Solution found of -5.69443
Cbc0038I Relaxing continuous gives -11.5095
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 60 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -11.5095 to -17.1338 (0.03 seconds)
Cbc0038I Round again with cutoff of -20.2137
Cbc0038I Pass   1: suminf.    1.03344 (13) obj. -20.2137 iterations 34
Cbc0038I Pass   2: suminf.    1.78877 (5) obj. -20.2137 iterations 17
Cbc0038I Pass   3: suminf.    1.27141 (4) obj. -20.2137 iterations 3
Cbc0038I Pass   4: suminf.    1.15663 (4) obj. -20.2137 iterations 7
Cbc0038I Pass   5: suminf.    1.21109 (4) obj. -20.2137 iterations 2
Cbc0038I Pass   6: suminf.    3.33676 (8) obj. -20.2137 iterations 15
Cbc0038I Pass   7: suminf.    2.21191 (15) obj. -20.2137 iterations 13
Cbc0038I Pass   8: suminf.    1.60516 (5) obj. -20.2137 iterations 9
Cbc0038I Pass   9: suminf.    1.29302 (11) obj. -20.2137 iterations 9
Cbc0038I Pass  10: suminf.    1.29302 (11) obj. -20.2137 iterations 0
Cbc0038I Pass  11: suminf.    1.12716 (5) obj. -20.2137 iterations 16
Cbc0038I Pass  12: suminf.    0.67274 (3) obj. -20.2137 iterations 4
Cbc0038I Pass  13: suminf.    1.21775 (4) obj. -20.2137 iterations 3
Cbc0038I Pass  14: suminf.    1.15314 (4) obj. -20.2137 iterations 1
Cbc0038I Pass  15: suminf.    1.29862 (4) obj. -20.2137 iterations 4
Cbc0038I Pass  16: suminf.    1.07411 (3) obj. -20.2137 iterations 2
Cbc0038I Pass  17: suminf.    0.97670 (3) obj. -20.2137 iterations 2
Cbc0038I Pass  18: suminf.    0.86000 (3) obj. -20.2137 iterations 1
Cbc0038I Pass  19: suminf.    1.20952 (3) obj. -20.2137 iterations 2
Cbc0038I Pass  20: suminf.    2.51438 (8) obj. -20.2137 iterations 12
Cbc0038I Pass  21: suminf.    1.63100 (7) obj. -20.2137 iterations 9
Cbc0038I Pass  22: suminf.    1.34053 (5) obj. -20.2137 iterations 17
Cbc0038I Pass  23: suminf.    0.94055 (4) obj. -20.2137 iterations 1
Cbc0038I Pass  24: suminf.    0.94055 (4) obj. -20.2137 iterations 0
Cbc0038I Pass  25: suminf.    1.18631 (3) obj. -20.2137 iterations 4
Cbc0038I Pass  26: suminf.    1.18631 (3) obj. -20.2137 iterations 0
Cbc0038I Pass  27: suminf.    0.57766 (2) obj. -20.2137 iterations 4
Cbc0038I Pass  28: suminf.    0.53565 (2) obj. -20.2137 iterations 1
Cbc0038I Pass  29: suminf.    1.28955 (7) obj. -20.2137 iterations 18
Cbc0038I Pass  30: suminf.    0.79242 (5) obj. -20.2137 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -17.1338 to -17.7065 (0.08 seconds)
Cbc0038I Round again with cutoff of -25.7574
Cbc0038I Pass  30: suminf.    1.85854 (22) obj. -25.7574 iterations 10
Cbc0038I Pass  31: suminf.    2.50311 (8) obj. -25.7574 iterations 31
Cbc0038I Pass  32: suminf.    1.27165 (4) obj. -25.7574 iterations 11
Cbc0038I Pass  33: suminf.    1.61984 (5) obj. -25.7574 iterations 5
Cbc0038I Pass  34: suminf.    1.12603 (5) obj. -25.7574 iterations 2
Cbc0038I Pass  35: suminf.    1.18568 (4) obj. -25.7574 iterations 3
Cbc0038I Pass  36: suminf.    1.00013 (3) obj. -25.7574 iterations 1
Cbc0038I Pass  37: suminf.    1.00013 (3) obj. -25.7574 iterations 0
Cbc0038I Pass  38: suminf.    1.34759 (3) obj. -25.7574 iterations 2
Cbc0038I Pass  39: suminf.    0.96764 (3) obj. -25.7574 iterations 2
Cbc0038I Pass  40: suminf.    1.34759 (3) obj. -25.7574 iterations 2
Cbc0038I Pass  41: suminf.    2.58983 (9) obj. -25.7574 iterations 19
Cbc0038I Pass  42: suminf.    2.08164 (9) obj. -25.7574 iterations 6
Cbc0038I Pass  43: suminf.    3.32792 (15) obj. -25.7574 iterations 18
Cbc0038I Pass  44: suminf.    2.19210 (22) obj. -25.7574 iterations 12
Cbc0038I Pass  45: suminf.    2.03830 (30) obj. -25.7574 iterations 9
Cbc0038I Pass  46: suminf.    1.63281 (6) obj. -25.7574 iterations 26
Cbc0038I Pass  47: suminf.    1.53303 (5) obj. -25.7574 iterations 4
Cbc0038I Pass  48: suminf.    2.13596 (6) obj. -25.7574 iterations 7
Cbc0038I Pass  49: suminf.    1.14277 (6) obj. -25.7574 iterations 2
Cbc0038I Pass  50: suminf.    0.76206 (4) obj. -25.7574 iterations 2
Cbc0038I Pass  51: suminf.    1.53398 (4) obj. -25.7574 iterations 2
Cbc0038I Pass  52: suminf.    1.23504 (4) obj. -25.7574 iterations 4
Cbc0038I Pass  53: suminf.    2.10795 (6) obj. -25.7574 iterations 12
Cbc0038I Pass  54: suminf.    2.00935 (5) obj. -25.7574 iterations 1
Cbc0038I Pass  55: suminf.    1.42598 (9) obj. -25.7574 iterations 6
Cbc0038I Pass  56: suminf.    2.15397 (8) obj. -25.7574 iterations 12
Cbc0038I Pass  57: suminf.    1.61634 (6) obj. -25.7574 iterations 4
Cbc0038I Pass  58: suminf.    2.50704 (6) obj. -25.7574 iterations 4
Cbc0038I Pass  59: suminf.    1.61948 (5) obj. -25.7574 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 75 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -17.7065 - took 0.09 seconds
Cbc0012I Integer solution of -17.706516 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 132 rows 75 columns, reduced to 61 rows 34 columns
Cbc0031I 22 added rows had average density of 52.181818
Cbc0013I At root node, 22 cuts changed objective from -47.93226 to -38.771011 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7539 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1023 row cuts average 74.2 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 66.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -17.706516 best solution, best possible -38.771011 (0.72 seconds)
Cbc0012I Integer solution of -18.800176 found by rounding after 7408 iterations and 76 nodes (0.94 seconds)
Cbc0001I Search completed - best objective -18.800176, took 7459 iterations and 80 nodes (0.95 seconds)
Cbc0032I Strong branching done 850 times (13616 iterations), fathomed 5 nodes and fixed 34 variables
Cbc0035I Maximum depth 26, 184 variables fixed on reduced cost
Total time (CPU seconds):       0.93   (Wallclock seconds):       0.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-54) rows, 116 (-36) columns and 1855 (-1448) elements
Clp1000I sum of infeasibilities 1.91315e-07 - average 1.91315e-09, 22 fixed columns
Coin0506I Presolve 83 (-17) rows, 94 (-22) columns and 1342 (-513) elements
Clp0006I 0  Obj 50.423127 Dual inf 6.1576358 (93)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.8768043 - largest nonzero change 1.7860611e-05 ( 0.001262127%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 60.212125
Clp0000I Optimal - objective value 60.212125
Coin0511I After Postsolve, objective 60.212125, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.212125
Clp0000I Optimal - objective value 60.212125
Clp0000I Optimal - objective value 60.212125
Clp0000I Optimal - objective value 60.212125
Coin0511I After Postsolve, objective 60.212125, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.21212472 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 116 columns (116 integer (116 of which binary)) and 1857 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 4.334
Cbc0038I Pass   1: suminf.    1.98214 (32) obj. -48.6476 iterations 17
Cbc0038I Pass   2: suminf.    1.98214 (32) obj. -48.6476 iterations 1
Cbc0038I Pass   3: suminf.    0.19099 (5) obj. -9.61945 iterations 27
Cbc0038I Solution found of -4.81044
Cbc0038I Rounding solution of -4.81164 is better than previous of -4.81044

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -4.81164 to -8.95042 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.7133
Cbc0038I Pass   4: suminf.    1.98214 (32) obj. -48.6476 iterations 0
Cbc0038I Pass   5: suminf.    1.98214 (32) obj. -48.6476 iterations 1
Cbc0038I Pass   6: suminf.    0.57189 (8) obj. -13.7133 iterations 28
Cbc0038I Pass   7: suminf.    0.93278 (3) obj. -13.7133 iterations 11
Cbc0038I Pass   8: suminf.    0.47092 (5) obj. -13.7133 iterations 4
Cbc0038I Pass   9: suminf.    0.12807 (3) obj. -15.9416 iterations 2
Cbc0038I Pass  10: suminf.    0.46026 (2) obj. -13.7133 iterations 9
Cbc0038I Pass  11: suminf.    3.04631 (13) obj. -13.7133 iterations 30
Cbc0038I Pass  12: suminf.    0.85036 (8) obj. -13.7133 iterations 7
Cbc0038I Pass  13: suminf.    0.49194 (7) obj. -16.0734 iterations 3
Cbc0038I Pass  14: suminf.    1.08436 (7) obj. -13.7133 iterations 10
Cbc0038I Pass  15: suminf.    1.03468 (7) obj. -14.1902 iterations 4
Cbc0038I Pass  16: suminf.    2.05121 (7) obj. -13.7133 iterations 17
Cbc0038I Pass  17: suminf.    1.06602 (6) obj. -14.0722 iterations 10
Cbc0038I Pass  18: suminf.    2.11904 (15) obj. -13.7133 iterations 30
Cbc0038I Pass  19: suminf.    2.11904 (15) obj. -13.7133 iterations 4
Cbc0038I Pass  20: suminf.    0.92566 (7) obj. -13.7133 iterations 20
Cbc0038I Pass  21: suminf.    0.92566 (7) obj. -13.7133 iterations 0
Cbc0038I Pass  22: suminf.    0.96406 (4) obj. -13.7133 iterations 13
Cbc0038I Pass  23: suminf.    0.92378 (4) obj. -13.7133 iterations 2
Cbc0038I Pass  24: suminf.    0.44317 (7) obj. -13.7133 iterations 5
Cbc0038I Pass  25: suminf.    0.82969 (6) obj. -13.7133 iterations 10
Cbc0038I Pass  26: suminf.    0.63956 (6) obj. -14.4738 iterations 4
Cbc0038I Pass  27: suminf.    2.11588 (14) obj. -13.7133 iterations 20
Cbc0038I Pass  28: suminf.    0.79336 (12) obj. -15.3095 iterations 5
Cbc0038I Pass  29: suminf.    0.94182 (13) obj. -13.7133 iterations 19
Cbc0038I Pass  30: suminf.    0.48802 (6) obj. -13.7133 iterations 11
Cbc0038I Pass  31: suminf.    0.38270 (9) obj. -13.7133 iterations 16
Cbc0038I Pass  32: suminf.    0.26852 (5) obj. -13.7133 iterations 13
Cbc0038I Pass  33: suminf.    0.45657 (7) obj. -13.7133 iterations 12
Cbc0038I Rounding solution of -17.7065 is better than previous of -8.95042

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 53 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -17.7065 to -18.8002 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.3559
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.98214 (32) obj. -48.6476 iterations 0
Cbc0038I Pass  34: suminf.    1.98214 (32) obj. -48.6476 iterations 1
Cbc0038I Pass  35: suminf.    1.64896 (16) obj. -26.3559 iterations 21
Cbc0038I Pass  36: suminf.    0.84124 (16) obj. -26.3559 iterations 1
Cbc0038I Pass  37: suminf.    1.08990 (8) obj. -26.3559 iterations 32
Cbc0038I Pass  38: suminf.    0.97357 (7) obj. -26.3559 iterations 6
Cbc0038I Pass  39: suminf.    1.56814 (16) obj. -26.3559 iterations 24
Cbc0038I Pass  40: suminf.    1.56784 (17) obj. -26.3559 iterations 1
Cbc0038I Pass  41: suminf.    3.51895 (16) obj. -26.3559 iterations 14
Cbc0038I Pass  42: suminf.    2.49767 (14) obj. -26.3559 iterations 8
Cbc0038I Pass  43: suminf.    2.46671 (15) obj. -26.3559 iterations 4
Cbc0038I Pass  44: suminf.    1.97570 (12) obj. -26.3559 iterations 14
Cbc0038I Pass  45: suminf.    1.48054 (12) obj. -26.3559 iterations 4
Cbc0038I Pass  46: suminf.    1.82147 (13) obj. -26.3559 iterations 7
Cbc0038I Pass  47: suminf.    1.77079 (15) obj. -26.3559 iterations 5
Cbc0038I Pass  48: suminf.    3.89175 (15) obj. -26.3559 iterations 8
Cbc0038I Pass  49: suminf.    1.55169 (12) obj. -26.3559 iterations 10
Cbc0038I Pass  50: suminf.    1.04611 (10) obj. -26.7192 iterations 7
Cbc0038I Pass  51: suminf.    1.45278 (11) obj. -26.3559 iterations 8
Cbc0038I Pass  52: suminf.    0.83210 (14) obj. -26.3559 iterations 25
Cbc0038I Pass  53: suminf.    0.60125 (8) obj. -26.3559 iterations 9
Cbc0038I Pass  54: suminf.    0.71610 (16) obj. -26.3559 iterations 11
Cbc0038I Pass  55: suminf.    0.59742 (14) obj. -26.3559 iterations 3
Cbc0038I Pass  56: suminf.    1.68030 (16) obj. -26.3559 iterations 17
Cbc0038I Pass  57: suminf.    1.15926 (19) obj. -26.3559 iterations 8
Cbc0038I Pass  58: suminf.    3.82502 (16) obj. -26.3559 iterations 16
Cbc0038I Pass  59: suminf.    3.33305 (16) obj. -26.3559 iterations 5
Cbc0038I Pass  60: suminf.    2.72439 (16) obj. -26.3559 iterations 5
Cbc0038I Pass  61: suminf.    2.93266 (15) obj. -26.3559 iterations 11
Cbc0038I Pass  62: suminf.    2.93266 (15) obj. -26.3559 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 54 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -18.8002 - took 0.07 seconds
Cbc0012I Integer solution of -18.800176 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 100 rows 116 columns, reduced to 22 rows 24 columns
Cbc0031I 57 added rows had average density of 35.280702
Cbc0013I At root node, 57 cuts changed objective from -56.578179 to -23.722087 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9624 row cuts average 6.4 elements, 1 column cuts (2 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1018 row cuts average 101.8 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 147 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1062 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 385 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 116 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.659 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.800176 best solution, best possible -23.722087 (2.12 seconds)
Cbc0010I After 13 nodes, 8 on tree, -18.800176 best solution, best possible -23.722087 (2.84 seconds)
Cbc0001I Search completed - best objective -18.800176, took 4532 iterations and 30 nodes (3.12 seconds)
Cbc0032I Strong branching done 498 times (10040 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 14, 79 variables fixed on reduced cost
Total time (CPU seconds):       2.35   (Wallclock seconds):       3.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 75 (-3) columns and 407 (-46) elements
Clp1000I sum of infeasibilities 0.000165053 - average 1.2504e-06, 13 fixed columns
Coin0506I Presolve 110 (-22) rows, 62 (-13) columns and 337 (-70) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.1893502 - largest nonzero change 0 ( 0%) - largest zero change 2.4989863e-05
Clp0000I Optimal - objective value 47.93226
Clp0000I Optimal - objective value 47.93226
Coin0511I After Postsolve, objective 47.93226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.93226
Clp0000I Optimal - objective value 47.93226
Clp0000I Optimal - objective value 47.93226
Coin0511I After Postsolve, objective 47.93226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.93226038 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 75 columns (74 integer (74 of which binary)) and 407 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.148%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.00354
Cbc0038I Solution found of -5.69443
Cbc0038I Relaxing continuous gives -11.5095
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 60 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -11.5095 to -17.1338 (0.04 seconds)
Cbc0038I Round again with cutoff of -20.2137
Cbc0038I Pass   1: suminf.    1.03344 (13) obj. -20.2137 iterations 34
Cbc0038I Pass   2: suminf.    1.78877 (5) obj. -20.2137 iterations 17
Cbc0038I Pass   3: suminf.    1.27141 (4) obj. -20.2137 iterations 3
Cbc0038I Pass   4: suminf.    1.15663 (4) obj. -20.2137 iterations 7
Cbc0038I Pass   5: suminf.    1.21109 (4) obj. -20.2137 iterations 2
Cbc0038I Pass   6: suminf.    3.33676 (8) obj. -20.2137 iterations 15
Cbc0038I Pass   7: suminf.    2.21191 (15) obj. -20.2137 iterations 13
Cbc0038I Pass   8: suminf.    1.60516 (5) obj. -20.2137 iterations 9
Cbc0038I Pass   9: suminf.    1.29302 (11) obj. -20.2137 iterations 9
Cbc0038I Pass  10: suminf.    1.29302 (11) obj. -20.2137 iterations 0
Cbc0038I Pass  11: suminf.    1.12716 (5) obj. -20.2137 iterations 16
Cbc0038I Pass  12: suminf.    0.67274 (3) obj. -20.2137 iterations 4
Cbc0038I Pass  13: suminf.    1.21775 (4) obj. -20.2137 iterations 3
Cbc0038I Pass  14: suminf.    1.15314 (4) obj. -20.2137 iterations 1
Cbc0038I Pass  15: suminf.    1.29862 (4) obj. -20.2137 iterations 4
Cbc0038I Pass  16: suminf.    1.07411 (3) obj. -20.2137 iterations 2
Cbc0038I Pass  17: suminf.    0.97670 (3) obj. -20.2137 iterations 2
Cbc0038I Pass  18: suminf.    0.86000 (3) obj. -20.2137 iterations 1
Cbc0038I Pass  19: suminf.    1.20952 (3) obj. -20.2137 iterations 2
Cbc0038I Pass  20: suminf.    2.51438 (8) obj. -20.2137 iterations 12
Cbc0038I Pass  21: suminf.    1.63100 (7) obj. -20.2137 iterations 9
Cbc0038I Pass  22: suminf.    1.34053 (5) obj. -20.2137 iterations 17
Cbc0038I Pass  23: suminf.    0.94055 (4) obj. -20.2137 iterations 1
Cbc0038I Pass  24: suminf.    0.94055 (4) obj. -20.2137 iterations 0
Cbc0038I Pass  25: suminf.    1.18631 (3) obj. -20.2137 iterations 4
Cbc0038I Pass  26: suminf.    1.18631 (3) obj. -20.2137 iterations 0
Cbc0038I Pass  27: suminf.    0.57766 (2) obj. -20.2137 iterations 4
Cbc0038I Pass  28: suminf.    0.53565 (2) obj. -20.2137 iterations 1
Cbc0038I Pass  29: suminf.    1.28955 (7) obj. -20.2137 iterations 18
Cbc0038I Pass  30: suminf.    0.79242 (5) obj. -20.2137 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 68 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -17.1338 to -17.7065 (0.10 seconds)
Cbc0038I Round again with cutoff of -25.7574
Cbc0038I Pass  30: suminf.    1.85854 (22) obj. -25.7574 iterations 10
Cbc0038I Pass  31: suminf.    2.50311 (8) obj. -25.7574 iterations 31
Cbc0038I Pass  32: suminf.    1.27165 (4) obj. -25.7574 iterations 11
Cbc0038I Pass  33: suminf.    1.61984 (5) obj. -25.7574 iterations 5
Cbc0038I Pass  34: suminf.    1.12603 (5) obj. -25.7574 iterations 2
Cbc0038I Pass  35: suminf.    1.18568 (4) obj. -25.7574 iterations 3
Cbc0038I Pass  36: suminf.    1.00013 (3) obj. -25.7574 iterations 1
Cbc0038I Pass  37: suminf.    1.00013 (3) obj. -25.7574 iterations 0
Cbc0038I Pass  38: suminf.    1.34759 (3) obj. -25.7574 iterations 2
Cbc0038I Pass  39: suminf.    0.96764 (3) obj. -25.7574 iterations 2
Cbc0038I Pass  40: suminf.    1.34759 (3) obj. -25.7574 iterations 2
Cbc0038I Pass  41: suminf.    2.58983 (9) obj. -25.7574 iterations 19
Cbc0038I Pass  42: suminf.    2.08164 (9) obj. -25.7574 iterations 6
Cbc0038I Pass  43: suminf.    3.32792 (15) obj. -25.7574 iterations 18
Cbc0038I Pass  44: suminf.    2.19210 (22) obj. -25.7574 iterations 12
Cbc0038I Pass  45: suminf.    2.03830 (30) obj. -25.7574 iterations 9
Cbc0038I Pass  46: suminf.    1.63281 (6) obj. -25.7574 iterations 26
Cbc0038I Pass  47: suminf.    1.53303 (5) obj. -25.7574 iterations 4
Cbc0038I Pass  48: suminf.    2.13596 (6) obj. -25.7574 iterations 7
Cbc0038I Pass  49: suminf.    1.14277 (6) obj. -25.7574 iterations 2
Cbc0038I Pass  50: suminf.    0.76206 (4) obj. -25.7574 iterations 2
Cbc0038I Pass  51: suminf.    1.53398 (4) obj. -25.7574 iterations 2
Cbc0038I Pass  52: suminf.    1.23504 (4) obj. -25.7574 iterations 4
Cbc0038I Pass  53: suminf.    2.10795 (6) obj. -25.7574 iterations 12
Cbc0038I Pass  54: suminf.    2.00935 (5) obj. -25.7574 iterations 1
Cbc0038I Pass  55: suminf.    1.42598 (9) obj. -25.7574 iterations 6
Cbc0038I Pass  56: suminf.    2.15397 (8) obj. -25.7574 iterations 12
Cbc0038I Pass  57: suminf.    1.61634 (6) obj. -25.7574 iterations 4
Cbc0038I Pass  58: suminf.    2.50704 (6) obj. -25.7574 iterations 4
Cbc0038I Pass  59: suminf.    1.61948 (5) obj. -25.7574 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 75 columns, reduced to 75 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -17.7065 - took 0.11 seconds
Cbc0012I Integer solution of -17.706516 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 132 rows 75 columns, reduced to 61 rows 34 columns
Cbc0031I 22 added rows had average density of 52.181818
Cbc0013I At root node, 22 cuts changed objective from -47.93226 to -38.771011 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7539 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1023 row cuts average 74.2 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 66.5 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17.706516 best solution, best possible -38.771011 (0.76 seconds)
Cbc0012I Integer solution of -18.800176 found by rounding after 7408 iterations and 76 nodes (1.06 seconds)
Cbc0001I Search completed - best objective -18.800176, took 7459 iterations and 80 nodes (1.07 seconds)
Cbc0032I Strong branching done 850 times (13616 iterations), fathomed 5 nodes and fixed 34 variables
Cbc0035I Maximum depth 26, 184 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 116 (-37) columns and 1855 (-1449) elements
Clp1000I sum of infeasibilities 1.91315e-07 - average 1.91315e-09, 22 fixed columns
Coin0506I Presolve 83 (-17) rows, 94 (-22) columns and 1342 (-513) elements
Clp0006I 0  Obj 50.423127 Dual inf 6.1576358 (93)
Clp0029I End of values pass after 94 iterations
Clp0014I Perturbing problem by 0.001% of 1.8768043 - largest nonzero change 1.7860611e-05 ( 0.001262127%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 60.212125
Clp0000I Optimal - objective value 60.212125
Coin0511I After Postsolve, objective 60.212125, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.212125
Clp0000I Optimal - objective value 60.212125
Clp0000I Optimal - objective value 60.212125
Clp0000I Optimal - objective value 60.212125
Coin0511I After Postsolve, objective 60.212125, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.21212472 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 116 columns (116 integer (116 of which binary)) and 1857 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.386%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 4.334
Cbc0038I Pass   1: suminf.    1.98214 (32) obj. -48.6476 iterations 17
Cbc0038I Pass   2: suminf.    1.98214 (32) obj. -48.6476 iterations 1
Cbc0038I Pass   3: suminf.    0.19099 (5) obj. -9.61945 iterations 27
Cbc0038I Solution found of -4.81044
Cbc0038I Rounding solution of -4.81164 is better than previous of -4.81044

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -4.81164 to -8.95042 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.7133
Cbc0038I Pass   4: suminf.    1.98214 (32) obj. -48.6476 iterations 0
Cbc0038I Pass   5: suminf.    1.98214 (32) obj. -48.6476 iterations 1
Cbc0038I Pass   6: suminf.    0.57189 (8) obj. -13.7133 iterations 28
Cbc0038I Pass   7: suminf.    0.93278 (3) obj. -13.7133 iterations 11
Cbc0038I Pass   8: suminf.    0.47092 (5) obj. -13.7133 iterations 4
Cbc0038I Pass   9: suminf.    0.12807 (3) obj. -15.9416 iterations 2
Cbc0038I Pass  10: suminf.    0.46026 (2) obj. -13.7133 iterations 9
Cbc0038I Pass  11: suminf.    3.04631 (13) obj. -13.7133 iterations 30
Cbc0038I Pass  12: suminf.    0.85036 (8) obj. -13.7133 iterations 7
Cbc0038I Pass  13: suminf.    0.49194 (7) obj. -16.0734 iterations 3
Cbc0038I Pass  14: suminf.    1.08436 (7) obj. -13.7133 iterations 10
Cbc0038I Pass  15: suminf.    1.03468 (7) obj. -14.1902 iterations 4
Cbc0038I Pass  16: suminf.    2.05121 (7) obj. -13.7133 iterations 17
Cbc0038I Pass  17: suminf.    1.06602 (6) obj. -14.0722 iterations 10
Cbc0038I Pass  18: suminf.    2.11904 (15) obj. -13.7133 iterations 30
Cbc0038I Pass  19: suminf.    2.11904 (15) obj. -13.7133 iterations 4
Cbc0038I Pass  20: suminf.    0.92566 (7) obj. -13.7133 iterations 20
Cbc0038I Pass  21: suminf.    0.92566 (7) obj. -13.7133 iterations 0
Cbc0038I Pass  22: suminf.    0.96406 (4) obj. -13.7133 iterations 13
Cbc0038I Pass  23: suminf.    0.92378 (4) obj. -13.7133 iterations 2
Cbc0038I Pass  24: suminf.    0.44317 (7) obj. -13.7133 iterations 5
Cbc0038I Pass  25: suminf.    0.82969 (6) obj. -13.7133 iterations 10
Cbc0038I Pass  26: suminf.    0.63956 (6) obj. -14.4738 iterations 4
Cbc0038I Pass  27: suminf.    2.11588 (14) obj. -13.7133 iterations 20
Cbc0038I Pass  28: suminf.    0.79336 (12) obj. -15.3095 iterations 5
Cbc0038I Pass  29: suminf.    0.94182 (13) obj. -13.7133 iterations 19
Cbc0038I Pass  30: suminf.    0.48802 (6) obj. -13.7133 iterations 11
Cbc0038I Pass  31: suminf.    0.38270 (9) obj. -13.7133 iterations 16
Cbc0038I Pass  32: suminf.    0.26852 (5) obj. -13.7133 iterations 13
Cbc0038I Pass  33: suminf.    0.45657 (7) obj. -13.7133 iterations 12
Cbc0038I Rounding solution of -17.7065 is better than previous of -8.95042

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 53 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -17.7065 to -18.8002 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.3559
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.98214 (32) obj. -48.6476 iterations 0
Cbc0038I Pass  34: suminf.    1.98214 (32) obj. -48.6476 iterations 1
Cbc0038I Pass  35: suminf.    1.64896 (16) obj. -26.3559 iterations 21
Cbc0038I Pass  36: suminf.    0.84124 (16) obj. -26.3559 iterations 1
Cbc0038I Pass  37: suminf.    1.08990 (8) obj. -26.3559 iterations 32
Cbc0038I Pass  38: suminf.    0.97357 (7) obj. -26.3559 iterations 6
Cbc0038I Pass  39: suminf.    1.56814 (16) obj. -26.3559 iterations 24
Cbc0038I Pass  40: suminf.    1.56784 (17) obj. -26.3559 iterations 1
Cbc0038I Pass  41: suminf.    3.51895 (16) obj. -26.3559 iterations 14
Cbc0038I Pass  42: suminf.    2.49767 (14) obj. -26.3559 iterations 8
Cbc0038I Pass  43: suminf.    2.46671 (15) obj. -26.3559 iterations 4
Cbc0038I Pass  44: suminf.    1.97570 (12) obj. -26.3559 iterations 14
Cbc0038I Pass  45: suminf.    1.48054 (12) obj. -26.3559 iterations 4
Cbc0038I Pass  46: suminf.    1.82147 (13) obj. -26.3559 iterations 7
Cbc0038I Pass  47: suminf.    1.77079 (15) obj. -26.3559 iterations 5
Cbc0038I Pass  48: suminf.    3.89175 (15) obj. -26.3559 iterations 8
Cbc0038I Pass  49: suminf.    1.55169 (12) obj. -26.3559 iterations 10
Cbc0038I Pass  50: suminf.    1.04611 (10) obj. -26.7192 iterations 7
Cbc0038I Pass  51: suminf.    1.45278 (11) obj. -26.3559 iterations 8
Cbc0038I Pass  52: suminf.    0.83210 (14) obj. -26.3559 iterations 25
Cbc0038I Pass  53: suminf.    0.60125 (8) obj. -26.3559 iterations 9
Cbc0038I Pass  54: suminf.    0.71610 (16) obj. -26.3559 iterations 11
Cbc0038I Pass  55: suminf.    0.59742 (14) obj. -26.3559 iterations 3
Cbc0038I Pass  56: suminf.    1.68030 (16) obj. -26.3559 iterations 17
Cbc0038I Pass  57: suminf.    1.15926 (19) obj. -26.3559 iterations 8
Cbc0038I Pass  58: suminf.    3.82502 (16) obj. -26.3559 iterations 16
Cbc0038I Pass  59: suminf.    3.33305 (16) obj. -26.3559 iterations 5
Cbc0038I Pass  60: suminf.    2.72439 (16) obj. -26.3559 iterations 5
Cbc0038I Pass  61: suminf.    2.93266 (15) obj. -26.3559 iterations 11
Cbc0038I Pass  62: suminf.    2.93266 (15) obj. -26.3559 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 54 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -18.8002 - took 0.08 seconds
Cbc0012I Integer solution of -18.800176 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 100 rows 116 columns, reduced to 22 rows 24 columns
Cbc0031I 57 added rows had average density of 35.280702
Cbc0013I At root node, 57 cuts changed objective from -56.578179 to -23.722087 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9624 row cuts average 6.4 elements, 1 column cuts (2 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1018 row cuts average 101.8 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 147 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1062 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 385 row cuts average 69.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 116 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.800176 best solution, best possible -23.722087 (2.44 seconds)
Cbc0010I After 9 nodes, 8 on tree, -18.800176 best solution, best possible -23.722087 (3.16 seconds)
Cbc0001I Search completed - best objective -18.800176, took 4532 iterations and 30 nodes (3.59 seconds)
Cbc0032I Strong branching done 498 times (10040 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 14, 79 variables fixed on reduced cost
Total time (CPU seconds):       2.63   (Wallclock seconds):       3.61

