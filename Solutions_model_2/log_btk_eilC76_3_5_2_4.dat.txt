Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 6.84291e-05 - average 4.99483e-07, 16 fixed columns
Coin0506I Presolve 107 (-30) rows, 60 (-16) columns and 327 (-91) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Coin0511I After Postsolve, objective 65.778724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Coin0511I After Postsolve, objective 65.778724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.77872398 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.86139
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.53171 iterations 50
Cbc0038I Solution found of 2.53171
Cbc0038I Relaxing continuous gives 2.53171
Cbc0038I Rounding solution of -25.3825 is better than previous of 2.53171

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -25.3825 to -35.7728 (0.05 seconds)
Cbc0038I Round again with cutoff of -38.7735
Cbc0038I Pass   2: suminf.    3.90293 (12) obj. -38.7735 iterations 19
Cbc0038I Pass   3: suminf.    3.87030 (11) obj. -38.7735 iterations 5
Cbc0038I Pass   4: suminf.    1.28769 (5) obj. -38.7735 iterations 14
Cbc0038I Pass   5: suminf.    0.98155 (3) obj. -38.7735 iterations 2
Cbc0038I Pass   6: suminf.    1.40539 (4) obj. -38.7735 iterations 8
Cbc0038I Pass   7: suminf.    1.40539 (4) obj. -38.7735 iterations 0
Cbc0038I Pass   8: suminf.    1.15930 (4) obj. -38.7735 iterations 5
Cbc0038I Pass   9: suminf.    1.11571 (4) obj. -38.7735 iterations 1
Cbc0038I Pass  10: suminf.    1.40539 (4) obj. -38.7735 iterations 6
Cbc0038I Pass  11: suminf.    1.45771 (6) obj. -38.7735 iterations 22
Cbc0038I Pass  12: suminf.    1.06049 (5) obj. -38.7735 iterations 15
Cbc0038I Pass  13: suminf.    1.07971 (3) obj. -38.7735 iterations 8
Cbc0038I Pass  14: suminf.    0.56071 (3) obj. -38.7735 iterations 2
Cbc0038I Pass  15: suminf.    0.83786 (3) obj. -38.7735 iterations 7
Cbc0038I Pass  16: suminf.    1.25449 (3) obj. -38.7735 iterations 3
Cbc0038I Pass  17: suminf.    1.25449 (3) obj. -38.7735 iterations 0
Cbc0038I Pass  18: suminf.    0.97206 (3) obj. -38.7735 iterations 6
Cbc0038I Pass  19: suminf.    2.21592 (8) obj. -38.7735 iterations 17
Cbc0038I Pass  20: suminf.    1.51568 (5) obj. -38.7735 iterations 9
Cbc0038I Pass  21: suminf.    0.92852 (2) obj. -38.7735 iterations 10
Cbc0038I Pass  22: suminf.    0.86539 (3) obj. -38.7735 iterations 1
Cbc0038I Pass  23: suminf.    1.22210 (3) obj. -38.7735 iterations 4
Cbc0038I Pass  24: suminf.    1.13637 (4) obj. -38.7735 iterations 1
Cbc0038I Pass  25: suminf.    1.30138 (3) obj. -38.7735 iterations 7
Cbc0038I Pass  26: suminf.    1.15547 (3) obj. -38.7735 iterations 4
Cbc0038I Pass  27: suminf.    2.13119 (7) obj. -38.7735 iterations 34
Cbc0038I Pass  28: suminf.    0.97750 (4) obj. -38.7735 iterations 12
Cbc0038I Pass  29: suminf.    0.48276 (1) obj. -38.7735 iterations 7
Cbc0038I Pass  30: suminf.    0.39354 (2) obj. -38.7735 iterations 2
Cbc0038I Pass  31: suminf.    0.84960 (2) obj. -38.7735 iterations 8
Cbc0038I Rounding solution of -35.9837 is better than previous of -35.7728

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -35.9837 to -36.6415 (0.09 seconds)
Cbc0038I Round again with cutoff of -44.1745
Cbc0038I Pass  31: suminf.    4.08041 (12) obj. -44.1745 iterations 3
Cbc0038I Pass  32: suminf.    2.42257 (10) obj. -44.1745 iterations 11
Cbc0038I Pass  33: suminf.    1.45308 (9) obj. -44.1745 iterations 7
Cbc0038I Pass  34: suminf.    1.45308 (9) obj. -44.1745 iterations 1
Cbc0038I Pass  35: suminf.    2.61809 (6) obj. -44.1745 iterations 18
Cbc0038I Pass  36: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  37: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  38: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  39: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  40: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  41: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  42: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  43: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  44: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  45: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  46: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  47: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  48: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  49: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  50: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  51: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  52: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  53: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  54: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  55: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  56: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  57: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  58: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  59: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  60: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -36.6415 - took 0.10 seconds
Cbc0012I Integer solution of -36.64147 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 76 rows 44 columns
Cbc0031I 27 added rows had average density of 44.444444
Cbc0013I At root node, 27 cuts changed objective from -65.778724 to -57.419279 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11328 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1776 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.64147 best solution, best possible -57.419279 (0.88 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 46 rows 31 columns
Cbc0038I Full problem 137 rows 76 columns, reduced to 5 rows 9 columns
Cbc0004I Integer solution of -36.6762 found after 10081 iterations and 133 nodes (1.22 seconds)
Cbc0001I Search completed - best objective -36.6762, took 11326 iterations and 184 nodes (1.29 seconds)
Cbc0032I Strong branching done 1230 times (17111 iterations), fathomed 17 nodes and fixed 56 variables
Cbc0035I Maximum depth 35, 548 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-45) rows, 122 (-30) columns and 2192 (-1111) elements
Clp1000I sum of infeasibilities 1.33369e-07 - average 1.22356e-09, 24 fixed columns
Coin0506I Presolve 87 (-22) rows, 98 (-24) columns and 1466 (-726) elements
Clp0006I 0  Obj 68.409852 Dual inf 6.7939511 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 2.0328898 - largest nonzero change 1.3757194e-05 ( 0.00088996209%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 79.19935
Clp0000I Optimal - objective value 79.19935
Coin0511I After Postsolve, objective 79.19935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 79.19935
Clp0000I Optimal - objective value 79.19935
Clp0000I Optimal - objective value 79.19935
Clp0000I Optimal - objective value 79.19935
Coin0511I After Postsolve, objective 79.19935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.19935006 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 124 columns (124 integer (124 of which binary)) and 2205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.691%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 5.90584
Cbc0038I Pass   1: suminf.    3.62463 (36) obj. -58.5495 iterations 19
Cbc0038I Pass   2: suminf.    2.02219 (22) obj. -39.1249 iterations 14
Cbc0038I Pass   3: suminf.    0.34219 (5) obj. -22.0027 iterations 17
Cbc0038I Solution found of -17.3448
Cbc0038I Rounding solution of -21.3095 is better than previous of -17.3448

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 124 columns, reduced to 4 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -21.3095 to -26.4902 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.1609
Cbc0038I Pass   4: suminf.    3.62463 (36) obj. -58.5495 iterations 0
Cbc0038I Pass   5: suminf.    0.81593 (8) obj. -31.1609 iterations 32
Cbc0038I Pass   6: suminf.    0.69630 (9) obj. -31.1609 iterations 5
Cbc0038I Pass   7: suminf.    1.07754 (3) obj. -31.1609 iterations 28
Cbc0038I Pass   8: suminf.    1.07754 (3) obj. -31.1609 iterations 0
Cbc0038I Pass   9: suminf.    0.39376 (2) obj. -33.0744 iterations 8
Cbc0038I Pass  10: suminf.    0.39376 (2) obj. -33.0744 iterations 0
Cbc0038I Pass  11: suminf.    0.60637 (2) obj. -31.1609 iterations 2
Cbc0038I Pass  12: suminf.    1.11126 (12) obj. -34.8769 iterations 40
Cbc0038I Pass  13: suminf.    1.11126 (12) obj. -34.8769 iterations 8
Cbc0038I Pass  14: suminf.    0.55009 (5) obj. -31.1609 iterations 22
Cbc0038I Pass  15: suminf.    0.55009 (5) obj. -31.1609 iterations 0
Cbc0038I Pass  16: suminf.    1.02735 (6) obj. -31.1609 iterations 7
Cbc0038I Pass  17: suminf.    0.65674 (4) obj. -31.1609 iterations 3
Cbc0038I Pass  18: suminf.    0.61552 (4) obj. -31.1609 iterations 5
Cbc0038I Pass  19: suminf.    0.59404 (3) obj. -31.1609 iterations 3
Cbc0038I Pass  20: suminf.    0.44492 (2) obj. -31.1609 iterations 3
Cbc0038I Pass  21: suminf.    0.32484 (2) obj. -32.3871 iterations 3
Cbc0038I Pass  22: suminf.    0.61552 (4) obj. -31.1609 iterations 5
Cbc0038I Pass  23: suminf.    2.65781 (20) obj. -31.1609 iterations 40
Cbc0038I Pass  24: suminf.    0.94107 (9) obj. -31.1609 iterations 14
Cbc0038I Pass  25: suminf.    0.94107 (9) obj. -31.1609 iterations 0
Cbc0038I Pass  26: suminf.    1.24678 (5) obj. -31.1609 iterations 14
Cbc0038I Pass  27: suminf.    0.60576 (5) obj. -31.1609 iterations 3
Cbc0038I Pass  28: suminf.    0.27347 (2) obj. -31.1609 iterations 6
Cbc0038I Pass  29: suminf.    0.40058 (2) obj. -31.1609 iterations 2
Cbc0038I Pass  30: suminf.    0.85559 (7) obj. -31.1609 iterations 16
Cbc0038I Pass  31: suminf.    0.78126 (9) obj. -31.1609 iterations 6
Cbc0038I Pass  32: suminf.    1.26837 (5) obj. -31.1609 iterations 14
Cbc0038I Pass  33: suminf.    1.26837 (5) obj. -31.1609 iterations 1
Cbc0038I Rounding solution of -27.8373 is better than previous of -26.4902

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 124 columns, reduced to 48 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -27.8373 to -34.8532 (0.11 seconds)
Cbc0038I Round again with cutoff of -42.5217
Cbc0038I Pass  33: suminf.    3.62463 (36) obj. -58.5495 iterations 0
Cbc0038I Pass  34: suminf.    1.66664 (14) obj. -42.5217 iterations 26
Cbc0038I Pass  35: suminf.    1.30141 (14) obj. -43.7267 iterations 3
Cbc0038I Pass  36: suminf.    2.09734 (7) obj. -42.5217 iterations 20
Cbc0038I Pass  37: suminf.    1.99516 (14) obj. -42.5217 iterations 12
Cbc0038I Pass  38: suminf.    2.44360 (13) obj. -42.5217 iterations 6
Cbc0038I Pass  39: suminf.    2.44360 (13) obj. -42.5217 iterations 1
Cbc0038I Pass  40: suminf.    2.36448 (13) obj. -42.5217 iterations 3
Cbc0038I Pass  41: suminf.    2.04938 (8) obj. -42.5217 iterations 4
Cbc0038I Pass  42: suminf.    2.44360 (13) obj. -42.5217 iterations 10
Cbc0038I Pass  43: suminf.    2.73446 (15) obj. -42.5217 iterations 14
Cbc0038I Pass  44: suminf.    2.10213 (12) obj. -42.5217 iterations 4
Cbc0038I Pass  45: suminf.    1.81289 (11) obj. -42.5217 iterations 2
Cbc0038I Pass  46: suminf.    1.97543 (13) obj. -42.5217 iterations 15
Cbc0038I Pass  47: suminf.    1.78793 (13) obj. -42.5217 iterations 1
Cbc0038I Pass  48: suminf.    1.97543 (13) obj. -42.5217 iterations 8
Cbc0038I Pass  49: suminf.    2.53607 (16) obj. -42.5217 iterations 18
Cbc0038I Pass  50: suminf.    1.56250 (13) obj. -42.5217 iterations 6
Cbc0038I Pass  51: suminf.    1.48652 (12) obj. -42.5217 iterations 2
Cbc0038I Pass  52: suminf.    1.97543 (13) obj. -42.5217 iterations 21
Cbc0038I Pass  53: suminf.    1.78793 (13) obj. -42.5217 iterations 2
Cbc0038I Pass  54: suminf.    1.97543 (13) obj. -42.5217 iterations 8
Cbc0038I Pass  55: suminf.    3.10352 (18) obj. -42.5217 iterations 29
Cbc0038I Pass  56: suminf.    2.23523 (16) obj. -42.5217 iterations 9
Cbc0038I Pass  57: suminf.    1.23037 (8) obj. -42.5217 iterations 23
Cbc0038I Pass  58: suminf.    1.18679 (8) obj. -42.5217 iterations 11
Cbc0038I Pass  59: suminf.    1.60856 (13) obj. -42.5217 iterations 14
Cbc0038I Pass  60: suminf.    1.60856 (13) obj. -42.5217 iterations 0
Cbc0038I Pass  61: suminf.    1.86381 (13) obj. -42.5217 iterations 6
Cbc0038I Pass  62: suminf.    3.06887 (22) obj. -42.5217 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 124 columns, reduced to 37 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -34.8532 - took 0.15 seconds
Cbc0012I Integer solution of -34.85322 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 20 rows 24 columns
Cbc0031I 55 added rows had average density of 41.581818
Cbc0013I At root node, 55 cuts changed objective from -73.195446 to -43.15913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15036 row cuts average 6.9 elements, 1 column cuts (1 active)  in 0.173 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1472 row cuts average 113.1 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 657 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1304 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 418 row cuts average 57.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 99 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.419 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.85322 best solution, best possible -43.15913 (2.31 seconds)
Cbc0012I Integer solution of -36.60627 found by DiveCoefficient after 5582 iterations and 2 nodes (2.33 seconds)
Cbc0012I Integer solution of -36.64147 found by rounding after 5753 iterations and 10 nodes (2.36 seconds)
Cbc0004I Integer solution of -36.6762 found after 5782 iterations and 12 nodes (2.37 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 59 rows 67 columns
Cbc0010I After 45 nodes, 4 on tree, -36.6762 best solution, best possible -42.615577 (3.01 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 45 rows 56 columns
Cbc0010I After 110 nodes, 6 on tree, -36.6762 best solution, best possible -42.615577 (3.72 seconds)
Cbc0010I After 170 nodes, 6 on tree, -36.6762 best solution, best possible -42.615577 (4.43 seconds)
Cbc0010I After 280 nodes, 3 on tree, -36.6762 best solution, best possible -42.615577 (5.16 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 46 rows 56 columns
Cbc0010I After 330 nodes, 3 on tree, -36.6762 best solution, best possible -42.480212 (5.88 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 35 rows 49 columns
Cbc0010I After 429 nodes, 10 on tree, -36.6762 best solution, best possible -42.480212 (6.58 seconds)
Cbc0010I After 530 nodes, 1 on tree, -36.6762 best solution, best possible -40.232935 (7.33 seconds)
Cbc0001I Search completed - best objective -36.6762, took 32997 iterations and 1163 nodes (7.57 seconds)
Cbc0032I Strong branching done 4168 times (66475 iterations), fathomed 45 nodes and fixed 55 variables
Cbc0041I Maximum depth 19, 1172 variables fixed on reduced cost (complete fathoming 14 times, 611 nodes taking 7660 iterations)
Total time (CPU seconds):       6.92   (Wallclock seconds):       7.59

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 6.84291e-05 - average 4.99483e-07, 16 fixed columns
Coin0506I Presolve 107 (-30) rows, 60 (-16) columns and 327 (-91) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Coin0511I After Postsolve, objective 65.778724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Clp0000I Optimal - objective value 65.778724
Coin0511I After Postsolve, objective 65.778724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.77872398 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.86139
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.53171 iterations 50
Cbc0038I Solution found of 2.53171
Cbc0038I Relaxing continuous gives 2.53171
Cbc0038I Rounding solution of -25.3825 is better than previous of 2.53171

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -25.3825 to -35.7728 (0.04 seconds)
Cbc0038I Round again with cutoff of -38.7735
Cbc0038I Pass   2: suminf.    3.90293 (12) obj. -38.7735 iterations 19
Cbc0038I Pass   3: suminf.    3.87030 (11) obj. -38.7735 iterations 5
Cbc0038I Pass   4: suminf.    1.28769 (5) obj. -38.7735 iterations 14
Cbc0038I Pass   5: suminf.    0.98155 (3) obj. -38.7735 iterations 2
Cbc0038I Pass   6: suminf.    1.40539 (4) obj. -38.7735 iterations 8
Cbc0038I Pass   7: suminf.    1.40539 (4) obj. -38.7735 iterations 0
Cbc0038I Pass   8: suminf.    1.15930 (4) obj. -38.7735 iterations 5
Cbc0038I Pass   9: suminf.    1.11571 (4) obj. -38.7735 iterations 1
Cbc0038I Pass  10: suminf.    1.40539 (4) obj. -38.7735 iterations 6
Cbc0038I Pass  11: suminf.    1.45771 (6) obj. -38.7735 iterations 22
Cbc0038I Pass  12: suminf.    1.06049 (5) obj. -38.7735 iterations 15
Cbc0038I Pass  13: suminf.    1.07971 (3) obj. -38.7735 iterations 8
Cbc0038I Pass  14: suminf.    0.56071 (3) obj. -38.7735 iterations 2
Cbc0038I Pass  15: suminf.    0.83786 (3) obj. -38.7735 iterations 7
Cbc0038I Pass  16: suminf.    1.25449 (3) obj. -38.7735 iterations 3
Cbc0038I Pass  17: suminf.    1.25449 (3) obj. -38.7735 iterations 0
Cbc0038I Pass  18: suminf.    0.97206 (3) obj. -38.7735 iterations 6
Cbc0038I Pass  19: suminf.    2.21592 (8) obj. -38.7735 iterations 17
Cbc0038I Pass  20: suminf.    1.51568 (5) obj. -38.7735 iterations 9
Cbc0038I Pass  21: suminf.    0.92852 (2) obj. -38.7735 iterations 10
Cbc0038I Pass  22: suminf.    0.86539 (3) obj. -38.7735 iterations 1
Cbc0038I Pass  23: suminf.    1.22210 (3) obj. -38.7735 iterations 4
Cbc0038I Pass  24: suminf.    1.13637 (4) obj. -38.7735 iterations 1
Cbc0038I Pass  25: suminf.    1.30138 (3) obj. -38.7735 iterations 7
Cbc0038I Pass  26: suminf.    1.15547 (3) obj. -38.7735 iterations 4
Cbc0038I Pass  27: suminf.    2.13119 (7) obj. -38.7735 iterations 34
Cbc0038I Pass  28: suminf.    0.97750 (4) obj. -38.7735 iterations 12
Cbc0038I Pass  29: suminf.    0.48276 (1) obj. -38.7735 iterations 7
Cbc0038I Pass  30: suminf.    0.39354 (2) obj. -38.7735 iterations 2
Cbc0038I Pass  31: suminf.    0.84960 (2) obj. -38.7735 iterations 8
Cbc0038I Rounding solution of -35.9837 is better than previous of -35.7728

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -35.9837 to -36.6415 (0.09 seconds)
Cbc0038I Round again with cutoff of -44.1745
Cbc0038I Pass  31: suminf.    4.08041 (12) obj. -44.1745 iterations 3
Cbc0038I Pass  32: suminf.    2.42257 (10) obj. -44.1745 iterations 11
Cbc0038I Pass  33: suminf.    1.45308 (9) obj. -44.1745 iterations 7
Cbc0038I Pass  34: suminf.    1.45308 (9) obj. -44.1745 iterations 1
Cbc0038I Pass  35: suminf.    2.61809 (6) obj. -44.1745 iterations 18
Cbc0038I Pass  36: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  37: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  38: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  39: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  40: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  41: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  42: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  43: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  44: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  45: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  46: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  47: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  48: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  49: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  50: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  51: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  52: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  53: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  54: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I Pass  55: suminf.    1.83065 (6) obj. -44.1745 iterations 1
Cbc0038I Pass  56: suminf.    2.36070 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  57: suminf.    1.84296 (6) obj. -44.1745 iterations 4
Cbc0038I Pass  58: suminf.    1.84296 (6) obj. -44.1745 iterations 0
Cbc0038I Pass  59: suminf.    2.61809 (6) obj. -44.1745 iterations 6
Cbc0038I Pass  60: suminf.    1.83065 (6) obj. -44.1745 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -36.6415 - took 0.10 seconds
Cbc0012I Integer solution of -36.64147 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 76 rows 44 columns
Cbc0031I 27 added rows had average density of 44.444444
Cbc0013I At root node, 27 cuts changed objective from -65.778724 to -57.419279 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11328 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1776 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 65 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.64147 best solution, best possible -57.419279 (0.92 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 46 rows 31 columns
Cbc0038I Full problem 137 rows 76 columns, reduced to 5 rows 9 columns
Cbc0004I Integer solution of -36.6762 found after 10081 iterations and 133 nodes (1.29 seconds)
Cbc0001I Search completed - best objective -36.6762, took 11326 iterations and 184 nodes (1.36 seconds)
Cbc0032I Strong branching done 1230 times (17111 iterations), fathomed 17 nodes and fixed 56 variables
Cbc0035I Maximum depth 35, 548 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 122 (-31) columns and 2192 (-1112) elements
Clp1000I sum of infeasibilities 1.33369e-07 - average 1.22356e-09, 24 fixed columns
Coin0506I Presolve 87 (-22) rows, 98 (-24) columns and 1466 (-726) elements
Clp0006I 0  Obj 68.409852 Dual inf 6.7939511 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 2.0328898 - largest nonzero change 1.3757194e-05 ( 0.00088996209%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 79.19935
Clp0000I Optimal - objective value 79.19935
Coin0511I After Postsolve, objective 79.19935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 79.19935
Clp0000I Optimal - objective value 79.19935
Clp0000I Optimal - objective value 79.19935
Clp0000I Optimal - objective value 79.19935
Coin0511I After Postsolve, objective 79.19935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.19935006 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 124 columns (124 integer (124 of which binary)) and 2205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.691%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 5.90584
Cbc0038I Pass   1: suminf.    3.62463 (36) obj. -58.5495 iterations 19
Cbc0038I Pass   2: suminf.    2.02219 (22) obj. -39.1249 iterations 14
Cbc0038I Pass   3: suminf.    0.34219 (5) obj. -22.0027 iterations 17
Cbc0038I Solution found of -17.3448
Cbc0038I Rounding solution of -21.3095 is better than previous of -17.3448

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 124 columns, reduced to 4 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -21.3095 to -26.4902 (0.03 seconds)
Cbc0038I Round again with cutoff of -31.1609
Cbc0038I Pass   4: suminf.    3.62463 (36) obj. -58.5495 iterations 0
Cbc0038I Pass   5: suminf.    0.81593 (8) obj. -31.1609 iterations 32
Cbc0038I Pass   6: suminf.    0.69630 (9) obj. -31.1609 iterations 5
Cbc0038I Pass   7: suminf.    1.07754 (3) obj. -31.1609 iterations 28
Cbc0038I Pass   8: suminf.    1.07754 (3) obj. -31.1609 iterations 0
Cbc0038I Pass   9: suminf.    0.39376 (2) obj. -33.0744 iterations 8
Cbc0038I Pass  10: suminf.    0.39376 (2) obj. -33.0744 iterations 0
Cbc0038I Pass  11: suminf.    0.60637 (2) obj. -31.1609 iterations 2
Cbc0038I Pass  12: suminf.    1.11126 (12) obj. -34.8769 iterations 40
Cbc0038I Pass  13: suminf.    1.11126 (12) obj. -34.8769 iterations 8
Cbc0038I Pass  14: suminf.    0.55009 (5) obj. -31.1609 iterations 22
Cbc0038I Pass  15: suminf.    0.55009 (5) obj. -31.1609 iterations 0
Cbc0038I Pass  16: suminf.    1.02735 (6) obj. -31.1609 iterations 7
Cbc0038I Pass  17: suminf.    0.65674 (4) obj. -31.1609 iterations 3
Cbc0038I Pass  18: suminf.    0.61552 (4) obj. -31.1609 iterations 5
Cbc0038I Pass  19: suminf.    0.59404 (3) obj. -31.1609 iterations 3
Cbc0038I Pass  20: suminf.    0.44492 (2) obj. -31.1609 iterations 3
Cbc0038I Pass  21: suminf.    0.32484 (2) obj. -32.3871 iterations 3
Cbc0038I Pass  22: suminf.    0.61552 (4) obj. -31.1609 iterations 5
Cbc0038I Pass  23: suminf.    2.65781 (20) obj. -31.1609 iterations 40
Cbc0038I Pass  24: suminf.    0.94107 (9) obj. -31.1609 iterations 14
Cbc0038I Pass  25: suminf.    0.94107 (9) obj. -31.1609 iterations 0
Cbc0038I Pass  26: suminf.    1.24678 (5) obj. -31.1609 iterations 14
Cbc0038I Pass  27: suminf.    0.60576 (5) obj. -31.1609 iterations 3
Cbc0038I Pass  28: suminf.    0.27347 (2) obj. -31.1609 iterations 6
Cbc0038I Pass  29: suminf.    0.40058 (2) obj. -31.1609 iterations 2
Cbc0038I Pass  30: suminf.    0.85559 (7) obj. -31.1609 iterations 16
Cbc0038I Pass  31: suminf.    0.78126 (9) obj. -31.1609 iterations 6
Cbc0038I Pass  32: suminf.    1.26837 (5) obj. -31.1609 iterations 14
Cbc0038I Pass  33: suminf.    1.26837 (5) obj. -31.1609 iterations 1
Cbc0038I Rounding solution of -27.8373 is better than previous of -26.4902

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 124 columns, reduced to 48 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -27.8373 to -34.8532 (0.10 seconds)
Cbc0038I Round again with cutoff of -42.5217
Cbc0038I Pass  33: suminf.    3.62463 (36) obj. -58.5495 iterations 0
Cbc0038I Pass  34: suminf.    1.66664 (14) obj. -42.5217 iterations 26
Cbc0038I Pass  35: suminf.    1.30141 (14) obj. -43.7267 iterations 3
Cbc0038I Pass  36: suminf.    2.09734 (7) obj. -42.5217 iterations 20
Cbc0038I Pass  37: suminf.    1.99516 (14) obj. -42.5217 iterations 12
Cbc0038I Pass  38: suminf.    2.44360 (13) obj. -42.5217 iterations 6
Cbc0038I Pass  39: suminf.    2.44360 (13) obj. -42.5217 iterations 1
Cbc0038I Pass  40: suminf.    2.36448 (13) obj. -42.5217 iterations 3
Cbc0038I Pass  41: suminf.    2.04938 (8) obj. -42.5217 iterations 4
Cbc0038I Pass  42: suminf.    2.44360 (13) obj. -42.5217 iterations 10
Cbc0038I Pass  43: suminf.    2.73446 (15) obj. -42.5217 iterations 14
Cbc0038I Pass  44: suminf.    2.10213 (12) obj. -42.5217 iterations 4
Cbc0038I Pass  45: suminf.    1.81289 (11) obj. -42.5217 iterations 2
Cbc0038I Pass  46: suminf.    1.97543 (13) obj. -42.5217 iterations 15
Cbc0038I Pass  47: suminf.    1.78793 (13) obj. -42.5217 iterations 1
Cbc0038I Pass  48: suminf.    1.97543 (13) obj. -42.5217 iterations 8
Cbc0038I Pass  49: suminf.    2.53607 (16) obj. -42.5217 iterations 18
Cbc0038I Pass  50: suminf.    1.56250 (13) obj. -42.5217 iterations 6
Cbc0038I Pass  51: suminf.    1.48652 (12) obj. -42.5217 iterations 2
Cbc0038I Pass  52: suminf.    1.97543 (13) obj. -42.5217 iterations 21
Cbc0038I Pass  53: suminf.    1.78793 (13) obj. -42.5217 iterations 2
Cbc0038I Pass  54: suminf.    1.97543 (13) obj. -42.5217 iterations 8
Cbc0038I Pass  55: suminf.    3.10352 (18) obj. -42.5217 iterations 29
Cbc0038I Pass  56: suminf.    2.23523 (16) obj. -42.5217 iterations 9
Cbc0038I Pass  57: suminf.    1.23037 (8) obj. -42.5217 iterations 23
Cbc0038I Pass  58: suminf.    1.18679 (8) obj. -42.5217 iterations 11
Cbc0038I Pass  59: suminf.    1.60856 (13) obj. -42.5217 iterations 14
Cbc0038I Pass  60: suminf.    1.60856 (13) obj. -42.5217 iterations 0
Cbc0038I Pass  61: suminf.    1.86381 (13) obj. -42.5217 iterations 6
Cbc0038I Pass  62: suminf.    3.06887 (22) obj. -42.5217 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 124 columns, reduced to 37 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -34.8532 - took 0.15 seconds
Cbc0012I Integer solution of -34.85322 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 20 rows 24 columns
Cbc0031I 55 added rows had average density of 41.581818
Cbc0013I At root node, 55 cuts changed objective from -73.195446 to -43.15913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15036 row cuts average 6.9 elements, 1 column cuts (1 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1472 row cuts average 113.1 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 657 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1304 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 418 row cuts average 57.7 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 99 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.441 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.85322 best solution, best possible -43.15913 (2.48 seconds)
Cbc0012I Integer solution of -36.60627 found by DiveCoefficient after 5582 iterations and 2 nodes (2.51 seconds)
Cbc0012I Integer solution of -36.64147 found by rounding after 5753 iterations and 10 nodes (2.54 seconds)
Cbc0004I Integer solution of -36.6762 found after 5782 iterations and 12 nodes (2.56 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 59 rows 67 columns
Cbc0010I After 44 nodes, 3 on tree, -36.6762 best solution, best possible -42.615577 (3.20 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 45 rows 56 columns
Cbc0010I After 108 nodes, 5 on tree, -36.6762 best solution, best possible -42.615577 (3.92 seconds)
Cbc0010I After 167 nodes, 4 on tree, -36.6762 best solution, best possible -42.615577 (4.64 seconds)
Cbc0010I After 240 nodes, 13 on tree, -36.6762 best solution, best possible -42.615577 (5.34 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 46 rows 56 columns
Cbc0010I After 314 nodes, 3 on tree, -36.6762 best solution, best possible -42.615577 (6.06 seconds)
Cbc0010I After 383 nodes, 14 on tree, -36.6762 best solution, best possible -42.480212 (6.77 seconds)
Cbc0038I Full problem 111 rows 124 columns, reduced to 35 rows 49 columns
Cbc0010I After 482 nodes, 7 on tree, -36.6762 best solution, best possible -42.480212 (7.47 seconds)
Cbc0010I After 546 nodes, 4 on tree, -36.6762 best solution, best possible -40.232935 (8.17 seconds)
Cbc0001I Search completed - best objective -36.6762, took 32997 iterations and 1163 nodes (8.20 seconds)
Cbc0032I Strong branching done 4168 times (66475 iterations), fathomed 45 nodes and fixed 55 variables
Cbc0041I Maximum depth 19, 1172 variables fixed on reduced cost (complete fathoming 14 times, 611 nodes taking 7660 iterations)
Total time (CPU seconds):       7.40   (Wallclock seconds):       8.22

