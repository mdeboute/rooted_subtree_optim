Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 5.78775e-05 - average 4.41813e-07, 13 fixed columns
Coin0506I Presolve 105 (-26) rows, 60 (-14) columns and 322 (-80) elements
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 2.0986792 - largest nonzero change 0 ( 0%) - largest zero change 1.9121656e-05
Clp0000I Optimal - objective value 46.861226
Clp0000I Optimal - objective value 46.861226
Coin0511I After Postsolve, objective 46.861226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.861226
Clp0000I Optimal - objective value 46.861226
Clp0000I Optimal - objective value 46.861226
Coin0511I After Postsolve, objective 46.861226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.86122572 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 403 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.188%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.06737
Cbc0038I Solution found of -1.50449
Cbc0038I Relaxing continuous gives -11.5155
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -11.5155 to -14.3676 (0.04 seconds)
Cbc0038I Round again with cutoff of -17.6171
Cbc0038I Pass   1: suminf.    1.09913 (34) obj. -17.6171 iterations 30
Cbc0038I Pass   2: suminf.    0.77982 (5) obj. -17.6171 iterations 31
Cbc0038I Pass   3: suminf.    0.65013 (8) obj. -17.6171 iterations 4
Cbc0038I Pass   4: suminf.    1.14860 (5) obj. -17.6171 iterations 13
Cbc0038I Pass   5: suminf.    1.14860 (5) obj. -17.6171 iterations 0
Cbc0038I Pass   6: suminf.    1.53727 (4) obj. -17.6171 iterations 5
Cbc0038I Pass   7: suminf.    1.30954 (5) obj. -17.6171 iterations 3
Cbc0038I Pass   8: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass   9: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  10: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I Pass  11: suminf.    1.38372 (5) obj. -17.6171 iterations 4
Cbc0038I Pass  12: suminf.    1.30954 (5) obj. -17.6171 iterations 2
Cbc0038I Pass  13: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass  14: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  15: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I Pass  16: suminf.    1.38372 (5) obj. -17.6171 iterations 4
Cbc0038I Pass  17: suminf.    1.30954 (5) obj. -17.6171 iterations 2
Cbc0038I Pass  18: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass  19: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  20: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I Pass  21: suminf.    1.38372 (5) obj. -17.6171 iterations 4
Cbc0038I Pass  22: suminf.    1.30954 (5) obj. -17.6171 iterations 2
Cbc0038I Pass  23: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass  24: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  25: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I Pass  26: suminf.    1.38372 (5) obj. -17.6171 iterations 4
Cbc0038I Pass  27: suminf.    1.30954 (5) obj. -17.6171 iterations 2
Cbc0038I Pass  28: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass  29: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  30: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -14.3676 to -14.8871 (0.08 seconds)
Cbc0038I Round again with cutoff of -23.4659
Cbc0038I Pass  30: suminf.    2.15273 (34) obj. -23.4659 iterations 0
Cbc0038I Pass  31: suminf.    1.63241 (5) obj. -23.4659 iterations 37
Cbc0038I Pass  32: suminf.    1.63241 (5) obj. -23.4659 iterations 0
Cbc0038I Pass  33: suminf.    2.44118 (8) obj. -23.4659 iterations 9
Cbc0038I Pass  34: suminf.    2.44118 (8) obj. -23.4659 iterations 0
Cbc0038I Pass  35: suminf.    1.69667 (7) obj. -23.4659 iterations 8
Cbc0038I Pass  36: suminf.    1.69301 (6) obj. -23.4659 iterations 1
Cbc0038I Pass  37: suminf.    2.25033 (6) obj. -23.4659 iterations 8
Cbc0038I Pass  38: suminf.    1.90806 (6) obj. -23.4659 iterations 4
Cbc0038I Pass  39: suminf.    3.84206 (11) obj. -23.4659 iterations 21
Cbc0038I Pass  40: suminf.    1.78163 (8) obj. -23.4659 iterations 11
Cbc0038I Pass  41: suminf.    2.71419 (8) obj. -23.4659 iterations 11
Cbc0038I Pass  42: suminf.    2.36802 (11) obj. -23.4659 iterations 5
Cbc0038I Pass  43: suminf.    1.70948 (9) obj. -23.4659 iterations 10
Cbc0038I Pass  44: suminf.    1.57773 (9) obj. -23.4659 iterations 2
Cbc0038I Pass  45: suminf.    1.21753 (9) obj. -23.4659 iterations 2
Cbc0038I Pass  46: suminf.    2.10961 (8) obj. -23.4659 iterations 12
Cbc0038I Pass  47: suminf.    1.84141 (6) obj. -23.4659 iterations 4
Cbc0038I Pass  48: suminf.    2.15011 (6) obj. -23.4659 iterations 5
Cbc0038I Pass  49: suminf.    1.39147 (6) obj. -23.4659 iterations 8
Cbc0038I Pass  50: suminf.    1.36370 (5) obj. -23.4659 iterations 1
Cbc0038I Pass  51: suminf.    1.64894 (6) obj. -23.4659 iterations 6
Cbc0038I Pass  52: suminf.    1.64457 (5) obj. -23.4659 iterations 1
Cbc0038I Pass  53: suminf.    1.37686 (5) obj. -23.4659 iterations 4
Cbc0038I Pass  54: suminf.    1.37686 (5) obj. -23.4659 iterations 2
Cbc0038I Pass  55: suminf.    1.50513 (4) obj. -23.4659 iterations 5
Cbc0038I Pass  56: suminf.    1.41065 (4) obj. -23.4659 iterations 1
Cbc0038I Pass  57: suminf.    1.77598 (5) obj. -23.4659 iterations 7
Cbc0038I Pass  58: suminf.    1.39147 (6) obj. -23.4659 iterations 4
Cbc0038I Pass  59: suminf.    1.36370 (5) obj. -23.4659 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 79 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -14.8871 - took 0.10 seconds
Cbc0012I Integer solution of -14.88709 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 64 rows 37 columns
Cbc0031I 23 added rows had average density of 58.478261
Cbc0013I At root node, 23 cuts changed objective from -46.861226 to -38.524489 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9729 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1572 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.88709 best solution, best possible -38.524489 (0.74 seconds)
Cbc0012I Integer solution of -15.48353 found by rounding after 7827 iterations and 39 nodes (0.99 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 0 rows 0 columns
Cbc0016I Integer solution of -16.14459 found by strong branching after 7929 iterations and 53 nodes (1.00 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 7 rows 9 columns
Cbc0001I Search completed - best objective -16.14459, took 9704 iterations and 144 nodes (1.11 seconds)
Cbc0032I Strong branching done 1118 times (17888 iterations), fathomed 10 nodes and fixed 37 variables
Cbc0035I Maximum depth 34, 214 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 112 (-40) columns and 1861 (-1442) elements
Clp1000I sum of infeasibilities 2.9466e-07 - average 3.03773e-09, 14 fixed columns
Coin0506I Presolve 85 (-12) rows, 98 (-14) columns and 1470 (-391) elements
Clp0006I 0  Obj 46.350609 Dual inf 5.8713159 (96)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.5448514 - largest nonzero change 1.3318488e-05 ( 0.00086069148%) - largest zero change 2.9486615e-05
Clp0000I Optimal - objective value 60.674244
Clp0000I Optimal - objective value 60.674244
Coin0511I After Postsolve, objective 60.674244, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.674244
Clp0000I Optimal - objective value 60.674244
Clp0000I Optimal - objective value 60.674244
Clp0000I Optimal - objective value 60.674244
Coin0511I After Postsolve, objective 60.674244, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.67424446 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 116 columns (116 integer (116 of which binary)) and 1883 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.490%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 7.3744
Cbc0038I Pass   1: suminf.    1.84994 (27) obj. -40.315 iterations 26
Cbc0038I Pass   2: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Solution found of 1.58679
Cbc0038I Rounding solution of -7.05169 is better than previous of 1.58679

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -7.05169 to -8.59094 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.4097
Cbc0038I Pass   3: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Pass   4: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Pass   5: suminf.    0.54899 (2) obj. -13.4097 iterations 37
Cbc0038I Pass   6: suminf.    0.14197 (2) obj. -16.4014 iterations 7
Cbc0038I Pass   7: suminf.    1.04003 (14) obj. -23.4789 iterations 17
Cbc0038I Pass   8: suminf.    0.59444 (9) obj. -22.6577 iterations 5
Cbc0038I Pass   9: suminf.    0.16519 (1) obj. -13.4097 iterations 10
Cbc0038I Pass  10: suminf.    0.09589 (1) obj. -14.2413 iterations 2
Cbc0038I Pass  11: suminf.    1.00474 (11) obj. -13.4097 iterations 46
Cbc0038I Pass  12: suminf.    0.99543 (10) obj. -13.4173 iterations 3
Cbc0038I Pass  13: suminf.    1.94730 (15) obj. -13.4097 iterations 20
Cbc0038I Pass  14: suminf.    0.91273 (8) obj. -13.4097 iterations 10
Cbc0038I Pass  15: suminf.    0.90265 (8) obj. -13.4097 iterations 2
Cbc0038I Pass  16: suminf.    0.83182 (7) obj. -13.4097 iterations 15
Cbc0038I Pass  17: suminf.    0.45836 (5) obj. -13.4097 iterations 4
Cbc0038I Pass  18: suminf.    0.96383 (12) obj. -13.4097 iterations 18
Cbc0038I Pass  19: suminf.    0.96339 (17) obj. -13.4097 iterations 1
Cbc0038I Pass  20: suminf.    1.79558 (7) obj. -13.4097 iterations 23
Cbc0038I Pass  21: suminf.    1.71461 (7) obj. -13.6526 iterations 3
Cbc0038I Pass  22: suminf.    1.64128 (9) obj. -13.4097 iterations 10
Cbc0038I Pass  23: suminf.    0.97244 (5) obj. -13.4097 iterations 8
Cbc0038I Pass  24: suminf.    0.67726 (5) obj. -13.4097 iterations 4
Cbc0038I Pass  25: suminf.    0.98554 (6) obj. -13.4097 iterations 11
Cbc0038I Pass  26: suminf.    0.98554 (6) obj. -13.4097 iterations 1
Cbc0038I Pass  27: suminf.    1.51177 (9) obj. -13.4097 iterations 12
Cbc0038I Pass  28: suminf.    0.97244 (5) obj. -13.4097 iterations 6
Cbc0038I Pass  29: suminf.    0.51751 (5) obj. -13.4097 iterations 4
Cbc0038I Pass  30: suminf.    0.98554 (6) obj. -13.4097 iterations 11
Cbc0038I Pass  31: suminf.    0.98554 (6) obj. -13.4097 iterations 1
Cbc0038I Pass  32: suminf.    1.51177 (9) obj. -13.4097 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 42 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -8.59094 to -14.3676 (0.08 seconds)
Cbc0038I Round again with cutoff of -22.8496
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Pass  33: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Pass  34: suminf.    1.78556 (10) obj. -22.8496 iterations 43
Cbc0038I Pass  35: suminf.    1.78556 (10) obj. -22.8496 iterations 1
Cbc0038I Pass  36: suminf.    1.72023 (8) obj. -22.8496 iterations 28
Cbc0038I Pass  37: suminf.    1.62780 (8) obj. -22.8496 iterations 1
Cbc0038I Pass  38: suminf.    2.49122 (9) obj. -22.8496 iterations 20
Cbc0038I Pass  39: suminf.    0.83475 (8) obj. -22.8496 iterations 16
Cbc0038I Pass  40: suminf.    1.44913 (11) obj. -22.8496 iterations 10
Cbc0038I Pass  41: suminf.    0.62873 (9) obj. -22.8496 iterations 38
Cbc0038I Pass  42: suminf.    0.47247 (9) obj. -23.3321 iterations 7
Cbc0038I Pass  43: suminf.    0.56539 (10) obj. -22.8496 iterations 20
Cbc0038I Pass  44: suminf.    0.56539 (10) obj. -22.8496 iterations 4
Cbc0038I Pass  45: suminf.    1.89185 (10) obj. -22.8496 iterations 21
Cbc0038I Pass  46: suminf.    1.63588 (9) obj. -22.8496 iterations 10
Cbc0038I Pass  47: suminf.    2.23038 (11) obj. -22.8496 iterations 19
Cbc0038I Pass  48: suminf.    1.31287 (9) obj. -22.8496 iterations 8
Cbc0038I Pass  49: suminf.    1.72252 (12) obj. -22.8496 iterations 17
Cbc0038I Pass  50: suminf.    1.26605 (9) obj. -22.8496 iterations 10
Cbc0038I Pass  51: suminf.    0.68666 (8) obj. -22.8496 iterations 5
Cbc0038I Pass  52: suminf.    1.63883 (8) obj. -22.8496 iterations 8
Cbc0038I Pass  53: suminf.    1.31287 (9) obj. -22.8496 iterations 9
Cbc0038I Pass  54: suminf.    1.72252 (12) obj. -22.8496 iterations 18
Cbc0038I Pass  55: suminf.    1.26605 (9) obj. -22.8496 iterations 10
Cbc0038I Pass  56: suminf.    0.68666 (8) obj. -22.8496 iterations 5
Cbc0038I Pass  57: suminf.    1.63883 (8) obj. -22.8496 iterations 8
Cbc0038I Pass  58: suminf.    1.31287 (9) obj. -22.8496 iterations 9
Cbc0038I Pass  59: suminf.    1.72252 (12) obj. -22.8496 iterations 18
Cbc0038I Pass  60: suminf.    1.26605 (9) obj. -22.8496 iterations 10
Cbc0038I Pass  61: suminf.    0.68666 (8) obj. -22.8496 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -14.3676 - took 0.07 seconds
Cbc0012I Integer solution of -14.367612 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 16 rows 17 columns
Cbc0031I 60 added rows had average density of 33.066667
Cbc0013I At root node, 60 cuts changed objective from -56.77739 to -22.439181 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11329 row cuts average 10.6 elements, 0 column cuts (9 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1488 row cuts average 103.6 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 552 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 945 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 63.8 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 97 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.769 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.367612 best solution, best possible -22.439181 (2.96 seconds)
Cbc0012I Integer solution of -14.78077 found by rounding after 4412 iterations and 8 nodes (3.38 seconds)
Cbc0012I Integer solution of -15.54588 found by rounding after 5055 iterations and 21 nodes (3.58 seconds)
Cbc0016I Integer solution of -15.94726 found by strong branching after 5209 iterations and 38 nodes (3.60 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 4 rows 9 columns
Cbc0004I Integer solution of -16.14459 found after 5306 iterations and 49 nodes (3.63 seconds)
Cbc0010I After 60 nodes, 8 on tree, -16.14459 best solution, best possible -22.276506 (3.68 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 6 rows 13 columns
Cbc0001I Search completed - best objective -16.14459, took 6957 iterations and 104 nodes (3.84 seconds)
Cbc0032I Strong branching done 856 times (13924 iterations), fathomed 11 nodes and fixed 11 variables
Cbc0035I Maximum depth 19, 155 variables fixed on reduced cost
Total time (CPU seconds):       2.85   (Wallclock seconds):       3.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 5.78775e-05 - average 4.41813e-07, 13 fixed columns
Coin0506I Presolve 105 (-26) rows, 60 (-14) columns and 322 (-80) elements
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 2.0986792 - largest nonzero change 0 ( 0%) - largest zero change 1.9121656e-05
Clp0000I Optimal - objective value 46.861226
Clp0000I Optimal - objective value 46.861226
Coin0511I After Postsolve, objective 46.861226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.861226
Clp0000I Optimal - objective value 46.861226
Clp0000I Optimal - objective value 46.861226
Coin0511I After Postsolve, objective 46.861226, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.86122572 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 403 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.188%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.06737
Cbc0038I Solution found of -1.50449
Cbc0038I Relaxing continuous gives -11.5155
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -11.5155 to -14.3676 (0.04 seconds)
Cbc0038I Round again with cutoff of -17.6171
Cbc0038I Pass   1: suminf.    1.09913 (34) obj. -17.6171 iterations 30
Cbc0038I Pass   2: suminf.    0.77982 (5) obj. -17.6171 iterations 31
Cbc0038I Pass   3: suminf.    0.65013 (8) obj. -17.6171 iterations 4
Cbc0038I Pass   4: suminf.    1.14860 (5) obj. -17.6171 iterations 13
Cbc0038I Pass   5: suminf.    1.14860 (5) obj. -17.6171 iterations 0
Cbc0038I Pass   6: suminf.    1.53727 (4) obj. -17.6171 iterations 5
Cbc0038I Pass   7: suminf.    1.30954 (5) obj. -17.6171 iterations 3
Cbc0038I Pass   8: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass   9: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  10: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I Pass  11: suminf.    1.38372 (5) obj. -17.6171 iterations 4
Cbc0038I Pass  12: suminf.    1.30954 (5) obj. -17.6171 iterations 2
Cbc0038I Pass  13: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass  14: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  15: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I Pass  16: suminf.    1.38372 (5) obj. -17.6171 iterations 4
Cbc0038I Pass  17: suminf.    1.30954 (5) obj. -17.6171 iterations 2
Cbc0038I Pass  18: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass  19: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  20: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I Pass  21: suminf.    1.38372 (5) obj. -17.6171 iterations 4
Cbc0038I Pass  22: suminf.    1.30954 (5) obj. -17.6171 iterations 2
Cbc0038I Pass  23: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass  24: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  25: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I Pass  26: suminf.    1.38372 (5) obj. -17.6171 iterations 4
Cbc0038I Pass  27: suminf.    1.30954 (5) obj. -17.6171 iterations 2
Cbc0038I Pass  28: suminf.    1.29759 (5) obj. -17.6171 iterations 7
Cbc0038I Pass  29: suminf.    1.12585 (4) obj. -17.6171 iterations 4
Cbc0038I Pass  30: suminf.    1.12585 (4) obj. -17.6171 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -14.3676 to -14.8871 (0.09 seconds)
Cbc0038I Round again with cutoff of -23.4659
Cbc0038I Pass  30: suminf.    2.15273 (34) obj. -23.4659 iterations 0
Cbc0038I Pass  31: suminf.    1.63241 (5) obj. -23.4659 iterations 37
Cbc0038I Pass  32: suminf.    1.63241 (5) obj. -23.4659 iterations 0
Cbc0038I Pass  33: suminf.    2.44118 (8) obj. -23.4659 iterations 9
Cbc0038I Pass  34: suminf.    2.44118 (8) obj. -23.4659 iterations 0
Cbc0038I Pass  35: suminf.    1.69667 (7) obj. -23.4659 iterations 8
Cbc0038I Pass  36: suminf.    1.69301 (6) obj. -23.4659 iterations 1
Cbc0038I Pass  37: suminf.    2.25033 (6) obj. -23.4659 iterations 8
Cbc0038I Pass  38: suminf.    1.90806 (6) obj. -23.4659 iterations 4
Cbc0038I Pass  39: suminf.    3.84206 (11) obj. -23.4659 iterations 21
Cbc0038I Pass  40: suminf.    1.78163 (8) obj. -23.4659 iterations 11
Cbc0038I Pass  41: suminf.    2.71419 (8) obj. -23.4659 iterations 11
Cbc0038I Pass  42: suminf.    2.36802 (11) obj. -23.4659 iterations 5
Cbc0038I Pass  43: suminf.    1.70948 (9) obj. -23.4659 iterations 10
Cbc0038I Pass  44: suminf.    1.57773 (9) obj. -23.4659 iterations 2
Cbc0038I Pass  45: suminf.    1.21753 (9) obj. -23.4659 iterations 2
Cbc0038I Pass  46: suminf.    2.10961 (8) obj. -23.4659 iterations 12
Cbc0038I Pass  47: suminf.    1.84141 (6) obj. -23.4659 iterations 4
Cbc0038I Pass  48: suminf.    2.15011 (6) obj. -23.4659 iterations 5
Cbc0038I Pass  49: suminf.    1.39147 (6) obj. -23.4659 iterations 8
Cbc0038I Pass  50: suminf.    1.36370 (5) obj. -23.4659 iterations 1
Cbc0038I Pass  51: suminf.    1.64894 (6) obj. -23.4659 iterations 6
Cbc0038I Pass  52: suminf.    1.64457 (5) obj. -23.4659 iterations 1
Cbc0038I Pass  53: suminf.    1.37686 (5) obj. -23.4659 iterations 4
Cbc0038I Pass  54: suminf.    1.37686 (5) obj. -23.4659 iterations 2
Cbc0038I Pass  55: suminf.    1.50513 (4) obj. -23.4659 iterations 5
Cbc0038I Pass  56: suminf.    1.41065 (4) obj. -23.4659 iterations 1
Cbc0038I Pass  57: suminf.    1.77598 (5) obj. -23.4659 iterations 7
Cbc0038I Pass  58: suminf.    1.39147 (6) obj. -23.4659 iterations 4
Cbc0038I Pass  59: suminf.    1.36370 (5) obj. -23.4659 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 79 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -14.8871 - took 0.11 seconds
Cbc0012I Integer solution of -14.88709 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 64 rows 37 columns
Cbc0031I 23 added rows had average density of 58.478261
Cbc0013I At root node, 23 cuts changed objective from -46.861226 to -38.524489 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9729 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1572 row cuts average 73.8 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.88709 best solution, best possible -38.524489 (0.87 seconds)
Cbc0012I Integer solution of -15.48353 found by rounding after 7827 iterations and 39 nodes (1.20 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 0 rows 0 columns
Cbc0016I Integer solution of -16.14459 found by strong branching after 7929 iterations and 53 nodes (1.21 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 7 rows 9 columns
Cbc0001I Search completed - best objective -16.14459, took 9704 iterations and 144 nodes (1.35 seconds)
Cbc0032I Strong branching done 1118 times (17888 iterations), fathomed 10 nodes and fixed 37 variables
Cbc0035I Maximum depth 34, 214 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 112 (-41) columns and 1861 (-1443) elements
Clp1000I sum of infeasibilities 2.9466e-07 - average 3.03773e-09, 14 fixed columns
Coin0506I Presolve 85 (-12) rows, 98 (-14) columns and 1470 (-391) elements
Clp0006I 0  Obj 46.350609 Dual inf 5.8713159 (96)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.5448514 - largest nonzero change 1.3318488e-05 ( 0.00086069148%) - largest zero change 2.9486615e-05
Clp0000I Optimal - objective value 60.674244
Clp0000I Optimal - objective value 60.674244
Coin0511I After Postsolve, objective 60.674244, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.674244
Clp0000I Optimal - objective value 60.674244
Clp0000I Optimal - objective value 60.674244
Clp0000I Optimal - objective value 60.674244
Coin0511I After Postsolve, objective 60.674244, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.67424446 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 116 columns (116 integer (116 of which binary)) and 1883 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.490%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 7.3744
Cbc0038I Pass   1: suminf.    1.84994 (27) obj. -40.315 iterations 26
Cbc0038I Pass   2: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Solution found of 1.58679
Cbc0038I Rounding solution of -7.05169 is better than previous of 1.58679

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -7.05169 to -8.59094 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.4097
Cbc0038I Pass   3: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Pass   4: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Pass   5: suminf.    0.54899 (2) obj. -13.4097 iterations 37
Cbc0038I Pass   6: suminf.    0.14197 (2) obj. -16.4014 iterations 7
Cbc0038I Pass   7: suminf.    1.04003 (14) obj. -23.4789 iterations 17
Cbc0038I Pass   8: suminf.    0.59444 (9) obj. -22.6577 iterations 5
Cbc0038I Pass   9: suminf.    0.16519 (1) obj. -13.4097 iterations 10
Cbc0038I Pass  10: suminf.    0.09589 (1) obj. -14.2413 iterations 2
Cbc0038I Pass  11: suminf.    1.00474 (11) obj. -13.4097 iterations 46
Cbc0038I Pass  12: suminf.    0.99543 (10) obj. -13.4173 iterations 3
Cbc0038I Pass  13: suminf.    1.94730 (15) obj. -13.4097 iterations 20
Cbc0038I Pass  14: suminf.    0.91273 (8) obj. -13.4097 iterations 10
Cbc0038I Pass  15: suminf.    0.90265 (8) obj. -13.4097 iterations 2
Cbc0038I Pass  16: suminf.    0.83182 (7) obj. -13.4097 iterations 15
Cbc0038I Pass  17: suminf.    0.45836 (5) obj. -13.4097 iterations 4
Cbc0038I Pass  18: suminf.    0.96383 (12) obj. -13.4097 iterations 18
Cbc0038I Pass  19: suminf.    0.96339 (17) obj. -13.4097 iterations 1
Cbc0038I Pass  20: suminf.    1.79558 (7) obj. -13.4097 iterations 23
Cbc0038I Pass  21: suminf.    1.71461 (7) obj. -13.6526 iterations 3
Cbc0038I Pass  22: suminf.    1.64128 (9) obj. -13.4097 iterations 10
Cbc0038I Pass  23: suminf.    0.97244 (5) obj. -13.4097 iterations 8
Cbc0038I Pass  24: suminf.    0.67726 (5) obj. -13.4097 iterations 4
Cbc0038I Pass  25: suminf.    0.98554 (6) obj. -13.4097 iterations 11
Cbc0038I Pass  26: suminf.    0.98554 (6) obj. -13.4097 iterations 1
Cbc0038I Pass  27: suminf.    1.51177 (9) obj. -13.4097 iterations 12
Cbc0038I Pass  28: suminf.    0.97244 (5) obj. -13.4097 iterations 6
Cbc0038I Pass  29: suminf.    0.51751 (5) obj. -13.4097 iterations 4
Cbc0038I Pass  30: suminf.    0.98554 (6) obj. -13.4097 iterations 11
Cbc0038I Pass  31: suminf.    0.98554 (6) obj. -13.4097 iterations 1
Cbc0038I Pass  32: suminf.    1.51177 (9) obj. -13.4097 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 42 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -8.59094 to -14.3676 (0.07 seconds)
Cbc0038I Round again with cutoff of -22.8496
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Pass  33: suminf.    1.84994 (27) obj. -40.315 iterations 0
Cbc0038I Pass  34: suminf.    1.78556 (10) obj. -22.8496 iterations 43
Cbc0038I Pass  35: suminf.    1.78556 (10) obj. -22.8496 iterations 1
Cbc0038I Pass  36: suminf.    1.72023 (8) obj. -22.8496 iterations 28
Cbc0038I Pass  37: suminf.    1.62780 (8) obj. -22.8496 iterations 1
Cbc0038I Pass  38: suminf.    2.49122 (9) obj. -22.8496 iterations 20
Cbc0038I Pass  39: suminf.    0.83475 (8) obj. -22.8496 iterations 16
Cbc0038I Pass  40: suminf.    1.44913 (11) obj. -22.8496 iterations 10
Cbc0038I Pass  41: suminf.    0.62873 (9) obj. -22.8496 iterations 38
Cbc0038I Pass  42: suminf.    0.47247 (9) obj. -23.3321 iterations 7
Cbc0038I Pass  43: suminf.    0.56539 (10) obj. -22.8496 iterations 20
Cbc0038I Pass  44: suminf.    0.56539 (10) obj. -22.8496 iterations 4
Cbc0038I Pass  45: suminf.    1.89185 (10) obj. -22.8496 iterations 21
Cbc0038I Pass  46: suminf.    1.63588 (9) obj. -22.8496 iterations 10
Cbc0038I Pass  47: suminf.    2.23038 (11) obj. -22.8496 iterations 19
Cbc0038I Pass  48: suminf.    1.31287 (9) obj. -22.8496 iterations 8
Cbc0038I Pass  49: suminf.    1.72252 (12) obj. -22.8496 iterations 17
Cbc0038I Pass  50: suminf.    1.26605 (9) obj. -22.8496 iterations 10
Cbc0038I Pass  51: suminf.    0.68666 (8) obj. -22.8496 iterations 5
Cbc0038I Pass  52: suminf.    1.63883 (8) obj. -22.8496 iterations 8
Cbc0038I Pass  53: suminf.    1.31287 (9) obj. -22.8496 iterations 9
Cbc0038I Pass  54: suminf.    1.72252 (12) obj. -22.8496 iterations 18
Cbc0038I Pass  55: suminf.    1.26605 (9) obj. -22.8496 iterations 10
Cbc0038I Pass  56: suminf.    0.68666 (8) obj. -22.8496 iterations 5
Cbc0038I Pass  57: suminf.    1.63883 (8) obj. -22.8496 iterations 8
Cbc0038I Pass  58: suminf.    1.31287 (9) obj. -22.8496 iterations 9
Cbc0038I Pass  59: suminf.    1.72252 (12) obj. -22.8496 iterations 18
Cbc0038I Pass  60: suminf.    1.26605 (9) obj. -22.8496 iterations 10
Cbc0038I Pass  61: suminf.    0.68666 (8) obj. -22.8496 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 116 columns, reduced to 19 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -14.3676 - took 0.08 seconds
Cbc0012I Integer solution of -14.367612 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 16 rows 17 columns
Cbc0031I 60 added rows had average density of 33.066667
Cbc0013I At root node, 60 cuts changed objective from -56.77739 to -22.439181 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11329 row cuts average 10.6 elements, 0 column cuts (9 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1488 row cuts average 103.6 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 552 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 945 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 63.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 97 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.774 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.367612 best solution, best possible -22.439181 (2.93 seconds)
Cbc0012I Integer solution of -14.78077 found by rounding after 4412 iterations and 8 nodes (3.37 seconds)
Cbc0012I Integer solution of -15.54588 found by rounding after 5055 iterations and 21 nodes (3.56 seconds)
Cbc0016I Integer solution of -15.94726 found by strong branching after 5209 iterations and 38 nodes (3.58 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 4 rows 9 columns
Cbc0004I Integer solution of -16.14459 found after 5306 iterations and 49 nodes (3.61 seconds)
Cbc0010I After 60 nodes, 8 on tree, -16.14459 best solution, best possible -22.276506 (3.66 seconds)
Cbc0038I Full problem 101 rows 116 columns, reduced to 6 rows 13 columns
Cbc0001I Search completed - best objective -16.14459, took 6957 iterations and 104 nodes (3.80 seconds)
Cbc0032I Strong branching done 856 times (13924 iterations), fathomed 11 nodes and fixed 11 variables
Cbc0035I Maximum depth 19, 155 variables fixed on reduced cost
Total time (CPU seconds):       2.85   (Wallclock seconds):       3.82

