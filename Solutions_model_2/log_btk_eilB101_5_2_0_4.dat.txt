Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 71 (-32) columns and 389 (-214) elements
Clp1000I sum of infeasibilities 0.000248758 - average 1.95873e-06, 62 fixed columns
Coin0506I Presolve 7 (-120) rows, 7 (-64) columns and 22 (-367) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Coin0511I After Postsolve, objective 26974.553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9123714 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Coin0511I After Postsolve, objective 26974.553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26974.55319 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 71 columns (70 integer (70 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.379%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.56876
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23322 iterations 24
Cbc0038I Solution found of -23322
Cbc0038I Relaxing continuous gives -23322
Cbc0038I Rounding solution of -23869.4 is better than previous of -23322

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24179.9
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.14587 (1) obj. -24179.9 iterations 1
Cbc0038I Pass   3: suminf.    0.36111 (1) obj. -25446 iterations 1
Cbc0038I Pass   4: suminf.    0.58069 (6) obj. -24179.9 iterations 11
Cbc0038I Pass   5: suminf.    0.07387 (1) obj. -24179.9 iterations 11
Cbc0038I Pass   6: suminf.    0.27778 (1) obj. -25379.3 iterations 1
Cbc0038I Pass   7: suminf.    0.10767 (2) obj. -24179.9 iterations 12
Cbc0038I Pass   8: suminf.    0.10767 (2) obj. -24179.9 iterations 4
Cbc0038I Pass   9: suminf.    0.30556 (1) obj. -25119.2 iterations 4
Cbc0038I Pass  10: suminf.    0.14587 (1) obj. -24179.9 iterations 1
Cbc0038I Pass  11: suminf.    0.89790 (5) obj. -24179.9 iterations 18
Cbc0038I Pass  12: suminf.    0.12479 (1) obj. -24179.9 iterations 14
Cbc0038I Pass  13: suminf.    0.13889 (1) obj. -24262.9 iterations 1
Cbc0038I Pass  14: suminf.    2.11136 (6) obj. -24179.9 iterations 10
Cbc0038I Pass  15: suminf.    0.93258 (3) obj. -24179.9 iterations 10
Cbc0038I Pass  16: suminf.    0.56595 (3) obj. -24782.7 iterations 4
Cbc0038I Pass  17: suminf.    1.15879 (4) obj. -24179.9 iterations 3
Cbc0038I Pass  18: suminf.    0.73329 (3) obj. -24179.9 iterations 14
Cbc0038I Pass  19: suminf.    0.37451 (2) obj. -24179.9 iterations 4
Cbc0038I Pass  20: suminf.    0.20226 (1) obj. -24179.9 iterations 1
Cbc0038I Pass  21: suminf.    0.04878 (2) obj. -25085.3 iterations 3
Cbc0038I Pass  22: suminf.    0.95939 (3) obj. -24179.9 iterations 4
Cbc0038I Pass  23: suminf.    0.71133 (4) obj. -24179.9 iterations 14
Cbc0038I Pass  24: suminf.    0.14587 (1) obj. -24179.9 iterations 7
Cbc0038I Pass  25: suminf.    0.22222 (1) obj. -24629 iterations 1
Cbc0038I Pass  26: suminf.    0.33543 (4) obj. -24179.9 iterations 10
Cbc0038I Pass  27: suminf.    0.33543 (4) obj. -24179.9 iterations 7
Cbc0038I Pass  28: suminf.    0.17594 (2) obj. -24614.1 iterations 15
Cbc0038I Solution found of -24296
Cbc0038I Relaxing continuous gives -24296
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -24296 to -25809.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -26042.7
Cbc0038I Reduced cost fixing fixed 47 variables on major pass 3
Cbc0038I Pass  29: suminf.    0.73989 (3) obj. -26042.7 iterations 5
Cbc0038I Pass  30: suminf.    0.85531 (4) obj. -26042.7 iterations 11
Cbc0038I Pass  31: suminf.    0.85531 (4) obj. -26042.7 iterations 0
Cbc0038I Pass  32: suminf.    0.73989 (3) obj. -26042.7 iterations 11
Cbc0038I Pass  33: suminf.    0.78034 (3) obj. -26042.7 iterations 8
Cbc0038I Pass  34: suminf.    0.73989 (3) obj. -26042.7 iterations 7
Cbc0038I Pass  35: suminf.    0.85653 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  36: suminf.    0.85531 (4) obj. -26042.7 iterations 7
Cbc0038I Pass  37: suminf.    0.88327 (3) obj. -26042.7 iterations 10
Cbc0038I Pass  38: suminf.    0.80768 (3) obj. -26042.7 iterations 7
Cbc0038I Pass  39: suminf.    0.66543 (5) obj. -26042.7 iterations 13
Cbc0038I Pass  40: suminf.    0.65297 (5) obj. -26042.7 iterations 8
Cbc0038I Pass  41: suminf.    0.85531 (4) obj. -26042.7 iterations 10
Cbc0038I Pass  42: suminf.    0.85531 (4) obj. -26042.7 iterations 0
Cbc0038I Pass  43: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  44: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I Pass  45: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  46: suminf.    0.89182 (3) obj. -26042.7 iterations 6
Cbc0038I Pass  47: suminf.    1.27755 (4) obj. -26042.7 iterations 6
Cbc0038I Pass  48: suminf.    0.43885 (3) obj. -26042.7 iterations 8
Cbc0038I Pass  49: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  50: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  51: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I Pass  52: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  53: suminf.    1.23514 (3) obj. -26042.7 iterations 6
Cbc0038I Pass  54: suminf.    0.81425 (2) obj. -26042.7 iterations 5
Cbc0038I Pass  55: suminf.    0.91667 (2) obj. -26915.7 iterations 2
Cbc0038I Pass  56: suminf.    0.85531 (4) obj. -26042.7 iterations 3
Cbc0038I Pass  57: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  58: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25809.8 - took 0.02 seconds
Cbc0012I Integer solution of -25809.79 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 126 rows 71 columns, reduced to 7 rows 7 columns
Cbc0031I 7 added rows had average density of 7.1428571
Cbc0013I At root node, 7 cuts changed objective from -26974.553 to -26013.055 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 2.4 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 69.2 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25809.79, took 63 iterations and 0 nodes (0.21 seconds)
Cbc0032I Strong branching done 8 times (37 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-100) rows, 117 (-85) columns and 1904 (-3749) elements
Clp1000I sum of infeasibilities 1.7916e-07 - average 1.72269e-09, 110 fixed columns
Coin0506I Presolve 6 (-98) rows, 7 (-110) columns and 22 (-1882) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 26949.553
Clp0000I Optimal - objective value 26949.553
Coin0511I After Postsolve, objective 26949.553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8502969 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 27009.769
Clp0000I Optimal - objective value 27009.769
Clp0000I Optimal - objective value 27009.769
Coin0511I After Postsolve, objective 27009.769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 27009.76933 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 118 columns (118 integer (118 of which binary)) and 1917 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.361%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 2.87388
Cbc0038I Pass   1: suminf.    1.01713 (25) obj. -23350.7 iterations 15
Cbc0038I Pass   2: suminf.    0.41302 (12) obj. -23333.5 iterations 13
Cbc0038I Pass   3: suminf.    0.06202 (2) obj. -23323.9 iterations 10
Cbc0038I Solution found of -23322
Cbc0038I Rounding solution of -23869.4 is better than previous of -23322

Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 118 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -24182.3
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.19781 (26) obj. -24182.3 iterations 1
Cbc0038I Pass   5: suminf.    0.91849 (15) obj. -25460.4 iterations 14
Cbc0038I Pass   6: suminf.    0.66482 (15) obj. -24182.3 iterations 1
Cbc0038I Pass   7: suminf.    0.39337 (2) obj. -25446.9 iterations 14
Cbc0038I Pass   8: suminf.    0.17836 (2) obj. -24182.3 iterations 1
Cbc0038I Pass   9: suminf.    0.36111 (1) obj. -25446 iterations 2
Cbc0038I Pass  10: suminf.    0.14627 (1) obj. -24182.3 iterations 1
Cbc0038I Pass  11: suminf.    1.27294 (14) obj. -24182.3 iterations 24
Cbc0038I Pass  12: suminf.    0.33030 (6) obj. -24182.3 iterations 10
Cbc0038I Pass  13: suminf.    0.27778 (1) obj. -25374.3 iterations 7
Cbc0038I Pass  14: suminf.    0.07512 (1) obj. -24182.3 iterations 2
Cbc0038I Pass  15: suminf.    1.36509 (14) obj. -24182.3 iterations 23
Cbc0038I Pass  16: suminf.    1.01709 (12) obj. -24182.3 iterations 16
Cbc0038I Pass  17: suminf.    0.36111 (1) obj. -25430 iterations 21
Cbc0038I Pass  18: suminf.    0.14899 (1) obj. -24182.3 iterations 2
Cbc0038I Pass  19: suminf.    1.04572 (10) obj. -26158.5 iterations 21
Cbc0038I Pass  20: suminf.    0.41592 (8) obj. -24182.3 iterations 10
Cbc0038I Pass  21: suminf.    0.36111 (1) obj. -25432 iterations 9
Cbc0038I Pass  22: suminf.    0.14865 (1) obj. -24182.3 iterations 2
Cbc0038I Pass  23: suminf.    1.01707 (6) obj. -24182.3 iterations 17
Cbc0038I Pass  24: suminf.    1.01707 (6) obj. -24182.3 iterations 3
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -25794.8 iterations 8
Cbc0038I Solution found of -25794.8
Cbc0038I Rounding solution of -25809.8 is better than previous of -25794.8

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 118 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -26047.4
Cbc0038I Reduced cost fixing fixed 54 variables on major pass 3
Cbc0038I Pass  26: suminf.    1.94985 (28) obj. -26047.4 iterations 4
Cbc0038I Pass  27: suminf.    0.86466 (6) obj. -26047.4 iterations 32
Cbc0038I Pass  28: suminf.    0.85586 (8) obj. -26047.4 iterations 7
Cbc0038I Pass  29: suminf.    0.74117 (3) obj. -26047.4 iterations 8
Cbc0038I Pass  30: suminf.    0.74117 (3) obj. -26047.4 iterations 0
Cbc0038I Pass  31: suminf.    0.75996 (4) obj. -26047.4 iterations 9
Cbc0038I Pass  32: suminf.    0.74937 (6) obj. -26047.4 iterations 6
Cbc0038I Pass  33: suminf.    1.12464 (10) obj. -26047.4 iterations 7
Cbc0038I Pass  34: suminf.    1.12464 (10) obj. -26047.4 iterations 0
Cbc0038I Pass  35: suminf.    1.32155 (15) obj. -26047.4 iterations 7
Cbc0038I Pass  36: suminf.    1.31625 (13) obj. -26047.4 iterations 2
Cbc0038I Pass  37: suminf.    0.74171 (3) obj. -26047.4 iterations 24
Cbc0038I Pass  38: suminf.    0.76477 (4) obj. -26047.4 iterations 9
Cbc0038I Pass  39: suminf.    0.75409 (6) obj. -26047.4 iterations 6
Cbc0038I Pass  40: suminf.    0.74171 (3) obj. -26047.4 iterations 6
Cbc0038I Pass  41: suminf.    1.39142 (9) obj. -26047.4 iterations 13
Cbc0038I Pass  42: suminf.    1.28662 (9) obj. -26047.4 iterations 5
Cbc0038I Pass  43: suminf.    0.77439 (4) obj. -26047.4 iterations 17
Cbc0038I Pass  44: suminf.    0.76353 (6) obj. -26047.4 iterations 6
Cbc0038I Pass  45: suminf.    0.74280 (3) obj. -26047.4 iterations 6
Cbc0038I Pass  46: suminf.    0.74280 (3) obj. -26047.4 iterations 0
Cbc0038I Pass  47: suminf.    0.88143 (6) obj. -26047.4 iterations 7
Cbc0038I Pass  48: suminf.    0.88143 (6) obj. -26047.4 iterations 1
Cbc0038I Pass  49: suminf.    0.78161 (4) obj. -26047.4 iterations 12
Cbc0038I Pass  50: suminf.    0.77061 (6) obj. -26047.4 iterations 5
Cbc0038I Pass  51: suminf.    0.74361 (3) obj. -26047.4 iterations 5
Cbc0038I Pass  52: suminf.    0.74361 (3) obj. -26047.4 iterations 0
Cbc0038I Pass  53: suminf.    1.01776 (8) obj. -26047.4 iterations 18
Cbc0038I Pass  54: suminf.    0.63500 (9) obj. -26047.4 iterations 8
Cbc0038I Pass  55: suminf.    1.55564 (4) obj. -26047.4 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 118 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -25809.8 - took 0.04 seconds
Cbc0012I Integer solution of -25809.79 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 104 rows 118 columns, reduced to 10 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 3
Cbc0013I At root node, 8 cuts changed objective from -26974.318 to -23442.674 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 2.1 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 55.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25809.79, took 77 iterations and 0 nodes (0.17 seconds)
Cbc0035I Maximum depth 0, 54 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 71 (-32) columns and 389 (-214) elements
Clp1000I sum of infeasibilities 0.000248758 - average 1.95873e-06, 62 fixed columns
Coin0506I Presolve 7 (-120) rows, 7 (-64) columns and 22 (-367) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Coin0511I After Postsolve, objective 26974.553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9123714 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Clp0000I Optimal - objective value 26974.553
Coin0511I After Postsolve, objective 26974.553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26974.55319 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 126 rows, 71 columns (70 integer (70 of which binary)) and 397 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.379%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.56876
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -23322 iterations 24
Cbc0038I Solution found of -23322
Cbc0038I Relaxing continuous gives -23322
Cbc0038I Rounding solution of -23869.4 is better than previous of -23322

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24179.9
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.14587 (1) obj. -24179.9 iterations 1
Cbc0038I Pass   3: suminf.    0.36111 (1) obj. -25446 iterations 1
Cbc0038I Pass   4: suminf.    0.58069 (6) obj. -24179.9 iterations 11
Cbc0038I Pass   5: suminf.    0.07387 (1) obj. -24179.9 iterations 11
Cbc0038I Pass   6: suminf.    0.27778 (1) obj. -25379.3 iterations 1
Cbc0038I Pass   7: suminf.    0.10767 (2) obj. -24179.9 iterations 12
Cbc0038I Pass   8: suminf.    0.10767 (2) obj. -24179.9 iterations 4
Cbc0038I Pass   9: suminf.    0.30556 (1) obj. -25119.2 iterations 4
Cbc0038I Pass  10: suminf.    0.14587 (1) obj. -24179.9 iterations 1
Cbc0038I Pass  11: suminf.    0.89790 (5) obj. -24179.9 iterations 18
Cbc0038I Pass  12: suminf.    0.12479 (1) obj. -24179.9 iterations 14
Cbc0038I Pass  13: suminf.    0.13889 (1) obj. -24262.9 iterations 1
Cbc0038I Pass  14: suminf.    2.11136 (6) obj. -24179.9 iterations 10
Cbc0038I Pass  15: suminf.    0.93258 (3) obj. -24179.9 iterations 10
Cbc0038I Pass  16: suminf.    0.56595 (3) obj. -24782.7 iterations 4
Cbc0038I Pass  17: suminf.    1.15879 (4) obj. -24179.9 iterations 3
Cbc0038I Pass  18: suminf.    0.73329 (3) obj. -24179.9 iterations 14
Cbc0038I Pass  19: suminf.    0.37451 (2) obj. -24179.9 iterations 4
Cbc0038I Pass  20: suminf.    0.20226 (1) obj. -24179.9 iterations 1
Cbc0038I Pass  21: suminf.    0.04878 (2) obj. -25085.3 iterations 3
Cbc0038I Pass  22: suminf.    0.95939 (3) obj. -24179.9 iterations 4
Cbc0038I Pass  23: suminf.    0.71133 (4) obj. -24179.9 iterations 14
Cbc0038I Pass  24: suminf.    0.14587 (1) obj. -24179.9 iterations 7
Cbc0038I Pass  25: suminf.    0.22222 (1) obj. -24629 iterations 1
Cbc0038I Pass  26: suminf.    0.33543 (4) obj. -24179.9 iterations 10
Cbc0038I Pass  27: suminf.    0.33543 (4) obj. -24179.9 iterations 7
Cbc0038I Pass  28: suminf.    0.17594 (2) obj. -24614.1 iterations 15
Cbc0038I Solution found of -24296
Cbc0038I Relaxing continuous gives -24296
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -24296 to -25809.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -26042.7
Cbc0038I Reduced cost fixing fixed 47 variables on major pass 3
Cbc0038I Pass  29: suminf.    0.73989 (3) obj. -26042.7 iterations 5
Cbc0038I Pass  30: suminf.    0.85531 (4) obj. -26042.7 iterations 11
Cbc0038I Pass  31: suminf.    0.85531 (4) obj. -26042.7 iterations 0
Cbc0038I Pass  32: suminf.    0.73989 (3) obj. -26042.7 iterations 11
Cbc0038I Pass  33: suminf.    0.78034 (3) obj. -26042.7 iterations 8
Cbc0038I Pass  34: suminf.    0.73989 (3) obj. -26042.7 iterations 7
Cbc0038I Pass  35: suminf.    0.85653 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  36: suminf.    0.85531 (4) obj. -26042.7 iterations 7
Cbc0038I Pass  37: suminf.    0.88327 (3) obj. -26042.7 iterations 10
Cbc0038I Pass  38: suminf.    0.80768 (3) obj. -26042.7 iterations 7
Cbc0038I Pass  39: suminf.    0.66543 (5) obj. -26042.7 iterations 13
Cbc0038I Pass  40: suminf.    0.65297 (5) obj. -26042.7 iterations 8
Cbc0038I Pass  41: suminf.    0.85531 (4) obj. -26042.7 iterations 10
Cbc0038I Pass  42: suminf.    0.85531 (4) obj. -26042.7 iterations 0
Cbc0038I Pass  43: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  44: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I Pass  45: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  46: suminf.    0.89182 (3) obj. -26042.7 iterations 6
Cbc0038I Pass  47: suminf.    1.27755 (4) obj. -26042.7 iterations 6
Cbc0038I Pass  48: suminf.    0.43885 (3) obj. -26042.7 iterations 8
Cbc0038I Pass  49: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  50: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  51: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I Pass  52: suminf.    0.85531 (4) obj. -26042.7 iterations 9
Cbc0038I Pass  53: suminf.    1.23514 (3) obj. -26042.7 iterations 6
Cbc0038I Pass  54: suminf.    0.81425 (2) obj. -26042.7 iterations 5
Cbc0038I Pass  55: suminf.    0.91667 (2) obj. -26915.7 iterations 2
Cbc0038I Pass  56: suminf.    0.85531 (4) obj. -26042.7 iterations 3
Cbc0038I Pass  57: suminf.    0.73989 (3) obj. -26042.7 iterations 9
Cbc0038I Pass  58: suminf.    0.73989 (3) obj. -26042.7 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126 rows 71 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25809.8 - took 0.02 seconds
Cbc0012I Integer solution of -25809.79 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 126 rows 71 columns, reduced to 7 rows 7 columns
Cbc0031I 7 added rows had average density of 7.1428571
Cbc0013I At root node, 7 cuts changed objective from -26974.553 to -26013.055 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 2.4 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 69.2 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25809.79, took 63 iterations and 0 nodes (0.25 seconds)
Cbc0032I Strong branching done 8 times (37 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-107) rows, 111 (-92) columns and 1730 (-3924) elements
Clp1000I sum of infeasibilities 2.47198e-07 - average 2.52243e-09, 104 fixed columns
Coin0506I Presolve 6 (-92) rows, 7 (-104) columns and 22 (-1708) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 26949.553
Clp0000I Optimal - objective value 26949.553
Coin0511I After Postsolve, objective 26949.553, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9230745 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 27009.769
Clp0000I Optimal - objective value 27009.769
Clp0000I Optimal - objective value 27009.769
Coin0511I After Postsolve, objective 27009.769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 27009.76933 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 112 columns (112 integer (112 of which binary)) and 1742 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.413%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.03349
Cbc0038I Pass   1: suminf.    1.14264 (25) obj. -23350.6 iterations 13
Cbc0038I Pass   2: suminf.    0.10347 (3) obj. -23324.8 iterations 22
Cbc0038I Solution found of -23322
Cbc0038I Rounding solution of -23869.4 is better than previous of -23322

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -24182.3
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.32787 (26) obj. -24182.3 iterations 1
Cbc0038I Pass   4: suminf.    1.03636 (16) obj. -25463.1 iterations 12
Cbc0038I Pass   5: suminf.    0.77463 (16) obj. -24182.3 iterations 2
Cbc0038I Pass   6: suminf.    0.36111 (1) obj. -25446 iterations 17
Cbc0038I Pass   7: suminf.    0.14626 (1) obj. -24182.3 iterations 1
Cbc0038I Pass   8: suminf.    1.86870 (8) obj. -24182.3 iterations 20
Cbc0038I Pass   9: suminf.    1.09866 (7) obj. -24182.3 iterations 7
Cbc0038I Pass  10: suminf.    0.39212 (5) obj. -24182.3 iterations 3
Cbc0038I Pass  11: suminf.    0.30556 (1) obj. -25109.2 iterations 5
Cbc0038I Pass  12: suminf.    0.14796 (1) obj. -24182.3 iterations 1
Cbc0038I Pass  13: suminf.    1.12623 (9) obj. -24182.3 iterations 25
Cbc0038I Pass  14: suminf.    1.10560 (10) obj. -24182.3 iterations 14
Cbc0038I Pass  15: suminf.    0.52439 (7) obj. -24182.3 iterations 6
Cbc0038I Pass  16: suminf.    0.30556 (1) obj. -25106.2 iterations 7
Cbc0038I Pass  17: suminf.    0.14847 (1) obj. -24182.3 iterations 1
Cbc0038I Pass  18: suminf.    0.94051 (10) obj. -25311.6 iterations 18
Cbc0038I Pass  19: suminf.    0.39308 (5) obj. -24182.3 iterations 12
Cbc0038I Pass  20: suminf.    0.30556 (1) obj. -25105.2 iterations 5
Cbc0038I Pass  21: suminf.    0.14864 (1) obj. -24182.3 iterations 1
Cbc0038I Pass  22: suminf.    0.61968 (8) obj. -24182.3 iterations 21
Cbc0038I Pass  23: suminf.    0.54372 (7) obj. -24182.3 iterations 10
Cbc0038I Pass  24: suminf.    0.30556 (1) obj. -25110.2 iterations 9
Cbc0038I Pass  25: suminf.    0.14779 (1) obj. -24182.3 iterations 1
Cbc0038I Pass  26: suminf.    1.56425 (5) obj. -24182.3 iterations 19
Cbc0038I Pass  27: suminf.    0.18947 (2) obj. -24182.3 iterations 5
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -24292.3 iterations 2
Cbc0038I Pass  29: suminf.    0.14796 (1) obj. -24182.3 iterations 1
Cbc0038I Pass  30: suminf.    2.26907 (17) obj. -24182.3 iterations 19
Cbc0038I Pass  31: suminf.    0.72650 (10) obj. -24182.3 iterations 11
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -24287.3 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -23869.4 - took 0.02 seconds
Cbc0012I Integer solution of -23869.424 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 98 rows 112 columns, reduced to 10 rows 12 columns
Cbc0012I Integer solution of -25809.79 found by DiveCoefficient after 113 iterations and 0 nodes (0.26 seconds)
Cbc0031I 15 added rows had average density of 15.533333
Cbc0013I At root node, 15 cuts changed objective from -26974.289 to -25856.806 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 94 row cuts average 4.1 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 76 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 39.2 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25809.79, took 114 iterations and 0 nodes (0.26 seconds)
Cbc0032I Strong branching done 10 times (109 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.27

