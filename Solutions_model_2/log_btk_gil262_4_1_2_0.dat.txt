Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 506 (-21) rows, 262 (-2) columns and 1504 (-41) elements
Clp1000I sum of infeasibilities 3.53108e-05 - average 6.97841e-08, 81 fixed columns
Coin0506I Presolve 343 (-163) rows, 180 (-82) columns and 1021 (-483) elements
Clp0029I End of values pass after 180 iterations
Clp0014I Perturbing problem by 0.001% of 2.098485 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Coin0511I After Postsolve, objective 149.32914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Coin0511I After Postsolve, objective 149.32914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.3291448 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 506 rows, 262 columns (261 integer (261 of which binary)) and 1504 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 14.473
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20.0829 iterations 143
Cbc0038I Solution found of 20.0829
Cbc0038I Relaxing continuous gives 20.0829
Cbc0038I Rounding solution of -21.3363 is better than previous of 20.0829

Cbc0038I Before mini branch and bound, 206 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -21.3363 to -78.1033 (0.07 seconds)
Cbc0038I Round again with cutoff of -85.2259
Cbc0038I Pass   2: suminf.    3.35770 (12) obj. -85.2259 iterations 23
Cbc0038I Pass   3: suminf.    3.04529 (10) obj. -85.2259 iterations 15
Cbc0038I Pass   4: suminf.    2.97794 (10) obj. -85.2259 iterations 4
Cbc0038I Pass   5: suminf.    2.97794 (10) obj. -85.2259 iterations 3
Cbc0038I Pass   6: suminf.    3.09235 (8) obj. -85.2259 iterations 13
Cbc0038I Pass   7: suminf.    2.35269 (6) obj. -85.2259 iterations 18
Cbc0038I Pass   8: suminf.    1.72696 (7) obj. -85.2259 iterations 8
Cbc0038I Pass   9: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  10: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  11: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  12: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  13: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I Pass  14: suminf.    1.05339 (4) obj. -85.2259 iterations 3
Cbc0038I Pass  15: suminf.    2.13160 (7) obj. -85.2259 iterations 25
Cbc0038I Pass  16: suminf.    1.76259 (6) obj. -85.2259 iterations 2
Cbc0038I Pass  17: suminf.    1.72696 (7) obj. -85.2259 iterations 3
Cbc0038I Pass  18: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  19: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  20: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  21: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  22: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I Pass  23: suminf.    1.05339 (4) obj. -85.2259 iterations 3
Cbc0038I Pass  24: suminf.    2.13160 (7) obj. -85.2259 iterations 25
Cbc0038I Pass  25: suminf.    1.76259 (6) obj. -85.2259 iterations 2
Cbc0038I Pass  26: suminf.    1.72696 (7) obj. -85.2259 iterations 3
Cbc0038I Pass  27: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  28: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  29: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  30: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  31: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 114 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -78.1033 to -79.1217 (0.14 seconds)
Cbc0038I Round again with cutoff of -98.0466
Cbc0038I Pass  31: suminf.    4.07769 (14) obj. -98.0466 iterations 4
Cbc0038I Pass  32: suminf.    3.71921 (13) obj. -98.0466 iterations 19
Cbc0038I Pass  33: suminf.    3.65853 (12) obj. -98.0466 iterations 13
Cbc0038I Pass  34: suminf.    3.44564 (10) obj. -98.0466 iterations 20
Cbc0038I Pass  35: suminf.    3.08146 (9) obj. -98.0466 iterations 26
Cbc0038I Pass  36: suminf.    3.08146 (9) obj. -98.0466 iterations 0
Cbc0038I Pass  37: suminf.    2.91153 (10) obj. -98.0466 iterations 8
Cbc0038I Pass  38: suminf.    2.25604 (7) obj. -98.0466 iterations 11
Cbc0038I Pass  39: suminf.    1.86944 (7) obj. -98.0466 iterations 10
Cbc0038I Pass  40: suminf.    2.93825 (8) obj. -98.0466 iterations 14
Cbc0038I Pass  41: suminf.    2.86459 (8) obj. -98.0466 iterations 3
Cbc0038I Pass  42: suminf.    2.74820 (8) obj. -98.0466 iterations 2
Cbc0038I Pass  43: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  44: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  45: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  46: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I Pass  47: suminf.    1.96578 (7) obj. -98.0466 iterations 12
Cbc0038I Pass  48: suminf.    2.78501 (9) obj. -98.0466 iterations 29
Cbc0038I Pass  49: suminf.    2.74820 (8) obj. -98.0466 iterations 13
Cbc0038I Pass  50: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  51: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  52: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  53: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I Pass  54: suminf.    1.96578 (7) obj. -98.0466 iterations 12
Cbc0038I Pass  55: suminf.    2.78501 (9) obj. -98.0466 iterations 29
Cbc0038I Pass  56: suminf.    2.74820 (8) obj. -98.0466 iterations 13
Cbc0038I Pass  57: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  58: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  59: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  60: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 114 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -79.1217 - took 0.20 seconds
Cbc0012I Integer solution of -79.1217 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 101 rows 57 columns
Cbc0012I Integer solution of -81.93182 found by RINS after 0 iterations and 0 nodes (0.28 seconds)
Cbc0031I 38 added rows had average density of 171.71053
Cbc0013I At root node, 38 cuts changed objective from -149.32914 to -132.68695 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25959 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.430 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2846 row cuts average 258.7 elements, 0 column cuts (0 active)  in 0.358 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.339 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 252.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -81.93182 best solution, best possible -132.68695 (3.92 seconds)
Cbc0010I After 15 nodes, 9 on tree, -81.93182 best solution, best possible -132.68695 (4.63 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 15 rows 13 columns
Cbc0038I Full problem 506 rows 262 columns, reduced to 61 rows 39 columns
Cbc0012I Integer solution of -82.3955 found by RINS after 19541 iterations and 92 nodes (5.12 seconds)
Cbc0010I After 129 nodes, 14 on tree, -82.3955 best solution, best possible -132.68695 (5.35 seconds)
Cbc0010I After 291 nodes, 12 on tree, -82.3955 best solution, best possible -132.68695 (6.07 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 173 rows 94 columns
Cbc0038I Full problem 506 rows 262 columns, reduced to 59 rows 42 columns
Cbc0010I After 400 nodes, 14 on tree, -82.3955 best solution, best possible -132.68695 (6.77 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 9 rows 12 columns
Cbc0001I Search completed - best objective -82.39549999999997, took 36972 iterations and 528 nodes (7.20 seconds)
Cbc0032I Strong branching done 4038 times (91747 iterations), fathomed 27 nodes and fixed 194 variables
Cbc0035I Maximum depth 48, 2487 variables fixed on reduced cost
Total time (CPU seconds):       7.06   (Wallclock seconds):       7.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 354 (-172) rows, 370 (-154) columns and 15937 (-19799) elements
Clp1000I sum of infeasibilities 5.77812e-06 - average 1.63224e-08, 265 fixed columns
Coin0506I Presolve 88 (-266) rows, 101 (-269) columns and 363 (-15574) elements
Clp0006I 0  Obj 37.41464 Dual inf 12.316866 (101)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.9866523 - largest nonzero change 1.6444883e-05 ( 0.00096990836%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 38.250234
Clp0000I Optimal - objective value 38.250234
Coin0511I After Postsolve, objective 38.250234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 38.250234 Dual inf 328.92278 (116)
Clp0014I Perturbing problem by 0.001% of 1.915617 - largest nonzero change 2.2300418e-05 ( 0.0015420975%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 199.04444
Clp0000I Optimal - objective value 199.04444
Clp0000I Optimal - objective value 199.04444
Coin0511I After Postsolve, objective 199.04444, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 199.0444427 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.08

Starting MIP optimization
Cgl0004I processed model has 354 rows, 370 columns (370 integer (370 of which binary)) and 15937 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.638%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 115 integers unsatisfied sum - 10.043
Cbc0038I Pass   1: suminf.    3.19841 (83) obj. -162.956 iterations 36
Cbc0038I Pass   2: suminf.    3.19841 (83) obj. -162.956 iterations 2
Cbc0038I Pass   3: suminf.    2.20441 (66) obj. -103.858 iterations 17
Cbc0038I Pass   4: suminf.    1.62750 (54) obj. -89.5772 iterations 12
Cbc0038I Pass   5: suminf.    1.12706 (42) obj. -78.0776 iterations 12
Cbc0038I Pass   6: suminf.    0.33134 (18) obj. -53.9094 iterations 24
Cbc0038I Solution found of -36.2408
Cbc0038I Rounding solution of -54.3511 is better than previous of -36.2408

Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -68.8205
Cbc0038I Pass   7: suminf.    3.19841 (83) obj. -162.956 iterations 0
Cbc0038I Pass   8: suminf.    3.19841 (83) obj. -162.956 iterations 2
Cbc0038I Pass   9: suminf.    2.20441 (66) obj. -103.858 iterations 17
Cbc0038I Pass  10: suminf.    1.44971 (50) obj. -85.755 iterations 16
Cbc0038I Pass  11: suminf.    0.81556 (33) obj. -68.8205 iterations 19
Cbc0038I Pass  12: suminf.    0.27785 (14) obj. -75.1975 iterations 20
Cbc0038I Pass  13: suminf.    0.34681 (2) obj. -68.8205 iterations 17
Cbc0038I Pass  14: suminf.    0.34681 (2) obj. -68.8205 iterations 0
Cbc0038I Pass  15: suminf.    0.65381 (2) obj. -68.8205 iterations 4
Cbc0038I Pass  16: suminf.    1.30634 (18) obj. -68.8205 iterations 51
Cbc0038I Pass  17: suminf.    0.64472 (12) obj. -68.8205 iterations 22
Cbc0038I Pass  18: suminf.    0.88712 (4) obj. -68.8205 iterations 16
Cbc0038I Pass  19: suminf.    0.50951 (4) obj. -68.8205 iterations 3
Cbc0038I Pass  20: suminf.    0.57734 (5) obj. -68.8205 iterations 15
Cbc0038I Pass  21: suminf.    0.57176 (4) obj. -68.8205 iterations 7
Cbc0038I Pass  22: suminf.    0.96406 (4) obj. -68.8205 iterations 4
Cbc0038I Pass  23: suminf.    1.54406 (14) obj. -78.7482 iterations 46
Cbc0038I Pass  24: suminf.    0.59099 (13) obj. -68.8205 iterations 19
Cbc0038I Pass  25: suminf.    1.19829 (5) obj. -68.8205 iterations 52
Cbc0038I Pass  26: suminf.    0.89616 (4) obj. -68.8205 iterations 5
Cbc0038I Pass  27: suminf.    1.06923 (4) obj. -68.8205 iterations 4
Cbc0038I Pass  28: suminf.    2.90522 (29) obj. -68.8205 iterations 76
Cbc0038I Pass  29: suminf.    1.25495 (17) obj. -68.8205 iterations 35
Cbc0038I Pass  30: suminf.    1.25495 (17) obj. -68.8205 iterations 3
Cbc0038I Pass  31: suminf.    1.44092 (9) obj. -68.8205 iterations 13
Cbc0038I Pass  32: suminf.    1.44092 (9) obj. -68.8205 iterations 0
Cbc0038I Pass  33: suminf.    1.53903 (5) obj. -68.8205 iterations 11
Cbc0038I Pass  34: suminf.    1.29301 (5) obj. -70.7887 iterations 4
Cbc0038I Pass  35: suminf.    1.60172 (14) obj. -68.8205 iterations 12
Cbc0038I Pass  36: suminf.    1.60172 (14) obj. -68.8205 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 133 rows 146 columns - 30 fixed gives 101, 116 - still too large
Cbc0038I Full problem 354 rows 370 columns, reduced to 54 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -36.2408 to -61.4289 (0.23 seconds)
Cbc0038I Round again with cutoff of -94.8653
Cbc0038I Pass  36: suminf.    3.19841 (83) obj. -162.956 iterations 0
Cbc0038I Pass  37: suminf.    3.19841 (83) obj. -162.956 iterations 2
Cbc0038I Pass  38: suminf.    2.35662 (69) obj. -107.654 iterations 14
Cbc0038I Pass  39: suminf.    1.59990 (44) obj. -94.8653 iterations 27
Cbc0038I Pass  40: suminf.    1.23049 (44) obj. -105.209 iterations 1
Cbc0038I Pass  41: suminf.    1.20903 (19) obj. -94.8653 iterations 34
Cbc0038I Pass  42: suminf.    1.20903 (19) obj. -94.8653 iterations 0
Cbc0038I Pass  43: suminf.    1.09862 (5) obj. -94.8653 iterations 24
Cbc0038I Pass  44: suminf.    1.09661 (5) obj. -94.8653 iterations 1
Cbc0038I Pass  45: suminf.    1.09862 (5) obj. -94.8653 iterations 9
Cbc0038I Pass  46: suminf.    1.54212 (19) obj. -94.8653 iterations 72
Cbc0038I Pass  47: suminf.    1.54212 (19) obj. -94.8653 iterations 11
Cbc0038I Pass  48: suminf.    1.73891 (16) obj. -94.8653 iterations 60
Cbc0038I Pass  49: suminf.    1.73891 (16) obj. -94.8653 iterations 0
Cbc0038I Pass  50: suminf.    1.67562 (8) obj. -94.8653 iterations 36
Cbc0038I Pass  51: suminf.    1.32884 (9) obj. -94.8653 iterations 10
Cbc0038I Pass  52: suminf.    1.45304 (8) obj. -94.8653 iterations 13
Cbc0038I Pass  53: suminf.    1.32987 (36) obj. -94.8653 iterations 67
Cbc0038I Pass  54: suminf.    1.22046 (31) obj. -94.8653 iterations 20
Cbc0038I Pass  55: suminf.    2.31577 (14) obj. -94.8653 iterations 42
Cbc0038I Pass  56: suminf.    1.83892 (13) obj. -94.8653 iterations 11
Cbc0038I Pass  57: suminf.    1.63482 (8) obj. -94.8653 iterations 16
Cbc0038I Pass  58: suminf.    1.45800 (8) obj. -94.8653 iterations 4
Cbc0038I Pass  59: suminf.    1.63482 (8) obj. -94.8653 iterations 11
Cbc0038I Pass  60: suminf.    2.22545 (24) obj. -94.8653 iterations 39
Cbc0038I Pass  61: suminf.    2.22545 (24) obj. -94.8653 iterations 11
Cbc0038I Pass  62: suminf.    2.35146 (20) obj. -94.8653 iterations 23
Cbc0038I Pass  63: suminf.    2.34168 (19) obj. -94.8653 iterations 8
Cbc0038I Pass  64: suminf.    0.93233 (11) obj. -94.8653 iterations 32
Cbc0038I Pass  65: suminf.    0.93233 (11) obj. -94.8653 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 236 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 38 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -61.4289 - took 0.21 seconds
Cbc0012I Integer solution of -61.42887 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 40 rows 43 columns
Cbc0012I Integer solution of -62.42887 found by RINS after 0 iterations and 0 nodes (0.36 seconds)
Cbc0031I 138 added rows had average density of 59.289855
Cbc0013I At root node, 138 cuts changed objective from -199.04444 to -110.38317 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28786 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.425 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3497 row cuts average 353.7 elements, 0 column cuts (0 active)  in 1.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 434 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5170 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.454 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3077 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.893 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 413 row cuts average 204.6 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 279 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.269 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -62.42887 best solution, best possible -110.38317 (7.08 seconds)
Cbc0010I After 5 nodes, 2 on tree, -62.42887 best solution, best possible -103.47168 (7.93 seconds)
Cbc0010I After 9 nodes, 6 on tree, -62.42887 best solution, best possible -103.47168 (8.75 seconds)
Cbc0012I Integer solution of -73.701517 found by rounding after 14721 iterations and 12 nodes (8.93 seconds)
Cbc0004I Integer solution of -80.36314 found after 15036 iterations and 16 nodes (9.03 seconds)
Cbc0010I After 33 nodes, 10 on tree, -80.36314 best solution, best possible -103.47168 (9.45 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 10 rows 19 columns
Cbc0012I Integer solution of -80.48301 found by rounding after 16349 iterations and 46 nodes (9.64 seconds)
Cbc0012I Integer solution of -80.93182 found by rounding after 17151 iterations and 82 nodes (9.97 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 29 rows 41 columns
Cbc0010I After 91 nodes, 9 on tree, -80.93182 best solution, best possible -103.47168 (10.23 seconds)
Cbc0010I After 158 nodes, 9 on tree, -80.93182 best solution, best possible -103.47168 (10.93 seconds)
Cbc0012I Integer solution of -81.36314 found by rounding after 21356 iterations and 181 nodes (11.19 seconds)
Cbc0012I Integer solution of -81.93182 found by rounding after 21455 iterations and 188 nodes (11.26 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 6 rows 11 columns
Cbc0010I After 224 nodes, 3 on tree, -81.93182 best solution, best possible -103.47168 (11.74 seconds)
Cbc0010I After 273 nodes, 20 on tree, -81.93182 best solution, best possible -103.47168 (12.45 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 7 rows 17 columns
Cbc0010I After 387 nodes, 7 on tree, -81.93182 best solution, best possible -103.47168 (13.15 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 6 rows 13 columns
Cbc0010I After 464 nodes, 8 on tree, -81.93182 best solution, best possible -103.47168 (13.86 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 38 rows 50 columns
Cbc0010I After 510 nodes, 5 on tree, -81.93182 best solution, best possible -103.47168 (14.62 seconds)
Cbc0012I Integer solution of -82.3955 found by DiveCoefficient after 29410 iterations and 576 nodes (15.29 seconds)
Cbc0010I After 578 nodes, 4 on tree, -82.3955 best solution, best possible -103.47168 (15.32 seconds)
Cbc0001I Search completed - best objective -82.39549999999997, took 29881 iterations and 586 nodes (15.40 seconds)
Cbc0032I Strong branching done 2088 times (38564 iterations), fathomed 27 nodes and fixed 104 variables
Cbc0035I Maximum depth 22, 2817 variables fixed on reduced cost
Total time (CPU seconds):       15.01   (Wallclock seconds):       15.51

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 506 (-21) rows, 262 (-2) columns and 1504 (-41) elements
Clp1000I sum of infeasibilities 3.53108e-05 - average 6.97841e-08, 81 fixed columns
Coin0506I Presolve 343 (-163) rows, 180 (-82) columns and 1021 (-483) elements
Clp0029I End of values pass after 180 iterations
Clp0014I Perturbing problem by 0.001% of 2.098485 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Coin0511I After Postsolve, objective 149.32914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Clp0000I Optimal - objective value 149.32914
Coin0511I After Postsolve, objective 149.32914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.3291448 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 506 rows, 262 columns (261 integer (261 of which binary)) and 1504 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 14.473
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20.0829 iterations 143
Cbc0038I Solution found of 20.0829
Cbc0038I Relaxing continuous gives 20.0829
Cbc0038I Rounding solution of -21.3363 is better than previous of 20.0829

Cbc0038I Before mini branch and bound, 206 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -21.3363 to -78.1033 (0.07 seconds)
Cbc0038I Round again with cutoff of -85.2259
Cbc0038I Pass   2: suminf.    3.35770 (12) obj. -85.2259 iterations 23
Cbc0038I Pass   3: suminf.    3.04529 (10) obj. -85.2259 iterations 15
Cbc0038I Pass   4: suminf.    2.97794 (10) obj. -85.2259 iterations 4
Cbc0038I Pass   5: suminf.    2.97794 (10) obj. -85.2259 iterations 3
Cbc0038I Pass   6: suminf.    3.09235 (8) obj. -85.2259 iterations 13
Cbc0038I Pass   7: suminf.    2.35269 (6) obj. -85.2259 iterations 18
Cbc0038I Pass   8: suminf.    1.72696 (7) obj. -85.2259 iterations 8
Cbc0038I Pass   9: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  10: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  11: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  12: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  13: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I Pass  14: suminf.    1.05339 (4) obj. -85.2259 iterations 3
Cbc0038I Pass  15: suminf.    2.13160 (7) obj. -85.2259 iterations 25
Cbc0038I Pass  16: suminf.    1.76259 (6) obj. -85.2259 iterations 2
Cbc0038I Pass  17: suminf.    1.72696 (7) obj. -85.2259 iterations 3
Cbc0038I Pass  18: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  19: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  20: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  21: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  22: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I Pass  23: suminf.    1.05339 (4) obj. -85.2259 iterations 3
Cbc0038I Pass  24: suminf.    2.13160 (7) obj. -85.2259 iterations 25
Cbc0038I Pass  25: suminf.    1.76259 (6) obj. -85.2259 iterations 2
Cbc0038I Pass  26: suminf.    1.72696 (7) obj. -85.2259 iterations 3
Cbc0038I Pass  27: suminf.    2.67726 (7) obj. -85.2259 iterations 13
Cbc0038I Pass  28: suminf.    2.13345 (6) obj. -85.2259 iterations 12
Cbc0038I Pass  29: suminf.    1.25504 (6) obj. -85.2259 iterations 7
Cbc0038I Pass  30: suminf.    1.74935 (5) obj. -85.2259 iterations 8
Cbc0038I Pass  31: suminf.    1.43687 (5) obj. -85.2259 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 114 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -78.1033 to -79.1217 (0.14 seconds)
Cbc0038I Round again with cutoff of -98.0466
Cbc0038I Pass  31: suminf.    4.07769 (14) obj. -98.0466 iterations 4
Cbc0038I Pass  32: suminf.    3.71921 (13) obj. -98.0466 iterations 19
Cbc0038I Pass  33: suminf.    3.65853 (12) obj. -98.0466 iterations 13
Cbc0038I Pass  34: suminf.    3.44564 (10) obj. -98.0466 iterations 20
Cbc0038I Pass  35: suminf.    3.08146 (9) obj. -98.0466 iterations 26
Cbc0038I Pass  36: suminf.    3.08146 (9) obj. -98.0466 iterations 0
Cbc0038I Pass  37: suminf.    2.91153 (10) obj. -98.0466 iterations 8
Cbc0038I Pass  38: suminf.    2.25604 (7) obj. -98.0466 iterations 11
Cbc0038I Pass  39: suminf.    1.86944 (7) obj. -98.0466 iterations 10
Cbc0038I Pass  40: suminf.    2.93825 (8) obj. -98.0466 iterations 14
Cbc0038I Pass  41: suminf.    2.86459 (8) obj. -98.0466 iterations 3
Cbc0038I Pass  42: suminf.    2.74820 (8) obj. -98.0466 iterations 2
Cbc0038I Pass  43: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  44: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  45: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  46: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I Pass  47: suminf.    1.96578 (7) obj. -98.0466 iterations 12
Cbc0038I Pass  48: suminf.    2.78501 (9) obj. -98.0466 iterations 29
Cbc0038I Pass  49: suminf.    2.74820 (8) obj. -98.0466 iterations 13
Cbc0038I Pass  50: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  51: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  52: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  53: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I Pass  54: suminf.    1.96578 (7) obj. -98.0466 iterations 12
Cbc0038I Pass  55: suminf.    2.78501 (9) obj. -98.0466 iterations 29
Cbc0038I Pass  56: suminf.    2.74820 (8) obj. -98.0466 iterations 13
Cbc0038I Pass  57: suminf.    3.14978 (10) obj. -98.0466 iterations 24
Cbc0038I Pass  58: suminf.    3.07278 (10) obj. -98.0466 iterations 7
Cbc0038I Pass  59: suminf.    3.21181 (10) obj. -98.0466 iterations 11
Cbc0038I Pass  60: suminf.    2.41386 (8) obj. -98.0466 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 114 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -79.1217 - took 0.21 seconds
Cbc0012I Integer solution of -79.1217 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 101 rows 57 columns
Cbc0012I Integer solution of -81.93182 found by RINS after 0 iterations and 0 nodes (0.31 seconds)
Cbc0031I 38 added rows had average density of 171.71053
Cbc0013I At root node, 38 cuts changed objective from -149.32914 to -132.68695 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25959 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.475 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2846 row cuts average 258.7 elements, 0 column cuts (0 active)  in 0.396 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.369 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 252.0 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -81.93182 best solution, best possible -132.68695 (4.41 seconds)
Cbc0010I After 9 nodes, 8 on tree, -81.93182 best solution, best possible -132.68695 (5.14 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 15 rows 13 columns
Cbc0038I Full problem 506 rows 262 columns, reduced to 61 rows 39 columns
Cbc0012I Integer solution of -82.3955 found by RINS after 19541 iterations and 92 nodes (5.82 seconds)
Cbc0010I After 94 nodes, 15 on tree, -82.3955 best solution, best possible -132.68695 (5.84 seconds)
Cbc0010I After 230 nodes, 16 on tree, -82.3955 best solution, best possible -132.68695 (6.54 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 173 rows 94 columns
Cbc0010I After 328 nodes, 10 on tree, -82.3955 best solution, best possible -132.68695 (7.24 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 59 rows 42 columns
Cbc0038I Full problem 506 rows 262 columns, reduced to 9 rows 12 columns
Cbc0010I After 501 nodes, 12 on tree, -82.3955 best solution, best possible -132.68695 (7.94 seconds)
Cbc0001I Search completed - best objective -82.39549999999997, took 36972 iterations and 528 nodes (8.14 seconds)
Cbc0032I Strong branching done 4038 times (91747 iterations), fathomed 27 nodes and fixed 194 variables
Cbc0035I Maximum depth 48, 2487 variables fixed on reduced cost
Total time (CPU seconds):       7.81   (Wallclock seconds):       8.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 354 (-173) rows, 370 (-155) columns and 15937 (-19800) elements
Clp1000I sum of infeasibilities 5.77812e-06 - average 1.63224e-08, 265 fixed columns
Coin0506I Presolve 88 (-266) rows, 101 (-269) columns and 363 (-15574) elements
Clp0006I 0  Obj 37.41464 Dual inf 12.316866 (101)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.9866523 - largest nonzero change 1.6444883e-05 ( 0.00096990836%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 38.250234
Clp0000I Optimal - objective value 38.250234
Coin0511I After Postsolve, objective 38.250234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 38.250234 Dual inf 328.92278 (116)
Clp0014I Perturbing problem by 0.001% of 1.915617 - largest nonzero change 2.2300418e-05 ( 0.0015420975%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 199.04444
Clp0000I Optimal - objective value 199.04444
Clp0000I Optimal - objective value 199.04444
Coin0511I After Postsolve, objective 199.04444, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 199.0444427 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 354 rows, 370 columns (370 integer (370 of which binary)) and 15937 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.638%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 115 integers unsatisfied sum - 10.043
Cbc0038I Pass   1: suminf.    3.19841 (83) obj. -162.956 iterations 36
Cbc0038I Pass   2: suminf.    3.19841 (83) obj. -162.956 iterations 2
Cbc0038I Pass   3: suminf.    2.20441 (66) obj. -103.858 iterations 17
Cbc0038I Pass   4: suminf.    1.62750 (54) obj. -89.5772 iterations 12
Cbc0038I Pass   5: suminf.    1.12706 (42) obj. -78.0776 iterations 12
Cbc0038I Pass   6: suminf.    0.33134 (18) obj. -53.9094 iterations 24
Cbc0038I Solution found of -36.2408
Cbc0038I Rounding solution of -54.3511 is better than previous of -36.2408

Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -68.8205
Cbc0038I Pass   7: suminf.    3.19841 (83) obj. -162.956 iterations 0
Cbc0038I Pass   8: suminf.    3.19841 (83) obj. -162.956 iterations 2
Cbc0038I Pass   9: suminf.    2.20441 (66) obj. -103.858 iterations 17
Cbc0038I Pass  10: suminf.    1.44971 (50) obj. -85.755 iterations 16
Cbc0038I Pass  11: suminf.    0.81556 (33) obj. -68.8205 iterations 19
Cbc0038I Pass  12: suminf.    0.27785 (14) obj. -75.1975 iterations 20
Cbc0038I Pass  13: suminf.    0.34681 (2) obj. -68.8205 iterations 17
Cbc0038I Pass  14: suminf.    0.34681 (2) obj. -68.8205 iterations 0
Cbc0038I Pass  15: suminf.    0.65381 (2) obj. -68.8205 iterations 4
Cbc0038I Pass  16: suminf.    1.30634 (18) obj. -68.8205 iterations 51
Cbc0038I Pass  17: suminf.    0.64472 (12) obj. -68.8205 iterations 22
Cbc0038I Pass  18: suminf.    0.88712 (4) obj. -68.8205 iterations 16
Cbc0038I Pass  19: suminf.    0.50951 (4) obj. -68.8205 iterations 3
Cbc0038I Pass  20: suminf.    0.57734 (5) obj. -68.8205 iterations 15
Cbc0038I Pass  21: suminf.    0.57176 (4) obj. -68.8205 iterations 7
Cbc0038I Pass  22: suminf.    0.96406 (4) obj. -68.8205 iterations 4
Cbc0038I Pass  23: suminf.    1.54406 (14) obj. -78.7482 iterations 46
Cbc0038I Pass  24: suminf.    0.59099 (13) obj. -68.8205 iterations 19
Cbc0038I Pass  25: suminf.    1.19829 (5) obj. -68.8205 iterations 52
Cbc0038I Pass  26: suminf.    0.89616 (4) obj. -68.8205 iterations 5
Cbc0038I Pass  27: suminf.    1.06923 (4) obj. -68.8205 iterations 4
Cbc0038I Pass  28: suminf.    2.90522 (29) obj. -68.8205 iterations 76
Cbc0038I Pass  29: suminf.    1.25495 (17) obj. -68.8205 iterations 35
Cbc0038I Pass  30: suminf.    1.25495 (17) obj. -68.8205 iterations 3
Cbc0038I Pass  31: suminf.    1.44092 (9) obj. -68.8205 iterations 13
Cbc0038I Pass  32: suminf.    1.44092 (9) obj. -68.8205 iterations 0
Cbc0038I Pass  33: suminf.    1.53903 (5) obj. -68.8205 iterations 11
Cbc0038I Pass  34: suminf.    1.29301 (5) obj. -70.7887 iterations 4
Cbc0038I Pass  35: suminf.    1.60172 (14) obj. -68.8205 iterations 12
Cbc0038I Pass  36: suminf.    1.60172 (14) obj. -68.8205 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 133 rows 146 columns - 30 fixed gives 101, 116 - still too large
Cbc0038I Full problem 354 rows 370 columns, reduced to 54 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -36.2408 to -61.4289 (0.25 seconds)
Cbc0038I Round again with cutoff of -94.8653
Cbc0038I Pass  36: suminf.    3.19841 (83) obj. -162.956 iterations 0
Cbc0038I Pass  37: suminf.    3.19841 (83) obj. -162.956 iterations 2
Cbc0038I Pass  38: suminf.    2.35662 (69) obj. -107.654 iterations 14
Cbc0038I Pass  39: suminf.    1.59990 (44) obj. -94.8653 iterations 27
Cbc0038I Pass  40: suminf.    1.23049 (44) obj. -105.209 iterations 1
Cbc0038I Pass  41: suminf.    1.20903 (19) obj. -94.8653 iterations 34
Cbc0038I Pass  42: suminf.    1.20903 (19) obj. -94.8653 iterations 0
Cbc0038I Pass  43: suminf.    1.09862 (5) obj. -94.8653 iterations 24
Cbc0038I Pass  44: suminf.    1.09661 (5) obj. -94.8653 iterations 1
Cbc0038I Pass  45: suminf.    1.09862 (5) obj. -94.8653 iterations 9
Cbc0038I Pass  46: suminf.    1.54212 (19) obj. -94.8653 iterations 72
Cbc0038I Pass  47: suminf.    1.54212 (19) obj. -94.8653 iterations 11
Cbc0038I Pass  48: suminf.    1.73891 (16) obj. -94.8653 iterations 60
Cbc0038I Pass  49: suminf.    1.73891 (16) obj. -94.8653 iterations 0
Cbc0038I Pass  50: suminf.    1.67562 (8) obj. -94.8653 iterations 36
Cbc0038I Pass  51: suminf.    1.32884 (9) obj. -94.8653 iterations 10
Cbc0038I Pass  52: suminf.    1.45304 (8) obj. -94.8653 iterations 13
Cbc0038I Pass  53: suminf.    1.32987 (36) obj. -94.8653 iterations 67
Cbc0038I Pass  54: suminf.    1.22046 (31) obj. -94.8653 iterations 20
Cbc0038I Pass  55: suminf.    2.31577 (14) obj. -94.8653 iterations 42
Cbc0038I Pass  56: suminf.    1.83892 (13) obj. -94.8653 iterations 11
Cbc0038I Pass  57: suminf.    1.63482 (8) obj. -94.8653 iterations 16
Cbc0038I Pass  58: suminf.    1.45800 (8) obj. -94.8653 iterations 4
Cbc0038I Pass  59: suminf.    1.63482 (8) obj. -94.8653 iterations 11
Cbc0038I Pass  60: suminf.    2.22545 (24) obj. -94.8653 iterations 39
Cbc0038I Pass  61: suminf.    2.22545 (24) obj. -94.8653 iterations 11
Cbc0038I Pass  62: suminf.    2.35146 (20) obj. -94.8653 iterations 23
Cbc0038I Pass  63: suminf.    2.34168 (19) obj. -94.8653 iterations 8
Cbc0038I Pass  64: suminf.    0.93233 (11) obj. -94.8653 iterations 32
Cbc0038I Pass  65: suminf.    0.93233 (11) obj. -94.8653 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 236 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 38 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of -61.4289 - took 0.23 seconds
Cbc0012I Integer solution of -61.42887 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 40 rows 43 columns
Cbc0012I Integer solution of -62.42887 found by RINS after 0 iterations and 0 nodes (0.39 seconds)
Cbc0031I 138 added rows had average density of 59.289855
Cbc0013I At root node, 138 cuts changed objective from -199.04444 to -110.38317 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28786 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.452 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3497 row cuts average 353.7 elements, 0 column cuts (0 active)  in 1.092 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 434 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5170 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.485 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3077 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.939 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 413 row cuts average 204.6 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 279 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.283 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -62.42887 best solution, best possible -110.38317 (7.47 seconds)
Cbc0010I After 3 nodes, 2 on tree, -62.42887 best solution, best possible -103.47168 (8.21 seconds)
Cbc0010I After 7 nodes, 4 on tree, -62.42887 best solution, best possible -103.47168 (8.92 seconds)
Cbc0012I Integer solution of -73.701517 found by rounding after 14721 iterations and 12 nodes (9.42 seconds)
Cbc0004I Integer solution of -80.36314 found after 15036 iterations and 16 nodes (9.54 seconds)
Cbc0010I After 18 nodes, 7 on tree, -80.36314 best solution, best possible -103.47168 (9.73 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 10 rows 19 columns
Cbc0012I Integer solution of -80.48301 found by rounding after 16349 iterations and 46 nodes (10.19 seconds)
Cbc0010I After 74 nodes, 11 on tree, -80.48301 best solution, best possible -103.47168 (10.44 seconds)
Cbc0012I Integer solution of -80.93182 found by rounding after 17151 iterations and 82 nodes (10.52 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 29 rows 41 columns
Cbc0010I After 131 nodes, 8 on tree, -80.93182 best solution, best possible -103.47168 (11.15 seconds)
Cbc0012I Integer solution of -81.36314 found by rounding after 21356 iterations and 181 nodes (11.74 seconds)
Cbc0012I Integer solution of -81.93182 found by rounding after 21455 iterations and 188 nodes (11.80 seconds)
Cbc0010I After 197 nodes, 6 on tree, -81.93182 best solution, best possible -103.47168 (11.86 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 6 rows 11 columns
Cbc0010I After 233 nodes, 7 on tree, -81.93182 best solution, best possible -103.47168 (12.56 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 7 rows 17 columns
Cbc0010I After 300 nodes, 21 on tree, -81.93182 best solution, best possible -103.47168 (13.31 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 6 rows 13 columns
Cbc0010I After 408 nodes, 11 on tree, -81.93182 best solution, best possible -103.47168 (14.02 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 38 rows 50 columns
Cbc0010I After 500 nodes, 5 on tree, -81.93182 best solution, best possible -103.47168 (14.98 seconds)
Cbc0010I After 560 nodes, 6 on tree, -81.93182 best solution, best possible -103.47168 (15.70 seconds)
Cbc0012I Integer solution of -82.3955 found by DiveCoefficient after 29410 iterations and 576 nodes (15.88 seconds)
Cbc0001I Search completed - best objective -82.39549999999997, took 29881 iterations and 586 nodes (16.00 seconds)
Cbc0032I Strong branching done 2088 times (38564 iterations), fathomed 27 nodes and fixed 104 variables
Cbc0035I Maximum depth 22, 2817 variables fixed on reduced cost
Total time (CPU seconds):       15.56   (Wallclock seconds):       16.11

