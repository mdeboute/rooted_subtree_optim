Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 62 (-16) columns and 347 (-106) elements
Clp1000I sum of infeasibilities 7.99611e-05 - average 6.95314e-07, 48 fixed columns
Coin0506I Presolve 9 (-106) rows, 8 (-54) columns and 28 (-319) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2185.2163
Clp0000I Optimal - objective value 2185.2163
Coin0511I After Postsolve, objective 2185.2163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.3832753 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2185.2163
Clp0000I Optimal - objective value 2185.2163
Clp0000I Optimal - objective value 2185.2163
Coin0511I After Postsolve, objective 2185.2163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2185.216333 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 62 columns (61 integer (61 of which binary)) and 347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.458%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.89474
Cbc0038I Pass   1: suminf.    0.78846 (2) obj. -2085.48 iterations 12
Cbc0038I Solution found of -1832.36
Cbc0038I Relaxing continuous gives -1832.36
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 62 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -1832.36 to -1977.37 (0.01 seconds)
Cbc0038I Round again with cutoff of -1998.15
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.78846 (2) obj. -2085.48 iterations 0
Cbc0038I Pass   3: suminf.    0.22222 (1) obj. -2051.87 iterations 7
Cbc0038I Pass   4: suminf.    0.42696 (1) obj. -1998.15 iterations 3
Cbc0038I Pass   5: suminf.    0.50000 (1) obj. -2026.52 iterations 2
Cbc0038I Pass   6: suminf.    1.50275 (6) obj. -1998.15 iterations 10
Cbc0038I Pass   7: suminf.    1.50275 (6) obj. -1998.15 iterations 4
Cbc0038I Pass   8: suminf.    0.13225 (1) obj. -1998.15 iterations 9
Cbc0038I Pass   9: suminf.    0.11538 (1) obj. -2003.84 iterations 5
Cbc0038I Pass  10: suminf.    0.13225 (1) obj. -1998.15 iterations 3
Cbc0038I Pass  11: suminf.    1.39059 (5) obj. -1998.15 iterations 15
Cbc0038I Pass  12: suminf.    0.11538 (1) obj. -2003.84 iterations 9
Cbc0038I Pass  13: suminf.    0.31018 (2) obj. -1998.15 iterations 13
Cbc0038I Pass  14: suminf.    0.31018 (2) obj. -1998.15 iterations 2
Cbc0038I Pass  15: suminf.    0.76837 (2) obj. -1998.15 iterations 10
Cbc0038I Pass  16: suminf.    0.76837 (2) obj. -1998.15 iterations 5
Cbc0038I Pass  17: suminf.    0.04358 (1) obj. -1998.15 iterations 7
Cbc0038I Pass  18: suminf.    0.61538 (2) obj. -2094.48 iterations 8
Cbc0038I Pass  19: suminf.    2.01042 (5) obj. -1998.15 iterations 18
Cbc0038I Pass  20: suminf.    0.98854 (6) obj. -1998.15 iterations 9
Cbc0038I Pass  21: suminf.    0.86593 (6) obj. -1998.15 iterations 3
Cbc0038I Pass  22: suminf.    0.38328 (3) obj. -1998.15 iterations 9
Cbc0038I Pass  23: suminf.    0.38328 (3) obj. -1998.15 iterations 5
Cbc0038I Pass  24: suminf.    0.82692 (2) obj. -2066.93 iterations 11
Cbc0038I Pass  25: suminf.    0.13225 (1) obj. -1998.15 iterations 8
Cbc0038I Pass  26: suminf.    0.11538 (1) obj. -2003.84 iterations 3
Cbc0038I Pass  27: suminf.    0.67380 (4) obj. -1998.15 iterations 11
Cbc0038I Pass  28: suminf.    0.45698 (2) obj. -1998.15 iterations 5
Cbc0038I Pass  29: suminf.    0.95652 (2) obj. -2078.43 iterations 2
Cbc0038I Pass  30: suminf.    0.82692 (2) obj. -2066.93 iterations 7
Cbc0038I Pass  31: suminf.    0.13225 (1) obj. -1998.15 iterations 8
Cbc0038I Rounding solution of -1985.24 is better than previous of -1977.37

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 62 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2035.57
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.78846 (2) obj. -2085.48 iterations 0
Cbc0038I Pass  32: suminf.    0.22222 (1) obj. -2051.87 iterations 5
Cbc0038I Pass  33: suminf.    0.54427 (2) obj. -2035.57 iterations 3
Cbc0038I Pass  34: suminf.    0.54427 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  35: suminf.    0.54427 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  36: suminf.    1.03475 (3) obj. -2035.57 iterations 7
Cbc0038I Pass  37: suminf.    0.52745 (5) obj. -2035.57 iterations 7
Cbc0038I Pass  38: suminf.    0.81579 (3) obj. -2035.57 iterations 7
Cbc0038I Pass  39: suminf.    0.81579 (3) obj. -2035.57 iterations 2
Cbc0038I Pass  40: suminf.    0.73156 (5) obj. -2035.57 iterations 12
Cbc0038I Pass  41: suminf.    0.73156 (5) obj. -2035.57 iterations 0
Cbc0038I Pass  42: suminf.    2.42070 (6) obj. -2035.57 iterations 9
Cbc0038I Pass  43: suminf.    2.42070 (6) obj. -2035.57 iterations 0
Cbc0038I Pass  44: suminf.    0.73156 (5) obj. -2035.57 iterations 11
Cbc0038I Pass  45: suminf.    1.00829 (4) obj. -2035.57 iterations 6
Cbc0038I Pass  46: suminf.    0.89092 (2) obj. -2035.57 iterations 11
Cbc0038I Pass  47: suminf.    0.22222 (1) obj. -2051.87 iterations 9
Cbc0038I Pass  48: suminf.    0.54427 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  49: suminf.    0.78846 (2) obj. -2085.48 iterations 3
Cbc0038I Pass  50: suminf.    1.55502 (5) obj. -2035.57 iterations 14
Cbc0038I Pass  51: suminf.    1.17398 (3) obj. -2035.57 iterations 5
Cbc0038I Pass  52: suminf.    0.28099 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  53: suminf.    0.22222 (1) obj. -2051.87 iterations 5
Cbc0038I Pass  54: suminf.    0.54427 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  55: suminf.    0.78846 (2) obj. -2085.48 iterations 3
Cbc0038I Pass  56: suminf.    1.62357 (4) obj. -2035.57 iterations 17
Cbc0038I Pass  57: suminf.    0.51328 (2) obj. -2035.57 iterations 9
Cbc0038I Pass  58: suminf.    0.50000 (3) obj. -2035.57 iterations 6
Cbc0038I Pass  59: suminf.    0.51637 (3) obj. -2035.57 iterations 3
Cbc0038I Pass  60: suminf.    1.72206 (7) obj. -2035.57 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 62 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1985.24 - took 0.02 seconds
Cbc0012I Integer solution of -1985.239 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 115 rows 62 columns, reduced to 10 rows 10 columns
Cbc0031I 10 added rows had average density of 19.6
Cbc0013I At root node, 10 cuts changed objective from -2185.2163 to -2036.8562 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 2.7 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 60.9 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1985.239, took 303 iterations and 8 nodes (0.63 seconds)
Cbc0032I Strong branching done 50 times (199 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-61) rows, 100 (-52) columns and 1453 (-1850) elements
Clp1000I sum of infeasibilities 3.28755e-07 - average 3.535e-09, 58 fixed columns
Coin0506I Presolve 42 (-51) rows, 42 (-58) columns and 170 (-1283) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 2221.6342
Clp0000I Optimal - objective value 2221.6342
Coin0511I After Postsolve, objective 2221.6342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1604898 - largest nonzero change 1.2182239e-05 ( 0.0012182239%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 2221.6342
Clp0000I Optimal - objective value 2221.6342
Clp0000I Optimal - objective value 2221.6342
Coin0511I After Postsolve, objective 2221.6342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2221.634185 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 103 columns (103 integer (103 of which binary)) and 1461 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.318%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.71458
Cbc0038I Pass   1: suminf.    3.09573 (28) obj. -2084.54 iterations 16
Cbc0038I Pass   2: suminf.    3.09573 (28) obj. -2084.54 iterations 1
Cbc0038I Pass   3: suminf.    0.67950 (10) obj. -1843.5 iterations 18
Cbc0038I Solution found of -1832.36
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 103 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1832.36 to -1977.37 (0.04 seconds)
Cbc0038I Round again with cutoff of -2001.31
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.09573 (28) obj. -2084.54 iterations 0
Cbc0038I Pass   5: suminf.    3.09573 (28) obj. -2084.54 iterations 1
Cbc0038I Pass   6: suminf.    1.84671 (20) obj. -2001.31 iterations 20
Cbc0038I Pass   7: suminf.    0.72304 (5) obj. -2070.47 iterations 17
Cbc0038I Pass   8: suminf.    0.39464 (4) obj. -2052.69 iterations 1
Cbc0038I Pass   9: suminf.    0.58857 (2) obj. -2001.31 iterations 6
Cbc0038I Pass  10: suminf.    0.57627 (2) obj. -2067.62 iterations 2
Cbc0038I Pass  11: suminf.    0.22222 (1) obj. -2049.87 iterations 1
Cbc0038I Pass  12: suminf.    1.53437 (9) obj. -2001.31 iterations 24
Cbc0038I Pass  13: suminf.    1.44230 (7) obj. -2001.31 iterations 9
Cbc0038I Pass  14: suminf.    1.35572 (11) obj. -2001.31 iterations 12
Cbc0038I Pass  15: suminf.    1.35572 (11) obj. -2001.31 iterations 0
Cbc0038I Pass  16: suminf.    1.83908 (4) obj. -2020.89 iterations 13
Cbc0038I Pass  17: suminf.    1.78522 (6) obj. -2001.31 iterations 3
Cbc0038I Pass  18: suminf.    1.92201 (6) obj. -2001.31 iterations 6
Cbc0038I Pass  19: suminf.    1.92201 (6) obj. -2001.31 iterations 1
Cbc0038I Pass  20: suminf.    1.30292 (5) obj. -2001.31 iterations 7
Cbc0038I Pass  21: suminf.    1.30292 (5) obj. -2001.31 iterations 0
Cbc0038I Pass  22: suminf.    0.83077 (3) obj. -2017.46 iterations 10
Cbc0038I Pass  23: suminf.    0.78648 (5) obj. -2001.31 iterations 4
Cbc0038I Pass  24: suminf.    1.92201 (6) obj. -2001.31 iterations 6
Cbc0038I Pass  25: suminf.    1.92201 (6) obj. -2001.31 iterations 1
Cbc0038I Pass  26: suminf.    1.30292 (5) obj. -2001.31 iterations 7
Cbc0038I Pass  27: suminf.    1.30292 (5) obj. -2001.31 iterations 0
Cbc0038I Pass  28: suminf.    0.83077 (3) obj. -2017.46 iterations 10
Cbc0038I Pass  29: suminf.    0.78648 (5) obj. -2001.31 iterations 4
Cbc0038I Pass  30: suminf.    1.92201 (6) obj. -2001.31 iterations 6
Cbc0038I Pass  31: suminf.    1.92201 (6) obj. -2001.31 iterations 1
Cbc0038I Pass  32: suminf.    1.30292 (5) obj. -2001.31 iterations 7
Cbc0038I Pass  33: suminf.    1.30292 (5) obj. -2001.31 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 103 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1977.37 - took 0.02 seconds
Cbc0012I Integer solution of -1977.369 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 96 rows 103 columns, reduced to 16 rows 16 columns
Cbc0031I 21 added rows had average density of 8.5238095
Cbc0013I At root node, 21 cuts changed objective from -2216.8044 to -2049.5626 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 232 row cuts average 12.2 elements, 36 column cuts (36 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 101 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 45.3 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1977.369 best solution, best possible -2049.5119 (0.22 seconds)
Cbc0012I Integer solution of -1985.239 found by DiveCoefficient after 236 iterations and 3 nodes (0.41 seconds)
Cbc0001I Search completed - best objective -1985.239, took 339 iterations and 10 nodes (0.65 seconds)
Cbc0032I Strong branching done 150 times (908 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 62 (-16) columns and 347 (-106) elements
Clp1000I sum of infeasibilities 7.99611e-05 - average 6.95314e-07, 48 fixed columns
Coin0506I Presolve 9 (-106) rows, 8 (-54) columns and 28 (-319) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 2185.2163
Clp0000I Optimal - objective value 2185.2163
Coin0511I After Postsolve, objective 2185.2163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.3832753 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2185.2163
Clp0000I Optimal - objective value 2185.2163
Clp0000I Optimal - objective value 2185.2163
Coin0511I After Postsolve, objective 2185.2163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2185.216333 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 115 rows, 62 columns (61 integer (61 of which binary)) and 347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.458%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.89474
Cbc0038I Pass   1: suminf.    0.78846 (2) obj. -2085.48 iterations 12
Cbc0038I Solution found of -1832.36
Cbc0038I Relaxing continuous gives -1832.36
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 62 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -1832.36 to -1977.37 (0.01 seconds)
Cbc0038I Round again with cutoff of -1998.15
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.78846 (2) obj. -2085.48 iterations 0
Cbc0038I Pass   3: suminf.    0.22222 (1) obj. -2051.87 iterations 7
Cbc0038I Pass   4: suminf.    0.42696 (1) obj. -1998.15 iterations 3
Cbc0038I Pass   5: suminf.    0.50000 (1) obj. -2026.52 iterations 2
Cbc0038I Pass   6: suminf.    1.50275 (6) obj. -1998.15 iterations 10
Cbc0038I Pass   7: suminf.    1.50275 (6) obj. -1998.15 iterations 4
Cbc0038I Pass   8: suminf.    0.13225 (1) obj. -1998.15 iterations 9
Cbc0038I Pass   9: suminf.    0.11538 (1) obj. -2003.84 iterations 5
Cbc0038I Pass  10: suminf.    0.13225 (1) obj. -1998.15 iterations 3
Cbc0038I Pass  11: suminf.    1.39059 (5) obj. -1998.15 iterations 15
Cbc0038I Pass  12: suminf.    0.11538 (1) obj. -2003.84 iterations 9
Cbc0038I Pass  13: suminf.    0.31018 (2) obj. -1998.15 iterations 13
Cbc0038I Pass  14: suminf.    0.31018 (2) obj. -1998.15 iterations 2
Cbc0038I Pass  15: suminf.    0.76837 (2) obj. -1998.15 iterations 10
Cbc0038I Pass  16: suminf.    0.76837 (2) obj. -1998.15 iterations 5
Cbc0038I Pass  17: suminf.    0.04358 (1) obj. -1998.15 iterations 7
Cbc0038I Pass  18: suminf.    0.61538 (2) obj. -2094.48 iterations 8
Cbc0038I Pass  19: suminf.    2.01042 (5) obj. -1998.15 iterations 18
Cbc0038I Pass  20: suminf.    0.98854 (6) obj. -1998.15 iterations 9
Cbc0038I Pass  21: suminf.    0.86593 (6) obj. -1998.15 iterations 3
Cbc0038I Pass  22: suminf.    0.38328 (3) obj. -1998.15 iterations 9
Cbc0038I Pass  23: suminf.    0.38328 (3) obj. -1998.15 iterations 5
Cbc0038I Pass  24: suminf.    0.82692 (2) obj. -2066.93 iterations 11
Cbc0038I Pass  25: suminf.    0.13225 (1) obj. -1998.15 iterations 8
Cbc0038I Pass  26: suminf.    0.11538 (1) obj. -2003.84 iterations 3
Cbc0038I Pass  27: suminf.    0.67380 (4) obj. -1998.15 iterations 11
Cbc0038I Pass  28: suminf.    0.45698 (2) obj. -1998.15 iterations 5
Cbc0038I Pass  29: suminf.    0.95652 (2) obj. -2078.43 iterations 2
Cbc0038I Pass  30: suminf.    0.82692 (2) obj. -2066.93 iterations 7
Cbc0038I Pass  31: suminf.    0.13225 (1) obj. -1998.15 iterations 8
Cbc0038I Rounding solution of -1985.24 is better than previous of -1977.37

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 62 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2035.57
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.78846 (2) obj. -2085.48 iterations 0
Cbc0038I Pass  32: suminf.    0.22222 (1) obj. -2051.87 iterations 5
Cbc0038I Pass  33: suminf.    0.54427 (2) obj. -2035.57 iterations 3
Cbc0038I Pass  34: suminf.    0.54427 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  35: suminf.    0.54427 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  36: suminf.    1.03475 (3) obj. -2035.57 iterations 7
Cbc0038I Pass  37: suminf.    0.52745 (5) obj. -2035.57 iterations 7
Cbc0038I Pass  38: suminf.    0.81579 (3) obj. -2035.57 iterations 7
Cbc0038I Pass  39: suminf.    0.81579 (3) obj. -2035.57 iterations 2
Cbc0038I Pass  40: suminf.    0.73156 (5) obj. -2035.57 iterations 12
Cbc0038I Pass  41: suminf.    0.73156 (5) obj. -2035.57 iterations 0
Cbc0038I Pass  42: suminf.    2.42070 (6) obj. -2035.57 iterations 9
Cbc0038I Pass  43: suminf.    2.42070 (6) obj. -2035.57 iterations 0
Cbc0038I Pass  44: suminf.    0.73156 (5) obj. -2035.57 iterations 11
Cbc0038I Pass  45: suminf.    1.00829 (4) obj. -2035.57 iterations 6
Cbc0038I Pass  46: suminf.    0.89092 (2) obj. -2035.57 iterations 11
Cbc0038I Pass  47: suminf.    0.22222 (1) obj. -2051.87 iterations 9
Cbc0038I Pass  48: suminf.    0.54427 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  49: suminf.    0.78846 (2) obj. -2085.48 iterations 3
Cbc0038I Pass  50: suminf.    1.55502 (5) obj. -2035.57 iterations 14
Cbc0038I Pass  51: suminf.    1.17398 (3) obj. -2035.57 iterations 5
Cbc0038I Pass  52: suminf.    0.28099 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  53: suminf.    0.22222 (1) obj. -2051.87 iterations 5
Cbc0038I Pass  54: suminf.    0.54427 (2) obj. -2035.57 iterations 4
Cbc0038I Pass  55: suminf.    0.78846 (2) obj. -2085.48 iterations 3
Cbc0038I Pass  56: suminf.    1.62357 (4) obj. -2035.57 iterations 17
Cbc0038I Pass  57: suminf.    0.51328 (2) obj. -2035.57 iterations 9
Cbc0038I Pass  58: suminf.    0.50000 (3) obj. -2035.57 iterations 6
Cbc0038I Pass  59: suminf.    0.51637 (3) obj. -2035.57 iterations 3
Cbc0038I Pass  60: suminf.    1.72206 (7) obj. -2035.57 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 62 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1985.24 - took 0.02 seconds
Cbc0012I Integer solution of -1985.239 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 115 rows 62 columns, reduced to 10 rows 10 columns
Cbc0031I 10 added rows had average density of 19.6
Cbc0013I At root node, 10 cuts changed objective from -2185.2163 to -2036.8562 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 2.7 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 60.9 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0010I After 7 nodes, 1 on tree, -1985.239 best solution, best possible -2036.7827 (0.69 seconds)
Cbc0001I Search completed - best objective -1985.239, took 303 iterations and 8 nodes (0.71 seconds)
Cbc0032I Strong branching done 50 times (199 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-62) rows, 100 (-53) columns and 1453 (-1851) elements
Clp1000I sum of infeasibilities 3.28755e-07 - average 3.535e-09, 58 fixed columns
Coin0506I Presolve 42 (-51) rows, 42 (-58) columns and 170 (-1283) elements
Clp0006I 0  Obj 2212.4698 Dual inf 30.608814 (41)
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 2221.6342
Clp0000I Optimal - objective value 2221.6342
Coin0511I After Postsolve, objective 2221.6342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2221.6342 Dual inf 536.25272 (5)
Clp0014I Perturbing problem by 0.001% of 2.1604898 - largest nonzero change 1.2182239e-05 ( 0.0012182239%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 2221.6342
Clp0000I Optimal - objective value 2221.6342
Clp0000I Optimal - objective value 2221.6342
Coin0511I After Postsolve, objective 2221.6342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2221.634185 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 103 columns (103 integer (103 of which binary)) and 1461 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.318%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.71458
Cbc0038I Pass   1: suminf.    3.09573 (28) obj. -2084.54 iterations 16
Cbc0038I Pass   2: suminf.    3.09573 (28) obj. -2084.54 iterations 1
Cbc0038I Pass   3: suminf.    0.67950 (10) obj. -1843.5 iterations 18
Cbc0038I Solution found of -1832.36
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 103 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -1832.36 to -1977.37 (0.04 seconds)
Cbc0038I Round again with cutoff of -2001.31
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.09573 (28) obj. -2084.54 iterations 0
Cbc0038I Pass   5: suminf.    3.09573 (28) obj. -2084.54 iterations 1
Cbc0038I Pass   6: suminf.    1.84671 (20) obj. -2001.31 iterations 20
Cbc0038I Pass   7: suminf.    0.72304 (5) obj. -2070.47 iterations 17
Cbc0038I Pass   8: suminf.    0.39464 (4) obj. -2052.69 iterations 1
Cbc0038I Pass   9: suminf.    0.58857 (2) obj. -2001.31 iterations 6
Cbc0038I Pass  10: suminf.    0.57627 (2) obj. -2067.62 iterations 2
Cbc0038I Pass  11: suminf.    0.22222 (1) obj. -2049.87 iterations 1
Cbc0038I Pass  12: suminf.    1.53437 (9) obj. -2001.31 iterations 24
Cbc0038I Pass  13: suminf.    1.44230 (7) obj. -2001.31 iterations 9
Cbc0038I Pass  14: suminf.    1.35572 (11) obj. -2001.31 iterations 12
Cbc0038I Pass  15: suminf.    1.35572 (11) obj. -2001.31 iterations 0
Cbc0038I Pass  16: suminf.    1.83908 (4) obj. -2020.89 iterations 13
Cbc0038I Pass  17: suminf.    1.78522 (6) obj. -2001.31 iterations 3
Cbc0038I Pass  18: suminf.    1.92201 (6) obj. -2001.31 iterations 6
Cbc0038I Pass  19: suminf.    1.92201 (6) obj. -2001.31 iterations 1
Cbc0038I Pass  20: suminf.    1.30292 (5) obj. -2001.31 iterations 7
Cbc0038I Pass  21: suminf.    1.30292 (5) obj. -2001.31 iterations 0
Cbc0038I Pass  22: suminf.    0.83077 (3) obj. -2017.46 iterations 10
Cbc0038I Pass  23: suminf.    0.78648 (5) obj. -2001.31 iterations 4
Cbc0038I Pass  24: suminf.    1.92201 (6) obj. -2001.31 iterations 6
Cbc0038I Pass  25: suminf.    1.92201 (6) obj. -2001.31 iterations 1
Cbc0038I Pass  26: suminf.    1.30292 (5) obj. -2001.31 iterations 7
Cbc0038I Pass  27: suminf.    1.30292 (5) obj. -2001.31 iterations 0
Cbc0038I Pass  28: suminf.    0.83077 (3) obj. -2017.46 iterations 10
Cbc0038I Pass  29: suminf.    0.78648 (5) obj. -2001.31 iterations 4
Cbc0038I Pass  30: suminf.    1.92201 (6) obj. -2001.31 iterations 6
Cbc0038I Pass  31: suminf.    1.92201 (6) obj. -2001.31 iterations 1
Cbc0038I Pass  32: suminf.    1.30292 (5) obj. -2001.31 iterations 7
Cbc0038I Pass  33: suminf.    1.30292 (5) obj. -2001.31 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 103 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1977.37 - took 0.03 seconds
Cbc0012I Integer solution of -1977.369 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 96 rows 103 columns, reduced to 16 rows 16 columns
Cbc0031I 21 added rows had average density of 8.5238095
Cbc0013I At root node, 21 cuts changed objective from -2216.8044 to -2049.5626 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 232 row cuts average 12.2 elements, 36 column cuts (36 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 101 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 45.3 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1977.369 best solution, best possible -2049.5119 (0.26 seconds)
Cbc0012I Integer solution of -1985.239 found by DiveCoefficient after 236 iterations and 3 nodes (0.51 seconds)
Cbc0001I Search completed - best objective -1985.239, took 339 iterations and 10 nodes (0.78 seconds)
Cbc0032I Strong branching done 150 times (908 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.78

