Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 67 (-11) columns and 360 (-93) elements
Clp1000I sum of infeasibilities 2.15867e-05 - average 1.84502e-07, 15 fixed columns
Coin0506I Presolve 90 (-27) rows, 52 (-15) columns and 277 (-83) elements
Clp0029I End of values pass after 52 iterations
Clp0000I Optimal - objective value 61.512389
Clp0000I Optimal - objective value 61.512389
Coin0511I After Postsolve, objective 61.512389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.512389
Clp0000I Optimal - objective value 61.512389
Clp0000I Optimal - objective value 61.512389
Coin0511I After Postsolve, objective 61.512389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.51238892 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 112 rows, 67 columns (66 integer (66 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.421%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.58299
Cbc0038I Solution found of -12.3089
Cbc0038I Relaxing continuous gives -17.3816
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 67 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -17.3816 to -36.0164 (0.05 seconds)
Cbc0038I Round again with cutoff of -38.462
Cbc0038I Pass   1: suminf.    1.81200 (25) obj. -38.462 iterations 33
Cbc0038I Pass   2: suminf.    1.42741 (4) obj. -38.462 iterations 26
Cbc0038I Pass   3: suminf.    1.11042 (3) obj. -38.462 iterations 2
Cbc0038I Pass   4: suminf.    0.52455 (2) obj. -38.462 iterations 7
Cbc0038I Pass   5: suminf.    0.82603 (2) obj. -38.462 iterations 3
Cbc0038I Pass   6: suminf.    1.98643 (10) obj. -38.462 iterations 17
Cbc0038I Pass   7: suminf.    1.35810 (5) obj. -38.462 iterations 8
Cbc0038I Pass   8: suminf.    1.24839 (4) obj. -38.462 iterations 10
Cbc0038I Pass   9: suminf.    0.79358 (4) obj. -38.462 iterations 6
Cbc0038I Pass  10: suminf.    1.55675 (5) obj. -38.462 iterations 5
Cbc0038I Pass  11: suminf.    0.96629 (4) obj. -38.462 iterations 7
Cbc0038I Pass  12: suminf.    0.92229 (4) obj. -38.462 iterations 6
Cbc0038I Pass  13: suminf.    1.28756 (5) obj. -38.462 iterations 6
Cbc0038I Pass  14: suminf.    1.26709 (6) obj. -38.462 iterations 5
Cbc0038I Pass  15: suminf.    1.18818 (4) obj. -38.462 iterations 6
Cbc0038I Pass  16: suminf.    1.18442 (5) obj. -38.462 iterations 2
Cbc0038I Pass  17: suminf.    1.04016 (4) obj. -38.462 iterations 6
Cbc0038I Pass  18: suminf.    0.92387 (4) obj. -38.462 iterations 1
Cbc0038I Pass  19: suminf.    1.32224 (6) obj. -38.462 iterations 7
Cbc0038I Pass  20: suminf.    0.79358 (4) obj. -38.462 iterations 5
Cbc0038I Pass  21: suminf.    1.55675 (5) obj. -38.462 iterations 5
Cbc0038I Pass  22: suminf.    0.96629 (4) obj. -38.462 iterations 6
Cbc0038I Pass  23: suminf.    0.92229 (4) obj. -38.462 iterations 5
Cbc0038I Pass  24: suminf.    1.28756 (5) obj. -38.462 iterations 5
Cbc0038I Pass  25: suminf.    1.26709 (6) obj. -38.462 iterations 5
Cbc0038I Pass  26: suminf.    1.18818 (4) obj. -38.462 iterations 8
Cbc0038I Pass  27: suminf.    1.18442 (5) obj. -38.462 iterations 3
Cbc0038I Pass  28: suminf.    1.04016 (4) obj. -38.462 iterations 6
Cbc0038I Pass  29: suminf.    0.92387 (4) obj. -38.462 iterations 1
Cbc0038I Pass  30: suminf.    1.32224 (6) obj. -38.462 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 67 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -36.0164 - took 0.06 seconds
Cbc0012I Integer solution of -36.01636 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 112 rows 67 columns, reduced to 63 rows 36 columns
Cbc0031I 23 added rows had average density of 34
Cbc0013I At root node, 23 cuts changed objective from -60.47143 to -53.594609 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8478 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2169 row cuts average 57.6 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -36.01636 best solution, best possible -53.594609 (0.68 seconds)
Cbc0038I Full problem 112 rows 67 columns, reduced to 7 rows 8 columns
Cbc0001I Search completed - best objective -36.01636, took 8337 iterations and 64 nodes (0.86 seconds)
Cbc0032I Strong branching done 646 times (11132 iterations), fathomed 5 nodes and fixed 28 variables
Cbc0035I Maximum depth 19, 160 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.87

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 114 (-38) columns and 1795 (-1508) elements
Clp1000I sum of infeasibilities 3.65822e-07 - average 3.69517e-09, 101 fixed columns
Coin0506I Presolve 12 (-87) rows, 13 (-101) columns and 45 (-1750) elements
Clp0006I 0  Obj 83.448368 Dual inf 388.0814 (12)
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 83.448863
Clp0000I Optimal - objective value 83.448863
Coin0511I After Postsolve, objective 83.448863, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 83.448863 Dual inf 45.411793 (42)
Clp0014I Perturbing problem by 0.001% of 1.6189262 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 149.65746
Clp0000I Optimal - objective value 149.65746
Clp0000I Optimal - objective value 149.65746
Coin0511I After Postsolve, objective 149.65746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.657458 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 68 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 116 columns (116 integer (116 of which binary)) and 1867 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.652%
Cgl0015I Clique Strengthening extended 1 cliques, 3 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 14.6033
Cbc0038I Pass   1: suminf.    0.35852 (10) obj. -32.9644 iterations 57
Cbc0038I Pass   2: suminf.    0.35852 (10) obj. -32.9644 iterations 0
Cbc0038I Solution found of -12.7425
Cbc0038I Rounding solution of -33.1829 is better than previous of -12.7425

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 116 columns, reduced to 30 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -33.1829 to -39.7425 (0.06 seconds)
Cbc0038I Round again with cutoff of -43.6772
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.73943 (15) obj. -43.6772 iterations 5
Cbc0038I Pass   4: suminf.    0.73943 (15) obj. -43.6772 iterations 0
Cbc0038I Pass   5: suminf.    0.95578 (3) obj. -43.6772 iterations 54
Cbc0038I Pass   6: suminf.    0.29164 (4) obj. -43.6772 iterations 12
Cbc0038I Pass   7: suminf.    0.71146 (3) obj. -43.6772 iterations 9
Cbc0038I Pass   8: suminf.    0.82789 (20) obj. -43.6772 iterations 34
Cbc0038I Pass   9: suminf.    0.82789 (20) obj. -43.6772 iterations 3
Cbc0038I Pass  10: suminf.    0.82344 (3) obj. -43.6772 iterations 33
Cbc0038I Pass  11: suminf.    0.82344 (3) obj. -43.6772 iterations 1
Cbc0038I Pass  12: suminf.    0.78380 (3) obj. -43.6772 iterations 5
Cbc0038I Pass  13: suminf.    0.75331 (2) obj. -43.6772 iterations 12
Cbc0038I Pass  14: suminf.    0.45768 (2) obj. -43.6772 iterations 6
Cbc0038I Pass  15: suminf.    0.85249 (2) obj. -43.6772 iterations 5
Cbc0038I Pass  16: suminf.    4.23594 (16) obj. -43.6772 iterations 27
Cbc0038I Pass  17: suminf.    3.53092 (13) obj. -43.6772 iterations 5
Cbc0038I Pass  18: suminf.    3.35906 (11) obj. -43.6772 iterations 4
Cbc0038I Pass  19: suminf.    3.12943 (11) obj. -43.6772 iterations 2
Cbc0038I Pass  20: suminf.    2.44091 (8) obj. -43.6772 iterations 28
Cbc0038I Pass  21: suminf.    2.44091 (8) obj. -43.6772 iterations 0
Cbc0038I Pass  22: suminf.    1.70300 (5) obj. -43.6772 iterations 11
Cbc0038I Pass  23: suminf.    1.66907 (5) obj. -43.6772 iterations 4
Cbc0038I Pass  24: suminf.    1.03750 (5) obj. -43.6772 iterations 7
Cbc0038I Pass  25: suminf.    0.85450 (5) obj. -43.6772 iterations 7
Cbc0038I Pass  26: suminf.    0.92774 (4) obj. -43.6772 iterations 5
Cbc0038I Pass  27: suminf.    4.23632 (15) obj. -43.6772 iterations 24
Cbc0038I Pass  28: suminf.    4.23632 (15) obj. -43.6772 iterations 0
Cbc0038I Pass  29: suminf.    1.22283 (4) obj. -43.6772 iterations 17
Cbc0038I Pass  30: suminf.    1.22283 (4) obj. -43.6772 iterations 1
Cbc0038I Pass  31: suminf.    1.41661 (4) obj. -43.6772 iterations 4
Cbc0038I Pass  32: suminf.    1.20061 (5) obj. -43.6772 iterations 9
Cbc0038I Rounding solution of -43.0048 is better than previous of -39.7425

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 116 columns, reduced to 50 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -43.0048 to -48.2374 (0.08 seconds)
Cbc0038I Round again with cutoff of -54.4078
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.87910 (15) obj. -54.4078 iterations 0
Cbc0038I Pass  33: suminf.    0.71902 (15) obj. -66.9319 iterations 2
Cbc0038I Pass  34: suminf.    1.03455 (21) obj. -54.4078 iterations 76
Cbc0038I Pass  35: suminf.    0.92622 (7) obj. -54.4078 iterations 16
Cbc0038I Pass  36: suminf.    1.23693 (9) obj. -54.4078 iterations 10
Cbc0038I Pass  37: suminf.    1.23693 (9) obj. -54.4078 iterations 2
Cbc0038I Pass  38: suminf.    2.29479 (21) obj. -54.4078 iterations 6
Cbc0038I Pass  39: suminf.    0.93455 (8) obj. -54.4078 iterations 2
Cbc0038I Pass  40: suminf.    0.87003 (8) obj. -54.4078 iterations 1
Cbc0038I Pass  41: suminf.    4.24441 (19) obj. -54.4078 iterations 7
Cbc0038I Pass  42: suminf.    3.51517 (20) obj. -54.4078 iterations 2
Cbc0038I Pass  43: suminf.    0.93455 (8) obj. -54.4078 iterations 3
Cbc0038I Pass  44: suminf.    4.49094 (19) obj. -54.4078 iterations 13
Cbc0038I Pass  45: suminf.    4.49094 (19) obj. -54.4078 iterations 0
Cbc0038I Pass  46: suminf.    2.68175 (7) obj. -54.4078 iterations 25
Cbc0038I Pass  47: suminf.    2.67179 (8) obj. -54.4078 iterations 1
Cbc0038I Pass  48: suminf.    2.21110 (9) obj. -54.4078 iterations 13
Cbc0038I Pass  49: suminf.    2.01722 (5) obj. -54.4078 iterations 14
Cbc0038I Pass  50: suminf.    2.02161 (7) obj. -54.4078 iterations 7
Cbc0038I Pass  51: suminf.    3.72376 (9) obj. -54.4078 iterations 10
Cbc0038I Pass  52: suminf.    3.30906 (9) obj. -54.4078 iterations 9
Cbc0038I Pass  53: suminf.    3.30906 (9) obj. -54.4078 iterations 0
Cbc0038I Pass  54: suminf.    3.17179 (9) obj. -54.4078 iterations 9
Cbc0038I Pass  55: suminf.    3.17179 (9) obj. -54.4078 iterations 6
Cbc0038I Pass  56: suminf.    3.30683 (9) obj. -54.4078 iterations 15
Cbc0038I Pass  57: suminf.    3.09110 (9) obj. -54.4078 iterations 11
Cbc0038I Pass  58: suminf.    3.09110 (9) obj. -54.4078 iterations 0
Cbc0038I Pass  59: suminf.    3.17179 (9) obj. -54.4078 iterations 8
Cbc0038I Pass  60: suminf.    3.17179 (9) obj. -54.4078 iterations 7
Cbc0038I Pass  61: suminf.    3.30683 (9) obj. -54.4078 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 116 columns, reduced to 39 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -48.2374 - took 0.04 seconds
Cbc0012I Integer solution of -48.23743 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 93 rows 116 columns, reduced to 32 rows 34 columns
Cbc0031I 55 added rows had average density of 23.672727
Cbc0013I At root node, 55 cuts changed objective from -79.088927 to -55.937591 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 2147 row cuts average 2.6 elements, 5 column cuts (40 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 74 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 106 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 130 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 413 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 376 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 56 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.23743 best solution, best possible -55.937591 (0.62 seconds)
Cbc0001I Search completed - best objective -48.23743, took 1567 iterations and 16 nodes (1.29 seconds)
Cbc0032I Strong branching done 320 times (7424 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 7, 46 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       1.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 67 (-11) columns and 360 (-93) elements
Clp1000I sum of infeasibilities 2.15867e-05 - average 1.84502e-07, 15 fixed columns
Coin0506I Presolve 90 (-27) rows, 52 (-15) columns and 277 (-83) elements
Clp0029I End of values pass after 52 iterations
Clp0000I Optimal - objective value 61.512389
Clp0000I Optimal - objective value 61.512389
Coin0511I After Postsolve, objective 61.512389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.512389
Clp0000I Optimal - objective value 61.512389
Clp0000I Optimal - objective value 61.512389
Coin0511I After Postsolve, objective 61.512389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.51238892 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 112 rows, 67 columns (66 integer (66 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.421%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.58299
Cbc0038I Solution found of -12.3089
Cbc0038I Relaxing continuous gives -17.3816
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 67 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -17.3816 to -36.0164 (0.05 seconds)
Cbc0038I Round again with cutoff of -38.462
Cbc0038I Pass   1: suminf.    1.81200 (25) obj. -38.462 iterations 33
Cbc0038I Pass   2: suminf.    1.42741 (4) obj. -38.462 iterations 26
Cbc0038I Pass   3: suminf.    1.11042 (3) obj. -38.462 iterations 2
Cbc0038I Pass   4: suminf.    0.52455 (2) obj. -38.462 iterations 7
Cbc0038I Pass   5: suminf.    0.82603 (2) obj. -38.462 iterations 3
Cbc0038I Pass   6: suminf.    1.98643 (10) obj. -38.462 iterations 17
Cbc0038I Pass   7: suminf.    1.35810 (5) obj. -38.462 iterations 8
Cbc0038I Pass   8: suminf.    1.24839 (4) obj. -38.462 iterations 10
Cbc0038I Pass   9: suminf.    0.79358 (4) obj. -38.462 iterations 6
Cbc0038I Pass  10: suminf.    1.55675 (5) obj. -38.462 iterations 5
Cbc0038I Pass  11: suminf.    0.96629 (4) obj. -38.462 iterations 7
Cbc0038I Pass  12: suminf.    0.92229 (4) obj. -38.462 iterations 6
Cbc0038I Pass  13: suminf.    1.28756 (5) obj. -38.462 iterations 6
Cbc0038I Pass  14: suminf.    1.26709 (6) obj. -38.462 iterations 5
Cbc0038I Pass  15: suminf.    1.18818 (4) obj. -38.462 iterations 6
Cbc0038I Pass  16: suminf.    1.18442 (5) obj. -38.462 iterations 2
Cbc0038I Pass  17: suminf.    1.04016 (4) obj. -38.462 iterations 6
Cbc0038I Pass  18: suminf.    0.92387 (4) obj. -38.462 iterations 1
Cbc0038I Pass  19: suminf.    1.32224 (6) obj. -38.462 iterations 7
Cbc0038I Pass  20: suminf.    0.79358 (4) obj. -38.462 iterations 5
Cbc0038I Pass  21: suminf.    1.55675 (5) obj. -38.462 iterations 5
Cbc0038I Pass  22: suminf.    0.96629 (4) obj. -38.462 iterations 6
Cbc0038I Pass  23: suminf.    0.92229 (4) obj. -38.462 iterations 5
Cbc0038I Pass  24: suminf.    1.28756 (5) obj. -38.462 iterations 5
Cbc0038I Pass  25: suminf.    1.26709 (6) obj. -38.462 iterations 5
Cbc0038I Pass  26: suminf.    1.18818 (4) obj. -38.462 iterations 8
Cbc0038I Pass  27: suminf.    1.18442 (5) obj. -38.462 iterations 3
Cbc0038I Pass  28: suminf.    1.04016 (4) obj. -38.462 iterations 6
Cbc0038I Pass  29: suminf.    0.92387 (4) obj. -38.462 iterations 1
Cbc0038I Pass  30: suminf.    1.32224 (6) obj. -38.462 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 67 columns, reduced to 77 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -36.0164 - took 0.06 seconds
Cbc0012I Integer solution of -36.01636 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 112 rows 67 columns, reduced to 63 rows 36 columns
Cbc0031I 23 added rows had average density of 34
Cbc0013I At root node, 23 cuts changed objective from -60.47143 to -53.594609 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8478 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2169 row cuts average 57.6 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -36.01636 best solution, best possible -53.594609 (0.72 seconds)
Cbc0038I Full problem 112 rows 67 columns, reduced to 7 rows 8 columns
Cbc0001I Search completed - best objective -36.01636, took 8337 iterations and 64 nodes (0.93 seconds)
Cbc0032I Strong branching done 646 times (11132 iterations), fathomed 5 nodes and fixed 28 variables
Cbc0035I Maximum depth 19, 160 variables fixed on reduced cost
Total time (CPU seconds):       0.89   (Wallclock seconds):       0.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 107 (-46) columns and 1600 (-1704) elements
Clp1000I sum of infeasibilities 1.64458e-07 - average 1.78759e-09, 25 fixed columns
Coin0506I Presolve 70 (-22) rows, 82 (-25) columns and 934 (-666) elements
Clp0006I 0  Obj 63.05609 Dual inf 10.008188 (82)
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 1.9512785 - largest nonzero change 0 ( 0%) - largest zero change 2.9774337e-05
Clp0000I Optimal - objective value 70.345115
Clp0000I Optimal - objective value 70.345115
Coin0511I After Postsolve, objective 70.345115, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.345115
Clp0000I Optimal - objective value 70.345115
Clp0000I Optimal - objective value 70.345115
Clp0000I Optimal - objective value 70.345115
Coin0511I After Postsolve, objective 70.345115, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.34511488 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 109 columns (109 integer (109 of which binary)) and 1645 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.569%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.01658
Cbc0038I Pass   1: suminf.    1.70397 (23) obj. -58.8719 iterations 24
Cbc0038I Pass   2: suminf.    1.70397 (23) obj. -58.8719 iterations 1
Cbc0038I Solution found of -14.0713
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 109 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -14.0713 to -22.0748 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.8425
Cbc0038I Pass   3: suminf.    1.70397 (23) obj. -58.8719 iterations 0
Cbc0038I Pass   4: suminf.    1.70397 (23) obj. -58.8719 iterations 1
Cbc0038I Pass   5: suminf.    0.42352 (4) obj. -25.8425 iterations 35
Cbc0038I Pass   6: suminf.    0.41722 (5) obj. -25.8425 iterations 5
Cbc0038I Pass   7: suminf.    1.13412 (5) obj. -25.8425 iterations 11
Cbc0038I Pass   8: suminf.    0.64704 (4) obj. -25.8425 iterations 14
Cbc0038I Pass   9: suminf.    0.47249 (4) obj. -25.8425 iterations 13
Cbc0038I Pass  10: suminf.    1.05709 (3) obj. -25.8425 iterations 9
Cbc0038I Pass  11: suminf.    0.36719 (2) obj. -27.3193 iterations 2
Cbc0038I Pass  12: suminf.    0.73639 (2) obj. -25.8425 iterations 9
Cbc0038I Pass  13: suminf.    0.70220 (7) obj. -25.8425 iterations 27
Cbc0038I Pass  14: suminf.    0.61248 (6) obj. -25.8793 iterations 5
Cbc0038I Pass  15: suminf.    0.84504 (5) obj. -25.8425 iterations 24
Cbc0038I Pass  16: suminf.    0.84220 (6) obj. -25.8425 iterations 4
Cbc0038I Pass  17: suminf.    1.77971 (8) obj. -25.8425 iterations 18
Cbc0038I Pass  18: suminf.    1.77971 (8) obj. -25.8425 iterations 0
Cbc0038I Pass  19: suminf.    1.01624 (6) obj. -25.8425 iterations 13
Cbc0038I Pass  20: suminf.    1.01624 (6) obj. -25.8425 iterations 0
Cbc0038I Pass  21: suminf.    0.84363 (6) obj. -25.8425 iterations 12
Cbc0038I Pass  22: suminf.    0.35135 (5) obj. -25.8425 iterations 8
Cbc0038I Pass  23: suminf.    1.77971 (8) obj. -25.8425 iterations 13
Cbc0038I Pass  24: suminf.    1.77971 (8) obj. -25.8425 iterations 0
Cbc0038I Pass  25: suminf.    1.01624 (6) obj. -25.8425 iterations 12
Cbc0038I Pass  26: suminf.    1.01624 (6) obj. -25.8425 iterations 0
Cbc0038I Pass  27: suminf.    0.84363 (6) obj. -25.8425 iterations 12
Cbc0038I Pass  28: suminf.    0.35135 (5) obj. -25.8425 iterations 8
Cbc0038I Pass  29: suminf.    1.77971 (8) obj. -25.8425 iterations 14
Cbc0038I Pass  30: suminf.    1.77971 (8) obj. -25.8425 iterations 0
Cbc0038I Pass  31: suminf.    1.01624 (6) obj. -25.8425 iterations 13
Cbc0038I Pass  32: suminf.    1.01624 (6) obj. -25.8425 iterations 0
Cbc0038I Rounding solution of -29.7816 is better than previous of -22.0748

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 109 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -35.7755
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.70397 (23) obj. -58.8719 iterations 0
Cbc0038I Pass  33: suminf.    1.70397 (23) obj. -58.8719 iterations 1
Cbc0038I Pass  34: suminf.    0.76489 (10) obj. -35.7755 iterations 24
Cbc0038I Pass  35: suminf.    0.73172 (10) obj. -35.9082 iterations 7
Cbc0038I Pass  36: suminf.    1.06321 (6) obj. -35.7755 iterations 34
Cbc0038I Pass  37: suminf.    0.64409 (6) obj. -36.6137 iterations 9
Cbc0038I Pass  38: suminf.    1.46041 (13) obj. -35.7755 iterations 42
Cbc0038I Pass  39: suminf.    0.66164 (12) obj. -35.7755 iterations 11
Cbc0038I Pass  40: suminf.    0.64937 (11) obj. -35.7838 iterations 1
Cbc0038I Pass  41: suminf.    1.05064 (9) obj. -35.7755 iterations 25
Cbc0038I Pass  42: suminf.    1.05064 (9) obj. -35.7755 iterations 3
Cbc0038I Pass  43: suminf.    0.98884 (9) obj. -35.7755 iterations 16
Cbc0038I Pass  44: suminf.    0.91528 (9) obj. -35.7755 iterations 11
Cbc0038I Pass  45: suminf.    1.13708 (9) obj. -35.7755 iterations 10
Cbc0038I Pass  46: suminf.    1.49968 (26) obj. -35.7755 iterations 27
Cbc0038I Pass  47: suminf.    0.98956 (13) obj. -35.7755 iterations 9
Cbc0038I Pass  48: suminf.    1.15119 (11) obj. -35.7755 iterations 11
Cbc0038I Pass  49: suminf.    1.07331 (11) obj. -35.7755 iterations 11
Cbc0038I Pass  50: suminf.    1.39536 (10) obj. -35.7755 iterations 12
Cbc0038I Pass  51: suminf.    0.83038 (11) obj. -35.7755 iterations 4
Cbc0038I Pass  52: suminf.    1.39536 (10) obj. -35.7755 iterations 8
Cbc0038I Pass  53: suminf.    1.25169 (12) obj. -35.7755 iterations 16
Cbc0038I Pass  54: suminf.    1.14842 (13) obj. -35.7755 iterations 5
Cbc0038I Pass  55: suminf.    1.40873 (12) obj. -35.7755 iterations 9
Cbc0038I Pass  56: suminf.    1.40873 (12) obj. -35.7755 iterations 1
Cbc0038I Pass  57: suminf.    1.97019 (15) obj. -35.7755 iterations 22
Cbc0038I Pass  58: suminf.    1.75220 (17) obj. -35.7755 iterations 8
Cbc0038I Pass  59: suminf.    1.51283 (13) obj. -35.7755 iterations 14
Cbc0038I Pass  60: suminf.    1.48175 (12) obj. -35.7755 iterations 4
Cbc0038I Pass  61: suminf.    1.48262 (14) obj. -35.7755 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 109 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -29.7816 to -34.2929 (0.10 seconds)
Cbc0038I Round again with cutoff of -42.9681
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.70397 (23) obj. -58.8719 iterations 0
Cbc0038I Pass  62: suminf.    1.70397 (23) obj. -58.8719 iterations 1
Cbc0038I Pass  63: suminf.    1.08251 (12) obj. -42.9681 iterations 51
Cbc0038I Pass  64: suminf.    0.92181 (12) obj. -43.2895 iterations 7
Cbc0038I Pass  65: suminf.    1.23196 (10) obj. -42.9681 iterations 20
Cbc0038I Pass  66: suminf.    1.20036 (11) obj. -42.9681 iterations 7
Cbc0038I Pass  67: suminf.    2.31243 (14) obj. -42.9681 iterations 17
Cbc0038I Pass  68: suminf.    2.31243 (14) obj. -42.9681 iterations 4
Cbc0038I Pass  69: suminf.    1.60911 (13) obj. -42.9681 iterations 12
Cbc0038I Pass  70: suminf.    1.57804 (12) obj. -42.9681 iterations 3
Cbc0038I Pass  71: suminf.    1.23592 (13) obj. -42.9681 iterations 7
Cbc0038I Pass  72: suminf.    0.99201 (13) obj. -42.9681 iterations 5
Cbc0038I Pass  73: suminf.    2.23239 (14) obj. -42.9681 iterations 27
Cbc0038I Pass  74: suminf.    2.23239 (14) obj. -42.9681 iterations 3
Cbc0038I Pass  75: suminf.    1.60911 (13) obj. -42.9681 iterations 10
Cbc0038I Pass  76: suminf.    1.57804 (12) obj. -42.9681 iterations 3
Cbc0038I Pass  77: suminf.    1.23592 (13) obj. -42.9681 iterations 7
Cbc0038I Pass  78: suminf.    0.99201 (13) obj. -42.9681 iterations 5
Cbc0038I Pass  79: suminf.    2.23239 (14) obj. -42.9681 iterations 24
Cbc0038I Pass  80: suminf.    2.23239 (14) obj. -42.9681 iterations 4
Cbc0038I Pass  81: suminf.    1.60911 (13) obj. -42.9681 iterations 9
Cbc0038I Pass  82: suminf.    1.57804 (12) obj. -42.9681 iterations 3
Cbc0038I Pass  83: suminf.    1.23592 (13) obj. -42.9681 iterations 7
Cbc0038I Pass  84: suminf.    0.99201 (13) obj. -42.9681 iterations 5
Cbc0038I Pass  85: suminf.    2.23239 (14) obj. -42.9681 iterations 21
Cbc0038I Pass  86: suminf.    2.23239 (14) obj. -42.9681 iterations 6
Cbc0038I Pass  87: suminf.    1.60911 (13) obj. -42.9681 iterations 11
Cbc0038I Pass  88: suminf.    1.57804 (12) obj. -42.9681 iterations 3
Cbc0038I Pass  89: suminf.    1.23592 (13) obj. -42.9681 iterations 8
Cbc0038I Pass  90: suminf.    0.99201 (13) obj. -42.9681 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -34.2929 - took 0.13 seconds
Cbc0012I Integer solution of -34.29286 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 90 rows 109 columns, reduced to 17 rows 20 columns
Cbc0012I Integer solution of -36.00268 found by DiveCoefficient after 3668 iterations and 0 nodes (2.48 seconds)
Cbc0031I 60 added rows had average density of 13.9
Cbc0013I At root node, 60 cuts changed objective from -59.750739 to -42.918902 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10060 row cuts average 5.5 elements, 5 column cuts (5 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1593 row cuts average 90.4 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 74 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 605 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 371 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 666 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 381 row cuts average 51.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 342 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.754 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.00268 best solution, best possible -42.918902 (2.53 seconds)
Cbc0010I After 4 nodes, 3 on tree, -36.00268 best solution, best possible -42.595078 (3.24 seconds)
Cbc0012I Integer solution of -36.01636 found by DiveCoefficient after 4522 iterations and 7 nodes (3.46 seconds)
Cbc0012I Integer solution of -36.0164 found by rounding after 4714 iterations and 15 nodes (3.78 seconds)
Cbc0010I After 20 nodes, 6 on tree, -36.0164 best solution, best possible -42.595078 (3.97 seconds)
Cbc0001I Search completed - best objective -36.0164, took 5345 iterations and 32 nodes (4.19 seconds)
Cbc0032I Strong branching done 508 times (8744 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 44 variables fixed on reduced cost
Total time (CPU seconds):       2.81   (Wallclock seconds):       4.21

