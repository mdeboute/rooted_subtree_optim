Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 75 (-3) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 6.59673e-09 - average 4.71195e-11, 3 fixed columns
Coin0506I Presolve 134 (-6) rows, 72 (-3) columns and 404 (-18) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 2.542308 - largest nonzero change 0 ( 0%) - largest zero change 1.124072e-05
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Coin0511I After Postsolve, objective 32.435267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Coin0511I After Postsolve, objective 32.435267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.43526746 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 75 columns (74 integer (74 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 11.8214
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.1137 iterations 72
Cbc0038I Solution found of 10.1137
Cbc0038I Relaxing continuous gives 10.1137
Cbc0038I Rounding solution of 1.97537 is better than previous of 10.1137

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound improved solution from 1.97537 to -2.40571 (0.06 seconds)
Cbc0038I Round again with cutoff of -5.40876
Cbc0038I Pass   2: suminf.    1.19052 (13) obj. -5.40876 iterations 16
Cbc0038I Pass   3: suminf.    1.18879 (13) obj. -5.40876 iterations 3
Cbc0038I Pass   4: suminf.    2.72709 (9) obj. -5.40876 iterations 12
Cbc0038I Pass   5: suminf.    1.94670 (8) obj. -5.40876 iterations 7
Cbc0038I Pass   6: suminf.    1.93198 (6) obj. -5.40876 iterations 2
Cbc0038I Pass   7: suminf.    1.61871 (6) obj. -5.40876 iterations 8
Cbc0038I Pass   8: suminf.    1.41083 (6) obj. -5.40876 iterations 6
Cbc0038I Pass   9: suminf.    2.27155 (9) obj. -5.40876 iterations 14
Cbc0038I Pass  10: suminf.    1.66554 (10) obj. -5.40876 iterations 2
Cbc0038I Pass  11: suminf.    2.04847 (8) obj. -5.40876 iterations 19
Cbc0038I Pass  12: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  13: suminf.    2.12633 (8) obj. -5.40876 iterations 10
Cbc0038I Pass  14: suminf.    2.12633 (8) obj. -5.40876 iterations 0
Cbc0038I Pass  15: suminf.    3.06982 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  16: suminf.    2.16212 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  17: suminf.    2.16212 (6) obj. -5.40876 iterations 0
Cbc0038I Pass  18: suminf.    2.50968 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  19: suminf.    2.08694 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  20: suminf.    2.08694 (6) obj. -5.40876 iterations 0
Cbc0038I Pass  21: suminf.    2.68732 (7) obj. -5.40876 iterations 4
Cbc0038I Pass  22: suminf.    2.35568 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  23: suminf.    2.06943 (9) obj. -5.40876 iterations 1
Cbc0038I Pass  24: suminf.    1.90065 (9) obj. -5.40876 iterations 2
Cbc0038I Pass  25: suminf.    2.29582 (9) obj. -5.40876 iterations 18
Cbc0038I Pass  26: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  27: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  28: suminf.    2.12633 (8) obj. -5.40876 iterations 10
Cbc0038I Pass  29: suminf.    2.12633 (8) obj. -5.40876 iterations 0
Cbc0038I Pass  30: suminf.    3.06982 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  31: suminf.    2.16212 (6) obj. -5.40876 iterations 4
Cbc0038I Rounding solution of -2.99386 is better than previous of -2.40571

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -2.99386 to -3.44603 (0.11 seconds)
Cbc0038I Round again with cutoff of -10.8141
Cbc0038I Pass  31: suminf.    2.61081 (30) obj. -10.8141 iterations 21
Cbc0038I Pass  32: suminf.    2.61081 (30) obj. -10.8141 iterations 0
Cbc0038I Pass  33: suminf.    2.59374 (8) obj. -10.8141 iterations 25
Cbc0038I Pass  34: suminf.    2.19525 (8) obj. -10.8141 iterations 14
Cbc0038I Pass  35: suminf.    2.19525 (8) obj. -10.8141 iterations 0
Cbc0038I Pass  36: suminf.    3.60426 (10) obj. -10.8141 iterations 13
Cbc0038I Pass  37: suminf.    2.34992 (6) obj. -10.8141 iterations 6
Cbc0038I Pass  38: suminf.    2.25742 (7) obj. -10.8141 iterations 4
Cbc0038I Pass  39: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  40: suminf.    3.06416 (7) obj. -10.8141 iterations 8
Cbc0038I Pass  41: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  42: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  43: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  44: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I Pass  45: suminf.    2.34992 (6) obj. -10.8141 iterations 3
Cbc0038I Pass  46: suminf.    2.25742 (7) obj. -10.8141 iterations 4
Cbc0038I Pass  47: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  48: suminf.    3.06416 (7) obj. -10.8141 iterations 8
Cbc0038I Pass  49: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  50: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  51: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  52: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I Pass  53: suminf.    2.34992 (6) obj. -10.8141 iterations 4
Cbc0038I Pass  54: suminf.    2.25742 (7) obj. -10.8141 iterations 5
Cbc0038I Pass  55: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  56: suminf.    3.06416 (7) obj. -10.8141 iterations 10
Cbc0038I Pass  57: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  58: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  59: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  60: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -3.44603 - took 0.13 seconds
Cbc0012I Integer solution of -3.44603 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0031I 33 added rows had average density of 44.939394
Cbc0013I At root node, 33 cuts changed objective from -32.435267 to -24.870579 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22300 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3426 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.44603 best solution, best possible -24.870579 (1.48 seconds)
Cbc0012I Integer solution of -4.68391 found by rounding after 12851 iterations and 29 nodes (1.70 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 93 rows 51 columns
Cbc0038I Full problem 140 rows 75 columns, reduced to 15 rows 15 columns
Cbc0001I Search completed - best objective -4.683909999999997, took 15811 iterations and 108 nodes (1.96 seconds)
Cbc0032I Strong branching done 1236 times (23880 iterations), fathomed 9 nodes and fixed 58 variables
Cbc0035I Maximum depth 33, 327 variables fixed on reduced cost
Total time (CPU seconds):       1.91   (Wallclock seconds):       1.98

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-44) rows, 118 (-34) columns and 1912 (-1391) elements
Clp1000I sum of infeasibilities 1.30172e-08 - average 1.18338e-10, 27 fixed columns
Coin0506I Presolve 85 (-25) rows, 91 (-27) columns and 1160 (-752) elements
Clp0006I 0  Obj 39.144202 Dual inf 4.2089317 (91)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.3508033 - largest nonzero change 2.8895783e-05 ( 0.0023126055%) - largest zero change 2.7475016e-05
Clp0000I Optimal - objective value 44.854345
Clp0000I Optimal - objective value 44.854345
Coin0511I After Postsolve, objective 44.854345, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 44.854345
Clp0000I Optimal - objective value 44.854345
Clp0000I Optimal - objective value 44.854345
Clp0000I Optimal - objective value 44.854345
Coin0511I After Postsolve, objective 44.854345, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.85434548 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 118 columns (118 integer (118 of which binary)) and 1914 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.351%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 3.96495
Cbc0038I Pass   1: suminf.    3.57210 (34) obj. -38.5416 iterations 11
Cbc0038I Pass   2: suminf.    1.34745 (21) obj. -10.8041 iterations 15
Cbc0038I Pass   3: suminf.    0.53338 (11) obj. -0.71624 iterations 10
Cbc0038I Solution found of 13.568
Cbc0038I Rounding solution of 11.9334 is better than previous of 13.568

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 118 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 11.9334 to 7.89917 (0.02 seconds)
Cbc0038I Round again with cutoff of 3.05102
Cbc0038I Pass   4: suminf.    3.57210 (34) obj. -38.5416 iterations 0
Cbc0038I Pass   5: suminf.    1.44949 (22) obj. -11.7021 iterations 16
Cbc0038I Pass   6: suminf.    0.65942 (2) obj. 3.05102 iterations 24
Cbc0038I Pass   7: suminf.    0.41891 (2) obj. 1.0662 iterations 2
Cbc0038I Pass   8: suminf.    0.70246 (2) obj. 3.05102 iterations 3
Cbc0038I Pass   9: suminf.    1.98459 (13) obj. -0.560092 iterations 30
Cbc0038I Pass  10: suminf.    1.41458 (11) obj. 0.261086 iterations 8
Cbc0038I Pass  11: suminf.    1.44229 (7) obj. 3.05102 iterations 17
Cbc0038I Pass  12: suminf.    1.30496 (5) obj. 3.05102 iterations 3
Cbc0038I Pass  13: suminf.    0.55976 (4) obj. 3.05102 iterations 7
Cbc0038I Pass  14: suminf.    0.55976 (4) obj. 3.05102 iterations 0
Cbc0038I Pass  15: suminf.    0.76011 (5) obj. 3.05102 iterations 6
Cbc0038I Pass  16: suminf.    0.76011 (5) obj. 3.05102 iterations 0
Cbc0038I Pass  17: suminf.    0.67805 (4) obj. 3.05102 iterations 3
Cbc0038I Pass  18: suminf.    0.31716 (2) obj. 1.05249 iterations 3
Cbc0038I Pass  19: suminf.    0.65025 (2) obj. 3.05102 iterations 1
Cbc0038I Pass  20: suminf.    2.04836 (14) obj. 3.05102 iterations 39
Cbc0038I Pass  21: suminf.    0.86027 (11) obj. 3.05102 iterations 20
Cbc0038I Pass  22: suminf.    1.27044 (5) obj. 3.05102 iterations 15
Cbc0038I Pass  23: suminf.    0.72659 (10) obj. 3.05102 iterations 11
Cbc0038I Pass  24: suminf.    0.34363 (3) obj. 2.86276 iterations 9
Cbc0038I Pass  25: suminf.    0.72659 (10) obj. 3.05102 iterations 8
Cbc0038I Pass  26: suminf.    1.27041 (10) obj. 3.05102 iterations 22
Cbc0038I Pass  27: suminf.    0.87362 (9) obj. 3.05102 iterations 4
Cbc0038I Pass  28: suminf.    0.68420 (4) obj. 3.05102 iterations 11
Cbc0038I Pass  29: suminf.    0.62100 (4) obj. 2.92462 iterations 3
Cbc0038I Pass  30: suminf.    1.29406 (10) obj. -2.51871 iterations 21
Cbc0038I Pass  31: suminf.    0.61257 (8) obj. -0.504117 iterations 4
Cbc0038I Pass  32: suminf.    1.45086 (6) obj. 3.05102 iterations 16
Cbc0038I Pass  33: suminf.    1.45086 (6) obj. 3.05102 iterations 0
Cbc0038I Rounding solution of 1.38922 is better than previous of 7.89917

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 118 columns, reduced to 34 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 1.38922 to -2.78853 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.3472
Cbc0038I Pass  33: suminf.    3.57210 (34) obj. -38.5416 iterations 0
Cbc0038I Pass  34: suminf.    0.87485 (9) obj. -10.3472 iterations 33
Cbc0038I Pass  35: suminf.    0.85135 (9) obj. -10.3472 iterations 1
Cbc0038I Pass  36: suminf.    1.62973 (12) obj. -10.3472 iterations 27
Cbc0038I Pass  37: suminf.    1.07230 (9) obj. -10.3472 iterations 7
Cbc0038I Pass  38: suminf.    1.52511 (8) obj. -10.3472 iterations 9
Cbc0038I Pass  39: suminf.    0.87835 (7) obj. -10.3472 iterations 4
Cbc0038I Pass  40: suminf.    2.05481 (13) obj. -10.3472 iterations 17
Cbc0038I Pass  41: suminf.    1.62322 (11) obj. -10.3472 iterations 2
Cbc0038I Pass  42: suminf.    2.17128 (11) obj. -10.3472 iterations 8
Cbc0038I Pass  43: suminf.    1.10451 (10) obj. -10.3472 iterations 4
Cbc0038I Pass  44: suminf.    1.10451 (10) obj. -10.3472 iterations 0
Cbc0038I Pass  45: suminf.    1.96684 (11) obj. -10.3472 iterations 5
Cbc0038I Pass  46: suminf.    1.33418 (9) obj. -10.3472 iterations 2
Cbc0038I Pass  47: suminf.    1.06175 (9) obj. -10.892 iterations 3
Cbc0038I Pass  48: suminf.    1.87078 (11) obj. -10.3472 iterations 5
Cbc0038I Pass  49: suminf.    1.33418 (9) obj. -10.3472 iterations 2
Cbc0038I Pass  50: suminf.    2.78181 (15) obj. -10.3472 iterations 18
Cbc0038I Pass  51: suminf.    2.29906 (12) obj. -10.3472 iterations 10
Cbc0038I Pass  52: suminf.    1.10805 (11) obj. -10.3472 iterations 12
Cbc0038I Pass  53: suminf.    1.10805 (11) obj. -10.3472 iterations 0
Cbc0038I Pass  54: suminf.    1.78098 (10) obj. -10.3472 iterations 7
Cbc0038I Pass  55: suminf.    1.14825 (10) obj. -10.3472 iterations 5
Cbc0038I Pass  56: suminf.    1.78549 (11) obj. -10.3472 iterations 6
Cbc0038I Pass  57: suminf.    1.18966 (9) obj. -10.3472 iterations 5
Cbc0038I Pass  58: suminf.    1.78549 (11) obj. -10.3472 iterations 7
Cbc0038I Pass  59: suminf.    1.29251 (9) obj. -10.3472 iterations 5
Cbc0038I Pass  60: suminf.    1.68938 (16) obj. -10.3472 iterations 21
Cbc0038I Pass  61: suminf.    1.28002 (13) obj. -10.3472 iterations 10
Cbc0038I Pass  62: suminf.    1.54383 (10) obj. -10.3472 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 118 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.78853 - took 0.06 seconds
Cbc0012I Integer solution of -2.78853 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 110 rows 118 columns, reduced to 21 rows 29 columns
Cbc0031I 67 added rows had average density of 23.656716
Cbc0013I At root node, 67 cuts changed objective from -40.581403 to -10.301904 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13628 row cuts average 2.0 elements, 0 column cuts (2 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1494 row cuts average 110.7 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 851 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 981 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 337 row cuts average 67.2 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 146 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.78853 best solution, best possible -10.301904 (2.63 seconds)
Cbc0012I Integer solution of -3.38344 found by rounding after 4731 iterations and 1 nodes (2.64 seconds)
Cbc0004I Integer solution of -3.89999 found after 4815 iterations and 1 nodes (2.70 seconds)
Cbc0010I After 6 nodes, 5 on tree, -3.89999 best solution, best possible -9.8933444 (3.41 seconds)
Cbc0010I After 27 nodes, 4 on tree, -3.89999 best solution, best possible -9.8933444 (4.14 seconds)
Cbc0016I Integer solution of -3.95156 found by strong branching after 6585 iterations and 34 nodes (4.43 seconds)
Cbc0038I Full problem 110 rows 118 columns, reduced to 12 rows 22 columns
Cbc0012I Integer solution of -4.68391 found by RINS after 7161 iterations and 43 nodes (4.81 seconds)
Cbc0010I After 44 nodes, 2 on tree, -4.68391 best solution, best possible -9.8933444 (4.90 seconds)
Cbc0001I Search completed - best objective -4.683909999999997, took 7387 iterations and 46 nodes (4.91 seconds)
Cbc0032I Strong branching done 796 times (18248 iterations), fathomed 4 nodes and fixed 5 variables
Cbc0035I Maximum depth 14, 60 variables fixed on reduced cost
Total time (CPU seconds):       3.52   (Wallclock seconds):       4.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 75 (-3) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 6.59673e-09 - average 4.71195e-11, 3 fixed columns
Coin0506I Presolve 134 (-6) rows, 72 (-3) columns and 404 (-18) elements
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 2.542308 - largest nonzero change 0 ( 0%) - largest zero change 1.124072e-05
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Coin0511I After Postsolve, objective 32.435267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Clp0000I Optimal - objective value 32.435267
Coin0511I After Postsolve, objective 32.435267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.43526746 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 75 columns (74 integer (74 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.219%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 11.8214
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.1137 iterations 72
Cbc0038I Solution found of 10.1137
Cbc0038I Relaxing continuous gives 10.1137
Cbc0038I Rounding solution of 1.97537 is better than previous of 10.1137

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound improved solution from 1.97537 to -2.40571 (0.05 seconds)
Cbc0038I Round again with cutoff of -5.40876
Cbc0038I Pass   2: suminf.    1.19052 (13) obj. -5.40876 iterations 16
Cbc0038I Pass   3: suminf.    1.18879 (13) obj. -5.40876 iterations 3
Cbc0038I Pass   4: suminf.    2.72709 (9) obj. -5.40876 iterations 12
Cbc0038I Pass   5: suminf.    1.94670 (8) obj. -5.40876 iterations 7
Cbc0038I Pass   6: suminf.    1.93198 (6) obj. -5.40876 iterations 2
Cbc0038I Pass   7: suminf.    1.61871 (6) obj. -5.40876 iterations 8
Cbc0038I Pass   8: suminf.    1.41083 (6) obj. -5.40876 iterations 6
Cbc0038I Pass   9: suminf.    2.27155 (9) obj. -5.40876 iterations 14
Cbc0038I Pass  10: suminf.    1.66554 (10) obj. -5.40876 iterations 2
Cbc0038I Pass  11: suminf.    2.04847 (8) obj. -5.40876 iterations 19
Cbc0038I Pass  12: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  13: suminf.    2.12633 (8) obj. -5.40876 iterations 10
Cbc0038I Pass  14: suminf.    2.12633 (8) obj. -5.40876 iterations 0
Cbc0038I Pass  15: suminf.    3.06982 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  16: suminf.    2.16212 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  17: suminf.    2.16212 (6) obj. -5.40876 iterations 0
Cbc0038I Pass  18: suminf.    2.50968 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  19: suminf.    2.08694 (6) obj. -5.40876 iterations 4
Cbc0038I Pass  20: suminf.    2.08694 (6) obj. -5.40876 iterations 0
Cbc0038I Pass  21: suminf.    2.68732 (7) obj. -5.40876 iterations 4
Cbc0038I Pass  22: suminf.    2.35568 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  23: suminf.    2.06943 (9) obj. -5.40876 iterations 1
Cbc0038I Pass  24: suminf.    1.90065 (9) obj. -5.40876 iterations 2
Cbc0038I Pass  25: suminf.    2.29582 (9) obj. -5.40876 iterations 18
Cbc0038I Pass  26: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  27: suminf.    2.04847 (8) obj. -5.40876 iterations 1
Cbc0038I Pass  28: suminf.    2.12633 (8) obj. -5.40876 iterations 10
Cbc0038I Pass  29: suminf.    2.12633 (8) obj. -5.40876 iterations 0
Cbc0038I Pass  30: suminf.    3.06982 (8) obj. -5.40876 iterations 5
Cbc0038I Pass  31: suminf.    2.16212 (6) obj. -5.40876 iterations 4
Cbc0038I Rounding solution of -2.99386 is better than previous of -2.40571

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -2.99386 to -3.44603 (0.10 seconds)
Cbc0038I Round again with cutoff of -10.8141
Cbc0038I Pass  31: suminf.    2.61081 (30) obj. -10.8141 iterations 21
Cbc0038I Pass  32: suminf.    2.61081 (30) obj. -10.8141 iterations 0
Cbc0038I Pass  33: suminf.    2.59374 (8) obj. -10.8141 iterations 25
Cbc0038I Pass  34: suminf.    2.19525 (8) obj. -10.8141 iterations 14
Cbc0038I Pass  35: suminf.    2.19525 (8) obj. -10.8141 iterations 0
Cbc0038I Pass  36: suminf.    3.60426 (10) obj. -10.8141 iterations 13
Cbc0038I Pass  37: suminf.    2.34992 (6) obj. -10.8141 iterations 6
Cbc0038I Pass  38: suminf.    2.25742 (7) obj. -10.8141 iterations 4
Cbc0038I Pass  39: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  40: suminf.    3.06416 (7) obj. -10.8141 iterations 8
Cbc0038I Pass  41: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  42: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  43: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  44: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I Pass  45: suminf.    2.34992 (6) obj. -10.8141 iterations 3
Cbc0038I Pass  46: suminf.    2.25742 (7) obj. -10.8141 iterations 4
Cbc0038I Pass  47: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  48: suminf.    3.06416 (7) obj. -10.8141 iterations 8
Cbc0038I Pass  49: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  50: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  51: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  52: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I Pass  53: suminf.    2.34992 (6) obj. -10.8141 iterations 4
Cbc0038I Pass  54: suminf.    2.25742 (7) obj. -10.8141 iterations 5
Cbc0038I Pass  55: suminf.    2.25742 (7) obj. -10.8141 iterations 0
Cbc0038I Pass  56: suminf.    3.06416 (7) obj. -10.8141 iterations 10
Cbc0038I Pass  57: suminf.    2.54877 (8) obj. -10.8141 iterations 5
Cbc0038I Pass  58: suminf.    2.48516 (9) obj. -10.8141 iterations 1
Cbc0038I Pass  59: suminf.    3.38702 (10) obj. -10.8141 iterations 16
Cbc0038I Pass  60: suminf.    2.35255 (8) obj. -10.8141 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -3.44603 - took 0.12 seconds
Cbc0012I Integer solution of -3.44603 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 94 rows 51 columns
Cbc0031I 33 added rows had average density of 44.939394
Cbc0013I At root node, 33 cuts changed objective from -32.435267 to -24.870579 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 22300 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3426 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.44603 best solution, best possible -24.870579 (1.47 seconds)
Cbc0012I Integer solution of -4.68391 found by rounding after 12851 iterations and 29 nodes (1.69 seconds)
Cbc0038I Full problem 140 rows 75 columns, reduced to 93 rows 51 columns
Cbc0038I Full problem 140 rows 75 columns, reduced to 15 rows 15 columns
Cbc0001I Search completed - best objective -4.683909999999997, took 15811 iterations and 108 nodes (1.95 seconds)
Cbc0032I Strong branching done 1236 times (23880 iterations), fathomed 9 nodes and fixed 58 variables
Cbc0035I Maximum depth 33, 327 variables fixed on reduced cost
Total time (CPU seconds):       1.91   (Wallclock seconds):       1.97

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 118 (-35) columns and 1912 (-1392) elements
Clp1000I sum of infeasibilities 1.30172e-08 - average 1.18338e-10, 27 fixed columns
Coin0506I Presolve 85 (-25) rows, 91 (-27) columns and 1160 (-752) elements
Clp0006I 0  Obj 39.144202 Dual inf 4.2089317 (91)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.3508033 - largest nonzero change 2.8895783e-05 ( 0.0023126055%) - largest zero change 2.7475016e-05
Clp0000I Optimal - objective value 44.854345
Clp0000I Optimal - objective value 44.854345
Coin0511I After Postsolve, objective 44.854345, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 44.854345
Clp0000I Optimal - objective value 44.854345
Clp0000I Optimal - objective value 44.854345
Clp0000I Optimal - objective value 44.854345
Coin0511I After Postsolve, objective 44.854345, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.85434548 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 118 columns (118 integer (118 of which binary)) and 1914 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.351%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 3.96495
Cbc0038I Pass   1: suminf.    3.57210 (34) obj. -38.5416 iterations 11
Cbc0038I Pass   2: suminf.    1.34745 (21) obj. -10.8041 iterations 15
Cbc0038I Pass   3: suminf.    0.53338 (11) obj. -0.71624 iterations 10
Cbc0038I Solution found of 13.568
Cbc0038I Rounding solution of 11.9334 is better than previous of 13.568

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 118 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 11.9334 to 7.89917 (0.03 seconds)
Cbc0038I Round again with cutoff of 3.05102
Cbc0038I Pass   4: suminf.    3.57210 (34) obj. -38.5416 iterations 0
Cbc0038I Pass   5: suminf.    1.44949 (22) obj. -11.7021 iterations 16
Cbc0038I Pass   6: suminf.    0.65942 (2) obj. 3.05102 iterations 24
Cbc0038I Pass   7: suminf.    0.41891 (2) obj. 1.0662 iterations 2
Cbc0038I Pass   8: suminf.    0.70246 (2) obj. 3.05102 iterations 3
Cbc0038I Pass   9: suminf.    1.98459 (13) obj. -0.560092 iterations 30
Cbc0038I Pass  10: suminf.    1.41458 (11) obj. 0.261086 iterations 8
Cbc0038I Pass  11: suminf.    1.44229 (7) obj. 3.05102 iterations 17
Cbc0038I Pass  12: suminf.    1.30496 (5) obj. 3.05102 iterations 3
Cbc0038I Pass  13: suminf.    0.55976 (4) obj. 3.05102 iterations 7
Cbc0038I Pass  14: suminf.    0.55976 (4) obj. 3.05102 iterations 0
Cbc0038I Pass  15: suminf.    0.76011 (5) obj. 3.05102 iterations 6
Cbc0038I Pass  16: suminf.    0.76011 (5) obj. 3.05102 iterations 0
Cbc0038I Pass  17: suminf.    0.67805 (4) obj. 3.05102 iterations 3
Cbc0038I Pass  18: suminf.    0.31716 (2) obj. 1.05249 iterations 3
Cbc0038I Pass  19: suminf.    0.65025 (2) obj. 3.05102 iterations 1
Cbc0038I Pass  20: suminf.    2.04836 (14) obj. 3.05102 iterations 39
Cbc0038I Pass  21: suminf.    0.86027 (11) obj. 3.05102 iterations 20
Cbc0038I Pass  22: suminf.    1.27044 (5) obj. 3.05102 iterations 15
Cbc0038I Pass  23: suminf.    0.72659 (10) obj. 3.05102 iterations 11
Cbc0038I Pass  24: suminf.    0.34363 (3) obj. 2.86276 iterations 9
Cbc0038I Pass  25: suminf.    0.72659 (10) obj. 3.05102 iterations 8
Cbc0038I Pass  26: suminf.    1.27041 (10) obj. 3.05102 iterations 22
Cbc0038I Pass  27: suminf.    0.87362 (9) obj. 3.05102 iterations 4
Cbc0038I Pass  28: suminf.    0.68420 (4) obj. 3.05102 iterations 11
Cbc0038I Pass  29: suminf.    0.62100 (4) obj. 2.92462 iterations 3
Cbc0038I Pass  30: suminf.    1.29406 (10) obj. -2.51871 iterations 21
Cbc0038I Pass  31: suminf.    0.61257 (8) obj. -0.504117 iterations 4
Cbc0038I Pass  32: suminf.    1.45086 (6) obj. 3.05102 iterations 16
Cbc0038I Pass  33: suminf.    1.45086 (6) obj. 3.05102 iterations 0
Cbc0038I Rounding solution of 1.38922 is better than previous of 7.89917

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 118 columns, reduced to 34 rows 45 columns
Cbc0038I Mini branch and bound improved solution from 1.38922 to -2.78853 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.3472
Cbc0038I Pass  33: suminf.    3.57210 (34) obj. -38.5416 iterations 0
Cbc0038I Pass  34: suminf.    0.87485 (9) obj. -10.3472 iterations 33
Cbc0038I Pass  35: suminf.    0.85135 (9) obj. -10.3472 iterations 1
Cbc0038I Pass  36: suminf.    1.62973 (12) obj. -10.3472 iterations 27
Cbc0038I Pass  37: suminf.    1.07230 (9) obj. -10.3472 iterations 7
Cbc0038I Pass  38: suminf.    1.52511 (8) obj. -10.3472 iterations 9
Cbc0038I Pass  39: suminf.    0.87835 (7) obj. -10.3472 iterations 4
Cbc0038I Pass  40: suminf.    2.05481 (13) obj. -10.3472 iterations 17
Cbc0038I Pass  41: suminf.    1.62322 (11) obj. -10.3472 iterations 2
Cbc0038I Pass  42: suminf.    2.17128 (11) obj. -10.3472 iterations 8
Cbc0038I Pass  43: suminf.    1.10451 (10) obj. -10.3472 iterations 4
Cbc0038I Pass  44: suminf.    1.10451 (10) obj. -10.3472 iterations 0
Cbc0038I Pass  45: suminf.    1.96684 (11) obj. -10.3472 iterations 5
Cbc0038I Pass  46: suminf.    1.33418 (9) obj. -10.3472 iterations 2
Cbc0038I Pass  47: suminf.    1.06175 (9) obj. -10.892 iterations 3
Cbc0038I Pass  48: suminf.    1.87078 (11) obj. -10.3472 iterations 5
Cbc0038I Pass  49: suminf.    1.33418 (9) obj. -10.3472 iterations 2
Cbc0038I Pass  50: suminf.    2.78181 (15) obj. -10.3472 iterations 18
Cbc0038I Pass  51: suminf.    2.29906 (12) obj. -10.3472 iterations 10
Cbc0038I Pass  52: suminf.    1.10805 (11) obj. -10.3472 iterations 12
Cbc0038I Pass  53: suminf.    1.10805 (11) obj. -10.3472 iterations 0
Cbc0038I Pass  54: suminf.    1.78098 (10) obj. -10.3472 iterations 7
Cbc0038I Pass  55: suminf.    1.14825 (10) obj. -10.3472 iterations 5
Cbc0038I Pass  56: suminf.    1.78549 (11) obj. -10.3472 iterations 6
Cbc0038I Pass  57: suminf.    1.18966 (9) obj. -10.3472 iterations 5
Cbc0038I Pass  58: suminf.    1.78549 (11) obj. -10.3472 iterations 7
Cbc0038I Pass  59: suminf.    1.29251 (9) obj. -10.3472 iterations 5
Cbc0038I Pass  60: suminf.    1.68938 (16) obj. -10.3472 iterations 21
Cbc0038I Pass  61: suminf.    1.28002 (13) obj. -10.3472 iterations 10
Cbc0038I Pass  62: suminf.    1.54383 (10) obj. -10.3472 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 118 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -2.78853 - took 0.07 seconds
Cbc0012I Integer solution of -2.78853 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 110 rows 118 columns, reduced to 21 rows 29 columns
Cbc0031I 67 added rows had average density of 23.656716
Cbc0013I At root node, 67 cuts changed objective from -40.581403 to -10.301904 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13628 row cuts average 2.0 elements, 0 column cuts (2 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1494 row cuts average 110.7 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 851 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 981 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 337 row cuts average 67.2 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 146 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.761 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.78853 best solution, best possible -10.301904 (2.92 seconds)
Cbc0012I Integer solution of -3.38344 found by rounding after 4731 iterations and 1 nodes (2.93 seconds)
Cbc0004I Integer solution of -3.89999 found after 4815 iterations and 1 nodes (2.99 seconds)
Cbc0010I After 4 nodes, 3 on tree, -3.89999 best solution, best possible -9.8933444 (3.65 seconds)
Cbc0010I After 22 nodes, 7 on tree, -3.89999 best solution, best possible -9.8933444 (4.43 seconds)
Cbc0016I Integer solution of -3.95156 found by strong branching after 6585 iterations and 34 nodes (4.98 seconds)
Cbc0010I After 38 nodes, 6 on tree, -3.95156 best solution, best possible -9.8933444 (5.17 seconds)
Cbc0038I Full problem 110 rows 118 columns, reduced to 12 rows 22 columns
Cbc0012I Integer solution of -4.68391 found by RINS after 7161 iterations and 43 nodes (5.48 seconds)
Cbc0001I Search completed - best objective -4.683909999999997, took 7387 iterations and 46 nodes (5.62 seconds)
Cbc0032I Strong branching done 796 times (18248 iterations), fathomed 4 nodes and fixed 5 variables
Cbc0035I Maximum depth 14, 60 variables fixed on reduced cost
Total time (CPU seconds):       3.94   (Wallclock seconds):       5.64

