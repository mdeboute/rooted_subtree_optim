Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 500 (-27) rows, 259 (-5) columns and 1486 (-59) elements
Clp1000I sum of infeasibilities 5.37672e-05 - average 1.07534e-07, 83 fixed columns
Coin0506I Presolve 337 (-163) rows, 176 (-83) columns and 1001 (-485) elements
Clp0029I End of values pass after 176 iterations
Clp0014I Perturbing problem by 0.001% of 0.14875763 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 151.43743
Clp0000I Optimal - objective value 151.43743
Coin0511I After Postsolve, objective 151.43743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13319269 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 151.43743
Clp0000I Optimal - objective value 151.43743
Clp0000I Optimal - objective value 151.43743
Coin0511I After Postsolve, objective 151.43743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 151.4374261 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 500 rows, 259 columns (258 integer (258 of which binary)) and 1486 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 95 integers unsatisfied sum - 10.9625
Cbc0038I Solution found of -1.91562
Cbc0038I Relaxing continuous gives -15.5094
Cbc0038I Before mini branch and bound, 163 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 180 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -15.5094 to -75.5386 (0.09 seconds)
Cbc0038I Round again with cutoff of -83.1286
Cbc0038I Pass   1: suminf.    4.05191 (69) obj. -83.1286 iterations 209
Cbc0038I Pass   2: suminf.    4.34127 (11) obj. -83.1286 iterations 87
Cbc0038I Pass   3: suminf.    2.16721 (9) obj. -83.1286 iterations 39
Cbc0038I Pass   4: suminf.    2.27675 (8) obj. -83.1286 iterations 26
Cbc0038I Pass   5: suminf.    0.56626 (4) obj. -83.1286 iterations 21
Cbc0038I Pass   6: suminf.    0.50961 (5) obj. -83.1286 iterations 4
Cbc0038I Pass   7: suminf.    1.23074 (5) obj. -83.1286 iterations 18
Cbc0038I Pass   8: suminf.    1.05942 (5) obj. -83.1286 iterations 17
Cbc0038I Pass   9: suminf.    0.99687 (4) obj. -83.1286 iterations 22
Cbc0038I Pass  10: suminf.    1.91442 (7) obj. -83.1286 iterations 40
Cbc0038I Pass  11: suminf.    1.76006 (6) obj. -83.1286 iterations 30
Cbc0038I Pass  12: suminf.    1.41161 (4) obj. -83.1286 iterations 3
Cbc0038I Pass  13: suminf.    0.39784 (4) obj. -83.1286 iterations 25
Cbc0038I Pass  14: suminf.    0.39068 (4) obj. -83.1286 iterations 11
Cbc0038I Pass  15: suminf.    1.88502 (6) obj. -83.1286 iterations 34
Cbc0038I Pass  16: suminf.    1.84166 (5) obj. -83.1286 iterations 6
Cbc0038I Pass  17: suminf.    1.22228 (4) obj. -83.1286 iterations 18
Cbc0038I Pass  18: suminf.    1.04330 (4) obj. -83.1286 iterations 21
Cbc0038I Pass  19: suminf.    1.15338 (4) obj. -83.1286 iterations 14
Cbc0038I Pass  20: suminf.    0.39068 (4) obj. -83.1286 iterations 20
Cbc0038I Pass  21: suminf.    1.88502 (6) obj. -83.1286 iterations 34
Cbc0038I Pass  22: suminf.    1.84166 (5) obj. -83.1286 iterations 6
Cbc0038I Pass  23: suminf.    1.22228 (4) obj. -83.1286 iterations 18
Cbc0038I Pass  24: suminf.    1.04330 (4) obj. -83.1286 iterations 21
Cbc0038I Pass  25: suminf.    1.15338 (4) obj. -83.1286 iterations 14
Cbc0038I Pass  26: suminf.    0.39068 (4) obj. -83.1286 iterations 20
Cbc0038I Pass  27: suminf.    1.88502 (6) obj. -83.1286 iterations 34
Cbc0038I Pass  28: suminf.    1.84166 (5) obj. -83.1286 iterations 6
Cbc0038I Pass  29: suminf.    1.22228 (4) obj. -83.1286 iterations 18
Cbc0038I Pass  30: suminf.    1.04330 (4) obj. -83.1286 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 126 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 250 rows 133 columns - 4 fixed gives 203, 129 - ok now
Cbc0038I Full problem 500 rows 259 columns, reduced to 203 rows 129 columns
Cbc0038I Mini branch and bound improved solution from -75.5386 to -80.7105 (0.15 seconds)
Cbc0038I Round again with cutoff of -96.7904
Cbc0038I Pass  30: suminf.    4.87056 (69) obj. -96.7904 iterations 0
Cbc0038I Pass  31: suminf.    4.10834 (12) obj. -96.7904 iterations 84
Cbc0038I Pass  32: suminf.    3.20443 (14) obj. -96.7904 iterations 35
Cbc0038I Pass  33: suminf.    3.20737 (13) obj. -96.7904 iterations 5
Cbc0038I Pass  34: suminf.    3.76212 (17) obj. -96.7904 iterations 28
Cbc0038I Pass  35: suminf.    3.26365 (11) obj. -96.7904 iterations 17
Cbc0038I Pass  36: suminf.    2.59025 (10) obj. -96.7904 iterations 37
Cbc0038I Pass  37: suminf.    2.58772 (12) obj. -96.7904 iterations 1
Cbc0038I Pass  38: suminf.    4.62633 (12) obj. -96.7904 iterations 43
Cbc0038I Pass  39: suminf.    2.21459 (9) obj. -96.7904 iterations 34
Cbc0038I Pass  40: suminf.    1.92784 (10) obj. -96.7904 iterations 19
Cbc0038I Pass  41: suminf.    3.89772 (12) obj. -96.7904 iterations 33
Cbc0038I Pass  42: suminf.    2.06716 (11) obj. -96.7904 iterations 32
Cbc0038I Pass  43: suminf.    1.99404 (8) obj. -96.7904 iterations 14
Cbc0038I Pass  44: suminf.    2.75378 (10) obj. -96.7904 iterations 40
Cbc0038I Pass  45: suminf.    2.27421 (9) obj. -96.7904 iterations 18
Cbc0038I Pass  46: suminf.    3.16740 (9) obj. -96.7904 iterations 28
Cbc0038I Pass  47: suminf.    2.58772 (12) obj. -96.7904 iterations 20
Cbc0038I Pass  48: suminf.    4.62633 (12) obj. -96.7904 iterations 43
Cbc0038I Pass  49: suminf.    2.21459 (9) obj. -96.7904 iterations 33
Cbc0038I Pass  50: suminf.    1.92784 (10) obj. -96.7904 iterations 18
Cbc0038I Pass  51: suminf.    3.89772 (12) obj. -96.7904 iterations 34
Cbc0038I Pass  52: suminf.    2.06716 (11) obj. -96.7904 iterations 33
Cbc0038I Pass  53: suminf.    1.99404 (8) obj. -96.7904 iterations 15
Cbc0038I Pass  54: suminf.    2.75378 (10) obj. -96.7904 iterations 41
Cbc0038I Pass  55: suminf.    2.27421 (9) obj. -96.7904 iterations 18
Cbc0038I Pass  56: suminf.    3.16740 (9) obj. -96.7904 iterations 28
Cbc0038I Pass  57: suminf.    2.58772 (12) obj. -96.7904 iterations 20
Cbc0038I Pass  58: suminf.    4.05861 (13) obj. -96.7904 iterations 37
Cbc0038I Pass  59: suminf.    1.99401 (7) obj. -96.7904 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 129 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 246 rows 130 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -80.7105 - took 0.25 seconds
Cbc0012I Integer solution of -80.71051 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 182 rows 97 columns
Cbc0012I Integer solution of -81.16411 found by RINS after 0 iterations and 0 nodes (0.36 seconds)
Cbc0031I 46 added rows had average density of 146.36957
Cbc0013I At root node, 46 cuts changed objective from -151.43743 to -140.89605 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 57268 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.590 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4105 row cuts average 254.6 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.874 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 250.7 elements, 0 column cuts (0 active)  in 0.259 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -81.16411 best solution, best possible -140.89605 (8.06 seconds)
Cbc0010I After 6 nodes, 7 on tree, -81.16411 best solution, best possible -140.89605 (8.76 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 198 rows 106 columns
Cbc0010I After 44 nodes, 12 on tree, -81.16411 best solution, best possible -140.89605 (9.46 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 7 rows 9 columns
Cbc0012I Integer solution of -81.97477 found by RINS after 32064 iterations and 94 nodes (9.70 seconds)
Cbc0010I After 224 nodes, 21 on tree, -81.97477 best solution, best possible -140.89605 (10.16 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -82.44367 found by rounding after 40305 iterations and 313 nodes (10.58 seconds)
Cbc0012I Integer solution of -83.97183 found by rounding after 40834 iterations and 331 nodes (10.65 seconds)
Cbc0010I After 385 nodes, 4 on tree, -83.97183 best solution, best possible -96.155753 (10.88 seconds)
Cbc0001I Search completed - best objective -83.97183000000001, took 43928 iterations and 404 nodes (10.95 seconds)
Cbc0032I Strong branching done 3302 times (72842 iterations), fathomed 80 nodes and fixed 281 variables
Cbc0035I Maximum depth 57, 1805 variables fixed on reduced cost
Total time (CPU seconds):       10.75   (Wallclock seconds):       11.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 385 (-141) rows, 401 (-123) columns and 20232 (-15504) elements
Clp1000I sum of infeasibilities 1.08842e-05 - average 2.82707e-08, 302 fixed columns
Coin0506I Presolve 80 (-305) rows, 99 (-302) columns and 342 (-19890) elements
Clp0006I 0  Obj 217.15531 Primal inf 1.23503e-05 (8) Dual inf 1.9795715e+09 (99)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 1.37566 - largest nonzero change 0 ( 0%) - largest zero change 2.9911725e-05
Clp0000I Optimal - objective value 239.40832
Clp0000I Optimal - objective value 239.40832
Coin0511I After Postsolve, objective 239.40832, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 239.40832 Dual inf 397.19676 (149)
Clp0014I Perturbing problem by 0.001% of 1.7805022 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 449.03911
Clp0000I Optimal - objective value 449.03911
Clp0000I Optimal - objective value 449.03911
Coin0511I After Postsolve, objective 449.03911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 449.0391079 - 0 iterations time 0.162, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0004I processed model has 385 rows, 401 columns (401 integer (401 of which binary)) and 20232 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 147 integers unsatisfied sum - 11.1961
Cbc0038I Pass   1: suminf.    4.21094 (120) obj. -205.925 iterations 41
Cbc0038I Pass   2: suminf.    3.31737 (119) obj. -126.665 iterations 2
Cbc0038I Pass   3: suminf.    2.37456 (92) obj. -62.977 iterations 27
Cbc0038I Pass   4: suminf.    1.86127 (75) obj. -40.6693 iterations 17
Cbc0038I Pass   5: suminf.    1.46104 (61) obj. -26.0981 iterations 14
Cbc0038I Pass   6: suminf.    0.81831 (37) obj. 4.06976 iterations 24
Cbc0038I Pass   7: suminf.    0.49936 (24) obj. 18.6998 iterations 13
Cbc0038I Pass   8: suminf.    0.16492 (9) obj. 35.3202 iterations 15
Cbc0038I Solution found of 44.1553
Cbc0038I Rounding solution of 36.9208 is better than previous of 44.1553

Cbc0038I Before mini branch and bound, 253 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 401 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -11.6753
Cbc0038I Pass   9: suminf.    4.21094 (120) obj. -205.925 iterations 0
Cbc0038I Pass  10: suminf.    3.31737 (119) obj. -126.665 iterations 2
Cbc0038I Pass  11: suminf.    2.47160 (95) obj. -69.7503 iterations 24
Cbc0038I Pass  12: suminf.    1.92009 (77) obj. -43.581 iterations 18
Cbc0038I Pass  13: suminf.    1.46104 (61) obj. -26.0981 iterations 16
Cbc0038I Pass  14: suminf.    0.93891 (37) obj. -11.6753 iterations 31
Cbc0038I Pass  15: suminf.    1.01931 (22) obj. -58.0402 iterations 18
Cbc0038I Pass  16: suminf.    0.67674 (22) obj. -11.6753 iterations 3
Cbc0038I Pass  17: suminf.    0.72347 (11) obj. -45.3865 iterations 13
Cbc0038I Pass  18: suminf.    0.49620 (11) obj. -11.6753 iterations 3
Cbc0038I Pass  19: suminf.    0.46939 (1) obj. -35.6406 iterations 12
Cbc0038I Pass  20: suminf.    0.32841 (1) obj. -11.6753 iterations 1
Cbc0038I Pass  21: suminf.    1.32286 (25) obj. -11.6753 iterations 70
Cbc0038I Pass  22: suminf.    0.92058 (36) obj. -11.6753 iterations 29
Cbc0038I Pass  23: suminf.    1.10584 (16) obj. -21.2266 iterations 17
Cbc0038I Pass  24: suminf.    0.85233 (22) obj. -11.6753 iterations 7
Cbc0038I Pass  25: suminf.    1.25793 (10) obj. -11.6753 iterations 14
Cbc0038I Pass  26: suminf.    0.98583 (13) obj. -11.6753 iterations 10
Cbc0038I Pass  27: suminf.    0.93305 (6) obj. -14.8355 iterations 10
Cbc0038I Pass  28: suminf.    0.90118 (6) obj. -11.6753 iterations 8
Cbc0038I Pass  29: suminf.    1.23253 (7) obj. -11.6753 iterations 7
Cbc0038I Pass  30: suminf.    1.13786 (7) obj. -11.6753 iterations 2
Cbc0038I Pass  31: suminf.    1.79658 (7) obj. -63.155 iterations 3
Cbc0038I Pass  32: suminf.    1.20671 (7) obj. -11.6753 iterations 6
Cbc0038I Pass  33: suminf.    1.72936 (36) obj. -11.6753 iterations 73
Cbc0038I Pass  34: suminf.    0.97499 (31) obj. -11.6753 iterations 35
Cbc0038I Pass  35: suminf.    2.10356 (11) obj. -11.6753 iterations 22
Cbc0038I Pass  36: suminf.    1.05600 (15) obj. -11.6753 iterations 5
Cbc0038I Pass  37: suminf.    1.96127 (6) obj. -11.6753 iterations 13
Cbc0038I Pass  38: suminf.    1.04497 (7) obj. -11.6753 iterations 4
Cbc0038I Rounding solution of 20.5435 is better than previous of 36.9208

Cbc0038I Before mini branch and bound, 238 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 401 columns, reduced to 159 rows 162 columns - 38 fixed gives 114, 122 - still too large
Cbc0038I Full problem 385 rows 401 columns, reduced to 30 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I Round again with cutoff of -99.148
Cbc0038I Pass  38: suminf.    4.21094 (120) obj. -205.925 iterations 0
Cbc0038I Pass  39: suminf.    3.31737 (119) obj. -126.665 iterations 2
Cbc0038I Pass  40: suminf.    2.91519 (108) obj. -104.507 iterations 11
Cbc0038I Pass  41: suminf.    2.64334 (88) obj. -99.148 iterations 25
Cbc0038I Pass  42: suminf.    2.61670 (76) obj. -123.061 iterations 15
Cbc0038I Pass  43: suminf.    2.39061 (76) obj. -99.148 iterations 6
Cbc0038I Pass  44: suminf.    1.83394 (50) obj. -99.148 iterations 33
Cbc0038I Pass  45: suminf.    2.28962 (59) obj. -99.148 iterations 25
Cbc0038I Pass  46: suminf.    1.10963 (23) obj. -99.148 iterations 24
Cbc0038I Pass  47: suminf.    1.10963 (23) obj. -99.148 iterations 0
Cbc0038I Pass  48: suminf.    1.84942 (21) obj. -99.148 iterations 27
Cbc0038I Pass  49: suminf.    1.12908 (7) obj. -99.148 iterations 19
Cbc0038I Pass  50: suminf.    1.12797 (8) obj. -99.148 iterations 2
Cbc0038I Pass  51: suminf.    3.48386 (11) obj. -99.148 iterations 8
Cbc0038I Pass  52: suminf.    3.48386 (11) obj. -99.148 iterations 0
Cbc0038I Pass  53: suminf.    1.18307 (5) obj. -99.148 iterations 7
Cbc0038I Pass  54: suminf.    1.17530 (4) obj. -99.148 iterations 1
Cbc0038I Pass  55: suminf.    1.35871 (4) obj. -99.148 iterations 7
Cbc0038I Pass  56: suminf.    0.72291 (8) obj. -99.148 iterations 3
Cbc0038I Pass  57: suminf.    3.49922 (9) obj. -99.148 iterations 14
Cbc0038I Pass  58: suminf.    3.49922 (9) obj. -99.148 iterations 0
Cbc0038I Pass  59: suminf.    1.18307 (5) obj. -99.148 iterations 5
Cbc0038I Pass  60: suminf.    1.17530 (4) obj. -99.148 iterations 1
Cbc0038I Pass  61: suminf.    1.35871 (4) obj. -99.148 iterations 7
Cbc0038I Pass  62: suminf.    0.72291 (8) obj. -99.148 iterations 3
Cbc0038I Pass  63: suminf.    3.49922 (9) obj. -99.148 iterations 14
Cbc0038I Pass  64: suminf.    3.49922 (9) obj. -99.148 iterations 0
Cbc0038I Pass  65: suminf.    1.18307 (5) obj. -99.148 iterations 5
Cbc0038I Pass  66: suminf.    1.17530 (4) obj. -99.148 iterations 1
Cbc0038I Pass  67: suminf.    1.35871 (4) obj. -99.148 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 253 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 401 columns, reduced to 147 rows 148 columns - 41 fixed gives 103, 104 - still too large
Cbc0038I Full problem 385 rows 401 columns, reduced to 22 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of 20.5435 - took 0.23 seconds
Cbc0012I Integer solution of 20.54353 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 385 rows 401 columns, reduced to 35 rows 37 columns
Cbc0012I Integer solution of -29.44051 found by DiveCoefficient after 14336 iterations and 0 nodes (9.05 seconds)
Cbc0031I 167 added rows had average density of 66.57485
Cbc0013I At root node, 167 cuts changed objective from -449.03911 to -104.99456 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23160 row cuts average 29.6 elements, 0 column cuts (14 active)  in 1.217 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3598 row cuts average 358.4 elements, 0 column cuts (0 active)  in 1.180 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 864 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5412 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.583 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3264 row cuts average 12.7 elements, 0 column cuts (0 active)  in 1.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 515 row cuts average 167.3 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 680 row cuts average 44.9 elements, 0 column cuts (0 active)  in 0.538 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.44051 best solution, best possible -104.99456 (9.94 seconds)
Cbc0012I Integer solution of -30.14122 found by DiveCoefficient after 14511 iterations and 1 nodes (10.36 seconds)
Cbc0012I Integer solution of -44.99603 found by DiveCoefficient after 15060 iterations and 1 nodes (10.91 seconds)
Cbc0010I After 1 nodes, 2 on tree, -44.99603 best solution, best possible -104.99456 (10.91 seconds)
Cbc0012I Integer solution of -60.56752 found by rounding after 15229 iterations and 3 nodes (11.37 seconds)
Cbc0012I Integer solution of -61.33693 found by DiveCoefficient after 15229 iterations and 3 nodes (11.39 seconds)
Cbc0012I Integer solution of -64.69142 found by DiveCoefficient after 15465 iterations and 3 nodes (11.47 seconds)
Cbc0012I Integer solution of -75.82745 found by rounding after 15553 iterations and 4 nodes (11.49 seconds)
Cbc0010I After 4 nodes, 5 on tree, -75.82745 best solution, best possible -104.99456 (11.62 seconds)
Cbc0004I Integer solution of -77.01679 found after 15672 iterations and 6 nodes (11.65 seconds)
Cbc0010I After 18 nodes, 9 on tree, -77.01679 best solution, best possible -104.99456 (12.35 seconds)
Cbc0010I After 40 nodes, 12 on tree, -77.01679 best solution, best possible -104.99456 (13.06 seconds)
Cbc0038I Full problem 385 rows 401 columns, reduced to 25 rows 32 columns
Cbc0012I Integer solution of -81.68793 found by RINS after 17007 iterations and 42 nodes (13.31 seconds)
Cbc0010I After 56 nodes, 11 on tree, -81.68793 best solution, best possible -104.99456 (13.76 seconds)
Cbc0010I After 74 nodes, 15 on tree, -81.68793 best solution, best possible -104.99456 (14.51 seconds)
Cbc0010I After 88 nodes, 21 on tree, -81.68793 best solution, best possible -104.99456 (15.22 seconds)
Cbc0038I Full problem 385 rows 401 columns, reduced to 13 rows 16 columns
Cbc0010I After 102 nodes, 26 on tree, -81.68793 best solution, best possible -104.99456 (15.96 seconds)
Cbc0010I After 117 nodes, 31 on tree, -81.68793 best solution, best possible -104.99456 (16.75 seconds)
Cbc0010I After 134 nodes, 35 on tree, -81.68793 best solution, best possible -104.99456 (17.47 seconds)
Cbc0010I After 150 nodes, 41 on tree, -81.68793 best solution, best possible -104.99456 (18.22 seconds)
Cbc0010I After 167 nodes, 46 on tree, -81.68793 best solution, best possible -104.99456 (18.98 seconds)
Cbc0012I Integer solution of -82.44367 found by rounding after 19838 iterations and 171 nodes (19.16 seconds)
Cbc0010I After 179 nodes, 48 on tree, -82.44367 best solution, best possible -104.99456 (19.70 seconds)
Cbc0010I After 192 nodes, 52 on tree, -82.44367 best solution, best possible -104.99456 (20.48 seconds)
Cbc0038I Full problem 385 rows 401 columns, reduced to 12 rows 19 columns
Cbc0010I After 204 nodes, 55 on tree, -82.44367 best solution, best possible -104.99456 (21.22 seconds)
Cbc0010I After 228 nodes, 55 on tree, -82.44367 best solution, best possible -104.99456 (21.95 seconds)
Cbc0010I After 252 nodes, 58 on tree, -82.44367 best solution, best possible -104.99456 (22.69 seconds)
Cbc0010I After 275 nodes, 58 on tree, -82.44367 best solution, best possible -104.99456 (23.42 seconds)
Cbc0012I Integer solution of -82.97183 found by rounding after 21651 iterations and 276 nodes (23.44 seconds)
Cbc0004I Integer solution of -83.97183 found after 21840 iterations and 285 nodes (23.80 seconds)
Cbc0010I After 307 nodes, 3 on tree, -83.97183 best solution, best possible -104.99456 (24.45 seconds)
Cbc0010I After 310 nodes, 6 on tree, -83.97183 best solution, best possible -104.99456 (25.53 seconds)
Cbc0010I After 320 nodes, 8 on tree, -83.97183 best solution, best possible -104.99456 (26.25 seconds)
Cbc0010I After 336 nodes, 11 on tree, -83.97183 best solution, best possible -104.99456 (26.95 seconds)
Cbc0010I After 372 nodes, 6 on tree, -83.97183 best solution, best possible -104.99456 (27.75 seconds)
Cbc0010I After 381 nodes, 5 on tree, -83.97183 best solution, best possible -104.99456 (28.52 seconds)
Cbc0010I After 399 nodes, 10 on tree, -83.97183 best solution, best possible -104.99456 (29.22 seconds)
Cbc0038I Full problem 385 rows 401 columns, reduced to 28 rows 33 columns
Cbc0010I After 426 nodes, 6 on tree, -83.97183 best solution, best possible -104.99456 (29.93 seconds)
Cbc0010I After 438 nodes, 8 on tree, -83.97183 best solution, best possible -104.99456 (30.76 seconds)
Cbc0010I After 467 nodes, 5 on tree, -83.97183 best solution, best possible -104.99456 (31.46 seconds)
Cbc0010I After 488 nodes, 8 on tree, -83.97183 best solution, best possible -104.99456 (32.23 seconds)
Cbc0001I Search completed - best objective -83.97183000000001, took 42569 iterations and 507 nodes (32.66 seconds)
Cbc0032I Strong branching done 1418 times (41722 iterations), fathomed 4 nodes and fixed 7 variables
Cbc0035I Maximum depth 32, 1386 variables fixed on reduced cost
Total time (CPU seconds):       27.24   (Wallclock seconds):       32.78

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 500 (-27) rows, 259 (-5) columns and 1486 (-59) elements
Clp1000I sum of infeasibilities 5.37672e-05 - average 1.07534e-07, 83 fixed columns
Coin0506I Presolve 337 (-163) rows, 176 (-83) columns and 1001 (-485) elements
Clp0029I End of values pass after 176 iterations
Clp0014I Perturbing problem by 0.001% of 0.14875763 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 151.43743
Clp0000I Optimal - objective value 151.43743
Coin0511I After Postsolve, objective 151.43743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13319269 - largest nonzero change 0 ( 0%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value 151.43743
Clp0000I Optimal - objective value 151.43743
Clp0000I Optimal - objective value 151.43743
Coin0511I After Postsolve, objective 151.43743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 151.4374261 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 500 rows, 259 columns (258 integer (258 of which binary)) and 1486 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 95 integers unsatisfied sum - 10.9625
Cbc0038I Solution found of -1.91562
Cbc0038I Relaxing continuous gives -15.5094
Cbc0038I Before mini branch and bound, 163 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 180 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -15.5094 to -75.5386 (0.09 seconds)
Cbc0038I Round again with cutoff of -83.1286
Cbc0038I Pass   1: suminf.    4.05191 (69) obj. -83.1286 iterations 209
Cbc0038I Pass   2: suminf.    4.34127 (11) obj. -83.1286 iterations 87
Cbc0038I Pass   3: suminf.    2.16721 (9) obj. -83.1286 iterations 39
Cbc0038I Pass   4: suminf.    2.27675 (8) obj. -83.1286 iterations 26
Cbc0038I Pass   5: suminf.    0.56626 (4) obj. -83.1286 iterations 21
Cbc0038I Pass   6: suminf.    0.50961 (5) obj. -83.1286 iterations 4
Cbc0038I Pass   7: suminf.    1.23074 (5) obj. -83.1286 iterations 18
Cbc0038I Pass   8: suminf.    1.05942 (5) obj. -83.1286 iterations 17
Cbc0038I Pass   9: suminf.    0.99687 (4) obj. -83.1286 iterations 22
Cbc0038I Pass  10: suminf.    1.91442 (7) obj. -83.1286 iterations 40
Cbc0038I Pass  11: suminf.    1.76006 (6) obj. -83.1286 iterations 30
Cbc0038I Pass  12: suminf.    1.41161 (4) obj. -83.1286 iterations 3
Cbc0038I Pass  13: suminf.    0.39784 (4) obj. -83.1286 iterations 25
Cbc0038I Pass  14: suminf.    0.39068 (4) obj. -83.1286 iterations 11
Cbc0038I Pass  15: suminf.    1.88502 (6) obj. -83.1286 iterations 34
Cbc0038I Pass  16: suminf.    1.84166 (5) obj. -83.1286 iterations 6
Cbc0038I Pass  17: suminf.    1.22228 (4) obj. -83.1286 iterations 18
Cbc0038I Pass  18: suminf.    1.04330 (4) obj. -83.1286 iterations 21
Cbc0038I Pass  19: suminf.    1.15338 (4) obj. -83.1286 iterations 14
Cbc0038I Pass  20: suminf.    0.39068 (4) obj. -83.1286 iterations 20
Cbc0038I Pass  21: suminf.    1.88502 (6) obj. -83.1286 iterations 34
Cbc0038I Pass  22: suminf.    1.84166 (5) obj. -83.1286 iterations 6
Cbc0038I Pass  23: suminf.    1.22228 (4) obj. -83.1286 iterations 18
Cbc0038I Pass  24: suminf.    1.04330 (4) obj. -83.1286 iterations 21
Cbc0038I Pass  25: suminf.    1.15338 (4) obj. -83.1286 iterations 14
Cbc0038I Pass  26: suminf.    0.39068 (4) obj. -83.1286 iterations 20
Cbc0038I Pass  27: suminf.    1.88502 (6) obj. -83.1286 iterations 34
Cbc0038I Pass  28: suminf.    1.84166 (5) obj. -83.1286 iterations 6
Cbc0038I Pass  29: suminf.    1.22228 (4) obj. -83.1286 iterations 18
Cbc0038I Pass  30: suminf.    1.04330 (4) obj. -83.1286 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 126 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 250 rows 133 columns - 4 fixed gives 203, 129 - ok now
Cbc0038I Full problem 500 rows 259 columns, reduced to 203 rows 129 columns
Cbc0038I Mini branch and bound improved solution from -75.5386 to -80.7105 (0.16 seconds)
Cbc0038I Round again with cutoff of -96.7904
Cbc0038I Pass  30: suminf.    4.87056 (69) obj. -96.7904 iterations 0
Cbc0038I Pass  31: suminf.    4.10834 (12) obj. -96.7904 iterations 84
Cbc0038I Pass  32: suminf.    3.20443 (14) obj. -96.7904 iterations 35
Cbc0038I Pass  33: suminf.    3.20737 (13) obj. -96.7904 iterations 5
Cbc0038I Pass  34: suminf.    3.76212 (17) obj. -96.7904 iterations 28
Cbc0038I Pass  35: suminf.    3.26365 (11) obj. -96.7904 iterations 17
Cbc0038I Pass  36: suminf.    2.59025 (10) obj. -96.7904 iterations 37
Cbc0038I Pass  37: suminf.    2.58772 (12) obj. -96.7904 iterations 1
Cbc0038I Pass  38: suminf.    4.62633 (12) obj. -96.7904 iterations 43
Cbc0038I Pass  39: suminf.    2.21459 (9) obj. -96.7904 iterations 34
Cbc0038I Pass  40: suminf.    1.92784 (10) obj. -96.7904 iterations 19
Cbc0038I Pass  41: suminf.    3.89772 (12) obj. -96.7904 iterations 33
Cbc0038I Pass  42: suminf.    2.06716 (11) obj. -96.7904 iterations 32
Cbc0038I Pass  43: suminf.    1.99404 (8) obj. -96.7904 iterations 14
Cbc0038I Pass  44: suminf.    2.75378 (10) obj. -96.7904 iterations 40
Cbc0038I Pass  45: suminf.    2.27421 (9) obj. -96.7904 iterations 18
Cbc0038I Pass  46: suminf.    3.16740 (9) obj. -96.7904 iterations 28
Cbc0038I Pass  47: suminf.    2.58772 (12) obj. -96.7904 iterations 20
Cbc0038I Pass  48: suminf.    4.62633 (12) obj. -96.7904 iterations 43
Cbc0038I Pass  49: suminf.    2.21459 (9) obj. -96.7904 iterations 33
Cbc0038I Pass  50: suminf.    1.92784 (10) obj. -96.7904 iterations 18
Cbc0038I Pass  51: suminf.    3.89772 (12) obj. -96.7904 iterations 34
Cbc0038I Pass  52: suminf.    2.06716 (11) obj. -96.7904 iterations 33
Cbc0038I Pass  53: suminf.    1.99404 (8) obj. -96.7904 iterations 15
Cbc0038I Pass  54: suminf.    2.75378 (10) obj. -96.7904 iterations 41
Cbc0038I Pass  55: suminf.    2.27421 (9) obj. -96.7904 iterations 18
Cbc0038I Pass  56: suminf.    3.16740 (9) obj. -96.7904 iterations 28
Cbc0038I Pass  57: suminf.    2.58772 (12) obj. -96.7904 iterations 20
Cbc0038I Pass  58: suminf.    4.05861 (13) obj. -96.7904 iterations 37
Cbc0038I Pass  59: suminf.    1.99401 (7) obj. -96.7904 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 129 integers at bound fixed and 0 continuous
Cbc0038I Full problem 500 rows 259 columns, reduced to 246 rows 130 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -80.7105 - took 0.25 seconds
Cbc0012I Integer solution of -80.71051 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 182 rows 97 columns
Cbc0012I Integer solution of -81.16411 found by RINS after 0 iterations and 0 nodes (0.36 seconds)
Cbc0031I 46 added rows had average density of 146.36957
Cbc0013I At root node, 46 cuts changed objective from -151.43743 to -140.89605 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 57268 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.618 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4105 row cuts average 254.6 elements, 0 column cuts (0 active)  in 0.688 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.882 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 250.7 elements, 0 column cuts (0 active)  in 0.259 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -81.16411 best solution, best possible -140.89605 (8.31 seconds)
Cbc0010I After 6 nodes, 7 on tree, -81.16411 best solution, best possible -140.89605 (9.10 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 198 rows 106 columns
Cbc0010I After 41 nodes, 14 on tree, -81.16411 best solution, best possible -140.89605 (9.86 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 7 rows 9 columns
Cbc0012I Integer solution of -81.97477 found by RINS after 32064 iterations and 94 nodes (10.13 seconds)
Cbc0010I After 201 nodes, 22 on tree, -81.97477 best solution, best possible -140.89605 (10.56 seconds)
Cbc0038I Full problem 500 rows 259 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -82.44367 found by rounding after 40305 iterations and 313 nodes (11.07 seconds)
Cbc0012I Integer solution of -83.97183 found by rounding after 40834 iterations and 331 nodes (11.14 seconds)
Cbc0010I After 380 nodes, 2 on tree, -83.97183 best solution, best possible -140.89605 (11.27 seconds)
Cbc0001I Search completed - best objective -83.97183000000001, took 43928 iterations and 404 nodes (11.50 seconds)
Cbc0032I Strong branching done 3302 times (72842 iterations), fathomed 80 nodes and fixed 281 variables
Cbc0035I Maximum depth 57, 1805 variables fixed on reduced cost
Total time (CPU seconds):       11.18   (Wallclock seconds):       11.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 382 (-145) rows, 398 (-127) columns and 19845 (-15892) elements
Clp1000I sum of infeasibilities 6.68451e-06 - average 1.74987e-08, 73 fixed columns
Coin0506I Presolve 311 (-71) rows, 324 (-74) columns and 13448 (-6397) elements
Clp0006I 0  Obj 151.59984 Dual inf 51.032321 (324)
Clp0029I End of values pass after 324 iterations
Clp0014I Perturbing problem by 0.001% of 1.6303881 - largest nonzero change 1.3755215e-05 ( 0.0010489197%) - largest zero change 2.9576362e-05
Clp0000I Optimal - objective value 176.26489
Clp0000I Optimal - objective value 176.26489
Coin0511I After Postsolve, objective 176.26489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 176.26489 Dual inf 81.081212 (2)
Clp0014I Perturbing problem by 0.001% of 1.7880291 - largest nonzero change 1.1219627e-05 ( 0.0008514623%) - largest zero change 2.9597463e-05
Clp0000I Optimal - objective value 176.26489
Clp0000I Optimal - objective value 176.26489
Clp0000I Optimal - objective value 176.26489
Coin0511I After Postsolve, objective 176.26489, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 176.2648905 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.17

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 382 rows, 398 columns (398 integer (398 of which binary)) and 19845 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 6.107%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 144 integers unsatisfied sum - 8.69396
Cbc0038I Pass   1: suminf.    2.77832 (103) obj. -151.137 iterations 45
Cbc0038I Pass   2: suminf.    2.09065 (102) obj. -139.42 iterations 3
Cbc0038I Pass   3: suminf.    1.52635 (85) obj. -85.379 iterations 17
Cbc0038I Pass   4: suminf.    1.03085 (63) obj. -53.1185 iterations 22
Cbc0038I Pass   5: suminf.    0.67785 (45) obj. -33.5108 iterations 18
Cbc0038I Pass   6: suminf.    0.21951 (18) obj. -5.00361 iterations 27
Cbc0038I Pass   7: suminf.    0.01010 (1) obj. 11.787 iterations 17
Cbc0038I Solution found of 12.7769
Cbc0038I Rounding solution of -5.26118 is better than previous of 12.7769

Cbc0038I Before mini branch and bound, 250 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 398 columns, reduced to 33 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -5.26118 to -13.3316 (0.18 seconds)
Cbc0038I Round again with cutoff of -29.591
Cbc0038I Pass   8: suminf.    2.77832 (103) obj. -151.137 iterations 0
Cbc0038I Pass   9: suminf.    2.09065 (102) obj. -139.42 iterations 3
Cbc0038I Pass  10: suminf.    1.58384 (87) obj. -91.2067 iterations 15
Cbc0038I Pass  11: suminf.    1.13656 (68) obj. -58.992 iterations 19
Cbc0038I Pass  12: suminf.    0.69671 (46) obj. -34.4919 iterations 22
Cbc0038I Pass  13: suminf.    0.83255 (31) obj. -29.591 iterations 18
Cbc0038I Pass  14: suminf.    1.27622 (10) obj. -29.591 iterations 33
Cbc0038I Pass  15: suminf.    0.84090 (10) obj. -29.591 iterations 1
Cbc0038I Pass  16: suminf.    0.68072 (4) obj. -29.591 iterations 11
Cbc0038I Pass  17: suminf.    0.57089 (3) obj. -29.9355 iterations 1
Cbc0038I Pass  18: suminf.    0.44593 (3) obj. -29.591 iterations 4
Cbc0038I Pass  19: suminf.    0.92572 (3) obj. -29.591 iterations 3
Cbc0038I Pass  20: suminf.    0.25769 (3) obj. -29.591 iterations 3
Cbc0038I Pass  21: suminf.    0.59445 (3) obj. -29.591 iterations 3
Cbc0038I Pass  22: suminf.    1.68720 (27) obj. -29.591 iterations 85
Cbc0038I Pass  23: suminf.    1.15587 (27) obj. -29.591 iterations 18
Cbc0038I Pass  24: suminf.    0.72161 (8) obj. -29.591 iterations 36
Cbc0038I Pass  25: suminf.    0.57355 (9) obj. -29.591 iterations 3
Cbc0038I Pass  26: suminf.    1.54072 (9) obj. -29.591 iterations 6
Cbc0038I Pass  27: suminf.    1.36804 (9) obj. -29.591 iterations 1
Cbc0038I Pass  28: suminf.    0.60066 (7) obj. -30.2137 iterations 4
Cbc0038I Pass  29: suminf.    0.83591 (7) obj. -29.591 iterations 10
Cbc0038I Pass  30: suminf.    0.73418 (7) obj. -30.0997 iterations 5
Cbc0038I Pass  31: suminf.    1.97332 (24) obj. -29.591 iterations 77
Cbc0038I Pass  32: suminf.    1.41408 (24) obj. -29.591 iterations 19
Cbc0038I Pass  33: suminf.    0.94755 (9) obj. -29.591 iterations 34
Cbc0038I Pass  34: suminf.    0.51635 (8) obj. -30.5366 iterations 10
Cbc0038I Pass  35: suminf.    0.94755 (9) obj. -29.591 iterations 6
Cbc0038I Pass  36: suminf.    4.29887 (43) obj. -29.591 iterations 84
Cbc0038I Pass  37: suminf.    1.11762 (33) obj. -29.591 iterations 38
Cbc0038I Rounding solution of -14.1874 is better than previous of -13.3316

Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 398 columns, reduced to 57 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -14.1874 to -19.3132 (0.29 seconds)
Cbc0038I Round again with cutoff of -58.8578
Cbc0038I Pass  37: suminf.    2.77832 (103) obj. -151.137 iterations 0
Cbc0038I Pass  38: suminf.    2.09065 (102) obj. -139.42 iterations 3
Cbc0038I Pass  39: suminf.    1.35551 (78) obj. -74.6412 iterations 24
Cbc0038I Pass  40: suminf.    1.14853 (68) obj. -58.8578 iterations 12
Cbc0038I Pass  41: suminf.    1.78227 (44) obj. -58.8578 iterations 31
Cbc0038I Pass  42: suminf.    1.37487 (36) obj. -58.8578 iterations 10
Cbc0038I Pass  43: suminf.    1.01531 (35) obj. -61.491 iterations 1
Cbc0038I Pass  44: suminf.    0.79996 (34) obj. -58.8578 iterations 3
Cbc0038I Pass  45: suminf.    1.24517 (21) obj. -58.8578 iterations 33
Cbc0038I Pass  46: suminf.    0.71417 (20) obj. -58.8578 iterations 5
Cbc0038I Pass  47: suminf.    0.88782 (10) obj. -58.8578 iterations 39
Cbc0038I Pass  48: suminf.    0.75090 (10) obj. -58.8578 iterations 10
Cbc0038I Pass  49: suminf.    1.43917 (9) obj. -58.8578 iterations 10
Cbc0038I Pass  50: suminf.    1.43917 (9) obj. -58.8578 iterations 3
Cbc0038I Pass  51: suminf.    1.43320 (9) obj. -58.8578 iterations 8
Cbc0038I Pass  52: suminf.    1.43320 (9) obj. -58.8578 iterations 3
Cbc0038I Pass  53: suminf.    1.43917 (9) obj. -58.8578 iterations 8
Cbc0038I Pass  54: suminf.    1.57796 (32) obj. -58.8578 iterations 100
Cbc0038I Pass  55: suminf.    0.97523 (27) obj. -58.8578 iterations 20
Cbc0038I Pass  56: suminf.    1.18346 (20) obj. -58.8578 iterations 23
Cbc0038I Pass  57: suminf.    0.72469 (20) obj. -58.8578 iterations 27
Cbc0038I Pass  58: suminf.    1.29966 (12) obj. -58.8578 iterations 21
Cbc0038I Pass  59: suminf.    1.29966 (12) obj. -58.8578 iterations 10
Cbc0038I Pass  60: suminf.    1.26260 (12) obj. -58.8578 iterations 13
Cbc0038I Pass  61: suminf.    1.26260 (12) obj. -58.8578 iterations 8
Cbc0038I Pass  62: suminf.    1.29966 (12) obj. -58.8578 iterations 13
Cbc0038I Pass  63: suminf.    1.41352 (30) obj. -58.8578 iterations 87
Cbc0038I Pass  64: suminf.    1.19394 (31) obj. -58.8578 iterations 24
Cbc0038I Pass  65: suminf.    1.22239 (27) obj. -58.8578 iterations 19
Cbc0038I Pass  66: suminf.    1.21565 (27) obj. -58.8578 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 229 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 398 columns, reduced to 57 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I After 0.43 seconds - Feasibility pump exiting with objective of -19.3132 - took 0.30 seconds
Cbc0012I Integer solution of -19.31325 found by feasibility pump after 0 iterations and 0 nodes (0.43 seconds)
Cbc0038I Full problem 382 rows 398 columns, reduced to 12 rows 12 columns
Cbc0012I Integer solution of -57.92138 found by DiveCoefficient after 18488 iterations and 0 nodes (10.75 seconds)
Cbc0031I 168 added rows had average density of 85.630952
Cbc0013I At root node, 168 cuts changed objective from -175.92492 to -108.98135 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23874 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.577 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3562 row cuts average 367.1 elements, 0 column cuts (0 active)  in 1.365 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1548 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5109 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.613 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3838 row cuts average 9.9 elements, 0 column cuts (0 active)  in 1.269 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 454 row cuts average 185.4 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1815 row cuts average 45.0 elements, 0 column cuts (0 active)  in 1.047 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -57.92138 best solution, best possible -108.98135 (11.99 seconds)
Cbc0012I Integer solution of -71.64445 found by rounding after 18938 iterations and 1 nodes (12.06 seconds)
Cbc0012I Integer solution of -75.82745 found by DiveCoefficient after 19061 iterations and 1 nodes (12.11 seconds)
Cbc0012I Integer solution of -77.01679 found by rounding after 19090 iterations and 2 nodes (12.15 seconds)
Cbc0010I After 6 nodes, 1 on tree, -77.01679 best solution, best possible -108.29798 (13.06 seconds)
Cbc0010I After 8 nodes, 3 on tree, -77.01679 best solution, best possible -108.29798 (13.93 seconds)
Cbc0010I After 12 nodes, 5 on tree, -77.01679 best solution, best possible -108.29798 (14.67 seconds)
Cbc0010I After 31 nodes, 8 on tree, -77.01679 best solution, best possible -108.29798 (15.41 seconds)
Cbc0012I Integer solution of -77.95044 found by rounding after 23421 iterations and 36 nodes (15.57 seconds)
Cbc0038I Full problem 382 rows 398 columns, reduced to 69 rows 84 columns
Cbc0012I Integer solution of -81.97477 found by RINS after 23539 iterations and 41 nodes (15.99 seconds)
Cbc0010I After 44 nodes, 10 on tree, -81.97477 best solution, best possible -108.29798 (16.12 seconds)
Cbc0010I After 62 nodes, 17 on tree, -81.97477 best solution, best possible -108.29798 (16.93 seconds)
Cbc0004I Integer solution of -82.26443 found after 25087 iterations and 80 nodes (17.60 seconds)
Cbc0010I After 81 nodes, 22 on tree, -82.26443 best solution, best possible -108.29798 (17.66 seconds)
Cbc0038I Full problem 382 rows 398 columns, reduced to 9 rows 14 columns
Cbc0010I After 93 nodes, 23 on tree, -82.26443 best solution, best possible -108.29798 (18.36 seconds)
Cbc0010I After 107 nodes, 25 on tree, -82.26443 best solution, best possible -108.29798 (19.08 seconds)
Cbc0012I Integer solution of -82.44367 found by rounding after 25881 iterations and 110 nodes (19.21 seconds)
Cbc0010I After 123 nodes, 27 on tree, -82.44367 best solution, best possible -108.29798 (19.80 seconds)
Cbc0010I After 140 nodes, 33 on tree, -82.44367 best solution, best possible -108.29798 (20.53 seconds)
Cbc0004I Integer solution of -83.97183 found after 26953 iterations and 161 nodes (21.23 seconds)
Cbc0010I After 161 nodes, 20 on tree, -83.97183 best solution, best possible -108.29798 (21.23 seconds)
Cbc0010I After 192 nodes, 15 on tree, -83.97183 best solution, best possible -108.29798 (21.95 seconds)
Cbc0010I After 219 nodes, 15 on tree, -83.97183 best solution, best possible -108.29798 (22.68 seconds)
Cbc0010I After 259 nodes, 2 on tree, -83.97183 best solution, best possible -108.29798 (23.81 seconds)
Cbc0010I After 260 nodes, 3 on tree, -83.97183 best solution, best possible -108.29798 (24.99 seconds)
Cbc0010I After 262 nodes, 5 on tree, -83.97183 best solution, best possible -108.29798 (25.78 seconds)
Cbc0010I After 287 nodes, 7 on tree, -83.97183 best solution, best possible -108.29798 (26.56 seconds)
Cbc0038I Full problem 382 rows 398 columns, reduced to 64 rows 81 columns
Cbc0010I After 295 nodes, 4 on tree, -83.97183 best solution, best possible -108.29798 (27.54 seconds)
Cbc0010I After 308 nodes, 8 on tree, -83.97183 best solution, best possible -108.29798 (28.24 seconds)
Cbc0010I After 345 nodes, 6 on tree, -83.97183 best solution, best possible -108.29798 (28.98 seconds)
Cbc0010I After 357 nodes, 5 on tree, -83.97183 best solution, best possible -108.29798 (30.08 seconds)
Cbc0010I After 367 nodes, 4 on tree, -83.97183 best solution, best possible -108.29798 (30.86 seconds)
Cbc0010I After 380 nodes, 5 on tree, -83.97183 best solution, best possible -108.29798 (31.58 seconds)
Cbc0010I After 390 nodes, 3 on tree, -83.97183 best solution, best possible -108.29798 (32.63 seconds)
Cbc0010I After 393 nodes, 6 on tree, -83.97183 best solution, best possible -108.29798 (33.40 seconds)
Cbc0010I After 399 nodes, 8 on tree, -83.97183 best solution, best possible -108.29798 (34.12 seconds)
Cbc0010I After 419 nodes, 5 on tree, -83.97183 best solution, best possible -108.29798 (34.84 seconds)
Cbc0010I After 434 nodes, 5 on tree, -83.97183 best solution, best possible -108.29798 (35.62 seconds)
Cbc0010I After 444 nodes, 6 on tree, -83.97183 best solution, best possible -108.29798 (36.32 seconds)
Cbc0001I Search completed - best objective -83.97183000000001, took 54680 iterations and 464 nodes (36.99 seconds)
Cbc0032I Strong branching done 2450 times (63937 iterations), fathomed 17 nodes and fixed 41 variables
Cbc0035I Maximum depth 30, 2082 variables fixed on reduced cost
Total time (CPU seconds):       32.56   (Wallclock seconds):       37.13

