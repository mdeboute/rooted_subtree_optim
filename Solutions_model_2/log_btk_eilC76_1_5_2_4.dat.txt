Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 71 (-7) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 4.17346e-05 - average 3.09145e-07, 9 fixed columns
Coin0506I Presolve 115 (-20) rows, 61 (-10) columns and 344 (-60) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 3.0513843 - largest nonzero change 0 ( 0%) - largest zero change 2.0708098e-05
Clp0000I Optimal - objective value 35.560491
Clp0000I Optimal - objective value 35.560491
Coin0511I After Postsolve, objective 35.560491, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.560491
Clp0000I Optimal - objective value 35.560491
Clp0000I Optimal - objective value 35.560491
Coin0511I After Postsolve, objective 35.560491, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.56049051 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 71 columns (70 integer (70 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.310%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 9.88855
Cbc0038I Solution found of 9.52245
Cbc0038I Relaxing continuous gives -2.35954
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 71 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -2.35954 to -8.18131 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.9193
Cbc0038I Pass   1: suminf.    2.36859 (35) obj. -10.9193 iterations 32
Cbc0038I Pass   2: suminf.    1.40037 (6) obj. -10.9193 iterations 39
Cbc0038I Pass   3: suminf.    0.48837 (5) obj. -10.9193 iterations 4
Cbc0038I Pass   4: suminf.    0.72814 (4) obj. -10.9193 iterations 14
Cbc0038I Pass   5: suminf.    0.68095 (3) obj. -10.9193 iterations 1
Cbc0038I Pass   6: suminf.    1.01882 (4) obj. -10.9193 iterations 5
Cbc0038I Pass   7: suminf.    0.97216 (3) obj. -10.9193 iterations 1
Cbc0038I Pass   8: suminf.    1.51972 (8) obj. -10.9193 iterations 8
Cbc0038I Pass   9: suminf.    1.51972 (8) obj. -10.9193 iterations 1
Cbc0038I Pass  10: suminf.    2.22369 (7) obj. -10.9193 iterations 19
Cbc0038I Pass  11: suminf.    1.26155 (6) obj. -10.9193 iterations 3
Cbc0038I Pass  12: suminf.    1.02264 (7) obj. -10.9193 iterations 2
Cbc0038I Pass  13: suminf.    1.77038 (5) obj. -10.9193 iterations 10
Cbc0038I Pass  14: suminf.    0.59999 (5) obj. -10.9193 iterations 4
Cbc0038I Pass  15: suminf.    0.59999 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  16: suminf.    1.13268 (5) obj. -10.9193 iterations 9
Cbc0038I Pass  17: suminf.    1.13268 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  18: suminf.    1.77038 (5) obj. -10.9193 iterations 8
Cbc0038I Pass  19: suminf.    0.59999 (5) obj. -10.9193 iterations 4
Cbc0038I Pass  20: suminf.    0.59999 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  21: suminf.    1.13268 (5) obj. -10.9193 iterations 9
Cbc0038I Pass  22: suminf.    1.13268 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  23: suminf.    1.77038 (5) obj. -10.9193 iterations 8
Cbc0038I Pass  24: suminf.    0.59999 (5) obj. -10.9193 iterations 4
Cbc0038I Pass  25: suminf.    0.59999 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  26: suminf.    1.13268 (5) obj. -10.9193 iterations 9
Cbc0038I Pass  27: suminf.    1.13268 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  28: suminf.    1.77038 (5) obj. -10.9193 iterations 8
Cbc0038I Pass  29: suminf.    0.59999 (5) obj. -10.9193 iterations 4
Cbc0038I Pass  30: suminf.    0.59999 (5) obj. -10.9193 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 71 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -8.18131 - took 0.07 seconds
Cbc0012I Integer solution of -8.18131 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 135 rows 71 columns, reduced to 63 rows 34 columns
Cbc0031I 21 added rows had average density of 51.809524
Cbc0013I At root node, 21 cuts changed objective from -35.560491 to -29.129202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9768 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2264 row cuts average 70.9 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.18131 best solution, best possible -29.129202 (0.76 seconds)
Cbc0038I Full problem 135 rows 71 columns, reduced to 75 rows 45 columns
Cbc0038I Full problem 135 rows 71 columns, reduced to 9 rows 11 columns
Cbc0001I Search completed - best objective -8.181310000000003, took 9512 iterations and 98 nodes (1.07 seconds)
Cbc0032I Strong branching done 1038 times (16748 iterations), fathomed 10 nodes and fixed 65 variables
Cbc0035I Maximum depth 28, 261 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 110 (-42) columns and 1771 (-1532) elements
Clp1000I sum of infeasibilities 1.23089e-07 - average 1.17228e-09, 15 fixed columns
Coin0506I Presolve 89 (-16) rows, 94 (-16) columns and 1338 (-433) elements
Clp0006I 0  Obj 38.634356 Dual inf 4.108718 (92)
Clp0014I Perturbing problem by 0.001% of 2.402261 - largest nonzero change 1.8614972e-05 ( 0.0014083952%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 51.524565
Clp0000I Optimal - objective value 51.524565
Coin0511I After Postsolve, objective 51.524565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.524565
Clp0000I Optimal - objective value 51.524565
Clp0000I Optimal - objective value 51.524565
Clp0000I Optimal - objective value 51.524565
Coin0511I After Postsolve, objective 51.524565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.52456548 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 112 columns (112 integer (112 of which binary)) and 1786 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.536%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.39189
Cbc0038I Pass   1: suminf.    3.88785 (30) obj. -36.7 iterations 10
Cbc0038I Pass   2: suminf.    0.36699 (4) obj. -8.40063 iterations 27
Cbc0038I Solution found of -0.36463
Cbc0038I Rounding solution of -1.80612 is better than previous of -0.36463

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 112 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -1.80612 to -3.96901 (0.05 seconds)
Cbc0038I Round again with cutoff of -7.41615
Cbc0038I Pass   3: suminf.    3.88785 (30) obj. -36.7 iterations 0
Cbc0038I Pass   4: suminf.    1.63651 (15) obj. -22.5492 iterations 13
Cbc0038I Pass   5: suminf.    0.29787 (5) obj. -7.41615 iterations 19
Cbc0038I Pass   6: suminf.    0.26968 (4) obj. -7.69933 iterations 3
Cbc0038I Pass   7: suminf.    0.38627 (1) obj. -7.41615 iterations 11
Cbc0038I Pass   8: suminf.    0.10345 (1) obj. -8.72204 iterations 6
Cbc0038I Pass   9: suminf.    0.25986 (1) obj. -7.41615 iterations 1
Cbc0038I Pass  10: suminf.    1.16327 (8) obj. -8.99194 iterations 25
Cbc0038I Pass  11: suminf.    1.00576 (7) obj. -8.67692 iterations 6
Cbc0038I Pass  12: suminf.    1.21919 (4) obj. -7.41615 iterations 12
Cbc0038I Pass  13: suminf.    1.10822 (4) obj. -9.22443 iterations 5
Cbc0038I Pass  14: suminf.    0.47229 (4) obj. -7.41615 iterations 7
Cbc0038I Pass  15: suminf.    1.00401 (3) obj. -7.41615 iterations 4
Cbc0038I Pass  16: suminf.    0.45540 (3) obj. -7.41615 iterations 8
Cbc0038I Pass  17: suminf.    0.32017 (2) obj. -10.2327 iterations 6
Cbc0038I Pass  18: suminf.    0.14925 (1) obj. -9.30198 iterations 2
Cbc0038I Pass  19: suminf.    0.55064 (2) obj. -7.41615 iterations 7
Cbc0038I Pass  20: suminf.    2.77527 (16) obj. -7.41615 iterations 38
Cbc0038I Pass  21: suminf.    2.47546 (16) obj. -7.41615 iterations 6
Cbc0038I Pass  22: suminf.    1.83349 (13) obj. -7.41615 iterations 11
Cbc0038I Pass  23: suminf.    1.10608 (6) obj. -7.41615 iterations 30
Cbc0038I Pass  24: suminf.    0.61137 (5) obj. -7.41615 iterations 7
Cbc0038I Pass  25: suminf.    1.82301 (5) obj. -7.41615 iterations 8
Cbc0038I Pass  26: suminf.    1.82301 (5) obj. -7.41615 iterations 0
Cbc0038I Pass  27: suminf.    2.05754 (6) obj. -7.41615 iterations 9
Cbc0038I Pass  28: suminf.    0.67463 (4) obj. -7.41615 iterations 8
Cbc0038I Pass  29: suminf.    0.67463 (4) obj. -7.41615 iterations 1
Cbc0038I Pass  30: suminf.    1.80549 (13) obj. -7.41615 iterations 22
Cbc0038I Pass  31: suminf.    1.47752 (12) obj. -7.52296 iterations 5
Cbc0038I Pass  32: suminf.    1.04873 (4) obj. -7.41615 iterations 23
Cbc0038I Rounding solution of -7.44672 is better than previous of -3.96901

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 112 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -7.44672 to -7.69357 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.8428
Cbc0038I Pass  32: suminf.    3.88785 (30) obj. -36.7 iterations 0
Cbc0038I Pass  33: suminf.    1.50537 (14) obj. -21.6804 iterations 14
Cbc0038I Pass  34: suminf.    0.68016 (6) obj. -13.8428 iterations 18
Cbc0038I Pass  35: suminf.    0.67130 (7) obj. -13.8428 iterations 4
Cbc0038I Pass  36: suminf.    1.31157 (6) obj. -13.8428 iterations 17
Cbc0038I Pass  37: suminf.    1.31157 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  38: suminf.    1.54233 (6) obj. -13.8428 iterations 8
Cbc0038I Pass  39: suminf.    0.76049 (4) obj. -13.8428 iterations 10
Cbc0038I Pass  40: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  41: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  42: suminf.    1.08019 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  43: suminf.    1.54233 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  44: suminf.    0.76049 (4) obj. -13.8428 iterations 10
Cbc0038I Pass  45: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  46: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  47: suminf.    1.08019 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  48: suminf.    1.54233 (6) obj. -13.8428 iterations 8
Cbc0038I Pass  49: suminf.    0.76049 (4) obj. -13.8428 iterations 11
Cbc0038I Pass  50: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  51: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  52: suminf.    1.08019 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  53: suminf.    1.54233 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  54: suminf.    0.76049 (4) obj. -13.8428 iterations 10
Cbc0038I Pass  55: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  56: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  57: suminf.    1.08019 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  58: suminf.    1.54233 (6) obj. -13.8428 iterations 8
Cbc0038I Pass  59: suminf.    0.76049 (4) obj. -13.8428 iterations 11
Cbc0038I Pass  60: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  61: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 112 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.69357 - took 0.05 seconds
Cbc0012I Integer solution of -7.69357 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 107 rows 112 columns, reduced to 10 rows 11 columns
Cbc0031I 50 added rows had average density of 40.7
Cbc0013I At root node, 50 cuts changed objective from -38.439551 to -15.081667 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11160 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1224 row cuts average 103.6 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 342 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1125 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 392 row cuts average 55.4 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.636 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.69357 best solution, best possible -15.081667 (2.23 seconds)
Cbc0012I Integer solution of -7.83073 found by rounding after 5833 iterations and 56 nodes (2.73 seconds)
Cbc0016I Integer solution of -8.18131 found by strong branching after 5995 iterations and 69 nodes (2.75 seconds)
Cbc0001I Search completed - best objective -8.181310000000003, took 6466 iterations and 88 nodes (2.76 seconds)
Cbc0032I Strong branching done 884 times (12693 iterations), fathomed 18 nodes and fixed 12 variables
Cbc0035I Maximum depth 23, 174 variables fixed on reduced cost
Total time (CPU seconds):       2.12   (Wallclock seconds):       2.78

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 71 (-7) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 4.17346e-05 - average 3.09145e-07, 9 fixed columns
Coin0506I Presolve 115 (-20) rows, 61 (-10) columns and 344 (-60) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 3.0513843 - largest nonzero change 0 ( 0%) - largest zero change 2.0708098e-05
Clp0000I Optimal - objective value 35.560491
Clp0000I Optimal - objective value 35.560491
Coin0511I After Postsolve, objective 35.560491, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.560491
Clp0000I Optimal - objective value 35.560491
Clp0000I Optimal - objective value 35.560491
Coin0511I After Postsolve, objective 35.560491, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.56049051 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 71 columns (70 integer (70 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.310%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 9.88855
Cbc0038I Solution found of 9.52245
Cbc0038I Relaxing continuous gives -2.35954
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 71 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -2.35954 to -8.18131 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.9193
Cbc0038I Pass   1: suminf.    2.36859 (35) obj. -10.9193 iterations 32
Cbc0038I Pass   2: suminf.    1.40037 (6) obj. -10.9193 iterations 39
Cbc0038I Pass   3: suminf.    0.48837 (5) obj. -10.9193 iterations 4
Cbc0038I Pass   4: suminf.    0.72814 (4) obj. -10.9193 iterations 14
Cbc0038I Pass   5: suminf.    0.68095 (3) obj. -10.9193 iterations 1
Cbc0038I Pass   6: suminf.    1.01882 (4) obj. -10.9193 iterations 5
Cbc0038I Pass   7: suminf.    0.97216 (3) obj. -10.9193 iterations 1
Cbc0038I Pass   8: suminf.    1.51972 (8) obj. -10.9193 iterations 8
Cbc0038I Pass   9: suminf.    1.51972 (8) obj. -10.9193 iterations 1
Cbc0038I Pass  10: suminf.    2.22369 (7) obj. -10.9193 iterations 19
Cbc0038I Pass  11: suminf.    1.26155 (6) obj. -10.9193 iterations 3
Cbc0038I Pass  12: suminf.    1.02264 (7) obj. -10.9193 iterations 2
Cbc0038I Pass  13: suminf.    1.77038 (5) obj. -10.9193 iterations 10
Cbc0038I Pass  14: suminf.    0.59999 (5) obj. -10.9193 iterations 4
Cbc0038I Pass  15: suminf.    0.59999 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  16: suminf.    1.13268 (5) obj. -10.9193 iterations 9
Cbc0038I Pass  17: suminf.    1.13268 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  18: suminf.    1.77038 (5) obj. -10.9193 iterations 8
Cbc0038I Pass  19: suminf.    0.59999 (5) obj. -10.9193 iterations 4
Cbc0038I Pass  20: suminf.    0.59999 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  21: suminf.    1.13268 (5) obj. -10.9193 iterations 9
Cbc0038I Pass  22: suminf.    1.13268 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  23: suminf.    1.77038 (5) obj. -10.9193 iterations 8
Cbc0038I Pass  24: suminf.    0.59999 (5) obj. -10.9193 iterations 4
Cbc0038I Pass  25: suminf.    0.59999 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  26: suminf.    1.13268 (5) obj. -10.9193 iterations 9
Cbc0038I Pass  27: suminf.    1.13268 (5) obj. -10.9193 iterations 0
Cbc0038I Pass  28: suminf.    1.77038 (5) obj. -10.9193 iterations 8
Cbc0038I Pass  29: suminf.    0.59999 (5) obj. -10.9193 iterations 4
Cbc0038I Pass  30: suminf.    0.59999 (5) obj. -10.9193 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 71 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -8.18131 - took 0.07 seconds
Cbc0012I Integer solution of -8.18131 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 135 rows 71 columns, reduced to 63 rows 34 columns
Cbc0031I 21 added rows had average density of 51.809524
Cbc0013I At root node, 21 cuts changed objective from -35.560491 to -29.129202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9768 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2264 row cuts average 70.9 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.18131 best solution, best possible -29.129202 (0.84 seconds)
Cbc0038I Full problem 135 rows 71 columns, reduced to 75 rows 45 columns
Cbc0038I Full problem 135 rows 71 columns, reduced to 9 rows 11 columns
Cbc0001I Search completed - best objective -8.181310000000003, took 9512 iterations and 98 nodes (1.20 seconds)
Cbc0032I Strong branching done 1038 times (16748 iterations), fathomed 10 nodes and fixed 65 variables
Cbc0035I Maximum depth 28, 261 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 110 (-43) columns and 1771 (-1533) elements
Clp1000I sum of infeasibilities 1.23089e-07 - average 1.17228e-09, 15 fixed columns
Coin0506I Presolve 89 (-16) rows, 94 (-16) columns and 1338 (-433) elements
Clp0006I 0  Obj 38.634356 Dual inf 4.108718 (92)
Clp0014I Perturbing problem by 0.001% of 2.402261 - largest nonzero change 1.8614972e-05 ( 0.0014083952%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 51.524565
Clp0000I Optimal - objective value 51.524565
Coin0511I After Postsolve, objective 51.524565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.524565
Clp0000I Optimal - objective value 51.524565
Clp0000I Optimal - objective value 51.524565
Clp0000I Optimal - objective value 51.524565
Coin0511I After Postsolve, objective 51.524565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.52456548 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 112 columns (112 integer (112 of which binary)) and 1786 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.536%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.39189
Cbc0038I Pass   1: suminf.    3.88785 (30) obj. -36.7 iterations 10
Cbc0038I Pass   2: suminf.    0.36699 (4) obj. -8.40063 iterations 27
Cbc0038I Solution found of -0.36463
Cbc0038I Rounding solution of -1.80612 is better than previous of -0.36463

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 112 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -1.80612 to -3.96901 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.41615
Cbc0038I Pass   3: suminf.    3.88785 (30) obj. -36.7 iterations 0
Cbc0038I Pass   4: suminf.    1.63651 (15) obj. -22.5492 iterations 13
Cbc0038I Pass   5: suminf.    0.29787 (5) obj. -7.41615 iterations 19
Cbc0038I Pass   6: suminf.    0.26968 (4) obj. -7.69933 iterations 3
Cbc0038I Pass   7: suminf.    0.38627 (1) obj. -7.41615 iterations 11
Cbc0038I Pass   8: suminf.    0.10345 (1) obj. -8.72204 iterations 6
Cbc0038I Pass   9: suminf.    0.25986 (1) obj. -7.41615 iterations 1
Cbc0038I Pass  10: suminf.    1.16327 (8) obj. -8.99194 iterations 25
Cbc0038I Pass  11: suminf.    1.00576 (7) obj. -8.67692 iterations 6
Cbc0038I Pass  12: suminf.    1.21919 (4) obj. -7.41615 iterations 12
Cbc0038I Pass  13: suminf.    1.10822 (4) obj. -9.22443 iterations 5
Cbc0038I Pass  14: suminf.    0.47229 (4) obj. -7.41615 iterations 7
Cbc0038I Pass  15: suminf.    1.00401 (3) obj. -7.41615 iterations 4
Cbc0038I Pass  16: suminf.    0.45540 (3) obj. -7.41615 iterations 8
Cbc0038I Pass  17: suminf.    0.32017 (2) obj. -10.2327 iterations 6
Cbc0038I Pass  18: suminf.    0.14925 (1) obj. -9.30198 iterations 2
Cbc0038I Pass  19: suminf.    0.55064 (2) obj. -7.41615 iterations 7
Cbc0038I Pass  20: suminf.    2.77527 (16) obj. -7.41615 iterations 38
Cbc0038I Pass  21: suminf.    2.47546 (16) obj. -7.41615 iterations 6
Cbc0038I Pass  22: suminf.    1.83349 (13) obj. -7.41615 iterations 11
Cbc0038I Pass  23: suminf.    1.10608 (6) obj. -7.41615 iterations 30
Cbc0038I Pass  24: suminf.    0.61137 (5) obj. -7.41615 iterations 7
Cbc0038I Pass  25: suminf.    1.82301 (5) obj. -7.41615 iterations 8
Cbc0038I Pass  26: suminf.    1.82301 (5) obj. -7.41615 iterations 0
Cbc0038I Pass  27: suminf.    2.05754 (6) obj. -7.41615 iterations 9
Cbc0038I Pass  28: suminf.    0.67463 (4) obj. -7.41615 iterations 8
Cbc0038I Pass  29: suminf.    0.67463 (4) obj. -7.41615 iterations 1
Cbc0038I Pass  30: suminf.    1.80549 (13) obj. -7.41615 iterations 22
Cbc0038I Pass  31: suminf.    1.47752 (12) obj. -7.52296 iterations 5
Cbc0038I Pass  32: suminf.    1.04873 (4) obj. -7.41615 iterations 23
Cbc0038I Rounding solution of -7.44672 is better than previous of -3.96901

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 112 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -7.44672 to -7.69357 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.8428
Cbc0038I Pass  32: suminf.    3.88785 (30) obj. -36.7 iterations 0
Cbc0038I Pass  33: suminf.    1.50537 (14) obj. -21.6804 iterations 14
Cbc0038I Pass  34: suminf.    0.68016 (6) obj. -13.8428 iterations 18
Cbc0038I Pass  35: suminf.    0.67130 (7) obj. -13.8428 iterations 4
Cbc0038I Pass  36: suminf.    1.31157 (6) obj. -13.8428 iterations 17
Cbc0038I Pass  37: suminf.    1.31157 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  38: suminf.    1.54233 (6) obj. -13.8428 iterations 8
Cbc0038I Pass  39: suminf.    0.76049 (4) obj. -13.8428 iterations 10
Cbc0038I Pass  40: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  41: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  42: suminf.    1.08019 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  43: suminf.    1.54233 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  44: suminf.    0.76049 (4) obj. -13.8428 iterations 10
Cbc0038I Pass  45: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  46: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  47: suminf.    1.08019 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  48: suminf.    1.54233 (6) obj. -13.8428 iterations 8
Cbc0038I Pass  49: suminf.    0.76049 (4) obj. -13.8428 iterations 11
Cbc0038I Pass  50: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  51: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  52: suminf.    1.08019 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  53: suminf.    1.54233 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  54: suminf.    0.76049 (4) obj. -13.8428 iterations 10
Cbc0038I Pass  55: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  56: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I Pass  57: suminf.    1.08019 (6) obj. -13.8428 iterations 0
Cbc0038I Pass  58: suminf.    1.54233 (6) obj. -13.8428 iterations 8
Cbc0038I Pass  59: suminf.    0.76049 (4) obj. -13.8428 iterations 11
Cbc0038I Pass  60: suminf.    0.66748 (5) obj. -14.1413 iterations 5
Cbc0038I Pass  61: suminf.    1.08019 (6) obj. -13.8428 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 112 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.69357 - took 0.05 seconds
Cbc0012I Integer solution of -7.69357 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 107 rows 112 columns, reduced to 10 rows 11 columns
Cbc0031I 50 added rows had average density of 40.7
Cbc0013I At root node, 50 cuts changed objective from -38.439551 to -15.081667 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11160 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1224 row cuts average 103.6 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 342 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1125 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 392 row cuts average 55.4 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.701 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.69357 best solution, best possible -15.081667 (2.58 seconds)
Cbc0012I Integer solution of -7.83073 found by rounding after 5833 iterations and 56 nodes (3.16 seconds)
Cbc0016I Integer solution of -8.18131 found by strong branching after 5995 iterations and 69 nodes (3.18 seconds)
Cbc0001I Search completed - best objective -8.181310000000003, took 6466 iterations and 88 nodes (3.20 seconds)
Cbc0032I Strong branching done 884 times (12693 iterations), fathomed 18 nodes and fixed 12 variables
Cbc0035I Maximum depth 23, 174 variables fixed on reduced cost
Total time (CPU seconds):       2.38   (Wallclock seconds):       3.21

