Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 156 (-49) rows, 87 (-16) columns and 478 (-125) elements
Clp1000I sum of infeasibilities 3.55878e-05 - average 2.28127e-07, 17 fixed columns
Coin0506I Presolve 109 (-47) rows, 62 (-25) columns and 334 (-144) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.156196 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 77.9688
Clp0000I Optimal - objective value 77.9688
Coin0511I After Postsolve, objective 77.9688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.9688
Clp0000I Optimal - objective value 77.9688
Clp0000I Optimal - objective value 77.9688
Coin0511I After Postsolve, objective 77.9688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.9688001 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 156 rows, 87 columns (86 integer (86 of which binary)) and 487 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.110%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.31717
Cbc0038I Solution found of -7.5952
Cbc0038I Relaxing continuous gives -7.5952
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 156 rows 87 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -7.5952 to -55.9435 (0.03 seconds)
Cbc0038I Round again with cutoff of -58.1461
Cbc0038I Pass   1: suminf.    1.81878 (13) obj. -58.1461 iterations 42
Cbc0038I Pass   2: suminf.    1.81878 (13) obj. -58.1461 iterations 0
Cbc0038I Pass   3: suminf.    1.17425 (5) obj. -58.1461 iterations 19
Cbc0038I Pass   4: suminf.    1.12452 (5) obj. -58.1461 iterations 2
Cbc0038I Pass   5: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass   6: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I Pass   7: suminf.    1.26093 (5) obj. -58.1461 iterations 5
Cbc0038I Pass   8: suminf.    1.02972 (5) obj. -58.1461 iterations 4
Cbc0038I Pass   9: suminf.    1.31336 (6) obj. -58.1461 iterations 7
Cbc0038I Pass  10: suminf.    1.12452 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  11: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  12: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  13: suminf.    1.26093 (5) obj. -58.1461 iterations 5
Cbc0038I Pass  14: suminf.    1.02972 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  15: suminf.    1.31336 (6) obj. -58.1461 iterations 7
Cbc0038I Pass  16: suminf.    1.12452 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  17: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  18: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  19: suminf.    1.26093 (5) obj. -58.1461 iterations 5
Cbc0038I Pass  20: suminf.    1.02972 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  21: suminf.    1.31336 (6) obj. -58.1461 iterations 7
Cbc0038I Pass  22: suminf.    1.12452 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  23: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  24: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  25: suminf.    1.26093 (5) obj. -58.1461 iterations 5
Cbc0038I Pass  26: suminf.    1.02972 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  27: suminf.    1.31336 (6) obj. -58.1461 iterations 7
Cbc0038I Pass  28: suminf.    1.12452 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  29: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  30: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 156 rows 87 columns, reduced to 61 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -55.9435 - took 0.05 seconds
Cbc0012I Integer solution of -55.9435 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 156 rows 87 columns, reduced to 58 rows 34 columns
Cbc0031I 21 added rows had average density of 40.857143
Cbc0013I At root node, 21 cuts changed objective from -77.9688 to -70.364404 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5742 row cuts average 4.8 elements, 5 column cuts (5 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1280 row cuts average 80.1 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -55.9435 best solution, best possible -70.364404 (0.68 seconds)
Cbc0001I Search completed - best objective -55.9435, took 5508 iterations and 40 nodes (0.75 seconds)
Cbc0032I Strong branching done 462 times (8053 iterations), fathomed 7 nodes and fixed 31 variables
Cbc0035I Maximum depth 13, 129 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-86) rows, 134 (-68) columns and 2544 (-3109) elements
Clp1000I sum of infeasibilities 5.08698e-07 - average 4.311e-09, 26 fixed columns
Coin0506I Presolve 96 (-22) rows, 108 (-26) columns and 1708 (-836) elements
Clp0006I 0  Obj 83.847185 Dual inf 13.910158 (103)
Clp0029I End of values pass after 108 iterations
Clp0014I Perturbing problem by 0.001% of 2.4415666 - largest nonzero change 2.3625672e-05 ( 0.001262127%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 91.158517
Clp0000I Optimal - objective value 91.158517
Coin0511I After Postsolve, objective 91.158517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 91.158517
Clp0000I Optimal - objective value 91.158517
Clp0000I Optimal - objective value 91.158517
Clp0000I Optimal - objective value 91.158517
Coin0511I After Postsolve, objective 91.158517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.15851739 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 138 columns (138 integer (138 of which binary)) and 2571 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.336%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 5.32054
Cbc0038I Pass   1: suminf.    1.23761 (38) obj. -47.1167 iterations 32
Cbc0038I Pass   2: suminf.    1.23761 (38) obj. -47.1167 iterations 0
Cbc0038I Pass   3: suminf.    0.22016 (9) obj. -13.3466 iterations 29
Cbc0038I Solution found of -2.6164
Cbc0038I Rounding solution of -25.0222 is better than previous of -2.6164

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 138 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.0222 to -28.397 (0.05 seconds)
Cbc0038I Round again with cutoff of -33.9409
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.23761 (38) obj. -47.1167 iterations 0
Cbc0038I Pass   5: suminf.    1.23761 (38) obj. -47.1167 iterations 0
Cbc0038I Pass   6: suminf.    0.91834 (23) obj. -33.9409 iterations 18
Cbc0038I Pass   7: suminf.    0.31707 (5) obj. -33.9409 iterations 33
Cbc0038I Pass   8: suminf.    0.75939 (3) obj. -33.9409 iterations 16
Cbc0038I Pass   9: suminf.    0.72845 (8) obj. -33.9409 iterations 4
Cbc0038I Pass  10: suminf.    0.51447 (3) obj. -33.9409 iterations 13
Cbc0038I Pass  11: suminf.    0.51447 (3) obj. -33.9409 iterations 1
Cbc0038I Pass  12: suminf.    0.72410 (4) obj. -33.9409 iterations 6
Cbc0038I Pass  13: suminf.    0.50744 (2) obj. -33.9409 iterations 8
Cbc0038I Pass  14: suminf.    0.90365 (2) obj. -33.9409 iterations 9
Cbc0038I Pass  15: suminf.    0.80605 (11) obj. -33.9409 iterations 18
Cbc0038I Pass  16: suminf.    1.77260 (7) obj. -33.9409 iterations 14
Cbc0038I Pass  17: suminf.    1.56322 (7) obj. -33.9409 iterations 3
Cbc0038I Pass  18: suminf.    1.20401 (6) obj. -33.9409 iterations 8
Cbc0038I Pass  19: suminf.    1.19632 (7) obj. -33.9409 iterations 5
Cbc0038I Pass  20: suminf.    1.46635 (6) obj. -33.9409 iterations 9
Cbc0038I Pass  21: suminf.    1.05262 (6) obj. -33.9409 iterations 4
Cbc0038I Pass  22: suminf.    0.63594 (4) obj. -33.9409 iterations 9
Cbc0038I Pass  23: suminf.    0.62758 (4) obj. -33.9409 iterations 3
Cbc0038I Pass  24: suminf.    0.63594 (4) obj. -33.9409 iterations 5
Cbc0038I Pass  25: suminf.    2.38524 (19) obj. -33.9409 iterations 31
Cbc0038I Pass  26: suminf.    1.82600 (16) obj. -33.9409 iterations 9
Cbc0038I Pass  27: suminf.    1.30377 (14) obj. -33.9409 iterations 4
Cbc0038I Pass  28: suminf.    1.69290 (8) obj. -33.9409 iterations 18
Cbc0038I Pass  29: suminf.    0.97061 (7) obj. -33.9409 iterations 12
Cbc0038I Pass  30: suminf.    0.49662 (4) obj. -33.9409 iterations 8
Cbc0038I Pass  31: suminf.    0.42580 (5) obj. -33.9409 iterations 2
Cbc0038I Pass  32: suminf.    1.24389 (9) obj. -33.9409 iterations 12
Cbc0038I Pass  33: suminf.    1.24389 (9) obj. -33.9409 iterations 0
Cbc0038I Rounding solution of -28.9961 is better than previous of -28.397

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 138 columns, reduced to 63 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -28.9961 to -52.9947 (0.12 seconds)
Cbc0038I Round again with cutoff of -59.1628
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.85466 (44) obj. -59.1628 iterations 7
Cbc0038I Pass  34: suminf.    1.50376 (31) obj. -59.1628 iterations 16
Cbc0038I Pass  35: suminf.    1.47339 (31) obj. -59.1628 iterations 3
Cbc0038I Pass  36: suminf.    2.72067 (29) obj. -59.1628 iterations 50
Cbc0038I Pass  37: suminf.    2.34720 (25) obj. -59.1628 iterations 7
Cbc0038I Pass  38: suminf.    3.16089 (22) obj. -59.1628 iterations 14
Cbc0038I Pass  39: suminf.    2.00996 (21) obj. -59.1628 iterations 8
Cbc0038I Pass  40: suminf.    2.00996 (21) obj. -59.1628 iterations 0
Cbc0038I Pass  41: suminf.    2.01250 (21) obj. -59.1628 iterations 7
Cbc0038I Pass  42: suminf.    2.01250 (21) obj. -59.1628 iterations 3
Cbc0038I Pass  43: suminf.    2.01341 (21) obj. -59.1628 iterations 6
Cbc0038I Pass  44: suminf.    2.01341 (21) obj. -59.1628 iterations 3
Cbc0038I Pass  45: suminf.    1.24499 (23) obj. -59.1628 iterations 20
Cbc0038I Pass  46: suminf.    1.13350 (23) obj. -59.1628 iterations 5
Cbc0038I Pass  47: suminf.    3.15042 (22) obj. -59.1628 iterations 28
Cbc0038I Pass  48: suminf.    2.01250 (21) obj. -59.1628 iterations 6
Cbc0038I Pass  49: suminf.    2.01250 (21) obj. -59.1628 iterations 0
Cbc0038I Pass  50: suminf.    2.01341 (21) obj. -59.1628 iterations 6
Cbc0038I Pass  51: suminf.    2.01341 (21) obj. -59.1628 iterations 3
Cbc0038I Pass  52: suminf.    2.01250 (21) obj. -59.1628 iterations 5
Cbc0038I Pass  53: suminf.    4.03935 (28) obj. -59.1628 iterations 15
Cbc0038I Pass  54: suminf.    3.31060 (25) obj. -59.1628 iterations 8
Cbc0038I Pass  55: suminf.    2.91017 (25) obj. -59.1628 iterations 12
Cbc0038I Pass  56: suminf.    2.76895 (26) obj. -59.1628 iterations 4
Cbc0038I Pass  57: suminf.    3.36409 (25) obj. -59.1628 iterations 13
Cbc0038I Pass  58: suminf.    3.02932 (25) obj. -59.1628 iterations 5
Cbc0038I Pass  59: suminf.    3.36409 (25) obj. -59.1628 iterations 9
Cbc0038I Pass  60: suminf.    3.00381 (25) obj. -59.1628 iterations 7
Cbc0038I Pass  61: suminf.    4.48556 (32) obj. -59.1628 iterations 28
Cbc0038I Pass  62: suminf.    3.66839 (31) obj. -59.1628 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 138 columns, reduced to 67 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -52.9947 to -55.9435 (0.18 seconds)
Cbc0038I Round again with cutoff of -66.5643
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.23380 (44) obj. -66.5643 iterations 0
Cbc0038I Pass  63: suminf.    3.40623 (33) obj. -66.5643 iterations 47
Cbc0038I Pass  64: suminf.    3.06662 (36) obj. -66.5643 iterations 2
Cbc0038I Pass  65: suminf.    4.57033 (35) obj. -66.5643 iterations 18
Cbc0038I Pass  66: suminf.    3.84731 (33) obj. -66.5643 iterations 5
Cbc0038I Pass  67: suminf.    3.50860 (33) obj. -66.5643 iterations 16
Cbc0038I Pass  68: suminf.    3.35205 (34) obj. -66.5643 iterations 4
Cbc0038I Pass  69: suminf.    3.96252 (33) obj. -66.5643 iterations 22
Cbc0038I Pass  70: suminf.    3.86187 (33) obj. -66.5643 iterations 5
Cbc0038I Pass  71: suminf.    3.96252 (33) obj. -66.5643 iterations 6
Cbc0038I Pass  72: suminf.    4.33731 (36) obj. -66.5643 iterations 10
Cbc0038I Pass  73: suminf.    3.98707 (35) obj. -66.5643 iterations 9
Cbc0038I Pass  74: suminf.    3.98707 (35) obj. -66.5643 iterations 1
Cbc0038I Pass  75: suminf.    3.96252 (33) obj. -66.5643 iterations 13
Cbc0038I Pass  76: suminf.    3.81870 (33) obj. -66.5643 iterations 7
Cbc0038I Pass  77: suminf.    3.96252 (33) obj. -66.5643 iterations 7
Cbc0038I Pass  78: suminf.    3.80811 (33) obj. -66.5643 iterations 4
Cbc0038I Pass  79: suminf.    3.53763 (34) obj. -66.5643 iterations 7
Cbc0038I Pass  80: suminf.    3.53253 (37) obj. -66.5643 iterations 4
Cbc0038I Pass  81: suminf.    3.96252 (33) obj. -66.5643 iterations 8
Cbc0038I Pass  82: suminf.    5.42352 (37) obj. -66.5643 iterations 13
Cbc0038I Pass  83: suminf.    4.91709 (37) obj. -66.5643 iterations 5
Cbc0038I Pass  84: suminf.    3.97514 (36) obj. -66.5643 iterations 3
Cbc0038I Pass  85: suminf.    4.17877 (33) obj. -66.5643 iterations 16
Cbc0038I Pass  86: suminf.    3.93217 (34) obj. -66.5643 iterations 4
Cbc0038I Pass  87: suminf.    3.96461 (34) obj. -66.5643 iterations 8
Cbc0038I Pass  88: suminf.    3.94760 (33) obj. -66.5643 iterations 17
Cbc0038I Pass  89: suminf.    3.52918 (37) obj. -66.5643 iterations 11
Cbc0038I Pass  90: suminf.    3.96252 (33) obj. -66.5643 iterations 11
Cbc0038I Pass  91: suminf.    3.84298 (33) obj. -66.5643 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 138 columns, reduced to 60 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -55.9435 - took 0.15 seconds
Cbc0012I Integer solution of -55.9435 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 122 rows 138 columns, reduced to 49 rows 54 columns
Cbc0031I 58 added rows had average density of 18.948276
Cbc0013I At root node, 58 cuts changed objective from -83.834685 to -65.225898 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 2863 row cuts average 7.5 elements, 6 column cuts (6 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 50 row cuts average 86.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 97 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 191 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 302 row cuts average 79.7 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -55.9435 best solution, best possible -65.225898 (0.62 seconds)
Cbc0010I After 9 nodes, 6 on tree, -55.9435 best solution, best possible -62.263819 (1.37 seconds)
Cbc0001I Search completed - best objective -55.9435, took 2693 iterations and 28 nodes (2.03 seconds)
Cbc0032I Strong branching done 578 times (13617 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 10, 77 variables fixed on reduced cost
Total time (CPU seconds):       1.52   (Wallclock seconds):       2.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 156 (-49) rows, 87 (-16) columns and 478 (-125) elements
Clp1000I sum of infeasibilities 3.55878e-05 - average 2.28127e-07, 17 fixed columns
Coin0506I Presolve 109 (-47) rows, 62 (-25) columns and 334 (-144) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.156196 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 77.9688
Clp0000I Optimal - objective value 77.9688
Coin0511I After Postsolve, objective 77.9688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.9688
Clp0000I Optimal - objective value 77.9688
Clp0000I Optimal - objective value 77.9688
Coin0511I After Postsolve, objective 77.9688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.9688001 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 156 rows, 87 columns (86 integer (86 of which binary)) and 487 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.110%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 5.31717
Cbc0038I Solution found of -7.5952
Cbc0038I Relaxing continuous gives -7.5952
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 156 rows 87 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -7.5952 to -55.9435 (0.03 seconds)
Cbc0038I Round again with cutoff of -58.1461
Cbc0038I Pass   1: suminf.    1.81878 (13) obj. -58.1461 iterations 42
Cbc0038I Pass   2: suminf.    1.81878 (13) obj. -58.1461 iterations 0
Cbc0038I Pass   3: suminf.    1.17425 (5) obj. -58.1461 iterations 19
Cbc0038I Pass   4: suminf.    1.12452 (5) obj. -58.1461 iterations 2
Cbc0038I Pass   5: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass   6: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I Pass   7: suminf.    1.26093 (5) obj. -58.1461 iterations 5
Cbc0038I Pass   8: suminf.    1.02972 (5) obj. -58.1461 iterations 4
Cbc0038I Pass   9: suminf.    1.31336 (6) obj. -58.1461 iterations 7
Cbc0038I Pass  10: suminf.    1.12452 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  11: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  12: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  13: suminf.    1.26093 (5) obj. -58.1461 iterations 5
Cbc0038I Pass  14: suminf.    1.02972 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  15: suminf.    1.31336 (6) obj. -58.1461 iterations 7
Cbc0038I Pass  16: suminf.    1.12452 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  17: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  18: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  19: suminf.    1.26093 (5) obj. -58.1461 iterations 5
Cbc0038I Pass  20: suminf.    1.02972 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  21: suminf.    1.31336 (6) obj. -58.1461 iterations 7
Cbc0038I Pass  22: suminf.    1.12452 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  23: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  24: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  25: suminf.    1.26093 (5) obj. -58.1461 iterations 5
Cbc0038I Pass  26: suminf.    1.02972 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  27: suminf.    1.31336 (6) obj. -58.1461 iterations 7
Cbc0038I Pass  28: suminf.    1.12452 (5) obj. -58.1461 iterations 1
Cbc0038I Pass  29: suminf.    1.63027 (5) obj. -58.1461 iterations 4
Cbc0038I Pass  30: suminf.    1.58731 (5) obj. -58.1461 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 156 rows 87 columns, reduced to 61 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -55.9435 - took 0.05 seconds
Cbc0012I Integer solution of -55.9435 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 156 rows 87 columns, reduced to 58 rows 34 columns
Cbc0031I 21 added rows had average density of 40.857143
Cbc0013I At root node, 21 cuts changed objective from -77.9688 to -70.364404 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5742 row cuts average 4.8 elements, 5 column cuts (5 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1280 row cuts average 80.1 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 5 nodes, 6 on tree, -55.9435 best solution, best possible -70.364404 (0.69 seconds)
Cbc0001I Search completed - best objective -55.9435, took 5508 iterations and 40 nodes (0.75 seconds)
Cbc0032I Strong branching done 462 times (8053 iterations), fathomed 7 nodes and fixed 31 variables
Cbc0035I Maximum depth 13, 129 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-87) rows, 134 (-69) columns and 2544 (-3110) elements
Clp1000I sum of infeasibilities 5.08698e-07 - average 4.311e-09, 26 fixed columns
Coin0506I Presolve 96 (-22) rows, 108 (-26) columns and 1708 (-836) elements
Clp0006I 0  Obj 83.847185 Dual inf 13.910158 (103)
Clp0029I End of values pass after 108 iterations
Clp0014I Perturbing problem by 0.001% of 2.4415666 - largest nonzero change 2.3625672e-05 ( 0.001262127%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 91.158517
Clp0000I Optimal - objective value 91.158517
Coin0511I After Postsolve, objective 91.158517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 91.158517
Clp0000I Optimal - objective value 91.158517
Clp0000I Optimal - objective value 91.158517
Clp0000I Optimal - objective value 91.158517
Coin0511I After Postsolve, objective 91.158517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.15851739 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 138 columns (138 integer (138 of which binary)) and 2571 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.336%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 5.32054
Cbc0038I Pass   1: suminf.    1.23761 (38) obj. -47.1167 iterations 32
Cbc0038I Pass   2: suminf.    1.23761 (38) obj. -47.1167 iterations 0
Cbc0038I Pass   3: suminf.    0.22016 (9) obj. -13.3466 iterations 29
Cbc0038I Solution found of -2.6164
Cbc0038I Rounding solution of -25.0222 is better than previous of -2.6164

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 138 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -25.0222 to -28.397 (0.05 seconds)
Cbc0038I Round again with cutoff of -33.9409
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.23761 (38) obj. -47.1167 iterations 0
Cbc0038I Pass   5: suminf.    1.23761 (38) obj. -47.1167 iterations 0
Cbc0038I Pass   6: suminf.    0.91834 (23) obj. -33.9409 iterations 18
Cbc0038I Pass   7: suminf.    0.31707 (5) obj. -33.9409 iterations 33
Cbc0038I Pass   8: suminf.    0.75939 (3) obj. -33.9409 iterations 16
Cbc0038I Pass   9: suminf.    0.72845 (8) obj. -33.9409 iterations 4
Cbc0038I Pass  10: suminf.    0.51447 (3) obj. -33.9409 iterations 13
Cbc0038I Pass  11: suminf.    0.51447 (3) obj. -33.9409 iterations 1
Cbc0038I Pass  12: suminf.    0.72410 (4) obj. -33.9409 iterations 6
Cbc0038I Pass  13: suminf.    0.50744 (2) obj. -33.9409 iterations 8
Cbc0038I Pass  14: suminf.    0.90365 (2) obj. -33.9409 iterations 9
Cbc0038I Pass  15: suminf.    0.80605 (11) obj. -33.9409 iterations 18
Cbc0038I Pass  16: suminf.    1.77260 (7) obj. -33.9409 iterations 14
Cbc0038I Pass  17: suminf.    1.56322 (7) obj. -33.9409 iterations 3
Cbc0038I Pass  18: suminf.    1.20401 (6) obj. -33.9409 iterations 8
Cbc0038I Pass  19: suminf.    1.19632 (7) obj. -33.9409 iterations 5
Cbc0038I Pass  20: suminf.    1.46635 (6) obj. -33.9409 iterations 9
Cbc0038I Pass  21: suminf.    1.05262 (6) obj. -33.9409 iterations 4
Cbc0038I Pass  22: suminf.    0.63594 (4) obj. -33.9409 iterations 9
Cbc0038I Pass  23: suminf.    0.62758 (4) obj. -33.9409 iterations 3
Cbc0038I Pass  24: suminf.    0.63594 (4) obj. -33.9409 iterations 5
Cbc0038I Pass  25: suminf.    2.38524 (19) obj. -33.9409 iterations 31
Cbc0038I Pass  26: suminf.    1.82600 (16) obj. -33.9409 iterations 9
Cbc0038I Pass  27: suminf.    1.30377 (14) obj. -33.9409 iterations 4
Cbc0038I Pass  28: suminf.    1.69290 (8) obj. -33.9409 iterations 18
Cbc0038I Pass  29: suminf.    0.97061 (7) obj. -33.9409 iterations 12
Cbc0038I Pass  30: suminf.    0.49662 (4) obj. -33.9409 iterations 8
Cbc0038I Pass  31: suminf.    0.42580 (5) obj. -33.9409 iterations 2
Cbc0038I Pass  32: suminf.    1.24389 (9) obj. -33.9409 iterations 12
Cbc0038I Pass  33: suminf.    1.24389 (9) obj. -33.9409 iterations 0
Cbc0038I Rounding solution of -28.9961 is better than previous of -28.397

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 138 columns, reduced to 63 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -28.9961 to -52.9947 (0.16 seconds)
Cbc0038I Round again with cutoff of -59.1628
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.85466 (44) obj. -59.1628 iterations 7
Cbc0038I Pass  34: suminf.    1.50376 (31) obj. -59.1628 iterations 16
Cbc0038I Pass  35: suminf.    1.47339 (31) obj. -59.1628 iterations 3
Cbc0038I Pass  36: suminf.    2.72067 (29) obj. -59.1628 iterations 50
Cbc0038I Pass  37: suminf.    2.34720 (25) obj. -59.1628 iterations 7
Cbc0038I Pass  38: suminf.    3.16089 (22) obj. -59.1628 iterations 14
Cbc0038I Pass  39: suminf.    2.00996 (21) obj. -59.1628 iterations 8
Cbc0038I Pass  40: suminf.    2.00996 (21) obj. -59.1628 iterations 0
Cbc0038I Pass  41: suminf.    2.01250 (21) obj. -59.1628 iterations 7
Cbc0038I Pass  42: suminf.    2.01250 (21) obj. -59.1628 iterations 3
Cbc0038I Pass  43: suminf.    2.01341 (21) obj. -59.1628 iterations 6
Cbc0038I Pass  44: suminf.    2.01341 (21) obj. -59.1628 iterations 3
Cbc0038I Pass  45: suminf.    1.24499 (23) obj. -59.1628 iterations 20
Cbc0038I Pass  46: suminf.    1.13350 (23) obj. -59.1628 iterations 5
Cbc0038I Pass  47: suminf.    3.15042 (22) obj. -59.1628 iterations 28
Cbc0038I Pass  48: suminf.    2.01250 (21) obj. -59.1628 iterations 6
Cbc0038I Pass  49: suminf.    2.01250 (21) obj. -59.1628 iterations 0
Cbc0038I Pass  50: suminf.    2.01341 (21) obj. -59.1628 iterations 6
Cbc0038I Pass  51: suminf.    2.01341 (21) obj. -59.1628 iterations 3
Cbc0038I Pass  52: suminf.    2.01250 (21) obj. -59.1628 iterations 5
Cbc0038I Pass  53: suminf.    4.03935 (28) obj. -59.1628 iterations 15
Cbc0038I Pass  54: suminf.    3.31060 (25) obj. -59.1628 iterations 8
Cbc0038I Pass  55: suminf.    2.91017 (25) obj. -59.1628 iterations 12
Cbc0038I Pass  56: suminf.    2.76895 (26) obj. -59.1628 iterations 4
Cbc0038I Pass  57: suminf.    3.36409 (25) obj. -59.1628 iterations 13
Cbc0038I Pass  58: suminf.    3.02932 (25) obj. -59.1628 iterations 5
Cbc0038I Pass  59: suminf.    3.36409 (25) obj. -59.1628 iterations 9
Cbc0038I Pass  60: suminf.    3.00381 (25) obj. -59.1628 iterations 7
Cbc0038I Pass  61: suminf.    4.48556 (32) obj. -59.1628 iterations 28
Cbc0038I Pass  62: suminf.    3.66839 (31) obj. -59.1628 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 138 columns, reduced to 67 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -52.9947 to -55.9435 (0.23 seconds)
Cbc0038I Round again with cutoff of -66.5643
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.23380 (44) obj. -66.5643 iterations 0
Cbc0038I Pass  63: suminf.    3.40623 (33) obj. -66.5643 iterations 47
Cbc0038I Pass  64: suminf.    3.06662 (36) obj. -66.5643 iterations 2
Cbc0038I Pass  65: suminf.    4.57033 (35) obj. -66.5643 iterations 18
Cbc0038I Pass  66: suminf.    3.84731 (33) obj. -66.5643 iterations 5
Cbc0038I Pass  67: suminf.    3.50860 (33) obj. -66.5643 iterations 16
Cbc0038I Pass  68: suminf.    3.35205 (34) obj. -66.5643 iterations 4
Cbc0038I Pass  69: suminf.    3.96252 (33) obj. -66.5643 iterations 22
Cbc0038I Pass  70: suminf.    3.86187 (33) obj. -66.5643 iterations 5
Cbc0038I Pass  71: suminf.    3.96252 (33) obj. -66.5643 iterations 6
Cbc0038I Pass  72: suminf.    4.33731 (36) obj. -66.5643 iterations 10
Cbc0038I Pass  73: suminf.    3.98707 (35) obj. -66.5643 iterations 9
Cbc0038I Pass  74: suminf.    3.98707 (35) obj. -66.5643 iterations 1
Cbc0038I Pass  75: suminf.    3.96252 (33) obj. -66.5643 iterations 13
Cbc0038I Pass  76: suminf.    3.81870 (33) obj. -66.5643 iterations 7
Cbc0038I Pass  77: suminf.    3.96252 (33) obj. -66.5643 iterations 7
Cbc0038I Pass  78: suminf.    3.80811 (33) obj. -66.5643 iterations 4
Cbc0038I Pass  79: suminf.    3.53763 (34) obj. -66.5643 iterations 7
Cbc0038I Pass  80: suminf.    3.53253 (37) obj. -66.5643 iterations 4
Cbc0038I Pass  81: suminf.    3.96252 (33) obj. -66.5643 iterations 8
Cbc0038I Pass  82: suminf.    5.42352 (37) obj. -66.5643 iterations 13
Cbc0038I Pass  83: suminf.    4.91709 (37) obj. -66.5643 iterations 5
Cbc0038I Pass  84: suminf.    3.97514 (36) obj. -66.5643 iterations 3
Cbc0038I Pass  85: suminf.    4.17877 (33) obj. -66.5643 iterations 16
Cbc0038I Pass  86: suminf.    3.93217 (34) obj. -66.5643 iterations 4
Cbc0038I Pass  87: suminf.    3.96461 (34) obj. -66.5643 iterations 8
Cbc0038I Pass  88: suminf.    3.94760 (33) obj. -66.5643 iterations 17
Cbc0038I Pass  89: suminf.    3.52918 (37) obj. -66.5643 iterations 11
Cbc0038I Pass  90: suminf.    3.96252 (33) obj. -66.5643 iterations 11
Cbc0038I Pass  91: suminf.    3.84298 (33) obj. -66.5643 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 138 columns, reduced to 60 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of -55.9435 - took 0.19 seconds
Cbc0012I Integer solution of -55.9435 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0038I Full problem 122 rows 138 columns, reduced to 49 rows 54 columns
Cbc0031I 58 added rows had average density of 18.948276
Cbc0013I At root node, 58 cuts changed objective from -83.834685 to -65.225898 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 2863 row cuts average 7.5 elements, 6 column cuts (6 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 50 row cuts average 86.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 97 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 191 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 302 row cuts average 79.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -55.9435 best solution, best possible -65.225898 (0.84 seconds)
Cbc0010I After 6 nodes, 5 on tree, -55.9435 best solution, best possible -62.263819 (1.55 seconds)
Cbc0010I After 18 nodes, 4 on tree, -55.9435 best solution, best possible -62.263819 (2.38 seconds)
Cbc0001I Search completed - best objective -55.9435, took 2693 iterations and 28 nodes (2.88 seconds)
Cbc0032I Strong branching done 578 times (13617 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 10, 77 variables fixed on reduced cost
Total time (CPU seconds):       2.06   (Wallclock seconds):       2.90

