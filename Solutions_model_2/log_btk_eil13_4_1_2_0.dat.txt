Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 12 (-3) columns and 48 (-27) elements
Clp1000I sum of infeasibilities 1.85811e-06 - average 1.16132e-07, 4 fixed columns
Coin0506I Presolve 10 (-6) rows, 7 (-5) columns and 27 (-21) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Coin0511I After Postsolve, objective 699.22922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Coin0511I After Postsolve, objective 699.22922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 699.2292163 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 49 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.32879
Cbc0038I Pass   1: suminf.    0.33333 (1) obj. -666.965 iterations 3
Cbc0038I Solution found of -535.38
Cbc0038I Relaxing continuous gives -535.38
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -550.679
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.33333 (1) obj. -666.965 iterations 0
Cbc0038I Pass   3: suminf.    0.07790 (1) obj. -550.679 iterations 2
Cbc0038I Pass   4: suminf.    0.41379 (1) obj. -616.646 iterations 1
Cbc0038I Pass   5: suminf.    0.12500 (1) obj. -612.134 iterations 4
Cbc0038I Pass   6: suminf.    0.12500 (1) obj. -612.134 iterations 0
Cbc0038I Pass   7: suminf.    0.39884 (2) obj. -550.679 iterations 5
Cbc0038I Pass   8: suminf.    0.17647 (1) obj. -618.526 iterations 3
Cbc0038I Pass   9: suminf.    0.17647 (1) obj. -618.526 iterations 0
Cbc0038I Pass  10: suminf.    0.45765 (2) obj. -550.679 iterations 4
Cbc0038I Pass  11: suminf.    0.44118 (1) obj. -550.679 iterations 2
Cbc0038I Pass  12: suminf.    0.38889 (1) obj. -584.219 iterations 2
Cbc0038I Pass  13: suminf.    0.45391 (1) obj. -550.679 iterations 4
Cbc0038I Pass  14: suminf.    0.38889 (1) obj. -584.219 iterations 4
Cbc0038I Pass  15: suminf.    0.33333 (1) obj. -595.118 iterations 3
Cbc0038I Pass  16: suminf.    0.44152 (1) obj. -550.679 iterations 2
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. -595.118 iterations 2
Cbc0038I Pass  18: suminf.    0.11765 (1) obj. -627.154 iterations 2
Cbc0038I Pass  19: suminf.    0.11765 (1) obj. -627.154 iterations 0
Cbc0038I Pass  20: suminf.    0.48600 (1) obj. -550.679 iterations 3
Cbc0038I Pass  21: suminf.    0.48276 (1) obj. -551.316 iterations 1
Cbc0038I Pass  22: suminf.    0.48276 (1) obj. -551.316 iterations 0
Cbc0038I Pass  23: suminf.    0.06250 (1) obj. -620.305 iterations 2
Cbc0038I Pass  24: suminf.    0.06250 (1) obj. -620.305 iterations 0
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -553.13 iterations 4
Cbc0038I Solution found of -553.13
Cbc0038I Relaxing continuous gives -553.13
Cbc0038I Rounding solution of -563.58 is better than previous of -553.13

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -563.58 to -569.13 (0.01 seconds)
Cbc0038I Round again with cutoff of -592.978
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  26: suminf.    0.33333 (1) obj. -666.965 iterations 0
Cbc0038I Pass  27: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  28: suminf.    0.29182 (1) obj. -592.978 iterations 0
Cbc0038I Pass  29: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  30: suminf.    0.68780 (2) obj. -592.978 iterations 2
Cbc0038I Pass  31: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  32: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  33: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  34: suminf.    0.29182 (1) obj. -592.978 iterations 3
Cbc0038I Pass  35: suminf.    0.33333 (1) obj. -666.965 iterations 1
Cbc0038I Pass  36: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  37: suminf.    0.20548 (2) obj. -592.978 iterations 7
Cbc0038I Pass  38: suminf.    0.20021 (2) obj. -592.978 iterations 1
Cbc0038I Pass  39: suminf.    0.21053 (1) obj. -597.228 iterations 4
Cbc0038I Pass  40: suminf.    0.31401 (1) obj. -592.978 iterations 4
Cbc0038I Pass  41: suminf.    0.11765 (1) obj. -623.588 iterations 2
Cbc0038I Pass  42: suminf.    0.29182 (1) obj. -592.978 iterations 3
Cbc0038I Pass  43: suminf.    0.33333 (1) obj. -666.965 iterations 1
Cbc0038I Pass  44: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  45: suminf.    0.21053 (1) obj. -601.526 iterations 4
Cbc0038I Pass  46: suminf.    0.25610 (1) obj. -592.978 iterations 2
Cbc0038I Pass  47: suminf.    0.22222 (1) obj. -599.665 iterations 1
Cbc0038I Pass  48: suminf.    0.44413 (2) obj. -592.978 iterations 1
Cbc0038I Pass  49: suminf.    0.22222 (1) obj. -599.665 iterations 1
Cbc0038I Pass  50: suminf.    0.93619 (3) obj. -592.978 iterations 2
Cbc0038I Pass  51: suminf.    1.20403 (4) obj. -592.978 iterations 3
Cbc0038I Pass  52: suminf.    0.68780 (2) obj. -592.978 iterations 3
Cbc0038I Pass  53: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  54: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  55: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -569.13 - took 0.02 seconds
Cbc0012I Integer solution of -569.13 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 12 columns, reduced to 8 rows 7 columns
Cbc0031I 7 added rows had average density of 8.4285714
Cbc0013I At root node, 7 cuts changed objective from -688.36504 to -586.67043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 151 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 285 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -569.13, took 952 iterations and 4 nodes (0.07 seconds)
Cbc0032I Strong branching done 22 times (107 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-11) rows, 23 (-3) columns and 115 (-36) elements
Clp1000I sum of infeasibilities 1.43846e-05 - average 8.99037e-07, 18 fixed columns
Coin0506I Presolve 3 (-13) rows, 5 (-18) columns and 11 (-104) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 668.39381
Clp0000I Optimal - objective value 668.39381
Coin0511I After Postsolve, objective 668.39381, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8860413 - largest nonzero change 0 ( 0%) - largest zero change 1.541737e-05
Clp0000I Optimal - objective value 720.06002
Clp0000I Optimal - objective value 720.06002
Clp0000I Optimal - objective value 720.06002
Coin0511I After Postsolve, objective 720.06002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 720.0600175 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 24 columns (24 integer (24 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.354%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.86928
Cbc0038I Pass   1: suminf.    0.74563 (5) obj. -562.152 iterations 2
Cbc0038I Solution found of -535.38
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -551.143
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.74563 (5) obj. -562.152 iterations 0
Cbc0038I Pass   3: suminf.    0.07986 (1) obj. -551.143 iterations 9
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -666.965 iterations 1
Cbc0038I Pass   5: suminf.    0.68824 (3) obj. -651.283 iterations 4
Cbc0038I Pass   6: suminf.    0.68824 (3) obj. -651.283 iterations 0
Cbc0038I Pass   7: suminf.    0.16778 (1) obj. -551.143 iterations 3
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -654.965 iterations 2
Cbc0038I Pass   9: suminf.    0.14066 (1) obj. -551.143 iterations 1
Cbc0038I Pass  10: suminf.    0.74618 (2) obj. -551.143 iterations 4
Cbc0038I Pass  11: suminf.    0.42857 (1) obj. -588.451 iterations 2
Cbc0038I Pass  12: suminf.    0.20213 (1) obj. -551.143 iterations 2
Cbc0038I Pass  13: suminf.    0.33333 (1) obj. -647.965 iterations 2
Cbc0038I Pass  14: suminf.    0.17612 (1) obj. -551.143 iterations 1
Cbc0038I Pass  15: suminf.    0.39009 (2) obj. -551.143 iterations 2
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -649.965 iterations 2
Cbc0038I Pass  17: suminf.    0.16599 (1) obj. -551.143 iterations 1
Cbc0038I Pass  18: suminf.    0.75439 (2) obj. -596.02 iterations 6
Cbc0038I Pass  19: suminf.    0.48233 (1) obj. -551.143 iterations 4
Cbc0038I Pass  20: suminf.    0.22222 (1) obj. -602.482 iterations 2
Cbc0038I Pass  21: suminf.    0.16800 (2) obj. -551.143 iterations 4
Cbc0038I Pass  22: suminf.    0.15190 (2) obj. -551.143 iterations 2
Cbc0038I Pass  23: suminf.    0.11765 (1) obj. -610.999 iterations 3
Cbc0038I Pass  24: suminf.    0.41133 (1) obj. -551.143 iterations 2
Cbc0038I Pass  25: suminf.    1.18838 (4) obj. -551.143 iterations 7
Cbc0038I Pass  26: suminf.    1.18838 (4) obj. -551.143 iterations 0
Cbc0038I Pass  27: suminf.    0.11765 (1) obj. -593.999 iterations 3
Cbc0038I Pass  28: suminf.    0.30254 (1) obj. -551.143 iterations 2
Cbc0038I Pass  29: suminf.    0.16667 (1) obj. -577.828 iterations 1
Cbc0038I Pass  30: suminf.    0.65305 (3) obj. -551.143 iterations 7
Cbc0038I Pass  31: suminf.    0.21677 (1) obj. -551.143 iterations 2
Cbc0038I Rounding solution of -563.58 is better than previous of -535.38

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -563.58 to -591.38 (0.01 seconds)
Cbc0038I Round again with cutoff of -611.705
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.14176 (6) obj. -611.705 iterations 1
Cbc0038I Pass  32: suminf.    0.33333 (1) obj. -666.965 iterations 6
Cbc0038I Pass  33: suminf.    0.38670 (1) obj. -611.705 iterations 1
Cbc0038I Pass  34: suminf.    0.42134 (3) obj. -611.705 iterations 4
Cbc0038I Pass  35: suminf.    0.19328 (2) obj. -621.23 iterations 2
Cbc0038I Pass  36: suminf.    0.07583 (1) obj. -611.705 iterations 2
Cbc0038I Pass  37: suminf.    0.05882 (1) obj. -615.171 iterations 1
Cbc0038I Pass  38: suminf.    1.17490 (4) obj. -611.705 iterations 8
Cbc0038I Pass  39: suminf.    0.65582 (2) obj. -611.705 iterations 2
Cbc0038I Pass  40: suminf.    0.41304 (1) obj. -611.705 iterations 2
Cbc0038I Pass  41: suminf.    0.44444 (1) obj. -639.834 iterations 1
Cbc0038I Pass  42: suminf.    1.20199 (5) obj. -611.705 iterations 9
Cbc0038I Pass  43: suminf.    1.20199 (5) obj. -611.705 iterations 0
Cbc0038I Pass  44: suminf.    0.33333 (1) obj. -647.965 iterations 7
Cbc0038I Pass  45: suminf.    0.48296 (1) obj. -611.705 iterations 1
Cbc0038I Pass  46: suminf.    0.47476 (5) obj. -611.705 iterations 7
Cbc0038I Pass  47: suminf.    0.47476 (5) obj. -611.705 iterations 0
Cbc0038I Pass  48: suminf.    0.48296 (1) obj. -611.705 iterations 5
Cbc0038I Pass  49: suminf.    0.63125 (5) obj. -611.705 iterations 5
Cbc0038I Pass  50: suminf.    0.63125 (5) obj. -611.705 iterations 0
Cbc0038I Pass  51: suminf.    0.51084 (5) obj. -611.705 iterations 2
Cbc0038I Pass  52: suminf.    0.41550 (4) obj. -615.635 iterations 2
Cbc0038I Pass  53: suminf.    0.36229 (2) obj. -611.705 iterations 6
Cbc0038I Pass  54: suminf.    0.36229 (2) obj. -611.705 iterations 0
Cbc0038I Pass  55: suminf.    0.33333 (1) obj. -647.965 iterations 2
Cbc0038I Pass  56: suminf.    0.48296 (1) obj. -611.705 iterations 1
Cbc0038I Pass  57: suminf.    0.83398 (3) obj. -611.705 iterations 2
Cbc0038I Pass  58: suminf.    0.45864 (4) obj. -611.705 iterations 3
Cbc0038I Pass  59: suminf.    0.45864 (4) obj. -611.705 iterations 0
Cbc0038I Pass  60: suminf.    0.47282 (1) obj. -611.705 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 9 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -591.38 - took 0.01 seconds
Cbc0012I Integer solution of -591.38 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 11 added rows had average density of 8.8181818
Cbc0013I At root node, 11 cuts changed objective from -692.99971 to -592.01557 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 246 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 451 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 90 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 195 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 245 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0001I Search completed - best objective -591.38, took 1260 iterations and 0 nodes (0.14 seconds)
Cbc0032I Strong branching done 2 times (7 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 12 (-3) columns and 48 (-27) elements
Clp1000I sum of infeasibilities 1.85811e-06 - average 1.16132e-07, 4 fixed columns
Coin0506I Presolve 10 (-6) rows, 7 (-5) columns and 27 (-21) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Coin0511I After Postsolve, objective 699.22922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Clp0000I Optimal - objective value 699.22922
Coin0511I After Postsolve, objective 699.22922, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 699.2292163 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 49 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.32879
Cbc0038I Pass   1: suminf.    0.33333 (1) obj. -666.965 iterations 3
Cbc0038I Solution found of -535.38
Cbc0038I Relaxing continuous gives -535.38
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -550.679
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.33333 (1) obj. -666.965 iterations 0
Cbc0038I Pass   3: suminf.    0.07790 (1) obj. -550.679 iterations 2
Cbc0038I Pass   4: suminf.    0.41379 (1) obj. -616.646 iterations 1
Cbc0038I Pass   5: suminf.    0.12500 (1) obj. -612.134 iterations 4
Cbc0038I Pass   6: suminf.    0.12500 (1) obj. -612.134 iterations 0
Cbc0038I Pass   7: suminf.    0.39884 (2) obj. -550.679 iterations 5
Cbc0038I Pass   8: suminf.    0.17647 (1) obj. -618.526 iterations 3
Cbc0038I Pass   9: suminf.    0.17647 (1) obj. -618.526 iterations 0
Cbc0038I Pass  10: suminf.    0.45765 (2) obj. -550.679 iterations 4
Cbc0038I Pass  11: suminf.    0.44118 (1) obj. -550.679 iterations 2
Cbc0038I Pass  12: suminf.    0.38889 (1) obj. -584.219 iterations 2
Cbc0038I Pass  13: suminf.    0.45391 (1) obj. -550.679 iterations 4
Cbc0038I Pass  14: suminf.    0.38889 (1) obj. -584.219 iterations 4
Cbc0038I Pass  15: suminf.    0.33333 (1) obj. -595.118 iterations 3
Cbc0038I Pass  16: suminf.    0.44152 (1) obj. -550.679 iterations 2
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. -595.118 iterations 2
Cbc0038I Pass  18: suminf.    0.11765 (1) obj. -627.154 iterations 2
Cbc0038I Pass  19: suminf.    0.11765 (1) obj. -627.154 iterations 0
Cbc0038I Pass  20: suminf.    0.48600 (1) obj. -550.679 iterations 3
Cbc0038I Pass  21: suminf.    0.48276 (1) obj. -551.316 iterations 1
Cbc0038I Pass  22: suminf.    0.48276 (1) obj. -551.316 iterations 0
Cbc0038I Pass  23: suminf.    0.06250 (1) obj. -620.305 iterations 2
Cbc0038I Pass  24: suminf.    0.06250 (1) obj. -620.305 iterations 0
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -553.13 iterations 4
Cbc0038I Solution found of -553.13
Cbc0038I Relaxing continuous gives -553.13
Cbc0038I Rounding solution of -563.58 is better than previous of -553.13

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -563.58 to -569.13 (0.01 seconds)
Cbc0038I Round again with cutoff of -592.978
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  26: suminf.    0.33333 (1) obj. -666.965 iterations 0
Cbc0038I Pass  27: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  28: suminf.    0.29182 (1) obj. -592.978 iterations 0
Cbc0038I Pass  29: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  30: suminf.    0.68780 (2) obj. -592.978 iterations 2
Cbc0038I Pass  31: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  32: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  33: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  34: suminf.    0.29182 (1) obj. -592.978 iterations 3
Cbc0038I Pass  35: suminf.    0.33333 (1) obj. -666.965 iterations 1
Cbc0038I Pass  36: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  37: suminf.    0.20548 (2) obj. -592.978 iterations 7
Cbc0038I Pass  38: suminf.    0.20021 (2) obj. -592.978 iterations 1
Cbc0038I Pass  39: suminf.    0.21053 (1) obj. -597.228 iterations 4
Cbc0038I Pass  40: suminf.    0.31401 (1) obj. -592.978 iterations 4
Cbc0038I Pass  41: suminf.    0.11765 (1) obj. -623.588 iterations 2
Cbc0038I Pass  42: suminf.    0.29182 (1) obj. -592.978 iterations 3
Cbc0038I Pass  43: suminf.    0.33333 (1) obj. -666.965 iterations 1
Cbc0038I Pass  44: suminf.    0.29182 (1) obj. -592.978 iterations 1
Cbc0038I Pass  45: suminf.    0.21053 (1) obj. -601.526 iterations 4
Cbc0038I Pass  46: suminf.    0.25610 (1) obj. -592.978 iterations 2
Cbc0038I Pass  47: suminf.    0.22222 (1) obj. -599.665 iterations 1
Cbc0038I Pass  48: suminf.    0.44413 (2) obj. -592.978 iterations 1
Cbc0038I Pass  49: suminf.    0.22222 (1) obj. -599.665 iterations 1
Cbc0038I Pass  50: suminf.    0.93619 (3) obj. -592.978 iterations 2
Cbc0038I Pass  51: suminf.    1.20403 (4) obj. -592.978 iterations 3
Cbc0038I Pass  52: suminf.    0.68780 (2) obj. -592.978 iterations 3
Cbc0038I Pass  53: suminf.    0.05882 (1) obj. -618.465 iterations 3
Cbc0038I Pass  54: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I Pass  55: suminf.    0.05882 (1) obj. -618.465 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -569.13 - took 0.01 seconds
Cbc0012I Integer solution of -569.13 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 12 columns, reduced to 8 rows 7 columns
Cbc0031I 7 added rows had average density of 8.4285714
Cbc0013I At root node, 7 cuts changed objective from -688.36504 to -586.67043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 151 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 285 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -569.13, took 952 iterations and 4 nodes (0.07 seconds)
Cbc0032I Strong branching done 22 times (107 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 22 (-5) columns and 103 (-51) elements
Clp1000I sum of infeasibilities 2.53931e-09 - average 1.58707e-10, 6 fixed columns
Coin0506I Presolve 14 (-2) rows, 16 (-6) columns and 69 (-34) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 719.39737
Clp0000I Optimal - objective value 719.39737
Coin0511I After Postsolve, objective 719.39737, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9491279 - largest nonzero change 0 ( 0%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 720.06002
Clp0000I Optimal - objective value 720.06002
Clp0000I Optimal - objective value 720.06002
Coin0511I After Postsolve, objective 720.06002, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 720.0600175 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 22 columns (22 integer (22 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.495%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.80181
Cbc0038I Pass   1: suminf.    0.88452 (5) obj. -561.453 iterations 5
Cbc0038I Solution found of -535.38
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -551.179
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.88452 (5) obj. -561.453 iterations 0
Cbc0038I Pass   3: suminf.    0.08005 (1) obj. -551.179 iterations 12
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -666.965 iterations 2
Cbc0038I Pass   5: suminf.    0.70370 (2) obj. -665.086 iterations 3
Cbc0038I Pass   6: suminf.    0.12564 (1) obj. -551.179 iterations 5
Cbc0038I Pass   7: suminf.    0.33333 (1) obj. -657.965 iterations 2
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -649.965 iterations 3
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -649.965 iterations 1
Cbc0038I Pass  10: suminf.    0.16618 (1) obj. -551.179 iterations 2
Cbc0038I Pass  11: suminf.    1.06183 (3) obj. -551.179 iterations 4
Cbc0038I Pass  12: suminf.    0.41176 (2) obj. -598.655 iterations 2
Cbc0038I Pass  13: suminf.    0.17647 (1) obj. -591.644 iterations 1
Cbc0038I Pass  14: suminf.    0.37501 (1) obj. -551.179 iterations 2
Cbc0038I Pass  15: suminf.    0.29412 (2) obj. -589.408 iterations 4
Cbc0038I Pass  16: suminf.    0.29412 (2) obj. -589.408 iterations 0
Cbc0038I Pass  17: suminf.    0.33104 (1) obj. -551.179 iterations 3
Cbc0038I Pass  18: suminf.    0.17647 (1) obj. -581.535 iterations 1
Cbc0038I Pass  19: suminf.    0.54412 (3) obj. -599.827 iterations 2
Cbc0038I Pass  20: suminf.    0.27941 (2) obj. -593.197 iterations 1
Cbc0038I Pass  21: suminf.    0.66662 (4) obj. -551.179 iterations 3
Cbc0038I Pass  22: suminf.    0.41667 (3) obj. -599.236 iterations 2
Cbc0038I Pass  23: suminf.    0.66662 (4) obj. -551.179 iterations 2
Cbc0038I Pass  24: suminf.    0.41667 (3) obj. -599.236 iterations 2
Cbc0038I Pass  25: suminf.    0.33104 (1) obj. -551.179 iterations 3
Cbc0038I Pass  26: suminf.    0.17647 (1) obj. -581.535 iterations 1
Cbc0038I Pass  27: suminf.    0.21959 (4) obj. -551.179 iterations 7
Cbc0038I Pass  28: suminf.    0.08981 (2) obj. -551.179 iterations 2
Cbc0038I Pass  29: suminf.    0.11765 (1) obj. -552.558 iterations 2
Cbc0038I Pass  30: suminf.    0.11088 (1) obj. -551.179 iterations 1
Cbc0038I Pass  31: suminf.    0.10943 (1) obj. -551.179 iterations 2
Cbc0038I Rounding solution of -563.58 is better than previous of -535.38

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -589.537
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.12275 (6) obj. -589.537 iterations 1
Cbc0038I Pass  32: suminf.    0.33333 (1) obj. -666.965 iterations 6
Cbc0038I Pass  33: suminf.    0.27439 (1) obj. -589.537 iterations 2
Cbc0038I Pass  34: suminf.    1.49919 (6) obj. -589.537 iterations 11
Cbc0038I Pass  35: suminf.    0.92763 (3) obj. -594.774 iterations 5
Cbc0038I Pass  36: suminf.    0.20823 (1) obj. -589.537 iterations 7
Cbc0038I Pass  37: suminf.    0.11765 (1) obj. -607.999 iterations 2
Cbc0038I Pass  38: suminf.    1.47333 (4) obj. -589.537 iterations 8
Cbc0038I Pass  39: suminf.    0.59553 (3) obj. -589.537 iterations 2
Cbc0038I Pass  40: suminf.    0.38151 (3) obj. -623.396 iterations 2
Cbc0038I Pass  41: suminf.    0.18460 (1) obj. -589.537 iterations 4
Cbc0038I Pass  42: suminf.    0.05882 (1) obj. -615.171 iterations 2
Cbc0038I Pass  43: suminf.    0.65438 (3) obj. -589.537 iterations 6
Cbc0038I Pass  44: suminf.    0.25507 (2) obj. -589.537 iterations 1
Cbc0038I Pass  45: suminf.    0.29872 (1) obj. -589.537 iterations 3
Cbc0038I Pass  46: suminf.    0.29872 (1) obj. -589.537 iterations 0
Cbc0038I Pass  47: suminf.    0.44444 (1) obj. -639.834 iterations 2
Cbc0038I Pass  48: suminf.    0.30073 (1) obj. -589.537 iterations 1
Cbc0038I Pass  49: suminf.    0.51471 (3) obj. -607.367 iterations 9
Cbc0038I Pass  50: suminf.    0.51471 (3) obj. -607.367 iterations 0
Cbc0038I Pass  51: suminf.    0.16898 (1) obj. -589.537 iterations 3
Cbc0038I Pass  52: suminf.    0.11765 (1) obj. -599.999 iterations 1
Cbc0038I Pass  53: suminf.    0.90507 (3) obj. -589.537 iterations 2
Cbc0038I Pass  54: suminf.    0.36052 (1) obj. -589.537 iterations 4
Cbc0038I Pass  55: suminf.    0.36052 (1) obj. -589.537 iterations 0
Cbc0038I Pass  56: suminf.    0.33333 (1) obj. -649.965 iterations 1
Cbc0038I Pass  57: suminf.    0.27774 (2) obj. -589.537 iterations 6
Cbc0038I Pass  58: suminf.    0.05882 (1) obj. -598.171 iterations 2
Cbc0038I Pass  59: suminf.    0.10118 (1) obj. -589.537 iterations 1
Cbc0038I Pass  60: suminf.    0.24706 (2) obj. -604.665 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 10 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -563.58 to -569.13 (0.02 seconds)
Cbc0038I Round again with cutoff of -620.685
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  60: suminf.    1.38695 (6) obj. -620.685 iterations 0
Cbc0038I Pass  61: suminf.    0.33333 (1) obj. -666.965 iterations 6
Cbc0038I Pass  62: suminf.    0.43219 (1) obj. -620.685 iterations 2
Cbc0038I Pass  63: suminf.    0.39636 (3) obj. -620.685 iterations 5
Cbc0038I Pass  64: suminf.    0.45753 (1) obj. -620.685 iterations 4
Cbc0038I Pass  65: suminf.    0.45753 (1) obj. -620.685 iterations 0
Cbc0038I Pass  66: suminf.    0.33333 (1) obj. -661.965 iterations 2
Cbc0038I Pass  67: suminf.    0.72323 (4) obj. -620.685 iterations 5
Cbc0038I Pass  68: suminf.    0.17647 (2) obj. -626.642 iterations 3
Cbc0038I Pass  69: suminf.    0.07376 (2) obj. -620.685 iterations 4
Cbc0038I Pass  70: suminf.    0.07376 (2) obj. -620.685 iterations 0
Cbc0038I Pass  71: suminf.    0.33333 (1) obj. -666.965 iterations 3
Cbc0038I Pass  72: suminf.    0.43219 (1) obj. -620.685 iterations 2
Cbc0038I Pass  73: suminf.    0.75720 (2) obj. -620.685 iterations 3
Cbc0038I Pass  74: suminf.    0.33333 (1) obj. -654.965 iterations 3
Cbc0038I Pass  75: suminf.    0.49299 (1) obj. -620.685 iterations 2
Cbc0038I Pass  76: suminf.    0.29984 (3) obj. -620.685 iterations 6
Cbc0038I Pass  77: suminf.    0.29984 (3) obj. -620.685 iterations 0
Cbc0038I Pass  78: suminf.    0.76891 (4) obj. -622.373 iterations 3
Cbc0038I Pass  79: suminf.    0.76891 (4) obj. -622.373 iterations 0
Cbc0038I Pass  80: suminf.    0.31354 (2) obj. -620.685 iterations 5
Cbc0038I Pass  81: suminf.    0.31354 (2) obj. -620.685 iterations 0
Cbc0038I Pass  82: suminf.    0.33333 (1) obj. -654.965 iterations 2
Cbc0038I Pass  83: suminf.    0.49299 (1) obj. -620.685 iterations 1
Cbc0038I Pass  84: suminf.    0.96409 (3) obj. -620.685 iterations 2
Cbc0038I Pass  85: suminf.    0.96409 (3) obj. -620.685 iterations 0
Cbc0038I Pass  86: suminf.    1.69346 (5) obj. -620.685 iterations 2
Cbc0038I Pass  87: suminf.    0.96409 (3) obj. -620.685 iterations 1
Cbc0038I Pass  88: suminf.    0.46039 (4) obj. -620.685 iterations 2
Cbc0038I Pass  89: suminf.    0.49299 (1) obj. -620.685 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 22 columns, reduced to 9 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -569.13 - took 0.02 seconds
Cbc0012I Integer solution of -569.13 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 16 rows 22 columns, reduced to 4 rows 7 columns
Cbc0031I 7 added rows had average density of 10.714286
Cbc0013I At root node, 7 cuts changed objective from -693.36348 to -569.30132 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 307 row cuts average 2.5 elements, 4 column cuts (4 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 337 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 219 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.703 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -569.13 best solution, best possible -569.30132 (1.28 seconds)
Cbc0001I Search completed - best objective -569.13, took 1137 iterations and 4 nodes (1.29 seconds)
Cbc0032I Strong branching done 28 times (100 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.82   (Wallclock seconds):       1.29

