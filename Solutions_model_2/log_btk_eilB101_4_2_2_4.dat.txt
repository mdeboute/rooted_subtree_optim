Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 3.6502e-05 - average 1.98381e-07, 15 fixed columns
Coin0506I Presolve 156 (-28) rows, 86 (-15) columns and 476 (-86) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 1.6441322 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Coin0511I After Postsolve, objective 35.132672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Coin0511I After Postsolve, objective 35.132672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.13267152 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 565 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.47514
Cbc0038I Solution found of 4.22284
Cbc0038I Relaxing continuous gives -3.7823
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -3.7823 to -8.02183 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.6684
Cbc0038I Pass   1: suminf.    1.38998 (42) obj. -10.6684 iterations 47
Cbc0038I Pass   2: suminf.    2.59052 (8) obj. -10.6684 iterations 41
Cbc0038I Pass   3: suminf.    2.59052 (8) obj. -10.6684 iterations 0
Cbc0038I Pass   4: suminf.    2.51560 (8) obj. -10.6684 iterations 22
Cbc0038I Pass   5: suminf.    2.41008 (8) obj. -10.6684 iterations 1
Cbc0038I Pass   6: suminf.    1.94087 (6) obj. -10.6684 iterations 5
Cbc0038I Pass   7: suminf.    1.94087 (6) obj. -10.6684 iterations 1
Cbc0038I Pass   8: suminf.    2.69863 (7) obj. -10.6684 iterations 12
Cbc0038I Pass   9: suminf.    1.21836 (9) obj. -10.6684 iterations 11
Cbc0038I Pass  10: suminf.    1.21836 (9) obj. -10.6684 iterations 0
Cbc0038I Pass  11: suminf.    1.59452 (6) obj. -10.6684 iterations 21
Cbc0038I Pass  12: suminf.    0.77541 (3) obj. -10.6684 iterations 11
Cbc0038I Pass  13: suminf.    0.76778 (3) obj. -10.6684 iterations 1
Cbc0038I Pass  14: suminf.    1.48259 (5) obj. -10.6684 iterations 10
Cbc0038I Pass  15: suminf.    2.08546 (6) obj. -10.6684 iterations 13
Cbc0038I Pass  16: suminf.    1.45750 (5) obj. -10.6684 iterations 13
Cbc0038I Pass  17: suminf.    1.45750 (5) obj. -10.6684 iterations 0
Cbc0038I Pass  18: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  19: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  20: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I Pass  21: suminf.    1.45182 (5) obj. -10.6684 iterations 12
Cbc0038I Pass  22: suminf.    1.45750 (5) obj. -10.6684 iterations 2
Cbc0038I Pass  23: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  24: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  25: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I Pass  26: suminf.    1.45182 (5) obj. -10.6684 iterations 12
Cbc0038I Pass  27: suminf.    1.45750 (5) obj. -10.6684 iterations 2
Cbc0038I Pass  28: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  29: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  30: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 97 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -8.02183 to -8.42782 (0.09 seconds)
Cbc0038I Round again with cutoff of -15.4322
Cbc0038I Pass  30: suminf.    2.35155 (42) obj. -15.4322 iterations 0
Cbc0038I Pass  31: suminf.    2.19158 (9) obj. -15.4322 iterations 46
Cbc0038I Pass  32: suminf.    2.19158 (9) obj. -15.4322 iterations 0
Cbc0038I Pass  33: suminf.    3.82686 (14) obj. -15.4322 iterations 15
Cbc0038I Pass  34: suminf.    2.99877 (11) obj. -15.4322 iterations 12
Cbc0038I Pass  35: suminf.    3.07395 (9) obj. -15.4322 iterations 34
Cbc0038I Pass  36: suminf.    2.51920 (8) obj. -15.4322 iterations 4
Cbc0038I Pass  37: suminf.    1.28691 (6) obj. -15.4322 iterations 9
Cbc0038I Pass  38: suminf.    1.24696 (6) obj. -15.4322 iterations 6
Cbc0038I Pass  39: suminf.    3.01765 (9) obj. -15.4322 iterations 18
Cbc0038I Pass  40: suminf.    2.04329 (7) obj. -15.4322 iterations 10
Cbc0038I Pass  41: suminf.    1.97804 (7) obj. -15.4322 iterations 3
Cbc0038I Pass  42: suminf.    1.95730 (7) obj. -15.4322 iterations 5
Cbc0038I Pass  43: suminf.    2.57409 (8) obj. -15.4322 iterations 19
Cbc0038I Pass  44: suminf.    2.57409 (8) obj. -15.4322 iterations 0
Cbc0038I Pass  45: suminf.    2.64558 (9) obj. -15.4322 iterations 11
Cbc0038I Pass  46: suminf.    2.63652 (9) obj. -15.4322 iterations 5
Cbc0038I Pass  47: suminf.    3.04161 (11) obj. -15.4322 iterations 12
Cbc0038I Pass  48: suminf.    2.18642 (7) obj. -15.4322 iterations 9
Cbc0038I Pass  49: suminf.    2.94472 (8) obj. -15.4322 iterations 9
Cbc0038I Pass  50: suminf.    2.93198 (9) obj. -15.4322 iterations 6
Cbc0038I Pass  51: suminf.    2.05922 (9) obj. -15.4322 iterations 22
Cbc0038I Pass  52: suminf.    1.51440 (8) obj. -15.4322 iterations 4
Cbc0038I Pass  53: suminf.    2.32078 (9) obj. -15.4322 iterations 17
Cbc0038I Pass  54: suminf.    2.32869 (8) obj. -15.4322 iterations 1
Cbc0038I Pass  55: suminf.    2.62905 (8) obj. -15.4322 iterations 24
Cbc0038I Pass  56: suminf.    1.87931 (7) obj. -15.4322 iterations 8
Cbc0038I Pass  57: suminf.    1.55791 (7) obj. -15.4322 iterations 13
Cbc0038I Pass  58: suminf.    1.55791 (7) obj. -15.4322 iterations 0
Cbc0038I Pass  59: suminf.    2.29791 (15) obj. -15.4322 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 104 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -8.42782 - took 0.14 seconds
Cbc0012I Integer solution of -8.42782 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0031I 26 added rows had average density of 64.076923
Cbc0013I At root node, 26 cuts changed objective from -34.487118 to -28.764958 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12939 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2010 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.42782 best solution, best possible -28.764958 (1.26 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -8.84145 found by RINS after 9593 iterations and 44 nodes (1.55 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 41 rows 31 columns
Cbc0012I Integer solution of -8.98281 found by DiveCoefficient after 11467 iterations and 101 nodes (1.70 seconds)
Cbc0001I Search completed - best objective -8.982810000000001, took 11922 iterations and 132 nodes (1.72 seconds)
Cbc0032I Strong branching done 1336 times (23181 iterations), fathomed 9 nodes and fixed 41 variables
Cbc0035I Maximum depth 39, 307 variables fixed on reduced cost
Total time (CPU seconds):       1.68   (Wallclock seconds):       1.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-79) rows, 141 (-61) columns and 2748 (-2905) elements
Clp1000I sum of infeasibilities 2.74585e-08 - average 2.19668e-10, 64 fixed columns
Coin0506I Presolve 63 (-62) rows, 77 (-64) columns and 274 (-2474) elements
Clp0006I 0  Obj -8.9930887 Dual inf 4.685921 (74)
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 1.1697373 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value -7.9154189
Clp0000I Optimal - objective value -7.9154189
Coin0511I After Postsolve, objective -7.9154189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.9154189 Dual inf 31.464375 (41)
Clp0014I Perturbing problem by 0.001% of 1.6432961 - largest nonzero change 1.2478066e-05 ( 0.0011371494%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 49.356848
Clp0000I Optimal - objective value 49.356848
Clp0000I Optimal - objective value 49.356848
Coin0511I After Postsolve, objective 49.356848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.35684821 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 144 columns (144 integer (144 of which binary)) and 2767 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.214%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.18193
Cbc0038I Pass   1: suminf.    2.37259 (37) obj. -45.2119 iterations 18
Cbc0038I Pass   2: suminf.    0.38628 (11) obj. -3.67942 iterations 21
Cbc0038I Solution found of 6.9343
Cbc0038I Rounding solution of -0.25781 is better than previous of 6.9343

Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4.98352
Cbc0038I Pass   3: suminf.    2.37259 (37) obj. -45.2119 iterations 0
Cbc0038I Pass   4: suminf.    0.66740 (9) obj. -4.98352 iterations 26
Cbc0038I Pass   5: suminf.    0.32245 (8) obj. -4.98352 iterations 9
Cbc0038I Pass   6: suminf.    0.45332 (3) obj. -4.98352 iterations 10
Cbc0038I Pass   7: suminf.    0.36643 (3) obj. -4.98352 iterations 1
Cbc0038I Pass   8: suminf.    0.45844 (3) obj. -4.98352 iterations 5
Cbc0038I Pass   9: suminf.    1.23325 (12) obj. -4.98352 iterations 34
Cbc0038I Pass  10: suminf.    0.59913 (11) obj. -4.98352 iterations 5
Cbc0038I Pass  11: suminf.    1.71299 (6) obj. -4.98352 iterations 20
Cbc0038I Pass  12: suminf.    1.14509 (9) obj. -4.98352 iterations 22
Cbc0038I Pass  13: suminf.    1.34315 (7) obj. -4.98352 iterations 16
Cbc0038I Pass  14: suminf.    1.12300 (6) obj. -4.98352 iterations 9
Cbc0038I Pass  15: suminf.    1.15661 (6) obj. -4.98352 iterations 8
Cbc0038I Pass  16: suminf.    1.46480 (12) obj. -4.98352 iterations 38
Cbc0038I Pass  17: suminf.    1.18869 (10) obj. -4.98352 iterations 19
Cbc0038I Pass  18: suminf.    1.20109 (6) obj. -4.98352 iterations 19
Cbc0038I Pass  19: suminf.    1.15727 (6) obj. -4.98352 iterations 4
Cbc0038I Pass  20: suminf.    1.60883 (6) obj. -4.98352 iterations 33
Cbc0038I Pass  21: suminf.    1.60883 (6) obj. -4.98352 iterations 0
Cbc0038I Pass  22: suminf.    1.41508 (6) obj. -4.98352 iterations 8
Cbc0038I Pass  23: suminf.    1.37975 (8) obj. -4.98352 iterations 11
Cbc0038I Pass  24: suminf.    0.95607 (5) obj. -4.98352 iterations 15
Cbc0038I Pass  25: suminf.    0.63148 (4) obj. -4.98352 iterations 6
Cbc0038I Pass  26: suminf.    0.90350 (5) obj. -4.98352 iterations 17
Cbc0038I Pass  27: suminf.    0.85899 (4) obj. -4.98352 iterations 8
Cbc0038I Pass  28: suminf.    0.70848 (5) obj. -4.98352 iterations 10
Cbc0038I Pass  29: suminf.    1.38517 (10) obj. -4.98352 iterations 21
Cbc0038I Pass  30: suminf.    1.09698 (9) obj. -4.98352 iterations 10
Cbc0038I Pass  31: suminf.    1.09698 (9) obj. -4.98352 iterations 1
Cbc0038I Pass  32: suminf.    1.57089 (15) obj. -4.98352 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 22 rows 30 columns
Cbc0038I Mini branch and bound improved solution from 6.9343 to -2.33807 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.4896
Cbc0038I Pass  32: suminf.    2.37259 (37) obj. -45.2119 iterations 0
Cbc0038I Pass  33: suminf.    0.57574 (18) obj. -13.4896 iterations 24
Cbc0038I Pass  34: suminf.    0.57574 (18) obj. -13.4896 iterations 0
Cbc0038I Pass  35: suminf.    1.02824 (7) obj. -13.4896 iterations 30
Cbc0038I Pass  36: suminf.    1.02824 (7) obj. -13.4896 iterations 0
Cbc0038I Pass  37: suminf.    1.72526 (8) obj. -13.4896 iterations 16
Cbc0038I Pass  38: suminf.    1.72526 (8) obj. -13.4896 iterations 7
Cbc0038I Pass  39: suminf.    1.28228 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  40: suminf.    0.92767 (5) obj. -13.4896 iterations 6
Cbc0038I Pass  41: suminf.    0.55950 (6) obj. -13.4896 iterations 6
Cbc0038I Pass  42: suminf.    1.15416 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  43: suminf.    1.02824 (7) obj. -13.4896 iterations 4
Cbc0038I Pass  44: suminf.    1.72526 (8) obj. -13.4896 iterations 15
Cbc0038I Pass  45: suminf.    1.72526 (8) obj. -13.4896 iterations 7
Cbc0038I Pass  46: suminf.    1.28228 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  47: suminf.    0.92767 (5) obj. -13.4896 iterations 6
Cbc0038I Pass  48: suminf.    0.55950 (6) obj. -13.4896 iterations 6
Cbc0038I Pass  49: suminf.    1.15416 (7) obj. -13.4896 iterations 11
Cbc0038I Pass  50: suminf.    1.02824 (7) obj. -13.4896 iterations 4
Cbc0038I Pass  51: suminf.    1.72526 (8) obj. -13.4896 iterations 15
Cbc0038I Pass  52: suminf.    1.72526 (8) obj. -13.4896 iterations 7
Cbc0038I Pass  53: suminf.    1.28228 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  54: suminf.    0.92767 (5) obj. -13.4896 iterations 6
Cbc0038I Pass  55: suminf.    0.55950 (6) obj. -13.4896 iterations 6
Cbc0038I Pass  56: suminf.    1.15416 (7) obj. -13.4896 iterations 11
Cbc0038I Pass  57: suminf.    1.02824 (7) obj. -13.4896 iterations 4
Cbc0038I Pass  58: suminf.    1.72526 (8) obj. -13.4896 iterations 15
Cbc0038I Pass  59: suminf.    1.72526 (8) obj. -13.4896 iterations 7
Cbc0038I Pass  60: suminf.    1.28228 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  61: suminf.    0.92767 (5) obj. -13.4896 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.33807 - took 0.05 seconds
Cbc0012I Integer solution of -2.33807 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 1 rows 4 columns
Cbc0031I 54 added rows had average density of 46.277778
Cbc0013I At root node, 54 cuts changed objective from -47.514056 to -15.696449 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11135 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2041 row cuts average 135.8 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1058 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 37 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1634 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 201 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.407 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.33807 best solution, best possible -15.696449 (2.15 seconds)
Cbc0010I After 5 nodes, 6 on tree, -2.33807 best solution, best possible -15.696449 (2.90 seconds)
Cbc0010I After 11 nodes, 12 on tree, -2.33807 best solution, best possible -15.696449 (3.60 seconds)
Cbc0012I Integer solution of -6.59418 found by DiveCoefficient after 7074 iterations and 16 nodes (3.86 seconds)
Cbc0004I Integer solution of -7.06709 found after 7407 iterations and 23 nodes (4.20 seconds)
Cbc0010I After 28 nodes, 13 on tree, -7.06709 best solution, best possible -15.696449 (4.36 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 43 rows 52 columns
Cbc0010I After 48 nodes, 15 on tree, -7.06709 best solution, best possible -15.696449 (5.08 seconds)
Cbc0010I After 66 nodes, 15 on tree, -7.06709 best solution, best possible -15.696449 (5.80 seconds)
Cbc0016I Integer solution of -7.3008 found by strong branching after 9487 iterations and 76 nodes (6.19 seconds)
Cbc0010I After 85 nodes, 13 on tree, -7.3008 best solution, best possible -15.696449 (6.54 seconds)
Cbc0004I Integer solution of -7.52704 found after 10252 iterations and 90 nodes (6.70 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 5 rows 8 columns
Cbc0016I Integer solution of -7.55331 found by strong branching after 10516 iterations and 97 nodes (7.01 seconds)
Cbc0010I After 102 nodes, 13 on tree, -7.55331 best solution, best possible -15.696449 (7.25 seconds)
Cbc0016I Integer solution of -8.60604 found by strong branching after 10942 iterations and 105 nodes (7.36 seconds)
Cbc0016I Integer solution of -8.81838 found by strong branching after 11452 iterations and 116 nodes (7.68 seconds)
Cbc0012I Integer solution of -8.81997 found by rounding after 11564 iterations and 117 nodes (7.76 seconds)
Cbc0004I Integer solution of -8.98281 found after 11824 iterations and 123 nodes (7.89 seconds)
Cbc0010I After 124 nodes, 9 on tree, -8.98281 best solution, best possible -15.696449 (7.96 seconds)
Cbc0001I Search completed - best objective -8.982810000000001, took 13046 iterations and 144 nodes (8.65 seconds)
Cbc0032I Strong branching done 1592 times (27820 iterations), fathomed 14 nodes and fixed 37 variables
Cbc0035I Maximum depth 23, 386 variables fixed on reduced cost
Total time (CPU seconds):       6.26   (Wallclock seconds):       8.68

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 3.6502e-05 - average 1.98381e-07, 15 fixed columns
Coin0506I Presolve 156 (-28) rows, 86 (-15) columns and 476 (-86) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 1.6441322 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Coin0511I After Postsolve, objective 35.132672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Clp0000I Optimal - objective value 35.132672
Coin0511I After Postsolve, objective 35.132672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.13267152 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 565 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 7.47514
Cbc0038I Solution found of 4.22284
Cbc0038I Relaxing continuous gives -3.7823
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 78 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -3.7823 to -8.02183 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.6684
Cbc0038I Pass   1: suminf.    1.38998 (42) obj. -10.6684 iterations 47
Cbc0038I Pass   2: suminf.    2.59052 (8) obj. -10.6684 iterations 41
Cbc0038I Pass   3: suminf.    2.59052 (8) obj. -10.6684 iterations 0
Cbc0038I Pass   4: suminf.    2.51560 (8) obj. -10.6684 iterations 22
Cbc0038I Pass   5: suminf.    2.41008 (8) obj. -10.6684 iterations 1
Cbc0038I Pass   6: suminf.    1.94087 (6) obj. -10.6684 iterations 5
Cbc0038I Pass   7: suminf.    1.94087 (6) obj. -10.6684 iterations 1
Cbc0038I Pass   8: suminf.    2.69863 (7) obj. -10.6684 iterations 12
Cbc0038I Pass   9: suminf.    1.21836 (9) obj. -10.6684 iterations 11
Cbc0038I Pass  10: suminf.    1.21836 (9) obj. -10.6684 iterations 0
Cbc0038I Pass  11: suminf.    1.59452 (6) obj. -10.6684 iterations 21
Cbc0038I Pass  12: suminf.    0.77541 (3) obj. -10.6684 iterations 11
Cbc0038I Pass  13: suminf.    0.76778 (3) obj. -10.6684 iterations 1
Cbc0038I Pass  14: suminf.    1.48259 (5) obj. -10.6684 iterations 10
Cbc0038I Pass  15: suminf.    2.08546 (6) obj. -10.6684 iterations 13
Cbc0038I Pass  16: suminf.    1.45750 (5) obj. -10.6684 iterations 13
Cbc0038I Pass  17: suminf.    1.45750 (5) obj. -10.6684 iterations 0
Cbc0038I Pass  18: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  19: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  20: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I Pass  21: suminf.    1.45182 (5) obj. -10.6684 iterations 12
Cbc0038I Pass  22: suminf.    1.45750 (5) obj. -10.6684 iterations 2
Cbc0038I Pass  23: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  24: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  25: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I Pass  26: suminf.    1.45182 (5) obj. -10.6684 iterations 12
Cbc0038I Pass  27: suminf.    1.45750 (5) obj. -10.6684 iterations 2
Cbc0038I Pass  28: suminf.    2.05719 (5) obj. -10.6684 iterations 8
Cbc0038I Pass  29: suminf.    1.77643 (4) obj. -10.6684 iterations 3
Cbc0038I Pass  30: suminf.    1.77643 (4) obj. -10.6684 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 97 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -8.02183 to -8.42782 (0.11 seconds)
Cbc0038I Round again with cutoff of -15.4322
Cbc0038I Pass  30: suminf.    2.35155 (42) obj. -15.4322 iterations 0
Cbc0038I Pass  31: suminf.    2.19158 (9) obj. -15.4322 iterations 46
Cbc0038I Pass  32: suminf.    2.19158 (9) obj. -15.4322 iterations 0
Cbc0038I Pass  33: suminf.    3.82686 (14) obj. -15.4322 iterations 15
Cbc0038I Pass  34: suminf.    2.99877 (11) obj. -15.4322 iterations 12
Cbc0038I Pass  35: suminf.    3.07395 (9) obj. -15.4322 iterations 34
Cbc0038I Pass  36: suminf.    2.51920 (8) obj. -15.4322 iterations 4
Cbc0038I Pass  37: suminf.    1.28691 (6) obj. -15.4322 iterations 9
Cbc0038I Pass  38: suminf.    1.24696 (6) obj. -15.4322 iterations 6
Cbc0038I Pass  39: suminf.    3.01765 (9) obj. -15.4322 iterations 18
Cbc0038I Pass  40: suminf.    2.04329 (7) obj. -15.4322 iterations 10
Cbc0038I Pass  41: suminf.    1.97804 (7) obj. -15.4322 iterations 3
Cbc0038I Pass  42: suminf.    1.95730 (7) obj. -15.4322 iterations 5
Cbc0038I Pass  43: suminf.    2.57409 (8) obj. -15.4322 iterations 19
Cbc0038I Pass  44: suminf.    2.57409 (8) obj. -15.4322 iterations 0
Cbc0038I Pass  45: suminf.    2.64558 (9) obj. -15.4322 iterations 11
Cbc0038I Pass  46: suminf.    2.63652 (9) obj. -15.4322 iterations 5
Cbc0038I Pass  47: suminf.    3.04161 (11) obj. -15.4322 iterations 12
Cbc0038I Pass  48: suminf.    2.18642 (7) obj. -15.4322 iterations 9
Cbc0038I Pass  49: suminf.    2.94472 (8) obj. -15.4322 iterations 9
Cbc0038I Pass  50: suminf.    2.93198 (9) obj. -15.4322 iterations 6
Cbc0038I Pass  51: suminf.    2.05922 (9) obj. -15.4322 iterations 22
Cbc0038I Pass  52: suminf.    1.51440 (8) obj. -15.4322 iterations 4
Cbc0038I Pass  53: suminf.    2.32078 (9) obj. -15.4322 iterations 17
Cbc0038I Pass  54: suminf.    2.32869 (8) obj. -15.4322 iterations 1
Cbc0038I Pass  55: suminf.    2.62905 (8) obj. -15.4322 iterations 24
Cbc0038I Pass  56: suminf.    1.87931 (7) obj. -15.4322 iterations 8
Cbc0038I Pass  57: suminf.    1.55791 (7) obj. -15.4322 iterations 13
Cbc0038I Pass  58: suminf.    1.55791 (7) obj. -15.4322 iterations 0
Cbc0038I Pass  59: suminf.    2.29791 (15) obj. -15.4322 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 104 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -8.42782 - took 0.17 seconds
Cbc0012I Integer solution of -8.42782 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0031I 26 added rows had average density of 64.076923
Cbc0013I At root node, 26 cuts changed objective from -34.487118 to -28.764958 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12939 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2010 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 175 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.42782 best solution, best possible -28.764958 (1.59 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -8.84145 found by RINS after 9593 iterations and 44 nodes (1.97 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 41 rows 31 columns
Cbc0012I Integer solution of -8.98281 found by DiveCoefficient after 11467 iterations and 101 nodes (2.16 seconds)
Cbc0001I Search completed - best objective -8.982810000000001, took 11922 iterations and 132 nodes (2.20 seconds)
Cbc0032I Strong branching done 1336 times (23181 iterations), fathomed 9 nodes and fixed 41 variables
Cbc0035I Maximum depth 39, 307 variables fixed on reduced cost
Total time (CPU seconds):       2.08   (Wallclock seconds):       2.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-80) rows, 141 (-62) columns and 2748 (-2906) elements
Clp1000I sum of infeasibilities 2.74585e-08 - average 2.19668e-10, 64 fixed columns
Coin0506I Presolve 63 (-62) rows, 77 (-64) columns and 274 (-2474) elements
Clp0006I 0  Obj -8.9930887 Dual inf 4.685921 (74)
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 1.1697373 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value -7.9154189
Clp0000I Optimal - objective value -7.9154189
Coin0511I After Postsolve, objective -7.9154189, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.9154189 Dual inf 31.464375 (41)
Clp0014I Perturbing problem by 0.001% of 1.6432961 - largest nonzero change 1.2478066e-05 ( 0.0011371494%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 49.356848
Clp0000I Optimal - objective value 49.356848
Clp0000I Optimal - objective value 49.356848
Coin0511I After Postsolve, objective 49.356848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.35684821 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 144 columns (144 integer (144 of which binary)) and 2767 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.214%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.18193
Cbc0038I Pass   1: suminf.    2.37259 (37) obj. -45.2119 iterations 18
Cbc0038I Pass   2: suminf.    0.38628 (11) obj. -3.67942 iterations 21
Cbc0038I Solution found of 6.9343
Cbc0038I Rounding solution of -0.25781 is better than previous of 6.9343

Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4.98352
Cbc0038I Pass   3: suminf.    2.37259 (37) obj. -45.2119 iterations 0
Cbc0038I Pass   4: suminf.    0.66740 (9) obj. -4.98352 iterations 26
Cbc0038I Pass   5: suminf.    0.32245 (8) obj. -4.98352 iterations 9
Cbc0038I Pass   6: suminf.    0.45332 (3) obj. -4.98352 iterations 10
Cbc0038I Pass   7: suminf.    0.36643 (3) obj. -4.98352 iterations 1
Cbc0038I Pass   8: suminf.    0.45844 (3) obj. -4.98352 iterations 5
Cbc0038I Pass   9: suminf.    1.23325 (12) obj. -4.98352 iterations 34
Cbc0038I Pass  10: suminf.    0.59913 (11) obj. -4.98352 iterations 5
Cbc0038I Pass  11: suminf.    1.71299 (6) obj. -4.98352 iterations 20
Cbc0038I Pass  12: suminf.    1.14509 (9) obj. -4.98352 iterations 22
Cbc0038I Pass  13: suminf.    1.34315 (7) obj. -4.98352 iterations 16
Cbc0038I Pass  14: suminf.    1.12300 (6) obj. -4.98352 iterations 9
Cbc0038I Pass  15: suminf.    1.15661 (6) obj. -4.98352 iterations 8
Cbc0038I Pass  16: suminf.    1.46480 (12) obj. -4.98352 iterations 38
Cbc0038I Pass  17: suminf.    1.18869 (10) obj. -4.98352 iterations 19
Cbc0038I Pass  18: suminf.    1.20109 (6) obj. -4.98352 iterations 19
Cbc0038I Pass  19: suminf.    1.15727 (6) obj. -4.98352 iterations 4
Cbc0038I Pass  20: suminf.    1.60883 (6) obj. -4.98352 iterations 33
Cbc0038I Pass  21: suminf.    1.60883 (6) obj. -4.98352 iterations 0
Cbc0038I Pass  22: suminf.    1.41508 (6) obj. -4.98352 iterations 8
Cbc0038I Pass  23: suminf.    1.37975 (8) obj. -4.98352 iterations 11
Cbc0038I Pass  24: suminf.    0.95607 (5) obj. -4.98352 iterations 15
Cbc0038I Pass  25: suminf.    0.63148 (4) obj. -4.98352 iterations 6
Cbc0038I Pass  26: suminf.    0.90350 (5) obj. -4.98352 iterations 17
Cbc0038I Pass  27: suminf.    0.85899 (4) obj. -4.98352 iterations 8
Cbc0038I Pass  28: suminf.    0.70848 (5) obj. -4.98352 iterations 10
Cbc0038I Pass  29: suminf.    1.38517 (10) obj. -4.98352 iterations 21
Cbc0038I Pass  30: suminf.    1.09698 (9) obj. -4.98352 iterations 10
Cbc0038I Pass  31: suminf.    1.09698 (9) obj. -4.98352 iterations 1
Cbc0038I Pass  32: suminf.    1.57089 (15) obj. -4.98352 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 22 rows 30 columns
Cbc0038I Mini branch and bound improved solution from 6.9343 to -2.33807 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.4896
Cbc0038I Pass  32: suminf.    2.37259 (37) obj. -45.2119 iterations 0
Cbc0038I Pass  33: suminf.    0.57574 (18) obj. -13.4896 iterations 24
Cbc0038I Pass  34: suminf.    0.57574 (18) obj. -13.4896 iterations 0
Cbc0038I Pass  35: suminf.    1.02824 (7) obj. -13.4896 iterations 30
Cbc0038I Pass  36: suminf.    1.02824 (7) obj. -13.4896 iterations 0
Cbc0038I Pass  37: suminf.    1.72526 (8) obj. -13.4896 iterations 16
Cbc0038I Pass  38: suminf.    1.72526 (8) obj. -13.4896 iterations 7
Cbc0038I Pass  39: suminf.    1.28228 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  40: suminf.    0.92767 (5) obj. -13.4896 iterations 6
Cbc0038I Pass  41: suminf.    0.55950 (6) obj. -13.4896 iterations 6
Cbc0038I Pass  42: suminf.    1.15416 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  43: suminf.    1.02824 (7) obj. -13.4896 iterations 4
Cbc0038I Pass  44: suminf.    1.72526 (8) obj. -13.4896 iterations 15
Cbc0038I Pass  45: suminf.    1.72526 (8) obj. -13.4896 iterations 7
Cbc0038I Pass  46: suminf.    1.28228 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  47: suminf.    0.92767 (5) obj. -13.4896 iterations 6
Cbc0038I Pass  48: suminf.    0.55950 (6) obj. -13.4896 iterations 6
Cbc0038I Pass  49: suminf.    1.15416 (7) obj. -13.4896 iterations 11
Cbc0038I Pass  50: suminf.    1.02824 (7) obj. -13.4896 iterations 4
Cbc0038I Pass  51: suminf.    1.72526 (8) obj. -13.4896 iterations 15
Cbc0038I Pass  52: suminf.    1.72526 (8) obj. -13.4896 iterations 7
Cbc0038I Pass  53: suminf.    1.28228 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  54: suminf.    0.92767 (5) obj. -13.4896 iterations 6
Cbc0038I Pass  55: suminf.    0.55950 (6) obj. -13.4896 iterations 6
Cbc0038I Pass  56: suminf.    1.15416 (7) obj. -13.4896 iterations 11
Cbc0038I Pass  57: suminf.    1.02824 (7) obj. -13.4896 iterations 4
Cbc0038I Pass  58: suminf.    1.72526 (8) obj. -13.4896 iterations 15
Cbc0038I Pass  59: suminf.    1.72526 (8) obj. -13.4896 iterations 7
Cbc0038I Pass  60: suminf.    1.28228 (7) obj. -13.4896 iterations 12
Cbc0038I Pass  61: suminf.    0.92767 (5) obj. -13.4896 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 144 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.33807 - took 0.05 seconds
Cbc0012I Integer solution of -2.33807 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 1 rows 4 columns
Cbc0031I 54 added rows had average density of 46.277778
Cbc0013I At root node, 54 cuts changed objective from -47.514056 to -15.696449 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11135 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2041 row cuts average 135.8 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1058 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 37 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1634 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 201 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.502 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.33807 best solution, best possible -15.696449 (2.73 seconds)
Cbc0010I After 4 nodes, 5 on tree, -2.33807 best solution, best possible -15.696449 (3.47 seconds)
Cbc0010I After 8 nodes, 9 on tree, -2.33807 best solution, best possible -15.696449 (4.23 seconds)
Cbc0012I Integer solution of -6.59418 found by DiveCoefficient after 7074 iterations and 16 nodes (4.92 seconds)
Cbc0010I After 17 nodes, 12 on tree, -6.59418 best solution, best possible -15.696449 (5.06 seconds)
Cbc0004I Integer solution of -7.06709 found after 7407 iterations and 23 nodes (5.48 seconds)
Cbc0010I After 29 nodes, 13 on tree, -7.06709 best solution, best possible -15.696449 (5.82 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 43 rows 52 columns
Cbc0010I After 42 nodes, 14 on tree, -7.06709 best solution, best possible -15.696449 (6.57 seconds)
Cbc0010I After 60 nodes, 12 on tree, -7.06709 best solution, best possible -15.696449 (7.29 seconds)
Cbc0010I After 67 nodes, 16 on tree, -7.06709 best solution, best possible -15.696449 (8.00 seconds)
Cbc0016I Integer solution of -7.3008 found by strong branching after 9487 iterations and 76 nodes (8.56 seconds)
Cbc0010I After 79 nodes, 13 on tree, -7.3008 best solution, best possible -15.696449 (8.76 seconds)
Cbc0004I Integer solution of -7.52704 found after 10252 iterations and 90 nodes (9.33 seconds)
Cbc0038I Full problem 128 rows 144 columns, reduced to 5 rows 8 columns
Cbc0010I After 92 nodes, 14 on tree, -7.52704 best solution, best possible -15.696449 (9.48 seconds)
Cbc0016I Integer solution of -7.55331 found by strong branching after 10516 iterations and 97 nodes (9.83 seconds)
Cbc0010I After 102 nodes, 13 on tree, -7.55331 best solution, best possible -15.696449 (10.18 seconds)
Cbc0016I Integer solution of -8.60604 found by strong branching after 10942 iterations and 105 nodes (10.37 seconds)
Cbc0010I After 115 nodes, 13 on tree, -8.60604 best solution, best possible -15.696449 (10.89 seconds)
Cbc0016I Integer solution of -8.81838 found by strong branching after 11452 iterations and 116 nodes (10.97 seconds)
Cbc0012I Integer solution of -8.81997 found by rounding after 11564 iterations and 117 nodes (11.07 seconds)
Cbc0004I Integer solution of -8.98281 found after 11824 iterations and 123 nodes (11.25 seconds)
Cbc0010I After 130 nodes, 5 on tree, -8.98281 best solution, best possible -15.696449 (11.74 seconds)
Cbc0001I Search completed - best objective -8.982810000000001, took 13046 iterations and 144 nodes (12.17 seconds)
Cbc0032I Strong branching done 1592 times (27820 iterations), fathomed 14 nodes and fixed 37 variables
Cbc0035I Maximum depth 23, 386 variables fixed on reduced cost
Total time (CPU seconds):       8.30   (Wallclock seconds):       12.20

