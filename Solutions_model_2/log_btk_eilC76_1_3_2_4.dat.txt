Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.31717e-05 - average 1.02106e-07, 5 fixed columns
Coin0506I Presolve 120 (-9) rows, 71 (-5) columns and 374 (-28) elements
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 2.9771395 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 36.122694
Clp0000I Optimal - objective value 36.122694
Coin0511I After Postsolve, objective 36.122694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.122694
Clp0000I Optimal - objective value 36.122694
Clp0000I Optimal - objective value 36.122694
Coin0511I After Postsolve, objective 36.122694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.12269448 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.7397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.864 iterations 53
Cbc0038I Solution found of 10.864
Cbc0038I Relaxing continuous gives 10.864
Cbc0038I Rounding solution of 3.39245 is better than previous of 10.864

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 3.39245 to -3.92579 (0.05 seconds)
Cbc0038I Round again with cutoff of -7.14557
Cbc0038I Pass   2: suminf.    2.16431 (8) obj. -7.14557 iterations 18
Cbc0038I Pass   3: suminf.    1.17832 (4) obj. -7.14557 iterations 16
Cbc0038I Pass   4: suminf.    0.46963 (3) obj. -7.14557 iterations 7
Cbc0038I Pass   5: suminf.    1.48061 (4) obj. -7.14557 iterations 6
Cbc0038I Pass   6: suminf.    1.58152 (4) obj. -7.14557 iterations 6
Cbc0038I Pass   7: suminf.    1.58152 (4) obj. -7.14557 iterations 0
Cbc0038I Pass   8: suminf.    1.43057 (4) obj. -7.14557 iterations 4
Cbc0038I Pass   9: suminf.    1.43057 (4) obj. -7.14557 iterations 0
Cbc0038I Pass  10: suminf.    2.09106 (8) obj. -7.14557 iterations 19
Cbc0038I Pass  11: suminf.    2.09106 (8) obj. -7.14557 iterations 3
Cbc0038I Pass  12: suminf.    2.77834 (8) obj. -7.14557 iterations 16
Cbc0038I Pass  13: suminf.    2.75109 (7) obj. -7.14557 iterations 1
Cbc0038I Pass  14: suminf.    1.21459 (5) obj. -7.14557 iterations 8
Cbc0038I Pass  15: suminf.    0.79663 (4) obj. -7.14557 iterations 3
Cbc0038I Pass  16: suminf.    1.81180 (5) obj. -7.14557 iterations 7
Cbc0038I Pass  17: suminf.    1.66869 (5) obj. -7.14557 iterations 4
Cbc0038I Pass  18: suminf.    1.04417 (4) obj. -7.14557 iterations 1
Cbc0038I Pass  19: suminf.    1.25107 (5) obj. -7.14557 iterations 12
Cbc0038I Pass  20: suminf.    1.25107 (5) obj. -7.14557 iterations 1
Cbc0038I Pass  21: suminf.    1.46730 (5) obj. -7.14557 iterations 9
Cbc0038I Pass  22: suminf.    1.46730 (5) obj. -7.14557 iterations 0
Cbc0038I Pass  23: suminf.    1.29751 (4) obj. -7.14557 iterations 8
Cbc0038I Pass  24: suminf.    1.18738 (4) obj. -7.14557 iterations 3
Cbc0038I Pass  25: suminf.    1.46730 (5) obj. -7.14557 iterations 6
Cbc0038I Pass  26: suminf.    2.60153 (11) obj. -7.14557 iterations 30
Cbc0038I Pass  27: suminf.    2.44244 (9) obj. -7.14557 iterations 9
Cbc0038I Pass  28: suminf.    1.93407 (6) obj. -7.14557 iterations 16
Cbc0038I Pass  29: suminf.    1.66875 (4) obj. -7.14557 iterations 8
Cbc0038I Pass  30: suminf.    1.13594 (6) obj. -7.14557 iterations 5
Cbc0038I Pass  31: suminf.    1.13594 (6) obj. -7.14557 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 79 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -3.92579 - took 0.09 seconds
Cbc0012I Integer solution of -3.92579 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 42 columns
Cbc0031I 29 added rows had average density of 46.551724
Cbc0013I At root node, 29 cuts changed objective from -36.122694 to -27.806089 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12686 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1862 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 182 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.92579 best solution, best possible -27.806089 (0.94 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 53 rows 34 columns
Cbc0001I Search completed - best objective -3.925789999999999, took 9952 iterations and 82 nodes (1.27 seconds)
Cbc0032I Strong branching done 904 times (17505 iterations), fathomed 6 nodes and fixed 31 variables
Cbc0035I Maximum depth 31, 249 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-61) rows, 114 (-38) columns and 1778 (-1525) elements
Clp1000I sum of infeasibilities 1.07683e-07 - average 1.15788e-09, 23 fixed columns
Coin0506I Presolve 74 (-19) rows, 91 (-23) columns and 1230 (-548) elements
Clp0006I 0  Obj 43.693417 Dual inf 3.8840978 (90)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.3031486 - largest nonzero change 1.8600517e-05 ( 0.0010393299%) - largest zero change 2.9893688e-05
Clp0000I Optimal - objective value 52.738415
Clp0000I Optimal - objective value 52.738415
Coin0511I After Postsolve, objective 52.738415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 52.738415
Clp0000I Optimal - objective value 52.738415
Clp0000I Optimal - objective value 52.738415
Clp0000I Optimal - objective value 52.738415
Coin0511I After Postsolve, objective 52.738415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.73841545 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 116 columns (116 integer (116 of which binary)) and 1787 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.41522
Cbc0038I Pass   1: suminf.    3.22923 (31) obj. -38.689 iterations 18
Cbc0038I Pass   2: suminf.    0.72306 (9) obj. -11.1432 iterations 22
Cbc0038I Solution found of 2.6495
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 116 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -1.5884
Cbc0038I Pass   3: suminf.    3.22923 (31) obj. -38.689 iterations 0
Cbc0038I Pass   4: suminf.    1.94687 (21) obj. -27.3237 iterations 10
Cbc0038I Pass   5: suminf.    0.22153 (6) obj. -1.5884 iterations 31
Cbc0038I Pass   6: suminf.    0.22153 (6) obj. -1.5884 iterations 0
Cbc0038I Pass   7: suminf.    1.41694 (5) obj. -1.5884 iterations 12
Cbc0038I Pass   8: suminf.    0.61060 (4) obj. -1.5884 iterations 13
Cbc0038I Pass   9: suminf.    0.22021 (2) obj. -1.59127 iterations 8
Cbc0038I Pass  10: suminf.    0.61060 (4) obj. -1.5884 iterations 9
Cbc0038I Pass  11: suminf.    1.65205 (10) obj. -1.5884 iterations 24
Cbc0038I Pass  12: suminf.    1.19196 (9) obj. -1.5884 iterations 2
Cbc0038I Pass  13: suminf.    1.24659 (6) obj. -1.5884 iterations 11
Cbc0038I Pass  14: suminf.    0.90961 (6) obj. -1.5884 iterations 5
Cbc0038I Pass  15: suminf.    0.78685 (6) obj. -1.5884 iterations 12
Cbc0038I Pass  16: suminf.    0.78685 (6) obj. -1.5884 iterations 1
Cbc0038I Pass  17: suminf.    1.61056 (6) obj. -1.5884 iterations 10
Cbc0038I Pass  18: suminf.    0.34484 (6) obj. -1.5884 iterations 15
Cbc0038I Pass  19: suminf.    1.61056 (6) obj. -1.5884 iterations 10
Cbc0038I Pass  20: suminf.    1.95108 (17) obj. -1.5884 iterations 30
Cbc0038I Pass  21: suminf.    1.90422 (17) obj. -1.5884 iterations 6
Cbc0038I Pass  22: suminf.    2.17580 (12) obj. -1.5884 iterations 16
Cbc0038I Pass  23: suminf.    2.17580 (12) obj. -1.5884 iterations 1
Cbc0038I Pass  24: suminf.    1.55228 (6) obj. -1.5884 iterations 18
Cbc0038I Pass  25: suminf.    0.86822 (6) obj. -1.5884 iterations 5
Cbc0038I Pass  26: suminf.    1.94348 (6) obj. -1.5884 iterations 17
Cbc0038I Pass  27: suminf.    0.83204 (5) obj. -1.5884 iterations 8
Cbc0038I Pass  28: suminf.    0.74544 (6) obj. -1.5884 iterations 3
Cbc0038I Pass  29: suminf.    0.83535 (6) obj. -1.5884 iterations 5
Cbc0038I Pass  30: suminf.    2.33496 (13) obj. -1.5884 iterations 23
Cbc0038I Pass  31: suminf.    2.11930 (12) obj. -1.5884 iterations 5
Cbc0038I Pass  32: suminf.    1.31347 (11) obj. -1.5884 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 116 columns, reduced to 20 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 2.6495 to -2.76793 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.1601
Cbc0038I Pass  32: suminf.    3.22923 (31) obj. -38.689 iterations 0
Cbc0038I Pass  33: suminf.    1.62442 (18) obj. -24.6461 iterations 13
Cbc0038I Pass  34: suminf.    0.68809 (9) obj. -10.1601 iterations 37
Cbc0038I Pass  35: suminf.    0.68613 (6) obj. -10.1601 iterations 2
Cbc0038I Pass  36: suminf.    0.67515 (6) obj. -10.1601 iterations 8
Cbc0038I Pass  37: suminf.    0.67515 (6) obj. -10.1601 iterations 6
Cbc0038I Pass  38: suminf.    0.68613 (6) obj. -10.1601 iterations 9
Cbc0038I Pass  39: suminf.    1.78434 (13) obj. -10.1601 iterations 17
Cbc0038I Pass  40: suminf.    1.77079 (13) obj. -10.1601 iterations 4
Cbc0038I Pass  41: suminf.    1.57388 (8) obj. -10.1601 iterations 16
Cbc0038I Pass  42: suminf.    1.57388 (8) obj. -10.1601 iterations 2
Cbc0038I Pass  43: suminf.    1.47020 (9) obj. -10.1601 iterations 11
Cbc0038I Pass  44: suminf.    1.45741 (8) obj. -10.1601 iterations 12
Cbc0038I Pass  45: suminf.    1.58696 (9) obj. -10.1601 iterations 10
Cbc0038I Pass  46: suminf.    1.41855 (10) obj. -10.1601 iterations 13
Cbc0038I Pass  47: suminf.    1.41855 (10) obj. -10.1601 iterations 4
Cbc0038I Pass  48: suminf.    1.08668 (8) obj. -10.1601 iterations 15
Cbc0038I Pass  49: suminf.    0.56231 (6) obj. -10.565 iterations 9
Cbc0038I Pass  50: suminf.    1.08668 (8) obj. -10.1601 iterations 10
Cbc0038I Pass  51: suminf.    1.27417 (9) obj. -10.1601 iterations 15
Cbc0038I Pass  52: suminf.    0.93180 (9) obj. -10.1601 iterations 17
Cbc0038I Pass  53: suminf.    1.78894 (9) obj. -10.1601 iterations 11
Cbc0038I Pass  54: suminf.    1.08668 (8) obj. -10.1601 iterations 12
Cbc0038I Pass  55: suminf.    0.56231 (6) obj. -10.565 iterations 8
Cbc0038I Pass  56: suminf.    1.08668 (8) obj. -10.1601 iterations 10
Cbc0038I Pass  57: suminf.    2.04760 (14) obj. -10.1601 iterations 22
Cbc0038I Pass  58: suminf.    2.03331 (15) obj. -10.1601 iterations 5
Cbc0038I Pass  59: suminf.    1.00773 (9) obj. -10.1601 iterations 15
Cbc0038I Pass  60: suminf.    0.88116 (8) obj. -10.1601 iterations 5
Cbc0038I Pass  61: suminf.    1.71185 (10) obj. -10.1601 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 116 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.76793 - took 0.06 seconds
Cbc0012I Integer solution of -2.76793 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 95 rows 116 columns, reduced to 13 rows 16 columns
Cbc0031I 58 added rows had average density of 34.103448
Cbc0013I At root node, 58 cuts changed objective from -39.728621 to -12.768658 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14551 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1735 row cuts average 110.3 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 523 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1276 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 328 row cuts average 63.3 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.660 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.76793 best solution, best possible -12.768658 (2.61 seconds)
Cbc0012I Integer solution of -3.92579 found by rounding after 6233 iterations and 11 nodes (3.21 seconds)
Cbc0001I Search completed - best objective -3.925789999999999, took 6816 iterations and 34 nodes (3.27 seconds)
Cbc0032I Strong branching done 422 times (8081 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 12, 84 variables fixed on reduced cost
Total time (CPU seconds):       2.45   (Wallclock seconds):       3.28

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.31717e-05 - average 1.02106e-07, 5 fixed columns
Coin0506I Presolve 120 (-9) rows, 71 (-5) columns and 374 (-28) elements
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 2.9771395 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 36.122694
Clp0000I Optimal - objective value 36.122694
Coin0511I After Postsolve, objective 36.122694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.122694
Clp0000I Optimal - objective value 36.122694
Clp0000I Optimal - objective value 36.122694
Coin0511I After Postsolve, objective 36.122694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.12269448 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.7397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.864 iterations 53
Cbc0038I Solution found of 10.864
Cbc0038I Relaxing continuous gives 10.864
Cbc0038I Rounding solution of 3.39245 is better than previous of 10.864

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 3.39245 to -3.92579 (0.05 seconds)
Cbc0038I Round again with cutoff of -7.14557
Cbc0038I Pass   2: suminf.    2.16431 (8) obj. -7.14557 iterations 18
Cbc0038I Pass   3: suminf.    1.17832 (4) obj. -7.14557 iterations 16
Cbc0038I Pass   4: suminf.    0.46963 (3) obj. -7.14557 iterations 7
Cbc0038I Pass   5: suminf.    1.48061 (4) obj. -7.14557 iterations 6
Cbc0038I Pass   6: suminf.    1.58152 (4) obj. -7.14557 iterations 6
Cbc0038I Pass   7: suminf.    1.58152 (4) obj. -7.14557 iterations 0
Cbc0038I Pass   8: suminf.    1.43057 (4) obj. -7.14557 iterations 4
Cbc0038I Pass   9: suminf.    1.43057 (4) obj. -7.14557 iterations 0
Cbc0038I Pass  10: suminf.    2.09106 (8) obj. -7.14557 iterations 19
Cbc0038I Pass  11: suminf.    2.09106 (8) obj. -7.14557 iterations 3
Cbc0038I Pass  12: suminf.    2.77834 (8) obj. -7.14557 iterations 16
Cbc0038I Pass  13: suminf.    2.75109 (7) obj. -7.14557 iterations 1
Cbc0038I Pass  14: suminf.    1.21459 (5) obj. -7.14557 iterations 8
Cbc0038I Pass  15: suminf.    0.79663 (4) obj. -7.14557 iterations 3
Cbc0038I Pass  16: suminf.    1.81180 (5) obj. -7.14557 iterations 7
Cbc0038I Pass  17: suminf.    1.66869 (5) obj. -7.14557 iterations 4
Cbc0038I Pass  18: suminf.    1.04417 (4) obj. -7.14557 iterations 1
Cbc0038I Pass  19: suminf.    1.25107 (5) obj. -7.14557 iterations 12
Cbc0038I Pass  20: suminf.    1.25107 (5) obj. -7.14557 iterations 1
Cbc0038I Pass  21: suminf.    1.46730 (5) obj. -7.14557 iterations 9
Cbc0038I Pass  22: suminf.    1.46730 (5) obj. -7.14557 iterations 0
Cbc0038I Pass  23: suminf.    1.29751 (4) obj. -7.14557 iterations 8
Cbc0038I Pass  24: suminf.    1.18738 (4) obj. -7.14557 iterations 3
Cbc0038I Pass  25: suminf.    1.46730 (5) obj. -7.14557 iterations 6
Cbc0038I Pass  26: suminf.    2.60153 (11) obj. -7.14557 iterations 30
Cbc0038I Pass  27: suminf.    2.44244 (9) obj. -7.14557 iterations 9
Cbc0038I Pass  28: suminf.    1.93407 (6) obj. -7.14557 iterations 16
Cbc0038I Pass  29: suminf.    1.66875 (4) obj. -7.14557 iterations 8
Cbc0038I Pass  30: suminf.    1.13594 (6) obj. -7.14557 iterations 5
Cbc0038I Pass  31: suminf.    1.13594 (6) obj. -7.14557 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 79 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -3.92579 - took 0.09 seconds
Cbc0012I Integer solution of -3.92579 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 42 columns
Cbc0031I 29 added rows had average density of 46.551724
Cbc0013I At root node, 29 cuts changed objective from -36.122694 to -27.806089 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12686 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1862 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 182 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -3.92579 best solution, best possible -27.806089 (1.13 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 53 rows 34 columns
Cbc0001I Search completed - best objective -3.925789999999999, took 9952 iterations and 82 nodes (1.52 seconds)
Cbc0032I Strong branching done 904 times (17505 iterations), fathomed 6 nodes and fixed 31 variables
Cbc0035I Maximum depth 31, 249 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-62) rows, 114 (-39) columns and 1778 (-1526) elements
Clp1000I sum of infeasibilities 1.07683e-07 - average 1.15788e-09, 23 fixed columns
Coin0506I Presolve 74 (-19) rows, 91 (-23) columns and 1230 (-548) elements
Clp0006I 0  Obj 43.693417 Dual inf 3.8840978 (90)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.3031486 - largest nonzero change 1.8600517e-05 ( 0.0010393299%) - largest zero change 2.9893688e-05
Clp0000I Optimal - objective value 52.738415
Clp0000I Optimal - objective value 52.738415
Coin0511I After Postsolve, objective 52.738415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 52.738415
Clp0000I Optimal - objective value 52.738415
Clp0000I Optimal - objective value 52.738415
Clp0000I Optimal - objective value 52.738415
Coin0511I After Postsolve, objective 52.738415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.73841545 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 116 columns (116 integer (116 of which binary)) and 1787 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.41522
Cbc0038I Pass   1: suminf.    3.22923 (31) obj. -38.689 iterations 18
Cbc0038I Pass   2: suminf.    0.72306 (9) obj. -11.1432 iterations 22
Cbc0038I Solution found of 2.6495
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 116 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1.5884
Cbc0038I Pass   3: suminf.    3.22923 (31) obj. -38.689 iterations 0
Cbc0038I Pass   4: suminf.    1.94687 (21) obj. -27.3237 iterations 10
Cbc0038I Pass   5: suminf.    0.22153 (6) obj. -1.5884 iterations 31
Cbc0038I Pass   6: suminf.    0.22153 (6) obj. -1.5884 iterations 0
Cbc0038I Pass   7: suminf.    1.41694 (5) obj. -1.5884 iterations 12
Cbc0038I Pass   8: suminf.    0.61060 (4) obj. -1.5884 iterations 13
Cbc0038I Pass   9: suminf.    0.22021 (2) obj. -1.59127 iterations 8
Cbc0038I Pass  10: suminf.    0.61060 (4) obj. -1.5884 iterations 9
Cbc0038I Pass  11: suminf.    1.65205 (10) obj. -1.5884 iterations 24
Cbc0038I Pass  12: suminf.    1.19196 (9) obj. -1.5884 iterations 2
Cbc0038I Pass  13: suminf.    1.24659 (6) obj. -1.5884 iterations 11
Cbc0038I Pass  14: suminf.    0.90961 (6) obj. -1.5884 iterations 5
Cbc0038I Pass  15: suminf.    0.78685 (6) obj. -1.5884 iterations 12
Cbc0038I Pass  16: suminf.    0.78685 (6) obj. -1.5884 iterations 1
Cbc0038I Pass  17: suminf.    1.61056 (6) obj. -1.5884 iterations 10
Cbc0038I Pass  18: suminf.    0.34484 (6) obj. -1.5884 iterations 15
Cbc0038I Pass  19: suminf.    1.61056 (6) obj. -1.5884 iterations 10
Cbc0038I Pass  20: suminf.    1.95108 (17) obj. -1.5884 iterations 30
Cbc0038I Pass  21: suminf.    1.90422 (17) obj. -1.5884 iterations 6
Cbc0038I Pass  22: suminf.    2.17580 (12) obj. -1.5884 iterations 16
Cbc0038I Pass  23: suminf.    2.17580 (12) obj. -1.5884 iterations 1
Cbc0038I Pass  24: suminf.    1.55228 (6) obj. -1.5884 iterations 18
Cbc0038I Pass  25: suminf.    0.86822 (6) obj. -1.5884 iterations 5
Cbc0038I Pass  26: suminf.    1.94348 (6) obj. -1.5884 iterations 17
Cbc0038I Pass  27: suminf.    0.83204 (5) obj. -1.5884 iterations 8
Cbc0038I Pass  28: suminf.    0.74544 (6) obj. -1.5884 iterations 3
Cbc0038I Pass  29: suminf.    0.83535 (6) obj. -1.5884 iterations 5
Cbc0038I Pass  30: suminf.    2.33496 (13) obj. -1.5884 iterations 23
Cbc0038I Pass  31: suminf.    2.11930 (12) obj. -1.5884 iterations 5
Cbc0038I Pass  32: suminf.    1.31347 (11) obj. -1.5884 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 116 columns, reduced to 20 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 2.6495 to -2.76793 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.1601
Cbc0038I Pass  32: suminf.    3.22923 (31) obj. -38.689 iterations 0
Cbc0038I Pass  33: suminf.    1.62442 (18) obj. -24.6461 iterations 13
Cbc0038I Pass  34: suminf.    0.68809 (9) obj. -10.1601 iterations 37
Cbc0038I Pass  35: suminf.    0.68613 (6) obj. -10.1601 iterations 2
Cbc0038I Pass  36: suminf.    0.67515 (6) obj. -10.1601 iterations 8
Cbc0038I Pass  37: suminf.    0.67515 (6) obj. -10.1601 iterations 6
Cbc0038I Pass  38: suminf.    0.68613 (6) obj. -10.1601 iterations 9
Cbc0038I Pass  39: suminf.    1.78434 (13) obj. -10.1601 iterations 17
Cbc0038I Pass  40: suminf.    1.77079 (13) obj. -10.1601 iterations 4
Cbc0038I Pass  41: suminf.    1.57388 (8) obj. -10.1601 iterations 16
Cbc0038I Pass  42: suminf.    1.57388 (8) obj. -10.1601 iterations 2
Cbc0038I Pass  43: suminf.    1.47020 (9) obj. -10.1601 iterations 11
Cbc0038I Pass  44: suminf.    1.45741 (8) obj. -10.1601 iterations 12
Cbc0038I Pass  45: suminf.    1.58696 (9) obj. -10.1601 iterations 10
Cbc0038I Pass  46: suminf.    1.41855 (10) obj. -10.1601 iterations 13
Cbc0038I Pass  47: suminf.    1.41855 (10) obj. -10.1601 iterations 4
Cbc0038I Pass  48: suminf.    1.08668 (8) obj. -10.1601 iterations 15
Cbc0038I Pass  49: suminf.    0.56231 (6) obj. -10.565 iterations 9
Cbc0038I Pass  50: suminf.    1.08668 (8) obj. -10.1601 iterations 10
Cbc0038I Pass  51: suminf.    1.27417 (9) obj. -10.1601 iterations 15
Cbc0038I Pass  52: suminf.    0.93180 (9) obj. -10.1601 iterations 17
Cbc0038I Pass  53: suminf.    1.78894 (9) obj. -10.1601 iterations 11
Cbc0038I Pass  54: suminf.    1.08668 (8) obj. -10.1601 iterations 12
Cbc0038I Pass  55: suminf.    0.56231 (6) obj. -10.565 iterations 8
Cbc0038I Pass  56: suminf.    1.08668 (8) obj. -10.1601 iterations 10
Cbc0038I Pass  57: suminf.    2.04760 (14) obj. -10.1601 iterations 22
Cbc0038I Pass  58: suminf.    2.03331 (15) obj. -10.1601 iterations 5
Cbc0038I Pass  59: suminf.    1.00773 (9) obj. -10.1601 iterations 15
Cbc0038I Pass  60: suminf.    0.88116 (8) obj. -10.1601 iterations 5
Cbc0038I Pass  61: suminf.    1.71185 (10) obj. -10.1601 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 116 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -2.76793 - took 0.06 seconds
Cbc0012I Integer solution of -2.76793 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 95 rows 116 columns, reduced to 13 rows 16 columns
Cbc0031I 58 added rows had average density of 34.103448
Cbc0013I At root node, 58 cuts changed objective from -39.728621 to -12.768658 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14551 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1735 row cuts average 110.3 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 523 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1276 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 328 row cuts average 63.3 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.742 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.76793 best solution, best possible -12.768658 (3.07 seconds)
Cbc0012I Integer solution of -3.92579 found by rounding after 6233 iterations and 11 nodes (3.76 seconds)
Cbc0010I After 12 nodes, 8 on tree, -3.92579 best solution, best possible -11.762193 (3.77 seconds)
Cbc0001I Search completed - best objective -3.925789999999999, took 6816 iterations and 34 nodes (3.83 seconds)
Cbc0032I Strong branching done 422 times (8081 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 12, 84 variables fixed on reduced cost
Total time (CPU seconds):       2.80   (Wallclock seconds):       3.85

