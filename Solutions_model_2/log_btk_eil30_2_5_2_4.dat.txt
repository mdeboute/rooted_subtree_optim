Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-8) rows, 30 (-2) columns and 162 (-15) elements
Clp1000I sum of infeasibilities 0.000294934 - average 5.36244e-06, 6 fixed columns
Coin0506I Presolve 41 (-14) rows, 24 (-6) columns and 123 (-39) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Coin0511I After Postsolve, objective 80.621695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Coin0511I After Postsolve, objective 80.621695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.62169505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 164 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.19439
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.4442 iterations 24
Cbc0038I Solution found of 14.4442
Cbc0038I Relaxing continuous gives 14.4442
Cbc0038I Rounding solution of 13.0604 is better than previous of 14.4442

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 13.0604 to -29.9452 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.9733
Cbc0038I Pass   2: suminf.    1.09555 (5) obj. -34.9733 iterations 5
Cbc0038I Pass   3: suminf.    1.09555 (5) obj. -34.9733 iterations 0
Cbc0038I Pass   4: suminf.    1.19149 (4) obj. -34.9733 iterations 5
Cbc0038I Pass   5: suminf.    0.69107 (3) obj. -34.9733 iterations 2
Cbc0038I Pass   6: suminf.    1.13321 (5) obj. -34.9733 iterations 4
Cbc0038I Pass   7: suminf.    1.13321 (5) obj. -34.9733 iterations 0
Cbc0038I Pass   8: suminf.    1.44170 (4) obj. -34.9733 iterations 6
Cbc0038I Pass   9: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  10: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  11: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  12: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  13: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  14: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  15: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  16: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  17: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  18: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  19: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  20: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  21: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  22: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  23: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  24: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  25: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  26: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  27: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  28: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  29: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  30: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  31: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.9452 - took 0.07 seconds
Cbc0012I Integer solution of -29.945246 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0031I 18 added rows had average density of 16.5
Cbc0013I At root node, 18 cuts changed objective from -80.224506 to -40.800043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2068 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 938 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -29.945246, took 3397 iterations and 6 nodes (0.26 seconds)
Cbc0032I Strong branching done 120 times (2214 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-13) rows, 52 (-8) columns and 499 (-113) elements
Clp1000I sum of infeasibilities 5.69258e-09 - average 1.16175e-10, 38 fixed columns
Coin0506I Presolve 9 (-40) rows, 14 (-38) columns and 42 (-457) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 0.25270815 - largest nonzero change 1.9206909e-05 ( 0.0016282487%) - largest zero change 0
Clp0000I Optimal - objective value 4.5776093
Clp0000I Optimal - objective value 4.5776093
Coin0511I After Postsolve, objective 4.5776093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22014746 - largest nonzero change 0 ( 0%) - largest zero change 2.9920905e-05
Clp0000I Optimal - objective value 107.34956
Clp0000I Optimal - objective value 107.34956
Clp0000I Optimal - objective value 107.34956
Coin0511I After Postsolve, objective 107.34956, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.3495579 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 52 columns (52 integer (52 of which binary)) and 503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.388%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.97125
Cbc0038I Pass   1: suminf.    2.71399 (13) obj. -73.8512 iterations 14
Cbc0038I Pass   2: suminf.    2.71399 (13) obj. -73.8512 iterations 0
Cbc0038I Solution found of -12.6753
Cbc0038I Rounding solution of -26.5776 is better than previous of -12.6753

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.9994
Cbc0038I Pass   3: suminf.    2.71399 (13) obj. -73.8512 iterations 0
Cbc0038I Pass   4: suminf.    2.71399 (13) obj. -73.8512 iterations 0
Cbc0038I Pass   5: suminf.    0.34438 (1) obj. -32.9994 iterations 22
Cbc0038I Pass   6: suminf.    0.32143 (1) obj. -33.711 iterations 2
Cbc0038I Pass   7: suminf.    1.46304 (8) obj. -32.9994 iterations 15
Cbc0038I Pass   8: suminf.    1.46304 (8) obj. -32.9994 iterations 1
Cbc0038I Pass   9: suminf.    1.74060 (5) obj. -32.9994 iterations 13
Cbc0038I Pass  10: suminf.    1.71170 (5) obj. -33.4617 iterations 1
Cbc0038I Pass  11: suminf.    1.63166 (6) obj. -32.9994 iterations 6
Cbc0038I Pass  12: suminf.    1.63166 (6) obj. -32.9994 iterations 1
Cbc0038I Pass  13: suminf.    1.56763 (5) obj. -32.9994 iterations 6
Cbc0038I Pass  14: suminf.    1.56763 (5) obj. -32.9994 iterations 0
Cbc0038I Pass  15: suminf.    1.41693 (5) obj. -32.9994 iterations 2
Cbc0038I Pass  16: suminf.    1.41693 (5) obj. -32.9994 iterations 1
Cbc0038I Pass  17: suminf.    1.56763 (5) obj. -32.9994 iterations 4
Cbc0038I Pass  18: suminf.    3.70830 (10) obj. -32.9994 iterations 12
Cbc0038I Pass  19: suminf.    2.91272 (9) obj. -32.9994 iterations 4
Cbc0038I Pass  20: suminf.    1.91944 (6) obj. -32.9994 iterations 6
Cbc0038I Pass  21: suminf.    1.69929 (6) obj. -32.9994 iterations 3
Cbc0038I Pass  22: suminf.    2.05503 (5) obj. -32.9994 iterations 5
Cbc0038I Pass  23: suminf.    1.88279 (5) obj. -34.8941 iterations 2
Cbc0038I Pass  24: suminf.    2.05503 (5) obj. -32.9994 iterations 2
Cbc0038I Pass  25: suminf.    4.69491 (13) obj. -32.9994 iterations 16
Cbc0038I Pass  26: suminf.    3.18123 (13) obj. -32.9994 iterations 4
Cbc0038I Pass  27: suminf.    3.18123 (13) obj. -32.9994 iterations 0
Cbc0038I Pass  28: suminf.    1.99624 (5) obj. -32.9994 iterations 13
Cbc0038I Pass  29: suminf.    1.99624 (5) obj. -32.9994 iterations 1
Cbc0038I Pass  30: suminf.    1.56347 (5) obj. -32.9994 iterations 2
Cbc0038I Pass  31: suminf.    1.56347 (5) obj. -32.9994 iterations 1
Cbc0038I Pass  32: suminf.    1.99624 (5) obj. -32.9994 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 52 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -26.5776 - took 0.01 seconds
Cbc0012I Integer solution of -26.577616 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -29.945246 found by DiveCoefficient after 136 iterations and 0 nodes (0.13 seconds)
Cbc0031I 24 added rows had average density of 8.1666667
Cbc0013I At root node, 24 cuts changed objective from -90.795037 to -29.945246 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 384 row cuts average 3.6 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 12 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.945246, took 136 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-8) rows, 30 (-2) columns and 162 (-15) elements
Clp1000I sum of infeasibilities 0.000294934 - average 5.36244e-06, 6 fixed columns
Coin0506I Presolve 41 (-14) rows, 24 (-6) columns and 123 (-39) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Coin0511I After Postsolve, objective 80.621695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Clp0000I Optimal - objective value 80.621695
Coin0511I After Postsolve, objective 80.621695, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.62169505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 164 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.19439
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.4442 iterations 24
Cbc0038I Solution found of 14.4442
Cbc0038I Relaxing continuous gives 14.4442
Cbc0038I Rounding solution of 13.0604 is better than previous of 14.4442

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 13.0604 to -29.9452 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.9733
Cbc0038I Pass   2: suminf.    1.09555 (5) obj. -34.9733 iterations 5
Cbc0038I Pass   3: suminf.    1.09555 (5) obj. -34.9733 iterations 0
Cbc0038I Pass   4: suminf.    1.19149 (4) obj. -34.9733 iterations 5
Cbc0038I Pass   5: suminf.    0.69107 (3) obj. -34.9733 iterations 2
Cbc0038I Pass   6: suminf.    1.13321 (5) obj. -34.9733 iterations 4
Cbc0038I Pass   7: suminf.    1.13321 (5) obj. -34.9733 iterations 0
Cbc0038I Pass   8: suminf.    1.44170 (4) obj. -34.9733 iterations 6
Cbc0038I Pass   9: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  10: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  11: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  12: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  13: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  14: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  15: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  16: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  17: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  18: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  19: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  20: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  21: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  22: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  23: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  24: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  25: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I Pass  26: suminf.    1.44170 (4) obj. -34.9733 iterations 5
Cbc0038I Pass  27: suminf.    0.82354 (3) obj. -34.9733 iterations 4
Cbc0038I Pass  28: suminf.    1.11551 (4) obj. -34.9733 iterations 2
Cbc0038I Pass  29: suminf.    0.71167 (3) obj. -34.9733 iterations 2
Cbc0038I Pass  30: suminf.    1.06753 (4) obj. -34.9733 iterations 4
Cbc0038I Pass  31: suminf.    1.04568 (4) obj. -34.9733 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.9452 - took 0.03 seconds
Cbc0012I Integer solution of -29.945246 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 55 rows 30 columns, reduced to 40 rows 23 columns
Cbc0031I 18 added rows had average density of 16.5
Cbc0013I At root node, 18 cuts changed objective from -80.224506 to -40.800043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2068 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 938 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -29.945246, took 3397 iterations and 6 nodes (0.28 seconds)
Cbc0032I Strong branching done 120 times (2214 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 52 (-9) columns and 499 (-114) elements
Clp1000I sum of infeasibilities 5.69258e-09 - average 1.16175e-10, 38 fixed columns
Coin0506I Presolve 9 (-40) rows, 14 (-38) columns and 42 (-457) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 0.25270815 - largest nonzero change 1.9206909e-05 ( 0.0016282487%) - largest zero change 0
Clp0000I Optimal - objective value 4.5776093
Clp0000I Optimal - objective value 4.5776093
Coin0511I After Postsolve, objective 4.5776093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22014746 - largest nonzero change 0 ( 0%) - largest zero change 2.9920905e-05
Clp0000I Optimal - objective value 107.34956
Clp0000I Optimal - objective value 107.34956
Clp0000I Optimal - objective value 107.34956
Coin0511I After Postsolve, objective 107.34956, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.3495579 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 52 columns (52 integer (52 of which binary)) and 503 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.388%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.97125
Cbc0038I Pass   1: suminf.    2.71399 (13) obj. -73.8512 iterations 14
Cbc0038I Pass   2: suminf.    2.71399 (13) obj. -73.8512 iterations 0
Cbc0038I Solution found of -12.6753
Cbc0038I Rounding solution of -26.5776 is better than previous of -12.6753

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.9994
Cbc0038I Pass   3: suminf.    2.71399 (13) obj. -73.8512 iterations 0
Cbc0038I Pass   4: suminf.    2.71399 (13) obj. -73.8512 iterations 0
Cbc0038I Pass   5: suminf.    0.34438 (1) obj. -32.9994 iterations 22
Cbc0038I Pass   6: suminf.    0.32143 (1) obj. -33.711 iterations 2
Cbc0038I Pass   7: suminf.    1.46304 (8) obj. -32.9994 iterations 15
Cbc0038I Pass   8: suminf.    1.46304 (8) obj. -32.9994 iterations 1
Cbc0038I Pass   9: suminf.    1.74060 (5) obj. -32.9994 iterations 13
Cbc0038I Pass  10: suminf.    1.71170 (5) obj. -33.4617 iterations 1
Cbc0038I Pass  11: suminf.    1.63166 (6) obj. -32.9994 iterations 6
Cbc0038I Pass  12: suminf.    1.63166 (6) obj. -32.9994 iterations 1
Cbc0038I Pass  13: suminf.    1.56763 (5) obj. -32.9994 iterations 6
Cbc0038I Pass  14: suminf.    1.56763 (5) obj. -32.9994 iterations 0
Cbc0038I Pass  15: suminf.    1.41693 (5) obj. -32.9994 iterations 2
Cbc0038I Pass  16: suminf.    1.41693 (5) obj. -32.9994 iterations 1
Cbc0038I Pass  17: suminf.    1.56763 (5) obj. -32.9994 iterations 4
Cbc0038I Pass  18: suminf.    3.70830 (10) obj. -32.9994 iterations 12
Cbc0038I Pass  19: suminf.    2.91272 (9) obj. -32.9994 iterations 4
Cbc0038I Pass  20: suminf.    1.91944 (6) obj. -32.9994 iterations 6
Cbc0038I Pass  21: suminf.    1.69929 (6) obj. -32.9994 iterations 3
Cbc0038I Pass  22: suminf.    2.05503 (5) obj. -32.9994 iterations 5
Cbc0038I Pass  23: suminf.    1.88279 (5) obj. -34.8941 iterations 2
Cbc0038I Pass  24: suminf.    2.05503 (5) obj. -32.9994 iterations 2
Cbc0038I Pass  25: suminf.    4.69491 (13) obj. -32.9994 iterations 16
Cbc0038I Pass  26: suminf.    3.18123 (13) obj. -32.9994 iterations 4
Cbc0038I Pass  27: suminf.    3.18123 (13) obj. -32.9994 iterations 0
Cbc0038I Pass  28: suminf.    1.99624 (5) obj. -32.9994 iterations 13
Cbc0038I Pass  29: suminf.    1.99624 (5) obj. -32.9994 iterations 1
Cbc0038I Pass  30: suminf.    1.56347 (5) obj. -32.9994 iterations 2
Cbc0038I Pass  31: suminf.    1.56347 (5) obj. -32.9994 iterations 1
Cbc0038I Pass  32: suminf.    1.99624 (5) obj. -32.9994 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 52 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.5776 - took 0.02 seconds
Cbc0012I Integer solution of -26.577616 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -29.945246 found by DiveCoefficient after 136 iterations and 0 nodes (0.14 seconds)
Cbc0031I 24 added rows had average density of 8.1666667
Cbc0013I At root node, 24 cuts changed objective from -90.795037 to -29.945246 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 384 row cuts average 3.6 elements, 12 column cuts (12 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 12 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.945246, took 136 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.15

