Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 58 (-20) columns and 315 (-138) elements
Clp1000I sum of infeasibilities 5.35115e-05 - average 5.19529e-07, 47 fixed columns
Coin0506I Presolve 7 (-96) rows, 5 (-53) columns and 18 (-297) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Coin0511I After Postsolve, objective 16814.423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Coin0511I After Postsolve, objective 16814.423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16814.4225 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 58 columns (57 integer (57 of which binary)) and 390 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.448%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.86089
Cbc0038I Pass   1: suminf.    0.82242 (3) obj. -16431.2 iterations 8
Cbc0038I Solution found of -5867.15
Cbc0038I Relaxing continuous gives -5867.15
Cbc0038I Rounding solution of -13134.2 is better than previous of -5867.15

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13502.3
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.82242 (3) obj. -16431.2 iterations 0
Cbc0038I Pass   3: suminf.    0.55209 (2) obj. -13502.3 iterations 2
Cbc0038I Pass   4: suminf.    0.05405 (1) obj. -16088 iterations 2
Cbc0038I Pass   5: suminf.    0.48342 (1) obj. -13502.3 iterations 1
Cbc0038I Pass   6: suminf.    1.53706 (6) obj. -13502.3 iterations 13
Cbc0038I Pass   7: suminf.    1.53706 (6) obj. -13502.3 iterations 3
Cbc0038I Pass   8: suminf.    0.17955 (1) obj. -13502.3 iterations 12
Cbc0038I Solution found of -14156.6
Cbc0038I Relaxing continuous gives -14156.6
Cbc0038I Rounding solution of -14208.6 is better than previous of -14156.6

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -14208.6 to -15151.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -15483.7
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.82242 (3) obj. -16431.2 iterations 0
Cbc0038I Pass  10: suminf.    0.17633 (2) obj. -15483.7 iterations 2
Cbc0038I Pass  11: suminf.    0.05405 (1) obj. -16088 iterations 2
Cbc0038I Pass  12: suminf.    0.15439 (1) obj. -15483.7 iterations 1
Cbc0038I Pass  13: suminf.    1.23972 (5) obj. -15483.7 iterations 7
Cbc0038I Pass  14: suminf.    0.57377 (2) obj. -16040.5 iterations 6
Cbc0038I Pass  15: suminf.    0.70365 (2) obj. -15483.7 iterations 2
Cbc0038I Pass  16: suminf.    1.20129 (4) obj. -15483.7 iterations 5
Cbc0038I Solution found of -15550
Cbc0038I Relaxing continuous gives -15550
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -15929.3
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 4
Cbc0038I Pass  17: suminf.    0.56784 (2) obj. -16547.2 iterations 6
Cbc0038I Pass  18: suminf.    0.05405 (1) obj. -16088 iterations 1
Cbc0038I Pass  19: suminf.    0.08040 (1) obj. -15929.3 iterations 1
Cbc0038I Pass  20: suminf.    0.44040 (2) obj. -16136.1 iterations 10
Cbc0038I Pass  21: suminf.    0.44040 (2) obj. -16136.1 iterations 2
Cbc0038I Pass  22: suminf.    1.27988 (3) obj. -15929.3 iterations 8
Cbc0038I Pass  23: suminf.    0.61861 (2) obj. -15929.3 iterations 3
Cbc0038I Pass  24: suminf.    0.47508 (2) obj. -16109.4 iterations 4
Cbc0038I Pass  25: suminf.    1.41983 (3) obj. -15929.3 iterations 6
Cbc0038I Pass  26: suminf.    1.11383 (3) obj. -15929.3 iterations 6
Cbc0038I Pass  27: suminf.    0.48465 (3) obj. -16464.2 iterations 5
Cbc0038I Pass  28: suminf.    0.48465 (3) obj. -16464.2 iterations 0
Cbc0038I Pass  29: suminf.    0.82844 (3) obj. -15929.3 iterations 9
Cbc0038I Pass  30: suminf.    0.75050 (3) obj. -15929.3 iterations 3
Cbc0038I Pass  31: suminf.    0.61039 (2) obj. -16403.6 iterations 7
Cbc0038I Pass  32: suminf.    0.61039 (2) obj. -16403.6 iterations 0
Cbc0038I Pass  33: suminf.    0.10409 (1) obj. -15929.3 iterations 3
Cbc0038I Pass  34: suminf.    0.10409 (1) obj. -15929.3 iterations 0
Cbc0038I Pass  35: suminf.    1.06042 (3) obj. -15929.3 iterations 7
Cbc0038I Pass  36: suminf.    1.11383 (3) obj. -15929.3 iterations 7
Cbc0038I Pass  37: suminf.    0.48465 (3) obj. -16464.2 iterations 6
Cbc0038I Pass  38: suminf.    0.48465 (3) obj. -16464.2 iterations 0
Cbc0038I Pass  39: suminf.    0.82844 (3) obj. -15929.3 iterations 10
Cbc0038I Pass  40: suminf.    0.75050 (3) obj. -15929.3 iterations 3
Cbc0038I Pass  41: suminf.    0.61039 (2) obj. -16403.6 iterations 8
Cbc0038I Pass  42: suminf.    0.61039 (2) obj. -16403.6 iterations 0
Cbc0038I Pass  43: suminf.    0.10409 (1) obj. -15929.3 iterations 3
Cbc0038I Pass  44: suminf.    0.10409 (1) obj. -15929.3 iterations 0
Cbc0038I Pass  45: suminf.    0.57468 (3) obj. -15929.3 iterations 5
Cbc0038I Pass  46: suminf.    0.10409 (1) obj. -15929.3 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15550 - took 0.02 seconds
Cbc0012I Integer solution of -15550 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 100 rows 58 columns, reduced to 4 rows 5 columns
Cbc0031I 7 added rows had average density of 9
Cbc0013I At root node, 7 cuts changed objective from -16814.423 to -16202.59 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 46 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 55.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15550, took 91 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 16 times (64 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 103 (-49) columns and 1595 (-1708) elements
Clp1000I sum of infeasibilities 0 - average 0, 97 fixed columns
Coin0506I Presolve 4 (-88) rows, 6 (-97) columns and 16 (-1579) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 16786.423
Clp0000I Optimal - objective value 16786.423
Coin0511I After Postsolve, objective 16786.423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8641978 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16850.414
Clp0000I Optimal - objective value 16850.414
Clp0000I Optimal - objective value 16850.414
Coin0511I After Postsolve, objective 16850.414, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16850.41443 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 103 columns (103 integer (103 of which binary)) and 1727 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.856%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.72048
Cbc0038I Pass   1: suminf.    0.85707 (13) obj. -16550.9 iterations 34
Cbc0038I Pass   2: suminf.    0.17923 (5) obj. -16091.9 iterations 12
Cbc0038I Solution found of -10391.3
Cbc0038I Rounding solution of -12804.9 is better than previous of -10391.3

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -13207.5
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.85707 (13) obj. -16550.9 iterations 0
Cbc0038I Pass   4: suminf.    0.17923 (5) obj. -16091.9 iterations 5
Cbc0038I Pass   5: suminf.    0.46763 (1) obj. -13207.5 iterations 5
Cbc0038I Pass   6: suminf.    0.05405 (1) obj. -16088 iterations 1
Cbc0038I Pass   7: suminf.    1.44673 (17) obj. -13207.5 iterations 20
Cbc0038I Pass   8: suminf.    0.27517 (3) obj. -13207.5 iterations 11
Cbc0038I Pass   9: suminf.    0.12108 (4) obj. -13796.4 iterations 3
Cbc0038I Pass  10: suminf.    0.15578 (1) obj. -13207.5 iterations 4
Cbc0038I Solution found of -14145.6
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -14145.6 to -14156.6 (0.06 seconds)
Cbc0038I Round again with cutoff of -14691.4
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.85707 (13) obj. -16550.9 iterations 0
Cbc0038I Pass  12: suminf.    0.17923 (5) obj. -16091.9 iterations 5
Cbc0038I Pass  13: suminf.    0.28597 (1) obj. -14691.4 iterations 5
Cbc0038I Pass  14: suminf.    0.05405 (1) obj. -16088 iterations 1
Cbc0038I Pass  15: suminf.    2.24503 (9) obj. -14691.4 iterations 21
Cbc0038I Pass  16: suminf.    0.75317 (12) obj. -14691.4 iterations 4
Cbc0038I Pass  17: suminf.    0.70492 (12) obj. -14691.4 iterations 3
Cbc0038I Pass  18: suminf.    0.31990 (4) obj. -14691.4 iterations 16
Cbc0038I Pass  19: suminf.    0.31990 (4) obj. -14691.4 iterations 0
Cbc0038I Pass  20: suminf.    0.41195 (3) obj. -15505.8 iterations 8
Cbc0038I Pass  21: suminf.    0.41195 (3) obj. -15505.8 iterations 0
Cbc0038I Pass  22: suminf.    0.71787 (2) obj. -14691.4 iterations 7
Cbc0038I Pass  23: suminf.    0.71787 (2) obj. -14691.4 iterations 0
Cbc0038I Pass  24: suminf.    0.50585 (2) obj. -15483.5 iterations 6
Cbc0038I Pass  25: suminf.    0.21848 (1) obj. -14691.4 iterations 2
Cbc0038I Pass  26: suminf.    1.77108 (7) obj. -14691.4 iterations 13
Cbc0038I Pass  27: suminf.    0.45370 (4) obj. -14691.4 iterations 12
Cbc0038I Pass  28: suminf.    0.50585 (2) obj. -15481.5 iterations 7
Cbc0038I Pass  29: suminf.    0.21881 (1) obj. -14691.4 iterations 2
Cbc0038I Pass  30: suminf.    0.70272 (7) obj. -14691.4 iterations 16
Cbc0038I Pass  31: suminf.    0.70272 (7) obj. -14691.4 iterations 3
Cbc0038I Pass  32: suminf.    0.30325 (2) obj. -14691.4 iterations 10
Cbc0038I Pass  33: suminf.    0.41195 (3) obj. -15499.8 iterations 6
Cbc0038I Pass  34: suminf.    0.41195 (3) obj. -15499.8 iterations 0
Cbc0038I Pass  35: suminf.    0.71951 (2) obj. -14691.4 iterations 6
Cbc0038I Pass  36: suminf.    0.71951 (2) obj. -14691.4 iterations 0
Cbc0038I Pass  37: suminf.    0.50585 (2) obj. -15477.5 iterations 6
Cbc0038I Pass  38: suminf.    0.21948 (1) obj. -14691.4 iterations 2
Cbc0038I Pass  39: suminf.    0.89147 (6) obj. -14691.4 iterations 16
Cbc0038I Pass  40: suminf.    0.46903 (4) obj. -14691.4 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 33 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -14156.6 to -15458.9 (0.08 seconds)
Cbc0038I Round again with cutoff of -15870.3
Cbc0038I Reduced cost fixing fixed 46 variables on major pass 4
Cbc0038I Pass  40: suminf.    0.85707 (13) obj. -16550.9 iterations 0
Cbc0038I Pass  41: suminf.    0.17923 (5) obj. -16091.9 iterations 2
Cbc0038I Pass  42: suminf.    0.09020 (1) obj. -15870.3 iterations 5
Cbc0038I Pass  43: suminf.    0.05405 (1) obj. -16088 iterations 1
Cbc0038I Pass  44: suminf.    2.17584 (16) obj. -15870.3 iterations 12
Cbc0038I Pass  45: suminf.    1.28002 (11) obj. -15870.3 iterations 7
Cbc0038I Pass  46: suminf.    0.68182 (2) obj. -16439.1 iterations 16
Cbc0038I Pass  47: suminf.    0.44977 (1) obj. -15870.3 iterations 2
Cbc0038I Pass  48: suminf.    0.45946 (1) obj. -16417 iterations 1
Cbc0038I Pass  49: suminf.    1.24122 (7) obj. -15870.3 iterations 15
Cbc0038I Pass  50: suminf.    0.96844 (9) obj. -15870.3 iterations 4
Cbc0038I Pass  51: suminf.    0.91468 (8) obj. -15870.3 iterations 2
Cbc0038I Pass  52: suminf.    0.89015 (3) obj. -15948.1 iterations 10
Cbc0038I Pass  53: suminf.    0.69088 (3) obj. -15870.3 iterations 6
Cbc0038I Pass  54: suminf.    0.89015 (3) obj. -15948.1 iterations 5
Cbc0038I Pass  55: suminf.    1.08171 (11) obj. -15870.3 iterations 18
Cbc0038I Pass  56: suminf.    0.68556 (8) obj. -15870.3 iterations 9
Cbc0038I Pass  57: suminf.    0.48465 (3) obj. -16451.7 iterations 12
Cbc0038I Pass  58: suminf.    0.74533 (3) obj. -15870.3 iterations 6
Cbc0038I Pass  59: suminf.    0.71850 (3) obj. -15870.3 iterations 3
Cbc0038I Pass  60: suminf.    0.61039 (2) obj. -16386.6 iterations 7
Cbc0038I Pass  61: suminf.    0.61039 (2) obj. -16386.6 iterations 0
Cbc0038I Pass  62: suminf.    0.09190 (2) obj. -15870.3 iterations 3
Cbc0038I Pass  63: suminf.    0.09190 (2) obj. -15870.3 iterations 0
Cbc0038I Pass  64: suminf.    2.47881 (10) obj. -15870.3 iterations 15
Cbc0038I Pass  65: suminf.    0.75351 (6) obj. -15870.3 iterations 7
Cbc0038I Pass  66: suminf.    0.61039 (2) obj. -16391.6 iterations 10
Cbc0038I Pass  67: suminf.    0.61039 (2) obj. -16391.6 iterations 0
Cbc0038I Pass  68: suminf.    0.09054 (2) obj. -15870.3 iterations 3
Cbc0038I Pass  69: suminf.    0.09054 (2) obj. -15870.3 iterations 0
Cbc0038I Rounding solution of -15550 is better than previous of -15458.9

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -16158.4
Cbc0038I Reduced cost fixing fixed 50 variables on major pass 5
Cbc0038I Pass  69: suminf.    0.85707 (13) obj. -16550.9 iterations 0
Cbc0038I Pass  70: suminf.    0.27743 (13) obj. -16158.4 iterations 6
Cbc0038I Pass  71: suminf.    0.89321 (2) obj. -16158.4 iterations 17
Cbc0038I Pass  72: suminf.    0.24324 (1) obj. -16377.3 iterations 2
Cbc0038I Pass  73: suminf.    0.27959 (1) obj. -16158.4 iterations 1
Cbc0038I Pass  74: suminf.    0.87672 (8) obj. -16158.4 iterations 9
Cbc0038I Pass  75: suminf.    0.83070 (9) obj. -16470.2 iterations 2
Cbc0038I Pass  76: suminf.    1.07162 (3) obj. -16158.4 iterations 12
Cbc0038I Pass  77: suminf.    0.65327 (2) obj. -16446.6 iterations 5
Cbc0038I Pass  78: suminf.    0.53740 (2) obj. -16158.4 iterations 1
Cbc0038I Pass  79: suminf.    0.91284 (2) obj. -16158.4 iterations 5
Cbc0038I Pass  80: suminf.    0.69336 (8) obj. -16158.4 iterations 19
Cbc0038I Pass  81: suminf.    0.61084 (7) obj. -16158.4 iterations 5
Cbc0038I Pass  82: suminf.    0.48465 (3) obj. -16451.7 iterations 13
Cbc0038I Pass  83: suminf.    1.06479 (3) obj. -16158.4 iterations 6
Cbc0038I Pass  84: suminf.    0.65327 (2) obj. -16437.6 iterations 5
Cbc0038I Pass  85: suminf.    0.54101 (2) obj. -16158.4 iterations 1
Cbc0038I Pass  86: suminf.    0.90857 (2) obj. -16158.4 iterations 5
Cbc0038I Pass  87: suminf.    0.77141 (8) obj. -16463.2 iterations 13
Cbc0038I Pass  88: suminf.    0.77141 (8) obj. -16463.2 iterations 0
Cbc0038I Pass  89: suminf.    1.06783 (3) obj. -16158.4 iterations 11
Cbc0038I Pass  90: suminf.    0.65327 (2) obj. -16441.6 iterations 5
Cbc0038I Pass  91: suminf.    0.53941 (2) obj. -16158.4 iterations 1
Cbc0038I Pass  92: suminf.    0.91047 (2) obj. -16158.4 iterations 5
Cbc0038I Pass  93: suminf.    0.65327 (2) obj. -16436.6 iterations 6
Cbc0038I Pass  94: suminf.    0.54142 (2) obj. -16158.4 iterations 1
Cbc0038I Pass  95: suminf.    0.90810 (2) obj. -16158.4 iterations 5
Cbc0038I Pass  96: suminf.    0.65327 (2) obj. -16436.6 iterations 5
Cbc0038I Pass  97: suminf.    0.83455 (8) obj. -16158.4 iterations 13
Cbc0038I Pass  98: suminf.    0.78201 (9) obj. -16457.2 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -15550 - took 0.07 seconds
Cbc0012I Integer solution of -15550 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 90 rows 103 columns, reduced to 10 rows 11 columns
Cbc0031I 14 added rows had average density of 5.3571429
Cbc0013I At root node, 14 cuts changed objective from -16830.47 to -16003.843 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 276 row cuts average 4.5 elements, 18 column cuts (18 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15550, took 265 iterations and 2 nodes (0.15 seconds)
Cbc0032I Strong branching done 28 times (79 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 58 (-20) columns and 315 (-138) elements
Clp1000I sum of infeasibilities 5.35115e-05 - average 5.19529e-07, 47 fixed columns
Coin0506I Presolve 7 (-96) rows, 5 (-53) columns and 18 (-297) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Coin0511I After Postsolve, objective 16814.423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Clp0000I Optimal - objective value 16814.423
Coin0511I After Postsolve, objective 16814.423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16814.4225 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 58 columns (57 integer (57 of which binary)) and 390 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.448%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.86089
Cbc0038I Pass   1: suminf.    0.82242 (3) obj. -16431.2 iterations 8
Cbc0038I Solution found of -5867.15
Cbc0038I Relaxing continuous gives -5867.15
Cbc0038I Rounding solution of -13134.2 is better than previous of -5867.15

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -13502.3
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.82242 (3) obj. -16431.2 iterations 0
Cbc0038I Pass   3: suminf.    0.55209 (2) obj. -13502.3 iterations 2
Cbc0038I Pass   4: suminf.    0.05405 (1) obj. -16088 iterations 2
Cbc0038I Pass   5: suminf.    0.48342 (1) obj. -13502.3 iterations 1
Cbc0038I Pass   6: suminf.    1.53706 (6) obj. -13502.3 iterations 13
Cbc0038I Pass   7: suminf.    1.53706 (6) obj. -13502.3 iterations 3
Cbc0038I Pass   8: suminf.    0.17955 (1) obj. -13502.3 iterations 12
Cbc0038I Solution found of -14156.6
Cbc0038I Relaxing continuous gives -14156.6
Cbc0038I Rounding solution of -14208.6 is better than previous of -14156.6

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -14208.6 to -15151.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -15483.7
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.82242 (3) obj. -16431.2 iterations 0
Cbc0038I Pass  10: suminf.    0.17633 (2) obj. -15483.7 iterations 2
Cbc0038I Pass  11: suminf.    0.05405 (1) obj. -16088 iterations 2
Cbc0038I Pass  12: suminf.    0.15439 (1) obj. -15483.7 iterations 1
Cbc0038I Pass  13: suminf.    1.23972 (5) obj. -15483.7 iterations 7
Cbc0038I Pass  14: suminf.    0.57377 (2) obj. -16040.5 iterations 6
Cbc0038I Pass  15: suminf.    0.70365 (2) obj. -15483.7 iterations 2
Cbc0038I Pass  16: suminf.    1.20129 (4) obj. -15483.7 iterations 5
Cbc0038I Solution found of -15550
Cbc0038I Relaxing continuous gives -15550
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -15929.3
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 4
Cbc0038I Pass  17: suminf.    0.56784 (2) obj. -16547.2 iterations 6
Cbc0038I Pass  18: suminf.    0.05405 (1) obj. -16088 iterations 1
Cbc0038I Pass  19: suminf.    0.08040 (1) obj. -15929.3 iterations 1
Cbc0038I Pass  20: suminf.    0.44040 (2) obj. -16136.1 iterations 10
Cbc0038I Pass  21: suminf.    0.44040 (2) obj. -16136.1 iterations 2
Cbc0038I Pass  22: suminf.    1.27988 (3) obj. -15929.3 iterations 8
Cbc0038I Pass  23: suminf.    0.61861 (2) obj. -15929.3 iterations 3
Cbc0038I Pass  24: suminf.    0.47508 (2) obj. -16109.4 iterations 4
Cbc0038I Pass  25: suminf.    1.41983 (3) obj. -15929.3 iterations 6
Cbc0038I Pass  26: suminf.    1.11383 (3) obj. -15929.3 iterations 6
Cbc0038I Pass  27: suminf.    0.48465 (3) obj. -16464.2 iterations 5
Cbc0038I Pass  28: suminf.    0.48465 (3) obj. -16464.2 iterations 0
Cbc0038I Pass  29: suminf.    0.82844 (3) obj. -15929.3 iterations 9
Cbc0038I Pass  30: suminf.    0.75050 (3) obj. -15929.3 iterations 3
Cbc0038I Pass  31: suminf.    0.61039 (2) obj. -16403.6 iterations 7
Cbc0038I Pass  32: suminf.    0.61039 (2) obj. -16403.6 iterations 0
Cbc0038I Pass  33: suminf.    0.10409 (1) obj. -15929.3 iterations 3
Cbc0038I Pass  34: suminf.    0.10409 (1) obj. -15929.3 iterations 0
Cbc0038I Pass  35: suminf.    1.06042 (3) obj. -15929.3 iterations 7
Cbc0038I Pass  36: suminf.    1.11383 (3) obj. -15929.3 iterations 7
Cbc0038I Pass  37: suminf.    0.48465 (3) obj. -16464.2 iterations 6
Cbc0038I Pass  38: suminf.    0.48465 (3) obj. -16464.2 iterations 0
Cbc0038I Pass  39: suminf.    0.82844 (3) obj. -15929.3 iterations 10
Cbc0038I Pass  40: suminf.    0.75050 (3) obj. -15929.3 iterations 3
Cbc0038I Pass  41: suminf.    0.61039 (2) obj. -16403.6 iterations 8
Cbc0038I Pass  42: suminf.    0.61039 (2) obj. -16403.6 iterations 0
Cbc0038I Pass  43: suminf.    0.10409 (1) obj. -15929.3 iterations 3
Cbc0038I Pass  44: suminf.    0.10409 (1) obj. -15929.3 iterations 0
Cbc0038I Pass  45: suminf.    0.57468 (3) obj. -15929.3 iterations 5
Cbc0038I Pass  46: suminf.    0.10409 (1) obj. -15929.3 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 58 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15550 - took 0.02 seconds
Cbc0012I Integer solution of -15550 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 100 rows 58 columns, reduced to 4 rows 5 columns
Cbc0031I 7 added rows had average density of 9
Cbc0013I At root node, 7 cuts changed objective from -16814.423 to -16202.59 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 46 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 55.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15550, took 91 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 16 times (64 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-73) rows, 93 (-60) columns and 1340 (-1964) elements
Clp1000I sum of infeasibilities 1.40093e-08 - average 1.70845e-10, 90 fixed columns
Coin0506I Presolve 3 (-79) rows, 3 (-90) columns and 8 (-1332) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 16794.423
Clp0000I Optimal - objective value 16794.423
Coin0511I After Postsolve, objective 16794.423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1795292 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 16850.414
Clp0000I Optimal - objective value 16850.414
Clp0000I Optimal - objective value 16850.414
Coin0511I After Postsolve, objective 16850.414, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16850.41443 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 81 rows, 94 columns (94 integer (94 of which binary)) and 1417 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.76535
Cbc0038I Pass   1: suminf.    0.93723 (13) obj. -16550.8 iterations 39
Cbc0038I Pass   2: suminf.    0.20823 (5) obj. -16091.9 iterations 2
Cbc0038I Solution found of -10391.3
Cbc0038I Rounding solution of -12804.9 is better than previous of -10391.3

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 94 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -13207.3
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.93723 (13) obj. -16550.8 iterations 0
Cbc0038I Pass   4: suminf.    0.20823 (5) obj. -16091.9 iterations 4
Cbc0038I Pass   5: suminf.    0.46761 (1) obj. -13207.3 iterations 5
Cbc0038I Pass   6: suminf.    0.05405 (1) obj. -16088 iterations 1
Cbc0038I Pass   7: suminf.    0.54240 (7) obj. -13207.3 iterations 20
Cbc0038I Pass   8: suminf.    0.22857 (5) obj. -13335.8 iterations 7
Cbc0038I Solution found of -13329.1
Cbc0038I Rounding solution of -13331.1 is better than previous of -13329.1

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 94 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -13331.1 to -15458.9 (0.06 seconds)
Cbc0038I Round again with cutoff of -15732.9
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.93723 (13) obj. -16550.8 iterations 0
Cbc0038I Pass  10: suminf.    0.20823 (5) obj. -16091.9 iterations 2
Cbc0038I Pass  11: suminf.    0.11302 (1) obj. -15732.9 iterations 5
Cbc0038I Pass  12: suminf.    0.05405 (1) obj. -16088 iterations 1
Cbc0038I Pass  13: suminf.    4.09994 (11) obj. -15732.9 iterations 17
Cbc0038I Pass  14: suminf.    2.62654 (8) obj. -15732.9 iterations 7
Cbc0038I Pass  15: suminf.    0.11252 (1) obj. -15732.9 iterations 7
Cbc0038I Pass  16: suminf.    0.05405 (1) obj. -16085 iterations 1
Cbc0038I Pass  17: suminf.    1.35389 (6) obj. -15732.9 iterations 14
Cbc0038I Pass  18: suminf.    1.30640 (5) obj. -15732.9 iterations 5
Cbc0038I Pass  19: suminf.    1.07755 (7) obj. -15732.9 iterations 8
Cbc0038I Pass  20: suminf.    0.86266 (7) obj. -16084.4 iterations 4
Cbc0038I Pass  21: suminf.    0.73509 (7) obj. -15732.9 iterations 1
Cbc0038I Pass  22: suminf.    0.94003 (2) obj. -15732.9 iterations 9
Cbc0038I Pass  23: suminf.    0.63817 (2) obj. -15964 iterations 5
Cbc0038I Pass  24: suminf.    0.51430 (2) obj. -15732.9 iterations 2
Cbc0038I Pass  25: suminf.    0.91997 (9) obj. -15732.9 iterations 10
Cbc0038I Pass  26: suminf.    0.84473 (9) obj. -16095.3 iterations 1
Cbc0038I Pass  27: suminf.    1.11137 (3) obj. -15732.9 iterations 12
Cbc0038I Pass  28: suminf.    0.63817 (2) obj. -15959 iterations 6
Cbc0038I Pass  29: suminf.    0.51631 (2) obj. -15732.9 iterations 2
Cbc0038I Pass  30: suminf.    0.93767 (2) obj. -15732.9 iterations 4
Cbc0038I Pass  31: suminf.    2.42042 (8) obj. -15732.9 iterations 12
Cbc0038I Pass  32: suminf.    2.24720 (7) obj. -15732.9 iterations 4
Cbc0038I Pass  33: suminf.    0.97020 (3) obj. -15732.9 iterations 11
Cbc0038I Pass  34: suminf.    0.70234 (3) obj. -16074.6 iterations 4
Cbc0038I Pass  35: suminf.    0.56812 (3) obj. -15732.9 iterations 1
Cbc0038I Pass  36: suminf.    0.93767 (2) obj. -15732.9 iterations 5
Cbc0038I Pass  37: suminf.    0.63817 (2) obj. -15959 iterations 5
Cbc0038I Pass  38: suminf.    0.51631 (2) obj. -15732.9 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 94 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -15458.9 - took 0.03 seconds
Cbc0012I Integer solution of -15458.87 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -15545 found by DiveCoefficient after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 81 rows 94 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -15550 found by RINS after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 18 added rows had average density of 5.8333333
Cbc0013I At root node, 18 cuts changed objective from -16829.018 to -16148.417 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 372 row cuts average 3.9 elements, 18 column cuts (18 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 130 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15550, took 305 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 36 times (227 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

