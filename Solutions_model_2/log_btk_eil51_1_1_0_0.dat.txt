Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-27) rows, 44 (-9) columns and 236 (-67) elements
Clp1000I sum of infeasibilities 0.00154773 - average 1.98427e-05, 9 fixed columns
Coin0506I Presolve 57 (-21) rows, 35 (-9) columns and 176 (-60) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 56.335034
Clp0000I Optimal - objective value 56.335034
Coin0511I After Postsolve, objective 56.335034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.335034
Clp0000I Optimal - objective value 56.335034
Clp0000I Optimal - objective value 56.335034
Coin0511I After Postsolve, objective 56.335034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.33503351 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 78 rows, 44 columns (43 integer (43 of which binary)) and 236 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.941%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.52334
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.8225 iterations 26
Cbc0038I Solution found of -7.8225
Cbc0038I Relaxing continuous gives -7.8225
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 44 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -7.8225 to -26.6416 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.611
Cbc0038I Pass   2: suminf.    1.63203 (7) obj. -29.611 iterations 10
Cbc0038I Pass   3: suminf.    1.63203 (7) obj. -29.611 iterations 0
Cbc0038I Pass   4: suminf.    0.96914 (4) obj. -29.611 iterations 10
Cbc0038I Pass   5: suminf.    0.81469 (4) obj. -29.611 iterations 2
Cbc0038I Pass   6: suminf.    0.69305 (4) obj. -29.611 iterations 5
Cbc0038I Pass   7: suminf.    0.64367 (4) obj. -29.611 iterations 1
Cbc0038I Pass   8: suminf.    1.63391 (4) obj. -29.611 iterations 3
Cbc0038I Pass   9: suminf.    3.77431 (9) obj. -29.611 iterations 12
Cbc0038I Pass  10: suminf.    1.29517 (3) obj. -29.611 iterations 7
Cbc0038I Pass  11: suminf.    1.12596 (4) obj. -29.611 iterations 2
Cbc0038I Pass  12: suminf.    0.98758 (4) obj. -29.611 iterations 8
Cbc0038I Pass  13: suminf.    0.65660 (3) obj. -29.611 iterations 2
Cbc0038I Pass  14: suminf.    0.56782 (3) obj. -29.611 iterations 1
Cbc0038I Pass  15: suminf.    0.80101 (4) obj. -29.611 iterations 11
Cbc0038I Pass  16: suminf.    0.80101 (4) obj. -29.611 iterations 2
Cbc0038I Pass  17: suminf.    0.75397 (3) obj. -29.611 iterations 3
Cbc0038I Pass  18: suminf.    0.28664 (4) obj. -29.611 iterations 3
Cbc0038I Pass  19: suminf.    1.08237 (4) obj. -29.611 iterations 3
Cbc0038I Pass  20: suminf.    0.72713 (4) obj. -29.611 iterations 3
Cbc0038I Pass  21: suminf.    1.55277 (5) obj. -29.611 iterations 6
Cbc0038I Pass  22: suminf.    0.75350 (4) obj. -29.611 iterations 5
Cbc0038I Pass  23: suminf.    2.73704 (10) obj. -29.611 iterations 10
Cbc0038I Pass  24: suminf.    1.09917 (3) obj. -29.611 iterations 7
Cbc0038I Pass  25: suminf.    1.36429 (4) obj. -29.611 iterations 4
Cbc0038I Pass  26: suminf.    1.13603 (3) obj. -29.611 iterations 2
Cbc0038I Pass  27: suminf.    2.35959 (7) obj. -29.611 iterations 12
Cbc0038I Pass  28: suminf.    2.35959 (7) obj. -29.611 iterations 2
Cbc0038I Pass  29: suminf.    1.89773 (6) obj. -29.611 iterations 12
Cbc0038I Pass  30: suminf.    1.65183 (5) obj. -29.611 iterations 1
Cbc0038I Pass  31: suminf.    0.82842 (4) obj. -29.611 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 44 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -26.6416 - took 0.04 seconds
Cbc0012I Integer solution of -26.6416 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 78 rows 44 columns, reduced to 44 rows 28 columns
Cbc0031I 15 added rows had average density of 38.6
Cbc0013I At root node, 15 cuts changed objective from -56.335034 to -38.373546 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3146 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1225 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.6416, took 4292 iterations and 16 nodes (0.39 seconds)
Cbc0032I Strong branching done 250 times (3849 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 5, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-35) rows, 77 (-25) columns and 960 (-618) elements
Clp1000I sum of infeasibilities 7.74391e-08 - average 1.12231e-09, 11 fixed columns
Coin0506I Presolve 55 (-14) rows, 65 (-12) columns and 678 (-282) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 5.1346915 - largest nonzero change 2.6790835e-05 ( 0.0014417021%) - largest zero change 2.6645041e-05
Clp0000I Optimal - objective value 73.275931
Clp0000I Optimal - objective value 73.275931
Coin0511I After Postsolve, objective 73.275931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.275931
Clp0000I Optimal - objective value 73.275931
Clp0000I Optimal - objective value 73.275931
Coin0511I After Postsolve, objective 73.275931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.27593118 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 77 columns (77 integer (77 of which binary)) and 962 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.424%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.36798
Cbc0038I Pass   1: suminf.    1.44068 (18) obj. -49.1764 iterations 9
Cbc0038I Pass   2: suminf.    1.44068 (18) obj. -49.1764 iterations 1
Cbc0038I Pass   3: suminf.    0.03571 (1) obj. -13.5692 iterations 17
Cbc0038I Solution found of -12.6049
Cbc0038I Rounding solution of -18.814 is better than previous of -12.6049

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 77 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.5445
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.44068 (18) obj. -49.1764 iterations 0
Cbc0038I Pass   5: suminf.    1.44068 (18) obj. -49.1764 iterations 1
Cbc0038I Pass   6: suminf.    0.39524 (8) obj. -27.8411 iterations 10
Cbc0038I Pass   7: suminf.    0.17367 (4) obj. -23.5445 iterations 11
Cbc0038I Pass   8: suminf.    0.17367 (4) obj. -23.5445 iterations 0
Cbc0038I Pass   9: suminf.    0.07564 (2) obj. -23.5445 iterations 8
Cbc0038I Pass  10: suminf.    0.07564 (2) obj. -23.5445 iterations 0
Cbc0038I Pass  11: suminf.    0.25559 (2) obj. -23.5445 iterations 3
Cbc0038I Pass  12: suminf.    0.30341 (2) obj. -23.5445 iterations 3
Cbc0038I Pass  13: suminf.    0.32857 (1) obj. -23.5445 iterations 1
Cbc0038I Pass  14: suminf.    1.05252 (6) obj. -23.5445 iterations 15
Cbc0038I Pass  15: suminf.    1.00481 (6) obj. -23.5445 iterations 3
Cbc0038I Pass  16: suminf.    0.88576 (3) obj. -23.5445 iterations 9
Cbc0038I Pass  17: suminf.    0.88576 (3) obj. -23.5445 iterations 0
Cbc0038I Pass  18: suminf.    1.07598 (3) obj. -23.5445 iterations 3
Cbc0038I Pass  19: suminf.    1.07598 (3) obj. -23.5445 iterations 1
Cbc0038I Pass  20: suminf.    0.88576 (3) obj. -23.5445 iterations 5
Cbc0038I Pass  21: suminf.    1.17973 (7) obj. -23.5445 iterations 16
Cbc0038I Pass  22: suminf.    1.04180 (6) obj. -23.5445 iterations 4
Cbc0038I Pass  23: suminf.    1.06769 (3) obj. -23.5445 iterations 10
Cbc0038I Pass  24: suminf.    1.06769 (3) obj. -23.5445 iterations 2
Cbc0038I Pass  25: suminf.    0.99285 (3) obj. -23.5445 iterations 2
Cbc0038I Pass  26: suminf.    0.63828 (3) obj. -23.5445 iterations 2
Cbc0038I Pass  27: suminf.    2.78512 (17) obj. -23.5445 iterations 24
Cbc0038I Pass  28: suminf.    2.37380 (14) obj. -23.5445 iterations 6
Cbc0038I Pass  29: suminf.    1.52329 (7) obj. -23.5445 iterations 21
Cbc0038I Pass  30: suminf.    1.19314 (6) obj. -24.0932 iterations 6
Cbc0038I Pass  31: suminf.    1.54871 (6) obj. -23.5445 iterations 8
Cbc0038I Pass  32: suminf.    1.54871 (6) obj. -23.5445 iterations 2
Cbc0038I Pass  33: suminf.    1.51638 (6) obj. -23.5445 iterations 7
Cbc0038I Rounding solution of -26.5985 is better than previous of -18.814

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 77 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -34.5027
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.44068 (18) obj. -49.1764 iterations 0
Cbc0038I Pass  34: suminf.    1.44068 (18) obj. -49.1764 iterations 1
Cbc0038I Pass  35: suminf.    0.57572 (4) obj. -34.5027 iterations 21
Cbc0038I Pass  36: suminf.    0.53732 (3) obj. -34.5027 iterations 3
Cbc0038I Pass  37: suminf.    0.99933 (5) obj. -34.5027 iterations 5
Cbc0038I Pass  38: suminf.    0.99933 (5) obj. -34.5027 iterations 2
Cbc0038I Pass  39: suminf.    0.94047 (4) obj. -34.5027 iterations 10
Cbc0038I Pass  40: suminf.    0.94047 (4) obj. -34.5027 iterations 3
Cbc0038I Pass  41: suminf.    0.92454 (4) obj. -34.5027 iterations 4
Cbc0038I Pass  42: suminf.    0.92454 (4) obj. -34.5027 iterations 2
Cbc0038I Pass  43: suminf.    0.94047 (4) obj. -34.5027 iterations 4
Cbc0038I Pass  44: suminf.    1.38650 (8) obj. -34.5027 iterations 14
Cbc0038I Pass  45: suminf.    0.89865 (6) obj. -36.7281 iterations 6
Cbc0038I Pass  46: suminf.    1.11034 (5) obj. -34.5027 iterations 7
Cbc0038I Pass  47: suminf.    0.71398 (5) obj. -36.0881 iterations 2
Cbc0038I Pass  48: suminf.    1.49627 (9) obj. -34.5027 iterations 24
Cbc0038I Pass  49: suminf.    1.09712 (8) obj. -34.5027 iterations 9
Cbc0038I Pass  50: suminf.    1.17345 (7) obj. -34.5027 iterations 7
Cbc0038I Pass  51: suminf.    1.13624 (12) obj. -34.5027 iterations 4
Cbc0038I Pass  52: suminf.    1.52487 (10) obj. -34.5027 iterations 11
Cbc0038I Pass  53: suminf.    1.50379 (10) obj. -34.5027 iterations 2
Cbc0038I Pass  54: suminf.    1.02517 (9) obj. -34.5027 iterations 9
Cbc0038I Pass  55: suminf.    1.01889 (9) obj. -34.5027 iterations 4
Cbc0038I Pass  56: suminf.    1.69304 (9) obj. -34.5027 iterations 13
Cbc0038I Pass  57: suminf.    1.39152 (9) obj. -34.5027 iterations 3
Cbc0038I Pass  58: suminf.    1.26526 (8) obj. -34.5027 iterations 10
Cbc0038I Pass  59: suminf.    1.26526 (8) obj. -34.5027 iterations 1
Cbc0038I Pass  60: suminf.    1.37134 (8) obj. -34.5027 iterations 3
Cbc0038I Pass  61: suminf.    1.37134 (8) obj. -34.5027 iterations 1
Cbc0038I Pass  62: suminf.    1.26526 (8) obj. -34.5027 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 77 columns, reduced to 39 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.5985 - took 0.03 seconds
Cbc0012I Integer solution of -26.598531 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 69 rows 77 columns, reduced to 8 rows 12 columns
Cbc0031I 37 added rows had average density of 10.054054
Cbc0013I At root node, 37 cuts changed objective from -66.118877 to -29.471065 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 797 row cuts average 3.8 elements, 16 column cuts (16 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 78 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 82 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 35.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.598531 best solution, best possible -29.470736 (0.42 seconds)
Cbc0004I Integer solution of -26.6416 found after 617 iterations and 4 nodes (0.76 seconds)
Cbc0001I Search completed - best objective -26.6416, took 617 iterations and 4 nodes (0.76 seconds)
Cbc0032I Strong branching done 62 times (834 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.76

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-27) rows, 44 (-9) columns and 236 (-67) elements
Clp1000I sum of infeasibilities 0.00154773 - average 1.98427e-05, 9 fixed columns
Coin0506I Presolve 57 (-21) rows, 35 (-9) columns and 176 (-60) elements
Clp0029I End of values pass after 35 iterations
Clp0000I Optimal - objective value 56.335034
Clp0000I Optimal - objective value 56.335034
Coin0511I After Postsolve, objective 56.335034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.335034
Clp0000I Optimal - objective value 56.335034
Clp0000I Optimal - objective value 56.335034
Coin0511I After Postsolve, objective 56.335034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.33503351 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 78 rows, 44 columns (43 integer (43 of which binary)) and 236 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.941%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.52334
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.8225 iterations 26
Cbc0038I Solution found of -7.8225
Cbc0038I Relaxing continuous gives -7.8225
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 44 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -7.8225 to -26.6416 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.611
Cbc0038I Pass   2: suminf.    1.63203 (7) obj. -29.611 iterations 10
Cbc0038I Pass   3: suminf.    1.63203 (7) obj. -29.611 iterations 0
Cbc0038I Pass   4: suminf.    0.96914 (4) obj. -29.611 iterations 10
Cbc0038I Pass   5: suminf.    0.81469 (4) obj. -29.611 iterations 2
Cbc0038I Pass   6: suminf.    0.69305 (4) obj. -29.611 iterations 5
Cbc0038I Pass   7: suminf.    0.64367 (4) obj. -29.611 iterations 1
Cbc0038I Pass   8: suminf.    1.63391 (4) obj. -29.611 iterations 3
Cbc0038I Pass   9: suminf.    3.77431 (9) obj. -29.611 iterations 12
Cbc0038I Pass  10: suminf.    1.29517 (3) obj. -29.611 iterations 7
Cbc0038I Pass  11: suminf.    1.12596 (4) obj. -29.611 iterations 2
Cbc0038I Pass  12: suminf.    0.98758 (4) obj. -29.611 iterations 8
Cbc0038I Pass  13: suminf.    0.65660 (3) obj. -29.611 iterations 2
Cbc0038I Pass  14: suminf.    0.56782 (3) obj. -29.611 iterations 1
Cbc0038I Pass  15: suminf.    0.80101 (4) obj. -29.611 iterations 11
Cbc0038I Pass  16: suminf.    0.80101 (4) obj. -29.611 iterations 2
Cbc0038I Pass  17: suminf.    0.75397 (3) obj. -29.611 iterations 3
Cbc0038I Pass  18: suminf.    0.28664 (4) obj. -29.611 iterations 3
Cbc0038I Pass  19: suminf.    1.08237 (4) obj. -29.611 iterations 3
Cbc0038I Pass  20: suminf.    0.72713 (4) obj. -29.611 iterations 3
Cbc0038I Pass  21: suminf.    1.55277 (5) obj. -29.611 iterations 6
Cbc0038I Pass  22: suminf.    0.75350 (4) obj. -29.611 iterations 5
Cbc0038I Pass  23: suminf.    2.73704 (10) obj. -29.611 iterations 10
Cbc0038I Pass  24: suminf.    1.09917 (3) obj. -29.611 iterations 7
Cbc0038I Pass  25: suminf.    1.36429 (4) obj. -29.611 iterations 4
Cbc0038I Pass  26: suminf.    1.13603 (3) obj. -29.611 iterations 2
Cbc0038I Pass  27: suminf.    2.35959 (7) obj. -29.611 iterations 12
Cbc0038I Pass  28: suminf.    2.35959 (7) obj. -29.611 iterations 2
Cbc0038I Pass  29: suminf.    1.89773 (6) obj. -29.611 iterations 12
Cbc0038I Pass  30: suminf.    1.65183 (5) obj. -29.611 iterations 1
Cbc0038I Pass  31: suminf.    0.82842 (4) obj. -29.611 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 44 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.6416 - took 0.04 seconds
Cbc0012I Integer solution of -26.6416 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 78 rows 44 columns, reduced to 44 rows 28 columns
Cbc0031I 15 added rows had average density of 38.6
Cbc0013I At root node, 15 cuts changed objective from -56.335034 to -38.373546 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3146 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1225 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 36.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.6416, took 4292 iterations and 16 nodes (0.38 seconds)
Cbc0032I Strong branching done 250 times (3849 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 5, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 77 (-26) columns and 960 (-619) elements
Clp1000I sum of infeasibilities 7.74391e-08 - average 1.12231e-09, 11 fixed columns
Coin0506I Presolve 55 (-14) rows, 65 (-12) columns and 678 (-282) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 5.1346915 - largest nonzero change 2.6790835e-05 ( 0.0014417021%) - largest zero change 2.6645041e-05
Clp0000I Optimal - objective value 73.275931
Clp0000I Optimal - objective value 73.275931
Coin0511I After Postsolve, objective 73.275931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.275931
Clp0000I Optimal - objective value 73.275931
Clp0000I Optimal - objective value 73.275931
Coin0511I After Postsolve, objective 73.275931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.27593118 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 77 columns (77 integer (77 of which binary)) and 962 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.424%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.36798
Cbc0038I Pass   1: suminf.    1.44068 (18) obj. -49.1764 iterations 9
Cbc0038I Pass   2: suminf.    1.44068 (18) obj. -49.1764 iterations 1
Cbc0038I Pass   3: suminf.    0.03571 (1) obj. -13.5692 iterations 17
Cbc0038I Solution found of -12.6049
Cbc0038I Rounding solution of -18.814 is better than previous of -12.6049

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 77 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -23.5445
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.44068 (18) obj. -49.1764 iterations 0
Cbc0038I Pass   5: suminf.    1.44068 (18) obj. -49.1764 iterations 1
Cbc0038I Pass   6: suminf.    0.39524 (8) obj. -27.8411 iterations 10
Cbc0038I Pass   7: suminf.    0.17367 (4) obj. -23.5445 iterations 11
Cbc0038I Pass   8: suminf.    0.17367 (4) obj. -23.5445 iterations 0
Cbc0038I Pass   9: suminf.    0.07564 (2) obj. -23.5445 iterations 8
Cbc0038I Pass  10: suminf.    0.07564 (2) obj. -23.5445 iterations 0
Cbc0038I Pass  11: suminf.    0.25559 (2) obj. -23.5445 iterations 3
Cbc0038I Pass  12: suminf.    0.30341 (2) obj. -23.5445 iterations 3
Cbc0038I Pass  13: suminf.    0.32857 (1) obj. -23.5445 iterations 1
Cbc0038I Pass  14: suminf.    1.05252 (6) obj. -23.5445 iterations 15
Cbc0038I Pass  15: suminf.    1.00481 (6) obj. -23.5445 iterations 3
Cbc0038I Pass  16: suminf.    0.88576 (3) obj. -23.5445 iterations 9
Cbc0038I Pass  17: suminf.    0.88576 (3) obj. -23.5445 iterations 0
Cbc0038I Pass  18: suminf.    1.07598 (3) obj. -23.5445 iterations 3
Cbc0038I Pass  19: suminf.    1.07598 (3) obj. -23.5445 iterations 1
Cbc0038I Pass  20: suminf.    0.88576 (3) obj. -23.5445 iterations 5
Cbc0038I Pass  21: suminf.    1.17973 (7) obj. -23.5445 iterations 16
Cbc0038I Pass  22: suminf.    1.04180 (6) obj. -23.5445 iterations 4
Cbc0038I Pass  23: suminf.    1.06769 (3) obj. -23.5445 iterations 10
Cbc0038I Pass  24: suminf.    1.06769 (3) obj. -23.5445 iterations 2
Cbc0038I Pass  25: suminf.    0.99285 (3) obj. -23.5445 iterations 2
Cbc0038I Pass  26: suminf.    0.63828 (3) obj. -23.5445 iterations 2
Cbc0038I Pass  27: suminf.    2.78512 (17) obj. -23.5445 iterations 24
Cbc0038I Pass  28: suminf.    2.37380 (14) obj. -23.5445 iterations 6
Cbc0038I Pass  29: suminf.    1.52329 (7) obj. -23.5445 iterations 21
Cbc0038I Pass  30: suminf.    1.19314 (6) obj. -24.0932 iterations 6
Cbc0038I Pass  31: suminf.    1.54871 (6) obj. -23.5445 iterations 8
Cbc0038I Pass  32: suminf.    1.54871 (6) obj. -23.5445 iterations 2
Cbc0038I Pass  33: suminf.    1.51638 (6) obj. -23.5445 iterations 7
Cbc0038I Rounding solution of -26.5985 is better than previous of -18.814

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 77 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -34.5027
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.44068 (18) obj. -49.1764 iterations 0
Cbc0038I Pass  34: suminf.    1.44068 (18) obj. -49.1764 iterations 1
Cbc0038I Pass  35: suminf.    0.57572 (4) obj. -34.5027 iterations 21
Cbc0038I Pass  36: suminf.    0.53732 (3) obj. -34.5027 iterations 3
Cbc0038I Pass  37: suminf.    0.99933 (5) obj. -34.5027 iterations 5
Cbc0038I Pass  38: suminf.    0.99933 (5) obj. -34.5027 iterations 2
Cbc0038I Pass  39: suminf.    0.94047 (4) obj. -34.5027 iterations 10
Cbc0038I Pass  40: suminf.    0.94047 (4) obj. -34.5027 iterations 3
Cbc0038I Pass  41: suminf.    0.92454 (4) obj. -34.5027 iterations 4
Cbc0038I Pass  42: suminf.    0.92454 (4) obj. -34.5027 iterations 2
Cbc0038I Pass  43: suminf.    0.94047 (4) obj. -34.5027 iterations 4
Cbc0038I Pass  44: suminf.    1.38650 (8) obj. -34.5027 iterations 14
Cbc0038I Pass  45: suminf.    0.89865 (6) obj. -36.7281 iterations 6
Cbc0038I Pass  46: suminf.    1.11034 (5) obj. -34.5027 iterations 7
Cbc0038I Pass  47: suminf.    0.71398 (5) obj. -36.0881 iterations 2
Cbc0038I Pass  48: suminf.    1.49627 (9) obj. -34.5027 iterations 24
Cbc0038I Pass  49: suminf.    1.09712 (8) obj. -34.5027 iterations 9
Cbc0038I Pass  50: suminf.    1.17345 (7) obj. -34.5027 iterations 7
Cbc0038I Pass  51: suminf.    1.13624 (12) obj. -34.5027 iterations 4
Cbc0038I Pass  52: suminf.    1.52487 (10) obj. -34.5027 iterations 11
Cbc0038I Pass  53: suminf.    1.50379 (10) obj. -34.5027 iterations 2
Cbc0038I Pass  54: suminf.    1.02517 (9) obj. -34.5027 iterations 9
Cbc0038I Pass  55: suminf.    1.01889 (9) obj. -34.5027 iterations 4
Cbc0038I Pass  56: suminf.    1.69304 (9) obj. -34.5027 iterations 13
Cbc0038I Pass  57: suminf.    1.39152 (9) obj. -34.5027 iterations 3
Cbc0038I Pass  58: suminf.    1.26526 (8) obj. -34.5027 iterations 10
Cbc0038I Pass  59: suminf.    1.26526 (8) obj. -34.5027 iterations 1
Cbc0038I Pass  60: suminf.    1.37134 (8) obj. -34.5027 iterations 3
Cbc0038I Pass  61: suminf.    1.37134 (8) obj. -34.5027 iterations 1
Cbc0038I Pass  62: suminf.    1.26526 (8) obj. -34.5027 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 77 columns, reduced to 39 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.5985 - took 0.03 seconds
Cbc0012I Integer solution of -26.598531 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 69 rows 77 columns, reduced to 8 rows 12 columns
Cbc0031I 37 added rows had average density of 10.054054
Cbc0013I At root node, 37 cuts changed objective from -66.118877 to -29.471065 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 797 row cuts average 3.8 elements, 16 column cuts (16 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 78 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 82 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 35.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.598531 best solution, best possible -29.470736 (0.43 seconds)
Cbc0004I Integer solution of -26.6416 found after 617 iterations and 4 nodes (0.78 seconds)
Cbc0001I Search completed - best objective -26.6416, took 617 iterations and 4 nodes (0.78 seconds)
Cbc0032I Strong branching done 62 times (834 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.78

