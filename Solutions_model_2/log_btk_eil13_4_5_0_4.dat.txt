Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 10 (-5) columns and 46 (-29) elements
Clp1000I sum of infeasibilities 1.50322e-07 - average 9.39511e-09, 1 fixed columns
Coin0506I Presolve 14 (-2) rows, 9 (-1) columns and 40 (-6) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 60.415694
Clp0000I Optimal - objective value 60.415694
Coin0511I After Postsolve, objective 60.415694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.415694
Clp0000I Optimal - objective value 60.415694
Clp0000I Optimal - objective value 60.415694
Coin0511I After Postsolve, objective 60.415694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.41569378 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 10 columns (9 integer (9 of which binary)) and 46 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.24675
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -41 iterations 4
Cbc0038I Solution found of -41
Cbc0038I Relaxing continuous gives -41
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 10 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.1059
Cbc0038I Pass   2: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass   3: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass   4: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass   5: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass   6: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass   7: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass   8: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass   9: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  10: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  11: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass  12: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass  13: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass  14: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  15: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  16: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass  17: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass  18: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass  19: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  20: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  21: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass  22: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass  23: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass  24: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  25: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  26: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass  27: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass  28: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass  29: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  30: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  31: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 10 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -41 - took 0.01 seconds
Cbc0012I Integer solution of -41 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 10 columns, reduced to 9 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -59.810018 to -59.810018 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -41, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 17 (-10) rows, 20 (-6) columns and 99 (-52) elements
Clp1000I sum of infeasibilities 0 - average 0, 6 fixed columns
Coin0506I Presolve 12 (-5) rows, 14 (-6) columns and 56 (-43) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 132.70412
Clp0000I Optimal - objective value 132.70412
Coin0511I After Postsolve, objective 132.70412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0155643 - largest nonzero change 0 ( 0%) - largest zero change 2.9928135e-05
Clp0000I Optimal - objective value 138.45412
Clp0000I Optimal - objective value 138.45412
Clp0000I Optimal - objective value 138.45412
Coin0511I After Postsolve, objective 138.45412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.4541229 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 22 columns (22 integer (22 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.192%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.30476
Cbc0038I Pass   1: suminf.    0.30952 (2) obj. -46.9524 iterations 7
Cbc0038I Pass   2: suminf.    0.30952 (2) obj. -46.9524 iterations 0
Cbc0038I Solution found of -41
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 22 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -41 to -60.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -65.3909
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.40000 (9) obj. -83.7742 iterations 3
Cbc0038I Pass   4: suminf.    2.04286 (8) obj. -72.469 iterations 2
Cbc0038I Pass   5: suminf.    0.67431 (3) obj. -65.3909 iterations 14
Cbc0038I Pass   6: suminf.    0.57143 (2) obj. -79.5714 iterations 1
Cbc0038I Pass   7: suminf.    0.37563 (1) obj. -65.3909 iterations 3
Cbc0038I Pass   8: suminf.    0.28571 (1) obj. -73.8571 iterations 2
Cbc0038I Pass   9: suminf.    1.35179 (5) obj. -65.3909 iterations 5
Cbc0038I Pass  10: suminf.    1.06905 (4) obj. -79.6238 iterations 2
Cbc0038I Pass  11: suminf.    1.26905 (6) obj. -86.6595 iterations 3
Cbc0038I Pass  12: suminf.    1.23333 (5) obj. -85.7667 iterations 1
Cbc0038I Solution found of -68.25
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 22 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -76.2318
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  13: suminf.    2.40000 (9) obj. -83.7742 iterations 0
Cbc0038I Pass  14: suminf.    2.16173 (9) obj. -76.2318 iterations 2
Cbc0038I Pass  15: suminf.    0.57143 (2) obj. -79.5714 iterations 11
Cbc0038I Pass  16: suminf.    0.91725 (3) obj. -76.2318 iterations 4
Cbc0038I Pass  17: suminf.    0.88889 (2) obj. -78.5 iterations 1
Cbc0038I Pass  18: suminf.    0.88889 (2) obj. -78.5 iterations 0
Cbc0038I Pass  19: suminf.    1.13889 (3) obj. -80 iterations 1
Cbc0038I Pass  20: suminf.    1.75879 (7) obj. -76.2318 iterations 4
Cbc0038I Pass  21: suminf.    1.52985 (6) obj. -76.2318 iterations 2
Cbc0038I Pass  22: suminf.    1.16424 (3) obj. -76.2318 iterations 5
Cbc0038I Pass  23: suminf.    0.87952 (4) obj. -76.2318 iterations 1
Cbc0038I Pass  24: suminf.    0.50000 (1) obj. -76.25 iterations 3
Cbc0038I Pass  25: suminf.    0.49965 (1) obj. -76.2318 iterations 1
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -76.25 iterations 1
Cbc0038I Pass  27: suminf.    1.44865 (4) obj. -76.2318 iterations 4
Cbc0038I Pass  28: suminf.    0.77143 (3) obj. -81.5714 iterations 2
Cbc0038I Pass  29: suminf.    0.99931 (2) obj. -76.2318 iterations 3
Cbc0038I Pass  30: suminf.    0.89818 (4) obj. -76.2318 iterations 3
Cbc0038I Pass  31: suminf.    0.69283 (3) obj. -76.2318 iterations 1
Cbc0038I Pass  32: suminf.    0.95309 (3) obj. -76.2318 iterations 2
Cbc0038I Pass  33: suminf.    0.82733 (2) obj. -76.2318 iterations 1
Cbc0038I Pass  34: suminf.    0.50000 (1) obj. -76.25 iterations 2
Cbc0038I Pass  35: suminf.    0.49965 (1) obj. -76.2318 iterations 1
Cbc0038I Pass  36: suminf.    1.11662 (4) obj. -76.2318 iterations 3
Cbc0038I Pass  37: suminf.    0.86616 (3) obj. -76.2318 iterations 1
Cbc0038I Pass  38: suminf.    0.50000 (1) obj. -76.25 iterations 2
Cbc0038I Pass  39: suminf.    0.81678 (4) obj. -76.2318 iterations 3
Cbc0038I Pass  40: suminf.    0.65158 (3) obj. -76.2318 iterations 1
Cbc0038I Pass  41: suminf.    0.99931 (2) obj. -76.2318 iterations 2
Cbc0038I Pass  42: suminf.    0.50000 (1) obj. -76.25 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 22 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -68.25 to -69.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -85.5101
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  42: suminf.    2.92381 (10) obj. -104.493 iterations 2
Cbc0038I Pass  43: suminf.    1.78616 (5) obj. -85.5101 iterations 14
Cbc0038I Pass  44: suminf.    0.55879 (2) obj. -85.5101 iterations 2
Cbc0038I Pass  45: suminf.    0.55879 (2) obj. -85.5101 iterations 0
Cbc0038I Pass  46: suminf.    0.64723 (2) obj. -85.5101 iterations 1
Cbc0038I Pass  47: suminf.    3.20480 (7) obj. -85.5101 iterations 6
Cbc0038I Pass  48: suminf.    1.89008 (5) obj. -85.5101 iterations 2
Cbc0038I Pass  49: suminf.    1.84584 (7) obj. -85.5101 iterations 6
Cbc0038I Pass  50: suminf.    1.84584 (7) obj. -85.5101 iterations 0
Cbc0038I Pass  51: suminf.    0.96386 (3) obj. -85.5101 iterations 5
Cbc0038I Pass  52: suminf.    0.70794 (3) obj. -87.3016 iterations 1
Cbc0038I Pass  53: suminf.    1.78616 (5) obj. -85.5101 iterations 5
Cbc0038I Pass  54: suminf.    0.55879 (2) obj. -85.5101 iterations 2
Cbc0038I Pass  55: suminf.    0.55879 (2) obj. -85.5101 iterations 0
Cbc0038I Pass  56: suminf.    0.64723 (2) obj. -85.5101 iterations 1
Cbc0038I Pass  57: suminf.    1.97403 (6) obj. -85.5101 iterations 8
Cbc0038I Pass  58: suminf.    1.97403 (6) obj. -85.5101 iterations 0
Cbc0038I Pass  59: suminf.    1.63265 (4) obj. -85.5101 iterations 5
Cbc0038I Pass  60: suminf.    0.55879 (2) obj. -85.5101 iterations 2
Cbc0038I Pass  61: suminf.    0.55879 (2) obj. -85.5101 iterations 0
Cbc0038I Pass  62: suminf.    0.64723 (2) obj. -85.5101 iterations 1
Cbc0038I Pass  63: suminf.    1.49542 (4) obj. -85.5101 iterations 7
Cbc0038I Pass  64: suminf.    1.23571 (4) obj. -88.1071 iterations 1
Cbc0038I Pass  65: suminf.    1.78616 (5) obj. -85.5101 iterations 5
Cbc0038I Pass  66: suminf.    0.55879 (2) obj. -85.5101 iterations 2
Cbc0038I Pass  67: suminf.    0.55879 (2) obj. -85.5101 iterations 0
Cbc0038I Pass  68: suminf.    0.64723 (2) obj. -85.5101 iterations 1
Cbc0038I Pass  69: suminf.    1.63265 (4) obj. -85.5101 iterations 3
Cbc0038I Pass  70: suminf.    1.63265 (4) obj. -85.5101 iterations 0
Cbc0038I Pass  71: suminf.    0.55879 (2) obj. -85.5101 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 22 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -69.5 - took 0.01 seconds
Cbc0012I Integer solution of -69.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 19 rows 22 columns, reduced to 3 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -89.214286 to -89.214286 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -69.5, took 10 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 10 (-5) columns and 46 (-29) elements
Clp1000I sum of infeasibilities 1.50322e-07 - average 9.39511e-09, 1 fixed columns
Coin0506I Presolve 14 (-2) rows, 9 (-1) columns and 40 (-6) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 60.415694
Clp0000I Optimal - objective value 60.415694
Coin0511I After Postsolve, objective 60.415694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.415694
Clp0000I Optimal - objective value 60.415694
Clp0000I Optimal - objective value 60.415694
Coin0511I After Postsolve, objective 60.415694, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.41569378 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 10 columns (9 integer (9 of which binary)) and 46 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.24675
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -41 iterations 4
Cbc0038I Solution found of -41
Cbc0038I Relaxing continuous gives -41
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 10 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.1059
Cbc0038I Pass   2: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass   3: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass   4: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass   5: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass   6: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass   7: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass   8: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass   9: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  10: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  11: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass  12: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass  13: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass  14: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  15: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  16: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass  17: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass  18: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass  19: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  20: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  21: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass  22: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass  23: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass  24: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  25: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  26: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I Pass  27: suminf.    0.08023 (2) obj. -43.1059 iterations 1
Cbc0038I Pass  28: suminf.    1.30611 (3) obj. -43.1059 iterations 4
Cbc0038I Pass  29: suminf.    0.70656 (3) obj. -43.1059 iterations 3
Cbc0038I Pass  30: suminf.    0.97150 (3) obj. -43.1059 iterations 2
Cbc0038I Pass  31: suminf.    0.34372 (3) obj. -43.1059 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 10 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -41 - took 0.01 seconds
Cbc0012I Integer solution of -41 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 10 columns, reduced to 9 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -59.810018 to -59.810018 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -41, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-10) rows, 21 (-6) columns and 93 (-61) elements
Clp1000I sum of infeasibilities 6.55528e-10 - average 3.45015e-11, 2 fixed columns
Coin0506I Presolve 17 (-2) rows, 19 (-2) columns and 71 (-22) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 86.962698
Clp0000I Optimal - objective value 86.962698
Coin0511I After Postsolve, objective 86.962698, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.962698
Clp0000I Optimal - objective value 86.962698
Clp0000I Optimal - objective value 86.962698
Coin0511I After Postsolve, objective 86.962698, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.96269841 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 21 columns (21 integer (21 of which binary)) and 95 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.413%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.852547
Cbc0038I Pass   1: suminf.    0.50952 (3) obj. -54.481 iterations 3
Cbc0038I Solution found of -41
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 21 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -42.9806
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.50952 (3) obj. -54.481 iterations 0
Cbc0038I Pass   3: suminf.    0.07922 (1) obj. -42.9806 iterations 4
Cbc0038I Pass   4: suminf.    0.09302 (1) obj. -43.3256 iterations 1
Cbc0038I Pass   5: suminf.    0.47522 (3) obj. -42.9806 iterations 5
Cbc0038I Pass   6: suminf.    0.29913 (3) obj. -42.9806 iterations 3
Cbc0038I Pass   7: suminf.    0.23588 (2) obj. -49.0399 iterations 2
Cbc0038I Pass   8: suminf.    0.14286 (1) obj. -46.7143 iterations 1
Cbc0038I Pass   9: suminf.    0.27691 (2) obj. -42.9806 iterations 2
Cbc0038I Pass  10: suminf.    0.57580 (3) obj. -42.9806 iterations 3
Cbc0038I Pass  11: suminf.    0.37027 (3) obj. -42.9806 iterations 1
Cbc0038I Pass  12: suminf.    0.57580 (3) obj. -42.9806 iterations 1
Cbc0038I Pass  13: suminf.    0.58463 (4) obj. -42.9806 iterations 1
Cbc0038I Pass  14: suminf.    0.68433 (4) obj. -42.9806 iterations 4
Cbc0038I Pass  15: suminf.    0.68433 (4) obj. -42.9806 iterations 1
Cbc0038I Pass  16: suminf.    0.66580 (3) obj. -42.9806 iterations 2
Cbc0038I Pass  17: suminf.    0.57580 (2) obj. -42.9806 iterations 1
Cbc0038I Pass  18: suminf.    0.14286 (1) obj. -43.7143 iterations 2
Cbc0038I Pass  19: suminf.    1.05735 (5) obj. -42.9806 iterations 7
Cbc0038I Pass  20: suminf.    1.05735 (5) obj. -42.9806 iterations 0
Cbc0038I Pass  21: suminf.    0.72402 (4) obj. -42.9806 iterations 2
Cbc0038I Pass  22: suminf.    0.72402 (4) obj. -42.9806 iterations 1
Cbc0038I Pass  23: suminf.    0.98321 (4) obj. -42.9806 iterations 1
Cbc0038I Pass  24: suminf.    0.35351 (3) obj. -42.9806 iterations 2
Cbc0038I Pass  25: suminf.    0.72402 (4) obj. -42.9806 iterations 3
Cbc0038I Pass  26: suminf.    0.72402 (4) obj. -42.9806 iterations 1
Cbc0038I Pass  27: suminf.    0.50952 (3) obj. -45.481 iterations 5
Cbc0038I Pass  28: suminf.    0.50952 (3) obj. -45.481 iterations 0
Cbc0038I Pass  29: suminf.    0.37027 (3) obj. -42.9806 iterations 4
Cbc0038I Pass  30: suminf.    0.37027 (3) obj. -42.9806 iterations 0
Cbc0038I Pass  31: suminf.    0.57580 (3) obj. -42.9806 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -41 - took 0.00 seconds
Cbc0012I Integer solution of -41 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -44.690476 to -44.690476 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -41, took 5 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

