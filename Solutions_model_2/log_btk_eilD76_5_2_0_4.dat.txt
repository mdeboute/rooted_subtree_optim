Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 60 (-18) columns and 329 (-124) elements
Clp1000I sum of infeasibilities 6.68585e-05 - average 6.1906e-07, 22 fixed columns
Coin0506I Presolve 29 (-79) rows, 24 (-36) columns and 100 (-229) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 413.74898
Clp0000I Optimal - objective value 413.74898
Coin0511I After Postsolve, objective 413.74898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 413.74898
Clp0000I Optimal - objective value 413.74898
Clp0000I Optimal - objective value 413.74898
Coin0511I After Postsolve, objective 413.74898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 413.7489753 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 108 rows, 60 columns (59 integer (59 of which binary)) and 329 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.460%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.84207
Cbc0038I Pass   1: suminf.    0.29630 (1) obj. -395.115 iterations 20
Cbc0038I Solution found of -346.802
Cbc0038I Relaxing continuous gives -346.802
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 60 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -346.802 to -403.456 (0.01 seconds)
Cbc0038I Round again with cutoff of -404.486
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.37358 (3) obj. -404.486 iterations 2
Cbc0038I Pass   3: suminf.    0.40994 (3) obj. -404.486 iterations 2
Cbc0038I Pass   4: suminf.    1.97089 (8) obj. -404.486 iterations 8
Cbc0038I Pass   5: suminf.    1.51302 (7) obj. -404.486 iterations 3
Cbc0038I Pass   6: suminf.    1.19832 (6) obj. -404.486 iterations 7
Cbc0038I Pass   7: suminf.    1.71932 (6) obj. -404.486 iterations 9
Cbc0038I Pass   8: suminf.    0.67536 (5) obj. -404.486 iterations 7
Cbc0038I Pass   9: suminf.    0.65009 (5) obj. -404.486 iterations 3
Cbc0038I Pass  10: suminf.    1.05190 (3) obj. -404.486 iterations 5
Cbc0038I Pass  11: suminf.    1.03697 (3) obj. -404.486 iterations 3
Cbc0038I Pass  12: suminf.    0.39300 (4) obj. -404.486 iterations 8
Cbc0038I Pass  13: suminf.    1.53589 (4) obj. -404.486 iterations 10
Cbc0038I Pass  14: suminf.    0.67536 (5) obj. -404.486 iterations 5
Cbc0038I Pass  15: suminf.    0.65009 (5) obj. -404.486 iterations 3
Cbc0038I Pass  16: suminf.    1.05190 (3) obj. -404.486 iterations 5
Cbc0038I Pass  17: suminf.    1.03697 (3) obj. -404.486 iterations 3
Cbc0038I Pass  18: suminf.    0.39300 (4) obj. -404.486 iterations 8
Cbc0038I Pass  19: suminf.    1.53589 (4) obj. -404.486 iterations 10
Cbc0038I Pass  20: suminf.    0.67536 (5) obj. -404.486 iterations 5
Cbc0038I Pass  21: suminf.    0.65009 (5) obj. -404.486 iterations 3
Cbc0038I Pass  22: suminf.    1.05190 (3) obj. -404.486 iterations 5
Cbc0038I Pass  23: suminf.    1.03697 (3) obj. -404.486 iterations 3
Cbc0038I Pass  24: suminf.    0.39300 (4) obj. -404.486 iterations 8
Cbc0038I Pass  25: suminf.    1.53589 (4) obj. -404.486 iterations 10
Cbc0038I Pass  26: suminf.    0.67536 (5) obj. -404.486 iterations 5
Cbc0038I Pass  27: suminf.    0.65009 (5) obj. -404.486 iterations 3
Cbc0038I Pass  28: suminf.    1.05190 (3) obj. -404.486 iterations 5
Cbc0038I Pass  29: suminf.    1.03697 (3) obj. -404.486 iterations 3
Cbc0038I Pass  30: suminf.    0.39300 (4) obj. -404.486 iterations 8
Cbc0038I Pass  31: suminf.    1.53589 (4) obj. -404.486 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 60 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -403.456 - took 0.01 seconds
Cbc0012I Integer solution of -403.45625 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 108 rows 60 columns, reduced to 19 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 5.5
Cbc0013I At root node, 6 cuts changed objective from -413.74898 to -403.53647 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 70 row cuts average 2.6 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -403.45625, took 19 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-66) rows, 98 (-54) columns and 1590 (-1713) elements
Clp1000I sum of infeasibilities 6.71396e-07 - average 7.6295e-09, 25 fixed columns
Coin0506I Presolve 63 (-25) rows, 71 (-27) columns and 933 (-657) elements
Clp0029I End of values pass after 71 iterations
Clp0000I Optimal - objective value 451.37045
Clp0000I Optimal - objective value 451.37045
Coin0511I After Postsolve, objective 451.37045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.466245 - largest nonzero change 1.3194159e-05 ( 0.0010379096%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 451.37045
Clp0000I Optimal - objective value 451.37045
Clp0000I Optimal - objective value 451.37045
Coin0511I After Postsolve, objective 451.37045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 451.3704509 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 99 columns (99 integer (99 of which binary)) and 1594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.548%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.51308
Cbc0038I Pass   1: suminf.    2.62952 (29) obj. -387.448 iterations 18
Cbc0038I Pass   2: suminf.    2.62952 (29) obj. -387.448 iterations 2
Cbc0038I Pass   3: suminf.    0.10025 (2) obj. -355.731 iterations 27
Cbc0038I Solution found of -353.831
Cbc0038I Rounding solution of -361.722 is better than previous of -353.831

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -361.722 to -385.419 (0.03 seconds)
Cbc0038I Round again with cutoff of -391.163
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.90469 (35) obj. -391.163 iterations 2
Cbc0038I Pass   5: suminf.    2.80575 (33) obj. -391.163 iterations 10
Cbc0038I Pass   6: suminf.    1.83215 (15) obj. -391.163 iterations 17
Cbc0038I Pass   7: suminf.    0.34267 (3) obj. -401.722 iterations 18
Cbc0038I Pass   8: suminf.    0.38507 (1) obj. -391.163 iterations 3
Cbc0038I Pass   9: suminf.    0.24242 (1) obj. -399.823 iterations 2
Cbc0038I Pass  10: suminf.    1.70797 (7) obj. -391.163 iterations 12
Cbc0038I Pass  11: suminf.    1.70797 (7) obj. -391.163 iterations 2
Cbc0038I Pass  12: suminf.    0.60424 (2) obj. -391.163 iterations 7
Cbc0038I Pass  13: suminf.    0.77508 (3) obj. -391.163 iterations 4
Cbc0038I Pass  14: suminf.    0.36859 (1) obj. -391.163 iterations 3
Cbc0038I Pass  15: suminf.    0.24242 (1) obj. -398.823 iterations 2
Cbc0038I Pass  16: suminf.    0.36859 (1) obj. -391.163 iterations 1
Cbc0038I Pass  17: suminf.    3.71275 (22) obj. -391.163 iterations 31
Cbc0038I Pass  18: suminf.    2.16503 (15) obj. -391.163 iterations 10
Cbc0038I Pass  19: suminf.    0.24242 (1) obj. -394.823 iterations 18
Cbc0038I Pass  20: suminf.    0.30271 (1) obj. -391.163 iterations 1
Cbc0038I Pass  21: suminf.    1.10101 (6) obj. -391.163 iterations 17
Cbc0038I Pass  22: suminf.    0.67860 (4) obj. -391.163 iterations 6
Cbc0038I Pass  23: suminf.    0.38915 (3) obj. -401.935 iterations 3
Cbc0038I Solution found of -398.456
Cbc0038I Rounding solution of -403.456 is better than previous of -398.456

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -411.337
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  24: suminf.    3.73591 (35) obj. -411.337 iterations 0
Cbc0038I Pass  25: suminf.    3.73591 (35) obj. -411.337 iterations 1
Cbc0038I Pass  26: suminf.    2.82758 (22) obj. -411.337 iterations 20
Cbc0038I Pass  27: suminf.    2.36529 (21) obj. -422.994 iterations 6
Cbc0038I Pass  28: suminf.    1.26664 (13) obj. -411.337 iterations 14
Cbc0038I Pass  29: suminf.    1.26664 (13) obj. -411.337 iterations 2
Cbc0038I Pass  30: suminf.    1.85907 (11) obj. -411.337 iterations 29
Cbc0038I Pass  31: suminf.    1.85907 (11) obj. -411.337 iterations 4
Cbc0038I Pass  32: suminf.    1.27146 (6) obj. -411.337 iterations 20
Cbc0038I Pass  33: suminf.    1.09331 (8) obj. -411.337 iterations 11
Cbc0038I Pass  34: suminf.    1.27146 (6) obj. -411.337 iterations 15
Cbc0038I Pass  35: suminf.    1.91032 (10) obj. -411.337 iterations 29
Cbc0038I Pass  36: suminf.    1.55859 (10) obj. -411.337 iterations 6
Cbc0038I Pass  37: suminf.    1.44983 (7) obj. -411.337 iterations 10
Cbc0038I Pass  38: suminf.    1.44983 (7) obj. -411.337 iterations 0
Cbc0038I Pass  39: suminf.    1.48816 (7) obj. -411.337 iterations 16
Cbc0038I Pass  40: suminf.    1.48816 (7) obj. -411.337 iterations 1
Cbc0038I Pass  41: suminf.    1.44983 (7) obj. -411.337 iterations 2
Cbc0038I Pass  42: suminf.    1.82506 (12) obj. -411.337 iterations 18
Cbc0038I Pass  43: suminf.    1.66430 (12) obj. -411.337 iterations 9
Cbc0038I Pass  44: suminf.    1.44983 (7) obj. -411.337 iterations 21
Cbc0038I Pass  45: suminf.    1.44983 (7) obj. -411.337 iterations 1
Cbc0038I Pass  46: suminf.    1.48816 (7) obj. -411.337 iterations 16
Cbc0038I Pass  47: suminf.    1.48816 (7) obj. -411.337 iterations 1
Cbc0038I Pass  48: suminf.    1.44983 (7) obj. -411.337 iterations 2
Cbc0038I Pass  49: suminf.    1.59050 (11) obj. -411.337 iterations 15
Cbc0038I Pass  50: suminf.    1.56720 (11) obj. -411.337 iterations 1
Cbc0038I Pass  51: suminf.    1.27146 (6) obj. -411.337 iterations 21
Cbc0038I Pass  52: suminf.    1.09331 (8) obj. -411.337 iterations 10
Cbc0038I Pass  53: suminf.    1.27146 (6) obj. -411.337 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -403.456 - took 0.03 seconds
Cbc0012I Integer solution of -403.45625 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 99 columns, reduced to 12 rows 12 columns
Cbc0031I 16 added rows had average density of 9.125
Cbc0013I At root node, 253 cuts changed objective from -442.86095 to -403.45625 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 188 row cuts average 2.0 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -403.45625, took 23 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 60 (-18) columns and 329 (-124) elements
Clp1000I sum of infeasibilities 6.68585e-05 - average 6.1906e-07, 22 fixed columns
Coin0506I Presolve 29 (-79) rows, 24 (-36) columns and 100 (-229) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 413.74898
Clp0000I Optimal - objective value 413.74898
Coin0511I After Postsolve, objective 413.74898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 413.74898
Clp0000I Optimal - objective value 413.74898
Clp0000I Optimal - objective value 413.74898
Coin0511I After Postsolve, objective 413.74898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 413.7489753 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 108 rows, 60 columns (59 integer (59 of which binary)) and 329 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.460%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.84207
Cbc0038I Pass   1: suminf.    0.29630 (1) obj. -395.115 iterations 20
Cbc0038I Solution found of -346.802
Cbc0038I Relaxing continuous gives -346.802
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 60 columns, reduced to 20 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -346.802 to -403.456 (0.01 seconds)
Cbc0038I Round again with cutoff of -404.486
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.37358 (3) obj. -404.486 iterations 2
Cbc0038I Pass   3: suminf.    0.40994 (3) obj. -404.486 iterations 2
Cbc0038I Pass   4: suminf.    1.97089 (8) obj. -404.486 iterations 8
Cbc0038I Pass   5: suminf.    1.51302 (7) obj. -404.486 iterations 3
Cbc0038I Pass   6: suminf.    1.19832 (6) obj. -404.486 iterations 7
Cbc0038I Pass   7: suminf.    1.71932 (6) obj. -404.486 iterations 9
Cbc0038I Pass   8: suminf.    0.67536 (5) obj. -404.486 iterations 7
Cbc0038I Pass   9: suminf.    0.65009 (5) obj. -404.486 iterations 3
Cbc0038I Pass  10: suminf.    1.05190 (3) obj. -404.486 iterations 5
Cbc0038I Pass  11: suminf.    1.03697 (3) obj. -404.486 iterations 3
Cbc0038I Pass  12: suminf.    0.39300 (4) obj. -404.486 iterations 8
Cbc0038I Pass  13: suminf.    1.53589 (4) obj. -404.486 iterations 10
Cbc0038I Pass  14: suminf.    0.67536 (5) obj. -404.486 iterations 5
Cbc0038I Pass  15: suminf.    0.65009 (5) obj. -404.486 iterations 3
Cbc0038I Pass  16: suminf.    1.05190 (3) obj. -404.486 iterations 5
Cbc0038I Pass  17: suminf.    1.03697 (3) obj. -404.486 iterations 3
Cbc0038I Pass  18: suminf.    0.39300 (4) obj. -404.486 iterations 8
Cbc0038I Pass  19: suminf.    1.53589 (4) obj. -404.486 iterations 10
Cbc0038I Pass  20: suminf.    0.67536 (5) obj. -404.486 iterations 5
Cbc0038I Pass  21: suminf.    0.65009 (5) obj. -404.486 iterations 3
Cbc0038I Pass  22: suminf.    1.05190 (3) obj. -404.486 iterations 5
Cbc0038I Pass  23: suminf.    1.03697 (3) obj. -404.486 iterations 3
Cbc0038I Pass  24: suminf.    0.39300 (4) obj. -404.486 iterations 8
Cbc0038I Pass  25: suminf.    1.53589 (4) obj. -404.486 iterations 10
Cbc0038I Pass  26: suminf.    0.67536 (5) obj. -404.486 iterations 5
Cbc0038I Pass  27: suminf.    0.65009 (5) obj. -404.486 iterations 3
Cbc0038I Pass  28: suminf.    1.05190 (3) obj. -404.486 iterations 5
Cbc0038I Pass  29: suminf.    1.03697 (3) obj. -404.486 iterations 3
Cbc0038I Pass  30: suminf.    0.39300 (4) obj. -404.486 iterations 8
Cbc0038I Pass  31: suminf.    1.53589 (4) obj. -404.486 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 60 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -403.456 - took 0.01 seconds
Cbc0012I Integer solution of -403.45625 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 108 rows 60 columns, reduced to 19 rows 14 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 5.5
Cbc0013I At root node, 6 cuts changed objective from -413.74898 to -403.53647 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 70 row cuts average 2.6 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -403.45625, took 19 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-67) rows, 98 (-55) columns and 1590 (-1714) elements
Clp1000I sum of infeasibilities 6.71396e-07 - average 7.6295e-09, 25 fixed columns
Coin0506I Presolve 63 (-25) rows, 71 (-27) columns and 933 (-657) elements
Clp0029I End of values pass after 71 iterations
Clp0000I Optimal - objective value 451.37045
Clp0000I Optimal - objective value 451.37045
Coin0511I After Postsolve, objective 451.37045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.466245 - largest nonzero change 1.3194159e-05 ( 0.0010379096%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 451.37045
Clp0000I Optimal - objective value 451.37045
Clp0000I Optimal - objective value 451.37045
Coin0511I After Postsolve, objective 451.37045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 451.3704509 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 99 columns (99 integer (99 of which binary)) and 1594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.548%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.51308
Cbc0038I Pass   1: suminf.    2.62952 (29) obj. -387.448 iterations 18
Cbc0038I Pass   2: suminf.    2.62952 (29) obj. -387.448 iterations 2
Cbc0038I Pass   3: suminf.    0.10025 (2) obj. -355.731 iterations 27
Cbc0038I Solution found of -353.831
Cbc0038I Rounding solution of -361.722 is better than previous of -353.831

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -361.722 to -385.419 (0.03 seconds)
Cbc0038I Round again with cutoff of -391.163
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.90469 (35) obj. -391.163 iterations 2
Cbc0038I Pass   5: suminf.    2.80575 (33) obj. -391.163 iterations 10
Cbc0038I Pass   6: suminf.    1.83215 (15) obj. -391.163 iterations 17
Cbc0038I Pass   7: suminf.    0.34267 (3) obj. -401.722 iterations 18
Cbc0038I Pass   8: suminf.    0.38507 (1) obj. -391.163 iterations 3
Cbc0038I Pass   9: suminf.    0.24242 (1) obj. -399.823 iterations 2
Cbc0038I Pass  10: suminf.    1.70797 (7) obj. -391.163 iterations 12
Cbc0038I Pass  11: suminf.    1.70797 (7) obj. -391.163 iterations 2
Cbc0038I Pass  12: suminf.    0.60424 (2) obj. -391.163 iterations 7
Cbc0038I Pass  13: suminf.    0.77508 (3) obj. -391.163 iterations 4
Cbc0038I Pass  14: suminf.    0.36859 (1) obj. -391.163 iterations 3
Cbc0038I Pass  15: suminf.    0.24242 (1) obj. -398.823 iterations 2
Cbc0038I Pass  16: suminf.    0.36859 (1) obj. -391.163 iterations 1
Cbc0038I Pass  17: suminf.    3.71275 (22) obj. -391.163 iterations 31
Cbc0038I Pass  18: suminf.    2.16503 (15) obj. -391.163 iterations 10
Cbc0038I Pass  19: suminf.    0.24242 (1) obj. -394.823 iterations 18
Cbc0038I Pass  20: suminf.    0.30271 (1) obj. -391.163 iterations 1
Cbc0038I Pass  21: suminf.    1.10101 (6) obj. -391.163 iterations 17
Cbc0038I Pass  22: suminf.    0.67860 (4) obj. -391.163 iterations 6
Cbc0038I Pass  23: suminf.    0.38915 (3) obj. -401.935 iterations 3
Cbc0038I Solution found of -398.456
Cbc0038I Rounding solution of -403.456 is better than previous of -398.456

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -411.337
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  24: suminf.    3.73591 (35) obj. -411.337 iterations 0
Cbc0038I Pass  25: suminf.    3.73591 (35) obj. -411.337 iterations 1
Cbc0038I Pass  26: suminf.    2.82758 (22) obj. -411.337 iterations 20
Cbc0038I Pass  27: suminf.    2.36529 (21) obj. -422.994 iterations 6
Cbc0038I Pass  28: suminf.    1.26664 (13) obj. -411.337 iterations 14
Cbc0038I Pass  29: suminf.    1.26664 (13) obj. -411.337 iterations 2
Cbc0038I Pass  30: suminf.    1.85907 (11) obj. -411.337 iterations 29
Cbc0038I Pass  31: suminf.    1.85907 (11) obj. -411.337 iterations 4
Cbc0038I Pass  32: suminf.    1.27146 (6) obj. -411.337 iterations 20
Cbc0038I Pass  33: suminf.    1.09331 (8) obj. -411.337 iterations 11
Cbc0038I Pass  34: suminf.    1.27146 (6) obj. -411.337 iterations 15
Cbc0038I Pass  35: suminf.    1.91032 (10) obj. -411.337 iterations 29
Cbc0038I Pass  36: suminf.    1.55859 (10) obj. -411.337 iterations 6
Cbc0038I Pass  37: suminf.    1.44983 (7) obj. -411.337 iterations 10
Cbc0038I Pass  38: suminf.    1.44983 (7) obj. -411.337 iterations 0
Cbc0038I Pass  39: suminf.    1.48816 (7) obj. -411.337 iterations 16
Cbc0038I Pass  40: suminf.    1.48816 (7) obj. -411.337 iterations 1
Cbc0038I Pass  41: suminf.    1.44983 (7) obj. -411.337 iterations 2
Cbc0038I Pass  42: suminf.    1.82506 (12) obj. -411.337 iterations 18
Cbc0038I Pass  43: suminf.    1.66430 (12) obj. -411.337 iterations 9
Cbc0038I Pass  44: suminf.    1.44983 (7) obj. -411.337 iterations 21
Cbc0038I Pass  45: suminf.    1.44983 (7) obj. -411.337 iterations 1
Cbc0038I Pass  46: suminf.    1.48816 (7) obj. -411.337 iterations 16
Cbc0038I Pass  47: suminf.    1.48816 (7) obj. -411.337 iterations 1
Cbc0038I Pass  48: suminf.    1.44983 (7) obj. -411.337 iterations 2
Cbc0038I Pass  49: suminf.    1.59050 (11) obj. -411.337 iterations 15
Cbc0038I Pass  50: suminf.    1.56720 (11) obj. -411.337 iterations 1
Cbc0038I Pass  51: suminf.    1.27146 (6) obj. -411.337 iterations 21
Cbc0038I Pass  52: suminf.    1.09331 (8) obj. -411.337 iterations 10
Cbc0038I Pass  53: suminf.    1.27146 (6) obj. -411.337 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -403.456 - took 0.03 seconds
Cbc0012I Integer solution of -403.45625 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 99 columns, reduced to 12 rows 12 columns
Cbc0031I 16 added rows had average density of 9.125
Cbc0013I At root node, 253 cuts changed objective from -442.86095 to -403.45625 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 188 row cuts average 2.0 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -403.45625, took 23 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

