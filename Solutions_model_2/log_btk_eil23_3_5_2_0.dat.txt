Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 1.26137e-08 - average 3.70992e-10, 5 fixed columns
Coin0506I Presolve 21 (-13) rows, 16 (-5) columns and 66 (-36) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Coin0511I After Postsolve, objective 423.28131, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Coin0511I After Postsolve, objective 423.28131, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 423.2813117 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.540%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.30161
Cbc0038I Pass   1: suminf.    0.44420 (1) obj. -291.281 iterations 13
Cbc0038I Solution found of -139.315
Cbc0038I Relaxing continuous gives -139.315
Cbc0038I Rounding solution of -218.924 is better than previous of -139.315

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -218.924 to -263.807 (0.01 seconds)
Cbc0038I Round again with cutoff of -276.017
Cbc0038I Pass   2: suminf.    0.44420 (1) obj. -291.281 iterations 0
Cbc0038I Pass   3: suminf.    0.49998 (1) obj. -276.017 iterations 1
Cbc0038I Pass   4: suminf.    1.64277 (5) obj. -276.017 iterations 8
Cbc0038I Pass   5: suminf.    0.81293 (3) obj. -276.017 iterations 1
Cbc0038I Pass   6: suminf.    0.57899 (2) obj. -276.017 iterations 3
Cbc0038I Pass   7: suminf.    0.57899 (2) obj. -276.017 iterations 0
Cbc0038I Pass   8: suminf.    0.63037 (2) obj. -276.017 iterations 1
Cbc0038I Pass   9: suminf.    0.60438 (3) obj. -276.017 iterations 1
Cbc0038I Pass  10: suminf.    1.32407 (3) obj. -276.017 iterations 2
Cbc0038I Pass  11: suminf.    1.24056 (4) obj. -276.017 iterations 7
Cbc0038I Pass  12: suminf.    0.71797 (2) obj. -276.017 iterations 3
Cbc0038I Pass  13: suminf.    0.86438 (2) obj. -276.017 iterations 1
Cbc0038I Pass  14: suminf.    1.10727 (3) obj. -276.017 iterations 2
Cbc0038I Pass  15: suminf.    1.10727 (3) obj. -276.017 iterations 0
Cbc0038I Pass  16: suminf.    0.40224 (2) obj. -276.017 iterations 3
Cbc0038I Pass  17: suminf.    0.40036 (3) obj. -276.017 iterations 1
Cbc0038I Pass  18: suminf.    0.57807 (3) obj. -276.017 iterations 4
Cbc0038I Pass  19: suminf.    0.57414 (2) obj. -276.017 iterations 1
Cbc0038I Pass  20: suminf.    0.49367 (2) obj. -276.017 iterations 3
Cbc0038I Pass  21: suminf.    0.49367 (2) obj. -276.017 iterations 0
Cbc0038I Pass  22: suminf.    0.57807 (3) obj. -276.017 iterations 3
Cbc0038I Pass  23: suminf.    0.44165 (2) obj. -276.017 iterations 12
Cbc0038I Pass  24: suminf.    0.50580 (3) obj. -276.017 iterations 3
Cbc0038I Pass  25: suminf.    0.47786 (2) obj. -276.017 iterations 1
Cbc0038I Pass  26: suminf.    0.45268 (1) obj. -285.26 iterations 3
Cbc0038I Pass  27: suminf.    0.41888 (1) obj. -276.017 iterations 1
Cbc0038I Pass  28: suminf.    1.60275 (4) obj. -276.017 iterations 7
Cbc0038I Pass  29: suminf.    0.40098 (1) obj. -295.389 iterations 4
Cbc0038I Pass  30: suminf.    0.47183 (1) obj. -276.017 iterations 1
Cbc0038I Pass  31: suminf.    0.68111 (3) obj. -276.017 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -263.807 to -278.401 (0.02 seconds)
Cbc0038I Round again with cutoff of -299.902
Cbc0038I Pass  31: suminf.    0.50748 (2) obj. -299.902 iterations 1
Cbc0038I Pass  32: suminf.    0.65418 (3) obj. -299.902 iterations 3
Cbc0038I Pass  33: suminf.    0.65418 (3) obj. -299.902 iterations 0
Cbc0038I Pass  34: suminf.    0.43393 (2) obj. -299.902 iterations 3
Cbc0038I Pass  35: suminf.    0.43393 (2) obj. -299.902 iterations 0
Cbc0038I Pass  36: suminf.    0.47162 (2) obj. -299.902 iterations 1
Cbc0038I Pass  37: suminf.    0.44563 (3) obj. -299.902 iterations 1
Cbc0038I Pass  38: suminf.    1.21041 (3) obj. -299.902 iterations 3
Cbc0038I Pass  39: suminf.    0.77205 (3) obj. -299.902 iterations 6
Cbc0038I Pass  40: suminf.    0.77205 (3) obj. -299.902 iterations 0
Cbc0038I Pass  41: suminf.    0.68243 (3) obj. -299.902 iterations 4
Cbc0038I Pass  42: suminf.    0.60194 (3) obj. -299.902 iterations 2
Cbc0038I Pass  43: suminf.    0.69514 (3) obj. -299.902 iterations 3
Cbc0038I Pass  44: suminf.    0.69514 (3) obj. -299.902 iterations 0
Cbc0038I Pass  45: suminf.    0.32746 (2) obj. -299.902 iterations 3
Cbc0038I Pass  46: suminf.    0.32394 (2) obj. -299.902 iterations 1
Cbc0038I Pass  47: suminf.    0.63886 (3) obj. -299.902 iterations 16
Cbc0038I Pass  48: suminf.    0.61963 (4) obj. -299.902 iterations 1
Cbc0038I Pass  49: suminf.    0.86525 (3) obj. -299.902 iterations 8
Cbc0038I Pass  50: suminf.    0.85971 (3) obj. -299.902 iterations 1
Cbc0038I Pass  51: suminf.    0.53372 (2) obj. -299.902 iterations 3
Cbc0038I Pass  52: suminf.    0.53372 (2) obj. -299.902 iterations 0
Cbc0038I Pass  53: suminf.    0.65754 (2) obj. -299.902 iterations 3
Cbc0038I Pass  54: suminf.    0.42476 (1) obj. -299.902 iterations 2
Cbc0038I Pass  55: suminf.    0.38878 (1) obj. -299.902 iterations 1
Cbc0038I Pass  56: suminf.    0.90568 (4) obj. -299.902 iterations 5
Cbc0038I Pass  57: suminf.    0.61009 (2) obj. -299.902 iterations 5
Cbc0038I Pass  58: suminf.    0.61009 (2) obj. -299.902 iterations 0
Cbc0038I Pass  59: suminf.    0.25045 (2) obj. -299.902 iterations 2
Cbc0038I Pass  60: suminf.    0.24856 (2) obj. -299.902 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -278.401 - took 0.02 seconds
Cbc0012I Integer solution of -278.40082 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 9 added rows had average density of 11.444444
Cbc0013I At root node, 9 cuts changed objective from -385.90622 to -279.8913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 506 row cuts average 4.2 elements, 4 column cuts (4 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 523 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 67 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -278.400822, took 1345 iterations and 2 nodes (0.11 seconds)
Cbc0032I Strong branching done 24 times (132 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-10) rows, 44 (-2) columns and 345 (-43) elements
Clp1000I sum of infeasibilities 8.26054e-09 - average 2.17383e-10, 39 fixed columns
Coin0506I Presolve 4 (-34) rows, 5 (-39) columns and 14 (-331) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 376.58748
Clp0000I Optimal - objective value 376.58748
Coin0511I After Postsolve, objective 376.58748, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1965252 - largest nonzero change 1.0253115e-05 ( 0.00086069148%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 527.60862
Clp0000I Optimal - objective value 527.60862
Clp0000I Optimal - objective value 527.60862
Coin0511I After Postsolve, objective 527.60862, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 527.6086186 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 43 columns (43 integer (43 of which binary)) and 334 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.57293
Cbc0038I Pass   1: suminf.    0.32222 (3) obj. -183.562 iterations 27
Cbc0038I Pass   2: suminf.    0.32222 (3) obj. -183.562 iterations 1
Cbc0038I Solution found of -177.318
Cbc0038I Rounding solution of -209.593 is better than previous of -177.318

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -209.593 to -343.55 (0.02 seconds)
Cbc0038I Round again with cutoff of -355.743
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.61013 (11) obj. -355.743 iterations 2
Cbc0038I Pass   4: suminf.    1.19854 (4) obj. -355.743 iterations 20
Cbc0038I Pass   5: suminf.    0.22256 (2) obj. -355.743 iterations 2
Cbc0038I Pass   6: suminf.    0.06473 (1) obj. -361.249 iterations 2
Cbc0038I Pass   7: suminf.    0.04459 (1) obj. -355.743 iterations 1
Cbc0038I Pass   8: suminf.    1.53362 (6) obj. -355.743 iterations 7
Cbc0038I Pass   9: suminf.    0.88863 (5) obj. -355.743 iterations 3
Cbc0038I Pass  10: suminf.    0.60660 (2) obj. -355.743 iterations 4
Cbc0038I Pass  11: suminf.    0.60660 (2) obj. -355.743 iterations 0
Cbc0038I Pass  12: suminf.    0.17634 (1) obj. -369.073 iterations 2
Cbc0038I Pass  13: suminf.    0.12759 (1) obj. -355.743 iterations 1
Cbc0038I Pass  14: suminf.    3.19789 (10) obj. -355.743 iterations 17
Cbc0038I Pass  15: suminf.    2.13819 (9) obj. -355.743 iterations 8
Cbc0038I Pass  16: suminf.    1.75919 (8) obj. -355.743 iterations 1
Cbc0038I Pass  17: suminf.    0.48154 (2) obj. -363.196 iterations 8
Cbc0038I Pass  18: suminf.    0.18342 (2) obj. -355.743 iterations 2
Cbc0038I Pass  19: suminf.    1.69598 (6) obj. -355.743 iterations 7
Cbc0038I Pass  20: suminf.    1.45781 (5) obj. -355.743 iterations 1
Cbc0038I Pass  21: suminf.    0.18326 (2) obj. -355.743 iterations 7
Cbc0038I Pass  22: suminf.    2.35442 (10) obj. -355.743 iterations 12
Cbc0038I Pass  23: suminf.    2.31951 (7) obj. -361.057 iterations 4
Cbc0038I Pass  24: suminf.    0.08621 (1) obj. -355.743 iterations 8
Cbc0038I Pass  25: suminf.    0.12951 (1) obj. -367.582 iterations 1
Cbc0038I Pass  26: suminf.    2.38649 (7) obj. -355.743 iterations 11
Cbc0038I Pass  27: suminf.    1.24456 (5) obj. -355.743 iterations 3
Cbc0038I Pass  28: suminf.    0.84934 (4) obj. -355.743 iterations 1
Cbc0038I Pass  29: suminf.    0.13987 (2) obj. -355.743 iterations 4
Cbc0038I Pass  30: suminf.    0.13987 (2) obj. -355.743 iterations 0
Cbc0038I Pass  31: suminf.    0.46627 (2) obj. -355.743 iterations 1
Cbc0038I Pass  32: suminf.    0.46627 (2) obj. -355.743 iterations 0
Cbc0038I Rounding solution of -359.293 is better than previous of -343.55

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -380.53
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.75143 (11) obj. -380.53 iterations 1
Cbc0038I Pass  33: suminf.    0.47938 (2) obj. -380.53 iterations 18
Cbc0038I Pass  34: suminf.    0.47938 (2) obj. -380.53 iterations 0
Cbc0038I Pass  35: suminf.    0.72689 (2) obj. -380.53 iterations 1
Cbc0038I Pass  36: suminf.    0.72689 (2) obj. -380.53 iterations 0
Cbc0038I Pass  37: suminf.    3.27232 (10) obj. -380.53 iterations 19
Cbc0038I Pass  38: suminf.    1.06373 (4) obj. -380.53 iterations 14
Cbc0038I Pass  39: suminf.    0.75562 (4) obj. -380.53 iterations 4
Cbc0038I Pass  40: suminf.    1.74664 (4) obj. -380.53 iterations 2
Cbc0038I Pass  41: suminf.    0.17489 (3) obj. -380.53 iterations 3
Cbc0038I Pass  42: suminf.    0.56990 (3) obj. -380.53 iterations 6
Cbc0038I Pass  43: suminf.    0.56395 (3) obj. -380.53 iterations 1
Cbc0038I Pass  44: suminf.    0.82643 (3) obj. -389.467 iterations 4
Cbc0038I Pass  45: suminf.    0.51326 (2) obj. -380.53 iterations 2
Cbc0038I Pass  46: suminf.    1.56583 (6) obj. -380.53 iterations 13
Cbc0038I Pass  47: suminf.    0.73979 (4) obj. -380.53 iterations 6
Cbc0038I Pass  48: suminf.    1.12925 (4) obj. -380.53 iterations 5
Cbc0038I Pass  49: suminf.    1.04064 (4) obj. -380.53 iterations 5
Cbc0038I Pass  50: suminf.    0.92801 (5) obj. -380.53 iterations 6
Cbc0038I Pass  51: suminf.    1.58092 (7) obj. -380.53 iterations 8
Cbc0038I Pass  52: suminf.    2.11155 (9) obj. -380.53 iterations 11
Cbc0038I Pass  53: suminf.    0.90048 (4) obj. -380.53 iterations 5
Cbc0038I Pass  54: suminf.    1.08527 (4) obj. -380.53 iterations 5
Cbc0038I Pass  55: suminf.    0.40344 (3) obj. -380.53 iterations 4
Cbc0038I Pass  56: suminf.    1.38494 (5) obj. -380.53 iterations 8
Cbc0038I Pass  57: suminf.    0.42984 (3) obj. -380.53 iterations 5
Cbc0038I Pass  58: suminf.    1.05000 (4) obj. -394.359 iterations 9
Cbc0038I Pass  59: suminf.    0.55000 (2) obj. -390.459 iterations 2
Cbc0038I Pass  60: suminf.    0.28817 (3) obj. -380.53 iterations 3
Cbc0038I Pass  61: suminf.    0.05000 (1) obj. -385.959 iterations 2
Cbc0038I Rounding solution of -367.632 is better than previous of -359.293

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 9 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -367.632 to -390.998 (0.04 seconds)
Cbc0038I Round again with cutoff of -413.341
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.97469 (11) obj. -413.341 iterations 0
Cbc0038I Pass  62: suminf.    1.11771 (5) obj. -413.341 iterations 15
Cbc0038I Pass  63: suminf.    1.11771 (5) obj. -413.341 iterations 1
Cbc0038I Pass  64: suminf.    1.49127 (5) obj. -413.341 iterations 4
Cbc0038I Pass  65: suminf.    0.97628 (5) obj. -413.341 iterations 2
Cbc0038I Pass  66: suminf.    0.97628 (5) obj. -413.341 iterations 0
Cbc0038I Pass  67: suminf.    1.49127 (5) obj. -413.341 iterations 3
Cbc0038I Pass  68: suminf.    1.67819 (8) obj. -413.341 iterations 12
Cbc0038I Pass  69: suminf.    1.47031 (6) obj. -413.341 iterations 2
Cbc0038I Pass  70: suminf.    1.15182 (6) obj. -413.341 iterations 6
Cbc0038I Pass  71: suminf.    1.57499 (6) obj. -413.341 iterations 5
Cbc0038I Pass  72: suminf.    0.94963 (5) obj. -413.341 iterations 7
Cbc0038I Pass  73: suminf.    1.51416 (5) obj. -413.341 iterations 3
Cbc0038I Pass  74: suminf.    0.94963 (5) obj. -413.341 iterations 2
Cbc0038I Pass  75: suminf.    1.90815 (8) obj. -413.341 iterations 6
Cbc0038I Pass  76: suminf.    1.50382 (7) obj. -413.341 iterations 3
Cbc0038I Pass  77: suminf.    1.57499 (6) obj. -413.341 iterations 5
Cbc0038I Pass  78: suminf.    0.94963 (5) obj. -413.341 iterations 6
Cbc0038I Pass  79: suminf.    1.51416 (5) obj. -413.341 iterations 2
Cbc0038I Pass  80: suminf.    0.94963 (5) obj. -413.341 iterations 2
Cbc0038I Pass  81: suminf.    1.63703 (6) obj. -413.341 iterations 5
Cbc0038I Pass  82: suminf.    2.18620 (7) obj. -413.341 iterations 8
Cbc0038I Pass  83: suminf.    1.99255 (6) obj. -413.341 iterations 2
Cbc0038I Pass  84: suminf.    1.51416 (5) obj. -413.341 iterations 5
Cbc0038I Pass  85: suminf.    4.04403 (14) obj. -413.341 iterations 14
Cbc0038I Pass  86: suminf.    2.05591 (9) obj. -413.341 iterations 11
Cbc0038I Pass  87: suminf.    1.75521 (6) obj. -413.341 iterations 7
Cbc0038I Pass  88: suminf.    0.78389 (5) obj. -413.341 iterations 7
Cbc0038I Pass  89: suminf.    0.86646 (5) obj. -413.341 iterations 3
Cbc0038I Pass  90: suminf.    2.25930 (8) obj. -413.341 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 43 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -390.998 - took 0.03 seconds
Cbc0012I Integer solution of -390.99782 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 43 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 11.333333
Cbc0013I At root node, 6 cuts changed objective from -403.78396 to -391.1374 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 7.5 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 27 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0001I Search completed - best objective -390.9978160000001, took 53 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 1.26137e-08 - average 3.70992e-10, 5 fixed columns
Coin0506I Presolve 21 (-13) rows, 16 (-5) columns and 66 (-36) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Coin0511I After Postsolve, objective 423.28131, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Clp0000I Optimal - objective value 423.28131
Coin0511I After Postsolve, objective 423.28131, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 423.2813117 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.540%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.30161
Cbc0038I Pass   1: suminf.    0.44420 (1) obj. -291.281 iterations 13
Cbc0038I Solution found of -139.315
Cbc0038I Relaxing continuous gives -139.315
Cbc0038I Rounding solution of -218.924 is better than previous of -139.315

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -218.924 to -263.807 (0.01 seconds)
Cbc0038I Round again with cutoff of -276.017
Cbc0038I Pass   2: suminf.    0.44420 (1) obj. -291.281 iterations 0
Cbc0038I Pass   3: suminf.    0.49998 (1) obj. -276.017 iterations 1
Cbc0038I Pass   4: suminf.    1.64277 (5) obj. -276.017 iterations 8
Cbc0038I Pass   5: suminf.    0.81293 (3) obj. -276.017 iterations 1
Cbc0038I Pass   6: suminf.    0.57899 (2) obj. -276.017 iterations 3
Cbc0038I Pass   7: suminf.    0.57899 (2) obj. -276.017 iterations 0
Cbc0038I Pass   8: suminf.    0.63037 (2) obj. -276.017 iterations 1
Cbc0038I Pass   9: suminf.    0.60438 (3) obj. -276.017 iterations 1
Cbc0038I Pass  10: suminf.    1.32407 (3) obj. -276.017 iterations 2
Cbc0038I Pass  11: suminf.    1.24056 (4) obj. -276.017 iterations 7
Cbc0038I Pass  12: suminf.    0.71797 (2) obj. -276.017 iterations 3
Cbc0038I Pass  13: suminf.    0.86438 (2) obj. -276.017 iterations 1
Cbc0038I Pass  14: suminf.    1.10727 (3) obj. -276.017 iterations 2
Cbc0038I Pass  15: suminf.    1.10727 (3) obj. -276.017 iterations 0
Cbc0038I Pass  16: suminf.    0.40224 (2) obj. -276.017 iterations 3
Cbc0038I Pass  17: suminf.    0.40036 (3) obj. -276.017 iterations 1
Cbc0038I Pass  18: suminf.    0.57807 (3) obj. -276.017 iterations 4
Cbc0038I Pass  19: suminf.    0.57414 (2) obj. -276.017 iterations 1
Cbc0038I Pass  20: suminf.    0.49367 (2) obj. -276.017 iterations 3
Cbc0038I Pass  21: suminf.    0.49367 (2) obj. -276.017 iterations 0
Cbc0038I Pass  22: suminf.    0.57807 (3) obj. -276.017 iterations 3
Cbc0038I Pass  23: suminf.    0.44165 (2) obj. -276.017 iterations 12
Cbc0038I Pass  24: suminf.    0.50580 (3) obj. -276.017 iterations 3
Cbc0038I Pass  25: suminf.    0.47786 (2) obj. -276.017 iterations 1
Cbc0038I Pass  26: suminf.    0.45268 (1) obj. -285.26 iterations 3
Cbc0038I Pass  27: suminf.    0.41888 (1) obj. -276.017 iterations 1
Cbc0038I Pass  28: suminf.    1.60275 (4) obj. -276.017 iterations 7
Cbc0038I Pass  29: suminf.    0.40098 (1) obj. -295.389 iterations 4
Cbc0038I Pass  30: suminf.    0.47183 (1) obj. -276.017 iterations 1
Cbc0038I Pass  31: suminf.    0.68111 (3) obj. -276.017 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -263.807 to -278.401 (0.02 seconds)
Cbc0038I Round again with cutoff of -299.902
Cbc0038I Pass  31: suminf.    0.50748 (2) obj. -299.902 iterations 1
Cbc0038I Pass  32: suminf.    0.65418 (3) obj. -299.902 iterations 3
Cbc0038I Pass  33: suminf.    0.65418 (3) obj. -299.902 iterations 0
Cbc0038I Pass  34: suminf.    0.43393 (2) obj. -299.902 iterations 3
Cbc0038I Pass  35: suminf.    0.43393 (2) obj. -299.902 iterations 0
Cbc0038I Pass  36: suminf.    0.47162 (2) obj. -299.902 iterations 1
Cbc0038I Pass  37: suminf.    0.44563 (3) obj. -299.902 iterations 1
Cbc0038I Pass  38: suminf.    1.21041 (3) obj. -299.902 iterations 3
Cbc0038I Pass  39: suminf.    0.77205 (3) obj. -299.902 iterations 6
Cbc0038I Pass  40: suminf.    0.77205 (3) obj. -299.902 iterations 0
Cbc0038I Pass  41: suminf.    0.68243 (3) obj. -299.902 iterations 4
Cbc0038I Pass  42: suminf.    0.60194 (3) obj. -299.902 iterations 2
Cbc0038I Pass  43: suminf.    0.69514 (3) obj. -299.902 iterations 3
Cbc0038I Pass  44: suminf.    0.69514 (3) obj. -299.902 iterations 0
Cbc0038I Pass  45: suminf.    0.32746 (2) obj. -299.902 iterations 3
Cbc0038I Pass  46: suminf.    0.32394 (2) obj. -299.902 iterations 1
Cbc0038I Pass  47: suminf.    0.63886 (3) obj. -299.902 iterations 16
Cbc0038I Pass  48: suminf.    0.61963 (4) obj. -299.902 iterations 1
Cbc0038I Pass  49: suminf.    0.86525 (3) obj. -299.902 iterations 8
Cbc0038I Pass  50: suminf.    0.85971 (3) obj. -299.902 iterations 1
Cbc0038I Pass  51: suminf.    0.53372 (2) obj. -299.902 iterations 3
Cbc0038I Pass  52: suminf.    0.53372 (2) obj. -299.902 iterations 0
Cbc0038I Pass  53: suminf.    0.65754 (2) obj. -299.902 iterations 3
Cbc0038I Pass  54: suminf.    0.42476 (1) obj. -299.902 iterations 2
Cbc0038I Pass  55: suminf.    0.38878 (1) obj. -299.902 iterations 1
Cbc0038I Pass  56: suminf.    0.90568 (4) obj. -299.902 iterations 5
Cbc0038I Pass  57: suminf.    0.61009 (2) obj. -299.902 iterations 5
Cbc0038I Pass  58: suminf.    0.61009 (2) obj. -299.902 iterations 0
Cbc0038I Pass  59: suminf.    0.25045 (2) obj. -299.902 iterations 2
Cbc0038I Pass  60: suminf.    0.24856 (2) obj. -299.902 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -278.401 - took 0.02 seconds
Cbc0012I Integer solution of -278.40082 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 11.444444
Cbc0013I At root node, 9 cuts changed objective from -385.90622 to -279.8913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 506 row cuts average 4.2 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 523 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 67 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -278.400822, took 1345 iterations and 2 nodes (0.13 seconds)
Cbc0032I Strong branching done 24 times (132 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 42 (-5) columns and 307 (-82) elements
Clp1000I sum of infeasibilities 1.30736e-08 - average 3.63155e-10, 37 fixed columns
Coin0506I Presolve 4 (-32) rows, 5 (-37) columns and 14 (-293) elements
Clp0029I End of values pass after 5 iterations
Clp0014I Perturbing problem by 0.001% of 3.2867702 - largest nonzero change 1.6443462e-05 ( 0.00068614409%) - largest zero change 0
Clp0000I Optimal - objective value 335.86758
Clp0000I Optimal - objective value 335.86758
Coin0511I After Postsolve, objective 335.86758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2928601 - largest nonzero change 1.1896432e-05 ( 0.0010472544%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 469.73174
Clp0000I Optimal - objective value 469.73174
Clp0000I Optimal - objective value 469.73174
Coin0511I After Postsolve, objective 469.73174, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 469.7317411 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (42 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 3.21722
Cbc0038I Pass   1: suminf.    0.32366 (1) obj. -310.23 iterations 21
Cbc0038I Pass   2: suminf.    0.32366 (1) obj. -310.23 iterations 1
Cbc0038I Solution found of -125.309
Cbc0038I Rounding solution of -156.622 is better than previous of -125.309

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -177.831
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.32366 (1) obj. -310.23 iterations 0
Cbc0038I Pass   4: suminf.    0.32366 (1) obj. -310.23 iterations 1
Cbc0038I Pass   5: suminf.    0.19210 (1) obj. -177.831 iterations 1
Cbc0038I Pass   6: suminf.    1.37058 (7) obj. -177.831 iterations 13
Cbc0038I Pass   7: suminf.    1.37058 (7) obj. -177.831 iterations 2
Cbc0038I Pass   8: suminf.    0.47991 (1) obj. -262.806 iterations 7
Cbc0038I Pass   9: suminf.    0.20930 (1) obj. -177.831 iterations 1
Cbc0038I Pass  10: suminf.    1.70257 (5) obj. -177.831 iterations 9
Cbc0038I Pass  11: suminf.    0.39732 (1) obj. -232.861 iterations 5
Cbc0038I Pass  12: suminf.    0.19605 (1) obj. -177.831 iterations 1
Cbc0038I Pass  13: suminf.    0.63051 (3) obj. -177.831 iterations 6
Cbc0038I Pass  14: suminf.    0.52799 (2) obj. -177.831 iterations 3
Cbc0038I Pass  15: suminf.    0.45775 (1) obj. -177.831 iterations 1
Cbc0038I Pass  16: suminf.    0.37946 (1) obj. -222.338 iterations 1
Cbc0038I Pass  17: suminf.    1.86454 (6) obj. -177.831 iterations 12
Cbc0038I Pass  18: suminf.    1.39886 (5) obj. -177.831 iterations 3
Cbc0038I Pass  19: suminf.    0.26339 (1) obj. -206.958 iterations 5
Cbc0038I Pass  20: suminf.    0.15686 (1) obj. -177.831 iterations 1
Cbc0038I Pass  21: suminf.    2.05210 (7) obj. -177.831 iterations 7
Cbc0038I Pass  22: suminf.    1.62201 (6) obj. -177.831 iterations 1
Cbc0038I Pass  23: suminf.    0.37500 (1) obj. -214.782 iterations 6
Cbc0038I Pass  24: suminf.    0.23985 (1) obj. -177.831 iterations 1
Cbc0038I Pass  25: suminf.    4.80542 (11) obj. -177.831 iterations 18
Cbc0038I Pass  26: suminf.    2.19011 (5) obj. -212.7 iterations 6
Cbc0038I Pass  27: suminf.    1.36154 (3) obj. -207.385 iterations 2
Cbc0038I Pass  28: suminf.    0.86154 (2) obj. -201.885 iterations 1
Cbc0038I Solution found of -194.516
Cbc0038I Rounding solution of -244.639 is better than previous of -194.516

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 42 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -244.639 to -277.865 (0.02 seconds)
Cbc0038I Round again with cutoff of -296.035
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  29: suminf.    0.32366 (1) obj. -310.23 iterations 0
Cbc0038I Pass  30: suminf.    0.32366 (1) obj. -310.23 iterations 1
Cbc0038I Pass  31: suminf.    0.37558 (1) obj. -296.035 iterations 1
Cbc0038I Pass  32: suminf.    2.67600 (10) obj. -296.035 iterations 17
Cbc0038I Pass  33: suminf.    2.51173 (9) obj. -296.035 iterations 2
Cbc0038I Pass  34: suminf.    1.43299 (4) obj. -296.035 iterations 8
Cbc0038I Pass  35: suminf.    0.72323 (2) obj. -296.035 iterations 4
Cbc0038I Pass  36: suminf.    0.88400 (2) obj. -296.035 iterations 2
Cbc0038I Pass  37: suminf.    0.88400 (2) obj. -296.035 iterations 0
Cbc0038I Pass  38: suminf.    0.72323 (2) obj. -296.035 iterations 1
Cbc0038I Pass  39: suminf.    1.23009 (5) obj. -296.035 iterations 5
Cbc0038I Pass  40: suminf.    0.86796 (3) obj. -296.035 iterations 3
Cbc0038I Pass  41: suminf.    0.56654 (2) obj. -296.035 iterations 3
Cbc0038I Pass  42: suminf.    0.55420 (2) obj. -296.035 iterations 1
Cbc0038I Pass  43: suminf.    2.25607 (8) obj. -296.035 iterations 11
Cbc0038I Pass  44: suminf.    1.30615 (4) obj. -296.035 iterations 7
Cbc0038I Pass  45: suminf.    0.77898 (3) obj. -296.035 iterations 1
Cbc0038I Pass  46: suminf.    0.74900 (2) obj. -296.035 iterations 3
Cbc0038I Pass  47: suminf.    0.74900 (2) obj. -296.035 iterations 0
Cbc0038I Pass  48: suminf.    0.58954 (2) obj. -296.035 iterations 1
Cbc0038I Pass  49: suminf.    0.58954 (2) obj. -296.035 iterations 0
Cbc0038I Pass  50: suminf.    1.29407 (3) obj. -296.035 iterations 6
Cbc0038I Pass  51: suminf.    0.90778 (3) obj. -296.035 iterations 2
Cbc0038I Pass  52: suminf.    0.64761 (2) obj. -296.035 iterations 3
Cbc0038I Pass  53: suminf.    0.64761 (2) obj. -296.035 iterations 0
Cbc0038I Pass  54: suminf.    0.64785 (2) obj. -296.035 iterations 1
Cbc0038I Pass  55: suminf.    0.64785 (2) obj. -296.035 iterations 0
Cbc0038I Pass  56: suminf.    1.75693 (6) obj. -296.035 iterations 6
Cbc0038I Pass  57: suminf.    0.85866 (3) obj. -296.035 iterations 5
Cbc0038I Pass  58: suminf.    0.64761 (2) obj. -296.035 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -277.865 - took 0.02 seconds
Cbc0012I Integer solution of -277.86525 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 42 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -278.40082 found by DiveCoefficient after 82 iterations and 0 nodes (0.04 seconds)
Cbc0031I 7 added rows had average density of 11
Cbc0013I At root node, 7 cuts changed objective from -368.71162 to -278.40082 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 75 row cuts average 3.1 elements, 21 column cuts (21 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -278.400822, took 82 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

