Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 3.38433e-06 - average 2.58346e-08, 10 fixed columns
Coin0506I Presolve 112 (-19) rows, 64 (-10) columns and 344 (-58) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 2.0553742 - largest nonzero change 0 ( 0%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 41.384526
Clp0000I Optimal - objective value 41.384526
Coin0511I After Postsolve, objective 41.384526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.384526
Clp0000I Optimal - objective value 41.384526
Clp0000I Optimal - objective value 41.384526
Coin0511I After Postsolve, objective 41.384526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.38452641 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 74 columns (73 integer (73 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.469%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.73975
Cbc0038I Solution found of -1.97502
Cbc0038I Relaxing continuous gives -7.14866
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 61 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -7.14866 to -17.1403 (0.03 seconds)
Cbc0038I Round again with cutoff of -19.5648
Cbc0038I Pass   1: suminf.    1.48744 (28) obj. -19.5648 iterations 38
Cbc0038I Pass   2: suminf.    1.38285 (6) obj. -19.5648 iterations 26
Cbc0038I Pass   3: suminf.    0.79516 (5) obj. -19.5648 iterations 5
Cbc0038I Pass   4: suminf.    0.72562 (7) obj. -19.5648 iterations 2
Cbc0038I Pass   5: suminf.    1.41017 (5) obj. -19.5648 iterations 15
Cbc0038I Pass   6: suminf.    1.38557 (5) obj. -19.5648 iterations 3
Cbc0038I Pass   7: suminf.    1.43086 (4) obj. -19.5648 iterations 9
Cbc0038I Pass   8: suminf.    1.42475 (4) obj. -19.5648 iterations 3
Cbc0038I Pass   9: suminf.    0.97786 (3) obj. -19.5648 iterations 4
Cbc0038I Pass  10: suminf.    0.94038 (4) obj. -19.5648 iterations 1
Cbc0038I Pass  11: suminf.    1.69042 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  12: suminf.    0.91297 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  13: suminf.    1.39218 (4) obj. -19.5648 iterations 10
Cbc0038I Pass  14: suminf.    1.38557 (5) obj. -19.5648 iterations 1
Cbc0038I Pass  15: suminf.    1.43086 (4) obj. -19.5648 iterations 9
Cbc0038I Pass  16: suminf.    1.42475 (4) obj. -19.5648 iterations 3
Cbc0038I Pass  17: suminf.    0.97786 (3) obj. -19.5648 iterations 4
Cbc0038I Pass  18: suminf.    0.94038 (4) obj. -19.5648 iterations 1
Cbc0038I Pass  19: suminf.    1.69042 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  20: suminf.    0.91297 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  21: suminf.    1.39218 (4) obj. -19.5648 iterations 10
Cbc0038I Pass  22: suminf.    1.38557 (5) obj. -19.5648 iterations 1
Cbc0038I Pass  23: suminf.    1.43086 (4) obj. -19.5648 iterations 9
Cbc0038I Pass  24: suminf.    1.42475 (4) obj. -19.5648 iterations 3
Cbc0038I Pass  25: suminf.    0.97786 (3) obj. -19.5648 iterations 4
Cbc0038I Pass  26: suminf.    0.94038 (4) obj. -19.5648 iterations 1
Cbc0038I Pass  27: suminf.    1.69042 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  28: suminf.    0.91297 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  29: suminf.    1.39218 (4) obj. -19.5648 iterations 10
Cbc0038I Pass  30: suminf.    1.38557 (5) obj. -19.5648 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 66 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -17.1403 - took 0.05 seconds
Cbc0012I Integer solution of -17.14027 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 61 rows 36 columns
Cbc0031I 22 added rows had average density of 36.409091
Cbc0013I At root node, 22 cuts changed objective from -41.384526 to -35.674136 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7355 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1319 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 153 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17.14027 best solution, best possible -35.674136 (0.70 seconds)
Cbc0004I Integer solution of -19.00578 found after 7208 iterations and 41 nodes (0.91 seconds)
Cbc0001I Search completed - best objective -19.00578, took 7650 iterations and 52 nodes (0.92 seconds)
Cbc0032I Strong branching done 660 times (12191 iterations), fathomed 2 nodes and fixed 23 variables
Cbc0035I Maximum depth 23, 133 variables fixed on reduced cost
Total time (CPU seconds):       0.90   (Wallclock seconds):       0.93

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 116 (-36) columns and 1833 (-1470) elements
Clp1000I sum of infeasibilities 7.82087e-08 - average 7.74343e-10, 69 fixed columns
Coin0506I Presolve 45 (-56) rows, 47 (-69) columns and 239 (-1594) elements
Clp0006I 0  Obj 132.00039 Dual inf 24.988 (47)
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 3.6585271 - largest nonzero change 0 ( 0%) - largest zero change 1.8802177e-05
Clp0000I Optimal - objective value 141.50422
Clp0000I Optimal - objective value 141.50422
Coin0511I After Postsolve, objective 141.50422, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 141.50422 Dual inf 8.7797599 (2)
Clp0014I Perturbing problem by 0.001% of 1.6884019 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 144.80793
Clp0000I Optimal - objective value 144.80793
Clp0000I Optimal - objective value 144.80793
Coin0511I After Postsolve, objective 144.80793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.8079264 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 116 columns (116 integer (116 of which binary)) and 1855 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.416%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 9.94959
Cbc0038I Pass   1: suminf.    0.16821 (9) obj. 13.7672 iterations 37
Cbc0038I Pass   2: suminf.    0.16821 (9) obj. 13.7672 iterations 1
Cbc0038I Solution found of 23.572
Cbc0038I Rounding solution of -5.18949 is better than previous of 23.572

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 34 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -5.18949 to -31.0856 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.6128
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.30198 (37) obj. -35.6128 iterations 15
Cbc0038I Pass   4: suminf.    1.39401 (36) obj. -35.6128 iterations 2
Cbc0038I Pass   5: suminf.    1.33646 (13) obj. -35.6128 iterations 36
Cbc0038I Pass   6: suminf.    1.29850 (11) obj. -35.6128 iterations 3
Cbc0038I Pass   7: suminf.    1.43100 (9) obj. -35.6128 iterations 21
Cbc0038I Pass   8: suminf.    1.41555 (8) obj. -35.6128 iterations 13
Cbc0038I Pass   9: suminf.    0.93716 (3) obj. -35.6128 iterations 9
Cbc0038I Pass  10: suminf.    0.88565 (3) obj. -35.6128 iterations 6
Cbc0038I Pass  11: suminf.    0.65956 (3) obj. -35.6128 iterations 9
Cbc0038I Pass  12: suminf.    0.65956 (3) obj. -35.6128 iterations 6
Cbc0038I Pass  13: suminf.    1.02574 (4) obj. -35.6128 iterations 7
Cbc0038I Pass  14: suminf.    0.89004 (3) obj. -35.6128 iterations 6
Cbc0038I Pass  15: suminf.    2.54492 (13) obj. -35.6128 iterations 18
Cbc0038I Pass  16: suminf.    2.13247 (11) obj. -35.6128 iterations 4
Cbc0038I Pass  17: suminf.    0.65645 (3) obj. -35.6128 iterations 15
Cbc0038I Pass  18: suminf.    0.65645 (3) obj. -35.6128 iterations 0
Cbc0038I Pass  19: suminf.    1.18321 (4) obj. -35.6128 iterations 5
Cbc0038I Pass  20: suminf.    1.08045 (4) obj. -35.6128 iterations 7
Cbc0038I Pass  21: suminf.    0.78436 (3) obj. -35.6128 iterations 6
Cbc0038I Pass  22: suminf.    0.30773 (3) obj. -35.6128 iterations 4
Cbc0038I Pass  23: suminf.    2.05533 (13) obj. -35.6128 iterations 40
Cbc0038I Pass  24: suminf.    0.94167 (12) obj. -35.6128 iterations 2
Cbc0038I Pass  25: suminf.    0.64597 (11) obj. -35.6128 iterations 2
Cbc0038I Pass  26: suminf.    1.54242 (5) obj. -35.6128 iterations 19
Cbc0038I Pass  27: suminf.    0.32669 (3) obj. -35.6128 iterations 6
Cbc0038I Pass  28: suminf.    0.66258 (2) obj. -38.0932 iterations 4
Cbc0038I Pass  29: suminf.    1.86270 (13) obj. -35.6128 iterations 16
Cbc0038I Pass  30: suminf.    1.47815 (11) obj. -35.6128 iterations 6
Cbc0038I Pass  31: suminf.    2.17977 (9) obj. -35.6128 iterations 21
Cbc0038I Pass  32: suminf.    1.31827 (7) obj. -35.6128 iterations 6
Cbc0038I Rounding solution of -31.5964 is better than previous of -31.0856

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 37 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -31.5964 to -33.2971 (0.06 seconds)
Cbc0038I Round again with cutoff of -43.7616
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.98455 (37) obj. -43.7616 iterations 0
Cbc0038I Pass  33: suminf.    1.43127 (36) obj. -43.7616 iterations 2
Cbc0038I Pass  34: suminf.    1.88927 (18) obj. -43.7616 iterations 35
Cbc0038I Pass  35: suminf.    1.88927 (18) obj. -43.7616 iterations 0
Cbc0038I Pass  36: suminf.    2.53812 (10) obj. -43.7616 iterations 27
Cbc0038I Pass  37: suminf.    1.27423 (5) obj. -43.7616 iterations 5
Cbc0038I Pass  38: suminf.    1.81025 (8) obj. -43.7616 iterations 10
Cbc0038I Pass  39: suminf.    1.81025 (8) obj. -43.7616 iterations 2
Cbc0038I Pass  40: suminf.    2.53036 (7) obj. -43.7616 iterations 14
Cbc0038I Pass  41: suminf.    2.53036 (7) obj. -43.7616 iterations 2
Cbc0038I Pass  42: suminf.    2.22311 (7) obj. -43.7616 iterations 3
Cbc0038I Pass  43: suminf.    2.22311 (7) obj. -43.7616 iterations 3
Cbc0038I Pass  44: suminf.    2.53036 (7) obj. -43.7616 iterations 5
Cbc0038I Pass  45: suminf.    2.91177 (11) obj. -43.7616 iterations 15
Cbc0038I Pass  46: suminf.    1.94756 (9) obj. -43.7616 iterations 16
Cbc0038I Pass  47: suminf.    1.81025 (8) obj. -43.7616 iterations 23
Cbc0038I Pass  48: suminf.    1.81025 (8) obj. -43.7616 iterations 2
Cbc0038I Pass  49: suminf.    2.53036 (7) obj. -43.7616 iterations 13
Cbc0038I Pass  50: suminf.    2.53036 (7) obj. -43.7616 iterations 2
Cbc0038I Pass  51: suminf.    2.22311 (7) obj. -43.7616 iterations 3
Cbc0038I Pass  52: suminf.    2.22311 (7) obj. -43.7616 iterations 3
Cbc0038I Pass  53: suminf.    2.53036 (7) obj. -43.7616 iterations 5
Cbc0038I Pass  54: suminf.    2.85125 (10) obj. -43.7616 iterations 10
Cbc0038I Pass  55: suminf.    2.11001 (9) obj. -43.7616 iterations 4
Cbc0038I Pass  56: suminf.    2.53036 (7) obj. -43.7616 iterations 12
Cbc0038I Pass  57: suminf.    2.53036 (7) obj. -43.7616 iterations 2
Cbc0038I Pass  58: suminf.    2.22311 (7) obj. -43.7616 iterations 3
Cbc0038I Pass  59: suminf.    2.22311 (7) obj. -43.7616 iterations 3
Cbc0038I Pass  60: suminf.    2.53036 (7) obj. -43.7616 iterations 5
Cbc0038I Pass  61: suminf.    2.09611 (9) obj. -43.7616 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 36 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -33.2971 - took 0.05 seconds
Cbc0012I Integer solution of -33.29708 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 6 rows 7 columns
Cbc0031I 39 added rows had average density of 6
Cbc0013I At root node, 39 cuts changed objective from -76.356791 to -35.677286 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 264 row cuts average 2.0 elements, 16 column cuts (16 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 49.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 41 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 41.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 51.4 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.29708 best solution, best possible -35.671465 (0.29 seconds)
Cbc0001I Search completed - best objective -33.29707999999999, took 485 iterations and 8 nodes (0.60 seconds)
Cbc0032I Strong branching done 70 times (494 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.60

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 3.38433e-06 - average 2.58346e-08, 10 fixed columns
Coin0506I Presolve 112 (-19) rows, 64 (-10) columns and 344 (-58) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 2.0553742 - largest nonzero change 0 ( 0%) - largest zero change 2.5841054e-05
Clp0000I Optimal - objective value 41.384526
Clp0000I Optimal - objective value 41.384526
Coin0511I After Postsolve, objective 41.384526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.384526
Clp0000I Optimal - objective value 41.384526
Clp0000I Optimal - objective value 41.384526
Coin0511I After Postsolve, objective 41.384526, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.38452641 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 74 columns (73 integer (73 of which binary)) and 423 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.469%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.73975
Cbc0038I Solution found of -1.97502
Cbc0038I Relaxing continuous gives -7.14866
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 61 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -7.14866 to -17.1403 (0.03 seconds)
Cbc0038I Round again with cutoff of -19.5648
Cbc0038I Pass   1: suminf.    1.48744 (28) obj. -19.5648 iterations 38
Cbc0038I Pass   2: suminf.    1.38285 (6) obj. -19.5648 iterations 26
Cbc0038I Pass   3: suminf.    0.79516 (5) obj. -19.5648 iterations 5
Cbc0038I Pass   4: suminf.    0.72562 (7) obj. -19.5648 iterations 2
Cbc0038I Pass   5: suminf.    1.41017 (5) obj. -19.5648 iterations 15
Cbc0038I Pass   6: suminf.    1.38557 (5) obj. -19.5648 iterations 3
Cbc0038I Pass   7: suminf.    1.43086 (4) obj. -19.5648 iterations 9
Cbc0038I Pass   8: suminf.    1.42475 (4) obj. -19.5648 iterations 3
Cbc0038I Pass   9: suminf.    0.97786 (3) obj. -19.5648 iterations 4
Cbc0038I Pass  10: suminf.    0.94038 (4) obj. -19.5648 iterations 1
Cbc0038I Pass  11: suminf.    1.69042 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  12: suminf.    0.91297 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  13: suminf.    1.39218 (4) obj. -19.5648 iterations 10
Cbc0038I Pass  14: suminf.    1.38557 (5) obj. -19.5648 iterations 1
Cbc0038I Pass  15: suminf.    1.43086 (4) obj. -19.5648 iterations 9
Cbc0038I Pass  16: suminf.    1.42475 (4) obj. -19.5648 iterations 3
Cbc0038I Pass  17: suminf.    0.97786 (3) obj. -19.5648 iterations 4
Cbc0038I Pass  18: suminf.    0.94038 (4) obj. -19.5648 iterations 1
Cbc0038I Pass  19: suminf.    1.69042 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  20: suminf.    0.91297 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  21: suminf.    1.39218 (4) obj. -19.5648 iterations 10
Cbc0038I Pass  22: suminf.    1.38557 (5) obj. -19.5648 iterations 1
Cbc0038I Pass  23: suminf.    1.43086 (4) obj. -19.5648 iterations 9
Cbc0038I Pass  24: suminf.    1.42475 (4) obj. -19.5648 iterations 3
Cbc0038I Pass  25: suminf.    0.97786 (3) obj. -19.5648 iterations 4
Cbc0038I Pass  26: suminf.    0.94038 (4) obj. -19.5648 iterations 1
Cbc0038I Pass  27: suminf.    1.69042 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  28: suminf.    0.91297 (4) obj. -19.5648 iterations 4
Cbc0038I Pass  29: suminf.    1.39218 (4) obj. -19.5648 iterations 10
Cbc0038I Pass  30: suminf.    1.38557 (5) obj. -19.5648 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 74 columns, reduced to 66 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -17.1403 - took 0.05 seconds
Cbc0012I Integer solution of -17.14027 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 130 rows 74 columns, reduced to 61 rows 36 columns
Cbc0031I 22 added rows had average density of 36.409091
Cbc0013I At root node, 22 cuts changed objective from -41.384526 to -35.674136 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7355 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1319 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 153 row cuts average 73.3 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -17.14027 best solution, best possible -35.674136 (0.71 seconds)
Cbc0004I Integer solution of -19.00578 found after 7208 iterations and 41 nodes (0.85 seconds)
Cbc0001I Search completed - best objective -19.00578, took 7650 iterations and 52 nodes (0.87 seconds)
Cbc0032I Strong branching done 660 times (12191 iterations), fathomed 2 nodes and fixed 23 variables
Cbc0035I Maximum depth 23, 133 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 114 (-39) columns and 1746 (-1558) elements
Clp1000I sum of infeasibilities 8.43888e-08 - average 8.52412e-10, 21 fixed columns
Coin0506I Presolve 80 (-19) rows, 93 (-21) columns and 1183 (-563) elements
Clp0006I 0  Obj 43.101215 Dual inf 24.904242 (92)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.1695985 - largest nonzero change 1.0919653e-05 ( 0.00086874748%) - largest zero change 2.6774191e-05
Clp0000I Optimal - objective value 51.00117
Clp0000I Optimal - objective value 51.00117
Coin0511I After Postsolve, objective 51.00117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.00117
Clp0000I Optimal - objective value 51.00117
Clp0000I Optimal - objective value 51.00117
Clp0000I Optimal - objective value 51.00117
Coin0511I After Postsolve, objective 51.00117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.00116973 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 114 columns (114 integer (114 of which binary)) and 1770 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.309%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 3.74279
Cbc0038I Pass   1: suminf.    1.39158 (26) obj. -26.8055 iterations 6
Cbc0038I Pass   2: suminf.    1.39158 (26) obj. -26.8055 iterations 0
Cbc0038I Pass   3: suminf.    0.70170 (15) obj. -15.5531 iterations 11
Cbc0038I Solution found of 12.9476
Cbc0038I Rounding solution of 7.12941 is better than previous of 12.9476

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 3.31642
Cbc0038I Pass   4: suminf.    1.39158 (26) obj. -26.8055 iterations 0
Cbc0038I Pass   5: suminf.    1.39158 (26) obj. -26.8055 iterations 0
Cbc0038I Pass   6: suminf.    0.75939 (16) obj. -17.4377 iterations 10
Cbc0038I Pass   7: suminf.    0.31206 (1) obj. 3.31642 iterations 16
Cbc0038I Pass   8: suminf.    0.05479 (1) obj. -0.285287 iterations 1
Cbc0038I Pass   9: suminf.    1.59849 (9) obj. 3.31642 iterations 22
Cbc0038I Pass  10: suminf.    1.09140 (11) obj. 3.31642 iterations 3
Cbc0038I Pass  11: suminf.    0.52064 (2) obj. 3.31642 iterations 13
Cbc0038I Pass  12: suminf.    0.19231 (1) obj. 2.84459 iterations 2
Cbc0038I Pass  13: suminf.    0.22401 (1) obj. 3.31642 iterations 2
Cbc0038I Pass  14: suminf.    0.12121 (1) obj. 1.87728 iterations 1
Cbc0038I Pass  15: suminf.    1.64344 (7) obj. 3.31642 iterations 26
Cbc0038I Pass  16: suminf.    0.66199 (13) obj. 3.31642 iterations 7
Cbc0038I Pass  17: suminf.    1.21671 (7) obj. 3.31642 iterations 19
Cbc0038I Pass  18: suminf.    0.32218 (5) obj. 2.67064 iterations 3
Cbc0038I Pass  19: suminf.    0.76005 (6) obj. 3.31642 iterations 11
Cbc0038I Pass  20: suminf.    0.76005 (6) obj. 3.31642 iterations 1
Cbc0038I Pass  21: suminf.    0.75769 (6) obj. 3.31642 iterations 3
Cbc0038I Pass  22: suminf.    0.75769 (6) obj. 3.31642 iterations 1
Cbc0038I Pass  23: suminf.    0.76005 (6) obj. 3.31642 iterations 3
Cbc0038I Pass  24: suminf.    1.31848 (11) obj. 3.31642 iterations 13
Cbc0038I Pass  25: suminf.    1.31848 (11) obj. 3.31642 iterations 0
Cbc0038I Pass  26: suminf.    1.72306 (5) obj. 3.31642 iterations 31
Cbc0038I Pass  27: suminf.    1.72306 (5) obj. 3.31642 iterations 0
Cbc0038I Pass  28: suminf.    1.10963 (4) obj. 3.31642 iterations 5
Cbc0038I Pass  29: suminf.    1.10963 (4) obj. 3.31642 iterations 2
Cbc0038I Pass  30: suminf.    0.80197 (4) obj. 3.31642 iterations 3
Cbc0038I Pass  31: suminf.    0.80197 (4) obj. 3.31642 iterations 2
Cbc0038I Pass  32: suminf.    0.78807 (8) obj. 3.31642 iterations 16
Cbc0038I Pass  33: suminf.    0.76050 (7) obj. 3.31642 iterations 3
Cbc0038I Rounding solution of -6.20135 is better than previous of 7.12941

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 114 columns, reduced to 45 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -6.20135 to -15.9548 (0.07 seconds)
Cbc0038I Round again with cutoff of -18.9638
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.39158 (26) obj. -26.8055 iterations 0
Cbc0038I Pass  34: suminf.    1.39158 (26) obj. -26.8055 iterations 0
Cbc0038I Pass  35: suminf.    1.86969 (23) obj. -18.9638 iterations 28
Cbc0038I Pass  36: suminf.    1.86969 (23) obj. -18.9638 iterations 0
Cbc0038I Pass  37: suminf.    2.98304 (21) obj. -18.9638 iterations 9
Cbc0038I Pass  38: suminf.    2.56343 (21) obj. -18.9638 iterations 3
Cbc0038I Pass  39: suminf.    2.82435 (21) obj. -18.9638 iterations 8
Cbc0038I Pass  40: suminf.    2.82435 (21) obj. -18.9638 iterations 2
Cbc0038I Pass  41: suminf.    2.84750 (21) obj. -18.9638 iterations 6
Cbc0038I Pass  42: suminf.    2.84750 (21) obj. -18.9638 iterations 2
Cbc0038I Pass  43: suminf.    2.85877 (21) obj. -18.9638 iterations 5
Cbc0038I Pass  44: suminf.    2.85877 (21) obj. -18.9638 iterations 2
Cbc0038I Pass  45: suminf.    2.53387 (24) obj. -18.9638 iterations 8
Cbc0038I Pass  46: suminf.    2.22429 (23) obj. -18.9638 iterations 3
Cbc0038I Pass  47: suminf.    2.96138 (22) obj. -18.9638 iterations 13
Cbc0038I Pass  48: suminf.    2.96138 (22) obj. -18.9638 iterations 1
Cbc0038I Pass  49: suminf.    2.75053 (21) obj. -18.9638 iterations 16
Cbc0038I Pass  50: suminf.    2.75053 (21) obj. -18.9638 iterations 1
Cbc0038I Pass  51: suminf.    2.84750 (21) obj. -18.9638 iterations 7
Cbc0038I Pass  52: suminf.    2.84750 (21) obj. -18.9638 iterations 2
Cbc0038I Pass  53: suminf.    2.85877 (21) obj. -18.9638 iterations 5
Cbc0038I Pass  54: suminf.    2.85877 (21) obj. -18.9638 iterations 2
Cbc0038I Pass  55: suminf.    2.64329 (21) obj. -18.9638 iterations 3
Cbc0038I Pass  56: suminf.    2.64329 (21) obj. -18.9638 iterations 2
Cbc0038I Pass  57: suminf.    2.79264 (21) obj. -18.9638 iterations 7
Cbc0038I Pass  58: suminf.    2.79264 (21) obj. -18.9638 iterations 2
Cbc0038I Pass  59: suminf.    2.64329 (21) obj. -18.9638 iterations 5
Cbc0038I Pass  60: suminf.    2.06383 (24) obj. -18.9638 iterations 11
Cbc0038I Pass  61: suminf.    1.49677 (25) obj. -18.9638 iterations 8
Cbc0038I Pass  62: suminf.    2.84750 (21) obj. -18.9638 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -15.9548 - took 0.05 seconds
Cbc0012I Integer solution of -15.954813 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 98 rows 114 columns, reduced to 30 rows 34 columns
Cbc0031I 47 added rows had average density of 21.553191
Cbc0013I At root node, 47 cuts changed objective from -30.999564 to -20.759467 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8364 row cuts average 6.1 elements, 4 column cuts (4 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1069 row cuts average 94.6 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 130 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 221 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 499 row cuts average 27.1 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 304 row cuts average 66.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 507 row cuts average 35.5 elements, 0 column cuts (0 active)  in 0.803 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15.954813 best solution, best possible -20.759467 (2.58 seconds)
Cbc0012I Integer solution of -17.14027 found by DiveCoefficient after 3721 iterations and 3 nodes (3.09 seconds)
Cbc0010I After 5 nodes, 3 on tree, -17.14027 best solution, best possible -20.759467 (3.42 seconds)
Cbc0010I After 11 nodes, 4 on tree, -17.14027 best solution, best possible -20.758217 (4.13 seconds)
Cbc0010I After 19 nodes, 5 on tree, -17.14027 best solution, best possible -20.758217 (4.96 seconds)
Cbc0012I Integer solution of -18.00578 found by rounding after 5520 iterations and 21 nodes (4.96 seconds)
Cbc0012I Integer solution of -19.00578 found by rounding after 5613 iterations and 22 nodes (4.97 seconds)
Cbc0001I Search completed - best objective -19.00578, took 5691 iterations and 24 nodes (4.97 seconds)
Cbc0032I Strong branching done 462 times (8255 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 8, 90 variables fixed on reduced cost
Total time (CPU seconds):       3.38   (Wallclock seconds):       4.98

