Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 8.00452e-06 - average 1.38009e-07, 7 fixed columns
Coin0506I Presolve 44 (-14) rows, 26 (-7) columns and 132 (-42) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 3.980886 - largest nonzero change 0 ( 0%) - largest zero change 1.6217085e-05
Clp0000I Optimal - objective value 113.5812
Clp0000I Optimal - objective value 113.5812
Coin0511I After Postsolve, objective 113.5812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 113.5812
Clp0000I Optimal - objective value 113.5812
Clp0000I Optimal - objective value 113.5812
Coin0511I After Postsolve, objective 113.5812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.5812022 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.74887
Cbc0038I Pass   1: suminf.    0.27500 (1) obj. -73.6347 iterations 16
Cbc0038I Solution found of -47.001
Cbc0038I Relaxing continuous gives -47.001
Cbc0038I Rounding solution of -50.3869 is better than previous of -47.001

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -50.3869 to -63.5934 (0.01 seconds)
Cbc0038I Round again with cutoff of -68.5923
Cbc0038I Pass   2: suminf.    0.27500 (1) obj. -73.6347 iterations 0
Cbc0038I Pass   3: suminf.    0.47566 (2) obj. -68.5923 iterations 3
Cbc0038I Pass   4: suminf.    0.90951 (2) obj. -68.5923 iterations 2
Cbc0038I Pass   5: suminf.    0.93739 (4) obj. -68.5923 iterations 6
Cbc0038I Pass   6: suminf.    0.74714 (3) obj. -68.5923 iterations 5
Cbc0038I Pass   7: suminf.    0.51012 (2) obj. -68.5923 iterations 6
Cbc0038I Pass   8: suminf.    0.26227 (3) obj. -68.5923 iterations 2
Cbc0038I Pass   9: suminf.    0.38413 (2) obj. -68.5923 iterations 7
Cbc0038I Pass  10: suminf.    0.23764 (1) obj. -68.5923 iterations 3
Cbc0038I Pass  11: suminf.    0.31309 (2) obj. -68.5923 iterations 3
Cbc0038I Pass  12: suminf.    1.75211 (4) obj. -68.5923 iterations 4
Cbc0038I Pass  13: suminf.    0.71529 (3) obj. -68.5923 iterations 2
Cbc0038I Pass  14: suminf.    0.54644 (3) obj. -68.5923 iterations 1
Cbc0038I Pass  15: suminf.    0.38413 (2) obj. -68.5923 iterations 11
Cbc0038I Pass  16: suminf.    0.23764 (1) obj. -68.5923 iterations 2
Cbc0038I Pass  17: suminf.    0.31309 (2) obj. -68.5923 iterations 3
Cbc0038I Pass  18: suminf.    1.88464 (6) obj. -68.5923 iterations 11
Cbc0038I Pass  19: suminf.    1.59086 (5) obj. -68.5923 iterations 6
Cbc0038I Pass  20: suminf.    0.42855 (3) obj. -68.5923 iterations 6
Cbc0038I Pass  21: suminf.    0.36982 (2) obj. -68.5923 iterations 2
Cbc0038I Pass  22: suminf.    0.46529 (2) obj. -68.5923 iterations 2
Cbc0038I Pass  23: suminf.    0.46529 (2) obj. -68.5923 iterations 0
Cbc0038I Pass  24: suminf.    0.75347 (2) obj. -68.5923 iterations 4
Cbc0038I Pass  25: suminf.    0.17500 (1) obj. -68.5923 iterations 1
Cbc0038I Pass  26: suminf.    0.62852 (2) obj. -68.5923 iterations 2
Cbc0038I Pass  27: suminf.    0.94746 (4) obj. -68.5923 iterations 10
Cbc0038I Pass  28: suminf.    0.78708 (3) obj. -68.5923 iterations 4
Cbc0038I Pass  29: suminf.    1.05483 (4) obj. -68.5923 iterations 3
Cbc0038I Pass  30: suminf.    0.84000 (3) obj. -68.5923 iterations 6
Cbc0038I Pass  31: suminf.    0.88726 (3) obj. -68.5923 iterations 1
Cbc0038I Rounding solution of -64.1647 is better than previous of -63.5934

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -77.5901
Cbc0038I Pass  31: suminf.    0.37359 (3) obj. -77.5901 iterations 3
Cbc0038I Pass  32: suminf.    0.73879 (2) obj. -77.5901 iterations 5
Cbc0038I Pass  33: suminf.    0.32103 (3) obj. -77.5901 iterations 2
Cbc0038I Pass  34: suminf.    0.94803 (3) obj. -77.5901 iterations 4
Cbc0038I Pass  35: suminf.    1.98439 (8) obj. -77.5901 iterations 15
Cbc0038I Pass  36: suminf.    1.98439 (8) obj. -77.5901 iterations 1
Cbc0038I Pass  37: suminf.    1.24974 (5) obj. -77.5901 iterations 9
Cbc0038I Pass  38: suminf.    1.24974 (5) obj. -77.5901 iterations 0
Cbc0038I Pass  39: suminf.    1.34891 (4) obj. -77.5901 iterations 3
Cbc0038I Pass  40: suminf.    1.03949 (4) obj. -77.5901 iterations 3
Cbc0038I Pass  41: suminf.    1.21205 (4) obj. -77.5901 iterations 6
Cbc0038I Pass  42: suminf.    0.57820 (3) obj. -77.5901 iterations 2
Cbc0038I Pass  43: suminf.    2.29643 (7) obj. -77.5901 iterations 8
Cbc0038I Pass  44: suminf.    2.11507 (6) obj. -77.5901 iterations 4
Cbc0038I Pass  45: suminf.    1.03105 (3) obj. -77.5901 iterations 6
Cbc0038I Pass  46: suminf.    1.22044 (4) obj. -77.5901 iterations 2
Cbc0038I Pass  47: suminf.    1.10613 (3) obj. -77.5901 iterations 1
Cbc0038I Pass  48: suminf.    1.03105 (3) obj. -77.5901 iterations 1
Cbc0038I Pass  49: suminf.    1.47127 (6) obj. -77.5901 iterations 16
Cbc0038I Pass  50: suminf.    1.34446 (6) obj. -77.5901 iterations 2
Cbc0038I Pass  51: suminf.    1.58971 (5) obj. -77.5901 iterations 7
Cbc0038I Pass  52: suminf.    0.80826 (3) obj. -77.5901 iterations 1
Cbc0038I Pass  53: suminf.    0.69710 (3) obj. -77.5901 iterations 2
Cbc0038I Pass  54: suminf.    1.34391 (4) obj. -77.5901 iterations 4
Cbc0038I Pass  55: suminf.    0.89606 (5) obj. -77.5901 iterations 2
Cbc0038I Pass  56: suminf.    0.89606 (5) obj. -77.5901 iterations 0
Cbc0038I Pass  57: suminf.    0.95367 (4) obj. -77.5901 iterations 4
Cbc0038I Pass  58: suminf.    0.92758 (3) obj. -77.5901 iterations 1
Cbc0038I Pass  59: suminf.    0.52436 (2) obj. -77.5901 iterations 2
Cbc0038I Pass  60: suminf.    0.53164 (2) obj. -77.5901 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -64.1647 - took 0.05 seconds
Cbc0012I Integer solution of -64.164716 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 25 rows 18 columns
Cbc0031I 16 added rows had average density of 24
Cbc0013I At root node, 16 cuts changed objective from -113.5812 to -86.525467 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1455 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 878 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.16471599999998, took 2656 iterations and 6 nodes (0.30 seconds)
Cbc0032I Strong branching done 86 times (956 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-15) rows, 59 (-7) columns and 571 (-152) elements
Clp1000I sum of infeasibilities 2.96808e-06 - average 5.60016e-08, 11 fixed columns
Coin0506I Presolve 42 (-11) rows, 47 (-12) columns and 366 (-205) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.7600385 - largest nonzero change 2.2125544e-05 ( 0.0016580886%) - largest zero change 2.9516439e-05
Clp0000I Optimal - objective value 123.94516
Clp0000I Optimal - objective value 123.94516
Coin0511I After Postsolve, objective 123.94516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 123.94516
Clp0000I Optimal - objective value 123.94516
Clp0000I Optimal - objective value 123.94516
Coin0511I After Postsolve, objective 123.94516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.9451562 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 59 columns (59 integer (59 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.392%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 7.75259
Cbc0038I Pass   1: suminf.    1.91182 (15) obj. -63.9142 iterations 13
Cbc0038I Pass   2: suminf.    1.91182 (15) obj. -63.9142 iterations 0
Cbc0038I Solution found of -37.3829
Cbc0038I Rounding solution of -47.6237 is better than previous of -37.3829

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -53.836
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.91182 (15) obj. -63.9142 iterations 0
Cbc0038I Pass   4: suminf.    1.91182 (15) obj. -63.9142 iterations 0
Cbc0038I Pass   5: suminf.    0.48724 (2) obj. -53.836 iterations 16
Cbc0038I Pass   6: suminf.    0.30750 (1) obj. -62.8226 iterations 2
Cbc0038I Pass   7: suminf.    0.44787 (1) obj. -53.836 iterations 1
Cbc0038I Pass   8: suminf.    0.78119 (4) obj. -53.836 iterations 15
Cbc0038I Pass   9: suminf.    0.72423 (4) obj. -57.0557 iterations 2
Cbc0038I Pass  10: suminf.    0.56762 (7) obj. -53.836 iterations 6
Cbc0038I Pass  11: suminf.    0.55720 (4) obj. -53.836 iterations 1
Cbc0038I Pass  12: suminf.    0.28506 (2) obj. -53.836 iterations 5
Cbc0038I Pass  13: suminf.    0.40910 (2) obj. -53.836 iterations 1
Cbc0038I Pass  14: suminf.    1.51939 (9) obj. -67.2803 iterations 11
Cbc0038I Pass  15: suminf.    1.20030 (8) obj. -65.3128 iterations 2
Cbc0038I Pass  16: suminf.    0.72034 (6) obj. -53.836 iterations 10
Cbc0038I Pass  17: suminf.    0.72034 (6) obj. -53.836 iterations 0
Cbc0038I Pass  18: suminf.    1.24620 (3) obj. -53.836 iterations 4
Cbc0038I Pass  19: suminf.    1.24443 (4) obj. -53.836 iterations 2
Cbc0038I Pass  20: suminf.    1.41546 (4) obj. -53.836 iterations 3
Cbc0038I Pass  21: suminf.    1.15257 (3) obj. -53.836 iterations 1
Cbc0038I Pass  22: suminf.    1.03000 (3) obj. -55.5519 iterations 1
Cbc0038I Pass  23: suminf.    1.41546 (4) obj. -53.836 iterations 3
Cbc0038I Pass  24: suminf.    2.00775 (7) obj. -53.836 iterations 18
Cbc0038I Pass  25: suminf.    2.00775 (7) obj. -53.836 iterations 2
Cbc0038I Pass  26: suminf.    1.73232 (4) obj. -53.836 iterations 10
Cbc0038I Pass  27: suminf.    1.51577 (4) obj. -53.836 iterations 2
Cbc0038I Pass  28: suminf.    1.15997 (5) obj. -53.836 iterations 2
Cbc0038I Pass  29: suminf.    1.37721 (4) obj. -53.836 iterations 3
Cbc0038I Pass  30: suminf.    0.96202 (3) obj. -53.836 iterations 2
Cbc0038I Pass  31: suminf.    1.27519 (3) obj. -57.2654 iterations 6
Cbc0038I Pass  32: suminf.    1.06810 (4) obj. -53.836 iterations 5
Cbc0038I Rounding solution of -57.9991 is better than previous of -47.6237

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 27 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -57.9991 to -59.0034 (0.03 seconds)
Cbc0038I Round again with cutoff of -69.152
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.31670 (16) obj. -69.152 iterations 1
Cbc0038I Pass  33: suminf.    2.31399 (17) obj. -69.152 iterations 2
Cbc0038I Pass  34: suminf.    0.93224 (6) obj. -69.152 iterations 14
Cbc0038I Pass  35: suminf.    0.93224 (6) obj. -69.152 iterations 0
Cbc0038I Pass  36: suminf.    0.70128 (2) obj. -71.9376 iterations 5
Cbc0038I Pass  37: suminf.    0.49962 (2) obj. -69.152 iterations 1
Cbc0038I Pass  38: suminf.    0.79719 (2) obj. -69.152 iterations 1
Cbc0038I Pass  39: suminf.    0.49962 (2) obj. -69.152 iterations 1
Cbc0038I Pass  40: suminf.    2.54314 (16) obj. -69.152 iterations 24
Cbc0038I Pass  41: suminf.    2.53382 (14) obj. -69.152 iterations 1
Cbc0038I Pass  42: suminf.    1.41890 (5) obj. -69.152 iterations 10
Cbc0038I Pass  43: suminf.    1.39977 (6) obj. -69.152 iterations 1
Cbc0038I Pass  44: suminf.    1.41890 (5) obj. -69.152 iterations 3
Cbc0038I Pass  45: suminf.    4.35181 (14) obj. -69.152 iterations 16
Cbc0038I Pass  46: suminf.    2.87885 (11) obj. -69.152 iterations 3
Cbc0038I Pass  47: suminf.    2.87885 (11) obj. -69.152 iterations 0
Cbc0038I Pass  48: suminf.    1.84669 (6) obj. -69.152 iterations 7
Cbc0038I Pass  49: suminf.    1.28312 (6) obj. -69.152 iterations 2
Cbc0038I Pass  50: suminf.    1.57892 (5) obj. -69.152 iterations 3
Cbc0038I Pass  51: suminf.    2.34914 (9) obj. -69.152 iterations 7
Cbc0038I Pass  52: suminf.    2.34914 (9) obj. -69.152 iterations 0
Cbc0038I Pass  53: suminf.    2.11593 (6) obj. -69.152 iterations 5
Cbc0038I Pass  54: suminf.    1.94020 (6) obj. -69.152 iterations 1
Cbc0038I Pass  55: suminf.    1.57892 (5) obj. -69.152 iterations 3
Cbc0038I Pass  56: suminf.    1.28312 (6) obj. -69.152 iterations 1
Cbc0038I Pass  57: suminf.    1.57892 (5) obj. -69.152 iterations 3
Cbc0038I Pass  58: suminf.    1.96045 (9) obj. -69.152 iterations 9
Cbc0038I Pass  59: suminf.    1.95041 (9) obj. -69.152 iterations 2
Cbc0038I Pass  60: suminf.    1.83461 (8) obj. -69.152 iterations 7
Cbc0038I Pass  61: suminf.    1.67561 (7) obj. -69.152 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 37 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -59.0034 to -64.1647 (0.06 seconds)
Cbc0038I Round again with cutoff of -81.3301
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.22354 (16) obj. -81.3301 iterations 0
Cbc0038I Pass  62: suminf.    3.22354 (16) obj. -81.3301 iterations 0
Cbc0038I Pass  63: suminf.    2.52420 (14) obj. -81.3301 iterations 18
Cbc0038I Pass  64: suminf.    2.28933 (12) obj. -81.3301 iterations 1
Cbc0038I Pass  65: suminf.    2.28933 (12) obj. -81.3301 iterations 1
Cbc0038I Pass  66: suminf.    1.97419 (8) obj. -81.3301 iterations 17
Cbc0038I Pass  67: suminf.    1.68457 (8) obj. -81.3301 iterations 8
Cbc0038I Pass  68: suminf.    2.42405 (8) obj. -81.3301 iterations 5
Cbc0038I Pass  69: suminf.    2.41473 (8) obj. -81.3301 iterations 1
Cbc0038I Pass  70: suminf.    2.47966 (8) obj. -81.3301 iterations 4
Cbc0038I Pass  71: suminf.    2.47966 (8) obj. -81.3301 iterations 3
Cbc0038I Pass  72: suminf.    2.41473 (8) obj. -81.3301 iterations 5
Cbc0038I Pass  73: suminf.    3.47449 (12) obj. -81.3301 iterations 16
Cbc0038I Pass  74: suminf.    2.34301 (11) obj. -81.3301 iterations 7
Cbc0038I Pass  75: suminf.    2.34106 (12) obj. -81.3301 iterations 1
Cbc0038I Pass  76: suminf.    2.45646 (9) obj. -81.3301 iterations 14
Cbc0038I Pass  77: suminf.    1.99712 (10) obj. -81.3301 iterations 5
Cbc0038I Pass  78: suminf.    1.92265 (10) obj. -81.3301 iterations 3
Cbc0038I Pass  79: suminf.    2.45646 (9) obj. -81.3301 iterations 10
Cbc0038I Pass  80: suminf.    1.71545 (9) obj. -81.3301 iterations 6
Cbc0038I Pass  81: suminf.    1.71533 (10) obj. -81.3301 iterations 1
Cbc0038I Pass  82: suminf.    2.45646 (9) obj. -81.3301 iterations 6
Cbc0038I Pass  83: suminf.    1.99712 (10) obj. -81.3301 iterations 5
Cbc0038I Pass  84: suminf.    1.92265 (10) obj. -81.3301 iterations 3
Cbc0038I Pass  85: suminf.    2.45646 (9) obj. -81.3301 iterations 10
Cbc0038I Pass  86: suminf.    1.71545 (9) obj. -81.3301 iterations 6
Cbc0038I Pass  87: suminf.    1.71533 (10) obj. -81.3301 iterations 1
Cbc0038I Pass  88: suminf.    2.45646 (9) obj. -81.3301 iterations 6
Cbc0038I Pass  89: suminf.    1.99712 (10) obj. -81.3301 iterations 5
Cbc0038I Pass  90: suminf.    1.92265 (10) obj. -81.3301 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -64.1647 - took 0.06 seconds
Cbc0012I Integer solution of -64.164716 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 53 rows 59 columns, reduced to 16 rows 20 columns
Cbc0031I 21 added rows had average density of 11.571429
Cbc0013I At root node, 21 cuts changed objective from -109.74581 to -71.263748 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3512 row cuts average 4.6 elements, 10 column cuts (13 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1165 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 204 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 70 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.755 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -64.164716 best solution, best possible -71.189505 (1.82 seconds)
Cbc0001I Search completed - best objective -64.16471599999998, took 2360 iterations and 2 nodes (1.85 seconds)
Cbc0032I Strong branching done 26 times (371 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.86

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 8.00452e-06 - average 1.38009e-07, 7 fixed columns
Coin0506I Presolve 44 (-14) rows, 26 (-7) columns and 132 (-42) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 3.980886 - largest nonzero change 0 ( 0%) - largest zero change 1.6217085e-05
Clp0000I Optimal - objective value 113.5812
Clp0000I Optimal - objective value 113.5812
Coin0511I After Postsolve, objective 113.5812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 113.5812
Clp0000I Optimal - objective value 113.5812
Clp0000I Optimal - objective value 113.5812
Coin0511I After Postsolve, objective 113.5812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.5812022 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.74887
Cbc0038I Pass   1: suminf.    0.27500 (1) obj. -73.6347 iterations 16
Cbc0038I Solution found of -47.001
Cbc0038I Relaxing continuous gives -47.001
Cbc0038I Rounding solution of -50.3869 is better than previous of -47.001

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -50.3869 to -63.5934 (0.02 seconds)
Cbc0038I Round again with cutoff of -68.5923
Cbc0038I Pass   2: suminf.    0.27500 (1) obj. -73.6347 iterations 0
Cbc0038I Pass   3: suminf.    0.47566 (2) obj. -68.5923 iterations 3
Cbc0038I Pass   4: suminf.    0.90951 (2) obj. -68.5923 iterations 2
Cbc0038I Pass   5: suminf.    0.93739 (4) obj. -68.5923 iterations 6
Cbc0038I Pass   6: suminf.    0.74714 (3) obj. -68.5923 iterations 5
Cbc0038I Pass   7: suminf.    0.51012 (2) obj. -68.5923 iterations 6
Cbc0038I Pass   8: suminf.    0.26227 (3) obj. -68.5923 iterations 2
Cbc0038I Pass   9: suminf.    0.38413 (2) obj. -68.5923 iterations 7
Cbc0038I Pass  10: suminf.    0.23764 (1) obj. -68.5923 iterations 3
Cbc0038I Pass  11: suminf.    0.31309 (2) obj. -68.5923 iterations 3
Cbc0038I Pass  12: suminf.    1.75211 (4) obj. -68.5923 iterations 4
Cbc0038I Pass  13: suminf.    0.71529 (3) obj. -68.5923 iterations 2
Cbc0038I Pass  14: suminf.    0.54644 (3) obj. -68.5923 iterations 1
Cbc0038I Pass  15: suminf.    0.38413 (2) obj. -68.5923 iterations 11
Cbc0038I Pass  16: suminf.    0.23764 (1) obj. -68.5923 iterations 2
Cbc0038I Pass  17: suminf.    0.31309 (2) obj. -68.5923 iterations 3
Cbc0038I Pass  18: suminf.    1.88464 (6) obj. -68.5923 iterations 11
Cbc0038I Pass  19: suminf.    1.59086 (5) obj. -68.5923 iterations 6
Cbc0038I Pass  20: suminf.    0.42855 (3) obj. -68.5923 iterations 6
Cbc0038I Pass  21: suminf.    0.36982 (2) obj. -68.5923 iterations 2
Cbc0038I Pass  22: suminf.    0.46529 (2) obj. -68.5923 iterations 2
Cbc0038I Pass  23: suminf.    0.46529 (2) obj. -68.5923 iterations 0
Cbc0038I Pass  24: suminf.    0.75347 (2) obj. -68.5923 iterations 4
Cbc0038I Pass  25: suminf.    0.17500 (1) obj. -68.5923 iterations 1
Cbc0038I Pass  26: suminf.    0.62852 (2) obj. -68.5923 iterations 2
Cbc0038I Pass  27: suminf.    0.94746 (4) obj. -68.5923 iterations 10
Cbc0038I Pass  28: suminf.    0.78708 (3) obj. -68.5923 iterations 4
Cbc0038I Pass  29: suminf.    1.05483 (4) obj. -68.5923 iterations 3
Cbc0038I Pass  30: suminf.    0.84000 (3) obj. -68.5923 iterations 6
Cbc0038I Pass  31: suminf.    0.88726 (3) obj. -68.5923 iterations 1
Cbc0038I Rounding solution of -64.1647 is better than previous of -63.5934

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -77.5901
Cbc0038I Pass  31: suminf.    0.37359 (3) obj. -77.5901 iterations 3
Cbc0038I Pass  32: suminf.    0.73879 (2) obj. -77.5901 iterations 5
Cbc0038I Pass  33: suminf.    0.32103 (3) obj. -77.5901 iterations 2
Cbc0038I Pass  34: suminf.    0.94803 (3) obj. -77.5901 iterations 4
Cbc0038I Pass  35: suminf.    1.98439 (8) obj. -77.5901 iterations 15
Cbc0038I Pass  36: suminf.    1.98439 (8) obj. -77.5901 iterations 1
Cbc0038I Pass  37: suminf.    1.24974 (5) obj. -77.5901 iterations 9
Cbc0038I Pass  38: suminf.    1.24974 (5) obj. -77.5901 iterations 0
Cbc0038I Pass  39: suminf.    1.34891 (4) obj. -77.5901 iterations 3
Cbc0038I Pass  40: suminf.    1.03949 (4) obj. -77.5901 iterations 3
Cbc0038I Pass  41: suminf.    1.21205 (4) obj. -77.5901 iterations 6
Cbc0038I Pass  42: suminf.    0.57820 (3) obj. -77.5901 iterations 2
Cbc0038I Pass  43: suminf.    2.29643 (7) obj. -77.5901 iterations 8
Cbc0038I Pass  44: suminf.    2.11507 (6) obj. -77.5901 iterations 4
Cbc0038I Pass  45: suminf.    1.03105 (3) obj. -77.5901 iterations 6
Cbc0038I Pass  46: suminf.    1.22044 (4) obj. -77.5901 iterations 2
Cbc0038I Pass  47: suminf.    1.10613 (3) obj. -77.5901 iterations 1
Cbc0038I Pass  48: suminf.    1.03105 (3) obj. -77.5901 iterations 1
Cbc0038I Pass  49: suminf.    1.47127 (6) obj. -77.5901 iterations 16
Cbc0038I Pass  50: suminf.    1.34446 (6) obj. -77.5901 iterations 2
Cbc0038I Pass  51: suminf.    1.58971 (5) obj. -77.5901 iterations 7
Cbc0038I Pass  52: suminf.    0.80826 (3) obj. -77.5901 iterations 1
Cbc0038I Pass  53: suminf.    0.69710 (3) obj. -77.5901 iterations 2
Cbc0038I Pass  54: suminf.    1.34391 (4) obj. -77.5901 iterations 4
Cbc0038I Pass  55: suminf.    0.89606 (5) obj. -77.5901 iterations 2
Cbc0038I Pass  56: suminf.    0.89606 (5) obj. -77.5901 iterations 0
Cbc0038I Pass  57: suminf.    0.95367 (4) obj. -77.5901 iterations 4
Cbc0038I Pass  58: suminf.    0.92758 (3) obj. -77.5901 iterations 1
Cbc0038I Pass  59: suminf.    0.52436 (2) obj. -77.5901 iterations 2
Cbc0038I Pass  60: suminf.    0.53164 (2) obj. -77.5901 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -64.1647 - took 0.04 seconds
Cbc0012I Integer solution of -64.164716 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 25 rows 18 columns
Cbc0031I 16 added rows had average density of 24
Cbc0013I At root node, 16 cuts changed objective from -113.5812 to -86.525467 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1455 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 878 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.16471599999998, took 2656 iterations and 6 nodes (0.26 seconds)
Cbc0032I Strong branching done 86 times (956 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-16) rows, 59 (-8) columns and 571 (-153) elements
Clp1000I sum of infeasibilities 2.96808e-06 - average 5.60016e-08, 11 fixed columns
Coin0506I Presolve 42 (-11) rows, 47 (-12) columns and 366 (-205) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.7600385 - largest nonzero change 2.2125544e-05 ( 0.0016580886%) - largest zero change 2.9516439e-05
Clp0000I Optimal - objective value 123.94516
Clp0000I Optimal - objective value 123.94516
Coin0511I After Postsolve, objective 123.94516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 123.94516
Clp0000I Optimal - objective value 123.94516
Clp0000I Optimal - objective value 123.94516
Coin0511I After Postsolve, objective 123.94516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.9451562 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 59 columns (59 integer (59 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.392%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 7.75259
Cbc0038I Pass   1: suminf.    1.91182 (15) obj. -63.9142 iterations 13
Cbc0038I Pass   2: suminf.    1.91182 (15) obj. -63.9142 iterations 0
Cbc0038I Solution found of -37.3829
Cbc0038I Rounding solution of -47.6237 is better than previous of -37.3829

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -53.836
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.91182 (15) obj. -63.9142 iterations 0
Cbc0038I Pass   4: suminf.    1.91182 (15) obj. -63.9142 iterations 0
Cbc0038I Pass   5: suminf.    0.48724 (2) obj. -53.836 iterations 16
Cbc0038I Pass   6: suminf.    0.30750 (1) obj. -62.8226 iterations 2
Cbc0038I Pass   7: suminf.    0.44787 (1) obj. -53.836 iterations 1
Cbc0038I Pass   8: suminf.    0.78119 (4) obj. -53.836 iterations 15
Cbc0038I Pass   9: suminf.    0.72423 (4) obj. -57.0557 iterations 2
Cbc0038I Pass  10: suminf.    0.56762 (7) obj. -53.836 iterations 6
Cbc0038I Pass  11: suminf.    0.55720 (4) obj. -53.836 iterations 1
Cbc0038I Pass  12: suminf.    0.28506 (2) obj. -53.836 iterations 5
Cbc0038I Pass  13: suminf.    0.40910 (2) obj. -53.836 iterations 1
Cbc0038I Pass  14: suminf.    1.51939 (9) obj. -67.2803 iterations 11
Cbc0038I Pass  15: suminf.    1.20030 (8) obj. -65.3128 iterations 2
Cbc0038I Pass  16: suminf.    0.72034 (6) obj. -53.836 iterations 10
Cbc0038I Pass  17: suminf.    0.72034 (6) obj. -53.836 iterations 0
Cbc0038I Pass  18: suminf.    1.24620 (3) obj. -53.836 iterations 4
Cbc0038I Pass  19: suminf.    1.24443 (4) obj. -53.836 iterations 2
Cbc0038I Pass  20: suminf.    1.41546 (4) obj. -53.836 iterations 3
Cbc0038I Pass  21: suminf.    1.15257 (3) obj. -53.836 iterations 1
Cbc0038I Pass  22: suminf.    1.03000 (3) obj. -55.5519 iterations 1
Cbc0038I Pass  23: suminf.    1.41546 (4) obj. -53.836 iterations 3
Cbc0038I Pass  24: suminf.    2.00775 (7) obj. -53.836 iterations 18
Cbc0038I Pass  25: suminf.    2.00775 (7) obj. -53.836 iterations 2
Cbc0038I Pass  26: suminf.    1.73232 (4) obj. -53.836 iterations 10
Cbc0038I Pass  27: suminf.    1.51577 (4) obj. -53.836 iterations 2
Cbc0038I Pass  28: suminf.    1.15997 (5) obj. -53.836 iterations 2
Cbc0038I Pass  29: suminf.    1.37721 (4) obj. -53.836 iterations 3
Cbc0038I Pass  30: suminf.    0.96202 (3) obj. -53.836 iterations 2
Cbc0038I Pass  31: suminf.    1.27519 (3) obj. -57.2654 iterations 6
Cbc0038I Pass  32: suminf.    1.06810 (4) obj. -53.836 iterations 5
Cbc0038I Rounding solution of -57.9991 is better than previous of -47.6237

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 27 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -57.9991 to -59.0034 (0.04 seconds)
Cbc0038I Round again with cutoff of -69.152
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.31670 (16) obj. -69.152 iterations 1
Cbc0038I Pass  33: suminf.    2.31399 (17) obj. -69.152 iterations 2
Cbc0038I Pass  34: suminf.    0.93224 (6) obj. -69.152 iterations 14
Cbc0038I Pass  35: suminf.    0.93224 (6) obj. -69.152 iterations 0
Cbc0038I Pass  36: suminf.    0.70128 (2) obj. -71.9376 iterations 5
Cbc0038I Pass  37: suminf.    0.49962 (2) obj. -69.152 iterations 1
Cbc0038I Pass  38: suminf.    0.79719 (2) obj. -69.152 iterations 1
Cbc0038I Pass  39: suminf.    0.49962 (2) obj. -69.152 iterations 1
Cbc0038I Pass  40: suminf.    2.54314 (16) obj. -69.152 iterations 24
Cbc0038I Pass  41: suminf.    2.53382 (14) obj. -69.152 iterations 1
Cbc0038I Pass  42: suminf.    1.41890 (5) obj. -69.152 iterations 10
Cbc0038I Pass  43: suminf.    1.39977 (6) obj. -69.152 iterations 1
Cbc0038I Pass  44: suminf.    1.41890 (5) obj. -69.152 iterations 3
Cbc0038I Pass  45: suminf.    4.35181 (14) obj. -69.152 iterations 16
Cbc0038I Pass  46: suminf.    2.87885 (11) obj. -69.152 iterations 3
Cbc0038I Pass  47: suminf.    2.87885 (11) obj. -69.152 iterations 0
Cbc0038I Pass  48: suminf.    1.84669 (6) obj. -69.152 iterations 7
Cbc0038I Pass  49: suminf.    1.28312 (6) obj. -69.152 iterations 2
Cbc0038I Pass  50: suminf.    1.57892 (5) obj. -69.152 iterations 3
Cbc0038I Pass  51: suminf.    2.34914 (9) obj. -69.152 iterations 7
Cbc0038I Pass  52: suminf.    2.34914 (9) obj. -69.152 iterations 0
Cbc0038I Pass  53: suminf.    2.11593 (6) obj. -69.152 iterations 5
Cbc0038I Pass  54: suminf.    1.94020 (6) obj. -69.152 iterations 1
Cbc0038I Pass  55: suminf.    1.57892 (5) obj. -69.152 iterations 3
Cbc0038I Pass  56: suminf.    1.28312 (6) obj. -69.152 iterations 1
Cbc0038I Pass  57: suminf.    1.57892 (5) obj. -69.152 iterations 3
Cbc0038I Pass  58: suminf.    1.96045 (9) obj. -69.152 iterations 9
Cbc0038I Pass  59: suminf.    1.95041 (9) obj. -69.152 iterations 2
Cbc0038I Pass  60: suminf.    1.83461 (8) obj. -69.152 iterations 7
Cbc0038I Pass  61: suminf.    1.67561 (7) obj. -69.152 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 37 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -59.0034 to -64.1647 (0.07 seconds)
Cbc0038I Round again with cutoff of -81.3301
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.22354 (16) obj. -81.3301 iterations 0
Cbc0038I Pass  62: suminf.    3.22354 (16) obj. -81.3301 iterations 0
Cbc0038I Pass  63: suminf.    2.52420 (14) obj. -81.3301 iterations 18
Cbc0038I Pass  64: suminf.    2.28933 (12) obj. -81.3301 iterations 1
Cbc0038I Pass  65: suminf.    2.28933 (12) obj. -81.3301 iterations 1
Cbc0038I Pass  66: suminf.    1.97419 (8) obj. -81.3301 iterations 17
Cbc0038I Pass  67: suminf.    1.68457 (8) obj. -81.3301 iterations 8
Cbc0038I Pass  68: suminf.    2.42405 (8) obj. -81.3301 iterations 5
Cbc0038I Pass  69: suminf.    2.41473 (8) obj. -81.3301 iterations 1
Cbc0038I Pass  70: suminf.    2.47966 (8) obj. -81.3301 iterations 4
Cbc0038I Pass  71: suminf.    2.47966 (8) obj. -81.3301 iterations 3
Cbc0038I Pass  72: suminf.    2.41473 (8) obj. -81.3301 iterations 5
Cbc0038I Pass  73: suminf.    3.47449 (12) obj. -81.3301 iterations 16
Cbc0038I Pass  74: suminf.    2.34301 (11) obj. -81.3301 iterations 7
Cbc0038I Pass  75: suminf.    2.34106 (12) obj. -81.3301 iterations 1
Cbc0038I Pass  76: suminf.    2.45646 (9) obj. -81.3301 iterations 14
Cbc0038I Pass  77: suminf.    1.99712 (10) obj. -81.3301 iterations 5
Cbc0038I Pass  78: suminf.    1.92265 (10) obj. -81.3301 iterations 3
Cbc0038I Pass  79: suminf.    2.45646 (9) obj. -81.3301 iterations 10
Cbc0038I Pass  80: suminf.    1.71545 (9) obj. -81.3301 iterations 6
Cbc0038I Pass  81: suminf.    1.71533 (10) obj. -81.3301 iterations 1
Cbc0038I Pass  82: suminf.    2.45646 (9) obj. -81.3301 iterations 6
Cbc0038I Pass  83: suminf.    1.99712 (10) obj. -81.3301 iterations 5
Cbc0038I Pass  84: suminf.    1.92265 (10) obj. -81.3301 iterations 3
Cbc0038I Pass  85: suminf.    2.45646 (9) obj. -81.3301 iterations 10
Cbc0038I Pass  86: suminf.    1.71545 (9) obj. -81.3301 iterations 6
Cbc0038I Pass  87: suminf.    1.71533 (10) obj. -81.3301 iterations 1
Cbc0038I Pass  88: suminf.    2.45646 (9) obj. -81.3301 iterations 6
Cbc0038I Pass  89: suminf.    1.99712 (10) obj. -81.3301 iterations 5
Cbc0038I Pass  90: suminf.    1.92265 (10) obj. -81.3301 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -64.1647 - took 0.07 seconds
Cbc0012I Integer solution of -64.164716 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 53 rows 59 columns, reduced to 16 rows 20 columns
Cbc0031I 21 added rows had average density of 11.571429
Cbc0013I At root node, 21 cuts changed objective from -109.74581 to -71.263748 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3512 row cuts average 4.6 elements, 10 column cuts (13 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1165 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 204 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 70 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.773 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -64.164716 best solution, best possible -71.189505 (1.78 seconds)
Cbc0001I Search completed - best objective -64.16471599999998, took 2360 iterations and 2 nodes (1.82 seconds)
Cbc0032I Strong branching done 26 times (371 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       1.83

