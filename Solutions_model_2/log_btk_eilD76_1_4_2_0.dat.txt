Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 74 (-4) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 7.64077e-05 - average 5.96935e-07, 9 fixed columns
Coin0506I Presolve 113 (-15) rows, 65 (-9) columns and 348 (-48) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 0.33427539 - largest nonzero change 0 ( 0%) - largest zero change 2.8202342e-05
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Coin0511I After Postsolve, objective 39.011157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Coin0511I After Postsolve, objective 39.011157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.01115675 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 74 columns (73 integer (73 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 12.4034
Cbc0038I Solution found of 4.29018
Cbc0038I Relaxing continuous gives -7.56314
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -7.56314 to -7.98871 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.091
Cbc0038I Pass   1: suminf.    1.20723 (40) obj. -11.091 iterations 23
Cbc0038I Pass   2: suminf.    1.18947 (7) obj. -11.091 iterations 35
Cbc0038I Pass   3: suminf.    0.80625 (6) obj. -11.091 iterations 3
Cbc0038I Pass   4: suminf.    1.82079 (5) obj. -11.091 iterations 15
Cbc0038I Pass   5: suminf.    1.47819 (6) obj. -11.091 iterations 2
Cbc0038I Pass   6: suminf.    1.37942 (5) obj. -11.091 iterations 1
Cbc0038I Pass   7: suminf.    1.42812 (4) obj. -11.091 iterations 7
Cbc0038I Pass   8: suminf.    1.42812 (4) obj. -11.091 iterations 0
Cbc0038I Pass   9: suminf.    1.60891 (4) obj. -11.091 iterations 3
Cbc0038I Pass  10: suminf.    1.60891 (4) obj. -11.091 iterations 0
Cbc0038I Pass  11: suminf.    1.71370 (4) obj. -11.091 iterations 2
Cbc0038I Pass  12: suminf.    1.71370 (4) obj. -11.091 iterations 0
Cbc0038I Pass  13: suminf.    2.33551 (9) obj. -11.091 iterations 16
Cbc0038I Pass  14: suminf.    1.36199 (5) obj. -11.091 iterations 17
Cbc0038I Pass  15: suminf.    1.25906 (5) obj. -11.091 iterations 8
Cbc0038I Pass  16: suminf.    1.12583 (4) obj. -11.091 iterations 1
Cbc0038I Pass  17: suminf.    1.37082 (4) obj. -11.091 iterations 3
Cbc0038I Pass  18: suminf.    1.00468 (3) obj. -11.091 iterations 1
Cbc0038I Pass  19: suminf.    0.94724 (3) obj. -11.091 iterations 1
Cbc0038I Pass  20: suminf.    1.46296 (5) obj. -11.091 iterations 4
Cbc0038I Pass  21: suminf.    1.27181 (4) obj. -11.091 iterations 1
Cbc0038I Pass  22: suminf.    1.27181 (4) obj. -11.091 iterations 0
Cbc0038I Pass  23: suminf.    1.73200 (6) obj. -11.091 iterations 3
Cbc0038I Pass  24: suminf.    1.73200 (6) obj. -11.091 iterations 0
Cbc0038I Pass  25: suminf.    2.06269 (5) obj. -11.091 iterations 4
Cbc0038I Pass  26: suminf.    1.86610 (6) obj. -11.091 iterations 2
Cbc0038I Pass  27: suminf.    1.86610 (6) obj. -11.091 iterations 0
Cbc0038I Pass  28: suminf.    2.06670 (5) obj. -11.091 iterations 4
Cbc0038I Pass  29: suminf.    1.73200 (6) obj. -11.091 iterations 2
Cbc0038I Pass  30: suminf.    1.73200 (6) obj. -11.091 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 95 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.98871 - took 0.10 seconds
Cbc0012I Integer solution of -7.988714 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 76 rows 44 columns
Cbc0031I 22 added rows had average density of 61.181818
Cbc0013I At root node, 22 cuts changed objective from -39.011157 to -30.806131 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11254 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1903 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.988714 best solution, best possible -30.806131 (0.86 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 24 rows 22 columns
Cbc0016I Integer solution of -8.004582 found by strong branching after 8348 iterations and 49 nodes (1.09 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 69 rows 42 columns
Cbc0038I Full problem 128 rows 74 columns, reduced to 29 rows 23 columns
Cbc0001I Search completed - best objective -8.004581999999992, took 11828 iterations and 314 nodes (1.42 seconds)
Cbc0032I Strong branching done 1612 times (21450 iterations), fathomed 38 nodes and fixed 66 variables
Cbc0035I Maximum depth 44, 895 variables fixed on reduced cost
Total time (CPU seconds):       1.37   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-59) rows, 113 (-39) columns and 1856 (-1447) elements
Clp1000I sum of infeasibilities 9.64846e-08 - average 1.01563e-09, 55 fixed columns
Coin0506I Presolve 47 (-48) rows, 58 (-55) columns and 204 (-1652) elements
Clp0006I 0  Obj -9.0842995 Dual inf 77.363876 (58)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.33078286 - largest nonzero change 2.9738336e-05 ( 0.0025539644%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -8.6394566
Clp0000I Optimal - objective value -8.6394566
Coin0511I After Postsolve, objective -8.6394566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -8.6394566 Dual inf 184.45486 (41)
Clp0014I Perturbing problem by 0.001% of 1.795405 - largest nonzero change 2.7083476e-05 ( 0.0016580886%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 52.639899
Clp0000I Optimal - objective value 52.639899
Clp0000I Optimal - objective value 52.639899
Coin0511I After Postsolve, objective 52.639899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.63989882 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 113 columns (113 integer (113 of which binary)) and 1874 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.752%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.76213
Cbc0038I Pass   1: suminf.    3.25790 (25) obj. -26.0026 iterations 18
Cbc0038I Pass   2: suminf.    3.25790 (25) obj. -26.0026 iterations 1
Cbc0038I Pass   3: suminf.    1.34025 (12) obj. -13.2131 iterations 13
Cbc0038I Pass   4: suminf.    0.08333 (1) obj. 1.85707 iterations 11
Cbc0038I Solution found of 2.77374
Cbc0038I Rounding solution of -3.42218 is better than previous of 2.77374

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -3.42218 to -6.33588 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.38696
Cbc0038I Pass   5: suminf.    3.25790 (25) obj. -26.0026 iterations 0
Cbc0038I Pass   6: suminf.    3.25790 (25) obj. -26.0026 iterations 1
Cbc0038I Pass   7: suminf.    1.74110 (15) obj. -15.8122 iterations 10
Cbc0038I Pass   8: suminf.    0.21326 (2) obj. -9.38696 iterations 20
Cbc0038I Pass   9: suminf.    0.21326 (2) obj. -9.38696 iterations 1
Cbc0038I Pass  10: suminf.    0.32990 (2) obj. -9.38696 iterations 4
Cbc0038I Pass  11: suminf.    3.12739 (15) obj. -9.38696 iterations 25
Cbc0038I Pass  12: suminf.    2.86809 (15) obj. -9.38696 iterations 5
Cbc0038I Pass  13: suminf.    0.87209 (4) obj. -9.38696 iterations 24
Cbc0038I Pass  14: suminf.    0.69302 (3) obj. -9.75168 iterations 2
Cbc0038I Pass  15: suminf.    0.63497 (3) obj. -9.38696 iterations 1
Cbc0038I Pass  16: suminf.    1.31015 (5) obj. -9.38696 iterations 6
Cbc0038I Pass  17: suminf.    1.27590 (4) obj. -11.0701 iterations 2
Cbc0038I Pass  18: suminf.    0.42428 (2) obj. -9.38696 iterations 17
Cbc0038I Pass  19: suminf.    0.22718 (2) obj. -9.38696 iterations 1
Cbc0038I Pass  20: suminf.    0.93434 (3) obj. -9.38696 iterations 7
Cbc0038I Pass  21: suminf.    0.93434 (3) obj. -9.38696 iterations 1
Cbc0038I Pass  22: suminf.    0.96818 (3) obj. -9.38696 iterations 10
Cbc0038I Pass  23: suminf.    0.26781 (2) obj. -9.64222 iterations 2
Cbc0038I Pass  24: suminf.    0.22718 (2) obj. -9.38696 iterations 1
Cbc0038I Pass  25: suminf.    0.93434 (3) obj. -9.38696 iterations 7
Cbc0038I Pass  26: suminf.    0.93434 (3) obj. -9.38696 iterations 1
Cbc0038I Pass  27: suminf.    0.96818 (3) obj. -9.38696 iterations 10
Cbc0038I Pass  28: suminf.    0.26781 (2) obj. -9.64222 iterations 2
Cbc0038I Pass  29: suminf.    0.22718 (2) obj. -9.38696 iterations 1
Cbc0038I Pass  30: suminf.    0.93434 (3) obj. -9.38696 iterations 7
Cbc0038I Pass  31: suminf.    0.93434 (3) obj. -9.38696 iterations 1
Cbc0038I Pass  32: suminf.    0.96818 (3) obj. -9.38696 iterations 10
Cbc0038I Pass  33: suminf.    0.26781 (2) obj. -9.64222 iterations 2
Cbc0038I Pass  34: suminf.    0.22718 (2) obj. -9.38696 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -6.33588 to -6.56785 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.8787
Cbc0038I Pass  34: suminf.    3.25790 (25) obj. -26.0026 iterations 0
Cbc0038I Pass  35: suminf.    3.25790 (25) obj. -26.0026 iterations 1
Cbc0038I Pass  36: suminf.    1.02342 (9) obj. -14.8787 iterations 18
Cbc0038I Pass  37: suminf.    0.99847 (8) obj. -15.0619 iterations 1
Cbc0038I Pass  38: suminf.    1.20776 (8) obj. -14.8787 iterations 22
Cbc0038I Pass  39: suminf.    0.91749 (9) obj. -14.8787 iterations 5
Cbc0038I Pass  40: suminf.    2.13003 (7) obj. -14.8787 iterations 12
Cbc0038I Pass  41: suminf.    2.13003 (7) obj. -14.8787 iterations 0
Cbc0038I Pass  42: suminf.    1.48652 (6) obj. -14.8787 iterations 11
Cbc0038I Pass  43: suminf.    1.48652 (6) obj. -14.8787 iterations 2
Cbc0038I Pass  44: suminf.    1.70492 (6) obj. -14.8787 iterations 7
Cbc0038I Pass  45: suminf.    1.69720 (6) obj. -14.8941 iterations 4
Cbc0038I Pass  46: suminf.    1.33537 (6) obj. -14.8787 iterations 12
Cbc0038I Pass  47: suminf.    1.33537 (6) obj. -14.8787 iterations 2
Cbc0038I Pass  48: suminf.    1.70492 (6) obj. -14.8787 iterations 7
Cbc0038I Pass  49: suminf.    3.99691 (14) obj. -14.8787 iterations 29
Cbc0038I Pass  50: suminf.    2.81123 (11) obj. -16.0466 iterations 13
Cbc0038I Pass  51: suminf.    2.47511 (8) obj. -14.8787 iterations 12
Cbc0038I Pass  52: suminf.    1.88818 (6) obj. -15.5075 iterations 5
Cbc0038I Pass  53: suminf.    1.46906 (7) obj. -14.8787 iterations 11
Cbc0038I Pass  54: suminf.    1.46906 (7) obj. -14.8787 iterations 2
Cbc0038I Pass  55: suminf.    2.50680 (7) obj. -14.8787 iterations 7
Cbc0038I Pass  56: suminf.    1.99299 (6) obj. -14.8787 iterations 4
Cbc0038I Pass  57: suminf.    1.88818 (6) obj. -15.5075 iterations 2
Cbc0038I Pass  58: suminf.    1.46906 (7) obj. -14.8787 iterations 12
Cbc0038I Pass  59: suminf.    1.46906 (7) obj. -14.8787 iterations 2
Cbc0038I Pass  60: suminf.    2.50680 (7) obj. -14.8787 iterations 7
Cbc0038I Pass  61: suminf.    1.99299 (6) obj. -14.8787 iterations 3
Cbc0038I Pass  62: suminf.    1.88818 (6) obj. -15.5075 iterations 2
Cbc0038I Pass  63: suminf.    1.46906 (7) obj. -14.8787 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -6.56785 - took 0.04 seconds
Cbc0012I Integer solution of -6.567846 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 11 rows 14 columns
Cbc0031I 48 added rows had average density of 49.166667
Cbc0013I At root node, 48 cuts changed objective from -36.845716 to -15.509155 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12464 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1541 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 406 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1494 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 434 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.664 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.567846 best solution, best possible -15.509155 (2.70 seconds)
Cbc0012I Integer solution of -7.660442 found by rounding after 5542 iterations and 4 nodes (2.97 seconds)
Cbc0012I Integer solution of -7.966242 found by rounding after 5610 iterations and 5 nodes (2.98 seconds)
Cbc0016I Integer solution of -7.988712 found by strong branching after 5633 iterations and 7 nodes (2.99 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 14 rows 24 columns
Cbc0010I After 67 nodes, 11 on tree, -7.988712 best solution, best possible -15.509155 (3.40 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 35 rows 48 columns
Cbc0010I After 130 nodes, 5 on tree, -7.988712 best solution, best possible -15.509155 (4.11 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 45 rows 55 columns
Cbc0010I After 211 nodes, 10 on tree, -7.988712 best solution, best possible -15.509155 (4.81 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 37 rows 49 columns
Cbc0010I After 300 nodes, 24 on tree, -7.988712 best solution, best possible -15.509155 (5.53 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 37 rows 48 columns
Cbc0010I After 448 nodes, 7 on tree, -7.988712 best solution, best possible -15.509155 (6.23 seconds)
Cbc0016I Integer solution of -7.990352 found by strong branching after 17217 iterations and 457 nodes (6.25 seconds)
Cbc0012I Integer solution of -8.004582 found by rounding after 17452 iterations and 479 nodes (6.31 seconds)
Cbc0001I Search completed - best objective -8.004581999999992, took 21779 iterations and 999 nodes (6.48 seconds)
Cbc0032I Strong branching done 4720 times (54009 iterations), fathomed 85 nodes and fixed 146 variables
Cbc0041I Maximum depth 22, 2103 variables fixed on reduced cost (complete fathoming 13 times, 449 nodes taking 3429 iterations)
Total time (CPU seconds):       5.53   (Wallclock seconds):       6.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 74 (-4) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 7.64077e-05 - average 5.96935e-07, 9 fixed columns
Coin0506I Presolve 113 (-15) rows, 65 (-9) columns and 348 (-48) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 0.33427539 - largest nonzero change 0 ( 0%) - largest zero change 2.8202342e-05
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Coin0511I After Postsolve, objective 39.011157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Clp0000I Optimal - objective value 39.011157
Coin0511I After Postsolve, objective 39.011157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.01115675 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 74 columns (73 integer (73 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.143%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 12.4034
Cbc0038I Solution found of 4.29018
Cbc0038I Relaxing continuous gives -7.56314
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -7.56314 to -7.98871 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.091
Cbc0038I Pass   1: suminf.    1.20723 (40) obj. -11.091 iterations 23
Cbc0038I Pass   2: suminf.    1.18947 (7) obj. -11.091 iterations 35
Cbc0038I Pass   3: suminf.    0.80625 (6) obj. -11.091 iterations 3
Cbc0038I Pass   4: suminf.    1.82079 (5) obj. -11.091 iterations 15
Cbc0038I Pass   5: suminf.    1.47819 (6) obj. -11.091 iterations 2
Cbc0038I Pass   6: suminf.    1.37942 (5) obj. -11.091 iterations 1
Cbc0038I Pass   7: suminf.    1.42812 (4) obj. -11.091 iterations 7
Cbc0038I Pass   8: suminf.    1.42812 (4) obj. -11.091 iterations 0
Cbc0038I Pass   9: suminf.    1.60891 (4) obj. -11.091 iterations 3
Cbc0038I Pass  10: suminf.    1.60891 (4) obj. -11.091 iterations 0
Cbc0038I Pass  11: suminf.    1.71370 (4) obj. -11.091 iterations 2
Cbc0038I Pass  12: suminf.    1.71370 (4) obj. -11.091 iterations 0
Cbc0038I Pass  13: suminf.    2.33551 (9) obj. -11.091 iterations 16
Cbc0038I Pass  14: suminf.    1.36199 (5) obj. -11.091 iterations 17
Cbc0038I Pass  15: suminf.    1.25906 (5) obj. -11.091 iterations 8
Cbc0038I Pass  16: suminf.    1.12583 (4) obj. -11.091 iterations 1
Cbc0038I Pass  17: suminf.    1.37082 (4) obj. -11.091 iterations 3
Cbc0038I Pass  18: suminf.    1.00468 (3) obj. -11.091 iterations 1
Cbc0038I Pass  19: suminf.    0.94724 (3) obj. -11.091 iterations 1
Cbc0038I Pass  20: suminf.    1.46296 (5) obj. -11.091 iterations 4
Cbc0038I Pass  21: suminf.    1.27181 (4) obj. -11.091 iterations 1
Cbc0038I Pass  22: suminf.    1.27181 (4) obj. -11.091 iterations 0
Cbc0038I Pass  23: suminf.    1.73200 (6) obj. -11.091 iterations 3
Cbc0038I Pass  24: suminf.    1.73200 (6) obj. -11.091 iterations 0
Cbc0038I Pass  25: suminf.    2.06269 (5) obj. -11.091 iterations 4
Cbc0038I Pass  26: suminf.    1.86610 (6) obj. -11.091 iterations 2
Cbc0038I Pass  27: suminf.    1.86610 (6) obj. -11.091 iterations 0
Cbc0038I Pass  28: suminf.    2.06670 (5) obj. -11.091 iterations 4
Cbc0038I Pass  29: suminf.    1.73200 (6) obj. -11.091 iterations 2
Cbc0038I Pass  30: suminf.    1.73200 (6) obj. -11.091 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 74 columns, reduced to 95 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -7.98871 - took 0.10 seconds
Cbc0012I Integer solution of -7.988714 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 76 rows 44 columns
Cbc0031I 22 added rows had average density of 61.181818
Cbc0013I At root node, 22 cuts changed objective from -39.011157 to -30.806131 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11254 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1903 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.988714 best solution, best possible -30.806131 (0.84 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 24 rows 22 columns
Cbc0016I Integer solution of -8.004582 found by strong branching after 8348 iterations and 49 nodes (1.06 seconds)
Cbc0038I Full problem 128 rows 74 columns, reduced to 69 rows 42 columns
Cbc0038I Full problem 128 rows 74 columns, reduced to 29 rows 23 columns
Cbc0001I Search completed - best objective -8.004581999999992, took 11828 iterations and 314 nodes (1.37 seconds)
Cbc0032I Strong branching done 1612 times (21450 iterations), fathomed 38 nodes and fixed 66 variables
Cbc0035I Maximum depth 44, 895 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 113 (-40) columns and 1856 (-1448) elements
Clp1000I sum of infeasibilities 9.64846e-08 - average 1.01563e-09, 55 fixed columns
Coin0506I Presolve 47 (-48) rows, 58 (-55) columns and 204 (-1652) elements
Clp0006I 0  Obj -9.0842995 Dual inf 77.363876 (58)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.33078286 - largest nonzero change 2.9738336e-05 ( 0.0025539644%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -8.6394566
Clp0000I Optimal - objective value -8.6394566
Coin0511I After Postsolve, objective -8.6394566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -8.6394566 Dual inf 184.45486 (41)
Clp0014I Perturbing problem by 0.001% of 1.795405 - largest nonzero change 2.7083476e-05 ( 0.0016580886%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 52.639899
Clp0000I Optimal - objective value 52.639899
Clp0000I Optimal - objective value 52.639899
Coin0511I After Postsolve, objective 52.639899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.63989882 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 113 columns (113 integer (113 of which binary)) and 1874 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.752%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.76213
Cbc0038I Pass   1: suminf.    3.25790 (25) obj. -26.0026 iterations 18
Cbc0038I Pass   2: suminf.    3.25790 (25) obj. -26.0026 iterations 1
Cbc0038I Pass   3: suminf.    1.34025 (12) obj. -13.2131 iterations 13
Cbc0038I Pass   4: suminf.    0.08333 (1) obj. 1.85707 iterations 11
Cbc0038I Solution found of 2.77374
Cbc0038I Rounding solution of -3.42218 is better than previous of 2.77374

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -3.42218 to -6.33588 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.38696
Cbc0038I Pass   5: suminf.    3.25790 (25) obj. -26.0026 iterations 0
Cbc0038I Pass   6: suminf.    3.25790 (25) obj. -26.0026 iterations 1
Cbc0038I Pass   7: suminf.    1.74110 (15) obj. -15.8122 iterations 10
Cbc0038I Pass   8: suminf.    0.21326 (2) obj. -9.38696 iterations 20
Cbc0038I Pass   9: suminf.    0.21326 (2) obj. -9.38696 iterations 1
Cbc0038I Pass  10: suminf.    0.32990 (2) obj. -9.38696 iterations 4
Cbc0038I Pass  11: suminf.    3.12739 (15) obj. -9.38696 iterations 25
Cbc0038I Pass  12: suminf.    2.86809 (15) obj. -9.38696 iterations 5
Cbc0038I Pass  13: suminf.    0.87209 (4) obj. -9.38696 iterations 24
Cbc0038I Pass  14: suminf.    0.69302 (3) obj. -9.75168 iterations 2
Cbc0038I Pass  15: suminf.    0.63497 (3) obj. -9.38696 iterations 1
Cbc0038I Pass  16: suminf.    1.31015 (5) obj. -9.38696 iterations 6
Cbc0038I Pass  17: suminf.    1.27590 (4) obj. -11.0701 iterations 2
Cbc0038I Pass  18: suminf.    0.42428 (2) obj. -9.38696 iterations 17
Cbc0038I Pass  19: suminf.    0.22718 (2) obj. -9.38696 iterations 1
Cbc0038I Pass  20: suminf.    0.93434 (3) obj. -9.38696 iterations 7
Cbc0038I Pass  21: suminf.    0.93434 (3) obj. -9.38696 iterations 1
Cbc0038I Pass  22: suminf.    0.96818 (3) obj. -9.38696 iterations 10
Cbc0038I Pass  23: suminf.    0.26781 (2) obj. -9.64222 iterations 2
Cbc0038I Pass  24: suminf.    0.22718 (2) obj. -9.38696 iterations 1
Cbc0038I Pass  25: suminf.    0.93434 (3) obj. -9.38696 iterations 7
Cbc0038I Pass  26: suminf.    0.93434 (3) obj. -9.38696 iterations 1
Cbc0038I Pass  27: suminf.    0.96818 (3) obj. -9.38696 iterations 10
Cbc0038I Pass  28: suminf.    0.26781 (2) obj. -9.64222 iterations 2
Cbc0038I Pass  29: suminf.    0.22718 (2) obj. -9.38696 iterations 1
Cbc0038I Pass  30: suminf.    0.93434 (3) obj. -9.38696 iterations 7
Cbc0038I Pass  31: suminf.    0.93434 (3) obj. -9.38696 iterations 1
Cbc0038I Pass  32: suminf.    0.96818 (3) obj. -9.38696 iterations 10
Cbc0038I Pass  33: suminf.    0.26781 (2) obj. -9.64222 iterations 2
Cbc0038I Pass  34: suminf.    0.22718 (2) obj. -9.38696 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -6.33588 to -6.56785 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.8787
Cbc0038I Pass  34: suminf.    3.25790 (25) obj. -26.0026 iterations 0
Cbc0038I Pass  35: suminf.    3.25790 (25) obj. -26.0026 iterations 1
Cbc0038I Pass  36: suminf.    1.02342 (9) obj. -14.8787 iterations 18
Cbc0038I Pass  37: suminf.    0.99847 (8) obj. -15.0619 iterations 1
Cbc0038I Pass  38: suminf.    1.20776 (8) obj. -14.8787 iterations 22
Cbc0038I Pass  39: suminf.    0.91749 (9) obj. -14.8787 iterations 5
Cbc0038I Pass  40: suminf.    2.13003 (7) obj. -14.8787 iterations 12
Cbc0038I Pass  41: suminf.    2.13003 (7) obj. -14.8787 iterations 0
Cbc0038I Pass  42: suminf.    1.48652 (6) obj. -14.8787 iterations 11
Cbc0038I Pass  43: suminf.    1.48652 (6) obj. -14.8787 iterations 2
Cbc0038I Pass  44: suminf.    1.70492 (6) obj. -14.8787 iterations 7
Cbc0038I Pass  45: suminf.    1.69720 (6) obj. -14.8941 iterations 4
Cbc0038I Pass  46: suminf.    1.33537 (6) obj. -14.8787 iterations 12
Cbc0038I Pass  47: suminf.    1.33537 (6) obj. -14.8787 iterations 2
Cbc0038I Pass  48: suminf.    1.70492 (6) obj. -14.8787 iterations 7
Cbc0038I Pass  49: suminf.    3.99691 (14) obj. -14.8787 iterations 29
Cbc0038I Pass  50: suminf.    2.81123 (11) obj. -16.0466 iterations 13
Cbc0038I Pass  51: suminf.    2.47511 (8) obj. -14.8787 iterations 12
Cbc0038I Pass  52: suminf.    1.88818 (6) obj. -15.5075 iterations 5
Cbc0038I Pass  53: suminf.    1.46906 (7) obj. -14.8787 iterations 11
Cbc0038I Pass  54: suminf.    1.46906 (7) obj. -14.8787 iterations 2
Cbc0038I Pass  55: suminf.    2.50680 (7) obj. -14.8787 iterations 7
Cbc0038I Pass  56: suminf.    1.99299 (6) obj. -14.8787 iterations 4
Cbc0038I Pass  57: suminf.    1.88818 (6) obj. -15.5075 iterations 2
Cbc0038I Pass  58: suminf.    1.46906 (7) obj. -14.8787 iterations 12
Cbc0038I Pass  59: suminf.    1.46906 (7) obj. -14.8787 iterations 2
Cbc0038I Pass  60: suminf.    2.50680 (7) obj. -14.8787 iterations 7
Cbc0038I Pass  61: suminf.    1.99299 (6) obj. -14.8787 iterations 3
Cbc0038I Pass  62: suminf.    1.88818 (6) obj. -15.5075 iterations 2
Cbc0038I Pass  63: suminf.    1.46906 (7) obj. -14.8787 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 113 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -6.56785 - took 0.04 seconds
Cbc0012I Integer solution of -6.567846 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 11 rows 14 columns
Cbc0031I 48 added rows had average density of 49.166667
Cbc0013I At root node, 48 cuts changed objective from -36.845716 to -15.509155 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12464 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1541 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 406 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1494 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 434 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.638 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.567846 best solution, best possible -15.509155 (2.58 seconds)
Cbc0012I Integer solution of -7.660442 found by rounding after 5542 iterations and 4 nodes (2.84 seconds)
Cbc0012I Integer solution of -7.966242 found by rounding after 5610 iterations and 5 nodes (2.85 seconds)
Cbc0016I Integer solution of -7.988712 found by strong branching after 5633 iterations and 7 nodes (2.85 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 14 rows 24 columns
Cbc0010I After 68 nodes, 11 on tree, -7.988712 best solution, best possible -15.509155 (3.29 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 35 rows 48 columns
Cbc0010I After 135 nodes, 5 on tree, -7.988712 best solution, best possible -15.509155 (3.99 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 45 rows 55 columns
Cbc0010I After 215 nodes, 12 on tree, -7.988712 best solution, best possible -15.509155 (4.69 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 37 rows 49 columns
Cbc0010I After 314 nodes, 24 on tree, -7.988712 best solution, best possible -15.509155 (5.39 seconds)
Cbc0038I Full problem 95 rows 113 columns, reduced to 37 rows 48 columns
Cbc0016I Integer solution of -7.990352 found by strong branching after 17217 iterations and 457 nodes (6.02 seconds)
Cbc0012I Integer solution of -8.004582 found by rounding after 17452 iterations and 479 nodes (6.08 seconds)
Cbc0010I After 484 nodes, 8 on tree, -8.004582 best solution, best possible -15.509155 (6.09 seconds)
Cbc0001I Search completed - best objective -8.004581999999992, took 21779 iterations and 999 nodes (6.25 seconds)
Cbc0032I Strong branching done 4720 times (54009 iterations), fathomed 85 nodes and fixed 146 variables
Cbc0041I Maximum depth 22, 2103 variables fixed on reduced cost (complete fathoming 13 times, 449 nodes taking 3429 iterations)
Total time (CPU seconds):       5.35   (Wallclock seconds):       6.27

