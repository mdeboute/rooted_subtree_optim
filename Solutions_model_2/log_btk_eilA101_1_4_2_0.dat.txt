Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 101 (-2) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 0.000137651 - average 7.56322e-07, 12 fixed columns
Coin0506I Presolve 156 (-26) rows, 88 (-13) columns and 480 (-78) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 0.2777789 - largest nonzero change 0 ( 0%) - largest zero change 2.7533362e-05
Clp0000I Optimal - objective value 51.362521
Clp0000I Optimal - objective value 51.362521
Coin0511I After Postsolve, objective 51.362521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.362521
Clp0000I Optimal - objective value 51.362521
Clp0000I Optimal - objective value 51.362521
Coin0511I After Postsolve, objective 51.362521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.36252144 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 101 columns (100 integer (100 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.878%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 64 integers unsatisfied sum - 13.3813
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.19658 iterations 101
Cbc0038I Solution found of 5.19658
Cbc0038I Relaxing continuous gives 5.19658
Cbc0038I Rounding solution of 2.97167 is better than previous of 5.19658

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 104 rows 65 columns
Cbc0038I Mini branch and bound improved solution from 2.97167 to -18.4588 (0.07 seconds)
Cbc0038I Round again with cutoff of -21.7493
Cbc0038I Pass   2: suminf.    4.53604 (25) obj. -21.7493 iterations 42
Cbc0038I Pass   3: suminf.    0.96879 (6) obj. -21.7493 iterations 41
Cbc0038I Pass   4: suminf.    0.92564 (5) obj. -21.7493 iterations 2
Cbc0038I Pass   5: suminf.    1.54252 (5) obj. -21.7493 iterations 10
Cbc0038I Pass   6: suminf.    1.42799 (5) obj. -21.7493 iterations 4
Cbc0038I Pass   7: suminf.    1.87636 (5) obj. -21.7493 iterations 6
Cbc0038I Pass   8: suminf.    1.57279 (4) obj. -21.7493 iterations 3
Cbc0038I Pass   9: suminf.    1.87636 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  10: suminf.    2.39633 (8) obj. -21.7493 iterations 24
Cbc0038I Pass  11: suminf.    2.03847 (7) obj. -21.7493 iterations 4
Cbc0038I Pass  12: suminf.    1.73005 (6) obj. -21.7493 iterations 12
Cbc0038I Pass  13: suminf.    1.09879 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  14: suminf.    1.06771 (4) obj. -21.7493 iterations 1
Cbc0038I Pass  15: suminf.    0.99592 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  16: suminf.    0.87047 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  17: suminf.    1.35319 (5) obj. -21.7493 iterations 5
Cbc0038I Pass  18: suminf.    1.09879 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  19: suminf.    1.06771 (4) obj. -21.7493 iterations 1
Cbc0038I Pass  20: suminf.    0.99592 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  21: suminf.    0.87047 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  22: suminf.    1.35319 (5) obj. -21.7493 iterations 5
Cbc0038I Pass  23: suminf.    1.09879 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  24: suminf.    1.06771 (4) obj. -21.7493 iterations 1
Cbc0038I Pass  25: suminf.    0.99592 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  26: suminf.    0.87047 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  27: suminf.    1.35319 (5) obj. -21.7493 iterations 5
Cbc0038I Pass  28: suminf.    1.09879 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  29: suminf.    1.06771 (4) obj. -21.7493 iterations 1
Cbc0038I Pass  30: suminf.    0.99592 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  31: suminf.    0.87047 (4) obj. -21.7493 iterations 4
Cbc0038I Rounding solution of -19.7139 is better than previous of -18.4588

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 111 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -19.7139 to -21.0986 (0.14 seconds)
Cbc0038I Round again with cutoff of -27.6719
Cbc0038I Pass  31: suminf.    5.83429 (25) obj. -27.6719 iterations 0
Cbc0038I Pass  32: suminf.    2.18402 (10) obj. -27.6719 iterations 41
Cbc0038I Pass  33: suminf.    1.69194 (8) obj. -27.6719 iterations 5
Cbc0038I Pass  34: suminf.    2.35862 (7) obj. -27.6719 iterations 15
Cbc0038I Pass  35: suminf.    1.71525 (5) obj. -27.6719 iterations 5
Cbc0038I Pass  36: suminf.    1.47088 (6) obj. -27.6719 iterations 4
Cbc0038I Pass  37: suminf.    2.41257 (7) obj. -27.6719 iterations 12
Cbc0038I Pass  38: suminf.    1.77110 (6) obj. -27.6719 iterations 5
Cbc0038I Pass  39: suminf.    2.59791 (8) obj. -27.6719 iterations 8
Cbc0038I Pass  40: suminf.    2.10274 (6) obj. -27.6719 iterations 2
Cbc0038I Pass  41: suminf.    2.04531 (7) obj. -27.6719 iterations 3
Cbc0038I Pass  42: suminf.    2.04531 (7) obj. -27.6719 iterations 1
Cbc0038I Pass  43: suminf.    1.89890 (6) obj. -27.6719 iterations 12
Cbc0038I Pass  44: suminf.    1.77980 (5) obj. -27.6719 iterations 1
Cbc0038I Pass  45: suminf.    1.77525 (5) obj. -27.6719 iterations 1
Cbc0038I Pass  46: suminf.    1.91912 (7) obj. -27.6719 iterations 4
Cbc0038I Pass  47: suminf.    1.84420 (6) obj. -27.6719 iterations 2
Cbc0038I Pass  48: suminf.    2.69648 (7) obj. -27.6719 iterations 9
Cbc0038I Pass  49: suminf.    1.77980 (5) obj. -27.6719 iterations 3
Cbc0038I Pass  50: suminf.    1.77525 (5) obj. -27.6719 iterations 1
Cbc0038I Pass  51: suminf.    1.91912 (7) obj. -27.6719 iterations 4
Cbc0038I Pass  52: suminf.    1.84420 (6) obj. -27.6719 iterations 2
Cbc0038I Pass  53: suminf.    2.69648 (7) obj. -27.6719 iterations 9
Cbc0038I Pass  54: suminf.    1.77980 (5) obj. -27.6719 iterations 3
Cbc0038I Pass  55: suminf.    1.77525 (5) obj. -27.6719 iterations 1
Cbc0038I Pass  56: suminf.    1.91912 (7) obj. -27.6719 iterations 4
Cbc0038I Pass  57: suminf.    1.84420 (6) obj. -27.6719 iterations 2
Cbc0038I Pass  58: suminf.    2.69648 (7) obj. -27.6719 iterations 9
Cbc0038I Pass  59: suminf.    1.77980 (5) obj. -27.6719 iterations 3
Cbc0038I Pass  60: suminf.    1.77525 (5) obj. -27.6719 iterations 1
Cbc0038I Rounding solution of -22.9235 is better than previous of -21.0986

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 110 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of -34.7791
Cbc0038I Pass  60: suminf.    7.26751 (25) obj. -34.7791 iterations 0
Cbc0038I Pass  61: suminf.    6.19701 (18) obj. -34.7791 iterations 15
Cbc0038I Pass  62: suminf.    5.57550 (22) obj. -34.7791 iterations 15
Cbc0038I Pass  63: suminf.    5.57550 (22) obj. -34.7791 iterations 0
Cbc0038I Pass  64: suminf.    3.31556 (9) obj. -34.7791 iterations 25
Cbc0038I Pass  65: suminf.    2.55397 (8) obj. -34.7791 iterations 7
Cbc0038I Pass  66: suminf.    3.20907 (10) obj. -34.7791 iterations 19
Cbc0038I Pass  67: suminf.    3.05785 (10) obj. -34.7791 iterations 8
Cbc0038I Pass  68: suminf.    3.04428 (9) obj. -34.7791 iterations 1
Cbc0038I Pass  69: suminf.    3.52101 (9) obj. -34.7791 iterations 12
Cbc0038I Pass  70: suminf.    3.05785 (10) obj. -34.7791 iterations 9
Cbc0038I Pass  71: suminf.    5.15804 (18) obj. -34.7791 iterations 33
Cbc0038I Pass  72: suminf.    3.36973 (14) obj. -34.7791 iterations 22
Cbc0038I Pass  73: suminf.    3.14509 (12) obj. -34.7791 iterations 4
Cbc0038I Pass  74: suminf.    4.08318 (13) obj. -34.7791 iterations 27
Cbc0038I Pass  75: suminf.    3.93850 (16) obj. -34.7791 iterations 6
Cbc0038I Pass  76: suminf.    3.93850 (16) obj. -34.7791 iterations 0
Cbc0038I Pass  77: suminf.    3.82359 (16) obj. -34.7791 iterations 16
Cbc0038I Pass  78: suminf.    2.54789 (10) obj. -34.7791 iterations 9
Cbc0038I Pass  79: suminf.    2.47828 (11) obj. -34.7791 iterations 6
Cbc0038I Pass  80: suminf.    4.73777 (14) obj. -34.7791 iterations 29
Cbc0038I Pass  81: suminf.    4.70674 (17) obj. -34.7791 iterations 10
Cbc0038I Pass  82: suminf.    4.69168 (16) obj. -34.7791 iterations 3
Cbc0038I Pass  83: suminf.    3.75158 (13) obj. -34.7791 iterations 18
Cbc0038I Pass  84: suminf.    3.33817 (10) obj. -34.7791 iterations 5
Cbc0038I Pass  85: suminf.    5.01948 (11) obj. -34.7791 iterations 10
Cbc0038I Pass  86: suminf.    3.86275 (17) obj. -34.7791 iterations 13
Cbc0038I Pass  87: suminf.    3.85860 (12) obj. -34.7791 iterations 4
Cbc0038I Pass  88: suminf.    4.11946 (13) obj. -34.7791 iterations 24
Cbc0038I Pass  89: suminf.    4.05842 (16) obj. -34.7791 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 110 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -22.9235 - took 0.26 seconds
Cbc0012I Integer solution of -22.92351 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 104 rows 65 columns
Cbc0012I Integer solution of -23.38154 found by RINS after 0 iterations and 0 nodes (0.35 seconds)
Cbc0031I 36 added rows had average density of 66.305556
Cbc0013I At root node, 36 cuts changed objective from -51.362521 to -43.962708 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25640 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3821 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.38154 best solution, best possible -43.962708 (2.01 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 27 rows 25 columns
Cbc0004I Integer solution of -23.53909 found after 14844 iterations and 78 nodes (2.55 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 2 rows 4 columns
Cbc0016I Integer solution of -23.70805 found by strong branching after 15002 iterations and 95 nodes (2.58 seconds)
Cbc0016I Integer solution of -23.73585 found by strong branching after 15273 iterations and 116 nodes (2.60 seconds)
Cbc0012I Integer solution of -23.89877 found by rounding after 15324 iterations and 120 nodes (2.61 seconds)
Cbc0004I Integer solution of -24.06628 found after 15356 iterations and 129 nodes (2.61 seconds)
Cbc0001I Search completed - best objective -24.06628000000001, took 16211 iterations and 146 nodes (2.65 seconds)
Cbc0032I Strong branching done 1256 times (27449 iterations), fathomed 12 nodes and fixed 45 variables
Cbc0035I Maximum depth 38, 612 variables fixed on reduced cost
Total time (CPU seconds):       2.58   (Wallclock seconds):       2.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-75) rows, 147 (-55) columns and 2659 (-2994) elements
Clp1000I sum of infeasibilities 3.37278e-07 - average 2.61456e-09, 35 fixed columns
Coin0506I Presolve 97 (-32) rows, 112 (-35) columns and 1716 (-943) elements
Clp0006I 0  Obj 53.778383 Dual inf 6.823626 (112)
Clp0029I End of values pass after 112 iterations
Clp0014I Perturbing problem by 0.001% of 1.8961781 - largest nonzero change 2.8471403e-05 ( 0.0022879966%) - largest zero change 2.9744953e-05
Clp0000I Optimal - objective value 67.525114
Clp0000I Optimal - objective value 67.525114
Coin0511I After Postsolve, objective 67.525114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 67.525114
Clp0000I Optimal - objective value 67.525114
Clp0000I Optimal - objective value 67.525114
Clp0000I Optimal - objective value 67.525114
Coin0511I After Postsolve, objective 67.525114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.52511428 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 147 columns (147 integer (147 of which binary)) and 2662 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.721%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.85802
Cbc0038I Pass   1: suminf.    3.50602 (35) obj. -54.4678 iterations 23
Cbc0038I Pass   2: suminf.    3.50602 (35) obj. -54.4678 iterations 1
Cbc0038I Pass   3: suminf.    0.76004 (10) obj. -21.7526 iterations 25
Cbc0038I Solution found of -12.5127
Cbc0038I Rounding solution of -14.7376 is better than previous of -12.5127

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 147 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -19.4112
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.50602 (35) obj. -54.4678 iterations 0
Cbc0038I Pass   5: suminf.    3.50602 (35) obj. -54.4678 iterations 1
Cbc0038I Pass   6: suminf.    1.91654 (22) obj. -33.504 iterations 13
Cbc0038I Pass   7: suminf.    0.94050 (12) obj. -23.5721 iterations 10
Cbc0038I Pass   8: suminf.    0.41776 (3) obj. -19.4112 iterations 28
Cbc0038I Pass   9: suminf.    0.41776 (3) obj. -19.4112 iterations 0
Cbc0038I Pass  10: suminf.    0.93939 (3) obj. -19.4112 iterations 8
Cbc0038I Pass  11: suminf.    0.85482 (3) obj. -19.4112 iterations 3
Cbc0038I Pass  12: suminf.    0.35091 (2) obj. -19.4112 iterations 6
Cbc0038I Pass  13: suminf.    0.35091 (2) obj. -19.4112 iterations 0
Cbc0038I Pass  14: suminf.    0.85120 (3) obj. -19.4112 iterations 6
Cbc0038I Pass  15: suminf.    0.39912 (2) obj. -19.4112 iterations 8
Cbc0038I Pass  16: suminf.    2.28417 (16) obj. -19.4112 iterations 43
Cbc0038I Pass  17: suminf.    1.46675 (13) obj. -19.4112 iterations 13
Cbc0038I Pass  18: suminf.    0.95766 (6) obj. -19.4112 iterations 22
Cbc0038I Pass  19: suminf.    0.95766 (6) obj. -19.4112 iterations 0
Cbc0038I Pass  20: suminf.    1.19407 (9) obj. -19.4112 iterations 8
Cbc0038I Pass  21: suminf.    1.16219 (10) obj. -19.4112 iterations 4
Cbc0038I Pass  22: suminf.    1.25906 (5) obj. -19.4112 iterations 16
Cbc0038I Pass  23: suminf.    0.81688 (5) obj. -19.4112 iterations 5
Cbc0038I Pass  24: suminf.    1.11557 (5) obj. -19.4112 iterations 16
Cbc0038I Pass  25: suminf.    0.77032 (4) obj. -19.4112 iterations 9
Cbc0038I Pass  26: suminf.    0.46628 (4) obj. -20.2643 iterations 4
Cbc0038I Pass  27: suminf.    0.79350 (6) obj. -19.4112 iterations 12
Cbc0038I Pass  28: suminf.    0.72302 (4) obj. -19.4112 iterations 7
Cbc0038I Pass  29: suminf.    0.99847 (5) obj. -19.4112 iterations 11
Cbc0038I Pass  30: suminf.    0.77032 (4) obj. -19.4112 iterations 9
Cbc0038I Pass  31: suminf.    0.46628 (4) obj. -20.2643 iterations 4
Cbc0038I Pass  32: suminf.    0.79350 (6) obj. -19.4112 iterations 13
Cbc0038I Pass  33: suminf.    0.72302 (4) obj. -19.4112 iterations 7
Cbc0038I Rounding solution of -17.6872 is better than previous of -14.7376

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 147 columns, reduced to 10 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -17.6872 to -19.0566 (0.06 seconds)
Cbc0038I Round again with cutoff of -27.8237
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.50602 (35) obj. -54.4678 iterations 0
Cbc0038I Pass  34: suminf.    3.50602 (35) obj. -54.4678 iterations 1
Cbc0038I Pass  35: suminf.    1.00688 (10) obj. -27.8237 iterations 45
Cbc0038I Pass  36: suminf.    0.77178 (9) obj. -28.9264 iterations 7
Cbc0038I Pass  37: suminf.    1.07410 (6) obj. -27.8237 iterations 25
Cbc0038I Pass  38: suminf.    0.92549 (13) obj. -27.8237 iterations 7
Cbc0038I Pass  39: suminf.    1.57434 (10) obj. -27.8237 iterations 14
Cbc0038I Pass  40: suminf.    1.12006 (10) obj. -27.8237 iterations 9
Cbc0038I Pass  41: suminf.    1.48966 (9) obj. -27.8237 iterations 15
Cbc0038I Pass  42: suminf.    1.42773 (9) obj. -27.8237 iterations 4
Cbc0038I Pass  43: suminf.    1.40935 (9) obj. -27.8237 iterations 8
Cbc0038I Pass  44: suminf.    1.40935 (9) obj. -27.8237 iterations 6
Cbc0038I Pass  45: suminf.    1.42773 (9) obj. -27.8237 iterations 8
Cbc0038I Pass  46: suminf.    1.98133 (14) obj. -27.8237 iterations 26
Cbc0038I Pass  47: suminf.    1.67755 (13) obj. -28.1151 iterations 13
Cbc0038I Pass  48: suminf.    1.50834 (10) obj. -27.8237 iterations 14
Cbc0038I Pass  49: suminf.    1.40210 (10) obj. -28.129 iterations 5
Cbc0038I Pass  50: suminf.    1.55473 (10) obj. -27.8237 iterations 5
Cbc0038I Pass  51: suminf.    2.55944 (17) obj. -27.8237 iterations 22
Cbc0038I Pass  52: suminf.    2.25510 (17) obj. -27.8237 iterations 4
Cbc0038I Pass  53: suminf.    2.20090 (14) obj. -27.8237 iterations 19
Cbc0038I Pass  54: suminf.    2.13560 (14) obj. -27.8237 iterations 6
Cbc0038I Pass  55: suminf.    1.93776 (9) obj. -27.8237 iterations 25
Cbc0038I Pass  56: suminf.    1.40210 (10) obj. -28.129 iterations 6
Cbc0038I Pass  57: suminf.    1.55473 (10) obj. -27.8237 iterations 5
Cbc0038I Pass  58: suminf.    3.43123 (20) obj. -27.8237 iterations 30
Cbc0038I Pass  59: suminf.    2.55667 (18) obj. -27.8237 iterations 7
Cbc0038I Pass  60: suminf.    1.60065 (18) obj. -27.8237 iterations 7
Cbc0038I Pass  61: suminf.    1.60065 (18) obj. -27.8237 iterations 0
Cbc0038I Pass  62: suminf.    2.14636 (14) obj. -27.8237 iterations 15
Cbc0038I Rounding solution of -19.7209 is better than previous of -19.0566

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 147 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -37.9186
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.50602 (35) obj. -54.4678 iterations 0
Cbc0038I Pass  63: suminf.    3.50602 (35) obj. -54.4678 iterations 1
Cbc0038I Pass  64: suminf.    2.07603 (22) obj. -37.9186 iterations 21
Cbc0038I Pass  65: suminf.    2.07603 (22) obj. -37.9186 iterations 0
Cbc0038I Pass  66: suminf.    2.85919 (20) obj. -37.9186 iterations 46
Cbc0038I Pass  67: suminf.    2.14005 (21) obj. -37.9186 iterations 7
Cbc0038I Pass  68: suminf.    2.04957 (21) obj. -37.9186 iterations 6
Cbc0038I Pass  69: suminf.    2.34692 (20) obj. -37.9186 iterations 11
Cbc0038I Pass  70: suminf.    2.34692 (20) obj. -37.9186 iterations 0
Cbc0038I Pass  71: suminf.    3.36526 (19) obj. -37.9186 iterations 31
Cbc0038I Pass  72: suminf.    2.53355 (19) obj. -37.9186 iterations 12
Cbc0038I Pass  73: suminf.    2.59791 (19) obj. -37.9186 iterations 4
Cbc0038I Pass  74: suminf.    2.93312 (22) obj. -37.9186 iterations 34
Cbc0038I Pass  75: suminf.    2.72305 (21) obj. -37.9186 iterations 10
Cbc0038I Pass  76: suminf.    2.82281 (20) obj. -37.9186 iterations 23
Cbc0038I Pass  77: suminf.    2.82281 (20) obj. -37.9186 iterations 1
Cbc0038I Pass  78: suminf.    2.82782 (20) obj. -37.9186 iterations 5
Cbc0038I Pass  79: suminf.    2.82782 (20) obj. -37.9186 iterations 3
Cbc0038I Pass  80: suminf.    2.82281 (20) obj. -37.9186 iterations 5
Cbc0038I Pass  81: suminf.    3.61272 (26) obj. -37.9186 iterations 31
Cbc0038I Pass  82: suminf.    3.06632 (24) obj. -37.9186 iterations 18
Cbc0038I Pass  83: suminf.    3.87062 (22) obj. -37.9186 iterations 16
Cbc0038I Pass  84: suminf.    3.87062 (22) obj. -37.9186 iterations 2
Cbc0038I Pass  85: suminf.    3.33235 (20) obj. -37.9186 iterations 22
Cbc0038I Pass  86: suminf.    2.98336 (23) obj. -37.9186 iterations 10
Cbc0038I Pass  87: suminf.    3.20870 (21) obj. -37.9186 iterations 11
Cbc0038I Pass  88: suminf.    2.96678 (23) obj. -37.9186 iterations 5
Cbc0038I Pass  89: suminf.    3.20870 (21) obj. -37.9186 iterations 8
Cbc0038I Pass  90: suminf.    2.69062 (21) obj. -37.9186 iterations 39
Cbc0038I Pass  91: suminf.    2.62375 (20) obj. -37.9807 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -19.7209 - took 0.08 seconds
Cbc0012I Integer solution of -19.72089 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 0 rows 0 columns
Cbc0031I 73 added rows had average density of 47.123288
Cbc0013I At root node, 73 cuts changed objective from -61.473442 to -31.156697 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23503 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1768 row cuts average 139.3 elements, 0 column cuts (0 active)  in 0.268 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 844 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1895 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 394 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.494 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.72089 best solution, best possible -31.156697 (3.06 seconds)
Cbc0010I After 4 nodes, 5 on tree, -19.72089 best solution, best possible -31.156697 (3.93 seconds)
Cbc0012I Integer solution of -22.9816 found by rounding after 8262 iterations and 8 nodes (4.17 seconds)
Cbc0012I Integer solution of -23.27422 found by rounding after 8271 iterations and 11 nodes (4.17 seconds)
Cbc0012I Integer solution of -23.4047 found by DiveCoefficient after 8271 iterations and 11 nodes (4.17 seconds)
Cbc0012I Integer solution of -23.42313 found by DiveCoefficient after 8275 iterations and 12 nodes (4.18 seconds)
Cbc0004I Integer solution of -24.06628 found after 8288 iterations and 15 nodes (4.18 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 31 rows 47 columns
Cbc0010I After 47 nodes, 16 on tree, -24.06628 best solution, best possible -31.156697 (4.63 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 60 rows 80 columns
Cbc0010I After 131 nodes, 16 on tree, -24.06628 best solution, best possible -31.156697 (5.33 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 41 rows 59 columns
Cbc0010I After 256 nodes, 16 on tree, -24.06628 best solution, best possible -31.156697 (6.04 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 61 rows 84 columns
Cbc0010I After 312 nodes, 15 on tree, -24.06628 best solution, best possible -31.156697 (6.74 seconds)
Cbc0001I Search completed - best objective -24.06628000000001, took 22064 iterations and 412 nodes (7.23 seconds)
Cbc0032I Strong branching done 3732 times (65663 iterations), fathomed 24 nodes and fixed 76 variables
Cbc0035I Maximum depth 28, 602 variables fixed on reduced cost
Total time (CPU seconds):       6.61   (Wallclock seconds):       7.25

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 101 (-2) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 0.000137651 - average 7.56322e-07, 12 fixed columns
Coin0506I Presolve 156 (-26) rows, 88 (-13) columns and 480 (-78) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 0.2777789 - largest nonzero change 0 ( 0%) - largest zero change 2.7533362e-05
Clp0000I Optimal - objective value 51.362521
Clp0000I Optimal - objective value 51.362521
Coin0511I After Postsolve, objective 51.362521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.362521
Clp0000I Optimal - objective value 51.362521
Clp0000I Optimal - objective value 51.362521
Coin0511I After Postsolve, objective 51.362521, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.36252144 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 101 columns (100 integer (100 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.878%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 64 integers unsatisfied sum - 13.3813
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.19658 iterations 101
Cbc0038I Solution found of 5.19658
Cbc0038I Relaxing continuous gives 5.19658
Cbc0038I Rounding solution of 2.97167 is better than previous of 5.19658

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 104 rows 65 columns
Cbc0038I Mini branch and bound improved solution from 2.97167 to -18.4588 (0.06 seconds)
Cbc0038I Round again with cutoff of -21.7493
Cbc0038I Pass   2: suminf.    4.53604 (25) obj. -21.7493 iterations 42
Cbc0038I Pass   3: suminf.    0.96879 (6) obj. -21.7493 iterations 41
Cbc0038I Pass   4: suminf.    0.92564 (5) obj. -21.7493 iterations 2
Cbc0038I Pass   5: suminf.    1.54252 (5) obj. -21.7493 iterations 10
Cbc0038I Pass   6: suminf.    1.42799 (5) obj. -21.7493 iterations 4
Cbc0038I Pass   7: suminf.    1.87636 (5) obj. -21.7493 iterations 6
Cbc0038I Pass   8: suminf.    1.57279 (4) obj. -21.7493 iterations 3
Cbc0038I Pass   9: suminf.    1.87636 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  10: suminf.    2.39633 (8) obj. -21.7493 iterations 24
Cbc0038I Pass  11: suminf.    2.03847 (7) obj. -21.7493 iterations 4
Cbc0038I Pass  12: suminf.    1.73005 (6) obj. -21.7493 iterations 12
Cbc0038I Pass  13: suminf.    1.09879 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  14: suminf.    1.06771 (4) obj. -21.7493 iterations 1
Cbc0038I Pass  15: suminf.    0.99592 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  16: suminf.    0.87047 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  17: suminf.    1.35319 (5) obj. -21.7493 iterations 5
Cbc0038I Pass  18: suminf.    1.09879 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  19: suminf.    1.06771 (4) obj. -21.7493 iterations 1
Cbc0038I Pass  20: suminf.    0.99592 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  21: suminf.    0.87047 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  22: suminf.    1.35319 (5) obj. -21.7493 iterations 5
Cbc0038I Pass  23: suminf.    1.09879 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  24: suminf.    1.06771 (4) obj. -21.7493 iterations 1
Cbc0038I Pass  25: suminf.    0.99592 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  26: suminf.    0.87047 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  27: suminf.    1.35319 (5) obj. -21.7493 iterations 5
Cbc0038I Pass  28: suminf.    1.09879 (5) obj. -21.7493 iterations 4
Cbc0038I Pass  29: suminf.    1.06771 (4) obj. -21.7493 iterations 1
Cbc0038I Pass  30: suminf.    0.99592 (4) obj. -21.7493 iterations 4
Cbc0038I Pass  31: suminf.    0.87047 (4) obj. -21.7493 iterations 4
Cbc0038I Rounding solution of -19.7139 is better than previous of -18.4588

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 111 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -19.7139 to -21.0986 (0.14 seconds)
Cbc0038I Round again with cutoff of -27.6719
Cbc0038I Pass  31: suminf.    5.83429 (25) obj. -27.6719 iterations 0
Cbc0038I Pass  32: suminf.    2.18402 (10) obj. -27.6719 iterations 41
Cbc0038I Pass  33: suminf.    1.69194 (8) obj. -27.6719 iterations 5
Cbc0038I Pass  34: suminf.    2.35862 (7) obj. -27.6719 iterations 15
Cbc0038I Pass  35: suminf.    1.71525 (5) obj. -27.6719 iterations 5
Cbc0038I Pass  36: suminf.    1.47088 (6) obj. -27.6719 iterations 4
Cbc0038I Pass  37: suminf.    2.41257 (7) obj. -27.6719 iterations 12
Cbc0038I Pass  38: suminf.    1.77110 (6) obj. -27.6719 iterations 5
Cbc0038I Pass  39: suminf.    2.59791 (8) obj. -27.6719 iterations 8
Cbc0038I Pass  40: suminf.    2.10274 (6) obj. -27.6719 iterations 2
Cbc0038I Pass  41: suminf.    2.04531 (7) obj. -27.6719 iterations 3
Cbc0038I Pass  42: suminf.    2.04531 (7) obj. -27.6719 iterations 1
Cbc0038I Pass  43: suminf.    1.89890 (6) obj. -27.6719 iterations 12
Cbc0038I Pass  44: suminf.    1.77980 (5) obj. -27.6719 iterations 1
Cbc0038I Pass  45: suminf.    1.77525 (5) obj. -27.6719 iterations 1
Cbc0038I Pass  46: suminf.    1.91912 (7) obj. -27.6719 iterations 4
Cbc0038I Pass  47: suminf.    1.84420 (6) obj. -27.6719 iterations 2
Cbc0038I Pass  48: suminf.    2.69648 (7) obj. -27.6719 iterations 9
Cbc0038I Pass  49: suminf.    1.77980 (5) obj. -27.6719 iterations 3
Cbc0038I Pass  50: suminf.    1.77525 (5) obj. -27.6719 iterations 1
Cbc0038I Pass  51: suminf.    1.91912 (7) obj. -27.6719 iterations 4
Cbc0038I Pass  52: suminf.    1.84420 (6) obj. -27.6719 iterations 2
Cbc0038I Pass  53: suminf.    2.69648 (7) obj. -27.6719 iterations 9
Cbc0038I Pass  54: suminf.    1.77980 (5) obj. -27.6719 iterations 3
Cbc0038I Pass  55: suminf.    1.77525 (5) obj. -27.6719 iterations 1
Cbc0038I Pass  56: suminf.    1.91912 (7) obj. -27.6719 iterations 4
Cbc0038I Pass  57: suminf.    1.84420 (6) obj. -27.6719 iterations 2
Cbc0038I Pass  58: suminf.    2.69648 (7) obj. -27.6719 iterations 9
Cbc0038I Pass  59: suminf.    1.77980 (5) obj. -27.6719 iterations 3
Cbc0038I Pass  60: suminf.    1.77525 (5) obj. -27.6719 iterations 1
Cbc0038I Rounding solution of -22.9235 is better than previous of -21.0986

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 110 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of -34.7791
Cbc0038I Pass  60: suminf.    7.26751 (25) obj. -34.7791 iterations 0
Cbc0038I Pass  61: suminf.    6.19701 (18) obj. -34.7791 iterations 15
Cbc0038I Pass  62: suminf.    5.57550 (22) obj. -34.7791 iterations 15
Cbc0038I Pass  63: suminf.    5.57550 (22) obj. -34.7791 iterations 0
Cbc0038I Pass  64: suminf.    3.31556 (9) obj. -34.7791 iterations 25
Cbc0038I Pass  65: suminf.    2.55397 (8) obj. -34.7791 iterations 7
Cbc0038I Pass  66: suminf.    3.20907 (10) obj. -34.7791 iterations 19
Cbc0038I Pass  67: suminf.    3.05785 (10) obj. -34.7791 iterations 8
Cbc0038I Pass  68: suminf.    3.04428 (9) obj. -34.7791 iterations 1
Cbc0038I Pass  69: suminf.    3.52101 (9) obj. -34.7791 iterations 12
Cbc0038I Pass  70: suminf.    3.05785 (10) obj. -34.7791 iterations 9
Cbc0038I Pass  71: suminf.    5.15804 (18) obj. -34.7791 iterations 33
Cbc0038I Pass  72: suminf.    3.36973 (14) obj. -34.7791 iterations 22
Cbc0038I Pass  73: suminf.    3.14509 (12) obj. -34.7791 iterations 4
Cbc0038I Pass  74: suminf.    4.08318 (13) obj. -34.7791 iterations 27
Cbc0038I Pass  75: suminf.    3.93850 (16) obj. -34.7791 iterations 6
Cbc0038I Pass  76: suminf.    3.93850 (16) obj. -34.7791 iterations 0
Cbc0038I Pass  77: suminf.    3.82359 (16) obj. -34.7791 iterations 16
Cbc0038I Pass  78: suminf.    2.54789 (10) obj. -34.7791 iterations 9
Cbc0038I Pass  79: suminf.    2.47828 (11) obj. -34.7791 iterations 6
Cbc0038I Pass  80: suminf.    4.73777 (14) obj. -34.7791 iterations 29
Cbc0038I Pass  81: suminf.    4.70674 (17) obj. -34.7791 iterations 10
Cbc0038I Pass  82: suminf.    4.69168 (16) obj. -34.7791 iterations 3
Cbc0038I Pass  83: suminf.    3.75158 (13) obj. -34.7791 iterations 18
Cbc0038I Pass  84: suminf.    3.33817 (10) obj. -34.7791 iterations 5
Cbc0038I Pass  85: suminf.    5.01948 (11) obj. -34.7791 iterations 10
Cbc0038I Pass  86: suminf.    3.86275 (17) obj. -34.7791 iterations 13
Cbc0038I Pass  87: suminf.    3.85860 (12) obj. -34.7791 iterations 4
Cbc0038I Pass  88: suminf.    4.11946 (13) obj. -34.7791 iterations 24
Cbc0038I Pass  89: suminf.    4.05842 (16) obj. -34.7791 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 110 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -22.9235 - took 0.27 seconds
Cbc0012I Integer solution of -22.92351 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 104 rows 65 columns
Cbc0012I Integer solution of -23.38154 found by RINS after 0 iterations and 0 nodes (0.37 seconds)
Cbc0031I 36 added rows had average density of 66.305556
Cbc0013I At root node, 36 cuts changed objective from -51.362521 to -43.962708 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25640 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3821 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.38154 best solution, best possible -43.962708 (2.09 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 27 rows 25 columns
Cbc0004I Integer solution of -23.53909 found after 14844 iterations and 78 nodes (2.70 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 2 rows 4 columns
Cbc0016I Integer solution of -23.70805 found by strong branching after 15002 iterations and 95 nodes (2.71 seconds)
Cbc0016I Integer solution of -23.73585 found by strong branching after 15273 iterations and 116 nodes (2.74 seconds)
Cbc0012I Integer solution of -23.89877 found by rounding after 15324 iterations and 120 nodes (2.75 seconds)
Cbc0004I Integer solution of -24.06628 found after 15356 iterations and 129 nodes (2.75 seconds)
Cbc0001I Search completed - best objective -24.06628000000001, took 16211 iterations and 146 nodes (2.79 seconds)
Cbc0032I Strong branching done 1256 times (27449 iterations), fathomed 12 nodes and fixed 45 variables
Cbc0035I Maximum depth 38, 612 variables fixed on reduced cost
Total time (CPU seconds):       2.67   (Wallclock seconds):       2.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-76) rows, 147 (-56) columns and 2659 (-2995) elements
Clp1000I sum of infeasibilities 3.37278e-07 - average 2.61456e-09, 35 fixed columns
Coin0506I Presolve 97 (-32) rows, 112 (-35) columns and 1716 (-943) elements
Clp0006I 0  Obj 53.778383 Dual inf 6.823626 (112)
Clp0029I End of values pass after 112 iterations
Clp0014I Perturbing problem by 0.001% of 1.8961781 - largest nonzero change 2.8471403e-05 ( 0.0022879966%) - largest zero change 2.9744953e-05
Clp0000I Optimal - objective value 67.525114
Clp0000I Optimal - objective value 67.525114
Coin0511I After Postsolve, objective 67.525114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 67.525114
Clp0000I Optimal - objective value 67.525114
Clp0000I Optimal - objective value 67.525114
Clp0000I Optimal - objective value 67.525114
Coin0511I After Postsolve, objective 67.525114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.52511428 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 147 columns (147 integer (147 of which binary)) and 2662 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.721%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.85802
Cbc0038I Pass   1: suminf.    3.50602 (35) obj. -54.4678 iterations 23
Cbc0038I Pass   2: suminf.    3.50602 (35) obj. -54.4678 iterations 1
Cbc0038I Pass   3: suminf.    0.76004 (10) obj. -21.7526 iterations 25
Cbc0038I Solution found of -12.5127
Cbc0038I Rounding solution of -14.7376 is better than previous of -12.5127

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 147 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -19.4112
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.50602 (35) obj. -54.4678 iterations 0
Cbc0038I Pass   5: suminf.    3.50602 (35) obj. -54.4678 iterations 1
Cbc0038I Pass   6: suminf.    1.91654 (22) obj. -33.504 iterations 13
Cbc0038I Pass   7: suminf.    0.94050 (12) obj. -23.5721 iterations 10
Cbc0038I Pass   8: suminf.    0.41776 (3) obj. -19.4112 iterations 28
Cbc0038I Pass   9: suminf.    0.41776 (3) obj. -19.4112 iterations 0
Cbc0038I Pass  10: suminf.    0.93939 (3) obj. -19.4112 iterations 8
Cbc0038I Pass  11: suminf.    0.85482 (3) obj. -19.4112 iterations 3
Cbc0038I Pass  12: suminf.    0.35091 (2) obj. -19.4112 iterations 6
Cbc0038I Pass  13: suminf.    0.35091 (2) obj. -19.4112 iterations 0
Cbc0038I Pass  14: suminf.    0.85120 (3) obj. -19.4112 iterations 6
Cbc0038I Pass  15: suminf.    0.39912 (2) obj. -19.4112 iterations 8
Cbc0038I Pass  16: suminf.    2.28417 (16) obj. -19.4112 iterations 43
Cbc0038I Pass  17: suminf.    1.46675 (13) obj. -19.4112 iterations 13
Cbc0038I Pass  18: suminf.    0.95766 (6) obj. -19.4112 iterations 22
Cbc0038I Pass  19: suminf.    0.95766 (6) obj. -19.4112 iterations 0
Cbc0038I Pass  20: suminf.    1.19407 (9) obj. -19.4112 iterations 8
Cbc0038I Pass  21: suminf.    1.16219 (10) obj. -19.4112 iterations 4
Cbc0038I Pass  22: suminf.    1.25906 (5) obj. -19.4112 iterations 16
Cbc0038I Pass  23: suminf.    0.81688 (5) obj. -19.4112 iterations 5
Cbc0038I Pass  24: suminf.    1.11557 (5) obj. -19.4112 iterations 16
Cbc0038I Pass  25: suminf.    0.77032 (4) obj. -19.4112 iterations 9
Cbc0038I Pass  26: suminf.    0.46628 (4) obj. -20.2643 iterations 4
Cbc0038I Pass  27: suminf.    0.79350 (6) obj. -19.4112 iterations 12
Cbc0038I Pass  28: suminf.    0.72302 (4) obj. -19.4112 iterations 7
Cbc0038I Pass  29: suminf.    0.99847 (5) obj. -19.4112 iterations 11
Cbc0038I Pass  30: suminf.    0.77032 (4) obj. -19.4112 iterations 9
Cbc0038I Pass  31: suminf.    0.46628 (4) obj. -20.2643 iterations 4
Cbc0038I Pass  32: suminf.    0.79350 (6) obj. -19.4112 iterations 13
Cbc0038I Pass  33: suminf.    0.72302 (4) obj. -19.4112 iterations 7
Cbc0038I Rounding solution of -17.6872 is better than previous of -14.7376

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 147 columns, reduced to 10 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -17.6872 to -19.0566 (0.06 seconds)
Cbc0038I Round again with cutoff of -27.8237
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.50602 (35) obj. -54.4678 iterations 0
Cbc0038I Pass  34: suminf.    3.50602 (35) obj. -54.4678 iterations 1
Cbc0038I Pass  35: suminf.    1.00688 (10) obj. -27.8237 iterations 45
Cbc0038I Pass  36: suminf.    0.77178 (9) obj. -28.9264 iterations 7
Cbc0038I Pass  37: suminf.    1.07410 (6) obj. -27.8237 iterations 25
Cbc0038I Pass  38: suminf.    0.92549 (13) obj. -27.8237 iterations 7
Cbc0038I Pass  39: suminf.    1.57434 (10) obj. -27.8237 iterations 14
Cbc0038I Pass  40: suminf.    1.12006 (10) obj. -27.8237 iterations 9
Cbc0038I Pass  41: suminf.    1.48966 (9) obj. -27.8237 iterations 15
Cbc0038I Pass  42: suminf.    1.42773 (9) obj. -27.8237 iterations 4
Cbc0038I Pass  43: suminf.    1.40935 (9) obj. -27.8237 iterations 8
Cbc0038I Pass  44: suminf.    1.40935 (9) obj. -27.8237 iterations 6
Cbc0038I Pass  45: suminf.    1.42773 (9) obj. -27.8237 iterations 8
Cbc0038I Pass  46: suminf.    1.98133 (14) obj. -27.8237 iterations 26
Cbc0038I Pass  47: suminf.    1.67755 (13) obj. -28.1151 iterations 13
Cbc0038I Pass  48: suminf.    1.50834 (10) obj. -27.8237 iterations 14
Cbc0038I Pass  49: suminf.    1.40210 (10) obj. -28.129 iterations 5
Cbc0038I Pass  50: suminf.    1.55473 (10) obj. -27.8237 iterations 5
Cbc0038I Pass  51: suminf.    2.55944 (17) obj. -27.8237 iterations 22
Cbc0038I Pass  52: suminf.    2.25510 (17) obj. -27.8237 iterations 4
Cbc0038I Pass  53: suminf.    2.20090 (14) obj. -27.8237 iterations 19
Cbc0038I Pass  54: suminf.    2.13560 (14) obj. -27.8237 iterations 6
Cbc0038I Pass  55: suminf.    1.93776 (9) obj. -27.8237 iterations 25
Cbc0038I Pass  56: suminf.    1.40210 (10) obj. -28.129 iterations 6
Cbc0038I Pass  57: suminf.    1.55473 (10) obj. -27.8237 iterations 5
Cbc0038I Pass  58: suminf.    3.43123 (20) obj. -27.8237 iterations 30
Cbc0038I Pass  59: suminf.    2.55667 (18) obj. -27.8237 iterations 7
Cbc0038I Pass  60: suminf.    1.60065 (18) obj. -27.8237 iterations 7
Cbc0038I Pass  61: suminf.    1.60065 (18) obj. -27.8237 iterations 0
Cbc0038I Pass  62: suminf.    2.14636 (14) obj. -27.8237 iterations 15
Cbc0038I Rounding solution of -19.7209 is better than previous of -19.0566

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 147 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -37.9186
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.50602 (35) obj. -54.4678 iterations 0
Cbc0038I Pass  63: suminf.    3.50602 (35) obj. -54.4678 iterations 1
Cbc0038I Pass  64: suminf.    2.07603 (22) obj. -37.9186 iterations 21
Cbc0038I Pass  65: suminf.    2.07603 (22) obj. -37.9186 iterations 0
Cbc0038I Pass  66: suminf.    2.85919 (20) obj. -37.9186 iterations 46
Cbc0038I Pass  67: suminf.    2.14005 (21) obj. -37.9186 iterations 7
Cbc0038I Pass  68: suminf.    2.04957 (21) obj. -37.9186 iterations 6
Cbc0038I Pass  69: suminf.    2.34692 (20) obj. -37.9186 iterations 11
Cbc0038I Pass  70: suminf.    2.34692 (20) obj. -37.9186 iterations 0
Cbc0038I Pass  71: suminf.    3.36526 (19) obj. -37.9186 iterations 31
Cbc0038I Pass  72: suminf.    2.53355 (19) obj. -37.9186 iterations 12
Cbc0038I Pass  73: suminf.    2.59791 (19) obj. -37.9186 iterations 4
Cbc0038I Pass  74: suminf.    2.93312 (22) obj. -37.9186 iterations 34
Cbc0038I Pass  75: suminf.    2.72305 (21) obj. -37.9186 iterations 10
Cbc0038I Pass  76: suminf.    2.82281 (20) obj. -37.9186 iterations 23
Cbc0038I Pass  77: suminf.    2.82281 (20) obj. -37.9186 iterations 1
Cbc0038I Pass  78: suminf.    2.82782 (20) obj. -37.9186 iterations 5
Cbc0038I Pass  79: suminf.    2.82782 (20) obj. -37.9186 iterations 3
Cbc0038I Pass  80: suminf.    2.82281 (20) obj. -37.9186 iterations 5
Cbc0038I Pass  81: suminf.    3.61272 (26) obj. -37.9186 iterations 31
Cbc0038I Pass  82: suminf.    3.06632 (24) obj. -37.9186 iterations 18
Cbc0038I Pass  83: suminf.    3.87062 (22) obj. -37.9186 iterations 16
Cbc0038I Pass  84: suminf.    3.87062 (22) obj. -37.9186 iterations 2
Cbc0038I Pass  85: suminf.    3.33235 (20) obj. -37.9186 iterations 22
Cbc0038I Pass  86: suminf.    2.98336 (23) obj. -37.9186 iterations 10
Cbc0038I Pass  87: suminf.    3.20870 (21) obj. -37.9186 iterations 11
Cbc0038I Pass  88: suminf.    2.96678 (23) obj. -37.9186 iterations 5
Cbc0038I Pass  89: suminf.    3.20870 (21) obj. -37.9186 iterations 8
Cbc0038I Pass  90: suminf.    2.69062 (21) obj. -37.9186 iterations 39
Cbc0038I Pass  91: suminf.    2.62375 (20) obj. -37.9807 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -19.7209 - took 0.09 seconds
Cbc0012I Integer solution of -19.72089 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 0 rows 0 columns
Cbc0031I 73 added rows had average density of 47.123288
Cbc0013I At root node, 73 cuts changed objective from -61.473442 to -31.156697 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23503 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1768 row cuts average 139.3 elements, 0 column cuts (0 active)  in 0.284 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 844 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1895 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.222 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 394 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.536 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.72089 best solution, best possible -31.156697 (3.29 seconds)
Cbc0010I After 3 nodes, 4 on tree, -19.72089 best solution, best possible -31.156697 (4.02 seconds)
Cbc0012I Integer solution of -22.9816 found by rounding after 8262 iterations and 8 nodes (4.49 seconds)
Cbc0012I Integer solution of -23.27422 found by rounding after 8271 iterations and 11 nodes (4.50 seconds)
Cbc0012I Integer solution of -23.4047 found by DiveCoefficient after 8271 iterations and 11 nodes (4.50 seconds)
Cbc0012I Integer solution of -23.42313 found by DiveCoefficient after 8275 iterations and 12 nodes (4.50 seconds)
Cbc0004I Integer solution of -24.06628 found after 8288 iterations and 15 nodes (4.50 seconds)
Cbc0010I After 23 nodes, 9 on tree, -24.06628 best solution, best possible -31.156697 (4.73 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 31 rows 47 columns
Cbc0038I Full problem 129 rows 147 columns, reduced to 60 rows 80 columns
Cbc0010I After 91 nodes, 14 on tree, -24.06628 best solution, best possible -31.156697 (5.44 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 41 rows 59 columns
Cbc0010I After 201 nodes, 18 on tree, -24.06628 best solution, best possible -31.156697 (6.14 seconds)
Cbc0038I Full problem 129 rows 147 columns, reduced to 61 rows 84 columns
Cbc0010I After 300 nodes, 14 on tree, -24.06628 best solution, best possible -31.156697 (7.12 seconds)
Cbc0001I Search completed - best objective -24.06628000000001, took 22064 iterations and 412 nodes (7.68 seconds)
Cbc0032I Strong branching done 3732 times (65663 iterations), fathomed 24 nodes and fixed 76 variables
Cbc0035I Maximum depth 28, 602 variables fixed on reduced cost
Total time (CPU seconds):       6.93   (Wallclock seconds):       7.71

