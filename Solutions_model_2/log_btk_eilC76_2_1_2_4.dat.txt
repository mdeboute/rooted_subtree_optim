Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 76 (-2) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 1.51171e-05 - average 1.15398e-07, 6 fixed columns
Coin0506I Presolve 120 (-11) rows, 70 (-6) columns and 373 (-33) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 3.1587153 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 35.402032
Clp0000I Optimal - objective value 35.402032
Coin0511I After Postsolve, objective 35.402032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.402032
Clp0000I Optimal - objective value 35.402032
Clp0000I Optimal - objective value 35.402032
Coin0511I After Postsolve, objective 35.402032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.40203232 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 76 columns (75 integer (75 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 9.63045
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.25608 iterations 50
Cbc0038I Solution found of 5.25608
Cbc0038I Relaxing continuous gives 5.25608
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 96 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 5.25608 to -5.44066 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.43689
Cbc0038I Pass   2: suminf.    1.55808 (7) obj. -8.43689 iterations 7
Cbc0038I Pass   3: suminf.    1.61404 (8) obj. -8.43689 iterations 9
Cbc0038I Pass   4: suminf.    1.61404 (8) obj. -8.43689 iterations 0
Cbc0038I Pass   5: suminf.    1.88447 (8) obj. -8.43689 iterations 9
Cbc0038I Pass   6: suminf.    1.77529 (7) obj. -8.43689 iterations 1
Cbc0038I Pass   7: suminf.    2.63436 (8) obj. -8.43689 iterations 8
Cbc0038I Pass   8: suminf.    1.68447 (5) obj. -8.43689 iterations 2
Cbc0038I Pass   9: suminf.    1.23240 (5) obj. -8.43689 iterations 2
Cbc0038I Pass  10: suminf.    1.69709 (7) obj. -8.43689 iterations 4
Cbc0038I Pass  11: suminf.    1.57272 (6) obj. -8.43689 iterations 1
Cbc0038I Pass  12: suminf.    2.11420 (6) obj. -8.43689 iterations 5
Cbc0038I Pass  13: suminf.    2.85145 (10) obj. -8.43689 iterations 17
Cbc0038I Pass  14: suminf.    2.40442 (8) obj. -8.43689 iterations 9
Cbc0038I Pass  15: suminf.    1.60531 (7) obj. -8.43689 iterations 15
Cbc0038I Pass  16: suminf.    1.52453 (5) obj. -8.43689 iterations 2
Cbc0038I Pass  17: suminf.    2.03515 (5) obj. -8.43689 iterations 4
Cbc0038I Pass  18: suminf.    2.03515 (5) obj. -8.43689 iterations 1
Cbc0038I Pass  19: suminf.    1.52453 (5) obj. -8.43689 iterations 3
Cbc0038I Pass  20: suminf.    1.38304 (8) obj. -8.43689 iterations 18
Cbc0038I Pass  21: suminf.    0.95891 (4) obj. -8.43689 iterations 8
Cbc0038I Pass  22: suminf.    1.03943 (3) obj. -8.43689 iterations 2
Cbc0038I Pass  23: suminf.    0.95994 (3) obj. -8.43689 iterations 1
Cbc0038I Pass  24: suminf.    1.05367 (3) obj. -8.43689 iterations 3
Cbc0038I Pass  25: suminf.    3.41798 (13) obj. -8.43689 iterations 17
Cbc0038I Pass  26: suminf.    2.10980 (7) obj. -8.43689 iterations 12
Cbc0038I Pass  27: suminf.    2.10980 (7) obj. -8.43689 iterations 0
Cbc0038I Pass  28: suminf.    1.42542 (5) obj. -8.43689 iterations 8
Cbc0038I Pass  29: suminf.    1.34345 (4) obj. -8.43689 iterations 1
Cbc0038I Pass  30: suminf.    0.72177 (3) obj. -8.43689 iterations 2
Cbc0038I Pass  31: suminf.    1.42542 (5) obj. -8.43689 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 102 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -5.44066 - took 0.08 seconds
Cbc0012I Integer solution of -5.44066 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 96 rows 58 columns
Cbc0031I 27 added rows had average density of 67.851852
Cbc0013I At root node, 27 cuts changed objective from -35.402032 to -27.544731 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18471 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2192 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 182 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.44066 best solution, best possible -27.544731 (1.27 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 77 rows 46 columns
Cbc0001I Search completed - best objective -5.44066, took 13859 iterations and 78 nodes (1.62 seconds)
Cbc0032I Strong branching done 866 times (17491 iterations), fathomed 5 nodes and fixed 26 variables
Cbc0035I Maximum depth 28, 132 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       1.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 118 (-34) columns and 2049 (-1254) elements
Clp1000I sum of infeasibilities 1.17985e-07 - average 1.19177e-09, 27 fixed columns
Coin0506I Presolve 78 (-21) rows, 90 (-28) columns and 1215 (-834) elements
Clp0006I 0  Obj 52.642654 Dual inf 3.6293688 (89)
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.0132755 - largest nonzero change 2.1063116e-05 ( 0.0015420975%) - largest zero change 2.9914621e-05
Clp0000I Optimal - objective value 60.014083
Clp0000I Optimal - objective value 60.014083
Coin0511I After Postsolve, objective 60.014083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.014083
Clp0000I Optimal - objective value 60.014083
Clp0000I Optimal - objective value 60.014083
Clp0000I Optimal - objective value 60.014083
Coin0511I After Postsolve, objective 60.014083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.01408317 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 118 columns (118 integer (118 of which binary)) and 2051 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.41898
Cbc0038I Pass   1: suminf.    4.41898 (36) obj. -47.2651 iterations 10
Cbc0038I Pass   2: suminf.    2.64885 (23) obj. -28.2662 iterations 13
Cbc0038I Pass   3: suminf.    1.42554 (13) obj. -15.1033 iterations 10
Cbc0038I Solution found of 1.79857
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.10789
Cbc0038I Pass   4: suminf.    4.41898 (36) obj. -47.2651 iterations 0
Cbc0038I Pass   5: suminf.    2.77583 (24) obj. -30.0122 iterations 12
Cbc0038I Pass   6: suminf.    0.29908 (1) obj. -3.10789 iterations 26
Cbc0038I Pass   7: suminf.    0.13699 (1) obj. -4.24253 iterations 2
Cbc0038I Pass   8: suminf.    3.04554 (18) obj. -3.10789 iterations 27
Cbc0038I Pass   9: suminf.    1.17513 (11) obj. -3.10789 iterations 11
Cbc0038I Pass  10: suminf.    0.45651 (4) obj. -3.10789 iterations 11
Cbc0038I Pass  11: suminf.    0.45651 (4) obj. -3.10789 iterations 0
Cbc0038I Pass  12: suminf.    0.69111 (4) obj. -3.10789 iterations 8
Cbc0038I Pass  13: suminf.    0.41690 (4) obj. -3.57239 iterations 5
Cbc0038I Pass  14: suminf.    0.70447 (3) obj. -3.10789 iterations 7
Cbc0038I Pass  15: suminf.    1.79028 (19) obj. -3.10789 iterations 41
Cbc0038I Pass  16: suminf.    1.62008 (14) obj. -3.10789 iterations 11
Cbc0038I Pass  17: suminf.    0.75977 (7) obj. -3.10789 iterations 17
Cbc0038I Pass  18: suminf.    0.65685 (7) obj. -3.10789 iterations 2
Cbc0038I Pass  19: suminf.    1.22508 (8) obj. -3.10789 iterations 14
Cbc0038I Pass  20: suminf.    1.22508 (8) obj. -3.10789 iterations 0
Cbc0038I Pass  21: suminf.    1.65340 (5) obj. -3.10789 iterations 8
Cbc0038I Pass  22: suminf.    1.36282 (5) obj. -3.10789 iterations 8
Cbc0038I Pass  23: suminf.    1.23816 (5) obj. -3.10789 iterations 8
Cbc0038I Pass  24: suminf.    0.47872 (5) obj. -3.10789 iterations 4
Cbc0038I Pass  25: suminf.    0.53093 (3) obj. -3.10789 iterations 8
Cbc0038I Pass  26: suminf.    0.32722 (4) obj. -3.10789 iterations 2
Cbc0038I Pass  27: suminf.    0.28079 (4) obj. -3.10789 iterations 6
Cbc0038I Pass  28: suminf.    0.28079 (4) obj. -3.10789 iterations 2
Cbc0038I Pass  29: suminf.    0.32722 (4) obj. -3.10789 iterations 6
Cbc0038I Pass  30: suminf.    1.59915 (11) obj. -6.67853 iterations 28
Cbc0038I Pass  31: suminf.    1.08500 (10) obj. -5.23236 iterations 7
Cbc0038I Pass  32: suminf.    0.92421 (5) obj. -3.10789 iterations 12
Cbc0038I Pass  33: suminf.    0.81119 (6) obj. -3.10789 iterations 3
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 6 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -11.9393
Cbc0038I Pass  33: suminf.    4.41898 (36) obj. -47.2651 iterations 0
Cbc0038I Pass  34: suminf.    3.03307 (26) obj. -32.6268 iterations 10
Cbc0038I Pass  35: suminf.    1.78164 (16) obj. -19.5084 iterations 10
Cbc0038I Pass  36: suminf.    0.84969 (7) obj. -11.9393 iterations 15
Cbc0038I Pass  37: suminf.    0.84969 (7) obj. -11.9393 iterations 0
Cbc0038I Pass  38: suminf.    0.57139 (4) obj. -11.9393 iterations 12
Cbc0038I Pass  39: suminf.    0.49250 (4) obj. -12.176 iterations 4
Cbc0038I Pass  40: suminf.    0.57139 (4) obj. -11.9393 iterations 5
Cbc0038I Pass  41: suminf.    0.76045 (8) obj. -11.9393 iterations 15
Cbc0038I Pass  42: suminf.    0.72729 (6) obj. -12.0673 iterations 8
Cbc0038I Pass  43: suminf.    0.87417 (5) obj. -11.9393 iterations 12
Cbc0038I Pass  44: suminf.    0.87417 (5) obj. -11.9393 iterations 1
Cbc0038I Pass  45: suminf.    0.94043 (5) obj. -11.9393 iterations 2
Cbc0038I Pass  46: suminf.    0.59964 (5) obj. -12.9617 iterations 4
Cbc0038I Pass  47: suminf.    1.14781 (15) obj. -11.9393 iterations 13
Cbc0038I Pass  48: suminf.    1.11805 (12) obj. -11.9393 iterations 6
Cbc0038I Pass  49: suminf.    2.14014 (12) obj. -11.9393 iterations 20
Cbc0038I Pass  50: suminf.    2.12047 (12) obj. -11.9393 iterations 6
Cbc0038I Pass  51: suminf.    1.51524 (11) obj. -11.9393 iterations 9
Cbc0038I Pass  52: suminf.    1.21435 (11) obj. -11.9393 iterations 4
Cbc0038I Pass  53: suminf.    2.16823 (11) obj. -11.9393 iterations 25
Cbc0038I Pass  54: suminf.    1.62359 (10) obj. -11.9393 iterations 5
Cbc0038I Pass  55: suminf.    1.35728 (11) obj. -11.9393 iterations 3
Cbc0038I Pass  56: suminf.    2.19875 (11) obj. -11.9393 iterations 12
Cbc0038I Pass  57: suminf.    1.95261 (11) obj. -11.9393 iterations 2
Cbc0038I Pass  58: suminf.    2.22859 (11) obj. -11.9393 iterations 16
Cbc0038I Pass  59: suminf.    1.62359 (10) obj. -11.9393 iterations 5
Cbc0038I Pass  60: suminf.    1.39444 (11) obj. -11.9393 iterations 2
Cbc0038I Pass  61: suminf.    2.19875 (11) obj. -11.9393 iterations 10
Cbc0038I Pass  62: suminf.    1.95261 (11) obj. -11.9393 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 1.79857 - took 0.05 seconds
Cbc0012I Integer solution of 1.79857 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 56 added rows had average density of 28.339286
Cbc0013I At root node, 56 cuts changed objective from -47.265082 to -11.583166 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19455 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1804 row cuts average 112.6 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 677 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1406 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 101 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.674 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.79857 best solution, best possible -11.583166 (2.74 seconds)
Cbc0012I Integer solution of -3.44066 found by rounding after 6365 iterations and 2 nodes (3.05 seconds)
Cbc0012I Integer solution of -3.91773 found by rounding after 6769 iterations and 10 nodes (3.46 seconds)
Cbc0010I After 10 nodes, 7 on tree, -3.91773 best solution, best possible -11.583166 (3.46 seconds)
Cbc0012I Integer solution of -4.24586 found by rounding after 7045 iterations and 17 nodes (3.71 seconds)
Cbc0012I Integer solution of -5.15329 found by rounding after 7153 iterations and 21 nodes (3.74 seconds)
Cbc0038I Full problem 99 rows 118 columns, reduced to 41 rows 54 columns
Cbc0012I Integer solution of -5.44066 found by rounding after 8640 iterations and 66 nodes (4.05 seconds)
Cbc0001I Search completed - best objective -5.44066, took 8640 iterations and 66 nodes (4.05 seconds)
Cbc0032I Strong branching done 728 times (13254 iterations), fathomed 9 nodes and fixed 17 variables
Cbc0035I Maximum depth 20, 112 variables fixed on reduced cost
Total time (CPU seconds):       3.21   (Wallclock seconds):       4.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 76 (-2) columns and 406 (-47) elements
Clp1000I sum of infeasibilities 1.51171e-05 - average 1.15398e-07, 6 fixed columns
Coin0506I Presolve 120 (-11) rows, 70 (-6) columns and 373 (-33) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 3.1587153 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 35.402032
Clp0000I Optimal - objective value 35.402032
Coin0511I After Postsolve, objective 35.402032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.402032
Clp0000I Optimal - objective value 35.402032
Clp0000I Optimal - objective value 35.402032
Coin0511I After Postsolve, objective 35.402032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.40203232 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 76 columns (75 integer (75 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.109%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 57 integers unsatisfied sum - 9.63045
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.25608 iterations 50
Cbc0038I Solution found of 5.25608
Cbc0038I Relaxing continuous gives 5.25608
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 96 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 5.25608 to -5.44066 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.43689
Cbc0038I Pass   2: suminf.    1.55808 (7) obj. -8.43689 iterations 7
Cbc0038I Pass   3: suminf.    1.61404 (8) obj. -8.43689 iterations 9
Cbc0038I Pass   4: suminf.    1.61404 (8) obj. -8.43689 iterations 0
Cbc0038I Pass   5: suminf.    1.88447 (8) obj. -8.43689 iterations 9
Cbc0038I Pass   6: suminf.    1.77529 (7) obj. -8.43689 iterations 1
Cbc0038I Pass   7: suminf.    2.63436 (8) obj. -8.43689 iterations 8
Cbc0038I Pass   8: suminf.    1.68447 (5) obj. -8.43689 iterations 2
Cbc0038I Pass   9: suminf.    1.23240 (5) obj. -8.43689 iterations 2
Cbc0038I Pass  10: suminf.    1.69709 (7) obj. -8.43689 iterations 4
Cbc0038I Pass  11: suminf.    1.57272 (6) obj. -8.43689 iterations 1
Cbc0038I Pass  12: suminf.    2.11420 (6) obj. -8.43689 iterations 5
Cbc0038I Pass  13: suminf.    2.85145 (10) obj. -8.43689 iterations 17
Cbc0038I Pass  14: suminf.    2.40442 (8) obj. -8.43689 iterations 9
Cbc0038I Pass  15: suminf.    1.60531 (7) obj. -8.43689 iterations 15
Cbc0038I Pass  16: suminf.    1.52453 (5) obj. -8.43689 iterations 2
Cbc0038I Pass  17: suminf.    2.03515 (5) obj. -8.43689 iterations 4
Cbc0038I Pass  18: suminf.    2.03515 (5) obj. -8.43689 iterations 1
Cbc0038I Pass  19: suminf.    1.52453 (5) obj. -8.43689 iterations 3
Cbc0038I Pass  20: suminf.    1.38304 (8) obj. -8.43689 iterations 18
Cbc0038I Pass  21: suminf.    0.95891 (4) obj. -8.43689 iterations 8
Cbc0038I Pass  22: suminf.    1.03943 (3) obj. -8.43689 iterations 2
Cbc0038I Pass  23: suminf.    0.95994 (3) obj. -8.43689 iterations 1
Cbc0038I Pass  24: suminf.    1.05367 (3) obj. -8.43689 iterations 3
Cbc0038I Pass  25: suminf.    3.41798 (13) obj. -8.43689 iterations 17
Cbc0038I Pass  26: suminf.    2.10980 (7) obj. -8.43689 iterations 12
Cbc0038I Pass  27: suminf.    2.10980 (7) obj. -8.43689 iterations 0
Cbc0038I Pass  28: suminf.    1.42542 (5) obj. -8.43689 iterations 8
Cbc0038I Pass  29: suminf.    1.34345 (4) obj. -8.43689 iterations 1
Cbc0038I Pass  30: suminf.    0.72177 (3) obj. -8.43689 iterations 2
Cbc0038I Pass  31: suminf.    1.42542 (5) obj. -8.43689 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 76 columns, reduced to 102 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -5.44066 - took 0.09 seconds
Cbc0012I Integer solution of -5.44066 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 96 rows 58 columns
Cbc0031I 27 added rows had average density of 67.851852
Cbc0013I At root node, 27 cuts changed objective from -35.402032 to -27.544731 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18471 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2192 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 182 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.44066 best solution, best possible -27.544731 (1.39 seconds)
Cbc0038I Full problem 131 rows 76 columns, reduced to 77 rows 46 columns
Cbc0001I Search completed - best objective -5.44066, took 13859 iterations and 78 nodes (1.78 seconds)
Cbc0032I Strong branching done 866 times (17491 iterations), fathomed 5 nodes and fixed 26 variables
Cbc0035I Maximum depth 28, 132 variables fixed on reduced cost
Total time (CPU seconds):       1.72   (Wallclock seconds):       1.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 118 (-35) columns and 2049 (-1255) elements
Clp1000I sum of infeasibilities 1.17985e-07 - average 1.19177e-09, 27 fixed columns
Coin0506I Presolve 78 (-21) rows, 90 (-28) columns and 1215 (-834) elements
Clp0006I 0  Obj 52.642654 Dual inf 3.6293688 (89)
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.0132755 - largest nonzero change 2.1063116e-05 ( 0.0015420975%) - largest zero change 2.9914621e-05
Clp0000I Optimal - objective value 60.014083
Clp0000I Optimal - objective value 60.014083
Coin0511I After Postsolve, objective 60.014083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.014083
Clp0000I Optimal - objective value 60.014083
Clp0000I Optimal - objective value 60.014083
Clp0000I Optimal - objective value 60.014083
Coin0511I After Postsolve, objective 60.014083, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.01408317 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 118 columns (118 integer (118 of which binary)) and 2051 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.41898
Cbc0038I Pass   1: suminf.    4.41898 (36) obj. -47.2651 iterations 10
Cbc0038I Pass   2: suminf.    2.64885 (23) obj. -28.2662 iterations 13
Cbc0038I Pass   3: suminf.    1.42554 (13) obj. -15.1033 iterations 10
Cbc0038I Solution found of 1.79857
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.10789
Cbc0038I Pass   4: suminf.    4.41898 (36) obj. -47.2651 iterations 0
Cbc0038I Pass   5: suminf.    2.77583 (24) obj. -30.0122 iterations 12
Cbc0038I Pass   6: suminf.    0.29908 (1) obj. -3.10789 iterations 26
Cbc0038I Pass   7: suminf.    0.13699 (1) obj. -4.24253 iterations 2
Cbc0038I Pass   8: suminf.    3.04554 (18) obj. -3.10789 iterations 27
Cbc0038I Pass   9: suminf.    1.17513 (11) obj. -3.10789 iterations 11
Cbc0038I Pass  10: suminf.    0.45651 (4) obj. -3.10789 iterations 11
Cbc0038I Pass  11: suminf.    0.45651 (4) obj. -3.10789 iterations 0
Cbc0038I Pass  12: suminf.    0.69111 (4) obj. -3.10789 iterations 8
Cbc0038I Pass  13: suminf.    0.41690 (4) obj. -3.57239 iterations 5
Cbc0038I Pass  14: suminf.    0.70447 (3) obj. -3.10789 iterations 7
Cbc0038I Pass  15: suminf.    1.79028 (19) obj. -3.10789 iterations 41
Cbc0038I Pass  16: suminf.    1.62008 (14) obj. -3.10789 iterations 11
Cbc0038I Pass  17: suminf.    0.75977 (7) obj. -3.10789 iterations 17
Cbc0038I Pass  18: suminf.    0.65685 (7) obj. -3.10789 iterations 2
Cbc0038I Pass  19: suminf.    1.22508 (8) obj. -3.10789 iterations 14
Cbc0038I Pass  20: suminf.    1.22508 (8) obj. -3.10789 iterations 0
Cbc0038I Pass  21: suminf.    1.65340 (5) obj. -3.10789 iterations 8
Cbc0038I Pass  22: suminf.    1.36282 (5) obj. -3.10789 iterations 8
Cbc0038I Pass  23: suminf.    1.23816 (5) obj. -3.10789 iterations 8
Cbc0038I Pass  24: suminf.    0.47872 (5) obj. -3.10789 iterations 4
Cbc0038I Pass  25: suminf.    0.53093 (3) obj. -3.10789 iterations 8
Cbc0038I Pass  26: suminf.    0.32722 (4) obj. -3.10789 iterations 2
Cbc0038I Pass  27: suminf.    0.28079 (4) obj. -3.10789 iterations 6
Cbc0038I Pass  28: suminf.    0.28079 (4) obj. -3.10789 iterations 2
Cbc0038I Pass  29: suminf.    0.32722 (4) obj. -3.10789 iterations 6
Cbc0038I Pass  30: suminf.    1.59915 (11) obj. -6.67853 iterations 28
Cbc0038I Pass  31: suminf.    1.08500 (10) obj. -5.23236 iterations 7
Cbc0038I Pass  32: suminf.    0.92421 (5) obj. -3.10789 iterations 12
Cbc0038I Pass  33: suminf.    0.81119 (6) obj. -3.10789 iterations 3
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 118 columns, reduced to 6 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -11.9393
Cbc0038I Pass  33: suminf.    4.41898 (36) obj. -47.2651 iterations 0
Cbc0038I Pass  34: suminf.    3.03307 (26) obj. -32.6268 iterations 10
Cbc0038I Pass  35: suminf.    1.78164 (16) obj. -19.5084 iterations 10
Cbc0038I Pass  36: suminf.    0.84969 (7) obj. -11.9393 iterations 15
Cbc0038I Pass  37: suminf.    0.84969 (7) obj. -11.9393 iterations 0
Cbc0038I Pass  38: suminf.    0.57139 (4) obj. -11.9393 iterations 12
Cbc0038I Pass  39: suminf.    0.49250 (4) obj. -12.176 iterations 4
Cbc0038I Pass  40: suminf.    0.57139 (4) obj. -11.9393 iterations 5
Cbc0038I Pass  41: suminf.    0.76045 (8) obj. -11.9393 iterations 15
Cbc0038I Pass  42: suminf.    0.72729 (6) obj. -12.0673 iterations 8
Cbc0038I Pass  43: suminf.    0.87417 (5) obj. -11.9393 iterations 12
Cbc0038I Pass  44: suminf.    0.87417 (5) obj. -11.9393 iterations 1
Cbc0038I Pass  45: suminf.    0.94043 (5) obj. -11.9393 iterations 2
Cbc0038I Pass  46: suminf.    0.59964 (5) obj. -12.9617 iterations 4
Cbc0038I Pass  47: suminf.    1.14781 (15) obj. -11.9393 iterations 13
Cbc0038I Pass  48: suminf.    1.11805 (12) obj. -11.9393 iterations 6
Cbc0038I Pass  49: suminf.    2.14014 (12) obj. -11.9393 iterations 20
Cbc0038I Pass  50: suminf.    2.12047 (12) obj. -11.9393 iterations 6
Cbc0038I Pass  51: suminf.    1.51524 (11) obj. -11.9393 iterations 9
Cbc0038I Pass  52: suminf.    1.21435 (11) obj. -11.9393 iterations 4
Cbc0038I Pass  53: suminf.    2.16823 (11) obj. -11.9393 iterations 25
Cbc0038I Pass  54: suminf.    1.62359 (10) obj. -11.9393 iterations 5
Cbc0038I Pass  55: suminf.    1.35728 (11) obj. -11.9393 iterations 3
Cbc0038I Pass  56: suminf.    2.19875 (11) obj. -11.9393 iterations 12
Cbc0038I Pass  57: suminf.    1.95261 (11) obj. -11.9393 iterations 2
Cbc0038I Pass  58: suminf.    2.22859 (11) obj. -11.9393 iterations 16
Cbc0038I Pass  59: suminf.    1.62359 (10) obj. -11.9393 iterations 5
Cbc0038I Pass  60: suminf.    1.39444 (11) obj. -11.9393 iterations 2
Cbc0038I Pass  61: suminf.    2.19875 (11) obj. -11.9393 iterations 10
Cbc0038I Pass  62: suminf.    1.95261 (11) obj. -11.9393 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 1.79857 - took 0.05 seconds
Cbc0012I Integer solution of 1.79857 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 56 added rows had average density of 28.339286
Cbc0013I At root node, 56 cuts changed objective from -47.265082 to -11.583166 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19455 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1804 row cuts average 112.6 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 677 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1406 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 101 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.714 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1.79857 best solution, best possible -11.583166 (2.98 seconds)
Cbc0012I Integer solution of -3.44066 found by rounding after 6365 iterations and 2 nodes (3.29 seconds)
Cbc0010I After 8 nodes, 7 on tree, -3.44066 best solution, best possible -11.583166 (3.68 seconds)
Cbc0012I Integer solution of -3.91773 found by rounding after 6769 iterations and 10 nodes (3.73 seconds)
Cbc0012I Integer solution of -4.24586 found by rounding after 7045 iterations and 17 nodes (4.02 seconds)
Cbc0012I Integer solution of -5.15329 found by rounding after 7153 iterations and 21 nodes (4.06 seconds)
Cbc0038I Full problem 99 rows 118 columns, reduced to 41 rows 54 columns
Cbc0010I After 46 nodes, 10 on tree, -5.15329 best solution, best possible -11.583166 (4.38 seconds)
Cbc0012I Integer solution of -5.44066 found by rounding after 8640 iterations and 66 nodes (4.42 seconds)
Cbc0001I Search completed - best objective -5.44066, took 8640 iterations and 66 nodes (4.42 seconds)
Cbc0032I Strong branching done 728 times (13254 iterations), fathomed 9 nodes and fixed 17 variables
Cbc0035I Maximum depth 20, 112 variables fixed on reduced cost
Total time (CPU seconds):       3.45   (Wallclock seconds):       4.45

