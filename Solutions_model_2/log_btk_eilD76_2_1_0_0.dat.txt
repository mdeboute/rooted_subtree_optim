Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 74 (-4) columns and 409 (-44) elements
Clp1000I sum of infeasibilities 6.25348e-06 - average 4.66678e-08, 65 fixed columns
Coin0506I Presolve 7 (-127) rows, 7 (-67) columns and 18 (-391) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 4181.1497
Clp0000I Optimal - objective value 4181.1497
Coin0511I After Postsolve, objective 4181.1497, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4181.1497
Clp0000I Optimal - objective value 4181.1497
Clp0000I Optimal - objective value 4181.1497
Coin0511I After Postsolve, objective 4181.1497, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4181.149693 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 74 columns (73 integer (73 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.197%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.494845
Cbc0038I Pass   1: suminf.    0.49485 (4) obj. -4181.15 iterations 1
Cbc0038I Solution found of -3419.07
Cbc0038I Relaxing continuous gives -3423.77
Cbc0038I Rounding solution of -3434.43 is better than previous of -3423.77

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3509.1
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.49485 (4) obj. -4181.15 iterations 0
Cbc0038I Pass   3: suminf.    0.39248 (4) obj. -3509.1 iterations 9
Cbc0038I Pass   4: suminf.    0.47204 (7) obj. -3509.1 iterations 12
Cbc0038I Pass   5: suminf.    0.31516 (5) obj. -3509.1 iterations 12
Cbc0038I Pass   6: suminf.    1.15464 (4) obj. -3722.16 iterations 3
Cbc0038I Pass   7: suminf.    0.17470 (4) obj. -3509.1 iterations 2
Cbc0038I Pass   8: suminf.    0.36138 (6) obj. -3509.1 iterations 16
Cbc0038I Pass   9: suminf.    0.36138 (6) obj. -3509.1 iterations 2
Cbc0038I Pass  10: suminf.    1.64948 (4) obj. -3794.11 iterations 5
Cbc0038I Pass  11: suminf.    0.33861 (4) obj. -3509.1 iterations 2
Cbc0038I Pass  12: suminf.    0.80056 (6) obj. -3509.1 iterations 17
Cbc0038I Pass  13: suminf.    0.43253 (4) obj. -3509.1 iterations 12
Cbc0038I Pass  14: suminf.    0.57732 (4) obj. -3540.58 iterations 3
Cbc0038I Pass  15: suminf.    0.25701 (3) obj. -3509.1 iterations 17
Cbc0038I Pass  16: suminf.    0.25701 (3) obj. -3509.1 iterations 4
Cbc0038I Pass  17: suminf.    1.07143 (3) obj. -3977.01 iterations 16
Cbc0038I Pass  18: suminf.    0.31446 (3) obj. -3509.1 iterations 2
Cbc0038I Pass  19: suminf.    1.03123 (7) obj. -3509.1 iterations 11
Cbc0038I Pass  20: suminf.    0.37751 (4) obj. -3509.1 iterations 10
Cbc0038I Pass  21: suminf.    0.86598 (4) obj. -3615.31 iterations 3
Cbc0038I Pass  22: suminf.    1.27149 (8) obj. -3509.1 iterations 9
Cbc0038I Pass  23: suminf.    1.10997 (7) obj. -3509.1 iterations 3
Cbc0038I Pass  24: suminf.    1.93814 (4) obj. -3851.9 iterations 7
Cbc0038I Pass  25: suminf.    0.36146 (4) obj. -3509.1 iterations 2
Cbc0038I Pass  26: suminf.    0.87854 (6) obj. -3509.1 iterations 7
Cbc0038I Pass  27: suminf.    0.42831 (5) obj. -3509.1 iterations 5
Cbc0038I Pass  28: suminf.    1.48454 (4) obj. -3758.6 iterations 6
Cbc0038I Pass  29: suminf.    0.33698 (4) obj. -3509.1 iterations 2
Cbc0038I Pass  30: suminf.    0.73849 (7) obj. -3509.1 iterations 10
Cbc0038I Pass  31: suminf.    0.52660 (6) obj. -3509.1 iterations 6
Cbc0038I Rounding solution of -3471.12 is better than previous of -3434.43

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 32 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -3471.12 to -3488.16 (0.02 seconds)
Cbc0038I Round again with cutoff of -3643.51
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.49485 (4) obj. -4181.15 iterations 0
Cbc0038I Pass  32: suminf.    1.01069 (4) obj. -3643.51 iterations 9
Cbc0038I Pass  33: suminf.    1.33789 (9) obj. -3643.51 iterations 17
Cbc0038I Pass  34: suminf.    1.04275 (4) obj. -3643.51 iterations 13
Cbc0038I Pass  35: suminf.    1.19588 (4) obj. -3676.81 iterations 3
Cbc0038I Pass  36: suminf.    2.02479 (7) obj. -3643.51 iterations 16
Cbc0038I Pass  37: suminf.    1.58488 (6) obj. -3643.51 iterations 8
Cbc0038I Pass  38: suminf.    1.89691 (4) obj. -3883.91 iterations 6
Cbc0038I Pass  39: suminf.    0.99737 (4) obj. -3643.51 iterations 2
Cbc0038I Pass  40: suminf.    1.16450 (6) obj. -3643.51 iterations 17
Cbc0038I Pass  41: suminf.    0.96655 (4) obj. -3643.51 iterations 7
Cbc0038I Pass  42: suminf.    1.28589 (5) obj. -3643.51 iterations 2
Cbc0038I Pass  43: suminf.    2.23552 (7) obj. -3643.51 iterations 8
Cbc0038I Pass  44: suminf.    2.23552 (7) obj. -3643.51 iterations 0
Cbc0038I Pass  45: suminf.    1.64948 (4) obj. -3795.65 iterations 6
Cbc0038I Pass  46: suminf.    0.94971 (4) obj. -3643.51 iterations 2
Cbc0038I Pass  47: suminf.    1.71029 (6) obj. -3643.51 iterations 7
Cbc0038I Pass  48: suminf.    0.98755 (4) obj. -3643.51 iterations 6
Cbc0038I Pass  49: suminf.    1.56701 (4) obj. -3769.5 iterations 3
Cbc0038I Pass  50: suminf.    1.65802 (7) obj. -3643.51 iterations 7
Cbc0038I Pass  51: suminf.    1.00165 (4) obj. -3643.51 iterations 6
Cbc0038I Pass  52: suminf.    1.44330 (4) obj. -3739.54 iterations 3
Cbc0038I Pass  53: suminf.    1.56158 (5) obj. -3643.51 iterations 9
Cbc0038I Pass  54: suminf.    1.56158 (5) obj. -3643.51 iterations 3
Cbc0038I Pass  55: suminf.    1.64948 (4) obj. -3789.28 iterations 6
Cbc0038I Pass  56: suminf.    0.97901 (4) obj. -3643.51 iterations 1
Cbc0038I Pass  57: suminf.    1.64948 (4) obj. -3789.28 iterations 3
Cbc0038I Pass  58: suminf.    1.40091 (6) obj. -3643.51 iterations 17
Cbc0038I Pass  59: suminf.    0.92112 (4) obj. -3643.51 iterations 10
Cbc0038I Pass  60: suminf.    1.21159 (5) obj. -3643.51 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 26 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3488.16 - took 0.02 seconds
Cbc0012I Integer solution of -3488.1567 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 134 rows 74 columns, reduced to 9 rows 11 columns
Cbc0031I 5 added rows had average density of 4.2
Cbc0013I At root node, 12 cuts changed objective from -4181.1497 to -3488.1567 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 2.4 elements, 14 column cuts (14 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3488.15669, took 33 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 115 (-37) columns and 2000 (-1303) elements
Clp1000I sum of infeasibilities 3.26136e-05 - average 3.16637e-07, 71 fixed columns
Coin0506I Presolve 42 (-61) rows, 44 (-71) columns and 193 (-1807) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 4227.5271
Clp0000I Optimal - objective value 4227.5271
Coin0511I After Postsolve, objective 4227.5271, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9843228 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 4227.5271
Clp0000I Optimal - objective value 4227.5271
Clp0000I Optimal - objective value 4227.5271
Coin0511I After Postsolve, objective 4227.5271, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4227.527148 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 120 columns (120 integer (120 of which binary)) and 2022 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.532%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 3.51138
Cbc0038I Pass   1: suminf.    2.23629 (30) obj. -3460.24 iterations 2
Cbc0038I Pass   2: suminf.    2.23629 (30) obj. -3460.24 iterations 0
Cbc0038I Pass   3: suminf.    0.19154 (5) obj. -3426.57 iterations 25
Cbc0038I Solution found of -3420.77
Cbc0038I Rounding solution of -3428.7 is better than previous of -3420.77

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -3507.95
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.35648 (38) obj. -3507.95 iterations 1
Cbc0038I Pass   5: suminf.    2.35648 (38) obj. -3507.95 iterations 0
Cbc0038I Pass   6: suminf.    0.78716 (21) obj. -3507.95 iterations 17
Cbc0038I Pass   7: suminf.    0.22384 (4) obj. -3507.95 iterations 22
Cbc0038I Pass   8: suminf.    0.22384 (4) obj. -3507.95 iterations 0
Cbc0038I Pass   9: suminf.    0.49485 (4) obj. -4173.85 iterations 10
Cbc0038I Pass  10: suminf.    0.44235 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  11: suminf.    2.16191 (18) obj. -3507.95 iterations 22
Cbc0038I Pass  12: suminf.    0.96677 (14) obj. -3507.95 iterations 9
Cbc0038I Pass  13: suminf.    1.69072 (4) obj. -3907 iterations 14
Cbc0038I Pass  14: suminf.    1.69072 (4) obj. -3907 iterations 0
Cbc0038I Pass  15: suminf.    0.47386 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  16: suminf.    2.01116 (16) obj. -3507.95 iterations 23
Cbc0038I Pass  17: suminf.    1.08935 (13) obj. -3507.95 iterations 5
Cbc0038I Pass  18: suminf.    0.98969 (4) obj. -3634.71 iterations 12
Cbc0038I Pass  19: suminf.    0.40664 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  20: suminf.    0.84738 (14) obj. -3507.95 iterations 14
Cbc0038I Pass  21: suminf.    0.72411 (12) obj. -3507.95 iterations 5
Cbc0038I Pass  22: suminf.    0.41237 (4) obj. -3508.65 iterations 11
Cbc0038I Pass  23: suminf.    0.40913 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  24: suminf.    0.83461 (10) obj. -3507.95 iterations 12
Cbc0038I Pass  25: suminf.    0.75410 (9) obj. -3507.95 iterations 2
Cbc0038I Pass  26: suminf.    0.41237 (4) obj. -3516.65 iterations 8
Cbc0038I Pass  27: suminf.    0.37234 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  28: suminf.    0.78944 (9) obj. -3507.95 iterations 13
Cbc0038I Pass  29: suminf.    0.59388 (7) obj. -3507.95 iterations 5
Cbc0038I Pass  30: suminf.    0.49485 (4) obj. -3532.5 iterations 6
Cbc0038I Pass  31: suminf.    0.38193 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  32: suminf.    1.28454 (11) obj. -3507.95 iterations 13
Cbc0038I Pass  33: suminf.    0.82291 (10) obj. -3507.95 iterations 3
Cbc0038I Rounding solution of -3439.25 is better than previous of -3428.7

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 24 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -3439.25 to -3444.04 (0.07 seconds)
Cbc0038I Round again with cutoff of -3650.6
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.71588 (38) obj. -3650.6 iterations 0
Cbc0038I Pass  34: suminf.    2.71588 (38) obj. -3650.6 iterations 0
Cbc0038I Pass  35: suminf.    0.67354 (11) obj. -3650.6 iterations 28
Cbc0038I Pass  36: suminf.    0.67354 (11) obj. -3650.6 iterations 0
Cbc0038I Pass  37: suminf.    0.49485 (4) obj. -4173.85 iterations 19
Cbc0038I Pass  38: suminf.    1.09849 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  39: suminf.    2.35383 (15) obj. -3650.6 iterations 19
Cbc0038I Pass  40: suminf.    1.88861 (14) obj. -3650.6 iterations 2
Cbc0038I Pass  41: suminf.    1.60825 (4) obj. -3767.76 iterations 12
Cbc0038I Pass  42: suminf.    1.06939 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  43: suminf.    1.58496 (11) obj. -3650.6 iterations 14
Cbc0038I Pass  44: suminf.    1.56540 (10) obj. -3650.6 iterations 3
Cbc0038I Pass  45: suminf.    1.11584 (5) obj. -3650.6 iterations 9
Cbc0038I Pass  46: suminf.    1.11584 (5) obj. -3650.6 iterations 0
Cbc0038I Pass  47: suminf.    1.69072 (4) obj. -3784.19 iterations 3
Cbc0038I Pass  48: suminf.    1.07630 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  49: suminf.    2.74174 (13) obj. -3650.6 iterations 12
Cbc0038I Pass  50: suminf.    1.54930 (10) obj. -3650.6 iterations 5
Cbc0038I Pass  51: suminf.    1.21713 (5) obj. -3650.6 iterations 9
Cbc0038I Pass  52: suminf.    1.21713 (5) obj. -3650.6 iterations 0
Cbc0038I Pass  53: suminf.    1.89691 (4) obj. -3862.86 iterations 4
Cbc0038I Pass  54: suminf.    1.89691 (4) obj. -3862.86 iterations 0
Cbc0038I Pass  55: suminf.    1.12684 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  56: suminf.    2.09639 (13) obj. -3650.6 iterations 36
Cbc0038I Pass  57: suminf.    1.53534 (11) obj. -3650.6 iterations 6
Cbc0038I Pass  58: suminf.    1.67123 (4) obj. -3774.39 iterations 10
Cbc0038I Pass  59: suminf.    0.87521 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  60: suminf.    1.85000 (4) obj. -3807.3 iterations 7
Cbc0038I Pass  61: suminf.    1.12929 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  62: suminf.    2.08947 (10) obj. -3650.6 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 18 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -3444.04 - took 0.06 seconds
Cbc0012I Integer solution of -3444.0444 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0012I Integer solution of -3451.9919 found by DiveCoefficient after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 108 rows 120 columns, reduced to 15 rows 18 columns
Cbc0012I Integer solution of -3452.9919 found by RINS after 0 iterations and 0 nodes (0.10 seconds)
Cbc0012I Integer solution of -3488.1567 found by DiveCoefficient after 74 iterations and 0 nodes (0.18 seconds)
Cbc0031I 11 added rows had average density of 29
Cbc0013I At root node, 11 cuts changed objective from -4199.0714 to -3488.1567 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 45.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 36.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3488.15669, took 74 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 74 (-4) columns and 409 (-44) elements
Clp1000I sum of infeasibilities 6.25348e-06 - average 4.66678e-08, 65 fixed columns
Coin0506I Presolve 7 (-127) rows, 7 (-67) columns and 18 (-391) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 4181.1497
Clp0000I Optimal - objective value 4181.1497
Coin0511I After Postsolve, objective 4181.1497, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 4181.1497
Clp0000I Optimal - objective value 4181.1497
Clp0000I Optimal - objective value 4181.1497
Coin0511I After Postsolve, objective 4181.1497, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4181.149693 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 74 columns (73 integer (73 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.197%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.494845
Cbc0038I Pass   1: suminf.    0.49485 (4) obj. -4181.15 iterations 1
Cbc0038I Solution found of -3419.07
Cbc0038I Relaxing continuous gives -3423.77
Cbc0038I Rounding solution of -3434.43 is better than previous of -3423.77

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3509.1
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.49485 (4) obj. -4181.15 iterations 0
Cbc0038I Pass   3: suminf.    0.39248 (4) obj. -3509.1 iterations 9
Cbc0038I Pass   4: suminf.    0.47204 (7) obj. -3509.1 iterations 12
Cbc0038I Pass   5: suminf.    0.31516 (5) obj. -3509.1 iterations 12
Cbc0038I Pass   6: suminf.    1.15464 (4) obj. -3722.16 iterations 3
Cbc0038I Pass   7: suminf.    0.17470 (4) obj. -3509.1 iterations 2
Cbc0038I Pass   8: suminf.    0.36138 (6) obj. -3509.1 iterations 16
Cbc0038I Pass   9: suminf.    0.36138 (6) obj. -3509.1 iterations 2
Cbc0038I Pass  10: suminf.    1.64948 (4) obj. -3794.11 iterations 5
Cbc0038I Pass  11: suminf.    0.33861 (4) obj. -3509.1 iterations 2
Cbc0038I Pass  12: suminf.    0.80056 (6) obj. -3509.1 iterations 17
Cbc0038I Pass  13: suminf.    0.43253 (4) obj. -3509.1 iterations 12
Cbc0038I Pass  14: suminf.    0.57732 (4) obj. -3540.58 iterations 3
Cbc0038I Pass  15: suminf.    0.25701 (3) obj. -3509.1 iterations 17
Cbc0038I Pass  16: suminf.    0.25701 (3) obj. -3509.1 iterations 4
Cbc0038I Pass  17: suminf.    1.07143 (3) obj. -3977.01 iterations 16
Cbc0038I Pass  18: suminf.    0.31446 (3) obj. -3509.1 iterations 2
Cbc0038I Pass  19: suminf.    1.03123 (7) obj. -3509.1 iterations 11
Cbc0038I Pass  20: suminf.    0.37751 (4) obj. -3509.1 iterations 10
Cbc0038I Pass  21: suminf.    0.86598 (4) obj. -3615.31 iterations 3
Cbc0038I Pass  22: suminf.    1.27149 (8) obj. -3509.1 iterations 9
Cbc0038I Pass  23: suminf.    1.10997 (7) obj. -3509.1 iterations 3
Cbc0038I Pass  24: suminf.    1.93814 (4) obj. -3851.9 iterations 7
Cbc0038I Pass  25: suminf.    0.36146 (4) obj. -3509.1 iterations 2
Cbc0038I Pass  26: suminf.    0.87854 (6) obj. -3509.1 iterations 7
Cbc0038I Pass  27: suminf.    0.42831 (5) obj. -3509.1 iterations 5
Cbc0038I Pass  28: suminf.    1.48454 (4) obj. -3758.6 iterations 6
Cbc0038I Pass  29: suminf.    0.33698 (4) obj. -3509.1 iterations 2
Cbc0038I Pass  30: suminf.    0.73849 (7) obj. -3509.1 iterations 10
Cbc0038I Pass  31: suminf.    0.52660 (6) obj. -3509.1 iterations 6
Cbc0038I Rounding solution of -3471.12 is better than previous of -3434.43

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 32 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -3471.12 to -3488.16 (0.02 seconds)
Cbc0038I Round again with cutoff of -3643.51
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.49485 (4) obj. -4181.15 iterations 0
Cbc0038I Pass  32: suminf.    1.01069 (4) obj. -3643.51 iterations 9
Cbc0038I Pass  33: suminf.    1.33789 (9) obj. -3643.51 iterations 17
Cbc0038I Pass  34: suminf.    1.04275 (4) obj. -3643.51 iterations 13
Cbc0038I Pass  35: suminf.    1.19588 (4) obj. -3676.81 iterations 3
Cbc0038I Pass  36: suminf.    2.02479 (7) obj. -3643.51 iterations 16
Cbc0038I Pass  37: suminf.    1.58488 (6) obj. -3643.51 iterations 8
Cbc0038I Pass  38: suminf.    1.89691 (4) obj. -3883.91 iterations 6
Cbc0038I Pass  39: suminf.    0.99737 (4) obj. -3643.51 iterations 2
Cbc0038I Pass  40: suminf.    1.16450 (6) obj. -3643.51 iterations 17
Cbc0038I Pass  41: suminf.    0.96655 (4) obj. -3643.51 iterations 7
Cbc0038I Pass  42: suminf.    1.28589 (5) obj. -3643.51 iterations 2
Cbc0038I Pass  43: suminf.    2.23552 (7) obj. -3643.51 iterations 8
Cbc0038I Pass  44: suminf.    2.23552 (7) obj. -3643.51 iterations 0
Cbc0038I Pass  45: suminf.    1.64948 (4) obj. -3795.65 iterations 6
Cbc0038I Pass  46: suminf.    0.94971 (4) obj. -3643.51 iterations 2
Cbc0038I Pass  47: suminf.    1.71029 (6) obj. -3643.51 iterations 7
Cbc0038I Pass  48: suminf.    0.98755 (4) obj. -3643.51 iterations 6
Cbc0038I Pass  49: suminf.    1.56701 (4) obj. -3769.5 iterations 3
Cbc0038I Pass  50: suminf.    1.65802 (7) obj. -3643.51 iterations 7
Cbc0038I Pass  51: suminf.    1.00165 (4) obj. -3643.51 iterations 6
Cbc0038I Pass  52: suminf.    1.44330 (4) obj. -3739.54 iterations 3
Cbc0038I Pass  53: suminf.    1.56158 (5) obj. -3643.51 iterations 9
Cbc0038I Pass  54: suminf.    1.56158 (5) obj. -3643.51 iterations 3
Cbc0038I Pass  55: suminf.    1.64948 (4) obj. -3789.28 iterations 6
Cbc0038I Pass  56: suminf.    0.97901 (4) obj. -3643.51 iterations 1
Cbc0038I Pass  57: suminf.    1.64948 (4) obj. -3789.28 iterations 3
Cbc0038I Pass  58: suminf.    1.40091 (6) obj. -3643.51 iterations 17
Cbc0038I Pass  59: suminf.    0.92112 (4) obj. -3643.51 iterations 10
Cbc0038I Pass  60: suminf.    1.21159 (5) obj. -3643.51 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 74 columns, reduced to 26 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -3488.16 - took 0.02 seconds
Cbc0012I Integer solution of -3488.1567 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 134 rows 74 columns, reduced to 9 rows 11 columns
Cbc0031I 5 added rows had average density of 4.2
Cbc0013I At root node, 12 cuts changed objective from -4181.1497 to -3488.1567 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 2.4 elements, 14 column cuts (14 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3488.15669, took 33 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 115 (-38) columns and 2000 (-1304) elements
Clp1000I sum of infeasibilities 3.26136e-05 - average 3.16637e-07, 71 fixed columns
Coin0506I Presolve 42 (-61) rows, 44 (-71) columns and 193 (-1807) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 4227.5271
Clp0000I Optimal - objective value 4227.5271
Coin0511I After Postsolve, objective 4227.5271, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9843228 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 4227.5271
Clp0000I Optimal - objective value 4227.5271
Clp0000I Optimal - objective value 4227.5271
Coin0511I After Postsolve, objective 4227.5271, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4227.527148 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 120 columns (120 integer (120 of which binary)) and 2022 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.532%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 3.51138
Cbc0038I Pass   1: suminf.    2.23629 (30) obj. -3460.24 iterations 2
Cbc0038I Pass   2: suminf.    2.23629 (30) obj. -3460.24 iterations 0
Cbc0038I Pass   3: suminf.    0.19154 (5) obj. -3426.57 iterations 25
Cbc0038I Solution found of -3420.77
Cbc0038I Rounding solution of -3428.7 is better than previous of -3420.77

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3507.95
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.35648 (38) obj. -3507.95 iterations 1
Cbc0038I Pass   5: suminf.    2.35648 (38) obj. -3507.95 iterations 0
Cbc0038I Pass   6: suminf.    0.78716 (21) obj. -3507.95 iterations 17
Cbc0038I Pass   7: suminf.    0.22384 (4) obj. -3507.95 iterations 22
Cbc0038I Pass   8: suminf.    0.22384 (4) obj. -3507.95 iterations 0
Cbc0038I Pass   9: suminf.    0.49485 (4) obj. -4173.85 iterations 10
Cbc0038I Pass  10: suminf.    0.44235 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  11: suminf.    2.16191 (18) obj. -3507.95 iterations 22
Cbc0038I Pass  12: suminf.    0.96677 (14) obj. -3507.95 iterations 9
Cbc0038I Pass  13: suminf.    1.69072 (4) obj. -3907 iterations 14
Cbc0038I Pass  14: suminf.    1.69072 (4) obj. -3907 iterations 0
Cbc0038I Pass  15: suminf.    0.47386 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  16: suminf.    2.01116 (16) obj. -3507.95 iterations 23
Cbc0038I Pass  17: suminf.    1.08935 (13) obj. -3507.95 iterations 5
Cbc0038I Pass  18: suminf.    0.98969 (4) obj. -3634.71 iterations 12
Cbc0038I Pass  19: suminf.    0.40664 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  20: suminf.    0.84738 (14) obj. -3507.95 iterations 14
Cbc0038I Pass  21: suminf.    0.72411 (12) obj. -3507.95 iterations 5
Cbc0038I Pass  22: suminf.    0.41237 (4) obj. -3508.65 iterations 11
Cbc0038I Pass  23: suminf.    0.40913 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  24: suminf.    0.83461 (10) obj. -3507.95 iterations 12
Cbc0038I Pass  25: suminf.    0.75410 (9) obj. -3507.95 iterations 2
Cbc0038I Pass  26: suminf.    0.41237 (4) obj. -3516.65 iterations 8
Cbc0038I Pass  27: suminf.    0.37234 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  28: suminf.    0.78944 (9) obj. -3507.95 iterations 13
Cbc0038I Pass  29: suminf.    0.59388 (7) obj. -3507.95 iterations 5
Cbc0038I Pass  30: suminf.    0.49485 (4) obj. -3532.5 iterations 6
Cbc0038I Pass  31: suminf.    0.38193 (4) obj. -3507.95 iterations 1
Cbc0038I Pass  32: suminf.    1.28454 (11) obj. -3507.95 iterations 13
Cbc0038I Pass  33: suminf.    0.82291 (10) obj. -3507.95 iterations 3
Cbc0038I Rounding solution of -3439.25 is better than previous of -3428.7

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 24 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -3439.25 to -3444.04 (0.06 seconds)
Cbc0038I Round again with cutoff of -3650.6
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.71588 (38) obj. -3650.6 iterations 0
Cbc0038I Pass  34: suminf.    2.71588 (38) obj. -3650.6 iterations 0
Cbc0038I Pass  35: suminf.    0.67354 (11) obj. -3650.6 iterations 28
Cbc0038I Pass  36: suminf.    0.67354 (11) obj. -3650.6 iterations 0
Cbc0038I Pass  37: suminf.    0.49485 (4) obj. -4173.85 iterations 19
Cbc0038I Pass  38: suminf.    1.09849 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  39: suminf.    2.35383 (15) obj. -3650.6 iterations 19
Cbc0038I Pass  40: suminf.    1.88861 (14) obj. -3650.6 iterations 2
Cbc0038I Pass  41: suminf.    1.60825 (4) obj. -3767.76 iterations 12
Cbc0038I Pass  42: suminf.    1.06939 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  43: suminf.    1.58496 (11) obj. -3650.6 iterations 14
Cbc0038I Pass  44: suminf.    1.56540 (10) obj. -3650.6 iterations 3
Cbc0038I Pass  45: suminf.    1.11584 (5) obj. -3650.6 iterations 9
Cbc0038I Pass  46: suminf.    1.11584 (5) obj. -3650.6 iterations 0
Cbc0038I Pass  47: suminf.    1.69072 (4) obj. -3784.19 iterations 3
Cbc0038I Pass  48: suminf.    1.07630 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  49: suminf.    2.74174 (13) obj. -3650.6 iterations 12
Cbc0038I Pass  50: suminf.    1.54930 (10) obj. -3650.6 iterations 5
Cbc0038I Pass  51: suminf.    1.21713 (5) obj. -3650.6 iterations 9
Cbc0038I Pass  52: suminf.    1.21713 (5) obj. -3650.6 iterations 0
Cbc0038I Pass  53: suminf.    1.89691 (4) obj. -3862.86 iterations 4
Cbc0038I Pass  54: suminf.    1.89691 (4) obj. -3862.86 iterations 0
Cbc0038I Pass  55: suminf.    1.12684 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  56: suminf.    2.09639 (13) obj. -3650.6 iterations 36
Cbc0038I Pass  57: suminf.    1.53534 (11) obj. -3650.6 iterations 6
Cbc0038I Pass  58: suminf.    1.67123 (4) obj. -3774.39 iterations 10
Cbc0038I Pass  59: suminf.    0.87521 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  60: suminf.    1.85000 (4) obj. -3807.3 iterations 7
Cbc0038I Pass  61: suminf.    1.12929 (4) obj. -3650.6 iterations 1
Cbc0038I Pass  62: suminf.    2.08947 (10) obj. -3650.6 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 18 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -3444.04 - took 0.06 seconds
Cbc0012I Integer solution of -3444.0444 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0012I Integer solution of -3451.9919 found by DiveCoefficient after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 108 rows 120 columns, reduced to 15 rows 18 columns
Cbc0012I Integer solution of -3452.9919 found by RINS after 0 iterations and 0 nodes (0.09 seconds)
Cbc0012I Integer solution of -3488.1567 found by DiveCoefficient after 74 iterations and 0 nodes (0.17 seconds)
Cbc0031I 11 added rows had average density of 29
Cbc0013I At root node, 11 cuts changed objective from -4199.0714 to -3488.1567 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 45.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 36.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3488.15669, took 74 iterations and 0 nodes (0.17 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.18

