Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 41 (-22) rows, 23 (-9) columns and 122 (-55) elements
Clp0000I Optimal - objective value 94.290777
Coin0511I After Postsolve, objective 94.290777, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.29077672 - 19 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 23 columns (22 integer (22 of which binary)) and 124 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.625%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.87212
Cbc0038I Pass   1: suminf.    0.01613 (1) obj. -58.1782 iterations 12
Cbc0038I Solution found of 6.21613
Cbc0038I Relaxing continuous gives -8.8
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 23 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -8.8 to -47.9 (0.02 seconds)
Cbc0038I Round again with cutoff of -52.4
Cbc0038I Pass   2: suminf.    0.01613 (1) obj. -58.1782 iterations 0
Cbc0038I Pass   3: suminf.    0.33384 (1) obj. -52.4 iterations 2
Cbc0038I Pass   4: suminf.    1.46279 (6) obj. -52.4 iterations 6
Cbc0038I Pass   5: suminf.    0.59688 (2) obj. -52.4 iterations 3
Cbc0038I Pass   6: suminf.    0.33384 (1) obj. -52.4 iterations 2
Cbc0038I Pass   7: suminf.    0.20769 (1) obj. -52.4 iterations 1
Cbc0038I Pass   8: suminf.    1.38990 (3) obj. -52.4 iterations 4
Cbc0038I Pass   9: suminf.    0.82807 (2) obj. -52.4 iterations 3
Cbc0038I Pass  10: suminf.    0.48241 (2) obj. -52.4 iterations 2
Cbc0038I Pass  11: suminf.    0.48241 (2) obj. -52.4 iterations 0
Cbc0038I Pass  12: suminf.    0.25964 (2) obj. -52.4 iterations 3
Cbc0038I Pass  13: suminf.    0.91313 (2) obj. -52.4 iterations 3
Cbc0038I Pass  14: suminf.    0.41538 (1) obj. -52.4 iterations 1
Cbc0038I Pass  15: suminf.    0.41538 (1) obj. -52.4 iterations 0
Cbc0038I Pass  16: suminf.    0.41538 (1) obj. -52.4 iterations 0
Cbc0038I Pass  17: suminf.    1.47232 (4) obj. -52.4 iterations 5
Cbc0038I Pass  18: suminf.    0.89365 (3) obj. -52.4 iterations 3
Cbc0038I Pass  19: suminf.    0.91743 (2) obj. -52.4 iterations 3
Cbc0038I Pass  20: suminf.    0.46218 (1) obj. -52.4 iterations 2
Cbc0038I Pass  21: suminf.    0.46154 (1) obj. -52.4 iterations 1
Cbc0038I Pass  22: suminf.    2.07444 (7) obj. -52.4 iterations 8
Cbc0038I Pass  23: suminf.    1.39034 (4) obj. -52.4 iterations 5
Cbc0038I Pass  24: suminf.    1.67509 (5) obj. -52.4 iterations 1
Cbc0038I Pass  25: suminf.    1.39034 (4) obj. -52.4 iterations 1
Cbc0038I Pass  26: suminf.    0.91743 (2) obj. -52.4 iterations 4
Cbc0038I Pass  27: suminf.    0.46218 (1) obj. -52.4 iterations 2
Cbc0038I Pass  28: suminf.    0.46154 (1) obj. -52.4 iterations 1
Cbc0038I Pass  29: suminf.    1.47135 (4) obj. -52.4 iterations 5
Cbc0038I Pass  30: suminf.    2.80037 (7) obj. -52.4 iterations 12
Cbc0038I Pass  31: suminf.    0.52754 (2) obj. -52.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 23 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -47.9 - took 0.01 seconds
Cbc0012I Integer solution of -47.9 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 41 rows 23 columns, reduced to 31 rows 18 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -92.557146 to -92.557146 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -47.90000000000001, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-15) rows, 50 (-10) columns and 399 (-213) elements
Clp1000I sum of infeasibilities 2.05763e-07 - average 4.37793e-09, 9 fixed columns
Coin0506I Presolve 40 (-7) rows, 41 (-9) columns and 248 (-151) elements
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 4.0009896 - largest nonzero change 2.5312138e-05 ( 0.0016981022%) - largest zero change 2.8571686e-05
Clp0000I Optimal - objective value 125.68679
Clp0000I Optimal - objective value 125.68679
Coin0511I After Postsolve, objective 125.68679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 125.68679
Clp0000I Optimal - objective value 125.68679
Clp0000I Optimal - objective value 125.68679
Coin0511I After Postsolve, objective 125.68679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.686793 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 50 columns (50 integer (50 of which binary)) and 405 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.307%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.38597
Cbc0038I Pass   1: suminf.    1.36601 (11) obj. -48.8621 iterations 11
Cbc0038I Pass   2: suminf.    1.36601 (11) obj. -48.8621 iterations 1
Cbc0038I Solution found of 31.3
Cbc0038I Rounding solution of 24.55 is better than previous of 31.3

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 24.55 to 2.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -6.85
Cbc0038I Pass   3: suminf.    1.36601 (11) obj. -48.8621 iterations 0
Cbc0038I Pass   4: suminf.    1.36601 (11) obj. -48.8621 iterations 1
Cbc0038I Pass   5: suminf.    0.83422 (2) obj. -6.85 iterations 15
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -17.7875 iterations 2
Cbc0038I Pass   7: suminf.    0.41711 (1) obj. -6.85 iterations 1
Cbc0038I Pass   8: suminf.    1.18575 (5) obj. -6.85 iterations 11
Cbc0038I Pass   9: suminf.    1.18575 (5) obj. -6.85 iterations 1
Cbc0038I Pass  10: suminf.    0.55981 (3) obj. -6.85 iterations 4
Cbc0038I Pass  11: suminf.    0.53791 (3) obj. -6.85 iterations 1
Cbc0038I Pass  12: suminf.    0.30124 (2) obj. -6.85 iterations 2
Cbc0038I Pass  13: suminf.    0.30124 (2) obj. -6.85 iterations 0
Cbc0038I Pass  14: suminf.    0.39055 (2) obj. -22.9046 iterations 1
Cbc0038I Pass  15: suminf.    0.28571 (1) obj. -16.0429 iterations 1
Cbc0038I Pass  16: suminf.    1.36589 (6) obj. -6.85 iterations 14
Cbc0038I Pass  17: suminf.    1.36589 (6) obj. -6.85 iterations 1
Cbc0038I Pass  18: suminf.    0.58690 (2) obj. -6.85 iterations 6
Cbc0038I Pass  19: suminf.    0.51402 (2) obj. -6.85 iterations 1
Cbc0038I Pass  20: suminf.    1.50885 (5) obj. -6.85 iterations 6
Cbc0038I Pass  21: suminf.    1.07953 (4) obj. -6.85 iterations 1
Cbc0038I Pass  22: suminf.    0.62519 (3) obj. -6.85 iterations 1
Cbc0038I Pass  23: suminf.    0.87041 (2) obj. -6.85 iterations 2
Cbc0038I Pass  24: suminf.    0.59058 (2) obj. -6.85 iterations 1
Cbc0038I Pass  25: suminf.    0.88836 (3) obj. -6.85 iterations 7
Cbc0038I Pass  26: suminf.    0.28802 (2) obj. -21.7456 iterations 2
Cbc0038I Pass  27: suminf.    0.52180 (2) obj. -6.85 iterations 1
Cbc0038I Pass  28: suminf.    0.52180 (2) obj. -6.85 iterations 0
Cbc0038I Pass  29: suminf.    0.51561 (2) obj. -6.85 iterations 1
Cbc0038I Pass  30: suminf.    2.71124 (11) obj. -6.85 iterations 22
Cbc0038I Pass  31: suminf.    2.33775 (11) obj. -6.85 iterations 5
Cbc0038I Pass  32: suminf.    2.33775 (11) obj. -6.85 iterations 0
Cbc0038I Rounding solution of 0.1 is better than previous of 2.4

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 0.1 to -47.9 (0.02 seconds)
Cbc0038I Round again with cutoff of -56.325
Cbc0038I Pass  32: suminf.    2.25500 (13) obj. -56.325 iterations 3
Cbc0038I Pass  33: suminf.    2.25500 (13) obj. -56.325 iterations 2
Cbc0038I Pass  34: suminf.    0.95594 (3) obj. -56.325 iterations 26
Cbc0038I Pass  35: suminf.    0.48963 (2) obj. -59.9251 iterations 2
Cbc0038I Pass  36: suminf.    0.60576 (2) obj. -56.325 iterations 1
Cbc0038I Pass  37: suminf.    2.18962 (10) obj. -56.325 iterations 11
Cbc0038I Pass  38: suminf.    1.51052 (7) obj. -56.325 iterations 2
Cbc0038I Pass  39: suminf.    1.56514 (11) obj. -56.325 iterations 3
Cbc0038I Pass  40: suminf.    1.56478 (10) obj. -56.7865 iterations 1
Cbc0038I Pass  41: suminf.    2.52503 (10) obj. -56.325 iterations 10
Cbc0038I Pass  42: suminf.    2.51515 (10) obj. -56.325 iterations 2
Cbc0038I Pass  43: suminf.    2.32477 (9) obj. -56.325 iterations 5
Cbc0038I Pass  44: suminf.    1.93208 (9) obj. -56.325 iterations 2
Cbc0038I Pass  45: suminf.    2.52503 (10) obj. -56.325 iterations 5
Cbc0038I Pass  46: suminf.    2.11511 (9) obj. -56.325 iterations 11
Cbc0038I Pass  47: suminf.    2.11511 (9) obj. -56.325 iterations 1
Cbc0038I Pass  48: suminf.    2.11120 (9) obj. -56.325 iterations 6
Cbc0038I Pass  49: suminf.    2.11120 (9) obj. -56.325 iterations 0
Cbc0038I Pass  50: suminf.    2.19896 (9) obj. -56.325 iterations 2
Cbc0038I Pass  51: suminf.    2.19896 (9) obj. -56.325 iterations 1
Cbc0038I Pass  52: suminf.    2.15284 (9) obj. -56.325 iterations 4
Cbc0038I Pass  53: suminf.    3.07739 (11) obj. -56.325 iterations 14
Cbc0038I Pass  54: suminf.    2.99225 (11) obj. -56.325 iterations 6
Cbc0038I Pass  55: suminf.    3.00087 (9) obj. -56.325 iterations 11
Cbc0038I Pass  56: suminf.    2.79670 (9) obj. -57.55 iterations 4
Cbc0038I Pass  57: suminf.    2.75837 (9) obj. -56.325 iterations 6
Cbc0038I Pass  58: suminf.    2.72964 (10) obj. -56.325 iterations 1
Cbc0038I Pass  59: suminf.    2.21950 (8) obj. -56.325 iterations 7
Cbc0038I Pass  60: suminf.    1.93679 (8) obj. -56.325 iterations 2
Cbc0038I Pass  61: suminf.    2.36236 (8) obj. -56.325 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -47.9 - took 0.02 seconds
Cbc0012I Integer solution of -47.9 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 50 columns, reduced to 16 rows 15 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -89.833531 to -89.833531 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 14 column cuts (14 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -47.90000000000001, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 41 (-22) rows, 23 (-9) columns and 122 (-55) elements
Clp0000I Optimal - objective value 94.290777
Coin0511I After Postsolve, objective 94.290777, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.29077672 - 19 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 23 columns (22 integer (22 of which binary)) and 124 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.625%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.87212
Cbc0038I Pass   1: suminf.    0.01613 (1) obj. -58.1782 iterations 12
Cbc0038I Solution found of 6.21613
Cbc0038I Relaxing continuous gives -8.8
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 23 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -8.8 to -47.9 (0.02 seconds)
Cbc0038I Round again with cutoff of -52.4
Cbc0038I Pass   2: suminf.    0.01613 (1) obj. -58.1782 iterations 0
Cbc0038I Pass   3: suminf.    0.33384 (1) obj. -52.4 iterations 2
Cbc0038I Pass   4: suminf.    1.46279 (6) obj. -52.4 iterations 6
Cbc0038I Pass   5: suminf.    0.59688 (2) obj. -52.4 iterations 3
Cbc0038I Pass   6: suminf.    0.33384 (1) obj. -52.4 iterations 2
Cbc0038I Pass   7: suminf.    0.20769 (1) obj. -52.4 iterations 1
Cbc0038I Pass   8: suminf.    1.38990 (3) obj. -52.4 iterations 4
Cbc0038I Pass   9: suminf.    0.82807 (2) obj. -52.4 iterations 3
Cbc0038I Pass  10: suminf.    0.48241 (2) obj. -52.4 iterations 2
Cbc0038I Pass  11: suminf.    0.48241 (2) obj. -52.4 iterations 0
Cbc0038I Pass  12: suminf.    0.25964 (2) obj. -52.4 iterations 3
Cbc0038I Pass  13: suminf.    0.91313 (2) obj. -52.4 iterations 3
Cbc0038I Pass  14: suminf.    0.41538 (1) obj. -52.4 iterations 1
Cbc0038I Pass  15: suminf.    0.41538 (1) obj. -52.4 iterations 0
Cbc0038I Pass  16: suminf.    0.41538 (1) obj. -52.4 iterations 0
Cbc0038I Pass  17: suminf.    1.47232 (4) obj. -52.4 iterations 5
Cbc0038I Pass  18: suminf.    0.89365 (3) obj. -52.4 iterations 3
Cbc0038I Pass  19: suminf.    0.91743 (2) obj. -52.4 iterations 3
Cbc0038I Pass  20: suminf.    0.46218 (1) obj. -52.4 iterations 2
Cbc0038I Pass  21: suminf.    0.46154 (1) obj. -52.4 iterations 1
Cbc0038I Pass  22: suminf.    2.07444 (7) obj. -52.4 iterations 8
Cbc0038I Pass  23: suminf.    1.39034 (4) obj. -52.4 iterations 5
Cbc0038I Pass  24: suminf.    1.67509 (5) obj. -52.4 iterations 1
Cbc0038I Pass  25: suminf.    1.39034 (4) obj. -52.4 iterations 1
Cbc0038I Pass  26: suminf.    0.91743 (2) obj. -52.4 iterations 4
Cbc0038I Pass  27: suminf.    0.46218 (1) obj. -52.4 iterations 2
Cbc0038I Pass  28: suminf.    0.46154 (1) obj. -52.4 iterations 1
Cbc0038I Pass  29: suminf.    1.47135 (4) obj. -52.4 iterations 5
Cbc0038I Pass  30: suminf.    2.80037 (7) obj. -52.4 iterations 12
Cbc0038I Pass  31: suminf.    0.52754 (2) obj. -52.4 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 23 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -47.9 - took 0.02 seconds
Cbc0012I Integer solution of -47.9 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 41 rows 23 columns, reduced to 31 rows 18 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -92.557146 to -92.557146 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -47.90000000000001, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 50 (-11) columns and 399 (-214) elements
Clp1000I sum of infeasibilities 2.05763e-07 - average 4.37793e-09, 9 fixed columns
Coin0506I Presolve 40 (-7) rows, 41 (-9) columns and 248 (-151) elements
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 4.0009896 - largest nonzero change 2.5312138e-05 ( 0.0016981022%) - largest zero change 2.8571686e-05
Clp0000I Optimal - objective value 125.68679
Clp0000I Optimal - objective value 125.68679
Coin0511I After Postsolve, objective 125.68679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 125.68679
Clp0000I Optimal - objective value 125.68679
Clp0000I Optimal - objective value 125.68679
Coin0511I After Postsolve, objective 125.68679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.686793 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 50 columns (50 integer (50 of which binary)) and 405 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.307%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.38597
Cbc0038I Pass   1: suminf.    1.36601 (11) obj. -48.8621 iterations 11
Cbc0038I Pass   2: suminf.    1.36601 (11) obj. -48.8621 iterations 1
Cbc0038I Solution found of 31.3
Cbc0038I Rounding solution of 24.55 is better than previous of 31.3

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 24.55 to 2.4 (0.02 seconds)
Cbc0038I Round again with cutoff of -6.85
Cbc0038I Pass   3: suminf.    1.36601 (11) obj. -48.8621 iterations 0
Cbc0038I Pass   4: suminf.    1.36601 (11) obj. -48.8621 iterations 1
Cbc0038I Pass   5: suminf.    0.83422 (2) obj. -6.85 iterations 15
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -17.7875 iterations 2
Cbc0038I Pass   7: suminf.    0.41711 (1) obj. -6.85 iterations 1
Cbc0038I Pass   8: suminf.    1.18575 (5) obj. -6.85 iterations 11
Cbc0038I Pass   9: suminf.    1.18575 (5) obj. -6.85 iterations 1
Cbc0038I Pass  10: suminf.    0.55981 (3) obj. -6.85 iterations 4
Cbc0038I Pass  11: suminf.    0.53791 (3) obj. -6.85 iterations 1
Cbc0038I Pass  12: suminf.    0.30124 (2) obj. -6.85 iterations 2
Cbc0038I Pass  13: suminf.    0.30124 (2) obj. -6.85 iterations 0
Cbc0038I Pass  14: suminf.    0.39055 (2) obj. -22.9046 iterations 1
Cbc0038I Pass  15: suminf.    0.28571 (1) obj. -16.0429 iterations 1
Cbc0038I Pass  16: suminf.    1.36589 (6) obj. -6.85 iterations 14
Cbc0038I Pass  17: suminf.    1.36589 (6) obj. -6.85 iterations 1
Cbc0038I Pass  18: suminf.    0.58690 (2) obj. -6.85 iterations 6
Cbc0038I Pass  19: suminf.    0.51402 (2) obj. -6.85 iterations 1
Cbc0038I Pass  20: suminf.    1.50885 (5) obj. -6.85 iterations 6
Cbc0038I Pass  21: suminf.    1.07953 (4) obj. -6.85 iterations 1
Cbc0038I Pass  22: suminf.    0.62519 (3) obj. -6.85 iterations 1
Cbc0038I Pass  23: suminf.    0.87041 (2) obj. -6.85 iterations 2
Cbc0038I Pass  24: suminf.    0.59058 (2) obj. -6.85 iterations 1
Cbc0038I Pass  25: suminf.    0.88836 (3) obj. -6.85 iterations 7
Cbc0038I Pass  26: suminf.    0.28802 (2) obj. -21.7456 iterations 2
Cbc0038I Pass  27: suminf.    0.52180 (2) obj. -6.85 iterations 1
Cbc0038I Pass  28: suminf.    0.52180 (2) obj. -6.85 iterations 0
Cbc0038I Pass  29: suminf.    0.51561 (2) obj. -6.85 iterations 1
Cbc0038I Pass  30: suminf.    2.71124 (11) obj. -6.85 iterations 22
Cbc0038I Pass  31: suminf.    2.33775 (11) obj. -6.85 iterations 5
Cbc0038I Pass  32: suminf.    2.33775 (11) obj. -6.85 iterations 0
Cbc0038I Rounding solution of 0.1 is better than previous of 2.4

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 0.1 to -47.9 (0.04 seconds)
Cbc0038I Round again with cutoff of -56.325
Cbc0038I Pass  32: suminf.    2.25500 (13) obj. -56.325 iterations 3
Cbc0038I Pass  33: suminf.    2.25500 (13) obj. -56.325 iterations 2
Cbc0038I Pass  34: suminf.    0.95594 (3) obj. -56.325 iterations 26
Cbc0038I Pass  35: suminf.    0.48963 (2) obj. -59.9251 iterations 2
Cbc0038I Pass  36: suminf.    0.60576 (2) obj. -56.325 iterations 1
Cbc0038I Pass  37: suminf.    2.18962 (10) obj. -56.325 iterations 11
Cbc0038I Pass  38: suminf.    1.51052 (7) obj. -56.325 iterations 2
Cbc0038I Pass  39: suminf.    1.56514 (11) obj. -56.325 iterations 3
Cbc0038I Pass  40: suminf.    1.56478 (10) obj. -56.7865 iterations 1
Cbc0038I Pass  41: suminf.    2.52503 (10) obj. -56.325 iterations 10
Cbc0038I Pass  42: suminf.    2.51515 (10) obj. -56.325 iterations 2
Cbc0038I Pass  43: suminf.    2.32477 (9) obj. -56.325 iterations 5
Cbc0038I Pass  44: suminf.    1.93208 (9) obj. -56.325 iterations 2
Cbc0038I Pass  45: suminf.    2.52503 (10) obj. -56.325 iterations 5
Cbc0038I Pass  46: suminf.    2.11511 (9) obj. -56.325 iterations 11
Cbc0038I Pass  47: suminf.    2.11511 (9) obj. -56.325 iterations 1
Cbc0038I Pass  48: suminf.    2.11120 (9) obj. -56.325 iterations 6
Cbc0038I Pass  49: suminf.    2.11120 (9) obj. -56.325 iterations 0
Cbc0038I Pass  50: suminf.    2.19896 (9) obj. -56.325 iterations 2
Cbc0038I Pass  51: suminf.    2.19896 (9) obj. -56.325 iterations 1
Cbc0038I Pass  52: suminf.    2.15284 (9) obj. -56.325 iterations 4
Cbc0038I Pass  53: suminf.    3.07739 (11) obj. -56.325 iterations 14
Cbc0038I Pass  54: suminf.    2.99225 (11) obj. -56.325 iterations 6
Cbc0038I Pass  55: suminf.    3.00087 (9) obj. -56.325 iterations 11
Cbc0038I Pass  56: suminf.    2.79670 (9) obj. -57.55 iterations 4
Cbc0038I Pass  57: suminf.    2.75837 (9) obj. -56.325 iterations 6
Cbc0038I Pass  58: suminf.    2.72964 (10) obj. -56.325 iterations 1
Cbc0038I Pass  59: suminf.    2.21950 (8) obj. -56.325 iterations 7
Cbc0038I Pass  60: suminf.    1.93679 (8) obj. -56.325 iterations 2
Cbc0038I Pass  61: suminf.    2.36236 (8) obj. -56.325 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -47.9 - took 0.04 seconds
Cbc0012I Integer solution of -47.9 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 47 rows 50 columns, reduced to 16 rows 15 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -89.833531 to -89.833531 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 14 column cuts (14 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -47.90000000000001, took 0 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

