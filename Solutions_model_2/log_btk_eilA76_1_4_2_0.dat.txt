Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 3.96937e-06 - average 2.96221e-08, 11 fixed columns
Coin0506I Presolve 113 (-21) rows, 65 (-11) columns and 348 (-64) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Coin0511I After Postsolve, objective 37.128971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Coin0511I After Postsolve, objective 37.128971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.12897073 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.213%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.79942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.76173 iterations 42
Cbc0038I Solution found of 6.76173
Cbc0038I Relaxing continuous gives 6.76173
Cbc0038I Rounding solution of -3.30853 is better than previous of 6.76173

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -3.30853 to -9.57993 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.2865
Cbc0038I Pass   2: suminf.    1.82309 (17) obj. -12.2865 iterations 20
Cbc0038I Pass   3: suminf.    1.49248 (31) obj. -12.2865 iterations 20
Cbc0038I Pass   4: suminf.    1.15671 (6) obj. -12.2865 iterations 39
Cbc0038I Pass   5: suminf.    0.79665 (5) obj. -12.2865 iterations 5
Cbc0038I Pass   6: suminf.    2.23371 (8) obj. -12.2865 iterations 14
Cbc0038I Pass   7: suminf.    1.72559 (6) obj. -12.2865 iterations 8
Cbc0038I Pass   8: suminf.    1.01969 (5) obj. -12.2865 iterations 3
Cbc0038I Pass   9: suminf.    1.96821 (8) obj. -12.2865 iterations 13
Cbc0038I Pass  10: suminf.    1.25762 (4) obj. -12.2865 iterations 15
Cbc0038I Pass  11: suminf.    1.11644 (3) obj. -12.2865 iterations 4
Cbc0038I Pass  12: suminf.    1.18573 (3) obj. -12.2865 iterations 3
Cbc0038I Pass  13: suminf.    1.18573 (3) obj. -12.2865 iterations 1
Cbc0038I Pass  14: suminf.    1.11644 (3) obj. -12.2865 iterations 3
Cbc0038I Pass  15: suminf.    1.44603 (5) obj. -12.2865 iterations 14
Cbc0038I Pass  16: suminf.    1.30172 (6) obj. -12.2865 iterations 5
Cbc0038I Pass  17: suminf.    1.56168 (5) obj. -12.2865 iterations 14
Cbc0038I Pass  18: suminf.    1.18426 (5) obj. -12.2865 iterations 4
Cbc0038I Pass  19: suminf.    1.90920 (5) obj. -12.2865 iterations 8
Cbc0038I Pass  20: suminf.    0.95159 (5) obj. -12.2865 iterations 4
Cbc0038I Pass  21: suminf.    0.95159 (5) obj. -12.2865 iterations 1
Cbc0038I Pass  22: suminf.    1.93014 (7) obj. -12.2865 iterations 11
Cbc0038I Pass  23: suminf.    1.81977 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  24: suminf.    1.81977 (5) obj. -12.2865 iterations 0
Cbc0038I Pass  25: suminf.    1.39083 (5) obj. -12.2865 iterations 7
Cbc0038I Pass  26: suminf.    0.95159 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  27: suminf.    0.95159 (5) obj. -12.2865 iterations 1
Cbc0038I Pass  28: suminf.    1.93014 (7) obj. -12.2865 iterations 11
Cbc0038I Pass  29: suminf.    1.81977 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  30: suminf.    1.81977 (5) obj. -12.2865 iterations 0
Cbc0038I Pass  31: suminf.    1.39083 (5) obj. -12.2865 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -9.57993 to -10.773 (0.10 seconds)
Cbc0038I Round again with cutoff of -17.1581
Cbc0038I Pass  31: suminf.    2.90654 (17) obj. -17.1581 iterations 0
Cbc0038I Pass  32: suminf.    2.40419 (8) obj. -17.1581 iterations 20
Cbc0038I Pass  33: suminf.    1.69561 (7) obj. -17.1581 iterations 2
Cbc0038I Pass  34: suminf.    1.66179 (5) obj. -17.1581 iterations 4
Cbc0038I Pass  35: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  36: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  37: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  38: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  39: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  40: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  41: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  42: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  43: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  44: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  45: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  46: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  47: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  48: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  49: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  50: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  51: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  52: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  53: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  54: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  55: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  56: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  57: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  58: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  59: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  60: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 74 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -10.773 - took 0.11 seconds
Cbc0012I Integer solution of -10.77301 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 73 rows 42 columns
Cbc0031I 23 added rows had average density of 63.521739
Cbc0013I At root node, 23 cuts changed objective from -36.644718 to -30.374311 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10788 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1291 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.77301 best solution, best possible -30.374311 (0.72 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 16 rows 13 columns
Cbc0012I Integer solution of -11.62638 found by RINS after 6929 iterations and 42 nodes (0.93 seconds)
Cbc0001I Search completed - best objective -11.62638, took 7818 iterations and 70 nodes (0.96 seconds)
Cbc0032I Strong branching done 810 times (15430 iterations), fathomed 3 nodes and fixed 45 variables
Cbc0035I Maximum depth 23, 105 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       0.97

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 119 (-33) columns and 1973 (-1330) elements
Clp1000I sum of infeasibilities 2.82342e-07 - average 2.74118e-09, 58 fixed columns
Coin0506I Presolve 49 (-54) rows, 61 (-58) columns and 215 (-1758) elements
Clp0006I 0  Obj -7.9231258 Dual inf 1.1136521 (61)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 3.1317356 - largest nonzero change 2.121732e-05 ( 0.00091831452%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value -7.7968948
Clp0000I Optimal - objective value -7.7968948
Coin0511I After Postsolve, objective -7.7968948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.7968948 Dual inf 73.469678 (44)
Clp0014I Perturbing problem by 0.001% of 1.6146713 - largest nonzero change 2.5537523e-05 ( 0.0018056464%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 54.855273
Clp0000I Optimal - objective value 54.855273
Clp0000I Optimal - objective value 54.855273
Coin0511I After Postsolve, objective 54.855273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.85527331 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 121 columns (121 integer (121 of which binary)) and 1983 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 6.26211
Cbc0038I Pass   1: suminf.    2.09385 (31) obj. -26.7592 iterations 24
Cbc0038I Pass   2: suminf.    2.09385 (31) obj. -26.7592 iterations 1
Cbc0038I Pass   3: suminf.    1.14458 (19) obj. -13.8783 iterations 12
Cbc0038I Solution found of 7.72946
Cbc0038I Rounding solution of -1.38702 is better than previous of 7.72946

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -1.38702 to -3.98301 (0.02 seconds)
Cbc0038I Round again with cutoff of -8.0957
Cbc0038I Pass   4: suminf.    2.09385 (31) obj. -26.7592 iterations 0
Cbc0038I Pass   5: suminf.    2.09385 (31) obj. -26.7592 iterations 1
Cbc0038I Pass   6: suminf.    0.83648 (13) obj. -8.0957 iterations 20
Cbc0038I Pass   7: suminf.    2.53792 (19) obj. -8.0957 iterations 35
Cbc0038I Pass   8: suminf.    2.53792 (19) obj. -8.0957 iterations 0
Cbc0038I Pass   9: suminf.    1.90886 (9) obj. -8.0957 iterations 28
Cbc0038I Pass  10: suminf.    1.65557 (11) obj. -8.0957 iterations 3
Cbc0038I Pass  11: suminf.    1.90886 (9) obj. -8.0957 iterations 6
Cbc0038I Pass  12: suminf.    1.72907 (15) obj. -8.0957 iterations 26
Cbc0038I Pass  13: suminf.    1.72907 (15) obj. -8.0957 iterations 5
Cbc0038I Pass  14: suminf.    1.50356 (13) obj. -8.0957 iterations 26
Cbc0038I Pass  15: suminf.    1.43217 (11) obj. -8.0957 iterations 4
Cbc0038I Pass  16: suminf.    1.59435 (10) obj. -8.0957 iterations 5
Cbc0038I Pass  17: suminf.    1.52417 (10) obj. -8.0957 iterations 4
Cbc0038I Pass  18: suminf.    1.44387 (10) obj. -8.0957 iterations 7
Cbc0038I Pass  19: suminf.    2.26039 (18) obj. -8.0957 iterations 33
Cbc0038I Pass  20: suminf.    1.51707 (16) obj. -8.0957 iterations 10
Cbc0038I Pass  21: suminf.    1.61450 (12) obj. -8.0957 iterations 21
Cbc0038I Pass  22: suminf.    1.19640 (12) obj. -8.0957 iterations 10
Cbc0038I Pass  23: suminf.    2.68757 (14) obj. -8.0957 iterations 11
Cbc0038I Pass  24: suminf.    1.65557 (11) obj. -8.0957 iterations 7
Cbc0038I Pass  25: suminf.    1.90886 (9) obj. -8.0957 iterations 6
Cbc0038I Pass  26: suminf.    1.69915 (15) obj. -8.0957 iterations 24
Cbc0038I Pass  27: suminf.    0.69150 (9) obj. -8.76665 iterations 9
Cbc0038I Pass  28: suminf.    0.74934 (14) obj. -8.0957 iterations 25
Cbc0038I Pass  29: suminf.    0.53554 (10) obj. -8.0957 iterations 6
Cbc0038I Pass  30: suminf.    0.67251 (10) obj. -8.0957 iterations 9
Cbc0038I Pass  31: suminf.    0.83085 (10) obj. -8.0957 iterations 22
Cbc0038I Pass  32: suminf.    0.51133 (9) obj. -8.0957 iterations 13
Cbc0038I Pass  33: suminf.    0.61103 (9) obj. -8.0957 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 27 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.98301 to -4.09373 (0.07 seconds)
Cbc0038I Round again with cutoff of -15.4984
Cbc0038I Pass  33: suminf.    2.09385 (31) obj. -26.7592 iterations 0
Cbc0038I Pass  34: suminf.    2.09385 (31) obj. -26.7592 iterations 1
Cbc0038I Pass  35: suminf.    1.41046 (18) obj. -15.4984 iterations 28
Cbc0038I Pass  36: suminf.    1.91265 (17) obj. -15.4984 iterations 45
Cbc0038I Pass  37: suminf.    1.74989 (16) obj. -15.4984 iterations 5
Cbc0038I Pass  38: suminf.    2.74750 (17) obj. -15.4984 iterations 21
Cbc0038I Pass  39: suminf.    2.20862 (15) obj. -15.4984 iterations 3
Cbc0038I Pass  40: suminf.    2.18454 (13) obj. -15.4984 iterations 6
Cbc0038I Pass  41: suminf.    1.74167 (16) obj. -15.4984 iterations 9
Cbc0038I Pass  42: suminf.    2.37443 (13) obj. -15.4984 iterations 7
Cbc0038I Pass  43: suminf.    2.10186 (16) obj. -15.4984 iterations 6
Cbc0038I Pass  44: suminf.    2.32250 (16) obj. -15.4984 iterations 7
Cbc0038I Pass  45: suminf.    2.20862 (15) obj. -15.4984 iterations 5
Cbc0038I Pass  46: suminf.    2.18454 (13) obj. -15.4984 iterations 5
Cbc0038I Pass  47: suminf.    1.74167 (16) obj. -15.4984 iterations 8
Cbc0038I Pass  48: suminf.    2.37443 (13) obj. -15.4984 iterations 7
Cbc0038I Pass  49: suminf.    2.10186 (16) obj. -15.4984 iterations 6
Cbc0038I Pass  50: suminf.    2.32250 (16) obj. -15.4984 iterations 7
Cbc0038I Pass  51: suminf.    2.20862 (15) obj. -15.4984 iterations 5
Cbc0038I Pass  52: suminf.    2.18454 (13) obj. -15.4984 iterations 5
Cbc0038I Pass  53: suminf.    1.74167 (16) obj. -15.4984 iterations 8
Cbc0038I Pass  54: suminf.    2.37443 (13) obj. -15.4984 iterations 7
Cbc0038I Pass  55: suminf.    2.10186 (16) obj. -15.4984 iterations 6
Cbc0038I Pass  56: suminf.    2.32250 (16) obj. -15.4984 iterations 7
Cbc0038I Pass  57: suminf.    2.20862 (15) obj. -15.4984 iterations 5
Cbc0038I Pass  58: suminf.    2.18454 (13) obj. -15.4984 iterations 5
Cbc0038I Pass  59: suminf.    1.74167 (16) obj. -15.4984 iterations 8
Cbc0038I Pass  60: suminf.    2.37443 (13) obj. -15.4984 iterations 7
Cbc0038I Pass  61: suminf.    2.10186 (16) obj. -15.4984 iterations 6
Cbc0038I Pass  62: suminf.    2.75585 (14) obj. -15.4984 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -4.09373 - took 0.08 seconds
Cbc0012I Integer solution of -4.09373 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 105 rows 121 columns, reduced to 15 rows 16 columns
Cbc0031I 59 added rows had average density of 29.271186
Cbc0013I At root node, 59 cuts changed objective from -45.109056 to -16.140409 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12731 row cuts average 2.0 elements, 0 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1607 row cuts average 112.7 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 442 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 880 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 344 row cuts average 68.2 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 169 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.660 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.09373 best solution, best possible -16.140409 (2.54 seconds)
Cbc0012I Integer solution of -8.88664 found by rounding after 5265 iterations and 1 nodes (2.54 seconds)
Cbc0012I Integer solution of -10.66249 found by rounding after 5424 iterations and 2 nodes (2.71 seconds)
Cbc0004I Integer solution of -10.7609 found after 5487 iterations and 4 nodes (2.80 seconds)
Cbc0012I Integer solution of -11.62638 found by rounding after 5522 iterations and 6 nodes (2.84 seconds)
Cbc0010I After 8 nodes, 1 on tree, -11.62638 best solution, best possible -15.21142 (3.30 seconds)
Cbc0010I After 17 nodes, 7 on tree, -11.62638 best solution, best possible -15.21142 (4.05 seconds)
Cbc0010I After 34 nodes, 5 on tree, -11.62638 best solution, best possible -15.21142 (4.99 seconds)
Cbc0001I Search completed - best objective -11.62638, took 8530 iterations and 44 nodes (5.30 seconds)
Cbc0032I Strong branching done 700 times (17855 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 78 variables fixed on reduced cost
Total time (CPU seconds):       3.85   (Wallclock seconds):       5.32

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 3.96937e-06 - average 2.96221e-08, 11 fixed columns
Coin0506I Presolve 113 (-21) rows, 65 (-11) columns and 348 (-64) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Coin0511I After Postsolve, objective 37.128971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Clp0000I Optimal - objective value 37.128971
Coin0511I After Postsolve, objective 37.128971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.12897073 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.213%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.79942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.76173 iterations 42
Cbc0038I Solution found of 6.76173
Cbc0038I Relaxing continuous gives 6.76173
Cbc0038I Rounding solution of -3.30853 is better than previous of 6.76173

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 72 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -3.30853 to -9.57993 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.2865
Cbc0038I Pass   2: suminf.    1.82309 (17) obj. -12.2865 iterations 20
Cbc0038I Pass   3: suminf.    1.49248 (31) obj. -12.2865 iterations 20
Cbc0038I Pass   4: suminf.    1.15671 (6) obj. -12.2865 iterations 39
Cbc0038I Pass   5: suminf.    0.79665 (5) obj. -12.2865 iterations 5
Cbc0038I Pass   6: suminf.    2.23371 (8) obj. -12.2865 iterations 14
Cbc0038I Pass   7: suminf.    1.72559 (6) obj. -12.2865 iterations 8
Cbc0038I Pass   8: suminf.    1.01969 (5) obj. -12.2865 iterations 3
Cbc0038I Pass   9: suminf.    1.96821 (8) obj. -12.2865 iterations 13
Cbc0038I Pass  10: suminf.    1.25762 (4) obj. -12.2865 iterations 15
Cbc0038I Pass  11: suminf.    1.11644 (3) obj. -12.2865 iterations 4
Cbc0038I Pass  12: suminf.    1.18573 (3) obj. -12.2865 iterations 3
Cbc0038I Pass  13: suminf.    1.18573 (3) obj. -12.2865 iterations 1
Cbc0038I Pass  14: suminf.    1.11644 (3) obj. -12.2865 iterations 3
Cbc0038I Pass  15: suminf.    1.44603 (5) obj. -12.2865 iterations 14
Cbc0038I Pass  16: suminf.    1.30172 (6) obj. -12.2865 iterations 5
Cbc0038I Pass  17: suminf.    1.56168 (5) obj. -12.2865 iterations 14
Cbc0038I Pass  18: suminf.    1.18426 (5) obj. -12.2865 iterations 4
Cbc0038I Pass  19: suminf.    1.90920 (5) obj. -12.2865 iterations 8
Cbc0038I Pass  20: suminf.    0.95159 (5) obj. -12.2865 iterations 4
Cbc0038I Pass  21: suminf.    0.95159 (5) obj. -12.2865 iterations 1
Cbc0038I Pass  22: suminf.    1.93014 (7) obj. -12.2865 iterations 11
Cbc0038I Pass  23: suminf.    1.81977 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  24: suminf.    1.81977 (5) obj. -12.2865 iterations 0
Cbc0038I Pass  25: suminf.    1.39083 (5) obj. -12.2865 iterations 7
Cbc0038I Pass  26: suminf.    0.95159 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  27: suminf.    0.95159 (5) obj. -12.2865 iterations 1
Cbc0038I Pass  28: suminf.    1.93014 (7) obj. -12.2865 iterations 11
Cbc0038I Pass  29: suminf.    1.81977 (5) obj. -12.2865 iterations 2
Cbc0038I Pass  30: suminf.    1.81977 (5) obj. -12.2865 iterations 0
Cbc0038I Pass  31: suminf.    1.39083 (5) obj. -12.2865 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 82 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -9.57993 to -10.773 (0.11 seconds)
Cbc0038I Round again with cutoff of -17.1581
Cbc0038I Pass  31: suminf.    2.90654 (17) obj. -17.1581 iterations 0
Cbc0038I Pass  32: suminf.    2.40419 (8) obj. -17.1581 iterations 20
Cbc0038I Pass  33: suminf.    1.69561 (7) obj. -17.1581 iterations 2
Cbc0038I Pass  34: suminf.    1.66179 (5) obj. -17.1581 iterations 4
Cbc0038I Pass  35: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  36: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  37: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  38: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  39: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  40: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  41: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  42: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  43: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  44: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  45: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  46: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  47: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  48: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  49: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  50: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  51: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  52: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  53: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  54: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I Pass  55: suminf.    1.61973 (6) obj. -17.1581 iterations 1
Cbc0038I Pass  56: suminf.    1.78742 (5) obj. -17.1581 iterations 8
Cbc0038I Pass  57: suminf.    1.67598 (5) obj. -17.1581 iterations 5
Cbc0038I Pass  58: suminf.    1.66179 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  59: suminf.    2.06582 (5) obj. -17.1581 iterations 2
Cbc0038I Pass  60: suminf.    1.73925 (6) obj. -17.1581 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 74 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -10.773 - took 0.13 seconds
Cbc0012I Integer solution of -10.77301 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 73 rows 42 columns
Cbc0031I 23 added rows had average density of 63.521739
Cbc0013I At root node, 23 cuts changed objective from -36.644718 to -30.374311 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10788 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1291 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.77301 best solution, best possible -30.374311 (0.84 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 16 rows 13 columns
Cbc0012I Integer solution of -11.62638 found by RINS after 6929 iterations and 42 nodes (1.07 seconds)
Cbc0001I Search completed - best objective -11.62638, took 7818 iterations and 70 nodes (1.11 seconds)
Cbc0032I Strong branching done 810 times (15430 iterations), fathomed 3 nodes and fixed 45 variables
Cbc0035I Maximum depth 23, 105 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 119 (-34) columns and 1973 (-1331) elements
Clp1000I sum of infeasibilities 2.82342e-07 - average 2.74118e-09, 58 fixed columns
Coin0506I Presolve 49 (-54) rows, 61 (-58) columns and 215 (-1758) elements
Clp0006I 0  Obj -7.9231258 Dual inf 1.1136521 (61)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 3.1317356 - largest nonzero change 2.121732e-05 ( 0.00091831452%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value -7.7968948
Clp0000I Optimal - objective value -7.7968948
Coin0511I After Postsolve, objective -7.7968948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.7968948 Dual inf 73.469678 (44)
Clp0014I Perturbing problem by 0.001% of 1.6146713 - largest nonzero change 2.5537523e-05 ( 0.0018056464%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 54.855273
Clp0000I Optimal - objective value 54.855273
Clp0000I Optimal - objective value 54.855273
Coin0511I After Postsolve, objective 54.855273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.85527331 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 121 columns (121 integer (121 of which binary)) and 1983 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 6.26211
Cbc0038I Pass   1: suminf.    2.09385 (31) obj. -26.7592 iterations 24
Cbc0038I Pass   2: suminf.    2.09385 (31) obj. -26.7592 iterations 1
Cbc0038I Pass   3: suminf.    1.14458 (19) obj. -13.8783 iterations 12
Cbc0038I Solution found of 7.72946
Cbc0038I Rounding solution of -1.38702 is better than previous of 7.72946

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -1.38702 to -3.98301 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.0957
Cbc0038I Pass   4: suminf.    2.09385 (31) obj. -26.7592 iterations 0
Cbc0038I Pass   5: suminf.    2.09385 (31) obj. -26.7592 iterations 1
Cbc0038I Pass   6: suminf.    0.83648 (13) obj. -8.0957 iterations 20
Cbc0038I Pass   7: suminf.    2.53792 (19) obj. -8.0957 iterations 35
Cbc0038I Pass   8: suminf.    2.53792 (19) obj. -8.0957 iterations 0
Cbc0038I Pass   9: suminf.    1.90886 (9) obj. -8.0957 iterations 28
Cbc0038I Pass  10: suminf.    1.65557 (11) obj. -8.0957 iterations 3
Cbc0038I Pass  11: suminf.    1.90886 (9) obj. -8.0957 iterations 6
Cbc0038I Pass  12: suminf.    1.72907 (15) obj. -8.0957 iterations 26
Cbc0038I Pass  13: suminf.    1.72907 (15) obj. -8.0957 iterations 5
Cbc0038I Pass  14: suminf.    1.50356 (13) obj. -8.0957 iterations 26
Cbc0038I Pass  15: suminf.    1.43217 (11) obj. -8.0957 iterations 4
Cbc0038I Pass  16: suminf.    1.59435 (10) obj. -8.0957 iterations 5
Cbc0038I Pass  17: suminf.    1.52417 (10) obj. -8.0957 iterations 4
Cbc0038I Pass  18: suminf.    1.44387 (10) obj. -8.0957 iterations 7
Cbc0038I Pass  19: suminf.    2.26039 (18) obj. -8.0957 iterations 33
Cbc0038I Pass  20: suminf.    1.51707 (16) obj. -8.0957 iterations 10
Cbc0038I Pass  21: suminf.    1.61450 (12) obj. -8.0957 iterations 21
Cbc0038I Pass  22: suminf.    1.19640 (12) obj. -8.0957 iterations 10
Cbc0038I Pass  23: suminf.    2.68757 (14) obj. -8.0957 iterations 11
Cbc0038I Pass  24: suminf.    1.65557 (11) obj. -8.0957 iterations 7
Cbc0038I Pass  25: suminf.    1.90886 (9) obj. -8.0957 iterations 6
Cbc0038I Pass  26: suminf.    1.69915 (15) obj. -8.0957 iterations 24
Cbc0038I Pass  27: suminf.    0.69150 (9) obj. -8.76665 iterations 9
Cbc0038I Pass  28: suminf.    0.74934 (14) obj. -8.0957 iterations 25
Cbc0038I Pass  29: suminf.    0.53554 (10) obj. -8.0957 iterations 6
Cbc0038I Pass  30: suminf.    0.67251 (10) obj. -8.0957 iterations 9
Cbc0038I Pass  31: suminf.    0.83085 (10) obj. -8.0957 iterations 22
Cbc0038I Pass  32: suminf.    0.51133 (9) obj. -8.0957 iterations 13
Cbc0038I Pass  33: suminf.    0.61103 (9) obj. -8.0957 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 121 columns, reduced to 27 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.98301 to -4.09373 (0.07 seconds)
Cbc0038I Round again with cutoff of -15.4984
Cbc0038I Pass  33: suminf.    2.09385 (31) obj. -26.7592 iterations 0
Cbc0038I Pass  34: suminf.    2.09385 (31) obj. -26.7592 iterations 1
Cbc0038I Pass  35: suminf.    1.41046 (18) obj. -15.4984 iterations 28
Cbc0038I Pass  36: suminf.    1.91265 (17) obj. -15.4984 iterations 45
Cbc0038I Pass  37: suminf.    1.74989 (16) obj. -15.4984 iterations 5
Cbc0038I Pass  38: suminf.    2.74750 (17) obj. -15.4984 iterations 21
Cbc0038I Pass  39: suminf.    2.20862 (15) obj. -15.4984 iterations 3
Cbc0038I Pass  40: suminf.    2.18454 (13) obj. -15.4984 iterations 6
Cbc0038I Pass  41: suminf.    1.74167 (16) obj. -15.4984 iterations 9
Cbc0038I Pass  42: suminf.    2.37443 (13) obj. -15.4984 iterations 7
Cbc0038I Pass  43: suminf.    2.10186 (16) obj. -15.4984 iterations 6
Cbc0038I Pass  44: suminf.    2.32250 (16) obj. -15.4984 iterations 7
Cbc0038I Pass  45: suminf.    2.20862 (15) obj. -15.4984 iterations 5
Cbc0038I Pass  46: suminf.    2.18454 (13) obj. -15.4984 iterations 5
Cbc0038I Pass  47: suminf.    1.74167 (16) obj. -15.4984 iterations 8
Cbc0038I Pass  48: suminf.    2.37443 (13) obj. -15.4984 iterations 7
Cbc0038I Pass  49: suminf.    2.10186 (16) obj. -15.4984 iterations 6
Cbc0038I Pass  50: suminf.    2.32250 (16) obj. -15.4984 iterations 7
Cbc0038I Pass  51: suminf.    2.20862 (15) obj. -15.4984 iterations 5
Cbc0038I Pass  52: suminf.    2.18454 (13) obj. -15.4984 iterations 5
Cbc0038I Pass  53: suminf.    1.74167 (16) obj. -15.4984 iterations 8
Cbc0038I Pass  54: suminf.    2.37443 (13) obj. -15.4984 iterations 7
Cbc0038I Pass  55: suminf.    2.10186 (16) obj. -15.4984 iterations 6
Cbc0038I Pass  56: suminf.    2.32250 (16) obj. -15.4984 iterations 7
Cbc0038I Pass  57: suminf.    2.20862 (15) obj. -15.4984 iterations 5
Cbc0038I Pass  58: suminf.    2.18454 (13) obj. -15.4984 iterations 5
Cbc0038I Pass  59: suminf.    1.74167 (16) obj. -15.4984 iterations 8
Cbc0038I Pass  60: suminf.    2.37443 (13) obj. -15.4984 iterations 7
Cbc0038I Pass  61: suminf.    2.10186 (16) obj. -15.4984 iterations 6
Cbc0038I Pass  62: suminf.    2.75585 (14) obj. -15.4984 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -4.09373 - took 0.09 seconds
Cbc0012I Integer solution of -4.09373 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 105 rows 121 columns, reduced to 15 rows 16 columns
Cbc0031I 59 added rows had average density of 29.271186
Cbc0013I At root node, 59 cuts changed objective from -45.109056 to -16.140409 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12731 row cuts average 2.0 elements, 0 column cuts (1 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1607 row cuts average 112.7 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 442 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 880 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 344 row cuts average 68.2 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 169 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.717 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.09373 best solution, best possible -16.140409 (2.80 seconds)
Cbc0012I Integer solution of -8.88664 found by rounding after 5265 iterations and 1 nodes (2.80 seconds)
Cbc0012I Integer solution of -10.66249 found by rounding after 5424 iterations and 2 nodes (3.05 seconds)
Cbc0004I Integer solution of -10.7609 found after 5487 iterations and 4 nodes (3.18 seconds)
Cbc0012I Integer solution of -11.62638 found by rounding after 5522 iterations and 6 nodes (3.24 seconds)
Cbc0010I After 8 nodes, 1 on tree, -11.62638 best solution, best possible -15.21142 (3.85 seconds)
Cbc0010I After 15 nodes, 8 on tree, -11.62638 best solution, best possible -15.21142 (4.63 seconds)
Cbc0010I After 33 nodes, 6 on tree, -11.62638 best solution, best possible -15.21142 (5.52 seconds)
Cbc0010I After 42 nodes, 2 on tree, -11.62638 best solution, best possible -15.21142 (6.23 seconds)
Cbc0001I Search completed - best objective -11.62638, took 8530 iterations and 44 nodes (6.24 seconds)
Cbc0032I Strong branching done 700 times (17855 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 78 variables fixed on reduced cost
Total time (CPU seconds):       4.39   (Wallclock seconds):       6.28

