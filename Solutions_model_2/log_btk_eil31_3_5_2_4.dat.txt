Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 25 (-8) columns and 124 (-59) elements
Clp1000I sum of infeasibilities 1.63608e-06 - average 3.99044e-08, 3 fixed columns
Coin0506I Presolve 35 (-6) rows, 22 (-3) columns and 106 (-18) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Coin0511I After Postsolve, objective 48.947571, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Coin0511I After Postsolve, objective 48.947571, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.9475711 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 25 columns (24 integer (24 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.529%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.11913
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.38598 iterations 15
Cbc0038I Solution found of -7.38598
Cbc0038I Relaxing continuous gives -7.38598
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -7.38598 to -29.0965 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.0591
Cbc0038I Pass   2: suminf.    0.66079 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   3: suminf.    0.36443 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   4: suminf.    1.02276 (3) obj. -31.0591 iterations 5
Cbc0038I Pass   5: suminf.    1.02276 (3) obj. -31.0591 iterations 1
Cbc0038I Pass   6: suminf.    0.55603 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   7: suminf.    0.94308 (3) obj. -31.0591 iterations 4
Cbc0038I Pass   8: suminf.    0.72897 (2) obj. -31.0591 iterations 2
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -31.0591 iterations 1
Cbc0038I Pass  10: suminf.    0.48560 (1) obj. -31.0591 iterations 1
Cbc0038I Pass  11: suminf.    2.13961 (7) obj. -31.0591 iterations 6
Cbc0038I Pass  12: suminf.    0.64471 (2) obj. -31.0591 iterations 5
Cbc0038I Pass  13: suminf.    0.86381 (3) obj. -31.0591 iterations 1
Cbc0038I Pass  14: suminf.    0.64471 (2) obj. -31.0591 iterations 1
Cbc0038I Pass  15: suminf.    1.93103 (7) obj. -31.0591 iterations 7
Cbc0038I Pass  16: suminf.    1.65773 (6) obj. -31.0591 iterations 5
Cbc0038I Pass  17: suminf.    0.61001 (4) obj. -31.0591 iterations 7
Cbc0038I Pass  18: suminf.    0.28421 (4) obj. -31.0591 iterations 6
Cbc0038I Pass  19: suminf.    1.54899 (4) obj. -31.0591 iterations 8
Cbc0038I Pass  20: suminf.    1.38275 (4) obj. -31.0591 iterations 4
Cbc0038I Pass  21: suminf.    1.23825 (4) obj. -31.0591 iterations 1
Cbc0038I Pass  22: suminf.    1.48351 (4) obj. -31.0591 iterations 5
Cbc0038I Pass  23: suminf.    1.20402 (4) obj. -31.0591 iterations 1
Cbc0038I Pass  24: suminf.    0.84782 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  25: suminf.    0.32023 (2) obj. -31.0591 iterations 5
Cbc0038I Pass  26: suminf.    0.32023 (2) obj. -31.0591 iterations 0
Cbc0038I Pass  27: suminf.    0.20839 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  28: suminf.    0.20839 (3) obj. -31.0591 iterations 0
Cbc0038I Pass  29: suminf.    0.60925 (4) obj. -31.0591 iterations 4
Cbc0038I Pass  30: suminf.    0.57109 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  31: suminf.    0.31852 (2) obj. -31.0591 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -29.0965 to -30.3772 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.5916
Cbc0038I Pass  31: suminf.    0.85493 (3) obj. -34.5916 iterations 1
Cbc0038I Pass  32: suminf.    0.67137 (2) obj. -34.5916 iterations 5
Cbc0038I Pass  33: suminf.    0.98340 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  34: suminf.    0.79571 (4) obj. -34.5916 iterations 9
Cbc0038I Pass  35: suminf.    0.78641 (3) obj. -34.5916 iterations 5
Cbc0038I Pass  36: suminf.    1.24997 (5) obj. -34.5916 iterations 5
Cbc0038I Pass  37: suminf.    1.10569 (4) obj. -34.5916 iterations 3
Cbc0038I Pass  38: suminf.    1.42838 (4) obj. -34.5916 iterations 4
Cbc0038I Pass  39: suminf.    1.11332 (5) obj. -34.5916 iterations 4
Cbc0038I Pass  40: suminf.    1.21277 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  41: suminf.    0.76126 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  42: suminf.    0.67762 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  43: suminf.    0.34054 (2) obj. -34.5916 iterations 6
Cbc0038I Pass  44: suminf.    0.34054 (2) obj. -34.5916 iterations 0
Cbc0038I Pass  45: suminf.    0.83983 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  46: suminf.    0.85493 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  47: suminf.    0.67137 (2) obj. -34.5916 iterations 5
Cbc0038I Pass  48: suminf.    0.98340 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  49: suminf.    1.88528 (4) obj. -34.5916 iterations 5
Cbc0038I Pass  50: suminf.    1.22087 (5) obj. -34.5916 iterations 2
Cbc0038I Pass  51: suminf.    1.08151 (4) obj. -34.5916 iterations 3
Cbc0038I Pass  52: suminf.    1.07701 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  53: suminf.    0.90759 (5) obj. -34.5916 iterations 1
Cbc0038I Pass  54: suminf.    1.16165 (4) obj. -34.5916 iterations 9
Cbc0038I Pass  55: suminf.    0.98655 (4) obj. -34.5916 iterations 1
Cbc0038I Pass  56: suminf.    1.33672 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  57: suminf.    1.33385 (4) obj. -34.5916 iterations 2
Cbc0038I Pass  58: suminf.    1.59865 (5) obj. -34.5916 iterations 5
Cbc0038I Pass  59: suminf.    1.26005 (3) obj. -34.5916 iterations 3
Cbc0038I Pass  60: suminf.    2.60223 (9) obj. -34.5916 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -30.3772 - took 0.05 seconds
Cbc0012I Integer solution of -30.3772 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 41 rows 25 columns, reduced to 28 rows 18 columns
Cbc0031I 8 added rows had average density of 15.375
Cbc0013I At root node, 8 cuts changed objective from -48.721629 to -38.382818 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 823 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 486 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 45 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.3772, took 1950 iterations and 8 nodes (0.19 seconds)
Cbc0032I Strong branching done 94 times (696 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-24) rows, 47 (-15) columns and 366 (-280) elements
Clp1000I sum of infeasibilities 1.47184e-08 - average 3.77394e-10, 17 fixed columns
Coin0506I Presolve 26 (-13) rows, 30 (-17) columns and 176 (-190) elements
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 1.280178 - largest nonzero change 0 ( 0%) - largest zero change 2.7381913e-05
Clp0000I Optimal - objective value 74.883909
Clp0000I Optimal - objective value 74.883909
Coin0511I After Postsolve, objective 74.883909, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1759676 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 74.883909
Clp0000I Optimal - objective value 74.883909
Clp0000I Optimal - objective value 74.883909
Coin0511I After Postsolve, objective 74.883909, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.88390857 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 43 columns (43 integer (43 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.233%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.71186
Cbc0038I Pass   1: suminf.    0.26727 (5) obj. -14.2135 iterations 13
Cbc0038I Pass   2: suminf.    0.26727 (5) obj. -14.2135 iterations 2
Cbc0038I Solution found of -5.693
Cbc0038I Rounding solution of -9.08774 is better than previous of -5.693

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 43 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -9.08774 to -22.0965 (0.02 seconds)
Cbc0038I Round again with cutoff of -24.6536
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.60808 (10) obj. -24.6536 iterations 5
Cbc0038I Pass   4: suminf.    1.60808 (10) obj. -24.6536 iterations 2
Cbc0038I Pass   5: suminf.    0.08061 (1) obj. -24.6536 iterations 21
Cbc0038I Pass   6: suminf.    0.08061 (1) obj. -24.6536 iterations 0
Cbc0038I Pass   7: suminf.    0.36250 (1) obj. -29.8235 iterations 2
Cbc0038I Pass   8: suminf.    0.11996 (1) obj. -24.6536 iterations 1
Cbc0038I Pass   9: suminf.    0.43147 (2) obj. -24.6536 iterations 12
Cbc0038I Pass  10: suminf.    0.43147 (2) obj. -24.6536 iterations 0
Cbc0038I Pass  11: suminf.    0.17651 (1) obj. -24.6536 iterations 3
Cbc0038I Pass  12: suminf.    0.06667 (1) obj. -27.8497 iterations 1
Cbc0038I Pass  13: suminf.    1.79624 (7) obj. -24.6536 iterations 17
Cbc0038I Pass  14: suminf.    1.50683 (7) obj. -24.6536 iterations 3
Cbc0038I Pass  15: suminf.    0.95026 (6) obj. -24.6536 iterations 2
Cbc0038I Pass  16: suminf.    0.32541 (4) obj. -24.6536 iterations 4
Cbc0038I Pass  17: suminf.    0.36952 (2) obj. -24.6536 iterations 6
Cbc0038I Pass  18: suminf.    0.23556 (2) obj. -28.5514 iterations 1
Cbc0038I Pass  19: suminf.    0.47514 (3) obj. -24.6536 iterations 3
Cbc0038I Pass  20: suminf.    0.19425 (2) obj. -24.6536 iterations 2
Cbc0038I Pass  21: suminf.    1.90934 (5) obj. -24.6536 iterations 7
Cbc0038I Pass  22: suminf.    1.68088 (4) obj. -27.3599 iterations 2
Cbc0038I Pass  23: suminf.    1.20833 (3) obj. -26.4148 iterations 1
Cbc0038I Pass  24: suminf.    0.45176 (1) obj. -24.6536 iterations 3
Cbc0038I Pass  25: suminf.    0.43333 (1) obj. -25.1898 iterations 1
Cbc0038I Pass  26: suminf.    1.84543 (6) obj. -24.6536 iterations 12
Cbc0038I Pass  27: suminf.    1.02201 (4) obj. -24.6536 iterations 5
Cbc0038I Pass  28: suminf.    0.48889 (1) obj. -25.3302 iterations 4
Cbc0038I Pass  29: suminf.    0.46563 (1) obj. -24.6536 iterations 1
Cbc0038I Pass  30: suminf.    2.40631 (8) obj. -24.6536 iterations 13
Cbc0038I Pass  31: suminf.    1.71840 (7) obj. -24.6536 iterations 2
Cbc0038I Pass  32: suminf.    0.47267 (3) obj. -24.6536 iterations 11
Cbc0038I Rounding solution of -27.0088 is better than previous of -22.0965

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 43 columns, reduced to 22 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -27.0088 to -29.1403 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.8456
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.98308 (15) obj. -32.8456 iterations 1
Cbc0038I Pass  33: suminf.    1.89343 (10) obj. -32.8456 iterations 1
Cbc0038I Pass  34: suminf.    0.90681 (8) obj. -32.8456 iterations 19
Cbc0038I Pass  35: suminf.    0.84600 (8) obj. -32.8456 iterations 1
Cbc0038I Pass  36: suminf.    0.93466 (4) obj. -32.8456 iterations 11
Cbc0038I Pass  37: suminf.    0.75209 (4) obj. -32.8456 iterations 1
Cbc0038I Pass  38: suminf.    1.14675 (4) obj. -32.8456 iterations 3
Cbc0038I Pass  39: suminf.    0.81183 (3) obj. -33.1613 iterations 2
Cbc0038I Pass  40: suminf.    1.11665 (3) obj. -32.8456 iterations 3
Cbc0038I Pass  41: suminf.    1.11665 (3) obj. -32.8456 iterations 1
Cbc0038I Pass  42: suminf.    0.91134 (3) obj. -32.8456 iterations 4
Cbc0038I Pass  43: suminf.    0.88640 (3) obj. -34.9298 iterations 2
Cbc0038I Pass  44: suminf.    2.20636 (7) obj. -32.8456 iterations 11
Cbc0038I Pass  45: suminf.    1.17339 (3) obj. -35.4418 iterations 6
Cbc0038I Pass  46: suminf.    0.94334 (3) obj. -32.8456 iterations 2
Cbc0038I Pass  47: suminf.    0.94334 (3) obj. -32.8456 iterations 1
Cbc0038I Pass  48: suminf.    1.11746 (3) obj. -32.8456 iterations 4
Cbc0038I Pass  49: suminf.    1.11746 (3) obj. -32.8456 iterations 1
Cbc0038I Pass  50: suminf.    0.94334 (3) obj. -32.8456 iterations 1
Cbc0038I Pass  51: suminf.    2.17721 (6) obj. -32.8456 iterations 9
Cbc0038I Pass  52: suminf.    1.18053 (3) obj. -32.8456 iterations 4
Cbc0038I Pass  53: suminf.    1.17339 (3) obj. -33.4418 iterations 1
Cbc0038I Pass  54: suminf.    1.27938 (3) obj. -32.8456 iterations 1
Cbc0038I Pass  55: suminf.    1.85455 (5) obj. -32.8456 iterations 6
Cbc0038I Pass  56: suminf.    1.50673 (4) obj. -34.1085 iterations 2
Cbc0038I Pass  57: suminf.    3.30566 (10) obj. -32.8456 iterations 8
Cbc0038I Pass  58: suminf.    2.01529 (7) obj. -32.8456 iterations 4
Cbc0038I Pass  59: suminf.    1.74360 (7) obj. -32.8456 iterations 3
Cbc0038I Pass  60: suminf.    1.40310 (5) obj. -32.8456 iterations 9
Cbc0038I Pass  61: suminf.    1.39257 (5) obj. -32.8456 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 43 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -29.1403 - took 0.04 seconds
Cbc0012I Integer solution of -29.14035 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 35 rows 43 columns, reduced to 18 rows 22 columns
Cbc0031I 16 added rows had average density of 14.625
Cbc0013I At root node, 16 cuts changed objective from -47.666243 to -33.962577 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1405 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 512 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 103 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 284 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 98 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 288 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 282 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.737 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -29.14035 best solution, best possible -33.962577 (1.56 seconds)
Cbc0012I Integer solution of -29.3772 found by DiveCoefficient after 2076 iterations and 16 nodes (1.65 seconds)
Cbc0012I Integer solution of -30.3772 found by rounding after 2121 iterations and 20 nodes (1.65 seconds)
Cbc0001I Search completed - best objective -30.3772, took 2159 iterations and 20 nodes (1.66 seconds)
Cbc0032I Strong branching done 270 times (1700 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 7, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.10   (Wallclock seconds):       1.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 25 (-8) columns and 124 (-59) elements
Clp1000I sum of infeasibilities 1.63608e-06 - average 3.99044e-08, 3 fixed columns
Coin0506I Presolve 35 (-6) rows, 22 (-3) columns and 106 (-18) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Coin0511I After Postsolve, objective 48.947571, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Clp0000I Optimal - objective value 48.947571
Coin0511I After Postsolve, objective 48.947571, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.9475711 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 25 columns (24 integer (24 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.529%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.11913
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.38598 iterations 15
Cbc0038I Solution found of -7.38598
Cbc0038I Relaxing continuous gives -7.38598
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -7.38598 to -29.0965 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.0591
Cbc0038I Pass   2: suminf.    0.66079 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   3: suminf.    0.36443 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   4: suminf.    1.02276 (3) obj. -31.0591 iterations 5
Cbc0038I Pass   5: suminf.    1.02276 (3) obj. -31.0591 iterations 1
Cbc0038I Pass   6: suminf.    0.55603 (2) obj. -31.0591 iterations 3
Cbc0038I Pass   7: suminf.    0.94308 (3) obj. -31.0591 iterations 4
Cbc0038I Pass   8: suminf.    0.72897 (2) obj. -31.0591 iterations 2
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -31.0591 iterations 1
Cbc0038I Pass  10: suminf.    0.48560 (1) obj. -31.0591 iterations 1
Cbc0038I Pass  11: suminf.    2.13961 (7) obj. -31.0591 iterations 6
Cbc0038I Pass  12: suminf.    0.64471 (2) obj. -31.0591 iterations 5
Cbc0038I Pass  13: suminf.    0.86381 (3) obj. -31.0591 iterations 1
Cbc0038I Pass  14: suminf.    0.64471 (2) obj. -31.0591 iterations 1
Cbc0038I Pass  15: suminf.    1.93103 (7) obj. -31.0591 iterations 7
Cbc0038I Pass  16: suminf.    1.65773 (6) obj. -31.0591 iterations 5
Cbc0038I Pass  17: suminf.    0.61001 (4) obj. -31.0591 iterations 7
Cbc0038I Pass  18: suminf.    0.28421 (4) obj. -31.0591 iterations 6
Cbc0038I Pass  19: suminf.    1.54899 (4) obj. -31.0591 iterations 8
Cbc0038I Pass  20: suminf.    1.38275 (4) obj. -31.0591 iterations 4
Cbc0038I Pass  21: suminf.    1.23825 (4) obj. -31.0591 iterations 1
Cbc0038I Pass  22: suminf.    1.48351 (4) obj. -31.0591 iterations 5
Cbc0038I Pass  23: suminf.    1.20402 (4) obj. -31.0591 iterations 1
Cbc0038I Pass  24: suminf.    0.84782 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  25: suminf.    0.32023 (2) obj. -31.0591 iterations 5
Cbc0038I Pass  26: suminf.    0.32023 (2) obj. -31.0591 iterations 0
Cbc0038I Pass  27: suminf.    0.20839 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  28: suminf.    0.20839 (3) obj. -31.0591 iterations 0
Cbc0038I Pass  29: suminf.    0.60925 (4) obj. -31.0591 iterations 4
Cbc0038I Pass  30: suminf.    0.57109 (3) obj. -31.0591 iterations 2
Cbc0038I Pass  31: suminf.    0.31852 (2) obj. -31.0591 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -29.0965 to -30.3772 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.5916
Cbc0038I Pass  31: suminf.    0.85493 (3) obj. -34.5916 iterations 1
Cbc0038I Pass  32: suminf.    0.67137 (2) obj. -34.5916 iterations 5
Cbc0038I Pass  33: suminf.    0.98340 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  34: suminf.    0.79571 (4) obj. -34.5916 iterations 9
Cbc0038I Pass  35: suminf.    0.78641 (3) obj. -34.5916 iterations 5
Cbc0038I Pass  36: suminf.    1.24997 (5) obj. -34.5916 iterations 5
Cbc0038I Pass  37: suminf.    1.10569 (4) obj. -34.5916 iterations 3
Cbc0038I Pass  38: suminf.    1.42838 (4) obj. -34.5916 iterations 4
Cbc0038I Pass  39: suminf.    1.11332 (5) obj. -34.5916 iterations 4
Cbc0038I Pass  40: suminf.    1.21277 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  41: suminf.    0.76126 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  42: suminf.    0.67762 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  43: suminf.    0.34054 (2) obj. -34.5916 iterations 6
Cbc0038I Pass  44: suminf.    0.34054 (2) obj. -34.5916 iterations 0
Cbc0038I Pass  45: suminf.    0.83983 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  46: suminf.    0.85493 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  47: suminf.    0.67137 (2) obj. -34.5916 iterations 5
Cbc0038I Pass  48: suminf.    0.98340 (3) obj. -34.5916 iterations 4
Cbc0038I Pass  49: suminf.    1.88528 (4) obj. -34.5916 iterations 5
Cbc0038I Pass  50: suminf.    1.22087 (5) obj. -34.5916 iterations 2
Cbc0038I Pass  51: suminf.    1.08151 (4) obj. -34.5916 iterations 3
Cbc0038I Pass  52: suminf.    1.07701 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  53: suminf.    0.90759 (5) obj. -34.5916 iterations 1
Cbc0038I Pass  54: suminf.    1.16165 (4) obj. -34.5916 iterations 9
Cbc0038I Pass  55: suminf.    0.98655 (4) obj. -34.5916 iterations 1
Cbc0038I Pass  56: suminf.    1.33672 (4) obj. -34.5916 iterations 6
Cbc0038I Pass  57: suminf.    1.33385 (4) obj. -34.5916 iterations 2
Cbc0038I Pass  58: suminf.    1.59865 (5) obj. -34.5916 iterations 5
Cbc0038I Pass  59: suminf.    1.26005 (3) obj. -34.5916 iterations 3
Cbc0038I Pass  60: suminf.    2.60223 (9) obj. -34.5916 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 25 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -30.3772 - took 0.04 seconds
Cbc0012I Integer solution of -30.3772 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 41 rows 25 columns, reduced to 28 rows 18 columns
Cbc0031I 8 added rows had average density of 15.375
Cbc0013I At root node, 8 cuts changed objective from -48.721629 to -38.382818 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 823 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 486 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 45 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.3772, took 1950 iterations and 8 nodes (0.20 seconds)
Cbc0032I Strong branching done 94 times (696 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-31) rows, 41 (-22) columns and 284 (-365) elements
Clp1000I sum of infeasibilities 1.93756e-08 - average 5.6987e-10, 22 fixed columns
Coin0506I Presolve 13 (-21) rows, 19 (-22) columns and 59 (-225) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 2.0943455 - largest nonzero change 0 ( 0%) - largest zero change 2.1539836e-05
Clp0000I Optimal - objective value 19.769195
Clp0000I Optimal - objective value 19.769195
Coin0511I After Postsolve, objective 19.769195, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5490818 - largest nonzero change 0 ( 0%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value 59.398045
Clp0000I Optimal - objective value 59.398045
Clp0000I Optimal - objective value 59.398045
Coin0511I After Postsolve, objective 59.398045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.3980453 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 41 columns (41 integer (41 of which binary)) and 287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.493%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.93558
Cbc0038I Pass   1: suminf.    0.79886 (10) obj. -20.4982 iterations 9
Cbc0038I Pass   2: suminf.    0.79886 (10) obj. -20.4982 iterations 0
Cbc0038I Solution found of -7.53512
Cbc0038I Rounding solution of -8.53512 is better than previous of -7.53512

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -8.53512 to -27.9386 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.8896
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.21540 (15) obj. -29.8896 iterations 1
Cbc0038I Pass   4: suminf.    2.21540 (15) obj. -29.8896 iterations 0
Cbc0038I Pass   5: suminf.    1.19794 (4) obj. -29.8896 iterations 22
Cbc0038I Pass   6: suminf.    0.75610 (2) obj. -29.8896 iterations 2
Cbc0038I Pass   7: suminf.    0.64778 (4) obj. -29.8896 iterations 4
Cbc0038I Pass   8: suminf.    1.04088 (3) obj. -29.8896 iterations 3
Cbc0038I Pass   9: suminf.    0.68908 (2) obj. -31.9906 iterations 1
Cbc0038I Pass  10: suminf.    0.57866 (3) obj. -29.8896 iterations 3
Cbc0038I Pass  11: suminf.    0.53451 (2) obj. -29.8896 iterations 2
Cbc0038I Pass  12: suminf.    0.79844 (2) obj. -29.8896 iterations 1
Cbc0038I Pass  13: suminf.    1.05117 (3) obj. -29.8896 iterations 7
Cbc0038I Pass  14: suminf.    1.05117 (3) obj. -29.8896 iterations 0
Cbc0038I Pass  15: suminf.    0.75407 (2) obj. -31.0277 iterations 4
Cbc0038I Pass  16: suminf.    0.71496 (2) obj. -29.8896 iterations 1
Cbc0038I Pass  17: suminf.    0.93394 (2) obj. -29.8896 iterations 1
Cbc0038I Pass  18: suminf.    0.93394 (2) obj. -29.8896 iterations 1
Cbc0038I Pass  19: suminf.    2.22407 (7) obj. -29.8896 iterations 14
Cbc0038I Pass  20: suminf.    1.36181 (6) obj. -31.5862 iterations 3
Cbc0038I Pass  21: suminf.    0.98635 (6) obj. -29.8896 iterations 2
Cbc0038I Pass  22: suminf.    0.56283 (3) obj. -29.8896 iterations 8
Cbc0038I Pass  23: suminf.    0.50505 (3) obj. -29.8896 iterations 1
Cbc0038I Pass  24: suminf.    0.97623 (3) obj. -31.0552 iterations 2
Cbc0038I Pass  25: suminf.    0.73728 (3) obj. -29.8896 iterations 1
Cbc0038I Pass  26: suminf.    1.06061 (3) obj. -29.8896 iterations 2
Cbc0038I Pass  27: suminf.    1.19088 (6) obj. -29.8896 iterations 10
Cbc0038I Pass  28: suminf.    0.52774 (4) obj. -29.8896 iterations 3
Cbc0038I Pass  29: suminf.    0.75285 (4) obj. -29.8896 iterations 5
Cbc0038I Pass  30: suminf.    0.65659 (3) obj. -29.8896 iterations 3
Cbc0038I Pass  31: suminf.    0.48935 (4) obj. -29.8896 iterations 4
Cbc0038I Pass  32: suminf.    0.46185 (3) obj. -29.8896 iterations 2
Cbc0038I Rounding solution of -29.0965 is better than previous of -27.9386

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -33.4011
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.78138 (15) obj. -33.4011 iterations 1
Cbc0038I Pass  33: suminf.    2.38685 (15) obj. -33.4011 iterations 2
Cbc0038I Pass  34: suminf.    0.44839 (4) obj. -33.4011 iterations 27
Cbc0038I Pass  35: suminf.    0.44839 (4) obj. -33.4011 iterations 0
Cbc0038I Pass  36: suminf.    0.43643 (3) obj. -34.4633 iterations 3
Cbc0038I Pass  37: suminf.    0.37804 (2) obj. -33.4011 iterations 2
Cbc0038I Pass  38: suminf.    0.45600 (4) obj. -33.4011 iterations 5
Cbc0038I Pass  39: suminf.    1.63064 (6) obj. -33.4011 iterations 7
Cbc0038I Pass  40: suminf.    1.14710 (4) obj. -33.4011 iterations 6
Cbc0038I Pass  41: suminf.    1.05098 (4) obj. -33.4011 iterations 5
Cbc0038I Pass  42: suminf.    1.05098 (4) obj. -33.4011 iterations 0
Cbc0038I Pass  43: suminf.    1.11328 (4) obj. -33.4011 iterations 1
Cbc0038I Pass  44: suminf.    1.02688 (4) obj. -33.4011 iterations 4
Cbc0038I Pass  45: suminf.    0.86853 (3) obj. -33.4011 iterations 6
Cbc0038I Pass  46: suminf.    0.82084 (3) obj. -33.4011 iterations 3
Cbc0038I Pass  47: suminf.    1.06257 (3) obj. -33.4011 iterations 5
Cbc0038I Pass  48: suminf.    0.18671 (2) obj. -33.4011 iterations 3
Cbc0038I Pass  49: suminf.    0.18671 (2) obj. -33.4011 iterations 0
Cbc0038I Pass  50: suminf.    1.26361 (3) obj. -33.4011 iterations 5
Cbc0038I Pass  51: suminf.    0.18671 (2) obj. -33.4011 iterations 2
Cbc0038I Pass  52: suminf.    1.91693 (7) obj. -33.4011 iterations 12
Cbc0038I Pass  53: suminf.    1.90202 (7) obj. -33.4011 iterations 2
Cbc0038I Pass  54: suminf.    0.88521 (4) obj. -33.4011 iterations 10
Cbc0038I Pass  55: suminf.    0.85991 (4) obj. -33.4011 iterations 4
Cbc0038I Pass  56: suminf.    1.46726 (4) obj. -33.4011 iterations 2
Cbc0038I Pass  57: suminf.    0.68741 (3) obj. -33.8837 iterations 2
Cbc0038I Pass  58: suminf.    0.85991 (4) obj. -33.4011 iterations 4
Cbc0038I Pass  59: suminf.    1.40636 (7) obj. -33.4011 iterations 15
Cbc0038I Pass  60: suminf.    1.30443 (6) obj. -33.4011 iterations 4
Cbc0038I Pass  61: suminf.    1.05370 (4) obj. -33.4011 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.0965 - took 0.03 seconds
Cbc0012I Integer solution of -29.09646 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 34 rows 41 columns, reduced to 5 rows 9 columns
Cbc0031I 16 added rows had average density of 15.125
Cbc0013I At root node, 16 cuts changed objective from -47.447394 to -33.765726 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1218 row cuts average 2.5 elements, 2 column cuts (2 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 542 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 100 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 47 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 102 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 348 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 367 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.752 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -29.09646 best solution, best possible -33.765694 (1.55 seconds)
Cbc0012I Integer solution of -30.3772 found by DiveCoefficient after 1441 iterations and 1 nodes (1.56 seconds)
Cbc0001I Search completed - best objective -30.3772, took 2066 iterations and 18 nodes (1.67 seconds)
Cbc0032I Strong branching done 254 times (1280 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 33 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.68

