Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 48 (-2) columns and 260 (-25) elements
Clp1000I sum of infeasibilities 0.00194415 - average 2.26064e-05, 15 fixed columns
Coin0506I Presolve 51 (-35) rows, 32 (-16) columns and 158 (-102) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 2354.6734
Clp0000I Optimal - objective value 2354.6734
Coin0511I After Postsolve, objective 2354.6734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306143 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 2354.6734
Clp0000I Optimal - objective value 2354.6734
Clp0000I Optimal - objective value 2354.6734
Coin0511I After Postsolve, objective 2354.6734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2354.673369 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 48 columns (47 integer (47 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 10.7777
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 635.146 iterations 29
Cbc0038I Solution found of 635.146
Cbc0038I Relaxing continuous gives 635.146
Cbc0038I Rounding solution of 267.903 is better than previous of 635.146

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 267.903 to -351.885 (0.03 seconds)
Cbc0038I Round again with cutoff of -552.164
Cbc0038I Pass   2: suminf.    2.07711 (8) obj. -552.164 iterations 7
Cbc0038I Pass   3: suminf.    2.03616 (7) obj. -552.164 iterations 10
Cbc0038I Pass   4: suminf.    1.99484 (9) obj. -552.164 iterations 2
Cbc0038I Pass   5: suminf.    2.07723 (6) obj. -552.164 iterations 12
Cbc0038I Pass   6: suminf.    2.07723 (6) obj. -552.164 iterations 0
Cbc0038I Pass   7: suminf.    2.24334 (7) obj. -552.164 iterations 9
Cbc0038I Pass   8: suminf.    2.53152 (7) obj. -552.164 iterations 6
Cbc0038I Pass   9: suminf.    2.12771 (8) obj. -552.164 iterations 4
Cbc0038I Pass  10: suminf.    2.12488 (9) obj. -552.164 iterations 1
Cbc0038I Pass  11: suminf.    2.32332 (8) obj. -552.164 iterations 13
Cbc0038I Pass  12: suminf.    2.32332 (8) obj. -552.164 iterations 0
Cbc0038I Pass  13: suminf.    2.21265 (7) obj. -552.164 iterations 9
Cbc0038I Pass  14: suminf.    1.14965 (5) obj. -552.164 iterations 3
Cbc0038I Pass  15: suminf.    0.96563 (5) obj. -552.164 iterations 2
Cbc0038I Pass  16: suminf.    1.66851 (7) obj. -552.164 iterations 6
Cbc0038I Pass  17: suminf.    1.41834 (5) obj. -552.164 iterations 2
Cbc0038I Pass  18: suminf.    1.77626 (6) obj. -552.164 iterations 5
Cbc0038I Pass  19: suminf.    1.01168 (5) obj. -552.164 iterations 2
Cbc0038I Pass  20: suminf.    0.96563 (5) obj. -552.164 iterations 1
Cbc0038I Pass  21: suminf.    1.66851 (7) obj. -552.164 iterations 6
Cbc0038I Pass  22: suminf.    1.41834 (5) obj. -552.164 iterations 2
Cbc0038I Pass  23: suminf.    1.77626 (6) obj. -552.164 iterations 5
Cbc0038I Pass  24: suminf.    1.01168 (5) obj. -552.164 iterations 2
Cbc0038I Pass  25: suminf.    0.96563 (5) obj. -552.164 iterations 1
Cbc0038I Pass  26: suminf.    1.66851 (7) obj. -552.164 iterations 6
Cbc0038I Pass  27: suminf.    1.41834 (5) obj. -552.164 iterations 2
Cbc0038I Pass  28: suminf.    1.77626 (6) obj. -552.164 iterations 5
Cbc0038I Pass  29: suminf.    1.01168 (5) obj. -552.164 iterations 2
Cbc0038I Pass  30: suminf.    0.96563 (5) obj. -552.164 iterations 1
Cbc0038I Pass  31: suminf.    1.66851 (7) obj. -552.164 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -351.885 - took 0.04 seconds
Cbc0012I Integer solution of -351.8849 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 86 rows 48 columns, reduced to 50 rows 31 columns
Cbc0031I 20 added rows had average density of 25
Cbc0013I At root node, 20 cuts changed objective from -2354.6734 to -1319.7252 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4999 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1747 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -351.8849, took 5360 iterations and 10 nodes (0.48 seconds)
Cbc0032I Strong branching done 246 times (4949 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-12) rows, 94 (-2) columns and 1341 (-72) elements
Clp1000I sum of infeasibilities 3.91145e-08 - average 4.54819e-10, 87 fixed columns
Coin0506I Presolve 4 (-82) rows, 7 (-87) columns and 13 (-1328) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -1027.6289
Clp0000I Optimal - objective value -1027.6289
Coin0511I After Postsolve, objective -1027.6289, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.2298589e-05 ( 0.00088996209%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2912.7222
Clp0000I Optimal - objective value 2912.7222
Clp0000I Optimal - objective value 2912.7222
Coin0511I After Postsolve, objective 2912.7222, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2912.72222 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 94 columns (94 integer (94 of which binary)) and 1343 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.5667
Cbc0038I Pass   1: suminf.    1.94756 (29) obj. -518.875 iterations 26
Cbc0038I Pass   2: suminf.    1.94756 (29) obj. -518.875 iterations 1
Cbc0038I Pass   3: suminf.    0.88893 (18) obj. 405.557 iterations 11
Cbc0038I Pass   4: suminf.    0.28181 (7) obj. 1219.34 iterations 11
Cbc0038I Solution found of 1434.41
Cbc0038I Rounding solution of 991.803 is better than previous of 1434.41

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 991.803 to 408.114 (0.02 seconds)
Cbc0038I Round again with cutoff of 126.022
Cbc0038I Pass   5: suminf.    1.94756 (29) obj. -518.875 iterations 0
Cbc0038I Pass   6: suminf.    1.94756 (29) obj. -518.875 iterations 1
Cbc0038I Pass   7: suminf.    1.08510 (10) obj. 126.022 iterations 33
Cbc0038I Pass   8: suminf.    0.91905 (9) obj. 126.022 iterations 1
Cbc0038I Pass   9: suminf.    1.00165 (3) obj. 126.022 iterations 13
Cbc0038I Pass  10: suminf.    1.00165 (3) obj. 126.022 iterations 0
Cbc0038I Pass  11: suminf.    0.76766 (2) obj. 126.022 iterations 4
Cbc0038I Pass  12: suminf.    0.76766 (2) obj. 126.022 iterations 0
Cbc0038I Pass  13: suminf.    0.48137 (2) obj. -31.6348 iterations 1
Cbc0038I Pass  14: suminf.    0.25994 (2) obj. 126.022 iterations 1
Cbc0038I Pass  15: suminf.    2.69738 (13) obj. 126.022 iterations 25
Cbc0038I Pass  16: suminf.    1.67654 (12) obj. 126.022 iterations 8
Cbc0038I Pass  17: suminf.    0.71085 (2) obj. 126.022 iterations 12
Cbc0038I Pass  18: suminf.    0.71085 (2) obj. 126.022 iterations 8
Cbc0038I Pass  19: suminf.    0.66892 (2) obj. 126.022 iterations 5
Cbc0038I Pass  20: suminf.    0.47011 (2) obj. 28.8036 iterations 2
Cbc0038I Pass  21: suminf.    0.71085 (2) obj. 126.022 iterations 6
Cbc0038I Pass  22: suminf.    2.64812 (17) obj. 126.022 iterations 39
Cbc0038I Pass  23: suminf.    2.57986 (15) obj. 126.022 iterations 4
Cbc0038I Pass  24: suminf.    1.74096 (8) obj. 126.022 iterations 17
Cbc0038I Pass  25: suminf.    1.23310 (6) obj. -55.2129 iterations 2
Cbc0038I Pass  26: suminf.    1.06369 (5) obj. 126.022 iterations 8
Cbc0038I Pass  27: suminf.    1.06369 (5) obj. 126.022 iterations 1
Cbc0038I Pass  28: suminf.    1.15064 (5) obj. 126.022 iterations 1
Cbc0038I Pass  29: suminf.    1.15064 (5) obj. 126.022 iterations 0
Cbc0038I Pass  30: suminf.    1.06369 (5) obj. 126.022 iterations 1
Cbc0038I Pass  31: suminf.    3.97852 (15) obj. -211.183 iterations 22
Cbc0038I Pass  32: suminf.    2.61949 (10) obj. -95.8612 iterations 4
Cbc0038I Pass  33: suminf.    2.61949 (10) obj. -95.8612 iterations 1
Cbc0038I Pass  34: suminf.    0.51565 (2) obj. 126.022 iterations 12
Cbc0038I Rounding solution of 161.827 is better than previous of 408.114

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 56 rows 67 columns
Cbc0038I Mini branch and bound improved solution from 161.827 to -232.49 (0.04 seconds)
Cbc0038I Round again with cutoff of -668.554
Cbc0038I Pass  34: suminf.    2.99099 (32) obj. -668.554 iterations 5
Cbc0038I Pass  35: suminf.    2.15779 (30) obj. -668.554 iterations 6
Cbc0038I Pass  36: suminf.    2.14440 (20) obj. -668.554 iterations 20
Cbc0038I Pass  37: suminf.    1.92877 (20) obj. -668.554 iterations 2
Cbc0038I Pass  38: suminf.    1.78370 (11) obj. -668.554 iterations 31
Cbc0038I Pass  39: suminf.    1.78370 (11) obj. -668.554 iterations 0
Cbc0038I Pass  40: suminf.    1.13271 (6) obj. -668.554 iterations 14
Cbc0038I Pass  41: suminf.    1.13271 (6) obj. -668.554 iterations 1
Cbc0038I Pass  42: suminf.    1.15655 (6) obj. -668.554 iterations 7
Cbc0038I Pass  43: suminf.    1.15655 (6) obj. -668.554 iterations 0
Cbc0038I Pass  44: suminf.    1.21489 (6) obj. -668.554 iterations 4
Cbc0038I Pass  45: suminf.    1.21489 (6) obj. -668.554 iterations 2
Cbc0038I Pass  46: suminf.    4.78725 (17) obj. -668.554 iterations 24
Cbc0038I Pass  47: suminf.    3.06287 (14) obj. -668.554 iterations 5
Cbc0038I Pass  48: suminf.    2.72211 (13) obj. -668.554 iterations 2
Cbc0038I Pass  49: suminf.    1.49128 (5) obj. -668.554 iterations 13
Cbc0038I Pass  50: suminf.    1.33469 (5) obj. -696.896 iterations 4
Cbc0038I Pass  51: suminf.    1.49128 (5) obj. -668.554 iterations 4
Cbc0038I Pass  52: suminf.    3.81026 (15) obj. -668.554 iterations 22
Cbc0038I Pass  53: suminf.    2.59971 (10) obj. -668.554 iterations 2
Cbc0038I Pass  54: suminf.    2.59971 (10) obj. -668.554 iterations 2
Cbc0038I Pass  55: suminf.    1.44078 (6) obj. -668.554 iterations 8
Cbc0038I Pass  56: suminf.    1.44078 (6) obj. -668.554 iterations 0
Cbc0038I Pass  57: suminf.    1.44756 (6) obj. -668.554 iterations 2
Cbc0038I Pass  58: suminf.    1.44756 (6) obj. -668.554 iterations 1
Cbc0038I Pass  59: suminf.    2.86596 (11) obj. -668.554 iterations 16
Cbc0038I Pass  60: suminf.    2.80888 (10) obj. -699.891 iterations 4
Cbc0038I Pass  61: suminf.    2.54000 (8) obj. -668.554 iterations 12
Cbc0038I Pass  62: suminf.    1.84602 (7) obj. -668.554 iterations 6
Cbc0038I Pass  63: suminf.    1.84602 (7) obj. -668.554 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -232.49 - took 0.04 seconds
Cbc0012I Integer solution of -232.4903 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 86 rows 94 columns, reduced to 11 rows 14 columns
Cbc0031I 50 added rows had average density of 23.3
Cbc0013I At root node, 50 cuts changed objective from -2412.8073 to -433.00977 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9059 row cuts average 9.3 elements, 5 column cuts (29 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 78.1 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 91 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 37 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 873 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 383 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.662 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -232.4903 best solution, best possible -433.00977 (1.92 seconds)
Cbc0012I Integer solution of -321.0182 found by DiveCoefficient after 2627 iterations and 2 nodes (2.00 seconds)
Cbc0012I Integer solution of -328.3259 found by DiveCoefficient after 2652 iterations and 3 nodes (2.01 seconds)
Cbc0004I Integer solution of -351.8849 found after 2703 iterations and 3 nodes (2.03 seconds)
Cbc0001I Search completed - best objective -351.8849, took 2868 iterations and 6 nodes (2.05 seconds)
Cbc0032I Strong branching done 190 times (3967 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       2.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 48 (-2) columns and 260 (-25) elements
Clp1000I sum of infeasibilities 0.00194415 - average 2.26064e-05, 15 fixed columns
Coin0506I Presolve 51 (-35) rows, 32 (-16) columns and 158 (-102) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 2354.6734
Clp0000I Optimal - objective value 2354.6734
Coin0511I After Postsolve, objective 2354.6734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306143 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 2354.6734
Clp0000I Optimal - objective value 2354.6734
Clp0000I Optimal - objective value 2354.6734
Coin0511I After Postsolve, objective 2354.6734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2354.673369 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 48 columns (47 integer (47 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 10.7777
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 635.146 iterations 29
Cbc0038I Solution found of 635.146
Cbc0038I Relaxing continuous gives 635.146
Cbc0038I Rounding solution of 267.903 is better than previous of 635.146

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 267.903 to -351.885 (0.03 seconds)
Cbc0038I Round again with cutoff of -552.164
Cbc0038I Pass   2: suminf.    2.07711 (8) obj. -552.164 iterations 7
Cbc0038I Pass   3: suminf.    2.03616 (7) obj. -552.164 iterations 10
Cbc0038I Pass   4: suminf.    1.99484 (9) obj. -552.164 iterations 2
Cbc0038I Pass   5: suminf.    2.07723 (6) obj. -552.164 iterations 12
Cbc0038I Pass   6: suminf.    2.07723 (6) obj. -552.164 iterations 0
Cbc0038I Pass   7: suminf.    2.24334 (7) obj. -552.164 iterations 9
Cbc0038I Pass   8: suminf.    2.53152 (7) obj. -552.164 iterations 6
Cbc0038I Pass   9: suminf.    2.12771 (8) obj. -552.164 iterations 4
Cbc0038I Pass  10: suminf.    2.12488 (9) obj. -552.164 iterations 1
Cbc0038I Pass  11: suminf.    2.32332 (8) obj. -552.164 iterations 13
Cbc0038I Pass  12: suminf.    2.32332 (8) obj. -552.164 iterations 0
Cbc0038I Pass  13: suminf.    2.21265 (7) obj. -552.164 iterations 9
Cbc0038I Pass  14: suminf.    1.14965 (5) obj. -552.164 iterations 3
Cbc0038I Pass  15: suminf.    0.96563 (5) obj. -552.164 iterations 2
Cbc0038I Pass  16: suminf.    1.66851 (7) obj. -552.164 iterations 6
Cbc0038I Pass  17: suminf.    1.41834 (5) obj. -552.164 iterations 2
Cbc0038I Pass  18: suminf.    1.77626 (6) obj. -552.164 iterations 5
Cbc0038I Pass  19: suminf.    1.01168 (5) obj. -552.164 iterations 2
Cbc0038I Pass  20: suminf.    0.96563 (5) obj. -552.164 iterations 1
Cbc0038I Pass  21: suminf.    1.66851 (7) obj. -552.164 iterations 6
Cbc0038I Pass  22: suminf.    1.41834 (5) obj. -552.164 iterations 2
Cbc0038I Pass  23: suminf.    1.77626 (6) obj. -552.164 iterations 5
Cbc0038I Pass  24: suminf.    1.01168 (5) obj. -552.164 iterations 2
Cbc0038I Pass  25: suminf.    0.96563 (5) obj. -552.164 iterations 1
Cbc0038I Pass  26: suminf.    1.66851 (7) obj. -552.164 iterations 6
Cbc0038I Pass  27: suminf.    1.41834 (5) obj. -552.164 iterations 2
Cbc0038I Pass  28: suminf.    1.77626 (6) obj. -552.164 iterations 5
Cbc0038I Pass  29: suminf.    1.01168 (5) obj. -552.164 iterations 2
Cbc0038I Pass  30: suminf.    0.96563 (5) obj. -552.164 iterations 1
Cbc0038I Pass  31: suminf.    1.66851 (7) obj. -552.164 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -351.885 - took 0.04 seconds
Cbc0012I Integer solution of -351.8849 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 86 rows 48 columns, reduced to 50 rows 31 columns
Cbc0031I 20 added rows had average density of 25
Cbc0013I At root node, 20 cuts changed objective from -2354.6734 to -1319.7252 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4999 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1747 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -351.8849, took 5360 iterations and 10 nodes (0.49 seconds)
Cbc0032I Strong branching done 246 times (4949 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 94 (-3) columns and 1341 (-73) elements
Clp1000I sum of infeasibilities 3.91145e-08 - average 4.54819e-10, 87 fixed columns
Coin0506I Presolve 4 (-82) rows, 7 (-87) columns and 13 (-1328) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -1027.6289
Clp0000I Optimal - objective value -1027.6289
Coin0511I After Postsolve, objective -1027.6289, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.2298589e-05 ( 0.00088996209%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2912.7222
Clp0000I Optimal - objective value 2912.7222
Clp0000I Optimal - objective value 2912.7222
Coin0511I After Postsolve, objective 2912.7222, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2912.72222 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 94 columns (94 integer (94 of which binary)) and 1343 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.5667
Cbc0038I Pass   1: suminf.    1.94756 (29) obj. -518.875 iterations 26
Cbc0038I Pass   2: suminf.    1.94756 (29) obj. -518.875 iterations 1
Cbc0038I Pass   3: suminf.    0.88893 (18) obj. 405.557 iterations 11
Cbc0038I Pass   4: suminf.    0.28181 (7) obj. 1219.34 iterations 11
Cbc0038I Solution found of 1434.41
Cbc0038I Rounding solution of 991.803 is better than previous of 1434.41

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 991.803 to 408.114 (0.03 seconds)
Cbc0038I Round again with cutoff of 126.022
Cbc0038I Pass   5: suminf.    1.94756 (29) obj. -518.875 iterations 0
Cbc0038I Pass   6: suminf.    1.94756 (29) obj. -518.875 iterations 1
Cbc0038I Pass   7: suminf.    1.08510 (10) obj. 126.022 iterations 33
Cbc0038I Pass   8: suminf.    0.91905 (9) obj. 126.022 iterations 1
Cbc0038I Pass   9: suminf.    1.00165 (3) obj. 126.022 iterations 13
Cbc0038I Pass  10: suminf.    1.00165 (3) obj. 126.022 iterations 0
Cbc0038I Pass  11: suminf.    0.76766 (2) obj. 126.022 iterations 4
Cbc0038I Pass  12: suminf.    0.76766 (2) obj. 126.022 iterations 0
Cbc0038I Pass  13: suminf.    0.48137 (2) obj. -31.6348 iterations 1
Cbc0038I Pass  14: suminf.    0.25994 (2) obj. 126.022 iterations 1
Cbc0038I Pass  15: suminf.    2.69738 (13) obj. 126.022 iterations 25
Cbc0038I Pass  16: suminf.    1.67654 (12) obj. 126.022 iterations 8
Cbc0038I Pass  17: suminf.    0.71085 (2) obj. 126.022 iterations 12
Cbc0038I Pass  18: suminf.    0.71085 (2) obj. 126.022 iterations 8
Cbc0038I Pass  19: suminf.    0.66892 (2) obj. 126.022 iterations 5
Cbc0038I Pass  20: suminf.    0.47011 (2) obj. 28.8036 iterations 2
Cbc0038I Pass  21: suminf.    0.71085 (2) obj. 126.022 iterations 6
Cbc0038I Pass  22: suminf.    2.64812 (17) obj. 126.022 iterations 39
Cbc0038I Pass  23: suminf.    2.57986 (15) obj. 126.022 iterations 4
Cbc0038I Pass  24: suminf.    1.74096 (8) obj. 126.022 iterations 17
Cbc0038I Pass  25: suminf.    1.23310 (6) obj. -55.2129 iterations 2
Cbc0038I Pass  26: suminf.    1.06369 (5) obj. 126.022 iterations 8
Cbc0038I Pass  27: suminf.    1.06369 (5) obj. 126.022 iterations 1
Cbc0038I Pass  28: suminf.    1.15064 (5) obj. 126.022 iterations 1
Cbc0038I Pass  29: suminf.    1.15064 (5) obj. 126.022 iterations 0
Cbc0038I Pass  30: suminf.    1.06369 (5) obj. 126.022 iterations 1
Cbc0038I Pass  31: suminf.    3.97852 (15) obj. -211.183 iterations 22
Cbc0038I Pass  32: suminf.    2.61949 (10) obj. -95.8612 iterations 4
Cbc0038I Pass  33: suminf.    2.61949 (10) obj. -95.8612 iterations 1
Cbc0038I Pass  34: suminf.    0.51565 (2) obj. 126.022 iterations 12
Cbc0038I Rounding solution of 161.827 is better than previous of 408.114

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 56 rows 67 columns
Cbc0038I Mini branch and bound improved solution from 161.827 to -232.49 (0.04 seconds)
Cbc0038I Round again with cutoff of -668.554
Cbc0038I Pass  34: suminf.    2.99099 (32) obj. -668.554 iterations 5
Cbc0038I Pass  35: suminf.    2.15779 (30) obj. -668.554 iterations 6
Cbc0038I Pass  36: suminf.    2.14440 (20) obj. -668.554 iterations 20
Cbc0038I Pass  37: suminf.    1.92877 (20) obj. -668.554 iterations 2
Cbc0038I Pass  38: suminf.    1.78370 (11) obj. -668.554 iterations 31
Cbc0038I Pass  39: suminf.    1.78370 (11) obj. -668.554 iterations 0
Cbc0038I Pass  40: suminf.    1.13271 (6) obj. -668.554 iterations 14
Cbc0038I Pass  41: suminf.    1.13271 (6) obj. -668.554 iterations 1
Cbc0038I Pass  42: suminf.    1.15655 (6) obj. -668.554 iterations 7
Cbc0038I Pass  43: suminf.    1.15655 (6) obj. -668.554 iterations 0
Cbc0038I Pass  44: suminf.    1.21489 (6) obj. -668.554 iterations 4
Cbc0038I Pass  45: suminf.    1.21489 (6) obj. -668.554 iterations 2
Cbc0038I Pass  46: suminf.    4.78725 (17) obj. -668.554 iterations 24
Cbc0038I Pass  47: suminf.    3.06287 (14) obj. -668.554 iterations 5
Cbc0038I Pass  48: suminf.    2.72211 (13) obj. -668.554 iterations 2
Cbc0038I Pass  49: suminf.    1.49128 (5) obj. -668.554 iterations 13
Cbc0038I Pass  50: suminf.    1.33469 (5) obj. -696.896 iterations 4
Cbc0038I Pass  51: suminf.    1.49128 (5) obj. -668.554 iterations 4
Cbc0038I Pass  52: suminf.    3.81026 (15) obj. -668.554 iterations 22
Cbc0038I Pass  53: suminf.    2.59971 (10) obj. -668.554 iterations 2
Cbc0038I Pass  54: suminf.    2.59971 (10) obj. -668.554 iterations 2
Cbc0038I Pass  55: suminf.    1.44078 (6) obj. -668.554 iterations 8
Cbc0038I Pass  56: suminf.    1.44078 (6) obj. -668.554 iterations 0
Cbc0038I Pass  57: suminf.    1.44756 (6) obj. -668.554 iterations 2
Cbc0038I Pass  58: suminf.    1.44756 (6) obj. -668.554 iterations 1
Cbc0038I Pass  59: suminf.    2.86596 (11) obj. -668.554 iterations 16
Cbc0038I Pass  60: suminf.    2.80888 (10) obj. -699.891 iterations 4
Cbc0038I Pass  61: suminf.    2.54000 (8) obj. -668.554 iterations 12
Cbc0038I Pass  62: suminf.    1.84602 (7) obj. -668.554 iterations 6
Cbc0038I Pass  63: suminf.    1.84602 (7) obj. -668.554 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -232.49 - took 0.04 seconds
Cbc0012I Integer solution of -232.4903 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 86 rows 94 columns, reduced to 11 rows 14 columns
Cbc0031I 50 added rows had average density of 23.3
Cbc0013I At root node, 50 cuts changed objective from -2412.8073 to -433.00977 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9059 row cuts average 9.3 elements, 5 column cuts (29 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 78.1 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 91 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 37 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 873 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 383 row cuts average 33.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.740 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -232.4903 best solution, best possible -433.00977 (2.21 seconds)
Cbc0012I Integer solution of -321.0182 found by DiveCoefficient after 2627 iterations and 2 nodes (2.29 seconds)
Cbc0012I Integer solution of -328.3259 found by DiveCoefficient after 2652 iterations and 3 nodes (2.31 seconds)
Cbc0004I Integer solution of -351.8849 found after 2703 iterations and 3 nodes (2.33 seconds)
Cbc0001I Search completed - best objective -351.8849, took 2868 iterations and 6 nodes (2.36 seconds)
Cbc0032I Strong branching done 190 times (3967 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.72   (Wallclock seconds):       2.37

