Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 70 (-35) rows, 41 (-12) columns and 216 (-87) elements
Clp0000I Optimal - objective value 55.705423
Coin0511I After Postsolve, objective 55.705423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.70542336 - 37 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 70 rows, 41 columns (40 integer (40 of which binary)) and 216 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.998%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.77369
Cbc0038I Pass   1: suminf.    0.22222 (1) obj. -29.4999 iterations 22
Cbc0038I Solution found of -26.8333
Cbc0038I Relaxing continuous gives -26.8333
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 41 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -26.8333 to -33.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -35.8706
Cbc0038I Pass   2: suminf.    0.90260 (4) obj. -35.8706 iterations 3
Cbc0038I Pass   3: suminf.    1.10684 (5) obj. -35.8706 iterations 8
Cbc0038I Pass   4: suminf.    1.10089 (5) obj. -35.8706 iterations 4
Cbc0038I Pass   5: suminf.    1.21778 (6) obj. -35.8706 iterations 12
Cbc0038I Pass   6: suminf.    0.81884 (6) obj. -35.8706 iterations 5
Cbc0038I Pass   7: suminf.    1.38722 (6) obj. -35.8706 iterations 13
Cbc0038I Pass   8: suminf.    1.21561 (5) obj. -35.8706 iterations 6
Cbc0038I Pass   9: suminf.    1.65595 (4) obj. -35.8706 iterations 6
Cbc0038I Pass  10: suminf.    4.66557 (12) obj. -35.8706 iterations 9
Cbc0038I Pass  11: suminf.    2.90787 (10) obj. -35.8706 iterations 9
Cbc0038I Pass  12: suminf.    2.83916 (10) obj. -35.8706 iterations 2
Cbc0038I Pass  13: suminf.    2.83461 (10) obj. -35.8706 iterations 1
Cbc0038I Pass  14: suminf.    1.01357 (5) obj. -35.8706 iterations 14
Cbc0038I Pass  15: suminf.    1.01039 (5) obj. -35.8706 iterations 1
Cbc0038I Pass  16: suminf.    0.53436 (5) obj. -35.8706 iterations 6
Cbc0038I Pass  17: suminf.    0.50679 (6) obj. -35.8706 iterations 1
Cbc0038I Pass  18: suminf.    1.34999 (5) obj. -35.8706 iterations 5
Cbc0038I Pass  19: suminf.    1.25966 (6) obj. -35.8706 iterations 17
Cbc0038I Pass  20: suminf.    1.03337 (4) obj. -35.8706 iterations 9
Cbc0038I Pass  21: suminf.    1.14251 (4) obj. -35.8706 iterations 7
Cbc0038I Pass  22: suminf.    2.69374 (9) obj. -35.8706 iterations 5
Cbc0038I Pass  23: suminf.    2.36460 (9) obj. -35.8706 iterations 3
Cbc0038I Pass  24: suminf.    2.15424 (6) obj. -35.8706 iterations 9
Cbc0038I Pass  25: suminf.    2.02097 (6) obj. -35.8706 iterations 1
Cbc0038I Pass  26: suminf.    1.97917 (6) obj. -35.8706 iterations 1
Cbc0038I Pass  27: suminf.    2.36146 (8) obj. -35.8706 iterations 7
Cbc0038I Pass  28: suminf.    2.25351 (6) obj. -35.8706 iterations 1
Cbc0038I Pass  29: suminf.    1.24044 (5) obj. -35.8706 iterations 6
Cbc0038I Pass  30: suminf.    1.24044 (5) obj. -35.8706 iterations 0
Cbc0038I Pass  31: suminf.    1.23193 (4) obj. -35.8706 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 41 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -33.6667 - took 0.03 seconds
Cbc0012I Integer solution of -33.66667 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 70 rows 41 columns, reduced to 26 rows 16 columns
Cbc0031I 7 added rows had average density of 32.714286
Cbc0013I At root node, 7 cuts changed objective from -55.705423 to -39.245829 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 999 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 465 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -33.66667000000001, took 1656 iterations and 4 nodes (0.17 seconds)
Cbc0032I Strong branching done 58 times (533 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-43) rows, 71 (-31) columns and 771 (-807) elements
Clp1000I sum of infeasibilities 5.50767e-07 - average 9.02897e-09, 10 fixed columns
Coin0506I Presolve 53 (-8) rows, 61 (-10) columns and 637 (-134) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 3.5835542 - largest nonzero change 2.1346104e-05 ( 0.00089819337%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 81.664087
Clp0000I Optimal - objective value 81.664087
Coin0511I After Postsolve, objective 81.664087, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.352093 - largest nonzero change 1.4386021e-05 ( 0.00089819337%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 84.34365
Clp0000I Optimal - objective value 84.34365
Clp0000I Optimal - objective value 84.34365
Coin0511I After Postsolve, objective 84.34365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.34365049 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 61 rows, 71 columns (71 integer (71 of which binary)) and 773 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.924%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.63684
Cbc0038I Pass   1: suminf.    1.86528 (16) obj. -19.5351 iterations 16
Cbc0038I Pass   2: suminf.    1.86528 (16) obj. -19.5351 iterations 1
Cbc0038I Solution found of 15.3333
Cbc0038I Rounding solution of 0.16667 is better than previous of 15.3333

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 15 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 0.16667 to -27.8333 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.8202
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.11764 (25) obj. -32.8202 iterations 5
Cbc0038I Pass   4: suminf.    3.11764 (25) obj. -32.8202 iterations 0
Cbc0038I Pass   5: suminf.    1.63400 (16) obj. -32.8202 iterations 14
Cbc0038I Pass   6: suminf.    1.63400 (16) obj. -32.8202 iterations 0
Cbc0038I Pass   7: suminf.    0.95949 (3) obj. -32.8202 iterations 24
Cbc0038I Pass   8: suminf.    0.95949 (3) obj. -32.8202 iterations 0
Cbc0038I Pass   9: suminf.    0.57909 (2) obj. -32.8202 iterations 5
Cbc0038I Pass  10: suminf.    0.31339 (2) obj. -35.4771 iterations 1
Cbc0038I Pass  11: suminf.    1.66317 (10) obj. -32.8202 iterations 16
Cbc0038I Pass  12: suminf.    1.43400 (9) obj. -32.8202 iterations 1
Cbc0038I Pass  13: suminf.    0.95949 (3) obj. -32.8202 iterations 13
Cbc0038I Pass  14: suminf.    0.95949 (3) obj. -32.8202 iterations 0
Cbc0038I Pass  15: suminf.    0.57909 (2) obj. -32.8202 iterations 5
Cbc0038I Pass  16: suminf.    0.31339 (2) obj. -35.4771 iterations 1
Cbc0038I Pass  17: suminf.    3.04650 (12) obj. -32.8202 iterations 14
Cbc0038I Pass  18: suminf.    2.52287 (11) obj. -32.8202 iterations 3
Cbc0038I Pass  19: suminf.    0.77233 (3) obj. -32.8202 iterations 14
Cbc0038I Pass  20: suminf.    0.69863 (3) obj. -32.8202 iterations 5
Cbc0038I Pass  21: suminf.    2.09518 (12) obj. -32.8202 iterations 27
Cbc0038I Pass  22: suminf.    2.01140 (11) obj. -33.9442 iterations 3
Cbc0038I Pass  23: suminf.    1.34600 (6) obj. -32.8202 iterations 13
Cbc0038I Pass  24: suminf.    0.93126 (4) obj. -37.1014 iterations 7
Cbc0038I Pass  25: suminf.    1.06351 (3) obj. -32.8202 iterations 5
Cbc0038I Pass  26: suminf.    0.57086 (3) obj. -32.8202 iterations 2
Cbc0038I Pass  27: suminf.    0.46165 (2) obj. -32.8202 iterations 5
Cbc0038I Pass  28: suminf.    0.46165 (2) obj. -32.8202 iterations 0
Cbc0038I Pass  29: suminf.    0.42070 (2) obj. -37.7003 iterations 2
Cbc0038I Pass  30: suminf.    0.23077 (1) obj. -35.5256 iterations 1
Cbc0038I Pass  31: suminf.    2.56277 (12) obj. -32.8202 iterations 12
Cbc0038I Pass  32: suminf.    1.56783 (6) obj. -35.752 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -27.8333 to -30.5 (0.03 seconds)
Cbc0038I Round again with cutoff of -41.7964
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.50216 (26) obj. -41.7964 iterations 1
Cbc0038I Pass  33: suminf.    3.42966 (25) obj. -41.7964 iterations 1
Cbc0038I Pass  34: suminf.    2.81863 (10) obj. -41.7964 iterations 29
Cbc0038I Pass  35: suminf.    1.99353 (8) obj. -41.7964 iterations 3
Cbc0038I Pass  36: suminf.    1.77843 (7) obj. -41.7964 iterations 1
Cbc0038I Pass  37: suminf.    1.05008 (4) obj. -41.7964 iterations 8
Cbc0038I Pass  38: suminf.    0.75142 (6) obj. -41.7964 iterations 10
Cbc0038I Pass  39: suminf.    0.79234 (4) obj. -41.7964 iterations 7
Cbc0038I Pass  40: suminf.    0.79234 (4) obj. -41.7964 iterations 0
Cbc0038I Pass  41: suminf.    1.04816 (3) obj. -41.7964 iterations 8
Cbc0038I Pass  42: suminf.    1.04816 (3) obj. -41.7964 iterations 0
Cbc0038I Pass  43: suminf.    0.33238 (2) obj. -41.9725 iterations 2
Cbc0038I Pass  44: suminf.    0.31701 (2) obj. -41.7964 iterations 2
Cbc0038I Pass  45: suminf.    0.34999 (2) obj. -41.7964 iterations 3
Cbc0038I Pass  46: suminf.    3.49923 (9) obj. -41.7964 iterations 10
Cbc0038I Pass  47: suminf.    2.41704 (6) obj. -45.589 iterations 6
Cbc0038I Pass  48: suminf.    1.91704 (5) obj. -44.589 iterations 1
Cbc0038I Pass  49: suminf.    0.34999 (2) obj. -41.7964 iterations 8
Cbc0038I Pass  50: suminf.    0.31701 (2) obj. -41.7964 iterations 2
Cbc0038I Pass  51: suminf.    0.34999 (2) obj. -41.7964 iterations 3
Cbc0038I Pass  52: suminf.    2.88383 (9) obj. -41.7964 iterations 8
Cbc0038I Pass  53: suminf.    2.00828 (6) obj. -41.7964 iterations 4
Cbc0038I Pass  54: suminf.    1.50340 (5) obj. -41.7964 iterations 10
Cbc0038I Pass  55: suminf.    1.50340 (5) obj. -41.7964 iterations 1
Cbc0038I Pass  56: suminf.    1.49262 (5) obj. -41.7964 iterations 3
Cbc0038I Pass  57: suminf.    1.49262 (5) obj. -41.7964 iterations 1
Cbc0038I Pass  58: suminf.    1.50340 (5) obj. -41.7964 iterations 3
Cbc0038I Pass  59: suminf.    2.26184 (14) obj. -41.7964 iterations 15
Cbc0038I Pass  60: suminf.    2.21721 (12) obj. -41.7964 iterations 6
Cbc0038I Pass  61: suminf.    0.97303 (9) obj. -41.7964 iterations 15
Cbc0038I Rounding solution of -33.6667 is better than previous of -30.5

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -52.5679
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.62589 (26) obj. -52.5679 iterations 0
Cbc0038I Pass  62: suminf.    4.62589 (26) obj. -52.5679 iterations 0
Cbc0038I Pass  63: suminf.    3.15641 (12) obj. -52.5679 iterations 28
Cbc0038I Pass  64: suminf.    3.15641 (12) obj. -52.5679 iterations 0
Cbc0038I Pass  65: suminf.    1.74153 (7) obj. -52.5679 iterations 14
Cbc0038I Pass  66: suminf.    1.65503 (7) obj. -52.5679 iterations 5
Cbc0038I Pass  67: suminf.    1.74153 (7) obj. -52.5679 iterations 5
Cbc0038I Pass  68: suminf.    2.97888 (11) obj. -52.5679 iterations 18
Cbc0038I Pass  69: suminf.    2.82384 (11) obj. -52.5679 iterations 4
Cbc0038I Pass  70: suminf.    3.73367 (19) obj. -52.5679 iterations 14
Cbc0038I Pass  71: suminf.    3.67716 (17) obj. -52.5679 iterations 8
Cbc0038I Pass  72: suminf.    2.70998 (9) obj. -52.5679 iterations 17
Cbc0038I Pass  73: suminf.    2.08811 (8) obj. -52.5679 iterations 6
Cbc0038I Pass  74: suminf.    2.44145 (7) obj. -52.5679 iterations 8
Cbc0038I Pass  75: suminf.    2.29174 (8) obj. -52.5679 iterations 4
Cbc0038I Pass  76: suminf.    1.80182 (7) obj. -52.5679 iterations 7
Cbc0038I Pass  77: suminf.    1.80182 (7) obj. -52.5679 iterations 1
Cbc0038I Pass  78: suminf.    2.23684 (7) obj. -52.5679 iterations 6
Cbc0038I Pass  79: suminf.    2.36567 (11) obj. -52.5679 iterations 10
Cbc0038I Pass  80: suminf.    2.12334 (9) obj. -52.5679 iterations 13
Cbc0038I Pass  81: suminf.    1.74153 (7) obj. -52.5679 iterations 6
Cbc0038I Pass  82: suminf.    1.65503 (7) obj. -52.5679 iterations 4
Cbc0038I Pass  83: suminf.    1.74153 (7) obj. -52.5679 iterations 4
Cbc0038I Pass  84: suminf.    2.39862 (12) obj. -52.5679 iterations 11
Cbc0038I Pass  85: suminf.    2.39862 (12) obj. -52.5679 iterations 0
Cbc0038I Pass  86: suminf.    1.98047 (8) obj. -52.5679 iterations 13
Cbc0038I Pass  87: suminf.    1.82877 (7) obj. -53.0438 iterations 6
Cbc0038I Pass  88: suminf.    2.10421 (8) obj. -52.5679 iterations 7
Cbc0038I Pass  89: suminf.    2.10421 (8) obj. -52.5679 iterations 3
Cbc0038I Pass  90: suminf.    2.26493 (8) obj. -52.5679 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -33.6667 - took 0.04 seconds
Cbc0012I Integer solution of -33.66667 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 61 rows 71 columns, reduced to 3 rows 4 columns
Cbc0031I 17 added rows had average density of 5.1764706
Cbc0013I At root node, 28 cuts changed objective from -77.701349 to -33.66667 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 189 row cuts average 2.2 elements, 16 column cuts (16 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.66667000000001, took 82 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 70 (-35) rows, 41 (-12) columns and 216 (-87) elements
Clp0000I Optimal - objective value 55.705423
Coin0511I After Postsolve, objective 55.705423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.70542336 - 37 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 70 rows, 41 columns (40 integer (40 of which binary)) and 216 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.998%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.77369
Cbc0038I Pass   1: suminf.    0.22222 (1) obj. -29.4999 iterations 22
Cbc0038I Solution found of -26.8333
Cbc0038I Relaxing continuous gives -26.8333
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 41 columns, reduced to 26 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -26.8333 to -33.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -35.8706
Cbc0038I Pass   2: suminf.    0.90260 (4) obj. -35.8706 iterations 3
Cbc0038I Pass   3: suminf.    1.10684 (5) obj. -35.8706 iterations 8
Cbc0038I Pass   4: suminf.    1.10089 (5) obj. -35.8706 iterations 4
Cbc0038I Pass   5: suminf.    1.21778 (6) obj. -35.8706 iterations 12
Cbc0038I Pass   6: suminf.    0.81884 (6) obj. -35.8706 iterations 5
Cbc0038I Pass   7: suminf.    1.38722 (6) obj. -35.8706 iterations 13
Cbc0038I Pass   8: suminf.    1.21561 (5) obj. -35.8706 iterations 6
Cbc0038I Pass   9: suminf.    1.65595 (4) obj. -35.8706 iterations 6
Cbc0038I Pass  10: suminf.    4.66557 (12) obj. -35.8706 iterations 9
Cbc0038I Pass  11: suminf.    2.90787 (10) obj. -35.8706 iterations 9
Cbc0038I Pass  12: suminf.    2.83916 (10) obj. -35.8706 iterations 2
Cbc0038I Pass  13: suminf.    2.83461 (10) obj. -35.8706 iterations 1
Cbc0038I Pass  14: suminf.    1.01357 (5) obj. -35.8706 iterations 14
Cbc0038I Pass  15: suminf.    1.01039 (5) obj. -35.8706 iterations 1
Cbc0038I Pass  16: suminf.    0.53436 (5) obj. -35.8706 iterations 6
Cbc0038I Pass  17: suminf.    0.50679 (6) obj. -35.8706 iterations 1
Cbc0038I Pass  18: suminf.    1.34999 (5) obj. -35.8706 iterations 5
Cbc0038I Pass  19: suminf.    1.25966 (6) obj. -35.8706 iterations 17
Cbc0038I Pass  20: suminf.    1.03337 (4) obj. -35.8706 iterations 9
Cbc0038I Pass  21: suminf.    1.14251 (4) obj. -35.8706 iterations 7
Cbc0038I Pass  22: suminf.    2.69374 (9) obj. -35.8706 iterations 5
Cbc0038I Pass  23: suminf.    2.36460 (9) obj. -35.8706 iterations 3
Cbc0038I Pass  24: suminf.    2.15424 (6) obj. -35.8706 iterations 9
Cbc0038I Pass  25: suminf.    2.02097 (6) obj. -35.8706 iterations 1
Cbc0038I Pass  26: suminf.    1.97917 (6) obj. -35.8706 iterations 1
Cbc0038I Pass  27: suminf.    2.36146 (8) obj. -35.8706 iterations 7
Cbc0038I Pass  28: suminf.    2.25351 (6) obj. -35.8706 iterations 1
Cbc0038I Pass  29: suminf.    1.24044 (5) obj. -35.8706 iterations 6
Cbc0038I Pass  30: suminf.    1.24044 (5) obj. -35.8706 iterations 0
Cbc0038I Pass  31: suminf.    1.23193 (4) obj. -35.8706 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 41 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -33.6667 - took 0.02 seconds
Cbc0012I Integer solution of -33.66667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 70 rows 41 columns, reduced to 26 rows 16 columns
Cbc0031I 7 added rows had average density of 32.714286
Cbc0013I At root node, 7 cuts changed objective from -55.705423 to -39.245829 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 999 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 465 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -33.66667000000001, took 1656 iterations and 4 nodes (0.17 seconds)
Cbc0032I Strong branching done 58 times (533 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-44) rows, 71 (-32) columns and 771 (-808) elements
Clp1000I sum of infeasibilities 5.50767e-07 - average 9.02897e-09, 10 fixed columns
Coin0506I Presolve 53 (-8) rows, 61 (-10) columns and 637 (-134) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 3.5835542 - largest nonzero change 2.1346104e-05 ( 0.00089819337%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 81.664087
Clp0000I Optimal - objective value 81.664087
Coin0511I After Postsolve, objective 81.664087, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.352093 - largest nonzero change 1.4386021e-05 ( 0.00089819337%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 84.34365
Clp0000I Optimal - objective value 84.34365
Clp0000I Optimal - objective value 84.34365
Coin0511I After Postsolve, objective 84.34365, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.34365049 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 61 rows, 71 columns (71 integer (71 of which binary)) and 773 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.924%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 8.63684
Cbc0038I Pass   1: suminf.    1.86528 (16) obj. -19.5351 iterations 16
Cbc0038I Pass   2: suminf.    1.86528 (16) obj. -19.5351 iterations 1
Cbc0038I Solution found of 15.3333
Cbc0038I Rounding solution of 0.16667 is better than previous of 15.3333

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 15 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 0.16667 to -27.8333 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.8202
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.11764 (25) obj. -32.8202 iterations 5
Cbc0038I Pass   4: suminf.    3.11764 (25) obj. -32.8202 iterations 0
Cbc0038I Pass   5: suminf.    1.63400 (16) obj. -32.8202 iterations 14
Cbc0038I Pass   6: suminf.    1.63400 (16) obj. -32.8202 iterations 0
Cbc0038I Pass   7: suminf.    0.95949 (3) obj. -32.8202 iterations 24
Cbc0038I Pass   8: suminf.    0.95949 (3) obj. -32.8202 iterations 0
Cbc0038I Pass   9: suminf.    0.57909 (2) obj. -32.8202 iterations 5
Cbc0038I Pass  10: suminf.    0.31339 (2) obj. -35.4771 iterations 1
Cbc0038I Pass  11: suminf.    1.66317 (10) obj. -32.8202 iterations 16
Cbc0038I Pass  12: suminf.    1.43400 (9) obj. -32.8202 iterations 1
Cbc0038I Pass  13: suminf.    0.95949 (3) obj. -32.8202 iterations 13
Cbc0038I Pass  14: suminf.    0.95949 (3) obj. -32.8202 iterations 0
Cbc0038I Pass  15: suminf.    0.57909 (2) obj. -32.8202 iterations 5
Cbc0038I Pass  16: suminf.    0.31339 (2) obj. -35.4771 iterations 1
Cbc0038I Pass  17: suminf.    3.04650 (12) obj. -32.8202 iterations 14
Cbc0038I Pass  18: suminf.    2.52287 (11) obj. -32.8202 iterations 3
Cbc0038I Pass  19: suminf.    0.77233 (3) obj. -32.8202 iterations 14
Cbc0038I Pass  20: suminf.    0.69863 (3) obj. -32.8202 iterations 5
Cbc0038I Pass  21: suminf.    2.09518 (12) obj. -32.8202 iterations 27
Cbc0038I Pass  22: suminf.    2.01140 (11) obj. -33.9442 iterations 3
Cbc0038I Pass  23: suminf.    1.34600 (6) obj. -32.8202 iterations 13
Cbc0038I Pass  24: suminf.    0.93126 (4) obj. -37.1014 iterations 7
Cbc0038I Pass  25: suminf.    1.06351 (3) obj. -32.8202 iterations 5
Cbc0038I Pass  26: suminf.    0.57086 (3) obj. -32.8202 iterations 2
Cbc0038I Pass  27: suminf.    0.46165 (2) obj. -32.8202 iterations 5
Cbc0038I Pass  28: suminf.    0.46165 (2) obj. -32.8202 iterations 0
Cbc0038I Pass  29: suminf.    0.42070 (2) obj. -37.7003 iterations 2
Cbc0038I Pass  30: suminf.    0.23077 (1) obj. -35.5256 iterations 1
Cbc0038I Pass  31: suminf.    2.56277 (12) obj. -32.8202 iterations 12
Cbc0038I Pass  32: suminf.    1.56783 (6) obj. -35.752 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -27.8333 to -30.5 (0.03 seconds)
Cbc0038I Round again with cutoff of -41.7964
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.50216 (26) obj. -41.7964 iterations 1
Cbc0038I Pass  33: suminf.    3.42966 (25) obj. -41.7964 iterations 1
Cbc0038I Pass  34: suminf.    2.81863 (10) obj. -41.7964 iterations 29
Cbc0038I Pass  35: suminf.    1.99353 (8) obj. -41.7964 iterations 3
Cbc0038I Pass  36: suminf.    1.77843 (7) obj. -41.7964 iterations 1
Cbc0038I Pass  37: suminf.    1.05008 (4) obj. -41.7964 iterations 8
Cbc0038I Pass  38: suminf.    0.75142 (6) obj. -41.7964 iterations 10
Cbc0038I Pass  39: suminf.    0.79234 (4) obj. -41.7964 iterations 7
Cbc0038I Pass  40: suminf.    0.79234 (4) obj. -41.7964 iterations 0
Cbc0038I Pass  41: suminf.    1.04816 (3) obj. -41.7964 iterations 8
Cbc0038I Pass  42: suminf.    1.04816 (3) obj. -41.7964 iterations 0
Cbc0038I Pass  43: suminf.    0.33238 (2) obj. -41.9725 iterations 2
Cbc0038I Pass  44: suminf.    0.31701 (2) obj. -41.7964 iterations 2
Cbc0038I Pass  45: suminf.    0.34999 (2) obj. -41.7964 iterations 3
Cbc0038I Pass  46: suminf.    3.49923 (9) obj. -41.7964 iterations 10
Cbc0038I Pass  47: suminf.    2.41704 (6) obj. -45.589 iterations 6
Cbc0038I Pass  48: suminf.    1.91704 (5) obj. -44.589 iterations 1
Cbc0038I Pass  49: suminf.    0.34999 (2) obj. -41.7964 iterations 8
Cbc0038I Pass  50: suminf.    0.31701 (2) obj. -41.7964 iterations 2
Cbc0038I Pass  51: suminf.    0.34999 (2) obj. -41.7964 iterations 3
Cbc0038I Pass  52: suminf.    2.88383 (9) obj. -41.7964 iterations 8
Cbc0038I Pass  53: suminf.    2.00828 (6) obj. -41.7964 iterations 4
Cbc0038I Pass  54: suminf.    1.50340 (5) obj. -41.7964 iterations 10
Cbc0038I Pass  55: suminf.    1.50340 (5) obj. -41.7964 iterations 1
Cbc0038I Pass  56: suminf.    1.49262 (5) obj. -41.7964 iterations 3
Cbc0038I Pass  57: suminf.    1.49262 (5) obj. -41.7964 iterations 1
Cbc0038I Pass  58: suminf.    1.50340 (5) obj. -41.7964 iterations 3
Cbc0038I Pass  59: suminf.    2.26184 (14) obj. -41.7964 iterations 15
Cbc0038I Pass  60: suminf.    2.21721 (12) obj. -41.7964 iterations 6
Cbc0038I Pass  61: suminf.    0.97303 (9) obj. -41.7964 iterations 15
Cbc0038I Rounding solution of -33.6667 is better than previous of -30.5

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -52.5679
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.62589 (26) obj. -52.5679 iterations 0
Cbc0038I Pass  62: suminf.    4.62589 (26) obj. -52.5679 iterations 0
Cbc0038I Pass  63: suminf.    3.15641 (12) obj. -52.5679 iterations 28
Cbc0038I Pass  64: suminf.    3.15641 (12) obj. -52.5679 iterations 0
Cbc0038I Pass  65: suminf.    1.74153 (7) obj. -52.5679 iterations 14
Cbc0038I Pass  66: suminf.    1.65503 (7) obj. -52.5679 iterations 5
Cbc0038I Pass  67: suminf.    1.74153 (7) obj. -52.5679 iterations 5
Cbc0038I Pass  68: suminf.    2.97888 (11) obj. -52.5679 iterations 18
Cbc0038I Pass  69: suminf.    2.82384 (11) obj. -52.5679 iterations 4
Cbc0038I Pass  70: suminf.    3.73367 (19) obj. -52.5679 iterations 14
Cbc0038I Pass  71: suminf.    3.67716 (17) obj. -52.5679 iterations 8
Cbc0038I Pass  72: suminf.    2.70998 (9) obj. -52.5679 iterations 17
Cbc0038I Pass  73: suminf.    2.08811 (8) obj. -52.5679 iterations 6
Cbc0038I Pass  74: suminf.    2.44145 (7) obj. -52.5679 iterations 8
Cbc0038I Pass  75: suminf.    2.29174 (8) obj. -52.5679 iterations 4
Cbc0038I Pass  76: suminf.    1.80182 (7) obj. -52.5679 iterations 7
Cbc0038I Pass  77: suminf.    1.80182 (7) obj. -52.5679 iterations 1
Cbc0038I Pass  78: suminf.    2.23684 (7) obj. -52.5679 iterations 6
Cbc0038I Pass  79: suminf.    2.36567 (11) obj. -52.5679 iterations 10
Cbc0038I Pass  80: suminf.    2.12334 (9) obj. -52.5679 iterations 13
Cbc0038I Pass  81: suminf.    1.74153 (7) obj. -52.5679 iterations 6
Cbc0038I Pass  82: suminf.    1.65503 (7) obj. -52.5679 iterations 4
Cbc0038I Pass  83: suminf.    1.74153 (7) obj. -52.5679 iterations 4
Cbc0038I Pass  84: suminf.    2.39862 (12) obj. -52.5679 iterations 11
Cbc0038I Pass  85: suminf.    2.39862 (12) obj. -52.5679 iterations 0
Cbc0038I Pass  86: suminf.    1.98047 (8) obj. -52.5679 iterations 13
Cbc0038I Pass  87: suminf.    1.82877 (7) obj. -53.0438 iterations 6
Cbc0038I Pass  88: suminf.    2.10421 (8) obj. -52.5679 iterations 7
Cbc0038I Pass  89: suminf.    2.10421 (8) obj. -52.5679 iterations 3
Cbc0038I Pass  90: suminf.    2.26493 (8) obj. -52.5679 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -33.6667 - took 0.04 seconds
Cbc0012I Integer solution of -33.66667 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 61 rows 71 columns, reduced to 3 rows 4 columns
Cbc0031I 17 added rows had average density of 5.1764706
Cbc0013I At root node, 28 cuts changed objective from -77.701349 to -33.66667 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 189 row cuts average 2.2 elements, 16 column cuts (16 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.66667000000001, took 82 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.13

