Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 8.96247e-05 - average 1.62954e-06, 1 fixed columns
Coin0506I Presolve 53 (-2) rows, 32 (-1) columns and 162 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 2.8371131 - largest nonzero change 0 ( 0%) - largest zero change 2.9101971e-05
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Coin0511I After Postsolve, objective 90.811363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Coin0511I After Postsolve, objective 90.811363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.81136286 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.45931
Cbc0038I Pass   1: suminf.    0.06000 (1) obj. -37.571 iterations 14
Cbc0038I Solution found of -16.5346
Cbc0038I Relaxing continuous gives -16.5346
Cbc0038I Rounding solution of -27.1889 is better than previous of -16.5346

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 22 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -27.1889 to -39.2596 (0.01 seconds)
Cbc0038I Round again with cutoff of -44.4149
Cbc0038I Pass   2: suminf.    0.28122 (4) obj. -44.4149 iterations 3
Cbc0038I Pass   3: suminf.    1.06819 (3) obj. -44.4149 iterations 5
Cbc0038I Pass   4: suminf.    0.33000 (1) obj. -44.4149 iterations 4
Cbc0038I Pass   5: suminf.    0.43518 (1) obj. -44.4149 iterations 1
Cbc0038I Pass   6: suminf.    0.34342 (1) obj. -44.4149 iterations 9
Cbc0038I Pass   7: suminf.    0.34342 (1) obj. -44.4149 iterations 2
Cbc0038I Pass   8: suminf.    0.39858 (1) obj. -44.4149 iterations 1
Cbc0038I Pass   9: suminf.    0.70262 (3) obj. -44.4149 iterations 3
Cbc0038I Pass  10: suminf.    0.47543 (1) obj. -44.4149 iterations 2
Cbc0038I Pass  11: suminf.    0.46207 (1) obj. -44.4149 iterations 1
Cbc0038I Pass  12: suminf.    1.97435 (6) obj. -44.4149 iterations 19
Cbc0038I Pass  13: suminf.    0.72922 (3) obj. -44.4149 iterations 10
Cbc0038I Pass  14: suminf.    1.00583 (3) obj. -44.4149 iterations 3
Cbc0038I Pass  15: suminf.    0.75657 (3) obj. -44.4149 iterations 1
Cbc0038I Pass  16: suminf.    0.75657 (3) obj. -44.4149 iterations 0
Cbc0038I Pass  17: suminf.    1.28978 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  18: suminf.    0.96506 (6) obj. -44.4149 iterations 4
Cbc0038I Pass  19: suminf.    0.86280 (4) obj. -44.4149 iterations 5
Cbc0038I Pass  20: suminf.    0.95316 (3) obj. -44.4149 iterations 5
Cbc0038I Pass  21: suminf.    0.71884 (3) obj. -44.4149 iterations 1
Cbc0038I Pass  22: suminf.    1.24514 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  23: suminf.    1.89272 (5) obj. -44.4149 iterations 6
Cbc0038I Pass  24: suminf.    1.46704 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  25: suminf.    1.00029 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  26: suminf.    1.00029 (3) obj. -44.4149 iterations 0
Cbc0038I Pass  27: suminf.    1.30951 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  28: suminf.    1.64396 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  29: suminf.    1.03656 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  30: suminf.    1.03656 (4) obj. -44.4149 iterations 1
Cbc0038I Pass  31: suminf.    1.21689 (3) obj. -44.4149 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -39.2596 to -40.138 (0.03 seconds)
Cbc0038I Round again with cutoff of -53.6942
Cbc0038I Pass  31: suminf.    0.74094 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  32: suminf.    1.00050 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  33: suminf.    0.39393 (3) obj. -53.6942 iterations 2
Cbc0038I Pass  34: suminf.    0.60192 (2) obj. -53.6942 iterations 2
Cbc0038I Pass  35: suminf.    0.60192 (2) obj. -53.6942 iterations 0
Cbc0038I Pass  36: suminf.    0.64835 (2) obj. -53.6942 iterations 1
Cbc0038I Pass  37: suminf.    2.53348 (7) obj. -53.6942 iterations 19
Cbc0038I Pass  38: suminf.    2.28546 (8) obj. -53.6942 iterations 5
Cbc0038I Pass  39: suminf.    0.85399 (4) obj. -53.6942 iterations 5
Cbc0038I Pass  40: suminf.    1.86313 (4) obj. -53.6942 iterations 5
Cbc0038I Pass  41: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  42: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  43: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  44: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  45: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  46: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  47: suminf.    1.86313 (4) obj. -53.6942 iterations 6
Cbc0038I Pass  48: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  49: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  50: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  51: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  52: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  53: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  54: suminf.    1.86313 (4) obj. -53.6942 iterations 6
Cbc0038I Pass  55: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  56: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  57: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  58: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  59: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  60: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.138 - took 0.06 seconds
Cbc0012I Integer solution of -40.138019 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 29 rows 19 columns
Cbc0031I 11 added rows had average density of 24.909091
Cbc0013I At root node, 11 cuts changed objective from -90.811363 to -65.711555 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1532 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 583 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -40.385549 found by rounding after 3222 iterations and 33 nodes (0.30 seconds)
Cbc0001I Search completed - best objective -40.385549, took 3232 iterations and 34 nodes (0.30 seconds)
Cbc0032I Strong branching done 312 times (3496 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 5, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-19) rows, 58 (-8) columns and 564 (-159) elements
Clp1000I sum of infeasibilities 0 - average 0, 12 fixed columns
Coin0506I Presolve 37 (-12) rows, 46 (-12) columns and 376 (-188) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.8138309 - largest nonzero change 2.0592727e-05 ( 0.0016324266%) - largest zero change 2.7666081e-05
Clp0000I Optimal - objective value 105.70286
Clp0000I Optimal - objective value 105.70286
Coin0511I After Postsolve, objective 105.70286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7042902 - largest nonzero change 2.4188903e-05 ( 0.0018056464%) - largest zero change 2.8320535e-05
Clp0000I Optimal - objective value 113.18209
Clp0000I Optimal - objective value 113.18209
Clp0000I Optimal - objective value 113.18209
Coin0511I After Postsolve, objective 113.18209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.1820922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 58 columns (58 integer (58 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.560%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.20315
Cbc0038I Pass   1: suminf.    1.13441 (15) obj. -9.95288 iterations 11
Cbc0038I Pass   2: suminf.    1.13441 (15) obj. -9.95288 iterations 0
Cbc0038I Solution found of 34.5398
Cbc0038I Rounding solution of -13.4296 is better than previous of 34.5398

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -13.4296 to -24.2043 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.0105
Cbc0038I Pass   3: suminf.    2.17378 (18) obj. -32.0105 iterations 1
Cbc0038I Pass   4: suminf.    2.17378 (18) obj. -32.0105 iterations 0
Cbc0038I Pass   5: suminf.    0.66120 (4) obj. -32.0105 iterations 24
Cbc0038I Pass   6: suminf.    0.56417 (3) obj. -34.182 iterations 2
Cbc0038I Pass   7: suminf.    0.28224 (2) obj. -32.0105 iterations 3
Cbc0038I Pass   8: suminf.    0.28224 (2) obj. -32.0105 iterations 0
Cbc0038I Pass   9: suminf.    0.19468 (1) obj. -32.0105 iterations 1
Cbc0038I Pass  10: suminf.    0.43520 (2) obj. -49.9557 iterations 4
Cbc0038I Pass  11: suminf.    0.28292 (2) obj. -32.0105 iterations 1
Cbc0038I Pass  12: suminf.    0.28292 (2) obj. -32.0105 iterations 1
Cbc0038I Pass  13: suminf.    2.15846 (8) obj. -32.0105 iterations 11
Cbc0038I Pass  14: suminf.    2.15846 (8) obj. -32.0105 iterations 2
Cbc0038I Pass  15: suminf.    0.79580 (2) obj. -35.3809 iterations 9
Cbc0038I Pass  16: suminf.    0.64519 (2) obj. -32.0105 iterations 1
Cbc0038I Pass  17: suminf.    1.42745 (6) obj. -32.4227 iterations 19
Cbc0038I Pass  18: suminf.    0.97802 (5) obj. -37.1339 iterations 6
Cbc0038I Pass  19: suminf.    1.02798 (3) obj. -32.0105 iterations 9
Cbc0038I Pass  20: suminf.    0.67067 (3) obj. -32.0105 iterations 2
Cbc0038I Pass  21: suminf.    0.39523 (3) obj. -32.0105 iterations 2
Cbc0038I Pass  22: suminf.    0.62040 (3) obj. -42.3332 iterations 1
Cbc0038I Pass  23: suminf.    0.31205 (2) obj. -32.0105 iterations 2
Cbc0038I Pass  24: suminf.    0.39523 (3) obj. -32.0105 iterations 3
Cbc0038I Pass  25: suminf.    1.88740 (7) obj. -32.0105 iterations 20
Cbc0038I Pass  26: suminf.    1.27978 (7) obj. -32.0105 iterations 6
Cbc0038I Pass  27: suminf.    1.40069 (7) obj. -32.0105 iterations 5
Cbc0038I Pass  28: suminf.    1.27764 (7) obj. -32.0105 iterations 2
Cbc0038I Pass  29: suminf.    1.09455 (5) obj. -32.0105 iterations 7
Cbc0038I Pass  30: suminf.    0.61926 (3) obj. -32.0105 iterations 4
Cbc0038I Pass  31: suminf.    0.56535 (5) obj. -32.0105 iterations 1
Cbc0038I Pass  32: suminf.    1.20357 (5) obj. -32.0105 iterations 4
Cbc0038I Rounding solution of -27.0654 is better than previous of -24.2043

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -27.0654 to -30.3922 (0.03 seconds)
Cbc0038I Round again with cutoff of -46.0615
Cbc0038I Pass  32: suminf.    2.39934 (18) obj. -46.0615 iterations 1
Cbc0038I Pass  33: suminf.    2.31782 (20) obj. -46.0615 iterations 1
Cbc0038I Pass  34: suminf.    0.60921 (2) obj. -46.0615 iterations 27
Cbc0038I Pass  35: suminf.    0.43520 (2) obj. -49.9557 iterations 2
Cbc0038I Pass  36: suminf.    0.60921 (2) obj. -46.0615 iterations 1
Cbc0038I Pass  37: suminf.    4.95401 (14) obj. -46.0615 iterations 19
Cbc0038I Pass  38: suminf.    2.91707 (8) obj. -46.0615 iterations 7
Cbc0038I Pass  39: suminf.    2.91707 (8) obj. -46.0615 iterations 0
Cbc0038I Pass  40: suminf.    0.48430 (2) obj. -46.0615 iterations 8
Cbc0038I Pass  41: suminf.    0.57910 (2) obj. -46.0615 iterations 1
Cbc0038I Pass  42: suminf.    2.45763 (7) obj. -46.0615 iterations 10
Cbc0038I Pass  43: suminf.    2.45763 (7) obj. -46.0615 iterations 4
Cbc0038I Pass  44: suminf.    0.69718 (3) obj. -46.0615 iterations 7
Cbc0038I Pass  45: suminf.    0.69718 (3) obj. -46.0615 iterations 1
Cbc0038I Pass  46: suminf.    1.00677 (3) obj. -51.015 iterations 2
Cbc0038I Pass  47: suminf.    1.93455 (7) obj. -46.0615 iterations 7
Cbc0038I Pass  48: suminf.    1.35108 (4) obj. -48.8018 iterations 3
Cbc0038I Pass  49: suminf.    0.46062 (3) obj. -46.0615 iterations 5
Cbc0038I Pass  50: suminf.    0.82445 (3) obj. -46.0615 iterations 2
Cbc0038I Pass  51: suminf.    0.69718 (3) obj. -46.0615 iterations 1
Cbc0038I Pass  52: suminf.    1.00677 (3) obj. -51.015 iterations 1
Cbc0038I Pass  53: suminf.    2.51191 (8) obj. -46.0615 iterations 10
Cbc0038I Pass  54: suminf.    1.49557 (7) obj. -46.0615 iterations 9
Cbc0038I Pass  55: suminf.    1.19924 (4) obj. -46.134 iterations 3
Cbc0038I Pass  56: suminf.    1.22822 (8) obj. -46.0615 iterations 9
Cbc0038I Pass  57: suminf.    1.22808 (7) obj. -46.0615 iterations 1
Cbc0038I Pass  58: suminf.    1.02067 (7) obj. -46.0615 iterations 4
Cbc0038I Pass  59: suminf.    0.99866 (7) obj. -46.0615 iterations 1
Cbc0038I Pass  60: suminf.    1.24266 (7) obj. -46.0615 iterations 7
Cbc0038I Pass  61: suminf.    1.54454 (5) obj. -46.0615 iterations 17
Cbc0038I Rounding solution of -39.3849 is better than previous of -30.3922

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -39.3849 to -39.7387 (0.05 seconds)
Cbc0038I Round again with cutoff of -62.9227
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.62005 (21) obj. -62.9227 iterations 1
Cbc0038I Pass  62: suminf.    3.62005 (21) obj. -62.9227 iterations 0
Cbc0038I Pass  63: suminf.    1.04959 (4) obj. -62.9227 iterations 28
Cbc0038I Pass  64: suminf.    1.02140 (5) obj. -62.9227 iterations 2
Cbc0038I Pass  65: suminf.    1.29264 (5) obj. -62.9227 iterations 3
Cbc0038I Pass  66: suminf.    1.29264 (5) obj. -62.9227 iterations 0
Cbc0038I Pass  67: suminf.    1.07042 (5) obj. -62.9227 iterations 3
Cbc0038I Pass  68: suminf.    1.66786 (8) obj. -62.9227 iterations 10
Cbc0038I Pass  69: suminf.    1.65441 (8) obj. -62.9227 iterations 2
Cbc0038I Pass  70: suminf.    1.21499 (7) obj. -62.9227 iterations 7
Cbc0038I Pass  71: suminf.    1.21499 (7) obj. -62.9227 iterations 1
Cbc0038I Pass  72: suminf.    1.48410 (4) obj. -62.9227 iterations 9
Cbc0038I Pass  73: suminf.    1.37238 (4) obj. -62.9227 iterations 1
Cbc0038I Pass  74: suminf.    1.40364 (4) obj. -62.9227 iterations 6
Cbc0038I Pass  75: suminf.    1.38695 (4) obj. -63.0729 iterations 1
Cbc0038I Pass  76: suminf.    1.53672 (4) obj. -62.9227 iterations 2
Cbc0038I Pass  77: suminf.    2.32204 (7) obj. -62.9227 iterations 9
Cbc0038I Pass  78: suminf.    2.30686 (7) obj. -62.9227 iterations 2
Cbc0038I Pass  79: suminf.    1.38853 (5) obj. -62.9227 iterations 4
Cbc0038I Pass  80: suminf.    1.38853 (5) obj. -62.9227 iterations 0
Cbc0038I Pass  81: suminf.    1.86184 (5) obj. -62.9227 iterations 4
Cbc0038I Pass  82: suminf.    1.38853 (5) obj. -62.9227 iterations 1
Cbc0038I Pass  83: suminf.    3.21266 (13) obj. -62.9227 iterations 20
Cbc0038I Pass  84: suminf.    3.21266 (13) obj. -62.9227 iterations 5
Cbc0038I Pass  85: suminf.    2.18556 (8) obj. -62.9227 iterations 10
Cbc0038I Pass  86: suminf.    2.18556 (8) obj. -62.9227 iterations 0
Cbc0038I Pass  87: suminf.    2.44912 (8) obj. -62.9227 iterations 4
Cbc0038I Pass  88: suminf.    2.44912 (8) obj. -62.9227 iterations 1
Cbc0038I Pass  89: suminf.    2.18556 (8) obj. -62.9227 iterations 2
Cbc0038I Pass  90: suminf.    3.94658 (15) obj. -62.9227 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.7387 - took 0.05 seconds
Cbc0012I Integer solution of -39.738689 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 58 columns, reduced to 4 rows 7 columns
Cbc0031I 22 added rows had average density of 26.454545
Cbc0013I At root node, 22 cuts changed objective from -102.26558 to -52.871797 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1994 row cuts average 2.6 elements, 11 column cuts (11 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 699 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 387 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 284 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.738689 best solution, best possible -52.871797 (1.48 seconds)
Cbc0012I Integer solution of -40.385549 found by DiveCoefficient after 2088 iterations and 9 nodes (2.10 seconds)
Cbc0010I After 14 nodes, 7 on tree, -40.385549 best solution, best possible -52.871797 (2.21 seconds)
Cbc0001I Search completed - best objective -40.385549, took 2471 iterations and 28 nodes (2.43 seconds)
Cbc0032I Strong branching done 290 times (2105 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 8, 39 variables fixed on reduced cost
Total time (CPU seconds):       1.58   (Wallclock seconds):       2.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 8.96247e-05 - average 1.62954e-06, 1 fixed columns
Coin0506I Presolve 53 (-2) rows, 32 (-1) columns and 162 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 2.8371131 - largest nonzero change 0 ( 0%) - largest zero change 2.9101971e-05
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Coin0511I After Postsolve, objective 90.811363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Clp0000I Optimal - objective value 90.811363
Coin0511I After Postsolve, objective 90.811363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.81136286 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.45931
Cbc0038I Pass   1: suminf.    0.06000 (1) obj. -37.571 iterations 14
Cbc0038I Solution found of -16.5346
Cbc0038I Relaxing continuous gives -16.5346
Cbc0038I Rounding solution of -27.1889 is better than previous of -16.5346

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 22 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -27.1889 to -39.2596 (0.01 seconds)
Cbc0038I Round again with cutoff of -44.4149
Cbc0038I Pass   2: suminf.    0.28122 (4) obj. -44.4149 iterations 3
Cbc0038I Pass   3: suminf.    1.06819 (3) obj. -44.4149 iterations 5
Cbc0038I Pass   4: suminf.    0.33000 (1) obj. -44.4149 iterations 4
Cbc0038I Pass   5: suminf.    0.43518 (1) obj. -44.4149 iterations 1
Cbc0038I Pass   6: suminf.    0.34342 (1) obj. -44.4149 iterations 9
Cbc0038I Pass   7: suminf.    0.34342 (1) obj. -44.4149 iterations 2
Cbc0038I Pass   8: suminf.    0.39858 (1) obj. -44.4149 iterations 1
Cbc0038I Pass   9: suminf.    0.70262 (3) obj. -44.4149 iterations 3
Cbc0038I Pass  10: suminf.    0.47543 (1) obj. -44.4149 iterations 2
Cbc0038I Pass  11: suminf.    0.46207 (1) obj. -44.4149 iterations 1
Cbc0038I Pass  12: suminf.    1.97435 (6) obj. -44.4149 iterations 19
Cbc0038I Pass  13: suminf.    0.72922 (3) obj. -44.4149 iterations 10
Cbc0038I Pass  14: suminf.    1.00583 (3) obj. -44.4149 iterations 3
Cbc0038I Pass  15: suminf.    0.75657 (3) obj. -44.4149 iterations 1
Cbc0038I Pass  16: suminf.    0.75657 (3) obj. -44.4149 iterations 0
Cbc0038I Pass  17: suminf.    1.28978 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  18: suminf.    0.96506 (6) obj. -44.4149 iterations 4
Cbc0038I Pass  19: suminf.    0.86280 (4) obj. -44.4149 iterations 5
Cbc0038I Pass  20: suminf.    0.95316 (3) obj. -44.4149 iterations 5
Cbc0038I Pass  21: suminf.    0.71884 (3) obj. -44.4149 iterations 1
Cbc0038I Pass  22: suminf.    1.24514 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  23: suminf.    1.89272 (5) obj. -44.4149 iterations 6
Cbc0038I Pass  24: suminf.    1.46704 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  25: suminf.    1.00029 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  26: suminf.    1.00029 (3) obj. -44.4149 iterations 0
Cbc0038I Pass  27: suminf.    1.30951 (3) obj. -44.4149 iterations 2
Cbc0038I Pass  28: suminf.    1.64396 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  29: suminf.    1.03656 (4) obj. -44.4149 iterations 3
Cbc0038I Pass  30: suminf.    1.03656 (4) obj. -44.4149 iterations 1
Cbc0038I Pass  31: suminf.    1.21689 (3) obj. -44.4149 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -39.2596 to -40.138 (0.03 seconds)
Cbc0038I Round again with cutoff of -53.6942
Cbc0038I Pass  31: suminf.    0.74094 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  32: suminf.    1.00050 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  33: suminf.    0.39393 (3) obj. -53.6942 iterations 2
Cbc0038I Pass  34: suminf.    0.60192 (2) obj. -53.6942 iterations 2
Cbc0038I Pass  35: suminf.    0.60192 (2) obj. -53.6942 iterations 0
Cbc0038I Pass  36: suminf.    0.64835 (2) obj. -53.6942 iterations 1
Cbc0038I Pass  37: suminf.    2.53348 (7) obj. -53.6942 iterations 19
Cbc0038I Pass  38: suminf.    2.28546 (8) obj. -53.6942 iterations 5
Cbc0038I Pass  39: suminf.    0.85399 (4) obj. -53.6942 iterations 5
Cbc0038I Pass  40: suminf.    1.86313 (4) obj. -53.6942 iterations 5
Cbc0038I Pass  41: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  42: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  43: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  44: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  45: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  46: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  47: suminf.    1.86313 (4) obj. -53.6942 iterations 6
Cbc0038I Pass  48: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  49: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  50: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  51: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  52: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  53: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  54: suminf.    1.86313 (4) obj. -53.6942 iterations 6
Cbc0038I Pass  55: suminf.    1.86313 (4) obj. -53.6942 iterations 0
Cbc0038I Pass  56: suminf.    1.19139 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  57: suminf.    1.18604 (4) obj. -53.6942 iterations 1
Cbc0038I Pass  58: suminf.    1.82625 (4) obj. -53.6942 iterations 2
Cbc0038I Pass  59: suminf.    1.25313 (5) obj. -53.6942 iterations 5
Cbc0038I Pass  60: suminf.    0.98683 (4) obj. -53.6942 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.138 - took 0.04 seconds
Cbc0012I Integer solution of -40.138019 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 29 rows 19 columns
Cbc0031I 11 added rows had average density of 24.909091
Cbc0013I At root node, 11 cuts changed objective from -90.811363 to -65.711555 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1532 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 583 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -40.385549 found by rounding after 3222 iterations and 33 nodes (0.28 seconds)
Cbc0001I Search completed - best objective -40.385549, took 3232 iterations and 34 nodes (0.28 seconds)
Cbc0032I Strong branching done 312 times (3496 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 5, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-20) rows, 58 (-9) columns and 564 (-160) elements
Clp1000I sum of infeasibilities 0 - average 0, 12 fixed columns
Coin0506I Presolve 37 (-12) rows, 46 (-12) columns and 376 (-188) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.8138309 - largest nonzero change 2.0592727e-05 ( 0.0016324266%) - largest zero change 2.7666081e-05
Clp0000I Optimal - objective value 105.70286
Clp0000I Optimal - objective value 105.70286
Coin0511I After Postsolve, objective 105.70286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7042902 - largest nonzero change 2.4188903e-05 ( 0.0018056464%) - largest zero change 2.8320535e-05
Clp0000I Optimal - objective value 113.18209
Clp0000I Optimal - objective value 113.18209
Clp0000I Optimal - objective value 113.18209
Coin0511I After Postsolve, objective 113.18209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.1820922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 58 columns (58 integer (58 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.560%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.20315
Cbc0038I Pass   1: suminf.    1.13441 (15) obj. -9.95288 iterations 11
Cbc0038I Pass   2: suminf.    1.13441 (15) obj. -9.95288 iterations 0
Cbc0038I Solution found of 34.5398
Cbc0038I Rounding solution of -13.4296 is better than previous of 34.5398

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -13.4296 to -24.2043 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.0105
Cbc0038I Pass   3: suminf.    2.17378 (18) obj. -32.0105 iterations 1
Cbc0038I Pass   4: suminf.    2.17378 (18) obj. -32.0105 iterations 0
Cbc0038I Pass   5: suminf.    0.66120 (4) obj. -32.0105 iterations 24
Cbc0038I Pass   6: suminf.    0.56417 (3) obj. -34.182 iterations 2
Cbc0038I Pass   7: suminf.    0.28224 (2) obj. -32.0105 iterations 3
Cbc0038I Pass   8: suminf.    0.28224 (2) obj. -32.0105 iterations 0
Cbc0038I Pass   9: suminf.    0.19468 (1) obj. -32.0105 iterations 1
Cbc0038I Pass  10: suminf.    0.43520 (2) obj. -49.9557 iterations 4
Cbc0038I Pass  11: suminf.    0.28292 (2) obj. -32.0105 iterations 1
Cbc0038I Pass  12: suminf.    0.28292 (2) obj. -32.0105 iterations 1
Cbc0038I Pass  13: suminf.    2.15846 (8) obj. -32.0105 iterations 11
Cbc0038I Pass  14: suminf.    2.15846 (8) obj. -32.0105 iterations 2
Cbc0038I Pass  15: suminf.    0.79580 (2) obj. -35.3809 iterations 9
Cbc0038I Pass  16: suminf.    0.64519 (2) obj. -32.0105 iterations 1
Cbc0038I Pass  17: suminf.    1.42745 (6) obj. -32.4227 iterations 19
Cbc0038I Pass  18: suminf.    0.97802 (5) obj. -37.1339 iterations 6
Cbc0038I Pass  19: suminf.    1.02798 (3) obj. -32.0105 iterations 9
Cbc0038I Pass  20: suminf.    0.67067 (3) obj. -32.0105 iterations 2
Cbc0038I Pass  21: suminf.    0.39523 (3) obj. -32.0105 iterations 2
Cbc0038I Pass  22: suminf.    0.62040 (3) obj. -42.3332 iterations 1
Cbc0038I Pass  23: suminf.    0.31205 (2) obj. -32.0105 iterations 2
Cbc0038I Pass  24: suminf.    0.39523 (3) obj. -32.0105 iterations 3
Cbc0038I Pass  25: suminf.    1.88740 (7) obj. -32.0105 iterations 20
Cbc0038I Pass  26: suminf.    1.27978 (7) obj. -32.0105 iterations 6
Cbc0038I Pass  27: suminf.    1.40069 (7) obj. -32.0105 iterations 5
Cbc0038I Pass  28: suminf.    1.27764 (7) obj. -32.0105 iterations 2
Cbc0038I Pass  29: suminf.    1.09455 (5) obj. -32.0105 iterations 7
Cbc0038I Pass  30: suminf.    0.61926 (3) obj. -32.0105 iterations 4
Cbc0038I Pass  31: suminf.    0.56535 (5) obj. -32.0105 iterations 1
Cbc0038I Pass  32: suminf.    1.20357 (5) obj. -32.0105 iterations 4
Cbc0038I Rounding solution of -27.0654 is better than previous of -24.2043

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -27.0654 to -30.3922 (0.03 seconds)
Cbc0038I Round again with cutoff of -46.0615
Cbc0038I Pass  32: suminf.    2.39934 (18) obj. -46.0615 iterations 1
Cbc0038I Pass  33: suminf.    2.31782 (20) obj. -46.0615 iterations 1
Cbc0038I Pass  34: suminf.    0.60921 (2) obj. -46.0615 iterations 27
Cbc0038I Pass  35: suminf.    0.43520 (2) obj. -49.9557 iterations 2
Cbc0038I Pass  36: suminf.    0.60921 (2) obj. -46.0615 iterations 1
Cbc0038I Pass  37: suminf.    4.95401 (14) obj. -46.0615 iterations 19
Cbc0038I Pass  38: suminf.    2.91707 (8) obj. -46.0615 iterations 7
Cbc0038I Pass  39: suminf.    2.91707 (8) obj. -46.0615 iterations 0
Cbc0038I Pass  40: suminf.    0.48430 (2) obj. -46.0615 iterations 8
Cbc0038I Pass  41: suminf.    0.57910 (2) obj. -46.0615 iterations 1
Cbc0038I Pass  42: suminf.    2.45763 (7) obj. -46.0615 iterations 10
Cbc0038I Pass  43: suminf.    2.45763 (7) obj. -46.0615 iterations 4
Cbc0038I Pass  44: suminf.    0.69718 (3) obj. -46.0615 iterations 7
Cbc0038I Pass  45: suminf.    0.69718 (3) obj. -46.0615 iterations 1
Cbc0038I Pass  46: suminf.    1.00677 (3) obj. -51.015 iterations 2
Cbc0038I Pass  47: suminf.    1.93455 (7) obj. -46.0615 iterations 7
Cbc0038I Pass  48: suminf.    1.35108 (4) obj. -48.8018 iterations 3
Cbc0038I Pass  49: suminf.    0.46062 (3) obj. -46.0615 iterations 5
Cbc0038I Pass  50: suminf.    0.82445 (3) obj. -46.0615 iterations 2
Cbc0038I Pass  51: suminf.    0.69718 (3) obj. -46.0615 iterations 1
Cbc0038I Pass  52: suminf.    1.00677 (3) obj. -51.015 iterations 1
Cbc0038I Pass  53: suminf.    2.51191 (8) obj. -46.0615 iterations 10
Cbc0038I Pass  54: suminf.    1.49557 (7) obj. -46.0615 iterations 9
Cbc0038I Pass  55: suminf.    1.19924 (4) obj. -46.134 iterations 3
Cbc0038I Pass  56: suminf.    1.22822 (8) obj. -46.0615 iterations 9
Cbc0038I Pass  57: suminf.    1.22808 (7) obj. -46.0615 iterations 1
Cbc0038I Pass  58: suminf.    1.02067 (7) obj. -46.0615 iterations 4
Cbc0038I Pass  59: suminf.    0.99866 (7) obj. -46.0615 iterations 1
Cbc0038I Pass  60: suminf.    1.24266 (7) obj. -46.0615 iterations 7
Cbc0038I Pass  61: suminf.    1.54454 (5) obj. -46.0615 iterations 17
Cbc0038I Rounding solution of -39.3849 is better than previous of -30.3922

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -39.3849 to -39.7387 (0.05 seconds)
Cbc0038I Round again with cutoff of -62.9227
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.62005 (21) obj. -62.9227 iterations 1
Cbc0038I Pass  62: suminf.    3.62005 (21) obj. -62.9227 iterations 0
Cbc0038I Pass  63: suminf.    1.04959 (4) obj. -62.9227 iterations 28
Cbc0038I Pass  64: suminf.    1.02140 (5) obj. -62.9227 iterations 2
Cbc0038I Pass  65: suminf.    1.29264 (5) obj. -62.9227 iterations 3
Cbc0038I Pass  66: suminf.    1.29264 (5) obj. -62.9227 iterations 0
Cbc0038I Pass  67: suminf.    1.07042 (5) obj. -62.9227 iterations 3
Cbc0038I Pass  68: suminf.    1.66786 (8) obj. -62.9227 iterations 10
Cbc0038I Pass  69: suminf.    1.65441 (8) obj. -62.9227 iterations 2
Cbc0038I Pass  70: suminf.    1.21499 (7) obj. -62.9227 iterations 7
Cbc0038I Pass  71: suminf.    1.21499 (7) obj. -62.9227 iterations 1
Cbc0038I Pass  72: suminf.    1.48410 (4) obj. -62.9227 iterations 9
Cbc0038I Pass  73: suminf.    1.37238 (4) obj. -62.9227 iterations 1
Cbc0038I Pass  74: suminf.    1.40364 (4) obj. -62.9227 iterations 6
Cbc0038I Pass  75: suminf.    1.38695 (4) obj. -63.0729 iterations 1
Cbc0038I Pass  76: suminf.    1.53672 (4) obj. -62.9227 iterations 2
Cbc0038I Pass  77: suminf.    2.32204 (7) obj. -62.9227 iterations 9
Cbc0038I Pass  78: suminf.    2.30686 (7) obj. -62.9227 iterations 2
Cbc0038I Pass  79: suminf.    1.38853 (5) obj. -62.9227 iterations 4
Cbc0038I Pass  80: suminf.    1.38853 (5) obj. -62.9227 iterations 0
Cbc0038I Pass  81: suminf.    1.86184 (5) obj. -62.9227 iterations 4
Cbc0038I Pass  82: suminf.    1.38853 (5) obj. -62.9227 iterations 1
Cbc0038I Pass  83: suminf.    3.21266 (13) obj. -62.9227 iterations 20
Cbc0038I Pass  84: suminf.    3.21266 (13) obj. -62.9227 iterations 5
Cbc0038I Pass  85: suminf.    2.18556 (8) obj. -62.9227 iterations 10
Cbc0038I Pass  86: suminf.    2.18556 (8) obj. -62.9227 iterations 0
Cbc0038I Pass  87: suminf.    2.44912 (8) obj. -62.9227 iterations 4
Cbc0038I Pass  88: suminf.    2.44912 (8) obj. -62.9227 iterations 1
Cbc0038I Pass  89: suminf.    2.18556 (8) obj. -62.9227 iterations 2
Cbc0038I Pass  90: suminf.    3.94658 (15) obj. -62.9227 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.7387 - took 0.04 seconds
Cbc0012I Integer solution of -39.738689 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 58 columns, reduced to 4 rows 7 columns
Cbc0031I 22 added rows had average density of 26.454545
Cbc0013I At root node, 22 cuts changed objective from -102.26558 to -52.871797 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1994 row cuts average 2.6 elements, 11 column cuts (11 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 699 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 387 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 284 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.648 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.738689 best solution, best possible -52.871797 (1.41 seconds)
Cbc0012I Integer solution of -40.385549 found by DiveCoefficient after 2088 iterations and 9 nodes (2.02 seconds)
Cbc0010I After 14 nodes, 7 on tree, -40.385549 best solution, best possible -52.871797 (2.12 seconds)
Cbc0001I Search completed - best objective -40.385549, took 2471 iterations and 28 nodes (2.33 seconds)
Cbc0032I Strong branching done 290 times (2105 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 8, 39 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       2.34

