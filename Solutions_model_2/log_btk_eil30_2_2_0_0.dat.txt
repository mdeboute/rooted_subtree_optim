Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 0.000289974 - average 5.36988e-06, 2 fixed columns
Coin0506I Presolve 50 (-4) rows, 28 (-2) columns and 148 (-12) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Coin0511I After Postsolve, objective 93.298662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Coin0511I After Postsolve, objective 93.298662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.29866248 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 161 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.22044
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.4174 iterations 21
Cbc0038I Solution found of -29.4174
Cbc0038I Relaxing continuous gives -29.4174
Cbc0038I Rounding solution of -29.977 is better than previous of -29.4174

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -29.977 to -30.7867 (0.01 seconds)
Cbc0038I Round again with cutoff of -37.038
Cbc0038I Pass   2: suminf.    0.13335 (1) obj. -37.038 iterations 1
Cbc0038I Pass   3: suminf.    0.40793 (2) obj. -37.038 iterations 4
Cbc0038I Pass   4: suminf.    0.77658 (3) obj. -37.038 iterations 3
Cbc0038I Pass   5: suminf.    0.63991 (3) obj. -37.038 iterations 1
Cbc0038I Pass   6: suminf.    0.69429 (2) obj. -37.038 iterations 3
Cbc0038I Pass   7: suminf.    0.67816 (2) obj. -37.038 iterations 2
Cbc0038I Pass   8: suminf.    0.61927 (2) obj. -37.038 iterations 3
Cbc0038I Pass   9: suminf.    0.58748 (2) obj. -37.038 iterations 2
Cbc0038I Pass  10: suminf.    0.43548 (1) obj. -37.038 iterations 3
Cbc0038I Pass  11: suminf.    0.31665 (1) obj. -37.038 iterations 2
Cbc0038I Pass  12: suminf.    3.04377 (9) obj. -37.038 iterations 8
Cbc0038I Pass  13: suminf.    1.77628 (5) obj. -37.038 iterations 9
Cbc0038I Pass  14: suminf.    1.35632 (4) obj. -37.038 iterations 2
Cbc0038I Pass  15: suminf.    0.34095 (2) obj. -37.038 iterations 6
Cbc0038I Pass  16: suminf.    1.39195 (5) obj. -37.038 iterations 4
Cbc0038I Pass  17: suminf.    2.41687 (6) obj. -37.038 iterations 10
Cbc0038I Pass  18: suminf.    1.24436 (3) obj. -37.038 iterations 5
Cbc0038I Pass  19: suminf.    0.77398 (2) obj. -37.038 iterations 2
Cbc0038I Pass  20: suminf.    0.39872 (1) obj. -37.038 iterations 1
Cbc0038I Pass  21: suminf.    0.43548 (1) obj. -37.038 iterations 1
Cbc0038I Pass  22: suminf.    1.87803 (5) obj. -37.038 iterations 5
Cbc0038I Pass  23: suminf.    2.55621 (7) obj. -37.038 iterations 8
Cbc0038I Pass  24: suminf.    1.18974 (5) obj. -37.038 iterations 3
Cbc0038I Pass  25: suminf.    0.31669 (1) obj. -37.038 iterations 6
Cbc0038I Pass  26: suminf.    0.26725 (1) obj. -37.038 iterations 2
Cbc0038I Pass  27: suminf.    0.35484 (1) obj. -37.038 iterations 1
Cbc0038I Pass  28: suminf.    3.66227 (12) obj. -37.038 iterations 10
Cbc0038I Pass  29: suminf.    1.05997 (4) obj. -37.038 iterations 9
Cbc0038I Pass  30: suminf.    0.59189 (4) obj. -37.038 iterations 2
Cbc0038I Pass  31: suminf.    0.94961 (2) obj. -37.038 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -30.7867 to -32.1195 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.2901
Cbc0038I Pass  31: suminf.    0.42774 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  32: suminf.    0.62519 (3) obj. -48.2901 iterations 5
Cbc0038I Pass  33: suminf.    0.60486 (3) obj. -48.2901 iterations 1
Cbc0038I Pass  34: suminf.    0.51531 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  35: suminf.    1.63248 (7) obj. -48.2901 iterations 11
Cbc0038I Pass  36: suminf.    1.07897 (6) obj. -48.2901 iterations 4
Cbc0038I Pass  37: suminf.    1.61922 (5) obj. -48.2901 iterations 13
Cbc0038I Pass  38: suminf.    0.68089 (3) obj. -48.2901 iterations 2
Cbc0038I Pass  39: suminf.    1.26719 (4) obj. -48.2901 iterations 4
Cbc0038I Pass  40: suminf.    1.07460 (4) obj. -48.2901 iterations 3
Cbc0038I Pass  41: suminf.    1.07460 (4) obj. -48.2901 iterations 0
Cbc0038I Pass  42: suminf.    1.49560 (4) obj. -48.2901 iterations 3
Cbc0038I Pass  43: suminf.    0.81678 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  44: suminf.    1.07460 (4) obj. -48.2901 iterations 4
Cbc0038I Pass  45: suminf.    2.90150 (10) obj. -48.2901 iterations 19
Cbc0038I Pass  46: suminf.    2.15437 (7) obj. -48.2901 iterations 4
Cbc0038I Pass  47: suminf.    2.07182 (5) obj. -48.2901 iterations 8
Cbc0038I Pass  48: suminf.    1.13534 (8) obj. -48.2901 iterations 5
Cbc0038I Pass  49: suminf.    2.09544 (7) obj. -48.2901 iterations 10
Cbc0038I Pass  50: suminf.    2.05483 (7) obj. -48.2901 iterations 1
Cbc0038I Pass  51: suminf.    1.13995 (7) obj. -48.2901 iterations 10
Cbc0038I Pass  52: suminf.    1.72799 (8) obj. -48.2901 iterations 8
Cbc0038I Pass  53: suminf.    0.71548 (3) obj. -48.2901 iterations 8
Cbc0038I Pass  54: suminf.    0.28858 (2) obj. -48.2901 iterations 2
Cbc0038I Pass  55: suminf.    0.67305 (2) obj. -48.2901 iterations 2
Cbc0038I Pass  56: suminf.    2.39598 (7) obj. -48.2901 iterations 8
Cbc0038I Pass  57: suminf.    2.39598 (7) obj. -48.2901 iterations 1
Cbc0038I Pass  58: suminf.    2.35384 (7) obj. -48.2901 iterations 6
Cbc0038I Pass  59: suminf.    0.75250 (2) obj. -48.2901 iterations 3
Cbc0038I Pass  60: suminf.    0.28858 (2) obj. -48.2901 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 46 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -32.1195 - took 0.05 seconds
Cbc0012I Integer solution of -32.11948 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 31 rows 20 columns
Cbc0031I 15 added rows had average density of 23.666667
Cbc0013I At root node, 15 cuts changed objective from -93.298662 to -52.536065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3398 row cuts average 4.2 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1283 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0012I Integer solution of -32.28779 found by DiveCoefficient after 3441 iterations and 4 nodes (0.25 seconds)
Cbc0001I Search completed - best objective -32.28779, took 4101 iterations and 14 nodes (0.28 seconds)
Cbc0032I Strong branching done 218 times (3322 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 4, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-11) rows, 55 (-5) columns and 513 (-99) elements
Clp1000I sum of infeasibilities 4.0184e-11 - average 7.87921e-13, 39 fixed columns
Coin0506I Presolve 15 (-36) rows, 16 (-39) columns and 56 (-457) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 0.34146475 - largest nonzero change 2.9759326e-05 ( 0.0025228206%) - largest zero change 1.144109e-05
Clp0000I Optimal - objective value 4.4376972
Clp0000I Optimal - objective value 4.4376972
Coin0511I After Postsolve, objective 4.4376972, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21299983 - largest nonzero change 2.9759326e-05 ( 0.0025228206%) - largest zero change 2.8740528e-05
Clp0000I Optimal - objective value 115.633
Clp0000I Optimal - objective value 115.633
Clp0000I Optimal - objective value 115.633
Coin0511I After Postsolve, objective 115.633, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.633003 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 56 columns (56 integer (56 of which binary)) and 519 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.53637
Cbc0038I Pass   1: suminf.    2.30640 (14) obj. -98.796 iterations 7
Cbc0038I Pass   2: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Solution found of -18.0335
Cbc0038I Rounding solution of -18.5931 is better than previous of -18.0335

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 56 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -27.4371
Cbc0038I Pass   3: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass   4: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass   5: suminf.    0.37258 (2) obj. -27.4371 iterations 15
Cbc0038I Pass   6: suminf.    0.10918 (2) obj. -41.4231 iterations 1
Cbc0038I Pass   7: suminf.    0.07692 (1) obj. -40.1874 iterations 1
Cbc0038I Pass   8: suminf.    1.29994 (9) obj. -57.8776 iterations 12
Cbc0038I Pass   9: suminf.    1.20317 (8) obj. -54.1704 iterations 3
Cbc0038I Pass  10: suminf.    0.57429 (3) obj. -27.4371 iterations 9
Cbc0038I Pass  11: suminf.    0.53764 (3) obj. -27.4371 iterations 1
Cbc0038I Pass  12: suminf.    0.57429 (3) obj. -27.4371 iterations 2
Cbc0038I Pass  13: suminf.    1.60280 (6) obj. -27.4371 iterations 15
Cbc0038I Pass  14: suminf.    1.00385 (4) obj. -29.2019 iterations 4
Cbc0038I Pass  15: suminf.    1.03402 (4) obj. -27.4371 iterations 5
Cbc0038I Pass  16: suminf.    0.97720 (4) obj. -27.4371 iterations 2
Cbc0038I Pass  17: suminf.    0.96899 (4) obj. -27.4371 iterations 1
Cbc0038I Pass  18: suminf.    0.96899 (4) obj. -27.4371 iterations 0
Cbc0038I Pass  19: suminf.    0.59014 (3) obj. -27.4371 iterations 2
Cbc0038I Pass  20: suminf.    0.37692 (3) obj. -31.9147 iterations 1
Cbc0038I Pass  21: suminf.    1.95696 (10) obj. -33.9099 iterations 10
Cbc0038I Pass  22: suminf.    1.95696 (10) obj. -33.9099 iterations 0
Cbc0038I Pass  23: suminf.    1.55036 (5) obj. -27.4371 iterations 15
Cbc0038I Pass  24: suminf.    0.73077 (3) obj. -29.2372 iterations 4
Cbc0038I Pass  25: suminf.    0.97111 (4) obj. -27.4371 iterations 3
Cbc0038I Pass  26: suminf.    2.82155 (11) obj. -27.4371 iterations 21
Cbc0038I Pass  27: suminf.    2.51226 (11) obj. -27.4371 iterations 1
Cbc0038I Pass  28: suminf.    1.14449 (4) obj. -27.4371 iterations 17
Cbc0038I Pass  29: suminf.    1.14449 (4) obj. -27.4371 iterations 0
Cbc0038I Pass  30: suminf.    1.30908 (4) obj. -27.4371 iterations 3
Cbc0038I Pass  31: suminf.    1.30908 (4) obj. -27.4371 iterations 1
Cbc0038I Pass  32: suminf.    1.14449 (4) obj. -27.4371 iterations 4
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 56 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.356
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass  33: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass  34: suminf.    0.25946 (3) obj. -44.6715 iterations 11
Cbc0038I Pass  35: suminf.    0.20122 (3) obj. -43.356 iterations 4
Cbc0038I Pass  36: suminf.    0.20122 (3) obj. -43.356 iterations 0
Cbc0038I Pass  37: suminf.    0.53587 (3) obj. -43.356 iterations 1
Cbc0038I Pass  38: suminf.    0.53587 (3) obj. -43.356 iterations 0
Cbc0038I Pass  39: suminf.    0.20122 (3) obj. -43.356 iterations 1
Cbc0038I Pass  40: suminf.    1.44956 (11) obj. -43.356 iterations 13
Cbc0038I Pass  41: suminf.    1.34647 (9) obj. -43.356 iterations 3
Cbc0038I Pass  42: suminf.    0.80368 (4) obj. -43.356 iterations 11
Cbc0038I Pass  43: suminf.    0.80368 (4) obj. -43.356 iterations 0
Cbc0038I Pass  44: suminf.    0.76621 (4) obj. -43.356 iterations 2
Cbc0038I Pass  45: suminf.    0.76621 (4) obj. -43.356 iterations 0
Cbc0038I Pass  46: suminf.    0.80368 (4) obj. -43.356 iterations 3
Cbc0038I Pass  47: suminf.    1.15662 (6) obj. -43.356 iterations 12
Cbc0038I Pass  48: suminf.    0.93320 (5) obj. -44.3105 iterations 3
Cbc0038I Pass  49: suminf.    0.80726 (5) obj. -43.356 iterations 4
Cbc0038I Pass  50: suminf.    0.75187 (6) obj. -43.356 iterations 2
Cbc0038I Pass  51: suminf.    0.51891 (4) obj. -43.356 iterations 7
Cbc0038I Pass  52: suminf.    0.50879 (5) obj. -43.356 iterations 3
Cbc0038I Pass  53: suminf.    0.51891 (4) obj. -43.356 iterations 3
Cbc0038I Pass  54: suminf.    2.83436 (10) obj. -43.356 iterations 14
Cbc0038I Pass  55: suminf.    2.17476 (9) obj. -43.356 iterations 3
Cbc0038I Pass  56: suminf.    1.93423 (6) obj. -43.356 iterations 9
Cbc0038I Pass  57: suminf.    1.76936 (6) obj. -43.356 iterations 2
Cbc0038I Pass  58: suminf.    1.93423 (6) obj. -43.356 iterations 5
Cbc0038I Pass  59: suminf.    2.25194 (9) obj. -43.356 iterations 12
Cbc0038I Pass  60: suminf.    2.24616 (9) obj. -43.4947 iterations 2
Cbc0038I Pass  61: suminf.    2.06777 (9) obj. -43.356 iterations 14
Cbc0038I Rounding solution of -29.977 is better than previous of -18.5931

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 56 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -29.977 to -32.1156 (0.04 seconds)
Cbc0038I Round again with cutoff of -62.4586
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass  62: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass  63: suminf.    0.64736 (4) obj. -62.4586 iterations 18
Cbc0038I Pass  64: suminf.    0.64736 (4) obj. -62.4586 iterations 0
Cbc0038I Pass  65: suminf.    0.44103 (4) obj. -62.4586 iterations 5
Cbc0038I Pass  66: suminf.    0.40739 (5) obj. -62.4586 iterations 3
Cbc0038I Pass  67: suminf.    0.64880 (4) obj. -62.4586 iterations 6
Cbc0038I Pass  68: suminf.    1.73586 (10) obj. -62.4586 iterations 14
Cbc0038I Pass  69: suminf.    1.30932 (8) obj. -66.4267 iterations 4
Cbc0038I Pass  70: suminf.    1.18109 (5) obj. -62.4586 iterations 9
Cbc0038I Pass  71: suminf.    1.18109 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  72: suminf.    0.87471 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  73: suminf.    0.87298 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  74: suminf.    1.05269 (5) obj. -62.4586 iterations 2
Cbc0038I Pass  75: suminf.    0.92015 (6) obj. -62.4586 iterations 2
Cbc0038I Pass  76: suminf.    1.18109 (5) obj. -62.4586 iterations 4
Cbc0038I Pass  77: suminf.    1.18109 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  78: suminf.    0.87471 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  79: suminf.    0.87298 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  80: suminf.    1.05269 (5) obj. -62.4586 iterations 2
Cbc0038I Pass  81: suminf.    0.92015 (6) obj. -62.4586 iterations 2
Cbc0038I Pass  82: suminf.    1.18109 (5) obj. -62.4586 iterations 4
Cbc0038I Pass  83: suminf.    1.18109 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  84: suminf.    0.87471 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  85: suminf.    0.87298 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  86: suminf.    1.05269 (5) obj. -62.4586 iterations 2
Cbc0038I Pass  87: suminf.    0.92015 (6) obj. -62.4586 iterations 2
Cbc0038I Pass  88: suminf.    1.18109 (5) obj. -62.4586 iterations 4
Cbc0038I Pass  89: suminf.    1.18109 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  90: suminf.    0.87471 (5) obj. -62.4586 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -32.1156 - took 0.04 seconds
Cbc0012I Integer solution of -32.11558 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 52 rows 56 columns, reduced to 4 rows 6 columns
Cbc0031I 34 added rows had average density of 11.5
Cbc0013I At root node, 34 cuts changed objective from -107.03153 to -35.447115 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2245 row cuts average 3.6 elements, 6 column cuts (6 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1170 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 55 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 524 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 106 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.652 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.11558 best solution, best possible -35.447115 (1.47 seconds)
Cbc0012I Integer solution of -32.11948 found by rounding after 2729 iterations and 3 nodes (1.77 seconds)
Cbc0012I Integer solution of -32.28779 found by rounding after 3004 iterations and 7 nodes (2.07 seconds)
Cbc0001I Search completed - best objective -32.28779, took 3055 iterations and 8 nodes (2.08 seconds)
Cbc0032I Strong branching done 174 times (2785 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.42   (Wallclock seconds):       2.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-9) rows, 30 (-2) columns and 160 (-17) elements
Clp1000I sum of infeasibilities 0.000289974 - average 5.36988e-06, 2 fixed columns
Coin0506I Presolve 50 (-4) rows, 28 (-2) columns and 148 (-12) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Coin0511I After Postsolve, objective 93.298662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Clp0000I Optimal - objective value 93.298662
Coin0511I After Postsolve, objective 93.298662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.29866248 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 30 columns (29 integer (29 of which binary)) and 161 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.22044
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -29.4174 iterations 21
Cbc0038I Solution found of -29.4174
Cbc0038I Relaxing continuous gives -29.4174
Cbc0038I Rounding solution of -29.977 is better than previous of -29.4174

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -29.977 to -30.7867 (0.01 seconds)
Cbc0038I Round again with cutoff of -37.038
Cbc0038I Pass   2: suminf.    0.13335 (1) obj. -37.038 iterations 1
Cbc0038I Pass   3: suminf.    0.40793 (2) obj. -37.038 iterations 4
Cbc0038I Pass   4: suminf.    0.77658 (3) obj. -37.038 iterations 3
Cbc0038I Pass   5: suminf.    0.63991 (3) obj. -37.038 iterations 1
Cbc0038I Pass   6: suminf.    0.69429 (2) obj. -37.038 iterations 3
Cbc0038I Pass   7: suminf.    0.67816 (2) obj. -37.038 iterations 2
Cbc0038I Pass   8: suminf.    0.61927 (2) obj. -37.038 iterations 3
Cbc0038I Pass   9: suminf.    0.58748 (2) obj. -37.038 iterations 2
Cbc0038I Pass  10: suminf.    0.43548 (1) obj. -37.038 iterations 3
Cbc0038I Pass  11: suminf.    0.31665 (1) obj. -37.038 iterations 2
Cbc0038I Pass  12: suminf.    3.04377 (9) obj. -37.038 iterations 8
Cbc0038I Pass  13: suminf.    1.77628 (5) obj. -37.038 iterations 9
Cbc0038I Pass  14: suminf.    1.35632 (4) obj. -37.038 iterations 2
Cbc0038I Pass  15: suminf.    0.34095 (2) obj. -37.038 iterations 6
Cbc0038I Pass  16: suminf.    1.39195 (5) obj. -37.038 iterations 4
Cbc0038I Pass  17: suminf.    2.41687 (6) obj. -37.038 iterations 10
Cbc0038I Pass  18: suminf.    1.24436 (3) obj. -37.038 iterations 5
Cbc0038I Pass  19: suminf.    0.77398 (2) obj. -37.038 iterations 2
Cbc0038I Pass  20: suminf.    0.39872 (1) obj. -37.038 iterations 1
Cbc0038I Pass  21: suminf.    0.43548 (1) obj. -37.038 iterations 1
Cbc0038I Pass  22: suminf.    1.87803 (5) obj. -37.038 iterations 5
Cbc0038I Pass  23: suminf.    2.55621 (7) obj. -37.038 iterations 8
Cbc0038I Pass  24: suminf.    1.18974 (5) obj. -37.038 iterations 3
Cbc0038I Pass  25: suminf.    0.31669 (1) obj. -37.038 iterations 6
Cbc0038I Pass  26: suminf.    0.26725 (1) obj. -37.038 iterations 2
Cbc0038I Pass  27: suminf.    0.35484 (1) obj. -37.038 iterations 1
Cbc0038I Pass  28: suminf.    3.66227 (12) obj. -37.038 iterations 10
Cbc0038I Pass  29: suminf.    1.05997 (4) obj. -37.038 iterations 9
Cbc0038I Pass  30: suminf.    0.59189 (4) obj. -37.038 iterations 2
Cbc0038I Pass  31: suminf.    0.94961 (2) obj. -37.038 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -30.7867 to -32.1195 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.2901
Cbc0038I Pass  31: suminf.    0.42774 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  32: suminf.    0.62519 (3) obj. -48.2901 iterations 5
Cbc0038I Pass  33: suminf.    0.60486 (3) obj. -48.2901 iterations 1
Cbc0038I Pass  34: suminf.    0.51531 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  35: suminf.    1.63248 (7) obj. -48.2901 iterations 11
Cbc0038I Pass  36: suminf.    1.07897 (6) obj. -48.2901 iterations 4
Cbc0038I Pass  37: suminf.    1.61922 (5) obj. -48.2901 iterations 13
Cbc0038I Pass  38: suminf.    0.68089 (3) obj. -48.2901 iterations 2
Cbc0038I Pass  39: suminf.    1.26719 (4) obj. -48.2901 iterations 4
Cbc0038I Pass  40: suminf.    1.07460 (4) obj. -48.2901 iterations 3
Cbc0038I Pass  41: suminf.    1.07460 (4) obj. -48.2901 iterations 0
Cbc0038I Pass  42: suminf.    1.49560 (4) obj. -48.2901 iterations 3
Cbc0038I Pass  43: suminf.    0.81678 (3) obj. -48.2901 iterations 3
Cbc0038I Pass  44: suminf.    1.07460 (4) obj. -48.2901 iterations 4
Cbc0038I Pass  45: suminf.    2.90150 (10) obj. -48.2901 iterations 19
Cbc0038I Pass  46: suminf.    2.15437 (7) obj. -48.2901 iterations 4
Cbc0038I Pass  47: suminf.    2.07182 (5) obj. -48.2901 iterations 8
Cbc0038I Pass  48: suminf.    1.13534 (8) obj. -48.2901 iterations 5
Cbc0038I Pass  49: suminf.    2.09544 (7) obj. -48.2901 iterations 10
Cbc0038I Pass  50: suminf.    2.05483 (7) obj. -48.2901 iterations 1
Cbc0038I Pass  51: suminf.    1.13995 (7) obj. -48.2901 iterations 10
Cbc0038I Pass  52: suminf.    1.72799 (8) obj. -48.2901 iterations 8
Cbc0038I Pass  53: suminf.    0.71548 (3) obj. -48.2901 iterations 8
Cbc0038I Pass  54: suminf.    0.28858 (2) obj. -48.2901 iterations 2
Cbc0038I Pass  55: suminf.    0.67305 (2) obj. -48.2901 iterations 2
Cbc0038I Pass  56: suminf.    2.39598 (7) obj. -48.2901 iterations 8
Cbc0038I Pass  57: suminf.    2.39598 (7) obj. -48.2901 iterations 1
Cbc0038I Pass  58: suminf.    2.35384 (7) obj. -48.2901 iterations 6
Cbc0038I Pass  59: suminf.    0.75250 (2) obj. -48.2901 iterations 3
Cbc0038I Pass  60: suminf.    0.28858 (2) obj. -48.2901 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 30 columns, reduced to 46 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.1195 - took 0.03 seconds
Cbc0012I Integer solution of -32.11948 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 54 rows 30 columns, reduced to 31 rows 20 columns
Cbc0031I 15 added rows had average density of 23.666667
Cbc0013I At root node, 15 cuts changed objective from -93.298662 to -52.536065 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3398 row cuts average 4.2 elements, 1 column cuts (1 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1283 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0012I Integer solution of -32.28779 found by DiveCoefficient after 3441 iterations and 4 nodes (0.30 seconds)
Cbc0001I Search completed - best objective -32.28779, took 4101 iterations and 14 nodes (0.33 seconds)
Cbc0032I Strong branching done 218 times (3322 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 4, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 55 (-6) columns and 513 (-100) elements
Clp1000I sum of infeasibilities 4.0184e-11 - average 7.87921e-13, 39 fixed columns
Coin0506I Presolve 15 (-36) rows, 16 (-39) columns and 56 (-457) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 0.34146475 - largest nonzero change 2.9759326e-05 ( 0.0025228206%) - largest zero change 1.144109e-05
Clp0000I Optimal - objective value 4.4376972
Clp0000I Optimal - objective value 4.4376972
Coin0511I After Postsolve, objective 4.4376972, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21299983 - largest nonzero change 2.9759326e-05 ( 0.0025228206%) - largest zero change 2.8740528e-05
Clp0000I Optimal - objective value 115.633
Clp0000I Optimal - objective value 115.633
Clp0000I Optimal - objective value 115.633
Coin0511I After Postsolve, objective 115.633, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.633003 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 56 columns (56 integer (56 of which binary)) and 519 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.53637
Cbc0038I Pass   1: suminf.    2.30640 (14) obj. -98.796 iterations 7
Cbc0038I Pass   2: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Solution found of -18.0335
Cbc0038I Rounding solution of -18.5931 is better than previous of -18.0335

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 56 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -27.4371
Cbc0038I Pass   3: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass   4: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass   5: suminf.    0.37258 (2) obj. -27.4371 iterations 15
Cbc0038I Pass   6: suminf.    0.10918 (2) obj. -41.4231 iterations 1
Cbc0038I Pass   7: suminf.    0.07692 (1) obj. -40.1874 iterations 1
Cbc0038I Pass   8: suminf.    1.29994 (9) obj. -57.8776 iterations 12
Cbc0038I Pass   9: suminf.    1.20317 (8) obj. -54.1704 iterations 3
Cbc0038I Pass  10: suminf.    0.57429 (3) obj. -27.4371 iterations 9
Cbc0038I Pass  11: suminf.    0.53764 (3) obj. -27.4371 iterations 1
Cbc0038I Pass  12: suminf.    0.57429 (3) obj. -27.4371 iterations 2
Cbc0038I Pass  13: suminf.    1.60280 (6) obj. -27.4371 iterations 15
Cbc0038I Pass  14: suminf.    1.00385 (4) obj. -29.2019 iterations 4
Cbc0038I Pass  15: suminf.    1.03402 (4) obj. -27.4371 iterations 5
Cbc0038I Pass  16: suminf.    0.97720 (4) obj. -27.4371 iterations 2
Cbc0038I Pass  17: suminf.    0.96899 (4) obj. -27.4371 iterations 1
Cbc0038I Pass  18: suminf.    0.96899 (4) obj. -27.4371 iterations 0
Cbc0038I Pass  19: suminf.    0.59014 (3) obj. -27.4371 iterations 2
Cbc0038I Pass  20: suminf.    0.37692 (3) obj. -31.9147 iterations 1
Cbc0038I Pass  21: suminf.    1.95696 (10) obj. -33.9099 iterations 10
Cbc0038I Pass  22: suminf.    1.95696 (10) obj. -33.9099 iterations 0
Cbc0038I Pass  23: suminf.    1.55036 (5) obj. -27.4371 iterations 15
Cbc0038I Pass  24: suminf.    0.73077 (3) obj. -29.2372 iterations 4
Cbc0038I Pass  25: suminf.    0.97111 (4) obj. -27.4371 iterations 3
Cbc0038I Pass  26: suminf.    2.82155 (11) obj. -27.4371 iterations 21
Cbc0038I Pass  27: suminf.    2.51226 (11) obj. -27.4371 iterations 1
Cbc0038I Pass  28: suminf.    1.14449 (4) obj. -27.4371 iterations 17
Cbc0038I Pass  29: suminf.    1.14449 (4) obj. -27.4371 iterations 0
Cbc0038I Pass  30: suminf.    1.30908 (4) obj. -27.4371 iterations 3
Cbc0038I Pass  31: suminf.    1.30908 (4) obj. -27.4371 iterations 1
Cbc0038I Pass  32: suminf.    1.14449 (4) obj. -27.4371 iterations 4
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 56 columns, reduced to 8 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -43.356
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass  33: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass  34: suminf.    0.25946 (3) obj. -44.6715 iterations 11
Cbc0038I Pass  35: suminf.    0.20122 (3) obj. -43.356 iterations 4
Cbc0038I Pass  36: suminf.    0.20122 (3) obj. -43.356 iterations 0
Cbc0038I Pass  37: suminf.    0.53587 (3) obj. -43.356 iterations 1
Cbc0038I Pass  38: suminf.    0.53587 (3) obj. -43.356 iterations 0
Cbc0038I Pass  39: suminf.    0.20122 (3) obj. -43.356 iterations 1
Cbc0038I Pass  40: suminf.    1.44956 (11) obj. -43.356 iterations 13
Cbc0038I Pass  41: suminf.    1.34647 (9) obj. -43.356 iterations 3
Cbc0038I Pass  42: suminf.    0.80368 (4) obj. -43.356 iterations 11
Cbc0038I Pass  43: suminf.    0.80368 (4) obj. -43.356 iterations 0
Cbc0038I Pass  44: suminf.    0.76621 (4) obj. -43.356 iterations 2
Cbc0038I Pass  45: suminf.    0.76621 (4) obj. -43.356 iterations 0
Cbc0038I Pass  46: suminf.    0.80368 (4) obj. -43.356 iterations 3
Cbc0038I Pass  47: suminf.    1.15662 (6) obj. -43.356 iterations 12
Cbc0038I Pass  48: suminf.    0.93320 (5) obj. -44.3105 iterations 3
Cbc0038I Pass  49: suminf.    0.80726 (5) obj. -43.356 iterations 4
Cbc0038I Pass  50: suminf.    0.75187 (6) obj. -43.356 iterations 2
Cbc0038I Pass  51: suminf.    0.51891 (4) obj. -43.356 iterations 7
Cbc0038I Pass  52: suminf.    0.50879 (5) obj. -43.356 iterations 3
Cbc0038I Pass  53: suminf.    0.51891 (4) obj. -43.356 iterations 3
Cbc0038I Pass  54: suminf.    2.83436 (10) obj. -43.356 iterations 14
Cbc0038I Pass  55: suminf.    2.17476 (9) obj. -43.356 iterations 3
Cbc0038I Pass  56: suminf.    1.93423 (6) obj. -43.356 iterations 9
Cbc0038I Pass  57: suminf.    1.76936 (6) obj. -43.356 iterations 2
Cbc0038I Pass  58: suminf.    1.93423 (6) obj. -43.356 iterations 5
Cbc0038I Pass  59: suminf.    2.25194 (9) obj. -43.356 iterations 12
Cbc0038I Pass  60: suminf.    2.24616 (9) obj. -43.4947 iterations 2
Cbc0038I Pass  61: suminf.    2.06777 (9) obj. -43.356 iterations 14
Cbc0038I Rounding solution of -29.977 is better than previous of -18.5931

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 56 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -29.977 to -32.1156 (0.04 seconds)
Cbc0038I Round again with cutoff of -62.4586
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass  62: suminf.    2.30640 (14) obj. -98.796 iterations 0
Cbc0038I Pass  63: suminf.    0.64736 (4) obj. -62.4586 iterations 18
Cbc0038I Pass  64: suminf.    0.64736 (4) obj. -62.4586 iterations 0
Cbc0038I Pass  65: suminf.    0.44103 (4) obj. -62.4586 iterations 5
Cbc0038I Pass  66: suminf.    0.40739 (5) obj. -62.4586 iterations 3
Cbc0038I Pass  67: suminf.    0.64880 (4) obj. -62.4586 iterations 6
Cbc0038I Pass  68: suminf.    1.73586 (10) obj. -62.4586 iterations 14
Cbc0038I Pass  69: suminf.    1.30932 (8) obj. -66.4267 iterations 4
Cbc0038I Pass  70: suminf.    1.18109 (5) obj. -62.4586 iterations 9
Cbc0038I Pass  71: suminf.    1.18109 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  72: suminf.    0.87471 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  73: suminf.    0.87298 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  74: suminf.    1.05269 (5) obj. -62.4586 iterations 2
Cbc0038I Pass  75: suminf.    0.92015 (6) obj. -62.4586 iterations 2
Cbc0038I Pass  76: suminf.    1.18109 (5) obj. -62.4586 iterations 4
Cbc0038I Pass  77: suminf.    1.18109 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  78: suminf.    0.87471 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  79: suminf.    0.87298 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  80: suminf.    1.05269 (5) obj. -62.4586 iterations 2
Cbc0038I Pass  81: suminf.    0.92015 (6) obj. -62.4586 iterations 2
Cbc0038I Pass  82: suminf.    1.18109 (5) obj. -62.4586 iterations 4
Cbc0038I Pass  83: suminf.    1.18109 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  84: suminf.    0.87471 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  85: suminf.    0.87298 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  86: suminf.    1.05269 (5) obj. -62.4586 iterations 2
Cbc0038I Pass  87: suminf.    0.92015 (6) obj. -62.4586 iterations 2
Cbc0038I Pass  88: suminf.    1.18109 (5) obj. -62.4586 iterations 4
Cbc0038I Pass  89: suminf.    1.18109 (5) obj. -62.4586 iterations 1
Cbc0038I Pass  90: suminf.    0.87471 (5) obj. -62.4586 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -32.1156 - took 0.04 seconds
Cbc0012I Integer solution of -32.11558 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 52 rows 56 columns, reduced to 4 rows 6 columns
Cbc0031I 34 added rows had average density of 11.5
Cbc0013I At root node, 34 cuts changed objective from -107.03153 to -35.447115 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2245 row cuts average 3.6 elements, 6 column cuts (6 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1170 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 55 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 524 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 106 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.821 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.11558 best solution, best possible -35.447115 (1.89 seconds)
Cbc0012I Integer solution of -32.11948 found by rounding after 2729 iterations and 3 nodes (2.27 seconds)
Cbc0010I After 4 nodes, 4 on tree, -32.11948 best solution, best possible -35.447115 (2.60 seconds)
Cbc0012I Integer solution of -32.28779 found by rounding after 3004 iterations and 7 nodes (2.61 seconds)
Cbc0001I Search completed - best objective -32.28779, took 3055 iterations and 8 nodes (2.61 seconds)
Cbc0032I Strong branching done 174 times (2785 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.73   (Wallclock seconds):       2.62

