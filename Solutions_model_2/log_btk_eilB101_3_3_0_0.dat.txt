Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 154 (-51) rows, 86 (-17) columns and 472 (-131) elements
Clp1000I sum of infeasibilities 3.07287e-05 - average 1.99537e-07, 17 fixed columns
Coin0506I Presolve 118 (-36) rows, 67 (-19) columns and 362 (-110) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 1.7088023 - largest nonzero change 0 ( 0%) - largest zero change 2.9851763e-05
Clp0000I Optimal - objective value 77.853127
Clp0000I Optimal - objective value 77.853127
Coin0511I After Postsolve, objective 77.853127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.853127
Clp0000I Optimal - objective value 77.853127
Clp0000I Optimal - objective value 77.853127
Coin0511I After Postsolve, objective 77.853127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.85312711 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 152 rows, 86 columns (85 integer (85 of which binary)) and 493 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.297%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.58075
Cbc0038I Solution found of -7.00151
Cbc0038I Relaxing continuous gives -14.9628
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 86 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -14.9628 to -48.9961 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.7168
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    2.88491 (19) obj. -51.7168 iterations 57
Cbc0038I Pass   2: suminf.    2.51569 (7) obj. -51.7168 iterations 26
Cbc0038I Pass   3: suminf.    2.05727 (7) obj. -51.7168 iterations 2
Cbc0038I Pass   4: suminf.    2.69477 (8) obj. -51.7168 iterations 13
Cbc0038I Pass   5: suminf.    1.20330 (5) obj. -51.7168 iterations 6
Cbc0038I Pass   6: suminf.    1.03854 (4) obj. -51.7168 iterations 2
Cbc0038I Pass   7: suminf.    1.57609 (4) obj. -51.7168 iterations 5
Cbc0038I Pass   8: suminf.    1.11411 (3) obj. -51.7168 iterations 3
Cbc0038I Pass   9: suminf.    1.19429 (3) obj. -51.7168 iterations 1
Cbc0038I Pass  10: suminf.    0.76933 (3) obj. -51.7168 iterations 4
Cbc0038I Pass  11: suminf.    1.22483 (3) obj. -51.7168 iterations 4
Cbc0038I Pass  12: suminf.    3.41855 (13) obj. -51.7168 iterations 19
Cbc0038I Pass  13: suminf.    2.88289 (9) obj. -51.7168 iterations 15
Cbc0038I Pass  14: suminf.    2.02617 (13) obj. -51.7168 iterations 7
Cbc0038I Pass  15: suminf.    3.26933 (9) obj. -51.7168 iterations 19
Cbc0038I Pass  16: suminf.    2.33546 (7) obj. -51.7168 iterations 14
Cbc0038I Pass  17: suminf.    2.08299 (7) obj. -51.7168 iterations 2
Cbc0038I Pass  18: suminf.    1.94522 (5) obj. -51.7168 iterations 10
Cbc0038I Pass  19: suminf.    1.40456 (6) obj. -51.7168 iterations 8
Cbc0038I Pass  20: suminf.    1.37264 (6) obj. -51.7168 iterations 1
Cbc0038I Pass  21: suminf.    1.72720 (6) obj. -51.7168 iterations 10
Cbc0038I Pass  22: suminf.    1.08884 (7) obj. -51.7168 iterations 9
Cbc0038I Pass  23: suminf.    2.62794 (6) obj. -51.7168 iterations 15
Cbc0038I Pass  24: suminf.    2.09900 (5) obj. -51.7168 iterations 5
Cbc0038I Pass  25: suminf.    1.23832 (4) obj. -51.7168 iterations 3
Cbc0038I Pass  26: suminf.    1.22933 (4) obj. -51.7168 iterations 1
Cbc0038I Pass  27: suminf.    1.59776 (4) obj. -51.7168 iterations 7
Cbc0038I Pass  28: suminf.    1.16567 (6) obj. -51.7168 iterations 6
Cbc0038I Pass  29: suminf.    1.58092 (6) obj. -51.7168 iterations 11
Cbc0038I Pass  30: suminf.    1.09514 (5) obj. -51.7168 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 86 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -48.9961 - took 0.06 seconds
Cbc0012I Integer solution of -48.99611 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 152 rows 86 columns, reduced to 63 rows 36 columns
Cbc0031I 23 added rows had average density of 52.173913
Cbc0013I At root node, 23 cuts changed objective from -76.202467 to -67.225803 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5866 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1063 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -48.99611 best solution, best possible -67.225803 (0.68 seconds)
Cbc0001I Search completed - best objective -48.99610999999999, took 5702 iterations and 22 nodes (0.75 seconds)
Cbc0032I Strong branching done 400 times (7787 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 9, 128 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       0.76

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-93) rows, 127 (-75) columns and 2169 (-3484) elements
Clp1000I sum of infeasibilities 4.46819e-06 - average 4.02539e-08, 16 fixed columns
Coin0506I Presolve 96 (-15) rows, 110 (-17) columns and 1706 (-463) elements
Clp0006I 0  Obj 75.544516 Dual inf 14.207604 (98)
Clp0029I End of values pass after 110 iterations
Clp0014I Perturbing problem by 0.001% of 1.942763 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 86.754812
Clp0000I Optimal - objective value 86.754812
Coin0511I After Postsolve, objective 86.754812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 86.754812
Clp0000I Optimal - objective value 86.754812
Clp0000I Optimal - objective value 86.754812
Clp0000I Optimal - objective value 86.754812
Coin0511I After Postsolve, objective 86.754812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.75481229 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 129 columns (129 integer (129 of which binary)) and 2198 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 6.43917
Cbc0038I Pass   1: suminf.    1.71241 (31) obj. -66.0986 iterations 27
Cbc0038I Pass   2: suminf.    1.71241 (31) obj. -66.0986 iterations 1
Cbc0038I Pass   3: suminf.    0.54839 (19) obj. -37.0662 iterations 14
Cbc0038I Solution found of -17.6458
Cbc0038I Rounding solution of -18.8293 is better than previous of -17.6458

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 129 columns, reduced to 35 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -18.8293 to -35.6038 (0.04 seconds)
Cbc0038I Round again with cutoff of -39.1502
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.71241 (31) obj. -66.0986 iterations 0
Cbc0038I Pass   5: suminf.    1.71241 (31) obj. -66.0986 iterations 1
Cbc0038I Pass   6: suminf.    0.70146 (20) obj. -39.1502 iterations 17
Cbc0038I Pass   7: suminf.    1.24725 (11) obj. -39.1502 iterations 29
Cbc0038I Pass   8: suminf.    0.89094 (11) obj. -39.1502 iterations 10
Cbc0038I Pass   9: suminf.    0.85351 (11) obj. -39.1502 iterations 2
Cbc0038I Pass  10: suminf.    2.03897 (7) obj. -39.1502 iterations 25
Cbc0038I Pass  11: suminf.    1.81129 (7) obj. -39.1502 iterations 10
Cbc0038I Pass  12: suminf.    1.80420 (7) obj. -39.1502 iterations 10
Cbc0038I Pass  13: suminf.    1.80420 (7) obj. -39.1502 iterations 7
Cbc0038I Pass  14: suminf.    1.81129 (7) obj. -39.1502 iterations 10
Cbc0038I Pass  15: suminf.    2.39699 (11) obj. -39.1502 iterations 30
Cbc0038I Pass  16: suminf.    0.79485 (5) obj. -39.1502 iterations 27
Cbc0038I Pass  17: suminf.    0.47612 (5) obj. -39.7877 iterations 9
Cbc0038I Pass  18: suminf.    1.68532 (9) obj. -39.1502 iterations 14
Cbc0038I Pass  19: suminf.    0.75092 (4) obj. -39.1502 iterations 3
Cbc0038I Pass  20: suminf.    0.44969 (4) obj. -39.7527 iterations 8
Cbc0038I Pass  21: suminf.    2.16498 (23) obj. -39.1502 iterations 32
Cbc0038I Pass  22: suminf.    0.67514 (8) obj. -39.1502 iterations 29
Cbc0038I Pass  23: suminf.    0.33739 (7) obj. -39.3544 iterations 10
Cbc0038I Pass  24: suminf.    2.74900 (10) obj. -39.1502 iterations 18
Cbc0038I Pass  25: suminf.    2.74900 (10) obj. -39.1502 iterations 0
Cbc0038I Pass  26: suminf.    2.12303 (9) obj. -39.1502 iterations 14
Cbc0038I Pass  27: suminf.    1.73979 (8) obj. -39.1502 iterations 4
Cbc0038I Pass  28: suminf.    2.09384 (8) obj. -39.1502 iterations 22
Cbc0038I Pass  29: suminf.    2.37710 (15) obj. -39.1502 iterations 19
Cbc0038I Pass  30: suminf.    0.87010 (11) obj. -39.1502 iterations 10
Cbc0038I Pass  31: suminf.    1.14879 (8) obj. -39.1502 iterations 17
Cbc0038I Pass  32: suminf.    0.76294 (8) obj. -39.1502 iterations 8
Cbc0038I Pass  33: suminf.    1.79289 (12) obj. -39.1502 iterations 33
Cbc0038I Rounding solution of -46.9144 is better than previous of -35.6038

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 129 columns, reduced to 63 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -46.9144 to -48.9961 (0.09 seconds)
Cbc0038I Round again with cutoff of -53.4104
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.71241 (31) obj. -66.0986 iterations 0
Cbc0038I Pass  34: suminf.    1.71241 (31) obj. -66.0986 iterations 1
Cbc0038I Pass  35: suminf.    1.24313 (20) obj. -53.4104 iterations 28
Cbc0038I Pass  36: suminf.    1.09108 (21) obj. -53.4104 iterations 9
Cbc0038I Pass  37: suminf.    4.76352 (28) obj. -53.4104 iterations 52
Cbc0038I Pass  38: suminf.    2.81187 (29) obj. -53.4104 iterations 7
Cbc0038I Pass  39: suminf.    1.23874 (16) obj. -53.4104 iterations 25
Cbc0038I Pass  40: suminf.    0.99385 (15) obj. -53.4104 iterations 12
Cbc0038I Pass  41: suminf.    4.77810 (28) obj. -53.4104 iterations 29
Cbc0038I Pass  42: suminf.    2.81187 (29) obj. -53.4104 iterations 8
Cbc0038I Pass  43: suminf.    4.90210 (29) obj. -53.4104 iterations 41
Cbc0038I Pass  44: suminf.    4.86149 (27) obj. -53.4104 iterations 6
Cbc0038I Pass  45: suminf.    4.72111 (25) obj. -53.4104 iterations 26
Cbc0038I Pass  46: suminf.    4.50174 (27) obj. -53.4104 iterations 4
Cbc0038I Pass  47: suminf.    4.70125 (25) obj. -53.4104 iterations 7
Cbc0038I Pass  48: suminf.    4.47310 (27) obj. -53.4104 iterations 3
Cbc0038I Pass  49: suminf.    4.70908 (25) obj. -53.4104 iterations 8
Cbc0038I Pass  50: suminf.    4.48099 (27) obj. -53.4104 iterations 3
Cbc0038I Pass  51: suminf.    4.70125 (25) obj. -53.4104 iterations 7
Cbc0038I Pass  52: suminf.    5.13404 (26) obj. -53.4104 iterations 35
Cbc0038I Pass  53: suminf.    4.70005 (25) obj. -53.4104 iterations 13
Cbc0038I Pass  54: suminf.    5.32747 (26) obj. -53.4104 iterations 21
Cbc0038I Pass  55: suminf.    5.28302 (26) obj. -53.4104 iterations 4
Cbc0038I Pass  56: suminf.    5.28302 (26) obj. -53.4104 iterations 0
Cbc0038I Pass  57: suminf.    5.32294 (27) obj. -53.4104 iterations 12
Cbc0038I Pass  58: suminf.    5.25347 (30) obj. -53.4104 iterations 11
Cbc0038I Pass  59: suminf.    5.31233 (27) obj. -53.4104 iterations 15
Cbc0038I Pass  60: suminf.    5.24254 (30) obj. -53.4104 iterations 13
Cbc0038I Pass  61: suminf.    5.25293 (27) obj. -53.4104 iterations 12
Cbc0038I Pass  62: suminf.    5.18596 (30) obj. -53.4104 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 129 columns, reduced to 46 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -48.9961 - took 0.07 seconds
Cbc0012I Integer solution of -48.99611 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 111 rows 129 columns, reduced to 39 rows 42 columns
Cbc0031I 61 added rows had average density of 11.360656
Cbc0013I At root node, 61 cuts changed objective from -71.067134 to -54.435063 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 3642 row cuts average 7.5 elements, 6 column cuts (6 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 78 row cuts average 80.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 100 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 64 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 213 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 361 row cuts average 71.9 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 94 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.99611 best solution, best possible -54.435063 (0.52 seconds)
Cbc0010I After 7 nodes, 8 on tree, -48.99611 best solution, best possible -54.435063 (1.24 seconds)
Cbc0001I Search completed - best objective -48.99610999999999, took 2216 iterations and 24 nodes (1.50 seconds)
Cbc0032I Strong branching done 450 times (9585 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 70 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.51

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 154 (-51) rows, 86 (-17) columns and 472 (-131) elements
Clp1000I sum of infeasibilities 3.07287e-05 - average 1.99537e-07, 17 fixed columns
Coin0506I Presolve 118 (-36) rows, 67 (-19) columns and 362 (-110) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 1.7088023 - largest nonzero change 0 ( 0%) - largest zero change 2.9851763e-05
Clp0000I Optimal - objective value 77.853127
Clp0000I Optimal - objective value 77.853127
Coin0511I After Postsolve, objective 77.853127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 77.853127
Clp0000I Optimal - objective value 77.853127
Clp0000I Optimal - objective value 77.853127
Coin0511I After Postsolve, objective 77.853127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.85312711 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 152 rows, 86 columns (85 integer (85 of which binary)) and 493 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.297%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.58075
Cbc0038I Solution found of -7.00151
Cbc0038I Relaxing continuous gives -14.9628
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 86 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -14.9628 to -48.9961 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.7168
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    2.88491 (19) obj. -51.7168 iterations 57
Cbc0038I Pass   2: suminf.    2.51569 (7) obj. -51.7168 iterations 26
Cbc0038I Pass   3: suminf.    2.05727 (7) obj. -51.7168 iterations 2
Cbc0038I Pass   4: suminf.    2.69477 (8) obj. -51.7168 iterations 13
Cbc0038I Pass   5: suminf.    1.20330 (5) obj. -51.7168 iterations 6
Cbc0038I Pass   6: suminf.    1.03854 (4) obj. -51.7168 iterations 2
Cbc0038I Pass   7: suminf.    1.57609 (4) obj. -51.7168 iterations 5
Cbc0038I Pass   8: suminf.    1.11411 (3) obj. -51.7168 iterations 3
Cbc0038I Pass   9: suminf.    1.19429 (3) obj. -51.7168 iterations 1
Cbc0038I Pass  10: suminf.    0.76933 (3) obj. -51.7168 iterations 4
Cbc0038I Pass  11: suminf.    1.22483 (3) obj. -51.7168 iterations 4
Cbc0038I Pass  12: suminf.    3.41855 (13) obj. -51.7168 iterations 19
Cbc0038I Pass  13: suminf.    2.88289 (9) obj. -51.7168 iterations 15
Cbc0038I Pass  14: suminf.    2.02617 (13) obj. -51.7168 iterations 7
Cbc0038I Pass  15: suminf.    3.26933 (9) obj. -51.7168 iterations 19
Cbc0038I Pass  16: suminf.    2.33546 (7) obj. -51.7168 iterations 14
Cbc0038I Pass  17: suminf.    2.08299 (7) obj. -51.7168 iterations 2
Cbc0038I Pass  18: suminf.    1.94522 (5) obj. -51.7168 iterations 10
Cbc0038I Pass  19: suminf.    1.40456 (6) obj. -51.7168 iterations 8
Cbc0038I Pass  20: suminf.    1.37264 (6) obj. -51.7168 iterations 1
Cbc0038I Pass  21: suminf.    1.72720 (6) obj. -51.7168 iterations 10
Cbc0038I Pass  22: suminf.    1.08884 (7) obj. -51.7168 iterations 9
Cbc0038I Pass  23: suminf.    2.62794 (6) obj. -51.7168 iterations 15
Cbc0038I Pass  24: suminf.    2.09900 (5) obj. -51.7168 iterations 5
Cbc0038I Pass  25: suminf.    1.23832 (4) obj. -51.7168 iterations 3
Cbc0038I Pass  26: suminf.    1.22933 (4) obj. -51.7168 iterations 1
Cbc0038I Pass  27: suminf.    1.59776 (4) obj. -51.7168 iterations 7
Cbc0038I Pass  28: suminf.    1.16567 (6) obj. -51.7168 iterations 6
Cbc0038I Pass  29: suminf.    1.58092 (6) obj. -51.7168 iterations 11
Cbc0038I Pass  30: suminf.    1.09514 (5) obj. -51.7168 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 152 rows 86 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -48.9961 - took 0.07 seconds
Cbc0012I Integer solution of -48.99611 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 152 rows 86 columns, reduced to 63 rows 36 columns
Cbc0031I 23 added rows had average density of 52.173913
Cbc0013I At root node, 23 cuts changed objective from -76.202467 to -67.225803 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5866 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1063 row cuts average 82.2 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.99611 best solution, best possible -67.225803 (0.76 seconds)
Cbc0001I Search completed - best objective -48.99610999999999, took 5702 iterations and 22 nodes (0.89 seconds)
Cbc0032I Strong branching done 400 times (7787 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 9, 128 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-94) rows, 127 (-76) columns and 2169 (-3485) elements
Clp1000I sum of infeasibilities 4.46819e-06 - average 4.02539e-08, 16 fixed columns
Coin0506I Presolve 96 (-15) rows, 110 (-17) columns and 1706 (-463) elements
Clp0006I 0  Obj 75.544516 Dual inf 14.207604 (98)
Clp0029I End of values pass after 110 iterations
Clp0014I Perturbing problem by 0.001% of 1.942763 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 86.754812
Clp0000I Optimal - objective value 86.754812
Coin0511I After Postsolve, objective 86.754812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 86.754812
Clp0000I Optimal - objective value 86.754812
Clp0000I Optimal - objective value 86.754812
Clp0000I Optimal - objective value 86.754812
Coin0511I After Postsolve, objective 86.754812, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.75481229 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 129 columns (129 integer (129 of which binary)) and 2198 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 6.43917
Cbc0038I Pass   1: suminf.    1.71241 (31) obj. -66.0986 iterations 27
Cbc0038I Pass   2: suminf.    1.71241 (31) obj. -66.0986 iterations 1
Cbc0038I Pass   3: suminf.    0.54839 (19) obj. -37.0662 iterations 14
Cbc0038I Solution found of -17.6458
Cbc0038I Rounding solution of -18.8293 is better than previous of -17.6458

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 129 columns, reduced to 35 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -18.8293 to -35.6038 (0.05 seconds)
Cbc0038I Round again with cutoff of -39.1502
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.71241 (31) obj. -66.0986 iterations 0
Cbc0038I Pass   5: suminf.    1.71241 (31) obj. -66.0986 iterations 1
Cbc0038I Pass   6: suminf.    0.70146 (20) obj. -39.1502 iterations 17
Cbc0038I Pass   7: suminf.    1.24725 (11) obj. -39.1502 iterations 29
Cbc0038I Pass   8: suminf.    0.89094 (11) obj. -39.1502 iterations 10
Cbc0038I Pass   9: suminf.    0.85351 (11) obj. -39.1502 iterations 2
Cbc0038I Pass  10: suminf.    2.03897 (7) obj. -39.1502 iterations 25
Cbc0038I Pass  11: suminf.    1.81129 (7) obj. -39.1502 iterations 10
Cbc0038I Pass  12: suminf.    1.80420 (7) obj. -39.1502 iterations 10
Cbc0038I Pass  13: suminf.    1.80420 (7) obj. -39.1502 iterations 7
Cbc0038I Pass  14: suminf.    1.81129 (7) obj. -39.1502 iterations 10
Cbc0038I Pass  15: suminf.    2.39699 (11) obj. -39.1502 iterations 30
Cbc0038I Pass  16: suminf.    0.79485 (5) obj. -39.1502 iterations 27
Cbc0038I Pass  17: suminf.    0.47612 (5) obj. -39.7877 iterations 9
Cbc0038I Pass  18: suminf.    1.68532 (9) obj. -39.1502 iterations 14
Cbc0038I Pass  19: suminf.    0.75092 (4) obj. -39.1502 iterations 3
Cbc0038I Pass  20: suminf.    0.44969 (4) obj. -39.7527 iterations 8
Cbc0038I Pass  21: suminf.    2.16498 (23) obj. -39.1502 iterations 32
Cbc0038I Pass  22: suminf.    0.67514 (8) obj. -39.1502 iterations 29
Cbc0038I Pass  23: suminf.    0.33739 (7) obj. -39.3544 iterations 10
Cbc0038I Pass  24: suminf.    2.74900 (10) obj. -39.1502 iterations 18
Cbc0038I Pass  25: suminf.    2.74900 (10) obj. -39.1502 iterations 0
Cbc0038I Pass  26: suminf.    2.12303 (9) obj. -39.1502 iterations 14
Cbc0038I Pass  27: suminf.    1.73979 (8) obj. -39.1502 iterations 4
Cbc0038I Pass  28: suminf.    2.09384 (8) obj. -39.1502 iterations 22
Cbc0038I Pass  29: suminf.    2.37710 (15) obj. -39.1502 iterations 19
Cbc0038I Pass  30: suminf.    0.87010 (11) obj. -39.1502 iterations 10
Cbc0038I Pass  31: suminf.    1.14879 (8) obj. -39.1502 iterations 17
Cbc0038I Pass  32: suminf.    0.76294 (8) obj. -39.1502 iterations 8
Cbc0038I Pass  33: suminf.    1.79289 (12) obj. -39.1502 iterations 33
Cbc0038I Rounding solution of -46.9144 is better than previous of -35.6038

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 129 columns, reduced to 63 rows 70 columns
Cbc0038I Mini branch and bound improved solution from -46.9144 to -48.9961 (0.10 seconds)
Cbc0038I Round again with cutoff of -53.4104
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.71241 (31) obj. -66.0986 iterations 0
Cbc0038I Pass  34: suminf.    1.71241 (31) obj. -66.0986 iterations 1
Cbc0038I Pass  35: suminf.    1.24313 (20) obj. -53.4104 iterations 28
Cbc0038I Pass  36: suminf.    1.09108 (21) obj. -53.4104 iterations 9
Cbc0038I Pass  37: suminf.    4.76352 (28) obj. -53.4104 iterations 52
Cbc0038I Pass  38: suminf.    2.81187 (29) obj. -53.4104 iterations 7
Cbc0038I Pass  39: suminf.    1.23874 (16) obj. -53.4104 iterations 25
Cbc0038I Pass  40: suminf.    0.99385 (15) obj. -53.4104 iterations 12
Cbc0038I Pass  41: suminf.    4.77810 (28) obj. -53.4104 iterations 29
Cbc0038I Pass  42: suminf.    2.81187 (29) obj. -53.4104 iterations 8
Cbc0038I Pass  43: suminf.    4.90210 (29) obj. -53.4104 iterations 41
Cbc0038I Pass  44: suminf.    4.86149 (27) obj. -53.4104 iterations 6
Cbc0038I Pass  45: suminf.    4.72111 (25) obj. -53.4104 iterations 26
Cbc0038I Pass  46: suminf.    4.50174 (27) obj. -53.4104 iterations 4
Cbc0038I Pass  47: suminf.    4.70125 (25) obj. -53.4104 iterations 7
Cbc0038I Pass  48: suminf.    4.47310 (27) obj. -53.4104 iterations 3
Cbc0038I Pass  49: suminf.    4.70908 (25) obj. -53.4104 iterations 8
Cbc0038I Pass  50: suminf.    4.48099 (27) obj. -53.4104 iterations 3
Cbc0038I Pass  51: suminf.    4.70125 (25) obj. -53.4104 iterations 7
Cbc0038I Pass  52: suminf.    5.13404 (26) obj. -53.4104 iterations 35
Cbc0038I Pass  53: suminf.    4.70005 (25) obj. -53.4104 iterations 13
Cbc0038I Pass  54: suminf.    5.32747 (26) obj. -53.4104 iterations 21
Cbc0038I Pass  55: suminf.    5.28302 (26) obj. -53.4104 iterations 4
Cbc0038I Pass  56: suminf.    5.28302 (26) obj. -53.4104 iterations 0
Cbc0038I Pass  57: suminf.    5.32294 (27) obj. -53.4104 iterations 12
Cbc0038I Pass  58: suminf.    5.25347 (30) obj. -53.4104 iterations 11
Cbc0038I Pass  59: suminf.    5.31233 (27) obj. -53.4104 iterations 15
Cbc0038I Pass  60: suminf.    5.24254 (30) obj. -53.4104 iterations 13
Cbc0038I Pass  61: suminf.    5.25293 (27) obj. -53.4104 iterations 12
Cbc0038I Pass  62: suminf.    5.18596 (30) obj. -53.4104 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 129 columns, reduced to 46 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -48.9961 - took 0.08 seconds
Cbc0012I Integer solution of -48.99611 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 111 rows 129 columns, reduced to 39 rows 42 columns
Cbc0031I 61 added rows had average density of 11.360656
Cbc0013I At root node, 61 cuts changed objective from -71.067134 to -54.435063 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 3642 row cuts average 7.5 elements, 6 column cuts (6 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 78 row cuts average 80.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 100 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 64 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 213 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 361 row cuts average 71.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 94 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.99611 best solution, best possible -54.435063 (0.70 seconds)
Cbc0010I After 5 nodes, 6 on tree, -48.99611 best solution, best possible -54.435063 (1.48 seconds)
Cbc0001I Search completed - best objective -48.99610999999999, took 2216 iterations and 24 nodes (2.07 seconds)
Cbc0032I Strong branching done 450 times (9585 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 70 variables fixed on reduced cost
Total time (CPU seconds):       1.51   (Wallclock seconds):       2.08

