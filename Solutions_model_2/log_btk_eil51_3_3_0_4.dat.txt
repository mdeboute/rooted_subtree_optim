Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-29) rows, 41 (-12) columns and 228 (-75) elements
Clp1000I sum of infeasibilities 1.79875e-05 - average 2.36677e-07, 9 fixed columns
Coin0506I Presolve 53 (-23) rows, 30 (-11) columns and 160 (-68) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 0.45534712 - largest nonzero change 0 ( 0%) - largest zero change 2.9392985e-05
Clp0000I Optimal - objective value 82.15005
Clp0000I Optimal - objective value 82.15005
Coin0511I After Postsolve, objective 82.15005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.15005
Clp0000I Optimal - objective value 82.15005
Clp0000I Optimal - objective value 82.15005
Coin0511I After Postsolve, objective 82.15005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.15004986 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 76 rows, 41 columns (40 integer (40 of which binary)) and 228 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.08632
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 17.7826 iterations 23
Cbc0038I Solution found of 17.7826
Cbc0038I Relaxing continuous gives 17.7826
Cbc0038I Rounding solution of 6.69565 is better than previous of 17.7826

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 6.69565 to -49.4782 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.7455
Cbc0038I Pass   2: suminf.    4.04997 (11) obj. -52.7455 iterations 14
Cbc0038I Pass   3: suminf.    3.60680 (12) obj. -52.7455 iterations 4
Cbc0038I Pass   4: suminf.    1.23703 (3) obj. -52.7455 iterations 12
Cbc0038I Pass   5: suminf.    0.46429 (3) obj. -52.7455 iterations 2
Cbc0038I Pass   6: suminf.    1.31539 (3) obj. -52.7455 iterations 3
Cbc0038I Pass   7: suminf.    2.73813 (8) obj. -52.7455 iterations 9
Cbc0038I Pass   8: suminf.    1.41250 (5) obj. -52.7455 iterations 3
Cbc0038I Pass   9: suminf.    0.66337 (3) obj. -52.7455 iterations 6
Cbc0038I Pass  10: suminf.    0.62589 (2) obj. -52.7455 iterations 4
Cbc0038I Pass  11: suminf.    1.23703 (3) obj. -52.7455 iterations 6
Cbc0038I Pass  12: suminf.    0.46429 (3) obj. -52.7455 iterations 2
Cbc0038I Pass  13: suminf.    1.31539 (3) obj. -52.7455 iterations 3
Cbc0038I Pass  14: suminf.    1.92874 (6) obj. -52.7455 iterations 10
Cbc0038I Pass  15: suminf.    0.69154 (4) obj. -52.7455 iterations 9
Cbc0038I Pass  16: suminf.    0.69154 (4) obj. -52.7455 iterations 1
Cbc0038I Pass  17: suminf.    2.00806 (7) obj. -52.7455 iterations 5
Cbc0038I Pass  18: suminf.    0.85882 (4) obj. -52.7455 iterations 4
Cbc0038I Pass  19: suminf.    1.31539 (3) obj. -52.7455 iterations 4
Cbc0038I Pass  20: suminf.    0.58066 (3) obj. -52.7455 iterations 3
Cbc0038I Pass  21: suminf.    1.54773 (6) obj. -52.7455 iterations 5
Cbc0038I Pass  22: suminf.    1.23545 (4) obj. -52.7455 iterations 6
Cbc0038I Pass  23: suminf.    1.23135 (3) obj. -52.7455 iterations 4
Cbc0038I Pass  24: suminf.    1.10812 (3) obj. -52.7455 iterations 1
Cbc0038I Pass  25: suminf.    0.80344 (3) obj. -52.7455 iterations 2
Cbc0038I Pass  26: suminf.    2.17193 (6) obj. -52.7455 iterations 8
Cbc0038I Pass  27: suminf.    1.31925 (4) obj. -52.7455 iterations 7
Cbc0038I Pass  28: suminf.    1.31539 (3) obj. -52.7455 iterations 4
Cbc0038I Pass  29: suminf.    0.58066 (3) obj. -52.7455 iterations 3
Cbc0038I Pass  30: suminf.    6.86111 (16) obj. -52.7455 iterations 17
Cbc0038I Pass  31: suminf.    5.79351 (14) obj. -52.7455 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -49.4782 - took 0.04 seconds
Cbc0012I Integer solution of -49.47819 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 76 rows 41 columns, reduced to 40 rows 23 columns
Cbc0031I 10 added rows had average density of 25.3
Cbc0013I At root node, 10 cuts changed objective from -82.15005 to -60.536865 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1218 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 733 row cuts average 39.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -49.47819000000001, took 2076 iterations and 6 nodes (0.23 seconds)
Cbc0032I Strong branching done 80 times (779 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-42) rows, 66 (-36) columns and 822 (-756) elements
Clp1000I sum of infeasibilities 1.21086e-07 - average 1.953e-09, 33 fixed columns
Coin0506I Presolve 30 (-32) rows, 32 (-34) columns and 120 (-702) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 0.44038828 - largest nonzero change 1.954056e-05 ( 0.0015380202%) - largest zero change 2.7784594e-05
Clp0000I Optimal - objective value 46.988847
Clp0000I Optimal - objective value 46.988847
Coin0511I After Postsolve, objective 46.988847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.8923967 - largest nonzero change 2.2735172e-05 ( 0.0015380202%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 105.41851
Clp0000I Optimal - objective value 105.41851
Clp0000I Optimal - objective value 105.41851
Coin0511I After Postsolve, objective 105.41851, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.4185129 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 70 rows, 74 columns (74 integer (74 of which binary)) and 874 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.237%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 9.18594
Cbc0038I Pass   1: suminf.    2.26275 (21) obj. -41.6152 iterations 19
Cbc0038I Pass   2: suminf.    2.26275 (21) obj. -41.6152 iterations 1
Cbc0038I Pass   3: suminf.    0.87243 (9) obj. -15.2044 iterations 12
Cbc0038I Solution found of -0.78259
Cbc0038I Rounding solution of -9.1739 is better than previous of -0.78259

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 74 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -9.1739 to -34.0869 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.4854
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.26275 (21) obj. -41.6152 iterations 0
Cbc0038I Pass   5: suminf.    2.26275 (21) obj. -41.6152 iterations 1
Cbc0038I Pass   6: suminf.    1.50728 (10) obj. -40.4854 iterations 28
Cbc0038I Pass   7: suminf.    1.50728 (10) obj. -40.4854 iterations 0
Cbc0038I Pass   8: suminf.    0.48889 (4) obj. -41.8165 iterations 10
Cbc0038I Pass   9: suminf.    0.48889 (4) obj. -41.8165 iterations 0
Cbc0038I Pass  10: suminf.    0.27069 (3) obj. -40.4854 iterations 7
Cbc0038I Pass  11: suminf.    0.26786 (2) obj. -40.5512 iterations 5
Cbc0038I Pass  12: suminf.    0.26497 (4) obj. -40.4854 iterations 7
Cbc0038I Pass  13: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Pass  14: suminf.    0.75578 (5) obj. -40.4854 iterations 2
Cbc0038I Pass  15: suminf.    0.45007 (2) obj. -40.4854 iterations 6
Cbc0038I Pass  16: suminf.    0.17949 (1) obj. -45.292 iterations 3
Cbc0038I Pass  17: suminf.    0.26497 (4) obj. -40.4854 iterations 6
Cbc0038I Pass  18: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Pass  19: suminf.    0.75578 (5) obj. -40.4854 iterations 2
Cbc0038I Pass  20: suminf.    0.45007 (2) obj. -40.4854 iterations 6
Cbc0038I Pass  21: suminf.    0.17949 (1) obj. -45.292 iterations 3
Cbc0038I Pass  22: suminf.    0.26497 (4) obj. -40.4854 iterations 6
Cbc0038I Pass  23: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Pass  24: suminf.    0.75578 (5) obj. -40.4854 iterations 2
Cbc0038I Pass  25: suminf.    0.45007 (2) obj. -40.4854 iterations 6
Cbc0038I Pass  26: suminf.    0.17949 (1) obj. -45.292 iterations 3
Cbc0038I Pass  27: suminf.    0.26497 (4) obj. -40.4854 iterations 6
Cbc0038I Pass  28: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Pass  29: suminf.    0.75578 (5) obj. -40.4854 iterations 3
Cbc0038I Pass  30: suminf.    0.45007 (2) obj. -40.4854 iterations 7
Cbc0038I Pass  31: suminf.    0.17949 (1) obj. -45.292 iterations 2
Cbc0038I Pass  32: suminf.    0.26497 (4) obj. -40.4854 iterations 6
Cbc0038I Pass  33: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Rounding solution of -48.5651 is better than previous of -34.0869

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 74 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -48.5651 to -49.4782 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.1967
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.22297 (25) obj. -59.1967 iterations 1
Cbc0038I Pass  34: suminf.    4.22297 (25) obj. -59.1967 iterations 2
Cbc0038I Pass  35: suminf.    2.59381 (12) obj. -59.1967 iterations 24
Cbc0038I Pass  36: suminf.    2.20132 (5) obj. -59.1967 iterations 13
Cbc0038I Pass  37: suminf.    1.13048 (7) obj. -59.1967 iterations 4
Cbc0038I Pass  38: suminf.    1.13048 (7) obj. -59.1967 iterations 0
Cbc0038I Pass  39: suminf.    2.28573 (6) obj. -59.1967 iterations 6
Cbc0038I Pass  40: suminf.    0.68113 (5) obj. -59.1967 iterations 4
Cbc0038I Pass  41: suminf.    0.68113 (5) obj. -59.1967 iterations 0
Cbc0038I Pass  42: suminf.    2.22091 (5) obj. -59.1967 iterations 6
Cbc0038I Pass  43: suminf.    2.69491 (10) obj. -59.1967 iterations 17
Cbc0038I Pass  44: suminf.    2.69491 (10) obj. -59.1967 iterations 3
Cbc0038I Pass  45: suminf.    1.82666 (7) obj. -59.1967 iterations 8
Cbc0038I Pass  46: suminf.    1.82666 (7) obj. -59.1967 iterations 1
Cbc0038I Pass  47: suminf.    2.70597 (6) obj. -59.1967 iterations 8
Cbc0038I Pass  48: suminf.    0.92778 (5) obj. -59.1967 iterations 5
Cbc0038I Pass  49: suminf.    0.92778 (5) obj. -59.1967 iterations 0
Cbc0038I Pass  50: suminf.    1.27102 (6) obj. -59.1967 iterations 7
Cbc0038I Pass  51: suminf.    1.27090 (9) obj. -59.1967 iterations 4
Cbc0038I Pass  52: suminf.    2.88405 (8) obj. -59.1967 iterations 9
Cbc0038I Pass  53: suminf.    1.33000 (9) obj. -59.1967 iterations 5
Cbc0038I Pass  54: suminf.    1.33000 (9) obj. -59.1967 iterations 0
Cbc0038I Pass  55: suminf.    2.87639 (9) obj. -59.1967 iterations 8
Cbc0038I Pass  56: suminf.    1.55767 (9) obj. -59.1967 iterations 4
Cbc0038I Pass  57: suminf.    1.55767 (9) obj. -59.1967 iterations 0
Cbc0038I Pass  58: suminf.    2.88405 (8) obj. -59.1967 iterations 6
Cbc0038I Pass  59: suminf.    1.33000 (9) obj. -59.1967 iterations 5
Cbc0038I Pass  60: suminf.    1.33000 (9) obj. -59.1967 iterations 0
Cbc0038I Pass  61: suminf.    2.87639 (9) obj. -59.1967 iterations 8
Cbc0038I Pass  62: suminf.    1.55767 (9) obj. -59.1967 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 74 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -49.4782 - took 0.02 seconds
Cbc0012I Integer solution of -49.47819 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 2.5
Cbc0013I At root node, 14 cuts changed objective from -98.070521 to -44.597322 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 217 row cuts average 2.1 elements, 34 column cuts (34 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -49.47819000000001, took 135 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-29) rows, 41 (-12) columns and 228 (-75) elements
Clp1000I sum of infeasibilities 1.79875e-05 - average 2.36677e-07, 9 fixed columns
Coin0506I Presolve 53 (-23) rows, 30 (-11) columns and 160 (-68) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 0.45534712 - largest nonzero change 0 ( 0%) - largest zero change 2.9392985e-05
Clp0000I Optimal - objective value 82.15005
Clp0000I Optimal - objective value 82.15005
Coin0511I After Postsolve, objective 82.15005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 82.15005
Clp0000I Optimal - objective value 82.15005
Clp0000I Optimal - objective value 82.15005
Coin0511I After Postsolve, objective 82.15005, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 82.15004986 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 76 rows, 41 columns (40 integer (40 of which binary)) and 228 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.08632
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 17.7826 iterations 23
Cbc0038I Solution found of 17.7826
Cbc0038I Relaxing continuous gives 17.7826
Cbc0038I Rounding solution of 6.69565 is better than previous of 17.7826

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 6.69565 to -49.4782 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.7455
Cbc0038I Pass   2: suminf.    4.04997 (11) obj. -52.7455 iterations 14
Cbc0038I Pass   3: suminf.    3.60680 (12) obj. -52.7455 iterations 4
Cbc0038I Pass   4: suminf.    1.23703 (3) obj. -52.7455 iterations 12
Cbc0038I Pass   5: suminf.    0.46429 (3) obj. -52.7455 iterations 2
Cbc0038I Pass   6: suminf.    1.31539 (3) obj. -52.7455 iterations 3
Cbc0038I Pass   7: suminf.    2.73813 (8) obj. -52.7455 iterations 9
Cbc0038I Pass   8: suminf.    1.41250 (5) obj. -52.7455 iterations 3
Cbc0038I Pass   9: suminf.    0.66337 (3) obj. -52.7455 iterations 6
Cbc0038I Pass  10: suminf.    0.62589 (2) obj. -52.7455 iterations 4
Cbc0038I Pass  11: suminf.    1.23703 (3) obj. -52.7455 iterations 6
Cbc0038I Pass  12: suminf.    0.46429 (3) obj. -52.7455 iterations 2
Cbc0038I Pass  13: suminf.    1.31539 (3) obj. -52.7455 iterations 3
Cbc0038I Pass  14: suminf.    1.92874 (6) obj. -52.7455 iterations 10
Cbc0038I Pass  15: suminf.    0.69154 (4) obj. -52.7455 iterations 9
Cbc0038I Pass  16: suminf.    0.69154 (4) obj. -52.7455 iterations 1
Cbc0038I Pass  17: suminf.    2.00806 (7) obj. -52.7455 iterations 5
Cbc0038I Pass  18: suminf.    0.85882 (4) obj. -52.7455 iterations 4
Cbc0038I Pass  19: suminf.    1.31539 (3) obj. -52.7455 iterations 4
Cbc0038I Pass  20: suminf.    0.58066 (3) obj. -52.7455 iterations 3
Cbc0038I Pass  21: suminf.    1.54773 (6) obj. -52.7455 iterations 5
Cbc0038I Pass  22: suminf.    1.23545 (4) obj. -52.7455 iterations 6
Cbc0038I Pass  23: suminf.    1.23135 (3) obj. -52.7455 iterations 4
Cbc0038I Pass  24: suminf.    1.10812 (3) obj. -52.7455 iterations 1
Cbc0038I Pass  25: suminf.    0.80344 (3) obj. -52.7455 iterations 2
Cbc0038I Pass  26: suminf.    2.17193 (6) obj. -52.7455 iterations 8
Cbc0038I Pass  27: suminf.    1.31925 (4) obj. -52.7455 iterations 7
Cbc0038I Pass  28: suminf.    1.31539 (3) obj. -52.7455 iterations 4
Cbc0038I Pass  29: suminf.    0.58066 (3) obj. -52.7455 iterations 3
Cbc0038I Pass  30: suminf.    6.86111 (16) obj. -52.7455 iterations 17
Cbc0038I Pass  31: suminf.    5.79351 (14) obj. -52.7455 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 41 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -49.4782 - took 0.04 seconds
Cbc0012I Integer solution of -49.47819 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 76 rows 41 columns, reduced to 40 rows 23 columns
Cbc0031I 10 added rows had average density of 25.3
Cbc0013I At root node, 10 cuts changed objective from -82.15005 to -60.536865 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1218 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 733 row cuts average 39.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -49.47819000000001, took 2076 iterations and 6 nodes (0.24 seconds)
Cbc0032I Strong branching done 80 times (779 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-43) rows, 66 (-37) columns and 822 (-757) elements
Clp1000I sum of infeasibilities 1.21086e-07 - average 1.953e-09, 33 fixed columns
Coin0506I Presolve 30 (-32) rows, 32 (-34) columns and 120 (-702) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 0.44038828 - largest nonzero change 1.954056e-05 ( 0.0015380202%) - largest zero change 2.7784594e-05
Clp0000I Optimal - objective value 46.988847
Clp0000I Optimal - objective value 46.988847
Coin0511I After Postsolve, objective 46.988847, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.8923967 - largest nonzero change 2.2735172e-05 ( 0.0015380202%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 105.41851
Clp0000I Optimal - objective value 105.41851
Clp0000I Optimal - objective value 105.41851
Coin0511I After Postsolve, objective 105.41851, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.4185129 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 70 rows, 74 columns (74 integer (74 of which binary)) and 874 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.237%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 9.18594
Cbc0038I Pass   1: suminf.    2.26275 (21) obj. -41.6152 iterations 19
Cbc0038I Pass   2: suminf.    2.26275 (21) obj. -41.6152 iterations 1
Cbc0038I Pass   3: suminf.    0.87243 (9) obj. -15.2044 iterations 12
Cbc0038I Solution found of -0.78259
Cbc0038I Rounding solution of -9.1739 is better than previous of -0.78259

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 74 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -9.1739 to -34.0869 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.4854
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.26275 (21) obj. -41.6152 iterations 0
Cbc0038I Pass   5: suminf.    2.26275 (21) obj. -41.6152 iterations 1
Cbc0038I Pass   6: suminf.    1.50728 (10) obj. -40.4854 iterations 28
Cbc0038I Pass   7: suminf.    1.50728 (10) obj. -40.4854 iterations 0
Cbc0038I Pass   8: suminf.    0.48889 (4) obj. -41.8165 iterations 10
Cbc0038I Pass   9: suminf.    0.48889 (4) obj. -41.8165 iterations 0
Cbc0038I Pass  10: suminf.    0.27069 (3) obj. -40.4854 iterations 7
Cbc0038I Pass  11: suminf.    0.26786 (2) obj. -40.5512 iterations 5
Cbc0038I Pass  12: suminf.    0.26497 (4) obj. -40.4854 iterations 7
Cbc0038I Pass  13: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Pass  14: suminf.    0.75578 (5) obj. -40.4854 iterations 2
Cbc0038I Pass  15: suminf.    0.45007 (2) obj. -40.4854 iterations 6
Cbc0038I Pass  16: suminf.    0.17949 (1) obj. -45.292 iterations 3
Cbc0038I Pass  17: suminf.    0.26497 (4) obj. -40.4854 iterations 6
Cbc0038I Pass  18: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Pass  19: suminf.    0.75578 (5) obj. -40.4854 iterations 2
Cbc0038I Pass  20: suminf.    0.45007 (2) obj. -40.4854 iterations 6
Cbc0038I Pass  21: suminf.    0.17949 (1) obj. -45.292 iterations 3
Cbc0038I Pass  22: suminf.    0.26497 (4) obj. -40.4854 iterations 6
Cbc0038I Pass  23: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Pass  24: suminf.    0.75578 (5) obj. -40.4854 iterations 2
Cbc0038I Pass  25: suminf.    0.45007 (2) obj. -40.4854 iterations 6
Cbc0038I Pass  26: suminf.    0.17949 (1) obj. -45.292 iterations 3
Cbc0038I Pass  27: suminf.    0.26497 (4) obj. -40.4854 iterations 6
Cbc0038I Pass  28: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Pass  29: suminf.    0.75578 (5) obj. -40.4854 iterations 3
Cbc0038I Pass  30: suminf.    0.45007 (2) obj. -40.4854 iterations 7
Cbc0038I Pass  31: suminf.    0.17949 (1) obj. -45.292 iterations 2
Cbc0038I Pass  32: suminf.    0.26497 (4) obj. -40.4854 iterations 6
Cbc0038I Pass  33: suminf.    0.94007 (5) obj. -40.4854 iterations 5
Cbc0038I Rounding solution of -48.5651 is better than previous of -34.0869

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 74 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -48.5651 to -49.4782 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.1967
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.22297 (25) obj. -59.1967 iterations 1
Cbc0038I Pass  34: suminf.    4.22297 (25) obj. -59.1967 iterations 2
Cbc0038I Pass  35: suminf.    2.59381 (12) obj. -59.1967 iterations 24
Cbc0038I Pass  36: suminf.    2.20132 (5) obj. -59.1967 iterations 13
Cbc0038I Pass  37: suminf.    1.13048 (7) obj. -59.1967 iterations 4
Cbc0038I Pass  38: suminf.    1.13048 (7) obj. -59.1967 iterations 0
Cbc0038I Pass  39: suminf.    2.28573 (6) obj. -59.1967 iterations 6
Cbc0038I Pass  40: suminf.    0.68113 (5) obj. -59.1967 iterations 4
Cbc0038I Pass  41: suminf.    0.68113 (5) obj. -59.1967 iterations 0
Cbc0038I Pass  42: suminf.    2.22091 (5) obj. -59.1967 iterations 6
Cbc0038I Pass  43: suminf.    2.69491 (10) obj. -59.1967 iterations 17
Cbc0038I Pass  44: suminf.    2.69491 (10) obj. -59.1967 iterations 3
Cbc0038I Pass  45: suminf.    1.82666 (7) obj. -59.1967 iterations 8
Cbc0038I Pass  46: suminf.    1.82666 (7) obj. -59.1967 iterations 1
Cbc0038I Pass  47: suminf.    2.70597 (6) obj. -59.1967 iterations 8
Cbc0038I Pass  48: suminf.    0.92778 (5) obj. -59.1967 iterations 5
Cbc0038I Pass  49: suminf.    0.92778 (5) obj. -59.1967 iterations 0
Cbc0038I Pass  50: suminf.    1.27102 (6) obj. -59.1967 iterations 7
Cbc0038I Pass  51: suminf.    1.27090 (9) obj. -59.1967 iterations 4
Cbc0038I Pass  52: suminf.    2.88405 (8) obj. -59.1967 iterations 9
Cbc0038I Pass  53: suminf.    1.33000 (9) obj. -59.1967 iterations 5
Cbc0038I Pass  54: suminf.    1.33000 (9) obj. -59.1967 iterations 0
Cbc0038I Pass  55: suminf.    2.87639 (9) obj. -59.1967 iterations 8
Cbc0038I Pass  56: suminf.    1.55767 (9) obj. -59.1967 iterations 4
Cbc0038I Pass  57: suminf.    1.55767 (9) obj. -59.1967 iterations 0
Cbc0038I Pass  58: suminf.    2.88405 (8) obj. -59.1967 iterations 6
Cbc0038I Pass  59: suminf.    1.33000 (9) obj. -59.1967 iterations 5
Cbc0038I Pass  60: suminf.    1.33000 (9) obj. -59.1967 iterations 0
Cbc0038I Pass  61: suminf.    2.87639 (9) obj. -59.1967 iterations 8
Cbc0038I Pass  62: suminf.    1.55767 (9) obj. -59.1967 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 74 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -49.4782 - took 0.03 seconds
Cbc0012I Integer solution of -49.47819 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 8 added rows had average density of 2.5
Cbc0013I At root node, 14 cuts changed objective from -98.070521 to -44.597322 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 217 row cuts average 2.1 elements, 34 column cuts (34 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -49.47819000000001, took 135 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

