Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 156 (-49) rows, 83 (-20) columns and 470 (-133) elements
Clp1000I sum of infeasibilities 1.06301e-05 - average 6.81419e-08, 44 fixed columns
Coin0506I Presolve 65 (-91) rows, 37 (-46) columns and 197 (-273) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 2.9429889 - largest nonzero change 0 ( 0%) - largest zero change 2.398299e-05
Clp0000I Optimal - objective value 163.79769
Clp0000I Optimal - objective value 163.79769
Coin0511I After Postsolve, objective 163.79769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21546466 - largest nonzero change 0 ( 0%) - largest zero change 2.9234437e-05
Clp0000I Optimal - objective value 163.79769
Clp0000I Optimal - objective value 163.79769
Clp0000I Optimal - objective value 163.79769
Coin0511I After Postsolve, objective 163.79769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 163.7976874 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 155 rows, 83 columns (82 integer (82 of which binary)) and 492 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.97974
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -35.9906 iterations 42
Cbc0038I Solution found of -35.9906
Cbc0038I Relaxing continuous gives -35.9906
Cbc0038I Rounding solution of -97.5242 is better than previous of -35.9906

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 155 rows 83 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -97.5242 to -140.968 (0.03 seconds)
Cbc0038I Round again with cutoff of -143.251
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.76616 (4) obj. -143.251 iterations 13
Cbc0038I Pass   3: suminf.    0.94662 (5) obj. -143.251 iterations 12
Cbc0038I Pass   4: suminf.    1.08667 (3) obj. -143.251 iterations 15
Cbc0038I Pass   5: suminf.    0.88802 (4) obj. -143.251 iterations 5
Cbc0038I Pass   6: suminf.    1.02998 (4) obj. -143.251 iterations 8
Cbc0038I Pass   7: suminf.    2.82645 (7) obj. -143.251 iterations 17
Cbc0038I Pass   8: suminf.    0.12464 (2) obj. -143.251 iterations 23
Cbc0038I Pass   9: suminf.    0.78971 (4) obj. -143.251 iterations 15
Cbc0038I Pass  10: suminf.    0.81145 (6) obj. -143.251 iterations 23
Cbc0038I Pass  11: suminf.    0.76373 (3) obj. -143.251 iterations 3
Cbc0038I Pass  12: suminf.    0.93730 (3) obj. -143.251 iterations 11
Cbc0038I Pass  13: suminf.    0.23691 (1) obj. -143.251 iterations 6
Cbc0038I Pass  14: suminf.    0.14028 (2) obj. -143.251 iterations 5
Cbc0038I Pass  15: suminf.    0.31311 (3) obj. -143.251 iterations 3
Cbc0038I Pass  16: suminf.    1.34626 (7) obj. -143.251 iterations 18
Cbc0038I Pass  17: suminf.    0.98349 (4) obj. -143.251 iterations 12
Cbc0038I Pass  18: suminf.    0.66397 (3) obj. -143.251 iterations 1
Cbc0038I Pass  19: suminf.    0.42857 (1) obj. -143.251 iterations 11
Cbc0038I Pass  20: suminf.    0.33715 (1) obj. -143.251 iterations 3
Cbc0038I Pass  21: suminf.    0.38710 (1) obj. -143.251 iterations 2
Cbc0038I Pass  22: suminf.    2.73573 (9) obj. -143.251 iterations 31
Cbc0038I Pass  23: suminf.    1.17218 (8) obj. -143.251 iterations 23
Cbc0038I Pass  24: suminf.    0.66994 (6) obj. -143.251 iterations 13
Cbc0038I Pass  25: suminf.    1.76616 (4) obj. -143.251 iterations 18
Cbc0038I Pass  26: suminf.    0.94662 (5) obj. -143.251 iterations 12
Cbc0038I Pass  27: suminf.    1.08667 (3) obj. -143.251 iterations 14
Cbc0038I Pass  28: suminf.    0.88802 (4) obj. -143.251 iterations 5
Cbc0038I Pass  29: suminf.    1.02998 (4) obj. -143.251 iterations 7
Cbc0038I Pass  30: suminf.    1.72363 (6) obj. -143.251 iterations 17
Cbc0038I Pass  31: suminf.    1.23814 (4) obj. -143.251 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 155 rows 83 columns, reduced to 65 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -140.968 - took 0.04 seconds
Cbc0012I Integer solution of -140.96787 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 155 rows 83 columns, reduced to 56 rows 32 columns
Cbc0031I 15 added rows had average density of 24.2
Cbc0013I At root node, 15 cuts changed objective from -163.79769 to -152.48036 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 1077 row cuts average 3.8 elements, 9 column cuts (9 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 61.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -140.96787, took 931 iterations and 18 nodes (0.20 seconds)
Cbc0032I Strong branching done 164 times (1854 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 94 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-76) rows, 136 (-66) columns and 2644 (-3009) elements
Clp1000I sum of infeasibilities 7.60564e-07 - average 5.94191e-09, 81 fixed columns
Coin0506I Presolve 48 (-80) rows, 55 (-81) columns and 201 (-2443) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.4906462 - largest nonzero change 1.9466492e-05 ( 0.00086296483%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 141.95992
Clp0000I Optimal - objective value 141.95992
Coin0511I After Postsolve, objective 141.95992, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9008076 - largest nonzero change 1.4017172e-05 ( 0.00086296483%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 212.88987
Clp0000I Optimal - objective value 212.88987
Clp0000I Optimal - objective value 212.88987
Coin0511I After Postsolve, objective 212.88987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 212.8898654 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 140 columns (140 integer (140 of which binary)) and 2731 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.571%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 4.67251
Cbc0038I Pass   1: suminf.    0.88926 (32) obj. -115.389 iterations 31
Cbc0038I Pass   2: suminf.    0.88926 (32) obj. -115.389 iterations 1
Cbc0038I Pass   3: suminf.    0.26543 (13) obj. -91.2416 iterations 19
Cbc0038I Solution found of -73.6006
Cbc0038I Rounding solution of -105.98 is better than previous of -73.6006

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 140 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -105.98 to -125.601 (0.05 seconds)
Cbc0038I Round again with cutoff of -133.314
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.56147 (52) obj. -133.314 iterations 13
Cbc0038I Pass   5: suminf.    1.39444 (33) obj. -133.314 iterations 1
Cbc0038I Pass   6: suminf.    0.40183 (18) obj. -137.422 iterations 15
Cbc0038I Pass   7: suminf.    0.90837 (21) obj. -133.314 iterations 23
Cbc0038I Pass   8: suminf.    0.19119 (1) obj. -133.314 iterations 25
Cbc0038I Pass   9: suminf.    0.32258 (1) obj. -138.614 iterations 3
Cbc0038I Pass  10: suminf.    1.28197 (17) obj. -133.314 iterations 22
Cbc0038I Pass  11: suminf.    1.28197 (17) obj. -133.314 iterations 4
Cbc0038I Pass  12: suminf.    0.53780 (2) obj. -133.314 iterations 22
Cbc0038I Pass  13: suminf.    0.26560 (2) obj. -133.314 iterations 1
Cbc0038I Pass  14: suminf.    0.52714 (2) obj. -133.314 iterations 4
Cbc0038I Pass  15: suminf.    0.19119 (1) obj. -133.314 iterations 2
Cbc0038I Pass  16: suminf.    0.32258 (1) obj. -138.614 iterations 3
Cbc0038I Pass  17: suminf.    0.99075 (11) obj. -133.314 iterations 27
Cbc0038I Pass  18: suminf.    0.55620 (9) obj. -142.629 iterations 17
Cbc0038I Pass  19: suminf.    0.19952 (2) obj. -133.314 iterations 11
Cbc0038I Pass  20: suminf.    0.19216 (2) obj. -136.768 iterations 2
Cbc0038I Pass  21: suminf.    0.34781 (1) obj. -133.314 iterations 3
Cbc0038I Pass  22: suminf.    2.52129 (17) obj. -133.314 iterations 30
Cbc0038I Pass  23: suminf.    0.84593 (11) obj. -133.314 iterations 17
Cbc0038I Pass  24: suminf.    0.84593 (11) obj. -133.314 iterations 0
Cbc0038I Pass  25: suminf.    0.62845 (3) obj. -133.314 iterations 20
Cbc0038I Pass  26: suminf.    0.21961 (3) obj. -133.74 iterations 9
Cbc0038I Pass  27: suminf.    0.66519 (2) obj. -133.314 iterations 4
Cbc0038I Pass  28: suminf.    0.20059 (3) obj. -133.314 iterations 5
Cbc0038I Pass  29: suminf.    0.29034 (1) obj. -133.314 iterations 7
Cbc0038I Pass  30: suminf.    0.29034 (1) obj. -133.314 iterations 0
Cbc0038I Pass  31: suminf.    0.32258 (1) obj. -134.614 iterations 3
Cbc0038I Pass  32: suminf.    1.11658 (11) obj. -133.314 iterations 15
Cbc0038I Pass  33: suminf.    1.11658 (11) obj. -133.314 iterations 5
Cbc0038I Rounding solution of -127.985 is better than previous of -125.601

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 140 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -127.985 to -128.598 (0.07 seconds)
Cbc0038I Round again with cutoff of -147.197
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.08211 (52) obj. -147.197 iterations 0
Cbc0038I Pass  34: suminf.    1.20108 (33) obj. -147.197 iterations 1
Cbc0038I Pass  35: suminf.    1.02070 (32) obj. -155.534 iterations 1
Cbc0038I Pass  36: suminf.    1.45445 (26) obj. -147.197 iterations 33
Cbc0038I Pass  37: suminf.    1.45445 (26) obj. -147.197 iterations 0
Cbc0038I Pass  38: suminf.    1.59209 (7) obj. -147.197 iterations 39
Cbc0038I Pass  39: suminf.    1.59209 (7) obj. -147.197 iterations 0
Cbc0038I Pass  40: suminf.    1.52268 (5) obj. -147.197 iterations 10
Cbc0038I Pass  41: suminf.    1.52268 (5) obj. -147.197 iterations 6
Cbc0038I Pass  42: suminf.    1.46282 (5) obj. -147.197 iterations 13
Cbc0038I Pass  43: suminf.    1.46282 (5) obj. -147.197 iterations 7
Cbc0038I Pass  44: suminf.    1.29391 (13) obj. -147.197 iterations 26
Cbc0038I Pass  45: suminf.    1.04824 (11) obj. -147.197 iterations 13
Cbc0038I Pass  46: suminf.    1.41496 (5) obj. -147.197 iterations 25
Cbc0038I Pass  47: suminf.    0.85422 (5) obj. -147.197 iterations 6
Cbc0038I Pass  48: suminf.    1.52268 (5) obj. -147.197 iterations 13
Cbc0038I Pass  49: suminf.    1.52268 (5) obj. -147.197 iterations 6
Cbc0038I Pass  50: suminf.    1.46282 (5) obj. -147.197 iterations 13
Cbc0038I Pass  51: suminf.    1.46282 (5) obj. -147.197 iterations 7
Cbc0038I Pass  52: suminf.    1.52268 (5) obj. -147.197 iterations 11
Cbc0038I Pass  53: suminf.    1.45233 (12) obj. -147.197 iterations 22
Cbc0038I Pass  54: suminf.    1.41239 (15) obj. -147.197 iterations 9
Cbc0038I Pass  55: suminf.    1.28961 (5) obj. -147.197 iterations 23
Cbc0038I Pass  56: suminf.    0.80893 (5) obj. -147.197 iterations 10
Cbc0038I Pass  57: suminf.    1.28961 (5) obj. -147.197 iterations 9
Cbc0038I Pass  58: suminf.    2.09079 (18) obj. -147.197 iterations 21
Cbc0038I Pass  59: suminf.    1.84643 (15) obj. -147.197 iterations 5
Cbc0038I Pass  60: suminf.    1.28961 (5) obj. -147.197 iterations 25
Cbc0038I Pass  61: suminf.    2.22307 (23) obj. -147.197 iterations 31
Cbc0038I Pass  62: suminf.    1.51879 (24) obj. -147.197 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 140 columns, reduced to 14 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -128.598 - took 0.05 seconds
Cbc0012I Integer solution of -128.59769 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 61 added rows had average density of 8.7704918
Cbc0013I At root node, 61 cuts changed objective from -202.72864 to -153.85902 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 2380 row cuts average 4.7 elements, 6 column cuts (6 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 53 row cuts average 67.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 53 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 173 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 349 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0012I Integer solution of -130.31894 found by DiveCoefficient after 449 iterations and 1 nodes (0.43 seconds)
Cbc0004I Integer solution of -138.49777 found after 463 iterations and 1 nodes (0.48 seconds)
Cbc0010I After 1 nodes, 1 on tree, -138.49777 best solution, best possible -153.85902 (0.48 seconds)
Cbc0012I Integer solution of -138.80724 found by DiveCoefficient after 1031 iterations and 11 nodes (1.08 seconds)
Cbc0010I After 13 nodes, 6 on tree, -138.80724 best solution, best possible -150.37515 (1.18 seconds)
Cbc0016I Integer solution of -140.96787 found by strong branching after 1589 iterations and 24 nodes (1.45 seconds)
Cbc0038I Full problem 131 rows 140 columns, reduced to 52 rows 58 columns
Cbc0010I After 43 nodes, 4 on tree, -140.96787 best solution, best possible -150.37515 (1.91 seconds)
Cbc0038I Full problem 192 rows 140 columns, reduced to 105 rows 112 columns
Cbc0044I Reduced cost fixing - 105 rows, 112 columns - restarting search
Cbc0038I Initial state - 55 integers unsatisfied sum - 7.22824
Cbc0038I Pass   1: suminf.    1.58007 (33) obj. -140.968 iterations 35
Cbc0038I Pass   2: suminf.    1.32498 (32) obj. -150.122 iterations 2
Cbc0038I Pass   3: suminf.    1.08850 (32) obj. -140.968 iterations 25
Cbc0038I Pass   4: suminf.    1.78256 (21) obj. -140.968 iterations 14
Cbc0038I Pass   5: suminf.    1.78256 (21) obj. -140.968 iterations 0
Cbc0038I Pass   6: suminf.    0.63343 (3) obj. -140.968 iterations 44
Cbc0038I Pass   7: suminf.    0.63343 (3) obj. -140.968 iterations 0
Cbc0038I Pass   8: suminf.    1.05016 (4) obj. -140.968 iterations 10
Cbc0038I Pass   9: suminf.    2.60325 (18) obj. -140.968 iterations 25
Cbc0038I Pass  10: suminf.    2.46589 (16) obj. -140.968 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 112 columns, reduced to 52 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (2.18 seconds)
Cbc0038I Full problem 106 rows 112 columns, reduced to 106 rows 112 columns - too large
Cbc0038I After 2.19 seconds - Feasibility pump exiting - took 0.02 seconds
Cbc0031I 55 added rows had average density of 23.781818
Cbc0013I At root node, 55 cuts changed objective from -199.66223 to -151.16163 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6175 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 525 row cuts average 85.3 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 111 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1104 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1012 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.660 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 478 row cuts average 7.7 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -151.16148 (4.01 seconds)
Cbc0010I After 22 nodes, 7 on tree, 1e+50 best solution, best possible -150.20169 (5.03 seconds)
Cbc0001I Search completed - best objective 1e+50, took 4420 iterations and 44 nodes (5.55 seconds)
Cbc0032I Strong branching done 688 times (15246 iterations), fathomed 4 nodes and fixed 7 variables
Cbc0035I Maximum depth 9, 149 variables fixed on reduced cost
Cbc0038I Probing was tried 199 times and created 6912 cuts of which 0 were active after adding rounds of cuts (0.127 seconds)
Cbc0038I Gomory was tried 190 times and created 525 cuts of which 0 were active after adding rounds of cuts (0.125 seconds)
Cbc0038I Knapsack was tried 190 times and created 580 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Cbc0038I Clique was tried 190 times and created 1803 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
Cbc0038I MixedIntegerRounding2 was tried 190 times and created 1485 cuts of which 0 were active after adding rounds of cuts (0.075 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 190 times and created 364 cuts of which 0 were active after adding rounds of cuts (0.090 seconds)
Cbc0038I ZeroHalf was tried 190 times and created 228 cuts of which 0 were active after adding rounds of cuts (1.232 seconds)
Cbc0038I Stored from first was tried 190 times and created 643 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -140.96787, took 6991 iterations and 94 nodes (5.56 seconds)
Cbc0032I Strong branching done 814 times (13866 iterations), fathomed 3 nodes and fixed 21 variables
Cbc0035I Maximum depth 14, 164 variables fixed on reduced cost
Total time (CPU seconds):       3.80   (Wallclock seconds):       5.57

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 156 (-49) rows, 83 (-20) columns and 470 (-133) elements
Clp1000I sum of infeasibilities 1.06301e-05 - average 6.81419e-08, 44 fixed columns
Coin0506I Presolve 65 (-91) rows, 37 (-46) columns and 197 (-273) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 2.9429889 - largest nonzero change 0 ( 0%) - largest zero change 2.398299e-05
Clp0000I Optimal - objective value 163.79769
Clp0000I Optimal - objective value 163.79769
Coin0511I After Postsolve, objective 163.79769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21546466 - largest nonzero change 0 ( 0%) - largest zero change 2.9234437e-05
Clp0000I Optimal - objective value 163.79769
Clp0000I Optimal - objective value 163.79769
Clp0000I Optimal - objective value 163.79769
Coin0511I After Postsolve, objective 163.79769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 163.7976874 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 155 rows, 83 columns (82 integer (82 of which binary)) and 492 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.97974
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -35.9906 iterations 42
Cbc0038I Solution found of -35.9906
Cbc0038I Relaxing continuous gives -35.9906
Cbc0038I Rounding solution of -97.5242 is better than previous of -35.9906

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 155 rows 83 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -97.5242 to -140.968 (0.03 seconds)
Cbc0038I Round again with cutoff of -143.251
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.76616 (4) obj. -143.251 iterations 13
Cbc0038I Pass   3: suminf.    0.94662 (5) obj. -143.251 iterations 12
Cbc0038I Pass   4: suminf.    1.08667 (3) obj. -143.251 iterations 15
Cbc0038I Pass   5: suminf.    0.88802 (4) obj. -143.251 iterations 5
Cbc0038I Pass   6: suminf.    1.02998 (4) obj. -143.251 iterations 8
Cbc0038I Pass   7: suminf.    2.82645 (7) obj. -143.251 iterations 17
Cbc0038I Pass   8: suminf.    0.12464 (2) obj. -143.251 iterations 23
Cbc0038I Pass   9: suminf.    0.78971 (4) obj. -143.251 iterations 15
Cbc0038I Pass  10: suminf.    0.81145 (6) obj. -143.251 iterations 23
Cbc0038I Pass  11: suminf.    0.76373 (3) obj. -143.251 iterations 3
Cbc0038I Pass  12: suminf.    0.93730 (3) obj. -143.251 iterations 11
Cbc0038I Pass  13: suminf.    0.23691 (1) obj. -143.251 iterations 6
Cbc0038I Pass  14: suminf.    0.14028 (2) obj. -143.251 iterations 5
Cbc0038I Pass  15: suminf.    0.31311 (3) obj. -143.251 iterations 3
Cbc0038I Pass  16: suminf.    1.34626 (7) obj. -143.251 iterations 18
Cbc0038I Pass  17: suminf.    0.98349 (4) obj. -143.251 iterations 12
Cbc0038I Pass  18: suminf.    0.66397 (3) obj. -143.251 iterations 1
Cbc0038I Pass  19: suminf.    0.42857 (1) obj. -143.251 iterations 11
Cbc0038I Pass  20: suminf.    0.33715 (1) obj. -143.251 iterations 3
Cbc0038I Pass  21: suminf.    0.38710 (1) obj. -143.251 iterations 2
Cbc0038I Pass  22: suminf.    2.73573 (9) obj. -143.251 iterations 31
Cbc0038I Pass  23: suminf.    1.17218 (8) obj. -143.251 iterations 23
Cbc0038I Pass  24: suminf.    0.66994 (6) obj. -143.251 iterations 13
Cbc0038I Pass  25: suminf.    1.76616 (4) obj. -143.251 iterations 18
Cbc0038I Pass  26: suminf.    0.94662 (5) obj. -143.251 iterations 12
Cbc0038I Pass  27: suminf.    1.08667 (3) obj. -143.251 iterations 14
Cbc0038I Pass  28: suminf.    0.88802 (4) obj. -143.251 iterations 5
Cbc0038I Pass  29: suminf.    1.02998 (4) obj. -143.251 iterations 7
Cbc0038I Pass  30: suminf.    1.72363 (6) obj. -143.251 iterations 17
Cbc0038I Pass  31: suminf.    1.23814 (4) obj. -143.251 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 155 rows 83 columns, reduced to 65 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -140.968 - took 0.04 seconds
Cbc0012I Integer solution of -140.96787 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 155 rows 83 columns, reduced to 56 rows 32 columns
Cbc0031I 15 added rows had average density of 24.2
Cbc0013I At root node, 15 cuts changed objective from -163.79769 to -152.48036 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 1077 row cuts average 3.8 elements, 9 column cuts (9 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 61.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -140.96787, took 931 iterations and 18 nodes (0.19 seconds)
Cbc0032I Strong branching done 164 times (1854 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 94 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 135 (-68) columns and 2588 (-3066) elements
Clp1000I sum of infeasibilities 1.12638e-07 - average 8.86913e-10, 32 fixed columns
Coin0506I Presolve 95 (-32) rows, 102 (-33) columns and 1493 (-1095) elements
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 1.8735079 - largest nonzero change 2.4310406e-05 ( 0.0015823696%) - largest zero change 2.8588641e-05
Clp0000I Optimal - objective value 180.13253
Clp0000I Optimal - objective value 180.13253
Coin0511I After Postsolve, objective 180.13253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 180.13253
Clp0000I Optimal - objective value 180.13253
Clp0000I Optimal - objective value 180.13253
Coin0511I After Postsolve, objective 180.13253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.1325319 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 139 columns (139 integer (139 of which binary)) and 2673 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.521%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 4.42416
Cbc0038I Pass   1: suminf.    1.73749 (33) obj. -150.003 iterations 29
Cbc0038I Pass   2: suminf.    1.73749 (33) obj. -150.003 iterations 0
Cbc0038I Pass   3: suminf.    0.12248 (5) obj. -89.6479 iterations 29
Cbc0038I Solution found of -82.8043
Cbc0038I Rounding solution of -92.3661 is better than previous of -82.8043

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -100.095
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.73749 (33) obj. -150.003 iterations 0
Cbc0038I Pass   5: suminf.    1.73749 (33) obj. -150.003 iterations 0
Cbc0038I Pass   6: suminf.    0.28372 (13) obj. -100.425 iterations 28
Cbc0038I Pass   7: suminf.    0.42861 (1) obj. -100.095 iterations 23
Cbc0038I Pass   8: suminf.    0.03226 (1) obj. -121.845 iterations 2
Cbc0038I Pass   9: suminf.    1.17979 (13) obj. -114.412 iterations 23
Cbc0038I Pass  10: suminf.    0.51809 (12) obj. -100.095 iterations 12
Cbc0038I Pass  11: suminf.    0.48387 (1) obj. -104.007 iterations 13
Cbc0038I Pass  12: suminf.    0.41917 (1) obj. -100.095 iterations 2
Cbc0038I Pass  13: suminf.    1.37015 (15) obj. -100.095 iterations 34
Cbc0038I Pass  14: suminf.    0.91919 (14) obj. -100.095 iterations 10
Cbc0038I Pass  15: suminf.    0.65679 (4) obj. -100.095 iterations 17
Cbc0038I Pass  16: suminf.    0.65679 (4) obj. -100.095 iterations 0
Cbc0038I Pass  17: suminf.    0.34306 (2) obj. -100.095 iterations 7
Cbc0038I Pass  18: suminf.    0.21881 (2) obj. -100.095 iterations 6
Cbc0038I Pass  19: suminf.    0.61258 (2) obj. -111.078 iterations 4
Cbc0038I Pass  20: suminf.    0.26119 (1) obj. -100.095 iterations 5
Cbc0038I Pass  21: suminf.    0.45161 (1) obj. -107.777 iterations 2
Cbc0038I Pass  22: suminf.    1.76802 (12) obj. -100.095 iterations 26
Cbc0038I Pass  23: suminf.    0.86346 (9) obj. -100.095 iterations 27
Cbc0038I Pass  24: suminf.    0.96005 (3) obj. -100.095 iterations 15
Cbc0038I Pass  25: suminf.    0.00442 (1) obj. -100.095 iterations 8
Cbc0038I Pass  26: suminf.    0.11429 (1) obj. -103.892 iterations 2
Cbc0038I Pass  27: suminf.    0.57665 (3) obj. -115.246 iterations 21
Cbc0038I Pass  28: suminf.    0.57665 (3) obj. -115.246 iterations 6
Cbc0038I Pass  29: suminf.    0.21147 (1) obj. -100.095 iterations 3
Cbc0038I Pass  30: suminf.    0.48387 (1) obj. -112.386 iterations 1
Cbc0038I Pass  31: suminf.    0.36284 (7) obj. -101.029 iterations 24
Cbc0038I Pass  32: suminf.    0.36284 (7) obj. -101.029 iterations 9
Cbc0038I Pass  33: suminf.    0.62120 (2) obj. -100.095 iterations 16
Cbc0038I Rounding solution of -113.942 is better than previous of -92.3661

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 139 columns, reduced to 14 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -113.942 to -123.654 (0.07 seconds)
Cbc0038I Round again with cutoff of -132.855
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.73749 (33) obj. -150.003 iterations 0
Cbc0038I Pass  34: suminf.    1.73749 (33) obj. -150.003 iterations 0
Cbc0038I Pass  35: suminf.    0.36218 (12) obj. -132.855 iterations 38
Cbc0038I Pass  36: suminf.    0.27099 (12) obj. -136.534 iterations 1
Cbc0038I Pass  37: suminf.    1.68686 (12) obj. -132.855 iterations 40
Cbc0038I Pass  38: suminf.    1.22769 (14) obj. -132.855 iterations 5
Cbc0038I Pass  39: suminf.    1.37744 (9) obj. -132.855 iterations 21
Cbc0038I Pass  40: suminf.    1.26996 (9) obj. -132.855 iterations 7
Cbc0038I Pass  41: suminf.    1.13390 (7) obj. -132.855 iterations 24
Cbc0038I Pass  42: suminf.    1.08458 (7) obj. -132.855 iterations 2
Cbc0038I Pass  43: suminf.    1.13390 (7) obj. -132.855 iterations 13
Cbc0038I Pass  44: suminf.    1.74945 (14) obj. -132.855 iterations 15
Cbc0038I Pass  45: suminf.    1.18559 (12) obj. -132.977 iterations 10
Cbc0038I Pass  46: suminf.    1.47578 (8) obj. -132.855 iterations 23
Cbc0038I Pass  47: suminf.    1.42568 (10) obj. -132.855 iterations 9
Cbc0038I Pass  48: suminf.    1.26864 (9) obj. -132.855 iterations 13
Cbc0038I Pass  49: suminf.    1.26864 (9) obj. -132.855 iterations 0
Cbc0038I Pass  50: suminf.    1.25782 (9) obj. -132.855 iterations 17
Cbc0038I Pass  51: suminf.    1.25782 (9) obj. -132.855 iterations 0
Cbc0038I Pass  52: suminf.    1.26864 (9) obj. -132.855 iterations 5
Cbc0038I Pass  53: suminf.    2.45014 (17) obj. -132.855 iterations 21
Cbc0038I Pass  54: suminf.    1.19736 (11) obj. -132.855 iterations 5
Cbc0038I Pass  55: suminf.    1.19736 (11) obj. -132.855 iterations 1
Cbc0038I Pass  56: suminf.    1.63390 (9) obj. -132.855 iterations 9
Cbc0038I Pass  57: suminf.    1.09255 (9) obj. -132.855 iterations 7
Cbc0038I Pass  58: suminf.    2.30010 (21) obj. -132.855 iterations 30
Cbc0038I Pass  59: suminf.    1.30762 (20) obj. -132.855 iterations 4
Cbc0038I Pass  60: suminf.    1.24923 (16) obj. -132.855 iterations 10
Cbc0038I Pass  61: suminf.    1.43528 (12) obj. -132.855 iterations 19
Cbc0038I Pass  62: suminf.    1.43528 (12) obj. -132.855 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 139 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -123.654 - took 0.06 seconds
Cbc0012I Integer solution of -123.65422 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 139 columns, reduced to 2 rows 3 columns
Cbc0031I 41 added rows had average density of 28.902439
Cbc0013I At root node, 41 cuts changed objective from -169.65708 to -148.75678 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 1631 row cuts average 14.9 elements, 8 column cuts (26 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 43 row cuts average 61.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 293 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -123.65422 best solution, best possible -148.75678 (0.61 seconds)
Cbc0012I Integer solution of -131.74937 found by DiveCoefficient after 517 iterations and 3 nodes (0.69 seconds)
Cbc0012I Integer solution of -132.74937 found by DiveCoefficient after 528 iterations and 3 nodes (0.70 seconds)
Cbc0012I Integer solution of -135.76867 found by DiveCoefficient after 548 iterations and 5 nodes (0.78 seconds)
Cbc0004I Integer solution of -136.51707 found after 859 iterations and 15 nodes (1.10 seconds)
Cbc0010I After 22 nodes, 11 on tree, -136.51707 best solution, best possible -148.75678 (1.33 seconds)
Cbc0004I Integer solution of -140.96787 found after 1117 iterations and 31 nodes (1.54 seconds)
Cbc0038I Full problem 130 rows 139 columns, reduced to 46 rows 51 columns
Cbc0038I Full problem 171 rows 139 columns, reduced to 81 rows 89 columns
Cbc0044I Reduced cost fixing - 81 rows, 89 columns - restarting search
Cbc0038I Initial state - 34 integers unsatisfied sum - 4.00341
Cbc0038I Pass   1: suminf.    1.49990 (15) obj. -155.52 iterations 18
Cbc0038I Pass   2: suminf.    1.05853 (10) obj. -146.636 iterations 6
Cbc0038I Pass   3: suminf.    0.25333 (6) obj. -140.968 iterations 20
Cbc0038I Pass   4: suminf.    0.42857 (1) obj. -145.629 iterations 7
Cbc0038I Pass   5: suminf.    0.42857 (1) obj. -145.629 iterations 0
Cbc0038I Pass   6: suminf.    0.38479 (1) obj. -140.968 iterations 2
Cbc0038I Pass   7: suminf.    0.48387 (1) obj. -146.266 iterations 1
Cbc0038I Pass   8: suminf.    0.75575 (6) obj. -140.968 iterations 15
Cbc0038I Pass   9: suminf.    0.59810 (5) obj. -142.03 iterations 3
Cbc0038I Pass  10: suminf.    0.73232 (3) obj. -140.968 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 89 columns, reduced to 12 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (1.87 seconds)
Cbc0038I Full problem 82 rows 89 columns, reduced to 80 rows 87 columns
Cbc0038I After 1.91 seconds - Feasibility pump exiting with objective of -140.968 - took 0.05 seconds
Cbc0031I 18 added rows had average density of 6.4444444
Cbc0013I At root node, 18 cuts changed objective from -164.68482 to -146.44093 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 324 row cuts average 3.7 elements, 8 column cuts (8 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 16 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 23 row cuts average 15.7 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -146.44093 (2.02 seconds)
Cbc0001I Search completed - best objective 1e+50, took 543 iterations and 16 nodes (2.11 seconds)
Cbc0032I Strong branching done 246 times (1831 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 36 variables fixed on reduced cost
Cbc0038I Probing was tried 18 times and created 356 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I Gomory was tried 15 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I Knapsack was tried 15 times and created 149 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I Clique was tried 15 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I OddWheel was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I MixedIntegerRounding2 was tried 15 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 15 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I ZeroHalf was tried 15 times and created 113 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
Cbc0038I Stored from first was tried 15 times and created 51 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -140.96787, took 2054 iterations and 66 nodes (2.11 seconds)
Cbc0032I Strong branching done 672 times (7491 iterations), fathomed 4 nodes and fixed 5 variables
Cbc0035I Maximum depth 14, 80 variables fixed on reduced cost
Total time (CPU seconds):       1.45   (Wallclock seconds):       2.12

