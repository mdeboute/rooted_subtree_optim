Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 2.321e-05 - average 6.63143e-07, 9 fixed columns
Coin0506I Presolve 14 (-21) rows, 12 (-9) columns and 46 (-58) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 8670.4575
Clp0000I Optimal - objective value 8670.4575
Coin0511I After Postsolve, objective 8670.4575, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.7775665 - largest nonzero change 2.3376943e-05 ( 0.0013165956%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 8670.4575
Clp0000I Optimal - objective value 8670.4575
Clp0000I Optimal - objective value 8670.4575
Coin0511I After Postsolve, objective 8670.4575, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8670.457513 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.762%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.729804
Cbc0038I Solution found of -6972.29
Cbc0038I Relaxing continuous gives -6972.29
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7115.14
Cbc0038I Pass   1: suminf.    0.05107 (2) obj. -7115.14 iterations 9
Cbc0038I Pass   2: suminf.    0.30146 (1) obj. -8196.94 iterations 2
Cbc0038I Pass   3: suminf.    0.12854 (1) obj. -7115.14 iterations 1
Cbc0038I Pass   4: suminf.    0.05107 (2) obj. -7115.14 iterations 3
Cbc0038I Pass   5: suminf.    0.90605 (2) obj. -7115.14 iterations 5
Cbc0038I Pass   6: suminf.    0.13864 (2) obj. -7115.14 iterations 3
Cbc0038I Pass   7: suminf.    0.25878 (1) obj. -7684.96 iterations 2
Cbc0038I Pass   8: suminf.    0.16769 (1) obj. -7115.14 iterations 1
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -7269.24 iterations 7
Cbc0038I Solution found of -7269.24
Cbc0038I Relaxing continuous gives -7269.24
Cbc0038I Rounding solution of -7566.54 is better than previous of -7269.24

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -7566.54 to -7810.35 (0.01 seconds)
Cbc0038I Round again with cutoff of -7928.45
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  10: suminf.    0.34182 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  11: suminf.    0.30146 (1) obj. -8196.94 iterations 2
Cbc0038I Pass  12: suminf.    0.25854 (1) obj. -7928.45 iterations 1
Cbc0038I Pass  13: suminf.    0.58790 (2) obj. -7928.45 iterations 6
Cbc0038I Pass  14: suminf.    0.35403 (2) obj. -7928.45 iterations 3
Cbc0038I Pass  15: suminf.    0.58790 (2) obj. -7928.45 iterations 4
Cbc0038I Pass  16: suminf.    0.37078 (2) obj. -7928.45 iterations 7
Cbc0038I Pass  17: suminf.    0.37078 (2) obj. -7928.45 iterations 2
Cbc0038I Pass  18: suminf.    0.31366 (1) obj. -8192.21 iterations 2
Cbc0038I Pass  19: suminf.    0.27149 (1) obj. -7928.45 iterations 1
Cbc0038I Pass  20: suminf.    0.49313 (3) obj. -7928.45 iterations 3
Cbc0038I Pass  21: suminf.    0.24263 (2) obj. -7928.45 iterations 3
Cbc0038I Pass  22: suminf.    0.30841 (2) obj. -7928.45 iterations 3
Cbc0038I Pass  23: suminf.    0.46677 (2) obj. -7928.45 iterations 5
Cbc0038I Pass  24: suminf.    0.53150 (2) obj. -7928.45 iterations 3
Cbc0038I Pass  25: suminf.    0.53150 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  26: suminf.    0.52526 (2) obj. -7928.45 iterations 2
Cbc0038I Pass  27: suminf.    0.52526 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  28: suminf.    0.52526 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  29: suminf.    0.68170 (3) obj. -7928.45 iterations 6
Cbc0038I Pass  30: suminf.    0.24551 (1) obj. -7928.45 iterations 5
Cbc0038I Pass  31: suminf.    0.24659 (1) obj. -7935.14 iterations 1
Cbc0038I Pass  32: suminf.    0.24659 (1) obj. -7935.14 iterations 0
Cbc0038I Pass  33: suminf.    0.93166 (5) obj. -7928.45 iterations 10
Cbc0038I Pass  34: suminf.    0.93166 (5) obj. -7928.45 iterations 1
Cbc0038I Pass  35: suminf.    0.73613 (2) obj. -7928.45 iterations 4
Cbc0038I Pass  36: suminf.    0.73613 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  37: suminf.    0.63354 (2) obj. -7928.45 iterations 2
Cbc0038I Pass  38: suminf.    0.63354 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  39: suminf.    1.30875 (4) obj. -7928.45 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -7810.35 to -7827.08 (0.02 seconds)
Cbc0038I Round again with cutoff of -8070.16
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  39: suminf.    0.39248 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  40: suminf.    0.30146 (1) obj. -8196.94 iterations 2
Cbc0038I Pass  41: suminf.    0.28120 (1) obj. -8070.16 iterations 1
Cbc0038I Pass  42: suminf.    1.23212 (3) obj. -8070.16 iterations 6
Cbc0038I Pass  43: suminf.    1.23212 (3) obj. -8070.16 iterations 2
Cbc0038I Pass  44: suminf.    0.73244 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  45: suminf.    0.73244 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  46: suminf.    0.37043 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  47: suminf.    0.37043 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  48: suminf.    0.50898 (3) obj. -8070.16 iterations 4
Cbc0038I Pass  49: suminf.    0.50898 (3) obj. -8070.16 iterations 2
Cbc0038I Pass  50: suminf.    0.64223 (2) obj. -8070.16 iterations 3
Cbc0038I Pass  51: suminf.    0.64223 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  52: suminf.    0.57291 (2) obj. -8070.16 iterations 3
Cbc0038I Pass  53: suminf.    0.57291 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  54: suminf.    0.57291 (2) obj. -8070.16 iterations 1
Cbc0038I Pass  55: suminf.    0.57291 (2) obj. -8070.16 iterations 1
Cbc0038I Pass  56: suminf.    0.64223 (2) obj. -8070.16 iterations 3
Cbc0038I Pass  57: suminf.    0.64223 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  58: suminf.    0.57291 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  59: suminf.    0.89616 (3) obj. -8070.16 iterations 2
Cbc0038I Pass  60: suminf.    0.73430 (2) obj. -8070.16 iterations 1
Cbc0038I Pass  61: suminf.    0.80964 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  62: suminf.    0.80964 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  63: suminf.    0.75444 (2) obj. -8070.16 iterations 4
Cbc0038I Pass  64: suminf.    0.75444 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  65: suminf.    0.85542 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  66: suminf.    0.85542 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  67: suminf.    0.75444 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  68: suminf.    1.21171 (3) obj. -8070.16 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -7827.08 - took 0.02 seconds
Cbc0012I Integer solution of -7827.0833 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 5 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 5
Cbc0013I At root node, 6 cuts changed objective from -8070.0857 to -7827.0833 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.3 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 17 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7827.0833, took 46 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 41 (-5) columns and 325 (-63) elements
Clp1000I sum of infeasibilities 0 - average 0, 35 fixed columns
Coin0506I Presolve 6 (-30) rows, 6 (-35) columns and 20 (-305) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 8631.2062
Clp0000I Optimal - objective value 8631.2062
Coin0511I After Postsolve, objective 8631.2062, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1542573 - largest nonzero change 2.2742989e-05 ( 0.0022742989%) - largest zero change 1.836629e-05
Clp0000I Optimal - objective value 8745.6037
Clp0000I Optimal - objective value 8745.6037
Clp0000I Optimal - objective value 8745.6037
Coin0511I After Postsolve, objective 8745.6037, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8745.603695 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 42 columns (42 integer (42 of which binary)) and 333 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 5.02803
Cbc0038I Pass   1: suminf.    1.73333 (4) obj. -6881.06 iterations 10
Cbc0038I Solution found of -6852.96
Cbc0038I Rounding solution of -7074.42 is better than previous of -6852.96

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -7227.65
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.78874 (5) obj. -7227.65 iterations 1
Cbc0038I Pass   3: suminf.    0.78994 (3) obj. -7227.65 iterations 2
Cbc0038I Pass   4: suminf.    0.22377 (1) obj. -8252.81 iterations 3
Cbc0038I Pass   5: suminf.    0.05989 (1) obj. -7227.65 iterations 1
Cbc0038I Pass   6: suminf.    1.73498 (5) obj. -7227.65 iterations 6
Cbc0038I Pass   7: suminf.    1.40028 (4) obj. -7227.65 iterations 1
Cbc0038I Pass   8: suminf.    0.33805 (1) obj. -8177.55 iterations 4
Cbc0038I Pass   9: suminf.    0.18621 (1) obj. -7227.65 iterations 1
Cbc0038I Pass  10: suminf.    1.89103 (5) obj. -7227.65 iterations 6
Cbc0038I Pass  11: suminf.    1.89103 (5) obj. -7227.65 iterations 1
Cbc0038I Pass  12: suminf.    0.37463 (1) obj. -8152.14 iterations 5
Cbc0038I Pass  13: suminf.    0.22685 (1) obj. -7227.65 iterations 1
Cbc0038I Pass  14: suminf.    0.63560 (2) obj. -7227.65 iterations 4
Cbc0038I Pass  15: suminf.    0.17106 (1) obj. -7227.65 iterations 1
Cbc0038I Pass  16: suminf.    0.30756 (1) obj. -8081.57 iterations 1
Cbc0038I Pass  17: suminf.    2.09563 (11) obj. -7227.65 iterations 11
Cbc0038I Pass  18: suminf.    2.09563 (11) obj. -7227.65 iterations 1
Cbc0038I Pass  19: suminf.    0.25721 (1) obj. -7227.65 iterations 12
Cbc0038I Pass  20: suminf.    0.33195 (1) obj. -7695.24 iterations 1
Cbc0038I Pass  21: suminf.    2.17751 (7) obj. -7227.65 iterations 9
Cbc0038I Pass  22: suminf.    2.17751 (7) obj. -7227.65 iterations 2
Cbc0038I Pass  23: suminf.    0.36122 (1) obj. -7402.16 iterations 7
Cbc0038I Pass  24: suminf.    0.33333 (1) obj. -7227.65 iterations 1
Cbc0038I Pass  25: suminf.    4.61752 (15) obj. -7227.65 iterations 19
Cbc0038I Pass  26: suminf.    1.28433 (10) obj. -7227.65 iterations 6
Cbc0038I Pass  27: suminf.    0.82699 (9) obj. -7227.65 iterations 1
Cbc0038I Pass  28: suminf.    0.12263 (1) obj. -7227.65 iterations 9
Cbc0038I Pass  29: suminf.    0.11111 (1) obj. -7299.73 iterations 1
Cbc0038I Pass  30: suminf.    1.35762 (6) obj. -7227.65 iterations 9
Cbc0038I Pass  31: suminf.    1.25649 (5) obj. -7227.65 iterations 2
Cbc0038I Rounding solution of -7367 is better than previous of -7074.42

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 30 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -7367 to -7566.54 (0.04 seconds)
Cbc0038I Round again with cutoff of -7774.6
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.87617 (5) obj. -7774.6 iterations 0
Cbc0038I Pass  32: suminf.    0.22377 (1) obj. -8252.81 iterations 5
Cbc0038I Pass  33: suminf.    0.14732 (1) obj. -7774.6 iterations 1
Cbc0038I Pass  34: suminf.    1.08433 (5) obj. -7774.6 iterations 6
Cbc0038I Pass  35: suminf.    0.18538 (1) obj. -7774.6 iterations 4
Cbc0038I Pass  36: suminf.    0.22377 (1) obj. -8014.76 iterations 1
Cbc0038I Pass  37: suminf.    0.75268 (3) obj. -7774.6 iterations 9
Cbc0038I Pass  38: suminf.    0.11100 (1) obj. -7774.6 iterations 4
Cbc0038I Pass  39: suminf.    0.15512 (1) obj. -8050.59 iterations 1
Cbc0038I Pass  40: suminf.    1.13392 (5) obj. -7774.6 iterations 8
Cbc0038I Pass  41: suminf.    0.45679 (3) obj. -7774.6 iterations 2
Cbc0038I Pass  42: suminf.    0.56172 (2) obj. -7774.6 iterations 1
Cbc0038I Pass  43: suminf.    0.16276 (1) obj. -7774.6 iterations 1
Cbc0038I Pass  44: suminf.    0.18561 (1) obj. -7917.54 iterations 1
Cbc0038I Pass  45: suminf.    0.89392 (4) obj. -7774.6 iterations 6
Cbc0038I Pass  46: suminf.    0.63735 (3) obj. -7774.6 iterations 1
Cbc0038I Pass  47: suminf.    0.29525 (2) obj. -7774.6 iterations 3
Cbc0038I Pass  48: suminf.    0.29525 (2) obj. -7774.6 iterations 0
Cbc0038I Pass  49: suminf.    0.37057 (2) obj. -7774.6 iterations 1
Cbc0038I Pass  50: suminf.    0.37057 (2) obj. -7774.6 iterations 0
Cbc0038I Pass  51: suminf.    1.55922 (5) obj. -7774.6 iterations 8
Cbc0038I Pass  52: suminf.    1.06048 (4) obj. -7774.6 iterations 1
Cbc0038I Pass  53: suminf.    0.33683 (1) obj. -8142.16 iterations 4
Cbc0038I Pass  54: suminf.    0.27807 (1) obj. -7774.6 iterations 1
Cbc0038I Pass  55: suminf.    1.85471 (6) obj. -7774.6 iterations 8
Cbc0038I Pass  56: suminf.    1.05792 (3) obj. -7774.6 iterations 4
Cbc0038I Pass  57: suminf.    0.55816 (2) obj. -7774.6 iterations 1
Cbc0038I Pass  58: suminf.    0.30634 (1) obj. -8275.2 iterations 2
Cbc0038I Pass  59: suminf.    0.22632 (1) obj. -7774.6 iterations 1
Cbc0038I Pass  60: suminf.    2.15551 (6) obj. -7774.6 iterations 5
Cbc0038I Rounding solution of -7610.28 is better than previous of -7566.54

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -7610.28 to -7827.08 (0.05 seconds)
Cbc0038I Round again with cutoff of -8061
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  60: suminf.    1.92195 (5) obj. -8061 iterations 0
Cbc0038I Pass  61: suminf.    0.22377 (1) obj. -8252.81 iterations 5
Cbc0038I Pass  62: suminf.    0.19311 (1) obj. -8061 iterations 1
Cbc0038I Pass  63: suminf.    1.02460 (4) obj. -8061 iterations 6
Cbc0038I Pass  64: suminf.    0.37751 (2) obj. -8061 iterations 2
Cbc0038I Pass  65: suminf.    0.51733 (2) obj. -8061 iterations 1
Cbc0038I Pass  66: suminf.    0.51733 (2) obj. -8061 iterations 0
Cbc0038I Pass  67: suminf.    0.37751 (2) obj. -8061 iterations 1
Cbc0038I Pass  68: suminf.    3.10626 (9) obj. -8061 iterations 12
Cbc0038I Pass  69: suminf.    1.39642 (4) obj. -8061 iterations 5
Cbc0038I Pass  70: suminf.    0.24659 (1) obj. -8109.64 iterations 4
Cbc0038I Pass  71: suminf.    0.23881 (1) obj. -8061 iterations 1
Cbc0038I Pass  72: suminf.    1.17242 (3) obj. -8061 iterations 4
Cbc0038I Pass  73: suminf.    0.70590 (2) obj. -8061 iterations 2
Cbc0038I Pass  74: suminf.    0.30756 (1) obj. -8069.57 iterations 2
Cbc0038I Pass  75: suminf.    0.30619 (1) obj. -8061 iterations 1
Cbc0038I Pass  76: suminf.    1.79295 (5) obj. -8061 iterations 6
Cbc0038I Pass  77: suminf.    0.78377 (3) obj. -8061 iterations 3
Cbc0038I Pass  78: suminf.    0.58883 (2) obj. -8061 iterations 2
Cbc0038I Pass  79: suminf.    0.45994 (2) obj. -8061 iterations 1
Cbc0038I Pass  80: suminf.    2.26508 (7) obj. -8061 iterations 7
Cbc0038I Pass  81: suminf.    2.23202 (6) obj. -8061 iterations 1
Cbc0038I Pass  82: suminf.    0.82448 (2) obj. -8061 iterations 6
Cbc0038I Pass  83: suminf.    0.51351 (2) obj. -8061 iterations 3
Cbc0038I Pass  84: suminf.    1.61557 (6) obj. -8061 iterations 6
Cbc0038I Pass  85: suminf.    1.55713 (5) obj. -8061 iterations 3
Cbc0038I Pass  86: suminf.    0.50238 (2) obj. -8061 iterations 6
Cbc0038I Pass  87: suminf.    0.39792 (1) obj. -8061 iterations 3
Cbc0038I Pass  88: suminf.    0.40390 (1) obj. -8098.43 iterations 1
Cbc0038I Pass  89: suminf.    1.01043 (4) obj. -8061 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -7827.08 - took 0.03 seconds
Cbc0012I Integer solution of -7827.0833 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 42 columns, reduced to 6 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 6
Cbc0013I At root node, 5 cuts changed objective from -8606.8008 to -7778.5194 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.0 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 7 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7827.0833, took 27 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 2.321e-05 - average 6.63143e-07, 9 fixed columns
Coin0506I Presolve 14 (-21) rows, 12 (-9) columns and 46 (-58) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 8670.4575
Clp0000I Optimal - objective value 8670.4575
Coin0511I After Postsolve, objective 8670.4575, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.7775665 - largest nonzero change 2.3376943e-05 ( 0.0013165956%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 8670.4575
Clp0000I Optimal - objective value 8670.4575
Clp0000I Optimal - objective value 8670.4575
Coin0511I After Postsolve, objective 8670.4575, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8670.457513 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.762%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.729804
Cbc0038I Solution found of -6972.29
Cbc0038I Relaxing continuous gives -6972.29
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7115.14
Cbc0038I Pass   1: suminf.    0.05107 (2) obj. -7115.14 iterations 9
Cbc0038I Pass   2: suminf.    0.30146 (1) obj. -8196.94 iterations 2
Cbc0038I Pass   3: suminf.    0.12854 (1) obj. -7115.14 iterations 1
Cbc0038I Pass   4: suminf.    0.05107 (2) obj. -7115.14 iterations 3
Cbc0038I Pass   5: suminf.    0.90605 (2) obj. -7115.14 iterations 5
Cbc0038I Pass   6: suminf.    0.13864 (2) obj. -7115.14 iterations 3
Cbc0038I Pass   7: suminf.    0.25878 (1) obj. -7684.96 iterations 2
Cbc0038I Pass   8: suminf.    0.16769 (1) obj. -7115.14 iterations 1
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -7269.24 iterations 7
Cbc0038I Solution found of -7269.24
Cbc0038I Relaxing continuous gives -7269.24
Cbc0038I Rounding solution of -7566.54 is better than previous of -7269.24

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -7566.54 to -7810.35 (0.01 seconds)
Cbc0038I Round again with cutoff of -7928.45
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  10: suminf.    0.34182 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  11: suminf.    0.30146 (1) obj. -8196.94 iterations 2
Cbc0038I Pass  12: suminf.    0.25854 (1) obj. -7928.45 iterations 1
Cbc0038I Pass  13: suminf.    0.58790 (2) obj. -7928.45 iterations 6
Cbc0038I Pass  14: suminf.    0.35403 (2) obj. -7928.45 iterations 3
Cbc0038I Pass  15: suminf.    0.58790 (2) obj. -7928.45 iterations 4
Cbc0038I Pass  16: suminf.    0.37078 (2) obj. -7928.45 iterations 7
Cbc0038I Pass  17: suminf.    0.37078 (2) obj. -7928.45 iterations 2
Cbc0038I Pass  18: suminf.    0.31366 (1) obj. -8192.21 iterations 2
Cbc0038I Pass  19: suminf.    0.27149 (1) obj. -7928.45 iterations 1
Cbc0038I Pass  20: suminf.    0.49313 (3) obj. -7928.45 iterations 3
Cbc0038I Pass  21: suminf.    0.24263 (2) obj. -7928.45 iterations 3
Cbc0038I Pass  22: suminf.    0.30841 (2) obj. -7928.45 iterations 3
Cbc0038I Pass  23: suminf.    0.46677 (2) obj. -7928.45 iterations 5
Cbc0038I Pass  24: suminf.    0.53150 (2) obj. -7928.45 iterations 3
Cbc0038I Pass  25: suminf.    0.53150 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  26: suminf.    0.52526 (2) obj. -7928.45 iterations 2
Cbc0038I Pass  27: suminf.    0.52526 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  28: suminf.    0.52526 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  29: suminf.    0.68170 (3) obj. -7928.45 iterations 6
Cbc0038I Pass  30: suminf.    0.24551 (1) obj. -7928.45 iterations 5
Cbc0038I Pass  31: suminf.    0.24659 (1) obj. -7935.14 iterations 1
Cbc0038I Pass  32: suminf.    0.24659 (1) obj. -7935.14 iterations 0
Cbc0038I Pass  33: suminf.    0.93166 (5) obj. -7928.45 iterations 10
Cbc0038I Pass  34: suminf.    0.93166 (5) obj. -7928.45 iterations 1
Cbc0038I Pass  35: suminf.    0.73613 (2) obj. -7928.45 iterations 4
Cbc0038I Pass  36: suminf.    0.73613 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  37: suminf.    0.63354 (2) obj. -7928.45 iterations 2
Cbc0038I Pass  38: suminf.    0.63354 (2) obj. -7928.45 iterations 0
Cbc0038I Pass  39: suminf.    1.30875 (4) obj. -7928.45 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 7 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -7810.35 to -7827.08 (0.02 seconds)
Cbc0038I Round again with cutoff of -8070.16
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  39: suminf.    0.39248 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  40: suminf.    0.30146 (1) obj. -8196.94 iterations 2
Cbc0038I Pass  41: suminf.    0.28120 (1) obj. -8070.16 iterations 1
Cbc0038I Pass  42: suminf.    1.23212 (3) obj. -8070.16 iterations 6
Cbc0038I Pass  43: suminf.    1.23212 (3) obj. -8070.16 iterations 2
Cbc0038I Pass  44: suminf.    0.73244 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  45: suminf.    0.73244 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  46: suminf.    0.37043 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  47: suminf.    0.37043 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  48: suminf.    0.50898 (3) obj. -8070.16 iterations 4
Cbc0038I Pass  49: suminf.    0.50898 (3) obj. -8070.16 iterations 2
Cbc0038I Pass  50: suminf.    0.64223 (2) obj. -8070.16 iterations 3
Cbc0038I Pass  51: suminf.    0.64223 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  52: suminf.    0.57291 (2) obj. -8070.16 iterations 3
Cbc0038I Pass  53: suminf.    0.57291 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  54: suminf.    0.57291 (2) obj. -8070.16 iterations 1
Cbc0038I Pass  55: suminf.    0.57291 (2) obj. -8070.16 iterations 1
Cbc0038I Pass  56: suminf.    0.64223 (2) obj. -8070.16 iterations 3
Cbc0038I Pass  57: suminf.    0.64223 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  58: suminf.    0.57291 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  59: suminf.    0.89616 (3) obj. -8070.16 iterations 2
Cbc0038I Pass  60: suminf.    0.73430 (2) obj. -8070.16 iterations 1
Cbc0038I Pass  61: suminf.    0.80964 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  62: suminf.    0.80964 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  63: suminf.    0.75444 (2) obj. -8070.16 iterations 4
Cbc0038I Pass  64: suminf.    0.75444 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  65: suminf.    0.85542 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  66: suminf.    0.85542 (2) obj. -8070.16 iterations 0
Cbc0038I Pass  67: suminf.    0.75444 (2) obj. -8070.16 iterations 2
Cbc0038I Pass  68: suminf.    1.21171 (3) obj. -8070.16 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7827.08 - took 0.03 seconds
Cbc0012I Integer solution of -7827.0833 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 5 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 5
Cbc0013I At root node, 6 cuts changed objective from -8070.0857 to -7827.0833 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.3 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 17 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -7827.0833, took 46 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 39 (-8) columns and 299 (-90) elements
Clp1000I sum of infeasibilities 0 - average 0, 33 fixed columns
Coin0506I Presolve 6 (-28) rows, 6 (-33) columns and 20 (-279) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 8631.2062
Clp0000I Optimal - objective value 8631.2062
Coin0511I After Postsolve, objective 8631.2062, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2924041 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 8745.6037
Clp0000I Optimal - objective value 8745.6037
Clp0000I Optimal - objective value 8745.6037
Coin0511I After Postsolve, objective 8745.6037, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8745.603695 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 41 columns (41 integer (41 of which binary)) and 319 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 5.02622
Cbc0038I Pass   1: suminf.    1.73333 (4) obj. -6881.06 iterations 14
Cbc0038I Pass   2: suminf.    1.23333 (3) obj. -6874.06 iterations 1
Cbc0038I Solution found of -6852.96
Cbc0038I Rounding solution of -7074.42 is better than previous of -6852.96

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -7226.67
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.78858 (5) obj. -7226.67 iterations 1
Cbc0038I Pass   4: suminf.    0.22377 (1) obj. -8252.81 iterations 5
Cbc0038I Pass   5: suminf.    0.05974 (1) obj. -7226.67 iterations 1
Cbc0038I Pass   6: suminf.    1.44014 (4) obj. -7226.67 iterations 8
Cbc0038I Pass   7: suminf.    1.19337 (3) obj. -7226.67 iterations 3
Cbc0038I Pass   8: suminf.    0.35634 (1) obj. -7946.13 iterations 3
Cbc0038I Pass   9: suminf.    0.24134 (1) obj. -7226.67 iterations 1
Cbc0038I Pass  10: suminf.    1.52759 (5) obj. -7226.67 iterations 8
Cbc0038I Pass  11: suminf.    1.07043 (3) obj. -7226.67 iterations 5
Cbc0038I Pass  12: suminf.    1.96695 (5) obj. -7226.67 iterations 6
Cbc0038I Pass  13: suminf.    1.53852 (4) obj. -7226.67 iterations 2
Cbc0038I Pass  14: suminf.    0.26488 (1) obj. -7566.59 iterations 4
Cbc0038I Pass  15: suminf.    0.21054 (1) obj. -7226.67 iterations 1
Cbc0038I Pass  16: suminf.    1.66873 (5) obj. -7226.67 iterations 8
Cbc0038I Pass  17: suminf.    1.36998 (4) obj. -7226.67 iterations 2
Cbc0038I Pass  18: suminf.    0.27098 (1) obj. -8045.9 iterations 4
Cbc0038I Pass  19: suminf.    0.14002 (1) obj. -7226.67 iterations 1
Cbc0038I Pass  20: suminf.    1.82267 (5) obj. -7226.67 iterations 9
Cbc0038I Pass  21: suminf.    1.57691 (4) obj. -7226.67 iterations 3
Cbc0038I Pass  22: suminf.    0.57811 (2) obj. -7226.67 iterations 2
Cbc0038I Pass  23: suminf.    0.24049 (1) obj. -7955.92 iterations 2
Cbc0038I Pass  24: suminf.    0.12392 (1) obj. -7226.67 iterations 1
Cbc0038I Pass  25: suminf.    4.15488 (13) obj. -7226.67 iterations 14
Cbc0038I Pass  26: suminf.    2.31898 (8) obj. -7226.67 iterations 5
Cbc0038I Pass  27: suminf.    0.41610 (1) obj. -7589.66 iterations 8
Cbc0038I Pass  28: suminf.    0.35807 (1) obj. -7226.67 iterations 1
Cbc0038I Pass  29: suminf.    1.99606 (6) obj. -7226.67 iterations 13
Cbc0038I Pass  30: suminf.    1.73297 (5) obj. -7226.67 iterations 3
Cbc0038I Pass  31: suminf.    0.35512 (1) obj. -7653.72 iterations 5
Cbc0038I Pass  32: suminf.    0.28686 (1) obj. -7226.67 iterations 1
Cbc0038I Rounding solution of -7367 is better than previous of -7074.42

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -7613
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.85033 (5) obj. -7613 iterations 0
Cbc0038I Pass  33: suminf.    0.22377 (1) obj. -8252.81 iterations 5
Cbc0038I Pass  34: suminf.    0.12149 (1) obj. -7613 iterations 1
Cbc0038I Pass  35: suminf.    1.72439 (7) obj. -7613 iterations 6
Cbc0038I Pass  36: suminf.    0.20030 (3) obj. -7613 iterations 4
Cbc0038I Pass  37: suminf.    0.30146 (1) obj. -8196.94 iterations 3
Cbc0038I Pass  38: suminf.    0.20812 (1) obj. -7613 iterations 1
Cbc0038I Pass  39: suminf.    1.29189 (5) obj. -7613 iterations 5
Cbc0038I Pass  40: suminf.    0.14853 (1) obj. -7613 iterations 4
Cbc0038I Pass  41: suminf.    0.17951 (1) obj. -7806.84 iterations 1
Cbc0038I Pass  42: suminf.    1.95449 (5) obj. -7613 iterations 10
Cbc0038I Pass  43: suminf.    1.31588 (3) obj. -7613 iterations 3
Cbc0038I Pass  44: suminf.    0.43561 (1) obj. -8000.76 iterations 3
Cbc0038I Pass  45: suminf.    0.37362 (1) obj. -7613 iterations 1
Cbc0038I Pass  46: suminf.    1.81811 (5) obj. -7613 iterations 5
Cbc0038I Pass  47: suminf.    1.80136 (4) obj. -7613 iterations 1
Cbc0038I Pass  48: suminf.    0.43561 (1) obj. -7632.1 iterations 4
Cbc0038I Pass  49: suminf.    0.43256 (1) obj. -7613 iterations 1
Cbc0038I Pass  50: suminf.    1.63036 (5) obj. -7613 iterations 7
Cbc0038I Pass  51: suminf.    1.39450 (4) obj. -7613 iterations 2
Cbc0038I Pass  52: suminf.    0.45878 (1) obj. -8125.63 iterations 4
Cbc0038I Pass  53: suminf.    0.37683 (1) obj. -7613 iterations 1
Cbc0038I Pass  54: suminf.    1.38052 (6) obj. -7613 iterations 8
Cbc0038I Pass  55: suminf.    1.10418 (4) obj. -7613 iterations 4
Cbc0038I Pass  56: suminf.    0.49537 (1) obj. -7731.57 iterations 4
Cbc0038I Pass  57: suminf.    0.47641 (1) obj. -7613 iterations 1
Cbc0038I Pass  58: suminf.    0.88355 (3) obj. -7613 iterations 3
Cbc0038I Pass  59: suminf.    0.58000 (2) obj. -7613 iterations 1
Cbc0038I Pass  60: suminf.    0.40390 (1) obj. -7856.06 iterations 2
Cbc0038I Pass  61: suminf.    0.36505 (1) obj. -7613 iterations 1
Cbc0038I Rounding solution of -7566.54 is better than previous of -7367

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -7908.19
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.89752 (5) obj. -7908.19 iterations 0
Cbc0038I Pass  62: suminf.    0.22377 (1) obj. -8252.81 iterations 5
Cbc0038I Pass  63: suminf.    0.16868 (1) obj. -7908.19 iterations 1
Cbc0038I Pass  64: suminf.    1.67916 (5) obj. -7908.19 iterations 7
Cbc0038I Pass  65: suminf.    0.85994 (3) obj. -7908.19 iterations 3
Cbc0038I Pass  66: suminf.    0.30756 (1) obj. -7964.27 iterations 3
Cbc0038I Pass  67: suminf.    0.29860 (1) obj. -7908.19 iterations 1
Cbc0038I Pass  68: suminf.    1.52792 (5) obj. -7908.19 iterations 6
Cbc0038I Pass  69: suminf.    0.93121 (3) obj. -7908.19 iterations 4
Cbc0038I Pass  70: suminf.    1.89128 (5) obj. -7908.19 iterations 12
Cbc0038I Pass  71: suminf.    1.39513 (4) obj. -7908.19 iterations 6
Cbc0038I Pass  72: suminf.    0.35512 (1) obj. -8022.39 iterations 4
Cbc0038I Pass  73: suminf.    0.33687 (1) obj. -7908.19 iterations 1
Cbc0038I Pass  74: suminf.    1.90122 (5) obj. -7908.19 iterations 6
Cbc0038I Pass  75: suminf.    0.39780 (1) obj. -8165.7 iterations 7
Cbc0038I Pass  76: suminf.    0.35664 (1) obj. -7908.19 iterations 1
Cbc0038I Pass  77: suminf.    2.67509 (9) obj. -7908.19 iterations 10
Cbc0038I Pass  78: suminf.    0.28739 (2) obj. -7908.19 iterations 7
Cbc0038I Pass  79: suminf.    0.38683 (1) obj. -8290.47 iterations 4
Cbc0038I Pass  80: suminf.    0.32572 (1) obj. -7908.19 iterations 1
Cbc0038I Pass  81: suminf.    0.97427 (3) obj. -7908.19 iterations 6
Cbc0038I Pass  82: suminf.    0.97427 (3) obj. -7908.19 iterations 2
Cbc0038I Pass  83: suminf.    0.44780 (1) obj. -8250.4 iterations 5
Cbc0038I Pass  84: suminf.    0.39310 (1) obj. -7908.19 iterations 1
Cbc0038I Pass  85: suminf.    2.32103 (7) obj. -7908.19 iterations 10
Cbc0038I Pass  86: suminf.    2.10587 (6) obj. -7908.19 iterations 1
Cbc0038I Pass  87: suminf.    0.49537 (1) obj. -7988.93 iterations 6
Cbc0038I Pass  88: suminf.    0.48246 (1) obj. -7908.19 iterations 1
Cbc0038I Pass  89: suminf.    1.01573 (3) obj. -7908.19 iterations 4
Cbc0038I Pass  90: suminf.    0.39262 (1) obj. -7908.19 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -7566.54 - took 0.03 seconds
Cbc0012I Integer solution of -7566.5443 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 41 columns, reduced to 1 rows 3 columns
Cbc0012I Integer solution of -7827.0833 found by DiveCoefficient after 166 iterations and 0 nodes (0.11 seconds)
Cbc0031I 7 added rows had average density of 9.1428571
Cbc0013I At root node, 7 cuts changed objective from -8596.992 to -7827.5691 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 6.3 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 77 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.48577639 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -7827.0833, took 166 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.11

