Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 119 (-87) rows, 61 (-43) columns and 296 (-213) elements
Clp0000I Optimal - objective value 3263.7672
Coin0511I After Postsolve, objective 3263.7672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3263.767158 - 63 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 119 rows, 61 columns (60 integer (60 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.573%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 20.9456
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1483.33 iterations 65
Cbc0038I Solution found of 1483.33
Cbc0038I Relaxing continuous gives 1483.33
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound improved solution from 1483.33 to -141.666 (0.02 seconds)
Cbc0038I Round again with cutoff of -453.876
Cbc0038I Pass   2: suminf.    2.25514 (15) obj. -453.876 iterations 14
Cbc0038I Pass   3: suminf.    1.03190 (10) obj. -453.876 iterations 26
Cbc0038I Pass   4: suminf.    1.03190 (10) obj. -453.876 iterations 0
Cbc0038I Pass   5: suminf.    1.83942 (11) obj. -453.876 iterations 24
Cbc0038I Pass   6: suminf.    1.68272 (8) obj. -453.876 iterations 12
Cbc0038I Pass   7: suminf.    1.29710 (8) obj. -453.876 iterations 2
Cbc0038I Pass   8: suminf.    1.20506 (9) obj. -453.876 iterations 20
Cbc0038I Pass   9: suminf.    1.20506 (9) obj. -453.876 iterations 1
Cbc0038I Pass  10: suminf.    0.89441 (4) obj. -453.876 iterations 17
Cbc0038I Solution found of -453.876
Cbc0038I Relaxing continuous gives -658.33
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 116 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -658.33 to -1683.33 (0.03 seconds)
Cbc0038I Round again with cutoff of -1999.42
Cbc0038I Pass  11: suminf.    5.49916 (22) obj. -1999.42 iterations 9
Cbc0038I Pass  12: suminf.    4.83332 (22) obj. -1999.42 iterations 4
Cbc0038I Pass  13: suminf.    4.02615 (24) obj. -1999.42 iterations 2
Cbc0038I Pass  14: suminf.    4.01237 (24) obj. -1999.42 iterations 1
Cbc0038I Pass  15: suminf.    6.02627 (23) obj. -1999.42 iterations 46
Cbc0038I Pass  16: suminf.    5.12661 (19) obj. -1999.42 iterations 11
Cbc0038I Pass  17: suminf.    4.79750 (19) obj. -1999.42 iterations 1
Cbc0038I Pass  18: suminf.    7.41191 (23) obj. -1999.42 iterations 29
Cbc0038I Pass  19: suminf.    7.38032 (23) obj. -1999.42 iterations 2
Cbc0038I Pass  20: suminf.    7.24568 (23) obj. -1999.42 iterations 20
Cbc0038I Pass  21: suminf.    2.67668 (10) obj. -1999.42 iterations 10
Cbc0038I Pass  22: suminf.    0.92408 (3) obj. -1999.42 iterations 13
Cbc0038I Pass  23: suminf.    0.52681 (2) obj. -1999.42 iterations 3
Cbc0038I Solution found of -1999.42
Cbc0038I Relaxing continuous gives -2883.33
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 119 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2997.46
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  24: suminf.   12.11391 (39) obj. -2997.46 iterations 11
Cbc0038I Pass  25: suminf.   10.48028 (38) obj. -2997.46 iterations 8
Cbc0038I Pass  26: suminf.    9.72015 (38) obj. -2997.46 iterations 6
Cbc0038I Pass  27: suminf.   11.96555 (37) obj. -2997.46 iterations 16
Cbc0038I Pass  28: suminf.   10.31516 (37) obj. -2997.46 iterations 10
Cbc0038I Pass  29: suminf.    9.72015 (38) obj. -2997.46 iterations 4
Cbc0038I Pass  30: suminf.   12.99831 (40) obj. -2997.46 iterations 22
Cbc0038I Pass  31: suminf.   12.43796 (39) obj. -2997.46 iterations 7
Cbc0038I Pass  32: suminf.   12.09154 (37) obj. -2997.46 iterations 5
Cbc0038I Pass  33: suminf.   10.52572 (37) obj. -2997.46 iterations 3
Cbc0038I Pass  34: suminf.   13.12481 (38) obj. -2997.46 iterations 21
Cbc0038I Pass  35: suminf.    9.87884 (37) obj. -2997.46 iterations 17
Cbc0038I Pass  36: suminf.    9.80567 (37) obj. -2997.46 iterations 1
Cbc0038I Pass  37: suminf.   12.44889 (39) obj. -2997.46 iterations 31
Cbc0038I Pass  38: suminf.   11.51240 (35) obj. -2997.46 iterations 12
Cbc0038I Pass  39: suminf.   10.02082 (35) obj. -2997.46 iterations 11
Cbc0038I Pass  40: suminf.    9.94217 (35) obj. -2997.46 iterations 2
Cbc0038I Pass  41: suminf.   11.80033 (38) obj. -2997.46 iterations 20
Cbc0038I Pass  42: suminf.   12.43237 (39) obj. -2997.46 iterations 22
Cbc0038I Pass  43: suminf.    9.94217 (35) obj. -2997.46 iterations 21
Cbc0038I Pass  44: suminf.   17.05915 (44) obj. -2997.46 iterations 39
Cbc0038I Pass  45: suminf.   13.30988 (43) obj. -2997.46 iterations 23
Cbc0038I Pass  46: suminf.   13.16019 (41) obj. -2997.46 iterations 5
Cbc0038I Pass  47: suminf.   11.99444 (38) obj. -2997.46 iterations 8
Cbc0038I Pass  48: suminf.   10.03385 (38) obj. -2997.46 iterations 2
Cbc0038I Pass  49: suminf.    9.72015 (38) obj. -2997.46 iterations 4
Cbc0038I Pass  50: suminf.   11.70016 (36) obj. -2997.46 iterations 19
Cbc0038I Pass  51: suminf.   10.73355 (35) obj. -2997.46 iterations 10
Cbc0038I Pass  52: suminf.    9.91729 (36) obj. -2997.46 iterations 6
Cbc0038I Pass  53: suminf.    9.91729 (36) obj. -2997.46 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2883.33 - took 0.08 seconds
Cbc0012I Integer solution of -2883.33 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -3263.7672 to -3263.7672 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2883.33, took 0 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-92) rows, 114 (-90) columns and 1675 (-3985) elements
Clp1000I sum of infeasibilities 0.000162122 - average 1.43471e-06, 88 fixed columns
Coin0506I Presolve 0 (-113) rows, 0 (-114) columns and 0 (-1675) elements
Clp0000I Optimal - objective value -3458.335
Clp0000I Optimal - objective value -3458.335
Coin0511I After Postsolve, objective -3458.335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.6028469 - largest nonzero change 2.9854947e-05 ( 0.0021710699%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 6346.3251
Clp0000I Optimal - objective value 6346.3251
Clp0000I Optimal - objective value 6346.3251
Coin0511I After Postsolve, objective 6346.3251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6346.325061 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 115 columns (115 integer (115 of which binary)) and 1678 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.094%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.21392
Cbc0038I Pass   1: suminf.    6.64311 (33) obj. -3146.53 iterations 18
Cbc0038I Pass   2: suminf.    6.64311 (33) obj. -3146.53 iterations 1
Cbc0038I Pass   3: suminf.    1.01240 (11) obj. 1814.02 iterations 22
Cbc0038I Solution found of 3150
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 115 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 3150 to 1808.33 (0.03 seconds)
Cbc0038I Round again with cutoff of 1138.85
Cbc0038I Pass   4: suminf.    6.64311 (33) obj. -3146.53 iterations 0
Cbc0038I Pass   5: suminf.    6.64311 (33) obj. -3146.53 iterations 1
Cbc0038I Pass   6: suminf.    1.60112 (15) obj. 1138.85 iterations 34
Cbc0038I Pass   7: suminf.    1.58402 (8) obj. 1138.85 iterations 1
Cbc0038I Pass   8: suminf.    1.26412 (8) obj. 906.928 iterations 1
Cbc0038I Pass   9: suminf.    1.58041 (10) obj. 1138.85 iterations 7
Cbc0038I Pass  10: suminf.    1.37518 (9) obj. 483.275 iterations 1
Cbc0038I Pass  11: suminf.    1.02239 (3) obj. 1138.85 iterations 8
Cbc0038I Pass  12: suminf.    1.02239 (3) obj. 1138.85 iterations 0
Cbc0038I Pass  13: suminf.    0.45704 (2) obj. 1138.85 iterations 2
Cbc0038I Pass  14: suminf.    0.45704 (2) obj. 1138.85 iterations 0
Cbc0038I Pass  15: suminf.    0.43901 (2) obj. 1138.85 iterations 1
Cbc0038I Pass  16: suminf.    1.91723 (10) obj. 858.183 iterations 22
Cbc0038I Pass  17: suminf.    1.91723 (10) obj. 858.183 iterations 8
Cbc0038I Pass  18: suminf.    0.79850 (2) obj. 1138.85 iterations 11
Cbc0038I Pass  19: suminf.    0.79850 (2) obj. 1138.85 iterations 0
Cbc0038I Pass  20: suminf.    0.73067 (2) obj. 1138.85 iterations 1
Cbc0038I Pass  21: suminf.    4.11178 (13) obj. 1138.85 iterations 45
Cbc0038I Pass  22: suminf.    3.11375 (11) obj. 1138.85 iterations 22
Cbc0038I Pass  23: suminf.    2.70466 (10) obj. 1138.85 iterations 1
Cbc0038I Pass  24: suminf.    1.34884 (3) obj. 1138.85 iterations 11
Cbc0038I Pass  25: suminf.    1.02232 (3) obj. 1138.85 iterations 1
Cbc0038I Pass  26: suminf.    1.34884 (3) obj. 1138.85 iterations 1
Cbc0038I Pass  27: suminf.    3.23026 (12) obj. 1138.85 iterations 26
Cbc0038I Pass  28: suminf.    3.23026 (12) obj. 1138.85 iterations 4
Cbc0038I Pass  29: suminf.    1.68069 (5) obj. 1138.85 iterations 9
Cbc0038I Pass  30: suminf.    1.34922 (4) obj. 1138.85 iterations 2
Cbc0038I Pass  31: suminf.    1.65654 (4) obj. 1138.85 iterations 2
Cbc0038I Pass  32: suminf.    4.15221 (13) obj. 1138.85 iterations 17
Cbc0038I Pass  33: suminf.    4.15221 (13) obj. 1138.85 iterations 1
Cbc0038I Rounding solution of 883.335 is better than previous of 1808.33

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -270.629
Cbc0038I Pass  33: suminf.    6.64311 (33) obj. -3146.53 iterations 0
Cbc0038I Pass  34: suminf.    6.64311 (33) obj. -3146.53 iterations 1
Cbc0038I Pass  35: suminf.    2.19094 (15) obj. -270.629 iterations 31
Cbc0038I Pass  36: suminf.    2.19094 (15) obj. -270.629 iterations 1
Cbc0038I Pass  37: suminf.    1.84263 (11) obj. -270.629 iterations 16
Cbc0038I Pass  38: suminf.    1.84263 (11) obj. -270.629 iterations 0
Cbc0038I Pass  39: suminf.    1.82282 (6) obj. -270.629 iterations 7
Cbc0038I Pass  40: suminf.    1.82282 (6) obj. -270.629 iterations 0
Cbc0038I Pass  41: suminf.    1.43053 (4) obj. -270.629 iterations 4
Cbc0038I Pass  42: suminf.    1.43053 (4) obj. -270.629 iterations 0
Cbc0038I Pass  43: suminf.    1.42461 (4) obj. -270.629 iterations 1
Cbc0038I Pass  44: suminf.    1.42461 (4) obj. -270.629 iterations 0
Cbc0038I Pass  45: suminf.    1.43053 (4) obj. -270.629 iterations 1
Cbc0038I Pass  46: suminf.    3.01938 (11) obj. -270.629 iterations 13
Cbc0038I Pass  47: suminf.    2.61185 (10) obj. -270.629 iterations 3
Cbc0038I Pass  48: suminf.    2.53240 (10) obj. -308.371 iterations 1
Cbc0038I Pass  49: suminf.    1.39711 (6) obj. -270.629 iterations 7
Cbc0038I Pass  50: suminf.    1.30583 (4) obj. -318.336 iterations 2
Cbc0038I Pass  51: suminf.    1.37398 (4) obj. -270.629 iterations 2
Cbc0038I Pass  52: suminf.    3.07432 (12) obj. -270.629 iterations 23
Cbc0038I Pass  53: suminf.    3.07432 (12) obj. -270.629 iterations 10
Cbc0038I Pass  54: suminf.    2.21126 (7) obj. -270.629 iterations 8
Cbc0038I Pass  55: suminf.    2.21126 (7) obj. -270.629 iterations 0
Cbc0038I Pass  56: suminf.    2.29865 (7) obj. -270.629 iterations 2
Cbc0038I Pass  57: suminf.    2.29865 (7) obj. -270.629 iterations 0
Cbc0038I Pass  58: suminf.    2.21126 (7) obj. -270.629 iterations 2
Cbc0038I Pass  59: suminf.    4.38229 (14) obj. -270.629 iterations 21
Cbc0038I Pass  60: suminf.    4.38229 (14) obj. -270.629 iterations 8
Cbc0038I Pass  61: suminf.    3.62488 (9) obj. -270.629 iterations 7
Cbc0038I Pass  62: suminf.    3.14520 (8) obj. -270.629 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 883.335 - took 0.04 seconds
Cbc0012I Integer solution of 883.3354 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -2883.33 found by DiveCoefficient after 40 iterations and 0 nodes (0.09 seconds)
Cbc0031I 16 added rows had average density of 5.0625
Cbc0013I At root node, 16 cuts changed objective from -4886.4866 to -2883.33 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 739 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2883.33, took 40 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 119 (-87) rows, 61 (-43) columns and 296 (-213) elements
Clp0000I Optimal - objective value 3263.7672
Coin0511I After Postsolve, objective 3263.7672, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3263.767158 - 63 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 119 rows, 61 columns (60 integer (60 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.573%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 20.9456
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1483.33 iterations 65
Cbc0038I Solution found of 1483.33
Cbc0038I Relaxing continuous gives 1483.33
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound improved solution from 1483.33 to -141.666 (0.03 seconds)
Cbc0038I Round again with cutoff of -453.876
Cbc0038I Pass   2: suminf.    2.25514 (15) obj. -453.876 iterations 14
Cbc0038I Pass   3: suminf.    1.03190 (10) obj. -453.876 iterations 26
Cbc0038I Pass   4: suminf.    1.03190 (10) obj. -453.876 iterations 0
Cbc0038I Pass   5: suminf.    1.83942 (11) obj. -453.876 iterations 24
Cbc0038I Pass   6: suminf.    1.68272 (8) obj. -453.876 iterations 12
Cbc0038I Pass   7: suminf.    1.29710 (8) obj. -453.876 iterations 2
Cbc0038I Pass   8: suminf.    1.20506 (9) obj. -453.876 iterations 20
Cbc0038I Pass   9: suminf.    1.20506 (9) obj. -453.876 iterations 1
Cbc0038I Pass  10: suminf.    0.89441 (4) obj. -453.876 iterations 17
Cbc0038I Solution found of -453.876
Cbc0038I Relaxing continuous gives -658.33
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 116 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -658.33 to -1683.33 (0.03 seconds)
Cbc0038I Round again with cutoff of -1999.42
Cbc0038I Pass  11: suminf.    5.49916 (22) obj. -1999.42 iterations 9
Cbc0038I Pass  12: suminf.    4.83332 (22) obj. -1999.42 iterations 4
Cbc0038I Pass  13: suminf.    4.02615 (24) obj. -1999.42 iterations 2
Cbc0038I Pass  14: suminf.    4.01237 (24) obj. -1999.42 iterations 1
Cbc0038I Pass  15: suminf.    6.02627 (23) obj. -1999.42 iterations 46
Cbc0038I Pass  16: suminf.    5.12661 (19) obj. -1999.42 iterations 11
Cbc0038I Pass  17: suminf.    4.79750 (19) obj. -1999.42 iterations 1
Cbc0038I Pass  18: suminf.    7.41191 (23) obj. -1999.42 iterations 29
Cbc0038I Pass  19: suminf.    7.38032 (23) obj. -1999.42 iterations 2
Cbc0038I Pass  20: suminf.    7.24568 (23) obj. -1999.42 iterations 20
Cbc0038I Pass  21: suminf.    2.67668 (10) obj. -1999.42 iterations 10
Cbc0038I Pass  22: suminf.    0.92408 (3) obj. -1999.42 iterations 13
Cbc0038I Pass  23: suminf.    0.52681 (2) obj. -1999.42 iterations 3
Cbc0038I Solution found of -1999.42
Cbc0038I Relaxing continuous gives -2883.33
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 119 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -2997.46
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  24: suminf.   12.11391 (39) obj. -2997.46 iterations 11
Cbc0038I Pass  25: suminf.   10.48028 (38) obj. -2997.46 iterations 8
Cbc0038I Pass  26: suminf.    9.72015 (38) obj. -2997.46 iterations 6
Cbc0038I Pass  27: suminf.   11.96555 (37) obj. -2997.46 iterations 16
Cbc0038I Pass  28: suminf.   10.31516 (37) obj. -2997.46 iterations 10
Cbc0038I Pass  29: suminf.    9.72015 (38) obj. -2997.46 iterations 4
Cbc0038I Pass  30: suminf.   12.99831 (40) obj. -2997.46 iterations 22
Cbc0038I Pass  31: suminf.   12.43796 (39) obj. -2997.46 iterations 7
Cbc0038I Pass  32: suminf.   12.09154 (37) obj. -2997.46 iterations 5
Cbc0038I Pass  33: suminf.   10.52572 (37) obj. -2997.46 iterations 3
Cbc0038I Pass  34: suminf.   13.12481 (38) obj. -2997.46 iterations 21
Cbc0038I Pass  35: suminf.    9.87884 (37) obj. -2997.46 iterations 17
Cbc0038I Pass  36: suminf.    9.80567 (37) obj. -2997.46 iterations 1
Cbc0038I Pass  37: suminf.   12.44889 (39) obj. -2997.46 iterations 31
Cbc0038I Pass  38: suminf.   11.51240 (35) obj. -2997.46 iterations 12
Cbc0038I Pass  39: suminf.   10.02082 (35) obj. -2997.46 iterations 11
Cbc0038I Pass  40: suminf.    9.94217 (35) obj. -2997.46 iterations 2
Cbc0038I Pass  41: suminf.   11.80033 (38) obj. -2997.46 iterations 20
Cbc0038I Pass  42: suminf.   12.43237 (39) obj. -2997.46 iterations 22
Cbc0038I Pass  43: suminf.    9.94217 (35) obj. -2997.46 iterations 21
Cbc0038I Pass  44: suminf.   17.05915 (44) obj. -2997.46 iterations 39
Cbc0038I Pass  45: suminf.   13.30988 (43) obj. -2997.46 iterations 23
Cbc0038I Pass  46: suminf.   13.16019 (41) obj. -2997.46 iterations 5
Cbc0038I Pass  47: suminf.   11.99444 (38) obj. -2997.46 iterations 8
Cbc0038I Pass  48: suminf.   10.03385 (38) obj. -2997.46 iterations 2
Cbc0038I Pass  49: suminf.    9.72015 (38) obj. -2997.46 iterations 4
Cbc0038I Pass  50: suminf.   11.70016 (36) obj. -2997.46 iterations 19
Cbc0038I Pass  51: suminf.   10.73355 (35) obj. -2997.46 iterations 10
Cbc0038I Pass  52: suminf.    9.91729 (36) obj. -2997.46 iterations 6
Cbc0038I Pass  53: suminf.    9.91729 (36) obj. -2997.46 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 119 rows 61 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2883.33 - took 0.04 seconds
Cbc0012I Integer solution of -2883.33 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -3263.7672 to -3263.7672 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2883.33, took 0 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-93) rows, 114 (-91) columns and 1675 (-3986) elements
Clp1000I sum of infeasibilities 0.000162122 - average 1.43471e-06, 88 fixed columns
Coin0506I Presolve 0 (-113) rows, 0 (-114) columns and 0 (-1675) elements
Clp0000I Optimal - objective value -3458.335
Clp0000I Optimal - objective value -3458.335
Coin0511I After Postsolve, objective -3458.335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.6028469 - largest nonzero change 2.9854947e-05 ( 0.0021710699%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 6346.3251
Clp0000I Optimal - objective value 6346.3251
Clp0000I Optimal - objective value 6346.3251
Coin0511I After Postsolve, objective 6346.3251, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6346.325061 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 115 columns (115 integer (115 of which binary)) and 1678 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.094%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.21392
Cbc0038I Pass   1: suminf.    6.64311 (33) obj. -3146.53 iterations 18
Cbc0038I Pass   2: suminf.    6.64311 (33) obj. -3146.53 iterations 1
Cbc0038I Pass   3: suminf.    1.01240 (11) obj. 1814.02 iterations 22
Cbc0038I Solution found of 3150
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 115 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 3150 to 1808.33 (0.04 seconds)
Cbc0038I Round again with cutoff of 1138.85
Cbc0038I Pass   4: suminf.    6.64311 (33) obj. -3146.53 iterations 0
Cbc0038I Pass   5: suminf.    6.64311 (33) obj. -3146.53 iterations 1
Cbc0038I Pass   6: suminf.    1.60112 (15) obj. 1138.85 iterations 34
Cbc0038I Pass   7: suminf.    1.58402 (8) obj. 1138.85 iterations 1
Cbc0038I Pass   8: suminf.    1.26412 (8) obj. 906.928 iterations 1
Cbc0038I Pass   9: suminf.    1.58041 (10) obj. 1138.85 iterations 7
Cbc0038I Pass  10: suminf.    1.37518 (9) obj. 483.275 iterations 1
Cbc0038I Pass  11: suminf.    1.02239 (3) obj. 1138.85 iterations 8
Cbc0038I Pass  12: suminf.    1.02239 (3) obj. 1138.85 iterations 0
Cbc0038I Pass  13: suminf.    0.45704 (2) obj. 1138.85 iterations 2
Cbc0038I Pass  14: suminf.    0.45704 (2) obj. 1138.85 iterations 0
Cbc0038I Pass  15: suminf.    0.43901 (2) obj. 1138.85 iterations 1
Cbc0038I Pass  16: suminf.    1.91723 (10) obj. 858.183 iterations 22
Cbc0038I Pass  17: suminf.    1.91723 (10) obj. 858.183 iterations 8
Cbc0038I Pass  18: suminf.    0.79850 (2) obj. 1138.85 iterations 11
Cbc0038I Pass  19: suminf.    0.79850 (2) obj. 1138.85 iterations 0
Cbc0038I Pass  20: suminf.    0.73067 (2) obj. 1138.85 iterations 1
Cbc0038I Pass  21: suminf.    4.11178 (13) obj. 1138.85 iterations 45
Cbc0038I Pass  22: suminf.    3.11375 (11) obj. 1138.85 iterations 22
Cbc0038I Pass  23: suminf.    2.70466 (10) obj. 1138.85 iterations 1
Cbc0038I Pass  24: suminf.    1.34884 (3) obj. 1138.85 iterations 11
Cbc0038I Pass  25: suminf.    1.02232 (3) obj. 1138.85 iterations 1
Cbc0038I Pass  26: suminf.    1.34884 (3) obj. 1138.85 iterations 1
Cbc0038I Pass  27: suminf.    3.23026 (12) obj. 1138.85 iterations 26
Cbc0038I Pass  28: suminf.    3.23026 (12) obj. 1138.85 iterations 4
Cbc0038I Pass  29: suminf.    1.68069 (5) obj. 1138.85 iterations 9
Cbc0038I Pass  30: suminf.    1.34922 (4) obj. 1138.85 iterations 2
Cbc0038I Pass  31: suminf.    1.65654 (4) obj. 1138.85 iterations 2
Cbc0038I Pass  32: suminf.    4.15221 (13) obj. 1138.85 iterations 17
Cbc0038I Pass  33: suminf.    4.15221 (13) obj. 1138.85 iterations 1
Cbc0038I Rounding solution of 883.335 is better than previous of 1808.33

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -270.629
Cbc0038I Pass  33: suminf.    6.64311 (33) obj. -3146.53 iterations 0
Cbc0038I Pass  34: suminf.    6.64311 (33) obj. -3146.53 iterations 1
Cbc0038I Pass  35: suminf.    2.19094 (15) obj. -270.629 iterations 31
Cbc0038I Pass  36: suminf.    2.19094 (15) obj. -270.629 iterations 1
Cbc0038I Pass  37: suminf.    1.84263 (11) obj. -270.629 iterations 16
Cbc0038I Pass  38: suminf.    1.84263 (11) obj. -270.629 iterations 0
Cbc0038I Pass  39: suminf.    1.82282 (6) obj. -270.629 iterations 7
Cbc0038I Pass  40: suminf.    1.82282 (6) obj. -270.629 iterations 0
Cbc0038I Pass  41: suminf.    1.43053 (4) obj. -270.629 iterations 4
Cbc0038I Pass  42: suminf.    1.43053 (4) obj. -270.629 iterations 0
Cbc0038I Pass  43: suminf.    1.42461 (4) obj. -270.629 iterations 1
Cbc0038I Pass  44: suminf.    1.42461 (4) obj. -270.629 iterations 0
Cbc0038I Pass  45: suminf.    1.43053 (4) obj. -270.629 iterations 1
Cbc0038I Pass  46: suminf.    3.01938 (11) obj. -270.629 iterations 13
Cbc0038I Pass  47: suminf.    2.61185 (10) obj. -270.629 iterations 3
Cbc0038I Pass  48: suminf.    2.53240 (10) obj. -308.371 iterations 1
Cbc0038I Pass  49: suminf.    1.39711 (6) obj. -270.629 iterations 7
Cbc0038I Pass  50: suminf.    1.30583 (4) obj. -318.336 iterations 2
Cbc0038I Pass  51: suminf.    1.37398 (4) obj. -270.629 iterations 2
Cbc0038I Pass  52: suminf.    3.07432 (12) obj. -270.629 iterations 23
Cbc0038I Pass  53: suminf.    3.07432 (12) obj. -270.629 iterations 10
Cbc0038I Pass  54: suminf.    2.21126 (7) obj. -270.629 iterations 8
Cbc0038I Pass  55: suminf.    2.21126 (7) obj. -270.629 iterations 0
Cbc0038I Pass  56: suminf.    2.29865 (7) obj. -270.629 iterations 2
Cbc0038I Pass  57: suminf.    2.29865 (7) obj. -270.629 iterations 0
Cbc0038I Pass  58: suminf.    2.21126 (7) obj. -270.629 iterations 2
Cbc0038I Pass  59: suminf.    4.38229 (14) obj. -270.629 iterations 21
Cbc0038I Pass  60: suminf.    4.38229 (14) obj. -270.629 iterations 8
Cbc0038I Pass  61: suminf.    3.62488 (9) obj. -270.629 iterations 7
Cbc0038I Pass  62: suminf.    3.14520 (8) obj. -270.629 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 883.335 - took 0.04 seconds
Cbc0012I Integer solution of 883.3354 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -2883.33 found by DiveCoefficient after 40 iterations and 0 nodes (0.10 seconds)
Cbc0031I 16 added rows had average density of 5.0625
Cbc0013I At root node, 16 cuts changed objective from -4886.4866 to -2883.33 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 739 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 40 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -2883.33, took 40 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

