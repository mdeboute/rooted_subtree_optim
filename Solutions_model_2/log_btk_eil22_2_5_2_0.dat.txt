Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 22 (-2) columns and 104 (-25) elements
Clp1000I sum of infeasibilities 1.80761e-05 - average 5.31649e-07, 2 fixed columns
Coin0506I Presolve 31 (-3) rows, 20 (-2) columns and 95 (-9) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 60.389337
Clp0000I Optimal - objective value 60.389337
Coin0511I After Postsolve, objective 60.389337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.389337
Clp0000I Optimal - objective value 60.389337
Clp0000I Optimal - objective value 60.389337
Coin0511I After Postsolve, objective 60.389337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.38933676 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.232%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.93989
Cbc0038I Pass   1: suminf.    0.16667 (1) obj. -37.0824 iterations 11
Cbc0038I Solution found of -20.0171
Cbc0038I Relaxing continuous gives -20.0171
Cbc0038I Rounding solution of -25.6282 is better than previous of -20.0171

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29.1044
Cbc0038I Pass   2: suminf.    0.16667 (1) obj. -37.0824 iterations 0
Cbc0038I Pass   3: suminf.    0.44375 (1) obj. -29.1044 iterations 2
Cbc0038I Pass   4: suminf.    1.15786 (3) obj. -29.1044 iterations 5
Cbc0038I Pass   5: suminf.    0.66074 (2) obj. -29.1044 iterations 2
Cbc0038I Pass   6: suminf.    0.48030 (2) obj. -29.1044 iterations 6
Cbc0038I Pass   7: suminf.    0.38194 (1) obj. -29.1044 iterations 2
Cbc0038I Pass   8: suminf.    0.16975 (1) obj. -29.1044 iterations 2
Cbc0038I Pass   9: suminf.    0.22222 (1) obj. -30.1789 iterations 1
Cbc0038I Pass  10: suminf.    1.14208 (5) obj. -29.1044 iterations 7
Cbc0038I Pass  11: suminf.    1.12533 (5) obj. -29.1044 iterations 2
Cbc0038I Pass  12: suminf.    1.34522 (4) obj. -29.1044 iterations 9
Cbc0038I Pass  13: suminf.    0.59323 (5) obj. -29.1044 iterations 3
Cbc0038I Pass  14: suminf.    1.72762 (5) obj. -29.1044 iterations 8
Cbc0038I Pass  15: suminf.    1.62177 (4) obj. -29.1044 iterations 1
Cbc0038I Pass  16: suminf.    1.62177 (4) obj. -29.1044 iterations 0
Cbc0038I Pass  17: suminf.    1.53985 (5) obj. -29.1044 iterations 5
Cbc0038I Pass  18: suminf.    0.88278 (3) obj. -29.1044 iterations 3
Cbc0038I Pass  19: suminf.    1.27884 (3) obj. -29.1044 iterations 6
Cbc0038I Pass  20: suminf.    0.47082 (3) obj. -29.1044 iterations 2
Cbc0038I Pass  21: suminf.    1.19590 (3) obj. -29.1044 iterations 5
Cbc0038I Pass  22: suminf.    0.34559 (2) obj. -29.1044 iterations 3
Cbc0038I Pass  23: suminf.    0.22051 (1) obj. -29.1044 iterations 2
Cbc0038I Pass  24: suminf.    0.38889 (1) obj. -32.5525 iterations 1
Cbc0038I Pass  25: suminf.    0.34391 (3) obj. -29.1044 iterations 6
Cbc0038I Pass  26: suminf.    0.34391 (3) obj. -29.1044 iterations 0
Cbc0038I Pass  27: suminf.    1.59344 (6) obj. -29.1044 iterations 4
Cbc0038I Pass  28: suminf.    2.05912 (6) obj. -29.1044 iterations 3
Cbc0038I Pass  29: suminf.    2.05786 (6) obj. -29.1044 iterations 11
Cbc0038I Pass  30: suminf.    0.59323 (5) obj. -29.1044 iterations 4
Cbc0038I Pass  31: suminf.    0.59323 (5) obj. -29.1044 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -20.0171 to -26.0404 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.3614
Cbc0038I Pass  31: suminf.    0.16667 (1) obj. -37.0824 iterations 0
Cbc0038I Pass  32: suminf.    0.25071 (1) obj. -35.3614 iterations 2
Cbc0038I Pass  33: suminf.    1.76095 (5) obj. -35.3614 iterations 9
Cbc0038I Pass  34: suminf.    1.44142 (4) obj. -35.3614 iterations 2
Cbc0038I Pass  35: suminf.    1.44142 (4) obj. -35.3614 iterations 0
Cbc0038I Pass  36: suminf.    0.60593 (3) obj. -35.3614 iterations 9
Cbc0038I Pass  37: suminf.    0.61810 (3) obj. -35.3614 iterations 2
Cbc0038I Pass  38: suminf.    0.60698 (3) obj. -35.3614 iterations 2
Cbc0038I Pass  39: suminf.    0.81661 (4) obj. -35.3614 iterations 4
Cbc0038I Pass  40: suminf.    0.81661 (4) obj. -35.3614 iterations 0
Cbc0038I Pass  41: suminf.    1.42131 (4) obj. -35.3614 iterations 4
Cbc0038I Pass  42: suminf.    1.00301 (4) obj. -35.3614 iterations 1
Cbc0038I Pass  43: suminf.    0.68955 (3) obj. -35.3614 iterations 2
Cbc0038I Pass  44: suminf.    0.91336 (5) obj. -35.3614 iterations 3
Cbc0038I Pass  45: suminf.    0.73864 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  46: suminf.    2.06155 (7) obj. -35.3614 iterations 7
Cbc0038I Pass  47: suminf.    0.97536 (5) obj. -35.3614 iterations 7
Cbc0038I Pass  48: suminf.    0.64423 (4) obj. -35.3614 iterations 1
Cbc0038I Pass  49: suminf.    1.36690 (4) obj. -35.3614 iterations 7
Cbc0038I Pass  50: suminf.    1.36690 (4) obj. -35.3614 iterations 0
Cbc0038I Pass  51: suminf.    0.68213 (3) obj. -35.3614 iterations 5
Cbc0038I Pass  52: suminf.    0.63484 (4) obj. -35.3614 iterations 2
Cbc0038I Pass  53: suminf.    1.67468 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  54: suminf.    1.67468 (4) obj. -35.3614 iterations 0
Cbc0038I Pass  55: suminf.    2.06852 (7) obj. -35.3614 iterations 5
Cbc0038I Pass  56: suminf.    1.09325 (3) obj. -35.3614 iterations 8
Cbc0038I Pass  57: suminf.    0.71469 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  58: suminf.    1.04437 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  59: suminf.    0.63484 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  60: suminf.    1.67468 (4) obj. -35.3614 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.0404 - took 0.06 seconds
Cbc0012I Integer solution of -26.04043 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 22 rows 15 columns
Cbc0031I 9 added rows had average density of 18.333333
Cbc0013I At root node, 9 cuts changed objective from -60.389337 to -40.620981 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1049 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 408 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0016I Integer solution of -28.63919 found by strong branching after 1623 iterations and 3 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -28.63919, took 1714 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 62 times (421 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-18) rows, 36 (-8) columns and 244 (-116) elements
Clp1000I sum of infeasibilities 3.7752e-08 - average 1.34829e-09, 8 fixed columns
Coin0506I Presolve 22 (-6) rows, 28 (-8) columns and 152 (-92) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 1.329839 - largest nonzero change 2.3544004e-05 ( 0.001451563%) - largest zero change 2.5385463e-05
Clp0000I Optimal - objective value 71.238075
Clp0000I Optimal - objective value 71.238075
Coin0511I After Postsolve, objective 71.238075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6045334 - largest nonzero change 2.3065251e-05 ( 0.001451563%) - largest zero change 2.546561e-05
Clp0000I Optimal - objective value 77.159869
Clp0000I Optimal - objective value 77.159869
Clp0000I Optimal - objective value 77.159869
Coin0511I After Postsolve, objective 77.159869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.15986851 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 39 columns (39 integer (39 of which binary)) and 277 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.757%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 3.762
Cbc0038I Pass   1: suminf.    1.24548 (7) obj. -37.7327 iterations 6
Cbc0038I Pass   2: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Solution found of -13.2609
Cbc0038I Rounding solution of -18.8719 is better than previous of -13.2609

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 39 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.609
Cbc0038I Pass   3: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Pass   4: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Pass   5: suminf.    0.46888 (2) obj. -22.609 iterations 9
Cbc0038I Pass   6: suminf.    0.55245 (2) obj. -37.0371 iterations 2
Cbc0038I Pass   7: suminf.    0.09091 (1) obj. -27.8063 iterations 1
Cbc0038I Pass   8: suminf.    0.87103 (5) obj. -24.8857 iterations 7
Cbc0038I Pass   9: suminf.    0.32620 (2) obj. -24.1004 iterations 2
Cbc0038I Pass  10: suminf.    0.84388 (2) obj. -22.609 iterations 4
Cbc0038I Pass  11: suminf.    0.55245 (2) obj. -31.0371 iterations 2
Cbc0038I Pass  12: suminf.    0.13105 (2) obj. -22.609 iterations 2
Cbc0038I Pass  13: suminf.    0.84388 (2) obj. -22.609 iterations 3
Cbc0038I Pass  14: suminf.    1.94035 (7) obj. -22.609 iterations 9
Cbc0038I Pass  15: suminf.    0.86288 (5) obj. -22.609 iterations 4
Cbc0038I Pass  16: suminf.    0.70420 (2) obj. -22.609 iterations 5
Cbc0038I Pass  17: suminf.    0.43105 (2) obj. -22.609 iterations 2
Cbc0038I Pass  18: suminf.    1.05768 (5) obj. -22.609 iterations 11
Cbc0038I Pass  19: suminf.    0.90801 (4) obj. -26.6053 iterations 1
Cbc0038I Pass  20: suminf.    0.43887 (2) obj. -22.609 iterations 8
Cbc0038I Pass  21: suminf.    0.18182 (1) obj. -25.3372 iterations 3
Cbc0038I Pass  22: suminf.    0.43887 (2) obj. -22.609 iterations 3
Cbc0038I Pass  23: suminf.    1.13346 (6) obj. -22.609 iterations 11
Cbc0038I Pass  24: suminf.    0.92670 (5) obj. -22.9684 iterations 4
Cbc0038I Pass  25: suminf.    0.91952 (3) obj. -22.609 iterations 8
Cbc0038I Pass  26: suminf.    0.66200 (3) obj. -22.609 iterations 1
Cbc0038I Pass  27: suminf.    0.98805 (3) obj. -22.609 iterations 2
Cbc0038I Pass  28: suminf.    0.56643 (2) obj. -28.6364 iterations 2
Cbc0038I Pass  29: suminf.    0.82608 (2) obj. -22.609 iterations 3
Cbc0038I Pass  30: suminf.    0.80951 (3) obj. -22.609 iterations 2
Cbc0038I Pass  31: suminf.    0.65619 (2) obj. -22.609 iterations 4
Cbc0038I Pass  32: suminf.    0.61932 (2) obj. -23.3465 iterations 2
Cbc0038I Rounding solution of -25.4457 is better than previous of -18.8719

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 39 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -31.6051
Cbc0038I Pass  32: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Pass  33: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Pass  34: suminf.    0.89195 (2) obj. -31.6051 iterations 9
Cbc0038I Pass  35: suminf.    0.28085 (2) obj. -31.6051 iterations 2
Cbc0038I Pass  36: suminf.    0.89195 (2) obj. -31.6051 iterations 2
Cbc0038I Pass  37: suminf.    1.56121 (8) obj. -31.6051 iterations 6
Cbc0038I Pass  38: suminf.    1.55179 (7) obj. -31.6051 iterations 1
Cbc0038I Pass  39: suminf.    0.55245 (2) obj. -37.0371 iterations 6
Cbc0038I Pass  40: suminf.    1.28104 (7) obj. -31.6051 iterations 10
Cbc0038I Pass  41: suminf.    1.07424 (6) obj. -31.6051 iterations 3
Cbc0038I Pass  42: suminf.    0.60602 (3) obj. -31.6051 iterations 8
Cbc0038I Pass  43: suminf.    0.60602 (3) obj. -31.6051 iterations 0
Cbc0038I Pass  44: suminf.    0.67143 (2) obj. -31.6051 iterations 5
Cbc0038I Pass  45: suminf.    0.09091 (1) obj. -32.5858 iterations 3
Cbc0038I Pass  46: suminf.    1.13745 (10) obj. -31.6051 iterations 10
Cbc0038I Pass  47: suminf.    0.85153 (5) obj. -31.6051 iterations 3
Cbc0038I Pass  48: suminf.    0.46047 (3) obj. -31.6051 iterations 5
Cbc0038I Pass  49: suminf.    0.46047 (3) obj. -31.6051 iterations 0
Cbc0038I Pass  50: suminf.    0.59720 (3) obj. -31.6051 iterations 2
Cbc0038I Pass  51: suminf.    0.65849 (3) obj. -31.6051 iterations 7
Cbc0038I Pass  52: suminf.    0.52360 (3) obj. -33.7633 iterations 1
Cbc0038I Pass  53: suminf.    0.47880 (2) obj. -31.6051 iterations 3
Cbc0038I Pass  54: suminf.    0.39860 (2) obj. -32.8883 iterations 1
Cbc0038I Pass  55: suminf.    1.15749 (5) obj. -31.6051 iterations 3
Cbc0038I Pass  56: suminf.    0.87809 (4) obj. -36.0754 iterations 1
Cbc0038I Pass  57: suminf.    1.33723 (6) obj. -31.6051 iterations 8
Cbc0038I Pass  58: suminf.    1.33723 (6) obj. -31.6051 iterations 0
Cbc0038I Pass  59: suminf.    0.58791 (3) obj. -31.6051 iterations 7
Cbc0038I Pass  60: suminf.    0.58238 (7) obj. -31.6051 iterations 3
Cbc0038I Pass  61: suminf.    0.93211 (3) obj. -31.6051 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 39 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25.4457 - took 0.02 seconds
Cbc0012I Integer solution of -25.44572 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 31 rows 39 columns, reduced to 3 rows 4 columns
Cbc0031I 18 added rows had average density of 11.333333
Cbc0013I At root node, 18 cuts changed objective from -56.242171 to -29.229657 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1013 row cuts average 3.5 elements, 9 column cuts (9 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 462 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 80 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 221 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.827 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.44572 best solution, best possible -29.229503 (1.61 seconds)
Cbc0012I Integer solution of -25.62818 found by rounding after 1185 iterations and 3 nodes (1.71 seconds)
Cbc0012I Integer solution of -26.04043 found by rounding after 1215 iterations and 5 nodes (1.80 seconds)
Cbc0012I Integer solution of -28.63919 found by DiveCoefficient after 1238 iterations and 8 nodes (1.86 seconds)
Cbc0001I Search completed - best objective -28.63919, took 1295 iterations and 10 nodes (1.87 seconds)
Cbc0032I Strong branching done 88 times (368 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.20   (Wallclock seconds):       1.88

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 22 (-2) columns and 104 (-25) elements
Clp1000I sum of infeasibilities 1.80761e-05 - average 5.31649e-07, 2 fixed columns
Coin0506I Presolve 31 (-3) rows, 20 (-2) columns and 95 (-9) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 60.389337
Clp0000I Optimal - objective value 60.389337
Coin0511I After Postsolve, objective 60.389337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.389337
Clp0000I Optimal - objective value 60.389337
Clp0000I Optimal - objective value 60.389337
Coin0511I After Postsolve, objective 60.389337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.38933676 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 22 columns (21 integer (21 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.232%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.93989
Cbc0038I Pass   1: suminf.    0.16667 (1) obj. -37.0824 iterations 11
Cbc0038I Solution found of -20.0171
Cbc0038I Relaxing continuous gives -20.0171
Cbc0038I Rounding solution of -25.6282 is better than previous of -20.0171

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29.1044
Cbc0038I Pass   2: suminf.    0.16667 (1) obj. -37.0824 iterations 0
Cbc0038I Pass   3: suminf.    0.44375 (1) obj. -29.1044 iterations 2
Cbc0038I Pass   4: suminf.    1.15786 (3) obj. -29.1044 iterations 5
Cbc0038I Pass   5: suminf.    0.66074 (2) obj. -29.1044 iterations 2
Cbc0038I Pass   6: suminf.    0.48030 (2) obj. -29.1044 iterations 6
Cbc0038I Pass   7: suminf.    0.38194 (1) obj. -29.1044 iterations 2
Cbc0038I Pass   8: suminf.    0.16975 (1) obj. -29.1044 iterations 2
Cbc0038I Pass   9: suminf.    0.22222 (1) obj. -30.1789 iterations 1
Cbc0038I Pass  10: suminf.    1.14208 (5) obj. -29.1044 iterations 7
Cbc0038I Pass  11: suminf.    1.12533 (5) obj. -29.1044 iterations 2
Cbc0038I Pass  12: suminf.    1.34522 (4) obj. -29.1044 iterations 9
Cbc0038I Pass  13: suminf.    0.59323 (5) obj. -29.1044 iterations 3
Cbc0038I Pass  14: suminf.    1.72762 (5) obj. -29.1044 iterations 8
Cbc0038I Pass  15: suminf.    1.62177 (4) obj. -29.1044 iterations 1
Cbc0038I Pass  16: suminf.    1.62177 (4) obj. -29.1044 iterations 0
Cbc0038I Pass  17: suminf.    1.53985 (5) obj. -29.1044 iterations 5
Cbc0038I Pass  18: suminf.    0.88278 (3) obj. -29.1044 iterations 3
Cbc0038I Pass  19: suminf.    1.27884 (3) obj. -29.1044 iterations 6
Cbc0038I Pass  20: suminf.    0.47082 (3) obj. -29.1044 iterations 2
Cbc0038I Pass  21: suminf.    1.19590 (3) obj. -29.1044 iterations 5
Cbc0038I Pass  22: suminf.    0.34559 (2) obj. -29.1044 iterations 3
Cbc0038I Pass  23: suminf.    0.22051 (1) obj. -29.1044 iterations 2
Cbc0038I Pass  24: suminf.    0.38889 (1) obj. -32.5525 iterations 1
Cbc0038I Pass  25: suminf.    0.34391 (3) obj. -29.1044 iterations 6
Cbc0038I Pass  26: suminf.    0.34391 (3) obj. -29.1044 iterations 0
Cbc0038I Pass  27: suminf.    1.59344 (6) obj. -29.1044 iterations 4
Cbc0038I Pass  28: suminf.    2.05912 (6) obj. -29.1044 iterations 3
Cbc0038I Pass  29: suminf.    2.05786 (6) obj. -29.1044 iterations 11
Cbc0038I Pass  30: suminf.    0.59323 (5) obj. -29.1044 iterations 4
Cbc0038I Pass  31: suminf.    0.59323 (5) obj. -29.1044 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -20.0171 to -26.0404 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.3614
Cbc0038I Pass  31: suminf.    0.16667 (1) obj. -37.0824 iterations 0
Cbc0038I Pass  32: suminf.    0.25071 (1) obj. -35.3614 iterations 2
Cbc0038I Pass  33: suminf.    1.76095 (5) obj. -35.3614 iterations 9
Cbc0038I Pass  34: suminf.    1.44142 (4) obj. -35.3614 iterations 2
Cbc0038I Pass  35: suminf.    1.44142 (4) obj. -35.3614 iterations 0
Cbc0038I Pass  36: suminf.    0.60593 (3) obj. -35.3614 iterations 9
Cbc0038I Pass  37: suminf.    0.61810 (3) obj. -35.3614 iterations 2
Cbc0038I Pass  38: suminf.    0.60698 (3) obj. -35.3614 iterations 2
Cbc0038I Pass  39: suminf.    0.81661 (4) obj. -35.3614 iterations 4
Cbc0038I Pass  40: suminf.    0.81661 (4) obj. -35.3614 iterations 0
Cbc0038I Pass  41: suminf.    1.42131 (4) obj. -35.3614 iterations 4
Cbc0038I Pass  42: suminf.    1.00301 (4) obj. -35.3614 iterations 1
Cbc0038I Pass  43: suminf.    0.68955 (3) obj. -35.3614 iterations 2
Cbc0038I Pass  44: suminf.    0.91336 (5) obj. -35.3614 iterations 3
Cbc0038I Pass  45: suminf.    0.73864 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  46: suminf.    2.06155 (7) obj. -35.3614 iterations 7
Cbc0038I Pass  47: suminf.    0.97536 (5) obj. -35.3614 iterations 7
Cbc0038I Pass  48: suminf.    0.64423 (4) obj. -35.3614 iterations 1
Cbc0038I Pass  49: suminf.    1.36690 (4) obj. -35.3614 iterations 7
Cbc0038I Pass  50: suminf.    1.36690 (4) obj. -35.3614 iterations 0
Cbc0038I Pass  51: suminf.    0.68213 (3) obj. -35.3614 iterations 5
Cbc0038I Pass  52: suminf.    0.63484 (4) obj. -35.3614 iterations 2
Cbc0038I Pass  53: suminf.    1.67468 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  54: suminf.    1.67468 (4) obj. -35.3614 iterations 0
Cbc0038I Pass  55: suminf.    2.06852 (7) obj. -35.3614 iterations 5
Cbc0038I Pass  56: suminf.    1.09325 (3) obj. -35.3614 iterations 8
Cbc0038I Pass  57: suminf.    0.71469 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  58: suminf.    1.04437 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  59: suminf.    0.63484 (4) obj. -35.3614 iterations 3
Cbc0038I Pass  60: suminf.    1.67468 (4) obj. -35.3614 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 22 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.0404 - took 0.03 seconds
Cbc0012I Integer solution of -26.04043 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 22 columns, reduced to 22 rows 15 columns
Cbc0031I 9 added rows had average density of 18.333333
Cbc0013I At root node, 9 cuts changed objective from -60.389337 to -40.620981 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1049 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 408 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0016I Integer solution of -28.63919 found by strong branching after 1623 iterations and 3 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -28.63919, took 1714 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 62 times (421 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 28 (-19) rows, 36 (-9) columns and 244 (-117) elements
Clp1000I sum of infeasibilities 3.7752e-08 - average 1.34829e-09, 8 fixed columns
Coin0506I Presolve 22 (-6) rows, 28 (-8) columns and 152 (-92) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 1.329839 - largest nonzero change 2.3544004e-05 ( 0.001451563%) - largest zero change 2.5385463e-05
Clp0000I Optimal - objective value 71.238075
Clp0000I Optimal - objective value 71.238075
Coin0511I After Postsolve, objective 71.238075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6045334 - largest nonzero change 2.3065251e-05 ( 0.001451563%) - largest zero change 2.546561e-05
Clp0000I Optimal - objective value 77.159869
Clp0000I Optimal - objective value 77.159869
Clp0000I Optimal - objective value 77.159869
Coin0511I After Postsolve, objective 77.159869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.15986851 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 39 columns (39 integer (39 of which binary)) and 277 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.757%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 3.762
Cbc0038I Pass   1: suminf.    1.24548 (7) obj. -37.7327 iterations 6
Cbc0038I Pass   2: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Solution found of -13.2609
Cbc0038I Rounding solution of -18.8719 is better than previous of -13.2609

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 39 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.609
Cbc0038I Pass   3: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Pass   4: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Pass   5: suminf.    0.46888 (2) obj. -22.609 iterations 9
Cbc0038I Pass   6: suminf.    0.55245 (2) obj. -37.0371 iterations 2
Cbc0038I Pass   7: suminf.    0.09091 (1) obj. -27.8063 iterations 1
Cbc0038I Pass   8: suminf.    0.87103 (5) obj. -24.8857 iterations 7
Cbc0038I Pass   9: suminf.    0.32620 (2) obj. -24.1004 iterations 2
Cbc0038I Pass  10: suminf.    0.84388 (2) obj. -22.609 iterations 4
Cbc0038I Pass  11: suminf.    0.55245 (2) obj. -31.0371 iterations 2
Cbc0038I Pass  12: suminf.    0.13105 (2) obj. -22.609 iterations 2
Cbc0038I Pass  13: suminf.    0.84388 (2) obj. -22.609 iterations 3
Cbc0038I Pass  14: suminf.    1.94035 (7) obj. -22.609 iterations 9
Cbc0038I Pass  15: suminf.    0.86288 (5) obj. -22.609 iterations 4
Cbc0038I Pass  16: suminf.    0.70420 (2) obj. -22.609 iterations 5
Cbc0038I Pass  17: suminf.    0.43105 (2) obj. -22.609 iterations 2
Cbc0038I Pass  18: suminf.    1.05768 (5) obj. -22.609 iterations 11
Cbc0038I Pass  19: suminf.    0.90801 (4) obj. -26.6053 iterations 1
Cbc0038I Pass  20: suminf.    0.43887 (2) obj. -22.609 iterations 8
Cbc0038I Pass  21: suminf.    0.18182 (1) obj. -25.3372 iterations 3
Cbc0038I Pass  22: suminf.    0.43887 (2) obj. -22.609 iterations 3
Cbc0038I Pass  23: suminf.    1.13346 (6) obj. -22.609 iterations 11
Cbc0038I Pass  24: suminf.    0.92670 (5) obj. -22.9684 iterations 4
Cbc0038I Pass  25: suminf.    0.91952 (3) obj. -22.609 iterations 8
Cbc0038I Pass  26: suminf.    0.66200 (3) obj. -22.609 iterations 1
Cbc0038I Pass  27: suminf.    0.98805 (3) obj. -22.609 iterations 2
Cbc0038I Pass  28: suminf.    0.56643 (2) obj. -28.6364 iterations 2
Cbc0038I Pass  29: suminf.    0.82608 (2) obj. -22.609 iterations 3
Cbc0038I Pass  30: suminf.    0.80951 (3) obj. -22.609 iterations 2
Cbc0038I Pass  31: suminf.    0.65619 (2) obj. -22.609 iterations 4
Cbc0038I Pass  32: suminf.    0.61932 (2) obj. -23.3465 iterations 2
Cbc0038I Rounding solution of -25.4457 is better than previous of -18.8719

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 39 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -31.6051
Cbc0038I Pass  32: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Pass  33: suminf.    1.24548 (7) obj. -37.7327 iterations 0
Cbc0038I Pass  34: suminf.    0.89195 (2) obj. -31.6051 iterations 9
Cbc0038I Pass  35: suminf.    0.28085 (2) obj. -31.6051 iterations 2
Cbc0038I Pass  36: suminf.    0.89195 (2) obj. -31.6051 iterations 2
Cbc0038I Pass  37: suminf.    1.56121 (8) obj. -31.6051 iterations 6
Cbc0038I Pass  38: suminf.    1.55179 (7) obj. -31.6051 iterations 1
Cbc0038I Pass  39: suminf.    0.55245 (2) obj. -37.0371 iterations 6
Cbc0038I Pass  40: suminf.    1.28104 (7) obj. -31.6051 iterations 10
Cbc0038I Pass  41: suminf.    1.07424 (6) obj. -31.6051 iterations 3
Cbc0038I Pass  42: suminf.    0.60602 (3) obj. -31.6051 iterations 8
Cbc0038I Pass  43: suminf.    0.60602 (3) obj. -31.6051 iterations 0
Cbc0038I Pass  44: suminf.    0.67143 (2) obj. -31.6051 iterations 5
Cbc0038I Pass  45: suminf.    0.09091 (1) obj. -32.5858 iterations 3
Cbc0038I Pass  46: suminf.    1.13745 (10) obj. -31.6051 iterations 10
Cbc0038I Pass  47: suminf.    0.85153 (5) obj. -31.6051 iterations 3
Cbc0038I Pass  48: suminf.    0.46047 (3) obj. -31.6051 iterations 5
Cbc0038I Pass  49: suminf.    0.46047 (3) obj. -31.6051 iterations 0
Cbc0038I Pass  50: suminf.    0.59720 (3) obj. -31.6051 iterations 2
Cbc0038I Pass  51: suminf.    0.65849 (3) obj. -31.6051 iterations 7
Cbc0038I Pass  52: suminf.    0.52360 (3) obj. -33.7633 iterations 1
Cbc0038I Pass  53: suminf.    0.47880 (2) obj. -31.6051 iterations 3
Cbc0038I Pass  54: suminf.    0.39860 (2) obj. -32.8883 iterations 1
Cbc0038I Pass  55: suminf.    1.15749 (5) obj. -31.6051 iterations 3
Cbc0038I Pass  56: suminf.    0.87809 (4) obj. -36.0754 iterations 1
Cbc0038I Pass  57: suminf.    1.33723 (6) obj. -31.6051 iterations 8
Cbc0038I Pass  58: suminf.    1.33723 (6) obj. -31.6051 iterations 0
Cbc0038I Pass  59: suminf.    0.58791 (3) obj. -31.6051 iterations 7
Cbc0038I Pass  60: suminf.    0.58238 (7) obj. -31.6051 iterations 3
Cbc0038I Pass  61: suminf.    0.93211 (3) obj. -31.6051 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 39 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -25.4457 - took 0.02 seconds
Cbc0012I Integer solution of -25.44572 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 31 rows 39 columns, reduced to 3 rows 4 columns
Cbc0031I 18 added rows had average density of 11.333333
Cbc0013I At root node, 18 cuts changed objective from -56.242171 to -29.229657 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1013 row cuts average 3.5 elements, 9 column cuts (9 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 462 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 80 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 221 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.811 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.44572 best solution, best possible -29.229503 (1.68 seconds)
Cbc0012I Integer solution of -25.62818 found by rounding after 1185 iterations and 3 nodes (1.78 seconds)
Cbc0012I Integer solution of -26.04043 found by rounding after 1215 iterations and 5 nodes (1.86 seconds)
Cbc0012I Integer solution of -28.63919 found by DiveCoefficient after 1238 iterations and 8 nodes (1.93 seconds)
Cbc0001I Search completed - best objective -28.63919, took 1295 iterations and 10 nodes (1.94 seconds)
Cbc0032I Strong branching done 88 times (368 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.95

