Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 3.25188e-05 - average 2.46355e-07, 8 fixed columns
Coin0506I Presolve 117 (-15) rows, 68 (-8) columns and 362 (-46) elements
Clp0029I End of values pass after 68 iterations
Clp0000I Optimal - objective value 49.795734
Clp0000I Optimal - objective value 49.795734
Coin0511I After Postsolve, objective 49.795734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.795734
Clp0000I Optimal - objective value 49.795734
Clp0000I Optimal - objective value 49.795734
Coin0511I After Postsolve, objective 49.795734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.7957345 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.32482
Cbc0038I Solution found of 0.556489
Cbc0038I Relaxing continuous gives -7.64511
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 61 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -7.64511 to -21.2797 (0.04 seconds)
Cbc0038I Round again with cutoff of -24.1314
Cbc0038I Pass   1: suminf.    2.52716 (30) obj. -24.1314 iterations 27
Cbc0038I Pass   2: suminf.    2.65349 (7) obj. -24.1314 iterations 39
Cbc0038I Pass   3: suminf.    1.56750 (5) obj. -24.1314 iterations 11
Cbc0038I Pass   4: suminf.    1.37663 (5) obj. -24.1314 iterations 4
Cbc0038I Pass   5: suminf.    1.37663 (5) obj. -24.1314 iterations 1
Cbc0038I Pass   6: suminf.    1.53976 (5) obj. -24.1314 iterations 12
Cbc0038I Pass   7: suminf.    1.08494 (4) obj. -24.1314 iterations 5
Cbc0038I Pass   8: suminf.    0.99687 (5) obj. -24.1314 iterations 3
Cbc0038I Pass   9: suminf.    2.32574 (6) obj. -24.1314 iterations 13
Cbc0038I Pass  10: suminf.    1.41564 (5) obj. -24.1314 iterations 6
Cbc0038I Pass  11: suminf.    1.41357 (6) obj. -24.1314 iterations 3
Cbc0038I Pass  12: suminf.    1.49721 (6) obj. -24.1314 iterations 10
Cbc0038I Pass  13: suminf.    1.31732 (6) obj. -24.1314 iterations 6
Cbc0038I Pass  14: suminf.    1.73845 (5) obj. -24.1314 iterations 13
Cbc0038I Pass  15: suminf.    1.17564 (5) obj. -24.1314 iterations 2
Cbc0038I Pass  16: suminf.    1.17564 (5) obj. -24.1314 iterations 3
Cbc0038I Pass  17: suminf.    1.51084 (5) obj. -24.1314 iterations 5
Cbc0038I Pass  18: suminf.    1.51084 (5) obj. -24.1314 iterations 0
Cbc0038I Pass  19: suminf.    1.73845 (5) obj. -24.1314 iterations 6
Cbc0038I Pass  20: suminf.    1.17564 (5) obj. -24.1314 iterations 2
Cbc0038I Pass  21: suminf.    1.17564 (5) obj. -24.1314 iterations 3
Cbc0038I Pass  22: suminf.    1.51084 (5) obj. -24.1314 iterations 5
Cbc0038I Pass  23: suminf.    1.51084 (5) obj. -24.1314 iterations 0
Cbc0038I Pass  24: suminf.    1.73845 (5) obj. -24.1314 iterations 6
Cbc0038I Pass  25: suminf.    1.17564 (5) obj. -24.1314 iterations 2
Cbc0038I Pass  26: suminf.    1.17564 (5) obj. -24.1314 iterations 3
Cbc0038I Pass  27: suminf.    1.51084 (5) obj. -24.1314 iterations 5
Cbc0038I Pass  28: suminf.    1.51084 (5) obj. -24.1314 iterations 0
Cbc0038I Pass  29: suminf.    1.73845 (5) obj. -24.1314 iterations 6
Cbc0038I Pass  30: suminf.    1.17564 (5) obj. -24.1314 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 72 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -21.2797 - took 0.07 seconds
Cbc0012I Integer solution of -21.27966 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 61 rows 37 columns
Cbc0031I 23 added rows had average density of 63.652174
Cbc0013I At root node, 23 cuts changed objective from -49.795734 to -43.386918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10021 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2234 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 54 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.27966 best solution, best possible -43.386918 (0.94 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 35 rows 24 columns
Cbc0012I Integer solution of -21.40477 found by RINS after 7608 iterations and 41 nodes (1.22 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 18 rows 16 columns
Cbc0001I Search completed - best objective -21.40477, took 10931 iterations and 164 nodes (1.42 seconds)
Cbc0032I Strong branching done 1412 times (19324 iterations), fathomed 20 nodes and fixed 71 variables
Cbc0035I Maximum depth 30, 538 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 115 (-37) columns and 1896 (-1407) elements
Clp1000I sum of infeasibilities 1.65169e-07 - average 1.70277e-09, 19 fixed columns
Coin0506I Presolve 81 (-16) rows, 96 (-19) columns and 1374 (-522) elements
Clp0006I 0  Obj 48.818439 Dual inf 7.1043797 (96)
Clp0029I End of values pass after 96 iterations
Clp0014I Perturbing problem by 0.001% of 1.8226014 - largest nonzero change 2.6920437e-05 ( 0.0016580886%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 60.748523
Clp0000I Optimal - objective value 60.748523
Coin0511I After Postsolve, objective 60.748523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.748523
Clp0000I Optimal - objective value 60.748523
Clp0000I Optimal - objective value 60.748523
Clp0000I Optimal - objective value 60.748523
Coin0511I After Postsolve, objective 60.748523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.74852311 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 118 columns (118 integer (118 of which binary)) and 1912 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.372%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.64605
Cbc0038I Pass   1: suminf.    3.04586 (33) obj. -45.9735 iterations 16
Cbc0038I Pass   2: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass   3: suminf.    1.92851 (23) obj. -37.0908 iterations 12
Cbc0038I Solution found of -2.12134
Cbc0038I Rounding solution of -7.20394 is better than previous of -2.12134

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -11.5755
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass   5: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass   6: suminf.    0.23925 (5) obj. -15.6716 iterations 30
Cbc0038I Pass   7: suminf.    0.33393 (1) obj. -11.5755 iterations 17
Cbc0038I Pass   8: suminf.    0.33393 (1) obj. -11.5755 iterations 0
Cbc0038I Pass   9: suminf.    0.37037 (1) obj. -14.474 iterations 4
Cbc0038I Pass  10: suminf.    1.12584 (11) obj. -11.5755 iterations 23
Cbc0038I Pass  11: suminf.    0.35628 (7) obj. -12.5431 iterations 9
Cbc0038I Pass  12: suminf.    0.49237 (5) obj. -11.5755 iterations 23
Cbc0038I Pass  13: suminf.    0.49237 (5) obj. -11.5755 iterations 0
Cbc0038I Pass  14: suminf.    1.28721 (4) obj. -11.5755 iterations 7
Cbc0038I Pass  15: suminf.    0.42047 (2) obj. -11.5755 iterations 5
Cbc0038I Pass  16: suminf.    0.24437 (1) obj. -11.5755 iterations 11
Cbc0038I Pass  17: suminf.    0.25926 (1) obj. -11.7151 iterations 3
Cbc0038I Pass  18: suminf.    2.68113 (17) obj. -11.5755 iterations 39
Cbc0038I Pass  19: suminf.    2.16151 (15) obj. -11.5755 iterations 18
Cbc0038I Pass  20: suminf.    1.49155 (8) obj. -11.5755 iterations 25
Cbc0038I Pass  21: suminf.    1.49155 (8) obj. -11.5755 iterations 0
Cbc0038I Pass  22: suminf.    0.44796 (4) obj. -11.5755 iterations 17
Cbc0038I Pass  23: suminf.    0.00092 (1) obj. -11.5755 iterations 6
Cbc0038I Pass  24: suminf.    0.00092 (1) obj. -11.5755 iterations 0
Cbc0038I Pass  25: suminf.    1.61255 (13) obj. -11.5755 iterations 30
Cbc0038I Pass  26: suminf.    1.23167 (12) obj. -11.5755 iterations 2
Cbc0038I Pass  27: suminf.    0.50748 (4) obj. -11.5755 iterations 30
Cbc0038I Pass  28: suminf.    0.07576 (1) obj. -12.3396 iterations 9
Cbc0038I Pass  29: suminf.    0.51561 (4) obj. -11.5755 iterations 11
Cbc0038I Pass  30: suminf.    1.56842 (9) obj. -11.5755 iterations 27
Cbc0038I Pass  31: suminf.    0.61603 (7) obj. -11.5755 iterations 9
Cbc0038I Pass  32: suminf.    1.13917 (5) obj. -11.5755 iterations 18
Cbc0038I Pass  33: suminf.    1.13917 (5) obj. -11.5755 iterations 0
Cbc0038I Rounding solution of -15.1716 is better than previous of -7.20394

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 48 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -15.1716 to -21.2797 (0.11 seconds)
Cbc0038I Round again with cutoff of -27.2075
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass  34: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass  35: suminf.    2.29099 (19) obj. -27.2075 iterations 38
Cbc0038I Pass  36: suminf.    2.29099 (19) obj. -27.2075 iterations 2
Cbc0038I Pass  37: suminf.    2.86767 (18) obj. -27.2075 iterations 27
Cbc0038I Pass  38: suminf.    2.46226 (21) obj. -27.2075 iterations 5
Cbc0038I Pass  39: suminf.    2.20119 (18) obj. -27.2075 iterations 20
Cbc0038I Pass  40: suminf.    2.20171 (17) obj. -27.2075 iterations 4
Cbc0038I Pass  41: suminf.    2.15129 (17) obj. -27.2075 iterations 5
Cbc0038I Pass  42: suminf.    2.15129 (17) obj. -27.2075 iterations 5
Cbc0038I Pass  43: suminf.    2.20171 (17) obj. -27.2075 iterations 11
Cbc0038I Pass  44: suminf.    2.14169 (18) obj. -27.2075 iterations 12
Cbc0038I Pass  45: suminf.    2.02001 (17) obj. -27.2075 iterations 6
Cbc0038I Pass  46: suminf.    2.15129 (17) obj. -27.2075 iterations 12
Cbc0038I Pass  47: suminf.    2.99839 (18) obj. -27.2075 iterations 20
Cbc0038I Pass  48: suminf.    2.43390 (19) obj. -27.2075 iterations 10
Cbc0038I Pass  49: suminf.    2.36468 (16) obj. -27.2075 iterations 16
Cbc0038I Pass  50: suminf.    1.82658 (16) obj. -27.2075 iterations 14
Cbc0038I Pass  51: suminf.    2.23750 (16) obj. -27.2075 iterations 5
Cbc0038I Pass  52: suminf.    2.33522 (18) obj. -27.2075 iterations 24
Cbc0038I Pass  53: suminf.    2.00039 (17) obj. -27.2075 iterations 15
Cbc0038I Pass  54: suminf.    2.23750 (16) obj. -27.2075 iterations 18
Cbc0038I Pass  55: suminf.    2.77053 (21) obj. -27.2075 iterations 20
Cbc0038I Pass  56: suminf.    1.97604 (18) obj. -27.2075 iterations 13
Cbc0038I Pass  57: suminf.    2.13775 (17) obj. -27.2075 iterations 25
Cbc0038I Pass  58: suminf.    2.03849 (17) obj. -27.2075 iterations 5
Cbc0038I Pass  59: suminf.    2.15129 (17) obj. -27.2075 iterations 12
Cbc0038I Pass  60: suminf.    2.15129 (17) obj. -27.2075 iterations 5
Cbc0038I Pass  61: suminf.    2.20171 (17) obj. -27.2075 iterations 8
Cbc0038I Pass  62: suminf.    2.20171 (17) obj. -27.2075 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 54 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -21.2797 - took 0.11 seconds
Cbc0012I Integer solution of -21.27966 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 30 rows 36 columns
Cbc0031I 56 added rows had average density of 43.517857
Cbc0013I At root node, 56 cuts changed objective from -50.918516 to -29.630332 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10991 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 971 row cuts average 107.4 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 584 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1132 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 359 row cuts average 67.5 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 114 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.743 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.27966 best solution, best possible -29.630332 (2.75 seconds)
Cbc0016I Integer solution of -21.33873 found by strong branching after 5466 iterations and 14 nodes (3.45 seconds)
Cbc0010I After 14 nodes, 10 on tree, -21.33873 best solution, best possible -29.630332 (3.45 seconds)
Cbc0010I After 35 nodes, 16 on tree, -21.33873 best solution, best possible -29.630332 (4.16 seconds)
Cbc0012I Integer solution of -21.40477 found by rounding after 5850 iterations and 41 nodes (4.32 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 0 rows 0 columns
Cbc0010I After 62 nodes, 14 on tree, -21.40477 best solution, best possible -29.630332 (4.87 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 60 rows 71 columns
Cbc0010I After 94 nodes, 1 on tree, -21.40477 best solution, best possible -29.172607 (5.76 seconds)
Cbc0010I After 103 nodes, 8 on tree, -21.40477 best solution, best possible -29.172607 (6.49 seconds)
Cbc0010I After 125 nodes, 9 on tree, -21.40477 best solution, best possible -29.172607 (7.20 seconds)
Cbc0010I After 153 nodes, 9 on tree, -21.40477 best solution, best possible -29.172607 (7.92 seconds)
Cbc0010I After 177 nodes, 9 on tree, -21.40477 best solution, best possible -29.172607 (8.63 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 49 rows 59 columns
Cbc0010I After 202 nodes, 8 on tree, -21.40477 best solution, best possible -29.172607 (9.33 seconds)
Cbc0010I After 227 nodes, 2 on tree, -21.40477 best solution, best possible -28.874691 (10.05 seconds)
Cbc0010I After 245 nodes, 7 on tree, -21.40477 best solution, best possible -28.874691 (10.76 seconds)
Cbc0010I After 272 nodes, 4 on tree, -21.40477 best solution, best possible -28.874691 (11.48 seconds)
Cbc0010I After 285 nodes, 2 on tree, -21.40477 best solution, best possible -28.868418 (12.20 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 41 rows 53 columns
Cbc0010I After 300 nodes, 5 on tree, -21.40477 best solution, best possible -28.868418 (12.90 seconds)
Cbc0010I After 333 nodes, 4 on tree, -21.40477 best solution, best possible -28.868418 (13.67 seconds)
Cbc0010I After 365 nodes, 6 on tree, -21.40477 best solution, best possible -28.868418 (14.40 seconds)
Cbc0010I After 395 nodes, 4 on tree, -21.40477 best solution, best possible -28.868418 (15.12 seconds)
Cbc0010I After 413 nodes, 1 on tree, -21.40477 best solution, best possible -28.868418 (15.94 seconds)
Cbc0001I Search completed - best objective -21.40477, took 20085 iterations and 426 nodes (16.54 seconds)
Cbc0032I Strong branching done 3748 times (47792 iterations), fathomed 50 nodes and fixed 56 variables
Cbc0035I Maximum depth 20, 1088 variables fixed on reduced cost
Total time (CPU seconds):       11.08   (Wallclock seconds):       16.56

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 3.25188e-05 - average 2.46355e-07, 8 fixed columns
Coin0506I Presolve 117 (-15) rows, 68 (-8) columns and 362 (-46) elements
Clp0029I End of values pass after 68 iterations
Clp0000I Optimal - objective value 49.795734
Clp0000I Optimal - objective value 49.795734
Coin0511I After Postsolve, objective 49.795734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.795734
Clp0000I Optimal - objective value 49.795734
Clp0000I Optimal - objective value 49.795734
Coin0511I After Postsolve, objective 49.795734, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.7957345 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.32482
Cbc0038I Solution found of 0.556489
Cbc0038I Relaxing continuous gives -7.64511
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 61 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -7.64511 to -21.2797 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.1314
Cbc0038I Pass   1: suminf.    2.52716 (30) obj. -24.1314 iterations 27
Cbc0038I Pass   2: suminf.    2.65349 (7) obj. -24.1314 iterations 39
Cbc0038I Pass   3: suminf.    1.56750 (5) obj. -24.1314 iterations 11
Cbc0038I Pass   4: suminf.    1.37663 (5) obj. -24.1314 iterations 4
Cbc0038I Pass   5: suminf.    1.37663 (5) obj. -24.1314 iterations 1
Cbc0038I Pass   6: suminf.    1.53976 (5) obj. -24.1314 iterations 12
Cbc0038I Pass   7: suminf.    1.08494 (4) obj. -24.1314 iterations 5
Cbc0038I Pass   8: suminf.    0.99687 (5) obj. -24.1314 iterations 3
Cbc0038I Pass   9: suminf.    2.32574 (6) obj. -24.1314 iterations 13
Cbc0038I Pass  10: suminf.    1.41564 (5) obj. -24.1314 iterations 6
Cbc0038I Pass  11: suminf.    1.41357 (6) obj. -24.1314 iterations 3
Cbc0038I Pass  12: suminf.    1.49721 (6) obj. -24.1314 iterations 10
Cbc0038I Pass  13: suminf.    1.31732 (6) obj. -24.1314 iterations 6
Cbc0038I Pass  14: suminf.    1.73845 (5) obj. -24.1314 iterations 13
Cbc0038I Pass  15: suminf.    1.17564 (5) obj. -24.1314 iterations 2
Cbc0038I Pass  16: suminf.    1.17564 (5) obj. -24.1314 iterations 3
Cbc0038I Pass  17: suminf.    1.51084 (5) obj. -24.1314 iterations 5
Cbc0038I Pass  18: suminf.    1.51084 (5) obj. -24.1314 iterations 0
Cbc0038I Pass  19: suminf.    1.73845 (5) obj. -24.1314 iterations 6
Cbc0038I Pass  20: suminf.    1.17564 (5) obj. -24.1314 iterations 2
Cbc0038I Pass  21: suminf.    1.17564 (5) obj. -24.1314 iterations 3
Cbc0038I Pass  22: suminf.    1.51084 (5) obj. -24.1314 iterations 5
Cbc0038I Pass  23: suminf.    1.51084 (5) obj. -24.1314 iterations 0
Cbc0038I Pass  24: suminf.    1.73845 (5) obj. -24.1314 iterations 6
Cbc0038I Pass  25: suminf.    1.17564 (5) obj. -24.1314 iterations 2
Cbc0038I Pass  26: suminf.    1.17564 (5) obj. -24.1314 iterations 3
Cbc0038I Pass  27: suminf.    1.51084 (5) obj. -24.1314 iterations 5
Cbc0038I Pass  28: suminf.    1.51084 (5) obj. -24.1314 iterations 0
Cbc0038I Pass  29: suminf.    1.73845 (5) obj. -24.1314 iterations 6
Cbc0038I Pass  30: suminf.    1.17564 (5) obj. -24.1314 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 72 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -21.2797 - took 0.06 seconds
Cbc0012I Integer solution of -21.27966 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 61 rows 37 columns
Cbc0031I 23 added rows had average density of 63.652174
Cbc0013I At root node, 23 cuts changed objective from -49.795734 to -43.386918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10021 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2234 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 54 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.27966 best solution, best possible -43.386918 (0.74 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 35 rows 24 columns
Cbc0012I Integer solution of -21.40477 found by RINS after 7608 iterations and 41 nodes (0.98 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 18 rows 16 columns
Cbc0001I Search completed - best objective -21.40477, took 10931 iterations and 164 nodes (1.19 seconds)
Cbc0032I Strong branching done 1412 times (19324 iterations), fathomed 20 nodes and fixed 71 variables
Cbc0035I Maximum depth 30, 538 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 115 (-38) columns and 1896 (-1408) elements
Clp1000I sum of infeasibilities 1.65169e-07 - average 1.70277e-09, 19 fixed columns
Coin0506I Presolve 81 (-16) rows, 96 (-19) columns and 1374 (-522) elements
Clp0006I 0  Obj 48.818439 Dual inf 7.1043797 (96)
Clp0029I End of values pass after 96 iterations
Clp0014I Perturbing problem by 0.001% of 1.8226014 - largest nonzero change 2.6920437e-05 ( 0.0016580886%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 60.748523
Clp0000I Optimal - objective value 60.748523
Coin0511I After Postsolve, objective 60.748523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 60.748523
Clp0000I Optimal - objective value 60.748523
Clp0000I Optimal - objective value 60.748523
Clp0000I Optimal - objective value 60.748523
Coin0511I After Postsolve, objective 60.748523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.74852311 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 118 columns (118 integer (118 of which binary)) and 1912 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.372%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.64605
Cbc0038I Pass   1: suminf.    3.04586 (33) obj. -45.9735 iterations 16
Cbc0038I Pass   2: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass   3: suminf.    1.92851 (23) obj. -37.0908 iterations 12
Cbc0038I Solution found of -2.12134
Cbc0038I Rounding solution of -7.20394 is better than previous of -2.12134

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -11.5755
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass   5: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass   6: suminf.    0.23925 (5) obj. -15.6716 iterations 30
Cbc0038I Pass   7: suminf.    0.33393 (1) obj. -11.5755 iterations 17
Cbc0038I Pass   8: suminf.    0.33393 (1) obj. -11.5755 iterations 0
Cbc0038I Pass   9: suminf.    0.37037 (1) obj. -14.474 iterations 4
Cbc0038I Pass  10: suminf.    1.12584 (11) obj. -11.5755 iterations 23
Cbc0038I Pass  11: suminf.    0.35628 (7) obj. -12.5431 iterations 9
Cbc0038I Pass  12: suminf.    0.49237 (5) obj. -11.5755 iterations 23
Cbc0038I Pass  13: suminf.    0.49237 (5) obj. -11.5755 iterations 0
Cbc0038I Pass  14: suminf.    1.28721 (4) obj. -11.5755 iterations 7
Cbc0038I Pass  15: suminf.    0.42047 (2) obj. -11.5755 iterations 5
Cbc0038I Pass  16: suminf.    0.24437 (1) obj. -11.5755 iterations 11
Cbc0038I Pass  17: suminf.    0.25926 (1) obj. -11.7151 iterations 3
Cbc0038I Pass  18: suminf.    2.68113 (17) obj. -11.5755 iterations 39
Cbc0038I Pass  19: suminf.    2.16151 (15) obj. -11.5755 iterations 18
Cbc0038I Pass  20: suminf.    1.49155 (8) obj. -11.5755 iterations 25
Cbc0038I Pass  21: suminf.    1.49155 (8) obj. -11.5755 iterations 0
Cbc0038I Pass  22: suminf.    0.44796 (4) obj. -11.5755 iterations 17
Cbc0038I Pass  23: suminf.    0.00092 (1) obj. -11.5755 iterations 6
Cbc0038I Pass  24: suminf.    0.00092 (1) obj. -11.5755 iterations 0
Cbc0038I Pass  25: suminf.    1.61255 (13) obj. -11.5755 iterations 30
Cbc0038I Pass  26: suminf.    1.23167 (12) obj. -11.5755 iterations 2
Cbc0038I Pass  27: suminf.    0.50748 (4) obj. -11.5755 iterations 30
Cbc0038I Pass  28: suminf.    0.07576 (1) obj. -12.3396 iterations 9
Cbc0038I Pass  29: suminf.    0.51561 (4) obj. -11.5755 iterations 11
Cbc0038I Pass  30: suminf.    1.56842 (9) obj. -11.5755 iterations 27
Cbc0038I Pass  31: suminf.    0.61603 (7) obj. -11.5755 iterations 9
Cbc0038I Pass  32: suminf.    1.13917 (5) obj. -11.5755 iterations 18
Cbc0038I Pass  33: suminf.    1.13917 (5) obj. -11.5755 iterations 0
Cbc0038I Rounding solution of -15.1716 is better than previous of -7.20394

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 48 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -15.1716 to -21.2797 (0.12 seconds)
Cbc0038I Round again with cutoff of -27.2075
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass  34: suminf.    3.04586 (33) obj. -45.9735 iterations 0
Cbc0038I Pass  35: suminf.    2.29099 (19) obj. -27.2075 iterations 38
Cbc0038I Pass  36: suminf.    2.29099 (19) obj. -27.2075 iterations 2
Cbc0038I Pass  37: suminf.    2.86767 (18) obj. -27.2075 iterations 27
Cbc0038I Pass  38: suminf.    2.46226 (21) obj. -27.2075 iterations 5
Cbc0038I Pass  39: suminf.    2.20119 (18) obj. -27.2075 iterations 20
Cbc0038I Pass  40: suminf.    2.20171 (17) obj. -27.2075 iterations 4
Cbc0038I Pass  41: suminf.    2.15129 (17) obj. -27.2075 iterations 5
Cbc0038I Pass  42: suminf.    2.15129 (17) obj. -27.2075 iterations 5
Cbc0038I Pass  43: suminf.    2.20171 (17) obj. -27.2075 iterations 11
Cbc0038I Pass  44: suminf.    2.14169 (18) obj. -27.2075 iterations 12
Cbc0038I Pass  45: suminf.    2.02001 (17) obj. -27.2075 iterations 6
Cbc0038I Pass  46: suminf.    2.15129 (17) obj. -27.2075 iterations 12
Cbc0038I Pass  47: suminf.    2.99839 (18) obj. -27.2075 iterations 20
Cbc0038I Pass  48: suminf.    2.43390 (19) obj. -27.2075 iterations 10
Cbc0038I Pass  49: suminf.    2.36468 (16) obj. -27.2075 iterations 16
Cbc0038I Pass  50: suminf.    1.82658 (16) obj. -27.2075 iterations 14
Cbc0038I Pass  51: suminf.    2.23750 (16) obj. -27.2075 iterations 5
Cbc0038I Pass  52: suminf.    2.33522 (18) obj. -27.2075 iterations 24
Cbc0038I Pass  53: suminf.    2.00039 (17) obj. -27.2075 iterations 15
Cbc0038I Pass  54: suminf.    2.23750 (16) obj. -27.2075 iterations 18
Cbc0038I Pass  55: suminf.    2.77053 (21) obj. -27.2075 iterations 20
Cbc0038I Pass  56: suminf.    1.97604 (18) obj. -27.2075 iterations 13
Cbc0038I Pass  57: suminf.    2.13775 (17) obj. -27.2075 iterations 25
Cbc0038I Pass  58: suminf.    2.03849 (17) obj. -27.2075 iterations 5
Cbc0038I Pass  59: suminf.    2.15129 (17) obj. -27.2075 iterations 12
Cbc0038I Pass  60: suminf.    2.15129 (17) obj. -27.2075 iterations 5
Cbc0038I Pass  61: suminf.    2.20171 (17) obj. -27.2075 iterations 8
Cbc0038I Pass  62: suminf.    2.20171 (17) obj. -27.2075 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 118 columns, reduced to 54 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -21.2797 - took 0.11 seconds
Cbc0012I Integer solution of -21.27966 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 30 rows 36 columns
Cbc0031I 56 added rows had average density of 43.517857
Cbc0013I At root node, 56 cuts changed objective from -50.918516 to -29.630332 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10991 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 971 row cuts average 107.4 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 584 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1132 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 359 row cuts average 67.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 114 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.27966 best solution, best possible -29.630332 (2.49 seconds)
Cbc0016I Integer solution of -21.33873 found by strong branching after 5466 iterations and 14 nodes (3.21 seconds)
Cbc0010I After 14 nodes, 10 on tree, -21.33873 best solution, best possible -29.630332 (3.21 seconds)
Cbc0010I After 33 nodes, 14 on tree, -21.33873 best solution, best possible -29.630332 (3.91 seconds)
Cbc0012I Integer solution of -21.40477 found by rounding after 5850 iterations and 41 nodes (4.12 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 0 rows 0 columns
Cbc0010I After 57 nodes, 16 on tree, -21.40477 best solution, best possible -29.630332 (4.65 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 60 rows 71 columns
Cbc0010I After 94 nodes, 1 on tree, -21.40477 best solution, best possible -29.172607 (5.64 seconds)
Cbc0010I After 102 nodes, 8 on tree, -21.40477 best solution, best possible -29.172607 (6.36 seconds)
Cbc0010I After 121 nodes, 11 on tree, -21.40477 best solution, best possible -29.172607 (7.09 seconds)
Cbc0010I After 144 nodes, 9 on tree, -21.40477 best solution, best possible -29.172607 (7.84 seconds)
Cbc0010I After 172 nodes, 8 on tree, -21.40477 best solution, best possible -29.172607 (8.59 seconds)
Cbc0010I After 197 nodes, 8 on tree, -21.40477 best solution, best possible -29.172607 (9.31 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 49 rows 59 columns
Cbc0010I After 223 nodes, 3 on tree, -21.40477 best solution, best possible -29.172607 (10.07 seconds)
Cbc0010I After 234 nodes, 8 on tree, -21.40477 best solution, best possible -28.874691 (10.79 seconds)
Cbc0010I After 263 nodes, 7 on tree, -21.40477 best solution, best possible -28.874691 (11.49 seconds)
Cbc0010I After 281 nodes, 3 on tree, -21.40477 best solution, best possible -28.874691 (12.29 seconds)
Cbc0010I After 294 nodes, 5 on tree, -21.40477 best solution, best possible -28.868418 (13.03 seconds)
Cbc0038I Full problem 100 rows 118 columns, reduced to 41 rows 53 columns
Cbc0010I After 322 nodes, 8 on tree, -21.40477 best solution, best possible -28.868418 (13.74 seconds)
Cbc0010I After 349 nodes, 7 on tree, -21.40477 best solution, best possible -28.868418 (14.45 seconds)
Cbc0010I After 386 nodes, 5 on tree, -21.40477 best solution, best possible -28.868418 (15.17 seconds)
Cbc0010I After 403 nodes, 4 on tree, -21.40477 best solution, best possible -28.868418 (15.95 seconds)
Cbc0010I After 418 nodes, 3 on tree, -21.40477 best solution, best possible -23.905431 (16.70 seconds)
Cbc0001I Search completed - best objective -21.40477, took 20085 iterations and 426 nodes (16.99 seconds)
Cbc0032I Strong branching done 3748 times (47792 iterations), fathomed 50 nodes and fixed 56 variables
Cbc0035I Maximum depth 20, 1088 variables fixed on reduced cost
Total time (CPU seconds):       11.31   (Wallclock seconds):       17.01

