Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 1.48679e-05 - average 2.56343e-07, 0 fixed columns
Coin0506I Presolve 58 (0) rows, 33 (0) columns and 174 (0) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 89.872765
Clp0000I Optimal - objective value 89.872765
Coin0511I After Postsolve, objective 89.872765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.872765
Clp0000I Optimal - objective value 89.872765
Clp0000I Optimal - objective value 89.872765
Coin0511I After Postsolve, objective 89.872765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.87276456 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 174 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.533%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.08742
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.5898 iterations 22
Cbc0038I Solution found of 19.5898
Cbc0038I Relaxing continuous gives 19.5898
Cbc0038I Rounding solution of -16.1016 is better than previous of 19.5898

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -16.1016 to -34.1417 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.7149
Cbc0038I Pass   2: suminf.    1.16737 (5) obj. -39.7149 iterations 5
Cbc0038I Pass   3: suminf.    1.13424 (5) obj. -39.7149 iterations 3
Cbc0038I Pass   4: suminf.    0.87663 (3) obj. -39.7149 iterations 4
Cbc0038I Pass   5: suminf.    0.80098 (3) obj. -39.7149 iterations 1
Cbc0038I Pass   6: suminf.    0.82567 (4) obj. -39.7149 iterations 3
Cbc0038I Pass   7: suminf.    0.76629 (4) obj. -39.7149 iterations 2
Cbc0038I Pass   8: suminf.    1.04202 (4) obj. -39.7149 iterations 5
Cbc0038I Pass   9: suminf.    1.00554 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  10: suminf.    1.27333 (4) obj. -39.7149 iterations 4
Cbc0038I Pass  11: suminf.    1.22599 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  12: suminf.    1.05822 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  13: suminf.    1.05822 (4) obj. -39.7149 iterations 0
Cbc0038I Pass  14: suminf.    1.17326 (4) obj. -39.7149 iterations 3
Cbc0038I Pass  15: suminf.    0.90367 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  16: suminf.    1.04202 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  17: suminf.    1.00554 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  18: suminf.    1.27333 (4) obj. -39.7149 iterations 4
Cbc0038I Pass  19: suminf.    1.22599 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  20: suminf.    1.05822 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  21: suminf.    1.05822 (4) obj. -39.7149 iterations 0
Cbc0038I Pass  22: suminf.    1.17326 (4) obj. -39.7149 iterations 3
Cbc0038I Pass  23: suminf.    0.90367 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  24: suminf.    1.04202 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  25: suminf.    1.00554 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  26: suminf.    1.27333 (4) obj. -39.7149 iterations 4
Cbc0038I Pass  27: suminf.    1.22599 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  28: suminf.    1.05822 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  29: suminf.    1.05822 (4) obj. -39.7149 iterations 0
Cbc0038I Pass  30: suminf.    1.17326 (4) obj. -39.7149 iterations 3
Cbc0038I Pass  31: suminf.    0.90367 (4) obj. -39.7149 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -34.1417 - took 0.05 seconds
Cbc0012I Integer solution of -34.14166 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 36 rows 23 columns
Cbc0031I 16 added rows had average density of 22.5
Cbc0013I At root node, 16 cuts changed objective from -89.872765 to -66.469445 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3082 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1041 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -34.14166, took 5042 iterations and 26 nodes (0.39 seconds)
Cbc0032I Strong branching done 382 times (5672 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 9, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-15) rows, 59 (-7) columns and 588 (-135) elements
Clp1000I sum of infeasibilities 2.13133e-06 - average 4.02138e-08, 19 fixed columns
Coin0506I Presolve 34 (-19) rows, 39 (-20) columns and 348 (-240) elements
Clp0014I Perturbing problem by 0.001% of 1.6396052 - largest nonzero change 1.6537369e-05 ( 0.001262127%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 77.774025
Clp0000I Optimal - objective value 77.774025
Coin0511I After Postsolve, objective 77.774025, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8085674 - largest nonzero change 1.1768827e-05 ( 0.00089819337%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 100.06853
Clp0000I Optimal - objective value 100.06853
Clp0000I Optimal - objective value 100.06853
Coin0511I After Postsolve, objective 100.06853, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.0685301 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 59 columns (59 integer (59 of which binary)) and 600 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.606%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.06348
Cbc0038I Pass   1: suminf.    3.05753 (15) obj. -38.4224 iterations 14
Cbc0038I Pass   2: suminf.    3.05753 (15) obj. -38.4224 iterations 1
Cbc0038I Solution found of 1.31897
Cbc0038I Rounding solution of -21.7906 is better than previous of 1.31897

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -27.4981
Cbc0038I Pass   3: suminf.    3.05753 (15) obj. -38.4224 iterations 0
Cbc0038I Pass   4: suminf.    3.05753 (15) obj. -38.4224 iterations 1
Cbc0038I Pass   5: suminf.    1.52884 (5) obj. -27.4981 iterations 20
Cbc0038I Pass   6: suminf.    0.32258 (2) obj. -35.9728 iterations 7
Cbc0038I Pass   7: suminf.    0.19355 (1) obj. -31.8742 iterations 1
Cbc0038I Pass   8: suminf.    0.32208 (2) obj. -27.4981 iterations 3
Cbc0038I Pass   9: suminf.    1.47312 (6) obj. -27.4981 iterations 13
Cbc0038I Pass  10: suminf.    1.47312 (6) obj. -27.4981 iterations 1
Cbc0038I Pass  11: suminf.    0.55488 (2) obj. -27.4981 iterations 6
Cbc0038I Pass  12: suminf.    0.62646 (2) obj. -27.4981 iterations 2
Cbc0038I Pass  13: suminf.    0.86942 (5) obj. -30.0772 iterations 14
Cbc0038I Pass  14: suminf.    0.86942 (5) obj. -30.0772 iterations 2
Cbc0038I Pass  15: suminf.    0.95815 (4) obj. -27.4981 iterations 11
Cbc0038I Pass  16: suminf.    0.95815 (4) obj. -27.4981 iterations 0
Cbc0038I Pass  17: suminf.    0.88347 (3) obj. -27.4981 iterations 3
Cbc0038I Pass  18: suminf.    0.70651 (3) obj. -27.4981 iterations 2
Cbc0038I Pass  19: suminf.    0.47659 (4) obj. -27.4981 iterations 3
Cbc0038I Pass  20: suminf.    0.71005 (2) obj. -27.4981 iterations 4
Cbc0038I Pass  21: suminf.    0.45806 (2) obj. -31.0258 iterations 1
Cbc0038I Pass  22: suminf.    0.71005 (2) obj. -27.4981 iterations 3
Cbc0038I Pass  23: suminf.    1.37197 (8) obj. -27.4981 iterations 12
Cbc0038I Pass  24: suminf.    1.23094 (7) obj. -27.4981 iterations 4
Cbc0038I Pass  25: suminf.    1.28757 (4) obj. -27.4981 iterations 8
Cbc0038I Pass  26: suminf.    1.03748 (3) obj. -27.4981 iterations 1
Cbc0038I Pass  27: suminf.    0.83552 (3) obj. -30.2499 iterations 1
Cbc0038I Pass  28: suminf.    1.03748 (3) obj. -27.4981 iterations 4
Cbc0038I Pass  29: suminf.    1.75360 (9) obj. -27.4981 iterations 28
Cbc0038I Pass  30: suminf.    1.59928 (8) obj. -27.4981 iterations 8
Cbc0038I Pass  31: suminf.    0.69934 (3) obj. -27.4981 iterations 10
Cbc0038I Pass  32: suminf.    0.55484 (2) obj. -27.8953 iterations 2
Cbc0038I Rounding solution of -24.0424 is better than previous of -21.7906

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -24.0424 to -25.8217 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.7712
Cbc0038I Pass  32: suminf.    3.05753 (15) obj. -38.4224 iterations 0
Cbc0038I Pass  33: suminf.    3.05753 (15) obj. -38.4224 iterations 1
Cbc0038I Pass  34: suminf.    1.86136 (8) obj. -37.7712 iterations 23
Cbc0038I Pass  35: suminf.    1.86136 (8) obj. -37.7712 iterations 0
Cbc0038I Pass  36: suminf.    1.39494 (5) obj. -37.7712 iterations 10
Cbc0038I Pass  37: suminf.    1.39494 (5) obj. -37.7712 iterations 0
Cbc0038I Pass  38: suminf.    0.96072 (5) obj. -37.7712 iterations 4
Cbc0038I Pass  39: suminf.    0.96072 (5) obj. -37.7712 iterations 0
Cbc0038I Pass  40: suminf.    0.92799 (3) obj. -37.7712 iterations 6
Cbc0038I Pass  41: suminf.    0.78548 (3) obj. -38.6263 iterations 2
Cbc0038I Pass  42: suminf.    1.34504 (4) obj. -37.7712 iterations 4
Cbc0038I Pass  43: suminf.    1.34504 (4) obj. -37.7712 iterations 0
Cbc0038I Pass  44: suminf.    0.82911 (3) obj. -37.7712 iterations 4
Cbc0038I Pass  45: suminf.    0.67748 (3) obj. -39.3351 iterations 2
Cbc0038I Pass  46: suminf.    1.08981 (3) obj. -37.7712 iterations 4
Cbc0038I Pass  47: suminf.    1.03999 (3) obj. -38.45 iterations 1
Cbc0038I Pass  48: suminf.    3.18932 (14) obj. -37.7712 iterations 12
Cbc0038I Pass  49: suminf.    2.58077 (10) obj. -37.7712 iterations 4
Cbc0038I Pass  50: suminf.    1.44845 (4) obj. -37.7712 iterations 9
Cbc0038I Pass  51: suminf.    1.22409 (5) obj. -37.7712 iterations 1
Cbc0038I Pass  52: suminf.    1.35027 (7) obj. -37.7712 iterations 6
Cbc0038I Pass  53: suminf.    1.26321 (6) obj. -37.7712 iterations 1
Cbc0038I Pass  54: suminf.    1.32062 (4) obj. -37.7712 iterations 5
Cbc0038I Pass  55: suminf.    1.32062 (4) obj. -37.7712 iterations 0
Cbc0038I Pass  56: suminf.    1.46920 (4) obj. -37.7712 iterations 2
Cbc0038I Pass  57: suminf.    1.46920 (4) obj. -37.7712 iterations 0
Cbc0038I Pass  58: suminf.    1.32062 (4) obj. -37.7712 iterations 1
Cbc0038I Pass  59: suminf.    2.91825 (10) obj. -37.7712 iterations 8
Cbc0038I Pass  60: suminf.    2.47023 (9) obj. -37.7712 iterations 2
Cbc0038I Pass  61: suminf.    1.91675 (5) obj. -37.7712 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.8217 - took 0.03 seconds
Cbc0012I Integer solution of -25.82167 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -33.57728 found by DiveCoefficient after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 53 rows 59 columns, reduced to 0 rows 0 columns
Cbc0031I 27 added rows had average density of 20.666667
Cbc0013I At root node, 27 cuts changed objective from -78.86401 to -39.253794 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3779 row cuts average 4.6 elements, 9 column cuts (9 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 783 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 524 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 314 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 31.3 elements, 0 column cuts (0 active)  in 0.653 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.57728 best solution, best possible -39.253794 (1.50 seconds)
Cbc0004I Integer solution of -34.14166 found after 2785 iterations and 9 nodes (1.59 seconds)
Cbc0001I Search completed - best objective -34.14166, took 2963 iterations and 14 nodes (1.60 seconds)
Cbc0032I Strong branching done 226 times (2797 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 6, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 1.48679e-05 - average 2.56343e-07, 0 fixed columns
Coin0506I Presolve 58 (0) rows, 33 (0) columns and 174 (0) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 89.872765
Clp0000I Optimal - objective value 89.872765
Coin0511I After Postsolve, objective 89.872765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.872765
Clp0000I Optimal - objective value 89.872765
Clp0000I Optimal - objective value 89.872765
Coin0511I After Postsolve, objective 89.872765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.87276456 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 174 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.533%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 8.08742
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.5898 iterations 22
Cbc0038I Solution found of 19.5898
Cbc0038I Relaxing continuous gives 19.5898
Cbc0038I Rounding solution of -16.1016 is better than previous of 19.5898

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -16.1016 to -34.1417 (0.03 seconds)
Cbc0038I Round again with cutoff of -39.7149
Cbc0038I Pass   2: suminf.    1.16737 (5) obj. -39.7149 iterations 5
Cbc0038I Pass   3: suminf.    1.13424 (5) obj. -39.7149 iterations 3
Cbc0038I Pass   4: suminf.    0.87663 (3) obj. -39.7149 iterations 4
Cbc0038I Pass   5: suminf.    0.80098 (3) obj. -39.7149 iterations 1
Cbc0038I Pass   6: suminf.    0.82567 (4) obj. -39.7149 iterations 3
Cbc0038I Pass   7: suminf.    0.76629 (4) obj. -39.7149 iterations 2
Cbc0038I Pass   8: suminf.    1.04202 (4) obj. -39.7149 iterations 5
Cbc0038I Pass   9: suminf.    1.00554 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  10: suminf.    1.27333 (4) obj. -39.7149 iterations 4
Cbc0038I Pass  11: suminf.    1.22599 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  12: suminf.    1.05822 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  13: suminf.    1.05822 (4) obj. -39.7149 iterations 0
Cbc0038I Pass  14: suminf.    1.17326 (4) obj. -39.7149 iterations 3
Cbc0038I Pass  15: suminf.    0.90367 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  16: suminf.    1.04202 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  17: suminf.    1.00554 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  18: suminf.    1.27333 (4) obj. -39.7149 iterations 4
Cbc0038I Pass  19: suminf.    1.22599 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  20: suminf.    1.05822 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  21: suminf.    1.05822 (4) obj. -39.7149 iterations 0
Cbc0038I Pass  22: suminf.    1.17326 (4) obj. -39.7149 iterations 3
Cbc0038I Pass  23: suminf.    0.90367 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  24: suminf.    1.04202 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  25: suminf.    1.00554 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  26: suminf.    1.27333 (4) obj. -39.7149 iterations 4
Cbc0038I Pass  27: suminf.    1.22599 (4) obj. -39.7149 iterations 1
Cbc0038I Pass  28: suminf.    1.05822 (4) obj. -39.7149 iterations 2
Cbc0038I Pass  29: suminf.    1.05822 (4) obj. -39.7149 iterations 0
Cbc0038I Pass  30: suminf.    1.17326 (4) obj. -39.7149 iterations 3
Cbc0038I Pass  31: suminf.    0.90367 (4) obj. -39.7149 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -34.1417 - took 0.05 seconds
Cbc0012I Integer solution of -34.14166 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 36 rows 23 columns
Cbc0031I 16 added rows had average density of 22.5
Cbc0013I At root node, 16 cuts changed objective from -89.872765 to -66.469445 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3082 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1041 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -34.14166, took 5042 iterations and 26 nodes (0.40 seconds)
Cbc0032I Strong branching done 382 times (5672 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 9, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.38   (Wallclock seconds):       0.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-16) rows, 59 (-8) columns and 588 (-136) elements
Clp1000I sum of infeasibilities 2.13133e-06 - average 4.02138e-08, 19 fixed columns
Coin0506I Presolve 34 (-19) rows, 39 (-20) columns and 348 (-240) elements
Clp0014I Perturbing problem by 0.001% of 1.6396052 - largest nonzero change 1.6537369e-05 ( 0.001262127%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 77.774025
Clp0000I Optimal - objective value 77.774025
Coin0511I After Postsolve, objective 77.774025, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8085674 - largest nonzero change 1.1768827e-05 ( 0.00089819337%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 100.06853
Clp0000I Optimal - objective value 100.06853
Clp0000I Optimal - objective value 100.06853
Coin0511I After Postsolve, objective 100.06853, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.0685301 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 59 columns (59 integer (59 of which binary)) and 600 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.606%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.06348
Cbc0038I Pass   1: suminf.    3.05753 (15) obj. -38.4224 iterations 14
Cbc0038I Pass   2: suminf.    3.05753 (15) obj. -38.4224 iterations 1
Cbc0038I Solution found of 1.31897
Cbc0038I Rounding solution of -21.7906 is better than previous of 1.31897

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -27.4981
Cbc0038I Pass   3: suminf.    3.05753 (15) obj. -38.4224 iterations 0
Cbc0038I Pass   4: suminf.    3.05753 (15) obj. -38.4224 iterations 1
Cbc0038I Pass   5: suminf.    1.52884 (5) obj. -27.4981 iterations 20
Cbc0038I Pass   6: suminf.    0.32258 (2) obj. -35.9728 iterations 7
Cbc0038I Pass   7: suminf.    0.19355 (1) obj. -31.8742 iterations 1
Cbc0038I Pass   8: suminf.    0.32208 (2) obj. -27.4981 iterations 3
Cbc0038I Pass   9: suminf.    1.47312 (6) obj. -27.4981 iterations 13
Cbc0038I Pass  10: suminf.    1.47312 (6) obj. -27.4981 iterations 1
Cbc0038I Pass  11: suminf.    0.55488 (2) obj. -27.4981 iterations 6
Cbc0038I Pass  12: suminf.    0.62646 (2) obj. -27.4981 iterations 2
Cbc0038I Pass  13: suminf.    0.86942 (5) obj. -30.0772 iterations 14
Cbc0038I Pass  14: suminf.    0.86942 (5) obj. -30.0772 iterations 2
Cbc0038I Pass  15: suminf.    0.95815 (4) obj. -27.4981 iterations 11
Cbc0038I Pass  16: suminf.    0.95815 (4) obj. -27.4981 iterations 0
Cbc0038I Pass  17: suminf.    0.88347 (3) obj. -27.4981 iterations 3
Cbc0038I Pass  18: suminf.    0.70651 (3) obj. -27.4981 iterations 2
Cbc0038I Pass  19: suminf.    0.47659 (4) obj. -27.4981 iterations 3
Cbc0038I Pass  20: suminf.    0.71005 (2) obj. -27.4981 iterations 4
Cbc0038I Pass  21: suminf.    0.45806 (2) obj. -31.0258 iterations 1
Cbc0038I Pass  22: suminf.    0.71005 (2) obj. -27.4981 iterations 3
Cbc0038I Pass  23: suminf.    1.37197 (8) obj. -27.4981 iterations 12
Cbc0038I Pass  24: suminf.    1.23094 (7) obj. -27.4981 iterations 4
Cbc0038I Pass  25: suminf.    1.28757 (4) obj. -27.4981 iterations 8
Cbc0038I Pass  26: suminf.    1.03748 (3) obj. -27.4981 iterations 1
Cbc0038I Pass  27: suminf.    0.83552 (3) obj. -30.2499 iterations 1
Cbc0038I Pass  28: suminf.    1.03748 (3) obj. -27.4981 iterations 4
Cbc0038I Pass  29: suminf.    1.75360 (9) obj. -27.4981 iterations 28
Cbc0038I Pass  30: suminf.    1.59928 (8) obj. -27.4981 iterations 8
Cbc0038I Pass  31: suminf.    0.69934 (3) obj. -27.4981 iterations 10
Cbc0038I Pass  32: suminf.    0.55484 (2) obj. -27.8953 iterations 2
Cbc0038I Rounding solution of -24.0424 is better than previous of -21.7906

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -24.0424 to -25.8217 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.7712
Cbc0038I Pass  32: suminf.    3.05753 (15) obj. -38.4224 iterations 0
Cbc0038I Pass  33: suminf.    3.05753 (15) obj. -38.4224 iterations 1
Cbc0038I Pass  34: suminf.    1.86136 (8) obj. -37.7712 iterations 23
Cbc0038I Pass  35: suminf.    1.86136 (8) obj. -37.7712 iterations 0
Cbc0038I Pass  36: suminf.    1.39494 (5) obj. -37.7712 iterations 10
Cbc0038I Pass  37: suminf.    1.39494 (5) obj. -37.7712 iterations 0
Cbc0038I Pass  38: suminf.    0.96072 (5) obj. -37.7712 iterations 4
Cbc0038I Pass  39: suminf.    0.96072 (5) obj. -37.7712 iterations 0
Cbc0038I Pass  40: suminf.    0.92799 (3) obj. -37.7712 iterations 6
Cbc0038I Pass  41: suminf.    0.78548 (3) obj. -38.6263 iterations 2
Cbc0038I Pass  42: suminf.    1.34504 (4) obj. -37.7712 iterations 4
Cbc0038I Pass  43: suminf.    1.34504 (4) obj. -37.7712 iterations 0
Cbc0038I Pass  44: suminf.    0.82911 (3) obj. -37.7712 iterations 4
Cbc0038I Pass  45: suminf.    0.67748 (3) obj. -39.3351 iterations 2
Cbc0038I Pass  46: suminf.    1.08981 (3) obj. -37.7712 iterations 4
Cbc0038I Pass  47: suminf.    1.03999 (3) obj. -38.45 iterations 1
Cbc0038I Pass  48: suminf.    3.18932 (14) obj. -37.7712 iterations 12
Cbc0038I Pass  49: suminf.    2.58077 (10) obj. -37.7712 iterations 4
Cbc0038I Pass  50: suminf.    1.44845 (4) obj. -37.7712 iterations 9
Cbc0038I Pass  51: suminf.    1.22409 (5) obj. -37.7712 iterations 1
Cbc0038I Pass  52: suminf.    1.35027 (7) obj. -37.7712 iterations 6
Cbc0038I Pass  53: suminf.    1.26321 (6) obj. -37.7712 iterations 1
Cbc0038I Pass  54: suminf.    1.32062 (4) obj. -37.7712 iterations 5
Cbc0038I Pass  55: suminf.    1.32062 (4) obj. -37.7712 iterations 0
Cbc0038I Pass  56: suminf.    1.46920 (4) obj. -37.7712 iterations 2
Cbc0038I Pass  57: suminf.    1.46920 (4) obj. -37.7712 iterations 0
Cbc0038I Pass  58: suminf.    1.32062 (4) obj. -37.7712 iterations 1
Cbc0038I Pass  59: suminf.    2.91825 (10) obj. -37.7712 iterations 8
Cbc0038I Pass  60: suminf.    2.47023 (9) obj. -37.7712 iterations 2
Cbc0038I Pass  61: suminf.    1.91675 (5) obj. -37.7712 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -25.8217 - took 0.03 seconds
Cbc0012I Integer solution of -25.82167 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -33.57728 found by DiveCoefficient after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 53 rows 59 columns, reduced to 0 rows 0 columns
Cbc0031I 27 added rows had average density of 20.666667
Cbc0013I At root node, 27 cuts changed objective from -78.86401 to -39.253794 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3779 row cuts average 4.6 elements, 9 column cuts (9 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 783 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 524 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 314 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 31.3 elements, 0 column cuts (0 active)  in 0.705 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.57728 best solution, best possible -39.253794 (1.64 seconds)
Cbc0004I Integer solution of -34.14166 found after 2785 iterations and 9 nodes (1.74 seconds)
Cbc0001I Search completed - best objective -34.14166, took 2963 iterations and 14 nodes (1.75 seconds)
Cbc0032I Strong branching done 226 times (2797 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 6, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.24   (Wallclock seconds):       1.76

