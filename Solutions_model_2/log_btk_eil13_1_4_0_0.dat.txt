Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 58 (-17) elements
Clp1000I sum of infeasibilities 0.000511785 - average 2.55892e-05, 7 fixed columns
Coin0506I Presolve 10 (-10) rows, 6 (-7) columns and 26 (-32) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 910.75
Clp0000I Optimal - objective value 910.75
Coin0511I After Postsolve, objective 910.75, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 910.75
Clp0000I Optimal - objective value 910.75
Clp0000I Optimal - objective value 910.75
Coin0511I After Postsolve, objective 910.75, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 910.75 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 13 columns (12 integer (12 of which binary)) and 55 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.977%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.926561
Cbc0038I Pass   1: suminf.    0.46154 (1) obj. -679.885 iterations 2
Cbc0038I Solution found of -527.5
Cbc0038I Relaxing continuous gives -527.5
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 13 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -548.299
Cbc0038I Pass   2: suminf.    0.46154 (1) obj. -679.885 iterations 0
Cbc0038I Pass   3: suminf.    0.07349 (1) obj. -548.299 iterations 1
Cbc0038I Pass   4: suminf.    0.15876 (2) obj. -548.299 iterations 3
Cbc0038I Pass   5: suminf.    0.24935 (2) obj. -548.299 iterations 2
Cbc0038I Pass   6: suminf.    0.24935 (2) obj. -548.299 iterations 0
Cbc0038I Pass   7: suminf.    1.54636 (5) obj. -548.299 iterations 3
Cbc0038I Pass   8: suminf.    0.17849 (4) obj. -548.299 iterations 1
Cbc0038I Pass   9: suminf.    0.17849 (4) obj. -548.299 iterations 0
Cbc0038I Pass  10: suminf.    0.21328 (2) obj. -548.299 iterations 4
Cbc0038I Pass  11: suminf.    0.46154 (1) obj. -679.885 iterations 2
Cbc0038I Pass  12: suminf.    0.07349 (1) obj. -548.299 iterations 1
Cbc0038I Pass  13: suminf.    0.96552 (2) obj. -549.707 iterations 4
Cbc0038I Pass  14: suminf.    0.07349 (1) obj. -548.299 iterations 3
Cbc0038I Pass  15: suminf.    0.05314 (2) obj. -548.299 iterations 3
Cbc0038I Pass  16: suminf.    0.05314 (2) obj. -548.299 iterations 1
Cbc0038I Pass  17: suminf.    0.07716 (3) obj. -548.299 iterations 3
Cbc0038I Pass  18: suminf.    0.46235 (3) obj. -548.299 iterations 2
Cbc0038I Pass  19: suminf.    0.05314 (2) obj. -548.299 iterations 4
Cbc0038I Pass  20: suminf.    0.92308 (2) obj. -548.299 iterations 5
Cbc0038I Pass  21: suminf.    0.12129 (2) obj. -548.299 iterations 2
Cbc0038I Pass  22: suminf.    0.36031 (2) obj. -548.299 iterations 2
Cbc0038I Pass  23: suminf.    0.36031 (2) obj. -548.299 iterations 0
Cbc0038I Pass  24: suminf.    0.46154 (1) obj. -679.885 iterations 1
Cbc0038I Pass  25: suminf.    0.07349 (1) obj. -548.299 iterations 1
Cbc0038I Pass  26: suminf.    0.50991 (3) obj. -548.299 iterations 3
Cbc0038I Pass  27: suminf.    0.12649 (3) obj. -548.299 iterations 2
Cbc0038I Pass  28: suminf.    0.36031 (2) obj. -548.299 iterations 4
Cbc0038I Pass  29: suminf.    0.36031 (2) obj. -548.299 iterations 0
Cbc0038I Pass  30: suminf.    0.46154 (1) obj. -679.885 iterations 1
Cbc0038I Pass  31: suminf.    0.07349 (1) obj. -548.299 iterations 1
Cbc0038I Rounding solution of -550.303 is better than previous of -527.5

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 13 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -550.303 to -555.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -590.997
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.46154 (1) obj. -679.885 iterations 0
Cbc0038I Pass  32: suminf.    0.22437 (1) obj. -590.997 iterations 1
Cbc0038I Pass  33: suminf.    0.22437 (1) obj. -590.997 iterations 0
Cbc0038I Pass  34: suminf.    0.61095 (2) obj. -590.997 iterations 3
Cbc0038I Pass  35: suminf.    0.61095 (2) obj. -590.997 iterations 1
Cbc0038I Pass  36: suminf.    0.61095 (2) obj. -590.997 iterations 0
Cbc0038I Pass  37: suminf.    0.87688 (3) obj. -590.997 iterations 1
Cbc0038I Pass  38: suminf.    0.46154 (1) obj. -679.885 iterations 3
Cbc0038I Pass  39: suminf.    0.89167 (3) obj. -590.997 iterations 7
Cbc0038I Pass  40: suminf.    0.89167 (3) obj. -590.997 iterations 0
Cbc0038I Pass  41: suminf.    0.66226 (2) obj. -590.997 iterations 4
Cbc0038I Pass  42: suminf.    0.99481 (4) obj. -590.997 iterations 7
Cbc0038I Pass  43: suminf.    0.70526 (2) obj. -590.997 iterations 2
Cbc0038I Pass  44: suminf.    0.72872 (2) obj. -590.997 iterations 1
Cbc0038I Pass  45: suminf.    0.61095 (2) obj. -590.997 iterations 1
Cbc0038I Pass  46: suminf.    0.46154 (1) obj. -679.885 iterations 3
Cbc0038I Pass  47: suminf.    0.22437 (1) obj. -590.997 iterations 1
Cbc0038I Pass  48: suminf.    0.54557 (2) obj. -590.997 iterations 2
Cbc0038I Pass  49: suminf.    1.52856 (5) obj. -590.997 iterations 7
Cbc0038I Pass  50: suminf.    1.33510 (5) obj. -590.997 iterations 2
Cbc0038I Pass  51: suminf.    1.52856 (5) obj. -590.997 iterations 2
Cbc0038I Pass  52: suminf.    1.33510 (5) obj. -590.997 iterations 2
Cbc0038I Pass  53: suminf.    1.99062 (6) obj. -590.997 iterations 1
Cbc0038I Pass  54: suminf.    0.92756 (4) obj. -590.997 iterations 2
Cbc0038I Pass  55: suminf.    0.46154 (1) obj. -679.885 iterations 5
Cbc0038I Pass  56: suminf.    0.22437 (1) obj. -590.997 iterations 1
Cbc0038I Pass  57: suminf.    1.64738 (6) obj. -590.997 iterations 7
Cbc0038I Pass  58: suminf.    0.42247 (2) obj. -590.997 iterations 5
Cbc0038I Pass  59: suminf.    0.56587 (2) obj. -590.997 iterations 3
Cbc0038I Pass  60: suminf.    0.56587 (2) obj. -590.997 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 13 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -555.5 - took 0.01 seconds
Cbc0012I Integer solution of -555.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 13 columns, reduced to 7 rows 5 columns
Cbc0012I Integer solution of -559.5 found by DiveCoefficient after 6 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 4
Cbc0013I At root node, 1 cuts changed objective from -730.98776 to -559.5 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -559.5, took 6 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-8) rows, 24 (-2) columns and 124 (-29) elements
Clp1000I sum of infeasibilities 0 - average 0, 19 fixed columns
Coin0506I Presolve 5 (-15) rows, 5 (-19) columns and 16 (-108) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 860.09524
Clp0000I Optimal - objective value 860.09524
Coin0511I After Postsolve, objective 860.09524, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8816596 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 925.36337
Clp0000I Optimal - objective value 925.36337
Clp0000I Optimal - objective value 925.36337
Coin0511I After Postsolve, objective 925.36337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 925.3633684 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 24 columns (24 integer (24 of which binary)) and 123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.58943
Cbc0038I Solution found of -526.5
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -526.5 to -527.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -547.96
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.07610 (1) obj. -547.96 iterations 15
Cbc0038I Pass   2: suminf.    0.43750 (1) obj. -649.875 iterations 2
Cbc0038I Pass   3: suminf.    0.56393 (4) obj. -547.96 iterations 6
Cbc0038I Pass   4: suminf.    0.43750 (1) obj. -648.875 iterations 5
Cbc0038I Pass   5: suminf.    0.07965 (1) obj. -547.96 iterations 2
Cbc0038I Pass   6: suminf.    0.37561 (4) obj. -547.96 iterations 5
Cbc0038I Pass   7: suminf.    0.29478 (3) obj. -547.96 iterations 1
Cbc0038I Pass   8: suminf.    0.43750 (1) obj. -647.875 iterations 3
Cbc0038I Pass   9: suminf.    0.08319 (1) obj. -547.96 iterations 1
Cbc0038I Pass  10: suminf.    0.23353 (2) obj. -547.96 iterations 1
Cbc0038I Pass  11: suminf.    0.87890 (5) obj. -547.96 iterations 6
Cbc0038I Pass  12: suminf.    0.85875 (5) obj. -547.96 iterations 1
Cbc0038I Pass  13: suminf.    0.43750 (1) obj. -614.875 iterations 4
Cbc0038I Pass  14: suminf.    0.19951 (1) obj. -547.96 iterations 2
Cbc0038I Pass  15: suminf.    0.46154 (1) obj. -643.885 iterations 1
Cbc0038I Pass  16: suminf.    0.87695 (4) obj. -547.96 iterations 7
Cbc0038I Pass  17: suminf.    0.87695 (4) obj. -547.96 iterations 2
Cbc0038I Pass  18: suminf.    0.67206 (2) obj. -547.96 iterations 5
Cbc0038I Pass  19: suminf.    0.80203 (3) obj. -547.96 iterations 1
Cbc0038I Pass  20: suminf.    0.65423 (2) obj. -547.96 iterations 1
Cbc0038I Pass  21: suminf.    0.43750 (1) obj. -617.875 iterations 2
Cbc0038I Pass  22: suminf.    0.18958 (1) obj. -547.96 iterations 1
Cbc0038I Pass  23: suminf.    0.18958 (1) obj. -547.96 iterations 2
Cbc0038I Pass  24: suminf.    0.43750 (1) obj. -617.875 iterations 1
Cbc0038I Pass  25: suminf.    0.18958 (1) obj. -547.96 iterations 1
Cbc0038I Pass  26: suminf.    0.95826 (4) obj. -547.96 iterations 6
Cbc0038I Pass  27: suminf.    0.66322 (2) obj. -547.96 iterations 4
Cbc0038I Pass  28: suminf.    0.43750 (1) obj. -616.875 iterations 3
Cbc0038I Pass  29: suminf.    0.19312 (1) obj. -547.96 iterations 2
Cbc0038I Pass  30: suminf.    1.15237 (4) obj. -547.96 iterations 6
Cbc0038I Rounding solution of -530.5 is better than previous of -527.5

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -583.889
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.20351 (1) obj. -583.889 iterations 0
Cbc0038I Pass  31: suminf.    0.43750 (1) obj. -649.875 iterations 2
Cbc0038I Pass  32: suminf.    1.53284 (8) obj. -583.889 iterations 10
Cbc0038I Pass  33: suminf.    0.82775 (3) obj. -583.889 iterations 1
Cbc0038I Pass  34: suminf.    0.65514 (2) obj. -583.889 iterations 3
Cbc0038I Pass  35: suminf.    0.24252 (1) obj. -583.889 iterations 1
Cbc0038I Pass  36: suminf.    0.43750 (1) obj. -638.875 iterations 1
Cbc0038I Pass  37: suminf.    2.34992 (9) obj. -583.889 iterations 8
Cbc0038I Pass  38: suminf.    1.32772 (5) obj. -583.889 iterations 2
Cbc0038I Pass  39: suminf.    0.61610 (2) obj. -583.889 iterations 5
Cbc0038I Pass  40: suminf.    0.25670 (1) obj. -583.889 iterations 1
Cbc0038I Pass  41: suminf.    0.43750 (1) obj. -634.875 iterations 1
Cbc0038I Pass  42: suminf.    0.83046 (3) obj. -583.889 iterations 4
Cbc0038I Pass  43: suminf.    0.83046 (3) obj. -583.889 iterations 0
Cbc0038I Pass  44: suminf.    0.43750 (1) obj. -635.875 iterations 3
Cbc0038I Pass  45: suminf.    0.25315 (1) obj. -583.889 iterations 1
Cbc0038I Pass  46: suminf.    0.21415 (1) obj. -583.889 iterations 1
Cbc0038I Pass  47: suminf.    0.43750 (1) obj. -646.875 iterations 1
Cbc0038I Pass  48: suminf.    0.21415 (1) obj. -583.889 iterations 1
Cbc0038I Pass  49: suminf.    1.03564 (4) obj. -583.889 iterations 3
Cbc0038I Pass  50: suminf.    0.55993 (2) obj. -583.889 iterations 1
Cbc0038I Pass  51: suminf.    0.43750 (1) obj. -635.875 iterations 2
Cbc0038I Pass  52: suminf.    0.25315 (1) obj. -583.889 iterations 1
Cbc0038I Pass  53: suminf.    0.67187 (2) obj. -583.889 iterations 3
Cbc0038I Pass  54: suminf.    0.43750 (1) obj. -622.875 iterations 2
Cbc0038I Pass  55: suminf.    0.29925 (1) obj. -583.889 iterations 1
Cbc0038I Pass  56: suminf.    1.71371 (6) obj. -583.889 iterations 5
Cbc0038I Pass  57: suminf.    1.31116 (6) obj. -583.889 iterations 1
Cbc0038I Pass  58: suminf.    0.61390 (2) obj. -583.889 iterations 1
Cbc0038I Pass  59: suminf.    0.43750 (1) obj. -632.875 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -530.5 - took 0.01 seconds
Cbc0012I Integer solution of -530.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -540.5 found by DiveCoefficient after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 24 columns, reduced to 13 rows 11 columns
Cbc0012I Integer solution of -559.5 found by DiveCoefficient after 9 iterations and 0 nodes (0.06 seconds)
Cbc0031I 2 added rows had average density of 2.5
Cbc0013I At root node, 2 cuts changed objective from -727.60536 to -559.5 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 2.0 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -559.5, took 9 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 13 (-2) columns and 58 (-17) elements
Clp1000I sum of infeasibilities 0.000511785 - average 2.55892e-05, 7 fixed columns
Coin0506I Presolve 10 (-10) rows, 6 (-7) columns and 26 (-32) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 910.75
Clp0000I Optimal - objective value 910.75
Coin0511I After Postsolve, objective 910.75, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 910.75
Clp0000I Optimal - objective value 910.75
Clp0000I Optimal - objective value 910.75
Coin0511I After Postsolve, objective 910.75, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 910.75 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 13 columns (12 integer (12 of which binary)) and 55 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.977%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.926561
Cbc0038I Pass   1: suminf.    0.46154 (1) obj. -679.885 iterations 2
Cbc0038I Solution found of -527.5
Cbc0038I Relaxing continuous gives -527.5
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 13 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -548.299
Cbc0038I Pass   2: suminf.    0.46154 (1) obj. -679.885 iterations 0
Cbc0038I Pass   3: suminf.    0.07349 (1) obj. -548.299 iterations 1
Cbc0038I Pass   4: suminf.    0.15876 (2) obj. -548.299 iterations 3
Cbc0038I Pass   5: suminf.    0.24935 (2) obj. -548.299 iterations 2
Cbc0038I Pass   6: suminf.    0.24935 (2) obj. -548.299 iterations 0
Cbc0038I Pass   7: suminf.    1.54636 (5) obj. -548.299 iterations 3
Cbc0038I Pass   8: suminf.    0.17849 (4) obj. -548.299 iterations 1
Cbc0038I Pass   9: suminf.    0.17849 (4) obj. -548.299 iterations 0
Cbc0038I Pass  10: suminf.    0.21328 (2) obj. -548.299 iterations 4
Cbc0038I Pass  11: suminf.    0.46154 (1) obj. -679.885 iterations 2
Cbc0038I Pass  12: suminf.    0.07349 (1) obj. -548.299 iterations 1
Cbc0038I Pass  13: suminf.    0.96552 (2) obj. -549.707 iterations 4
Cbc0038I Pass  14: suminf.    0.07349 (1) obj. -548.299 iterations 3
Cbc0038I Pass  15: suminf.    0.05314 (2) obj. -548.299 iterations 3
Cbc0038I Pass  16: suminf.    0.05314 (2) obj. -548.299 iterations 1
Cbc0038I Pass  17: suminf.    0.07716 (3) obj. -548.299 iterations 3
Cbc0038I Pass  18: suminf.    0.46235 (3) obj. -548.299 iterations 2
Cbc0038I Pass  19: suminf.    0.05314 (2) obj. -548.299 iterations 4
Cbc0038I Pass  20: suminf.    0.92308 (2) obj. -548.299 iterations 5
Cbc0038I Pass  21: suminf.    0.12129 (2) obj. -548.299 iterations 2
Cbc0038I Pass  22: suminf.    0.36031 (2) obj. -548.299 iterations 2
Cbc0038I Pass  23: suminf.    0.36031 (2) obj. -548.299 iterations 0
Cbc0038I Pass  24: suminf.    0.46154 (1) obj. -679.885 iterations 1
Cbc0038I Pass  25: suminf.    0.07349 (1) obj. -548.299 iterations 1
Cbc0038I Pass  26: suminf.    0.50991 (3) obj. -548.299 iterations 3
Cbc0038I Pass  27: suminf.    0.12649 (3) obj. -548.299 iterations 2
Cbc0038I Pass  28: suminf.    0.36031 (2) obj. -548.299 iterations 4
Cbc0038I Pass  29: suminf.    0.36031 (2) obj. -548.299 iterations 0
Cbc0038I Pass  30: suminf.    0.46154 (1) obj. -679.885 iterations 1
Cbc0038I Pass  31: suminf.    0.07349 (1) obj. -548.299 iterations 1
Cbc0038I Rounding solution of -550.303 is better than previous of -527.5

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 13 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -550.303 to -555.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -590.997
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.46154 (1) obj. -679.885 iterations 0
Cbc0038I Pass  32: suminf.    0.22437 (1) obj. -590.997 iterations 1
Cbc0038I Pass  33: suminf.    0.22437 (1) obj. -590.997 iterations 0
Cbc0038I Pass  34: suminf.    0.61095 (2) obj. -590.997 iterations 3
Cbc0038I Pass  35: suminf.    0.61095 (2) obj. -590.997 iterations 1
Cbc0038I Pass  36: suminf.    0.61095 (2) obj. -590.997 iterations 0
Cbc0038I Pass  37: suminf.    0.87688 (3) obj. -590.997 iterations 1
Cbc0038I Pass  38: suminf.    0.46154 (1) obj. -679.885 iterations 3
Cbc0038I Pass  39: suminf.    0.89167 (3) obj. -590.997 iterations 7
Cbc0038I Pass  40: suminf.    0.89167 (3) obj. -590.997 iterations 0
Cbc0038I Pass  41: suminf.    0.66226 (2) obj. -590.997 iterations 4
Cbc0038I Pass  42: suminf.    0.99481 (4) obj. -590.997 iterations 7
Cbc0038I Pass  43: suminf.    0.70526 (2) obj. -590.997 iterations 2
Cbc0038I Pass  44: suminf.    0.72872 (2) obj. -590.997 iterations 1
Cbc0038I Pass  45: suminf.    0.61095 (2) obj. -590.997 iterations 1
Cbc0038I Pass  46: suminf.    0.46154 (1) obj. -679.885 iterations 3
Cbc0038I Pass  47: suminf.    0.22437 (1) obj. -590.997 iterations 1
Cbc0038I Pass  48: suminf.    0.54557 (2) obj. -590.997 iterations 2
Cbc0038I Pass  49: suminf.    1.52856 (5) obj. -590.997 iterations 7
Cbc0038I Pass  50: suminf.    1.33510 (5) obj. -590.997 iterations 2
Cbc0038I Pass  51: suminf.    1.52856 (5) obj. -590.997 iterations 2
Cbc0038I Pass  52: suminf.    1.33510 (5) obj. -590.997 iterations 2
Cbc0038I Pass  53: suminf.    1.99062 (6) obj. -590.997 iterations 1
Cbc0038I Pass  54: suminf.    0.92756 (4) obj. -590.997 iterations 2
Cbc0038I Pass  55: suminf.    0.46154 (1) obj. -679.885 iterations 5
Cbc0038I Pass  56: suminf.    0.22437 (1) obj. -590.997 iterations 1
Cbc0038I Pass  57: suminf.    1.64738 (6) obj. -590.997 iterations 7
Cbc0038I Pass  58: suminf.    0.42247 (2) obj. -590.997 iterations 5
Cbc0038I Pass  59: suminf.    0.56587 (2) obj. -590.997 iterations 3
Cbc0038I Pass  60: suminf.    0.56587 (2) obj. -590.997 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 13 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -555.5 - took 0.02 seconds
Cbc0012I Integer solution of -555.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 13 columns, reduced to 7 rows 5 columns
Cbc0012I Integer solution of -559.5 found by DiveCoefficient after 6 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 4
Cbc0013I At root node, 1 cuts changed objective from -730.98776 to -559.5 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -559.5, took 6 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 20 (-9) rows, 24 (-3) columns and 124 (-30) elements
Clp1000I sum of infeasibilities 0 - average 0, 19 fixed columns
Coin0506I Presolve 5 (-15) rows, 5 (-19) columns and 16 (-108) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 860.09524
Clp0000I Optimal - objective value 860.09524
Coin0511I After Postsolve, objective 860.09524, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8816596 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 925.36337
Clp0000I Optimal - objective value 925.36337
Clp0000I Optimal - objective value 925.36337
Coin0511I After Postsolve, objective 925.36337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 925.3633684 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 24 columns (24 integer (24 of which binary)) and 123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 10.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.58943
Cbc0038I Solution found of -526.5
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -526.5 to -527.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -547.96
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.07610 (1) obj. -547.96 iterations 15
Cbc0038I Pass   2: suminf.    0.43750 (1) obj. -649.875 iterations 2
Cbc0038I Pass   3: suminf.    0.56393 (4) obj. -547.96 iterations 6
Cbc0038I Pass   4: suminf.    0.43750 (1) obj. -648.875 iterations 5
Cbc0038I Pass   5: suminf.    0.07965 (1) obj. -547.96 iterations 2
Cbc0038I Pass   6: suminf.    0.37561 (4) obj. -547.96 iterations 5
Cbc0038I Pass   7: suminf.    0.29478 (3) obj. -547.96 iterations 1
Cbc0038I Pass   8: suminf.    0.43750 (1) obj. -647.875 iterations 3
Cbc0038I Pass   9: suminf.    0.08319 (1) obj. -547.96 iterations 1
Cbc0038I Pass  10: suminf.    0.23353 (2) obj. -547.96 iterations 1
Cbc0038I Pass  11: suminf.    0.87890 (5) obj. -547.96 iterations 6
Cbc0038I Pass  12: suminf.    0.85875 (5) obj. -547.96 iterations 1
Cbc0038I Pass  13: suminf.    0.43750 (1) obj. -614.875 iterations 4
Cbc0038I Pass  14: suminf.    0.19951 (1) obj. -547.96 iterations 2
Cbc0038I Pass  15: suminf.    0.46154 (1) obj. -643.885 iterations 1
Cbc0038I Pass  16: suminf.    0.87695 (4) obj. -547.96 iterations 7
Cbc0038I Pass  17: suminf.    0.87695 (4) obj. -547.96 iterations 2
Cbc0038I Pass  18: suminf.    0.67206 (2) obj. -547.96 iterations 5
Cbc0038I Pass  19: suminf.    0.80203 (3) obj. -547.96 iterations 1
Cbc0038I Pass  20: suminf.    0.65423 (2) obj. -547.96 iterations 1
Cbc0038I Pass  21: suminf.    0.43750 (1) obj. -617.875 iterations 2
Cbc0038I Pass  22: suminf.    0.18958 (1) obj. -547.96 iterations 1
Cbc0038I Pass  23: suminf.    0.18958 (1) obj. -547.96 iterations 2
Cbc0038I Pass  24: suminf.    0.43750 (1) obj. -617.875 iterations 1
Cbc0038I Pass  25: suminf.    0.18958 (1) obj. -547.96 iterations 1
Cbc0038I Pass  26: suminf.    0.95826 (4) obj. -547.96 iterations 6
Cbc0038I Pass  27: suminf.    0.66322 (2) obj. -547.96 iterations 4
Cbc0038I Pass  28: suminf.    0.43750 (1) obj. -616.875 iterations 3
Cbc0038I Pass  29: suminf.    0.19312 (1) obj. -547.96 iterations 2
Cbc0038I Pass  30: suminf.    1.15237 (4) obj. -547.96 iterations 6
Cbc0038I Rounding solution of -530.5 is better than previous of -527.5

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -583.889
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.20351 (1) obj. -583.889 iterations 0
Cbc0038I Pass  31: suminf.    0.43750 (1) obj. -649.875 iterations 2
Cbc0038I Pass  32: suminf.    1.53284 (8) obj. -583.889 iterations 10
Cbc0038I Pass  33: suminf.    0.82775 (3) obj. -583.889 iterations 1
Cbc0038I Pass  34: suminf.    0.65514 (2) obj. -583.889 iterations 3
Cbc0038I Pass  35: suminf.    0.24252 (1) obj. -583.889 iterations 1
Cbc0038I Pass  36: suminf.    0.43750 (1) obj. -638.875 iterations 1
Cbc0038I Pass  37: suminf.    2.34992 (9) obj. -583.889 iterations 8
Cbc0038I Pass  38: suminf.    1.32772 (5) obj. -583.889 iterations 2
Cbc0038I Pass  39: suminf.    0.61610 (2) obj. -583.889 iterations 5
Cbc0038I Pass  40: suminf.    0.25670 (1) obj. -583.889 iterations 1
Cbc0038I Pass  41: suminf.    0.43750 (1) obj. -634.875 iterations 1
Cbc0038I Pass  42: suminf.    0.83046 (3) obj. -583.889 iterations 4
Cbc0038I Pass  43: suminf.    0.83046 (3) obj. -583.889 iterations 0
Cbc0038I Pass  44: suminf.    0.43750 (1) obj. -635.875 iterations 3
Cbc0038I Pass  45: suminf.    0.25315 (1) obj. -583.889 iterations 1
Cbc0038I Pass  46: suminf.    0.21415 (1) obj. -583.889 iterations 1
Cbc0038I Pass  47: suminf.    0.43750 (1) obj. -646.875 iterations 1
Cbc0038I Pass  48: suminf.    0.21415 (1) obj. -583.889 iterations 1
Cbc0038I Pass  49: suminf.    1.03564 (4) obj. -583.889 iterations 3
Cbc0038I Pass  50: suminf.    0.55993 (2) obj. -583.889 iterations 1
Cbc0038I Pass  51: suminf.    0.43750 (1) obj. -635.875 iterations 2
Cbc0038I Pass  52: suminf.    0.25315 (1) obj. -583.889 iterations 1
Cbc0038I Pass  53: suminf.    0.67187 (2) obj. -583.889 iterations 3
Cbc0038I Pass  54: suminf.    0.43750 (1) obj. -622.875 iterations 2
Cbc0038I Pass  55: suminf.    0.29925 (1) obj. -583.889 iterations 1
Cbc0038I Pass  56: suminf.    1.71371 (6) obj. -583.889 iterations 5
Cbc0038I Pass  57: suminf.    1.31116 (6) obj. -583.889 iterations 1
Cbc0038I Pass  58: suminf.    0.61390 (2) obj. -583.889 iterations 1
Cbc0038I Pass  59: suminf.    0.43750 (1) obj. -632.875 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 24 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -530.5 - took 0.01 seconds
Cbc0012I Integer solution of -530.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -540.5 found by DiveCoefficient after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 17 rows 24 columns, reduced to 13 rows 11 columns
Cbc0012I Integer solution of -559.5 found by DiveCoefficient after 9 iterations and 0 nodes (0.05 seconds)
Cbc0031I 2 added rows had average density of 2.5
Cbc0013I At root node, 2 cuts changed objective from -727.60536 to -559.5 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 2.0 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -559.5, took 9 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.05

