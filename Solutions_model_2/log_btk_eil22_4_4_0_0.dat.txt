Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 110 (-19) elements
Clp1000I sum of infeasibilities 8.03553e-07 - average 2.17176e-08, 0 fixed columns
Coin0506I Presolve 37 (0) rows, 22 (0) columns and 110 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 76.029877
Clp0000I Optimal - objective value 76.029877
Coin0511I After Postsolve, objective 76.029877, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.029877
Clp0000I Optimal - objective value 76.029877
Clp0000I Optimal - objective value 76.029877
Coin0511I After Postsolve, objective 76.029877, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.02987656 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.141%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.57259
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.7115 iterations 19
Cbc0038I Solution found of -7.7115
Cbc0038I Relaxing continuous gives -7.7115
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -7.7115 to -32.7865 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.9351
Cbc0038I Pass   2: suminf.    0.93308 (3) obj. -36.9351 iterations 2
Cbc0038I Pass   3: suminf.    0.63655 (2) obj. -36.9351 iterations 2
Cbc0038I Pass   4: suminf.    0.40912 (2) obj. -36.9351 iterations 2
Cbc0038I Pass   5: suminf.    0.40912 (2) obj. -36.9351 iterations 0
Cbc0038I Pass   6: suminf.    0.79070 (2) obj. -36.9351 iterations 1
Cbc0038I Pass   7: suminf.    1.10956 (4) obj. -36.9351 iterations 3
Cbc0038I Pass   8: suminf.    0.78730 (3) obj. -36.9351 iterations 3
Cbc0038I Pass   9: suminf.    1.23170 (4) obj. -36.9351 iterations 5
Cbc0038I Pass  10: suminf.    0.91874 (4) obj. -36.9351 iterations 3
Cbc0038I Pass  11: suminf.    0.40912 (2) obj. -36.9351 iterations 3
Cbc0038I Pass  12: suminf.    0.40912 (2) obj. -36.9351 iterations 0
Cbc0038I Pass  13: suminf.    0.79070 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  14: suminf.    0.63655 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  15: suminf.    0.84918 (4) obj. -36.9351 iterations 1
Cbc0038I Pass  16: suminf.    0.63655 (2) obj. -36.9351 iterations 2
Cbc0038I Pass  17: suminf.    0.40912 (2) obj. -36.9351 iterations 2
Cbc0038I Pass  18: suminf.    0.40912 (2) obj. -36.9351 iterations 0
Cbc0038I Pass  19: suminf.    0.79070 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  20: suminf.    1.91613 (6) obj. -36.9351 iterations 7
Cbc0038I Pass  21: suminf.    1.65550 (5) obj. -36.9351 iterations 2
Cbc0038I Pass  22: suminf.    1.52703 (16) obj. -36.9351 iterations 13
Cbc0038I Pass  23: suminf.    1.98414 (6) obj. -36.9351 iterations 18
Cbc0038I Pass  24: suminf.    1.98414 (6) obj. -36.9351 iterations 3
Cbc0038I Pass  25: suminf.    1.00521 (3) obj. -36.9351 iterations 7
Cbc0038I Pass  26: suminf.    0.78438 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  27: suminf.    0.41950 (2) obj. -36.9351 iterations 2
Cbc0038I Pass  28: suminf.    0.41950 (2) obj. -36.9351 iterations 0
Cbc0038I Pass  29: suminf.    0.97674 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  30: suminf.    2.36074 (6) obj. -36.9351 iterations 4
Cbc0038I Pass  31: suminf.    1.33030 (4) obj. -36.9351 iterations 2
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -44.4023
Cbc0038I Pass  31: suminf.    1.13857 (5) obj. -44.4023 iterations 2
Cbc0038I Pass  32: suminf.    0.98860 (4) obj. -44.4023 iterations 3
Cbc0038I Pass  33: suminf.    1.61536 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  34: suminf.    0.89199 (3) obj. -44.4023 iterations 2
Cbc0038I Pass  35: suminf.    0.80106 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  36: suminf.    2.27731 (7) obj. -44.4023 iterations 5
Cbc0038I Pass  37: suminf.    1.61167 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  38: suminf.    2.02802 (6) obj. -44.4023 iterations 4
Cbc0038I Pass  39: suminf.    2.23950 (8) obj. -44.4023 iterations 6
Cbc0038I Pass  40: suminf.    1.49299 (6) obj. -44.4023 iterations 3
Cbc0038I Pass  41: suminf.    1.24140 (4) obj. -44.4023 iterations 4
Cbc0038I Pass  42: suminf.    0.85399 (3) obj. -44.4023 iterations 6
Cbc0038I Pass  43: suminf.    0.80106 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  44: suminf.    2.27731 (7) obj. -44.4023 iterations 7
Cbc0038I Pass  45: suminf.    1.61167 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  46: suminf.    0.89199 (3) obj. -44.4023 iterations 4
Cbc0038I Pass  47: suminf.    1.97898 (5) obj. -44.4023 iterations 6
Cbc0038I Pass  48: suminf.    1.38483 (7) obj. -44.4023 iterations 6
Cbc0038I Pass  49: suminf.    0.97932 (4) obj. -44.4023 iterations 5
Cbc0038I Pass  50: suminf.    1.68199 (6) obj. -44.4023 iterations 4
Cbc0038I Pass  51: suminf.    1.13857 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  52: suminf.    0.98860 (4) obj. -44.4023 iterations 3
Cbc0038I Pass  53: suminf.    1.61536 (5) obj. -44.4023 iterations 4
Cbc0038I Pass  54: suminf.    0.89199 (3) obj. -44.4023 iterations 3
Cbc0038I Pass  55: suminf.    0.80106 (5) obj. -44.4023 iterations 4
Cbc0038I Pass  56: suminf.    2.27731 (7) obj. -44.4023 iterations 7
Cbc0038I Pass  57: suminf.    1.61167 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  58: suminf.    3.18405 (10) obj. -44.4023 iterations 12
Cbc0038I Pass  59: suminf.    2.48925 (8) obj. -44.4023 iterations 4
Cbc0038I Pass  60: suminf.    2.04174 (6) obj. -44.4023 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.7865 - took 0.05 seconds
Cbc0012I Integer solution of -32.7865 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 14 added rows had average density of 11
Cbc0013I At root node, 14 cuts changed objective from -74.271184 to -49.464632 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1249 row cuts average 4.1 elements, 4 column cuts (4 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 681 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.7865, took 2122 iterations and 4 nodes (0.16 seconds)
Cbc0032I Strong branching done 48 times (637 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-11) rows, 40 (-4) columns and 294 (-66) elements
Clp1000I sum of infeasibilities 1.25874e-07 - average 3.5964e-09, 4 fixed columns
Coin0506I Presolve 32 (-3) rows, 36 (-4) columns and 225 (-69) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 3.369312 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 81.172117
Clp0000I Optimal - objective value 81.172117
Coin0511I After Postsolve, objective 81.172117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.172117
Clp0000I Optimal - objective value 81.172117
Clp0000I Optimal - objective value 81.172117
Coin0511I After Postsolve, objective 81.172117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.17211679 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.519%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.93493
Cbc0038I Pass   1: suminf.    1.14849 (10) obj. -56.2562 iterations 4
Cbc0038I Pass   2: suminf.    0.65700 (6) obj. -52.6032 iterations 2
Cbc0038I Solution found of -23.1577
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -23.1577 to -32.7865 (0.01 seconds)
Cbc0038I Round again with cutoff of -35.5573
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.14849 (10) obj. -56.2562 iterations 0
Cbc0038I Pass   4: suminf.    0.65700 (6) obj. -52.6032 iterations 1
Cbc0038I Pass   5: suminf.    0.54759 (3) obj. -35.5573 iterations 11
Cbc0038I Pass   6: suminf.    0.22073 (2) obj. -35.5573 iterations 2
Cbc0038I Pass   7: suminf.    0.66072 (4) obj. -35.5573 iterations 3
Cbc0038I Pass   8: suminf.    0.82604 (5) obj. -35.5573 iterations 7
Cbc0038I Pass   9: suminf.    0.68316 (5) obj. -35.5573 iterations 1
Cbc0038I Pass  10: suminf.    0.96048 (4) obj. -35.5573 iterations 3
Cbc0038I Pass  11: suminf.    0.96048 (4) obj. -35.5573 iterations 0
Cbc0038I Pass  12: suminf.    1.02264 (4) obj. -35.5573 iterations 4
Cbc0038I Pass  13: suminf.    0.26736 (3) obj. -35.5573 iterations 2
Cbc0038I Pass  14: suminf.    0.79401 (5) obj. -35.5573 iterations 4
Cbc0038I Pass  15: suminf.    1.22819 (8) obj. -35.5573 iterations 10
Cbc0038I Pass  16: suminf.    0.76483 (6) obj. -35.5573 iterations 2
Cbc0038I Pass  17: suminf.    0.47549 (5) obj. -35.5573 iterations 3
Cbc0038I Pass  18: suminf.    0.47549 (5) obj. -35.5573 iterations 0
Cbc0038I Pass  19: suminf.    0.83310 (5) obj. -35.5573 iterations 2
Cbc0038I Pass  20: suminf.    0.83310 (5) obj. -35.5573 iterations 0
Cbc0038I Pass  21: suminf.    1.24697 (10) obj. -35.5573 iterations 3
Cbc0038I Pass  22: suminf.    0.72198 (5) obj. -35.5573 iterations 2
Cbc0038I Pass  23: suminf.    0.45505 (4) obj. -35.5573 iterations 2
Cbc0038I Pass  24: suminf.    0.37918 (4) obj. -35.5573 iterations 1
Cbc0038I Pass  25: suminf.    0.46021 (4) obj. -35.5573 iterations 3
Cbc0038I Pass  26: suminf.    1.48118 (11) obj. -35.5573 iterations 8
Cbc0038I Pass  27: suminf.    0.96277 (6) obj. -35.5573 iterations 2
Cbc0038I Pass  28: suminf.    0.68243 (4) obj. -35.5573 iterations 3
Cbc0038I Pass  29: suminf.    0.26736 (3) obj. -35.5573 iterations 2
Cbc0038I Pass  30: suminf.    0.81739 (5) obj. -35.5573 iterations 4
Cbc0038I Pass  31: suminf.    1.34742 (9) obj. -35.5573 iterations 9
Cbc0038I Pass  32: suminf.    0.28392 (4) obj. -35.5573 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -32.7865 - took 0.01 seconds
Cbc0012I Integer solution of -32.7865 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 5 rows 6 columns
Cbc0031I 12 added rows had average density of 7.6666667
Cbc0013I At root node, 84 cuts changed objective from -60.49334 to -32.108283 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 61 row cuts average 3.6 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.7865, took 32 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 22 (-2) columns and 110 (-19) elements
Clp1000I sum of infeasibilities 8.03553e-07 - average 2.17176e-08, 0 fixed columns
Coin0506I Presolve 37 (0) rows, 22 (0) columns and 110 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 76.029877
Clp0000I Optimal - objective value 76.029877
Coin0511I After Postsolve, objective 76.029877, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.029877
Clp0000I Optimal - objective value 76.029877
Clp0000I Optimal - objective value 76.029877
Coin0511I After Postsolve, objective 76.029877, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.02987656 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.141%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.57259
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.7115 iterations 19
Cbc0038I Solution found of -7.7115
Cbc0038I Relaxing continuous gives -7.7115
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -7.7115 to -32.7865 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.9351
Cbc0038I Pass   2: suminf.    0.93308 (3) obj. -36.9351 iterations 2
Cbc0038I Pass   3: suminf.    0.63655 (2) obj. -36.9351 iterations 2
Cbc0038I Pass   4: suminf.    0.40912 (2) obj. -36.9351 iterations 2
Cbc0038I Pass   5: suminf.    0.40912 (2) obj. -36.9351 iterations 0
Cbc0038I Pass   6: suminf.    0.79070 (2) obj. -36.9351 iterations 1
Cbc0038I Pass   7: suminf.    1.10956 (4) obj. -36.9351 iterations 3
Cbc0038I Pass   8: suminf.    0.78730 (3) obj. -36.9351 iterations 3
Cbc0038I Pass   9: suminf.    1.23170 (4) obj. -36.9351 iterations 5
Cbc0038I Pass  10: suminf.    0.91874 (4) obj. -36.9351 iterations 3
Cbc0038I Pass  11: suminf.    0.40912 (2) obj. -36.9351 iterations 3
Cbc0038I Pass  12: suminf.    0.40912 (2) obj. -36.9351 iterations 0
Cbc0038I Pass  13: suminf.    0.79070 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  14: suminf.    0.63655 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  15: suminf.    0.84918 (4) obj. -36.9351 iterations 1
Cbc0038I Pass  16: suminf.    0.63655 (2) obj. -36.9351 iterations 2
Cbc0038I Pass  17: suminf.    0.40912 (2) obj. -36.9351 iterations 2
Cbc0038I Pass  18: suminf.    0.40912 (2) obj. -36.9351 iterations 0
Cbc0038I Pass  19: suminf.    0.79070 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  20: suminf.    1.91613 (6) obj. -36.9351 iterations 7
Cbc0038I Pass  21: suminf.    1.65550 (5) obj. -36.9351 iterations 2
Cbc0038I Pass  22: suminf.    1.52703 (16) obj. -36.9351 iterations 13
Cbc0038I Pass  23: suminf.    1.98414 (6) obj. -36.9351 iterations 18
Cbc0038I Pass  24: suminf.    1.98414 (6) obj. -36.9351 iterations 3
Cbc0038I Pass  25: suminf.    1.00521 (3) obj. -36.9351 iterations 7
Cbc0038I Pass  26: suminf.    0.78438 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  27: suminf.    0.41950 (2) obj. -36.9351 iterations 2
Cbc0038I Pass  28: suminf.    0.41950 (2) obj. -36.9351 iterations 0
Cbc0038I Pass  29: suminf.    0.97674 (2) obj. -36.9351 iterations 1
Cbc0038I Pass  30: suminf.    2.36074 (6) obj. -36.9351 iterations 4
Cbc0038I Pass  31: suminf.    1.33030 (4) obj. -36.9351 iterations 2
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -44.4023
Cbc0038I Pass  31: suminf.    1.13857 (5) obj. -44.4023 iterations 2
Cbc0038I Pass  32: suminf.    0.98860 (4) obj. -44.4023 iterations 3
Cbc0038I Pass  33: suminf.    1.61536 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  34: suminf.    0.89199 (3) obj. -44.4023 iterations 2
Cbc0038I Pass  35: suminf.    0.80106 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  36: suminf.    2.27731 (7) obj. -44.4023 iterations 5
Cbc0038I Pass  37: suminf.    1.61167 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  38: suminf.    2.02802 (6) obj. -44.4023 iterations 4
Cbc0038I Pass  39: suminf.    2.23950 (8) obj. -44.4023 iterations 6
Cbc0038I Pass  40: suminf.    1.49299 (6) obj. -44.4023 iterations 3
Cbc0038I Pass  41: suminf.    1.24140 (4) obj. -44.4023 iterations 4
Cbc0038I Pass  42: suminf.    0.85399 (3) obj. -44.4023 iterations 6
Cbc0038I Pass  43: suminf.    0.80106 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  44: suminf.    2.27731 (7) obj. -44.4023 iterations 7
Cbc0038I Pass  45: suminf.    1.61167 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  46: suminf.    0.89199 (3) obj. -44.4023 iterations 4
Cbc0038I Pass  47: suminf.    1.97898 (5) obj. -44.4023 iterations 6
Cbc0038I Pass  48: suminf.    1.38483 (7) obj. -44.4023 iterations 6
Cbc0038I Pass  49: suminf.    0.97932 (4) obj. -44.4023 iterations 5
Cbc0038I Pass  50: suminf.    1.68199 (6) obj. -44.4023 iterations 4
Cbc0038I Pass  51: suminf.    1.13857 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  52: suminf.    0.98860 (4) obj. -44.4023 iterations 3
Cbc0038I Pass  53: suminf.    1.61536 (5) obj. -44.4023 iterations 4
Cbc0038I Pass  54: suminf.    0.89199 (3) obj. -44.4023 iterations 3
Cbc0038I Pass  55: suminf.    0.80106 (5) obj. -44.4023 iterations 4
Cbc0038I Pass  56: suminf.    2.27731 (7) obj. -44.4023 iterations 7
Cbc0038I Pass  57: suminf.    1.61167 (5) obj. -44.4023 iterations 3
Cbc0038I Pass  58: suminf.    3.18405 (10) obj. -44.4023 iterations 12
Cbc0038I Pass  59: suminf.    2.48925 (8) obj. -44.4023 iterations 4
Cbc0038I Pass  60: suminf.    2.04174 (6) obj. -44.4023 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.7865 - took 0.03 seconds
Cbc0012I Integer solution of -32.7865 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 14 added rows had average density of 11
Cbc0013I At root node, 14 cuts changed objective from -74.271184 to -49.464632 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1249 row cuts average 4.1 elements, 4 column cuts (4 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 681 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.7865, took 2122 iterations and 4 nodes (0.17 seconds)
Cbc0032I Strong branching done 48 times (637 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 40 (-5) columns and 294 (-67) elements
Clp1000I sum of infeasibilities 1.25874e-07 - average 3.5964e-09, 4 fixed columns
Coin0506I Presolve 32 (-3) rows, 36 (-4) columns and 225 (-69) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 3.369312 - largest nonzero change 0 ( 0%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 81.172117
Clp0000I Optimal - objective value 81.172117
Coin0511I After Postsolve, objective 81.172117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.172117
Clp0000I Optimal - objective value 81.172117
Clp0000I Optimal - objective value 81.172117
Coin0511I After Postsolve, objective 81.172117, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.17211679 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.519%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.93493
Cbc0038I Pass   1: suminf.    1.14849 (10) obj. -56.2562 iterations 4
Cbc0038I Pass   2: suminf.    0.65700 (6) obj. -52.6032 iterations 2
Cbc0038I Solution found of -23.1577
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -23.1577 to -32.7865 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.5573
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.14849 (10) obj. -56.2562 iterations 0
Cbc0038I Pass   4: suminf.    0.65700 (6) obj. -52.6032 iterations 1
Cbc0038I Pass   5: suminf.    0.54759 (3) obj. -35.5573 iterations 11
Cbc0038I Pass   6: suminf.    0.22073 (2) obj. -35.5573 iterations 2
Cbc0038I Pass   7: suminf.    0.66072 (4) obj. -35.5573 iterations 3
Cbc0038I Pass   8: suminf.    0.82604 (5) obj. -35.5573 iterations 7
Cbc0038I Pass   9: suminf.    0.68316 (5) obj. -35.5573 iterations 1
Cbc0038I Pass  10: suminf.    0.96048 (4) obj. -35.5573 iterations 3
Cbc0038I Pass  11: suminf.    0.96048 (4) obj. -35.5573 iterations 0
Cbc0038I Pass  12: suminf.    1.02264 (4) obj. -35.5573 iterations 4
Cbc0038I Pass  13: suminf.    0.26736 (3) obj. -35.5573 iterations 2
Cbc0038I Pass  14: suminf.    0.79401 (5) obj. -35.5573 iterations 4
Cbc0038I Pass  15: suminf.    1.22819 (8) obj. -35.5573 iterations 10
Cbc0038I Pass  16: suminf.    0.76483 (6) obj. -35.5573 iterations 2
Cbc0038I Pass  17: suminf.    0.47549 (5) obj. -35.5573 iterations 3
Cbc0038I Pass  18: suminf.    0.47549 (5) obj. -35.5573 iterations 0
Cbc0038I Pass  19: suminf.    0.83310 (5) obj. -35.5573 iterations 2
Cbc0038I Pass  20: suminf.    0.83310 (5) obj. -35.5573 iterations 0
Cbc0038I Pass  21: suminf.    1.24697 (10) obj. -35.5573 iterations 3
Cbc0038I Pass  22: suminf.    0.72198 (5) obj. -35.5573 iterations 2
Cbc0038I Pass  23: suminf.    0.45505 (4) obj. -35.5573 iterations 2
Cbc0038I Pass  24: suminf.    0.37918 (4) obj. -35.5573 iterations 1
Cbc0038I Pass  25: suminf.    0.46021 (4) obj. -35.5573 iterations 3
Cbc0038I Pass  26: suminf.    1.48118 (11) obj. -35.5573 iterations 8
Cbc0038I Pass  27: suminf.    0.96277 (6) obj. -35.5573 iterations 2
Cbc0038I Pass  28: suminf.    0.68243 (4) obj. -35.5573 iterations 3
Cbc0038I Pass  29: suminf.    0.26736 (3) obj. -35.5573 iterations 2
Cbc0038I Pass  30: suminf.    0.81739 (5) obj. -35.5573 iterations 4
Cbc0038I Pass  31: suminf.    1.34742 (9) obj. -35.5573 iterations 9
Cbc0038I Pass  32: suminf.    0.28392 (4) obj. -35.5573 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -32.7865 - took 0.01 seconds
Cbc0012I Integer solution of -32.7865 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 5 rows 6 columns
Cbc0031I 12 added rows had average density of 7.6666667
Cbc0013I At root node, 84 cuts changed objective from -60.49334 to -32.108283 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 61 row cuts average 3.6 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.7865, took 32 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

