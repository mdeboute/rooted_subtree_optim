Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 65 (-34) rows, 36 (-14) columns and 163 (-122) elements
Clp0000I Optimal - objective value 6811.0284
Coin0511I After Postsolve, objective 6811.0284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6811.028434 - 33 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 36 columns (35 integer (35 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.435%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.76754
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3160.49 iterations 21
Cbc0038I Solution found of -3160.49
Cbc0038I Relaxing continuous gives -3160.49
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -3160.49 to -5446.71 (0.01 seconds)
Cbc0038I Round again with cutoff of -5583.14
Cbc0038I Pass   2: suminf.    1.46961 (6) obj. -5583.14 iterations 6
Cbc0038I Pass   3: suminf.    0.51599 (3) obj. -5583.14 iterations 5
Cbc0038I Pass   4: suminf.    1.26986 (3) obj. -5583.14 iterations 2
Cbc0038I Pass   5: suminf.    2.71475 (9) obj. -5583.14 iterations 13
Cbc0038I Pass   6: suminf.    1.00000 (6) obj. -5583.14 iterations 13
Cbc0038I Pass   7: suminf.    1.00000 (6) obj. -5583.14 iterations 0
Cbc0038I Pass   8: suminf.    1.57148 (6) obj. -5583.14 iterations 6
Cbc0038I Pass   9: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  10: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  11: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I Pass  12: suminf.    0.64832 (3) obj. -5583.14 iterations 3
Cbc0038I Pass  13: suminf.    0.86756 (3) obj. -5583.14 iterations 2
Cbc0038I Pass  14: suminf.    1.00000 (6) obj. -5583.14 iterations 8
Cbc0038I Pass  15: suminf.    1.00000 (5) obj. -5583.14 iterations 5
Cbc0038I Pass  16: suminf.    1.54121 (6) obj. -5583.14 iterations 5
Cbc0038I Pass  17: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  18: suminf.    1.03486 (5) obj. -5583.14 iterations 8
Cbc0038I Pass  19: suminf.    1.01198 (7) obj. -5583.14 iterations 2
Cbc0038I Pass  20: suminf.    1.57148 (6) obj. -5583.14 iterations 4
Cbc0038I Pass  21: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  22: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  23: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I Pass  24: suminf.    0.64832 (3) obj. -5583.14 iterations 3
Cbc0038I Pass  25: suminf.    0.86756 (3) obj. -5583.14 iterations 2
Cbc0038I Pass  26: suminf.    1.55909 (8) obj. -5583.14 iterations 14
Cbc0038I Pass  27: suminf.    1.55909 (8) obj. -5583.14 iterations 1
Cbc0038I Pass  28: suminf.    1.57148 (6) obj. -5583.14 iterations 9
Cbc0038I Pass  29: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  30: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  31: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 27 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5446.71 - took 0.03 seconds
Cbc0012I Integer solution of -5446.708 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -5449.636 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 65 rows 36 columns, reduced to 22 rows 17 columns
Cbc0031I 3 added rows had average density of 9.3333333
Cbc0013I At root node, 13 cuts changed objective from -6811.0284 to -5449.636 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 144 row cuts average 3.6 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 52 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5449.636, took 102 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-21) rows, 82 (-14) columns and 1004 (-409) elements
Clp1000I sum of infeasibilities 0 - average 0, 82 fixed columns
Coin0506I Presolve 0 (-77) rows, 0 (-82) columns and 0 (-1004) elements
Clp0000I Optimal - objective value 3323.149
Clp0000I Optimal - objective value 3323.149
Coin0511I After Postsolve, objective 3323.149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8878145 - largest nonzero change 9.7455026e-05 ( 0.025516947%) - largest zero change 0
Clp0000I Optimal - objective value 8206.5453
Clp0000I Optimal - objective value 8206.5453
Clp0000I Optimal - objective value 8206.5453
Coin0511I After Postsolve, objective 8206.5453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8206.5453 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 82 columns (82 integer (82 of which binary)) and 1006 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.206%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.7214
Cbc0038I Pass   1: suminf.    2.53573 (21) obj. -3547.96 iterations 26
Cbc0038I Pass   2: suminf.    2.53573 (21) obj. -3547.96 iterations 1
Cbc0038I Solution found of -1786.56
Cbc0038I Rounding solution of -1899.99 is better than previous of -1786.56

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 82 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -1899.99 to -5096.15 (0.02 seconds)
Cbc0038I Round again with cutoff of -5331.29
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.34767 (37) obj. -5331.29 iterations 13
Cbc0038I Pass   4: suminf.    5.34767 (37) obj. -5331.29 iterations 0
Cbc0038I Pass   5: suminf.    2.43582 (20) obj. -5331.29 iterations 24
Cbc0038I Pass   6: suminf.    2.43213 (26) obj. -5331.29 iterations 1
Cbc0038I Pass   7: suminf.    1.83696 (17) obj. -5331.29 iterations 9
Cbc0038I Pass   8: suminf.    1.83696 (17) obj. -5331.29 iterations 0
Cbc0038I Pass   9: suminf.    1.12934 (6) obj. -5331.29 iterations 14
Cbc0038I Pass  10: suminf.    1.31072 (5) obj. -5331.29 iterations 13
Cbc0038I Pass  11: suminf.    1.31072 (5) obj. -5331.29 iterations 0
Cbc0038I Pass  12: suminf.    1.09379 (4) obj. -5331.29 iterations 7
Cbc0038I Pass  13: suminf.    1.35532 (4) obj. -5331.29 iterations 7
Cbc0038I Pass  14: suminf.    1.24279 (5) obj. -5331.29 iterations 7
Cbc0038I Pass  15: suminf.    1.73615 (5) obj. -5331.29 iterations 9
Cbc0038I Pass  16: suminf.    1.19582 (6) obj. -5331.29 iterations 9
Cbc0038I Pass  17: suminf.    1.15729 (4) obj. -5331.29 iterations 8
Cbc0038I Pass  18: suminf.    0.16667 (1) obj. -5512.82 iterations 5
Cbc0038I Pass  19: suminf.    0.44033 (1) obj. -5331.29 iterations 4
Cbc0038I Pass  20: suminf.    0.39394 (1) obj. -5419.79 iterations 2
Cbc0038I Pass  21: suminf.    3.52308 (12) obj. -5331.29 iterations 17
Cbc0038I Pass  22: suminf.    2.40757 (10) obj. -5331.29 iterations 6
Cbc0038I Pass  23: suminf.    2.36031 (10) obj. -5331.29 iterations 2
Cbc0038I Pass  24: suminf.    1.24270 (3) obj. -5331.29 iterations 12
Cbc0038I Pass  25: suminf.    3.96456 (16) obj. -5331.29 iterations 20
Cbc0038I Pass  26: suminf.    3.87810 (16) obj. -5331.29 iterations 5
Cbc0038I Pass  27: suminf.    1.35532 (4) obj. -5331.29 iterations 16
Cbc0038I Pass  28: suminf.    1.24279 (5) obj. -5331.29 iterations 9
Cbc0038I Pass  29: suminf.    1.73615 (5) obj. -5331.29 iterations 10
Cbc0038I Pass  30: suminf.    1.19582 (6) obj. -5331.29 iterations 7
Cbc0038I Pass  31: suminf.    1.15729 (4) obj. -5331.29 iterations 9
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -5512.82 iterations 5
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 82 columns, reduced to 45 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -5096.15 to -5446.71 (0.04 seconds)
Cbc0038I Round again with cutoff of -5846.87
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    6.61554 (42) obj. -5846.87 iterations 4
Cbc0038I Pass  33: suminf.    5.56657 (45) obj. -5846.87 iterations 5
Cbc0038I Pass  34: suminf.    5.29136 (38) obj. -5846.87 iterations 1
Cbc0038I Pass  35: suminf.    2.37575 (14) obj. -5846.87 iterations 26
Cbc0038I Pass  36: suminf.    2.37575 (14) obj. -5846.87 iterations 0
Cbc0038I Pass  37: suminf.    0.76786 (8) obj. -5846.87 iterations 14
Cbc0038I Pass  38: suminf.    0.76786 (8) obj. -5846.87 iterations 0
Cbc0038I Pass  39: suminf.    0.65515 (2) obj. -5846.87 iterations 17
Cbc0038I Pass  40: suminf.    0.65515 (2) obj. -5846.87 iterations 1
Cbc0038I Pass  41: suminf.    0.53518 (2) obj. -5846.87 iterations 16
Cbc0038I Pass  42: suminf.    3.69759 (19) obj. -5846.87 iterations 25
Cbc0038I Pass  43: suminf.    3.43835 (14) obj. -5846.87 iterations 6
Cbc0038I Pass  44: suminf.    1.58598 (7) obj. -5846.87 iterations 12
Cbc0038I Pass  45: suminf.    1.58598 (7) obj. -5846.87 iterations 0
Cbc0038I Pass  46: suminf.    1.01547 (4) obj. -5846.87 iterations 7
Cbc0038I Pass  47: suminf.    1.01547 (4) obj. -5846.87 iterations 2
Cbc0038I Pass  48: suminf.    0.65515 (2) obj. -5846.87 iterations 11
Cbc0038I Pass  49: suminf.    0.65515 (2) obj. -5846.87 iterations 2
Cbc0038I Pass  50: suminf.    0.53518 (2) obj. -5846.87 iterations 17
Cbc0038I Pass  51: suminf.    3.21760 (14) obj. -5846.87 iterations 18
Cbc0038I Pass  52: suminf.    2.25251 (14) obj. -5846.87 iterations 2
Cbc0038I Pass  53: suminf.    2.25251 (14) obj. -5846.87 iterations 0
Cbc0038I Pass  54: suminf.    0.65515 (2) obj. -5846.87 iterations 24
Cbc0038I Pass  55: suminf.    0.65515 (2) obj. -5846.87 iterations 1
Cbc0038I Pass  56: suminf.    0.53518 (2) obj. -5846.87 iterations 14
Cbc0038I Pass  57: suminf.    2.77431 (11) obj. -5846.87 iterations 13
Cbc0038I Pass  58: suminf.    2.51415 (10) obj. -5846.87 iterations 10
Cbc0038I Pass  59: suminf.    1.34991 (4) obj. -5846.87 iterations 16
Cbc0038I Pass  60: suminf.    1.34492 (4) obj. -5846.87 iterations 4
Cbc0038I Pass  61: suminf.    0.83725 (3) obj. -5846.87 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -5446.71 - took 0.05 seconds
Cbc0012I Integer solution of -5446.708 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 77 rows 82 columns, reduced to 7 rows 8 columns
Cbc0012I Integer solution of -5449.636 found by DiveCoefficient after 62 iterations and 0 nodes (0.11 seconds)
Cbc0031I 11 added rows had average density of 2
Cbc0013I At root node, 11 cuts changed objective from -7447.5123 to -5449.636 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 260 row cuts average 2.0 elements, 39 column cuts (39 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 19 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5449.636, took 62 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 65 (-34) rows, 36 (-14) columns and 163 (-122) elements
Clp0000I Optimal - objective value 6811.0284
Coin0511I After Postsolve, objective 6811.0284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6811.028434 - 33 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 65 rows, 36 columns (35 integer (35 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.435%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.76754
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3160.49 iterations 21
Cbc0038I Solution found of -3160.49
Cbc0038I Relaxing continuous gives -3160.49
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 21 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -3160.49 to -5446.71 (0.01 seconds)
Cbc0038I Round again with cutoff of -5583.14
Cbc0038I Pass   2: suminf.    1.46961 (6) obj. -5583.14 iterations 6
Cbc0038I Pass   3: suminf.    0.51599 (3) obj. -5583.14 iterations 5
Cbc0038I Pass   4: suminf.    1.26986 (3) obj. -5583.14 iterations 2
Cbc0038I Pass   5: suminf.    2.71475 (9) obj. -5583.14 iterations 13
Cbc0038I Pass   6: suminf.    1.00000 (6) obj. -5583.14 iterations 13
Cbc0038I Pass   7: suminf.    1.00000 (6) obj. -5583.14 iterations 0
Cbc0038I Pass   8: suminf.    1.57148 (6) obj. -5583.14 iterations 6
Cbc0038I Pass   9: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  10: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  11: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I Pass  12: suminf.    0.64832 (3) obj. -5583.14 iterations 3
Cbc0038I Pass  13: suminf.    0.86756 (3) obj. -5583.14 iterations 2
Cbc0038I Pass  14: suminf.    1.00000 (6) obj. -5583.14 iterations 8
Cbc0038I Pass  15: suminf.    1.00000 (5) obj. -5583.14 iterations 5
Cbc0038I Pass  16: suminf.    1.54121 (6) obj. -5583.14 iterations 5
Cbc0038I Pass  17: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  18: suminf.    1.03486 (5) obj. -5583.14 iterations 8
Cbc0038I Pass  19: suminf.    1.01198 (7) obj. -5583.14 iterations 2
Cbc0038I Pass  20: suminf.    1.57148 (6) obj. -5583.14 iterations 4
Cbc0038I Pass  21: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  22: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  23: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I Pass  24: suminf.    0.64832 (3) obj. -5583.14 iterations 3
Cbc0038I Pass  25: suminf.    0.86756 (3) obj. -5583.14 iterations 2
Cbc0038I Pass  26: suminf.    1.55909 (8) obj. -5583.14 iterations 14
Cbc0038I Pass  27: suminf.    1.55909 (8) obj. -5583.14 iterations 1
Cbc0038I Pass  28: suminf.    1.57148 (6) obj. -5583.14 iterations 9
Cbc0038I Pass  29: suminf.    1.11178 (4) obj. -5583.14 iterations 2
Cbc0038I Pass  30: suminf.    0.56128 (2) obj. -5583.14 iterations 3
Cbc0038I Pass  31: suminf.    0.17474 (1) obj. -5583.14 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 65 rows 36 columns, reduced to 27 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -5446.71 - took 0.01 seconds
Cbc0012I Integer solution of -5446.708 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -5449.636 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 65 rows 36 columns, reduced to 22 rows 17 columns
Cbc0031I 3 added rows had average density of 9.3333333
Cbc0013I At root node, 13 cuts changed objective from -6811.0284 to -5449.636 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 144 row cuts average 3.6 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 52 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5449.636, took 102 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-22) rows, 82 (-15) columns and 1004 (-410) elements
Clp1000I sum of infeasibilities 0 - average 0, 82 fixed columns
Coin0506I Presolve 0 (-77) rows, 0 (-82) columns and 0 (-1004) elements
Clp0000I Optimal - objective value 3323.149
Clp0000I Optimal - objective value 3323.149
Coin0511I After Postsolve, objective 3323.149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.8878145 - largest nonzero change 9.7455026e-05 ( 0.025516947%) - largest zero change 0
Clp0000I Optimal - objective value 8206.5453
Clp0000I Optimal - objective value 8206.5453
Clp0000I Optimal - objective value 8206.5453
Coin0511I After Postsolve, objective 8206.5453, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 8206.5453 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 82 columns (82 integer (82 of which binary)) and 1006 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.206%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.7214
Cbc0038I Pass   1: suminf.    2.53573 (21) obj. -3547.96 iterations 26
Cbc0038I Pass   2: suminf.    2.53573 (21) obj. -3547.96 iterations 1
Cbc0038I Solution found of -1786.56
Cbc0038I Rounding solution of -1899.99 is better than previous of -1786.56

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 82 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -1899.99 to -5096.15 (0.02 seconds)
Cbc0038I Round again with cutoff of -5331.29
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.34767 (37) obj. -5331.29 iterations 13
Cbc0038I Pass   4: suminf.    5.34767 (37) obj. -5331.29 iterations 0
Cbc0038I Pass   5: suminf.    2.43582 (20) obj. -5331.29 iterations 24
Cbc0038I Pass   6: suminf.    2.43213 (26) obj. -5331.29 iterations 1
Cbc0038I Pass   7: suminf.    1.83696 (17) obj. -5331.29 iterations 9
Cbc0038I Pass   8: suminf.    1.83696 (17) obj. -5331.29 iterations 0
Cbc0038I Pass   9: suminf.    1.12934 (6) obj. -5331.29 iterations 14
Cbc0038I Pass  10: suminf.    1.31072 (5) obj. -5331.29 iterations 13
Cbc0038I Pass  11: suminf.    1.31072 (5) obj. -5331.29 iterations 0
Cbc0038I Pass  12: suminf.    1.09379 (4) obj. -5331.29 iterations 7
Cbc0038I Pass  13: suminf.    1.35532 (4) obj. -5331.29 iterations 7
Cbc0038I Pass  14: suminf.    1.24279 (5) obj. -5331.29 iterations 7
Cbc0038I Pass  15: suminf.    1.73615 (5) obj. -5331.29 iterations 9
Cbc0038I Pass  16: suminf.    1.19582 (6) obj. -5331.29 iterations 9
Cbc0038I Pass  17: suminf.    1.15729 (4) obj. -5331.29 iterations 8
Cbc0038I Pass  18: suminf.    0.16667 (1) obj. -5512.82 iterations 5
Cbc0038I Pass  19: suminf.    0.44033 (1) obj. -5331.29 iterations 4
Cbc0038I Pass  20: suminf.    0.39394 (1) obj. -5419.79 iterations 2
Cbc0038I Pass  21: suminf.    3.52308 (12) obj. -5331.29 iterations 17
Cbc0038I Pass  22: suminf.    2.40757 (10) obj. -5331.29 iterations 6
Cbc0038I Pass  23: suminf.    2.36031 (10) obj. -5331.29 iterations 2
Cbc0038I Pass  24: suminf.    1.24270 (3) obj. -5331.29 iterations 12
Cbc0038I Pass  25: suminf.    3.96456 (16) obj. -5331.29 iterations 20
Cbc0038I Pass  26: suminf.    3.87810 (16) obj. -5331.29 iterations 5
Cbc0038I Pass  27: suminf.    1.35532 (4) obj. -5331.29 iterations 16
Cbc0038I Pass  28: suminf.    1.24279 (5) obj. -5331.29 iterations 9
Cbc0038I Pass  29: suminf.    1.73615 (5) obj. -5331.29 iterations 10
Cbc0038I Pass  30: suminf.    1.19582 (6) obj. -5331.29 iterations 7
Cbc0038I Pass  31: suminf.    1.15729 (4) obj. -5331.29 iterations 9
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -5512.82 iterations 5
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 82 columns, reduced to 45 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -5096.15 to -5446.71 (0.04 seconds)
Cbc0038I Round again with cutoff of -5846.87
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    6.61554 (42) obj. -5846.87 iterations 4
Cbc0038I Pass  33: suminf.    5.56657 (45) obj. -5846.87 iterations 5
Cbc0038I Pass  34: suminf.    5.29136 (38) obj. -5846.87 iterations 1
Cbc0038I Pass  35: suminf.    2.37575 (14) obj. -5846.87 iterations 26
Cbc0038I Pass  36: suminf.    2.37575 (14) obj. -5846.87 iterations 0
Cbc0038I Pass  37: suminf.    0.76786 (8) obj. -5846.87 iterations 14
Cbc0038I Pass  38: suminf.    0.76786 (8) obj. -5846.87 iterations 0
Cbc0038I Pass  39: suminf.    0.65515 (2) obj. -5846.87 iterations 17
Cbc0038I Pass  40: suminf.    0.65515 (2) obj. -5846.87 iterations 1
Cbc0038I Pass  41: suminf.    0.53518 (2) obj. -5846.87 iterations 16
Cbc0038I Pass  42: suminf.    3.69759 (19) obj. -5846.87 iterations 25
Cbc0038I Pass  43: suminf.    3.43835 (14) obj. -5846.87 iterations 6
Cbc0038I Pass  44: suminf.    1.58598 (7) obj. -5846.87 iterations 12
Cbc0038I Pass  45: suminf.    1.58598 (7) obj. -5846.87 iterations 0
Cbc0038I Pass  46: suminf.    1.01547 (4) obj. -5846.87 iterations 7
Cbc0038I Pass  47: suminf.    1.01547 (4) obj. -5846.87 iterations 2
Cbc0038I Pass  48: suminf.    0.65515 (2) obj. -5846.87 iterations 11
Cbc0038I Pass  49: suminf.    0.65515 (2) obj. -5846.87 iterations 2
Cbc0038I Pass  50: suminf.    0.53518 (2) obj. -5846.87 iterations 17
Cbc0038I Pass  51: suminf.    3.21760 (14) obj. -5846.87 iterations 18
Cbc0038I Pass  52: suminf.    2.25251 (14) obj. -5846.87 iterations 2
Cbc0038I Pass  53: suminf.    2.25251 (14) obj. -5846.87 iterations 0
Cbc0038I Pass  54: suminf.    0.65515 (2) obj. -5846.87 iterations 24
Cbc0038I Pass  55: suminf.    0.65515 (2) obj. -5846.87 iterations 1
Cbc0038I Pass  56: suminf.    0.53518 (2) obj. -5846.87 iterations 14
Cbc0038I Pass  57: suminf.    2.77431 (11) obj. -5846.87 iterations 13
Cbc0038I Pass  58: suminf.    2.51415 (10) obj. -5846.87 iterations 10
Cbc0038I Pass  59: suminf.    1.34991 (4) obj. -5846.87 iterations 16
Cbc0038I Pass  60: suminf.    1.34492 (4) obj. -5846.87 iterations 4
Cbc0038I Pass  61: suminf.    0.83725 (3) obj. -5846.87 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -5446.71 - took 0.05 seconds
Cbc0012I Integer solution of -5446.708 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 77 rows 82 columns, reduced to 7 rows 8 columns
Cbc0012I Integer solution of -5449.636 found by DiveCoefficient after 62 iterations and 0 nodes (0.12 seconds)
Cbc0031I 11 added rows had average density of 2
Cbc0013I At root node, 11 cuts changed objective from -7447.5123 to -5449.636 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 260 row cuts average 2.0 elements, 39 column cuts (39 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 19 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -5449.636, took 62 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.13

