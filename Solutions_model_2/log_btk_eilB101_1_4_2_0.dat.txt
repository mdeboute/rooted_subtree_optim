Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 98 (-5) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 0.000102479 - average 5.66184e-07, 31 fixed columns
Coin0506I Presolve 120 (-61) rows, 66 (-32) columns and 364 (-186) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 1.9570213 - largest nonzero change 0 ( 0%) - largest zero change 2.5877087e-05
Clp0000I Optimal - objective value 38.198676
Clp0000I Optimal - objective value 38.198676
Coin0511I After Postsolve, objective 38.198676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20303206 - largest nonzero change 0 ( 0%) - largest zero change 2.9204788e-05
Clp0000I Optimal - objective value 38.198676
Clp0000I Optimal - objective value 38.198676
Clp0000I Optimal - objective value 38.198676
Coin0511I After Postsolve, objective 38.198676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.19867616 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 180 rows, 98 columns (97 integer (97 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.057%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.06025
Cbc0038I Solution found of 6.4062
Cbc0038I Relaxing continuous gives -2.72236
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -2.72236 to -12.8159 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.3402
Cbc0038I Pass   1: suminf.    2.37374 (37) obj. -15.3402 iterations 60
Cbc0038I Pass   2: suminf.    1.45801 (8) obj. -15.3402 iterations 38
Cbc0038I Pass   3: suminf.    1.18061 (5) obj. -15.3402 iterations 6
Cbc0038I Pass   4: suminf.    2.06683 (9) obj. -15.3402 iterations 16
Cbc0038I Pass   5: suminf.    2.18960 (6) obj. -15.3402 iterations 11
Cbc0038I Pass   6: suminf.    1.57364 (4) obj. -15.3402 iterations 5
Cbc0038I Pass   7: suminf.    1.57364 (4) obj. -15.3402 iterations 0
Cbc0038I Pass   8: suminf.    1.90999 (7) obj. -15.3402 iterations 11
Cbc0038I Pass   9: suminf.    1.50046 (4) obj. -15.3402 iterations 5
Cbc0038I Pass  10: suminf.    1.50046 (4) obj. -15.3402 iterations 0
Cbc0038I Pass  11: suminf.    1.51517 (7) obj. -15.3402 iterations 7
Cbc0038I Pass  12: suminf.    1.51517 (7) obj. -15.3402 iterations 0
Cbc0038I Pass  13: suminf.    1.45444 (4) obj. -15.3402 iterations 10
Cbc0038I Pass  14: suminf.    0.85899 (3) obj. -15.3402 iterations 6
Cbc0038I Pass  15: suminf.    0.84489 (3) obj. -15.3402 iterations 3
Cbc0038I Pass  16: suminf.    1.64084 (4) obj. -15.3402 iterations 6
Cbc0038I Pass  17: suminf.    1.64084 (4) obj. -15.3402 iterations 0
Cbc0038I Pass  18: suminf.    0.85899 (3) obj. -15.3402 iterations 12
Cbc0038I Pass  19: suminf.    3.26751 (9) obj. -15.3402 iterations 25
Cbc0038I Pass  20: suminf.    0.73955 (3) obj. -15.3402 iterations 20
Cbc0038I Pass  21: suminf.    0.36476 (2) obj. -15.3402 iterations 1
Cbc0038I Pass  22: suminf.    0.40352 (2) obj. -15.3402 iterations 1
Cbc0038I Pass  23: suminf.    3.76045 (11) obj. -15.3402 iterations 28
Cbc0038I Pass  24: suminf.    1.76006 (6) obj. -15.3402 iterations 17
Cbc0038I Pass  25: suminf.    1.68929 (6) obj. -15.3402 iterations 2
Cbc0038I Pass  26: suminf.    1.01004 (4) obj. -15.3402 iterations 7
Cbc0038I Pass  27: suminf.    0.82249 (4) obj. -15.3402 iterations 2
Cbc0038I Pass  28: suminf.    1.82330 (5) obj. -15.3402 iterations 2
Cbc0038I Pass  29: suminf.    1.49500 (4) obj. -15.3402 iterations 1
Cbc0038I Pass  30: suminf.    4.01642 (13) obj. -15.3402 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 103 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -12.8159 to -12.8202 (0.12 seconds)
Cbc0038I Round again with cutoff of -19.8839
Cbc0038I Pass  30: suminf.    3.22852 (37) obj. -19.8839 iterations 0
Cbc0038I Pass  31: suminf.    1.86545 (8) obj. -19.8839 iterations 43
Cbc0038I Pass  32: suminf.    1.67657 (6) obj. -19.8839 iterations 3
Cbc0038I Pass  33: suminf.    2.20353 (7) obj. -19.8839 iterations 17
Cbc0038I Pass  34: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  35: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I Pass  36: suminf.    1.61852 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  37: suminf.    1.52290 (7) obj. -19.8839 iterations 1
Cbc0038I Pass  38: suminf.    2.34865 (9) obj. -19.8839 iterations 11
Cbc0038I Pass  39: suminf.    2.20353 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  40: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  41: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I Pass  42: suminf.    1.61852 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  43: suminf.    1.52290 (7) obj. -19.8839 iterations 1
Cbc0038I Pass  44: suminf.    2.34865 (9) obj. -19.8839 iterations 11
Cbc0038I Pass  45: suminf.    2.20353 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  46: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  47: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I Pass  48: suminf.    1.61852 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  49: suminf.    1.52290 (7) obj. -19.8839 iterations 1
Cbc0038I Pass  50: suminf.    2.34865 (9) obj. -19.8839 iterations 11
Cbc0038I Pass  51: suminf.    2.20353 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  52: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  53: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I Pass  54: suminf.    1.61852 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  55: suminf.    1.52290 (7) obj. -19.8839 iterations 1
Cbc0038I Pass  56: suminf.    2.34865 (9) obj. -19.8839 iterations 11
Cbc0038I Pass  57: suminf.    2.20353 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  58: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  59: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 90 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -12.8202 - took 0.16 seconds
Cbc0012I Integer solution of -12.82023 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 180 rows 98 columns, reduced to 71 rows 41 columns
Cbc0031I 23 added rows had average density of 65.478261
Cbc0013I At root node, 23 cuts changed objective from -38.058569 to -30.662207 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11416 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1718 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.82023 best solution, best possible -30.662207 (1.33 seconds)
Cbc0038I Full problem 180 rows 98 columns, reduced to 72 rows 42 columns
Cbc0012I Integer solution of -13.72663 found by RINS after 9280 iterations and 41 nodes (1.79 seconds)
Cbc0038I Full problem 180 rows 98 columns, reduced to 30 rows 24 columns
Cbc0010I After 117 nodes, 11 on tree, -13.72663 best solution, best possible -30.662207 (2.03 seconds)
Cbc0001I Search completed - best objective -13.72663, took 12230 iterations and 152 nodes (2.08 seconds)
Cbc0032I Strong branching done 1380 times (22222 iterations), fathomed 16 nodes and fixed 42 variables
Cbc0035I Maximum depth 47, 263 variables fixed on reduced cost
Total time (CPU seconds):       1.91   (Wallclock seconds):       2.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-70) rows, 147 (-55) columns and 2779 (-2874) elements
Clp1000I sum of infeasibilities 1.90588e-06 - average 1.4223e-08, 95 fixed columns
Coin0506I Presolve 42 (-92) rows, 51 (-96) columns and 181 (-2598) elements
Clp0006I 0  Obj -8.409184 Dual inf 3.3787529 (51)
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 1.2565399 - largest nonzero change 1.6981029e-05 ( 0.0012247315%) - largest zero change 2.7939977e-05
Clp0000I Optimal - objective value -6.0521707
Clp0000I Optimal - objective value -6.0521707
Coin0511I After Postsolve, objective -6.0521707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -6.0521707 Dual inf 71.413258 (51)
Clp0014I Perturbing problem by 0.001% of 1.6098192 - largest nonzero change 1.4388209e-05 ( 0.0012247315%) - largest zero change 2.9972807e-05
Clp0000I Optimal - objective value 57.304379
Clp0000I Optimal - objective value 57.304379
Clp0000I Optimal - objective value 57.304379
Coin0511I After Postsolve, objective 57.304379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.30437929 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 147 columns (147 integer (147 of which binary)) and 2792 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 6.16563
Cbc0038I Pass   1: suminf.    2.72665 (33) obj. -36.7796 iterations 22
Cbc0038I Pass   2: suminf.    2.72665 (33) obj. -36.7796 iterations 2
Cbc0038I Pass   3: suminf.    0.49219 (8) obj. -7.61646 iterations 25
Cbc0038I Solution found of 1.76608
Cbc0038I Rounding solution of -1.25705 is better than previous of 1.76608

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 147 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -1.25705 to -1.76588 (0.09 seconds)
Cbc0038I Round again with cutoff of -6.3993
Cbc0038I Pass   4: suminf.    2.72665 (33) obj. -36.7796 iterations 0
Cbc0038I Pass   5: suminf.    2.72665 (33) obj. -36.7796 iterations 2
Cbc0038I Pass   6: suminf.    1.45703 (20) obj. -21.4311 iterations 13
Cbc0038I Pass   7: suminf.    0.63181 (10) obj. -11.338 iterations 10
Cbc0038I Pass   8: suminf.    1.49865 (6) obj. -6.3993 iterations 36
Cbc0038I Pass   9: suminf.    1.76751 (5) obj. -6.3993 iterations 8
Cbc0038I Pass  10: suminf.    1.54787 (12) obj. -6.3993 iterations 3
Cbc0038I Pass  11: suminf.    1.26138 (8) obj. -6.3993 iterations 28
Cbc0038I Pass  12: suminf.    0.86038 (8) obj. -6.3993 iterations 11
Cbc0038I Pass  13: suminf.    0.46547 (5) obj. -7.91561 iterations 9
Cbc0038I Pass  14: suminf.    0.64058 (4) obj. -6.3993 iterations 18
Cbc0038I Pass  15: suminf.    0.29948 (4) obj. -7.07796 iterations 6
Cbc0038I Pass  16: suminf.    0.64516 (5) obj. -6.3993 iterations 6
Cbc0038I Pass  17: suminf.    2.04129 (20) obj. -6.3993 iterations 39
Cbc0038I Pass  18: suminf.    1.51393 (15) obj. -6.3993 iterations 10
Cbc0038I Pass  19: suminf.    1.30338 (15) obj. -10.0745 iterations 3
Cbc0038I Pass  20: suminf.    1.78843 (9) obj. -6.3993 iterations 52
Cbc0038I Pass  21: suminf.    0.65441 (7) obj. -7.77848 iterations 13
Cbc0038I Pass  22: suminf.    0.85674 (9) obj. -6.3993 iterations 9
Cbc0038I Pass  23: suminf.    0.59886 (6) obj. -6.83404 iterations 6
Cbc0038I Pass  24: suminf.    3.03740 (19) obj. -6.3993 iterations 29
Cbc0038I Pass  25: suminf.    1.91432 (16) obj. -6.3993 iterations 15
Cbc0038I Pass  26: suminf.    1.26208 (15) obj. -6.3993 iterations 2
Cbc0038I Pass  27: suminf.    0.86134 (11) obj. -6.3993 iterations 24
Cbc0038I Pass  28: suminf.    0.83956 (15) obj. -6.3993 iterations 10
Cbc0038I Pass  29: suminf.    1.93176 (9) obj. -6.3993 iterations 15
Cbc0038I Pass  30: suminf.    1.63126 (9) obj. -6.3993 iterations 8
Cbc0038I Pass  31: suminf.    0.61830 (4) obj. -6.3993 iterations 14
Cbc0038I Pass  32: suminf.    0.60383 (6) obj. -6.3993 iterations 5
Cbc0038I Pass  33: suminf.    0.76897 (12) obj. -6.3993 iterations 31
Cbc0038I Rounding solution of -2.00377 is better than previous of -1.76588

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 147 columns, reduced to 38 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -2.00377 to -3.81555 (0.16 seconds)
Cbc0038I Round again with cutoff of -14.7393
Cbc0038I Pass  33: suminf.    2.72665 (33) obj. -36.7796 iterations 0
Cbc0038I Pass  34: suminf.    2.72665 (33) obj. -36.7796 iterations 2
Cbc0038I Pass  35: suminf.    2.52259 (17) obj. -14.7393 iterations 57
Cbc0038I Pass  36: suminf.    1.51477 (18) obj. -14.7393 iterations 14
Cbc0038I Pass  37: suminf.    1.39307 (13) obj. -14.7393 iterations 42
Cbc0038I Pass  38: suminf.    1.34978 (13) obj. -14.7393 iterations 7
Cbc0038I Pass  39: suminf.    0.98841 (10) obj. -14.7393 iterations 16
Cbc0038I Pass  40: suminf.    0.98841 (10) obj. -14.7393 iterations 1
Cbc0038I Pass  41: suminf.    1.35720 (13) obj. -14.7393 iterations 10
Cbc0038I Pass  42: suminf.    0.98330 (10) obj. -14.7393 iterations 8
Cbc0038I Pass  43: suminf.    1.36224 (13) obj. -14.7393 iterations 10
Cbc0038I Pass  44: suminf.    2.52740 (19) obj. -14.7393 iterations 29
Cbc0038I Pass  45: suminf.    1.53611 (18) obj. -14.7393 iterations 15
Cbc0038I Pass  46: suminf.    1.75040 (14) obj. -14.7393 iterations 20
Cbc0038I Pass  47: suminf.    1.71098 (14) obj. -14.7393 iterations 4
Cbc0038I Pass  48: suminf.    2.05960 (11) obj. -14.7393 iterations 11
Cbc0038I Pass  49: suminf.    1.80698 (11) obj. -14.7393 iterations 2
Cbc0038I Pass  50: suminf.    1.17793 (12) obj. -14.7393 iterations 13
Cbc0038I Pass  51: suminf.    0.98841 (10) obj. -14.7393 iterations 5
Cbc0038I Pass  52: suminf.    1.35720 (13) obj. -14.7393 iterations 10
Cbc0038I Pass  53: suminf.    0.98330 (10) obj. -14.7393 iterations 8
Cbc0038I Pass  54: suminf.    1.36224 (13) obj. -14.7393 iterations 10
Cbc0038I Pass  55: suminf.    2.71424 (17) obj. -14.7393 iterations 36
Cbc0038I Pass  56: suminf.    2.71424 (17) obj. -14.7393 iterations 2
Cbc0038I Pass  57: suminf.    2.24116 (14) obj. -14.7393 iterations 26
Cbc0038I Pass  58: suminf.    1.46345 (12) obj. -14.7393 iterations 10
Cbc0038I Pass  59: suminf.    1.67812 (13) obj. -14.7393 iterations 23
Cbc0038I Pass  60: suminf.    1.51877 (11) obj. -14.7393 iterations 8
Cbc0038I Pass  61: suminf.    1.36224 (13) obj. -14.7393 iterations 16
Cbc0038I Pass  62: suminf.    0.98841 (10) obj. -14.7393 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 147 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -3.81555 - took 0.15 seconds
Cbc0012I Integer solution of -3.81555 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 133 rows 147 columns, reduced to 15 rows 18 columns
Cbc0031I 67 added rows had average density of 36.432836
Cbc0013I At root node, 67 cuts changed objective from -48.099188 to -19.58383 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15171 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1099 row cuts average 135.8 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 659 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 410 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 903 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 84.2 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 188 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.753 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3.81555 best solution, best possible -19.58383 (3.40 seconds)
Cbc0012I Integer solution of -12.04643 found by rounding after 5341 iterations and 1 nodes (3.45 seconds)
Cbc0010I After 5 nodes, 6 on tree, -12.04643 best solution, best possible -19.58383 (4.22 seconds)
Cbc0004I Integer solution of -12.56109 found after 6580 iterations and 15 nodes (4.90 seconds)
Cbc0010I After 17 nodes, 8 on tree, -12.56109 best solution, best possible -19.58383 (5.05 seconds)
Cbc0038I Full problem 133 rows 147 columns, reduced to 53 rows 62 columns
Cbc0012I Integer solution of -13.53834 found by RINS after 7530 iterations and 41 nodes (5.78 seconds)
Cbc0010I After 41 nodes, 9 on tree, -13.53834 best solution, best possible -19.58383 (5.78 seconds)
Cbc0004I Integer solution of -13.5504 found after 8215 iterations and 59 nodes (6.39 seconds)
Cbc0010I After 62 nodes, 9 on tree, -13.5504 best solution, best possible -19.58383 (6.51 seconds)
Cbc0004I Integer solution of -13.62655 found after 8474 iterations and 69 nodes (6.68 seconds)
Cbc0016I Integer solution of -13.66525 found by strong branching after 8498 iterations and 70 nodes (6.69 seconds)
Cbc0010I After 78 nodes, 6 on tree, -13.66525 best solution, best possible -19.58383 (7.21 seconds)
Cbc0010I After 87 nodes, 6 on tree, -13.66525 best solution, best possible -19.58383 (8.00 seconds)
Cbc0038I Full problem 133 rows 147 columns, reduced to 75 rows 89 columns
Cbc0010I After 102 nodes, 2 on tree, -13.66525 best solution, best possible -19.58383 (8.77 seconds)
Cbc0010I After 108 nodes, 1 on tree, -13.66525 best solution, best possible -18.767598 (9.65 seconds)
Cbc0010I After 113 nodes, 5 on tree, -13.66525 best solution, best possible -18.767598 (10.44 seconds)
Cbc0010I After 121 nodes, 6 on tree, -13.66525 best solution, best possible -18.767598 (11.16 seconds)
Cbc0004I Integer solution of -13.72663 found after 13696 iterations and 132 nodes (11.55 seconds)
Cbc0010I After 139 nodes, 1 on tree, -13.72663 best solution, best possible -15.323674 (11.91 seconds)
Cbc0001I Search completed - best objective -13.72663, took 14283 iterations and 142 nodes (12.02 seconds)
Cbc0032I Strong branching done 1718 times (27857 iterations), fathomed 10 nodes and fixed 38 variables
Cbc0035I Maximum depth 27, 321 variables fixed on reduced cost
Total time (CPU seconds):       9.17   (Wallclock seconds):       12.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 98 (-5) columns and 550 (-53) elements
Clp1000I sum of infeasibilities 0.000102479 - average 5.66184e-07, 31 fixed columns
Coin0506I Presolve 120 (-61) rows, 66 (-32) columns and 364 (-186) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 1.9570213 - largest nonzero change 0 ( 0%) - largest zero change 2.5877087e-05
Clp0000I Optimal - objective value 38.198676
Clp0000I Optimal - objective value 38.198676
Coin0511I After Postsolve, objective 38.198676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20303206 - largest nonzero change 0 ( 0%) - largest zero change 2.9204788e-05
Clp0000I Optimal - objective value 38.198676
Clp0000I Optimal - objective value 38.198676
Clp0000I Optimal - objective value 38.198676
Coin0511I After Postsolve, objective 38.198676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.19867616 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 180 rows, 98 columns (97 integer (97 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.057%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.06025
Cbc0038I Solution found of 6.4062
Cbc0038I Relaxing continuous gives -2.72236
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -2.72236 to -12.8159 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.3402
Cbc0038I Pass   1: suminf.    2.37374 (37) obj. -15.3402 iterations 60
Cbc0038I Pass   2: suminf.    1.45801 (8) obj. -15.3402 iterations 38
Cbc0038I Pass   3: suminf.    1.18061 (5) obj. -15.3402 iterations 6
Cbc0038I Pass   4: suminf.    2.06683 (9) obj. -15.3402 iterations 16
Cbc0038I Pass   5: suminf.    2.18960 (6) obj. -15.3402 iterations 11
Cbc0038I Pass   6: suminf.    1.57364 (4) obj. -15.3402 iterations 5
Cbc0038I Pass   7: suminf.    1.57364 (4) obj. -15.3402 iterations 0
Cbc0038I Pass   8: suminf.    1.90999 (7) obj. -15.3402 iterations 11
Cbc0038I Pass   9: suminf.    1.50046 (4) obj. -15.3402 iterations 5
Cbc0038I Pass  10: suminf.    1.50046 (4) obj. -15.3402 iterations 0
Cbc0038I Pass  11: suminf.    1.51517 (7) obj. -15.3402 iterations 7
Cbc0038I Pass  12: suminf.    1.51517 (7) obj. -15.3402 iterations 0
Cbc0038I Pass  13: suminf.    1.45444 (4) obj. -15.3402 iterations 10
Cbc0038I Pass  14: suminf.    0.85899 (3) obj. -15.3402 iterations 6
Cbc0038I Pass  15: suminf.    0.84489 (3) obj. -15.3402 iterations 3
Cbc0038I Pass  16: suminf.    1.64084 (4) obj. -15.3402 iterations 6
Cbc0038I Pass  17: suminf.    1.64084 (4) obj. -15.3402 iterations 0
Cbc0038I Pass  18: suminf.    0.85899 (3) obj. -15.3402 iterations 12
Cbc0038I Pass  19: suminf.    3.26751 (9) obj. -15.3402 iterations 25
Cbc0038I Pass  20: suminf.    0.73955 (3) obj. -15.3402 iterations 20
Cbc0038I Pass  21: suminf.    0.36476 (2) obj. -15.3402 iterations 1
Cbc0038I Pass  22: suminf.    0.40352 (2) obj. -15.3402 iterations 1
Cbc0038I Pass  23: suminf.    3.76045 (11) obj. -15.3402 iterations 28
Cbc0038I Pass  24: suminf.    1.76006 (6) obj. -15.3402 iterations 17
Cbc0038I Pass  25: suminf.    1.68929 (6) obj. -15.3402 iterations 2
Cbc0038I Pass  26: suminf.    1.01004 (4) obj. -15.3402 iterations 7
Cbc0038I Pass  27: suminf.    0.82249 (4) obj. -15.3402 iterations 2
Cbc0038I Pass  28: suminf.    1.82330 (5) obj. -15.3402 iterations 2
Cbc0038I Pass  29: suminf.    1.49500 (4) obj. -15.3402 iterations 1
Cbc0038I Pass  30: suminf.    4.01642 (13) obj. -15.3402 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 103 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -12.8159 to -12.8202 (0.11 seconds)
Cbc0038I Round again with cutoff of -19.8839
Cbc0038I Pass  30: suminf.    3.22852 (37) obj. -19.8839 iterations 0
Cbc0038I Pass  31: suminf.    1.86545 (8) obj. -19.8839 iterations 43
Cbc0038I Pass  32: suminf.    1.67657 (6) obj. -19.8839 iterations 3
Cbc0038I Pass  33: suminf.    2.20353 (7) obj. -19.8839 iterations 17
Cbc0038I Pass  34: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  35: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I Pass  36: suminf.    1.61852 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  37: suminf.    1.52290 (7) obj. -19.8839 iterations 1
Cbc0038I Pass  38: suminf.    2.34865 (9) obj. -19.8839 iterations 11
Cbc0038I Pass  39: suminf.    2.20353 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  40: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  41: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I Pass  42: suminf.    1.61852 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  43: suminf.    1.52290 (7) obj. -19.8839 iterations 1
Cbc0038I Pass  44: suminf.    2.34865 (9) obj. -19.8839 iterations 11
Cbc0038I Pass  45: suminf.    2.20353 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  46: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  47: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I Pass  48: suminf.    1.61852 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  49: suminf.    1.52290 (7) obj. -19.8839 iterations 1
Cbc0038I Pass  50: suminf.    2.34865 (9) obj. -19.8839 iterations 11
Cbc0038I Pass  51: suminf.    2.20353 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  52: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  53: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I Pass  54: suminf.    1.61852 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  55: suminf.    1.52290 (7) obj. -19.8839 iterations 1
Cbc0038I Pass  56: suminf.    2.34865 (9) obj. -19.8839 iterations 11
Cbc0038I Pass  57: suminf.    2.20353 (7) obj. -19.8839 iterations 4
Cbc0038I Pass  58: suminf.    2.20353 (7) obj. -19.8839 iterations 0
Cbc0038I Pass  59: suminf.    2.51923 (6) obj. -19.8839 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 180 rows 98 columns, reduced to 90 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -12.8202 - took 0.13 seconds
Cbc0012I Integer solution of -12.82023 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 180 rows 98 columns, reduced to 71 rows 41 columns
Cbc0031I 23 added rows had average density of 65.478261
Cbc0013I At root node, 23 cuts changed objective from -38.058569 to -30.662207 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11416 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1718 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.82023 best solution, best possible -30.662207 (1.00 seconds)
Cbc0038I Full problem 180 rows 98 columns, reduced to 72 rows 42 columns
Cbc0012I Integer solution of -13.72663 found by RINS after 9280 iterations and 41 nodes (1.33 seconds)
Cbc0038I Full problem 180 rows 98 columns, reduced to 30 rows 24 columns
Cbc0001I Search completed - best objective -13.72663, took 12230 iterations and 152 nodes (1.52 seconds)
Cbc0032I Strong branching done 1380 times (22222 iterations), fathomed 16 nodes and fixed 42 variables
Cbc0035I Maximum depth 47, 263 variables fixed on reduced cost
Total time (CPU seconds):       1.48   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-71) rows, 147 (-56) columns and 2779 (-2875) elements
Clp1000I sum of infeasibilities 1.90588e-06 - average 1.4223e-08, 95 fixed columns
Coin0506I Presolve 42 (-92) rows, 51 (-96) columns and 181 (-2598) elements
Clp0006I 0  Obj -8.409184 Dual inf 3.3787529 (51)
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 1.2565399 - largest nonzero change 1.6981029e-05 ( 0.0012247315%) - largest zero change 2.7939977e-05
Clp0000I Optimal - objective value -6.0521707
Clp0000I Optimal - objective value -6.0521707
Coin0511I After Postsolve, objective -6.0521707, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -6.0521707 Dual inf 71.413258 (51)
Clp0014I Perturbing problem by 0.001% of 1.6098192 - largest nonzero change 1.4388209e-05 ( 0.0012247315%) - largest zero change 2.9972807e-05
Clp0000I Optimal - objective value 57.304379
Clp0000I Optimal - objective value 57.304379
Clp0000I Optimal - objective value 57.304379
Coin0511I After Postsolve, objective 57.304379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.30437929 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 147 columns (147 integer (147 of which binary)) and 2792 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 6.16563
Cbc0038I Pass   1: suminf.    2.72665 (33) obj. -36.7796 iterations 22
Cbc0038I Pass   2: suminf.    2.72665 (33) obj. -36.7796 iterations 2
Cbc0038I Pass   3: suminf.    0.49219 (8) obj. -7.61646 iterations 25
Cbc0038I Solution found of 1.76608
Cbc0038I Rounding solution of -1.25705 is better than previous of 1.76608

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 147 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -1.25705 to -1.76588 (0.06 seconds)
Cbc0038I Round again with cutoff of -6.3993
Cbc0038I Pass   4: suminf.    2.72665 (33) obj. -36.7796 iterations 0
Cbc0038I Pass   5: suminf.    2.72665 (33) obj. -36.7796 iterations 2
Cbc0038I Pass   6: suminf.    1.45703 (20) obj. -21.4311 iterations 13
Cbc0038I Pass   7: suminf.    0.63181 (10) obj. -11.338 iterations 10
Cbc0038I Pass   8: suminf.    1.49865 (6) obj. -6.3993 iterations 36
Cbc0038I Pass   9: suminf.    1.76751 (5) obj. -6.3993 iterations 8
Cbc0038I Pass  10: suminf.    1.54787 (12) obj. -6.3993 iterations 3
Cbc0038I Pass  11: suminf.    1.26138 (8) obj. -6.3993 iterations 28
Cbc0038I Pass  12: suminf.    0.86038 (8) obj. -6.3993 iterations 11
Cbc0038I Pass  13: suminf.    0.46547 (5) obj. -7.91561 iterations 9
Cbc0038I Pass  14: suminf.    0.64058 (4) obj. -6.3993 iterations 18
Cbc0038I Pass  15: suminf.    0.29948 (4) obj. -7.07796 iterations 6
Cbc0038I Pass  16: suminf.    0.64516 (5) obj. -6.3993 iterations 6
Cbc0038I Pass  17: suminf.    2.04129 (20) obj. -6.3993 iterations 39
Cbc0038I Pass  18: suminf.    1.51393 (15) obj. -6.3993 iterations 10
Cbc0038I Pass  19: suminf.    1.30338 (15) obj. -10.0745 iterations 3
Cbc0038I Pass  20: suminf.    1.78843 (9) obj. -6.3993 iterations 52
Cbc0038I Pass  21: suminf.    0.65441 (7) obj. -7.77848 iterations 13
Cbc0038I Pass  22: suminf.    0.85674 (9) obj. -6.3993 iterations 9
Cbc0038I Pass  23: suminf.    0.59886 (6) obj. -6.83404 iterations 6
Cbc0038I Pass  24: suminf.    3.03740 (19) obj. -6.3993 iterations 29
Cbc0038I Pass  25: suminf.    1.91432 (16) obj. -6.3993 iterations 15
Cbc0038I Pass  26: suminf.    1.26208 (15) obj. -6.3993 iterations 2
Cbc0038I Pass  27: suminf.    0.86134 (11) obj. -6.3993 iterations 24
Cbc0038I Pass  28: suminf.    0.83956 (15) obj. -6.3993 iterations 10
Cbc0038I Pass  29: suminf.    1.93176 (9) obj. -6.3993 iterations 15
Cbc0038I Pass  30: suminf.    1.63126 (9) obj. -6.3993 iterations 8
Cbc0038I Pass  31: suminf.    0.61830 (4) obj. -6.3993 iterations 14
Cbc0038I Pass  32: suminf.    0.60383 (6) obj. -6.3993 iterations 5
Cbc0038I Pass  33: suminf.    0.76897 (12) obj. -6.3993 iterations 31
Cbc0038I Rounding solution of -2.00377 is better than previous of -1.76588

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 147 columns, reduced to 38 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -2.00377 to -3.81555 (0.10 seconds)
Cbc0038I Round again with cutoff of -14.7393
Cbc0038I Pass  33: suminf.    2.72665 (33) obj. -36.7796 iterations 0
Cbc0038I Pass  34: suminf.    2.72665 (33) obj. -36.7796 iterations 2
Cbc0038I Pass  35: suminf.    2.52259 (17) obj. -14.7393 iterations 57
Cbc0038I Pass  36: suminf.    1.51477 (18) obj. -14.7393 iterations 14
Cbc0038I Pass  37: suminf.    1.39307 (13) obj. -14.7393 iterations 42
Cbc0038I Pass  38: suminf.    1.34978 (13) obj. -14.7393 iterations 7
Cbc0038I Pass  39: suminf.    0.98841 (10) obj. -14.7393 iterations 16
Cbc0038I Pass  40: suminf.    0.98841 (10) obj. -14.7393 iterations 1
Cbc0038I Pass  41: suminf.    1.35720 (13) obj. -14.7393 iterations 10
Cbc0038I Pass  42: suminf.    0.98330 (10) obj. -14.7393 iterations 8
Cbc0038I Pass  43: suminf.    1.36224 (13) obj. -14.7393 iterations 10
Cbc0038I Pass  44: suminf.    2.52740 (19) obj. -14.7393 iterations 29
Cbc0038I Pass  45: suminf.    1.53611 (18) obj. -14.7393 iterations 15
Cbc0038I Pass  46: suminf.    1.75040 (14) obj. -14.7393 iterations 20
Cbc0038I Pass  47: suminf.    1.71098 (14) obj. -14.7393 iterations 4
Cbc0038I Pass  48: suminf.    2.05960 (11) obj. -14.7393 iterations 11
Cbc0038I Pass  49: suminf.    1.80698 (11) obj. -14.7393 iterations 2
Cbc0038I Pass  50: suminf.    1.17793 (12) obj. -14.7393 iterations 13
Cbc0038I Pass  51: suminf.    0.98841 (10) obj. -14.7393 iterations 5
Cbc0038I Pass  52: suminf.    1.35720 (13) obj. -14.7393 iterations 10
Cbc0038I Pass  53: suminf.    0.98330 (10) obj. -14.7393 iterations 8
Cbc0038I Pass  54: suminf.    1.36224 (13) obj. -14.7393 iterations 10
Cbc0038I Pass  55: suminf.    2.71424 (17) obj. -14.7393 iterations 36
Cbc0038I Pass  56: suminf.    2.71424 (17) obj. -14.7393 iterations 2
Cbc0038I Pass  57: suminf.    2.24116 (14) obj. -14.7393 iterations 26
Cbc0038I Pass  58: suminf.    1.46345 (12) obj. -14.7393 iterations 10
Cbc0038I Pass  59: suminf.    1.67812 (13) obj. -14.7393 iterations 23
Cbc0038I Pass  60: suminf.    1.51877 (11) obj. -14.7393 iterations 8
Cbc0038I Pass  61: suminf.    1.36224 (13) obj. -14.7393 iterations 16
Cbc0038I Pass  62: suminf.    0.98841 (10) obj. -14.7393 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 147 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -3.81555 - took 0.11 seconds
Cbc0012I Integer solution of -3.81555 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 133 rows 147 columns, reduced to 15 rows 18 columns
Cbc0031I 67 added rows had average density of 36.432836
Cbc0013I At root node, 67 cuts changed objective from -48.099188 to -19.58383 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15171 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1099 row cuts average 135.8 elements, 0 column cuts (0 active)  in 0.197 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 659 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 410 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 903 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 84.2 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 188 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.657 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3.81555 best solution, best possible -19.58383 (2.73 seconds)
Cbc0012I Integer solution of -12.04643 found by rounding after 5341 iterations and 1 nodes (2.77 seconds)
Cbc0010I After 5 nodes, 6 on tree, -12.04643 best solution, best possible -19.58383 (3.48 seconds)
Cbc0004I Integer solution of -12.56109 found after 6580 iterations and 15 nodes (4.06 seconds)
Cbc0010I After 17 nodes, 8 on tree, -12.56109 best solution, best possible -19.58383 (4.18 seconds)
Cbc0038I Full problem 133 rows 147 columns, reduced to 53 rows 62 columns
Cbc0012I Integer solution of -13.53834 found by RINS after 7530 iterations and 41 nodes (4.89 seconds)
Cbc0010I After 41 nodes, 9 on tree, -13.53834 best solution, best possible -19.58383 (4.89 seconds)
Cbc0004I Integer solution of -13.5504 found after 8215 iterations and 59 nodes (5.55 seconds)
Cbc0010I After 61 nodes, 8 on tree, -13.5504 best solution, best possible -19.58383 (5.63 seconds)
Cbc0004I Integer solution of -13.62655 found after 8474 iterations and 69 nodes (5.84 seconds)
Cbc0016I Integer solution of -13.66525 found by strong branching after 8498 iterations and 70 nodes (5.84 seconds)
Cbc0010I After 77 nodes, 6 on tree, -13.66525 best solution, best possible -19.58383 (6.35 seconds)
Cbc0010I After 87 nodes, 6 on tree, -13.66525 best solution, best possible -19.58383 (7.10 seconds)
Cbc0038I Full problem 133 rows 147 columns, reduced to 75 rows 89 columns
Cbc0010I After 101 nodes, 2 on tree, -13.66525 best solution, best possible -19.58383 (7.80 seconds)
Cbc0010I After 108 nodes, 1 on tree, -13.66525 best solution, best possible -18.767598 (8.67 seconds)
Cbc0010I After 113 nodes, 5 on tree, -13.66525 best solution, best possible -18.767598 (9.43 seconds)
Cbc0010I After 125 nodes, 4 on tree, -13.66525 best solution, best possible -18.767598 (10.20 seconds)
Cbc0004I Integer solution of -13.72663 found after 13696 iterations and 132 nodes (10.47 seconds)
Cbc0010I After 141 nodes, 1 on tree, -13.72663 best solution, best possible -14.342017 (10.93 seconds)
Cbc0001I Search completed - best objective -13.72663, took 14283 iterations and 142 nodes (10.93 seconds)
Cbc0032I Strong branching done 1718 times (27857 iterations), fathomed 10 nodes and fixed 38 variables
Cbc0035I Maximum depth 27, 321 variables fixed on reduced cost
Total time (CPU seconds):       8.24   (Wallclock seconds):       10.95

