Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 20 (-5) columns and 101 (-34) elements
Clp1000I sum of infeasibilities 3.53829e-10 - average 1.04067e-11, 7 fixed columns
Coin0506I Presolve 8 (-26) rows, 13 (-7) columns and 35 (-66) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 1.5263647 - largest nonzero change 2.8668486e-05 ( 0.0025888945%) - largest zero change 0
Clp0000I Optimal - objective value 69.466186
Clp0000I Optimal - objective value 69.466186
Coin0511I After Postsolve, objective 69.466186, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1834416 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 99.485329
Clp0000I Optimal - objective value 99.485329
Clp0000I Optimal - objective value 99.485329
Coin0511I After Postsolve, objective 99.485329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.48532879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 20 columns (19 integer (19 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.16111
Cbc0038I Pass   1: suminf.    0.71607 (2) obj. 2233.84 iterations 17
Cbc0038I Solution found of 5814.36
Cbc0038I Relaxing continuous gives 5814.36
Cbc0038I Rounding solution of 5808.85 is better than previous of 5814.36

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 5808.85 to -42.2958 (0.01 seconds)
Cbc0038I Round again with cutoff of -48.0103
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.46024 (2) obj. -48.2347 iterations 5
Cbc0038I Pass   3: suminf.    0.04130 (1) obj. -48.0103 iterations 3
Cbc0038I Pass   4: suminf.    0.09251 (1) obj. -48.0103 iterations 3
Cbc0038I Pass   5: suminf.    0.25195 (3) obj. -48.0103 iterations 4
Cbc0038I Pass   6: suminf.    0.10605 (1) obj. -48.0103 iterations 4
Cbc0038I Pass   7: suminf.    0.35661 (2) obj. -48.0103 iterations 2
Cbc0038I Pass   8: suminf.    0.67532 (2) obj. -48.0103 iterations 1
Cbc0038I Pass   9: suminf.    0.61216 (3) obj. -48.0103 iterations 3
Cbc0038I Pass  10: suminf.    0.24526 (2) obj. -48.0103 iterations 1
Cbc0038I Pass  11: suminf.    0.42903 (2) obj. -48.0103 iterations 4
Cbc0038I Pass  12: suminf.    0.20464 (1) obj. -48.0103 iterations 3
Cbc0038I Pass  13: suminf.    1.09051 (4) obj. -48.0103 iterations 5
Cbc0038I Pass  14: suminf.    0.86761 (3) obj. -48.0103 iterations 1
Cbc0038I Pass  15: suminf.    0.70454 (3) obj. -48.0103 iterations 1
Cbc0038I Pass  16: suminf.    1.09051 (4) obj. -48.0103 iterations 3
Cbc0038I Pass  17: suminf.    1.19603 (5) obj. -48.0103 iterations 2
Cbc0038I Pass  18: suminf.    1.29060 (6) obj. -48.0103 iterations 3
Cbc0038I Pass  19: suminf.    1.18500 (5) obj. -48.0103 iterations 1
Cbc0038I Pass  20: suminf.    0.44670 (3) obj. -48.0103 iterations 6
Cbc0038I Pass  21: suminf.    0.44670 (3) obj. -48.0103 iterations 0
Cbc0038I Pass  22: suminf.    1.04791 (4) obj. -48.0103 iterations 2
Cbc0038I Pass  23: suminf.    1.01214 (3) obj. -48.0103 iterations 1
Cbc0038I Pass  24: suminf.    0.95255 (4) obj. -48.0103 iterations 3
Cbc0038I Pass  25: suminf.    0.91885 (3) obj. -48.0103 iterations 4
Cbc0038I Pass  26: suminf.    0.44670 (3) obj. -48.0103 iterations 3
Cbc0038I Pass  27: suminf.    0.44670 (3) obj. -48.0103 iterations 0
Cbc0038I Pass  28: suminf.    1.04791 (4) obj. -48.0103 iterations 2
Cbc0038I Pass  29: suminf.    1.01214 (3) obj. -48.0103 iterations 1
Cbc0038I Pass  30: suminf.    0.86257 (3) obj. -48.0103 iterations 5
Cbc0038I Pass  31: suminf.    0.22182 (1) obj. -48.0103 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -42.2958 to -44.444 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.2963
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.55440 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  32: suminf.    0.18300 (2) obj. -58.2963 iterations 3
Cbc0038I Pass  33: suminf.    0.55353 (3) obj. -58.2963 iterations 5
Cbc0038I Pass  34: suminf.    0.20319 (1) obj. -58.2963 iterations 3
Cbc0038I Pass  35: suminf.    0.43355 (2) obj. -58.2963 iterations 2
Cbc0038I Pass  36: suminf.    0.45508 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  37: suminf.    0.46492 (2) obj. -58.2963 iterations 2
Cbc0038I Pass  38: suminf.    0.93094 (4) obj. -58.2963 iterations 2
Cbc0038I Pass  39: suminf.    0.90009 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  40: suminf.    1.13305 (5) obj. -58.2963 iterations 7
Cbc0038I Pass  41: suminf.    1.04744 (4) obj. -58.2963 iterations 4
Cbc0038I Pass  42: suminf.    1.00888 (4) obj. -58.2963 iterations 5
Cbc0038I Pass  43: suminf.    0.32470 (2) obj. -58.2963 iterations 2
Cbc0038I Pass  44: suminf.    0.67874 (3) obj. -58.2963 iterations 2
Cbc0038I Pass  45: suminf.    0.67874 (3) obj. -58.2963 iterations 0
Cbc0038I Pass  46: suminf.    0.97886 (4) obj. -58.2963 iterations 2
Cbc0038I Pass  47: suminf.    1.04229 (4) obj. -58.2963 iterations 1
Cbc0038I Pass  48: suminf.    1.00652 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  49: suminf.    0.44002 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  50: suminf.    0.44002 (3) obj. -58.2963 iterations 0
Cbc0038I Pass  51: suminf.    1.04229 (4) obj. -58.2963 iterations 2
Cbc0038I Pass  52: suminf.    1.10294 (5) obj. -58.2963 iterations 6
Cbc0038I Pass  53: suminf.    0.33925 (3) obj. -58.2963 iterations 2
Cbc0038I Pass  54: suminf.    0.71413 (3) obj. -58.2963 iterations 3
Cbc0038I Pass  55: suminf.    0.44050 (2) obj. -58.2963 iterations 2
Cbc0038I Pass  56: suminf.    0.41239 (3) obj. -58.2963 iterations 8
Cbc0038I Pass  57: suminf.    0.16099 (3) obj. -58.2963 iterations 2
Cbc0038I Pass  58: suminf.    1.01185 (5) obj. -58.2963 iterations 6
Cbc0038I Pass  59: suminf.    0.67528 (4) obj. -58.2963 iterations 1
Cbc0038I Pass  60: suminf.    0.51225 (3) obj. -58.2963 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -44.444 - took 0.02 seconds
Cbc0012I Integer solution of -44.443995 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 20 columns, reduced to 12 rows 11 columns
Cbc0031I 7 added rows had average density of 12.285714
Cbc0013I At root node, 7 cuts changed objective from -99.439989 to -53.8763 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 229 row cuts average 4.7 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 385 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -44.44399499999952, took 1247 iterations and 6 nodes (0.11 seconds)
Cbc0032I Strong branching done 28 times (104 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-8) rows, 44 (-2) columns and 350 (-38) elements
Clp1000I sum of infeasibilities 0 - average 0, 35 fixed columns
Coin0506I Presolve 6 (-34) rows, 9 (-35) columns and 25 (-325) elements
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 2.5475519 - largest nonzero change 1.3103417e-05 ( 0.00042025624%) - largest zero change 0
Clp0000I Optimal - objective value 257.18992
Clp0000I Optimal - objective value 257.18992
Coin0511I After Postsolve, objective 257.18992, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0848896 - largest nonzero change 1.8770327e-05 ( 0.0018770327%) - largest zero change 1.5564116e-05
Clp0000I Optimal - objective value 318.12638
Clp0000I Optimal - objective value 318.12638
Clp0000I Optimal - objective value 318.12638
Coin0511I After Postsolve, objective 318.12638, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 318.1263828 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 44 columns (44 integer (44 of which binary)) and 364 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.555%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.40904
Cbc0038I Pass   1: suminf.    0.89373 (4) obj. -249.099 iterations 27
Cbc0038I Pass   2: suminf.    0.89373 (4) obj. -249.099 iterations 0
Cbc0038I Solution found of -216.025
Cbc0038I Rounding solution of -243.541 is better than previous of -216.025

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 44 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -249.854
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.12774 (6) obj. -249.854 iterations 1
Cbc0038I Pass   4: suminf.    0.91715 (5) obj. -249.854 iterations 6
Cbc0038I Pass   5: suminf.    0.80814 (2) obj. -249.854 iterations 7
Cbc0038I Pass   6: suminf.    0.80814 (2) obj. -249.854 iterations 0
Cbc0038I Pass   7: suminf.    0.58102 (2) obj. -254.104 iterations 3
Cbc0038I Pass   8: suminf.    0.41989 (2) obj. -249.854 iterations 2
Cbc0038I Pass   9: suminf.    0.80814 (2) obj. -249.854 iterations 4
Cbc0038I Pass  10: suminf.    1.61586 (4) obj. -249.854 iterations 6
Cbc0038I Pass  11: suminf.    0.92831 (3) obj. -249.854 iterations 5
Cbc0038I Pass  12: suminf.    0.92435 (3) obj. -260.198 iterations 5
Cbc0038I Pass  13: suminf.    0.44136 (3) obj. -249.854 iterations 2
Cbc0038I Pass  14: suminf.    0.77395 (3) obj. -254.769 iterations 6
Cbc0038I Pass  15: suminf.    0.50968 (2) obj. -249.854 iterations 3
Cbc0038I Pass  16: suminf.    0.53675 (2) obj. -249.854 iterations 4
Cbc0038I Pass  17: suminf.    0.53675 (2) obj. -249.854 iterations 0
Cbc0038I Pass  18: suminf.    2.13821 (8) obj. -249.854 iterations 12
Cbc0038I Pass  19: suminf.    1.04314 (4) obj. -249.854 iterations 8
Cbc0038I Pass  20: suminf.    1.18033 (4) obj. -249.854 iterations 6
Cbc0038I Pass  21: suminf.    0.67581 (3) obj. -249.854 iterations 5
Cbc0038I Pass  22: suminf.    0.25917 (2) obj. -252.578 iterations 4
Cbc0038I Pass  23: suminf.    0.14575 (3) obj. -249.854 iterations 3
Cbc0038I Pass  24: suminf.    0.39681 (2) obj. -249.854 iterations 6
Cbc0038I Pass  25: suminf.    0.39681 (2) obj. -249.854 iterations 0
Cbc0038I Pass  26: suminf.    0.33333 (1) obj. -266.647 iterations 4
Cbc0038I Solution found of -255.647
Cbc0038I Rounding solution of -261.163 is better than previous of -255.647

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 44 columns, reduced to 8 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -270.265
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  27: suminf.    2.50149 (6) obj. -270.265 iterations 3
Cbc0038I Pass  28: suminf.    2.43311 (6) obj. -270.265 iterations 4
Cbc0038I Pass  29: suminf.    1.04012 (4) obj. -270.265 iterations 9
Cbc0038I Pass  30: suminf.    1.00208 (4) obj. -270.265 iterations 2
Cbc0038I Pass  31: suminf.    1.56941 (6) obj. -270.265 iterations 5
Cbc0038I Pass  32: suminf.    1.41685 (5) obj. -270.265 iterations 1
Cbc0038I Pass  33: suminf.    1.11294 (4) obj. -270.265 iterations 4
Cbc0038I Pass  34: suminf.    2.09432 (7) obj. -270.265 iterations 6
Cbc0038I Pass  35: suminf.    1.99226 (7) obj. -270.265 iterations 2
Cbc0038I Pass  36: suminf.    0.94545 (3) obj. -270.265 iterations 6
Cbc0038I Pass  37: suminf.    0.68468 (3) obj. -270.265 iterations 4
Cbc0038I Pass  38: suminf.    1.02724 (3) obj. -270.265 iterations 2
Cbc0038I Pass  39: suminf.    2.58310 (9) obj. -270.265 iterations 8
Cbc0038I Pass  40: suminf.    1.21239 (4) obj. -270.265 iterations 5
Cbc0038I Pass  41: suminf.    0.98981 (3) obj. -270.265 iterations 1
Cbc0038I Pass  42: suminf.    0.59653 (3) obj. -270.265 iterations 4
Cbc0038I Pass  43: suminf.    0.59653 (3) obj. -270.265 iterations 1
Cbc0038I Pass  44: suminf.    1.16478 (3) obj. -270.265 iterations 2
Cbc0038I Pass  45: suminf.    0.59653 (3) obj. -270.265 iterations 1
Cbc0038I Pass  46: suminf.    3.74347 (13) obj. -270.265 iterations 15
Cbc0038I Pass  47: suminf.    1.43741 (6) obj. -270.265 iterations 13
Cbc0038I Pass  48: suminf.    1.00495 (4) obj. -270.265 iterations 4
Cbc0038I Pass  49: suminf.    0.68468 (3) obj. -270.265 iterations 1
Cbc0038I Pass  50: suminf.    1.02724 (3) obj. -270.265 iterations 2
Cbc0038I Pass  51: suminf.    3.71195 (12) obj. -270.265 iterations 10
Cbc0038I Pass  52: suminf.    1.47685 (5) obj. -270.265 iterations 11
Cbc0038I Pass  53: suminf.    1.43741 (6) obj. -270.265 iterations 3
Cbc0038I Pass  54: suminf.    1.00495 (4) obj. -270.265 iterations 4
Cbc0038I Pass  55: suminf.    0.68468 (3) obj. -270.265 iterations 1
Cbc0038I Pass  56: suminf.    1.02724 (3) obj. -270.265 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 44 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -261.163 - took 0.02 seconds
Cbc0012I Integer solution of -261.1626 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 44 columns, reduced to 4 rows 8 columns
Cbc0031I 8 added rows had average density of 8.5
Cbc0013I At root node, 15 cuts changed objective from -278.6215 to -261.16264 in 94 passes
Cbc0014I Cut generator 0 (Probing) - 42 row cuts average 8.2 elements, 3 column cuts (3 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 271 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 70 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 3.848105e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -261.1625999999996, took 751 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 20 (-5) columns and 101 (-34) elements
Clp1000I sum of infeasibilities 3.53829e-10 - average 1.04067e-11, 7 fixed columns
Coin0506I Presolve 8 (-26) rows, 13 (-7) columns and 35 (-66) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 1.5263647 - largest nonzero change 2.8668486e-05 ( 0.0025888945%) - largest zero change 0
Clp0000I Optimal - objective value 69.466186
Clp0000I Optimal - objective value 69.466186
Coin0511I After Postsolve, objective 69.466186, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.1834416 - largest nonzero change 2.8167904e-05 ( 0.0028167904%) - largest zero change 2.2742989e-05
Clp0000I Optimal - objective value 99.485329
Clp0000I Optimal - objective value 99.485329
Clp0000I Optimal - objective value 99.485329
Coin0511I After Postsolve, objective 99.485329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.48532879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 20 columns (19 integer (19 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.16111
Cbc0038I Pass   1: suminf.    0.71607 (2) obj. 2233.84 iterations 17
Cbc0038I Solution found of 5814.36
Cbc0038I Relaxing continuous gives 5814.36
Cbc0038I Rounding solution of 5808.85 is better than previous of 5814.36

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 13 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 5808.85 to -42.2958 (0.01 seconds)
Cbc0038I Round again with cutoff of -48.0103
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.46024 (2) obj. -48.2347 iterations 5
Cbc0038I Pass   3: suminf.    0.04130 (1) obj. -48.0103 iterations 3
Cbc0038I Pass   4: suminf.    0.09251 (1) obj. -48.0103 iterations 3
Cbc0038I Pass   5: suminf.    0.25195 (3) obj. -48.0103 iterations 4
Cbc0038I Pass   6: suminf.    0.10605 (1) obj. -48.0103 iterations 4
Cbc0038I Pass   7: suminf.    0.35661 (2) obj. -48.0103 iterations 2
Cbc0038I Pass   8: suminf.    0.67532 (2) obj. -48.0103 iterations 1
Cbc0038I Pass   9: suminf.    0.61216 (3) obj. -48.0103 iterations 3
Cbc0038I Pass  10: suminf.    0.24526 (2) obj. -48.0103 iterations 1
Cbc0038I Pass  11: suminf.    0.42903 (2) obj. -48.0103 iterations 4
Cbc0038I Pass  12: suminf.    0.20464 (1) obj. -48.0103 iterations 3
Cbc0038I Pass  13: suminf.    1.09051 (4) obj. -48.0103 iterations 5
Cbc0038I Pass  14: suminf.    0.86761 (3) obj. -48.0103 iterations 1
Cbc0038I Pass  15: suminf.    0.70454 (3) obj. -48.0103 iterations 1
Cbc0038I Pass  16: suminf.    1.09051 (4) obj. -48.0103 iterations 3
Cbc0038I Pass  17: suminf.    1.19603 (5) obj. -48.0103 iterations 2
Cbc0038I Pass  18: suminf.    1.29060 (6) obj. -48.0103 iterations 3
Cbc0038I Pass  19: suminf.    1.18500 (5) obj. -48.0103 iterations 1
Cbc0038I Pass  20: suminf.    0.44670 (3) obj. -48.0103 iterations 6
Cbc0038I Pass  21: suminf.    0.44670 (3) obj. -48.0103 iterations 0
Cbc0038I Pass  22: suminf.    1.04791 (4) obj. -48.0103 iterations 2
Cbc0038I Pass  23: suminf.    1.01214 (3) obj. -48.0103 iterations 1
Cbc0038I Pass  24: suminf.    0.95255 (4) obj. -48.0103 iterations 3
Cbc0038I Pass  25: suminf.    0.91885 (3) obj. -48.0103 iterations 4
Cbc0038I Pass  26: suminf.    0.44670 (3) obj. -48.0103 iterations 3
Cbc0038I Pass  27: suminf.    0.44670 (3) obj. -48.0103 iterations 0
Cbc0038I Pass  28: suminf.    1.04791 (4) obj. -48.0103 iterations 2
Cbc0038I Pass  29: suminf.    1.01214 (3) obj. -48.0103 iterations 1
Cbc0038I Pass  30: suminf.    0.86257 (3) obj. -48.0103 iterations 5
Cbc0038I Pass  31: suminf.    0.22182 (1) obj. -48.0103 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -42.2958 to -44.444 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.2963
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.55440 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  32: suminf.    0.18300 (2) obj. -58.2963 iterations 3
Cbc0038I Pass  33: suminf.    0.55353 (3) obj. -58.2963 iterations 5
Cbc0038I Pass  34: suminf.    0.20319 (1) obj. -58.2963 iterations 3
Cbc0038I Pass  35: suminf.    0.43355 (2) obj. -58.2963 iterations 2
Cbc0038I Pass  36: suminf.    0.45508 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  37: suminf.    0.46492 (2) obj. -58.2963 iterations 2
Cbc0038I Pass  38: suminf.    0.93094 (4) obj. -58.2963 iterations 2
Cbc0038I Pass  39: suminf.    0.90009 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  40: suminf.    1.13305 (5) obj. -58.2963 iterations 7
Cbc0038I Pass  41: suminf.    1.04744 (4) obj. -58.2963 iterations 4
Cbc0038I Pass  42: suminf.    1.00888 (4) obj. -58.2963 iterations 5
Cbc0038I Pass  43: suminf.    0.32470 (2) obj. -58.2963 iterations 2
Cbc0038I Pass  44: suminf.    0.67874 (3) obj. -58.2963 iterations 2
Cbc0038I Pass  45: suminf.    0.67874 (3) obj. -58.2963 iterations 0
Cbc0038I Pass  46: suminf.    0.97886 (4) obj. -58.2963 iterations 2
Cbc0038I Pass  47: suminf.    1.04229 (4) obj. -58.2963 iterations 1
Cbc0038I Pass  48: suminf.    1.00652 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  49: suminf.    0.44002 (3) obj. -58.2963 iterations 1
Cbc0038I Pass  50: suminf.    0.44002 (3) obj. -58.2963 iterations 0
Cbc0038I Pass  51: suminf.    1.04229 (4) obj. -58.2963 iterations 2
Cbc0038I Pass  52: suminf.    1.10294 (5) obj. -58.2963 iterations 6
Cbc0038I Pass  53: suminf.    0.33925 (3) obj. -58.2963 iterations 2
Cbc0038I Pass  54: suminf.    0.71413 (3) obj. -58.2963 iterations 3
Cbc0038I Pass  55: suminf.    0.44050 (2) obj. -58.2963 iterations 2
Cbc0038I Pass  56: suminf.    0.41239 (3) obj. -58.2963 iterations 8
Cbc0038I Pass  57: suminf.    0.16099 (3) obj. -58.2963 iterations 2
Cbc0038I Pass  58: suminf.    1.01185 (5) obj. -58.2963 iterations 6
Cbc0038I Pass  59: suminf.    0.67528 (4) obj. -58.2963 iterations 1
Cbc0038I Pass  60: suminf.    0.51225 (3) obj. -58.2963 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -44.444 - took 0.03 seconds
Cbc0012I Integer solution of -44.443995 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 34 rows 20 columns, reduced to 12 rows 11 columns
Cbc0031I 7 added rows had average density of 12.285714
Cbc0013I At root node, 7 cuts changed objective from -99.439989 to -53.8763 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 229 row cuts average 4.7 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 385 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -44.44399499999952, took 1247 iterations and 6 nodes (0.12 seconds)
Cbc0032I Strong branching done 28 times (104 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-12) rows, 41 (-6) columns and 300 (-89) elements
Clp1000I sum of infeasibilities 2.79968e-07 - average 7.56671e-09, 30 fixed columns
Coin0506I Presolve 6 (-31) rows, 11 (-30) columns and 29 (-271) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.6320237 - largest nonzero change 2.7111649e-05 ( 0.0023267071%) - largest zero change 0
Clp0000I Optimal - objective value 44.887951
Clp0000I Optimal - objective value 44.887951
Coin0511I After Postsolve, objective 44.887951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2802695 - largest nonzero change 1.534676e-05 ( 0.0013540233%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 117.85232
Clp0000I Optimal - objective value 117.85232
Clp0000I Optimal - objective value 117.85232
Coin0511I After Postsolve, objective 117.85232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.8523168 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 314 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.140%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.00476
Cbc0038I Pass   1: suminf.    0.85000 (4) obj. -49.4802 iterations 17
Cbc0038I Pass   2: suminf.    0.85000 (4) obj. -49.4802 iterations 0
Cbc0038I Solution found of -36.7802
Cbc0038I Rounding solution of -42.2958 is better than previous of -36.7802

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -46.6954
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.85000 (4) obj. -49.4802 iterations 0
Cbc0038I Pass   4: suminf.    0.85000 (4) obj. -49.4802 iterations 0
Cbc0038I Pass   5: suminf.    0.32181 (2) obj. -46.6954 iterations 7
Cbc0038I Pass   6: suminf.    0.32703 (2) obj. -46.7842 iterations 2
Cbc0038I Pass   7: suminf.    1.88738 (8) obj. -46.6954 iterations 9
Cbc0038I Pass   8: suminf.    1.36027 (5) obj. -46.6954 iterations 4
Cbc0038I Pass   9: suminf.    0.74070 (4) obj. -46.6954 iterations 4
Cbc0038I Pass  10: suminf.    0.66066 (3) obj. -46.6954 iterations 5
Cbc0038I Pass  11: suminf.    0.35088 (4) obj. -46.6954 iterations 2
Cbc0038I Pass  12: suminf.    0.37575 (4) obj. -46.6954 iterations 5
Cbc0038I Pass  13: suminf.    0.37575 (4) obj. -46.6954 iterations 0
Cbc0038I Pass  14: suminf.    0.69830 (3) obj. -53.6008 iterations 6
Cbc0038I Pass  15: suminf.    0.48800 (2) obj. -50.3847 iterations 1
Cbc0038I Pass  16: suminf.    0.63270 (4) obj. -46.6954 iterations 4
Cbc0038I Pass  17: suminf.    0.32083 (2) obj. -46.6954 iterations 3
Cbc0038I Pass  18: suminf.    0.49976 (2) obj. -46.6954 iterations 2
Cbc0038I Pass  19: suminf.    3.55117 (12) obj. -46.6954 iterations 18
Cbc0038I Pass  20: suminf.    2.21911 (7) obj. -46.6954 iterations 8
Cbc0038I Pass  21: suminf.    0.49769 (4) obj. -46.6954 iterations 9
Cbc0038I Pass  22: suminf.    0.35088 (4) obj. -46.6954 iterations 2
Cbc0038I Pass  23: suminf.    0.37575 (4) obj. -46.6954 iterations 5
Cbc0038I Pass  24: suminf.    0.37575 (4) obj. -46.6954 iterations 0
Cbc0038I Pass  25: suminf.    0.69830 (3) obj. -53.6008 iterations 6
Cbc0038I Pass  26: suminf.    0.48800 (2) obj. -50.3847 iterations 1
Cbc0038I Pass  27: suminf.    0.63270 (4) obj. -46.6954 iterations 4
Cbc0038I Pass  28: suminf.    0.32083 (2) obj. -46.6954 iterations 3
Cbc0038I Pass  29: suminf.    0.49976 (2) obj. -46.6954 iterations 2
Cbc0038I Pass  30: suminf.    1.70661 (8) obj. -46.6954 iterations 8
Cbc0038I Pass  31: suminf.    1.18036 (5) obj. -46.6954 iterations 3
Cbc0038I Pass  32: suminf.    0.69830 (3) obj. -53.6008 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -42.2958 - took 0.01 seconds
Cbc0012I Integer solution of -42.295815 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 3 rows 4 columns
Cbc0012I Integer solution of -44.443995 found by DiveCoefficient after 922 iterations and 0 nodes (0.12 seconds)
Cbc0031I 5 added rows had average density of 10.4
Cbc0013I At root node, 5 cuts changed objective from -73.192969 to -44.444256 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 93 row cuts average 4.8 elements, 11 column cuts (11 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 303 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 85 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0011I Exiting as integer gap of 0.00026063989 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -44.44399499999952, took 922 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.13

