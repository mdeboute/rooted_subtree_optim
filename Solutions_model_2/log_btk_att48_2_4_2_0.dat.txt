Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 48 (-2) columns and 266 (-19) elements
Clp1000I sum of infeasibilities 1.67021e-05 - average 1.87664e-07, 7 fixed columns
Coin0506I Presolve 75 (-14) rows, 41 (-7) columns and 224 (-42) elements
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 22.661712 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 2477.4997
Clp0000I Optimal - objective value 2477.4997
Coin0511I After Postsolve, objective 2477.4997, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2477.4997
Clp0000I Optimal - objective value 2477.4997
Clp0000I Optimal - objective value 2477.4997
Coin0511I After Postsolve, objective 2477.4997, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2477.499652 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 48 columns (47 integer (47 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.4755
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -703.743 iterations 36
Cbc0038I Solution found of -703.743
Cbc0038I Relaxing continuous gives -703.743
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -881.118
Cbc0038I Pass   2: suminf.    0.15625 (2) obj. -881.118 iterations 2
Cbc0038I Pass   3: suminf.    0.70977 (4) obj. -881.118 iterations 7
Cbc0038I Pass   4: suminf.    1.23127 (3) obj. -881.118 iterations 9
Cbc0038I Pass   5: suminf.    1.22400 (4) obj. -881.118 iterations 1
Cbc0038I Pass   6: suminf.    1.53893 (5) obj. -881.118 iterations 3
Cbc0038I Pass   7: suminf.    1.53893 (5) obj. -881.118 iterations 0
Cbc0038I Pass   8: suminf.    1.23294 (5) obj. -881.118 iterations 5
Cbc0038I Pass   9: suminf.    1.99227 (7) obj. -881.118 iterations 12
Cbc0038I Pass  10: suminf.    1.71331 (6) obj. -881.118 iterations 5
Cbc0038I Pass  11: suminf.    2.02653 (7) obj. -881.118 iterations 5
Cbc0038I Pass  12: suminf.    1.57389 (6) obj. -881.118 iterations 5
Cbc0038I Pass  13: suminf.    1.47170 (5) obj. -881.118 iterations 1
Cbc0038I Pass  14: suminf.    1.55627 (5) obj. -881.118 iterations 3
Cbc0038I Pass  15: suminf.    1.55364 (6) obj. -881.118 iterations 1
Cbc0038I Pass  16: suminf.    1.57639 (8) obj. -881.118 iterations 3
Cbc0038I Pass  17: suminf.    1.57639 (8) obj. -881.118 iterations 0
Cbc0038I Pass  18: suminf.    2.00000 (6) obj. -881.118 iterations 8
Cbc0038I Pass  19: suminf.    2.00000 (7) obj. -881.118 iterations 5
Cbc0038I Pass  20: suminf.    2.39236 (7) obj. -881.118 iterations 10
Cbc0038I Pass  21: suminf.    1.59408 (6) obj. -881.118 iterations 1
Cbc0038I Pass  22: suminf.    1.23231 (6) obj. -881.118 iterations 3
Cbc0038I Pass  23: suminf.    1.21608 (5) obj. -881.118 iterations 1
Cbc0038I Pass  24: suminf.    1.10100 (5) obj. -881.118 iterations 8
Cbc0038I Pass  25: suminf.    1.01814 (4) obj. -881.118 iterations 1
Cbc0038I Pass  26: suminf.    1.52206 (6) obj. -881.118 iterations 3
Cbc0038I Pass  27: suminf.    1.38831 (5) obj. -881.118 iterations 1
Cbc0038I Pass  28: suminf.    1.31295 (4) obj. -881.118 iterations 1
Cbc0038I Pass  29: suminf.    1.42984 (5) obj. -881.118 iterations 5
Cbc0038I Pass  30: suminf.    1.10100 (5) obj. -881.118 iterations 3
Cbc0038I Pass  31: suminf.    1.01814 (4) obj. -881.118 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 56 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -703.743 - took 0.07 seconds
Cbc0012I Integer solution of -703.7427 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 30 columns
Cbc0031I 21 added rows had average density of 25.428571
Cbc0013I At root node, 21 cuts changed objective from -2477.4997 to -1669.2159 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5683 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1395 row cuts average 47.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 133 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0004I Integer solution of -733.6608 found after 6338 iterations and 16 nodes (0.60 seconds)
Cbc0004I Integer solution of -752.351 found after 6681 iterations and 20 nodes (0.61 seconds)
Cbc0001I Search completed - best objective -752.3510000000001, took 6880 iterations and 24 nodes (0.62 seconds)
Cbc0032I Strong branching done 450 times (8686 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 10, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-9) rows, 94 (-2) columns and 1347 (-66) elements
Clp1000I sum of infeasibilities 7.3512e-09 - average 8.25977e-11, 85 fixed columns
Coin0506I Presolve 6 (-83) rows, 9 (-85) columns and 19 (-1328) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value -964.2643
Clp0000I Optimal - objective value -964.2643
Coin0511I After Postsolve, objective -964.2643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.3403384e-05 ( 0.00096990836%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3133.324
Clp0000I Optimal - objective value 3133.324
Clp0000I Optimal - objective value 3133.324
Coin0511I After Postsolve, objective 3133.324, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3133.323995 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 94 columns (94 integer (94 of which binary)) and 1349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.103%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 13.7372
Cbc0038I Pass   1: suminf.    2.48634 (28) obj. -932.919 iterations 23
Cbc0038I Pass   2: suminf.    2.48634 (28) obj. -932.919 iterations 4
Cbc0038I Pass   3: suminf.    1.27878 (17) obj. -56.4913 iterations 11
Cbc0038I Pass   4: suminf.    0.35731 (6) obj. 336.277 iterations 11
Cbc0038I Solution found of 524.015
Cbc0038I Rounding solution of -482.684 is better than previous of 524.015

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 94 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -482.684 to -643.736 (0.02 seconds)
Cbc0038I Round again with cutoff of -874.299
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.48634 (28) obj. -932.919 iterations 0
Cbc0038I Pass   6: suminf.    2.48634 (28) obj. -932.919 iterations 2
Cbc0038I Pass   7: suminf.    1.71189 (16) obj. -874.299 iterations 38
Cbc0038I Pass   8: suminf.    1.71189 (16) obj. -874.299 iterations 0
Cbc0038I Pass   9: suminf.    1.27417 (8) obj. -874.299 iterations 19
Cbc0038I Pass  10: suminf.    1.06172 (4) obj. -874.299 iterations 2
Cbc0038I Pass  11: suminf.    0.86209 (4) obj. -923.207 iterations 2
Cbc0038I Pass  12: suminf.    1.27417 (8) obj. -874.299 iterations 2
Cbc0038I Pass  13: suminf.    3.52275 (13) obj. -874.299 iterations 22
Cbc0038I Pass  14: suminf.    3.25826 (12) obj. -874.299 iterations 4
Cbc0038I Pass  15: suminf.    1.08376 (3) obj. -874.299 iterations 12
Cbc0038I Pass  16: suminf.    1.08376 (3) obj. -874.299 iterations 3
Cbc0038I Pass  17: suminf.    1.16678 (3) obj. -874.299 iterations 2
Cbc0038I Pass  18: suminf.    1.16678 (3) obj. -874.299 iterations 0
Cbc0038I Pass  19: suminf.    1.08376 (3) obj. -874.299 iterations 2
Cbc0038I Pass  20: suminf.    4.16963 (17) obj. -884.809 iterations 40
Cbc0038I Pass  21: suminf.    4.16963 (17) obj. -884.809 iterations 7
Cbc0038I Pass  22: suminf.    1.37487 (5) obj. -874.299 iterations 23
Cbc0038I Pass  23: suminf.    1.05930 (4) obj. -943.409 iterations 4
Cbc0038I Pass  24: suminf.    1.34139 (4) obj. -874.299 iterations 2
Cbc0038I Pass  25: suminf.    2.08533 (11) obj. -874.299 iterations 34
Cbc0038I Pass  26: suminf.    2.03957 (11) obj. -885.509 iterations 6
Cbc0038I Pass  27: suminf.    1.43345 (7) obj. -874.299 iterations 19
Cbc0038I Pass  28: suminf.    1.43345 (7) obj. -874.299 iterations 0
Cbc0038I Pass  29: suminf.    1.19117 (7) obj. -874.299 iterations 2
Cbc0038I Pass  30: suminf.    1.19117 (7) obj. -874.299 iterations 0
Cbc0038I Pass  31: suminf.    1.43345 (7) obj. -874.299 iterations 1
Cbc0038I Pass  32: suminf.    3.17600 (13) obj. -874.299 iterations 24
Cbc0038I Pass  33: suminf.    3.17600 (13) obj. -874.299 iterations 2
Cbc0038I Pass  34: suminf.    1.59690 (6) obj. -874.299 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 94 columns, reduced to 31 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -643.736 to -652.474 (0.04 seconds)
Cbc0038I Round again with cutoff of -1289.31
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.62457 (33) obj. -1289.31 iterations 6
Cbc0038I Pass  35: suminf.    3.62457 (33) obj. -1289.31 iterations 1
Cbc0038I Pass  36: suminf.    3.63663 (33) obj. -1289.31 iterations 17
Cbc0038I Pass  37: suminf.    3.63663 (33) obj. -1289.31 iterations 0
Cbc0038I Pass  38: suminf.    2.99946 (23) obj. -1289.31 iterations 11
Cbc0038I Pass  39: suminf.    2.85602 (24) obj. -1289.31 iterations 1
Cbc0038I Pass  40: suminf.    2.08111 (11) obj. -1289.31 iterations 17
Cbc0038I Pass  41: suminf.    2.05801 (10) obj. -1306.64 iterations 4
Cbc0038I Pass  42: suminf.    2.11327 (8) obj. -1289.31 iterations 12
Cbc0038I Pass  43: suminf.    1.32933 (5) obj. -1574.69 iterations 3
Cbc0038I Pass  44: suminf.    1.06849 (4) obj. -1289.31 iterations 5
Cbc0038I Pass  45: suminf.    1.06849 (4) obj. -1289.31 iterations 0
Cbc0038I Pass  46: suminf.    1.39878 (4) obj. -1289.31 iterations 7
Cbc0038I Pass  47: suminf.    1.39878 (4) obj. -1289.31 iterations 3
Cbc0038I Pass  48: suminf.    1.06849 (4) obj. -1289.31 iterations 3
Cbc0038I Pass  49: suminf.    4.46128 (15) obj. -1289.31 iterations 29
Cbc0038I Pass  50: suminf.    2.98723 (10) obj. -1359.34 iterations 9
Cbc0038I Pass  51: suminf.    2.98723 (10) obj. -1359.34 iterations 0
Cbc0038I Pass  52: suminf.    1.34430 (5) obj. -1289.31 iterations 10
Cbc0038I Pass  53: suminf.    1.34430 (5) obj. -1289.31 iterations 0
Cbc0038I Pass  54: suminf.    1.05141 (4) obj. -1289.31 iterations 6
Cbc0038I Pass  55: suminf.    1.04612 (4) obj. -1290.73 iterations 2
Cbc0038I Pass  56: suminf.    3.08513 (11) obj. -1289.31 iterations 12
Cbc0038I Pass  57: suminf.    3.08479 (11) obj. -1289.31 iterations 2
Cbc0038I Pass  58: suminf.    2.20741 (9) obj. -1289.31 iterations 7
Cbc0038I Pass  59: suminf.    2.20741 (9) obj. -1289.31 iterations 2
Cbc0038I Pass  60: suminf.    1.32549 (4) obj. -1289.31 iterations 11
Cbc0038I Pass  61: suminf.    1.26267 (4) obj. -1306.09 iterations 13
Cbc0038I Pass  62: suminf.    1.35421 (4) obj. -1289.31 iterations 6
Cbc0038I Pass  63: suminf.    1.35421 (4) obj. -1289.31 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 94 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -652.474 - took 0.03 seconds
Cbc0012I Integer solution of -652.4737 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 51 added rows had average density of 25.862745
Cbc0013I At root node, 51 cuts changed objective from -2949.3665 to -853.08076 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8970 row cuts average 5.2 elements, 0 column cuts (19 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 872 row cuts average 79.2 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 572 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.669 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -652.4737 best solution, best possible -853.08076 (1.92 seconds)
Cbc0012I Integer solution of -688.3517 found by DiveCoefficient after 2450 iterations and 3 nodes (2.03 seconds)
Cbc0012I Integer solution of -752.351 found by rounding after 2490 iterations and 4 nodes (2.05 seconds)
Cbc0001I Search completed - best objective -752.3510000000001, took 3002 iterations and 16 nodes (2.16 seconds)
Cbc0032I Strong branching done 368 times (7254 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 27 variables fixed on reduced cost
Total time (CPU seconds):       1.63   (Wallclock seconds):       2.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 48 (-2) columns and 266 (-19) elements
Clp1000I sum of infeasibilities 1.67021e-05 - average 1.87664e-07, 7 fixed columns
Coin0506I Presolve 75 (-14) rows, 41 (-7) columns and 224 (-42) elements
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 22.661712 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 2477.4997
Clp0000I Optimal - objective value 2477.4997
Coin0511I After Postsolve, objective 2477.4997, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2477.4997
Clp0000I Optimal - objective value 2477.4997
Clp0000I Optimal - objective value 2477.4997
Coin0511I After Postsolve, objective 2477.4997, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2477.499652 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 48 columns (47 integer (47 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.4755
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -703.743 iterations 36
Cbc0038I Solution found of -703.743
Cbc0038I Relaxing continuous gives -703.743
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -881.118
Cbc0038I Pass   2: suminf.    0.15625 (2) obj. -881.118 iterations 2
Cbc0038I Pass   3: suminf.    0.70977 (4) obj. -881.118 iterations 7
Cbc0038I Pass   4: suminf.    1.23127 (3) obj. -881.118 iterations 9
Cbc0038I Pass   5: suminf.    1.22400 (4) obj. -881.118 iterations 1
Cbc0038I Pass   6: suminf.    1.53893 (5) obj. -881.118 iterations 3
Cbc0038I Pass   7: suminf.    1.53893 (5) obj. -881.118 iterations 0
Cbc0038I Pass   8: suminf.    1.23294 (5) obj. -881.118 iterations 5
Cbc0038I Pass   9: suminf.    1.99227 (7) obj. -881.118 iterations 12
Cbc0038I Pass  10: suminf.    1.71331 (6) obj. -881.118 iterations 5
Cbc0038I Pass  11: suminf.    2.02653 (7) obj. -881.118 iterations 5
Cbc0038I Pass  12: suminf.    1.57389 (6) obj. -881.118 iterations 5
Cbc0038I Pass  13: suminf.    1.47170 (5) obj. -881.118 iterations 1
Cbc0038I Pass  14: suminf.    1.55627 (5) obj. -881.118 iterations 3
Cbc0038I Pass  15: suminf.    1.55364 (6) obj. -881.118 iterations 1
Cbc0038I Pass  16: suminf.    1.57639 (8) obj. -881.118 iterations 3
Cbc0038I Pass  17: suminf.    1.57639 (8) obj. -881.118 iterations 0
Cbc0038I Pass  18: suminf.    2.00000 (6) obj. -881.118 iterations 8
Cbc0038I Pass  19: suminf.    2.00000 (7) obj. -881.118 iterations 5
Cbc0038I Pass  20: suminf.    2.39236 (7) obj. -881.118 iterations 10
Cbc0038I Pass  21: suminf.    1.59408 (6) obj. -881.118 iterations 1
Cbc0038I Pass  22: suminf.    1.23231 (6) obj. -881.118 iterations 3
Cbc0038I Pass  23: suminf.    1.21608 (5) obj. -881.118 iterations 1
Cbc0038I Pass  24: suminf.    1.10100 (5) obj. -881.118 iterations 8
Cbc0038I Pass  25: suminf.    1.01814 (4) obj. -881.118 iterations 1
Cbc0038I Pass  26: suminf.    1.52206 (6) obj. -881.118 iterations 3
Cbc0038I Pass  27: suminf.    1.38831 (5) obj. -881.118 iterations 1
Cbc0038I Pass  28: suminf.    1.31295 (4) obj. -881.118 iterations 1
Cbc0038I Pass  29: suminf.    1.42984 (5) obj. -881.118 iterations 5
Cbc0038I Pass  30: suminf.    1.10100 (5) obj. -881.118 iterations 3
Cbc0038I Pass  31: suminf.    1.01814 (4) obj. -881.118 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 48 columns, reduced to 56 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -703.743 - took 0.08 seconds
Cbc0012I Integer solution of -703.7427 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 48 columns, reduced to 55 rows 30 columns
Cbc0031I 21 added rows had average density of 25.428571
Cbc0013I At root node, 21 cuts changed objective from -2477.4997 to -1669.2159 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5683 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1395 row cuts average 47.5 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 133 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0004I Integer solution of -733.6608 found after 6338 iterations and 16 nodes (0.64 seconds)
Cbc0004I Integer solution of -752.351 found after 6681 iterations and 20 nodes (0.66 seconds)
Cbc0001I Search completed - best objective -752.3510000000001, took 6880 iterations and 24 nodes (0.66 seconds)
Cbc0032I Strong branching done 450 times (8686 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 10, 71 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-10) rows, 94 (-3) columns and 1347 (-67) elements
Clp1000I sum of infeasibilities 7.3512e-09 - average 8.25977e-11, 85 fixed columns
Coin0506I Presolve 6 (-83) rows, 9 (-85) columns and 19 (-1328) elements
Clp0006I 0  Obj -964.26694 Dual inf 23.257781 (9)
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value -964.2643
Clp0000I Optimal - objective value -964.2643
Coin0511I After Postsolve, objective -964.2643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -964.2643 Dual inf 5806.3343 (58)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.3403384e-05 ( 0.00096990836%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3133.324
Clp0000I Optimal - objective value 3133.324
Clp0000I Optimal - objective value 3133.324
Coin0511I After Postsolve, objective 3133.324, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3133.323995 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 94 columns (94 integer (94 of which binary)) and 1349 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.103%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 13.7372
Cbc0038I Pass   1: suminf.    2.48634 (28) obj. -932.919 iterations 23
Cbc0038I Pass   2: suminf.    2.48634 (28) obj. -932.919 iterations 4
Cbc0038I Pass   3: suminf.    1.27878 (17) obj. -56.4913 iterations 11
Cbc0038I Pass   4: suminf.    0.35731 (6) obj. 336.277 iterations 11
Cbc0038I Solution found of 524.015
Cbc0038I Rounding solution of -482.684 is better than previous of 524.015

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 94 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -482.684 to -643.736 (0.02 seconds)
Cbc0038I Round again with cutoff of -874.299
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.48634 (28) obj. -932.919 iterations 0
Cbc0038I Pass   6: suminf.    2.48634 (28) obj. -932.919 iterations 2
Cbc0038I Pass   7: suminf.    1.71189 (16) obj. -874.299 iterations 38
Cbc0038I Pass   8: suminf.    1.71189 (16) obj. -874.299 iterations 0
Cbc0038I Pass   9: suminf.    1.27417 (8) obj. -874.299 iterations 19
Cbc0038I Pass  10: suminf.    1.06172 (4) obj. -874.299 iterations 2
Cbc0038I Pass  11: suminf.    0.86209 (4) obj. -923.207 iterations 2
Cbc0038I Pass  12: suminf.    1.27417 (8) obj. -874.299 iterations 2
Cbc0038I Pass  13: suminf.    3.52275 (13) obj. -874.299 iterations 22
Cbc0038I Pass  14: suminf.    3.25826 (12) obj. -874.299 iterations 4
Cbc0038I Pass  15: suminf.    1.08376 (3) obj. -874.299 iterations 12
Cbc0038I Pass  16: suminf.    1.08376 (3) obj. -874.299 iterations 3
Cbc0038I Pass  17: suminf.    1.16678 (3) obj. -874.299 iterations 2
Cbc0038I Pass  18: suminf.    1.16678 (3) obj. -874.299 iterations 0
Cbc0038I Pass  19: suminf.    1.08376 (3) obj. -874.299 iterations 2
Cbc0038I Pass  20: suminf.    4.16963 (17) obj. -884.809 iterations 40
Cbc0038I Pass  21: suminf.    4.16963 (17) obj. -884.809 iterations 7
Cbc0038I Pass  22: suminf.    1.37487 (5) obj. -874.299 iterations 23
Cbc0038I Pass  23: suminf.    1.05930 (4) obj. -943.409 iterations 4
Cbc0038I Pass  24: suminf.    1.34139 (4) obj. -874.299 iterations 2
Cbc0038I Pass  25: suminf.    2.08533 (11) obj. -874.299 iterations 34
Cbc0038I Pass  26: suminf.    2.03957 (11) obj. -885.509 iterations 6
Cbc0038I Pass  27: suminf.    1.43345 (7) obj. -874.299 iterations 19
Cbc0038I Pass  28: suminf.    1.43345 (7) obj. -874.299 iterations 0
Cbc0038I Pass  29: suminf.    1.19117 (7) obj. -874.299 iterations 2
Cbc0038I Pass  30: suminf.    1.19117 (7) obj. -874.299 iterations 0
Cbc0038I Pass  31: suminf.    1.43345 (7) obj. -874.299 iterations 1
Cbc0038I Pass  32: suminf.    3.17600 (13) obj. -874.299 iterations 24
Cbc0038I Pass  33: suminf.    3.17600 (13) obj. -874.299 iterations 2
Cbc0038I Pass  34: suminf.    1.59690 (6) obj. -874.299 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 94 columns, reduced to 31 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -643.736 to -652.474 (0.04 seconds)
Cbc0038I Round again with cutoff of -1289.31
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.62457 (33) obj. -1289.31 iterations 6
Cbc0038I Pass  35: suminf.    3.62457 (33) obj. -1289.31 iterations 1
Cbc0038I Pass  36: suminf.    3.63663 (33) obj. -1289.31 iterations 17
Cbc0038I Pass  37: suminf.    3.63663 (33) obj. -1289.31 iterations 0
Cbc0038I Pass  38: suminf.    2.99946 (23) obj. -1289.31 iterations 11
Cbc0038I Pass  39: suminf.    2.85602 (24) obj. -1289.31 iterations 1
Cbc0038I Pass  40: suminf.    2.08111 (11) obj. -1289.31 iterations 17
Cbc0038I Pass  41: suminf.    2.05801 (10) obj. -1306.64 iterations 4
Cbc0038I Pass  42: suminf.    2.11327 (8) obj. -1289.31 iterations 12
Cbc0038I Pass  43: suminf.    1.32933 (5) obj. -1574.69 iterations 3
Cbc0038I Pass  44: suminf.    1.06849 (4) obj. -1289.31 iterations 5
Cbc0038I Pass  45: suminf.    1.06849 (4) obj. -1289.31 iterations 0
Cbc0038I Pass  46: suminf.    1.39878 (4) obj. -1289.31 iterations 7
Cbc0038I Pass  47: suminf.    1.39878 (4) obj. -1289.31 iterations 3
Cbc0038I Pass  48: suminf.    1.06849 (4) obj. -1289.31 iterations 3
Cbc0038I Pass  49: suminf.    4.46128 (15) obj. -1289.31 iterations 29
Cbc0038I Pass  50: suminf.    2.98723 (10) obj. -1359.34 iterations 9
Cbc0038I Pass  51: suminf.    2.98723 (10) obj. -1359.34 iterations 0
Cbc0038I Pass  52: suminf.    1.34430 (5) obj. -1289.31 iterations 10
Cbc0038I Pass  53: suminf.    1.34430 (5) obj. -1289.31 iterations 0
Cbc0038I Pass  54: suminf.    1.05141 (4) obj. -1289.31 iterations 6
Cbc0038I Pass  55: suminf.    1.04612 (4) obj. -1290.73 iterations 2
Cbc0038I Pass  56: suminf.    3.08513 (11) obj. -1289.31 iterations 12
Cbc0038I Pass  57: suminf.    3.08479 (11) obj. -1289.31 iterations 2
Cbc0038I Pass  58: suminf.    2.20741 (9) obj. -1289.31 iterations 7
Cbc0038I Pass  59: suminf.    2.20741 (9) obj. -1289.31 iterations 2
Cbc0038I Pass  60: suminf.    1.32549 (4) obj. -1289.31 iterations 11
Cbc0038I Pass  61: suminf.    1.26267 (4) obj. -1306.09 iterations 13
Cbc0038I Pass  62: suminf.    1.35421 (4) obj. -1289.31 iterations 6
Cbc0038I Pass  63: suminf.    1.35421 (4) obj. -1289.31 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 94 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -652.474 - took 0.04 seconds
Cbc0012I Integer solution of -652.4737 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 51 added rows had average density of 25.862745
Cbc0013I At root node, 51 cuts changed objective from -2949.3665 to -853.08076 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8970 row cuts average 5.2 elements, 0 column cuts (19 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 872 row cuts average 79.2 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 572 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.679 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -652.4737 best solution, best possible -853.08076 (1.99 seconds)
Cbc0012I Integer solution of -688.3517 found by DiveCoefficient after 2450 iterations and 3 nodes (2.09 seconds)
Cbc0012I Integer solution of -752.351 found by rounding after 2490 iterations and 4 nodes (2.11 seconds)
Cbc0001I Search completed - best objective -752.3510000000001, took 3002 iterations and 16 nodes (2.22 seconds)
Cbc0032I Strong branching done 368 times (7254 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 27 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       2.23

