Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 30 (-5) columns and 160 (-35) elements
Clp1000I sum of infeasibilities 1.17424e-05 - average 2.17452e-07, 6 fixed columns
Coin0506I Presolve 38 (-16) rows, 23 (-7) columns and 114 (-46) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 114.44588
Clp0000I Optimal - objective value 114.44588
Coin0511I After Postsolve, objective 114.44588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 114.44588
Clp0000I Optimal - objective value 114.44588
Clp0000I Optimal - objective value 114.44588
Coin0511I After Postsolve, objective 114.44588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.4458823 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 30 columns (29 integer (29 of which binary)) and 159 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.88604
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -26.494 iterations 12
Cbc0038I Solution found of -26.494
Cbc0038I Relaxing continuous gives -26.494
Cbc0038I Rounding solution of -41.2946 is better than previous of -26.494

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -41.2946 to -57.1968 (0.01 seconds)
Cbc0038I Round again with cutoff of -62.878
Cbc0038I Pass   2: suminf.    0.79352 (2) obj. -62.878 iterations 2
Cbc0038I Pass   3: suminf.    0.86277 (2) obj. -62.878 iterations 1
Cbc0038I Pass   4: suminf.    0.69933 (3) obj. -62.878 iterations 7
Cbc0038I Pass   5: suminf.    0.50902 (3) obj. -62.878 iterations 3
Cbc0038I Pass   6: suminf.    0.36452 (2) obj. -62.878 iterations 1
Cbc0038I Pass   7: suminf.    0.80557 (2) obj. -62.878 iterations 3
Cbc0038I Pass   8: suminf.    0.92762 (2) obj. -62.878 iterations 1
Cbc0038I Pass   9: suminf.    2.21741 (6) obj. -62.878 iterations 6
Cbc0038I Pass  10: suminf.    1.70355 (6) obj. -62.878 iterations 8
Cbc0038I Pass  11: suminf.    1.22960 (5) obj. -62.878 iterations 1
Cbc0038I Pass  12: suminf.    1.21371 (5) obj. -62.878 iterations 2
Cbc0038I Pass  13: suminf.    0.35234 (3) obj. -62.878 iterations 8
Cbc0038I Pass  14: suminf.    0.31513 (2) obj. -62.878 iterations 1
Cbc0038I Pass  15: suminf.    0.85732 (2) obj. -62.878 iterations 3
Cbc0038I Pass  16: suminf.    0.88340 (2) obj. -62.878 iterations 1
Cbc0038I Pass  17: suminf.    1.93326 (7) obj. -62.878 iterations 8
Cbc0038I Pass  18: suminf.    1.48618 (6) obj. -62.878 iterations 5
Cbc0038I Pass  19: suminf.    0.31513 (2) obj. -62.878 iterations 7
Cbc0038I Pass  20: suminf.    0.31513 (2) obj. -62.878 iterations 0
Cbc0038I Pass  21: suminf.    0.85732 (2) obj. -62.878 iterations 3
Cbc0038I Pass  22: suminf.    0.88340 (2) obj. -62.878 iterations 1
Cbc0038I Pass  23: suminf.    0.83197 (7) obj. -62.878 iterations 5
Cbc0038I Pass  24: suminf.    0.73479 (4) obj. -62.878 iterations 1
Cbc0038I Pass  25: suminf.    1.29660 (4) obj. -62.878 iterations 2
Cbc0038I Pass  26: suminf.    1.72186 (8) obj. -62.878 iterations 10
Cbc0038I Pass  27: suminf.    1.01020 (4) obj. -62.878 iterations 6
Cbc0038I Pass  28: suminf.    1.16645 (4) obj. -62.878 iterations 3
Cbc0038I Pass  29: suminf.    1.05794 (4) obj. -62.878 iterations 5
Cbc0038I Pass  30: suminf.    0.91519 (4) obj. -62.878 iterations 1
Cbc0038I Pass  31: suminf.    1.47794 (4) obj. -62.878 iterations 3
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -73.1039
Cbc0038I Pass  31: suminf.    0.85709 (3) obj. -73.1039 iterations 1
Cbc0038I Pass  32: suminf.    0.62515 (3) obj. -73.1039 iterations 1
Cbc0038I Pass  33: suminf.    1.02990 (3) obj. -73.1039 iterations 3
Cbc0038I Pass  34: suminf.    0.53582 (3) obj. -73.1039 iterations 2
Cbc0038I Pass  35: suminf.    0.86165 (3) obj. -73.1039 iterations 3
Cbc0038I Pass  36: suminf.    1.52873 (8) obj. -73.1039 iterations 10
Cbc0038I Pass  37: suminf.    1.14492 (6) obj. -73.1039 iterations 1
Cbc0038I Pass  38: suminf.    0.89970 (3) obj. -73.1039 iterations 8
Cbc0038I Pass  39: suminf.    0.64179 (4) obj. -73.1039 iterations 1
Cbc0038I Pass  40: suminf.    1.53330 (5) obj. -73.1039 iterations 6
Cbc0038I Pass  41: suminf.    1.13501 (4) obj. -73.1039 iterations 2
Cbc0038I Pass  42: suminf.    1.13064 (5) obj. -73.1039 iterations 1
Cbc0038I Pass  43: suminf.    1.48806 (4) obj. -73.1039 iterations 4
Cbc0038I Pass  44: suminf.    1.09608 (4) obj. -73.1039 iterations 3
Cbc0038I Pass  45: suminf.    1.09608 (4) obj. -73.1039 iterations 0
Cbc0038I Pass  46: suminf.    2.18074 (6) obj. -73.1039 iterations 10
Cbc0038I Pass  47: suminf.    1.44545 (5) obj. -73.1039 iterations 5
Cbc0038I Pass  48: suminf.    1.50825 (5) obj. -73.1039 iterations 1
Cbc0038I Pass  49: suminf.    1.43377 (6) obj. -73.1039 iterations 2
Cbc0038I Pass  50: suminf.    1.49212 (4) obj. -73.1039 iterations 6
Cbc0038I Pass  51: suminf.    1.09608 (4) obj. -73.1039 iterations 2
Cbc0038I Pass  52: suminf.    1.48806 (4) obj. -73.1039 iterations 3
Cbc0038I Pass  53: suminf.    1.09608 (4) obj. -73.1039 iterations 3
Cbc0038I Pass  54: suminf.    3.32547 (12) obj. -73.1039 iterations 16
Cbc0038I Pass  55: suminf.    2.70266 (9) obj. -73.1039 iterations 5
Cbc0038I Pass  56: suminf.    2.02298 (5) obj. -73.1039 iterations 9
Cbc0038I Pass  57: suminf.    1.03409 (4) obj. -73.1039 iterations 4
Cbc0038I Pass  58: suminf.    1.42332 (4) obj. -73.1039 iterations 3
Cbc0038I Pass  59: suminf.    3.31257 (10) obj. -73.1039 iterations 10
Cbc0038I Pass  60: suminf.    1.76628 (6) obj. -73.1039 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -57.1968 - took 0.03 seconds
Cbc0012I Integer solution of -57.19679 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 53 rows 30 columns, reduced to 26 rows 17 columns
Cbc0031I 13 added rows had average density of 24
Cbc0013I At root node, 13 cuts changed objective from -114.00776 to -77.292679 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2066 row cuts average 4.6 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 770 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 28.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.663 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -57.19679 best solution, best possible -77.29109 (1.37 seconds)
Cbc0001I Search completed - best objective -57.19679000000001, took 2544 iterations and 8 nodes (1.41 seconds)
Cbc0032I Strong branching done 120 times (1460 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       1.41

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-16) rows, 56 (-10) columns and 544 (-179) elements
Clp1000I sum of infeasibilities 2.1031e-08 - average 4.04442e-10, 17 fixed columns
Coin0506I Presolve 37 (-15) rows, 39 (-17) columns and 280 (-264) elements
Clp0006I 0  Obj 74.830661 Dual inf 6.0379973 (37)
Clp0029I End of values pass after 39 iterations
Clp0014I Perturbing problem by 0.001% of 1.5673845 - largest nonzero change 2.9548072e-05 ( 0.0024275985%) - largest zero change 2.588541e-05
Clp0000I Optimal - objective value 116.13402
Clp0000I Optimal - objective value 116.13402
Coin0511I After Postsolve, objective 116.13402, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 116.13402 Dual inf 89.610534 (6)
Clp0014I Perturbing problem by 0.001% of 1.7450468 - largest nonzero change 1.1348901e-05 ( 0.00091204228%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 131.66685
Clp0000I Optimal - objective value 131.66685
Clp0000I Optimal - objective value 131.66685
Coin0511I After Postsolve, objective 131.66685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 131.6668484 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 56 columns (56 integer (56 of which binary)) and 545 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.870%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 6.68527
Cbc0038I Pass   1: suminf.    1.33346 (15) obj. -59.4367 iterations 7
Cbc0038I Pass   2: suminf.    1.33346 (15) obj. -59.4367 iterations 0
Cbc0038I Solution found of -5.87325
Cbc0038I Rounding solution of -24.9401 is better than previous of -5.87325

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 56 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -24.9401 to -31.7842 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.625
Cbc0038I Pass   3: suminf.    1.33346 (15) obj. -59.4367 iterations 0
Cbc0038I Pass   4: suminf.    1.33346 (15) obj. -59.4367 iterations 0
Cbc0038I Pass   5: suminf.    1.13255 (8) obj. -39.625 iterations 17
Cbc0038I Pass   6: suminf.    0.68089 (6) obj. -41.3192 iterations 2
Cbc0038I Pass   7: suminf.    0.70799 (4) obj. -39.625 iterations 12
Cbc0038I Pass   8: suminf.    0.44307 (3) obj. -39.625 iterations 3
Cbc0038I Pass   9: suminf.    0.78313 (3) obj. -39.625 iterations 3
Cbc0038I Pass  10: suminf.    0.36000 (2) obj. -43.0697 iterations 2
Cbc0038I Pass  11: suminf.    0.57530 (2) obj. -39.625 iterations 2
Cbc0038I Pass  12: suminf.    1.73227 (9) obj. -39.625 iterations 8
Cbc0038I Pass  13: suminf.    0.98000 (6) obj. -39.625 iterations 3
Cbc0038I Pass  14: suminf.    0.33506 (2) obj. -39.625 iterations 5
Cbc0038I Pass  15: suminf.    0.17745 (2) obj. -39.625 iterations 1
Cbc0038I Pass  16: suminf.    0.95492 (5) obj. -39.625 iterations 7
Cbc0038I Pass  17: suminf.    0.95492 (5) obj. -39.625 iterations 1
Cbc0038I Pass  18: suminf.    0.93493 (4) obj. -39.625 iterations 7
Cbc0038I Pass  19: suminf.    0.47215 (3) obj. -39.625 iterations 1
Cbc0038I Pass  20: suminf.    0.64785 (2) obj. -39.625 iterations 3
Cbc0038I Pass  21: suminf.    0.26124 (2) obj. -39.625 iterations 1
Cbc0038I Pass  22: suminf.    1.74321 (9) obj. -39.625 iterations 8
Cbc0038I Pass  23: suminf.    1.25129 (6) obj. -56.2548 iterations 3
Cbc0038I Pass  24: suminf.    0.33874 (3) obj. -39.625 iterations 8
Cbc0038I Pass  25: suminf.    0.33874 (3) obj. -39.625 iterations 0
Cbc0038I Pass  26: suminf.    0.60623 (3) obj. -39.625 iterations 1
Cbc0038I Pass  27: suminf.    0.60623 (3) obj. -39.625 iterations 0
Cbc0038I Pass  28: suminf.    0.33874 (3) obj. -39.625 iterations 2
Cbc0038I Pass  29: suminf.    1.65787 (8) obj. -39.625 iterations 19
Cbc0038I Pass  30: suminf.    1.41938 (7) obj. -43.4408 iterations 2
Cbc0038I Pass  31: suminf.    1.36527 (6) obj. -39.625 iterations 9
Cbc0038I Pass  32: suminf.    1.36527 (6) obj. -39.625 iterations 0
Cbc0038I Rounding solution of -33.1726 is better than previous of -31.7842

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 56 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -33.1726 to -57.1968 (0.03 seconds)
Cbc0038I Round again with cutoff of -67.7957
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.95681 (22) obj. -67.7957 iterations 1
Cbc0038I Pass  33: suminf.    1.63462 (16) obj. -67.7957 iterations 1
Cbc0038I Pass  34: suminf.    0.85588 (9) obj. -67.7957 iterations 10
Cbc0038I Pass  35: suminf.    0.85588 (9) obj. -67.7957 iterations 0
Cbc0038I Pass  36: suminf.    1.50500 (10) obj. -67.7957 iterations 6
Cbc0038I Pass  37: suminf.    1.50500 (10) obj. -67.7957 iterations 0
Cbc0038I Pass  38: suminf.    1.57985 (7) obj. -67.7957 iterations 8
Cbc0038I Pass  39: suminf.    1.57985 (7) obj. -67.7957 iterations 0
Cbc0038I Pass  40: suminf.    2.08276 (8) obj. -67.7957 iterations 5
Cbc0038I Pass  41: suminf.    1.57412 (6) obj. -67.7957 iterations 3
Cbc0038I Pass  42: suminf.    1.57412 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  43: suminf.    2.05873 (8) obj. -67.7957 iterations 3
Cbc0038I Pass  44: suminf.    1.58695 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  45: suminf.    1.58695 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  46: suminf.    1.57412 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  47: suminf.    1.57412 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  48: suminf.    2.05873 (8) obj. -67.7957 iterations 3
Cbc0038I Pass  49: suminf.    1.58695 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  50: suminf.    1.58695 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  51: suminf.    1.57412 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  52: suminf.    1.57412 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  53: suminf.    2.05873 (8) obj. -67.7957 iterations 3
Cbc0038I Pass  54: suminf.    1.58695 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  55: suminf.    1.58695 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  56: suminf.    1.57412 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  57: suminf.    1.57412 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  58: suminf.    2.05873 (8) obj. -67.7957 iterations 3
Cbc0038I Pass  59: suminf.    1.58695 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  60: suminf.    1.58695 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  61: suminf.    1.57412 (6) obj. -67.7957 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -57.1968 - took 0.03 seconds
Cbc0012I Integer solution of -57.19679 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 56 columns, reduced to 20 rows 22 columns
Cbc0031I 17 added rows had average density of 12.411765
Cbc0013I At root node, 133 cuts changed objective from -110.19103 to -56.749193 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 177 row cuts average 2.9 elements, 11 column cuts (11 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 28 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 20 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -57.19679000000001, took 46 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 30 (-5) columns and 160 (-35) elements
Clp1000I sum of infeasibilities 1.17424e-05 - average 2.17452e-07, 6 fixed columns
Coin0506I Presolve 38 (-16) rows, 23 (-7) columns and 114 (-46) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 114.44588
Clp0000I Optimal - objective value 114.44588
Coin0511I After Postsolve, objective 114.44588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 114.44588
Clp0000I Optimal - objective value 114.44588
Clp0000I Optimal - objective value 114.44588
Coin0511I After Postsolve, objective 114.44588, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.4458823 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 30 columns (29 integer (29 of which binary)) and 159 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.88604
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -26.494 iterations 12
Cbc0038I Solution found of -26.494
Cbc0038I Relaxing continuous gives -26.494
Cbc0038I Rounding solution of -41.2946 is better than previous of -26.494

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -41.2946 to -57.1968 (0.01 seconds)
Cbc0038I Round again with cutoff of -62.878
Cbc0038I Pass   2: suminf.    0.79352 (2) obj. -62.878 iterations 2
Cbc0038I Pass   3: suminf.    0.86277 (2) obj. -62.878 iterations 1
Cbc0038I Pass   4: suminf.    0.69933 (3) obj. -62.878 iterations 7
Cbc0038I Pass   5: suminf.    0.50902 (3) obj. -62.878 iterations 3
Cbc0038I Pass   6: suminf.    0.36452 (2) obj. -62.878 iterations 1
Cbc0038I Pass   7: suminf.    0.80557 (2) obj. -62.878 iterations 3
Cbc0038I Pass   8: suminf.    0.92762 (2) obj. -62.878 iterations 1
Cbc0038I Pass   9: suminf.    2.21741 (6) obj. -62.878 iterations 6
Cbc0038I Pass  10: suminf.    1.70355 (6) obj. -62.878 iterations 8
Cbc0038I Pass  11: suminf.    1.22960 (5) obj. -62.878 iterations 1
Cbc0038I Pass  12: suminf.    1.21371 (5) obj. -62.878 iterations 2
Cbc0038I Pass  13: suminf.    0.35234 (3) obj. -62.878 iterations 8
Cbc0038I Pass  14: suminf.    0.31513 (2) obj. -62.878 iterations 1
Cbc0038I Pass  15: suminf.    0.85732 (2) obj. -62.878 iterations 3
Cbc0038I Pass  16: suminf.    0.88340 (2) obj. -62.878 iterations 1
Cbc0038I Pass  17: suminf.    1.93326 (7) obj. -62.878 iterations 8
Cbc0038I Pass  18: suminf.    1.48618 (6) obj. -62.878 iterations 5
Cbc0038I Pass  19: suminf.    0.31513 (2) obj. -62.878 iterations 7
Cbc0038I Pass  20: suminf.    0.31513 (2) obj. -62.878 iterations 0
Cbc0038I Pass  21: suminf.    0.85732 (2) obj. -62.878 iterations 3
Cbc0038I Pass  22: suminf.    0.88340 (2) obj. -62.878 iterations 1
Cbc0038I Pass  23: suminf.    0.83197 (7) obj. -62.878 iterations 5
Cbc0038I Pass  24: suminf.    0.73479 (4) obj. -62.878 iterations 1
Cbc0038I Pass  25: suminf.    1.29660 (4) obj. -62.878 iterations 2
Cbc0038I Pass  26: suminf.    1.72186 (8) obj. -62.878 iterations 10
Cbc0038I Pass  27: suminf.    1.01020 (4) obj. -62.878 iterations 6
Cbc0038I Pass  28: suminf.    1.16645 (4) obj. -62.878 iterations 3
Cbc0038I Pass  29: suminf.    1.05794 (4) obj. -62.878 iterations 5
Cbc0038I Pass  30: suminf.    0.91519 (4) obj. -62.878 iterations 1
Cbc0038I Pass  31: suminf.    1.47794 (4) obj. -62.878 iterations 3
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -73.1039
Cbc0038I Pass  31: suminf.    0.85709 (3) obj. -73.1039 iterations 1
Cbc0038I Pass  32: suminf.    0.62515 (3) obj. -73.1039 iterations 1
Cbc0038I Pass  33: suminf.    1.02990 (3) obj. -73.1039 iterations 3
Cbc0038I Pass  34: suminf.    0.53582 (3) obj. -73.1039 iterations 2
Cbc0038I Pass  35: suminf.    0.86165 (3) obj. -73.1039 iterations 3
Cbc0038I Pass  36: suminf.    1.52873 (8) obj. -73.1039 iterations 10
Cbc0038I Pass  37: suminf.    1.14492 (6) obj. -73.1039 iterations 1
Cbc0038I Pass  38: suminf.    0.89970 (3) obj. -73.1039 iterations 8
Cbc0038I Pass  39: suminf.    0.64179 (4) obj. -73.1039 iterations 1
Cbc0038I Pass  40: suminf.    1.53330 (5) obj. -73.1039 iterations 6
Cbc0038I Pass  41: suminf.    1.13501 (4) obj. -73.1039 iterations 2
Cbc0038I Pass  42: suminf.    1.13064 (5) obj. -73.1039 iterations 1
Cbc0038I Pass  43: suminf.    1.48806 (4) obj. -73.1039 iterations 4
Cbc0038I Pass  44: suminf.    1.09608 (4) obj. -73.1039 iterations 3
Cbc0038I Pass  45: suminf.    1.09608 (4) obj. -73.1039 iterations 0
Cbc0038I Pass  46: suminf.    2.18074 (6) obj. -73.1039 iterations 10
Cbc0038I Pass  47: suminf.    1.44545 (5) obj. -73.1039 iterations 5
Cbc0038I Pass  48: suminf.    1.50825 (5) obj. -73.1039 iterations 1
Cbc0038I Pass  49: suminf.    1.43377 (6) obj. -73.1039 iterations 2
Cbc0038I Pass  50: suminf.    1.49212 (4) obj. -73.1039 iterations 6
Cbc0038I Pass  51: suminf.    1.09608 (4) obj. -73.1039 iterations 2
Cbc0038I Pass  52: suminf.    1.48806 (4) obj. -73.1039 iterations 3
Cbc0038I Pass  53: suminf.    1.09608 (4) obj. -73.1039 iterations 3
Cbc0038I Pass  54: suminf.    3.32547 (12) obj. -73.1039 iterations 16
Cbc0038I Pass  55: suminf.    2.70266 (9) obj. -73.1039 iterations 5
Cbc0038I Pass  56: suminf.    2.02298 (5) obj. -73.1039 iterations 9
Cbc0038I Pass  57: suminf.    1.03409 (4) obj. -73.1039 iterations 4
Cbc0038I Pass  58: suminf.    1.42332 (4) obj. -73.1039 iterations 3
Cbc0038I Pass  59: suminf.    3.31257 (10) obj. -73.1039 iterations 10
Cbc0038I Pass  60: suminf.    1.76628 (6) obj. -73.1039 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 30 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -57.1968 - took 0.03 seconds
Cbc0012I Integer solution of -57.19679 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 53 rows 30 columns, reduced to 26 rows 17 columns
Cbc0031I 13 added rows had average density of 24
Cbc0013I At root node, 13 cuts changed objective from -114.00776 to -77.292679 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2066 row cuts average 4.6 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 770 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 28.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.803 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -57.19679 best solution, best possible -77.29109 (1.65 seconds)
Cbc0001I Search completed - best objective -57.19679000000001, took 2544 iterations and 8 nodes (1.68 seconds)
Cbc0032I Strong branching done 120 times (1460 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 56 (-11) columns and 544 (-180) elements
Clp1000I sum of infeasibilities 2.1031e-08 - average 4.04442e-10, 17 fixed columns
Coin0506I Presolve 37 (-15) rows, 39 (-17) columns and 280 (-264) elements
Clp0006I 0  Obj 74.830661 Dual inf 6.0379973 (37)
Clp0029I End of values pass after 39 iterations
Clp0014I Perturbing problem by 0.001% of 1.5673845 - largest nonzero change 2.9548072e-05 ( 0.0024275985%) - largest zero change 2.588541e-05
Clp0000I Optimal - objective value 116.13402
Clp0000I Optimal - objective value 116.13402
Coin0511I After Postsolve, objective 116.13402, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 116.13402 Dual inf 89.610534 (6)
Clp0014I Perturbing problem by 0.001% of 1.7450468 - largest nonzero change 1.1348901e-05 ( 0.00091204228%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 131.66685
Clp0000I Optimal - objective value 131.66685
Clp0000I Optimal - objective value 131.66685
Coin0511I After Postsolve, objective 131.66685, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 131.6668484 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 56 columns (56 integer (56 of which binary)) and 545 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.870%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 6.68527
Cbc0038I Pass   1: suminf.    1.33346 (15) obj. -59.4367 iterations 7
Cbc0038I Pass   2: suminf.    1.33346 (15) obj. -59.4367 iterations 0
Cbc0038I Solution found of -5.87325
Cbc0038I Rounding solution of -24.9401 is better than previous of -5.87325

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 56 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -24.9401 to -31.7842 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.625
Cbc0038I Pass   3: suminf.    1.33346 (15) obj. -59.4367 iterations 0
Cbc0038I Pass   4: suminf.    1.33346 (15) obj. -59.4367 iterations 0
Cbc0038I Pass   5: suminf.    1.13255 (8) obj. -39.625 iterations 17
Cbc0038I Pass   6: suminf.    0.68089 (6) obj. -41.3192 iterations 2
Cbc0038I Pass   7: suminf.    0.70799 (4) obj. -39.625 iterations 12
Cbc0038I Pass   8: suminf.    0.44307 (3) obj. -39.625 iterations 3
Cbc0038I Pass   9: suminf.    0.78313 (3) obj. -39.625 iterations 3
Cbc0038I Pass  10: suminf.    0.36000 (2) obj. -43.0697 iterations 2
Cbc0038I Pass  11: suminf.    0.57530 (2) obj. -39.625 iterations 2
Cbc0038I Pass  12: suminf.    1.73227 (9) obj. -39.625 iterations 8
Cbc0038I Pass  13: suminf.    0.98000 (6) obj. -39.625 iterations 3
Cbc0038I Pass  14: suminf.    0.33506 (2) obj. -39.625 iterations 5
Cbc0038I Pass  15: suminf.    0.17745 (2) obj. -39.625 iterations 1
Cbc0038I Pass  16: suminf.    0.95492 (5) obj. -39.625 iterations 7
Cbc0038I Pass  17: suminf.    0.95492 (5) obj. -39.625 iterations 1
Cbc0038I Pass  18: suminf.    0.93493 (4) obj. -39.625 iterations 7
Cbc0038I Pass  19: suminf.    0.47215 (3) obj. -39.625 iterations 1
Cbc0038I Pass  20: suminf.    0.64785 (2) obj. -39.625 iterations 3
Cbc0038I Pass  21: suminf.    0.26124 (2) obj. -39.625 iterations 1
Cbc0038I Pass  22: suminf.    1.74321 (9) obj. -39.625 iterations 8
Cbc0038I Pass  23: suminf.    1.25129 (6) obj. -56.2548 iterations 3
Cbc0038I Pass  24: suminf.    0.33874 (3) obj. -39.625 iterations 8
Cbc0038I Pass  25: suminf.    0.33874 (3) obj. -39.625 iterations 0
Cbc0038I Pass  26: suminf.    0.60623 (3) obj. -39.625 iterations 1
Cbc0038I Pass  27: suminf.    0.60623 (3) obj. -39.625 iterations 0
Cbc0038I Pass  28: suminf.    0.33874 (3) obj. -39.625 iterations 2
Cbc0038I Pass  29: suminf.    1.65787 (8) obj. -39.625 iterations 19
Cbc0038I Pass  30: suminf.    1.41938 (7) obj. -43.4408 iterations 2
Cbc0038I Pass  31: suminf.    1.36527 (6) obj. -39.625 iterations 9
Cbc0038I Pass  32: suminf.    1.36527 (6) obj. -39.625 iterations 0
Cbc0038I Rounding solution of -33.1726 is better than previous of -31.7842

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 56 columns, reduced to 25 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -33.1726 to -57.1968 (0.03 seconds)
Cbc0038I Round again with cutoff of -67.7957
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.95681 (22) obj. -67.7957 iterations 1
Cbc0038I Pass  33: suminf.    1.63462 (16) obj. -67.7957 iterations 1
Cbc0038I Pass  34: suminf.    0.85588 (9) obj. -67.7957 iterations 10
Cbc0038I Pass  35: suminf.    0.85588 (9) obj. -67.7957 iterations 0
Cbc0038I Pass  36: suminf.    1.50500 (10) obj. -67.7957 iterations 6
Cbc0038I Pass  37: suminf.    1.50500 (10) obj. -67.7957 iterations 0
Cbc0038I Pass  38: suminf.    1.57985 (7) obj. -67.7957 iterations 8
Cbc0038I Pass  39: suminf.    1.57985 (7) obj. -67.7957 iterations 0
Cbc0038I Pass  40: suminf.    2.08276 (8) obj. -67.7957 iterations 5
Cbc0038I Pass  41: suminf.    1.57412 (6) obj. -67.7957 iterations 3
Cbc0038I Pass  42: suminf.    1.57412 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  43: suminf.    2.05873 (8) obj. -67.7957 iterations 3
Cbc0038I Pass  44: suminf.    1.58695 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  45: suminf.    1.58695 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  46: suminf.    1.57412 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  47: suminf.    1.57412 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  48: suminf.    2.05873 (8) obj. -67.7957 iterations 3
Cbc0038I Pass  49: suminf.    1.58695 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  50: suminf.    1.58695 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  51: suminf.    1.57412 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  52: suminf.    1.57412 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  53: suminf.    2.05873 (8) obj. -67.7957 iterations 3
Cbc0038I Pass  54: suminf.    1.58695 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  55: suminf.    1.58695 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  56: suminf.    1.57412 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  57: suminf.    1.57412 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  58: suminf.    2.05873 (8) obj. -67.7957 iterations 3
Cbc0038I Pass  59: suminf.    1.58695 (6) obj. -67.7957 iterations 2
Cbc0038I Pass  60: suminf.    1.58695 (6) obj. -67.7957 iterations 0
Cbc0038I Pass  61: suminf.    1.57412 (6) obj. -67.7957 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -57.1968 - took 0.03 seconds
Cbc0012I Integer solution of -57.19679 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 56 columns, reduced to 20 rows 22 columns
Cbc0031I 17 added rows had average density of 12.411765
Cbc0013I At root node, 133 cuts changed objective from -110.19103 to -56.749193 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 177 row cuts average 2.9 elements, 11 column cuts (11 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 28 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 20 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -57.19679000000001, took 46 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

