Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-19) rows, 18 (-7) columns and 88 (-47) elements
Clp1000I sum of infeasibilities 8.85925e-07 - average 2.95308e-08, 4 fixed columns
Coin0506I Presolve 20 (-10) rows, 14 (-4) columns and 60 (-28) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Coin0511I After Postsolve, objective 73.693667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.2366774 - largest nonzero change 1.5935982e-05 ( 0.0015935982%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Coin0511I After Postsolve, objective 73.693667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.69366723 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 18 columns (17 integer (17 of which binary)) and 89 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.955%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.16029
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.52296 iterations 12
Cbc0038I Solution found of -3.52296
Cbc0038I Relaxing continuous gives -3.52296
Cbc0038I Rounding solution of -4.40464 is better than previous of -3.52296

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -4.40464 to -23.2014 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.2507
Cbc0038I Pass   2: suminf.    0.23690 (2) obj. -28.2507 iterations 2
Cbc0038I Pass   3: suminf.    0.61165 (3) obj. -28.2507 iterations 7
Cbc0038I Pass   4: suminf.    1.27849 (5) obj. -28.2507 iterations 3
Cbc0038I Pass   5: suminf.    1.13762 (4) obj. -28.2507 iterations 1
Cbc0038I Pass   6: suminf.    1.03235 (5) obj. -28.2507 iterations 4
Cbc0038I Pass   7: suminf.    0.82986 (3) obj. -28.2507 iterations 2
Cbc0038I Pass   8: suminf.    0.69090 (3) obj. -28.2507 iterations 2
Cbc0038I Pass   9: suminf.    1.04310 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  10: suminf.    1.39362 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  11: suminf.    1.29378 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  12: suminf.    1.15585 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  13: suminf.    1.03235 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  14: suminf.    0.82986 (3) obj. -28.2507 iterations 2
Cbc0038I Pass  15: suminf.    0.69090 (3) obj. -28.2507 iterations 2
Cbc0038I Pass  16: suminf.    1.04310 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  17: suminf.    0.72366 (3) obj. -28.2507 iterations 7
Cbc0038I Pass  18: suminf.    0.64481 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  19: suminf.    1.14356 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  20: suminf.    0.75249 (5) obj. -28.2507 iterations 1
Cbc0038I Pass  21: suminf.    0.74276 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  22: suminf.    1.02437 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  23: suminf.    0.96792 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  24: suminf.    1.05121 (3) obj. -28.2507 iterations 3
Cbc0038I Pass  25: suminf.    1.05121 (3) obj. -28.2507 iterations 0
Cbc0038I Pass  26: suminf.    1.07231 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  27: suminf.    1.05121 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  28: suminf.    1.30099 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  29: suminf.    1.19005 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  30: suminf.    1.15454 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  31: suminf.    1.65449 (6) obj. -28.2507 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -23.2014 to -31.1494 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.6584
Cbc0038I Pass  31: suminf.    0.56704 (4) obj. -39.6584 iterations 2
Cbc0038I Pass  32: suminf.    0.70261 (4) obj. -39.6584 iterations 6
Cbc0038I Pass  33: suminf.    0.70248 (4) obj. -39.6584 iterations 1
Cbc0038I Pass  34: suminf.    1.32900 (5) obj. -39.6584 iterations 4
Cbc0038I Pass  35: suminf.    0.63621 (3) obj. -39.6584 iterations 4
Cbc0038I Pass  36: suminf.    1.69927 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  37: suminf.    1.35700 (4) obj. -39.6584 iterations 1
Cbc0038I Pass  38: suminf.    0.60236 (3) obj. -39.6584 iterations 2
Cbc0038I Pass  39: suminf.    1.21464 (4) obj. -39.6584 iterations 5
Cbc0038I Pass  40: suminf.    1.37661 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  41: suminf.    1.37021 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  42: suminf.    1.68428 (6) obj. -39.6584 iterations 6
Cbc0038I Pass  43: suminf.    1.68299 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  44: suminf.    2.08521 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  45: suminf.    2.08521 (6) obj. -39.6584 iterations 0
Cbc0038I Pass  46: suminf.    2.54423 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  47: suminf.    2.24852 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  48: suminf.    1.85972 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  49: suminf.    1.85972 (5) obj. -39.6584 iterations 0
Cbc0038I Pass  50: suminf.    1.93285 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  51: suminf.    1.91037 (5) obj. -39.6584 iterations 4
Cbc0038I Pass  52: suminf.    1.85972 (5) obj. -39.6584 iterations 2
Cbc0038I Pass  53: suminf.    3.06864 (10) obj. -39.6584 iterations 7
Cbc0038I Pass  54: suminf.    2.19941 (7) obj. -39.6584 iterations 3
Cbc0038I Pass  55: suminf.    1.58847 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  56: suminf.    1.56374 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  57: suminf.    1.85972 (5) obj. -39.6584 iterations 2
Cbc0038I Pass  58: suminf.    1.85972 (5) obj. -39.6584 iterations 0
Cbc0038I Pass  59: suminf.    1.93285 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  60: suminf.    2.35370 (7) obj. -39.6584 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -31.1494 - took 0.04 seconds
Cbc0012I Integer solution of -31.149436 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 30 rows 18 columns, reduced to 20 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -73.693667 to -8.5963003 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.5 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.1494356, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-9) rows, 43 (-3) columns and 330 (-58) elements
Clp1000I sum of infeasibilities 2.80041e-08 - average 7.18054e-10, 33 fixed columns
Coin0506I Presolve 5 (-34) rows, 10 (-33) columns and 25 (-305) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 462.89691
Clp0000I Optimal - objective value 462.89691
Coin0511I After Postsolve, objective 462.89691, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0369623 - largest nonzero change 2.6507651e-05 ( 0.0025215374%) - largest zero change 1.8770327e-05
Clp0000I Optimal - objective value 528.33703
Clp0000I Optimal - objective value 528.33703
Clp0000I Optimal - objective value 528.33703
Coin0511I After Postsolve, objective 528.33703, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 528.3370285 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 43 columns (43 integer (43 of which binary)) and 351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.714%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.74845
Cbc0038I Pass   1: suminf.    0.83333 (2) obj. -460.02 iterations 24
Cbc0038I Solution found of -449.353
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -454.92
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.83333 (2) obj. -460.02 iterations 0
Cbc0038I Pass   3: suminf.    0.23472 (2) obj. -454.92 iterations 6
Cbc0038I Pass   4: suminf.    0.85438 (3) obj. -454.92 iterations 4
Cbc0038I Pass   5: suminf.    0.85438 (3) obj. -454.92 iterations 0
Cbc0038I Pass   6: suminf.    1.04877 (3) obj. -457.835 iterations 2
Cbc0038I Pass   7: suminf.    2.20956 (7) obj. -454.92 iterations 7
Cbc0038I Pass   8: suminf.    0.89267 (3) obj. -454.92 iterations 7
Cbc0038I Pass   9: suminf.    0.99198 (3) obj. -456.409 iterations 2
Cbc0038I Pass  10: suminf.    2.38563 (7) obj. -454.92 iterations 7
Cbc0038I Pass  11: suminf.    0.91489 (4) obj. -454.92 iterations 5
Cbc0038I Pass  12: suminf.    1.86730 (6) obj. -454.92 iterations 5
Cbc0038I Pass  13: suminf.    0.90703 (3) obj. -454.92 iterations 3
Cbc0038I Pass  14: suminf.    0.85438 (3) obj. -454.92 iterations 4
Cbc0038I Pass  15: suminf.    0.85438 (3) obj. -454.92 iterations 0
Cbc0038I Pass  16: suminf.    1.04877 (3) obj. -457.835 iterations 2
Cbc0038I Pass  17: suminf.    3.43507 (9) obj. -454.92 iterations 8
Cbc0038I Pass  18: suminf.    1.01527 (3) obj. -454.92 iterations 9
Cbc0038I Pass  19: suminf.    2.28383 (6) obj. -454.92 iterations 5
Cbc0038I Pass  20: suminf.    1.01527 (3) obj. -454.92 iterations 5
Cbc0038I Pass  21: suminf.    0.85438 (3) obj. -454.92 iterations 4
Cbc0038I Pass  22: suminf.    0.85438 (3) obj. -454.92 iterations 0
Cbc0038I Pass  23: suminf.    1.04877 (3) obj. -457.835 iterations 2
Cbc0038I Pass  24: suminf.    2.76620 (7) obj. -454.92 iterations 18
Cbc0038I Pass  25: suminf.    2.06429 (6) obj. -454.92 iterations 5
Cbc0038I Pass  26: suminf.    1.32400 (4) obj. -454.92 iterations 4
Cbc0038I Pass  27: suminf.    1.32400 (4) obj. -454.92 iterations 0
Cbc0038I Pass  28: suminf.    1.19826 (4) obj. -454.92 iterations 1
Cbc0038I Pass  29: suminf.    1.19826 (4) obj. -454.92 iterations 0
Cbc0038I Pass  30: suminf.    2.02823 (6) obj. -454.92 iterations 7
Cbc0038I Pass  31: suminf.    1.19496 (4) obj. -454.92 iterations 5
Cbc0038I Rounding solution of -466.358 is better than previous of -449.353

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 43 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -474.089
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.50654 (5) obj. -474.089 iterations 3
Cbc0038I Pass  32: suminf.    1.44900 (5) obj. -474.089 iterations 6
Cbc0038I Pass  33: suminf.    1.44900 (5) obj. -474.089 iterations 0
Cbc0038I Pass  34: suminf.    1.76622 (5) obj. -474.089 iterations 3
Cbc0038I Pass  35: suminf.    1.48211 (5) obj. -474.089 iterations 2
Cbc0038I Pass  36: suminf.    1.44900 (5) obj. -474.089 iterations 3
Cbc0038I Pass  37: suminf.    1.21666 (5) obj. -474.089 iterations 4
Cbc0038I Pass  38: suminf.    1.12797 (4) obj. -474.089 iterations 4
Cbc0038I Pass  39: suminf.    1.41028 (4) obj. -477.477 iterations 2
Cbc0038I Pass  40: suminf.    1.18443 (4) obj. -474.089 iterations 1
Cbc0038I Pass  41: suminf.    1.12797 (4) obj. -474.089 iterations 2
Cbc0038I Pass  42: suminf.    2.47761 (10) obj. -474.089 iterations 10
Cbc0038I Pass  43: suminf.    1.82454 (7) obj. -474.089 iterations 7
Cbc0038I Pass  44: suminf.    0.91814 (5) obj. -474.089 iterations 4
Cbc0038I Pass  45: suminf.    0.86313 (5) obj. -474.089 iterations 2
Cbc0038I Pass  46: suminf.    0.86313 (5) obj. -474.089 iterations 0
Cbc0038I Pass  47: suminf.    1.39005 (5) obj. -474.089 iterations 2
Cbc0038I Pass  48: suminf.    1.72577 (6) obj. -474.089 iterations 1
Cbc0038I Pass  49: suminf.    2.66552 (9) obj. -474.089 iterations 15
Cbc0038I Pass  50: suminf.    2.05446 (8) obj. -474.089 iterations 13
Cbc0038I Pass  51: suminf.    1.67481 (7) obj. -474.089 iterations 2
Cbc0038I Pass  52: suminf.    1.50652 (6) obj. -477.872 iterations 5
Cbc0038I Pass  53: suminf.    1.16216 (4) obj. -474.089 iterations 3
Cbc0038I Pass  54: suminf.    1.16236 (4) obj. -474.089 iterations 2
Cbc0038I Pass  55: suminf.    1.21148 (6) obj. -474.089 iterations 4
Cbc0038I Pass  56: suminf.    0.93967 (4) obj. -474.089 iterations 3
Cbc0038I Pass  57: suminf.    0.87752 (4) obj. -476.339 iterations 2
Cbc0038I Pass  58: suminf.    0.72754 (4) obj. -474.089 iterations 1
Cbc0038I Pass  59: suminf.    0.93967 (4) obj. -474.089 iterations 2
Cbc0038I Pass  60: suminf.    2.36018 (7) obj. -474.089 iterations 11
Cbc0038I Rounding solution of -475.625 is better than previous of -466.358

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -484.442
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    2.25620 (7) obj. -484.442 iterations 2
Cbc0038I Pass  61: suminf.    2.44783 (8) obj. -484.442 iterations 6
Cbc0038I Pass  62: suminf.    2.44783 (8) obj. -484.442 iterations 0
Cbc0038I Pass  63: suminf.    2.44783 (8) obj. -484.442 iterations 1
Cbc0038I Pass  64: suminf.    2.80486 (8) obj. -484.442 iterations 3
Cbc0038I Pass  65: suminf.    2.25620 (7) obj. -484.442 iterations 2
Cbc0038I Pass  66: suminf.    2.44783 (8) obj. -484.442 iterations 6
Cbc0038I Pass  67: suminf.    2.44783 (8) obj. -484.442 iterations 0
Cbc0038I Pass  68: suminf.    2.44783 (8) obj. -484.442 iterations 1
Cbc0038I Pass  69: suminf.    2.80486 (8) obj. -484.442 iterations 3
Cbc0038I Pass  70: suminf.    2.25620 (7) obj. -484.442 iterations 2
Cbc0038I Pass  71: suminf.    2.44783 (8) obj. -484.442 iterations 6
Cbc0038I Pass  72: suminf.    2.44783 (8) obj. -484.442 iterations 0
Cbc0038I Pass  73: suminf.    2.44783 (8) obj. -484.442 iterations 1
Cbc0038I Pass  74: suminf.    2.80486 (8) obj. -484.442 iterations 3
Cbc0038I Pass  75: suminf.    2.25620 (7) obj. -484.442 iterations 2
Cbc0038I Pass  76: suminf.    2.44783 (8) obj. -484.442 iterations 6
Cbc0038I Pass  77: suminf.    2.44783 (8) obj. -484.442 iterations 0
Cbc0038I Pass  78: suminf.    2.44783 (8) obj. -484.442 iterations 1
Cbc0038I Pass  79: suminf.    2.80486 (8) obj. -484.442 iterations 3
Cbc0038I Pass  80: suminf.    2.25620 (7) obj. -484.442 iterations 2
Cbc0038I Pass  81: suminf.    2.44783 (8) obj. -484.442 iterations 6
Cbc0038I Pass  82: suminf.    2.44783 (8) obj. -484.442 iterations 0
Cbc0038I Pass  83: suminf.    2.44783 (8) obj. -484.442 iterations 1
Cbc0038I Pass  84: suminf.    2.80486 (8) obj. -484.442 iterations 3
Cbc0038I Pass  85: suminf.    2.25620 (7) obj. -484.442 iterations 2
Cbc0038I Pass  86: suminf.    2.44783 (8) obj. -484.442 iterations 6
Cbc0038I Pass  87: suminf.    2.44783 (8) obj. -484.442 iterations 0
Cbc0038I Pass  88: suminf.    2.44783 (8) obj. -484.442 iterations 1
Cbc0038I Pass  89: suminf.    2.80486 (8) obj. -484.442 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -475.625 - took 0.03 seconds
Cbc0012I Integer solution of -475.62544 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 38 rows 43 columns, reduced to 2 rows 4 columns
Cbc0031I 6 added rows had average density of 7.5
Cbc0013I At root node, 30 cuts changed objective from -502.94883 to -475.62544 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.5 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 34 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -475.6254356000001, took 52 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-19) rows, 18 (-7) columns and 88 (-47) elements
Clp1000I sum of infeasibilities 8.85925e-07 - average 2.95308e-08, 4 fixed columns
Coin0506I Presolve 20 (-10) rows, 14 (-4) columns and 60 (-28) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Coin0511I After Postsolve, objective 73.693667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.2366774 - largest nonzero change 1.5935982e-05 ( 0.0015935982%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Clp0000I Optimal - objective value 73.693667
Coin0511I After Postsolve, objective 73.693667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.69366723 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 18 columns (17 integer (17 of which binary)) and 89 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.955%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.16029
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.52296 iterations 12
Cbc0038I Solution found of -3.52296
Cbc0038I Relaxing continuous gives -3.52296
Cbc0038I Rounding solution of -4.40464 is better than previous of -3.52296

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 19 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -4.40464 to -23.2014 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.2507
Cbc0038I Pass   2: suminf.    0.23690 (2) obj. -28.2507 iterations 2
Cbc0038I Pass   3: suminf.    0.61165 (3) obj. -28.2507 iterations 7
Cbc0038I Pass   4: suminf.    1.27849 (5) obj. -28.2507 iterations 3
Cbc0038I Pass   5: suminf.    1.13762 (4) obj. -28.2507 iterations 1
Cbc0038I Pass   6: suminf.    1.03235 (5) obj. -28.2507 iterations 4
Cbc0038I Pass   7: suminf.    0.82986 (3) obj. -28.2507 iterations 2
Cbc0038I Pass   8: suminf.    0.69090 (3) obj. -28.2507 iterations 2
Cbc0038I Pass   9: suminf.    1.04310 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  10: suminf.    1.39362 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  11: suminf.    1.29378 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  12: suminf.    1.15585 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  13: suminf.    1.03235 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  14: suminf.    0.82986 (3) obj. -28.2507 iterations 2
Cbc0038I Pass  15: suminf.    0.69090 (3) obj. -28.2507 iterations 2
Cbc0038I Pass  16: suminf.    1.04310 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  17: suminf.    0.72366 (3) obj. -28.2507 iterations 7
Cbc0038I Pass  18: suminf.    0.64481 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  19: suminf.    1.14356 (5) obj. -28.2507 iterations 5
Cbc0038I Pass  20: suminf.    0.75249 (5) obj. -28.2507 iterations 1
Cbc0038I Pass  21: suminf.    0.74276 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  22: suminf.    1.02437 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  23: suminf.    0.96792 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  24: suminf.    1.05121 (3) obj. -28.2507 iterations 3
Cbc0038I Pass  25: suminf.    1.05121 (3) obj. -28.2507 iterations 0
Cbc0038I Pass  26: suminf.    1.07231 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  27: suminf.    1.05121 (3) obj. -28.2507 iterations 1
Cbc0038I Pass  28: suminf.    1.30099 (4) obj. -28.2507 iterations 3
Cbc0038I Pass  29: suminf.    1.19005 (5) obj. -28.2507 iterations 3
Cbc0038I Pass  30: suminf.    1.15454 (4) obj. -28.2507 iterations 1
Cbc0038I Pass  31: suminf.    1.65449 (6) obj. -28.2507 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -23.2014 to -31.1494 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.6584
Cbc0038I Pass  31: suminf.    0.56704 (4) obj. -39.6584 iterations 2
Cbc0038I Pass  32: suminf.    0.70261 (4) obj. -39.6584 iterations 6
Cbc0038I Pass  33: suminf.    0.70248 (4) obj. -39.6584 iterations 1
Cbc0038I Pass  34: suminf.    1.32900 (5) obj. -39.6584 iterations 4
Cbc0038I Pass  35: suminf.    0.63621 (3) obj. -39.6584 iterations 4
Cbc0038I Pass  36: suminf.    1.69927 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  37: suminf.    1.35700 (4) obj. -39.6584 iterations 1
Cbc0038I Pass  38: suminf.    0.60236 (3) obj. -39.6584 iterations 2
Cbc0038I Pass  39: suminf.    1.21464 (4) obj. -39.6584 iterations 5
Cbc0038I Pass  40: suminf.    1.37661 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  41: suminf.    1.37021 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  42: suminf.    1.68428 (6) obj. -39.6584 iterations 6
Cbc0038I Pass  43: suminf.    1.68299 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  44: suminf.    2.08521 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  45: suminf.    2.08521 (6) obj. -39.6584 iterations 0
Cbc0038I Pass  46: suminf.    2.54423 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  47: suminf.    2.24852 (6) obj. -39.6584 iterations 3
Cbc0038I Pass  48: suminf.    1.85972 (5) obj. -39.6584 iterations 5
Cbc0038I Pass  49: suminf.    1.85972 (5) obj. -39.6584 iterations 0
Cbc0038I Pass  50: suminf.    1.93285 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  51: suminf.    1.91037 (5) obj. -39.6584 iterations 4
Cbc0038I Pass  52: suminf.    1.85972 (5) obj. -39.6584 iterations 2
Cbc0038I Pass  53: suminf.    3.06864 (10) obj. -39.6584 iterations 7
Cbc0038I Pass  54: suminf.    2.19941 (7) obj. -39.6584 iterations 3
Cbc0038I Pass  55: suminf.    1.58847 (6) obj. -39.6584 iterations 1
Cbc0038I Pass  56: suminf.    1.56374 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  57: suminf.    1.85972 (5) obj. -39.6584 iterations 2
Cbc0038I Pass  58: suminf.    1.85972 (5) obj. -39.6584 iterations 0
Cbc0038I Pass  59: suminf.    1.93285 (5) obj. -39.6584 iterations 1
Cbc0038I Pass  60: suminf.    2.35370 (7) obj. -39.6584 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 18 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -31.1494 - took 0.02 seconds
Cbc0012I Integer solution of -31.149436 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 30 rows 18 columns, reduced to 20 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -73.693667 to -8.5963003 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.5 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -31.1494356, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 38 (-9) columns and 242 (-147) elements
Clp1000I sum of infeasibilities 3.49414e-09 - average 1.02769e-10, 22 fixed columns
Coin0506I Presolve 8 (-26) rows, 11 (-27) columns and 25 (-217) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 59.370262
Clp0000I Optimal - objective value 59.370262
Coin0511I After Postsolve, objective 59.370262, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2969183 - largest nonzero change 2.4357226e-05 ( 0.0018425102%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 99.020663
Clp0000I Optimal - objective value 99.020663
Clp0000I Optimal - objective value 99.020663
Coin0511I After Postsolve, objective 99.020663, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.02066293 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 38 columns (38 integer (38 of which binary)) and 250 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.553%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.98841
Cbc0038I Pass   1: suminf.    1.64329 (8) obj. -26.3552 iterations 13
Cbc0038I Pass   2: suminf.    1.64329 (8) obj. -26.3552 iterations 2
Cbc0038I Solution found of 30.1235
Cbc0038I Rounding solution of 27.5343 is better than previous of 30.1235

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 38 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 27.5343 to 8.66507 (0.01 seconds)
Cbc0038I Round again with cutoff of 1.44479
Cbc0038I Pass   3: suminf.    1.64329 (8) obj. -26.3552 iterations 0
Cbc0038I Pass   4: suminf.    1.64329 (8) obj. -26.3552 iterations 1
Cbc0038I Pass   5: suminf.    0.43339 (2) obj. 1.44479 iterations 9
Cbc0038I Pass   6: suminf.    0.43339 (2) obj. 1.44479 iterations 0
Cbc0038I Pass   7: suminf.    0.83992 (5) obj. 1.44479 iterations 6
Cbc0038I Pass   8: suminf.    0.83992 (5) obj. 1.44479 iterations 0
Cbc0038I Pass   9: suminf.    0.22754 (1) obj. 1.44479 iterations 6
Cbc0038I Pass  10: suminf.    0.30707 (1) obj. -13.3228 iterations 1
Cbc0038I Pass  11: suminf.    0.89131 (4) obj. 1.44479 iterations 6
Cbc0038I Pass  12: suminf.    0.81477 (3) obj. -1.40113 iterations 2
Cbc0038I Pass  13: suminf.    0.32791 (1) obj. 1.44479 iterations 3
Cbc0038I Pass  14: suminf.    0.30707 (1) obj. 0.783482 iterations 1
Cbc0038I Pass  15: suminf.    1.51160 (6) obj. -32.5048 iterations 6
Cbc0038I Pass  16: suminf.    1.04874 (5) obj. -30.2082 iterations 1
Cbc0038I Pass  17: suminf.    0.42246 (1) obj. 1.44479 iterations 5
Cbc0038I Pass  18: suminf.    0.30707 (1) obj. -2.21652 iterations 1
Cbc0038I Pass  19: suminf.    1.00157 (5) obj. 1.44479 iterations 9
Cbc0038I Pass  20: suminf.    1.00157 (5) obj. 1.44479 iterations 1
Cbc0038I Pass  21: suminf.    1.06289 (3) obj. 1.44479 iterations 4
Cbc0038I Pass  22: suminf.    1.06289 (3) obj. 1.44479 iterations 0
Cbc0038I Pass  23: suminf.    0.41428 (2) obj. 1.44479 iterations 3
Cbc0038I Pass  24: suminf.    0.39549 (2) obj. 0.848458 iterations 1
Cbc0038I Pass  25: suminf.    0.90988 (3) obj. 1.44479 iterations 3
Cbc0038I Pass  26: suminf.    0.90988 (3) obj. 1.44479 iterations 1
Cbc0038I Pass  27: suminf.    0.81194 (3) obj. 1.44479 iterations 3
Cbc0038I Pass  28: suminf.    1.06289 (3) obj. 1.44479 iterations 1
Cbc0038I Pass  29: suminf.    1.06289 (3) obj. 1.44479 iterations 0
Cbc0038I Pass  30: suminf.    0.41428 (2) obj. 1.44479 iterations 3
Cbc0038I Pass  31: suminf.    0.39549 (2) obj. 0.848458 iterations 1
Cbc0038I Pass  32: suminf.    0.90988 (3) obj. 1.44479 iterations 3
Cbc0038I Rounding solution of 6.07594 is better than previous of 8.66507

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 38 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -11.5515
Cbc0038I Pass  32: suminf.    1.64329 (8) obj. -26.3552 iterations 0
Cbc0038I Pass  33: suminf.    1.64329 (8) obj. -26.3552 iterations 1
Cbc0038I Pass  34: suminf.    1.11398 (5) obj. -11.5515 iterations 10
Cbc0038I Pass  35: suminf.    1.11398 (5) obj. -11.5515 iterations 0
Cbc0038I Pass  36: suminf.    0.84189 (2) obj. -11.5515 iterations 6
Cbc0038I Pass  37: suminf.    0.80942 (2) obj. -11.5515 iterations 1
Cbc0038I Pass  38: suminf.    1.84233 (8) obj. -11.5515 iterations 11
Cbc0038I Pass  39: suminf.    1.37619 (6) obj. -16.3001 iterations 2
Cbc0038I Pass  40: suminf.    0.94188 (3) obj. -11.5515 iterations 9
Cbc0038I Pass  41: suminf.    0.71562 (3) obj. -11.5515 iterations 2
Cbc0038I Pass  42: suminf.    1.29545 (4) obj. -11.5515 iterations 3
Cbc0038I Pass  43: suminf.    1.29545 (4) obj. -11.5515 iterations 1
Cbc0038I Pass  44: suminf.    0.94188 (3) obj. -11.5515 iterations 2
Cbc0038I Pass  45: suminf.    1.65022 (6) obj. -11.5515 iterations 5
Cbc0038I Pass  46: suminf.    1.65022 (6) obj. -11.5515 iterations 1
Cbc0038I Pass  47: suminf.    1.04288 (4) obj. -11.5515 iterations 5
Cbc0038I Pass  48: suminf.    0.83333 (3) obj. -13.7286 iterations 2
Cbc0038I Pass  49: suminf.    1.15664 (3) obj. -11.5515 iterations 5
Cbc0038I Pass  50: suminf.    1.15664 (3) obj. -11.5515 iterations 1
Cbc0038I Pass  51: suminf.    0.95428 (3) obj. -11.5515 iterations 4
Cbc0038I Pass  52: suminf.    3.59752 (10) obj. -11.5515 iterations 17
Cbc0038I Pass  53: suminf.    2.08117 (6) obj. -11.5515 iterations 10
Cbc0038I Pass  54: suminf.    2.08117 (6) obj. -11.5515 iterations 0
Cbc0038I Pass  55: suminf.    1.87720 (6) obj. -11.5515 iterations 11
Cbc0038I Pass  56: suminf.    1.87720 (6) obj. -11.5515 iterations 1
Cbc0038I Pass  57: suminf.    2.02626 (5) obj. -11.5515 iterations 5
Cbc0038I Pass  58: suminf.    1.07733 (4) obj. -11.5515 iterations 6
Cbc0038I Pass  59: suminf.    1.07733 (4) obj. -11.5515 iterations 2
Cbc0038I Pass  60: suminf.    1.73333 (5) obj. -11.5515 iterations 2
Cbc0038I Pass  61: suminf.    1.90043 (5) obj. -14.0177 iterations 12
Cbc0038I Rounding solution of -6.21274 is better than previous of 6.07594

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 38 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -27.1471
Cbc0038I Pass  61: suminf.    1.72048 (11) obj. -27.1471 iterations 1
Cbc0038I Pass  62: suminf.    1.67945 (9) obj. -27.1471 iterations 1
Cbc0038I Pass  63: suminf.    1.61624 (6) obj. -27.1471 iterations 10
Cbc0038I Pass  64: suminf.    1.51804 (5) obj. -27.1471 iterations 1
Cbc0038I Pass  65: suminf.    0.67462 (3) obj. -27.1471 iterations 6
Cbc0038I Pass  66: suminf.    0.67462 (3) obj. -27.1471 iterations 0
Cbc0038I Pass  67: suminf.    1.42220 (4) obj. -27.1471 iterations 2
Cbc0038I Pass  68: suminf.    1.16997 (4) obj. -27.1471 iterations 3
Cbc0038I Pass  69: suminf.    0.97439 (4) obj. -27.1471 iterations 3
Cbc0038I Pass  70: suminf.    0.97439 (4) obj. -27.1471 iterations 0
Cbc0038I Pass  71: suminf.    1.17953 (4) obj. -27.1471 iterations 4
Cbc0038I Pass  72: suminf.    2.27066 (7) obj. -27.1471 iterations 5
Cbc0038I Pass  73: suminf.    2.08031 (6) obj. -36.9832 iterations 1
Cbc0038I Pass  74: suminf.    1.08550 (3) obj. -27.1471 iterations 7
Cbc0038I Pass  75: suminf.    1.08550 (3) obj. -27.1471 iterations 1
Cbc0038I Pass  76: suminf.    1.79472 (7) obj. -27.1471 iterations 11
Cbc0038I Pass  77: suminf.    1.79472 (7) obj. -27.1471 iterations 1
Cbc0038I Pass  78: suminf.    2.09866 (7) obj. -27.1471 iterations 7
Cbc0038I Pass  79: suminf.    1.62010 (5) obj. -28.9914 iterations 3
Cbc0038I Pass  80: suminf.    1.19700 (4) obj. -27.1471 iterations 5
Cbc0038I Pass  81: suminf.    1.10217 (4) obj. -27.1471 iterations 1
Cbc0038I Pass  82: suminf.    1.19700 (4) obj. -27.1471 iterations 2
Cbc0038I Pass  83: suminf.    2.57118 (8) obj. -27.1471 iterations 6
Cbc0038I Pass  84: suminf.    2.04057 (6) obj. -27.1471 iterations 2
Cbc0038I Pass  85: suminf.    1.90444 (6) obj. -27.1471 iterations 5
Cbc0038I Pass  86: suminf.    1.90444 (6) obj. -27.1471 iterations 0
Cbc0038I Pass  87: suminf.    1.90522 (5) obj. -27.1471 iterations 5
Cbc0038I Pass  88: suminf.    1.10958 (4) obj. -27.1471 iterations 3
Cbc0038I Pass  89: suminf.    1.10958 (4) obj. -27.1471 iterations 0
Cbc0038I Pass  90: suminf.    1.74136 (5) obj. -27.1471 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -6.21274 - took 0.02 seconds
Cbc0012I Integer solution of -6.2127356 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -31.149436 found by DiveCoefficient after 87 iterations and 0 nodes (0.12 seconds)
Cbc0031I 7 added rows had average density of 9.8571429
Cbc0013I At root node, 7 cuts changed objective from -63.536845 to -31.149436 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 127 row cuts average 4.2 elements, 19 column cuts (19 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 52 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0001I Search completed - best objective -31.1494356, took 87 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.13

