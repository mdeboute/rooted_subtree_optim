Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 31 (-4) columns and 164 (-31) elements
Clp1000I sum of infeasibilities 8.70214e-06 - average 1.58221e-07, 6 fixed columns
Coin0506I Presolve 42 (-13) rows, 24 (-7) columns and 124 (-40) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 131.44034
Clp0000I Optimal - objective value 131.44034
Coin0511I After Postsolve, objective 131.44034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 131.44034
Clp0000I Optimal - objective value 131.44034
Clp0000I Optimal - objective value 131.44034
Coin0511I After Postsolve, objective 131.44034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 131.4403382 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 31 columns (30 integer (30 of which binary)) and 165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.12823
Cbc0038I Pass   1: suminf.    0.28750 (1) obj. -86.8763 iterations 13
Cbc0038I Solution found of -70.0165
Cbc0038I Relaxing continuous gives -70.0165
Cbc0038I Rounding solution of -75.1537 is better than previous of -70.0165

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 31 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -75.1537 to -78.4154 (0.01 seconds)
Cbc0038I Round again with cutoff of -83.718
Cbc0038I Pass   2: suminf.    0.28750 (1) obj. -86.8763 iterations 0
Cbc0038I Pass   3: suminf.    0.23364 (1) obj. -83.718 iterations 1
Cbc0038I Pass   4: suminf.    1.10791 (11) obj. -83.718 iterations 15
Cbc0038I Pass   5: suminf.    1.10011 (10) obj. -83.718 iterations 2
Cbc0038I Pass   6: suminf.    2.09489 (6) obj. -83.718 iterations 15
Cbc0038I Pass   7: suminf.    1.30826 (5) obj. -83.718 iterations 3
Cbc0038I Pass   8: suminf.    1.16476 (5) obj. -83.718 iterations 1
Cbc0038I Pass   9: suminf.    1.24826 (6) obj. -83.718 iterations 7
Cbc0038I Pass  10: suminf.    1.07533 (4) obj. -83.718 iterations 2
Cbc0038I Pass  11: suminf.    0.79839 (3) obj. -83.718 iterations 4
Cbc0038I Pass  12: suminf.    0.79839 (3) obj. -83.718 iterations 1
Cbc0038I Pass  13: suminf.    0.86777 (4) obj. -83.718 iterations 5
Cbc0038I Pass  14: suminf.    0.86777 (4) obj. -83.718 iterations 0
Cbc0038I Pass  15: suminf.    1.12344 (4) obj. -83.718 iterations 6
Cbc0038I Pass  16: suminf.    1.07533 (4) obj. -83.718 iterations 1
Cbc0038I Pass  17: suminf.    0.79839 (3) obj. -83.718 iterations 4
Cbc0038I Pass  18: suminf.    0.79839 (3) obj. -83.718 iterations 1
Cbc0038I Pass  19: suminf.    0.86777 (4) obj. -83.718 iterations 5
Cbc0038I Pass  20: suminf.    0.86777 (4) obj. -83.718 iterations 0
Cbc0038I Pass  21: suminf.    1.12344 (4) obj. -83.718 iterations 6
Cbc0038I Pass  22: suminf.    1.07533 (4) obj. -83.718 iterations 1
Cbc0038I Pass  23: suminf.    0.79839 (3) obj. -83.718 iterations 4
Cbc0038I Pass  24: suminf.    0.79839 (3) obj. -83.718 iterations 1
Cbc0038I Pass  25: suminf.    0.86777 (4) obj. -83.718 iterations 5
Cbc0038I Pass  26: suminf.    0.86777 (4) obj. -83.718 iterations 0
Cbc0038I Pass  27: suminf.    1.12344 (4) obj. -83.718 iterations 6
Cbc0038I Pass  28: suminf.    1.07533 (4) obj. -83.718 iterations 1
Cbc0038I Pass  29: suminf.    0.79839 (3) obj. -83.718 iterations 4
Cbc0038I Pass  30: suminf.    0.79839 (3) obj. -83.718 iterations 1
Cbc0038I Pass  31: suminf.    0.86777 (4) obj. -83.718 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 31 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -78.4154 - took 0.01 seconds
Cbc0012I Integer solution of -78.41538 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 55 rows 31 columns, reduced to 23 rows 15 columns
Cbc0031I 9 added rows had average density of 25.111111
Cbc0013I At root node, 9 cuts changed objective from -131.44034 to -94.563455 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1085 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 602 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -78.41538, took 1615 iterations and 2 nodes (0.13 seconds)
Cbc0032I Strong branching done 24 times (251 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-16) rows, 57 (-9) columns and 538 (-185) elements
Clp1000I sum of infeasibilities 9.06661e-08 - average 1.74358e-09, 13 fixed columns
Coin0506I Presolve 41 (-11) rows, 44 (-13) columns and 338 (-200) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 2.0158321 - largest nonzero change 2.3206878e-05 ( 0.0015420975%) - largest zero change 2.6451604e-05
Clp0000I Optimal - objective value 156.30539
Clp0000I Optimal - objective value 156.30539
Coin0511I After Postsolve, objective 156.30539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 156.30539
Clp0000I Optimal - objective value 156.30539
Clp0000I Optimal - objective value 156.30539
Coin0511I After Postsolve, objective 156.30539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 156.3053883 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 57 columns (57 integer (57 of which binary)) and 546 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.460%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 4.56753
Cbc0038I Pass   1: suminf.    1.06182 (10) obj. -82.7958 iterations 21
Cbc0038I Pass   2: suminf.    1.06182 (10) obj. -82.7958 iterations 1
Cbc0038I Solution found of -44.0351
Cbc0038I Rounding solution of -67.1772 is better than previous of -44.0351

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 57 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -74.3849
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.06182 (10) obj. -82.7958 iterations 0
Cbc0038I Pass   4: suminf.    1.06182 (10) obj. -82.7958 iterations 1
Cbc0038I Pass   5: suminf.    1.00298 (13) obj. -74.3849 iterations 24
Cbc0038I Pass   6: suminf.    0.50412 (2) obj. -74.3849 iterations 19
Cbc0038I Pass   7: suminf.    0.43393 (2) obj. -74.3849 iterations 4
Cbc0038I Pass   8: suminf.    1.00113 (6) obj. -74.3849 iterations 7
Cbc0038I Pass   9: suminf.    0.81644 (5) obj. -74.3849 iterations 3
Cbc0038I Pass  10: suminf.    0.46900 (2) obj. -74.3849 iterations 8
Cbc0038I Pass  11: suminf.    0.40772 (2) obj. -74.3849 iterations 4
Cbc0038I Pass  12: suminf.    2.10001 (11) obj. -74.3849 iterations 8
Cbc0038I Pass  13: suminf.    1.25070 (7) obj. -74.3849 iterations 5
Cbc0038I Pass  14: suminf.    1.25070 (7) obj. -74.3849 iterations 0
Cbc0038I Pass  15: suminf.    2.09598 (9) obj. -74.3849 iterations 10
Cbc0038I Pass  16: suminf.    1.24597 (5) obj. -74.3849 iterations 2
Cbc0038I Pass  17: suminf.    0.75878 (3) obj. -74.3849 iterations 6
Cbc0038I Pass  18: suminf.    0.41852 (2) obj. -74.9906 iterations 5
Cbc0038I Pass  19: suminf.    0.40772 (2) obj. -74.3849 iterations 1
Cbc0038I Pass  20: suminf.    0.46900 (2) obj. -74.3849 iterations 5
Cbc0038I Pass  21: suminf.    1.20147 (6) obj. -74.3849 iterations 14
Cbc0038I Pass  22: suminf.    1.20147 (6) obj. -74.3849 iterations 3
Cbc0038I Pass  23: suminf.    0.61586 (3) obj. -74.3849 iterations 10
Cbc0038I Pass  24: suminf.    0.43393 (2) obj. -74.3849 iterations 3
Cbc0038I Pass  25: suminf.    0.50412 (2) obj. -74.3849 iterations 6
Cbc0038I Pass  26: suminf.    1.24677 (12) obj. -74.3849 iterations 19
Cbc0038I Pass  27: suminf.    1.17905 (13) obj. -74.3849 iterations 3
Cbc0038I Pass  28: suminf.    1.08995 (7) obj. -74.3849 iterations 18
Cbc0038I Pass  29: suminf.    1.08995 (7) obj. -74.3849 iterations 1
Cbc0038I Pass  30: suminf.    1.02520 (6) obj. -74.3849 iterations 8
Cbc0038I Pass  31: suminf.    0.70072 (6) obj. -74.3849 iterations 4
Cbc0038I Pass  32: suminf.    1.64966 (12) obj. -74.3849 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 57 columns, reduced to 36 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -44.0351 to -78.4154 (0.05 seconds)
Cbc0038I Round again with cutoff of -90.5829
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.21142 (11) obj. -90.5829 iterations 6
Cbc0038I Pass  33: suminf.    1.21142 (11) obj. -90.5829 iterations 1
Cbc0038I Pass  34: suminf.    1.15397 (15) obj. -90.5829 iterations 18
Cbc0038I Pass  35: suminf.    0.88391 (3) obj. -90.5829 iterations 6
Cbc0038I Pass  36: suminf.    0.95949 (3) obj. -90.5829 iterations 4
Cbc0038I Pass  37: suminf.    0.95949 (3) obj. -90.5829 iterations 1
Cbc0038I Pass  38: suminf.    0.88391 (3) obj. -90.5829 iterations 4
Cbc0038I Pass  39: suminf.    2.30458 (18) obj. -90.5829 iterations 6
Cbc0038I Pass  40: suminf.    0.96685 (6) obj. -90.5829 iterations 6
Cbc0038I Pass  41: suminf.    0.87554 (6) obj. -90.5829 iterations 2
Cbc0038I Pass  42: suminf.    0.86392 (4) obj. -90.5829 iterations 7
Cbc0038I Pass  43: suminf.    0.86392 (4) obj. -90.5829 iterations 0
Cbc0038I Pass  44: suminf.    1.00891 (4) obj. -90.5829 iterations 4
Cbc0038I Pass  45: suminf.    1.00891 (4) obj. -90.5829 iterations 1
Cbc0038I Pass  46: suminf.    0.86392 (4) obj. -90.5829 iterations 3
Cbc0038I Pass  47: suminf.    1.76861 (19) obj. -90.5829 iterations 7
Cbc0038I Pass  48: suminf.    1.67320 (18) obj. -90.5829 iterations 1
Cbc0038I Pass  49: suminf.    2.64645 (13) obj. -90.5829 iterations 13
Cbc0038I Pass  50: suminf.    2.16088 (13) obj. -90.5829 iterations 2
Cbc0038I Pass  51: suminf.    1.28712 (10) obj. -90.5829 iterations 12
Cbc0038I Pass  52: suminf.    1.28712 (10) obj. -90.5829 iterations 1
Cbc0038I Pass  53: suminf.    1.14601 (8) obj. -90.5829 iterations 7
Cbc0038I Pass  54: suminf.    0.91627 (5) obj. -90.5829 iterations 4
Cbc0038I Pass  55: suminf.    0.93587 (9) obj. -90.5829 iterations 6
Cbc0038I Pass  56: suminf.    0.93533 (9) obj. -90.5829 iterations 1
Cbc0038I Pass  57: suminf.    2.03659 (9) obj. -90.5829 iterations 5
Cbc0038I Pass  58: suminf.    0.88838 (4) obj. -90.7632 iterations 7
Cbc0038I Pass  59: suminf.    1.02584 (8) obj. -90.5829 iterations 10
Cbc0038I Pass  60: suminf.    1.02584 (8) obj. -90.5829 iterations 0
Cbc0038I Pass  61: suminf.    1.32617 (8) obj. -90.5829 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 57 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -78.4154 - took 0.05 seconds
Cbc0012I Integer solution of -78.41538 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 52 rows 57 columns, reduced to 15 rows 18 columns
Cbc0031I 16 added rows had average density of 9.875
Cbc0013I At root node, 16 cuts changed objective from -139.25274 to -80.649158 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1585 row cuts average 3.8 elements, 13 column cuts (13 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 407 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 243 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.735 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -78.41538 best solution, best possible -80.649158 (1.54 seconds)
Cbc0001I Search completed - best objective -78.41538, took 1418 iterations and 4 nodes (1.76 seconds)
Cbc0032I Strong branching done 58 times (592 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 17 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.77

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 31 (-4) columns and 164 (-31) elements
Clp1000I sum of infeasibilities 8.70214e-06 - average 1.58221e-07, 6 fixed columns
Coin0506I Presolve 42 (-13) rows, 24 (-7) columns and 124 (-40) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 131.44034
Clp0000I Optimal - objective value 131.44034
Coin0511I After Postsolve, objective 131.44034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 131.44034
Clp0000I Optimal - objective value 131.44034
Clp0000I Optimal - objective value 131.44034
Coin0511I After Postsolve, objective 131.44034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 131.4403382 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 31 columns (30 integer (30 of which binary)) and 165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.12823
Cbc0038I Pass   1: suminf.    0.28750 (1) obj. -86.8763 iterations 13
Cbc0038I Solution found of -70.0165
Cbc0038I Relaxing continuous gives -70.0165
Cbc0038I Rounding solution of -75.1537 is better than previous of -70.0165

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 31 columns, reduced to 23 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -75.1537 to -78.4154 (0.02 seconds)
Cbc0038I Round again with cutoff of -83.718
Cbc0038I Pass   2: suminf.    0.28750 (1) obj. -86.8763 iterations 0
Cbc0038I Pass   3: suminf.    0.23364 (1) obj. -83.718 iterations 1
Cbc0038I Pass   4: suminf.    1.10791 (11) obj. -83.718 iterations 15
Cbc0038I Pass   5: suminf.    1.10011 (10) obj. -83.718 iterations 2
Cbc0038I Pass   6: suminf.    2.09489 (6) obj. -83.718 iterations 15
Cbc0038I Pass   7: suminf.    1.30826 (5) obj. -83.718 iterations 3
Cbc0038I Pass   8: suminf.    1.16476 (5) obj. -83.718 iterations 1
Cbc0038I Pass   9: suminf.    1.24826 (6) obj. -83.718 iterations 7
Cbc0038I Pass  10: suminf.    1.07533 (4) obj. -83.718 iterations 2
Cbc0038I Pass  11: suminf.    0.79839 (3) obj. -83.718 iterations 4
Cbc0038I Pass  12: suminf.    0.79839 (3) obj. -83.718 iterations 1
Cbc0038I Pass  13: suminf.    0.86777 (4) obj. -83.718 iterations 5
Cbc0038I Pass  14: suminf.    0.86777 (4) obj. -83.718 iterations 0
Cbc0038I Pass  15: suminf.    1.12344 (4) obj. -83.718 iterations 6
Cbc0038I Pass  16: suminf.    1.07533 (4) obj. -83.718 iterations 1
Cbc0038I Pass  17: suminf.    0.79839 (3) obj. -83.718 iterations 4
Cbc0038I Pass  18: suminf.    0.79839 (3) obj. -83.718 iterations 1
Cbc0038I Pass  19: suminf.    0.86777 (4) obj. -83.718 iterations 5
Cbc0038I Pass  20: suminf.    0.86777 (4) obj. -83.718 iterations 0
Cbc0038I Pass  21: suminf.    1.12344 (4) obj. -83.718 iterations 6
Cbc0038I Pass  22: suminf.    1.07533 (4) obj. -83.718 iterations 1
Cbc0038I Pass  23: suminf.    0.79839 (3) obj. -83.718 iterations 4
Cbc0038I Pass  24: suminf.    0.79839 (3) obj. -83.718 iterations 1
Cbc0038I Pass  25: suminf.    0.86777 (4) obj. -83.718 iterations 5
Cbc0038I Pass  26: suminf.    0.86777 (4) obj. -83.718 iterations 0
Cbc0038I Pass  27: suminf.    1.12344 (4) obj. -83.718 iterations 6
Cbc0038I Pass  28: suminf.    1.07533 (4) obj. -83.718 iterations 1
Cbc0038I Pass  29: suminf.    0.79839 (3) obj. -83.718 iterations 4
Cbc0038I Pass  30: suminf.    0.79839 (3) obj. -83.718 iterations 1
Cbc0038I Pass  31: suminf.    0.86777 (4) obj. -83.718 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 31 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -78.4154 - took 0.02 seconds
Cbc0012I Integer solution of -78.41538 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 31 columns, reduced to 23 rows 15 columns
Cbc0031I 9 added rows had average density of 25.111111
Cbc0013I At root node, 9 cuts changed objective from -131.44034 to -94.563455 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1085 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 602 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 29 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -78.41538, took 1615 iterations and 2 nodes (0.15 seconds)
Cbc0032I Strong branching done 24 times (251 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 57 (-10) columns and 538 (-186) elements
Clp1000I sum of infeasibilities 9.06661e-08 - average 1.74358e-09, 13 fixed columns
Coin0506I Presolve 41 (-11) rows, 44 (-13) columns and 338 (-200) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 2.0158321 - largest nonzero change 2.3206878e-05 ( 0.0015420975%) - largest zero change 2.6451604e-05
Clp0000I Optimal - objective value 156.30539
Clp0000I Optimal - objective value 156.30539
Coin0511I After Postsolve, objective 156.30539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 156.30539
Clp0000I Optimal - objective value 156.30539
Clp0000I Optimal - objective value 156.30539
Coin0511I After Postsolve, objective 156.30539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 156.3053883 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 57 columns (57 integer (57 of which binary)) and 546 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.460%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 4.56753
Cbc0038I Pass   1: suminf.    1.06182 (10) obj. -82.7958 iterations 21
Cbc0038I Pass   2: suminf.    1.06182 (10) obj. -82.7958 iterations 1
Cbc0038I Solution found of -44.0351
Cbc0038I Rounding solution of -67.1772 is better than previous of -44.0351

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 57 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -74.3849
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.06182 (10) obj. -82.7958 iterations 0
Cbc0038I Pass   4: suminf.    1.06182 (10) obj. -82.7958 iterations 1
Cbc0038I Pass   5: suminf.    1.00298 (13) obj. -74.3849 iterations 24
Cbc0038I Pass   6: suminf.    0.50412 (2) obj. -74.3849 iterations 19
Cbc0038I Pass   7: suminf.    0.43393 (2) obj. -74.3849 iterations 4
Cbc0038I Pass   8: suminf.    1.00113 (6) obj. -74.3849 iterations 7
Cbc0038I Pass   9: suminf.    0.81644 (5) obj. -74.3849 iterations 3
Cbc0038I Pass  10: suminf.    0.46900 (2) obj. -74.3849 iterations 8
Cbc0038I Pass  11: suminf.    0.40772 (2) obj. -74.3849 iterations 4
Cbc0038I Pass  12: suminf.    2.10001 (11) obj. -74.3849 iterations 8
Cbc0038I Pass  13: suminf.    1.25070 (7) obj. -74.3849 iterations 5
Cbc0038I Pass  14: suminf.    1.25070 (7) obj. -74.3849 iterations 0
Cbc0038I Pass  15: suminf.    2.09598 (9) obj. -74.3849 iterations 10
Cbc0038I Pass  16: suminf.    1.24597 (5) obj. -74.3849 iterations 2
Cbc0038I Pass  17: suminf.    0.75878 (3) obj. -74.3849 iterations 6
Cbc0038I Pass  18: suminf.    0.41852 (2) obj. -74.9906 iterations 5
Cbc0038I Pass  19: suminf.    0.40772 (2) obj. -74.3849 iterations 1
Cbc0038I Pass  20: suminf.    0.46900 (2) obj. -74.3849 iterations 5
Cbc0038I Pass  21: suminf.    1.20147 (6) obj. -74.3849 iterations 14
Cbc0038I Pass  22: suminf.    1.20147 (6) obj. -74.3849 iterations 3
Cbc0038I Pass  23: suminf.    0.61586 (3) obj. -74.3849 iterations 10
Cbc0038I Pass  24: suminf.    0.43393 (2) obj. -74.3849 iterations 3
Cbc0038I Pass  25: suminf.    0.50412 (2) obj. -74.3849 iterations 6
Cbc0038I Pass  26: suminf.    1.24677 (12) obj. -74.3849 iterations 19
Cbc0038I Pass  27: suminf.    1.17905 (13) obj. -74.3849 iterations 3
Cbc0038I Pass  28: suminf.    1.08995 (7) obj. -74.3849 iterations 18
Cbc0038I Pass  29: suminf.    1.08995 (7) obj. -74.3849 iterations 1
Cbc0038I Pass  30: suminf.    1.02520 (6) obj. -74.3849 iterations 8
Cbc0038I Pass  31: suminf.    0.70072 (6) obj. -74.3849 iterations 4
Cbc0038I Pass  32: suminf.    1.64966 (12) obj. -74.3849 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 57 columns, reduced to 36 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -44.0351 to -78.4154 (0.05 seconds)
Cbc0038I Round again with cutoff of -90.5829
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.21142 (11) obj. -90.5829 iterations 6
Cbc0038I Pass  33: suminf.    1.21142 (11) obj. -90.5829 iterations 1
Cbc0038I Pass  34: suminf.    1.15397 (15) obj. -90.5829 iterations 18
Cbc0038I Pass  35: suminf.    0.88391 (3) obj. -90.5829 iterations 6
Cbc0038I Pass  36: suminf.    0.95949 (3) obj. -90.5829 iterations 4
Cbc0038I Pass  37: suminf.    0.95949 (3) obj. -90.5829 iterations 1
Cbc0038I Pass  38: suminf.    0.88391 (3) obj. -90.5829 iterations 4
Cbc0038I Pass  39: suminf.    2.30458 (18) obj. -90.5829 iterations 6
Cbc0038I Pass  40: suminf.    0.96685 (6) obj. -90.5829 iterations 6
Cbc0038I Pass  41: suminf.    0.87554 (6) obj. -90.5829 iterations 2
Cbc0038I Pass  42: suminf.    0.86392 (4) obj. -90.5829 iterations 7
Cbc0038I Pass  43: suminf.    0.86392 (4) obj. -90.5829 iterations 0
Cbc0038I Pass  44: suminf.    1.00891 (4) obj. -90.5829 iterations 4
Cbc0038I Pass  45: suminf.    1.00891 (4) obj. -90.5829 iterations 1
Cbc0038I Pass  46: suminf.    0.86392 (4) obj. -90.5829 iterations 3
Cbc0038I Pass  47: suminf.    1.76861 (19) obj. -90.5829 iterations 7
Cbc0038I Pass  48: suminf.    1.67320 (18) obj. -90.5829 iterations 1
Cbc0038I Pass  49: suminf.    2.64645 (13) obj. -90.5829 iterations 13
Cbc0038I Pass  50: suminf.    2.16088 (13) obj. -90.5829 iterations 2
Cbc0038I Pass  51: suminf.    1.28712 (10) obj. -90.5829 iterations 12
Cbc0038I Pass  52: suminf.    1.28712 (10) obj. -90.5829 iterations 1
Cbc0038I Pass  53: suminf.    1.14601 (8) obj. -90.5829 iterations 7
Cbc0038I Pass  54: suminf.    0.91627 (5) obj. -90.5829 iterations 4
Cbc0038I Pass  55: suminf.    0.93587 (9) obj. -90.5829 iterations 6
Cbc0038I Pass  56: suminf.    0.93533 (9) obj. -90.5829 iterations 1
Cbc0038I Pass  57: suminf.    2.03659 (9) obj. -90.5829 iterations 5
Cbc0038I Pass  58: suminf.    0.88838 (4) obj. -90.7632 iterations 7
Cbc0038I Pass  59: suminf.    1.02584 (8) obj. -90.5829 iterations 10
Cbc0038I Pass  60: suminf.    1.02584 (8) obj. -90.5829 iterations 0
Cbc0038I Pass  61: suminf.    1.32617 (8) obj. -90.5829 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 57 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -78.4154 - took 0.04 seconds
Cbc0012I Integer solution of -78.41538 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 52 rows 57 columns, reduced to 15 rows 18 columns
Cbc0031I 16 added rows had average density of 9.875
Cbc0013I At root node, 16 cuts changed objective from -139.25274 to -80.649158 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1585 row cuts average 3.8 elements, 13 column cuts (13 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 407 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 243 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.876 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -78.41538 best solution, best possible -80.649158 (1.82 seconds)
Cbc0001I Search completed - best objective -78.41538, took 1418 iterations and 4 nodes (2.03 seconds)
Cbc0032I Strong branching done 58 times (592 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 17 variables fixed on reduced cost
Total time (CPU seconds):       1.28   (Wallclock seconds):       2.03

