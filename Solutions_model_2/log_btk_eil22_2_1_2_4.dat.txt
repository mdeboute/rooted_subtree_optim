Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 0.0011762 - average 3.36058e-05, 0 fixed columns
Coin0506I Presolve 35 (0) rows, 22 (0) columns and 107 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 59.83327
Clp0000I Optimal - objective value 59.83327
Coin0511I After Postsolve, objective 59.83327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.83327
Clp0000I Optimal - objective value 59.83327
Clp0000I Optimal - objective value 59.83327
Coin0511I After Postsolve, objective 59.83327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.83327033 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.5796
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.3062 iterations 17
Cbc0038I Solution found of -6.3062
Cbc0038I Relaxing continuous gives -6.3062
Cbc0038I Rounding solution of -19.8437 is better than previous of -6.3062

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 19 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -19.8437 to -21.5499 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.2063
Cbc0038I Pass   2: suminf.    1.23077 (4) obj. -25.2063 iterations 5
Cbc0038I Pass   3: suminf.    0.41837 (1) obj. -25.2063 iterations 3
Cbc0038I Pass   4: suminf.    0.47422 (1) obj. -25.2063 iterations 1
Cbc0038I Pass   5: suminf.    1.22469 (5) obj. -25.2063 iterations 7
Cbc0038I Pass   6: suminf.    0.81258 (4) obj. -25.2063 iterations 2
Cbc0038I Pass   7: suminf.    0.79720 (3) obj. -25.2063 iterations 5
Cbc0038I Pass   8: suminf.    1.03253 (3) obj. -25.2063 iterations 6
Cbc0038I Pass   9: suminf.    0.51926 (3) obj. -25.2063 iterations 2
Cbc0038I Pass  10: suminf.    1.41892 (4) obj. -25.2063 iterations 7
Cbc0038I Pass  11: suminf.    0.58509 (5) obj. -25.2063 iterations 3
Cbc0038I Pass  12: suminf.    0.82332 (3) obj. -25.2063 iterations 7
Cbc0038I Pass  13: suminf.    0.81229 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  14: suminf.    0.72684 (3) obj. -25.2063 iterations 5
Cbc0038I Pass  15: suminf.    1.46429 (4) obj. -25.2063 iterations 3
Cbc0038I Pass  16: suminf.    0.67006 (2) obj. -25.2063 iterations 3
Cbc0038I Pass  17: suminf.    0.85041 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  18: suminf.    0.67006 (2) obj. -25.2063 iterations 2
Cbc0038I Pass  19: suminf.    1.16599 (4) obj. -25.2063 iterations 4
Cbc0038I Pass  20: suminf.    1.03509 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  21: suminf.    0.69397 (2) obj. -25.2063 iterations 3
Cbc0038I Pass  22: suminf.    0.67006 (2) obj. -25.2063 iterations 3
Cbc0038I Pass  23: suminf.    0.85041 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  24: suminf.    0.67006 (2) obj. -25.2063 iterations 2
Cbc0038I Pass  25: suminf.    2.28761 (6) obj. -25.2063 iterations 8
Cbc0038I Pass  26: suminf.    1.10384 (5) obj. -25.2063 iterations 3
Cbc0038I Pass  27: suminf.    0.84794 (3) obj. -25.2063 iterations 8
Cbc0038I Pass  28: suminf.    0.77719 (3) obj. -25.2063 iterations 2
Cbc0038I Pass  29: suminf.    1.00000 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  30: suminf.    0.64892 (3) obj. -25.2063 iterations 1
Cbc0038I Pass  31: suminf.    1.00000 (3) obj. -25.2063 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -21.5499 - took 0.03 seconds
Cbc0012I Integer solution of -21.54985 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 19 rows 14 columns
Cbc0031I 12 added rows had average density of 12.083333
Cbc0013I At root node, 12 cuts changed objective from -58.113609 to -41.318397 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1344 row cuts average 3.8 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 634 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -21.54985000000001, took 2225 iterations and 10 nodes (0.18 seconds)
Cbc0032I Strong branching done 106 times (919 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-15) rows, 38 (-6) columns and 250 (-110) elements
Clp1000I sum of infeasibilities 2.52485e-05 - average 8.14469e-07, 24 fixed columns
Coin0506I Presolve 10 (-21) rows, 14 (-24) columns and 43 (-207) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 0.55064912
Clp0000I Optimal - objective value 0.55064912
Coin0511I After Postsolve, objective 0.55064912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4597069 - largest nonzero change 1.0888962e-05 ( 0.00074937506%) - largest zero change 2.0533546e-05
Clp0000I Optimal - objective value 68.323469
Clp0000I Optimal - objective value 68.323469
Clp0000I Optimal - objective value 68.323469
Coin0511I After Postsolve, objective 68.323469, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.32346883 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 38 columns (38 integer (38 of which binary)) and 251 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.621%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.72406
Cbc0038I Pass   1: suminf.    1.62861 (9) obj. -42.0464 iterations 4
Cbc0038I Solution found of -18.3061
Cbc0038I Rounding solution of -21.5499 is better than previous of -18.3061

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24.5948
Cbc0038I Pass   2: suminf.    1.62861 (9) obj. -42.0464 iterations 0
Cbc0038I Pass   3: suminf.    0.75705 (7) obj. -24.5948 iterations 16
Cbc0038I Pass   4: suminf.    1.27794 (5) obj. -24.5948 iterations 9
Cbc0038I Pass   5: suminf.    1.06609 (5) obj. -24.5948 iterations 3
Cbc0038I Pass   6: suminf.    1.23253 (5) obj. -24.5948 iterations 8
Cbc0038I Pass   7: suminf.    1.14875 (5) obj. -24.5948 iterations 5
Cbc0038I Pass   8: suminf.    1.20580 (5) obj. -24.5948 iterations 7
Cbc0038I Pass   9: suminf.    1.20580 (5) obj. -24.5948 iterations 0
Cbc0038I Pass  10: suminf.    1.95532 (6) obj. -24.5948 iterations 6
Cbc0038I Pass  11: suminf.    1.09325 (4) obj. -24.5948 iterations 3
Cbc0038I Pass  12: suminf.    1.09325 (4) obj. -24.5948 iterations 1
Cbc0038I Pass  13: suminf.    1.93766 (6) obj. -24.5948 iterations 6
Cbc0038I Pass  14: suminf.    2.14956 (6) obj. -24.5948 iterations 7
Cbc0038I Pass  15: suminf.    2.14956 (6) obj. -24.5948 iterations 1
Cbc0038I Pass  16: suminf.    2.05286 (6) obj. -24.5948 iterations 6
Cbc0038I Pass  17: suminf.    2.05286 (6) obj. -24.5948 iterations 1
Cbc0038I Pass  18: suminf.    2.14956 (6) obj. -24.5948 iterations 4
Cbc0038I Pass  19: suminf.    1.80051 (7) obj. -24.5948 iterations 6
Cbc0038I Pass  20: suminf.    1.26906 (6) obj. -24.5948 iterations 1
Cbc0038I Pass  21: suminf.    1.26906 (6) obj. -24.5948 iterations 0
Cbc0038I Pass  22: suminf.    1.43521 (5) obj. -24.5948 iterations 8
Cbc0038I Pass  23: suminf.    1.28943 (7) obj. -24.5948 iterations 4
Cbc0038I Pass  24: suminf.    0.73102 (4) obj. -24.5948 iterations 9
Cbc0038I Pass  25: suminf.    0.73102 (4) obj. -24.5948 iterations 1
Cbc0038I Pass  26: suminf.    1.17978 (4) obj. -24.5948 iterations 4
Cbc0038I Pass  27: suminf.    1.17978 (4) obj. -24.5948 iterations 0
Cbc0038I Pass  28: suminf.    1.37366 (5) obj. -24.5948 iterations 5
Cbc0038I Pass  29: suminf.    1.56965 (5) obj. -24.5948 iterations 7
Cbc0038I Pass  30: suminf.    1.56965 (5) obj. -24.5948 iterations 1
Cbc0038I Pass  31: suminf.    1.24717 (5) obj. -24.5948 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -21.5499 - took 0.01 seconds
Cbc0012I Integer solution of -21.54985 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 29 rows 38 columns, reduced to 9 rows 10 columns
Cbc0031I 15 added rows had average density of 15.666667
Cbc0013I At root node, 15 cuts changed objective from -51.998252 to -26.707521 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1108 row cuts average 2.0 elements, 7 column cuts (7 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 356 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 68 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 249 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 286 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.809 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.54985 best solution, best possible -26.707511 (1.57 seconds)
Cbc0001I Search completed - best objective -21.54985000000001, took 1727 iterations and 4 nodes (1.89 seconds)
Cbc0032I Strong branching done 52 times (498 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.89

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 0.0011762 - average 3.36058e-05, 0 fixed columns
Coin0506I Presolve 35 (0) rows, 22 (0) columns and 107 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 59.83327
Clp0000I Optimal - objective value 59.83327
Coin0511I After Postsolve, objective 59.83327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.83327
Clp0000I Optimal - objective value 59.83327
Clp0000I Optimal - objective value 59.83327
Coin0511I After Postsolve, objective 59.83327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.83327033 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.838%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.5796
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.3062 iterations 17
Cbc0038I Solution found of -6.3062
Cbc0038I Relaxing continuous gives -6.3062
Cbc0038I Rounding solution of -19.8437 is better than previous of -6.3062

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 19 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -19.8437 to -21.5499 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.2063
Cbc0038I Pass   2: suminf.    1.23077 (4) obj. -25.2063 iterations 5
Cbc0038I Pass   3: suminf.    0.41837 (1) obj. -25.2063 iterations 3
Cbc0038I Pass   4: suminf.    0.47422 (1) obj. -25.2063 iterations 1
Cbc0038I Pass   5: suminf.    1.22469 (5) obj. -25.2063 iterations 7
Cbc0038I Pass   6: suminf.    0.81258 (4) obj. -25.2063 iterations 2
Cbc0038I Pass   7: suminf.    0.79720 (3) obj. -25.2063 iterations 5
Cbc0038I Pass   8: suminf.    1.03253 (3) obj. -25.2063 iterations 6
Cbc0038I Pass   9: suminf.    0.51926 (3) obj. -25.2063 iterations 2
Cbc0038I Pass  10: suminf.    1.41892 (4) obj. -25.2063 iterations 7
Cbc0038I Pass  11: suminf.    0.58509 (5) obj. -25.2063 iterations 3
Cbc0038I Pass  12: suminf.    0.82332 (3) obj. -25.2063 iterations 7
Cbc0038I Pass  13: suminf.    0.81229 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  14: suminf.    0.72684 (3) obj. -25.2063 iterations 5
Cbc0038I Pass  15: suminf.    1.46429 (4) obj. -25.2063 iterations 3
Cbc0038I Pass  16: suminf.    0.67006 (2) obj. -25.2063 iterations 3
Cbc0038I Pass  17: suminf.    0.85041 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  18: suminf.    0.67006 (2) obj. -25.2063 iterations 2
Cbc0038I Pass  19: suminf.    1.16599 (4) obj. -25.2063 iterations 4
Cbc0038I Pass  20: suminf.    1.03509 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  21: suminf.    0.69397 (2) obj. -25.2063 iterations 3
Cbc0038I Pass  22: suminf.    0.67006 (2) obj. -25.2063 iterations 3
Cbc0038I Pass  23: suminf.    0.85041 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  24: suminf.    0.67006 (2) obj. -25.2063 iterations 2
Cbc0038I Pass  25: suminf.    2.28761 (6) obj. -25.2063 iterations 8
Cbc0038I Pass  26: suminf.    1.10384 (5) obj. -25.2063 iterations 3
Cbc0038I Pass  27: suminf.    0.84794 (3) obj. -25.2063 iterations 8
Cbc0038I Pass  28: suminf.    0.77719 (3) obj. -25.2063 iterations 2
Cbc0038I Pass  29: suminf.    1.00000 (3) obj. -25.2063 iterations 3
Cbc0038I Pass  30: suminf.    0.64892 (3) obj. -25.2063 iterations 1
Cbc0038I Pass  31: suminf.    1.00000 (3) obj. -25.2063 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -21.5499 - took 0.05 seconds
Cbc0012I Integer solution of -21.54985 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 19 rows 14 columns
Cbc0031I 12 added rows had average density of 12.083333
Cbc0013I At root node, 12 cuts changed objective from -58.113609 to -41.318397 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1344 row cuts average 3.8 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 634 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -21.54985000000001, took 2225 iterations and 10 nodes (0.18 seconds)
Cbc0032I Strong branching done 106 times (919 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 38 (-7) columns and 250 (-111) elements
Clp1000I sum of infeasibilities 2.52485e-05 - average 8.14469e-07, 24 fixed columns
Coin0506I Presolve 10 (-21) rows, 14 (-24) columns and 43 (-207) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 0.55064912
Clp0000I Optimal - objective value 0.55064912
Coin0511I After Postsolve, objective 0.55064912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4597069 - largest nonzero change 1.0888962e-05 ( 0.00074937506%) - largest zero change 2.0533546e-05
Clp0000I Optimal - objective value 68.323469
Clp0000I Optimal - objective value 68.323469
Clp0000I Optimal - objective value 68.323469
Coin0511I After Postsolve, objective 68.323469, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.32346883 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 38 columns (38 integer (38 of which binary)) and 251 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.621%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.72406
Cbc0038I Pass   1: suminf.    1.62861 (9) obj. -42.0464 iterations 4
Cbc0038I Solution found of -18.3061
Cbc0038I Rounding solution of -21.5499 is better than previous of -18.3061

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24.5948
Cbc0038I Pass   2: suminf.    1.62861 (9) obj. -42.0464 iterations 0
Cbc0038I Pass   3: suminf.    0.75705 (7) obj. -24.5948 iterations 16
Cbc0038I Pass   4: suminf.    1.27794 (5) obj. -24.5948 iterations 9
Cbc0038I Pass   5: suminf.    1.06609 (5) obj. -24.5948 iterations 3
Cbc0038I Pass   6: suminf.    1.23253 (5) obj. -24.5948 iterations 8
Cbc0038I Pass   7: suminf.    1.14875 (5) obj. -24.5948 iterations 5
Cbc0038I Pass   8: suminf.    1.20580 (5) obj. -24.5948 iterations 7
Cbc0038I Pass   9: suminf.    1.20580 (5) obj. -24.5948 iterations 0
Cbc0038I Pass  10: suminf.    1.95532 (6) obj. -24.5948 iterations 6
Cbc0038I Pass  11: suminf.    1.09325 (4) obj. -24.5948 iterations 3
Cbc0038I Pass  12: suminf.    1.09325 (4) obj. -24.5948 iterations 1
Cbc0038I Pass  13: suminf.    1.93766 (6) obj. -24.5948 iterations 6
Cbc0038I Pass  14: suminf.    2.14956 (6) obj. -24.5948 iterations 7
Cbc0038I Pass  15: suminf.    2.14956 (6) obj. -24.5948 iterations 1
Cbc0038I Pass  16: suminf.    2.05286 (6) obj. -24.5948 iterations 6
Cbc0038I Pass  17: suminf.    2.05286 (6) obj. -24.5948 iterations 1
Cbc0038I Pass  18: suminf.    2.14956 (6) obj. -24.5948 iterations 4
Cbc0038I Pass  19: suminf.    1.80051 (7) obj. -24.5948 iterations 6
Cbc0038I Pass  20: suminf.    1.26906 (6) obj. -24.5948 iterations 1
Cbc0038I Pass  21: suminf.    1.26906 (6) obj. -24.5948 iterations 0
Cbc0038I Pass  22: suminf.    1.43521 (5) obj. -24.5948 iterations 8
Cbc0038I Pass  23: suminf.    1.28943 (7) obj. -24.5948 iterations 4
Cbc0038I Pass  24: suminf.    0.73102 (4) obj. -24.5948 iterations 9
Cbc0038I Pass  25: suminf.    0.73102 (4) obj. -24.5948 iterations 1
Cbc0038I Pass  26: suminf.    1.17978 (4) obj. -24.5948 iterations 4
Cbc0038I Pass  27: suminf.    1.17978 (4) obj. -24.5948 iterations 0
Cbc0038I Pass  28: suminf.    1.37366 (5) obj. -24.5948 iterations 5
Cbc0038I Pass  29: suminf.    1.56965 (5) obj. -24.5948 iterations 7
Cbc0038I Pass  30: suminf.    1.56965 (5) obj. -24.5948 iterations 1
Cbc0038I Pass  31: suminf.    1.24717 (5) obj. -24.5948 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 38 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -21.5499 - took 0.01 seconds
Cbc0012I Integer solution of -21.54985 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 38 columns, reduced to 9 rows 10 columns
Cbc0031I 15 added rows had average density of 15.666667
Cbc0013I At root node, 15 cuts changed objective from -51.998252 to -26.707521 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1108 row cuts average 2.0 elements, 7 column cuts (7 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 356 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 68 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 249 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 286 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 73 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.766 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.54985 best solution, best possible -26.707511 (1.51 seconds)
Cbc0001I Search completed - best objective -21.54985000000001, took 1727 iterations and 4 nodes (1.84 seconds)
Cbc0032I Strong branching done 52 times (498 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.84

