Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 41 (-28) rows, 22 (-13) columns and 119 (-76) elements
Clp0000I Optimal - objective value 114.62643
Coin0511I After Postsolve, objective 114.62643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.6264315 - 23 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 41 rows, 22 columns (21 integer (21 of which binary)) and 119 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.72462
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 77 iterations 16
Cbc0038I Solution found of 77
Cbc0038I Relaxing continuous gives 77
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 22 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 77 to -55 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.8626
Cbc0038I Pass   2: suminf.    1.95913 (6) obj. -61.8626 iterations 12
Cbc0038I Pass   3: suminf.    0.17889 (2) obj. -61.8626 iterations 10
Cbc0038I Pass   4: suminf.    0.60594 (2) obj. -61.8626 iterations 3
Cbc0038I Pass   5: suminf.    0.33894 (2) obj. -61.8626 iterations 1
Cbc0038I Pass   6: suminf.    0.19060 (2) obj. -61.8626 iterations 4
Cbc0038I Pass   7: suminf.    1.63760 (4) obj. -61.8626 iterations 5
Cbc0038I Pass   8: suminf.    0.80272 (6) obj. -61.8626 iterations 4
Cbc0038I Pass   9: suminf.    1.13997 (4) obj. -61.8626 iterations 9
Cbc0038I Pass  10: suminf.    0.63128 (2) obj. -61.8626 iterations 2
Cbc0038I Pass  11: suminf.    0.46185 (4) obj. -61.8626 iterations 6
Cbc0038I Pass  12: suminf.    0.62261 (5) obj. -61.8626 iterations 4
Cbc0038I Pass  13: suminf.    0.46185 (4) obj. -61.8626 iterations 4
Cbc0038I Pass  14: suminf.    0.46185 (4) obj. -61.8626 iterations 0
Cbc0038I Pass  15: suminf.    1.79503 (9) obj. -61.8626 iterations 9
Cbc0038I Pass  16: suminf.    1.67343 (8) obj. -61.8626 iterations 2
Cbc0038I Pass  17: suminf.    0.63128 (2) obj. -61.8626 iterations 13
Cbc0038I Pass  18: suminf.    0.63128 (2) obj. -61.8626 iterations 0
Cbc0038I Pass  19: suminf.    0.18377 (2) obj. -61.8626 iterations 4
Cbc0038I Pass  20: suminf.    0.60594 (2) obj. -61.8626 iterations 3
Cbc0038I Pass  21: suminf.    0.36978 (2) obj. -61.8626 iterations 1
Cbc0038I Pass  22: suminf.    0.19060 (2) obj. -61.8626 iterations 3
Cbc0038I Pass  23: suminf.    1.76884 (7) obj. -61.8626 iterations 8
Cbc0038I Pass  24: suminf.    1.10648 (4) obj. -61.8626 iterations 4
Cbc0038I Pass  25: suminf.    1.11279 (3) obj. -61.8626 iterations 7
Cbc0038I Pass  26: suminf.    0.53299 (3) obj. -61.8626 iterations 2
Cbc0038I Pass  27: suminf.    0.09047 (1) obj. -61.8626 iterations 3
Cbc0038I Pass  28: suminf.    0.03250 (1) obj. -61.8626 iterations 1
Cbc0038I Pass  29: suminf.    1.33507 (5) obj. -61.8626 iterations 5
Cbc0038I Pass  30: suminf.    0.38128 (2) obj. -61.8626 iterations 5
Cbc0038I Pass  31: suminf.    1.00842 (6) obj. -61.8626 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 22 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -55 - took 0.03 seconds
Cbc0012I Integer solution of -55 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 41 rows 22 columns, reduced to 31 rows 17 columns
Cbc0031I 6 added rows had average density of 21.833333
Cbc0013I At root node, 6 cuts changed objective from -114.62643 to -62.406864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 711 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 368 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 84 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55, took 1319 iterations and 2 nodes (0.12 seconds)
Cbc0032I Strong branching done 34 times (233 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-20) rows, 49 (-17) columns and 412 (-311) elements
Clp1000I sum of infeasibilities 8.46649e-09 - average 1.76385e-10, 44 fixed columns
Coin0506I Presolve 5 (-43) rows, 5 (-44) columns and 15 (-397) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 41.876712
Clp0000I Optimal - objective value 41.876712
Coin0511I After Postsolve, objective 41.876712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23626954 - largest nonzero change 0 ( 0%) - largest zero change 2.7653778e-05
Clp0000I Optimal - objective value 180.57337
Clp0000I Optimal - objective value 180.57337
Clp0000I Optimal - objective value 180.57337
Coin0511I After Postsolve, objective 180.57337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.5733697 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 49 columns (49 integer (49 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.710%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.99896
Cbc0038I Pass   1: suminf.    0.55843 (7) obj. 0.0478162 iterations 23
Cbc0038I Pass   2: suminf.    0.55843 (7) obj. 0.0478162 iterations 2
Cbc0038I Solution found of 79
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 26 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 79 to -27 (0.02 seconds)
Cbc0038I Round again with cutoff of -41.1279
Cbc0038I Pass   3: suminf.    1.86549 (21) obj. -41.1279 iterations 8
Cbc0038I Pass   4: suminf.    1.86549 (21) obj. -41.1279 iterations 0
Cbc0038I Pass   5: suminf.    0.98701 (8) obj. -41.1279 iterations 13
Cbc0038I Pass   6: suminf.    0.70904 (8) obj. -61.1417 iterations 2
Cbc0038I Pass   7: suminf.    0.16489 (1) obj. -41.1279 iterations 8
Cbc0038I Pass   8: suminf.    0.14286 (1) obj. -42.7143 iterations 1
Cbc0038I Pass   9: suminf.    2.02524 (6) obj. -61.6033 iterations 8
Cbc0038I Pass  10: suminf.    0.71977 (4) obj. -41.1279 iterations 4
Cbc0038I Pass  11: suminf.    0.83904 (2) obj. -41.1279 iterations 6
Cbc0038I Pass  12: suminf.    0.49714 (2) obj. -46.768 iterations 2
Cbc0038I Pass  13: suminf.    0.57612 (2) obj. -41.1279 iterations 1
Cbc0038I Pass  14: suminf.    1.91550 (7) obj. -41.1279 iterations 9
Cbc0038I Pass  15: suminf.    1.36639 (5) obj. -50.8147 iterations 4
Cbc0038I Pass  16: suminf.    0.54752 (3) obj. -41.1279 iterations 7
Cbc0038I Pass  17: suminf.    0.54752 (3) obj. -41.1279 iterations 1
Cbc0038I Pass  18: suminf.    0.55219 (2) obj. -41.1279 iterations 3
Cbc0038I Pass  19: suminf.    0.35891 (2) obj. -54.9293 iterations 1
Cbc0038I Pass  20: suminf.    1.27788 (6) obj. -71.2166 iterations 6
Cbc0038I Pass  21: suminf.    1.18220 (5) obj. -78.8111 iterations 1
Cbc0038I Pass  22: suminf.    0.40359 (2) obj. -41.1279 iterations 4
Cbc0038I Pass  23: suminf.    0.39820 (2) obj. -41.1279 iterations 1
Cbc0038I Pass  24: suminf.    0.28571 (1) obj. -56.4286 iterations 2
Cbc0038I Pass  25: suminf.    0.49822 (1) obj. -41.1279 iterations 1
Cbc0038I Pass  26: suminf.    0.91315 (6) obj. -41.1279 iterations 12
Cbc0038I Pass  27: suminf.    0.91315 (6) obj. -41.1279 iterations 1
Cbc0038I Pass  28: suminf.    0.48789 (1) obj. -41.1279 iterations 7
Cbc0038I Pass  29: suminf.    0.23810 (1) obj. -60.8571 iterations 1
Cbc0038I Pass  30: suminf.    2.72820 (15) obj. -41.1279 iterations 21
Cbc0038I Pass  31: suminf.    2.72820 (15) obj. -41.1279 iterations 0
Cbc0038I Pass  32: suminf.    0.77049 (2) obj. -41.1279 iterations 17
Cbc0038I Rounding solution of -55 is better than previous of -27

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -76.656
Cbc0038I Pass  32: suminf.    2.32239 (21) obj. -76.656 iterations 0
Cbc0038I Pass  33: suminf.    2.32239 (21) obj. -76.656 iterations 0
Cbc0038I Pass  34: suminf.    0.26671 (2) obj. -76.656 iterations 38
Cbc0038I Pass  35: suminf.    0.26671 (2) obj. -76.656 iterations 1
Cbc0038I Pass  36: suminf.    0.34244 (1) obj. -76.656 iterations 3
Cbc0038I Pass  37: suminf.    0.23810 (1) obj. -106.857 iterations 1
Cbc0038I Pass  38: suminf.    0.78037 (5) obj. -76.656 iterations 15
Cbc0038I Pass  39: suminf.    0.76767 (4) obj. -78.298 iterations 3
Cbc0038I Pass  40: suminf.    0.39537 (2) obj. -76.656 iterations 6
Cbc0038I Pass  41: suminf.    0.39537 (2) obj. -76.656 iterations 1
Cbc0038I Pass  42: suminf.    0.39800 (1) obj. -76.656 iterations 3
Cbc0038I Pass  43: suminf.    0.23810 (1) obj. -102.857 iterations 1
Cbc0038I Pass  44: suminf.    1.47227 (5) obj. -76.656 iterations 10
Cbc0038I Pass  45: suminf.    1.47227 (5) obj. -76.656 iterations 1
Cbc0038I Pass  46: suminf.    0.94679 (3) obj. -76.656 iterations 6
Cbc0038I Pass  47: suminf.    0.94679 (3) obj. -76.656 iterations 2
Cbc0038I Pass  48: suminf.    0.74624 (2) obj. -76.656 iterations 3
Cbc0038I Pass  49: suminf.    0.74624 (2) obj. -76.656 iterations 1
Cbc0038I Pass  50: suminf.    0.50481 (2) obj. -76.656 iterations 4
Cbc0038I Pass  51: suminf.    1.72828 (8) obj. -76.656 iterations 11
Cbc0038I Pass  52: suminf.    1.40416 (6) obj. -104.03 iterations 3
Cbc0038I Pass  53: suminf.    0.46744 (1) obj. -76.656 iterations 6
Cbc0038I Pass  54: suminf.    0.23810 (1) obj. -97.8571 iterations 1
Cbc0038I Pass  55: suminf.    1.24138 (6) obj. -76.656 iterations 5
Cbc0038I Pass  56: suminf.    1.07083 (5) obj. -112.817 iterations 1
Cbc0038I Pass  57: suminf.    2.09666 (11) obj. -76.656 iterations 13
Cbc0038I Pass  58: suminf.    2.07329 (11) obj. -76.656 iterations 2
Cbc0038I Pass  59: suminf.    0.63121 (3) obj. -76.656 iterations 13
Cbc0038I Pass  60: suminf.    0.41176 (1) obj. -79.3529 iterations 5
Cbc0038I Pass  61: suminf.    0.44922 (1) obj. -76.656 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -55 - took 0.02 seconds
Cbc0012I Integer solution of -55 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 49 columns, reduced to 7 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 4
Cbc0013I At root node, 7 cuts changed objective from -159.28024 to -59.789542 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 94 row cuts average 2.0 elements, 23 column cuts (23 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55, took 32 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 41 (-28) rows, 22 (-13) columns and 119 (-76) elements
Clp0000I Optimal - objective value 114.62643
Coin0511I After Postsolve, objective 114.62643, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 114.6264315 - 23 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 41 rows, 22 columns (21 integer (21 of which binary)) and 119 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.72462
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 77 iterations 16
Cbc0038I Solution found of 77
Cbc0038I Relaxing continuous gives 77
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 22 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 77 to -55 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.8626
Cbc0038I Pass   2: suminf.    1.95913 (6) obj. -61.8626 iterations 12
Cbc0038I Pass   3: suminf.    0.17889 (2) obj. -61.8626 iterations 10
Cbc0038I Pass   4: suminf.    0.60594 (2) obj. -61.8626 iterations 3
Cbc0038I Pass   5: suminf.    0.33894 (2) obj. -61.8626 iterations 1
Cbc0038I Pass   6: suminf.    0.19060 (2) obj. -61.8626 iterations 4
Cbc0038I Pass   7: suminf.    1.63760 (4) obj. -61.8626 iterations 5
Cbc0038I Pass   8: suminf.    0.80272 (6) obj. -61.8626 iterations 4
Cbc0038I Pass   9: suminf.    1.13997 (4) obj. -61.8626 iterations 9
Cbc0038I Pass  10: suminf.    0.63128 (2) obj. -61.8626 iterations 2
Cbc0038I Pass  11: suminf.    0.46185 (4) obj. -61.8626 iterations 6
Cbc0038I Pass  12: suminf.    0.62261 (5) obj. -61.8626 iterations 4
Cbc0038I Pass  13: suminf.    0.46185 (4) obj. -61.8626 iterations 4
Cbc0038I Pass  14: suminf.    0.46185 (4) obj. -61.8626 iterations 0
Cbc0038I Pass  15: suminf.    1.79503 (9) obj. -61.8626 iterations 9
Cbc0038I Pass  16: suminf.    1.67343 (8) obj. -61.8626 iterations 2
Cbc0038I Pass  17: suminf.    0.63128 (2) obj. -61.8626 iterations 13
Cbc0038I Pass  18: suminf.    0.63128 (2) obj. -61.8626 iterations 0
Cbc0038I Pass  19: suminf.    0.18377 (2) obj. -61.8626 iterations 4
Cbc0038I Pass  20: suminf.    0.60594 (2) obj. -61.8626 iterations 3
Cbc0038I Pass  21: suminf.    0.36978 (2) obj. -61.8626 iterations 1
Cbc0038I Pass  22: suminf.    0.19060 (2) obj. -61.8626 iterations 3
Cbc0038I Pass  23: suminf.    1.76884 (7) obj. -61.8626 iterations 8
Cbc0038I Pass  24: suminf.    1.10648 (4) obj. -61.8626 iterations 4
Cbc0038I Pass  25: suminf.    1.11279 (3) obj. -61.8626 iterations 7
Cbc0038I Pass  26: suminf.    0.53299 (3) obj. -61.8626 iterations 2
Cbc0038I Pass  27: suminf.    0.09047 (1) obj. -61.8626 iterations 3
Cbc0038I Pass  28: suminf.    0.03250 (1) obj. -61.8626 iterations 1
Cbc0038I Pass  29: suminf.    1.33507 (5) obj. -61.8626 iterations 5
Cbc0038I Pass  30: suminf.    0.38128 (2) obj. -61.8626 iterations 5
Cbc0038I Pass  31: suminf.    1.00842 (6) obj. -61.8626 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 22 columns, reduced to 31 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -55 - took 0.03 seconds
Cbc0012I Integer solution of -55 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 41 rows 22 columns, reduced to 31 rows 17 columns
Cbc0031I 6 added rows had average density of 21.833333
Cbc0013I At root node, 6 cuts changed objective from -114.62643 to -62.406864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 711 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 368 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 84 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55, took 1319 iterations and 2 nodes (0.12 seconds)
Cbc0032I Strong branching done 34 times (233 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-21) rows, 49 (-18) columns and 412 (-312) elements
Clp1000I sum of infeasibilities 8.46649e-09 - average 1.76385e-10, 44 fixed columns
Coin0506I Presolve 5 (-43) rows, 5 (-44) columns and 15 (-397) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 41.876712
Clp0000I Optimal - objective value 41.876712
Coin0511I After Postsolve, objective 41.876712, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23626954 - largest nonzero change 0 ( 0%) - largest zero change 2.7653778e-05
Clp0000I Optimal - objective value 180.57337
Clp0000I Optimal - objective value 180.57337
Clp0000I Optimal - objective value 180.57337
Coin0511I After Postsolve, objective 180.57337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.5733697 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 49 columns (49 integer (49 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.710%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.99896
Cbc0038I Pass   1: suminf.    0.55843 (7) obj. 0.0478162 iterations 23
Cbc0038I Pass   2: suminf.    0.55843 (7) obj. 0.0478162 iterations 2
Cbc0038I Solution found of 79
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 26 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 79 to -27 (0.02 seconds)
Cbc0038I Round again with cutoff of -41.1279
Cbc0038I Pass   3: suminf.    1.86549 (21) obj. -41.1279 iterations 8
Cbc0038I Pass   4: suminf.    1.86549 (21) obj. -41.1279 iterations 0
Cbc0038I Pass   5: suminf.    0.98701 (8) obj. -41.1279 iterations 13
Cbc0038I Pass   6: suminf.    0.70904 (8) obj. -61.1417 iterations 2
Cbc0038I Pass   7: suminf.    0.16489 (1) obj. -41.1279 iterations 8
Cbc0038I Pass   8: suminf.    0.14286 (1) obj. -42.7143 iterations 1
Cbc0038I Pass   9: suminf.    2.02524 (6) obj. -61.6033 iterations 8
Cbc0038I Pass  10: suminf.    0.71977 (4) obj. -41.1279 iterations 4
Cbc0038I Pass  11: suminf.    0.83904 (2) obj. -41.1279 iterations 6
Cbc0038I Pass  12: suminf.    0.49714 (2) obj. -46.768 iterations 2
Cbc0038I Pass  13: suminf.    0.57612 (2) obj. -41.1279 iterations 1
Cbc0038I Pass  14: suminf.    1.91550 (7) obj. -41.1279 iterations 9
Cbc0038I Pass  15: suminf.    1.36639 (5) obj. -50.8147 iterations 4
Cbc0038I Pass  16: suminf.    0.54752 (3) obj. -41.1279 iterations 7
Cbc0038I Pass  17: suminf.    0.54752 (3) obj. -41.1279 iterations 1
Cbc0038I Pass  18: suminf.    0.55219 (2) obj. -41.1279 iterations 3
Cbc0038I Pass  19: suminf.    0.35891 (2) obj. -54.9293 iterations 1
Cbc0038I Pass  20: suminf.    1.27788 (6) obj. -71.2166 iterations 6
Cbc0038I Pass  21: suminf.    1.18220 (5) obj. -78.8111 iterations 1
Cbc0038I Pass  22: suminf.    0.40359 (2) obj. -41.1279 iterations 4
Cbc0038I Pass  23: suminf.    0.39820 (2) obj. -41.1279 iterations 1
Cbc0038I Pass  24: suminf.    0.28571 (1) obj. -56.4286 iterations 2
Cbc0038I Pass  25: suminf.    0.49822 (1) obj. -41.1279 iterations 1
Cbc0038I Pass  26: suminf.    0.91315 (6) obj. -41.1279 iterations 12
Cbc0038I Pass  27: suminf.    0.91315 (6) obj. -41.1279 iterations 1
Cbc0038I Pass  28: suminf.    0.48789 (1) obj. -41.1279 iterations 7
Cbc0038I Pass  29: suminf.    0.23810 (1) obj. -60.8571 iterations 1
Cbc0038I Pass  30: suminf.    2.72820 (15) obj. -41.1279 iterations 21
Cbc0038I Pass  31: suminf.    2.72820 (15) obj. -41.1279 iterations 0
Cbc0038I Pass  32: suminf.    0.77049 (2) obj. -41.1279 iterations 17
Cbc0038I Rounding solution of -55 is better than previous of -27

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -76.656
Cbc0038I Pass  32: suminf.    2.32239 (21) obj. -76.656 iterations 0
Cbc0038I Pass  33: suminf.    2.32239 (21) obj. -76.656 iterations 0
Cbc0038I Pass  34: suminf.    0.26671 (2) obj. -76.656 iterations 38
Cbc0038I Pass  35: suminf.    0.26671 (2) obj. -76.656 iterations 1
Cbc0038I Pass  36: suminf.    0.34244 (1) obj. -76.656 iterations 3
Cbc0038I Pass  37: suminf.    0.23810 (1) obj. -106.857 iterations 1
Cbc0038I Pass  38: suminf.    0.78037 (5) obj. -76.656 iterations 15
Cbc0038I Pass  39: suminf.    0.76767 (4) obj. -78.298 iterations 3
Cbc0038I Pass  40: suminf.    0.39537 (2) obj. -76.656 iterations 6
Cbc0038I Pass  41: suminf.    0.39537 (2) obj. -76.656 iterations 1
Cbc0038I Pass  42: suminf.    0.39800 (1) obj. -76.656 iterations 3
Cbc0038I Pass  43: suminf.    0.23810 (1) obj. -102.857 iterations 1
Cbc0038I Pass  44: suminf.    1.47227 (5) obj. -76.656 iterations 10
Cbc0038I Pass  45: suminf.    1.47227 (5) obj. -76.656 iterations 1
Cbc0038I Pass  46: suminf.    0.94679 (3) obj. -76.656 iterations 6
Cbc0038I Pass  47: suminf.    0.94679 (3) obj. -76.656 iterations 2
Cbc0038I Pass  48: suminf.    0.74624 (2) obj. -76.656 iterations 3
Cbc0038I Pass  49: suminf.    0.74624 (2) obj. -76.656 iterations 1
Cbc0038I Pass  50: suminf.    0.50481 (2) obj. -76.656 iterations 4
Cbc0038I Pass  51: suminf.    1.72828 (8) obj. -76.656 iterations 11
Cbc0038I Pass  52: suminf.    1.40416 (6) obj. -104.03 iterations 3
Cbc0038I Pass  53: suminf.    0.46744 (1) obj. -76.656 iterations 6
Cbc0038I Pass  54: suminf.    0.23810 (1) obj. -97.8571 iterations 1
Cbc0038I Pass  55: suminf.    1.24138 (6) obj. -76.656 iterations 5
Cbc0038I Pass  56: suminf.    1.07083 (5) obj. -112.817 iterations 1
Cbc0038I Pass  57: suminf.    2.09666 (11) obj. -76.656 iterations 13
Cbc0038I Pass  58: suminf.    2.07329 (11) obj. -76.656 iterations 2
Cbc0038I Pass  59: suminf.    0.63121 (3) obj. -76.656 iterations 13
Cbc0038I Pass  60: suminf.    0.41176 (1) obj. -79.3529 iterations 5
Cbc0038I Pass  61: suminf.    0.44922 (1) obj. -76.656 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 49 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -55 - took 0.02 seconds
Cbc0012I Integer solution of -55 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 49 columns, reduced to 7 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 4
Cbc0013I At root node, 7 cuts changed objective from -159.28024 to -59.789542 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 94 row cuts average 2.0 elements, 23 column cuts (23 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -55, took 32 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

