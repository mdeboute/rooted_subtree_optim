Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-31) rows, 70 (-8) columns and 380 (-73) elements
Clp1000I sum of infeasibilities 1.74765e-05 - average 1.4094e-07, 16 fixed columns
Coin0506I Presolve 92 (-32) rows, 54 (-16) columns and 284 (-96) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Coin0511I After Postsolve, objective 58.639112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Coin0511I After Postsolve, objective 58.639112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.63911222 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 70 columns (69 integer (69 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.54087
Cbc0038I Solution found of -8.90055
Cbc0038I Relaxing continuous gives -14.4663
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 70 columns, reduced to 66 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -14.4663 to -31.3141 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.0186
Cbc0038I Pass   1: suminf.    1.60682 (18) obj. -34.0186 iterations 34
Cbc0038I Pass   2: suminf.    1.41567 (8) obj. -34.0186 iterations 22
Cbc0038I Pass   3: suminf.    1.37642 (4) obj. -34.0186 iterations 3
Cbc0038I Pass   4: suminf.    0.86880 (5) obj. -34.0186 iterations 5
Cbc0038I Pass   5: suminf.    1.26642 (3) obj. -34.0186 iterations 6
Cbc0038I Pass   6: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass   7: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass   8: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass   9: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  10: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  11: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  12: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  13: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  14: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  15: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  16: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  17: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  18: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  19: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  20: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  21: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  22: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  23: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  24: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  25: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  26: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  27: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  28: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  29: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  30: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 70 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -31.3141 - took 0.04 seconds
Cbc0012I Integer solution of -31.31414 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 115 rows 70 columns, reduced to 66 rows 38 columns
Cbc0031I 22 added rows had average density of 46.181818
Cbc0013I At root node, 22 cuts changed objective from -58.357849 to -49.460249 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7866 row cuts average 6.0 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1802 row cuts average 69.8 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 69.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 11 nodes, 8 on tree, -31.31414 best solution, best possible -49.460249 (0.69 seconds)
Cbc0001I Search completed - best objective -31.31414, took 6493 iterations and 38 nodes (0.74 seconds)
Cbc0032I Strong branching done 476 times (8426 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 10, 130 variables fixed on reduced cost
Total time (CPU seconds):       0.75   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 122 (-30) columns and 2050 (-1253) elements
Clp1000I sum of infeasibilities 7.14001e-08 - average 6.61112e-10, 62 fixed columns
Coin0506I Presolve 59 (-49) rows, 60 (-62) columns and 379 (-1671) elements
Clp0006I 0  Obj 166.74032 Dual inf 27.943875 (60)
Clp0029I End of values pass after 59 iterations
Clp0014I Perturbing problem by 0.001% of 3.3610177 - largest nonzero change 0 ( 0%) - largest zero change 1.9724125e-05
Clp0000I Optimal - objective value 178.41752
Clp0000I Optimal - objective value 178.41752
Coin0511I After Postsolve, objective 178.41752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 178.41752 Dual inf 23.501193 (1)
Clp0014I Perturbing problem by 0.001% of 1.7118817 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 178.41752
Clp0000I Optimal - objective value 178.41752
Clp0000I Optimal - objective value 178.41752
Coin0511I After Postsolve, objective 178.41752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 178.4175163 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 6 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 115 columns (115 integer (115 of which binary)) and 1836 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.652%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.55644
Cbc0038I Pass   1: suminf.    0.50611 (16) obj. -38.3772 iterations 42
Cbc0038I Pass   2: suminf.    0.50611 (16) obj. -38.3772 iterations 1
Cbc0038I Solution found of -1.5244
Cbc0038I Rounding solution of -16.6522 is better than previous of -1.5244

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 115 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -19.9676
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.50611 (16) obj. -38.3772 iterations 0
Cbc0038I Pass   4: suminf.    0.50611 (16) obj. -38.3772 iterations 1
Cbc0038I Pass   5: suminf.    0.15341 (6) obj. -23.8988 iterations 14
Cbc0038I Pass   6: suminf.    0.22828 (2) obj. -19.9676 iterations 7
Cbc0038I Pass   7: suminf.    0.22828 (2) obj. -19.9676 iterations 0
Cbc0038I Pass   8: suminf.    0.07690 (2) obj. -19.9676 iterations 1
Cbc0038I Pass   9: suminf.    1.91378 (8) obj. -19.9676 iterations 46
Cbc0038I Pass  10: suminf.    0.49169 (7) obj. -19.9676 iterations 13
Cbc0038I Pass  11: suminf.    0.47251 (13) obj. -19.9676 iterations 11
Cbc0038I Pass  12: suminf.    1.27444 (6) obj. -19.9676 iterations 28
Cbc0038I Pass  13: suminf.    0.45704 (4) obj. -19.9915 iterations 10
Cbc0038I Pass  14: suminf.    0.93802 (12) obj. -19.9676 iterations 18
Cbc0038I Pass  15: suminf.    1.43519 (14) obj. -19.9676 iterations 34
Cbc0038I Pass  16: suminf.    1.08428 (14) obj. -19.9676 iterations 7
Cbc0038I Pass  17: suminf.    0.93732 (16) obj. -19.9676 iterations 29
Cbc0038I Pass  18: suminf.    0.93732 (16) obj. -19.9676 iterations 2
Cbc0038I Pass  19: suminf.    1.39859 (10) obj. -19.9676 iterations 14
Cbc0038I Pass  20: suminf.    1.39859 (10) obj. -19.9676 iterations 0
Cbc0038I Pass  21: suminf.    1.38796 (10) obj. -19.9676 iterations 7
Cbc0038I Pass  22: suminf.    1.38796 (10) obj. -19.9676 iterations 4
Cbc0038I Pass  23: suminf.    1.39859 (10) obj. -19.9676 iterations 6
Cbc0038I Pass  24: suminf.    3.85759 (18) obj. -19.9676 iterations 23
Cbc0038I Pass  25: suminf.    1.67052 (14) obj. -19.9676 iterations 6
Cbc0038I Pass  26: suminf.    1.24061 (14) obj. -19.9676 iterations 5
Cbc0038I Pass  27: suminf.    0.81832 (13) obj. -19.9676 iterations 3
Cbc0038I Pass  28: suminf.    1.39859 (10) obj. -19.9676 iterations 15
Cbc0038I Pass  29: suminf.    1.39859 (10) obj. -19.9676 iterations 1
Cbc0038I Pass  30: suminf.    1.38796 (10) obj. -19.9676 iterations 5
Cbc0038I Pass  31: suminf.    1.38796 (10) obj. -19.9676 iterations 3
Cbc0038I Pass  32: suminf.    1.39859 (10) obj. -19.9676 iterations 5
Cbc0038I Rounding solution of -30.9112 is better than previous of -16.6522

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 115 columns, reduced to 44 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -34.6901
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.50611 (16) obj. -38.3772 iterations 0
Cbc0038I Pass  33: suminf.    0.50611 (16) obj. -38.3772 iterations 1
Cbc0038I Pass  34: suminf.    0.94014 (15) obj. -34.6901 iterations 47
Cbc0038I Pass  35: suminf.    0.85084 (15) obj. -34.6901 iterations 6
Cbc0038I Pass  36: suminf.    1.16490 (11) obj. -34.6901 iterations 36
Cbc0038I Pass  37: suminf.    0.68164 (11) obj. -34.6901 iterations 3
Cbc0038I Pass  38: suminf.    1.16490 (11) obj. -34.6901 iterations 10
Cbc0038I Pass  39: suminf.    0.70679 (15) obj. -34.6901 iterations 16
Cbc0038I Pass  40: suminf.    0.32564 (9) obj. -34.9225 iterations 12
Cbc0038I Pass  41: suminf.    0.63495 (23) obj. -34.6901 iterations 22
Cbc0038I Pass  42: suminf.    0.63495 (23) obj. -34.6901 iterations 1
Cbc0038I Pass  43: suminf.    2.23556 (20) obj. -34.6901 iterations 24
Cbc0038I Pass  44: suminf.    2.23556 (20) obj. -34.6901 iterations 0
Cbc0038I Pass  45: suminf.    2.20319 (20) obj. -34.6901 iterations 5
Cbc0038I Pass  46: suminf.    2.20319 (20) obj. -34.6901 iterations 2
Cbc0038I Pass  47: suminf.    2.88116 (20) obj. -34.6901 iterations 4
Cbc0038I Pass  48: suminf.    2.88116 (20) obj. -34.6901 iterations 2
Cbc0038I Pass  49: suminf.    3.03588 (22) obj. -34.6901 iterations 13
Cbc0038I Pass  50: suminf.    2.96006 (21) obj. -34.6901 iterations 6
Cbc0038I Pass  51: suminf.    2.93818 (21) obj. -34.6901 iterations 15
Cbc0038I Pass  52: suminf.    2.93818 (21) obj. -34.6901 iterations 2
Cbc0038I Pass  53: suminf.    2.78686 (21) obj. -34.6901 iterations 7
Cbc0038I Pass  54: suminf.    2.78686 (21) obj. -34.6901 iterations 2
Cbc0038I Pass  55: suminf.    2.93818 (21) obj. -34.6901 iterations 3
Cbc0038I Pass  56: suminf.    3.10974 (21) obj. -34.6901 iterations 9
Cbc0038I Pass  57: suminf.    3.10974 (21) obj. -34.6901 iterations 1
Cbc0038I Pass  58: suminf.    2.20319 (20) obj. -34.6901 iterations 8
Cbc0038I Pass  59: suminf.    2.20319 (20) obj. -34.6901 iterations 3
Cbc0038I Pass  60: suminf.    2.88116 (20) obj. -34.6901 iterations 5
Cbc0038I Pass  61: suminf.    2.88116 (20) obj. -34.6901 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 115 columns, reduced to 40 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -30.9112 - took 0.05 seconds
Cbc0012I Integer solution of -30.91125 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 93 rows 115 columns, reduced to 18 rows 23 columns
Cbc0031I 58 added rows had average density of 8.9137931
Cbc0013I At root node, 58 cuts changed objective from -49.805298 to -35.734805 in 33 passes
Cbc0014I Cut generator 0 (Probing) - 3832 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 59.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 48 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 28 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 114 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 282 row cuts average 62.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 232 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -30.91125 best solution, best possible -35.734805 (0.78 seconds)
Cbc0010I After 6 nodes, 6 on tree, -30.91125 best solution, best possible -35.734805 (1.54 seconds)
Cbc0012I Integer solution of -31.31414 found by rounding after 1474 iterations and 12 nodes (1.59 seconds)
Cbc0001I Search completed - best objective -31.31414, took 1609 iterations and 16 nodes (1.62 seconds)
Cbc0032I Strong branching done 378 times (8091 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 6, 30 variables fixed on reduced cost
Total time (CPU seconds):       1.19   (Wallclock seconds):       1.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-31) rows, 70 (-8) columns and 380 (-73) elements
Clp1000I sum of infeasibilities 1.74765e-05 - average 1.4094e-07, 16 fixed columns
Coin0506I Presolve 92 (-32) rows, 54 (-16) columns and 284 (-96) elements
Clp0029I End of values pass after 54 iterations
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Coin0511I After Postsolve, objective 58.639112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Clp0000I Optimal - objective value 58.639112
Coin0511I After Postsolve, objective 58.639112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.63911222 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 70 columns (69 integer (69 of which binary)) and 414 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.54087
Cbc0038I Solution found of -8.90055
Cbc0038I Relaxing continuous gives -14.4663
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 70 columns, reduced to 66 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -14.4663 to -31.3141 (0.04 seconds)
Cbc0038I Round again with cutoff of -34.0186
Cbc0038I Pass   1: suminf.    1.60682 (18) obj. -34.0186 iterations 34
Cbc0038I Pass   2: suminf.    1.41567 (8) obj. -34.0186 iterations 22
Cbc0038I Pass   3: suminf.    1.37642 (4) obj. -34.0186 iterations 3
Cbc0038I Pass   4: suminf.    0.86880 (5) obj. -34.0186 iterations 5
Cbc0038I Pass   5: suminf.    1.26642 (3) obj. -34.0186 iterations 6
Cbc0038I Pass   6: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass   7: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass   8: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass   9: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  10: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  11: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  12: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  13: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  14: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  15: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  16: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  17: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  18: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  19: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  20: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  21: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  22: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  23: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  24: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  25: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I Pass  26: suminf.    1.22361 (3) obj. -34.0186 iterations 2
Cbc0038I Pass  27: suminf.    1.31976 (4) obj. -34.0186 iterations 3
Cbc0038I Pass  28: suminf.    1.19321 (4) obj. -34.0186 iterations 1
Cbc0038I Pass  29: suminf.    1.19321 (4) obj. -34.0186 iterations 0
Cbc0038I Pass  30: suminf.    1.26642 (3) obj. -34.0186 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 70 columns, reduced to 69 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -31.3141 - took 0.04 seconds
Cbc0012I Integer solution of -31.31414 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 115 rows 70 columns, reduced to 66 rows 38 columns
Cbc0031I 22 added rows had average density of 46.181818
Cbc0013I At root node, 22 cuts changed objective from -58.357849 to -49.460249 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7866 row cuts average 6.0 elements, 1 column cuts (1 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1802 row cuts average 69.8 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 69.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.31414 best solution, best possible -49.460249 (0.73 seconds)
Cbc0001I Search completed - best objective -31.31414, took 6493 iterations and 38 nodes (0.90 seconds)
Cbc0032I Strong branching done 476 times (8426 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 10, 130 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 115 (-38) columns and 1799 (-1505) elements
Clp1000I sum of infeasibilities 3.97882e-07 - average 3.93943e-09, 22 fixed columns
Coin0506I Presolve 80 (-21) rows, 93 (-22) columns and 1186 (-613) elements
Clp0006I 0  Obj 64.959995 Dual inf 37.711521 (93)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.0634015 - largest nonzero change 2.531822e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 70.269295
Clp0000I Optimal - objective value 70.269295
Coin0511I After Postsolve, objective 70.269295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.269295
Clp0000I Optimal - objective value 70.269295
Clp0000I Optimal - objective value 70.269295
Clp0000I Optimal - objective value 70.269295
Coin0511I After Postsolve, objective 70.269295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.26929534 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 115 columns (115 integer (115 of which binary)) and 1838 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.633%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 2.51809
Cbc0038I Pass   1: suminf.    1.12343 (32) obj. -43.8529 iterations 17
Cbc0038I Pass   2: suminf.    0.62310 (20) obj. -16.2075 iterations 12
Cbc0038I Solution found of 8.98303
Cbc0038I Rounding solution of -10.9493 is better than previous of 8.98303

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 115 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -10.9493 to -18.0738 (0.04 seconds)
Cbc0038I Round again with cutoff of -21.1481
Cbc0038I Pass   3: suminf.    1.12343 (32) obj. -43.8529 iterations 0
Cbc0038I Pass   4: suminf.    0.90082 (19) obj. -21.1481 iterations 15
Cbc0038I Pass   5: suminf.    1.07334 (12) obj. -21.1481 iterations 12
Cbc0038I Pass   6: suminf.    0.55548 (12) obj. -21.1481 iterations 2
Cbc0038I Pass   7: suminf.    1.86543 (11) obj. -21.1481 iterations 20
Cbc0038I Pass   8: suminf.    1.04762 (8) obj. -21.1481 iterations 5
Cbc0038I Pass   9: suminf.    1.04762 (8) obj. -21.1481 iterations 5
Cbc0038I Pass  10: suminf.    1.86543 (11) obj. -21.1481 iterations 11
Cbc0038I Pass  11: suminf.    1.51238 (12) obj. -21.1481 iterations 6
Cbc0038I Pass  12: suminf.    1.57085 (9) obj. -21.1481 iterations 8
Cbc0038I Pass  13: suminf.    1.57085 (9) obj. -21.1481 iterations 0
Cbc0038I Pass  14: suminf.    1.81820 (9) obj. -21.1481 iterations 5
Cbc0038I Pass  15: suminf.    1.42008 (9) obj. -21.1481 iterations 4
Cbc0038I Pass  16: suminf.    1.57085 (9) obj. -21.1481 iterations 5
Cbc0038I Pass  17: suminf.    1.37351 (13) obj. -21.1481 iterations 19
Cbc0038I Pass  18: suminf.    1.37351 (13) obj. -21.1481 iterations 2
Cbc0038I Pass  19: suminf.    1.77992 (12) obj. -21.1481 iterations 21
Cbc0038I Pass  20: suminf.    1.77992 (12) obj. -21.1481 iterations 1
Cbc0038I Pass  21: suminf.    1.93806 (11) obj. -21.1481 iterations 12
Cbc0038I Pass  22: suminf.    1.93806 (11) obj. -21.1481 iterations 2
Cbc0038I Pass  23: suminf.    1.62790 (10) obj. -21.1481 iterations 9
Cbc0038I Pass  24: suminf.    1.62790 (10) obj. -21.1481 iterations 4
Cbc0038I Pass  25: suminf.    1.81820 (10) obj. -21.1481 iterations 5
Cbc0038I Pass  26: suminf.    1.46081 (10) obj. -21.1481 iterations 4
Cbc0038I Pass  27: suminf.    1.81820 (10) obj. -21.1481 iterations 6
Cbc0038I Pass  28: suminf.    1.83680 (15) obj. -21.1481 iterations 27
Cbc0038I Pass  29: suminf.    0.67352 (7) obj. -21.1481 iterations 19
Cbc0038I Pass  30: suminf.    0.71314 (11) obj. -21.1481 iterations 15
Cbc0038I Pass  31: suminf.    0.63715 (6) obj. -21.1774 iterations 12
Cbc0038I Pass  32: suminf.    1.32426 (8) obj. -21.1481 iterations 28
Cbc0038I Rounding solution of -18.932 is better than previous of -18.0738

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 115 columns, reduced to 41 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -18.932 to -29.1097 (0.09 seconds)
Cbc0038I Round again with cutoff of -33.0512
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.12343 (32) obj. -43.8529 iterations 0
Cbc0038I Pass  33: suminf.    1.39326 (19) obj. -33.0512 iterations 21
Cbc0038I Pass  34: suminf.    1.39326 (19) obj. -33.0512 iterations 0
Cbc0038I Pass  35: suminf.    2.86639 (21) obj. -33.0512 iterations 21
Cbc0038I Pass  36: suminf.    1.38105 (18) obj. -33.0512 iterations 11
Cbc0038I Pass  37: suminf.    1.03064 (17) obj. -33.0512 iterations 5
Cbc0038I Pass  38: suminf.    1.22666 (17) obj. -33.0512 iterations 15
Cbc0038I Pass  39: suminf.    1.50281 (18) obj. -33.0512 iterations 16
Cbc0038I Pass  40: suminf.    1.50281 (18) obj. -33.0512 iterations 7
Cbc0038I Pass  41: suminf.    3.69369 (24) obj. -33.0512 iterations 16
Cbc0038I Pass  42: suminf.    1.46590 (20) obj. -33.0512 iterations 23
Cbc0038I Pass  43: suminf.    1.14161 (19) obj. -33.0512 iterations 7
Cbc0038I Pass  44: suminf.    3.06797 (24) obj. -33.0512 iterations 19
Cbc0038I Pass  45: suminf.    1.32178 (20) obj. -33.0512 iterations 14
Cbc0038I Pass  46: suminf.    1.12222 (19) obj. -33.0512 iterations 7
Cbc0038I Pass  47: suminf.    1.22666 (19) obj. -33.0512 iterations 11
Cbc0038I Pass  48: suminf.    1.26753 (21) obj. -33.0512 iterations 21
Cbc0038I Pass  49: suminf.    1.26753 (21) obj. -33.0512 iterations 3
Cbc0038I Pass  50: suminf.    2.42344 (21) obj. -33.0512 iterations 21
Cbc0038I Pass  51: suminf.    1.39255 (20) obj. -33.0512 iterations 7
Cbc0038I Pass  52: suminf.    2.51108 (23) obj. -33.0512 iterations 9
Cbc0038I Pass  53: suminf.    1.68734 (20) obj. -33.0512 iterations 7
Cbc0038I Pass  54: suminf.    1.39255 (20) obj. -33.0512 iterations 7
Cbc0038I Pass  55: suminf.    1.48471 (20) obj. -33.0512 iterations 6
Cbc0038I Pass  56: suminf.    1.37928 (19) obj. -33.0512 iterations 16
Cbc0038I Pass  57: suminf.    0.68441 (11) obj. -33.0512 iterations 11
Cbc0038I Pass  58: suminf.    1.18486 (11) obj. -33.0512 iterations 18
Cbc0038I Pass  59: suminf.    0.68896 (11) obj. -33.0512 iterations 5
Cbc0038I Pass  60: suminf.    1.15782 (21) obj. -33.0512 iterations 16
Cbc0038I Pass  61: suminf.    1.14317 (20) obj. -33.0512 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -29.1097 - took 0.07 seconds
Cbc0012I Integer solution of -29.10974 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 93 rows 115 columns, reduced to 15 rows 19 columns
Cbc0031I 49 added rows had average density of 29.510204
Cbc0013I At root node, 49 cuts changed objective from -48.816481 to -38.403066 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13257 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1995 row cuts average 108.6 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 617 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 875 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 285 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 253 row cuts average 62.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 379 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.821 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.10974 best solution, best possible -38.403066 (3.08 seconds)
Cbc0012I Integer solution of -30.91125 found by rounding after 6593 iterations and 3 nodes (4.19 seconds)
Cbc0010I After 3 nodes, 2 on tree, -30.91125 best solution, best possible -35.717452 (4.20 seconds)
Cbc0016I Integer solution of -31.31414 found by strong branching after 6710 iterations and 7 nodes (4.43 seconds)
Cbc0010I After 15 nodes, 3 on tree, -31.31414 best solution, best possible -35.717452 (5.14 seconds)
Cbc0001I Search completed - best objective -31.31414, took 7377 iterations and 18 nodes (5.14 seconds)
Cbc0032I Strong branching done 380 times (10049 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 27 variables fixed on reduced cost
Total time (CPU seconds):       3.82   (Wallclock seconds):       5.17

