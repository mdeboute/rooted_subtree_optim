Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 32 (-3) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 9.0507e-05 - average 1.56047e-06, 2 fixed columns
Coin0506I Presolve 54 (-4) rows, 30 (-2) columns and 160 (-12) elements
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 3.3278196 - largest nonzero change 1.3360784e-05 ( 0.00091204228%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 107.34904
Clp0000I Optimal - objective value 107.34904
Coin0511I After Postsolve, objective 107.34904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 107.34904
Clp0000I Optimal - objective value 107.34904
Clp0000I Optimal - objective value 107.34904
Coin0511I After Postsolve, objective 107.34904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.3490432 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 32 columns (31 integer (31 of which binary)) and 173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.788%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.28343
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -51.4171 iterations 19
Cbc0038I Solution found of -51.4171
Cbc0038I Relaxing continuous gives -51.4171
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -51.4171 to -52.7483 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.2085
Cbc0038I Pass   2: suminf.    0.22438 (6) obj. -58.2085 iterations 4
Cbc0038I Pass   3: suminf.    0.43934 (3) obj. -58.2085 iterations 13
Cbc0038I Pass   4: suminf.    0.41748 (2) obj. -58.2085 iterations 1
Cbc0038I Pass   5: suminf.    0.37580 (2) obj. -58.2085 iterations 2
Cbc0038I Pass   6: suminf.    0.86119 (3) obj. -58.2085 iterations 2
Cbc0038I Pass   7: suminf.    0.37580 (2) obj. -58.2085 iterations 2
Cbc0038I Pass   8: suminf.    1.24876 (4) obj. -58.2085 iterations 9
Cbc0038I Pass   9: suminf.    1.22033 (5) obj. -58.2085 iterations 4
Cbc0038I Pass  10: suminf.    0.90443 (3) obj. -58.2085 iterations 8
Cbc0038I Pass  11: suminf.    0.90443 (3) obj. -58.2085 iterations 0
Cbc0038I Pass  12: suminf.    1.27491 (3) obj. -58.2085 iterations 2
Cbc0038I Pass  13: suminf.    1.13962 (3) obj. -58.2085 iterations 4
Cbc0038I Pass  14: suminf.    0.56763 (3) obj. -58.2085 iterations 1
Cbc0038I Pass  15: suminf.    0.86502 (2) obj. -58.2085 iterations 2
Cbc0038I Pass  16: suminf.    0.81059 (2) obj. -58.2085 iterations 1
Cbc0038I Pass  17: suminf.    0.76923 (2) obj. -58.2085 iterations 2
Cbc0038I Pass  18: suminf.    0.76923 (2) obj. -58.2085 iterations 0
Cbc0038I Pass  19: suminf.    2.82058 (6) obj. -58.2085 iterations 15
Cbc0038I Pass  20: suminf.    1.64338 (9) obj. -58.2085 iterations 6
Cbc0038I Pass  21: suminf.    0.97260 (7) obj. -58.2085 iterations 3
Cbc0038I Pass  22: suminf.    0.92092 (2) obj. -58.2085 iterations 15
Cbc0038I Pass  23: suminf.    0.72013 (2) obj. -58.2085 iterations 1
Cbc0038I Pass  24: suminf.    0.68260 (2) obj. -58.2085 iterations 2
Cbc0038I Pass  25: suminf.    0.68260 (2) obj. -58.2085 iterations 0
Cbc0038I Pass  26: suminf.    0.47092 (4) obj. -58.2085 iterations 5
Cbc0038I Pass  27: suminf.    0.38628 (2) obj. -58.2085 iterations 2
Cbc0038I Pass  28: suminf.    0.68260 (2) obj. -58.2085 iterations 3
Cbc0038I Pass  29: suminf.    0.68260 (2) obj. -58.2085 iterations 0
Cbc0038I Pass  30: suminf.    0.79110 (2) obj. -58.2085 iterations 1
Cbc0038I Pass  31: suminf.    1.39767 (7) obj. -58.2085 iterations 6
Cbc0038I Rounding solution of -54.6433 is better than previous of -52.7483

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 46 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -68.0366
Cbc0038I Pass  31: suminf.    0.58554 (6) obj. -68.0366 iterations 1
Cbc0038I Pass  32: suminf.    0.92419 (3) obj. -68.0366 iterations 11
Cbc0038I Pass  33: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  34: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  35: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  36: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Pass  37: suminf.    0.91508 (3) obj. -68.0366 iterations 1
Cbc0038I Pass  38: suminf.    0.92419 (3) obj. -68.0366 iterations 2
Cbc0038I Pass  39: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  40: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  41: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  42: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Pass  43: suminf.    0.91508 (3) obj. -68.0366 iterations 1
Cbc0038I Pass  44: suminf.    0.92419 (3) obj. -68.0366 iterations 2
Cbc0038I Pass  45: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  46: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  47: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  48: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Pass  49: suminf.    0.91508 (3) obj. -68.0366 iterations 1
Cbc0038I Pass  50: suminf.    0.92419 (3) obj. -68.0366 iterations 2
Cbc0038I Pass  51: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  52: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  53: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  54: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Pass  55: suminf.    0.91508 (3) obj. -68.0366 iterations 1
Cbc0038I Pass  56: suminf.    0.92419 (3) obj. -68.0366 iterations 2
Cbc0038I Pass  57: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  58: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  59: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  60: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Rounding solution of -58.1528 is better than previous of -54.6433

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -79.8303
Cbc0038I Pass  60: suminf.    1.13684 (6) obj. -79.8303 iterations 0
Cbc0038I Pass  61: suminf.    1.29624 (4) obj. -79.8303 iterations 13
Cbc0038I Pass  62: suminf.    1.28176 (4) obj. -79.8303 iterations 1
Cbc0038I Pass  63: suminf.    1.49576 (4) obj. -79.8303 iterations 2
Cbc0038I Pass  64: suminf.    1.29302 (4) obj. -79.8303 iterations 2
Cbc0038I Pass  65: suminf.    2.94072 (15) obj. -79.8303 iterations 16
Cbc0038I Pass  66: suminf.    1.17799 (5) obj. -79.8303 iterations 11
Cbc0038I Pass  67: suminf.    0.74532 (4) obj. -79.8303 iterations 5
Cbc0038I Pass  68: suminf.    0.72979 (5) obj. -79.8303 iterations 2
Cbc0038I Pass  69: suminf.    0.92662 (5) obj. -79.8303 iterations 11
Cbc0038I Pass  70: suminf.    0.90230 (4) obj. -79.8303 iterations 2
Cbc0038I Pass  71: suminf.    1.20503 (4) obj. -79.8303 iterations 3
Cbc0038I Pass  72: suminf.    0.99263 (5) obj. -79.8303 iterations 3
Cbc0038I Pass  73: suminf.    1.64668 (5) obj. -79.8303 iterations 4
Cbc0038I Pass  74: suminf.    1.30409 (5) obj. -79.8303 iterations 3
Cbc0038I Pass  75: suminf.    1.42305 (4) obj. -79.8303 iterations 4
Cbc0038I Pass  76: suminf.    0.95344 (3) obj. -79.8303 iterations 4
Cbc0038I Pass  77: suminf.    1.09282 (3) obj. -79.8303 iterations 1
Cbc0038I Pass  78: suminf.    3.35180 (10) obj. -79.8303 iterations 16
Cbc0038I Pass  79: suminf.    1.40053 (5) obj. -79.8303 iterations 5
Cbc0038I Pass  80: suminf.    1.53799 (5) obj. -79.8303 iterations 11
Cbc0038I Pass  81: suminf.    1.49477 (5) obj. -79.8303 iterations 2
Cbc0038I Pass  82: suminf.    1.94595 (6) obj. -79.8303 iterations 4
Cbc0038I Pass  83: suminf.    1.86047 (5) obj. -79.8303 iterations 4
Cbc0038I Pass  84: suminf.    1.51779 (5) obj. -79.8303 iterations 4
Cbc0038I Pass  85: suminf.    2.55813 (6) obj. -79.8303 iterations 13
Cbc0038I Pass  86: suminf.    2.01374 (5) obj. -79.8303 iterations 4
Cbc0038I Pass  87: suminf.    1.93119 (5) obj. -79.8303 iterations 2
Cbc0038I Pass  88: suminf.    1.91905 (5) obj. -79.8303 iterations 2
Cbc0038I Pass  89: suminf.    1.58277 (5) obj. -79.8303 iterations 5
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -88.0859
Cbc0038I Pass  89: suminf.    1.57129 (7) obj. -88.0859 iterations 1
Cbc0038I Pass  90: suminf.    1.86735 (6) obj. -88.0859 iterations 12
Cbc0038I Pass  91: suminf.    1.71151 (5) obj. -88.0859 iterations 3
Cbc0038I Pass  92: suminf.    2.74350 (7) obj. -88.0859 iterations 4
Cbc0038I Pass  93: suminf.    2.08622 (6) obj. -88.0859 iterations 2
Cbc0038I Pass  94: suminf.    2.08622 (6) obj. -88.0859 iterations 0
Cbc0038I Pass  95: suminf.    1.96429 (6) obj. -88.0859 iterations 3
Cbc0038I Pass  96: suminf.    1.72422 (6) obj. -88.0859 iterations 1
Cbc0038I Pass  97: suminf.    1.81637 (6) obj. -88.0859 iterations 5
Cbc0038I Pass  98: suminf.    1.71151 (5) obj. -88.0859 iterations 2
Cbc0038I Pass  99: suminf.    2.74350 (7) obj. -88.0859 iterations 4
Cbc0038I Pass 100: suminf.    2.08622 (6) obj. -88.0859 iterations 2
Cbc0038I Pass 101: suminf.    2.08622 (6) obj. -88.0859 iterations 0
Cbc0038I Pass 102: suminf.    1.96429 (6) obj. -88.0859 iterations 3
Cbc0038I Pass 103: suminf.    1.72422 (6) obj. -88.0859 iterations 1
Cbc0038I Pass 104: suminf.    1.81637 (6) obj. -88.0859 iterations 5
Cbc0038I Pass 105: suminf.    1.71151 (5) obj. -88.0859 iterations 2
Cbc0038I Pass 106: suminf.    2.74350 (7) obj. -88.0859 iterations 4
Cbc0038I Pass 107: suminf.    2.08622 (6) obj. -88.0859 iterations 2
Cbc0038I Pass 108: suminf.    2.08622 (6) obj. -88.0859 iterations 0
Cbc0038I Pass 109: suminf.    1.96429 (6) obj. -88.0859 iterations 3
Cbc0038I Pass 110: suminf.    1.72422 (6) obj. -88.0859 iterations 1
Cbc0038I Pass 111: suminf.    1.81637 (6) obj. -88.0859 iterations 5
Cbc0038I Pass 112: suminf.    1.71151 (5) obj. -88.0859 iterations 2
Cbc0038I Pass 113: suminf.    2.74350 (7) obj. -88.0859 iterations 4
Cbc0038I Pass 114: suminf.    2.08622 (6) obj. -88.0859 iterations 2
Cbc0038I Pass 115: suminf.    2.08622 (6) obj. -88.0859 iterations 0
Cbc0038I Pass 116: suminf.    1.96429 (6) obj. -88.0859 iterations 3
Cbc0038I Pass 117: suminf.    1.72422 (6) obj. -88.0859 iterations 1
Cbc0038I Pass 118: suminf.    1.81637 (6) obj. -88.0859 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -58.1528 - took 0.07 seconds
Cbc0012I Integer solution of -58.15279 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 58 rows 32 columns, reduced to 38 rows 24 columns
Cbc0031I 18 added rows had average density of 27.444444
Cbc0013I At root node, 18 cuts changed objective from -107.34904 to -85.411441 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1780 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 872 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58.15279, took 3410 iterations and 18 nodes (0.38 seconds)
Cbc0032I Strong branching done 236 times (3199 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 7, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-13) rows, 59 (-7) columns and 585 (-138) elements
Clp1000I sum of infeasibilities 4.42645e-08 - average 8.04809e-10, 37 fixed columns
Coin0506I Presolve 19 (-36) rows, 22 (-37) columns and 76 (-509) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.7559272 - largest nonzero change 2.8581677e-05 ( 0.001262127%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 58.295974
Clp0000I Optimal - objective value 58.295974
Coin0511I After Postsolve, objective 58.295974, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9766119 - largest nonzero change 2.8836486e-05 ( 0.0024275985%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 122.53604
Clp0000I Optimal - objective value 122.53604
Clp0000I Optimal - objective value 122.53604
Coin0511I After Postsolve, objective 122.53604, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.5360372 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 59 columns (59 integer (59 of which binary)) and 588 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.592%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.50009
Cbc0038I Pass   1: suminf.    1.83780 (15) obj. -50.7855 iterations 15
Cbc0038I Pass   2: suminf.    1.83780 (15) obj. -50.7855 iterations 0
Cbc0038I Solution found of -11.9618
Cbc0038I Rounding solution of -41.8025 is better than previous of -11.9618

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -49.2881
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.83780 (15) obj. -50.7855 iterations 0
Cbc0038I Pass   4: suminf.    1.83780 (15) obj. -50.7855 iterations 0
Cbc0038I Pass   5: suminf.    1.37930 (12) obj. -49.2881 iterations 21
Cbc0038I Pass   6: suminf.    1.37930 (12) obj. -49.2881 iterations 0
Cbc0038I Pass   7: suminf.    1.33484 (6) obj. -49.2881 iterations 17
Cbc0038I Pass   8: suminf.    1.33484 (6) obj. -49.2881 iterations 0
Cbc0038I Pass   9: suminf.    3.19607 (7) obj. -49.2881 iterations 6
Cbc0038I Pass  10: suminf.    1.17890 (4) obj. -49.2881 iterations 4
Cbc0038I Pass  11: suminf.    1.17890 (4) obj. -49.2881 iterations 0
Cbc0038I Pass  12: suminf.    1.61671 (4) obj. -49.2881 iterations 5
Cbc0038I Pass  13: suminf.    1.12770 (3) obj. -49.2881 iterations 5
Cbc0038I Pass  14: suminf.    1.10481 (3) obj. -49.2881 iterations 2
Cbc0038I Pass  15: suminf.    1.10481 (3) obj. -49.2881 iterations 1
Cbc0038I Pass  16: suminf.    1.35961 (3) obj. -49.2881 iterations 3
Cbc0038I Pass  17: suminf.    1.79206 (9) obj. -49.2881 iterations 17
Cbc0038I Pass  18: suminf.    1.79206 (9) obj. -49.2881 iterations 0
Cbc0038I Pass  19: suminf.    1.76258 (4) obj. -49.2881 iterations 11
Cbc0038I Pass  20: suminf.    1.50729 (4) obj. -49.2881 iterations 2
Cbc0038I Pass  21: suminf.    1.76258 (4) obj. -49.2881 iterations 4
Cbc0038I Pass  22: suminf.    1.84920 (6) obj. -49.2881 iterations 6
Cbc0038I Pass  23: suminf.    1.75709 (6) obj. -49.2881 iterations 4
Cbc0038I Pass  24: suminf.    1.03298 (4) obj. -49.2881 iterations 5
Cbc0038I Pass  25: suminf.    0.98248 (4) obj. -49.2881 iterations 3
Cbc0038I Pass  26: suminf.    0.21234 (2) obj. -50.572 iterations 4
Cbc0038I Pass  27: suminf.    0.12972 (2) obj. -49.2881 iterations 1
Cbc0038I Pass  28: suminf.    0.57750 (2) obj. -49.2881 iterations 4
Cbc0038I Pass  29: suminf.    0.57750 (2) obj. -49.2881 iterations 1
Cbc0038I Pass  30: suminf.    0.70090 (2) obj. -52.7704 iterations 1
Cbc0038I Pass  31: suminf.    2.30801 (13) obj. -49.2881 iterations 23
Cbc0038I Pass  32: suminf.    1.99074 (9) obj. -49.2881 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 42 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -11.9618 to -47.3917 (0.03 seconds)
Cbc0038I Round again with cutoff of -62.7619
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.56429 (26) obj. -62.7619 iterations 4
Cbc0038I Pass  33: suminf.    2.56429 (26) obj. -62.7619 iterations 0
Cbc0038I Pass  34: suminf.    1.64928 (14) obj. -62.7619 iterations 12
Cbc0038I Pass  35: suminf.    1.36330 (8) obj. -62.7619 iterations 22
Cbc0038I Pass  36: suminf.    1.13751 (4) obj. -62.7619 iterations 1
Cbc0038I Pass  37: suminf.    1.08921 (4) obj. -62.7619 iterations 5
Cbc0038I Pass  38: suminf.    0.82128 (3) obj. -63.0273 iterations 4
Cbc0038I Pass  39: suminf.    1.13751 (4) obj. -62.7619 iterations 5
Cbc0038I Pass  40: suminf.    2.96642 (13) obj. -62.7619 iterations 25
Cbc0038I Pass  41: suminf.    2.64562 (14) obj. -62.7619 iterations 4
Cbc0038I Pass  42: suminf.    1.45130 (6) obj. -62.7619 iterations 20
Cbc0038I Pass  43: suminf.    1.43060 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  44: suminf.    1.57772 (6) obj. -62.7619 iterations 4
Cbc0038I Pass  45: suminf.    1.57772 (6) obj. -62.7619 iterations 3
Cbc0038I Pass  46: suminf.    1.43060 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  47: suminf.    1.99877 (10) obj. -62.7619 iterations 11
Cbc0038I Pass  48: suminf.    1.60922 (8) obj. -62.7619 iterations 3
Cbc0038I Pass  49: suminf.    1.29474 (5) obj. -62.7619 iterations 16
Cbc0038I Pass  50: suminf.    1.27362 (8) obj. -62.7619 iterations 4
Cbc0038I Pass  51: suminf.    1.97054 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  52: suminf.    1.97054 (6) obj. -62.7619 iterations 2
Cbc0038I Pass  53: suminf.    1.87982 (6) obj. -62.7619 iterations 4
Cbc0038I Pass  54: suminf.    1.87982 (6) obj. -62.7619 iterations 3
Cbc0038I Pass  55: suminf.    1.97054 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  56: suminf.    1.33396 (8) obj. -67.0852 iterations 12
Cbc0038I Pass  57: suminf.    1.26104 (7) obj. -66.0913 iterations 3
Cbc0038I Pass  58: suminf.    1.29474 (5) obj. -62.7619 iterations 13
Cbc0038I Pass  59: suminf.    1.27362 (8) obj. -62.7619 iterations 4
Cbc0038I Pass  60: suminf.    1.97054 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  61: suminf.    1.97054 (6) obj. -62.7619 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 44 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -47.3917 to -56.57 (0.08 seconds)
Cbc0038I Round again with cutoff of -78.9305
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.44617 (26) obj. -78.9305 iterations 0
Cbc0038I Pass  62: suminf.    3.44617 (26) obj. -78.9305 iterations 0
Cbc0038I Pass  63: suminf.    1.65830 (13) obj. -78.9305 iterations 26
Cbc0038I Pass  64: suminf.    1.65830 (13) obj. -78.9305 iterations 0
Cbc0038I Pass  65: suminf.    3.74188 (12) obj. -78.9305 iterations 11
Cbc0038I Pass  66: suminf.    1.54175 (7) obj. -78.9305 iterations 4
Cbc0038I Pass  67: suminf.    1.54175 (7) obj. -78.9305 iterations 0
Cbc0038I Pass  68: suminf.    2.02471 (8) obj. -78.9305 iterations 6
Cbc0038I Pass  69: suminf.    2.02471 (8) obj. -78.9305 iterations 1
Cbc0038I Pass  70: suminf.    1.80691 (7) obj. -78.9305 iterations 3
Cbc0038I Pass  71: suminf.    1.78265 (7) obj. -78.9305 iterations 3
Cbc0038I Pass  72: suminf.    2.33518 (10) obj. -82.7808 iterations 15
Cbc0038I Pass  73: suminf.    2.33518 (10) obj. -82.7808 iterations 0
Cbc0038I Pass  74: suminf.    2.01905 (9) obj. -78.9305 iterations 10
Cbc0038I Pass  75: suminf.    1.91169 (8) obj. -78.9305 iterations 3
Cbc0038I Pass  76: suminf.    2.10708 (7) obj. -78.9305 iterations 8
Cbc0038I Pass  77: suminf.    1.68003 (7) obj. -78.9305 iterations 4
Cbc0038I Pass  78: suminf.    2.01147 (7) obj. -78.9305 iterations 9
Cbc0038I Pass  79: suminf.    2.01147 (7) obj. -78.9305 iterations 2
Cbc0038I Pass  80: suminf.    2.11420 (7) obj. -78.9305 iterations 6
Cbc0038I Pass  81: suminf.    1.88626 (7) obj. -78.9305 iterations 2
Cbc0038I Pass  82: suminf.    2.96455 (10) obj. -78.9305 iterations 9
Cbc0038I Pass  83: suminf.    1.95741 (9) obj. -78.9305 iterations 6
Cbc0038I Pass  84: suminf.    2.11071 (7) obj. -78.9305 iterations 11
Cbc0038I Pass  85: suminf.    2.01147 (7) obj. -78.9305 iterations 4
Cbc0038I Pass  86: suminf.    2.11420 (7) obj. -78.9305 iterations 7
Cbc0038I Pass  87: suminf.    1.88626 (7) obj. -78.9305 iterations 2
Cbc0038I Pass  88: suminf.    2.01147 (7) obj. -78.9305 iterations 5
Cbc0038I Pass  89: suminf.    2.86849 (10) obj. -78.9305 iterations 11
Cbc0038I Pass  90: suminf.    2.86849 (10) obj. -78.9305 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -56.57 - took 0.09 seconds
Cbc0012I Integer solution of -56.56996 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 55 rows 59 columns, reduced to 32 rows 34 columns
Cbc0031I 29 added rows had average density of 12.724138
Cbc0013I At root node, 29 cuts changed objective from -116.65723 to -70.664367 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3811 row cuts average 3.8 elements, 6 column cuts (6 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 836 row cuts average 48.4 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 33 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 504 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 357 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 67 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.668 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -56.56996 best solution, best possible -70.664367 (1.57 seconds)
Cbc0012I Integer solution of -58.15279 found by rounding after 2459 iterations and 3 nodes (1.84 seconds)
Cbc0010I After 10 nodes, 2 on tree, -58.15279 best solution, best possible -68.771382 (2.28 seconds)
Cbc0001I Search completed - best objective -58.15279, took 3236 iterations and 12 nodes (2.31 seconds)
Cbc0032I Strong branching done 242 times (3990 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.61   (Wallclock seconds):       2.31

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 32 (-3) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 9.0507e-05 - average 1.56047e-06, 2 fixed columns
Coin0506I Presolve 54 (-4) rows, 30 (-2) columns and 160 (-12) elements
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 3.3278196 - largest nonzero change 1.3360784e-05 ( 0.00091204228%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 107.34904
Clp0000I Optimal - objective value 107.34904
Coin0511I After Postsolve, objective 107.34904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 107.34904
Clp0000I Optimal - objective value 107.34904
Clp0000I Optimal - objective value 107.34904
Coin0511I After Postsolve, objective 107.34904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.3490432 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 32 columns (31 integer (31 of which binary)) and 173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.788%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.28343
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -51.4171 iterations 19
Cbc0038I Solution found of -51.4171
Cbc0038I Relaxing continuous gives -51.4171
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -51.4171 to -52.7483 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.2085
Cbc0038I Pass   2: suminf.    0.22438 (6) obj. -58.2085 iterations 4
Cbc0038I Pass   3: suminf.    0.43934 (3) obj. -58.2085 iterations 13
Cbc0038I Pass   4: suminf.    0.41748 (2) obj. -58.2085 iterations 1
Cbc0038I Pass   5: suminf.    0.37580 (2) obj. -58.2085 iterations 2
Cbc0038I Pass   6: suminf.    0.86119 (3) obj. -58.2085 iterations 2
Cbc0038I Pass   7: suminf.    0.37580 (2) obj. -58.2085 iterations 2
Cbc0038I Pass   8: suminf.    1.24876 (4) obj. -58.2085 iterations 9
Cbc0038I Pass   9: suminf.    1.22033 (5) obj. -58.2085 iterations 4
Cbc0038I Pass  10: suminf.    0.90443 (3) obj. -58.2085 iterations 8
Cbc0038I Pass  11: suminf.    0.90443 (3) obj. -58.2085 iterations 0
Cbc0038I Pass  12: suminf.    1.27491 (3) obj. -58.2085 iterations 2
Cbc0038I Pass  13: suminf.    1.13962 (3) obj. -58.2085 iterations 4
Cbc0038I Pass  14: suminf.    0.56763 (3) obj. -58.2085 iterations 1
Cbc0038I Pass  15: suminf.    0.86502 (2) obj. -58.2085 iterations 2
Cbc0038I Pass  16: suminf.    0.81059 (2) obj. -58.2085 iterations 1
Cbc0038I Pass  17: suminf.    0.76923 (2) obj. -58.2085 iterations 2
Cbc0038I Pass  18: suminf.    0.76923 (2) obj. -58.2085 iterations 0
Cbc0038I Pass  19: suminf.    2.82058 (6) obj. -58.2085 iterations 15
Cbc0038I Pass  20: suminf.    1.64338 (9) obj. -58.2085 iterations 6
Cbc0038I Pass  21: suminf.    0.97260 (7) obj. -58.2085 iterations 3
Cbc0038I Pass  22: suminf.    0.92092 (2) obj. -58.2085 iterations 15
Cbc0038I Pass  23: suminf.    0.72013 (2) obj. -58.2085 iterations 1
Cbc0038I Pass  24: suminf.    0.68260 (2) obj. -58.2085 iterations 2
Cbc0038I Pass  25: suminf.    0.68260 (2) obj. -58.2085 iterations 0
Cbc0038I Pass  26: suminf.    0.47092 (4) obj. -58.2085 iterations 5
Cbc0038I Pass  27: suminf.    0.38628 (2) obj. -58.2085 iterations 2
Cbc0038I Pass  28: suminf.    0.68260 (2) obj. -58.2085 iterations 3
Cbc0038I Pass  29: suminf.    0.68260 (2) obj. -58.2085 iterations 0
Cbc0038I Pass  30: suminf.    0.79110 (2) obj. -58.2085 iterations 1
Cbc0038I Pass  31: suminf.    1.39767 (7) obj. -58.2085 iterations 6
Cbc0038I Rounding solution of -54.6433 is better than previous of -52.7483

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 46 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -68.0366
Cbc0038I Pass  31: suminf.    0.58554 (6) obj. -68.0366 iterations 1
Cbc0038I Pass  32: suminf.    0.92419 (3) obj. -68.0366 iterations 11
Cbc0038I Pass  33: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  34: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  35: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  36: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Pass  37: suminf.    0.91508 (3) obj. -68.0366 iterations 1
Cbc0038I Pass  38: suminf.    0.92419 (3) obj. -68.0366 iterations 2
Cbc0038I Pass  39: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  40: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  41: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  42: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Pass  43: suminf.    0.91508 (3) obj. -68.0366 iterations 1
Cbc0038I Pass  44: suminf.    0.92419 (3) obj. -68.0366 iterations 2
Cbc0038I Pass  45: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  46: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  47: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  48: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Pass  49: suminf.    0.91508 (3) obj. -68.0366 iterations 1
Cbc0038I Pass  50: suminf.    0.92419 (3) obj. -68.0366 iterations 2
Cbc0038I Pass  51: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  52: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  53: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  54: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Pass  55: suminf.    0.91508 (3) obj. -68.0366 iterations 1
Cbc0038I Pass  56: suminf.    0.92419 (3) obj. -68.0366 iterations 2
Cbc0038I Pass  57: suminf.    0.66605 (3) obj. -68.0366 iterations 3
Cbc0038I Pass  58: suminf.    0.97646 (4) obj. -68.0366 iterations 4
Cbc0038I Pass  59: suminf.    0.97181 (4) obj. -68.0366 iterations 1
Cbc0038I Pass  60: suminf.    0.99335 (4) obj. -68.0366 iterations 5
Cbc0038I Rounding solution of -58.1528 is better than previous of -54.6433

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -79.8303
Cbc0038I Pass  60: suminf.    1.13684 (6) obj. -79.8303 iterations 0
Cbc0038I Pass  61: suminf.    1.29624 (4) obj. -79.8303 iterations 13
Cbc0038I Pass  62: suminf.    1.28176 (4) obj. -79.8303 iterations 1
Cbc0038I Pass  63: suminf.    1.49576 (4) obj. -79.8303 iterations 2
Cbc0038I Pass  64: suminf.    1.29302 (4) obj. -79.8303 iterations 2
Cbc0038I Pass  65: suminf.    2.94072 (15) obj. -79.8303 iterations 16
Cbc0038I Pass  66: suminf.    1.17799 (5) obj. -79.8303 iterations 11
Cbc0038I Pass  67: suminf.    0.74532 (4) obj. -79.8303 iterations 5
Cbc0038I Pass  68: suminf.    0.72979 (5) obj. -79.8303 iterations 2
Cbc0038I Pass  69: suminf.    0.92662 (5) obj. -79.8303 iterations 11
Cbc0038I Pass  70: suminf.    0.90230 (4) obj. -79.8303 iterations 2
Cbc0038I Pass  71: suminf.    1.20503 (4) obj. -79.8303 iterations 3
Cbc0038I Pass  72: suminf.    0.99263 (5) obj. -79.8303 iterations 3
Cbc0038I Pass  73: suminf.    1.64668 (5) obj. -79.8303 iterations 4
Cbc0038I Pass  74: suminf.    1.30409 (5) obj. -79.8303 iterations 3
Cbc0038I Pass  75: suminf.    1.42305 (4) obj. -79.8303 iterations 4
Cbc0038I Pass  76: suminf.    0.95344 (3) obj. -79.8303 iterations 4
Cbc0038I Pass  77: suminf.    1.09282 (3) obj. -79.8303 iterations 1
Cbc0038I Pass  78: suminf.    3.35180 (10) obj. -79.8303 iterations 16
Cbc0038I Pass  79: suminf.    1.40053 (5) obj. -79.8303 iterations 5
Cbc0038I Pass  80: suminf.    1.53799 (5) obj. -79.8303 iterations 11
Cbc0038I Pass  81: suminf.    1.49477 (5) obj. -79.8303 iterations 2
Cbc0038I Pass  82: suminf.    1.94595 (6) obj. -79.8303 iterations 4
Cbc0038I Pass  83: suminf.    1.86047 (5) obj. -79.8303 iterations 4
Cbc0038I Pass  84: suminf.    1.51779 (5) obj. -79.8303 iterations 4
Cbc0038I Pass  85: suminf.    2.55813 (6) obj. -79.8303 iterations 13
Cbc0038I Pass  86: suminf.    2.01374 (5) obj. -79.8303 iterations 4
Cbc0038I Pass  87: suminf.    1.93119 (5) obj. -79.8303 iterations 2
Cbc0038I Pass  88: suminf.    1.91905 (5) obj. -79.8303 iterations 2
Cbc0038I Pass  89: suminf.    1.58277 (5) obj. -79.8303 iterations 5
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -88.0859
Cbc0038I Pass  89: suminf.    1.57129 (7) obj. -88.0859 iterations 1
Cbc0038I Pass  90: suminf.    1.86735 (6) obj. -88.0859 iterations 12
Cbc0038I Pass  91: suminf.    1.71151 (5) obj. -88.0859 iterations 3
Cbc0038I Pass  92: suminf.    2.74350 (7) obj. -88.0859 iterations 4
Cbc0038I Pass  93: suminf.    2.08622 (6) obj. -88.0859 iterations 2
Cbc0038I Pass  94: suminf.    2.08622 (6) obj. -88.0859 iterations 0
Cbc0038I Pass  95: suminf.    1.96429 (6) obj. -88.0859 iterations 3
Cbc0038I Pass  96: suminf.    1.72422 (6) obj. -88.0859 iterations 1
Cbc0038I Pass  97: suminf.    1.81637 (6) obj. -88.0859 iterations 5
Cbc0038I Pass  98: suminf.    1.71151 (5) obj. -88.0859 iterations 2
Cbc0038I Pass  99: suminf.    2.74350 (7) obj. -88.0859 iterations 4
Cbc0038I Pass 100: suminf.    2.08622 (6) obj. -88.0859 iterations 2
Cbc0038I Pass 101: suminf.    2.08622 (6) obj. -88.0859 iterations 0
Cbc0038I Pass 102: suminf.    1.96429 (6) obj. -88.0859 iterations 3
Cbc0038I Pass 103: suminf.    1.72422 (6) obj. -88.0859 iterations 1
Cbc0038I Pass 104: suminf.    1.81637 (6) obj. -88.0859 iterations 5
Cbc0038I Pass 105: suminf.    1.71151 (5) obj. -88.0859 iterations 2
Cbc0038I Pass 106: suminf.    2.74350 (7) obj. -88.0859 iterations 4
Cbc0038I Pass 107: suminf.    2.08622 (6) obj. -88.0859 iterations 2
Cbc0038I Pass 108: suminf.    2.08622 (6) obj. -88.0859 iterations 0
Cbc0038I Pass 109: suminf.    1.96429 (6) obj. -88.0859 iterations 3
Cbc0038I Pass 110: suminf.    1.72422 (6) obj. -88.0859 iterations 1
Cbc0038I Pass 111: suminf.    1.81637 (6) obj. -88.0859 iterations 5
Cbc0038I Pass 112: suminf.    1.71151 (5) obj. -88.0859 iterations 2
Cbc0038I Pass 113: suminf.    2.74350 (7) obj. -88.0859 iterations 4
Cbc0038I Pass 114: suminf.    2.08622 (6) obj. -88.0859 iterations 2
Cbc0038I Pass 115: suminf.    2.08622 (6) obj. -88.0859 iterations 0
Cbc0038I Pass 116: suminf.    1.96429 (6) obj. -88.0859 iterations 3
Cbc0038I Pass 117: suminf.    1.72422 (6) obj. -88.0859 iterations 1
Cbc0038I Pass 118: suminf.    1.81637 (6) obj. -88.0859 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 32 columns, reduced to 37 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -58.1528 - took 0.09 seconds
Cbc0012I Integer solution of -58.15279 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 58 rows 32 columns, reduced to 38 rows 24 columns
Cbc0031I 18 added rows had average density of 27.444444
Cbc0013I At root node, 18 cuts changed objective from -107.34904 to -85.411441 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1780 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 872 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 68 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58.15279, took 3410 iterations and 18 nodes (0.35 seconds)
Cbc0032I Strong branching done 236 times (3199 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 7, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 59 (-8) columns and 585 (-139) elements
Clp1000I sum of infeasibilities 4.42645e-08 - average 8.04809e-10, 37 fixed columns
Coin0506I Presolve 19 (-36) rows, 22 (-37) columns and 76 (-509) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.7559272 - largest nonzero change 2.8581677e-05 ( 0.001262127%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 58.295974
Clp0000I Optimal - objective value 58.295974
Coin0511I After Postsolve, objective 58.295974, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9766119 - largest nonzero change 2.8836486e-05 ( 0.0024275985%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 122.53604
Clp0000I Optimal - objective value 122.53604
Clp0000I Optimal - objective value 122.53604
Coin0511I After Postsolve, objective 122.53604, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.5360372 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 59 columns (59 integer (59 of which binary)) and 588 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.592%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 6.50009
Cbc0038I Pass   1: suminf.    1.83780 (15) obj. -50.7855 iterations 15
Cbc0038I Pass   2: suminf.    1.83780 (15) obj. -50.7855 iterations 0
Cbc0038I Solution found of -11.9618
Cbc0038I Rounding solution of -41.8025 is better than previous of -11.9618

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -49.2881
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.83780 (15) obj. -50.7855 iterations 0
Cbc0038I Pass   4: suminf.    1.83780 (15) obj. -50.7855 iterations 0
Cbc0038I Pass   5: suminf.    1.37930 (12) obj. -49.2881 iterations 21
Cbc0038I Pass   6: suminf.    1.37930 (12) obj. -49.2881 iterations 0
Cbc0038I Pass   7: suminf.    1.33484 (6) obj. -49.2881 iterations 17
Cbc0038I Pass   8: suminf.    1.33484 (6) obj. -49.2881 iterations 0
Cbc0038I Pass   9: suminf.    3.19607 (7) obj. -49.2881 iterations 6
Cbc0038I Pass  10: suminf.    1.17890 (4) obj. -49.2881 iterations 4
Cbc0038I Pass  11: suminf.    1.17890 (4) obj. -49.2881 iterations 0
Cbc0038I Pass  12: suminf.    1.61671 (4) obj. -49.2881 iterations 5
Cbc0038I Pass  13: suminf.    1.12770 (3) obj. -49.2881 iterations 5
Cbc0038I Pass  14: suminf.    1.10481 (3) obj. -49.2881 iterations 2
Cbc0038I Pass  15: suminf.    1.10481 (3) obj. -49.2881 iterations 1
Cbc0038I Pass  16: suminf.    1.35961 (3) obj. -49.2881 iterations 3
Cbc0038I Pass  17: suminf.    1.79206 (9) obj. -49.2881 iterations 17
Cbc0038I Pass  18: suminf.    1.79206 (9) obj. -49.2881 iterations 0
Cbc0038I Pass  19: suminf.    1.76258 (4) obj. -49.2881 iterations 11
Cbc0038I Pass  20: suminf.    1.50729 (4) obj. -49.2881 iterations 2
Cbc0038I Pass  21: suminf.    1.76258 (4) obj. -49.2881 iterations 4
Cbc0038I Pass  22: suminf.    1.84920 (6) obj. -49.2881 iterations 6
Cbc0038I Pass  23: suminf.    1.75709 (6) obj. -49.2881 iterations 4
Cbc0038I Pass  24: suminf.    1.03298 (4) obj. -49.2881 iterations 5
Cbc0038I Pass  25: suminf.    0.98248 (4) obj. -49.2881 iterations 3
Cbc0038I Pass  26: suminf.    0.21234 (2) obj. -50.572 iterations 4
Cbc0038I Pass  27: suminf.    0.12972 (2) obj. -49.2881 iterations 1
Cbc0038I Pass  28: suminf.    0.57750 (2) obj. -49.2881 iterations 4
Cbc0038I Pass  29: suminf.    0.57750 (2) obj. -49.2881 iterations 1
Cbc0038I Pass  30: suminf.    0.70090 (2) obj. -52.7704 iterations 1
Cbc0038I Pass  31: suminf.    2.30801 (13) obj. -49.2881 iterations 23
Cbc0038I Pass  32: suminf.    1.99074 (9) obj. -49.2881 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 42 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -11.9618 to -47.3917 (0.04 seconds)
Cbc0038I Round again with cutoff of -62.7619
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.56429 (26) obj. -62.7619 iterations 4
Cbc0038I Pass  33: suminf.    2.56429 (26) obj. -62.7619 iterations 0
Cbc0038I Pass  34: suminf.    1.64928 (14) obj. -62.7619 iterations 12
Cbc0038I Pass  35: suminf.    1.36330 (8) obj. -62.7619 iterations 22
Cbc0038I Pass  36: suminf.    1.13751 (4) obj. -62.7619 iterations 1
Cbc0038I Pass  37: suminf.    1.08921 (4) obj. -62.7619 iterations 5
Cbc0038I Pass  38: suminf.    0.82128 (3) obj. -63.0273 iterations 4
Cbc0038I Pass  39: suminf.    1.13751 (4) obj. -62.7619 iterations 5
Cbc0038I Pass  40: suminf.    2.96642 (13) obj. -62.7619 iterations 25
Cbc0038I Pass  41: suminf.    2.64562 (14) obj. -62.7619 iterations 4
Cbc0038I Pass  42: suminf.    1.45130 (6) obj. -62.7619 iterations 20
Cbc0038I Pass  43: suminf.    1.43060 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  44: suminf.    1.57772 (6) obj. -62.7619 iterations 4
Cbc0038I Pass  45: suminf.    1.57772 (6) obj. -62.7619 iterations 3
Cbc0038I Pass  46: suminf.    1.43060 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  47: suminf.    1.99877 (10) obj. -62.7619 iterations 11
Cbc0038I Pass  48: suminf.    1.60922 (8) obj. -62.7619 iterations 3
Cbc0038I Pass  49: suminf.    1.29474 (5) obj. -62.7619 iterations 16
Cbc0038I Pass  50: suminf.    1.27362 (8) obj. -62.7619 iterations 4
Cbc0038I Pass  51: suminf.    1.97054 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  52: suminf.    1.97054 (6) obj. -62.7619 iterations 2
Cbc0038I Pass  53: suminf.    1.87982 (6) obj. -62.7619 iterations 4
Cbc0038I Pass  54: suminf.    1.87982 (6) obj. -62.7619 iterations 3
Cbc0038I Pass  55: suminf.    1.97054 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  56: suminf.    1.33396 (8) obj. -67.0852 iterations 12
Cbc0038I Pass  57: suminf.    1.26104 (7) obj. -66.0913 iterations 3
Cbc0038I Pass  58: suminf.    1.29474 (5) obj. -62.7619 iterations 13
Cbc0038I Pass  59: suminf.    1.27362 (8) obj. -62.7619 iterations 4
Cbc0038I Pass  60: suminf.    1.97054 (6) obj. -62.7619 iterations 5
Cbc0038I Pass  61: suminf.    1.97054 (6) obj. -62.7619 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 44 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -47.3917 to -56.57 (0.09 seconds)
Cbc0038I Round again with cutoff of -78.9305
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.44617 (26) obj. -78.9305 iterations 0
Cbc0038I Pass  62: suminf.    3.44617 (26) obj. -78.9305 iterations 0
Cbc0038I Pass  63: suminf.    1.65830 (13) obj. -78.9305 iterations 26
Cbc0038I Pass  64: suminf.    1.65830 (13) obj. -78.9305 iterations 0
Cbc0038I Pass  65: suminf.    3.74188 (12) obj. -78.9305 iterations 11
Cbc0038I Pass  66: suminf.    1.54175 (7) obj. -78.9305 iterations 4
Cbc0038I Pass  67: suminf.    1.54175 (7) obj. -78.9305 iterations 0
Cbc0038I Pass  68: suminf.    2.02471 (8) obj. -78.9305 iterations 6
Cbc0038I Pass  69: suminf.    2.02471 (8) obj. -78.9305 iterations 1
Cbc0038I Pass  70: suminf.    1.80691 (7) obj. -78.9305 iterations 3
Cbc0038I Pass  71: suminf.    1.78265 (7) obj. -78.9305 iterations 3
Cbc0038I Pass  72: suminf.    2.33518 (10) obj. -82.7808 iterations 15
Cbc0038I Pass  73: suminf.    2.33518 (10) obj. -82.7808 iterations 0
Cbc0038I Pass  74: suminf.    2.01905 (9) obj. -78.9305 iterations 10
Cbc0038I Pass  75: suminf.    1.91169 (8) obj. -78.9305 iterations 3
Cbc0038I Pass  76: suminf.    2.10708 (7) obj. -78.9305 iterations 8
Cbc0038I Pass  77: suminf.    1.68003 (7) obj. -78.9305 iterations 4
Cbc0038I Pass  78: suminf.    2.01147 (7) obj. -78.9305 iterations 9
Cbc0038I Pass  79: suminf.    2.01147 (7) obj. -78.9305 iterations 2
Cbc0038I Pass  80: suminf.    2.11420 (7) obj. -78.9305 iterations 6
Cbc0038I Pass  81: suminf.    1.88626 (7) obj. -78.9305 iterations 2
Cbc0038I Pass  82: suminf.    2.96455 (10) obj. -78.9305 iterations 9
Cbc0038I Pass  83: suminf.    1.95741 (9) obj. -78.9305 iterations 6
Cbc0038I Pass  84: suminf.    2.11071 (7) obj. -78.9305 iterations 11
Cbc0038I Pass  85: suminf.    2.01147 (7) obj. -78.9305 iterations 4
Cbc0038I Pass  86: suminf.    2.11420 (7) obj. -78.9305 iterations 7
Cbc0038I Pass  87: suminf.    1.88626 (7) obj. -78.9305 iterations 2
Cbc0038I Pass  88: suminf.    2.01147 (7) obj. -78.9305 iterations 5
Cbc0038I Pass  89: suminf.    2.86849 (10) obj. -78.9305 iterations 11
Cbc0038I Pass  90: suminf.    2.86849 (10) obj. -78.9305 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 59 columns, reduced to 29 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -56.57 - took 0.08 seconds
Cbc0012I Integer solution of -56.56996 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 55 rows 59 columns, reduced to 32 rows 34 columns
Cbc0031I 29 added rows had average density of 12.724138
Cbc0013I At root node, 29 cuts changed objective from -116.65723 to -70.664367 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3811 row cuts average 3.8 elements, 6 column cuts (6 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 836 row cuts average 48.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 33 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 504 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 357 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 67 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.710 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -56.56996 best solution, best possible -70.664367 (1.70 seconds)
Cbc0012I Integer solution of -58.15279 found by rounding after 2459 iterations and 3 nodes (1.97 seconds)
Cbc0010I After 10 nodes, 2 on tree, -58.15279 best solution, best possible -68.771382 (2.41 seconds)
Cbc0001I Search completed - best objective -58.15279, took 3236 iterations and 12 nodes (2.45 seconds)
Cbc0032I Strong branching done 242 times (3990 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       2.45

