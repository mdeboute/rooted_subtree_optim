Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-37) rows, 63 (-15) columns and 356 (-97) elements
Clp1000I sum of infeasibilities 6.40406e-06 - average 5.42717e-08, 16 fixed columns
Coin0506I Presolve 82 (-36) rows, 45 (-18) columns and 248 (-108) elements
Clp0029I End of values pass after 45 iterations
Clp0000I Optimal - objective value 225.20259
Clp0000I Optimal - objective value 225.20259
Coin0511I After Postsolve, objective 225.20259, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 225.20259
Clp0000I Optimal - objective value 225.20259
Clp0000I Optimal - objective value 225.20259
Coin0511I After Postsolve, objective 225.20259, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 225.2025941 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 118 rows, 63 columns (62 integer (62 of which binary)) and 356 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.450%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.77057
Cbc0038I Pass   1: suminf.    0.41198 (3) obj. -198.67 iterations 17
Cbc0038I Solution found of -124.794
Cbc0038I Relaxing continuous gives -124.794
Cbc0038I Rounding solution of -157.547 is better than previous of -124.794

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 63 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -157.547 to -205.149 (0.01 seconds)
Cbc0038I Round again with cutoff of -207.154
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.46889 (7) obj. -207.154 iterations 2
Cbc0038I Pass   3: suminf.    2.45615 (12) obj. -207.154 iterations 20
Cbc0038I Pass   4: suminf.    0.14043 (2) obj. -208.504 iterations 15
Cbc0038I Pass   5: suminf.    0.17875 (2) obj. -207.154 iterations 4
Cbc0038I Pass   6: suminf.    0.32413 (5) obj. -207.154 iterations 11
Cbc0038I Pass   7: suminf.    2.93703 (11) obj. -207.154 iterations 14
Cbc0038I Pass   8: suminf.    1.99451 (11) obj. -207.154 iterations 15
Cbc0038I Pass   9: suminf.    0.31524 (9) obj. -207.154 iterations 14
Cbc0038I Pass  10: suminf.    1.64337 (6) obj. -207.154 iterations 20
Cbc0038I Pass  11: suminf.    0.85862 (7) obj. -207.154 iterations 5
Cbc0038I Pass  12: suminf.    2.61731 (8) obj. -207.154 iterations 10
Cbc0038I Pass  13: suminf.    1.99338 (6) obj. -207.154 iterations 8
Cbc0038I Pass  14: suminf.    1.92604 (6) obj. -207.154 iterations 6
Cbc0038I Pass  15: suminf.    2.16256 (10) obj. -207.154 iterations 9
Cbc0038I Pass  16: suminf.    0.14043 (2) obj. -208.504 iterations 17
Cbc0038I Pass  17: suminf.    0.17875 (2) obj. -207.154 iterations 4
Cbc0038I Pass  18: suminf.    1.52920 (5) obj. -207.154 iterations 18
Cbc0038I Pass  19: suminf.    0.85474 (5) obj. -207.154 iterations 7
Cbc0038I Pass  20: suminf.    1.64337 (6) obj. -207.154 iterations 15
Cbc0038I Pass  21: suminf.    0.85862 (7) obj. -207.154 iterations 5
Cbc0038I Pass  22: suminf.    2.61731 (8) obj. -207.154 iterations 10
Cbc0038I Pass  23: suminf.    1.99338 (6) obj. -207.154 iterations 8
Cbc0038I Pass  24: suminf.    1.92604 (6) obj. -207.154 iterations 6
Cbc0038I Pass  25: suminf.    2.16256 (10) obj. -207.154 iterations 9
Cbc0038I Pass  26: suminf.    0.14043 (2) obj. -208.504 iterations 17
Cbc0038I Pass  27: suminf.    0.17875 (2) obj. -207.154 iterations 4
Cbc0038I Pass  28: suminf.    4.72980 (16) obj. -207.154 iterations 16
Cbc0038I Pass  29: suminf.    2.09498 (7) obj. -207.154 iterations 12
Cbc0038I Pass  30: suminf.    1.68660 (6) obj. -207.154 iterations 9
Cbc0038I Pass  31: suminf.    1.74645 (7) obj. -207.154 iterations 11
Cbc0038I Rounding solution of -207.878 is better than previous of -205.149

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 63 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -207.878 to -208.614 (0.02 seconds)
Cbc0038I Round again with cutoff of -211.932
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.50192 (7) obj. -211.932 iterations 0
Cbc0038I Pass  32: suminf.    2.70449 (8) obj. -211.932 iterations 19
Cbc0038I Pass  33: suminf.    0.81751 (13) obj. -211.932 iterations 5
Cbc0038I Pass  34: suminf.    4.08234 (11) obj. -211.932 iterations 13
Cbc0038I Pass  35: suminf.    3.94564 (12) obj. -211.932 iterations 2
Cbc0038I Pass  36: suminf.    0.81751 (13) obj. -211.932 iterations 22
Cbc0038I Pass  37: suminf.    0.86420 (9) obj. -211.932 iterations 6
Cbc0038I Pass  38: suminf.    1.34288 (10) obj. -211.932 iterations 7
Cbc0038I Pass  39: suminf.    1.27696 (10) obj. -211.932 iterations 3
Cbc0038I Pass  40: suminf.    0.62011 (3) obj. -211.932 iterations 14
Cbc0038I Pass  41: suminf.    0.50192 (7) obj. -211.932 iterations 11
Cbc0038I Pass  42: suminf.    2.70449 (8) obj. -211.932 iterations 21
Cbc0038I Pass  43: suminf.    0.81751 (13) obj. -211.932 iterations 5
Cbc0038I Pass  44: suminf.    4.08234 (11) obj. -211.932 iterations 13
Cbc0038I Pass  45: suminf.    3.94564 (12) obj. -211.932 iterations 2
Cbc0038I Pass  46: suminf.    0.81751 (13) obj. -211.932 iterations 24
Cbc0038I Pass  47: suminf.    1.62985 (7) obj. -211.932 iterations 13
Cbc0038I Pass  48: suminf.    1.28513 (7) obj. -211.932 iterations 2
Cbc0038I Pass  49: suminf.    1.13002 (9) obj. -211.932 iterations 7
Cbc0038I Pass  50: suminf.    1.54198 (4) obj. -211.932 iterations 12
Cbc0038I Pass  51: suminf.    1.54198 (4) obj. -211.932 iterations 0
Cbc0038I Pass  52: suminf.    0.40492 (4) obj. -211.932 iterations 8
Cbc0038I Pass  53: suminf.    0.43552 (6) obj. -211.932 iterations 1
Cbc0038I Pass  54: suminf.    0.40492 (4) obj. -211.932 iterations 1
Cbc0038I Pass  55: suminf.    1.81736 (7) obj. -211.932 iterations 8
Cbc0038I Pass  56: suminf.    1.04267 (6) obj. -211.932 iterations 5
Cbc0038I Pass  57: suminf.    2.18682 (6) obj. -211.932 iterations 9
Cbc0038I Pass  58: suminf.    2.17409 (6) obj. -211.932 iterations 2
Cbc0038I Pass  59: suminf.    1.14968 (6) obj. -211.932 iterations 15
Cbc0038I Pass  60: suminf.    2.44486 (6) obj. -211.932 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 63 columns, reduced to 22 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -208.614 - took 0.03 seconds
Cbc0012I Integer solution of -208.61372 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 118 rows 63 columns, reduced to 16 rows 14 columns
Cbc0031I 7 added rows had average density of 15.857143
Cbc0013I At root node, 7 cuts changed objective from -225.20259 to -209.31085 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 47 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -208.61372, took 117 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 20 times (92 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-56) rows, 104 (-48) columns and 1522 (-1781) elements
Clp1000I sum of infeasibilities 1.40354e-07 - average 1.43218e-09, 65 fixed columns
Coin0506I Presolve 33 (-65) rows, 39 (-65) columns and 140 (-1382) elements
Clp0029I End of values pass after 39 iterations
Clp0014I Perturbing problem by 0.001% of 3.8131195 - largest nonzero change 2.6996087e-05 ( 0.00085132148%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 197.2126
Clp0000I Optimal - objective value 197.2126
Coin0511I After Postsolve, objective 197.2126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9981807 - largest nonzero change 1.8383717e-05 ( 0.0010393299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 255.99505
Clp0000I Optimal - objective value 255.99505
Clp0000I Optimal - objective value 255.99505
Coin0511I After Postsolve, objective 255.99505, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 255.995046 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 104 columns (104 integer (104 of which binary)) and 1524 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.469%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 5.56847
Cbc0038I Pass   1: suminf.    2.60032 (29) obj. -241.453 iterations 15
Cbc0038I Pass   2: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass   3: suminf.    1.15222 (16) obj. -223.722 iterations 13
Cbc0038I Pass   4: suminf.    0.05882 (1) obj. -207.031 iterations 15
Cbc0038I Solution found of -205.149
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 104 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -209.67
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass   6: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass   7: suminf.    0.21387 (7) obj. -209.67 iterations 35
Cbc0038I Pass   8: suminf.    0.18119 (4) obj. -209.67 iterations 17
Cbc0038I Pass   9: suminf.    0.18119 (4) obj. -209.67 iterations 7
Cbc0038I Pass  10: suminf.    0.18119 (4) obj. -209.67 iterations 5
Cbc0038I Pass  11: suminf.    0.81916 (6) obj. -209.67 iterations 19
Cbc0038I Pass  12: suminf.    0.81916 (6) obj. -209.67 iterations 3
Cbc0038I Pass  13: suminf.    1.01874 (15) obj. -209.67 iterations 16
Cbc0038I Pass  14: suminf.    1.01874 (15) obj. -209.67 iterations 0
Cbc0038I Pass  15: suminf.    1.05237 (11) obj. -209.67 iterations 25
Cbc0038I Pass  16: suminf.    0.88695 (11) obj. -209.67 iterations 5
Cbc0038I Pass  17: suminf.    1.90421 (10) obj. -209.67 iterations 11
Cbc0038I Pass  18: suminf.    2.30548 (24) obj. -209.67 iterations 28
Cbc0038I Pass  19: suminf.    2.24923 (15) obj. -209.67 iterations 13
Cbc0038I Pass  20: suminf.    1.05237 (11) obj. -209.67 iterations 27
Cbc0038I Pass  21: suminf.    2.55476 (18) obj. -209.67 iterations 13
Cbc0038I Pass  22: suminf.    1.59695 (14) obj. -209.67 iterations 11
Cbc0038I Pass  23: suminf.    0.88084 (11) obj. -209.67 iterations 6
Cbc0038I Pass  24: suminf.    0.76431 (10) obj. -209.67 iterations 8
Cbc0038I Pass  25: suminf.    2.00684 (11) obj. -209.67 iterations 16
Cbc0038I Pass  26: suminf.    1.28107 (13) obj. -209.67 iterations 6
Cbc0038I Pass  27: suminf.    1.05237 (11) obj. -209.67 iterations 5
Cbc0038I Pass  28: suminf.    0.88695 (11) obj. -209.67 iterations 4
Cbc0038I Pass  29: suminf.    1.90421 (10) obj. -209.67 iterations 10
Cbc0038I Pass  30: suminf.    2.01805 (14) obj. -209.67 iterations 17
Cbc0038I Pass  31: suminf.    1.39084 (15) obj. -209.67 iterations 11
Cbc0038I Pass  32: suminf.    2.10597 (22) obj. -209.67 iterations 23
Cbc0038I Pass  33: suminf.    1.94688 (14) obj. -209.67 iterations 9
Cbc0038I Pass  34: suminf.    1.05237 (11) obj. -209.67 iterations 25
Cbc0038I Rounding solution of -208.614 is better than previous of -205.149

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 104 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -217.808
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass  35: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass  36: suminf.    0.90045 (13) obj. -220.057 iterations 16
Cbc0038I Pass  37: suminf.    1.01039 (15) obj. -217.808 iterations 37
Cbc0038I Pass  38: suminf.    1.01039 (15) obj. -217.808 iterations 0
Cbc0038I Pass  39: suminf.    2.22085 (13) obj. -217.808 iterations 23
Cbc0038I Pass  40: suminf.    1.47282 (14) obj. -217.808 iterations 1
Cbc0038I Pass  41: suminf.    2.13312 (13) obj. -217.808 iterations 5
Cbc0038I Pass  42: suminf.    1.29744 (14) obj. -217.808 iterations 4
Cbc0038I Pass  43: suminf.    1.47282 (14) obj. -217.808 iterations 9
Cbc0038I Pass  44: suminf.    1.49290 (17) obj. -217.808 iterations 17
Cbc0038I Pass  45: suminf.    1.49290 (17) obj. -217.808 iterations 0
Cbc0038I Pass  46: suminf.    2.22085 (13) obj. -217.808 iterations 16
Cbc0038I Pass  47: suminf.    1.47282 (14) obj. -217.808 iterations 4
Cbc0038I Pass  48: suminf.    2.13312 (13) obj. -217.808 iterations 5
Cbc0038I Pass  49: suminf.    1.29744 (14) obj. -217.808 iterations 4
Cbc0038I Pass  50: suminf.    2.22085 (13) obj. -217.808 iterations 10
Cbc0038I Pass  51: suminf.    2.58531 (15) obj. -217.808 iterations 13
Cbc0038I Pass  52: suminf.    1.84641 (16) obj. -217.808 iterations 2
Cbc0038I Pass  53: suminf.    1.47282 (14) obj. -217.808 iterations 10
Cbc0038I Pass  54: suminf.    1.47282 (14) obj. -217.808 iterations 0
Cbc0038I Pass  55: suminf.    1.29744 (14) obj. -217.808 iterations 1
Cbc0038I Pass  56: suminf.    1.29744 (14) obj. -217.808 iterations 0
Cbc0038I Pass  57: suminf.    2.22085 (13) obj. -217.808 iterations 10
Cbc0038I Pass  58: suminf.    3.97431 (18) obj. -217.808 iterations 19
Cbc0038I Pass  59: suminf.    1.78296 (16) obj. -217.808 iterations 19
Cbc0038I Pass  60: suminf.    1.68509 (11) obj. -217.808 iterations 31
Cbc0038I Pass  61: suminf.    1.47282 (14) obj. -217.808 iterations 1
Cbc0038I Pass  62: suminf.    2.13312 (13) obj. -217.808 iterations 5
Cbc0038I Pass  63: suminf.    1.29744 (14) obj. -217.808 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 104 columns, reduced to 30 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -208.614 - took 0.11 seconds
Cbc0012I Integer solution of -208.61372 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 98 rows 104 columns, reduced to 7 rows 8 columns
Cbc0031I 23 added rows had average density of 6.8695652
Cbc0013I At root node, 58 cuts changed objective from -250.36144 to -208.61374 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 414 row cuts average 10.4 elements, 26 column cuts (26 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 47.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 31.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 39.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 1.7242536e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -208.61372, took 173 iterations and 0 nodes (0.25 seconds)
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.25

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-37) rows, 63 (-15) columns and 356 (-97) elements
Clp1000I sum of infeasibilities 6.40406e-06 - average 5.42717e-08, 16 fixed columns
Coin0506I Presolve 82 (-36) rows, 45 (-18) columns and 248 (-108) elements
Clp0029I End of values pass after 45 iterations
Clp0000I Optimal - objective value 225.20259
Clp0000I Optimal - objective value 225.20259
Coin0511I After Postsolve, objective 225.20259, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 225.20259
Clp0000I Optimal - objective value 225.20259
Clp0000I Optimal - objective value 225.20259
Coin0511I After Postsolve, objective 225.20259, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 225.2025941 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 118 rows, 63 columns (62 integer (62 of which binary)) and 356 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.450%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.77057
Cbc0038I Pass   1: suminf.    0.41198 (3) obj. -198.67 iterations 17
Cbc0038I Solution found of -124.794
Cbc0038I Relaxing continuous gives -124.794
Cbc0038I Rounding solution of -157.547 is better than previous of -124.794

Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 63 columns, reduced to 17 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -157.547 to -205.149 (0.01 seconds)
Cbc0038I Round again with cutoff of -207.154
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.46889 (7) obj. -207.154 iterations 2
Cbc0038I Pass   3: suminf.    2.45615 (12) obj. -207.154 iterations 20
Cbc0038I Pass   4: suminf.    0.14043 (2) obj. -208.504 iterations 15
Cbc0038I Pass   5: suminf.    0.17875 (2) obj. -207.154 iterations 4
Cbc0038I Pass   6: suminf.    0.32413 (5) obj. -207.154 iterations 11
Cbc0038I Pass   7: suminf.    2.93703 (11) obj. -207.154 iterations 14
Cbc0038I Pass   8: suminf.    1.99451 (11) obj. -207.154 iterations 15
Cbc0038I Pass   9: suminf.    0.31524 (9) obj. -207.154 iterations 14
Cbc0038I Pass  10: suminf.    1.64337 (6) obj. -207.154 iterations 20
Cbc0038I Pass  11: suminf.    0.85862 (7) obj. -207.154 iterations 5
Cbc0038I Pass  12: suminf.    2.61731 (8) obj. -207.154 iterations 10
Cbc0038I Pass  13: suminf.    1.99338 (6) obj. -207.154 iterations 8
Cbc0038I Pass  14: suminf.    1.92604 (6) obj. -207.154 iterations 6
Cbc0038I Pass  15: suminf.    2.16256 (10) obj. -207.154 iterations 9
Cbc0038I Pass  16: suminf.    0.14043 (2) obj. -208.504 iterations 17
Cbc0038I Pass  17: suminf.    0.17875 (2) obj. -207.154 iterations 4
Cbc0038I Pass  18: suminf.    1.52920 (5) obj. -207.154 iterations 18
Cbc0038I Pass  19: suminf.    0.85474 (5) obj. -207.154 iterations 7
Cbc0038I Pass  20: suminf.    1.64337 (6) obj. -207.154 iterations 15
Cbc0038I Pass  21: suminf.    0.85862 (7) obj. -207.154 iterations 5
Cbc0038I Pass  22: suminf.    2.61731 (8) obj. -207.154 iterations 10
Cbc0038I Pass  23: suminf.    1.99338 (6) obj. -207.154 iterations 8
Cbc0038I Pass  24: suminf.    1.92604 (6) obj. -207.154 iterations 6
Cbc0038I Pass  25: suminf.    2.16256 (10) obj. -207.154 iterations 9
Cbc0038I Pass  26: suminf.    0.14043 (2) obj. -208.504 iterations 17
Cbc0038I Pass  27: suminf.    0.17875 (2) obj. -207.154 iterations 4
Cbc0038I Pass  28: suminf.    4.72980 (16) obj. -207.154 iterations 16
Cbc0038I Pass  29: suminf.    2.09498 (7) obj. -207.154 iterations 12
Cbc0038I Pass  30: suminf.    1.68660 (6) obj. -207.154 iterations 9
Cbc0038I Pass  31: suminf.    1.74645 (7) obj. -207.154 iterations 11
Cbc0038I Rounding solution of -207.878 is better than previous of -205.149

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 63 columns, reduced to 40 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -207.878 to -208.614 (0.03 seconds)
Cbc0038I Round again with cutoff of -211.932
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.50192 (7) obj. -211.932 iterations 0
Cbc0038I Pass  32: suminf.    2.70449 (8) obj. -211.932 iterations 19
Cbc0038I Pass  33: suminf.    0.81751 (13) obj. -211.932 iterations 5
Cbc0038I Pass  34: suminf.    4.08234 (11) obj. -211.932 iterations 13
Cbc0038I Pass  35: suminf.    3.94564 (12) obj. -211.932 iterations 2
Cbc0038I Pass  36: suminf.    0.81751 (13) obj. -211.932 iterations 22
Cbc0038I Pass  37: suminf.    0.86420 (9) obj. -211.932 iterations 6
Cbc0038I Pass  38: suminf.    1.34288 (10) obj. -211.932 iterations 7
Cbc0038I Pass  39: suminf.    1.27696 (10) obj. -211.932 iterations 3
Cbc0038I Pass  40: suminf.    0.62011 (3) obj. -211.932 iterations 14
Cbc0038I Pass  41: suminf.    0.50192 (7) obj. -211.932 iterations 11
Cbc0038I Pass  42: suminf.    2.70449 (8) obj. -211.932 iterations 21
Cbc0038I Pass  43: suminf.    0.81751 (13) obj. -211.932 iterations 5
Cbc0038I Pass  44: suminf.    4.08234 (11) obj. -211.932 iterations 13
Cbc0038I Pass  45: suminf.    3.94564 (12) obj. -211.932 iterations 2
Cbc0038I Pass  46: suminf.    0.81751 (13) obj. -211.932 iterations 24
Cbc0038I Pass  47: suminf.    1.62985 (7) obj. -211.932 iterations 13
Cbc0038I Pass  48: suminf.    1.28513 (7) obj. -211.932 iterations 2
Cbc0038I Pass  49: suminf.    1.13002 (9) obj. -211.932 iterations 7
Cbc0038I Pass  50: suminf.    1.54198 (4) obj. -211.932 iterations 12
Cbc0038I Pass  51: suminf.    1.54198 (4) obj. -211.932 iterations 0
Cbc0038I Pass  52: suminf.    0.40492 (4) obj. -211.932 iterations 8
Cbc0038I Pass  53: suminf.    0.43552 (6) obj. -211.932 iterations 1
Cbc0038I Pass  54: suminf.    0.40492 (4) obj. -211.932 iterations 1
Cbc0038I Pass  55: suminf.    1.81736 (7) obj. -211.932 iterations 8
Cbc0038I Pass  56: suminf.    1.04267 (6) obj. -211.932 iterations 5
Cbc0038I Pass  57: suminf.    2.18682 (6) obj. -211.932 iterations 9
Cbc0038I Pass  58: suminf.    2.17409 (6) obj. -211.932 iterations 2
Cbc0038I Pass  59: suminf.    1.14968 (6) obj. -211.932 iterations 15
Cbc0038I Pass  60: suminf.    2.44486 (6) obj. -211.932 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 63 columns, reduced to 22 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -208.614 - took 0.04 seconds
Cbc0012I Integer solution of -208.61372 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 118 rows 63 columns, reduced to 16 rows 14 columns
Cbc0031I 7 added rows had average density of 15.857143
Cbc0013I At root node, 7 cuts changed objective from -225.20259 to -209.31085 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 47 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -208.61372, took 117 iterations and 2 nodes (0.07 seconds)
Cbc0032I Strong branching done 20 times (92 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 104 (-49) columns and 1522 (-1782) elements
Clp1000I sum of infeasibilities 1.40354e-07 - average 1.43218e-09, 65 fixed columns
Coin0506I Presolve 33 (-65) rows, 39 (-65) columns and 140 (-1382) elements
Clp0029I End of values pass after 39 iterations
Clp0014I Perturbing problem by 0.001% of 3.8131195 - largest nonzero change 2.6996087e-05 ( 0.00085132148%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 197.2126
Clp0000I Optimal - objective value 197.2126
Coin0511I After Postsolve, objective 197.2126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9981807 - largest nonzero change 1.8383717e-05 ( 0.0010393299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 255.99505
Clp0000I Optimal - objective value 255.99505
Clp0000I Optimal - objective value 255.99505
Coin0511I After Postsolve, objective 255.99505, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 255.995046 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 104 columns (104 integer (104 of which binary)) and 1524 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.469%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 5.56847
Cbc0038I Pass   1: suminf.    2.60032 (29) obj. -241.453 iterations 15
Cbc0038I Pass   2: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass   3: suminf.    1.15222 (16) obj. -223.722 iterations 13
Cbc0038I Pass   4: suminf.    0.05882 (1) obj. -207.031 iterations 15
Cbc0038I Solution found of -205.149
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 104 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -209.67
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass   6: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass   7: suminf.    0.21387 (7) obj. -209.67 iterations 35
Cbc0038I Pass   8: suminf.    0.18119 (4) obj. -209.67 iterations 17
Cbc0038I Pass   9: suminf.    0.18119 (4) obj. -209.67 iterations 7
Cbc0038I Pass  10: suminf.    0.18119 (4) obj. -209.67 iterations 5
Cbc0038I Pass  11: suminf.    0.81916 (6) obj. -209.67 iterations 19
Cbc0038I Pass  12: suminf.    0.81916 (6) obj. -209.67 iterations 3
Cbc0038I Pass  13: suminf.    1.01874 (15) obj. -209.67 iterations 16
Cbc0038I Pass  14: suminf.    1.01874 (15) obj. -209.67 iterations 0
Cbc0038I Pass  15: suminf.    1.05237 (11) obj. -209.67 iterations 25
Cbc0038I Pass  16: suminf.    0.88695 (11) obj. -209.67 iterations 5
Cbc0038I Pass  17: suminf.    1.90421 (10) obj. -209.67 iterations 11
Cbc0038I Pass  18: suminf.    2.30548 (24) obj. -209.67 iterations 28
Cbc0038I Pass  19: suminf.    2.24923 (15) obj. -209.67 iterations 13
Cbc0038I Pass  20: suminf.    1.05237 (11) obj. -209.67 iterations 27
Cbc0038I Pass  21: suminf.    2.55476 (18) obj. -209.67 iterations 13
Cbc0038I Pass  22: suminf.    1.59695 (14) obj. -209.67 iterations 11
Cbc0038I Pass  23: suminf.    0.88084 (11) obj. -209.67 iterations 6
Cbc0038I Pass  24: suminf.    0.76431 (10) obj. -209.67 iterations 8
Cbc0038I Pass  25: suminf.    2.00684 (11) obj. -209.67 iterations 16
Cbc0038I Pass  26: suminf.    1.28107 (13) obj. -209.67 iterations 6
Cbc0038I Pass  27: suminf.    1.05237 (11) obj. -209.67 iterations 5
Cbc0038I Pass  28: suminf.    0.88695 (11) obj. -209.67 iterations 4
Cbc0038I Pass  29: suminf.    1.90421 (10) obj. -209.67 iterations 10
Cbc0038I Pass  30: suminf.    2.01805 (14) obj. -209.67 iterations 17
Cbc0038I Pass  31: suminf.    1.39084 (15) obj. -209.67 iterations 11
Cbc0038I Pass  32: suminf.    2.10597 (22) obj. -209.67 iterations 23
Cbc0038I Pass  33: suminf.    1.94688 (14) obj. -209.67 iterations 9
Cbc0038I Pass  34: suminf.    1.05237 (11) obj. -209.67 iterations 25
Cbc0038I Rounding solution of -208.614 is better than previous of -205.149

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 104 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -217.808
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass  35: suminf.    2.60032 (29) obj. -241.453 iterations 0
Cbc0038I Pass  36: suminf.    0.90045 (13) obj. -220.057 iterations 16
Cbc0038I Pass  37: suminf.    1.01039 (15) obj. -217.808 iterations 37
Cbc0038I Pass  38: suminf.    1.01039 (15) obj. -217.808 iterations 0
Cbc0038I Pass  39: suminf.    2.22085 (13) obj. -217.808 iterations 23
Cbc0038I Pass  40: suminf.    1.47282 (14) obj. -217.808 iterations 1
Cbc0038I Pass  41: suminf.    2.13312 (13) obj. -217.808 iterations 5
Cbc0038I Pass  42: suminf.    1.29744 (14) obj. -217.808 iterations 4
Cbc0038I Pass  43: suminf.    1.47282 (14) obj. -217.808 iterations 9
Cbc0038I Pass  44: suminf.    1.49290 (17) obj. -217.808 iterations 17
Cbc0038I Pass  45: suminf.    1.49290 (17) obj. -217.808 iterations 0
Cbc0038I Pass  46: suminf.    2.22085 (13) obj. -217.808 iterations 16
Cbc0038I Pass  47: suminf.    1.47282 (14) obj. -217.808 iterations 4
Cbc0038I Pass  48: suminf.    2.13312 (13) obj. -217.808 iterations 5
Cbc0038I Pass  49: suminf.    1.29744 (14) obj. -217.808 iterations 4
Cbc0038I Pass  50: suminf.    2.22085 (13) obj. -217.808 iterations 10
Cbc0038I Pass  51: suminf.    2.58531 (15) obj. -217.808 iterations 13
Cbc0038I Pass  52: suminf.    1.84641 (16) obj. -217.808 iterations 2
Cbc0038I Pass  53: suminf.    1.47282 (14) obj. -217.808 iterations 10
Cbc0038I Pass  54: suminf.    1.47282 (14) obj. -217.808 iterations 0
Cbc0038I Pass  55: suminf.    1.29744 (14) obj. -217.808 iterations 1
Cbc0038I Pass  56: suminf.    1.29744 (14) obj. -217.808 iterations 0
Cbc0038I Pass  57: suminf.    2.22085 (13) obj. -217.808 iterations 10
Cbc0038I Pass  58: suminf.    3.97431 (18) obj. -217.808 iterations 19
Cbc0038I Pass  59: suminf.    1.78296 (16) obj. -217.808 iterations 19
Cbc0038I Pass  60: suminf.    1.68509 (11) obj. -217.808 iterations 31
Cbc0038I Pass  61: suminf.    1.47282 (14) obj. -217.808 iterations 1
Cbc0038I Pass  62: suminf.    2.13312 (13) obj. -217.808 iterations 5
Cbc0038I Pass  63: suminf.    1.29744 (14) obj. -217.808 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 104 columns, reduced to 30 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -208.614 - took 0.13 seconds
Cbc0012I Integer solution of -208.61372 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 98 rows 104 columns, reduced to 7 rows 8 columns
Cbc0031I 23 added rows had average density of 6.8695652
Cbc0013I At root node, 58 cuts changed objective from -250.36144 to -208.61374 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 414 row cuts average 10.4 elements, 26 column cuts (26 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 47.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 31.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 39.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 1.7242536e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -208.61372, took 173 iterations and 0 nodes (0.28 seconds)
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.29

