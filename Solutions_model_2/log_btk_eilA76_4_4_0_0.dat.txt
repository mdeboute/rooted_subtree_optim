Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 76 (-2) columns and 424 (-29) elements
Clp1000I sum of infeasibilities 5.20902e-05 - average 3.72073e-07, 9 fixed columns
Coin0506I Presolve 122 (-18) rows, 67 (-9) columns and 370 (-54) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 0.25614707 - largest nonzero change 0 ( 0%) - largest zero change 2.6927956e-05
Clp0000I Optimal - objective value 45.873724
Clp0000I Optimal - objective value 45.873724
Coin0511I After Postsolve, objective 45.873724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.873724
Clp0000I Optimal - objective value 45.873724
Clp0000I Optimal - objective value 45.873724
Coin0511I After Postsolve, objective 45.873724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.87372425 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 140 rows, 76 columns (75 integer (75 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.281%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.44984
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.51546 iterations 35
Cbc0038I Solution found of -3.51546
Cbc0038I Relaxing continuous gives -3.51546
Cbc0038I Rounding solution of -3.52726 is better than previous of -3.51546

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.52726 to -18.4321 (0.03 seconds)
Cbc0038I Round again with cutoff of -21.1763
Cbc0038I Pass   2: suminf.    1.93274 (8) obj. -21.1763 iterations 19
Cbc0038I Pass   3: suminf.    1.31102 (4) obj. -21.1763 iterations 17
Cbc0038I Pass   4: suminf.    0.91902 (5) obj. -21.1763 iterations 4
Cbc0038I Pass   5: suminf.    0.58355 (3) obj. -21.1763 iterations 4
Cbc0038I Pass   6: suminf.    0.92558 (3) obj. -21.1763 iterations 2
Cbc0038I Pass   7: suminf.    0.67337 (3) obj. -21.1763 iterations 15
Cbc0038I Pass   8: suminf.    1.45180 (4) obj. -21.1763 iterations 12
Cbc0038I Pass   9: suminf.    0.70983 (2) obj. -21.1763 iterations 11
Cbc0038I Pass  10: suminf.    0.67337 (3) obj. -21.1763 iterations 6
Cbc0038I Pass  11: suminf.    2.16398 (6) obj. -21.1763 iterations 15
Cbc0038I Pass  12: suminf.    1.28170 (4) obj. -21.1763 iterations 17
Cbc0038I Pass  13: suminf.    0.91500 (3) obj. -21.1763 iterations 11
Cbc0038I Pass  14: suminf.    2.27337 (6) obj. -21.1763 iterations 14
Cbc0038I Pass  15: suminf.    1.31895 (5) obj. -21.1763 iterations 20
Cbc0038I Pass  16: suminf.    1.75973 (10) obj. -21.1763 iterations 20
Cbc0038I Pass  17: suminf.    0.78430 (3) obj. -21.1763 iterations 12
Cbc0038I Pass  18: suminf.    0.93285 (3) obj. -21.1763 iterations 9
Cbc0038I Pass  19: suminf.    0.93285 (3) obj. -21.1763 iterations 0
Cbc0038I Pass  20: suminf.    1.52960 (5) obj. -21.1763 iterations 14
Cbc0038I Pass  21: suminf.    0.88844 (3) obj. -21.1763 iterations 10
Cbc0038I Pass  22: suminf.    1.45180 (4) obj. -21.1763 iterations 12
Cbc0038I Pass  23: suminf.    0.70983 (2) obj. -21.1763 iterations 10
Cbc0038I Pass  24: suminf.    0.67337 (3) obj. -21.1763 iterations 5
Cbc0038I Pass  25: suminf.    0.67337 (3) obj. -21.1763 iterations 0
Cbc0038I Pass  26: suminf.    1.45180 (4) obj. -21.1763 iterations 10
Cbc0038I Pass  27: suminf.    3.40633 (8) obj. -21.1763 iterations 18
Cbc0038I Pass  28: suminf.    2.30515 (7) obj. -21.1763 iterations 8
Cbc0038I Pass  29: suminf.    1.53187 (5) obj. -21.1763 iterations 4
Cbc0038I Pass  30: suminf.    1.21148 (4) obj. -21.1763 iterations 9
Cbc0038I Pass  31: suminf.    1.09925 (5) obj. -21.1763 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 74 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -18.4321 to -18.7077 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.1158
Cbc0038I Pass  31: suminf.    2.57563 (10) obj. -26.1158 iterations 2
Cbc0038I Pass  32: suminf.    1.21093 (6) obj. -26.1158 iterations 21
Cbc0038I Pass  33: suminf.    0.88063 (4) obj. -26.1158 iterations 16
Cbc0038I Pass  34: suminf.    1.61246 (4) obj. -26.1158 iterations 6
Cbc0038I Pass  35: suminf.    1.24665 (4) obj. -26.1158 iterations 3
Cbc0038I Pass  36: suminf.    0.98340 (5) obj. -26.1158 iterations 2
Cbc0038I Pass  37: suminf.    2.90448 (13) obj. -26.1158 iterations 16
Cbc0038I Pass  38: suminf.    1.39836 (6) obj. -26.1158 iterations 24
Cbc0038I Pass  39: suminf.    1.36306 (6) obj. -26.1158 iterations 3
Cbc0038I Pass  40: suminf.    1.41928 (6) obj. -26.1158 iterations 14
Cbc0038I Pass  41: suminf.    1.39255 (5) obj. -26.1158 iterations 4
Cbc0038I Pass  42: suminf.    1.44628 (7) obj. -26.1158 iterations 17
Cbc0038I Pass  43: suminf.    1.32756 (6) obj. -26.1158 iterations 1
Cbc0038I Pass  44: suminf.    2.86067 (8) obj. -26.1158 iterations 22
Cbc0038I Pass  45: suminf.    2.05854 (9) obj. -26.1158 iterations 7
Cbc0038I Pass  46: suminf.    1.50060 (4) obj. -26.1158 iterations 18
Cbc0038I Pass  47: suminf.    1.47369 (5) obj. -26.1158 iterations 1
Cbc0038I Pass  48: suminf.    1.39562 (6) obj. -26.1158 iterations 16
Cbc0038I Pass  49: suminf.    1.37616 (6) obj. -26.1158 iterations 4
Cbc0038I Pass  50: suminf.    2.18970 (6) obj. -26.1158 iterations 15
Cbc0038I Pass  51: suminf.    1.77606 (6) obj. -26.1158 iterations 2
Cbc0038I Pass  52: suminf.    1.47369 (5) obj. -26.1158 iterations 8
Cbc0038I Pass  53: suminf.    1.39562 (6) obj. -26.1158 iterations 16
Cbc0038I Pass  54: suminf.    1.37616 (6) obj. -26.1158 iterations 4
Cbc0038I Pass  55: suminf.    2.18970 (6) obj. -26.1158 iterations 17
Cbc0038I Pass  56: suminf.    1.77606 (6) obj. -26.1158 iterations 3
Cbc0038I Pass  57: suminf.    1.47369 (5) obj. -26.1158 iterations 9
Cbc0038I Pass  58: suminf.    1.39562 (6) obj. -26.1158 iterations 16
Cbc0038I Pass  59: suminf.    1.37616 (6) obj. -26.1158 iterations 4
Cbc0038I Pass  60: suminf.    2.18970 (6) obj. -26.1158 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -18.7077 - took 0.07 seconds
Cbc0012I Integer solution of -18.70773 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 60 rows 34 columns
Cbc0031I 20 added rows had average density of 50.9
Cbc0013I At root node, 20 cuts changed objective from -45.873724 to -37.660573 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8965 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1396 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 66.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.70773 best solution, best possible -37.660573 (0.70 seconds)
Cbc0012I Integer solution of -18.719528 found by rounding after 7652 iterations and 40 nodes (0.92 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 5 rows 7 columns
Cbc0004I Integer solution of -18.85493 found after 7803 iterations and 49 nodes (0.94 seconds)
Cbc0001I Search completed - best objective -18.85493, took 7980 iterations and 54 nodes (0.94 seconds)
Cbc0032I Strong branching done 596 times (11278 iterations), fathomed 4 nodes and fixed 15 variables
Cbc0035I Maximum depth 16, 95 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.95

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-37) rows, 127 (-25) columns and 2292 (-1011) elements
Clp1000I sum of infeasibilities 2.18712e-07 - average 1.86933e-09, 26 fixed columns
Coin0506I Presolve 91 (-26) rows, 100 (-27) columns and 1337 (-955) elements
Clp0006I 0  Obj 54.702137 Dual inf 6.0987744 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.3487541 - largest nonzero change 1.1307998e-05 ( 0.00079945292%) - largest zero change 2.8990709e-05
Clp0000I Optimal - objective value 65.808632
Clp0000I Optimal - objective value 65.808632
Coin0511I After Postsolve, objective 65.808632, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.808632
Clp0000I Optimal - objective value 65.808632
Clp0000I Optimal - objective value 65.808632
Clp0000I Optimal - objective value 65.808632
Coin0511I After Postsolve, objective 65.808632, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.80863169 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 127 columns (127 integer (127 of which binary)) and 2299 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.673%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 4.88526
Cbc0038I Pass   1: suminf.    2.07346 (39) obj. -52.6341 iterations 18
Cbc0038I Pass   2: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass   3: suminf.    0.05358 (3) obj. 3.27871 iterations 30
Cbc0038I Solution found of 6.22513
Cbc0038I Rounding solution of 0.213332 is better than previous of 6.22513

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 0.213332 to -14.9846 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.6902
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass   5: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass   6: suminf.    0.69886 (12) obj. -19.6902 iterations 20
Cbc0038I Pass   7: suminf.    0.94889 (20) obj. -19.6902 iterations 18
Cbc0038I Pass   8: suminf.    0.90205 (19) obj. -20.6484 iterations 3
Cbc0038I Pass   9: suminf.    1.37773 (11) obj. -19.6902 iterations 17
Cbc0038I Pass  10: suminf.    0.76832 (11) obj. -19.6902 iterations 1
Cbc0038I Pass  11: suminf.    1.27176 (7) obj. -19.6902 iterations 13
Cbc0038I Pass  12: suminf.    0.94129 (6) obj. -20.1212 iterations 3
Cbc0038I Pass  13: suminf.    0.65926 (6) obj. -19.6902 iterations 7
Cbc0038I Pass  14: suminf.    1.24609 (6) obj. -19.6902 iterations 9
Cbc0038I Pass  15: suminf.    0.57508 (6) obj. -19.6902 iterations 4
Cbc0038I Pass  16: suminf.    1.25487 (6) obj. -19.6902 iterations 10
Cbc0038I Pass  17: suminf.    3.38700 (18) obj. -19.6902 iterations 21
Cbc0038I Pass  18: suminf.    1.60571 (16) obj. -19.6902 iterations 3
Cbc0038I Pass  19: suminf.    1.12399 (14) obj. -19.6902 iterations 2
Cbc0038I Pass  20: suminf.    1.17408 (8) obj. -19.6902 iterations 14
Cbc0038I Pass  21: suminf.    0.92992 (8) obj. -19.6902 iterations 3
Cbc0038I Pass  22: suminf.    1.91713 (9) obj. -19.6902 iterations 9
Cbc0038I Pass  23: suminf.    1.08806 (8) obj. -19.7742 iterations 5
Cbc0038I Pass  24: suminf.    1.27892 (10) obj. -19.6902 iterations 19
Cbc0038I Pass  25: suminf.    1.21309 (9) obj. -19.6902 iterations 4
Cbc0038I Pass  26: suminf.    0.57999 (9) obj. -19.6902 iterations 6
Cbc0038I Pass  27: suminf.    1.16682 (8) obj. -19.6902 iterations 13
Cbc0038I Pass  28: suminf.    1.16682 (8) obj. -19.6902 iterations 0
Cbc0038I Pass  29: suminf.    1.84595 (9) obj. -19.6902 iterations 6
Cbc0038I Pass  30: suminf.    1.50982 (8) obj. -19.6902 iterations 3
Cbc0038I Pass  31: suminf.    0.78724 (7) obj. -19.6902 iterations 2
Cbc0038I Pass  32: suminf.    0.63152 (8) obj. -19.6902 iterations 5
Cbc0038I Pass  33: suminf.    1.16682 (8) obj. -19.6902 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 58 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -14.9846 to -18.7077 (0.07 seconds)
Cbc0038I Round again with cutoff of -28.1601
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass  34: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass  35: suminf.    0.38893 (14) obj. -28.1601 iterations 17
Cbc0038I Pass  36: suminf.    0.37367 (14) obj. -28.328 iterations 2
Cbc0038I Pass  37: suminf.    1.67002 (20) obj. -28.1601 iterations 27
Cbc0038I Pass  38: suminf.    1.38703 (20) obj. -28.1601 iterations 1
Cbc0038I Pass  39: suminf.    1.60510 (12) obj. -28.1601 iterations 23
Cbc0038I Pass  40: suminf.    1.35108 (12) obj. -28.1601 iterations 3
Cbc0038I Pass  41: suminf.    1.39513 (10) obj. -28.1601 iterations 7
Cbc0038I Pass  42: suminf.    0.96626 (10) obj. -28.1601 iterations 5
Cbc0038I Pass  43: suminf.    2.03344 (11) obj. -28.1601 iterations 6
Cbc0038I Pass  44: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  45: suminf.    1.71630 (10) obj. -28.1601 iterations 1
Cbc0038I Pass  46: suminf.    2.03344 (11) obj. -28.1601 iterations 10
Cbc0038I Pass  47: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  48: suminf.    1.71630 (10) obj. -28.1601 iterations 1
Cbc0038I Pass  49: suminf.    2.03344 (11) obj. -28.1601 iterations 5
Cbc0038I Pass  50: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  51: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  52: suminf.    2.03344 (11) obj. -28.1601 iterations 10
Cbc0038I Pass  53: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  54: suminf.    1.71630 (10) obj. -28.1601 iterations 1
Cbc0038I Pass  55: suminf.    2.03344 (11) obj. -28.1601 iterations 5
Cbc0038I Pass  56: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  57: suminf.    1.71630 (10) obj. -28.1601 iterations 1
Cbc0038I Pass  58: suminf.    2.03344 (11) obj. -28.1601 iterations 10
Cbc0038I Pass  59: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  60: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  61: suminf.    2.03344 (11) obj. -28.1601 iterations 5
Cbc0038I Pass  62: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 43 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -18.7077 - took 0.06 seconds
Cbc0012I Integer solution of -18.70773 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 117 rows 127 columns, reduced to 35 rows 39 columns
Cbc0031I 60 added rows had average density of 33.733333
Cbc0013I At root node, 60 cuts changed objective from -62.039498 to -28.095598 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14137 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2271 row cuts average 117.4 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 86 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 803 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 746 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 369 row cuts average 69.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 190 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.612 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.70773 best solution, best possible -28.095598 (2.61 seconds)
Cbc0010I After 5 nodes, 4 on tree, -18.70773 best solution, best possible -26.642852 (3.42 seconds)
Cbc0010I After 16 nodes, 1 on tree, -18.70773 best solution, best possible -26.557267 (4.15 seconds)
Cbc0016I Integer solution of -18.85493 found by strong branching after 7523 iterations and 22 nodes (4.64 seconds)
Cbc0010I After 26 nodes, 5 on tree, -18.85493 best solution, best possible -26.557267 (4.88 seconds)
Cbc0001I Search completed - best objective -18.85493, took 7960 iterations and 32 nodes (4.96 seconds)
Cbc0032I Strong branching done 602 times (14194 iterations), fathomed 6 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 42 variables fixed on reduced cost
Total time (CPU seconds):       3.67   (Wallclock seconds):       4.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 76 (-2) columns and 424 (-29) elements
Clp1000I sum of infeasibilities 5.20902e-05 - average 3.72073e-07, 9 fixed columns
Coin0506I Presolve 122 (-18) rows, 67 (-9) columns and 370 (-54) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 0.25614707 - largest nonzero change 0 ( 0%) - largest zero change 2.6927956e-05
Clp0000I Optimal - objective value 45.873724
Clp0000I Optimal - objective value 45.873724
Coin0511I After Postsolve, objective 45.873724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.873724
Clp0000I Optimal - objective value 45.873724
Clp0000I Optimal - objective value 45.873724
Coin0511I After Postsolve, objective 45.873724, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.87372425 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 140 rows, 76 columns (75 integer (75 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.281%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.44984
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.51546 iterations 35
Cbc0038I Solution found of -3.51546
Cbc0038I Relaxing continuous gives -3.51546
Cbc0038I Rounding solution of -3.52726 is better than previous of -3.51546

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.52726 to -18.4321 (0.03 seconds)
Cbc0038I Round again with cutoff of -21.1763
Cbc0038I Pass   2: suminf.    1.93274 (8) obj. -21.1763 iterations 19
Cbc0038I Pass   3: suminf.    1.31102 (4) obj. -21.1763 iterations 17
Cbc0038I Pass   4: suminf.    0.91902 (5) obj. -21.1763 iterations 4
Cbc0038I Pass   5: suminf.    0.58355 (3) obj. -21.1763 iterations 4
Cbc0038I Pass   6: suminf.    0.92558 (3) obj. -21.1763 iterations 2
Cbc0038I Pass   7: suminf.    0.67337 (3) obj. -21.1763 iterations 15
Cbc0038I Pass   8: suminf.    1.45180 (4) obj. -21.1763 iterations 12
Cbc0038I Pass   9: suminf.    0.70983 (2) obj. -21.1763 iterations 11
Cbc0038I Pass  10: suminf.    0.67337 (3) obj. -21.1763 iterations 6
Cbc0038I Pass  11: suminf.    2.16398 (6) obj. -21.1763 iterations 15
Cbc0038I Pass  12: suminf.    1.28170 (4) obj. -21.1763 iterations 17
Cbc0038I Pass  13: suminf.    0.91500 (3) obj. -21.1763 iterations 11
Cbc0038I Pass  14: suminf.    2.27337 (6) obj. -21.1763 iterations 14
Cbc0038I Pass  15: suminf.    1.31895 (5) obj. -21.1763 iterations 20
Cbc0038I Pass  16: suminf.    1.75973 (10) obj. -21.1763 iterations 20
Cbc0038I Pass  17: suminf.    0.78430 (3) obj. -21.1763 iterations 12
Cbc0038I Pass  18: suminf.    0.93285 (3) obj. -21.1763 iterations 9
Cbc0038I Pass  19: suminf.    0.93285 (3) obj. -21.1763 iterations 0
Cbc0038I Pass  20: suminf.    1.52960 (5) obj. -21.1763 iterations 14
Cbc0038I Pass  21: suminf.    0.88844 (3) obj. -21.1763 iterations 10
Cbc0038I Pass  22: suminf.    1.45180 (4) obj. -21.1763 iterations 12
Cbc0038I Pass  23: suminf.    0.70983 (2) obj. -21.1763 iterations 10
Cbc0038I Pass  24: suminf.    0.67337 (3) obj. -21.1763 iterations 5
Cbc0038I Pass  25: suminf.    0.67337 (3) obj. -21.1763 iterations 0
Cbc0038I Pass  26: suminf.    1.45180 (4) obj. -21.1763 iterations 10
Cbc0038I Pass  27: suminf.    3.40633 (8) obj. -21.1763 iterations 18
Cbc0038I Pass  28: suminf.    2.30515 (7) obj. -21.1763 iterations 8
Cbc0038I Pass  29: suminf.    1.53187 (5) obj. -21.1763 iterations 4
Cbc0038I Pass  30: suminf.    1.21148 (4) obj. -21.1763 iterations 9
Cbc0038I Pass  31: suminf.    1.09925 (5) obj. -21.1763 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 74 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -18.4321 to -18.7077 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.1158
Cbc0038I Pass  31: suminf.    2.57563 (10) obj. -26.1158 iterations 2
Cbc0038I Pass  32: suminf.    1.21093 (6) obj. -26.1158 iterations 21
Cbc0038I Pass  33: suminf.    0.88063 (4) obj. -26.1158 iterations 16
Cbc0038I Pass  34: suminf.    1.61246 (4) obj. -26.1158 iterations 6
Cbc0038I Pass  35: suminf.    1.24665 (4) obj. -26.1158 iterations 3
Cbc0038I Pass  36: suminf.    0.98340 (5) obj. -26.1158 iterations 2
Cbc0038I Pass  37: suminf.    2.90448 (13) obj. -26.1158 iterations 16
Cbc0038I Pass  38: suminf.    1.39836 (6) obj. -26.1158 iterations 24
Cbc0038I Pass  39: suminf.    1.36306 (6) obj. -26.1158 iterations 3
Cbc0038I Pass  40: suminf.    1.41928 (6) obj. -26.1158 iterations 14
Cbc0038I Pass  41: suminf.    1.39255 (5) obj. -26.1158 iterations 4
Cbc0038I Pass  42: suminf.    1.44628 (7) obj. -26.1158 iterations 17
Cbc0038I Pass  43: suminf.    1.32756 (6) obj. -26.1158 iterations 1
Cbc0038I Pass  44: suminf.    2.86067 (8) obj. -26.1158 iterations 22
Cbc0038I Pass  45: suminf.    2.05854 (9) obj. -26.1158 iterations 7
Cbc0038I Pass  46: suminf.    1.50060 (4) obj. -26.1158 iterations 18
Cbc0038I Pass  47: suminf.    1.47369 (5) obj. -26.1158 iterations 1
Cbc0038I Pass  48: suminf.    1.39562 (6) obj. -26.1158 iterations 16
Cbc0038I Pass  49: suminf.    1.37616 (6) obj. -26.1158 iterations 4
Cbc0038I Pass  50: suminf.    2.18970 (6) obj. -26.1158 iterations 15
Cbc0038I Pass  51: suminf.    1.77606 (6) obj. -26.1158 iterations 2
Cbc0038I Pass  52: suminf.    1.47369 (5) obj. -26.1158 iterations 8
Cbc0038I Pass  53: suminf.    1.39562 (6) obj. -26.1158 iterations 16
Cbc0038I Pass  54: suminf.    1.37616 (6) obj. -26.1158 iterations 4
Cbc0038I Pass  55: suminf.    2.18970 (6) obj. -26.1158 iterations 17
Cbc0038I Pass  56: suminf.    1.77606 (6) obj. -26.1158 iterations 3
Cbc0038I Pass  57: suminf.    1.47369 (5) obj. -26.1158 iterations 9
Cbc0038I Pass  58: suminf.    1.39562 (6) obj. -26.1158 iterations 16
Cbc0038I Pass  59: suminf.    1.37616 (6) obj. -26.1158 iterations 4
Cbc0038I Pass  60: suminf.    2.18970 (6) obj. -26.1158 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -18.7077 - took 0.08 seconds
Cbc0012I Integer solution of -18.70773 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 60 rows 34 columns
Cbc0031I 20 added rows had average density of 50.9
Cbc0013I At root node, 20 cuts changed objective from -45.873724 to -37.660573 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8965 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1396 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 66.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.70773 best solution, best possible -37.660573 (0.75 seconds)
Cbc0012I Integer solution of -18.719528 found by rounding after 7652 iterations and 40 nodes (0.98 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 5 rows 7 columns
Cbc0004I Integer solution of -18.85493 found after 7803 iterations and 49 nodes (1.00 seconds)
Cbc0001I Search completed - best objective -18.85493, took 7980 iterations and 54 nodes (1.00 seconds)
Cbc0032I Strong branching done 596 times (11278 iterations), fathomed 4 nodes and fixed 15 variables
Cbc0035I Maximum depth 16, 95 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 127 (-26) columns and 2292 (-1012) elements
Clp1000I sum of infeasibilities 2.18712e-07 - average 1.86933e-09, 26 fixed columns
Coin0506I Presolve 91 (-26) rows, 100 (-27) columns and 1337 (-955) elements
Clp0006I 0  Obj 54.702137 Dual inf 6.0987744 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.3487541 - largest nonzero change 1.1307998e-05 ( 0.00079945292%) - largest zero change 2.8990709e-05
Clp0000I Optimal - objective value 65.808632
Clp0000I Optimal - objective value 65.808632
Coin0511I After Postsolve, objective 65.808632, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.808632
Clp0000I Optimal - objective value 65.808632
Clp0000I Optimal - objective value 65.808632
Clp0000I Optimal - objective value 65.808632
Coin0511I After Postsolve, objective 65.808632, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.80863169 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 127 columns (127 integer (127 of which binary)) and 2299 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.673%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 4.88526
Cbc0038I Pass   1: suminf.    2.07346 (39) obj. -52.6341 iterations 18
Cbc0038I Pass   2: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass   3: suminf.    0.05358 (3) obj. 3.27871 iterations 30
Cbc0038I Solution found of 6.22513
Cbc0038I Rounding solution of 0.213332 is better than previous of 6.22513

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 0.213332 to -14.9846 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.6902
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass   5: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass   6: suminf.    0.69886 (12) obj. -19.6902 iterations 20
Cbc0038I Pass   7: suminf.    0.94889 (20) obj. -19.6902 iterations 18
Cbc0038I Pass   8: suminf.    0.90205 (19) obj. -20.6484 iterations 3
Cbc0038I Pass   9: suminf.    1.37773 (11) obj. -19.6902 iterations 17
Cbc0038I Pass  10: suminf.    0.76832 (11) obj. -19.6902 iterations 1
Cbc0038I Pass  11: suminf.    1.27176 (7) obj. -19.6902 iterations 13
Cbc0038I Pass  12: suminf.    0.94129 (6) obj. -20.1212 iterations 3
Cbc0038I Pass  13: suminf.    0.65926 (6) obj. -19.6902 iterations 7
Cbc0038I Pass  14: suminf.    1.24609 (6) obj. -19.6902 iterations 9
Cbc0038I Pass  15: suminf.    0.57508 (6) obj. -19.6902 iterations 4
Cbc0038I Pass  16: suminf.    1.25487 (6) obj. -19.6902 iterations 10
Cbc0038I Pass  17: suminf.    3.38700 (18) obj. -19.6902 iterations 21
Cbc0038I Pass  18: suminf.    1.60571 (16) obj. -19.6902 iterations 3
Cbc0038I Pass  19: suminf.    1.12399 (14) obj. -19.6902 iterations 2
Cbc0038I Pass  20: suminf.    1.17408 (8) obj. -19.6902 iterations 14
Cbc0038I Pass  21: suminf.    0.92992 (8) obj. -19.6902 iterations 3
Cbc0038I Pass  22: suminf.    1.91713 (9) obj. -19.6902 iterations 9
Cbc0038I Pass  23: suminf.    1.08806 (8) obj. -19.7742 iterations 5
Cbc0038I Pass  24: suminf.    1.27892 (10) obj. -19.6902 iterations 19
Cbc0038I Pass  25: suminf.    1.21309 (9) obj. -19.6902 iterations 4
Cbc0038I Pass  26: suminf.    0.57999 (9) obj. -19.6902 iterations 6
Cbc0038I Pass  27: suminf.    1.16682 (8) obj. -19.6902 iterations 13
Cbc0038I Pass  28: suminf.    1.16682 (8) obj. -19.6902 iterations 0
Cbc0038I Pass  29: suminf.    1.84595 (9) obj. -19.6902 iterations 6
Cbc0038I Pass  30: suminf.    1.50982 (8) obj. -19.6902 iterations 3
Cbc0038I Pass  31: suminf.    0.78724 (7) obj. -19.6902 iterations 2
Cbc0038I Pass  32: suminf.    0.63152 (8) obj. -19.6902 iterations 5
Cbc0038I Pass  33: suminf.    1.16682 (8) obj. -19.6902 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 58 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -14.9846 to -18.7077 (0.07 seconds)
Cbc0038I Round again with cutoff of -28.1601
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass  34: suminf.    2.07346 (39) obj. -52.6341 iterations 0
Cbc0038I Pass  35: suminf.    0.38893 (14) obj. -28.1601 iterations 17
Cbc0038I Pass  36: suminf.    0.37367 (14) obj. -28.328 iterations 2
Cbc0038I Pass  37: suminf.    1.67002 (20) obj. -28.1601 iterations 27
Cbc0038I Pass  38: suminf.    1.38703 (20) obj. -28.1601 iterations 1
Cbc0038I Pass  39: suminf.    1.60510 (12) obj. -28.1601 iterations 23
Cbc0038I Pass  40: suminf.    1.35108 (12) obj. -28.1601 iterations 3
Cbc0038I Pass  41: suminf.    1.39513 (10) obj. -28.1601 iterations 7
Cbc0038I Pass  42: suminf.    0.96626 (10) obj. -28.1601 iterations 5
Cbc0038I Pass  43: suminf.    2.03344 (11) obj. -28.1601 iterations 6
Cbc0038I Pass  44: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  45: suminf.    1.71630 (10) obj. -28.1601 iterations 1
Cbc0038I Pass  46: suminf.    2.03344 (11) obj. -28.1601 iterations 10
Cbc0038I Pass  47: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  48: suminf.    1.71630 (10) obj. -28.1601 iterations 1
Cbc0038I Pass  49: suminf.    2.03344 (11) obj. -28.1601 iterations 5
Cbc0038I Pass  50: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  51: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  52: suminf.    2.03344 (11) obj. -28.1601 iterations 10
Cbc0038I Pass  53: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  54: suminf.    1.71630 (10) obj. -28.1601 iterations 1
Cbc0038I Pass  55: suminf.    2.03344 (11) obj. -28.1601 iterations 5
Cbc0038I Pass  56: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  57: suminf.    1.71630 (10) obj. -28.1601 iterations 1
Cbc0038I Pass  58: suminf.    2.03344 (11) obj. -28.1601 iterations 10
Cbc0038I Pass  59: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  60: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I Pass  61: suminf.    2.03344 (11) obj. -28.1601 iterations 5
Cbc0038I Pass  62: suminf.    1.71630 (10) obj. -28.1601 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 127 columns, reduced to 43 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -18.7077 - took 0.06 seconds
Cbc0012I Integer solution of -18.70773 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 117 rows 127 columns, reduced to 35 rows 39 columns
Cbc0031I 60 added rows had average density of 33.733333
Cbc0013I At root node, 60 cuts changed objective from -62.039498 to -28.095598 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14137 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2271 row cuts average 117.4 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 86 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 803 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 746 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 369 row cuts average 69.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 190 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.644 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.70773 best solution, best possible -28.095598 (2.82 seconds)
Cbc0010I After 4 nodes, 3 on tree, -18.70773 best solution, best possible -26.642852 (3.55 seconds)
Cbc0010I After 10 nodes, 6 on tree, -18.70773 best solution, best possible -26.642852 (4.31 seconds)
Cbc0016I Integer solution of -18.85493 found by strong branching after 7523 iterations and 22 nodes (4.97 seconds)
Cbc0010I After 23 nodes, 6 on tree, -18.85493 best solution, best possible -26.557267 (5.04 seconds)
Cbc0001I Search completed - best objective -18.85493, took 7960 iterations and 32 nodes (5.31 seconds)
Cbc0032I Strong branching done 602 times (14194 iterations), fathomed 6 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 42 variables fixed on reduced cost
Total time (CPU seconds):       3.91   (Wallclock seconds):       5.34

