Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.21147e-05 - average 9.24784e-08, 21 fixed columns
Coin0506I Presolve 92 (-39) rows, 53 (-21) columns and 283 (-119) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 1.9755463 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 47.359178
Clp0000I Optimal - objective value 47.359178
Coin0511I After Postsolve, objective 47.359178, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.359178
Clp0000I Optimal - objective value 47.359178
Clp0000I Optimal - objective value 47.359178
Coin0511I After Postsolve, objective 47.359178, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.3591784 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 74 columns (73 integer (73 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.09244
Cbc0038I Solution found of -7.0401
Cbc0038I Relaxing continuous gives -7.0401
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 74 columns, reduced to 67 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -7.0401 to -23.7298 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.0622
Cbc0038I Pass   1: suminf.    1.48421 (9) obj. -26.0622 iterations 43
Cbc0038I Pass   2: suminf.    1.74924 (6) obj. -26.0622 iterations 11
Cbc0038I Pass   3: suminf.    1.44377 (5) obj. -26.0622 iterations 5
Cbc0038I Pass   4: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass   5: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass   6: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass   7: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass   8: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass   9: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  10: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass  11: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass  12: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass  13: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass  14: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  15: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass  16: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass  17: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass  18: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass  19: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  20: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass  21: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass  22: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass  23: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass  24: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  25: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass  26: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass  27: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass  28: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass  29: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  30: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 74 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -23.7298 - took 0.03 seconds
Cbc0012I Integer solution of -23.72975 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 125 rows 74 columns, reduced to 67 rows 38 columns
Cbc0031I 18 added rows had average density of 47.833333
Cbc0013I At root node, 18 cuts changed objective from -47.053632 to -37.106448 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8396 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1732 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 216 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 98 row cuts average 58.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0010I After 23 nodes, 12 on tree, -23.72975 best solution, best possible -37.106448 (0.69 seconds)
Cbc0001I Search completed - best objective -23.72975, took 6802 iterations and 36 nodes (0.70 seconds)
Cbc0032I Strong branching done 502 times (9438 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 17, 81 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-47) rows, 122 (-30) columns and 2083 (-1220) elements
Clp1000I sum of infeasibilities 9.55564e-07 - average 8.93051e-09, 71 fixed columns
Coin0506I Presolve 35 (-72) rows, 36 (-86) columns and 191 (-1892) elements
Clp0006I 0  Obj 144.16175 Dual inf 3.2707342 (36)
Clp0029I End of values pass after 36 iterations
Clp0000I Optimal - objective value 150.35793
Clp0000I Optimal - objective value 150.35793
Coin0511I After Postsolve, objective 150.35793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 150.35793 Dual inf 2.5147581 (1)
Clp0014I Perturbing problem by 0.001% of 1.5079314 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 150.35793
Clp0000I Optimal - objective value 150.35793
Clp0000I Optimal - objective value 150.35793
Coin0511I After Postsolve, objective 150.35793, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.3579302 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 61 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 122 columns (122 integer (122 of which binary)) and 2105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.691%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 4.24371
Cbc0038I Pass   1: suminf.    0.27396 (14) obj. -28.2268 iterations 33
Cbc0038I Pass   2: suminf.    0.27396 (14) obj. -28.2268 iterations 1
Cbc0038I Solution found of -3.84175
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 122 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -3.84175 to -33.7198 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.2209
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.78491 (41) obj. -40.2209 iterations 22
Cbc0038I Pass   4: suminf.    0.78491 (41) obj. -40.2209 iterations 0
Cbc0038I Pass   5: suminf.    0.85296 (24) obj. -60.1389 iterations 20
Cbc0038I Pass   6: suminf.    0.22300 (9) obj. -40.2209 iterations 17
Cbc0038I Pass   7: suminf.    0.18799 (8) obj. -43.5274 iterations 1
Cbc0038I Pass   8: suminf.    0.73835 (5) obj. -40.2209 iterations 36
Cbc0038I Pass   9: suminf.    0.36616 (2) obj. -40.2209 iterations 19
Cbc0038I Pass  10: suminf.    0.32888 (2) obj. -40.2209 iterations 4
Cbc0038I Pass  11: suminf.    2.11986 (14) obj. -40.2209 iterations 24
Cbc0038I Pass  12: suminf.    0.49508 (9) obj. -43.1199 iterations 9
Cbc0038I Pass  13: suminf.    1.13184 (3) obj. -40.2209 iterations 23
Cbc0038I Pass  14: suminf.    0.48100 (2) obj. -40.2209 iterations 7
Cbc0038I Pass  15: suminf.    0.68550 (2) obj. -40.2209 iterations 9
Cbc0038I Pass  16: suminf.    0.52968 (2) obj. -41.3116 iterations 3
Cbc0038I Pass  17: suminf.    1.92435 (13) obj. -40.2209 iterations 31
Cbc0038I Pass  18: suminf.    0.31689 (7) obj. -40.2209 iterations 14
Cbc0038I Pass  19: suminf.    0.69082 (3) obj. -40.2209 iterations 13
Cbc0038I Pass  20: suminf.    0.69082 (3) obj. -40.2209 iterations 0
Cbc0038I Pass  21: suminf.    1.14744 (4) obj. -40.2209 iterations 9
Cbc0038I Pass  22: suminf.    0.83025 (3) obj. -40.5777 iterations 4
Cbc0038I Pass  23: suminf.    0.80704 (5) obj. -40.2209 iterations 7
Cbc0038I Pass  24: suminf.    0.83226 (5) obj. -40.2209 iterations 8
Cbc0038I Pass  25: suminf.    0.65926 (12) obj. -40.2209 iterations 18
Cbc0038I Pass  26: suminf.    0.64703 (11) obj. -40.2209 iterations 5
Cbc0038I Pass  27: suminf.    0.77382 (5) obj. -40.2209 iterations 12
Cbc0038I Pass  28: suminf.    0.35642 (6) obj. -40.2209 iterations 6
Cbc0038I Pass  29: suminf.    0.53782 (3) obj. -40.2209 iterations 15
Cbc0038I Pass  30: suminf.    0.53782 (3) obj. -40.2209 iterations 1
Cbc0038I Pass  31: suminf.    0.87048 (4) obj. -40.2209 iterations 6
Cbc0038I Pass  32: suminf.    1.34674 (6) obj. -40.2209 iterations 10
Cbc0038I Rounding solution of -37.8661 is better than previous of -33.7198

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 122 columns, reduced to 50 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -51.9227
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.28341 (41) obj. -51.9227 iterations 0
Cbc0038I Pass  33: suminf.    1.28341 (41) obj. -51.9227 iterations 0
Cbc0038I Pass  34: suminf.    0.77541 (22) obj. -58.2165 iterations 23
Cbc0038I Pass  35: suminf.    0.43059 (13) obj. -51.9227 iterations 15
Cbc0038I Pass  36: suminf.    0.43059 (13) obj. -51.9227 iterations 0
Cbc0038I Pass  37: suminf.    0.91950 (5) obj. -51.9227 iterations 30
Cbc0038I Pass  38: suminf.    0.91950 (5) obj. -51.9227 iterations 0
Cbc0038I Pass  39: suminf.    1.05559 (5) obj. -51.9227 iterations 12
Cbc0038I Pass  40: suminf.    0.35511 (4) obj. -52.9605 iterations 4
Cbc0038I Pass  41: suminf.    1.16337 (5) obj. -51.9227 iterations 18
Cbc0038I Pass  42: suminf.    1.16337 (5) obj. -51.9227 iterations 0
Cbc0038I Pass  43: suminf.    1.34839 (5) obj. -51.9227 iterations 6
Cbc0038I Pass  44: suminf.    1.34839 (5) obj. -51.9227 iterations 5
Cbc0038I Pass  45: suminf.    1.16337 (5) obj. -51.9227 iterations 5
Cbc0038I Pass  46: suminf.    1.07196 (8) obj. -51.9227 iterations 7
Cbc0038I Pass  47: suminf.    0.54832 (7) obj. -51.9227 iterations 5
Cbc0038I Pass  48: suminf.    1.36022 (6) obj. -51.9227 iterations 26
Cbc0038I Pass  49: suminf.    0.50374 (6) obj. -51.9227 iterations 2
Cbc0038I Pass  50: suminf.    1.36022 (6) obj. -51.9227 iterations 7
Cbc0038I Pass  51: suminf.    0.94994 (19) obj. -51.9227 iterations 25
Cbc0038I Pass  52: suminf.    0.85433 (18) obj. -51.9227 iterations 4
Cbc0038I Pass  53: suminf.    0.88264 (6) obj. -51.9227 iterations 24
Cbc0038I Pass  54: suminf.    0.88264 (6) obj. -51.9227 iterations 6
Cbc0038I Pass  55: suminf.    1.36022 (6) obj. -51.9227 iterations 13
Cbc0038I Pass  56: suminf.    0.50374 (6) obj. -51.9227 iterations 2
Cbc0038I Pass  57: suminf.    1.36022 (6) obj. -51.9227 iterations 7
Cbc0038I Pass  58: suminf.    1.57187 (11) obj. -51.9227 iterations 9
Cbc0038I Pass  59: suminf.    1.32187 (10) obj. -51.9227 iterations 6
Cbc0038I Pass  60: suminf.    1.20628 (7) obj. -51.9227 iterations 21
Cbc0038I Pass  61: suminf.    1.20628 (7) obj. -51.9227 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 122 columns, reduced to 45 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -37.8661 - took 0.05 seconds
Cbc0012I Integer solution of -37.86609 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 102 rows 122 columns, reduced to 29 rows 32 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 35 added rows had average density of 9.9714286
Cbc0013I At root node, 35 cuts changed objective from -98.729772 to -38.411094 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 212 row cuts average 2.5 elements, 36 column cuts (36 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 41 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 55 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37.86609, took 150 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.21147e-05 - average 9.24784e-08, 21 fixed columns
Coin0506I Presolve 92 (-39) rows, 53 (-21) columns and 283 (-119) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 1.9755463 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 47.359178
Clp0000I Optimal - objective value 47.359178
Coin0511I After Postsolve, objective 47.359178, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.359178
Clp0000I Optimal - objective value 47.359178
Clp0000I Optimal - objective value 47.359178
Coin0511I After Postsolve, objective 47.359178, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.3591784 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 74 columns (73 integer (73 of which binary)) and 415 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.09244
Cbc0038I Solution found of -7.0401
Cbc0038I Relaxing continuous gives -7.0401
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 74 columns, reduced to 67 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -7.0401 to -23.7298 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.0622
Cbc0038I Pass   1: suminf.    1.48421 (9) obj. -26.0622 iterations 43
Cbc0038I Pass   2: suminf.    1.74924 (6) obj. -26.0622 iterations 11
Cbc0038I Pass   3: suminf.    1.44377 (5) obj. -26.0622 iterations 5
Cbc0038I Pass   4: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass   5: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass   6: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass   7: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass   8: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass   9: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  10: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass  11: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass  12: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass  13: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass  14: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  15: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass  16: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass  17: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass  18: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass  19: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  20: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass  21: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass  22: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass  23: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass  24: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  25: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I Pass  26: suminf.    0.64158 (3) obj. -26.0622 iterations 2
Cbc0038I Pass  27: suminf.    1.75141 (4) obj. -26.0622 iterations 7
Cbc0038I Pass  28: suminf.    1.44377 (5) obj. -26.0622 iterations 4
Cbc0038I Pass  29: suminf.    1.83262 (5) obj. -26.0622 iterations 3
Cbc0038I Pass  30: suminf.    0.79881 (5) obj. -26.0622 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 74 columns, reduced to 71 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -23.7298 - took 0.03 seconds
Cbc0012I Integer solution of -23.72975 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 125 rows 74 columns, reduced to 67 rows 38 columns
Cbc0031I 18 added rows had average density of 47.833333
Cbc0013I At root node, 18 cuts changed objective from -47.053632 to -37.106448 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8396 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1732 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 216 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 98 row cuts average 58.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -23.72975 best solution, best possible -37.106448 (0.69 seconds)
Cbc0001I Search completed - best objective -23.72975, took 6802 iterations and 36 nodes (0.80 seconds)
Cbc0032I Strong branching done 502 times (9438 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 17, 81 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 120 (-33) columns and 1991 (-1313) elements
Clp1000I sum of infeasibilities 9.26286e-08 - average 8.82177e-10, 16 fixed columns
Coin0506I Presolve 88 (-17) rows, 103 (-17) columns and 1427 (-564) elements
Clp0006I 0  Obj 49.477291 Dual inf 12.474485 (103)
Clp0029I End of values pass after 103 iterations
Clp0014I Perturbing problem by 0.001% of 1.9868509 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 54.852971
Clp0000I Optimal - objective value 54.852971
Coin0511I After Postsolve, objective 54.852971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.852971
Clp0000I Optimal - objective value 54.852971
Clp0000I Optimal - objective value 54.852971
Clp0000I Optimal - objective value 54.852971
Coin0511I After Postsolve, objective 54.852971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.85297117 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 120 columns (120 integer (120 of which binary)) and 2004 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.591%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 1.47432
Cbc0038I Pass   1: suminf.    1.35000 (18) obj. -49.019 iterations 11
Cbc0038I Pass   2: suminf.    0.76379 (17) obj. -44.4431 iterations 2
Cbc0038I Solution found of 0.77265
Cbc0038I Rounding solution of -6.21674 is better than previous of 0.77265

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 120 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -6.21674 to -15.4275 (0.05 seconds)
Cbc0038I Round again with cutoff of -18.8067
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.35000 (18) obj. -49.019 iterations 0
Cbc0038I Pass   4: suminf.    0.76379 (17) obj. -44.4431 iterations 2
Cbc0038I Pass   5: suminf.    0.50637 (4) obj. -18.8067 iterations 15
Cbc0038I Pass   6: suminf.    0.54493 (3) obj. -18.8067 iterations 8
Cbc0038I Pass   7: suminf.    0.54493 (3) obj. -18.8067 iterations 0
Cbc0038I Pass   8: suminf.    0.63098 (3) obj. -18.8067 iterations 5
Cbc0038I Pass   9: suminf.    0.63098 (3) obj. -18.8067 iterations 3
Cbc0038I Pass  10: suminf.    0.81519 (3) obj. -18.8067 iterations 6
Cbc0038I Pass  11: suminf.    0.68031 (7) obj. -18.8067 iterations 27
Cbc0038I Pass  12: suminf.    0.68031 (7) obj. -18.8067 iterations 1
Cbc0038I Pass  13: suminf.    0.92809 (5) obj. -18.8067 iterations 14
Cbc0038I Pass  14: suminf.    0.40568 (5) obj. -18.8067 iterations 3
Cbc0038I Pass  15: suminf.    1.03055 (5) obj. -18.8067 iterations 2
Cbc0038I Pass  16: suminf.    1.03055 (5) obj. -18.8067 iterations 0
Cbc0038I Pass  17: suminf.    1.02645 (5) obj. -18.8067 iterations 3
Cbc0038I Pass  18: suminf.    1.02645 (5) obj. -18.8067 iterations 0
Cbc0038I Pass  19: suminf.    1.03055 (5) obj. -18.8067 iterations 2
Cbc0038I Pass  20: suminf.    3.18197 (22) obj. -18.8067 iterations 22
Cbc0038I Pass  21: suminf.    1.59804 (22) obj. -18.8067 iterations 3
Cbc0038I Pass  22: suminf.    0.87088 (9) obj. -18.8067 iterations 3
Cbc0038I Pass  23: suminf.    1.04203 (8) obj. -18.8067 iterations 12
Cbc0038I Pass  24: suminf.    1.04203 (8) obj. -18.8067 iterations 3
Cbc0038I Pass  25: suminf.    1.00995 (8) obj. -18.8067 iterations 7
Cbc0038I Pass  26: suminf.    1.00995 (8) obj. -18.8067 iterations 2
Cbc0038I Pass  27: suminf.    1.04203 (8) obj. -18.8067 iterations 6
Cbc0038I Pass  28: suminf.    1.27441 (14) obj. -18.8067 iterations 14
Cbc0038I Pass  29: suminf.    0.76330 (8) obj. -18.8067 iterations 2
Cbc0038I Pass  30: suminf.    0.66783 (8) obj. -19.9997 iterations 2
Cbc0038I Pass  31: suminf.    1.31461 (7) obj. -18.8067 iterations 12
Cbc0038I Pass  32: suminf.    1.31461 (7) obj. -18.8067 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 120 columns, reduced to 26 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -15.4275 to -23.7298 (0.08 seconds)
Cbc0038I Round again with cutoff of -28.8276
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.35000 (18) obj. -49.019 iterations 0
Cbc0038I Pass  33: suminf.    0.76379 (17) obj. -44.4431 iterations 2
Cbc0038I Pass  34: suminf.    0.78166 (5) obj. -28.8276 iterations 27
Cbc0038I Pass  35: suminf.    0.78166 (5) obj. -28.8276 iterations 3
Cbc0038I Pass  36: suminf.    0.74577 (5) obj. -28.8276 iterations 2
Cbc0038I Pass  37: suminf.    0.74577 (5) obj. -28.8276 iterations 0
Cbc0038I Pass  38: suminf.    0.78166 (5) obj. -28.8276 iterations 3
Cbc0038I Pass  39: suminf.    1.42100 (9) obj. -28.8276 iterations 27
Cbc0038I Pass  40: suminf.    0.52889 (7) obj. -28.8276 iterations 7
Cbc0038I Pass  41: suminf.    0.35758 (7) obj. -31.0808 iterations 1
Cbc0038I Pass  42: suminf.    1.20437 (23) obj. -28.8276 iterations 12
Cbc0038I Pass  43: suminf.    0.27420 (5) obj. -29.1732 iterations 6
Cbc0038I Pass  44: suminf.    1.68799 (14) obj. -28.8276 iterations 18
Cbc0038I Pass  45: suminf.    0.79529 (9) obj. -28.8276 iterations 5
Cbc0038I Pass  46: suminf.    1.20437 (24) obj. -28.8276 iterations 14
Cbc0038I Pass  47: suminf.    0.34695 (7) obj. -29.0277 iterations 14
Cbc0038I Pass  48: suminf.    0.97404 (11) obj. -28.8276 iterations 20
Cbc0038I Pass  49: suminf.    0.97404 (11) obj. -28.8276 iterations 3
Cbc0038I Pass  50: suminf.    1.35874 (10) obj. -28.8276 iterations 7
Cbc0038I Pass  51: suminf.    0.85485 (10) obj. -28.8276 iterations 4
Cbc0038I Pass  52: suminf.    1.25833 (10) obj. -28.8276 iterations 7
Cbc0038I Pass  53: suminf.    0.38981 (8) obj. -28.942 iterations 5
Cbc0038I Pass  54: suminf.    1.20229 (22) obj. -28.8276 iterations 10
Cbc0038I Pass  55: suminf.    1.19399 (13) obj. -28.8276 iterations 10
Cbc0038I Pass  56: suminf.    0.97780 (12) obj. -28.8276 iterations 5
Cbc0038I Pass  57: suminf.    1.20053 (22) obj. -28.8276 iterations 18
Cbc0038I Pass  58: suminf.    0.42106 (9) obj. -28.8795 iterations 17
Cbc0038I Pass  59: suminf.    2.26528 (15) obj. -28.8276 iterations 15
Cbc0038I Pass  60: suminf.    1.03322 (12) obj. -28.8276 iterations 8
Cbc0038I Pass  61: suminf.    1.03322 (12) obj. -28.8276 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 120 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -23.7298 - took 0.06 seconds
Cbc0012I Integer solution of -23.72975 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 100 rows 120 columns, reduced to 12 rows 12 columns
Cbc0031I 58 added rows had average density of 20.706897
Cbc0013I At root node, 58 cuts changed objective from -49.218499 to -28.183871 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14682 row cuts average 15.6 elements, 4 column cuts (11 active)  in 0.259 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1542 row cuts average 100.1 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 660 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 66 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 576 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 263 row cuts average 65.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 480 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.667 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.72975 best solution, best possible -28.183871 (2.73 seconds)
Cbc0010I After 4 nodes, 2 on tree, -23.72975 best solution, best possible -26.630376 (3.45 seconds)
Cbc0001I Search completed - best objective -23.72975, took 5702 iterations and 6 nodes (3.45 seconds)
Cbc0032I Strong branching done 242 times (5552 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 23 variables fixed on reduced cost
Total time (CPU seconds):       2.49   (Wallclock seconds):       3.48

