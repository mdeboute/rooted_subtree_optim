Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 23 (-10) columns and 118 (-65) elements
Clp1000I sum of infeasibilities 6.64992e-06 - average 1.66248e-07, 14 fixed columns
Coin0506I Presolve 12 (-28) rows, 7 (-16) columns and 31 (-87) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 1498.7344
Clp0000I Optimal - objective value 1498.7344
Coin0511I After Postsolve, objective 1498.7344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1498.7344
Clp0000I Optimal - objective value 1498.7344
Clp0000I Optimal - objective value 1498.7344
Coin0511I After Postsolve, objective 1498.7344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1498.734388 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 23 columns (22 integer (22 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.70896
Cbc0038I Solution found of -843.69
Cbc0038I Relaxing continuous gives -843.69
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -902.846
Cbc0038I Pass   1: suminf.    0.06608 (1) obj. -902.846 iterations 7
Cbc0038I Pass   2: suminf.    0.35556 (1) obj. -1420.64 iterations 1
Cbc0038I Pass   3: suminf.    1.31864 (4) obj. -1429.89 iterations 3
Cbc0038I Pass   4: suminf.    0.06608 (1) obj. -902.846 iterations 7
Cbc0038I Pass   5: suminf.    0.35556 (1) obj. -1420.64 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -1154.54 iterations 6
Cbc0038I Solution found of -1154.54
Cbc0038I Relaxing continuous gives -1154.54
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 11 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1210.68
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.40992 (1) obj. -1210.68 iterations 0
Cbc0038I Pass   8: suminf.    0.35556 (1) obj. -1420.64 iterations 1
Cbc0038I Pass   9: suminf.    0.35556 (1) obj. -1420.64 iterations 3
Cbc0038I Pass  10: suminf.    0.35556 (1) obj. -1420.64 iterations 2
Cbc0038I Pass  11: suminf.    0.40992 (1) obj. -1210.68 iterations 1
Cbc0038I Pass  12: suminf.    0.92800 (2) obj. -1325.39 iterations 4
Cbc0038I Pass  13: suminf.    0.40992 (1) obj. -1210.68 iterations 4
Cbc0038I Pass  14: suminf.    1.33575 (4) obj. -1210.68 iterations 9
Cbc0038I Pass  15: suminf.    0.81960 (2) obj. -1210.68 iterations 2
Cbc0038I Pass  16: suminf.    0.81891 (4) obj. -1210.68 iterations 1
Cbc0038I Pass  17: suminf.    0.60637 (2) obj. -1210.68 iterations 3
Cbc0038I Pass  18: suminf.    0.60637 (2) obj. -1210.68 iterations 0
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -1263.67 iterations 5
Cbc0038I Pass  20: suminf.    0.45919 (1) obj. -1210.68 iterations 1
Cbc0038I Pass  21: suminf.    0.31619 (4) obj. -1210.68 iterations 5
Cbc0038I Pass  22: suminf.    0.07752 (1) obj. -1210.68 iterations 3
Cbc0038I Pass  23: suminf.    0.14464 (3) obj. -1210.68 iterations 1
Cbc0038I Pass  24: suminf.    0.07752 (1) obj. -1210.68 iterations 1
Cbc0038I Pass  25: suminf.    0.77063 (5) obj. -1210.68 iterations 10
Cbc0038I Pass  26: suminf.    0.44172 (2) obj. -1210.68 iterations 4
Cbc0038I Pass  27: suminf.    0.47778 (1) obj. -1287.52 iterations 3
Cbc0038I Pass  28: suminf.    0.39195 (1) obj. -1210.68 iterations 1
Cbc0038I Pass  29: suminf.    0.06570 (1) obj. -1210.68 iterations 3
Cbc0038I Pass  30: suminf.    0.06570 (1) obj. -1210.68 iterations 2
Cbc0038I Pass  31: suminf.    0.11111 (1) obj. -1251.34 iterations 1
Cbc0038I Pass  32: suminf.    3.16109 (9) obj. -1210.68 iterations 8
Cbc0038I Pass  33: suminf.    0.42769 (2) obj. -1210.68 iterations 8
Cbc0038I Pass  34: suminf.    1.40229 (5) obj. -1210.68 iterations 10
Cbc0038I Pass  35: suminf.    0.77800 (4) obj. -1210.68 iterations 3
Cbc0038I Pass  36: suminf.    0.30000 (1) obj. -1337.09 iterations 4
Cbc0038I Rounding solution of -1175.22 is better than previous of -1154.54

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -1175.22 to -1178.57 (0.02 seconds)
Cbc0038I Round again with cutoff of -1278.05
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  36: suminf.    0.48517 (1) obj. -1278.05 iterations 0
Cbc0038I Pass  37: suminf.    0.35556 (1) obj. -1420.64 iterations 1
Cbc0038I Pass  38: suminf.    1.86928 (6) obj. -1278.05 iterations 9
Cbc0038I Pass  39: suminf.    0.99324 (4) obj. -1278.05 iterations 6
Cbc0038I Pass  40: suminf.    0.27227 (3) obj. -1278.05 iterations 6
Cbc0038I Pass  41: suminf.    0.20888 (2) obj. -1278.05 iterations 3
Cbc0038I Pass  42: suminf.    0.21111 (1) obj. -1333.51 iterations 3
Cbc0038I Pass  43: suminf.    0.14917 (1) obj. -1278.05 iterations 1
Cbc0038I Pass  44: suminf.    0.20888 (2) obj. -1278.05 iterations 2
Cbc0038I Pass  45: suminf.    0.76380 (3) obj. -1278.05 iterations 4
Cbc0038I Pass  46: suminf.    0.59196 (2) obj. -1278.05 iterations 3
Cbc0038I Pass  47: suminf.    0.21111 (1) obj. -1333.51 iterations 3
Cbc0038I Pass  48: suminf.    0.14917 (1) obj. -1278.05 iterations 1
Cbc0038I Pass  49: suminf.    1.83489 (6) obj. -1278.05 iterations 5
Cbc0038I Pass  50: suminf.    0.49695 (2) obj. -1278.05 iterations 5
Cbc0038I Pass  51: suminf.    0.46335 (2) obj. -1278.05 iterations 2
Cbc0038I Pass  52: suminf.    0.46335 (2) obj. -1278.05 iterations 0
Cbc0038I Pass  53: suminf.    0.46335 (2) obj. -1278.05 iterations 0
Cbc0038I Pass  54: suminf.    0.21111 (1) obj. -1333.51 iterations 3
Cbc0038I Pass  55: suminf.    0.14917 (1) obj. -1278.05 iterations 1
Cbc0038I Pass  56: suminf.    0.86503 (4) obj. -1278.05 iterations 5
Cbc0038I Pass  57: suminf.    0.30780 (1) obj. -1278.05 iterations 4
Cbc0038I Pass  58: suminf.    0.33333 (1) obj. -1300.91 iterations 1
Cbc0038I Pass  59: suminf.    0.21111 (1) obj. -1333.51 iterations 4
Cbc0038I Pass  60: suminf.    0.84433 (4) obj. -1278.05 iterations 6
Cbc0038I Pass  61: suminf.    0.50692 (3) obj. -1278.05 iterations 3
Cbc0038I Pass  62: suminf.    0.87815 (3) obj. -1278.05 iterations 7
Cbc0038I Pass  63: suminf.    0.46335 (2) obj. -1278.05 iterations 1
Cbc0038I Pass  64: suminf.    0.21111 (1) obj. -1333.51 iterations 2
Cbc0038I Pass  65: suminf.    0.14917 (1) obj. -1278.05 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1178.57 - took 0.03 seconds
Cbc0012I Integer solution of -1178.5732 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 40 rows 23 columns, reduced to 18 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 4
Cbc0013I At root node, 4 cuts changed objective from -1435.2492 to -1175.215 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 2.6 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1178.57325, took 21 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 55 (-7) columns and 492 (-154) elements
Clp1000I sum of infeasibilities 2.94665e-07 - average 5.89329e-09, 30 fixed columns
Coin0506I Presolve 25 (-25) rows, 25 (-30) columns and 88 (-404) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 1517.3661
Clp0000I Optimal - objective value 1517.3661
Coin0511I After Postsolve, objective 1517.3661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.166424 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 1517.3661
Clp0000I Optimal - objective value 1517.3661
Clp0000I Optimal - objective value 1517.3661
Coin0511I After Postsolve, objective 1517.3661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1517.366102 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 50 columns (50 integer (50 of which binary)) and 403 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.822%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.57962
Cbc0038I Pass   1: suminf.    0.17237 (3) obj. -1062.85 iterations 19
Cbc0038I Pass   2: suminf.    0.17237 (3) obj. -1062.85 iterations 1
Cbc0038I Solution found of -242.361
Cbc0038I Rounding solution of -255.361 is better than previous of -242.361

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -255.361 to -843.69 (0.01 seconds)
Cbc0038I Round again with cutoff of -902.229
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.17237 (3) obj. -1062.85 iterations 0
Cbc0038I Pass   4: suminf.    0.17237 (3) obj. -1062.85 iterations 1
Cbc0038I Pass   5: suminf.    0.26294 (1) obj. -902.229 iterations 3
Cbc0038I Pass   6: suminf.    0.08889 (1) obj. -1058.05 iterations 1
Cbc0038I Pass   7: suminf.    0.98594 (6) obj. -902.229 iterations 10
Cbc0038I Pass   8: suminf.    0.98594 (6) obj. -902.229 iterations 2
Cbc0038I Pass   9: suminf.    0.26841 (1) obj. -902.229 iterations 6
Cbc0038I Pass  10: suminf.    0.15556 (1) obj. -1003.26 iterations 1
Cbc0038I Pass  11: suminf.    2.09147 (8) obj. -902.229 iterations 13
Cbc0038I Pass  12: suminf.    1.52188 (7) obj. -902.229 iterations 3
Cbc0038I Pass  13: suminf.    0.30297 (1) obj. -902.229 iterations 7
Cbc0038I Pass  14: suminf.    0.06667 (1) obj. -1113.78 iterations 1
Cbc0038I Pass  15: suminf.    1.70163 (5) obj. -902.229 iterations 5
Cbc0038I Pass  16: suminf.    0.55641 (2) obj. -1109.27 iterations 2
Cbc0038I Pass  17: suminf.    0.06667 (1) obj. -1108.78 iterations 1
Cbc0038I Pass  18: suminf.    0.29738 (1) obj. -902.229 iterations 1
Cbc0038I Pass  19: suminf.    0.79132 (3) obj. -904.317 iterations 15
Cbc0038I Pass  20: suminf.    0.79132 (3) obj. -904.317 iterations 2
Cbc0038I Pass  21: suminf.    0.28111 (2) obj. -902.229 iterations 4
Cbc0038I Pass  22: suminf.    0.28111 (2) obj. -902.229 iterations 1
Cbc0038I Pass  23: suminf.    0.13216 (1) obj. -902.229 iterations 4
Cbc0038I Solution found of -1020.54
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -1020.54 to -1175.57 (0.02 seconds)
Cbc0038I Round again with cutoff of -1226.27
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  24: suminf.    1.58374 (7) obj. -1226.27 iterations 3
Cbc0038I Pass  25: suminf.    1.26509 (8) obj. -1226.27 iterations 1
Cbc0038I Pass  26: suminf.    0.90931 (3) obj. -1226.27 iterations 12
Cbc0038I Pass  27: suminf.    0.90931 (3) obj. -1226.27 iterations 3
Cbc0038I Pass  28: suminf.    0.35556 (1) obj. -1420.64 iterations 7
Cbc0038I Pass  29: suminf.    0.42734 (1) obj. -1226.27 iterations 1
Cbc0038I Pass  30: suminf.    3.06703 (7) obj. -1226.27 iterations 19
Cbc0038I Pass  31: suminf.    1.91081 (4) obj. -1226.27 iterations 5
Cbc0038I Pass  32: suminf.    0.83248 (3) obj. -1226.27 iterations 3
Cbc0038I Pass  33: suminf.    0.71657 (2) obj. -1226.27 iterations 1
Cbc0038I Pass  34: suminf.    0.71657 (2) obj. -1226.27 iterations 0
Cbc0038I Pass  35: suminf.    1.99847 (5) obj. -1226.27 iterations 7
Cbc0038I Pass  36: suminf.    1.35554 (3) obj. -1226.27 iterations 3
Cbc0038I Pass  37: suminf.    1.19829 (3) obj. -1226.27 iterations 2
Cbc0038I Pass  38: suminf.    0.80292 (2) obj. -1226.27 iterations 5
Cbc0038I Pass  39: suminf.    0.32382 (3) obj. -1226.27 iterations 1
Cbc0038I Pass  40: suminf.    0.80292 (2) obj. -1226.27 iterations 1
Cbc0038I Pass  41: suminf.    1.03072 (5) obj. -1226.27 iterations 8
Cbc0038I Pass  42: suminf.    1.03072 (5) obj. -1226.27 iterations 0
Cbc0038I Pass  43: suminf.    0.48889 (1) obj. -1269.71 iterations 6
Cbc0038I Pass  44: suminf.    0.44038 (1) obj. -1226.27 iterations 3
Cbc0038I Pass  45: suminf.    0.48889 (1) obj. -1269.71 iterations 1
Cbc0038I Pass  46: suminf.    0.53906 (5) obj. -1226.27 iterations 11
Cbc0038I Pass  47: suminf.    0.17541 (4) obj. -1226.27 iterations 5
Cbc0038I Pass  48: suminf.    0.40000 (1) obj. -1257.67 iterations 5
Cbc0038I Pass  49: suminf.    0.43507 (1) obj. -1226.27 iterations 1
Cbc0038I Pass  50: suminf.    0.76777 (5) obj. -1226.27 iterations 6
Cbc0038I Pass  51: suminf.    0.51688 (3) obj. -1255.51 iterations 3
Cbc0038I Pass  52: suminf.    0.42949 (1) obj. -1226.27 iterations 3
Cbc0038I Pass  53: suminf.    0.40000 (1) obj. -1252.67 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 50 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1175.57 - took 0.01 seconds
Cbc0012I Integer solution of -1175.5732 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 45 rows 50 columns, reduced to 23 rows 23 columns
Cbc0012I Integer solution of -1178.5732 found by DiveCoefficient after 63 iterations and 0 nodes (0.10 seconds)
Cbc0031I 17 added rows had average density of 3.9411765
Cbc0013I At root node, 17 cuts changed objective from -1429.081 to -1178.5732 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 84 row cuts average 2.5 elements, 16 column cuts (16 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1178.57325, took 63 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-25) rows, 23 (-10) columns and 118 (-65) elements
Clp1000I sum of infeasibilities 6.64992e-06 - average 1.66248e-07, 14 fixed columns
Coin0506I Presolve 12 (-28) rows, 7 (-16) columns and 31 (-87) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 1498.7344
Clp0000I Optimal - objective value 1498.7344
Coin0511I After Postsolve, objective 1498.7344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1498.7344
Clp0000I Optimal - objective value 1498.7344
Clp0000I Optimal - objective value 1498.7344
Coin0511I After Postsolve, objective 1498.7344, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1498.734388 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 23 columns (22 integer (22 of which binary)) and 125 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.70896
Cbc0038I Solution found of -843.69
Cbc0038I Relaxing continuous gives -843.69
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -902.846
Cbc0038I Pass   1: suminf.    0.06608 (1) obj. -902.846 iterations 7
Cbc0038I Pass   2: suminf.    0.35556 (1) obj. -1420.64 iterations 1
Cbc0038I Pass   3: suminf.    1.31864 (4) obj. -1429.89 iterations 3
Cbc0038I Pass   4: suminf.    0.06608 (1) obj. -902.846 iterations 7
Cbc0038I Pass   5: suminf.    0.35556 (1) obj. -1420.64 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -1154.54 iterations 6
Cbc0038I Solution found of -1154.54
Cbc0038I Relaxing continuous gives -1154.54
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 11 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1210.68
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.40992 (1) obj. -1210.68 iterations 0
Cbc0038I Pass   8: suminf.    0.35556 (1) obj. -1420.64 iterations 1
Cbc0038I Pass   9: suminf.    0.35556 (1) obj. -1420.64 iterations 3
Cbc0038I Pass  10: suminf.    0.35556 (1) obj. -1420.64 iterations 2
Cbc0038I Pass  11: suminf.    0.40992 (1) obj. -1210.68 iterations 1
Cbc0038I Pass  12: suminf.    0.92800 (2) obj. -1325.39 iterations 4
Cbc0038I Pass  13: suminf.    0.40992 (1) obj. -1210.68 iterations 4
Cbc0038I Pass  14: suminf.    1.33575 (4) obj. -1210.68 iterations 9
Cbc0038I Pass  15: suminf.    0.81960 (2) obj. -1210.68 iterations 2
Cbc0038I Pass  16: suminf.    0.81891 (4) obj. -1210.68 iterations 1
Cbc0038I Pass  17: suminf.    0.60637 (2) obj. -1210.68 iterations 3
Cbc0038I Pass  18: suminf.    0.60637 (2) obj. -1210.68 iterations 0
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -1263.67 iterations 5
Cbc0038I Pass  20: suminf.    0.45919 (1) obj. -1210.68 iterations 1
Cbc0038I Pass  21: suminf.    0.31619 (4) obj. -1210.68 iterations 5
Cbc0038I Pass  22: suminf.    0.07752 (1) obj. -1210.68 iterations 3
Cbc0038I Pass  23: suminf.    0.14464 (3) obj. -1210.68 iterations 1
Cbc0038I Pass  24: suminf.    0.07752 (1) obj. -1210.68 iterations 1
Cbc0038I Pass  25: suminf.    0.77063 (5) obj. -1210.68 iterations 10
Cbc0038I Pass  26: suminf.    0.44172 (2) obj. -1210.68 iterations 4
Cbc0038I Pass  27: suminf.    0.47778 (1) obj. -1287.52 iterations 3
Cbc0038I Pass  28: suminf.    0.39195 (1) obj. -1210.68 iterations 1
Cbc0038I Pass  29: suminf.    0.06570 (1) obj. -1210.68 iterations 3
Cbc0038I Pass  30: suminf.    0.06570 (1) obj. -1210.68 iterations 2
Cbc0038I Pass  31: suminf.    0.11111 (1) obj. -1251.34 iterations 1
Cbc0038I Pass  32: suminf.    3.16109 (9) obj. -1210.68 iterations 8
Cbc0038I Pass  33: suminf.    0.42769 (2) obj. -1210.68 iterations 8
Cbc0038I Pass  34: suminf.    1.40229 (5) obj. -1210.68 iterations 10
Cbc0038I Pass  35: suminf.    0.77800 (4) obj. -1210.68 iterations 3
Cbc0038I Pass  36: suminf.    0.30000 (1) obj. -1337.09 iterations 4
Cbc0038I Rounding solution of -1175.22 is better than previous of -1154.54

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -1175.22 to -1178.57 (0.02 seconds)
Cbc0038I Round again with cutoff of -1278.05
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  36: suminf.    0.48517 (1) obj. -1278.05 iterations 0
Cbc0038I Pass  37: suminf.    0.35556 (1) obj. -1420.64 iterations 1
Cbc0038I Pass  38: suminf.    1.86928 (6) obj. -1278.05 iterations 9
Cbc0038I Pass  39: suminf.    0.99324 (4) obj. -1278.05 iterations 6
Cbc0038I Pass  40: suminf.    0.27227 (3) obj. -1278.05 iterations 6
Cbc0038I Pass  41: suminf.    0.20888 (2) obj. -1278.05 iterations 3
Cbc0038I Pass  42: suminf.    0.21111 (1) obj. -1333.51 iterations 3
Cbc0038I Pass  43: suminf.    0.14917 (1) obj. -1278.05 iterations 1
Cbc0038I Pass  44: suminf.    0.20888 (2) obj. -1278.05 iterations 2
Cbc0038I Pass  45: suminf.    0.76380 (3) obj. -1278.05 iterations 4
Cbc0038I Pass  46: suminf.    0.59196 (2) obj. -1278.05 iterations 3
Cbc0038I Pass  47: suminf.    0.21111 (1) obj. -1333.51 iterations 3
Cbc0038I Pass  48: suminf.    0.14917 (1) obj. -1278.05 iterations 1
Cbc0038I Pass  49: suminf.    1.83489 (6) obj. -1278.05 iterations 5
Cbc0038I Pass  50: suminf.    0.49695 (2) obj. -1278.05 iterations 5
Cbc0038I Pass  51: suminf.    0.46335 (2) obj. -1278.05 iterations 2
Cbc0038I Pass  52: suminf.    0.46335 (2) obj. -1278.05 iterations 0
Cbc0038I Pass  53: suminf.    0.46335 (2) obj. -1278.05 iterations 0
Cbc0038I Pass  54: suminf.    0.21111 (1) obj. -1333.51 iterations 3
Cbc0038I Pass  55: suminf.    0.14917 (1) obj. -1278.05 iterations 1
Cbc0038I Pass  56: suminf.    0.86503 (4) obj. -1278.05 iterations 5
Cbc0038I Pass  57: suminf.    0.30780 (1) obj. -1278.05 iterations 4
Cbc0038I Pass  58: suminf.    0.33333 (1) obj. -1300.91 iterations 1
Cbc0038I Pass  59: suminf.    0.21111 (1) obj. -1333.51 iterations 4
Cbc0038I Pass  60: suminf.    0.84433 (4) obj. -1278.05 iterations 6
Cbc0038I Pass  61: suminf.    0.50692 (3) obj. -1278.05 iterations 3
Cbc0038I Pass  62: suminf.    0.87815 (3) obj. -1278.05 iterations 7
Cbc0038I Pass  63: suminf.    0.46335 (2) obj. -1278.05 iterations 1
Cbc0038I Pass  64: suminf.    0.21111 (1) obj. -1333.51 iterations 2
Cbc0038I Pass  65: suminf.    0.14917 (1) obj. -1278.05 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1178.57 - took 0.02 seconds
Cbc0012I Integer solution of -1178.5732 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 40 rows 23 columns, reduced to 18 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 4
Cbc0013I At root node, 4 cuts changed objective from -1435.2492 to -1175.215 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 2.6 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1178.57325, took 21 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 47 (-16) columns and 346 (-303) elements
Clp1000I sum of infeasibilities 2.17304e-07 - average 5.05358e-09, 22 fixed columns
Coin0506I Presolve 25 (-18) rows, 25 (-22) columns and 88 (-258) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 1517.3661
Clp0000I Optimal - objective value 1517.3661
Coin0511I After Postsolve, objective 1517.3661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6507242 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 1517.3661
Clp0000I Optimal - objective value 1517.3661
Clp0000I Optimal - objective value 1517.3661
Coin0511I After Postsolve, objective 1517.3661, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1517.366102 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 47 columns (47 integer (47 of which binary)) and 356 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.503%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.57291
Cbc0038I Pass   1: suminf.    0.14444 (2) obj. -1059.83 iterations 19
Cbc0038I Pass   2: suminf.    0.14444 (2) obj. -1059.83 iterations 1
Cbc0038I Solution found of -240.361
Cbc0038I Rounding solution of -255.361 is better than previous of -240.361

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -255.361 to -843.69 (0.01 seconds)
Cbc0038I Round again with cutoff of -902.274
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.14444 (2) obj. -1059.83 iterations 0
Cbc0038I Pass   4: suminf.    0.14444 (2) obj. -1059.83 iterations 1
Cbc0038I Pass   5: suminf.    0.26066 (1) obj. -902.274 iterations 2
Cbc0038I Pass   6: suminf.    0.08889 (1) obj. -1056.05 iterations 1
Cbc0038I Pass   7: suminf.    0.60800 (3) obj. -985.637 iterations 6
Cbc0038I Pass   8: suminf.    0.60800 (3) obj. -985.637 iterations 0
Cbc0038I Pass   9: suminf.    0.25609 (1) obj. -902.274 iterations 5
Cbc0038I Solution found of -1131.54
Cbc0038I Rounding solution of -1133.54 is better than previous of -1131.54

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -1133.54 to -1151.54 (0.01 seconds)
Cbc0038I Round again with cutoff of -1207.14
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  10: suminf.    1.00306 (4) obj. -1207.14 iterations 1
Cbc0038I Pass  11: suminf.    0.94526 (5) obj. -1207.14 iterations 1
Cbc0038I Pass  12: suminf.    0.83128 (3) obj. -1207.14 iterations 6
Cbc0038I Pass  13: suminf.    0.83128 (3) obj. -1207.14 iterations 2
Cbc0038I Pass  14: suminf.    0.35556 (1) obj. -1420.64 iterations 8
Cbc0038I Pass  15: suminf.    0.40597 (1) obj. -1207.14 iterations 1
Cbc0038I Pass  16: suminf.    2.92280 (8) obj. -1207.14 iterations 12
Cbc0038I Pass  17: suminf.    0.92749 (3) obj. -1207.14 iterations 5
Cbc0038I Pass  18: suminf.    0.69477 (2) obj. -1207.14 iterations 4
Cbc0038I Pass  19: suminf.    0.46667 (1) obj. -1321.17 iterations 2
Cbc0038I Pass  20: suminf.    0.40597 (1) obj. -1207.14 iterations 1
Cbc0038I Pass  21: suminf.    1.36495 (4) obj. -1207.14 iterations 3
Cbc0038I Pass  22: suminf.    0.84917 (6) obj. -1207.14 iterations 17
Cbc0038I Pass  23: suminf.    0.83639 (4) obj. -1207.14 iterations 2
Cbc0038I Pass  24: suminf.    0.48889 (1) obj. -1316.9 iterations 5
Cbc0038I Pass  25: suminf.    0.38851 (1) obj. -1207.14 iterations 1
Cbc0038I Pass  26: suminf.    3.24976 (12) obj. -1207.14 iterations 15
Cbc0038I Pass  27: suminf.    1.52683 (9) obj. -1207.14 iterations 2
Cbc0038I Pass  28: suminf.    1.29406 (8) obj. -1207.14 iterations 3
Cbc0038I Pass  29: suminf.    0.68636 (2) obj. -1207.14 iterations 8
Cbc0038I Pass  30: suminf.    0.40000 (1) obj. -1250.67 iterations 3
Cbc0038I Pass  31: suminf.    0.44862 (1) obj. -1207.14 iterations 1
Cbc0038I Pass  32: suminf.    1.39824 (5) obj. -1207.14 iterations 12
Cbc0038I Pass  33: suminf.    0.78024 (5) obj. -1207.14 iterations 3
Cbc0038I Pass  34: suminf.    0.82461 (2) obj. -1207.14 iterations 5
Cbc0038I Pass  35: suminf.    0.45868 (1) obj. -1207.14 iterations 2
Cbc0038I Pass  36: suminf.    0.40000 (1) obj. -1259.67 iterations 1
Cbc0038I Pass  37: suminf.    1.81167 (7) obj. -1306.31 iterations 7
Cbc0038I Pass  38: suminf.    1.25368 (7) obj. -1207.14 iterations 2
Cbc0038I Pass  39: suminf.    0.40000 (1) obj. -1256.67 iterations 9
Cbc0038I Rounding solution of -1178.57 is better than previous of -1151.54

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 32 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1273.86
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  39: suminf.    1.21629 (4) obj. -1273.86 iterations 0
Cbc0038I Pass  40: suminf.    0.64919 (2) obj. -1273.86 iterations 2
Cbc0038I Pass  41: suminf.    0.35556 (1) obj. -1420.64 iterations 2
Cbc0038I Pass  42: suminf.    0.48049 (1) obj. -1273.86 iterations 1
Cbc0038I Pass  43: suminf.    0.94031 (9) obj. -1273.86 iterations 10
Cbc0038I Pass  44: suminf.    0.92564 (8) obj. -1273.86 iterations 3
Cbc0038I Pass  45: suminf.    0.35556 (1) obj. -1416.64 iterations 8
Cbc0038I Pass  46: suminf.    0.48496 (1) obj. -1273.86 iterations 1
Cbc0038I Pass  47: suminf.    1.64503 (6) obj. -1273.86 iterations 6
Cbc0038I Pass  48: suminf.    1.59848 (6) obj. -1273.86 iterations 1
Cbc0038I Pass  49: suminf.    0.23333 (1) obj. -1383.05 iterations 6
Cbc0038I Pass  50: suminf.    0.23333 (1) obj. -1383.05 iterations 2
Cbc0038I Pass  51: suminf.    0.35530 (1) obj. -1273.86 iterations 1
Cbc0038I Pass  52: suminf.    2.75696 (9) obj. -1273.86 iterations 12
Cbc0038I Pass  53: suminf.    1.70265 (9) obj. -1273.86 iterations 4
Cbc0038I Pass  54: suminf.    1.28837 (8) obj. -1273.86 iterations 1
Cbc0038I Pass  55: suminf.    0.71964 (3) obj. -1273.86 iterations 7
Cbc0038I Pass  56: suminf.    0.90130 (2) obj. -1273.86 iterations 1
Cbc0038I Pass  57: suminf.    0.90130 (2) obj. -1273.86 iterations 0
Cbc0038I Pass  58: suminf.    1.31995 (7) obj. -1273.86 iterations 9
Cbc0038I Pass  59: suminf.    1.16121 (6) obj. -1273.86 iterations 1
Cbc0038I Pass  60: suminf.    0.42222 (1) obj. -1369.69 iterations 7
Cbc0038I Pass  61: suminf.    0.47074 (1) obj. -1273.86 iterations 1
Cbc0038I Pass  62: suminf.    0.46252 (1) obj. -1273.86 iterations 1
Cbc0038I Pass  63: suminf.    0.47778 (1) obj. -1287.52 iterations 1
Cbc0038I Pass  64: suminf.    0.46252 (1) obj. -1273.86 iterations 1
Cbc0038I Pass  65: suminf.    1.56587 (4) obj. -1273.86 iterations 4
Cbc0038I Pass  66: suminf.    1.10956 (3) obj. -1273.86 iterations 1
Cbc0038I Pass  67: suminf.    0.47778 (1) obj. -1287.52 iterations 3
Cbc0038I Pass  68: suminf.    0.46252 (1) obj. -1273.86 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 47 columns, reduced to 32 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1178.57 - took 0.02 seconds
Cbc0012I Integer solution of -1178.5732 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 47 columns, reduced to 23 rows 24 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 3.7777778
Cbc0013I At root node, 9 cuts changed objective from -1429.5339 to -1291.8738 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 62 row cuts average 3.5 elements, 21 column cuts (21 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 10 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1178.57325, took 41 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.09

