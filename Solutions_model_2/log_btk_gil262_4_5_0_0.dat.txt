Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 259 (-5) columns and 1486 (-59) elements
Clp1000I sum of infeasibilities 1.72727e-05 - average 3.46146e-08, 75 fixed columns
Coin0506I Presolve 351 (-148) rows, 184 (-75) columns and 1047 (-439) elements
Clp0029I End of values pass after 184 iterations
Clp0014I Perturbing problem by 0.001% of 2.2551913 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Coin0511I After Postsolve, objective 175.71925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Coin0511I After Postsolve, objective 175.71925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 175.7192496 - 0 iterations time 0.082, Presolve 0.00, Idiot 0.08

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 259 columns (258 integer (258 of which binary)) and 1486 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 11.5396
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.6475 iterations 129
Cbc0038I Solution found of -25.6475
Cbc0038I Relaxing continuous gives -25.6475
Cbc0038I Rounding solution of -60.002 is better than previous of -25.6475

Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 121 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -60.002 to -96.7782 (0.06 seconds)
Cbc0038I Round again with cutoff of -104.672
Cbc0038I Pass   2: suminf.    2.31461 (10) obj. -104.672 iterations 30
Cbc0038I Pass   3: suminf.    2.31461 (10) obj. -104.672 iterations 0
Cbc0038I Pass   4: suminf.    2.04259 (6) obj. -104.672 iterations 27
Cbc0038I Pass   5: suminf.    2.00602 (7) obj. -104.672 iterations 9
Cbc0038I Pass   6: suminf.    2.59339 (7) obj. -104.672 iterations 8
Cbc0038I Pass   7: suminf.    2.03957 (7) obj. -104.672 iterations 10
Cbc0038I Pass   8: suminf.    2.03957 (7) obj. -104.672 iterations 2
Cbc0038I Pass   9: suminf.    2.65068 (7) obj. -104.672 iterations 21
Cbc0038I Pass  10: suminf.    2.05160 (8) obj. -104.672 iterations 8
Cbc0038I Pass  11: suminf.    2.50581 (9) obj. -104.672 iterations 19
Cbc0038I Pass  12: suminf.    2.26145 (9) obj. -104.672 iterations 32
Cbc0038I Pass  13: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I Pass  14: suminf.    2.55778 (8) obj. -104.672 iterations 23
Cbc0038I Pass  15: suminf.    2.43508 (6) obj. -104.672 iterations 7
Cbc0038I Pass  16: suminf.    2.28060 (8) obj. -104.672 iterations 19
Cbc0038I Pass  17: suminf.    2.28060 (8) obj. -104.672 iterations 1
Cbc0038I Pass  18: suminf.    2.74800 (8) obj. -104.672 iterations 29
Cbc0038I Pass  19: suminf.    2.05160 (8) obj. -104.672 iterations 16
Cbc0038I Pass  20: suminf.    2.50581 (9) obj. -104.672 iterations 21
Cbc0038I Pass  21: suminf.    2.26145 (9) obj. -104.672 iterations 34
Cbc0038I Pass  22: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I Pass  23: suminf.    2.55778 (8) obj. -104.672 iterations 23
Cbc0038I Pass  24: suminf.    2.43508 (6) obj. -104.672 iterations 7
Cbc0038I Pass  25: suminf.    2.28060 (8) obj. -104.672 iterations 19
Cbc0038I Pass  26: suminf.    2.28060 (8) obj. -104.672 iterations 1
Cbc0038I Pass  27: suminf.    2.74800 (8) obj. -104.672 iterations 27
Cbc0038I Pass  28: suminf.    2.05160 (8) obj. -104.672 iterations 14
Cbc0038I Pass  29: suminf.    2.50581 (9) obj. -104.672 iterations 19
Cbc0038I Pass  30: suminf.    2.26145 (9) obj. -104.672 iterations 32
Cbc0038I Pass  31: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 127 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -96.7782 - took 0.10 seconds
Cbc0012I Integer solution of -96.7782 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 121 rows 66 columns
Cbc0031I 30 added rows had average density of 145.83333
Cbc0013I At root node, 30 cuts changed objective from -175.71925 to -155.45121 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27931 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.439 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2359 row cuts average 255.1 elements, 0 column cuts (0 active)  in 0.410 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.441 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 248.6 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -96.7782 best solution, best possible -155.45121 (3.55 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 109 rows 60 columns
Cbc0010I After 48 nodes, 9 on tree, -96.7782 best solution, best possible -155.45121 (4.25 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 64 rows 40 columns
Cbc0010I After 132 nodes, 7 on tree, -96.7782 best solution, best possible -155.45007 (4.95 seconds)
Cbc0001I Search completed - best objective -96.77820000000003, took 20282 iterations and 156 nodes (5.04 seconds)
Cbc0032I Strong branching done 1818 times (38872 iterations), fathomed 6 nodes and fixed 66 variables
Cbc0035I Maximum depth 54, 1118 variables fixed on reduced cost
Total time (CPU seconds):       4.95   (Wallclock seconds):       5.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 382 (-144) rows, 399 (-125) columns and 19969 (-15767) elements
Clp1000I sum of infeasibilities 1.42574e-05 - average 3.7323e-08, 240 fixed columns
Coin0506I Presolve 143 (-239) rows, 157 (-242) columns and 583 (-19386) elements
Clp0006I 0  Obj -14.519955 Primal inf 7.5905941e-07 (5) Dual inf 2.7775523e+09 (155)
Clp0029I End of values pass after 157 iterations
Clp0014I Perturbing problem by 0.001% of 1.56819 - largest nonzero change 2.4561333e-05 ( 0.0011689744%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value -12.01951
Clp0000I Optimal - objective value -12.01951
Coin0511I After Postsolve, objective -12.01951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -12.01951 Dual inf 201.8388 (144)
Clp0014I Perturbing problem by 0.001% of 2.1537262 - largest nonzero change 2.4947591e-05 ( 0.0014788064%) - largest zero change 2.9887845e-05
Clp0000I Optimal - objective value 236.3277
Clp0000I Optimal - objective value 236.3277
Clp0000I Optimal - objective value 236.3277
Coin0511I After Postsolve, objective 236.3277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 236.3277043 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0004I processed model has 382 rows, 399 columns (399 integer (399 of which binary)) and 19969 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 141 integers unsatisfied sum - 5.8528
Cbc0038I Pass   1: suminf.    2.67425 (112) obj. -223.843 iterations 61
Cbc0038I Pass   2: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass   3: suminf.    1.80853 (90) obj. -141.637 iterations 22
Cbc0038I Pass   4: suminf.    1.30813 (72) obj. -119.281 iterations 18
Cbc0038I Pass   5: suminf.    0.72545 (45) obj. -86.9973 iterations 27
Cbc0038I Pass   6: suminf.    0.42459 (28) obj. -67.3513 iterations 17
Cbc0038I Pass   7: suminf.    0.20044 (14) obj. -50.6233 iterations 14
Cbc0038I Solution found of -33.868
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -54.101
Cbc0038I Pass   8: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass   9: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  10: suminf.    1.90011 (93) obj. -147.454 iterations 19
Cbc0038I Pass  11: suminf.    1.28344 (71) obj. -117.331 iterations 22
Cbc0038I Pass  12: suminf.    0.91784 (55) obj. -96.8049 iterations 16
Cbc0038I Pass  13: suminf.    0.47520 (31) obj. -70.3007 iterations 24
Cbc0038I Pass  14: suminf.    0.32463 (14) obj. -54.101 iterations 34
Cbc0038I Pass  15: suminf.    0.05039 (1) obj. -64.2556 iterations 14
Cbc0038I Pass  16: suminf.    0.36772 (1) obj. -54.101 iterations 1
Cbc0038I Pass  17: suminf.    2.28044 (29) obj. -54.101 iterations 78
Cbc0038I Pass  18: suminf.    1.72983 (26) obj. -54.101 iterations 17
Cbc0038I Pass  19: suminf.    1.30014 (15) obj. -54.101 iterations 57
Cbc0038I Pass  20: suminf.    0.68347 (13) obj. -56.2984 iterations 11
Cbc0038I Pass  21: suminf.    0.74058 (6) obj. -54.101 iterations 42
Cbc0038I Pass  22: suminf.    0.74058 (6) obj. -54.101 iterations 8
Cbc0038I Pass  23: suminf.    0.76119 (5) obj. -54.101 iterations 26
Cbc0038I Pass  24: suminf.    0.76119 (5) obj. -54.101 iterations 9
Cbc0038I Pass  25: suminf.    1.41005 (6) obj. -54.101 iterations 13
Cbc0038I Pass  26: suminf.    1.16934 (6) obj. -54.101 iterations 16
Cbc0038I Pass  27: suminf.    0.67039 (4) obj. -54.101 iterations 11
Cbc0038I Pass  28: suminf.    0.76119 (5) obj. -54.101 iterations 16
Cbc0038I Pass  29: suminf.    0.76119 (5) obj. -54.101 iterations 0
Cbc0038I Pass  30: suminf.    1.41005 (6) obj. -54.101 iterations 11
Cbc0038I Pass  31: suminf.    1.16934 (6) obj. -54.101 iterations 15
Cbc0038I Pass  32: suminf.    0.67039 (4) obj. -54.101 iterations 11
Cbc0038I Pass  33: suminf.    0.76119 (5) obj. -54.101 iterations 16
Cbc0038I Pass  34: suminf.    0.76119 (5) obj. -54.101 iterations 0
Cbc0038I Pass  35: suminf.    1.41005 (6) obj. -54.101 iterations 12
Cbc0038I Pass  36: suminf.    1.16934 (6) obj. -54.101 iterations 16
Cbc0038I Pass  37: suminf.    0.67039 (4) obj. -54.101 iterations 11
Cbc0038I Rounding solution of -38.3728 is better than previous of -33.868

Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 16 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -38.3728 to -39.0574 (0.23 seconds)
Cbc0038I Round again with cutoff of -90.5202
Cbc0038I Pass  37: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  38: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  39: suminf.    1.80853 (90) obj. -141.637 iterations 22
Cbc0038I Pass  40: suminf.    1.18564 (67) obj. -112.453 iterations 23
Cbc0038I Pass  41: suminf.    0.91535 (42) obj. -90.5202 iterations 37
Cbc0038I Pass  42: suminf.    0.53247 (19) obj. -90.5202 iterations 36
Cbc0038I Pass  43: suminf.    0.90025 (6) obj. -90.5202 iterations 78
Cbc0038I Pass  44: suminf.    0.87201 (11) obj. -90.5202 iterations 17
Cbc0038I Pass  45: suminf.    1.04246 (8) obj. -90.5202 iterations 27
Cbc0038I Pass  46: suminf.    1.04246 (8) obj. -90.5202 iterations 1
Cbc0038I Pass  47: suminf.    0.94608 (8) obj. -90.5202 iterations 23
Cbc0038I Pass  48: suminf.    0.92573 (7) obj. -90.5202 iterations 14
Cbc0038I Pass  49: suminf.    0.92517 (8) obj. -90.5202 iterations 8
Cbc0038I Pass  50: suminf.    0.90482 (7) obj. -90.5202 iterations 9
Cbc0038I Pass  51: suminf.    0.94608 (8) obj. -90.5202 iterations 8
Cbc0038I Pass  52: suminf.    2.06936 (27) obj. -90.5202 iterations 71
Cbc0038I Pass  53: suminf.    0.96164 (25) obj. -90.5202 iterations 19
Cbc0038I Pass  54: suminf.    0.99704 (10) obj. -90.5202 iterations 52
Cbc0038I Pass  55: suminf.    0.58215 (9) obj. -90.5202 iterations 26
Cbc0038I Pass  56: suminf.    0.95564 (10) obj. -90.5202 iterations 17
Cbc0038I Pass  57: suminf.    0.94020 (9) obj. -90.5202 iterations 8
Cbc0038I Pass  58: suminf.    0.92078 (10) obj. -90.5202 iterations 11
Cbc0038I Pass  59: suminf.    0.90534 (9) obj. -90.5202 iterations 8
Cbc0038I Pass  60: suminf.    0.95564 (10) obj. -90.5202 iterations 11
Cbc0038I Pass  61: suminf.    2.26907 (44) obj. -90.5202 iterations 55
Cbc0038I Pass  62: suminf.    1.92910 (40) obj. -90.5202 iterations 44
Cbc0038I Pass  63: suminf.    1.75057 (35) obj. -90.5202 iterations 18
Cbc0038I Pass  64: suminf.    1.43218 (34) obj. -90.5202 iterations 7
Cbc0038I Pass  65: suminf.    1.48568 (29) obj. -90.5202 iterations 23
Cbc0038I Pass  66: suminf.    1.48568 (29) obj. -90.5202 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 234 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 115 rows 123 columns
Cbc0038I Mini branch and bound improved solution from -39.0574 to -69.3083 (0.36 seconds)
Cbc0038I Round again with cutoff of -134.223
Cbc0038I Pass  66: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  67: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  68: suminf.    1.77823 (89) obj. -140.668 iterations 23
Cbc0038I Pass  69: suminf.    1.76453 (75) obj. -134.223 iterations 27
Cbc0038I Pass  70: suminf.    1.39699 (53) obj. -134.223 iterations 60
Cbc0038I Pass  71: suminf.    1.15625 (52) obj. -134.223 iterations 18
Cbc0038I Pass  72: suminf.    1.22368 (44) obj. -134.223 iterations 89
Cbc0038I Pass  73: suminf.    1.21807 (41) obj. -134.223 iterations 10
Cbc0038I Pass  74: suminf.    1.66651 (56) obj. -134.223 iterations 32
Cbc0038I Pass  75: suminf.    0.87897 (60) obj. -134.223 iterations 5
Cbc0038I Pass  76: suminf.    3.11863 (51) obj. -134.223 iterations 55
Cbc0038I Pass  77: suminf.    2.62448 (51) obj. -134.223 iterations 16
Cbc0038I Pass  78: suminf.    2.85536 (48) obj. -134.223 iterations 37
Cbc0038I Pass  79: suminf.    2.29886 (49) obj. -134.223 iterations 26
Cbc0038I Pass  80: suminf.    2.26584 (46) obj. -134.223 iterations 44
Cbc0038I Pass  81: suminf.    2.26248 (46) obj. -134.223 iterations 8
Cbc0038I Pass  82: suminf.    2.26584 (46) obj. -134.223 iterations 9
Cbc0038I Pass  83: suminf.    3.22317 (54) obj. -134.223 iterations 53
Cbc0038I Pass  84: suminf.    2.26793 (52) obj. -134.223 iterations 25
Cbc0038I Pass  85: suminf.    2.67095 (51) obj. -134.223 iterations 35
Cbc0038I Pass  86: suminf.    2.45506 (52) obj. -134.223 iterations 22
Cbc0038I Pass  87: suminf.    2.67095 (51) obj. -134.223 iterations 21
Cbc0038I Pass  88: suminf.    3.45745 (54) obj. -134.223 iterations 69
Cbc0038I Pass  89: suminf.    3.35177 (53) obj. -134.223 iterations 8
Cbc0038I Pass  90: suminf.    2.10712 (41) obj. -134.223 iterations 58
Cbc0038I Pass  91: suminf.    1.46370 (41) obj. -134.223 iterations 13
Cbc0038I Pass  92: suminf.    1.57492 (37) obj. -134.223 iterations 42
Cbc0038I Pass  93: suminf.    1.49314 (37) obj. -134.223 iterations 10
Cbc0038I Pass  94: suminf.    1.54771 (54) obj. -134.223 iterations 75
Cbc0038I Pass  95: suminf.    0.99514 (36) obj. -134.223 iterations 43
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 226 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 60 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.45 seconds - Feasibility pump exiting with objective of -69.3083 - took 0.35 seconds
Cbc0012I Integer solution of -69.30834 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 76 rows 80 columns
Cbc0031I 150 added rows had average density of 71.726667
Cbc0013I At root node, 150 cuts changed objective from -236.19704 to -125.62333 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 30569 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.582 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3225 row cuts average 359.7 elements, 0 column cuts (0 active)  in 1.200 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 471 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6428 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.705 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2588 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.821 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 433 row cuts average 204.5 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 341 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.435 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -69.30834 best solution, best possible -125.62333 (8.41 seconds)
Cbc0010I After 2 nodes, 3 on tree, -69.30834 best solution, best possible -125.62333 (9.25 seconds)
Cbc0010I After 3 nodes, 4 on tree, -69.30834 best solution, best possible -125.62333 (9.97 seconds)
Cbc0012I Integer solution of -75.31684 found by DiveCoefficient after 12490 iterations and 4 nodes (10.08 seconds)
Cbc0012I Integer solution of -79.386113 found by rounding after 12492 iterations and 5 nodes (10.09 seconds)
Cbc0012I Integer solution of -89.83975 found by DiveCoefficient after 12504 iterations and 5 nodes (10.12 seconds)
Cbc0012I Integer solution of -92.660763 found by rounding after 12675 iterations and 11 nodes (10.28 seconds)
Cbc0004I Integer solution of -96.7782 found after 12887 iterations and 16 nodes (10.36 seconds)
Cbc0010I After 22 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (10.75 seconds)
Cbc0010I After 25 nodes, 7 on tree, -96.7782 best solution, best possible -125.62333 (11.62 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 86 rows 97 columns
Cbc0010I After 42 nodes, 8 on tree, -96.7782 best solution, best possible -125.62333 (12.43 seconds)
Cbc0010I After 66 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (13.13 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 29 rows 38 columns
Cbc0010I After 102 nodes, 3 on tree, -96.7782 best solution, best possible -125.62333 (14.29 seconds)
Cbc0010I After 104 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (15.06 seconds)
Cbc0010I After 105 nodes, 6 on tree, -96.7782 best solution, best possible -125.62333 (15.82 seconds)
Cbc0010I After 109 nodes, 7 on tree, -96.7782 best solution, best possible -125.62333 (16.54 seconds)
Cbc0010I After 128 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (17.32 seconds)
Cbc0010I After 134 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (18.09 seconds)
Cbc0010I After 150 nodes, 6 on tree, -96.7782 best solution, best possible -125.62333 (18.79 seconds)
Cbc0010I After 170 nodes, 1 on tree, -96.7782 best solution, best possible -125.00312 (19.86 seconds)
Cbc0010I After 172 nodes, 3 on tree, -96.7782 best solution, best possible -125.00312 (20.76 seconds)
Cbc0010I After 176 nodes, 7 on tree, -96.7782 best solution, best possible -125.00312 (21.55 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 154 rows 165 columns
Cbc0010I After 200 nodes, 8 on tree, -96.7782 best solution, best possible -125.00312 (23.83 seconds)
Cbc0010I After 238 nodes, 7 on tree, -96.7782 best solution, best possible -125.00312 (24.54 seconds)
Cbc0010I After 268 nodes, 5 on tree, -96.7782 best solution, best possible -118.50976 (25.25 seconds)
Cbc0001I Search completed - best objective -96.77820000000003, took 35269 iterations and 312 nodes (25.68 seconds)
Cbc0032I Strong branching done 1522 times (43927 iterations), fathomed 6 nodes and fixed 1 variables
Cbc0035I Maximum depth 25, 1335 variables fixed on reduced cost
Total time (CPU seconds):       25.06   (Wallclock seconds):       25.78

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 259 (-5) columns and 1486 (-59) elements
Clp1000I sum of infeasibilities 1.72727e-05 - average 3.46146e-08, 75 fixed columns
Coin0506I Presolve 351 (-148) rows, 184 (-75) columns and 1047 (-439) elements
Clp0029I End of values pass after 184 iterations
Clp0014I Perturbing problem by 0.001% of 2.2551913 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Coin0511I After Postsolve, objective 175.71925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Clp0000I Optimal - objective value 175.71925
Coin0511I After Postsolve, objective 175.71925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 175.7192496 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 259 columns (258 integer (258 of which binary)) and 1486 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 11.5396
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.6475 iterations 129
Cbc0038I Solution found of -25.6475
Cbc0038I Relaxing continuous gives -25.6475
Cbc0038I Rounding solution of -60.002 is better than previous of -25.6475

Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 121 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -60.002 to -96.7782 (0.07 seconds)
Cbc0038I Round again with cutoff of -104.672
Cbc0038I Pass   2: suminf.    2.31461 (10) obj. -104.672 iterations 30
Cbc0038I Pass   3: suminf.    2.31461 (10) obj. -104.672 iterations 0
Cbc0038I Pass   4: suminf.    2.04259 (6) obj. -104.672 iterations 27
Cbc0038I Pass   5: suminf.    2.00602 (7) obj. -104.672 iterations 9
Cbc0038I Pass   6: suminf.    2.59339 (7) obj. -104.672 iterations 8
Cbc0038I Pass   7: suminf.    2.03957 (7) obj. -104.672 iterations 10
Cbc0038I Pass   8: suminf.    2.03957 (7) obj. -104.672 iterations 2
Cbc0038I Pass   9: suminf.    2.65068 (7) obj. -104.672 iterations 21
Cbc0038I Pass  10: suminf.    2.05160 (8) obj. -104.672 iterations 8
Cbc0038I Pass  11: suminf.    2.50581 (9) obj. -104.672 iterations 19
Cbc0038I Pass  12: suminf.    2.26145 (9) obj. -104.672 iterations 32
Cbc0038I Pass  13: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I Pass  14: suminf.    2.55778 (8) obj. -104.672 iterations 23
Cbc0038I Pass  15: suminf.    2.43508 (6) obj. -104.672 iterations 7
Cbc0038I Pass  16: suminf.    2.28060 (8) obj. -104.672 iterations 19
Cbc0038I Pass  17: suminf.    2.28060 (8) obj. -104.672 iterations 1
Cbc0038I Pass  18: suminf.    2.74800 (8) obj. -104.672 iterations 29
Cbc0038I Pass  19: suminf.    2.05160 (8) obj. -104.672 iterations 16
Cbc0038I Pass  20: suminf.    2.50581 (9) obj. -104.672 iterations 21
Cbc0038I Pass  21: suminf.    2.26145 (9) obj. -104.672 iterations 34
Cbc0038I Pass  22: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I Pass  23: suminf.    2.55778 (8) obj. -104.672 iterations 23
Cbc0038I Pass  24: suminf.    2.43508 (6) obj. -104.672 iterations 7
Cbc0038I Pass  25: suminf.    2.28060 (8) obj. -104.672 iterations 19
Cbc0038I Pass  26: suminf.    2.28060 (8) obj. -104.672 iterations 1
Cbc0038I Pass  27: suminf.    2.74800 (8) obj. -104.672 iterations 27
Cbc0038I Pass  28: suminf.    2.05160 (8) obj. -104.672 iterations 14
Cbc0038I Pass  29: suminf.    2.50581 (9) obj. -104.672 iterations 19
Cbc0038I Pass  30: suminf.    2.26145 (9) obj. -104.672 iterations 32
Cbc0038I Pass  31: suminf.    2.22034 (8) obj. -104.672 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 259 columns, reduced to 127 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -96.7782 - took 0.11 seconds
Cbc0012I Integer solution of -96.7782 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 121 rows 66 columns
Cbc0031I 30 added rows had average density of 145.83333
Cbc0013I At root node, 30 cuts changed objective from -175.71925 to -155.45121 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27931 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.446 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2359 row cuts average 255.1 elements, 0 column cuts (0 active)  in 0.412 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.446 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 248.6 elements, 0 column cuts (0 active)  in 0.196 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -96.7782 best solution, best possible -155.45121 (3.58 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 109 rows 60 columns
Cbc0010I After 43 nodes, 8 on tree, -96.7782 best solution, best possible -155.45121 (4.28 seconds)
Cbc0038I Full problem 499 rows 259 columns, reduced to 64 rows 40 columns
Cbc0010I After 124 nodes, 7 on tree, -96.7782 best solution, best possible -155.45007 (4.99 seconds)
Cbc0001I Search completed - best objective -96.77820000000003, took 20282 iterations and 156 nodes (5.12 seconds)
Cbc0032I Strong branching done 1818 times (38872 iterations), fathomed 6 nodes and fixed 66 variables
Cbc0035I Maximum depth 54, 1118 variables fixed on reduced cost
Total time (CPU seconds):       5.03   (Wallclock seconds):       5.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 382 (-145) rows, 399 (-126) columns and 19969 (-15768) elements
Clp1000I sum of infeasibilities 1.42574e-05 - average 3.7323e-08, 240 fixed columns
Coin0506I Presolve 143 (-239) rows, 157 (-242) columns and 583 (-19386) elements
Clp0006I 0  Obj -14.519955 Primal inf 7.5905941e-07 (5) Dual inf 2.7775523e+09 (155)
Clp0029I End of values pass after 157 iterations
Clp0014I Perturbing problem by 0.001% of 1.56819 - largest nonzero change 2.4561333e-05 ( 0.0011689744%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value -12.01951
Clp0000I Optimal - objective value -12.01951
Coin0511I After Postsolve, objective -12.01951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -12.01951 Dual inf 201.8388 (144)
Clp0014I Perturbing problem by 0.001% of 2.1537262 - largest nonzero change 2.4947591e-05 ( 0.0014788064%) - largest zero change 2.9887845e-05
Clp0000I Optimal - objective value 236.3277
Clp0000I Optimal - objective value 236.3277
Clp0000I Optimal - objective value 236.3277
Coin0511I After Postsolve, objective 236.3277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 236.3277043 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 382 rows, 399 columns (399 integer (399 of which binary)) and 19969 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 141 integers unsatisfied sum - 5.8528
Cbc0038I Pass   1: suminf.    2.67425 (112) obj. -223.843 iterations 61
Cbc0038I Pass   2: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass   3: suminf.    1.80853 (90) obj. -141.637 iterations 22
Cbc0038I Pass   4: suminf.    1.30813 (72) obj. -119.281 iterations 18
Cbc0038I Pass   5: suminf.    0.72545 (45) obj. -86.9973 iterations 27
Cbc0038I Pass   6: suminf.    0.42459 (28) obj. -67.3513 iterations 17
Cbc0038I Pass   7: suminf.    0.20044 (14) obj. -50.6233 iterations 14
Cbc0038I Solution found of -33.868
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -54.101
Cbc0038I Pass   8: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass   9: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  10: suminf.    1.90011 (93) obj. -147.454 iterations 19
Cbc0038I Pass  11: suminf.    1.28344 (71) obj. -117.331 iterations 22
Cbc0038I Pass  12: suminf.    0.91784 (55) obj. -96.8049 iterations 16
Cbc0038I Pass  13: suminf.    0.47520 (31) obj. -70.3007 iterations 24
Cbc0038I Pass  14: suminf.    0.32463 (14) obj. -54.101 iterations 34
Cbc0038I Pass  15: suminf.    0.05039 (1) obj. -64.2556 iterations 14
Cbc0038I Pass  16: suminf.    0.36772 (1) obj. -54.101 iterations 1
Cbc0038I Pass  17: suminf.    2.28044 (29) obj. -54.101 iterations 78
Cbc0038I Pass  18: suminf.    1.72983 (26) obj. -54.101 iterations 17
Cbc0038I Pass  19: suminf.    1.30014 (15) obj. -54.101 iterations 57
Cbc0038I Pass  20: suminf.    0.68347 (13) obj. -56.2984 iterations 11
Cbc0038I Pass  21: suminf.    0.74058 (6) obj. -54.101 iterations 42
Cbc0038I Pass  22: suminf.    0.74058 (6) obj. -54.101 iterations 8
Cbc0038I Pass  23: suminf.    0.76119 (5) obj. -54.101 iterations 26
Cbc0038I Pass  24: suminf.    0.76119 (5) obj. -54.101 iterations 9
Cbc0038I Pass  25: suminf.    1.41005 (6) obj. -54.101 iterations 13
Cbc0038I Pass  26: suminf.    1.16934 (6) obj. -54.101 iterations 16
Cbc0038I Pass  27: suminf.    0.67039 (4) obj. -54.101 iterations 11
Cbc0038I Pass  28: suminf.    0.76119 (5) obj. -54.101 iterations 16
Cbc0038I Pass  29: suminf.    0.76119 (5) obj. -54.101 iterations 0
Cbc0038I Pass  30: suminf.    1.41005 (6) obj. -54.101 iterations 11
Cbc0038I Pass  31: suminf.    1.16934 (6) obj. -54.101 iterations 15
Cbc0038I Pass  32: suminf.    0.67039 (4) obj. -54.101 iterations 11
Cbc0038I Pass  33: suminf.    0.76119 (5) obj. -54.101 iterations 16
Cbc0038I Pass  34: suminf.    0.76119 (5) obj. -54.101 iterations 0
Cbc0038I Pass  35: suminf.    1.41005 (6) obj. -54.101 iterations 12
Cbc0038I Pass  36: suminf.    1.16934 (6) obj. -54.101 iterations 16
Cbc0038I Pass  37: suminf.    0.67039 (4) obj. -54.101 iterations 11
Cbc0038I Rounding solution of -38.3728 is better than previous of -33.868

Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 16 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -38.3728 to -39.0574 (0.24 seconds)
Cbc0038I Round again with cutoff of -90.5202
Cbc0038I Pass  37: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  38: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  39: suminf.    1.80853 (90) obj. -141.637 iterations 22
Cbc0038I Pass  40: suminf.    1.18564 (67) obj. -112.453 iterations 23
Cbc0038I Pass  41: suminf.    0.91535 (42) obj. -90.5202 iterations 37
Cbc0038I Pass  42: suminf.    0.53247 (19) obj. -90.5202 iterations 36
Cbc0038I Pass  43: suminf.    0.90025 (6) obj. -90.5202 iterations 78
Cbc0038I Pass  44: suminf.    0.87201 (11) obj. -90.5202 iterations 17
Cbc0038I Pass  45: suminf.    1.04246 (8) obj. -90.5202 iterations 27
Cbc0038I Pass  46: suminf.    1.04246 (8) obj. -90.5202 iterations 1
Cbc0038I Pass  47: suminf.    0.94608 (8) obj. -90.5202 iterations 23
Cbc0038I Pass  48: suminf.    0.92573 (7) obj. -90.5202 iterations 14
Cbc0038I Pass  49: suminf.    0.92517 (8) obj. -90.5202 iterations 8
Cbc0038I Pass  50: suminf.    0.90482 (7) obj. -90.5202 iterations 9
Cbc0038I Pass  51: suminf.    0.94608 (8) obj. -90.5202 iterations 8
Cbc0038I Pass  52: suminf.    2.06936 (27) obj. -90.5202 iterations 71
Cbc0038I Pass  53: suminf.    0.96164 (25) obj. -90.5202 iterations 19
Cbc0038I Pass  54: suminf.    0.99704 (10) obj. -90.5202 iterations 52
Cbc0038I Pass  55: suminf.    0.58215 (9) obj. -90.5202 iterations 26
Cbc0038I Pass  56: suminf.    0.95564 (10) obj. -90.5202 iterations 17
Cbc0038I Pass  57: suminf.    0.94020 (9) obj. -90.5202 iterations 8
Cbc0038I Pass  58: suminf.    0.92078 (10) obj. -90.5202 iterations 11
Cbc0038I Pass  59: suminf.    0.90534 (9) obj. -90.5202 iterations 8
Cbc0038I Pass  60: suminf.    0.95564 (10) obj. -90.5202 iterations 11
Cbc0038I Pass  61: suminf.    2.26907 (44) obj. -90.5202 iterations 55
Cbc0038I Pass  62: suminf.    1.92910 (40) obj. -90.5202 iterations 44
Cbc0038I Pass  63: suminf.    1.75057 (35) obj. -90.5202 iterations 18
Cbc0038I Pass  64: suminf.    1.43218 (34) obj. -90.5202 iterations 7
Cbc0038I Pass  65: suminf.    1.48568 (29) obj. -90.5202 iterations 23
Cbc0038I Pass  66: suminf.    1.48568 (29) obj. -90.5202 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 234 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 115 rows 123 columns
Cbc0038I Mini branch and bound improved solution from -39.0574 to -69.3083 (0.37 seconds)
Cbc0038I Round again with cutoff of -134.223
Cbc0038I Pass  66: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  67: suminf.    2.67425 (112) obj. -223.843 iterations 0
Cbc0038I Pass  68: suminf.    1.77823 (89) obj. -140.668 iterations 23
Cbc0038I Pass  69: suminf.    1.76453 (75) obj. -134.223 iterations 27
Cbc0038I Pass  70: suminf.    1.39699 (53) obj. -134.223 iterations 60
Cbc0038I Pass  71: suminf.    1.15625 (52) obj. -134.223 iterations 18
Cbc0038I Pass  72: suminf.    1.22368 (44) obj. -134.223 iterations 89
Cbc0038I Pass  73: suminf.    1.21807 (41) obj. -134.223 iterations 10
Cbc0038I Pass  74: suminf.    1.66651 (56) obj. -134.223 iterations 32
Cbc0038I Pass  75: suminf.    0.87897 (60) obj. -134.223 iterations 5
Cbc0038I Pass  76: suminf.    3.11863 (51) obj. -134.223 iterations 55
Cbc0038I Pass  77: suminf.    2.62448 (51) obj. -134.223 iterations 16
Cbc0038I Pass  78: suminf.    2.85536 (48) obj. -134.223 iterations 37
Cbc0038I Pass  79: suminf.    2.29886 (49) obj. -134.223 iterations 26
Cbc0038I Pass  80: suminf.    2.26584 (46) obj. -134.223 iterations 44
Cbc0038I Pass  81: suminf.    2.26248 (46) obj. -134.223 iterations 8
Cbc0038I Pass  82: suminf.    2.26584 (46) obj. -134.223 iterations 9
Cbc0038I Pass  83: suminf.    3.22317 (54) obj. -134.223 iterations 53
Cbc0038I Pass  84: suminf.    2.26793 (52) obj. -134.223 iterations 25
Cbc0038I Pass  85: suminf.    2.67095 (51) obj. -134.223 iterations 35
Cbc0038I Pass  86: suminf.    2.45506 (52) obj. -134.223 iterations 22
Cbc0038I Pass  87: suminf.    2.67095 (51) obj. -134.223 iterations 21
Cbc0038I Pass  88: suminf.    3.45745 (54) obj. -134.223 iterations 69
Cbc0038I Pass  89: suminf.    3.35177 (53) obj. -134.223 iterations 8
Cbc0038I Pass  90: suminf.    2.10712 (41) obj. -134.223 iterations 58
Cbc0038I Pass  91: suminf.    1.46370 (41) obj. -134.223 iterations 13
Cbc0038I Pass  92: suminf.    1.57492 (37) obj. -134.223 iterations 42
Cbc0038I Pass  93: suminf.    1.49314 (37) obj. -134.223 iterations 10
Cbc0038I Pass  94: suminf.    1.54771 (54) obj. -134.223 iterations 75
Cbc0038I Pass  95: suminf.    0.99514 (36) obj. -134.223 iterations 43
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 226 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 60 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I After 0.47 seconds - Feasibility pump exiting with objective of -69.3083 - took 0.36 seconds
Cbc0012I Integer solution of -69.30834 found by feasibility pump after 0 iterations and 0 nodes (0.47 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 76 rows 80 columns
Cbc0031I 150 added rows had average density of 71.726667
Cbc0013I At root node, 150 cuts changed objective from -236.19704 to -125.62333 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 30569 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.592 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3225 row cuts average 359.7 elements, 0 column cuts (0 active)  in 1.215 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 471 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6428 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.225 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.720 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2588 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.835 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 433 row cuts average 204.5 elements, 0 column cuts (0 active)  in 0.267 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 341 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.443 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -69.30834 best solution, best possible -125.62333 (8.56 seconds)
Cbc0010I After 2 nodes, 3 on tree, -69.30834 best solution, best possible -125.62333 (9.43 seconds)
Cbc0010I After 3 nodes, 4 on tree, -69.30834 best solution, best possible -125.62333 (10.16 seconds)
Cbc0012I Integer solution of -75.31684 found by DiveCoefficient after 12490 iterations and 4 nodes (10.27 seconds)
Cbc0012I Integer solution of -79.386113 found by rounding after 12492 iterations and 5 nodes (10.28 seconds)
Cbc0012I Integer solution of -89.83975 found by DiveCoefficient after 12504 iterations and 5 nodes (10.31 seconds)
Cbc0012I Integer solution of -92.660763 found by rounding after 12675 iterations and 11 nodes (10.49 seconds)
Cbc0004I Integer solution of -96.7782 found after 12887 iterations and 16 nodes (10.57 seconds)
Cbc0010I After 22 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (10.95 seconds)
Cbc0010I After 25 nodes, 7 on tree, -96.7782 best solution, best possible -125.62333 (11.80 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 86 rows 97 columns
Cbc0010I After 42 nodes, 8 on tree, -96.7782 best solution, best possible -125.62333 (12.62 seconds)
Cbc0010I After 66 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (13.33 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 29 rows 38 columns
Cbc0010I After 102 nodes, 3 on tree, -96.7782 best solution, best possible -125.62333 (14.53 seconds)
Cbc0010I After 104 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (15.30 seconds)
Cbc0010I After 105 nodes, 6 on tree, -96.7782 best solution, best possible -125.62333 (16.07 seconds)
Cbc0010I After 109 nodes, 7 on tree, -96.7782 best solution, best possible -125.62333 (16.84 seconds)
Cbc0010I After 128 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (17.61 seconds)
Cbc0010I After 134 nodes, 5 on tree, -96.7782 best solution, best possible -125.62333 (18.38 seconds)
Cbc0010I After 149 nodes, 7 on tree, -96.7782 best solution, best possible -125.62333 (19.08 seconds)
Cbc0010I After 170 nodes, 1 on tree, -96.7782 best solution, best possible -125.00312 (20.18 seconds)
Cbc0010I After 172 nodes, 3 on tree, -96.7782 best solution, best possible -125.00312 (21.08 seconds)
Cbc0010I After 176 nodes, 7 on tree, -96.7782 best solution, best possible -125.00312 (21.86 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 154 rows 165 columns
Cbc0010I After 200 nodes, 8 on tree, -96.7782 best solution, best possible -125.00312 (24.17 seconds)
Cbc0010I After 238 nodes, 7 on tree, -96.7782 best solution, best possible -125.00312 (24.90 seconds)
Cbc0010I After 268 nodes, 5 on tree, -96.7782 best solution, best possible -118.50976 (25.62 seconds)
Cbc0001I Search completed - best objective -96.77820000000003, took 35269 iterations and 312 nodes (26.05 seconds)
Cbc0032I Strong branching done 1522 times (43927 iterations), fathomed 6 nodes and fixed 1 variables
Cbc0035I Maximum depth 25, 1335 variables fixed on reduced cost
Total time (CPU seconds):       25.44   (Wallclock seconds):       26.16

