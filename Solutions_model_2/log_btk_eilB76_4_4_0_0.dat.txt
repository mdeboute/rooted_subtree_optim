Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 73 (-5) columns and 399 (-54) elements
Clp1000I sum of infeasibilities 0.000647483 - average 4.98064e-06, 13 fixed columns
Coin0506I Presolve 99 (-31) rows, 57 (-16) columns and 305 (-94) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 70.604898
Clp0000I Optimal - objective value 70.604898
Coin0511I After Postsolve, objective 70.604898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.604898
Clp0000I Optimal - objective value 70.604898
Clp0000I Optimal - objective value 70.604898
Coin0511I After Postsolve, objective 70.604898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.60489763 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 73 columns (72 integer (72 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.43717
Cbc0038I Solution found of -0.776491
Cbc0038I Relaxing continuous gives -7.00318
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 73 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -7.00318 to -42.0278 (0.04 seconds)
Cbc0038I Round again with cutoff of -44.8031
Cbc0038I Pass   1: suminf.    2.78140 (23) obj. -44.8031 iterations 45
Cbc0038I Pass   2: suminf.    3.05303 (9) obj. -44.8031 iterations 28
Cbc0038I Pass   3: suminf.    1.67431 (5) obj. -44.8031 iterations 11
Cbc0038I Pass   4: suminf.    1.77042 (6) obj. -44.8031 iterations 10
Cbc0038I Pass   5: suminf.    1.22889 (4) obj. -44.8031 iterations 7
Cbc0038I Pass   6: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I Pass   7: suminf.    1.39385 (4) obj. -44.8031 iterations 6
Cbc0038I Pass   8: suminf.    1.23032 (5) obj. -44.8031 iterations 6
Cbc0038I Pass   9: suminf.    1.23032 (5) obj. -44.8031 iterations 0
Cbc0038I Pass  10: suminf.    1.23622 (3) obj. -44.8031 iterations 9
Cbc0038I Pass  11: suminf.    1.22889 (4) obj. -44.8031 iterations 4
Cbc0038I Pass  12: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I Pass  13: suminf.    1.39385 (4) obj. -44.8031 iterations 5
Cbc0038I Pass  14: suminf.    1.23032 (5) obj. -44.8031 iterations 5
Cbc0038I Pass  15: suminf.    1.23032 (5) obj. -44.8031 iterations 0
Cbc0038I Pass  16: suminf.    1.23622 (3) obj. -44.8031 iterations 9
Cbc0038I Pass  17: suminf.    1.22889 (4) obj. -44.8031 iterations 4
Cbc0038I Pass  18: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I Pass  19: suminf.    1.39385 (4) obj. -44.8031 iterations 6
Cbc0038I Pass  20: suminf.    1.23032 (5) obj. -44.8031 iterations 6
Cbc0038I Pass  21: suminf.    1.23032 (5) obj. -44.8031 iterations 0
Cbc0038I Pass  22: suminf.    1.23622 (3) obj. -44.8031 iterations 9
Cbc0038I Pass  23: suminf.    1.22889 (4) obj. -44.8031 iterations 4
Cbc0038I Pass  24: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I Pass  25: suminf.    1.39385 (4) obj. -44.8031 iterations 5
Cbc0038I Pass  26: suminf.    1.23032 (5) obj. -44.8031 iterations 5
Cbc0038I Pass  27: suminf.    1.23032 (5) obj. -44.8031 iterations 0
Cbc0038I Pass  28: suminf.    1.23622 (3) obj. -44.8031 iterations 9
Cbc0038I Pass  29: suminf.    1.22889 (4) obj. -44.8031 iterations 4
Cbc0038I Pass  30: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 73 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -42.0278 - took 0.05 seconds
Cbc0012I Integer solution of -42.0278 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 129 rows 73 columns, reduced to 70 rows 40 columns
Cbc0031I 16 added rows had average density of 59.875
Cbc0013I At root node, 16 cuts changed objective from -69.780141 to -61.777622 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5930 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1528 row cuts average 72.6 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 67.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 10 nodes, 9 on tree, -42.0278 best solution, best possible -61.777622 (0.68 seconds)
Cbc0016I Integer solution of -42.9715 found by strong branching after 6084 iterations and 31 nodes (0.73 seconds)
Cbc0001I Search completed - best objective -42.9715, took 6578 iterations and 44 nodes (0.74 seconds)
Cbc0032I Strong branching done 590 times (11423 iterations), fathomed 1 nodes and fixed 23 variables
Cbc0035I Maximum depth 21, 92 variables fixed on reduced cost
Total time (CPU seconds):       0.73   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 115 (-37) columns and 1926 (-1377) elements
Clp1000I sum of infeasibilities 3.63609e-07 - average 3.60009e-09, 63 fixed columns
Coin0506I Presolve 41 (-60) rows, 52 (-63) columns and 181 (-1745) elements
Clp0006I 0  Obj 41.710745 Dual inf 546.25273 (49)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.25043132 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 42.1169
Clp0000I Optimal - objective value 42.1169
Coin0511I After Postsolve, objective 42.1169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 42.1169 Dual inf 59.604841 (42)
Clp0014I Perturbing problem by 0.001% of 1.4268144 - largest nonzero change 1.4863685e-05 ( 0.00091831452%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 103.15583
Clp0000I Optimal - objective value 103.15583
Clp0000I Optimal - objective value 103.15583
Coin0511I After Postsolve, objective 103.15583, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.1558296 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 115 columns (115 integer (115 of which binary)) and 1941 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 4.83094
Cbc0038I Pass   1: suminf.    0.59551 (19) obj. -41.1074 iterations 20
Cbc0038I Pass   2: suminf.    0.59551 (19) obj. -41.1074 iterations 1
Cbc0038I Solution found of -16.9062
Cbc0038I Rounding solution of -30.403 is better than previous of -16.9062

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 33 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -30.403 to -40.2762 (0.04 seconds)
Cbc0038I Round again with cutoff of -45.2591
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.77215 (35) obj. -45.2591 iterations 7
Cbc0038I Pass   4: suminf.    0.77215 (35) obj. -45.2591 iterations 0
Cbc0038I Pass   5: suminf.    0.90419 (26) obj. -45.2591 iterations 9
Cbc0038I Pass   6: suminf.    0.90419 (26) obj. -45.2591 iterations 0
Cbc0038I Pass   7: suminf.    0.31381 (5) obj. -45.7038 iterations 36
Cbc0038I Pass   8: suminf.    0.69460 (2) obj. -45.2591 iterations 9
Cbc0038I Pass   9: suminf.    0.47435 (2) obj. -45.2591 iterations 4
Cbc0038I Pass  10: suminf.    0.45250 (1) obj. -45.2591 iterations 1
Cbc0038I Pass  11: suminf.    0.45250 (1) obj. -45.2591 iterations 0
Cbc0038I Pass  12: suminf.    0.71975 (11) obj. -45.2591 iterations 22
Cbc0038I Pass  13: suminf.    0.36319 (9) obj. -50.737 iterations 6
Cbc0038I Pass  14: suminf.    0.93550 (3) obj. -45.2591 iterations 13
Cbc0038I Pass  15: suminf.    0.82143 (2) obj. -45.7561 iterations 4
Cbc0038I Pass  16: suminf.    0.58137 (3) obj. -45.2591 iterations 4
Cbc0038I Pass  17: suminf.    0.84749 (3) obj. -47.7803 iterations 4
Cbc0038I Pass  18: suminf.    0.96012 (12) obj. -45.2591 iterations 32
Cbc0038I Pass  19: suminf.    0.50630 (9) obj. -47.1544 iterations 9
Cbc0038I Pass  20: suminf.    1.74314 (4) obj. -45.2591 iterations 18
Cbc0038I Pass  21: suminf.    1.74314 (4) obj. -45.2591 iterations 0
Cbc0038I Pass  22: suminf.    0.61603 (4) obj. -45.2591 iterations 8
Cbc0038I Pass  23: suminf.    1.43656 (4) obj. -45.2591 iterations 6
Cbc0038I Pass  24: suminf.    1.43656 (4) obj. -45.2591 iterations 2
Cbc0038I Pass  25: suminf.    0.74137 (10) obj. -45.2591 iterations 19
Cbc0038I Pass  26: suminf.    0.74137 (10) obj. -45.2591 iterations 3
Cbc0038I Pass  27: suminf.    1.38826 (4) obj. -45.2591 iterations 14
Cbc0038I Pass  28: suminf.    1.08965 (5) obj. -45.2591 iterations 8
Cbc0038I Pass  29: suminf.    0.31136 (4) obj. -45.2591 iterations 6
Cbc0038I Pass  30: suminf.    0.30463 (4) obj. -45.2591 iterations 5
Cbc0038I Pass  31: suminf.    0.75226 (9) obj. -45.2591 iterations 31
Cbc0038I Pass  32: suminf.    0.31874 (7) obj. -45.2591 iterations 9
Cbc0038I Rounding solution of -43.1372 is better than previous of -40.2762

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 43 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -43.1372 to -44.0259 (0.07 seconds)
Cbc0038I Round again with cutoff of -54.228
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.15375 (35) obj. -54.228 iterations 0
Cbc0038I Pass  33: suminf.    1.15375 (35) obj. -54.228 iterations 0
Cbc0038I Pass  34: suminf.    0.95776 (20) obj. -54.228 iterations 19
Cbc0038I Pass  35: suminf.    1.31364 (6) obj. -54.228 iterations 34
Cbc0038I Pass  36: suminf.    1.31364 (6) obj. -54.228 iterations 0
Cbc0038I Pass  37: suminf.    1.41045 (5) obj. -54.228 iterations 15
Cbc0038I Pass  38: suminf.    1.41045 (5) obj. -54.228 iterations 3
Cbc0038I Pass  39: suminf.    2.01970 (6) obj. -54.228 iterations 9
Cbc0038I Pass  40: suminf.    2.01970 (6) obj. -54.228 iterations 4
Cbc0038I Pass  41: suminf.    1.47875 (5) obj. -54.228 iterations 7
Cbc0038I Pass  42: suminf.    1.47875 (5) obj. -54.228 iterations 2
Cbc0038I Pass  43: suminf.    1.71951 (10) obj. -54.228 iterations 9
Cbc0038I Pass  44: suminf.    1.71951 (10) obj. -54.228 iterations 3
Cbc0038I Pass  45: suminf.    1.50696 (5) obj. -54.228 iterations 15
Cbc0038I Pass  46: suminf.    1.30610 (7) obj. -54.228 iterations 5
Cbc0038I Pass  47: suminf.    1.87994 (13) obj. -54.228 iterations 12
Cbc0038I Pass  48: suminf.    1.64873 (14) obj. -54.228 iterations 7
Cbc0038I Pass  49: suminf.    1.50696 (5) obj. -54.228 iterations 20
Cbc0038I Pass  50: suminf.    1.50773 (9) obj. -54.228 iterations 17
Cbc0038I Pass  51: suminf.    1.38669 (10) obj. -54.228 iterations 6
Cbc0038I Pass  52: suminf.    1.50696 (6) obj. -54.228 iterations 20
Cbc0038I Pass  53: suminf.    1.37623 (8) obj. -54.228 iterations 6
Cbc0038I Pass  54: suminf.    1.50696 (6) obj. -54.228 iterations 10
Cbc0038I Pass  55: suminf.    2.13798 (12) obj. -54.228 iterations 25
Cbc0038I Pass  56: suminf.    2.13798 (12) obj. -54.228 iterations 5
Cbc0038I Pass  57: suminf.    1.50696 (5) obj. -54.228 iterations 33
Cbc0038I Pass  58: suminf.    1.30610 (7) obj. -54.228 iterations 6
Cbc0038I Pass  59: suminf.    1.50696 (5) obj. -54.228 iterations 11
Cbc0038I Pass  60: suminf.    2.10056 (10) obj. -54.228 iterations 20
Cbc0038I Pass  61: suminf.    1.09510 (8) obj. -54.228 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 115 columns, reduced to 44 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -44.0259 - took 0.07 seconds
Cbc0012I Integer solution of -44.02592 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 100 rows 115 columns, reduced to 4 rows 5 columns
Cbc0031I 43 added rows had average density of 44.395349
Cbc0013I At root node, 43 cuts changed objective from -90.103929 to -55.064245 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8581 row cuts average 2.4 elements, 2 column cuts (2 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1409 row cuts average 94.8 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 571 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 217 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1159 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 362 row cuts average 46.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 90 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.659 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -44.02592 best solution, best possible -55.064245 (2.16 seconds)
Cbc0001I Search completed - best objective -44.02591999999999, took 4553 iterations and 24 nodes (2.50 seconds)
Cbc0032I Strong branching done 406 times (10730 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 11, 100 variables fixed on reduced cost
Total time (CPU seconds):       1.77   (Wallclock seconds):       2.51

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 73 (-5) columns and 399 (-54) elements
Clp1000I sum of infeasibilities 0.000647483 - average 4.98064e-06, 13 fixed columns
Coin0506I Presolve 99 (-31) rows, 57 (-16) columns and 305 (-94) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 70.604898
Clp0000I Optimal - objective value 70.604898
Coin0511I After Postsolve, objective 70.604898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.604898
Clp0000I Optimal - objective value 70.604898
Clp0000I Optimal - objective value 70.604898
Coin0511I After Postsolve, objective 70.604898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.60489763 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 73 columns (72 integer (72 of which binary)) and 409 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.370%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.43717
Cbc0038I Solution found of -0.776491
Cbc0038I Relaxing continuous gives -7.00318
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 73 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -7.00318 to -42.0278 (0.04 seconds)
Cbc0038I Round again with cutoff of -44.8031
Cbc0038I Pass   1: suminf.    2.78140 (23) obj. -44.8031 iterations 45
Cbc0038I Pass   2: suminf.    3.05303 (9) obj. -44.8031 iterations 28
Cbc0038I Pass   3: suminf.    1.67431 (5) obj. -44.8031 iterations 11
Cbc0038I Pass   4: suminf.    1.77042 (6) obj. -44.8031 iterations 10
Cbc0038I Pass   5: suminf.    1.22889 (4) obj. -44.8031 iterations 7
Cbc0038I Pass   6: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I Pass   7: suminf.    1.39385 (4) obj. -44.8031 iterations 6
Cbc0038I Pass   8: suminf.    1.23032 (5) obj. -44.8031 iterations 6
Cbc0038I Pass   9: suminf.    1.23032 (5) obj. -44.8031 iterations 0
Cbc0038I Pass  10: suminf.    1.23622 (3) obj. -44.8031 iterations 9
Cbc0038I Pass  11: suminf.    1.22889 (4) obj. -44.8031 iterations 4
Cbc0038I Pass  12: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I Pass  13: suminf.    1.39385 (4) obj. -44.8031 iterations 5
Cbc0038I Pass  14: suminf.    1.23032 (5) obj. -44.8031 iterations 5
Cbc0038I Pass  15: suminf.    1.23032 (5) obj. -44.8031 iterations 0
Cbc0038I Pass  16: suminf.    1.23622 (3) obj. -44.8031 iterations 9
Cbc0038I Pass  17: suminf.    1.22889 (4) obj. -44.8031 iterations 4
Cbc0038I Pass  18: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I Pass  19: suminf.    1.39385 (4) obj. -44.8031 iterations 6
Cbc0038I Pass  20: suminf.    1.23032 (5) obj. -44.8031 iterations 6
Cbc0038I Pass  21: suminf.    1.23032 (5) obj. -44.8031 iterations 0
Cbc0038I Pass  22: suminf.    1.23622 (3) obj. -44.8031 iterations 9
Cbc0038I Pass  23: suminf.    1.22889 (4) obj. -44.8031 iterations 4
Cbc0038I Pass  24: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I Pass  25: suminf.    1.39385 (4) obj. -44.8031 iterations 5
Cbc0038I Pass  26: suminf.    1.23032 (5) obj. -44.8031 iterations 5
Cbc0038I Pass  27: suminf.    1.23032 (5) obj. -44.8031 iterations 0
Cbc0038I Pass  28: suminf.    1.23622 (3) obj. -44.8031 iterations 9
Cbc0038I Pass  29: suminf.    1.22889 (4) obj. -44.8031 iterations 4
Cbc0038I Pass  30: suminf.    1.22913 (5) obj. -44.8031 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 73 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -42.0278 - took 0.06 seconds
Cbc0012I Integer solution of -42.0278 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 129 rows 73 columns, reduced to 70 rows 40 columns
Cbc0031I 16 added rows had average density of 59.875
Cbc0013I At root node, 16 cuts changed objective from -69.780141 to -61.777622 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5930 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1528 row cuts average 72.6 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 67.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -42.0278 best solution, best possible -61.777622 (0.70 seconds)
Cbc0016I Integer solution of -42.9715 found by strong branching after 6084 iterations and 31 nodes (0.85 seconds)
Cbc0001I Search completed - best objective -42.9715, took 6578 iterations and 44 nodes (0.86 seconds)
Cbc0032I Strong branching done 590 times (11423 iterations), fathomed 1 nodes and fixed 23 variables
Cbc0035I Maximum depth 21, 92 variables fixed on reduced cost
Total time (CPU seconds):       0.83   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 114 (-39) columns and 1886 (-1418) elements
Clp1000I sum of infeasibilities 2.82316e-07 - average 2.82316e-09, 14 fixed columns
Coin0506I Presolve 86 (-14) rows, 100 (-14) columns and 1466 (-420) elements
Clp0006I 0  Obj 72.094114 Dual inf 14.353519 (100)
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 1.5485961 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 80.07949
Clp0000I Optimal - objective value 80.07949
Coin0511I After Postsolve, objective 80.07949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 80.07949
Clp0000I Optimal - objective value 80.07949
Clp0000I Optimal - objective value 80.07949
Clp0000I Optimal - objective value 80.07949
Coin0511I After Postsolve, objective 80.07949, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.0794905 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 114 columns (114 integer (114 of which binary)) and 1900 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.815%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.30211
Cbc0038I Pass   1: suminf.    1.38191 (24) obj. -58.3953 iterations 26
Cbc0038I Pass   2: suminf.    1.38191 (24) obj. -58.3953 iterations 0
Cbc0038I Pass   3: suminf.    0.25711 (9) obj. -33.8707 iterations 12
Cbc0038I Solution found of -23.209
Cbc0038I Rounding solution of -35.7283 is better than previous of -23.209

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 114 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -38.7129
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.38191 (24) obj. -58.3953 iterations 0
Cbc0038I Pass   5: suminf.    1.38191 (24) obj. -58.3953 iterations 0
Cbc0038I Pass   6: suminf.    0.48741 (11) obj. -38.7129 iterations 19
Cbc0038I Pass   7: suminf.    1.69433 (18) obj. -38.7129 iterations 36
Cbc0038I Pass   8: suminf.    1.39489 (16) obj. -38.7129 iterations 3
Cbc0038I Pass   9: suminf.    2.28621 (13) obj. -38.7129 iterations 24
Cbc0038I Pass  10: suminf.    0.83079 (11) obj. -38.7129 iterations 15
Cbc0038I Pass  11: suminf.    0.78990 (11) obj. -38.7129 iterations 9
Cbc0038I Pass  12: suminf.    2.95436 (13) obj. -38.7129 iterations 15
Cbc0038I Pass  13: suminf.    2.93047 (12) obj. -38.7129 iterations 4
Cbc0038I Pass  14: suminf.    1.41159 (7) obj. -38.7129 iterations 9
Cbc0038I Pass  15: suminf.    1.37283 (9) obj. -38.7129 iterations 2
Cbc0038I Pass  16: suminf.    1.26503 (9) obj. -38.7129 iterations 8
Cbc0038I Pass  17: suminf.    1.26503 (9) obj. -38.7129 iterations 7
Cbc0038I Pass  18: suminf.    1.37283 (9) obj. -38.7129 iterations 12
Cbc0038I Pass  19: suminf.    1.34617 (11) obj. -38.7129 iterations 27
Cbc0038I Pass  20: suminf.    1.32050 (13) obj. -38.7129 iterations 6
Cbc0038I Pass  21: suminf.    1.37283 (9) obj. -38.7129 iterations 19
Cbc0038I Pass  22: suminf.    1.37283 (9) obj. -38.7129 iterations 1
Cbc0038I Pass  23: suminf.    1.26503 (9) obj. -38.7129 iterations 8
Cbc0038I Pass  24: suminf.    1.26503 (9) obj. -38.7129 iterations 7
Cbc0038I Pass  25: suminf.    1.37283 (9) obj. -38.7129 iterations 10
Cbc0038I Pass  26: suminf.    2.80237 (18) obj. -38.7129 iterations 21
Cbc0038I Pass  27: suminf.    1.52305 (12) obj. -39.3899 iterations 11
Cbc0038I Pass  28: suminf.    1.12700 (9) obj. -38.7129 iterations 21
Cbc0038I Pass  29: suminf.    1.06743 (9) obj. -38.7129 iterations 4
Cbc0038I Pass  30: suminf.    1.37283 (9) obj. -38.7129 iterations 12
Cbc0038I Pass  31: suminf.    1.37283 (9) obj. -38.7129 iterations 8
Cbc0038I Pass  32: suminf.    1.26503 (9) obj. -38.7129 iterations 9
Cbc0038I Pass  33: suminf.    1.26503 (9) obj. -38.7129 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 114 columns, reduced to 43 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -23.209 to -36.6174 (0.09 seconds)
Cbc0038I Round again with cutoff of -44.085
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.38191 (24) obj. -58.3953 iterations 0
Cbc0038I Pass  34: suminf.    1.38191 (24) obj. -58.3953 iterations 0
Cbc0038I Pass  35: suminf.    1.77844 (20) obj. -44.085 iterations 51
Cbc0038I Pass  36: suminf.    1.50423 (20) obj. -44.085 iterations 4
Cbc0038I Pass  37: suminf.    2.60018 (16) obj. -44.085 iterations 27
Cbc0038I Pass  38: suminf.    0.96619 (13) obj. -44.085 iterations 13
Cbc0038I Pass  39: suminf.    0.91335 (14) obj. -44.085 iterations 6
Cbc0038I Pass  40: suminf.    1.84726 (15) obj. -44.085 iterations 13
Cbc0038I Pass  41: suminf.    1.56068 (12) obj. -44.085 iterations 4
Cbc0038I Pass  42: suminf.    1.79039 (12) obj. -44.085 iterations 10
Cbc0038I Pass  43: suminf.    1.54538 (12) obj. -44.085 iterations 10
Cbc0038I Pass  44: suminf.    2.76914 (17) obj. -44.085 iterations 11
Cbc0038I Pass  45: suminf.    2.44311 (18) obj. -44.085 iterations 9
Cbc0038I Pass  46: suminf.    2.26085 (16) obj. -44.085 iterations 20
Cbc0038I Pass  47: suminf.    2.24769 (16) obj. -44.085 iterations 4
Cbc0038I Pass  48: suminf.    1.74756 (13) obj. -44.085 iterations 12
Cbc0038I Pass  49: suminf.    1.74756 (13) obj. -44.085 iterations 1
Cbc0038I Pass  50: suminf.    1.79039 (12) obj. -44.085 iterations 15
Cbc0038I Pass  51: suminf.    1.54538 (12) obj. -44.085 iterations 6
Cbc0038I Pass  52: suminf.    1.79039 (12) obj. -44.085 iterations 9
Cbc0038I Pass  53: suminf.    2.77318 (16) obj. -44.085 iterations 7
Cbc0038I Pass  54: suminf.    1.63830 (12) obj. -44.085 iterations 9
Cbc0038I Pass  55: suminf.    1.62293 (12) obj. -44.4204 iterations 1
Cbc0038I Pass  56: suminf.    1.79039 (13) obj. -44.085 iterations 11
Cbc0038I Pass  57: suminf.    1.69594 (13) obj. -44.085 iterations 6
Cbc0038I Pass  58: suminf.    1.79039 (13) obj. -44.085 iterations 10
Cbc0038I Pass  59: suminf.    2.37016 (13) obj. -44.085 iterations 8
Cbc0038I Pass  60: suminf.    2.37016 (13) obj. -44.085 iterations 5
Cbc0038I Pass  61: suminf.    2.42085 (14) obj. -44.085 iterations 13
Cbc0038I Pass  62: suminf.    2.40667 (14) obj. -44.085 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 114 columns, reduced to 39 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -36.6174 - took 0.12 seconds
Cbc0012I Integer solution of -36.6174 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 99 rows 114 columns, reduced to 36 rows 39 columns
Cbc0031I 50 added rows had average density of 34.46
Cbc0013I At root node, 50 cuts changed objective from -65.573236 to -49.407616 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11911 row cuts average 2.2 elements, 1 column cuts (1 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1928 row cuts average 105.0 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 906 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 135 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 814 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 344 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 204 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.698 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -36.6174 best solution, best possible -49.407616 (3.02 seconds)
Cbc0012I Integer solution of -37.23643 found by rounding after 6168 iterations and 3 nodes (3.54 seconds)
Cbc0012I Integer solution of -42.9715 found by rounding after 6232 iterations and 4 nodes (3.56 seconds)
Cbc0010I After 6 nodes, 3 on tree, -42.9715 best solution, best possible -49.049265 (3.88 seconds)
Cbc0001I Search completed - best objective -42.9715, took 6964 iterations and 14 nodes (4.07 seconds)
Cbc0032I Strong branching done 344 times (8739 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 29 variables fixed on reduced cost
Total time (CPU seconds):       2.89   (Wallclock seconds):       4.10

