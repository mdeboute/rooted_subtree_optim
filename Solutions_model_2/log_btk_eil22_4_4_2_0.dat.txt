Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 21 (-26) rows, 15 (-9) columns and 65 (-64) elements
Clp1000I sum of infeasibilities 3.89099e-06 - average 1.85285e-07, 2 fixed columns
Coin0506I Presolve 17 (-4) rows, 13 (-2) columns and 53 (-12) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 95.835349
Clp0000I Optimal - objective value 95.835349
Coin0511I After Postsolve, objective 95.835349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.835349
Clp0000I Optimal - objective value 95.835349
Clp0000I Optimal - objective value 95.835349
Coin0511I After Postsolve, objective 95.835349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.83534886 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 21 rows, 15 columns (14 integer (14 of which binary)) and 65 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.086%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.69728
Cbc0038I Pass   1: suminf.    0.66995 (2) obj. -64.7635 iterations 4
Cbc0038I Solution found of -45
Cbc0038I Relaxing continuous gives -45
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -45 to -67.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -70.7834
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.91625 (4) obj. -70.7834 iterations 2
Cbc0038I Pass   3: suminf.    0.79659 (4) obj. -70.7834 iterations 1
Cbc0038I Pass   4: suminf.    0.08209 (1) obj. -70.7834 iterations 8
Cbc0038I Pass   5: suminf.    0.71429 (3) obj. -70.7834 iterations 3
Cbc0038I Pass   6: suminf.    1.17612 (3) obj. -70.7834 iterations 6
Cbc0038I Pass   7: suminf.    1.17612 (3) obj. -70.7834 iterations 0
Cbc0038I Pass   8: suminf.    1.17612 (3) obj. -70.7834 iterations 0
Cbc0038I Pass   9: suminf.    1.26219 (5) obj. -70.7834 iterations 2
Cbc0038I Pass  10: suminf.    0.80847 (3) obj. -70.7834 iterations 1
Cbc0038I Pass  11: suminf.    0.64286 (2) obj. -72.1429 iterations 3
Cbc0038I Pass  12: suminf.    0.80847 (3) obj. -70.7834 iterations 2
Cbc0038I Pass  13: suminf.    1.13359 (5) obj. -70.7834 iterations 3
Cbc0038I Pass  14: suminf.    1.13359 (5) obj. -70.7834 iterations 0
Cbc0038I Pass  15: suminf.    0.94798 (3) obj. -70.7834 iterations 5
Cbc0038I Pass  16: suminf.    0.97696 (2) obj. -70.7834 iterations 3
Cbc0038I Pass  17: suminf.    0.81416 (3) obj. -70.7834 iterations 2
Cbc0038I Pass  18: suminf.    1.19083 (3) obj. -70.7834 iterations 3
Cbc0038I Pass  19: suminf.    2.10988 (5) obj. -70.7834 iterations 7
Cbc0038I Pass  20: suminf.    1.65356 (4) obj. -70.7834 iterations 3
Cbc0038I Pass  21: suminf.    1.32940 (5) obj. -70.7834 iterations 3
Cbc0038I Pass  22: suminf.    1.19258 (5) obj. -70.7834 iterations 1
Cbc0038I Pass  23: suminf.    1.48572 (5) obj. -70.7834 iterations 4
Cbc0038I Pass  24: suminf.    0.94798 (3) obj. -70.7834 iterations 1
Cbc0038I Pass  25: suminf.    0.97696 (2) obj. -70.7834 iterations 3
Cbc0038I Pass  26: suminf.    0.81416 (3) obj. -70.7834 iterations 2
Cbc0038I Pass  27: suminf.    1.19083 (3) obj. -70.7834 iterations 3
Cbc0038I Pass  28: suminf.    1.87474 (7) obj. -70.7834 iterations 8
Cbc0038I Pass  29: suminf.    1.30692 (6) obj. -70.7834 iterations 2
Cbc0038I Pass  30: suminf.    0.46528 (3) obj. -70.7834 iterations 8
Cbc0038I Pass  31: suminf.    0.16144 (3) obj. -70.7834 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -67.5 - took 0.01 seconds
Cbc0012I Integer solution of -67.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 15 columns, reduced to 7 rows 6 columns
Cbc0031I 8 added rows had average density of 11.125
Cbc0013I At root node, 8 cuts changed objective from -95.835349 to -71.98545 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 261 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 339 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.5, took 1053 iterations and 0 nodes (0.07 seconds)
Cbc0032I Strong branching done 2 times (4 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-16) rows, 37 (-7) columns and 244 (-116) elements
Clp1000I sum of infeasibilities 4.57288e-08 - average 1.52429e-09, 25 fixed columns
Coin0506I Presolve 8 (-22) rows, 12 (-25) columns and 35 (-209) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 3.0587677 - largest nonzero change 2.6361125e-05 ( 0.00086069148%) - largest zero change 1.4579339e-05
Clp0000I Optimal - objective value 75.038732
Clp0000I Optimal - objective value 75.038732
Coin0511I After Postsolve, objective 75.038732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9415415 - largest nonzero change 2.56423e-05 ( 0.00256423%) - largest zero change 1.702643e-05
Clp0000I Optimal - objective value 139.03089
Clp0000I Optimal - objective value 139.03089
Clp0000I Optimal - objective value 139.03089
Coin0511I After Postsolve, objective 139.03089, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 139.0308932 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 37 columns (37 integer (37 of which binary)) and 258 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.396%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.49412
Cbc0038I Pass   1: suminf.    1.48903 (9) obj. -43.5054 iterations 7
Cbc0038I Pass   2: suminf.    1.48903 (9) obj. -43.5054 iterations 0
Cbc0038I Solution found of -13.5
Cbc0038I Rounding solution of -35 is better than previous of -13.5

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 37 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -35 to -67.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -72.7464
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.89442 (13) obj. -72.7464 iterations 1
Cbc0038I Pass   4: suminf.    2.87943 (14) obj. -72.7464 iterations 1
Cbc0038I Pass   5: suminf.    0.38284 (6) obj. -72.7464 iterations 20
Cbc0038I Pass   6: suminf.    0.35140 (5) obj. -72.7464 iterations 1
Cbc0038I Pass   7: suminf.    1.04286 (4) obj. -73.6571 iterations 6
Cbc0038I Pass   8: suminf.    0.79731 (5) obj. -72.7464 iterations 3
Cbc0038I Pass   9: suminf.    0.79731 (5) obj. -72.7464 iterations 0
Cbc0038I Pass  10: suminf.    1.43601 (5) obj. -72.7464 iterations 1
Cbc0038I Pass  11: suminf.    1.55981 (7) obj. -72.7464 iterations 6
Cbc0038I Pass  12: suminf.    1.34296 (7) obj. -72.7464 iterations 2
Cbc0038I Pass  13: suminf.    1.04286 (3) obj. -74.9143 iterations 11
Cbc0038I Pass  14: suminf.    1.03080 (3) obj. -72.7464 iterations 3
Cbc0038I Pass  15: suminf.    0.79731 (5) obj. -72.7464 iterations 1
Cbc0038I Pass  16: suminf.    1.43601 (5) obj. -72.7464 iterations 1
Cbc0038I Pass  17: suminf.    1.04286 (4) obj. -73.6571 iterations 3
Cbc0038I Pass  18: suminf.    0.79731 (5) obj. -72.7464 iterations 3
Cbc0038I Pass  19: suminf.    2.18815 (10) obj. -72.7464 iterations 9
Cbc0038I Pass  20: suminf.    1.73313 (8) obj. -72.7464 iterations 2
Cbc0038I Pass  21: suminf.    2.44865 (8) obj. -72.7464 iterations 9
Cbc0038I Pass  22: suminf.    1.48515 (7) obj. -72.7464 iterations 2
Cbc0038I Pass  23: suminf.    0.89791 (6) obj. -72.7464 iterations 3
Cbc0038I Pass  24: suminf.    1.39290 (6) obj. -72.7464 iterations 6
Cbc0038I Pass  25: suminf.    1.04731 (5) obj. -72.7464 iterations 1
Cbc0038I Pass  26: suminf.    1.27851 (5) obj. -72.7464 iterations 1
Cbc0038I Pass  27: suminf.    1.04286 (4) obj. -72.7464 iterations 2
Cbc0038I Pass  28: suminf.    1.04731 (5) obj. -72.7464 iterations 2
Cbc0038I Pass  29: suminf.    1.29707 (6) obj. -72.7464 iterations 5
Cbc0038I Pass  30: suminf.    1.02875 (7) obj. -72.7464 iterations 2
Cbc0038I Pass  31: suminf.    1.04731 (5) obj. -72.7464 iterations 12
Cbc0038I Pass  32: suminf.    1.04731 (5) obj. -72.7464 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 37 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -67.5 - took 0.01 seconds
Cbc0012I Integer solution of -67.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 29 rows 37 columns, reduced to 10 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 16.25
Cbc0013I At root node, 4 cuts changed objective from -115.46474 to -74.592835 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 49 row cuts average 2.0 elements, 17 column cuts (17 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 16 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -67.5, took 16 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 21 (-26) rows, 15 (-9) columns and 65 (-64) elements
Clp1000I sum of infeasibilities 3.89099e-06 - average 1.85285e-07, 2 fixed columns
Coin0506I Presolve 17 (-4) rows, 13 (-2) columns and 53 (-12) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 95.835349
Clp0000I Optimal - objective value 95.835349
Coin0511I After Postsolve, objective 95.835349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.835349
Clp0000I Optimal - objective value 95.835349
Clp0000I Optimal - objective value 95.835349
Coin0511I After Postsolve, objective 95.835349, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.83534886 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 21 rows, 15 columns (14 integer (14 of which binary)) and 65 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.086%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.69728
Cbc0038I Pass   1: suminf.    0.66995 (2) obj. -64.7635 iterations 4
Cbc0038I Solution found of -45
Cbc0038I Relaxing continuous gives -45
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -45 to -67.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -70.7834
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.91625 (4) obj. -70.7834 iterations 2
Cbc0038I Pass   3: suminf.    0.79659 (4) obj. -70.7834 iterations 1
Cbc0038I Pass   4: suminf.    0.08209 (1) obj. -70.7834 iterations 8
Cbc0038I Pass   5: suminf.    0.71429 (3) obj. -70.7834 iterations 3
Cbc0038I Pass   6: suminf.    1.17612 (3) obj. -70.7834 iterations 6
Cbc0038I Pass   7: suminf.    1.17612 (3) obj. -70.7834 iterations 0
Cbc0038I Pass   8: suminf.    1.17612 (3) obj. -70.7834 iterations 0
Cbc0038I Pass   9: suminf.    1.26219 (5) obj. -70.7834 iterations 2
Cbc0038I Pass  10: suminf.    0.80847 (3) obj. -70.7834 iterations 1
Cbc0038I Pass  11: suminf.    0.64286 (2) obj. -72.1429 iterations 3
Cbc0038I Pass  12: suminf.    0.80847 (3) obj. -70.7834 iterations 2
Cbc0038I Pass  13: suminf.    1.13359 (5) obj. -70.7834 iterations 3
Cbc0038I Pass  14: suminf.    1.13359 (5) obj. -70.7834 iterations 0
Cbc0038I Pass  15: suminf.    0.94798 (3) obj. -70.7834 iterations 5
Cbc0038I Pass  16: suminf.    0.97696 (2) obj. -70.7834 iterations 3
Cbc0038I Pass  17: suminf.    0.81416 (3) obj. -70.7834 iterations 2
Cbc0038I Pass  18: suminf.    1.19083 (3) obj. -70.7834 iterations 3
Cbc0038I Pass  19: suminf.    2.10988 (5) obj. -70.7834 iterations 7
Cbc0038I Pass  20: suminf.    1.65356 (4) obj. -70.7834 iterations 3
Cbc0038I Pass  21: suminf.    1.32940 (5) obj. -70.7834 iterations 3
Cbc0038I Pass  22: suminf.    1.19258 (5) obj. -70.7834 iterations 1
Cbc0038I Pass  23: suminf.    1.48572 (5) obj. -70.7834 iterations 4
Cbc0038I Pass  24: suminf.    0.94798 (3) obj. -70.7834 iterations 1
Cbc0038I Pass  25: suminf.    0.97696 (2) obj. -70.7834 iterations 3
Cbc0038I Pass  26: suminf.    0.81416 (3) obj. -70.7834 iterations 2
Cbc0038I Pass  27: suminf.    1.19083 (3) obj. -70.7834 iterations 3
Cbc0038I Pass  28: suminf.    1.87474 (7) obj. -70.7834 iterations 8
Cbc0038I Pass  29: suminf.    1.30692 (6) obj. -70.7834 iterations 2
Cbc0038I Pass  30: suminf.    0.46528 (3) obj. -70.7834 iterations 8
Cbc0038I Pass  31: suminf.    0.16144 (3) obj. -70.7834 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 15 columns, reduced to 15 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -67.5 - took 0.01 seconds
Cbc0012I Integer solution of -67.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 15 columns, reduced to 7 rows 6 columns
Cbc0031I 8 added rows had average density of 11.125
Cbc0013I At root node, 8 cuts changed objective from -95.835349 to -71.98545 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 261 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 339 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 183 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.5, took 1053 iterations and 0 nodes (0.08 seconds)
Cbc0032I Strong branching done 2 times (4 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-22) rows, 32 (-13) columns and 182 (-179) elements
Clp1000I sum of infeasibilities 1.11394e-11 - average 4.45577e-13, 24 fixed columns
Coin0506I Presolve 4 (-21) rows, 8 (-24) columns and 19 (-163) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 72.179245
Clp0000I Optimal - objective value 72.179245
Coin0511I After Postsolve, objective 72.179245, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5133983 - largest nonzero change 0 ( 0%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 138.85346
Clp0000I Optimal - objective value 138.85346
Clp0000I Optimal - objective value 138.85346
Coin0511I After Postsolve, objective 138.85346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.8534636 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 25 rows, 32 columns (32 integer (32 of which binary)) and 186 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.885%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.11791
Cbc0038I Pass   1: suminf.    1.04293 (6) obj. 1.79924 iterations 8
Cbc0038I Pass   2: suminf.    1.04293 (6) obj. 1.79924 iterations 0
Cbc0038I Solution found of 21
Cbc0038I Rounding solution of 4 is better than previous of 21

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 32 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 4 to -67.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -72.0049
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.73617 (13) obj. -72.0049 iterations 1
Cbc0038I Pass   4: suminf.    3.73617 (13) obj. -72.0049 iterations 0
Cbc0038I Pass   5: suminf.    0.55617 (4) obj. -72.0049 iterations 20
Cbc0038I Pass   6: suminf.    0.55617 (4) obj. -72.0049 iterations 0
Cbc0038I Pass   7: suminf.    1.06888 (4) obj. -73.449 iterations 5
Cbc0038I Pass   8: suminf.    0.72534 (4) obj. -72.0049 iterations 4
Cbc0038I Pass   9: suminf.    0.72534 (4) obj. -72.0049 iterations 0
Cbc0038I Pass  10: suminf.    0.74026 (4) obj. -72.0049 iterations 1
Cbc0038I Pass  11: suminf.    2.01016 (7) obj. -72.0049 iterations 8
Cbc0038I Pass  12: suminf.    1.90957 (7) obj. -72.0049 iterations 4
Cbc0038I Pass  13: suminf.    0.93811 (3) obj. -72.0049 iterations 6
Cbc0038I Pass  14: suminf.    1.18042 (3) obj. -72.0049 iterations 2
Cbc0038I Pass  15: suminf.    1.06888 (4) obj. -73.449 iterations 3
Cbc0038I Pass  16: suminf.    0.72534 (4) obj. -72.0049 iterations 4
Cbc0038I Pass  17: suminf.    0.72534 (4) obj. -72.0049 iterations 0
Cbc0038I Pass  18: suminf.    0.74026 (4) obj. -72.0049 iterations 1
Cbc0038I Pass  19: suminf.    1.63063 (7) obj. -72.0049 iterations 10
Cbc0038I Pass  20: suminf.    1.34177 (5) obj. -75.6113 iterations 2
Cbc0038I Pass  21: suminf.    0.97236 (5) obj. -72.0049 iterations 9
Cbc0038I Pass  22: suminf.    0.85134 (3) obj. -72.0049 iterations 1
Cbc0038I Pass  23: suminf.    0.60270 (3) obj. -72.0049 iterations 2
Cbc0038I Pass  24: suminf.    1.20266 (5) obj. -72.0049 iterations 4
Cbc0038I Pass  25: suminf.    1.26869 (5) obj. -72.0049 iterations 6
Cbc0038I Pass  26: suminf.    0.98299 (4) obj. -72.8741 iterations 2
Cbc0038I Pass  27: suminf.    1.18297 (4) obj. -72.0049 iterations 4
Cbc0038I Pass  28: suminf.    0.95470 (4) obj. -72.0049 iterations 1
Cbc0038I Pass  29: suminf.    1.18297 (4) obj. -72.0049 iterations 3
Cbc0038I Pass  30: suminf.    1.54502 (6) obj. -72.0049 iterations 7
Cbc0038I Pass  31: suminf.    2.49165 (7) obj. -72.0049 iterations 8
Cbc0038I Pass  32: suminf.    1.41560 (6) obj. -72.0049 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 32 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -67.5 - took 0.01 seconds
Cbc0012I Integer solution of -67.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 32 columns, reduced to 10 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 8
Cbc0013I At root node, 6 cuts changed objective from -108.05007 to -68.760456 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 95 row cuts average 4.9 elements, 15 column cuts (15 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -67.5, took 24 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

