Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 7.69204e-06 - average 1.39855e-07, 4 fixed columns
Coin0506I Presolve 48 (-7) rows, 29 (-4) columns and 146 (-22) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 66.094518
Clp0000I Optimal - objective value 66.094518
Coin0511I After Postsolve, objective 66.094518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.094518
Clp0000I Optimal - objective value 66.094518
Clp0000I Optimal - objective value 66.094518
Coin0511I After Postsolve, objective 66.094518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.09451761 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.05947
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.4718 iterations 17
Cbc0038I Solution found of 15.4718
Cbc0038I Relaxing continuous gives 15.4718
Cbc0038I Rounding solution of -3.99676 is better than previous of 15.4718

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -10.2066
Cbc0038I Pass   2: suminf.    0.74813 (3) obj. -10.2066 iterations 4
Cbc0038I Pass   3: suminf.    0.30795 (2) obj. -10.2066 iterations 3
Cbc0038I Pass   4: suminf.    0.20745 (1) obj. -10.2066 iterations 1
Cbc0038I Pass   5: suminf.    0.55802 (2) obj. -10.2066 iterations 2
Cbc0038I Pass   6: suminf.    0.81925 (2) obj. -10.2066 iterations 1
Cbc0038I Pass   7: suminf.    1.19121 (4) obj. -10.2066 iterations 8
Cbc0038I Pass   8: suminf.    1.04073 (4) obj. -10.2066 iterations 4
Cbc0038I Pass   9: suminf.    1.03647 (3) obj. -10.2066 iterations 3
Cbc0038I Pass  10: suminf.    0.89585 (4) obj. -10.2066 iterations 2
Cbc0038I Pass  11: suminf.    1.48894 (4) obj. -10.2066 iterations 6
Cbc0038I Pass  12: suminf.    1.48894 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  13: suminf.    0.97914 (3) obj. -10.2066 iterations 4
Cbc0038I Pass  14: suminf.    0.75353 (3) obj. -10.2066 iterations 3
Cbc0038I Pass  15: suminf.    1.26854 (4) obj. -10.2066 iterations 7
Cbc0038I Pass  16: suminf.    1.26854 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  17: suminf.    1.48232 (4) obj. -10.2066 iterations 3
Cbc0038I Pass  18: suminf.    1.48232 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  19: suminf.    0.96063 (3) obj. -10.2066 iterations 4
Cbc0038I Pass  20: suminf.    0.82512 (3) obj. -10.2066 iterations 1
Cbc0038I Pass  21: suminf.    0.94548 (3) obj. -10.2066 iterations 3
Cbc0038I Pass  22: suminf.    0.84842 (3) obj. -10.2066 iterations 1
Cbc0038I Pass  23: suminf.    1.48232 (4) obj. -10.2066 iterations 2
Cbc0038I Pass  24: suminf.    1.48232 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  25: suminf.    0.96063 (3) obj. -10.2066 iterations 4
Cbc0038I Pass  26: suminf.    0.82512 (3) obj. -10.2066 iterations 1
Cbc0038I Pass  27: suminf.    0.94548 (3) obj. -10.2066 iterations 3
Cbc0038I Pass  28: suminf.    0.84842 (3) obj. -10.2066 iterations 1
Cbc0038I Pass  29: suminf.    1.48232 (4) obj. -10.2066 iterations 2
Cbc0038I Pass  30: suminf.    1.48232 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  31: suminf.    0.96063 (3) obj. -10.2066 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 15.4718 to -4.93056 (0.02 seconds)
Cbc0038I Round again with cutoff of -21.3842
Cbc0038I Pass  31: suminf.    1.12671 (4) obj. -21.3842 iterations 1
Cbc0038I Pass  32: suminf.    0.65502 (4) obj. -21.3842 iterations 4
Cbc0038I Pass  33: suminf.    1.24116 (4) obj. -21.3842 iterations 4
Cbc0038I Pass  34: suminf.    1.29028 (5) obj. -21.3842 iterations 4
Cbc0038I Pass  35: suminf.    1.29028 (5) obj. -21.3842 iterations 0
Cbc0038I Pass  36: suminf.    0.52604 (4) obj. -21.3842 iterations 3
Cbc0038I Pass  37: suminf.    1.32725 (6) obj. -21.3842 iterations 5
Cbc0038I Pass  38: suminf.    1.86885 (5) obj. -21.3842 iterations 10
Cbc0038I Pass  39: suminf.    0.35714 (3) obj. -21.3842 iterations 5
Cbc0038I Pass  40: suminf.    0.35714 (3) obj. -21.3842 iterations 0
Cbc0038I Pass  41: suminf.    1.11113 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  42: suminf.    0.39306 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  43: suminf.    1.66814 (6) obj. -21.3842 iterations 5
Cbc0038I Pass  44: suminf.    1.26558 (6) obj. -21.3842 iterations 5
Cbc0038I Pass  45: suminf.    1.56794 (4) obj. -21.3842 iterations 6
Cbc0038I Pass  46: suminf.    1.14212 (4) obj. -21.3842 iterations 3
Cbc0038I Pass  47: suminf.    1.05684 (6) obj. -21.3842 iterations 7
Cbc0038I Pass  48: suminf.    1.18723 (3) obj. -21.3842 iterations 9
Cbc0038I Pass  49: suminf.    1.15063 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  50: suminf.    1.77136 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  51: suminf.    1.14212 (4) obj. -21.3842 iterations 3
Cbc0038I Pass  52: suminf.    1.05684 (6) obj. -21.3842 iterations 7
Cbc0038I Pass  53: suminf.    1.18723 (3) obj. -21.3842 iterations 9
Cbc0038I Pass  54: suminf.    1.15063 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  55: suminf.    1.77136 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  56: suminf.    1.14212 (4) obj. -21.3842 iterations 3
Cbc0038I Pass  57: suminf.    1.05684 (6) obj. -21.3842 iterations 7
Cbc0038I Pass  58: suminf.    1.18723 (3) obj. -21.3842 iterations 9
Cbc0038I Pass  59: suminf.    1.15063 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  60: suminf.    1.77136 (4) obj. -21.3842 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -4.93056 - took 0.03 seconds
Cbc0012I Integer solution of -4.9305577 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 26 rows 17 columns
Cbc0031I 13 added rows had average density of 30.769231
Cbc0013I At root node, 13 cuts changed objective from -66.094518 to -37.959821 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2059 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 693 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.9305577 best solution, best possible -37.959821 (1.54 seconds)
Cbc0012I Integer solution of -6.2734717 found by rounding after 4076 iterations and 14 nodes (1.64 seconds)
Cbc0012I Integer solution of -7.5676977 found by rounding after 4194 iterations and 21 nodes (1.64 seconds)
Cbc0012I Integer solution of -9.9787277 found by rounding after 4239 iterations and 22 nodes (1.65 seconds)
Cbc0012I Integer solution of -10.358088 found by rounding after 4318 iterations and 29 nodes (1.65 seconds)
Cbc0001I Search completed - best objective -10.35808770000001, took 4577 iterations and 38 nodes (1.66 seconds)
Cbc0032I Strong branching done 402 times (5280 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 11, 69 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-17) rows, 60 (-6) columns and 602 (-121) elements
Clp1000I sum of infeasibilities 2.54503e-08 - average 4.99025e-10, 8 fixed columns
Coin0506I Presolve 43 (-8) rows, 52 (-8) columns and 477 (-125) elements
Clp0006I 0  Obj 47.734103 Dual inf 6.3049403 (52)
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 1.9044883 - largest nonzero change 2.7509056e-05 ( 0.0023983587%) - largest zero change 2.2907883e-05
Clp0000I Optimal - objective value 79.108321
Clp0000I Optimal - objective value 79.108321
Coin0511I After Postsolve, objective 79.108321, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 79.108321 Dual inf 4.2891937 (4)
Clp0014I Perturbing problem by 0.001% of 1.7924645 - largest nonzero change 2.9114078e-05 ( 0.00256423%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 83.536273
Clp0000I Optimal - objective value 83.536273
Clp0000I Optimal - objective value 83.536273
Coin0511I After Postsolve, objective 83.536273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.53627292 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 60 columns (60 integer (60 of which binary)) and 608 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.590%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 8.86357
Cbc0038I Pass   1: suminf.    1.92945 (16) obj. -7.93138 iterations 13
Cbc0038I Pass   2: suminf.    1.92945 (16) obj. -7.93138 iterations 0
Cbc0038I Pass   3: suminf.    0.48919 (6) obj. 28.1089 iterations 10
Cbc0038I Solution found of 34.5364
Cbc0038I Rounding solution of 0.170118 is better than previous of 34.5364

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 60 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 0.170118 to -1.59918 (0.01 seconds)
Cbc0038I Round again with cutoff of -9.34263
Cbc0038I Pass   4: suminf.    2.08862 (22) obj. -9.34263 iterations 1
Cbc0038I Pass   5: suminf.    2.06555 (17) obj. -9.34263 iterations 1
Cbc0038I Pass   6: suminf.    1.28429 (10) obj. -9.34263 iterations 19
Cbc0038I Pass   7: suminf.    1.28429 (10) obj. -9.34263 iterations 0
Cbc0038I Pass   8: suminf.    0.98008 (3) obj. -9.34263 iterations 12
Cbc0038I Pass   9: suminf.    0.68223 (3) obj. -9.34263 iterations 1
Cbc0038I Pass  10: suminf.    0.98008 (3) obj. -9.34263 iterations 1
Cbc0038I Pass  11: suminf.    1.82652 (10) obj. -9.34263 iterations 14
Cbc0038I Pass  12: suminf.    1.74733 (9) obj. -9.34263 iterations 4
Cbc0038I Pass  13: suminf.    0.52321 (5) obj. -9.34263 iterations 10
Cbc0038I Pass  14: suminf.    0.52321 (5) obj. -9.34263 iterations 0
Cbc0038I Pass  15: suminf.    0.22026 (3) obj. -9.34263 iterations 3
Cbc0038I Pass  16: suminf.    0.22026 (3) obj. -9.34263 iterations 0
Cbc0038I Pass  17: suminf.    1.76033 (4) obj. -17.0354 iterations 5
Cbc0038I Pass  18: suminf.    1.02388 (4) obj. -9.34263 iterations 2
Cbc0038I Pass  19: suminf.    0.72413 (2) obj. -9.34263 iterations 3
Cbc0038I Pass  20: suminf.    1.67422 (6) obj. -9.34263 iterations 8
Cbc0038I Pass  21: suminf.    1.67422 (6) obj. -9.34263 iterations 1
Cbc0038I Pass  22: suminf.    0.34710 (3) obj. -9.34263 iterations 10
Cbc0038I Pass  23: suminf.    0.34710 (3) obj. -9.34263 iterations 0
Cbc0038I Pass  24: suminf.    0.39091 (3) obj. -9.34263 iterations 1
Cbc0038I Pass  25: suminf.    2.35913 (10) obj. -9.34263 iterations 16
Cbc0038I Pass  26: suminf.    1.91584 (10) obj. -9.34263 iterations 3
Cbc0038I Pass  27: suminf.    1.53881 (4) obj. -9.34263 iterations 8
Cbc0038I Pass  28: suminf.    1.52134 (5) obj. -9.34263 iterations 1
Cbc0038I Pass  29: suminf.    1.30765 (3) obj. -9.34263 iterations 6
Cbc0038I Pass  30: suminf.    1.30765 (3) obj. -9.34263 iterations 0
Cbc0038I Pass  31: suminf.    1.37580 (3) obj. -9.34263 iterations 1
Cbc0038I Pass  32: suminf.    3.40450 (16) obj. -9.34263 iterations 29
Cbc0038I Pass  33: suminf.    2.53152 (11) obj. -9.34263 iterations 4
Cbc0038I Rounding solution of -4.80032 is better than previous of -1.59918

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 60 columns, reduced to 28 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -4.80032 to -9.97873 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.7896
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.20473 (22) obj. -23.7896 iterations 0
Cbc0038I Pass  34: suminf.    3.20473 (22) obj. -23.7896 iterations 0
Cbc0038I Pass  35: suminf.    2.45510 (10) obj. -23.7896 iterations 18
Cbc0038I Pass  36: suminf.    2.45510 (10) obj. -23.7896 iterations 0
Cbc0038I Pass  37: suminf.    1.65251 (5) obj. -23.7896 iterations 10
Cbc0038I Pass  38: suminf.    0.94193 (3) obj. -23.7896 iterations 2
Cbc0038I Pass  39: suminf.    1.09030 (3) obj. -23.7896 iterations 2
Cbc0038I Pass  40: suminf.    1.06852 (4) obj. -23.7896 iterations 1
Cbc0038I Pass  41: suminf.    1.93896 (5) obj. -23.7896 iterations 2
Cbc0038I Pass  42: suminf.    1.17808 (5) obj. -23.7896 iterations 1
Cbc0038I Pass  43: suminf.    1.06852 (4) obj. -23.7896 iterations 4
Cbc0038I Pass  44: suminf.    2.88855 (10) obj. -23.7896 iterations 13
Cbc0038I Pass  45: suminf.    2.37406 (9) obj. -23.7896 iterations 4
Cbc0038I Pass  46: suminf.    2.37406 (9) obj. -23.7896 iterations 0
Cbc0038I Pass  47: suminf.    3.15327 (9) obj. -23.7896 iterations 6
Cbc0038I Pass  48: suminf.    2.53495 (8) obj. -23.7896 iterations 3
Cbc0038I Pass  49: suminf.    2.53495 (8) obj. -23.7896 iterations 0
Cbc0038I Pass  50: suminf.    3.58386 (9) obj. -23.7896 iterations 4
Cbc0038I Pass  51: suminf.    2.60929 (8) obj. -23.7896 iterations 2
Cbc0038I Pass  52: suminf.    2.28296 (8) obj. -23.7896 iterations 1
Cbc0038I Pass  53: suminf.    2.99174 (8) obj. -23.7896 iterations 4
Cbc0038I Pass  54: suminf.    1.20443 (3) obj. -24.3365 iterations 6
Cbc0038I Pass  55: suminf.    1.42635 (4) obj. -23.7896 iterations 5
Cbc0038I Pass  56: suminf.    1.42635 (4) obj. -23.7896 iterations 0
Cbc0038I Pass  57: suminf.    1.63093 (5) obj. -23.7896 iterations 2
Cbc0038I Pass  58: suminf.    1.39796 (6) obj. -23.7896 iterations 3
Cbc0038I Pass  59: suminf.    1.39796 (6) obj. -23.7896 iterations 0
Cbc0038I Pass  60: suminf.    1.33197 (5) obj. -23.7896 iterations 8
Cbc0038I Pass  61: suminf.    1.33197 (5) obj. -23.7896 iterations 0
Cbc0038I Pass  62: suminf.    1.63093 (5) obj. -23.7896 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 60 columns, reduced to 36 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -9.97873 - took 0.04 seconds
Cbc0012I Integer solution of -9.9787277 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 51 rows 60 columns, reduced to 27 rows 33 columns
Cbc0031I 25 added rows had average density of 25.44
Cbc0013I At root node, 25 cuts changed objective from -79.03276 to -15.941979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1751 row cuts average 3.6 elements, 12 column cuts (18 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 490 row cuts average 44.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 324 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 276 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 84 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.706 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.9787277 best solution, best possible -15.941979 (1.58 seconds)
Cbc0016I Integer solution of -10.358088 found by strong branching after 1881 iterations and 4 nodes (2.03 seconds)
Cbc0010I After 7 nodes, 1 on tree, -10.358088 best solution, best possible -12.548476 (2.28 seconds)
Cbc0001I Search completed - best objective -10.35808770000001, took 2256 iterations and 8 nodes (2.28 seconds)
Cbc0032I Strong branching done 148 times (837 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.47   (Wallclock seconds):       2.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 7.69204e-06 - average 1.39855e-07, 4 fixed columns
Coin0506I Presolve 48 (-7) rows, 29 (-4) columns and 146 (-22) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 66.094518
Clp0000I Optimal - objective value 66.094518
Coin0511I After Postsolve, objective 66.094518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.094518
Clp0000I Optimal - objective value 66.094518
Clp0000I Optimal - objective value 66.094518
Coin0511I After Postsolve, objective 66.094518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.09451761 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.05947
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.4718 iterations 17
Cbc0038I Solution found of 15.4718
Cbc0038I Relaxing continuous gives 15.4718
Cbc0038I Rounding solution of -3.99676 is better than previous of 15.4718

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -10.2066
Cbc0038I Pass   2: suminf.    0.74813 (3) obj. -10.2066 iterations 4
Cbc0038I Pass   3: suminf.    0.30795 (2) obj. -10.2066 iterations 3
Cbc0038I Pass   4: suminf.    0.20745 (1) obj. -10.2066 iterations 1
Cbc0038I Pass   5: suminf.    0.55802 (2) obj. -10.2066 iterations 2
Cbc0038I Pass   6: suminf.    0.81925 (2) obj. -10.2066 iterations 1
Cbc0038I Pass   7: suminf.    1.19121 (4) obj. -10.2066 iterations 8
Cbc0038I Pass   8: suminf.    1.04073 (4) obj. -10.2066 iterations 4
Cbc0038I Pass   9: suminf.    1.03647 (3) obj. -10.2066 iterations 3
Cbc0038I Pass  10: suminf.    0.89585 (4) obj. -10.2066 iterations 2
Cbc0038I Pass  11: suminf.    1.48894 (4) obj. -10.2066 iterations 6
Cbc0038I Pass  12: suminf.    1.48894 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  13: suminf.    0.97914 (3) obj. -10.2066 iterations 4
Cbc0038I Pass  14: suminf.    0.75353 (3) obj. -10.2066 iterations 3
Cbc0038I Pass  15: suminf.    1.26854 (4) obj. -10.2066 iterations 7
Cbc0038I Pass  16: suminf.    1.26854 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  17: suminf.    1.48232 (4) obj. -10.2066 iterations 3
Cbc0038I Pass  18: suminf.    1.48232 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  19: suminf.    0.96063 (3) obj. -10.2066 iterations 4
Cbc0038I Pass  20: suminf.    0.82512 (3) obj. -10.2066 iterations 1
Cbc0038I Pass  21: suminf.    0.94548 (3) obj. -10.2066 iterations 3
Cbc0038I Pass  22: suminf.    0.84842 (3) obj. -10.2066 iterations 1
Cbc0038I Pass  23: suminf.    1.48232 (4) obj. -10.2066 iterations 2
Cbc0038I Pass  24: suminf.    1.48232 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  25: suminf.    0.96063 (3) obj. -10.2066 iterations 4
Cbc0038I Pass  26: suminf.    0.82512 (3) obj. -10.2066 iterations 1
Cbc0038I Pass  27: suminf.    0.94548 (3) obj. -10.2066 iterations 3
Cbc0038I Pass  28: suminf.    0.84842 (3) obj. -10.2066 iterations 1
Cbc0038I Pass  29: suminf.    1.48232 (4) obj. -10.2066 iterations 2
Cbc0038I Pass  30: suminf.    1.48232 (4) obj. -10.2066 iterations 0
Cbc0038I Pass  31: suminf.    0.96063 (3) obj. -10.2066 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 15.4718 to -4.93056 (0.02 seconds)
Cbc0038I Round again with cutoff of -21.3842
Cbc0038I Pass  31: suminf.    1.12671 (4) obj. -21.3842 iterations 1
Cbc0038I Pass  32: suminf.    0.65502 (4) obj. -21.3842 iterations 4
Cbc0038I Pass  33: suminf.    1.24116 (4) obj. -21.3842 iterations 4
Cbc0038I Pass  34: suminf.    1.29028 (5) obj. -21.3842 iterations 4
Cbc0038I Pass  35: suminf.    1.29028 (5) obj. -21.3842 iterations 0
Cbc0038I Pass  36: suminf.    0.52604 (4) obj. -21.3842 iterations 3
Cbc0038I Pass  37: suminf.    1.32725 (6) obj. -21.3842 iterations 5
Cbc0038I Pass  38: suminf.    1.86885 (5) obj. -21.3842 iterations 10
Cbc0038I Pass  39: suminf.    0.35714 (3) obj. -21.3842 iterations 5
Cbc0038I Pass  40: suminf.    0.35714 (3) obj. -21.3842 iterations 0
Cbc0038I Pass  41: suminf.    1.11113 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  42: suminf.    0.39306 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  43: suminf.    1.66814 (6) obj. -21.3842 iterations 5
Cbc0038I Pass  44: suminf.    1.26558 (6) obj. -21.3842 iterations 5
Cbc0038I Pass  45: suminf.    1.56794 (4) obj. -21.3842 iterations 6
Cbc0038I Pass  46: suminf.    1.14212 (4) obj. -21.3842 iterations 3
Cbc0038I Pass  47: suminf.    1.05684 (6) obj. -21.3842 iterations 7
Cbc0038I Pass  48: suminf.    1.18723 (3) obj. -21.3842 iterations 9
Cbc0038I Pass  49: suminf.    1.15063 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  50: suminf.    1.77136 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  51: suminf.    1.14212 (4) obj. -21.3842 iterations 3
Cbc0038I Pass  52: suminf.    1.05684 (6) obj. -21.3842 iterations 7
Cbc0038I Pass  53: suminf.    1.18723 (3) obj. -21.3842 iterations 9
Cbc0038I Pass  54: suminf.    1.15063 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  55: suminf.    1.77136 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  56: suminf.    1.14212 (4) obj. -21.3842 iterations 3
Cbc0038I Pass  57: suminf.    1.05684 (6) obj. -21.3842 iterations 7
Cbc0038I Pass  58: suminf.    1.18723 (3) obj. -21.3842 iterations 9
Cbc0038I Pass  59: suminf.    1.15063 (4) obj. -21.3842 iterations 2
Cbc0038I Pass  60: suminf.    1.77136 (4) obj. -21.3842 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 34 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -4.93056 - took 0.03 seconds
Cbc0012I Integer solution of -4.9305577 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 26 rows 17 columns
Cbc0031I 13 added rows had average density of 30.769231
Cbc0013I At root node, 13 cuts changed objective from -66.094518 to -37.959821 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2059 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 693 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.708 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.9305577 best solution, best possible -37.959821 (1.46 seconds)
Cbc0012I Integer solution of -6.2734717 found by rounding after 4076 iterations and 14 nodes (1.57 seconds)
Cbc0012I Integer solution of -7.5676977 found by rounding after 4194 iterations and 21 nodes (1.57 seconds)
Cbc0012I Integer solution of -9.9787277 found by rounding after 4239 iterations and 22 nodes (1.57 seconds)
Cbc0012I Integer solution of -10.358088 found by rounding after 4318 iterations and 29 nodes (1.58 seconds)
Cbc0001I Search completed - best objective -10.35808770000001, took 4577 iterations and 38 nodes (1.59 seconds)
Cbc0032I Strong branching done 402 times (5280 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 11, 69 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-18) rows, 60 (-7) columns and 602 (-122) elements
Clp1000I sum of infeasibilities 2.54503e-08 - average 4.99025e-10, 8 fixed columns
Coin0506I Presolve 43 (-8) rows, 52 (-8) columns and 477 (-125) elements
Clp0006I 0  Obj 47.734103 Dual inf 6.3049403 (52)
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 1.9044883 - largest nonzero change 2.7509056e-05 ( 0.0023983587%) - largest zero change 2.2907883e-05
Clp0000I Optimal - objective value 79.108321
Clp0000I Optimal - objective value 79.108321
Coin0511I After Postsolve, objective 79.108321, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 79.108321 Dual inf 4.2891937 (4)
Clp0014I Perturbing problem by 0.001% of 1.7924645 - largest nonzero change 2.9114078e-05 ( 0.00256423%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 83.536273
Clp0000I Optimal - objective value 83.536273
Clp0000I Optimal - objective value 83.536273
Coin0511I After Postsolve, objective 83.536273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.53627292 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 60 columns (60 integer (60 of which binary)) and 608 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.590%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 8.86357
Cbc0038I Pass   1: suminf.    1.92945 (16) obj. -7.93138 iterations 13
Cbc0038I Pass   2: suminf.    1.92945 (16) obj. -7.93138 iterations 0
Cbc0038I Pass   3: suminf.    0.48919 (6) obj. 28.1089 iterations 10
Cbc0038I Solution found of 34.5364
Cbc0038I Rounding solution of 0.170118 is better than previous of 34.5364

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 60 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 0.170118 to -1.59918 (0.02 seconds)
Cbc0038I Round again with cutoff of -9.34263
Cbc0038I Pass   4: suminf.    2.08862 (22) obj. -9.34263 iterations 1
Cbc0038I Pass   5: suminf.    2.06555 (17) obj. -9.34263 iterations 1
Cbc0038I Pass   6: suminf.    1.28429 (10) obj. -9.34263 iterations 19
Cbc0038I Pass   7: suminf.    1.28429 (10) obj. -9.34263 iterations 0
Cbc0038I Pass   8: suminf.    0.98008 (3) obj. -9.34263 iterations 12
Cbc0038I Pass   9: suminf.    0.68223 (3) obj. -9.34263 iterations 1
Cbc0038I Pass  10: suminf.    0.98008 (3) obj. -9.34263 iterations 1
Cbc0038I Pass  11: suminf.    1.82652 (10) obj. -9.34263 iterations 14
Cbc0038I Pass  12: suminf.    1.74733 (9) obj. -9.34263 iterations 4
Cbc0038I Pass  13: suminf.    0.52321 (5) obj. -9.34263 iterations 10
Cbc0038I Pass  14: suminf.    0.52321 (5) obj. -9.34263 iterations 0
Cbc0038I Pass  15: suminf.    0.22026 (3) obj. -9.34263 iterations 3
Cbc0038I Pass  16: suminf.    0.22026 (3) obj. -9.34263 iterations 0
Cbc0038I Pass  17: suminf.    1.76033 (4) obj. -17.0354 iterations 5
Cbc0038I Pass  18: suminf.    1.02388 (4) obj. -9.34263 iterations 2
Cbc0038I Pass  19: suminf.    0.72413 (2) obj. -9.34263 iterations 3
Cbc0038I Pass  20: suminf.    1.67422 (6) obj. -9.34263 iterations 8
Cbc0038I Pass  21: suminf.    1.67422 (6) obj. -9.34263 iterations 1
Cbc0038I Pass  22: suminf.    0.34710 (3) obj. -9.34263 iterations 10
Cbc0038I Pass  23: suminf.    0.34710 (3) obj. -9.34263 iterations 0
Cbc0038I Pass  24: suminf.    0.39091 (3) obj. -9.34263 iterations 1
Cbc0038I Pass  25: suminf.    2.35913 (10) obj. -9.34263 iterations 16
Cbc0038I Pass  26: suminf.    1.91584 (10) obj. -9.34263 iterations 3
Cbc0038I Pass  27: suminf.    1.53881 (4) obj. -9.34263 iterations 8
Cbc0038I Pass  28: suminf.    1.52134 (5) obj. -9.34263 iterations 1
Cbc0038I Pass  29: suminf.    1.30765 (3) obj. -9.34263 iterations 6
Cbc0038I Pass  30: suminf.    1.30765 (3) obj. -9.34263 iterations 0
Cbc0038I Pass  31: suminf.    1.37580 (3) obj. -9.34263 iterations 1
Cbc0038I Pass  32: suminf.    3.40450 (16) obj. -9.34263 iterations 29
Cbc0038I Pass  33: suminf.    2.53152 (11) obj. -9.34263 iterations 4
Cbc0038I Rounding solution of -4.80032 is better than previous of -1.59918

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 60 columns, reduced to 28 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -4.80032 to -9.97873 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.7896
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.20473 (22) obj. -23.7896 iterations 0
Cbc0038I Pass  34: suminf.    3.20473 (22) obj. -23.7896 iterations 0
Cbc0038I Pass  35: suminf.    2.45510 (10) obj. -23.7896 iterations 18
Cbc0038I Pass  36: suminf.    2.45510 (10) obj. -23.7896 iterations 0
Cbc0038I Pass  37: suminf.    1.65251 (5) obj. -23.7896 iterations 10
Cbc0038I Pass  38: suminf.    0.94193 (3) obj. -23.7896 iterations 2
Cbc0038I Pass  39: suminf.    1.09030 (3) obj. -23.7896 iterations 2
Cbc0038I Pass  40: suminf.    1.06852 (4) obj. -23.7896 iterations 1
Cbc0038I Pass  41: suminf.    1.93896 (5) obj. -23.7896 iterations 2
Cbc0038I Pass  42: suminf.    1.17808 (5) obj. -23.7896 iterations 1
Cbc0038I Pass  43: suminf.    1.06852 (4) obj. -23.7896 iterations 4
Cbc0038I Pass  44: suminf.    2.88855 (10) obj. -23.7896 iterations 13
Cbc0038I Pass  45: suminf.    2.37406 (9) obj. -23.7896 iterations 4
Cbc0038I Pass  46: suminf.    2.37406 (9) obj. -23.7896 iterations 0
Cbc0038I Pass  47: suminf.    3.15327 (9) obj. -23.7896 iterations 6
Cbc0038I Pass  48: suminf.    2.53495 (8) obj. -23.7896 iterations 3
Cbc0038I Pass  49: suminf.    2.53495 (8) obj. -23.7896 iterations 0
Cbc0038I Pass  50: suminf.    3.58386 (9) obj. -23.7896 iterations 4
Cbc0038I Pass  51: suminf.    2.60929 (8) obj. -23.7896 iterations 2
Cbc0038I Pass  52: suminf.    2.28296 (8) obj. -23.7896 iterations 1
Cbc0038I Pass  53: suminf.    2.99174 (8) obj. -23.7896 iterations 4
Cbc0038I Pass  54: suminf.    1.20443 (3) obj. -24.3365 iterations 6
Cbc0038I Pass  55: suminf.    1.42635 (4) obj. -23.7896 iterations 5
Cbc0038I Pass  56: suminf.    1.42635 (4) obj. -23.7896 iterations 0
Cbc0038I Pass  57: suminf.    1.63093 (5) obj. -23.7896 iterations 2
Cbc0038I Pass  58: suminf.    1.39796 (6) obj. -23.7896 iterations 3
Cbc0038I Pass  59: suminf.    1.39796 (6) obj. -23.7896 iterations 0
Cbc0038I Pass  60: suminf.    1.33197 (5) obj. -23.7896 iterations 8
Cbc0038I Pass  61: suminf.    1.33197 (5) obj. -23.7896 iterations 0
Cbc0038I Pass  62: suminf.    1.63093 (5) obj. -23.7896 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 60 columns, reduced to 36 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -9.97873 - took 0.04 seconds
Cbc0012I Integer solution of -9.9787277 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 51 rows 60 columns, reduced to 27 rows 33 columns
Cbc0031I 25 added rows had average density of 25.44
Cbc0013I At root node, 25 cuts changed objective from -79.03276 to -15.941979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1751 row cuts average 3.6 elements, 12 column cuts (18 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 490 row cuts average 44.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 324 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 276 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 84 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.659 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -9.9787277 best solution, best possible -15.941979 (1.43 seconds)
Cbc0016I Integer solution of -10.358088 found by strong branching after 1881 iterations and 4 nodes (1.84 seconds)
Cbc0001I Search completed - best objective -10.35808770000001, took 2256 iterations and 8 nodes (2.07 seconds)
Cbc0032I Strong branching done 148 times (837 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.38   (Wallclock seconds):       2.07

