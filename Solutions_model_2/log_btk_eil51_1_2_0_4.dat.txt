Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 60 (-45) rows, 34 (-19) columns and 181 (-122) elements
Clp0000I Optimal - objective value 101.79616
Coin0511I After Postsolve, objective 101.79616, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.7961612 - 28 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 60 rows, 34 columns (33 integer (33 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.472%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.44473
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -40.5 iterations 20
Cbc0038I Solution found of -40.5
Cbc0038I Relaxing continuous gives -40.5
Cbc0038I Rounding solution of -42.5 is better than previous of -40.5

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 34 columns, reduced to 19 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -42.5 to -81.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -83.9795
Cbc0038I Pass   2: suminf.    0.87839 (3) obj. -83.9795 iterations 3
Cbc0038I Pass   3: suminf.    0.52382 (2) obj. -83.9795 iterations 1
Cbc0038I Pass   4: suminf.    0.48591 (2) obj. -83.9795 iterations 1
Cbc0038I Pass   5: suminf.    0.28571 (1) obj. -83.9795 iterations 4
Cbc0038I Pass   6: suminf.    1.64816 (9) obj. -83.9795 iterations 10
Cbc0038I Pass   7: suminf.    1.06723 (7) obj. -83.9795 iterations 6
Cbc0038I Pass   8: suminf.    1.05209 (3) obj. -83.9795 iterations 8
Cbc0038I Pass   9: suminf.    0.58750 (2) obj. -83.9795 iterations 1
Cbc0038I Pass  10: suminf.    0.51035 (2) obj. -83.9795 iterations 3
Cbc0038I Pass  11: suminf.    1.05209 (3) obj. -83.9795 iterations 4
Cbc0038I Pass  12: suminf.    1.17379 (4) obj. -83.9795 iterations 6
Cbc0038I Pass  13: suminf.    0.87113 (4) obj. -83.9795 iterations 8
Cbc0038I Pass  14: suminf.    1.38406 (6) obj. -83.9795 iterations 8
Cbc0038I Pass  15: suminf.    1.25897 (6) obj. -83.9795 iterations 1
Cbc0038I Pass  16: suminf.    1.49309 (4) obj. -83.9795 iterations 6
Cbc0038I Pass  17: suminf.    0.83748 (3) obj. -83.9795 iterations 5
Cbc0038I Pass  18: suminf.    1.05209 (3) obj. -83.9795 iterations 4
Cbc0038I Pass  19: suminf.    0.58750 (2) obj. -83.9795 iterations 1
Cbc0038I Pass  20: suminf.    0.51035 (2) obj. -83.9795 iterations 4
Cbc0038I Pass  21: suminf.    1.05209 (3) obj. -83.9795 iterations 5
Cbc0038I Pass  22: suminf.    1.06070 (5) obj. -83.9795 iterations 13
Cbc0038I Pass  23: suminf.    1.05079 (6) obj. -83.9795 iterations 7
Cbc0038I Pass  24: suminf.    1.05209 (3) obj. -83.9795 iterations 8
Cbc0038I Pass  25: suminf.    0.58750 (2) obj. -83.9795 iterations 1
Cbc0038I Pass  26: suminf.    0.51035 (2) obj. -83.9795 iterations 4
Cbc0038I Pass  27: suminf.    1.05209 (3) obj. -83.9795 iterations 5
Cbc0038I Pass  28: suminf.    2.15685 (6) obj. -83.9795 iterations 11
Cbc0038I Pass  29: suminf.    1.07827 (5) obj. -83.9795 iterations 5
Cbc0038I Pass  30: suminf.    1.00079 (3) obj. -83.9795 iterations 2
Cbc0038I Pass  31: suminf.    0.92306 (3) obj. -83.9795 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 34 columns, reduced to 24 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -81.5 - took 0.01 seconds
Cbc0012I Integer solution of -81.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 60 rows 34 columns, reduced to 19 rows 15 columns
Cbc0031I 8 added rows had average density of 25.375
Cbc0013I At root node, 8 cuts changed objective from -101.79616 to -85.944058 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 563 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -81.5, took 1094 iterations and 4 nodes (0.13 seconds)
Cbc0032I Strong branching done 48 times (390 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-43) rows, 67 (-35) columns and 716 (-862) elements
Clp1000I sum of infeasibilities 6.31436e-08 - average 1.03514e-09, 38 fixed columns
Coin0506I Presolve 23 (-38) rows, 29 (-38) columns and 99 (-617) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 82.082786
Clp0000I Optimal - objective value 82.082786
Coin0511I After Postsolve, objective 82.082786, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6868748 - largest nonzero change 2.8987124e-05 ( 0.0015380202%) - largest zero change 2.6147737e-05
Clp0000I Optimal - objective value 142.42345
Clp0000I Optimal - objective value 142.42345
Clp0000I Optimal - objective value 142.42345
Coin0511I After Postsolve, objective 142.42345, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.4234457 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 61 rows, 67 columns (67 integer (67 of which binary)) and 718 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.286%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 9.25319
Cbc0038I Pass   1: suminf.    1.86491 (18) obj. -69.2856 iterations 23
Cbc0038I Pass   2: suminf.    1.86491 (18) obj. -69.2856 iterations 1
Cbc0038I Solution found of -32.5
Cbc0038I Rounding solution of -46 is better than previous of -32.5

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 67 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -46 to -81.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -87.2209
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.43320 (29) obj. -87.2209 iterations 9
Cbc0038I Pass   4: suminf.    3.43320 (29) obj. -87.2209 iterations 0
Cbc0038I Pass   5: suminf.    1.54740 (8) obj. -87.2209 iterations 27
Cbc0038I Pass   6: suminf.    1.51113 (7) obj. -88.7928 iterations 4
Cbc0038I Pass   7: suminf.    1.61021 (7) obj. -87.2209 iterations 13
Cbc0038I Pass   8: suminf.    1.61021 (7) obj. -87.2209 iterations 0
Cbc0038I Pass   9: suminf.    0.43794 (2) obj. -87.2209 iterations 9
Cbc0038I Pass  10: suminf.    0.43160 (4) obj. -87.2209 iterations 4
Cbc0038I Pass  11: suminf.    0.60196 (4) obj. -93.1051 iterations 4
Cbc0038I Pass  12: suminf.    0.28125 (1) obj. -88.6875 iterations 2
Cbc0038I Pass  13: suminf.    2.99472 (12) obj. -87.2209 iterations 16
Cbc0038I Pass  14: suminf.    2.99472 (12) obj. -87.2209 iterations 2
Cbc0038I Pass  15: suminf.    0.76648 (4) obj. -87.2209 iterations 16
Cbc0038I Pass  16: suminf.    0.59743 (2) obj. -87.2209 iterations 4
Cbc0038I Pass  17: suminf.    0.42302 (2) obj. -88.9649 iterations 1
Cbc0038I Pass  18: suminf.    0.76648 (4) obj. -87.2209 iterations 6
Cbc0038I Pass  19: suminf.    3.68963 (11) obj. -87.2209 iterations 13
Cbc0038I Pass  20: suminf.    3.45177 (11) obj. -87.2209 iterations 1
Cbc0038I Pass  21: suminf.    2.57450 (9) obj. -87.2209 iterations 2
Cbc0038I Pass  22: suminf.    0.83480 (3) obj. -87.2209 iterations 9
Cbc0038I Pass  23: suminf.    0.42302 (2) obj. -88.9649 iterations 2
Cbc0038I Pass  24: suminf.    0.76648 (4) obj. -87.2209 iterations 5
Cbc0038I Pass  25: suminf.    0.59743 (2) obj. -87.2209 iterations 3
Cbc0038I Pass  26: suminf.    3.36028 (13) obj. -87.2209 iterations 19
Cbc0038I Pass  27: suminf.    2.51356 (9) obj. -87.2209 iterations 3
Cbc0038I Pass  28: suminf.    0.64986 (2) obj. -87.2209 iterations 12
Cbc0038I Pass  29: suminf.    0.45327 (2) obj. -87.2209 iterations 2
Cbc0038I Pass  30: suminf.    3.58397 (14) obj. -87.2209 iterations 19
Cbc0038I Pass  31: suminf.    2.45458 (9) obj. -87.2209 iterations 11
Cbc0038I Pass  32: suminf.    0.79901 (3) obj. -87.2209 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 67 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -81.5 - took 0.02 seconds
Cbc0012I Integer solution of -81.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 16 added rows had average density of 3.75
Cbc0013I At root node, 28 cuts changed objective from -134.20953 to -81.930727 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 168 row cuts average 2.0 elements, 28 column cuts (28 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -81.5, took 63 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 60 (-45) rows, 34 (-19) columns and 181 (-122) elements
Clp0000I Optimal - objective value 101.79616
Coin0511I After Postsolve, objective 101.79616, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.7961612 - 28 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 60 rows, 34 columns (33 integer (33 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.472%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.44473
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -40.5 iterations 20
Cbc0038I Solution found of -40.5
Cbc0038I Relaxing continuous gives -40.5
Cbc0038I Rounding solution of -42.5 is better than previous of -40.5

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 34 columns, reduced to 19 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -42.5 to -81.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -83.9795
Cbc0038I Pass   2: suminf.    0.87839 (3) obj. -83.9795 iterations 3
Cbc0038I Pass   3: suminf.    0.52382 (2) obj. -83.9795 iterations 1
Cbc0038I Pass   4: suminf.    0.48591 (2) obj. -83.9795 iterations 1
Cbc0038I Pass   5: suminf.    0.28571 (1) obj. -83.9795 iterations 4
Cbc0038I Pass   6: suminf.    1.64816 (9) obj. -83.9795 iterations 10
Cbc0038I Pass   7: suminf.    1.06723 (7) obj. -83.9795 iterations 6
Cbc0038I Pass   8: suminf.    1.05209 (3) obj. -83.9795 iterations 8
Cbc0038I Pass   9: suminf.    0.58750 (2) obj. -83.9795 iterations 1
Cbc0038I Pass  10: suminf.    0.51035 (2) obj. -83.9795 iterations 3
Cbc0038I Pass  11: suminf.    1.05209 (3) obj. -83.9795 iterations 4
Cbc0038I Pass  12: suminf.    1.17379 (4) obj. -83.9795 iterations 6
Cbc0038I Pass  13: suminf.    0.87113 (4) obj. -83.9795 iterations 8
Cbc0038I Pass  14: suminf.    1.38406 (6) obj. -83.9795 iterations 8
Cbc0038I Pass  15: suminf.    1.25897 (6) obj. -83.9795 iterations 1
Cbc0038I Pass  16: suminf.    1.49309 (4) obj. -83.9795 iterations 6
Cbc0038I Pass  17: suminf.    0.83748 (3) obj. -83.9795 iterations 5
Cbc0038I Pass  18: suminf.    1.05209 (3) obj. -83.9795 iterations 4
Cbc0038I Pass  19: suminf.    0.58750 (2) obj. -83.9795 iterations 1
Cbc0038I Pass  20: suminf.    0.51035 (2) obj. -83.9795 iterations 4
Cbc0038I Pass  21: suminf.    1.05209 (3) obj. -83.9795 iterations 5
Cbc0038I Pass  22: suminf.    1.06070 (5) obj. -83.9795 iterations 13
Cbc0038I Pass  23: suminf.    1.05079 (6) obj. -83.9795 iterations 7
Cbc0038I Pass  24: suminf.    1.05209 (3) obj. -83.9795 iterations 8
Cbc0038I Pass  25: suminf.    0.58750 (2) obj. -83.9795 iterations 1
Cbc0038I Pass  26: suminf.    0.51035 (2) obj. -83.9795 iterations 4
Cbc0038I Pass  27: suminf.    1.05209 (3) obj. -83.9795 iterations 5
Cbc0038I Pass  28: suminf.    2.15685 (6) obj. -83.9795 iterations 11
Cbc0038I Pass  29: suminf.    1.07827 (5) obj. -83.9795 iterations 5
Cbc0038I Pass  30: suminf.    1.00079 (3) obj. -83.9795 iterations 2
Cbc0038I Pass  31: suminf.    0.92306 (3) obj. -83.9795 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 34 columns, reduced to 24 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -81.5 - took 0.01 seconds
Cbc0012I Integer solution of -81.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 60 rows 34 columns, reduced to 19 rows 15 columns
Cbc0031I 8 added rows had average density of 25.375
Cbc0013I At root node, 8 cuts changed objective from -101.79616 to -85.944058 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 563 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -81.5, took 1094 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 48 times (390 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-44) rows, 67 (-36) columns and 716 (-863) elements
Clp1000I sum of infeasibilities 6.31436e-08 - average 1.03514e-09, 38 fixed columns
Coin0506I Presolve 23 (-38) rows, 29 (-38) columns and 99 (-617) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 82.082786
Clp0000I Optimal - objective value 82.082786
Coin0511I After Postsolve, objective 82.082786, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.6868748 - largest nonzero change 2.8987124e-05 ( 0.0015380202%) - largest zero change 2.6147737e-05
Clp0000I Optimal - objective value 142.42345
Clp0000I Optimal - objective value 142.42345
Clp0000I Optimal - objective value 142.42345
Coin0511I After Postsolve, objective 142.42345, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.4234457 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 61 rows, 67 columns (67 integer (67 of which binary)) and 718 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.286%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 9.25319
Cbc0038I Pass   1: suminf.    1.86491 (18) obj. -69.2856 iterations 23
Cbc0038I Pass   2: suminf.    1.86491 (18) obj. -69.2856 iterations 1
Cbc0038I Solution found of -32.5
Cbc0038I Rounding solution of -46 is better than previous of -32.5

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 67 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -46 to -81.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -87.2209
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.43320 (29) obj. -87.2209 iterations 9
Cbc0038I Pass   4: suminf.    3.43320 (29) obj. -87.2209 iterations 0
Cbc0038I Pass   5: suminf.    1.54740 (8) obj. -87.2209 iterations 27
Cbc0038I Pass   6: suminf.    1.51113 (7) obj. -88.7928 iterations 4
Cbc0038I Pass   7: suminf.    1.61021 (7) obj. -87.2209 iterations 13
Cbc0038I Pass   8: suminf.    1.61021 (7) obj. -87.2209 iterations 0
Cbc0038I Pass   9: suminf.    0.43794 (2) obj. -87.2209 iterations 9
Cbc0038I Pass  10: suminf.    0.43160 (4) obj. -87.2209 iterations 4
Cbc0038I Pass  11: suminf.    0.60196 (4) obj. -93.1051 iterations 4
Cbc0038I Pass  12: suminf.    0.28125 (1) obj. -88.6875 iterations 2
Cbc0038I Pass  13: suminf.    2.99472 (12) obj. -87.2209 iterations 16
Cbc0038I Pass  14: suminf.    2.99472 (12) obj. -87.2209 iterations 2
Cbc0038I Pass  15: suminf.    0.76648 (4) obj. -87.2209 iterations 16
Cbc0038I Pass  16: suminf.    0.59743 (2) obj. -87.2209 iterations 4
Cbc0038I Pass  17: suminf.    0.42302 (2) obj. -88.9649 iterations 1
Cbc0038I Pass  18: suminf.    0.76648 (4) obj. -87.2209 iterations 6
Cbc0038I Pass  19: suminf.    3.68963 (11) obj. -87.2209 iterations 13
Cbc0038I Pass  20: suminf.    3.45177 (11) obj. -87.2209 iterations 1
Cbc0038I Pass  21: suminf.    2.57450 (9) obj. -87.2209 iterations 2
Cbc0038I Pass  22: suminf.    0.83480 (3) obj. -87.2209 iterations 9
Cbc0038I Pass  23: suminf.    0.42302 (2) obj. -88.9649 iterations 2
Cbc0038I Pass  24: suminf.    0.76648 (4) obj. -87.2209 iterations 5
Cbc0038I Pass  25: suminf.    0.59743 (2) obj. -87.2209 iterations 3
Cbc0038I Pass  26: suminf.    3.36028 (13) obj. -87.2209 iterations 19
Cbc0038I Pass  27: suminf.    2.51356 (9) obj. -87.2209 iterations 3
Cbc0038I Pass  28: suminf.    0.64986 (2) obj. -87.2209 iterations 12
Cbc0038I Pass  29: suminf.    0.45327 (2) obj. -87.2209 iterations 2
Cbc0038I Pass  30: suminf.    3.58397 (14) obj. -87.2209 iterations 19
Cbc0038I Pass  31: suminf.    2.45458 (9) obj. -87.2209 iterations 11
Cbc0038I Pass  32: suminf.    0.79901 (3) obj. -87.2209 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 67 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -81.5 - took 0.02 seconds
Cbc0012I Integer solution of -81.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 16 added rows had average density of 3.75
Cbc0013I At root node, 28 cuts changed objective from -134.20953 to -81.930727 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 168 row cuts average 2.0 elements, 28 column cuts (28 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0001I Search completed - best objective -81.5, took 63 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

