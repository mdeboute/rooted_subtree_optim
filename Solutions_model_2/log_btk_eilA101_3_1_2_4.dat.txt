Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 1.85742e-05 - average 9.87989e-08, 14 fixed columns
Coin0506I Presolve 158 (-30) rows, 86 (-15) columns and 480 (-90) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.1322638 - largest nonzero change 0 ( 0%) - largest zero change 2.9842406e-05
Clp0000I Optimal - objective value 33.64097
Clp0000I Optimal - objective value 33.64097
Coin0511I After Postsolve, objective 33.64097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.64097
Clp0000I Optimal - objective value 33.64097
Clp0000I Optimal - objective value 33.64097
Coin0511I After Postsolve, objective 33.64097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.64097031 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 15.0688
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 24.7936 iterations 82
Cbc0038I Solution found of 24.7936
Cbc0038I Relaxing continuous gives 24.7936
Cbc0038I Rounding solution of 2.93448 is better than previous of 24.7936

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 84 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 2.93448 to -8.15001 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.6992
Cbc0038I Pass   2: suminf.    4.29462 (23) obj. -10.6992 iterations 24
Cbc0038I Pass   3: suminf.    4.15794 (23) obj. -10.6992 iterations 6
Cbc0038I Pass   4: suminf.    2.94265 (8) obj. -10.6992 iterations 20
Cbc0038I Pass   5: suminf.    1.10100 (6) obj. -10.6992 iterations 8
Cbc0038I Pass   6: suminf.    1.10100 (6) obj. -10.6992 iterations 0
Cbc0038I Pass   7: suminf.    1.26959 (6) obj. -10.6992 iterations 13
Cbc0038I Pass   8: suminf.    1.26959 (6) obj. -10.6992 iterations 0
Cbc0038I Pass   9: suminf.    2.35265 (8) obj. -10.6992 iterations 4
Cbc0038I Pass  10: suminf.    2.18656 (7) obj. -10.6992 iterations 1
Cbc0038I Pass  11: suminf.    2.18656 (7) obj. -10.6992 iterations 0
Cbc0038I Pass  12: suminf.    1.96132 (5) obj. -10.6992 iterations 8
Cbc0038I Pass  13: suminf.    1.96132 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  14: suminf.    1.78250 (5) obj. -10.6992 iterations 2
Cbc0038I Pass  15: suminf.    1.78250 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  16: suminf.    1.54583 (5) obj. -10.6992 iterations 3
Cbc0038I Pass  17: suminf.    1.54583 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  18: suminf.    1.81383 (6) obj. -10.6992 iterations 3
Cbc0038I Pass  19: suminf.    1.78250 (5) obj. -10.6992 iterations 1
Cbc0038I Pass  20: suminf.    1.78250 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  21: suminf.    1.54583 (5) obj. -10.6992 iterations 3
Cbc0038I Pass  22: suminf.    1.54583 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  23: suminf.    1.81383 (6) obj. -10.6992 iterations 3
Cbc0038I Pass  24: suminf.    1.78250 (5) obj. -10.6992 iterations 1
Cbc0038I Pass  25: suminf.    1.78250 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  26: suminf.    1.54583 (5) obj. -10.6992 iterations 3
Cbc0038I Pass  27: suminf.    1.54583 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  28: suminf.    1.81383 (6) obj. -10.6992 iterations 3
Cbc0038I Pass  29: suminf.    1.78250 (5) obj. -10.6992 iterations 1
Cbc0038I Pass  30: suminf.    1.78250 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  31: suminf.    1.54583 (5) obj. -10.6992 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 95 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -8.15001 to -8.39375 (0.11 seconds)
Cbc0038I Round again with cutoff of -15.2876
Cbc0038I Pass  31: suminf.    5.60309 (23) obj. -15.2876 iterations 0
Cbc0038I Pass  32: suminf.    5.11770 (19) obj. -15.2876 iterations 7
Cbc0038I Pass  33: suminf.    2.29365 (10) obj. -15.2876 iterations 18
Cbc0038I Pass  34: suminf.    2.29365 (10) obj. -15.2876 iterations 0
Cbc0038I Pass  35: suminf.    3.70712 (13) obj. -15.2876 iterations 12
Cbc0038I Pass  36: suminf.    3.06499 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  37: suminf.    2.45072 (10) obj. -15.2876 iterations 3
Cbc0038I Pass  38: suminf.    2.45072 (10) obj. -15.2876 iterations 0
Cbc0038I Pass  39: suminf.    2.61571 (8) obj. -15.2876 iterations 9
Cbc0038I Pass  40: suminf.    2.60451 (9) obj. -15.2876 iterations 1
Cbc0038I Pass  41: suminf.    3.48219 (9) obj. -15.2876 iterations 11
Cbc0038I Pass  42: suminf.    2.65379 (12) obj. -15.2876 iterations 3
Cbc0038I Pass  43: suminf.    2.27954 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  44: suminf.    2.26730 (8) obj. -15.2876 iterations 4
Cbc0038I Pass  45: suminf.    3.70712 (13) obj. -15.2876 iterations 9
Cbc0038I Pass  46: suminf.    3.06499 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  47: suminf.    2.45072 (10) obj. -15.2876 iterations 3
Cbc0038I Pass  48: suminf.    2.45072 (10) obj. -15.2876 iterations 0
Cbc0038I Pass  49: suminf.    2.61571 (8) obj. -15.2876 iterations 9
Cbc0038I Pass  50: suminf.    2.60451 (9) obj. -15.2876 iterations 1
Cbc0038I Pass  51: suminf.    3.48219 (9) obj. -15.2876 iterations 11
Cbc0038I Pass  52: suminf.    2.65379 (12) obj. -15.2876 iterations 3
Cbc0038I Pass  53: suminf.    2.27954 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  54: suminf.    2.26730 (8) obj. -15.2876 iterations 4
Cbc0038I Pass  55: suminf.    3.70712 (13) obj. -15.2876 iterations 9
Cbc0038I Pass  56: suminf.    3.06499 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  57: suminf.    2.45072 (10) obj. -15.2876 iterations 3
Cbc0038I Pass  58: suminf.    2.45072 (10) obj. -15.2876 iterations 0
Cbc0038I Pass  59: suminf.    2.61571 (8) obj. -15.2876 iterations 9
Cbc0038I Pass  60: suminf.    2.60451 (9) obj. -15.2876 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 93 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -8.39375 - took 0.15 seconds
Cbc0012I Integer solution of -8.3937523 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 86 rows 48 columns
Cbc0012I Integer solution of -8.4286423 found by RINS after 0 iterations and 0 nodes (0.22 seconds)
Cbc0031I 42 added rows had average density of 54.785714
Cbc0013I At root node, 42 cuts changed objective from -33.64097 to -24.773772 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19956 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2616 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.4286423 best solution, best possible -24.773772 (1.86 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 75 rows 45 columns
Cbc0038I Full problem 188 rows 101 columns, reduced to 6 rows 10 columns
Cbc0012I Integer solution of -8.4350223 found by rounding after 14455 iterations and 148 nodes (2.38 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 4 rows 6 columns
Cbc0010I After 302 nodes, 16 on tree, -8.4350223 best solution, best possible -24.773772 (2.56 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 12 rows 15 columns
Cbc0038I Full problem 188 rows 101 columns, reduced to 24 rows 22 columns
Cbc0001I Search completed - best objective -8.4350223, took 21518 iterations and 838 nodes (2.96 seconds)
Cbc0032I Strong branching done 2670 times (29269 iterations), fathomed 127 nodes and fixed 210 variables
Cbc0041I Maximum depth 26, 1761 variables fixed on reduced cost (complete fathoming 4 times, 204 nodes taking 1417 iterations)
Total time (CPU seconds):       2.85   (Wallclock seconds):       2.98

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-66) rows, 150 (-52) columns and 2918 (-2735) elements
Clp1000I sum of infeasibilities 1.59026e-07 - average 1.15236e-09, 33 fixed columns
Coin0506I Presolve 104 (-34) rows, 117 (-33) columns and 1812 (-1106) elements
Clp0006I 0  Obj 42.840226 Dual inf 5.6967117 (116)
Clp0029I End of values pass after 117 iterations
Clp0014I Perturbing problem by 0.001% of 2.0583649 - largest nonzero change 2.0947275e-05 ( 0.0016756202%) - largest zero change 2.988423e-05
Clp0000I Optimal - objective value 56.395792
Clp0000I Optimal - objective value 56.395792
Coin0511I After Postsolve, objective 56.395792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.395792
Clp0000I Optimal - objective value 56.395792
Clp0000I Optimal - objective value 56.395792
Clp0000I Optimal - objective value 56.395792
Coin0511I After Postsolve, objective 56.395792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.39579203 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 150 columns (150 integer (150 of which binary)) and 2921 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.055%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 5.6595
Cbc0038I Pass   1: suminf.    2.18211 (29) obj. -37.3317 iterations 22
Cbc0038I Pass   2: suminf.    2.18211 (29) obj. -37.3317 iterations 1
Cbc0038I Pass   3: suminf.    0.80115 (15) obj. -13.095 iterations 14
Cbc0038I Pass   4: suminf.    0.04396 (2) obj. -0.852181 iterations 13
Cbc0038I Solution found of 1.10386
Cbc0038I Rounding solution of -4.46912 is better than previous of 1.10386

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 150 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -8.91746
Cbc0038I Pass   5: suminf.    2.18211 (29) obj. -37.3317 iterations 0
Cbc0038I Pass   6: suminf.    2.18211 (29) obj. -37.3317 iterations 1
Cbc0038I Pass   7: suminf.    0.28261 (3) obj. -8.91746 iterations 37
Cbc0038I Pass   8: suminf.    0.28261 (3) obj. -8.91746 iterations 0
Cbc0038I Pass   9: suminf.    0.44449 (3) obj. -8.91746 iterations 4
Cbc0038I Pass  10: suminf.    0.44449 (3) obj. -8.91746 iterations 0
Cbc0038I Pass  11: suminf.    0.28261 (3) obj. -8.91746 iterations 4
Cbc0038I Pass  12: suminf.    1.15868 (13) obj. -8.91746 iterations 34
Cbc0038I Pass  13: suminf.    0.91761 (12) obj. -9.64067 iterations 5
Cbc0038I Pass  14: suminf.    1.83870 (12) obj. -8.91746 iterations 15
Cbc0038I Pass  15: suminf.    0.78558 (10) obj. -9.01736 iterations 5
Cbc0038I Pass  16: suminf.    0.86081 (7) obj. -8.91746 iterations 14
Cbc0038I Pass  17: suminf.    0.86081 (7) obj. -8.91746 iterations 0
Cbc0038I Pass  18: suminf.    0.90437 (7) obj. -8.91746 iterations 1
Cbc0038I Pass  19: suminf.    0.90437 (7) obj. -8.91746 iterations 1
Cbc0038I Pass  20: suminf.    0.86081 (7) obj. -8.91746 iterations 3
Cbc0038I Pass  21: suminf.    1.95299 (20) obj. -8.91746 iterations 31
Cbc0038I Pass  22: suminf.    1.73378 (16) obj. -8.91746 iterations 10
Cbc0038I Pass  23: suminf.    1.52945 (10) obj. -8.91746 iterations 16
Cbc0038I Pass  24: suminf.    1.39829 (10) obj. -8.91746 iterations 1
Cbc0038I Pass  25: suminf.    1.33041 (8) obj. -8.91746 iterations 11
Cbc0038I Pass  26: suminf.    1.33041 (8) obj. -8.91746 iterations 0
Cbc0038I Pass  27: suminf.    1.61534 (8) obj. -8.91746 iterations 13
Cbc0038I Pass  28: suminf.    1.50558 (9) obj. -8.91746 iterations 5
Cbc0038I Pass  29: suminf.    2.42224 (10) obj. -8.91746 iterations 9
Cbc0038I Pass  30: suminf.    2.42224 (10) obj. -8.91746 iterations 0
Cbc0038I Pass  31: suminf.    3.44021 (11) obj. -8.91746 iterations 6
Cbc0038I Pass  32: suminf.    1.68020 (9) obj. -8.91746 iterations 12
Cbc0038I Pass  33: suminf.    1.57576 (8) obj. -8.91746 iterations 2
Cbc0038I Pass  34: suminf.    2.40362 (9) obj. -8.91746 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 150 columns, reduced to 34 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 1.10386 to -6.86889 (0.10 seconds)
Cbc0038I Round again with cutoff of -16.9243
Cbc0038I Pass  34: suminf.    2.18211 (29) obj. -37.3317 iterations 0
Cbc0038I Pass  35: suminf.    2.18211 (29) obj. -37.3317 iterations 1
Cbc0038I Pass  36: suminf.    0.99895 (18) obj. -16.9243 iterations 13
Cbc0038I Pass  37: suminf.    1.88023 (19) obj. -16.9243 iterations 32
Cbc0038I Pass  38: suminf.    1.59110 (18) obj. -16.9243 iterations 2
Cbc0038I Pass  39: suminf.    1.51652 (18) obj. -16.9243 iterations 3
Cbc0038I Pass  40: suminf.    2.51381 (14) obj. -16.9243 iterations 26
Cbc0038I Pass  41: suminf.    2.43723 (14) obj. -16.9243 iterations 3
Cbc0038I Pass  42: suminf.    3.35365 (15) obj. -16.9243 iterations 6
Cbc0038I Pass  43: suminf.    2.17942 (13) obj. -16.9243 iterations 8
Cbc0038I Pass  44: suminf.    2.09321 (12) obj. -16.9243 iterations 1
Cbc0038I Pass  45: suminf.    3.04635 (13) obj. -16.9243 iterations 6
Cbc0038I Pass  46: suminf.    2.86624 (14) obj. -16.9243 iterations 2
Cbc0038I Pass  47: suminf.    2.57357 (13) obj. -16.9243 iterations 5
Cbc0038I Pass  48: suminf.    1.54123 (12) obj. -16.9243 iterations 6
Cbc0038I Pass  49: suminf.    1.31043 (13) obj. -17.0286 iterations 4
Cbc0038I Pass  50: suminf.    2.57890 (13) obj. -16.9243 iterations 13
Cbc0038I Pass  51: suminf.    2.14662 (12) obj. -16.9243 iterations 7
Cbc0038I Pass  52: suminf.    1.58178 (13) obj. -16.9243 iterations 9
Cbc0038I Pass  53: suminf.    2.14480 (14) obj. -16.9243 iterations 23
Cbc0038I Pass  54: suminf.    1.80672 (13) obj. -17.1389 iterations 9
Cbc0038I Pass  55: suminf.    1.69109 (12) obj. -16.9243 iterations 19
Cbc0038I Pass  56: suminf.    1.69109 (12) obj. -16.9243 iterations 2
Cbc0038I Pass  57: suminf.    2.03252 (14) obj. -16.9243 iterations 4
Cbc0038I Pass  58: suminf.    1.76441 (15) obj. -16.9243 iterations 2
Cbc0038I Pass  59: suminf.    2.58094 (15) obj. -16.9243 iterations 12
Cbc0038I Pass  60: suminf.    2.58094 (15) obj. -16.9243 iterations 5
Cbc0038I Pass  61: suminf.    2.55806 (15) obj. -16.9243 iterations 10
Cbc0038I Pass  62: suminf.    2.55806 (15) obj. -16.9243 iterations 6
Cbc0038I Pass  63: suminf.    2.58094 (15) obj. -16.9243 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -6.86889 - took 0.11 seconds
Cbc0012I Integer solution of -6.8688923 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 138 rows 150 columns, reduced to 32 rows 37 columns
Cbc0031I 76 added rows had average density of 36.394737
Cbc0013I At root node, 76 cuts changed objective from -48.95159 to -11.871305 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16455 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1455 row cuts average 138.6 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 791 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1563 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 398 row cuts average 88.7 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 80 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.517 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.8688923 best solution, best possible -11.871305 (2.74 seconds)
Cbc0012I Integer solution of -7.1005523 found by rounding after 5595 iterations and 3 nodes (3.10 seconds)
Cbc0012I Integer solution of -7.8172223 found by DiveCoefficient after 5614 iterations and 3 nodes (3.11 seconds)
Cbc0012I Integer solution of -8.3704923 found by rounding after 5615 iterations and 4 nodes (3.11 seconds)
Cbc0038I Full problem 138 rows 150 columns, reduced to 2 rows 6 columns
Cbc0012I Integer solution of -8.4286423 found by RINS after 6320 iterations and 41 nodes (3.30 seconds)
Cbc0010I After 60 nodes, 8 on tree, -8.4286423 best solution, best possible -11.871305 (3.45 seconds)
Cbc0038I Full problem 138 rows 150 columns, reduced to 4 rows 8 columns
Cbc0010I After 157 nodes, 1 on tree, -8.4286423 best solution, best possible -11.871305 (4.17 seconds)
Cbc0010I After 176 nodes, 4 on tree, -8.4286423 best solution, best possible -11.854515 (4.87 seconds)
Cbc0038I Full problem 138 rows 150 columns, reduced to 9 rows 19 columns
Cbc0012I Integer solution of -8.4350223 found by rounding after 13003 iterations and 312 nodes (5.48 seconds)
Cbc0010I After 351 nodes, 23 on tree, -8.4350223 best solution, best possible -11.854515 (5.57 seconds)
Cbc0001I Search completed - best objective -8.4350223, took 15592 iterations and 488 nodes (5.84 seconds)
Cbc0032I Strong branching done 2458 times (21151 iterations), fathomed 119 nodes and fixed 127 variables
Cbc0035I Maximum depth 18, 938 variables fixed on reduced cost
Total time (CPU seconds):       5.09   (Wallclock seconds):       5.86

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 1.85742e-05 - average 9.87989e-08, 14 fixed columns
Coin0506I Presolve 158 (-30) rows, 86 (-15) columns and 480 (-90) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.1322638 - largest nonzero change 0 ( 0%) - largest zero change 2.9842406e-05
Clp0000I Optimal - objective value 33.64097
Clp0000I Optimal - objective value 33.64097
Coin0511I After Postsolve, objective 33.64097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.64097
Clp0000I Optimal - objective value 33.64097
Clp0000I Optimal - objective value 33.64097
Coin0511I After Postsolve, objective 33.64097, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.64097031 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 15.0688
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 24.7936 iterations 82
Cbc0038I Solution found of 24.7936
Cbc0038I Relaxing continuous gives 24.7936
Cbc0038I Rounding solution of 2.93448 is better than previous of 24.7936

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 84 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 2.93448 to -8.15001 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.6992
Cbc0038I Pass   2: suminf.    4.29462 (23) obj. -10.6992 iterations 24
Cbc0038I Pass   3: suminf.    4.15794 (23) obj. -10.6992 iterations 6
Cbc0038I Pass   4: suminf.    2.94265 (8) obj. -10.6992 iterations 20
Cbc0038I Pass   5: suminf.    1.10100 (6) obj. -10.6992 iterations 8
Cbc0038I Pass   6: suminf.    1.10100 (6) obj. -10.6992 iterations 0
Cbc0038I Pass   7: suminf.    1.26959 (6) obj. -10.6992 iterations 13
Cbc0038I Pass   8: suminf.    1.26959 (6) obj. -10.6992 iterations 0
Cbc0038I Pass   9: suminf.    2.35265 (8) obj. -10.6992 iterations 4
Cbc0038I Pass  10: suminf.    2.18656 (7) obj. -10.6992 iterations 1
Cbc0038I Pass  11: suminf.    2.18656 (7) obj. -10.6992 iterations 0
Cbc0038I Pass  12: suminf.    1.96132 (5) obj. -10.6992 iterations 8
Cbc0038I Pass  13: suminf.    1.96132 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  14: suminf.    1.78250 (5) obj. -10.6992 iterations 2
Cbc0038I Pass  15: suminf.    1.78250 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  16: suminf.    1.54583 (5) obj. -10.6992 iterations 3
Cbc0038I Pass  17: suminf.    1.54583 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  18: suminf.    1.81383 (6) obj. -10.6992 iterations 3
Cbc0038I Pass  19: suminf.    1.78250 (5) obj. -10.6992 iterations 1
Cbc0038I Pass  20: suminf.    1.78250 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  21: suminf.    1.54583 (5) obj. -10.6992 iterations 3
Cbc0038I Pass  22: suminf.    1.54583 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  23: suminf.    1.81383 (6) obj. -10.6992 iterations 3
Cbc0038I Pass  24: suminf.    1.78250 (5) obj. -10.6992 iterations 1
Cbc0038I Pass  25: suminf.    1.78250 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  26: suminf.    1.54583 (5) obj. -10.6992 iterations 3
Cbc0038I Pass  27: suminf.    1.54583 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  28: suminf.    1.81383 (6) obj. -10.6992 iterations 3
Cbc0038I Pass  29: suminf.    1.78250 (5) obj. -10.6992 iterations 1
Cbc0038I Pass  30: suminf.    1.78250 (5) obj. -10.6992 iterations 0
Cbc0038I Pass  31: suminf.    1.54583 (5) obj. -10.6992 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 95 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -8.15001 to -8.39375 (0.11 seconds)
Cbc0038I Round again with cutoff of -15.2876
Cbc0038I Pass  31: suminf.    5.60309 (23) obj. -15.2876 iterations 0
Cbc0038I Pass  32: suminf.    5.11770 (19) obj. -15.2876 iterations 7
Cbc0038I Pass  33: suminf.    2.29365 (10) obj. -15.2876 iterations 18
Cbc0038I Pass  34: suminf.    2.29365 (10) obj. -15.2876 iterations 0
Cbc0038I Pass  35: suminf.    3.70712 (13) obj. -15.2876 iterations 12
Cbc0038I Pass  36: suminf.    3.06499 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  37: suminf.    2.45072 (10) obj. -15.2876 iterations 3
Cbc0038I Pass  38: suminf.    2.45072 (10) obj. -15.2876 iterations 0
Cbc0038I Pass  39: suminf.    2.61571 (8) obj. -15.2876 iterations 9
Cbc0038I Pass  40: suminf.    2.60451 (9) obj. -15.2876 iterations 1
Cbc0038I Pass  41: suminf.    3.48219 (9) obj. -15.2876 iterations 11
Cbc0038I Pass  42: suminf.    2.65379 (12) obj. -15.2876 iterations 3
Cbc0038I Pass  43: suminf.    2.27954 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  44: suminf.    2.26730 (8) obj. -15.2876 iterations 4
Cbc0038I Pass  45: suminf.    3.70712 (13) obj. -15.2876 iterations 9
Cbc0038I Pass  46: suminf.    3.06499 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  47: suminf.    2.45072 (10) obj. -15.2876 iterations 3
Cbc0038I Pass  48: suminf.    2.45072 (10) obj. -15.2876 iterations 0
Cbc0038I Pass  49: suminf.    2.61571 (8) obj. -15.2876 iterations 9
Cbc0038I Pass  50: suminf.    2.60451 (9) obj. -15.2876 iterations 1
Cbc0038I Pass  51: suminf.    3.48219 (9) obj. -15.2876 iterations 11
Cbc0038I Pass  52: suminf.    2.65379 (12) obj. -15.2876 iterations 3
Cbc0038I Pass  53: suminf.    2.27954 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  54: suminf.    2.26730 (8) obj. -15.2876 iterations 4
Cbc0038I Pass  55: suminf.    3.70712 (13) obj. -15.2876 iterations 9
Cbc0038I Pass  56: suminf.    3.06499 (9) obj. -15.2876 iterations 3
Cbc0038I Pass  57: suminf.    2.45072 (10) obj. -15.2876 iterations 3
Cbc0038I Pass  58: suminf.    2.45072 (10) obj. -15.2876 iterations 0
Cbc0038I Pass  59: suminf.    2.61571 (8) obj. -15.2876 iterations 9
Cbc0038I Pass  60: suminf.    2.60451 (9) obj. -15.2876 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 93 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -8.39375 - took 0.15 seconds
Cbc0012I Integer solution of -8.3937523 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 86 rows 48 columns
Cbc0012I Integer solution of -8.4286423 found by RINS after 0 iterations and 0 nodes (0.21 seconds)
Cbc0031I 42 added rows had average density of 54.785714
Cbc0013I At root node, 42 cuts changed objective from -33.64097 to -24.773772 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19956 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2616 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.4286423 best solution, best possible -24.773772 (1.75 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 75 rows 45 columns
Cbc0038I Full problem 188 rows 101 columns, reduced to 6 rows 10 columns
Cbc0012I Integer solution of -8.4350223 found by rounding after 14455 iterations and 148 nodes (2.21 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 4 rows 6 columns
Cbc0010I After 393 nodes, 10 on tree, -8.4350223 best solution, best possible -24.773772 (2.45 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 12 rows 15 columns
Cbc0038I Full problem 188 rows 101 columns, reduced to 24 rows 22 columns
Cbc0001I Search completed - best objective -8.4350223, took 21518 iterations and 838 nodes (2.76 seconds)
Cbc0032I Strong branching done 2670 times (29269 iterations), fathomed 127 nodes and fixed 210 variables
Cbc0041I Maximum depth 26, 1761 variables fixed on reduced cost (complete fathoming 4 times, 204 nodes taking 1417 iterations)
Total time (CPU seconds):       2.68   (Wallclock seconds):       2.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-67) rows, 150 (-53) columns and 2918 (-2736) elements
Clp1000I sum of infeasibilities 1.59026e-07 - average 1.15236e-09, 33 fixed columns
Coin0506I Presolve 104 (-34) rows, 117 (-33) columns and 1812 (-1106) elements
Clp0006I 0  Obj 42.840226 Dual inf 5.6967117 (116)
Clp0029I End of values pass after 117 iterations
Clp0014I Perturbing problem by 0.001% of 2.0583649 - largest nonzero change 2.0947275e-05 ( 0.0016756202%) - largest zero change 2.988423e-05
Clp0000I Optimal - objective value 56.395792
Clp0000I Optimal - objective value 56.395792
Coin0511I After Postsolve, objective 56.395792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.395792
Clp0000I Optimal - objective value 56.395792
Clp0000I Optimal - objective value 56.395792
Clp0000I Optimal - objective value 56.395792
Coin0511I After Postsolve, objective 56.395792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.39579203 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 150 columns (150 integer (150 of which binary)) and 2921 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.055%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 5.6595
Cbc0038I Pass   1: suminf.    2.18211 (29) obj. -37.3317 iterations 22
Cbc0038I Pass   2: suminf.    2.18211 (29) obj. -37.3317 iterations 1
Cbc0038I Pass   3: suminf.    0.80115 (15) obj. -13.095 iterations 14
Cbc0038I Pass   4: suminf.    0.04396 (2) obj. -0.852181 iterations 13
Cbc0038I Solution found of 1.10386
Cbc0038I Rounding solution of -4.46912 is better than previous of 1.10386

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 150 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -8.91746
Cbc0038I Pass   5: suminf.    2.18211 (29) obj. -37.3317 iterations 0
Cbc0038I Pass   6: suminf.    2.18211 (29) obj. -37.3317 iterations 1
Cbc0038I Pass   7: suminf.    0.28261 (3) obj. -8.91746 iterations 37
Cbc0038I Pass   8: suminf.    0.28261 (3) obj. -8.91746 iterations 0
Cbc0038I Pass   9: suminf.    0.44449 (3) obj. -8.91746 iterations 4
Cbc0038I Pass  10: suminf.    0.44449 (3) obj. -8.91746 iterations 0
Cbc0038I Pass  11: suminf.    0.28261 (3) obj. -8.91746 iterations 4
Cbc0038I Pass  12: suminf.    1.15868 (13) obj. -8.91746 iterations 34
Cbc0038I Pass  13: suminf.    0.91761 (12) obj. -9.64067 iterations 5
Cbc0038I Pass  14: suminf.    1.83870 (12) obj. -8.91746 iterations 15
Cbc0038I Pass  15: suminf.    0.78558 (10) obj. -9.01736 iterations 5
Cbc0038I Pass  16: suminf.    0.86081 (7) obj. -8.91746 iterations 14
Cbc0038I Pass  17: suminf.    0.86081 (7) obj. -8.91746 iterations 0
Cbc0038I Pass  18: suminf.    0.90437 (7) obj. -8.91746 iterations 1
Cbc0038I Pass  19: suminf.    0.90437 (7) obj. -8.91746 iterations 1
Cbc0038I Pass  20: suminf.    0.86081 (7) obj. -8.91746 iterations 3
Cbc0038I Pass  21: suminf.    1.95299 (20) obj. -8.91746 iterations 31
Cbc0038I Pass  22: suminf.    1.73378 (16) obj. -8.91746 iterations 10
Cbc0038I Pass  23: suminf.    1.52945 (10) obj. -8.91746 iterations 16
Cbc0038I Pass  24: suminf.    1.39829 (10) obj. -8.91746 iterations 1
Cbc0038I Pass  25: suminf.    1.33041 (8) obj. -8.91746 iterations 11
Cbc0038I Pass  26: suminf.    1.33041 (8) obj. -8.91746 iterations 0
Cbc0038I Pass  27: suminf.    1.61534 (8) obj. -8.91746 iterations 13
Cbc0038I Pass  28: suminf.    1.50558 (9) obj. -8.91746 iterations 5
Cbc0038I Pass  29: suminf.    2.42224 (10) obj. -8.91746 iterations 9
Cbc0038I Pass  30: suminf.    2.42224 (10) obj. -8.91746 iterations 0
Cbc0038I Pass  31: suminf.    3.44021 (11) obj. -8.91746 iterations 6
Cbc0038I Pass  32: suminf.    1.68020 (9) obj. -8.91746 iterations 12
Cbc0038I Pass  33: suminf.    1.57576 (8) obj. -8.91746 iterations 2
Cbc0038I Pass  34: suminf.    2.40362 (9) obj. -8.91746 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 150 columns, reduced to 34 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 1.10386 to -6.86889 (0.10 seconds)
Cbc0038I Round again with cutoff of -16.9243
Cbc0038I Pass  34: suminf.    2.18211 (29) obj. -37.3317 iterations 0
Cbc0038I Pass  35: suminf.    2.18211 (29) obj. -37.3317 iterations 1
Cbc0038I Pass  36: suminf.    0.99895 (18) obj. -16.9243 iterations 13
Cbc0038I Pass  37: suminf.    1.88023 (19) obj. -16.9243 iterations 32
Cbc0038I Pass  38: suminf.    1.59110 (18) obj. -16.9243 iterations 2
Cbc0038I Pass  39: suminf.    1.51652 (18) obj. -16.9243 iterations 3
Cbc0038I Pass  40: suminf.    2.51381 (14) obj. -16.9243 iterations 26
Cbc0038I Pass  41: suminf.    2.43723 (14) obj. -16.9243 iterations 3
Cbc0038I Pass  42: suminf.    3.35365 (15) obj. -16.9243 iterations 6
Cbc0038I Pass  43: suminf.    2.17942 (13) obj. -16.9243 iterations 8
Cbc0038I Pass  44: suminf.    2.09321 (12) obj. -16.9243 iterations 1
Cbc0038I Pass  45: suminf.    3.04635 (13) obj. -16.9243 iterations 6
Cbc0038I Pass  46: suminf.    2.86624 (14) obj. -16.9243 iterations 2
Cbc0038I Pass  47: suminf.    2.57357 (13) obj. -16.9243 iterations 5
Cbc0038I Pass  48: suminf.    1.54123 (12) obj. -16.9243 iterations 6
Cbc0038I Pass  49: suminf.    1.31043 (13) obj. -17.0286 iterations 4
Cbc0038I Pass  50: suminf.    2.57890 (13) obj. -16.9243 iterations 13
Cbc0038I Pass  51: suminf.    2.14662 (12) obj. -16.9243 iterations 7
Cbc0038I Pass  52: suminf.    1.58178 (13) obj. -16.9243 iterations 9
Cbc0038I Pass  53: suminf.    2.14480 (14) obj. -16.9243 iterations 23
Cbc0038I Pass  54: suminf.    1.80672 (13) obj. -17.1389 iterations 9
Cbc0038I Pass  55: suminf.    1.69109 (12) obj. -16.9243 iterations 19
Cbc0038I Pass  56: suminf.    1.69109 (12) obj. -16.9243 iterations 2
Cbc0038I Pass  57: suminf.    2.03252 (14) obj. -16.9243 iterations 4
Cbc0038I Pass  58: suminf.    1.76441 (15) obj. -16.9243 iterations 2
Cbc0038I Pass  59: suminf.    2.58094 (15) obj. -16.9243 iterations 12
Cbc0038I Pass  60: suminf.    2.58094 (15) obj. -16.9243 iterations 5
Cbc0038I Pass  61: suminf.    2.55806 (15) obj. -16.9243 iterations 10
Cbc0038I Pass  62: suminf.    2.55806 (15) obj. -16.9243 iterations 6
Cbc0038I Pass  63: suminf.    2.58094 (15) obj. -16.9243 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -6.86889 - took 0.12 seconds
Cbc0012I Integer solution of -6.8688923 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 138 rows 150 columns, reduced to 32 rows 37 columns
Cbc0031I 76 added rows had average density of 36.394737
Cbc0013I At root node, 76 cuts changed objective from -48.95159 to -11.871305 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16455 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.219 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1455 row cuts average 138.6 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 791 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1563 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 398 row cuts average 88.7 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 80 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.529 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.8688923 best solution, best possible -11.871305 (2.83 seconds)
Cbc0012I Integer solution of -7.1005523 found by rounding after 5595 iterations and 3 nodes (3.22 seconds)
Cbc0012I Integer solution of -7.8172223 found by DiveCoefficient after 5614 iterations and 3 nodes (3.22 seconds)
Cbc0012I Integer solution of -8.3704923 found by rounding after 5615 iterations and 4 nodes (3.22 seconds)
Cbc0038I Full problem 138 rows 150 columns, reduced to 2 rows 6 columns
Cbc0012I Integer solution of -8.4286423 found by RINS after 6320 iterations and 41 nodes (3.41 seconds)
Cbc0010I After 57 nodes, 7 on tree, -8.4286423 best solution, best possible -11.871305 (3.53 seconds)
Cbc0038I Full problem 138 rows 150 columns, reduced to 4 rows 8 columns
Cbc0010I After 145 nodes, 4 on tree, -8.4286423 best solution, best possible -11.871305 (4.23 seconds)
Cbc0010I After 168 nodes, 3 on tree, -8.4286423 best solution, best possible -11.854515 (4.94 seconds)
Cbc0038I Full problem 138 rows 150 columns, reduced to 9 rows 19 columns
Cbc0012I Integer solution of -8.4350223 found by rounding after 13003 iterations and 312 nodes (5.54 seconds)
Cbc0010I After 355 nodes, 23 on tree, -8.4350223 best solution, best possible -11.854515 (5.64 seconds)
Cbc0001I Search completed - best objective -8.4350223, took 15592 iterations and 488 nodes (5.90 seconds)
Cbc0032I Strong branching done 2458 times (21151 iterations), fathomed 119 nodes and fixed 127 variables
Cbc0035I Maximum depth 18, 938 variables fixed on reduced cost
Total time (CPU seconds):       5.13   (Wallclock seconds):       5.93

