Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 4.91259e-06 - average 8.46999e-08, 1 fixed columns
Coin0506I Presolve 56 (-2) rows, 32 (-1) columns and 168 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 3.2465719 - largest nonzero change 0 ( 0%) - largest zero change 1.4786182e-05
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Coin0511I After Postsolve, objective 86.684309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Coin0511I After Postsolve, objective 86.684309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.68430945 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.25304
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.7137 iterations 19
Cbc0038I Solution found of -11.7137
Cbc0038I Relaxing continuous gives -11.7137
Cbc0038I Rounding solution of -24.6254 is better than previous of -11.7137

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -24.6254 to -32.857 (0.02 seconds)
Cbc0038I Round again with cutoff of -38.2398
Cbc0038I Pass   2: suminf.    0.71149 (2) obj. -38.2398 iterations 3
Cbc0038I Pass   3: suminf.    0.77321 (2) obj. -38.2398 iterations 2
Cbc0038I Pass   4: suminf.    0.10574 (4) obj. -38.2398 iterations 6
Cbc0038I Pass   5: suminf.    0.09112 (2) obj. -38.2398 iterations 4
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -38.2398 iterations 2
Cbc0038I Pass   7: suminf.    0.18722 (1) obj. -38.2398 iterations 1
Cbc0038I Pass   8: suminf.    0.63127 (4) obj. -38.2398 iterations 5
Cbc0038I Pass   9: suminf.    0.57429 (3) obj. -38.2398 iterations 1
Cbc0038I Pass  10: suminf.    0.56662 (2) obj. -38.2398 iterations 10
Cbc0038I Pass  11: suminf.    0.63289 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  12: suminf.    0.56662 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  13: suminf.    2.39120 (8) obj. -38.2398 iterations 11
Cbc0038I Pass  14: suminf.    0.82708 (2) obj. -38.2398 iterations 4
Cbc0038I Pass  15: suminf.    0.79950 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  16: suminf.    0.80072 (4) obj. -38.2398 iterations 7
Cbc0038I Pass  17: suminf.    0.56349 (5) obj. -38.2398 iterations 2
Cbc0038I Pass  18: suminf.    0.98812 (3) obj. -38.2398 iterations 5
Cbc0038I Pass  19: suminf.    0.73005 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  20: suminf.    0.70410 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  21: suminf.    2.60928 (8) obj. -38.2398 iterations 10
Cbc0038I Pass  22: suminf.    0.97034 (3) obj. -38.2398 iterations 6
Cbc0038I Pass  23: suminf.    0.68265 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  24: suminf.    0.84610 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  25: suminf.    3.10739 (10) obj. -38.2398 iterations 12
Cbc0038I Pass  26: suminf.    0.83921 (3) obj. -38.2398 iterations 12
Cbc0038I Pass  27: suminf.    0.79973 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  28: suminf.    0.71497 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  29: suminf.    0.71497 (2) obj. -38.2398 iterations 0
Cbc0038I Pass  30: suminf.    1.69069 (6) obj. -38.2398 iterations 13
Cbc0038I Pass  31: suminf.    0.65827 (4) obj. -38.2398 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 46 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -32.857 to -37.2923 (0.05 seconds)
Cbc0038I Round again with cutoff of -47.9287
Cbc0038I Pass  31: suminf.    0.97137 (2) obj. -47.9287 iterations 0
Cbc0038I Pass  32: suminf.    0.88780 (4) obj. -47.9287 iterations 4
Cbc0038I Pass  33: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  34: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  35: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  36: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  37: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  38: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  39: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  40: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  41: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  42: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  43: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  44: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  45: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  46: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  47: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  48: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  49: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  50: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  51: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  52: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  53: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  54: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  55: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  56: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  57: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  58: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  59: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  60: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -37.2923 - took 0.05 seconds
Cbc0012I Integer solution of -37.292252 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 34 rows 22 columns
Cbc0031I 14 added rows had average density of 31.071429
Cbc0013I At root node, 14 cuts changed objective from -86.684309 to -62.397639 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2610 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 741 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37.292252, took 3208 iterations and 12 nodes (0.33 seconds)
Cbc0032I Strong branching done 196 times (2497 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 4, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-15) rows, 59 (-7) columns and 583 (-140) elements
Clp1000I sum of infeasibilities 5.55012e-08 - average 1.04719e-09, 3 fixed columns
Coin0506I Presolve 51 (-2) rows, 56 (-3) columns and 524 (-59) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 1.353192 - largest nonzero change 0 ( 0%) - largest zero change 2.8797124e-05
Clp0000I Optimal - objective value 105.48454
Clp0000I Optimal - objective value 105.48454
Coin0511I After Postsolve, objective 105.48454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 105.48454
Clp0000I Optimal - objective value 105.48454
Clp0000I Optimal - objective value 105.48454
Coin0511I After Postsolve, objective 105.48454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.484537 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 59 columns (59 integer (59 of which binary)) and 586 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.563%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 5.97066
Cbc0038I Pass   1: suminf.    1.50518 (16) obj. -61.8807 iterations 14
Cbc0038I Pass   2: suminf.    1.50518 (16) obj. -61.8807 iterations 1
Cbc0038I Solution found of -19.5212
Cbc0038I Rounding solution of -24.9222 is better than previous of -19.5212

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.722
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.50518 (16) obj. -61.8807 iterations 0
Cbc0038I Pass   4: suminf.    1.50518 (16) obj. -61.8807 iterations 1
Cbc0038I Pass   5: suminf.    0.82037 (10) obj. -32.722 iterations 21
Cbc0038I Pass   6: suminf.    1.11150 (4) obj. -32.722 iterations 12
Cbc0038I Pass   7: suminf.    0.59214 (2) obj. -46.8474 iterations 4
Cbc0038I Pass   8: suminf.    0.38739 (1) obj. -32.722 iterations 2
Cbc0038I Pass   9: suminf.    0.35750 (1) obj. -33.8363 iterations 1
Cbc0038I Pass  10: suminf.    1.35660 (6) obj. -50.4486 iterations 7
Cbc0038I Pass  11: suminf.    1.35660 (6) obj. -50.4486 iterations 2
Cbc0038I Pass  12: suminf.    1.82857 (13) obj. -36.8142 iterations 12
Cbc0038I Pass  13: suminf.    1.69545 (9) obj. -36.0411 iterations 5
Cbc0038I Pass  14: suminf.    0.24221 (2) obj. -32.722 iterations 11
Cbc0038I Pass  15: suminf.    0.23570 (3) obj. -32.722 iterations 3
Cbc0038I Pass  16: suminf.    0.74209 (3) obj. -32.722 iterations 3
Cbc0038I Pass  17: suminf.    0.98184 (6) obj. -32.722 iterations 12
Cbc0038I Pass  18: suminf.    0.98184 (6) obj. -32.722 iterations 2
Cbc0038I Pass  19: suminf.    0.56967 (2) obj. -32.722 iterations 5
Cbc0038I Pass  20: suminf.    0.52045 (2) obj. -34.3812 iterations 1
Cbc0038I Pass  21: suminf.    0.56967 (2) obj. -32.722 iterations 1
Cbc0038I Pass  22: suminf.    2.07322 (11) obj. -60.8398 iterations 24
Cbc0038I Pass  23: suminf.    2.07322 (11) obj. -60.8398 iterations 2
Cbc0038I Pass  24: suminf.    0.48108 (2) obj. -32.722 iterations 14
Cbc0038I Pass  25: suminf.    0.48108 (2) obj. -32.722 iterations 0
Cbc0038I Pass  26: suminf.    0.31025 (2) obj. -32.722 iterations 3
Cbc0038I Pass  27: suminf.    2.13558 (8) obj. -42.075 iterations 13
Cbc0038I Pass  28: suminf.    0.85358 (6) obj. -32.722 iterations 6
Cbc0038I Pass  29: suminf.    0.74109 (2) obj. -32.722 iterations 6
Cbc0038I Pass  30: suminf.    0.34336 (2) obj. -32.722 iterations 3
Cbc0038I Pass  31: suminf.    1.23227 (6) obj. -32.722 iterations 12
Cbc0038I Pass  32: suminf.    1.23227 (6) obj. -32.722 iterations 1
Cbc0038I Rounding solution of -26.6573 is better than previous of -24.9222

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 24 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -26.6573 to -32.6011 (0.04 seconds)
Cbc0038I Round again with cutoff of -46.7613
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.50518 (16) obj. -61.8807 iterations 0
Cbc0038I Pass  33: suminf.    1.50518 (16) obj. -61.8807 iterations 1
Cbc0038I Pass  34: suminf.    1.47679 (9) obj. -46.7613 iterations 23
Cbc0038I Pass  35: suminf.    1.26155 (9) obj. -46.7613 iterations 2
Cbc0038I Pass  36: suminf.    1.19854 (4) obj. -46.7613 iterations 11
Cbc0038I Pass  37: suminf.    0.86226 (4) obj. -46.7613 iterations 1
Cbc0038I Pass  38: suminf.    0.70200 (3) obj. -46.7734 iterations 2
Cbc0038I Pass  39: suminf.    0.96981 (3) obj. -46.7613 iterations 5
Cbc0038I Pass  40: suminf.    0.42636 (3) obj. -46.7613 iterations 1
Cbc0038I Pass  41: suminf.    0.41556 (3) obj. -46.7613 iterations 1
Cbc0038I Pass  42: suminf.    1.28323 (3) obj. -46.7613 iterations 5
Cbc0038I Pass  43: suminf.    1.04538 (3) obj. -50.8048 iterations 1
Cbc0038I Pass  44: suminf.    0.57436 (4) obj. -46.7613 iterations 4
Cbc0038I Pass  45: suminf.    0.56812 (3) obj. -46.7613 iterations 1
Cbc0038I Pass  46: suminf.    0.72647 (3) obj. -46.7613 iterations 1
Cbc0038I Pass  47: suminf.    0.72647 (3) obj. -46.7613 iterations 0
Cbc0038I Pass  48: suminf.    0.57436 (4) obj. -46.7613 iterations 6
Cbc0038I Pass  49: suminf.    1.54281 (8) obj. -46.7613 iterations 11
Cbc0038I Pass  50: suminf.    0.71049 (4) obj. -46.7613 iterations 7
Cbc0038I Pass  51: suminf.    0.94370 (4) obj. -46.7613 iterations 4
Cbc0038I Pass  52: suminf.    0.94370 (4) obj. -46.7613 iterations 0
Cbc0038I Pass  53: suminf.    0.89967 (4) obj. -46.7613 iterations 1
Cbc0038I Pass  54: suminf.    0.65521 (4) obj. -46.7613 iterations 4
Cbc0038I Pass  55: suminf.    0.94370 (4) obj. -46.7613 iterations 2
Cbc0038I Pass  56: suminf.    2.97029 (10) obj. -46.7613 iterations 14
Cbc0038I Pass  57: suminf.    2.37759 (9) obj. -46.7613 iterations 2
Cbc0038I Pass  58: suminf.    1.78361 (7) obj. -46.7613 iterations 10
Cbc0038I Pass  59: suminf.    1.69613 (6) obj. -46.7613 iterations 2
Cbc0038I Pass  60: suminf.    1.40053 (6) obj. -46.7613 iterations 1
Cbc0038I Pass  61: suminf.    1.40053 (6) obj. -46.7613 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -32.6011 - took 0.04 seconds
Cbc0012I Integer solution of -32.60107 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 53 rows 59 columns, reduced to 19 rows 23 columns
Cbc0031I 28 added rows had average density of 20.75
Cbc0013I At root node, 28 cuts changed objective from -102.91847 to -43.518937 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3015 row cuts average 2.8 elements, 8 column cuts (8 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 610 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 48 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 327 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 214 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.666 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.60107 best solution, best possible -43.518937 (1.50 seconds)
Cbc0012I Integer solution of -37.292252 found by rounding after 1516 iterations and 1 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -37.292252, took 2289 iterations and 6 nodes (2.01 seconds)
Cbc0032I Strong branching done 158 times (2488 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 21 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       2.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 33 (-2) columns and 174 (-21) elements
Clp1000I sum of infeasibilities 4.91259e-06 - average 8.46999e-08, 1 fixed columns
Coin0506I Presolve 56 (-2) rows, 32 (-1) columns and 168 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 3.2465719 - largest nonzero change 0 ( 0%) - largest zero change 1.4786182e-05
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Coin0511I After Postsolve, objective 86.684309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Clp0000I Optimal - objective value 86.684309
Coin0511I After Postsolve, objective 86.684309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.68430945 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.25304
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.7137 iterations 19
Cbc0038I Solution found of -11.7137
Cbc0038I Relaxing continuous gives -11.7137
Cbc0038I Rounding solution of -24.6254 is better than previous of -11.7137

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -24.6254 to -32.857 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.2398
Cbc0038I Pass   2: suminf.    0.71149 (2) obj. -38.2398 iterations 3
Cbc0038I Pass   3: suminf.    0.77321 (2) obj. -38.2398 iterations 2
Cbc0038I Pass   4: suminf.    0.10574 (4) obj. -38.2398 iterations 6
Cbc0038I Pass   5: suminf.    0.09112 (2) obj. -38.2398 iterations 4
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -38.2398 iterations 2
Cbc0038I Pass   7: suminf.    0.18722 (1) obj. -38.2398 iterations 1
Cbc0038I Pass   8: suminf.    0.63127 (4) obj. -38.2398 iterations 5
Cbc0038I Pass   9: suminf.    0.57429 (3) obj. -38.2398 iterations 1
Cbc0038I Pass  10: suminf.    0.56662 (2) obj. -38.2398 iterations 10
Cbc0038I Pass  11: suminf.    0.63289 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  12: suminf.    0.56662 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  13: suminf.    2.39120 (8) obj. -38.2398 iterations 11
Cbc0038I Pass  14: suminf.    0.82708 (2) obj. -38.2398 iterations 4
Cbc0038I Pass  15: suminf.    0.79950 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  16: suminf.    0.80072 (4) obj. -38.2398 iterations 7
Cbc0038I Pass  17: suminf.    0.56349 (5) obj. -38.2398 iterations 2
Cbc0038I Pass  18: suminf.    0.98812 (3) obj. -38.2398 iterations 5
Cbc0038I Pass  19: suminf.    0.73005 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  20: suminf.    0.70410 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  21: suminf.    2.60928 (8) obj. -38.2398 iterations 10
Cbc0038I Pass  22: suminf.    0.97034 (3) obj. -38.2398 iterations 6
Cbc0038I Pass  23: suminf.    0.68265 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  24: suminf.    0.84610 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  25: suminf.    3.10739 (10) obj. -38.2398 iterations 12
Cbc0038I Pass  26: suminf.    0.83921 (3) obj. -38.2398 iterations 12
Cbc0038I Pass  27: suminf.    0.79973 (2) obj. -38.2398 iterations 2
Cbc0038I Pass  28: suminf.    0.71497 (2) obj. -38.2398 iterations 1
Cbc0038I Pass  29: suminf.    0.71497 (2) obj. -38.2398 iterations 0
Cbc0038I Pass  30: suminf.    1.69069 (6) obj. -38.2398 iterations 13
Cbc0038I Pass  31: suminf.    0.65827 (4) obj. -38.2398 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 46 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -32.857 to -37.2923 (0.06 seconds)
Cbc0038I Round again with cutoff of -47.9287
Cbc0038I Pass  31: suminf.    0.97137 (2) obj. -47.9287 iterations 0
Cbc0038I Pass  32: suminf.    0.88780 (4) obj. -47.9287 iterations 4
Cbc0038I Pass  33: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  34: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  35: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  36: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  37: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  38: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  39: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  40: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  41: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  42: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  43: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  44: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  45: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  46: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  47: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  48: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  49: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  50: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  51: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  52: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  53: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  54: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  55: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I Pass  56: suminf.    0.97137 (2) obj. -47.9287 iterations 1
Cbc0038I Pass  57: suminf.    0.88780 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  58: suminf.    1.06065 (4) obj. -47.9287 iterations 3
Cbc0038I Pass  59: suminf.    1.06065 (4) obj. -47.9287 iterations 0
Cbc0038I Pass  60: suminf.    0.97137 (2) obj. -47.9287 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -37.2923 - took 0.06 seconds
Cbc0012I Integer solution of -37.292252 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 58 rows 33 columns, reduced to 34 rows 22 columns
Cbc0031I 14 added rows had average density of 31.071429
Cbc0013I At root node, 14 cuts changed objective from -86.684309 to -62.397639 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2610 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 741 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37.292252, took 3208 iterations and 12 nodes (0.35 seconds)
Cbc0032I Strong branching done 196 times (2497 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 4, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-16) rows, 59 (-8) columns and 583 (-141) elements
Clp1000I sum of infeasibilities 5.55012e-08 - average 1.04719e-09, 3 fixed columns
Coin0506I Presolve 51 (-2) rows, 56 (-3) columns and 524 (-59) elements
Clp0029I End of values pass after 56 iterations
Clp0014I Perturbing problem by 0.001% of 1.353192 - largest nonzero change 0 ( 0%) - largest zero change 2.8797124e-05
Clp0000I Optimal - objective value 105.48454
Clp0000I Optimal - objective value 105.48454
Coin0511I After Postsolve, objective 105.48454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 105.48454
Clp0000I Optimal - objective value 105.48454
Clp0000I Optimal - objective value 105.48454
Coin0511I After Postsolve, objective 105.48454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.484537 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 59 columns (59 integer (59 of which binary)) and 586 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.563%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 5.97066
Cbc0038I Pass   1: suminf.    1.50518 (16) obj. -61.8807 iterations 14
Cbc0038I Pass   2: suminf.    1.50518 (16) obj. -61.8807 iterations 1
Cbc0038I Solution found of -19.5212
Cbc0038I Rounding solution of -24.9222 is better than previous of -19.5212

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.722
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.50518 (16) obj. -61.8807 iterations 0
Cbc0038I Pass   4: suminf.    1.50518 (16) obj. -61.8807 iterations 1
Cbc0038I Pass   5: suminf.    0.82037 (10) obj. -32.722 iterations 21
Cbc0038I Pass   6: suminf.    1.11150 (4) obj. -32.722 iterations 12
Cbc0038I Pass   7: suminf.    0.59214 (2) obj. -46.8474 iterations 4
Cbc0038I Pass   8: suminf.    0.38739 (1) obj. -32.722 iterations 2
Cbc0038I Pass   9: suminf.    0.35750 (1) obj. -33.8363 iterations 1
Cbc0038I Pass  10: suminf.    1.35660 (6) obj. -50.4486 iterations 7
Cbc0038I Pass  11: suminf.    1.35660 (6) obj. -50.4486 iterations 2
Cbc0038I Pass  12: suminf.    1.82857 (13) obj. -36.8142 iterations 12
Cbc0038I Pass  13: suminf.    1.69545 (9) obj. -36.0411 iterations 5
Cbc0038I Pass  14: suminf.    0.24221 (2) obj. -32.722 iterations 11
Cbc0038I Pass  15: suminf.    0.23570 (3) obj. -32.722 iterations 3
Cbc0038I Pass  16: suminf.    0.74209 (3) obj. -32.722 iterations 3
Cbc0038I Pass  17: suminf.    0.98184 (6) obj. -32.722 iterations 12
Cbc0038I Pass  18: suminf.    0.98184 (6) obj. -32.722 iterations 2
Cbc0038I Pass  19: suminf.    0.56967 (2) obj. -32.722 iterations 5
Cbc0038I Pass  20: suminf.    0.52045 (2) obj. -34.3812 iterations 1
Cbc0038I Pass  21: suminf.    0.56967 (2) obj. -32.722 iterations 1
Cbc0038I Pass  22: suminf.    2.07322 (11) obj. -60.8398 iterations 24
Cbc0038I Pass  23: suminf.    2.07322 (11) obj. -60.8398 iterations 2
Cbc0038I Pass  24: suminf.    0.48108 (2) obj. -32.722 iterations 14
Cbc0038I Pass  25: suminf.    0.48108 (2) obj. -32.722 iterations 0
Cbc0038I Pass  26: suminf.    0.31025 (2) obj. -32.722 iterations 3
Cbc0038I Pass  27: suminf.    2.13558 (8) obj. -42.075 iterations 13
Cbc0038I Pass  28: suminf.    0.85358 (6) obj. -32.722 iterations 6
Cbc0038I Pass  29: suminf.    0.74109 (2) obj. -32.722 iterations 6
Cbc0038I Pass  30: suminf.    0.34336 (2) obj. -32.722 iterations 3
Cbc0038I Pass  31: suminf.    1.23227 (6) obj. -32.722 iterations 12
Cbc0038I Pass  32: suminf.    1.23227 (6) obj. -32.722 iterations 1
Cbc0038I Rounding solution of -26.6573 is better than previous of -24.9222

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 24 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -26.6573 to -32.6011 (0.05 seconds)
Cbc0038I Round again with cutoff of -46.7613
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.50518 (16) obj. -61.8807 iterations 0
Cbc0038I Pass  33: suminf.    1.50518 (16) obj. -61.8807 iterations 1
Cbc0038I Pass  34: suminf.    1.47679 (9) obj. -46.7613 iterations 23
Cbc0038I Pass  35: suminf.    1.26155 (9) obj. -46.7613 iterations 2
Cbc0038I Pass  36: suminf.    1.19854 (4) obj. -46.7613 iterations 11
Cbc0038I Pass  37: suminf.    0.86226 (4) obj. -46.7613 iterations 1
Cbc0038I Pass  38: suminf.    0.70200 (3) obj. -46.7734 iterations 2
Cbc0038I Pass  39: suminf.    0.96981 (3) obj. -46.7613 iterations 5
Cbc0038I Pass  40: suminf.    0.42636 (3) obj. -46.7613 iterations 1
Cbc0038I Pass  41: suminf.    0.41556 (3) obj. -46.7613 iterations 1
Cbc0038I Pass  42: suminf.    1.28323 (3) obj. -46.7613 iterations 5
Cbc0038I Pass  43: suminf.    1.04538 (3) obj. -50.8048 iterations 1
Cbc0038I Pass  44: suminf.    0.57436 (4) obj. -46.7613 iterations 4
Cbc0038I Pass  45: suminf.    0.56812 (3) obj. -46.7613 iterations 1
Cbc0038I Pass  46: suminf.    0.72647 (3) obj. -46.7613 iterations 1
Cbc0038I Pass  47: suminf.    0.72647 (3) obj. -46.7613 iterations 0
Cbc0038I Pass  48: suminf.    0.57436 (4) obj. -46.7613 iterations 6
Cbc0038I Pass  49: suminf.    1.54281 (8) obj. -46.7613 iterations 11
Cbc0038I Pass  50: suminf.    0.71049 (4) obj. -46.7613 iterations 7
Cbc0038I Pass  51: suminf.    0.94370 (4) obj. -46.7613 iterations 4
Cbc0038I Pass  52: suminf.    0.94370 (4) obj. -46.7613 iterations 0
Cbc0038I Pass  53: suminf.    0.89967 (4) obj. -46.7613 iterations 1
Cbc0038I Pass  54: suminf.    0.65521 (4) obj. -46.7613 iterations 4
Cbc0038I Pass  55: suminf.    0.94370 (4) obj. -46.7613 iterations 2
Cbc0038I Pass  56: suminf.    2.97029 (10) obj. -46.7613 iterations 14
Cbc0038I Pass  57: suminf.    2.37759 (9) obj. -46.7613 iterations 2
Cbc0038I Pass  58: suminf.    1.78361 (7) obj. -46.7613 iterations 10
Cbc0038I Pass  59: suminf.    1.69613 (6) obj. -46.7613 iterations 2
Cbc0038I Pass  60: suminf.    1.40053 (6) obj. -46.7613 iterations 1
Cbc0038I Pass  61: suminf.    1.40053 (6) obj. -46.7613 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 59 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -32.6011 - took 0.05 seconds
Cbc0012I Integer solution of -32.60107 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 53 rows 59 columns, reduced to 19 rows 23 columns
Cbc0031I 28 added rows had average density of 20.75
Cbc0013I At root node, 28 cuts changed objective from -102.91847 to -43.518937 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3015 row cuts average 2.8 elements, 8 column cuts (8 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 610 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 48 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 327 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 214 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.734 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.60107 best solution, best possible -43.518937 (1.65 seconds)
Cbc0012I Integer solution of -37.292252 found by rounding after 1516 iterations and 1 nodes (1.67 seconds)
Cbc0001I Search completed - best objective -37.292252, took 2289 iterations and 6 nodes (2.23 seconds)
Cbc0032I Strong branching done 158 times (2488 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 21 variables fixed on reduced cost
Total time (CPU seconds):       1.51   (Wallclock seconds):       2.24

