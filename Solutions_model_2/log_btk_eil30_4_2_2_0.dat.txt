Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 29 (-3) columns and 146 (-31) elements
Clp1000I sum of infeasibilities 1.57436e-06 - average 3.27991e-08, 3 fixed columns
Coin0506I Presolve 39 (-9) rows, 26 (-3) columns and 123 (-23) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 74.405742
Clp0000I Optimal - objective value 74.405742
Coin0511I After Postsolve, objective 74.405742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.405742
Clp0000I Optimal - objective value 74.405742
Clp0000I Optimal - objective value 74.405742
Coin0511I After Postsolve, objective 74.405742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.40574245 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 48 rows, 29 columns (28 integer (28 of which binary)) and 146 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.78049
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.5835 iterations 22
Cbc0038I Solution found of -14.5835
Cbc0038I Relaxing continuous gives -14.5835
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -14.5835 to -19.9138 (0.03 seconds)
Cbc0038I Round again with cutoff of -25.3631
Cbc0038I Pass   2: suminf.    0.22241 (2) obj. -25.3631 iterations 2
Cbc0038I Pass   3: suminf.    0.29915 (2) obj. -25.3631 iterations 6
Cbc0038I Pass   4: suminf.    0.67603 (3) obj. -25.3631 iterations 2
Cbc0038I Pass   5: suminf.    0.53222 (2) obj. -25.3631 iterations 4
Cbc0038I Pass   6: suminf.    0.36709 (2) obj. -25.3631 iterations 1
Cbc0038I Pass   7: suminf.    1.12979 (3) obj. -25.3631 iterations 3
Cbc0038I Pass   8: suminf.    0.33175 (3) obj. -25.3631 iterations 3
Cbc0038I Pass   9: suminf.    0.92070 (3) obj. -25.3631 iterations 2
Cbc0038I Pass  10: suminf.    0.89868 (2) obj. -25.3631 iterations 1
Cbc0038I Pass  11: suminf.    3.00970 (8) obj. -25.3631 iterations 7
Cbc0038I Pass  12: suminf.    1.39814 (4) obj. -25.3631 iterations 5
Cbc0038I Pass  13: suminf.    0.91004 (3) obj. -25.3631 iterations 2
Cbc0038I Pass  14: suminf.    0.90490 (3) obj. -25.3631 iterations 1
Cbc0038I Pass  15: suminf.    1.10565 (3) obj. -25.3631 iterations 4
Cbc0038I Pass  16: suminf.    0.85052 (3) obj. -25.3631 iterations 2
Cbc0038I Pass  17: suminf.    0.81194 (3) obj. -25.3631 iterations 1
Cbc0038I Pass  18: suminf.    1.30018 (3) obj. -25.3631 iterations 2
Cbc0038I Pass  19: suminf.    1.66105 (4) obj. -25.3631 iterations 6
Cbc0038I Pass  20: suminf.    1.65908 (4) obj. -25.3631 iterations 1
Cbc0038I Pass  21: suminf.    0.84868 (4) obj. -25.3631 iterations 5
Cbc0038I Pass  22: suminf.    2.54814 (9) obj. -25.3631 iterations 11
Cbc0038I Pass  23: suminf.    1.42097 (6) obj. -25.3631 iterations 7
Cbc0038I Pass  24: suminf.    0.63371 (5) obj. -25.3631 iterations 2
Cbc0038I Pass  25: suminf.    0.38484 (4) obj. -25.3631 iterations 4
Cbc0038I Pass  26: suminf.    1.43030 (5) obj. -25.3631 iterations 7
Cbc0038I Pass  27: suminf.    1.43030 (5) obj. -25.3631 iterations 0
Cbc0038I Pass  28: suminf.    0.53858 (2) obj. -25.3631 iterations 5
Cbc0038I Pass  29: suminf.    0.53858 (2) obj. -25.3631 iterations 0
Cbc0038I Pass  30: suminf.    0.44419 (3) obj. -25.3631 iterations 5
Cbc0038I Pass  31: suminf.    0.43038 (3) obj. -25.3631 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -19.9138 - took 0.07 seconds
Cbc0012I Integer solution of -19.91381 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 48 rows 29 columns, reduced to 36 rows 23 columns
Cbc0031I 12 added rows had average density of 22.5
Cbc0013I At root node, 12 cuts changed objective from -74.405742 to -43.340918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2796 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1164 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 185 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19.91381, took 3057 iterations and 16 nodes (0.26 seconds)
Cbc0032I Strong branching done 124 times (991 iterations), fathomed 0 nodes and fixed 14 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-15) rows, 55 (-5) columns and 506 (-106) elements
Clp1000I sum of infeasibilities 8.00947e-09 - average 1.70414e-10, 11 fixed columns
Coin0506I Presolve 34 (-13) rows, 44 (-11) columns and 322 (-184) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.0199211 - largest nonzero change 0 ( 0%) - largest zero change 2.7431851e-05
Clp0000I Optimal - objective value 72.333017
Clp0000I Optimal - objective value 72.333017
Coin0511I After Postsolve, objective 72.333017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2145652 - largest nonzero change 2.5816127e-05 ( 0.0025816127%) - largest zero change 2.398299e-05
Clp0000I Optimal - objective value 91.369652
Clp0000I Optimal - objective value 91.369652
Clp0000I Optimal - objective value 91.369652
Coin0511I After Postsolve, objective 91.369652, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.36965199 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 55 columns (55 integer (55 of which binary)) and 508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.600%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 5.35176
Cbc0038I Pass   1: suminf.    2.64471 (16) obj. -66.1044 iterations 9
Cbc0038I Pass   2: suminf.    2.64471 (16) obj. -66.1044 iterations 1
Cbc0038I Solution found of -7.62612
Cbc0038I Rounding solution of -11.5712 is better than previous of -7.62612

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -11.5712 to -16.9817 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.5681
Cbc0038I Pass   3: suminf.    2.64471 (16) obj. -66.1044 iterations 0
Cbc0038I Pass   4: suminf.    2.64471 (16) obj. -66.1044 iterations 1
Cbc0038I Pass   5: suminf.    0.76589 (3) obj. -23.5681 iterations 18
Cbc0038I Pass   6: suminf.    0.76589 (3) obj. -23.5681 iterations 0
Cbc0038I Pass   7: suminf.    0.70539 (3) obj. -23.5681 iterations 2
Cbc0038I Pass   8: suminf.    0.70539 (3) obj. -23.5681 iterations 0
Cbc0038I Pass   9: suminf.    0.76589 (3) obj. -23.5681 iterations 1
Cbc0038I Pass  10: suminf.    1.61595 (6) obj. -23.5681 iterations 6
Cbc0038I Pass  11: suminf.    0.76729 (3) obj. -27.6798 iterations 3
Cbc0038I Pass  12: suminf.    0.85432 (3) obj. -23.5681 iterations 4
Cbc0038I Pass  13: suminf.    0.69037 (2) obj. -24.9106 iterations 3
Cbc0038I Pass  14: suminf.    1.71623 (11) obj. -23.5681 iterations 14
Cbc0038I Pass  15: suminf.    1.06985 (5) obj. -23.5681 iterations 2
Cbc0038I Pass  16: suminf.    0.97951 (10) obj. -23.5681 iterations 3
Cbc0038I Pass  17: suminf.    0.97951 (10) obj. -23.5681 iterations 0
Cbc0038I Pass  18: suminf.    1.22045 (5) obj. -23.5681 iterations 6
Cbc0038I Pass  19: suminf.    1.22045 (5) obj. -23.5681 iterations 0
Cbc0038I Pass  20: suminf.    0.88009 (4) obj. -23.5681 iterations 4
Cbc0038I Pass  21: suminf.    0.88009 (4) obj. -23.5681 iterations 0
Cbc0038I Pass  22: suminf.    0.85726 (4) obj. -23.5681 iterations 1
Cbc0038I Pass  23: suminf.    0.85726 (4) obj. -23.5681 iterations 0
Cbc0038I Pass  24: suminf.    1.33060 (7) obj. -23.5681 iterations 11
Cbc0038I Pass  25: suminf.    1.33060 (7) obj. -23.5681 iterations 0
Cbc0038I Pass  26: suminf.    0.65365 (3) obj. -23.5681 iterations 7
Cbc0038I Pass  27: suminf.    0.65365 (3) obj. -23.5681 iterations 0
Cbc0038I Pass  28: suminf.    0.62708 (3) obj. -23.5681 iterations 1
Cbc0038I Pass  29: suminf.    0.62708 (3) obj. -23.5681 iterations 0
Cbc0038I Pass  30: suminf.    0.65365 (3) obj. -23.5681 iterations 1
Cbc0038I Pass  31: suminf.    2.83029 (12) obj. -23.5681 iterations 23
Cbc0038I Pass  32: suminf.    2.83029 (12) obj. -23.5681 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 14 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -16.9817 to -19.6843 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.4235
Cbc0038I Pass  32: suminf.    2.64471 (16) obj. -66.1044 iterations 0
Cbc0038I Pass  33: suminf.    2.64471 (16) obj. -66.1044 iterations 1
Cbc0038I Pass  34: suminf.    1.50954 (9) obj. -35.4235 iterations 21
Cbc0038I Pass  35: suminf.    0.85337 (4) obj. -35.4235 iterations 2
Cbc0038I Pass  36: suminf.    0.80092 (4) obj. -35.4235 iterations 1
Cbc0038I Pass  37: suminf.    0.85337 (4) obj. -35.4235 iterations 2
Cbc0038I Pass  38: suminf.    2.44818 (14) obj. -35.4235 iterations 14
Cbc0038I Pass  39: suminf.    2.31958 (11) obj. -35.4235 iterations 4
Cbc0038I Pass  40: suminf.    1.50550 (6) obj. -35.4235 iterations 12
Cbc0038I Pass  41: suminf.    1.21418 (5) obj. -37.8171 iterations 3
Cbc0038I Pass  42: suminf.    0.89439 (4) obj. -35.4235 iterations 5
Cbc0038I Pass  43: suminf.    0.88743 (4) obj. -35.4235 iterations 2
Cbc0038I Pass  44: suminf.    0.89439 (4) obj. -35.4235 iterations 2
Cbc0038I Pass  45: suminf.    1.48950 (6) obj. -35.4235 iterations 5
Cbc0038I Pass  46: suminf.    1.17378 (5) obj. -36.8534 iterations 2
Cbc0038I Pass  47: suminf.    1.20541 (5) obj. -35.4235 iterations 4
Cbc0038I Pass  48: suminf.    0.99196 (4) obj. -36.0352 iterations 3
Cbc0038I Pass  49: suminf.    2.50516 (12) obj. -35.4235 iterations 13
Cbc0038I Pass  50: suminf.    2.50516 (12) obj. -35.4235 iterations 1
Cbc0038I Pass  51: suminf.    1.58017 (6) obj. -35.4235 iterations 9
Cbc0038I Pass  52: suminf.    1.52550 (6) obj. -35.4235 iterations 1
Cbc0038I Pass  53: suminf.    1.45250 (5) obj. -35.4235 iterations 2
Cbc0038I Pass  54: suminf.    1.45250 (5) obj. -35.4235 iterations 0
Cbc0038I Pass  55: suminf.    1.33929 (5) obj. -35.4235 iterations 1
Cbc0038I Pass  56: suminf.    1.33929 (5) obj. -35.4235 iterations 0
Cbc0038I Pass  57: suminf.    1.45250 (5) obj. -35.4235 iterations 1
Cbc0038I Pass  58: suminf.    2.34980 (9) obj. -35.4235 iterations 9
Cbc0038I Pass  59: suminf.    2.34980 (9) obj. -35.4235 iterations 0
Cbc0038I Pass  60: suminf.    1.41705 (6) obj. -35.4235 iterations 5
Cbc0038I Pass  61: suminf.    1.41705 (6) obj. -35.4235 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 22 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -19.6843 - took 0.02 seconds
Cbc0012I Integer solution of -19.68426 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 55 columns, reduced to 3 rows 4 columns
Cbc0031I 27 added rows had average density of 12.592593
Cbc0013I At root node, 27 cuts changed objective from -82.844829 to -22.757548 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2129 row cuts average 6.8 elements, 7 column cuts (7 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 584 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 135 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 402 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 342 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.701 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.68426 best solution, best possible -22.757548 (1.46 seconds)
Cbc0012I Integer solution of -19.91381 found by DiveCoefficient after 1558 iterations and 3 nodes (1.49 seconds)
Cbc0001I Search completed - best objective -19.91381, took 1612 iterations and 6 nodes (1.49 seconds)
Cbc0032I Strong branching done 78 times (651 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 29 (-3) columns and 146 (-31) elements
Clp1000I sum of infeasibilities 1.57436e-06 - average 3.27991e-08, 3 fixed columns
Coin0506I Presolve 39 (-9) rows, 26 (-3) columns and 123 (-23) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 74.405742
Clp0000I Optimal - objective value 74.405742
Coin0511I After Postsolve, objective 74.405742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.405742
Clp0000I Optimal - objective value 74.405742
Clp0000I Optimal - objective value 74.405742
Coin0511I After Postsolve, objective 74.405742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.40574245 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 48 rows, 29 columns (28 integer (28 of which binary)) and 146 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.78049
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.5835 iterations 22
Cbc0038I Solution found of -14.5835
Cbc0038I Relaxing continuous gives -14.5835
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 36 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -14.5835 to -19.9138 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.3631
Cbc0038I Pass   2: suminf.    0.22241 (2) obj. -25.3631 iterations 2
Cbc0038I Pass   3: suminf.    0.29915 (2) obj. -25.3631 iterations 6
Cbc0038I Pass   4: suminf.    0.67603 (3) obj. -25.3631 iterations 2
Cbc0038I Pass   5: suminf.    0.53222 (2) obj. -25.3631 iterations 4
Cbc0038I Pass   6: suminf.    0.36709 (2) obj. -25.3631 iterations 1
Cbc0038I Pass   7: suminf.    1.12979 (3) obj. -25.3631 iterations 3
Cbc0038I Pass   8: suminf.    0.33175 (3) obj. -25.3631 iterations 3
Cbc0038I Pass   9: suminf.    0.92070 (3) obj. -25.3631 iterations 2
Cbc0038I Pass  10: suminf.    0.89868 (2) obj. -25.3631 iterations 1
Cbc0038I Pass  11: suminf.    3.00970 (8) obj. -25.3631 iterations 7
Cbc0038I Pass  12: suminf.    1.39814 (4) obj. -25.3631 iterations 5
Cbc0038I Pass  13: suminf.    0.91004 (3) obj. -25.3631 iterations 2
Cbc0038I Pass  14: suminf.    0.90490 (3) obj. -25.3631 iterations 1
Cbc0038I Pass  15: suminf.    1.10565 (3) obj. -25.3631 iterations 4
Cbc0038I Pass  16: suminf.    0.85052 (3) obj. -25.3631 iterations 2
Cbc0038I Pass  17: suminf.    0.81194 (3) obj. -25.3631 iterations 1
Cbc0038I Pass  18: suminf.    1.30018 (3) obj. -25.3631 iterations 2
Cbc0038I Pass  19: suminf.    1.66105 (4) obj. -25.3631 iterations 6
Cbc0038I Pass  20: suminf.    1.65908 (4) obj. -25.3631 iterations 1
Cbc0038I Pass  21: suminf.    0.84868 (4) obj. -25.3631 iterations 5
Cbc0038I Pass  22: suminf.    2.54814 (9) obj. -25.3631 iterations 11
Cbc0038I Pass  23: suminf.    1.42097 (6) obj. -25.3631 iterations 7
Cbc0038I Pass  24: suminf.    0.63371 (5) obj. -25.3631 iterations 2
Cbc0038I Pass  25: suminf.    0.38484 (4) obj. -25.3631 iterations 4
Cbc0038I Pass  26: suminf.    1.43030 (5) obj. -25.3631 iterations 7
Cbc0038I Pass  27: suminf.    1.43030 (5) obj. -25.3631 iterations 0
Cbc0038I Pass  28: suminf.    0.53858 (2) obj. -25.3631 iterations 5
Cbc0038I Pass  29: suminf.    0.53858 (2) obj. -25.3631 iterations 0
Cbc0038I Pass  30: suminf.    0.44419 (3) obj. -25.3631 iterations 5
Cbc0038I Pass  31: suminf.    0.43038 (3) obj. -25.3631 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -19.9138 - took 0.07 seconds
Cbc0012I Integer solution of -19.91381 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 48 rows 29 columns, reduced to 36 rows 23 columns
Cbc0031I 12 added rows had average density of 22.5
Cbc0013I At root node, 12 cuts changed objective from -74.405742 to -43.340918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2796 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1164 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 185 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19.91381, took 3057 iterations and 16 nodes (0.38 seconds)
Cbc0032I Strong branching done 124 times (991 iterations), fathomed 0 nodes and fixed 14 variables
Cbc0035I Maximum depth 4, 20 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 55 (-6) columns and 506 (-107) elements
Clp1000I sum of infeasibilities 8.00947e-09 - average 1.70414e-10, 11 fixed columns
Coin0506I Presolve 34 (-13) rows, 44 (-11) columns and 322 (-184) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 1.0199211 - largest nonzero change 0 ( 0%) - largest zero change 2.7431851e-05
Clp0000I Optimal - objective value 72.333017
Clp0000I Optimal - objective value 72.333017
Coin0511I After Postsolve, objective 72.333017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2145652 - largest nonzero change 2.5816127e-05 ( 0.0025816127%) - largest zero change 2.398299e-05
Clp0000I Optimal - objective value 91.369652
Clp0000I Optimal - objective value 91.369652
Clp0000I Optimal - objective value 91.369652
Coin0511I After Postsolve, objective 91.369652, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.36965199 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 55 columns (55 integer (55 of which binary)) and 508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.600%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 5.35176
Cbc0038I Pass   1: suminf.    2.64471 (16) obj. -66.1044 iterations 9
Cbc0038I Pass   2: suminf.    2.64471 (16) obj. -66.1044 iterations 1
Cbc0038I Solution found of -7.62612
Cbc0038I Rounding solution of -11.5712 is better than previous of -7.62612

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -11.5712 to -16.9817 (0.02 seconds)
Cbc0038I Round again with cutoff of -23.5681
Cbc0038I Pass   3: suminf.    2.64471 (16) obj. -66.1044 iterations 0
Cbc0038I Pass   4: suminf.    2.64471 (16) obj. -66.1044 iterations 1
Cbc0038I Pass   5: suminf.    0.76589 (3) obj. -23.5681 iterations 18
Cbc0038I Pass   6: suminf.    0.76589 (3) obj. -23.5681 iterations 0
Cbc0038I Pass   7: suminf.    0.70539 (3) obj. -23.5681 iterations 2
Cbc0038I Pass   8: suminf.    0.70539 (3) obj. -23.5681 iterations 0
Cbc0038I Pass   9: suminf.    0.76589 (3) obj. -23.5681 iterations 1
Cbc0038I Pass  10: suminf.    1.61595 (6) obj. -23.5681 iterations 6
Cbc0038I Pass  11: suminf.    0.76729 (3) obj. -27.6798 iterations 3
Cbc0038I Pass  12: suminf.    0.85432 (3) obj. -23.5681 iterations 4
Cbc0038I Pass  13: suminf.    0.69037 (2) obj. -24.9106 iterations 3
Cbc0038I Pass  14: suminf.    1.71623 (11) obj. -23.5681 iterations 14
Cbc0038I Pass  15: suminf.    1.06985 (5) obj. -23.5681 iterations 2
Cbc0038I Pass  16: suminf.    0.97951 (10) obj. -23.5681 iterations 3
Cbc0038I Pass  17: suminf.    0.97951 (10) obj. -23.5681 iterations 0
Cbc0038I Pass  18: suminf.    1.22045 (5) obj. -23.5681 iterations 6
Cbc0038I Pass  19: suminf.    1.22045 (5) obj. -23.5681 iterations 0
Cbc0038I Pass  20: suminf.    0.88009 (4) obj. -23.5681 iterations 4
Cbc0038I Pass  21: suminf.    0.88009 (4) obj. -23.5681 iterations 0
Cbc0038I Pass  22: suminf.    0.85726 (4) obj. -23.5681 iterations 1
Cbc0038I Pass  23: suminf.    0.85726 (4) obj. -23.5681 iterations 0
Cbc0038I Pass  24: suminf.    1.33060 (7) obj. -23.5681 iterations 11
Cbc0038I Pass  25: suminf.    1.33060 (7) obj. -23.5681 iterations 0
Cbc0038I Pass  26: suminf.    0.65365 (3) obj. -23.5681 iterations 7
Cbc0038I Pass  27: suminf.    0.65365 (3) obj. -23.5681 iterations 0
Cbc0038I Pass  28: suminf.    0.62708 (3) obj. -23.5681 iterations 1
Cbc0038I Pass  29: suminf.    0.62708 (3) obj. -23.5681 iterations 0
Cbc0038I Pass  30: suminf.    0.65365 (3) obj. -23.5681 iterations 1
Cbc0038I Pass  31: suminf.    2.83029 (12) obj. -23.5681 iterations 23
Cbc0038I Pass  32: suminf.    2.83029 (12) obj. -23.5681 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 14 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -16.9817 to -19.6843 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.4235
Cbc0038I Pass  32: suminf.    2.64471 (16) obj. -66.1044 iterations 0
Cbc0038I Pass  33: suminf.    2.64471 (16) obj. -66.1044 iterations 1
Cbc0038I Pass  34: suminf.    1.50954 (9) obj. -35.4235 iterations 21
Cbc0038I Pass  35: suminf.    0.85337 (4) obj. -35.4235 iterations 2
Cbc0038I Pass  36: suminf.    0.80092 (4) obj. -35.4235 iterations 1
Cbc0038I Pass  37: suminf.    0.85337 (4) obj. -35.4235 iterations 2
Cbc0038I Pass  38: suminf.    2.44818 (14) obj. -35.4235 iterations 14
Cbc0038I Pass  39: suminf.    2.31958 (11) obj. -35.4235 iterations 4
Cbc0038I Pass  40: suminf.    1.50550 (6) obj. -35.4235 iterations 12
Cbc0038I Pass  41: suminf.    1.21418 (5) obj. -37.8171 iterations 3
Cbc0038I Pass  42: suminf.    0.89439 (4) obj. -35.4235 iterations 5
Cbc0038I Pass  43: suminf.    0.88743 (4) obj. -35.4235 iterations 2
Cbc0038I Pass  44: suminf.    0.89439 (4) obj. -35.4235 iterations 2
Cbc0038I Pass  45: suminf.    1.48950 (6) obj. -35.4235 iterations 5
Cbc0038I Pass  46: suminf.    1.17378 (5) obj. -36.8534 iterations 2
Cbc0038I Pass  47: suminf.    1.20541 (5) obj. -35.4235 iterations 4
Cbc0038I Pass  48: suminf.    0.99196 (4) obj. -36.0352 iterations 3
Cbc0038I Pass  49: suminf.    2.50516 (12) obj. -35.4235 iterations 13
Cbc0038I Pass  50: suminf.    2.50516 (12) obj. -35.4235 iterations 1
Cbc0038I Pass  51: suminf.    1.58017 (6) obj. -35.4235 iterations 9
Cbc0038I Pass  52: suminf.    1.52550 (6) obj. -35.4235 iterations 1
Cbc0038I Pass  53: suminf.    1.45250 (5) obj. -35.4235 iterations 2
Cbc0038I Pass  54: suminf.    1.45250 (5) obj. -35.4235 iterations 0
Cbc0038I Pass  55: suminf.    1.33929 (5) obj. -35.4235 iterations 1
Cbc0038I Pass  56: suminf.    1.33929 (5) obj. -35.4235 iterations 0
Cbc0038I Pass  57: suminf.    1.45250 (5) obj. -35.4235 iterations 1
Cbc0038I Pass  58: suminf.    2.34980 (9) obj. -35.4235 iterations 9
Cbc0038I Pass  59: suminf.    2.34980 (9) obj. -35.4235 iterations 0
Cbc0038I Pass  60: suminf.    1.41705 (6) obj. -35.4235 iterations 5
Cbc0038I Pass  61: suminf.    1.41705 (6) obj. -35.4235 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 22 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -19.6843 - took 0.02 seconds
Cbc0012I Integer solution of -19.68426 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 47 rows 55 columns, reduced to 3 rows 4 columns
Cbc0031I 27 added rows had average density of 12.592593
Cbc0013I At root node, 27 cuts changed objective from -82.844829 to -22.757548 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2129 row cuts average 6.8 elements, 7 column cuts (7 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 584 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 135 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 402 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 342 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.744 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.68426 best solution, best possible -22.757548 (1.63 seconds)
Cbc0012I Integer solution of -19.91381 found by DiveCoefficient after 1558 iterations and 3 nodes (1.68 seconds)
Cbc0001I Search completed - best objective -19.91381, took 1612 iterations and 6 nodes (1.68 seconds)
Cbc0032I Strong branching done 78 times (651 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.69

