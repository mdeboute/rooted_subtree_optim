Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 2.75568e-07 - average 1.53093e-08, 1 fixed columns
Coin0506I Presolve 16 (-2) rows, 11 (-1) columns and 46 (-6) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Coin0511I After Postsolve, objective 58.654029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Coin0511I After Postsolve, objective 58.654029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.65402882 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 12 columns (11 integer (11 of which binary)) and 52 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.17019
Cbc0038I Pass   1: suminf.    0.23529 (1) obj. -42.9118 iterations 4
Cbc0038I Solution found of -31.25
Cbc0038I Relaxing continuous gives -31.25
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 12 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -31.25 to -33.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.025
Cbc0038I Pass   2: suminf.    0.23529 (1) obj. -42.9118 iterations 0
Cbc0038I Pass   3: suminf.    0.16381 (1) obj. -36.025 iterations 2
Cbc0038I Pass   4: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass   5: suminf.    1.06578 (3) obj. -36.025 iterations 2
Cbc0038I Pass   6: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass   7: suminf.    0.90805 (2) obj. -36.025 iterations 2
Cbc0038I Pass   8: suminf.    0.90805 (2) obj. -36.025 iterations 0
Cbc0038I Pass   9: suminf.    0.61270 (2) obj. -36.025 iterations 2
Cbc0038I Pass  10: suminf.    0.83750 (2) obj. -36.025 iterations 2
Cbc0038I Pass  11: suminf.    1.68432 (4) obj. -36.025 iterations 2
Cbc0038I Pass  12: suminf.    0.74437 (2) obj. -36.025 iterations 3
Cbc0038I Pass  13: suminf.    0.16381 (1) obj. -36.025 iterations 1
Cbc0038I Pass  14: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass  15: suminf.    1.06578 (3) obj. -36.025 iterations 2
Cbc0038I Pass  16: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass  17: suminf.    0.55379 (2) obj. -36.025 iterations 2
Cbc0038I Pass  18: suminf.    0.44781 (2) obj. -36.025 iterations 1
Cbc0038I Pass  19: suminf.    0.55379 (2) obj. -36.025 iterations 4
Cbc0038I Pass  20: suminf.    0.55379 (2) obj. -36.025 iterations 0
Cbc0038I Pass  21: suminf.    1.35874 (3) obj. -36.025 iterations 1
Cbc0038I Pass  22: suminf.    0.07633 (1) obj. -36.025 iterations 3
Cbc0038I Pass  23: suminf.    1.05749 (8) obj. -36.025 iterations 7
Cbc0038I Pass  24: suminf.    1.16140 (3) obj. -36.025 iterations 10
Cbc0038I Pass  25: suminf.    0.61270 (2) obj. -36.025 iterations 3
Cbc0038I Pass  26: suminf.    0.61270 (2) obj. -36.025 iterations 0
Cbc0038I Pass  27: suminf.    0.83750 (2) obj. -36.025 iterations 2
Cbc0038I Pass  28: suminf.    0.91062 (2) obj. -36.025 iterations 2
Cbc0038I Pass  29: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I Pass  30: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I Pass  31: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 12 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -33.8 - took 0.01 seconds
Cbc0012I Integer solution of -33.8 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 12 columns, reduced to 8 rows 6 columns
Cbc0031I 6 added rows had average density of 5.8333333
Cbc0013I At root node, 6 cuts changed objective from -55.722486 to -34.782868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 119 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 235 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.8, took 593 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 10 times (31 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-9) rows, 23 (-3) columns and 121 (-32) elements
Clp1000I sum of infeasibilities 4.95892e-09 - average 2.60996e-10, 15 fixed columns
Coin0506I Presolve 6 (-13) rows, 8 (-15) columns and 22 (-99) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 33.987222
Clp0000I Optimal - objective value 33.987222
Coin0511I After Postsolve, objective 33.987222, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9054632 - largest nonzero change 0 ( 0%) - largest zero change 2.407023e-05
Clp0000I Optimal - objective value 94.647096
Clp0000I Optimal - objective value 94.647096
Clp0000I Optimal - objective value 94.647096
Coin0511I After Postsolve, objective 94.647096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.64709556 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (22 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.394%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.08441
Cbc0038I Pass   1: suminf.    0.47897 (4) obj. -38.296 iterations 2
Cbc0038I Pass   2: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Solution found of -31.25
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 22 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -33.6
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Pass   4: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Pass   5: suminf.    0.15410 (1) obj. -33.6 iterations 5
Cbc0038I Pass   6: suminf.    0.23529 (1) obj. -42.9118 iterations 1
Cbc0038I Pass   7: suminf.    0.77193 (3) obj. -35.8807 iterations 3
Cbc0038I Pass   8: suminf.    0.30870 (6) obj. -33.6 iterations 2
Cbc0038I Pass   9: suminf.    0.49816 (2) obj. -33.6 iterations 7
Cbc0038I Pass  10: suminf.    0.39063 (2) obj. -33.8719 iterations 2
Cbc0038I Pass  11: suminf.    0.40422 (2) obj. -33.6 iterations 2
Cbc0038I Pass  12: suminf.    1.06467 (5) obj. -33.6 iterations 3
Cbc0038I Pass  13: suminf.    0.83814 (6) obj. -33.6 iterations 1
Cbc0038I Pass  14: suminf.    0.68811 (3) obj. -33.6 iterations 5
Cbc0038I Pass  15: suminf.    0.50164 (2) obj. -33.6 iterations 2
Cbc0038I Pass  16: suminf.    0.39063 (2) obj. -33.8719 iterations 2
Cbc0038I Pass  17: suminf.    0.40422 (2) obj. -33.6 iterations 2
Cbc0038I Pass  18: suminf.    0.39907 (2) obj. -33.6 iterations 1
Cbc0038I Pass  19: suminf.    1.32333 (5) obj. -33.6 iterations 5
Cbc0038I Pass  20: suminf.    0.77131 (3) obj. -33.6 iterations 2
Cbc0038I Pass  21: suminf.    0.93603 (3) obj. -33.6 iterations 3
Cbc0038I Pass  22: suminf.    0.87932 (3) obj. -33.6 iterations 1
Cbc0038I Pass  23: suminf.    0.49816 (2) obj. -33.6 iterations 2
Cbc0038I Pass  24: suminf.    0.39063 (2) obj. -33.8719 iterations 2
Cbc0038I Pass  25: suminf.    0.40422 (2) obj. -33.6 iterations 2
Cbc0038I Pass  26: suminf.    0.57669 (4) obj. -33.6 iterations 4
Cbc0038I Pass  27: suminf.    0.57669 (4) obj. -33.6 iterations 0
Cbc0038I Pass  28: suminf.    0.87932 (3) obj. -33.6 iterations 5
Cbc0038I Pass  29: suminf.    0.87932 (3) obj. -33.6 iterations 0
Cbc0038I Pass  30: suminf.    0.49816 (2) obj. -33.6 iterations 2
Cbc0038I Pass  31: suminf.    0.39063 (2) obj. -33.8719 iterations 2
Cbc0038I Pass  32: suminf.    0.40422 (2) obj. -33.6 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 22 columns, reduced to 11 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -31.25 to -33.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -37.975
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Pass  33: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Pass  34: suminf.    0.44098 (1) obj. -37.975 iterations 5
Cbc0038I Pass  35: suminf.    0.23529 (1) obj. -42.9118 iterations 1
Cbc0038I Pass  36: suminf.    0.65196 (3) obj. -42.8333 iterations 3
Cbc0038I Pass  37: suminf.    0.65196 (3) obj. -42.8333 iterations 0
Cbc0038I Pass  38: suminf.    0.29672 (1) obj. -37.975 iterations 3
Cbc0038I Pass  39: suminf.    0.23529 (1) obj. -38.9118 iterations 1
Cbc0038I Pass  40: suminf.    1.03131 (4) obj. -37.975 iterations 3
Cbc0038I Pass  41: suminf.    0.60784 (3) obj. -41.3627 iterations 1
Cbc0038I Pass  42: suminf.    1.76849 (7) obj. -37.975 iterations 8
Cbc0038I Pass  43: suminf.    1.33583 (7) obj. -37.975 iterations 3
Cbc0038I Pass  44: suminf.    0.97222 (4) obj. -37.975 iterations 6
Cbc0038I Pass  45: suminf.    0.97222 (4) obj. -37.975 iterations 0
Cbc0038I Pass  46: suminf.    0.79412 (3) obj. -37.975 iterations 2
Cbc0038I Pass  47: suminf.    0.79412 (3) obj. -37.975 iterations 0
Cbc0038I Pass  48: suminf.    0.78844 (3) obj. -37.975 iterations 1
Cbc0038I Pass  49: suminf.    0.52604 (3) obj. -40.7885 iterations 2
Cbc0038I Pass  50: suminf.    0.87773 (3) obj. -37.975 iterations 2
Cbc0038I Pass  51: suminf.    1.38611 (5) obj. -37.975 iterations 4
Cbc0038I Pass  52: suminf.    1.38611 (5) obj. -37.975 iterations 0
Cbc0038I Pass  53: suminf.    0.79412 (3) obj. -37.975 iterations 4
Cbc0038I Pass  54: suminf.    0.79412 (3) obj. -37.975 iterations 0
Cbc0038I Pass  55: suminf.    0.78844 (3) obj. -37.975 iterations 1
Cbc0038I Pass  56: suminf.    0.52604 (3) obj. -40.7885 iterations 2
Cbc0038I Pass  57: suminf.    0.87773 (3) obj. -37.975 iterations 2
Cbc0038I Pass  58: suminf.    1.84731 (6) obj. -37.975 iterations 5
Cbc0038I Pass  59: suminf.    1.44096 (5) obj. -37.975 iterations 1
Cbc0038I Pass  60: suminf.    1.03088 (5) obj. -37.975 iterations 2
Cbc0038I Pass  61: suminf.    1.13776 (4) obj. -37.975 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 22 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -33.8 - took 0.01 seconds
Cbc0012I Integer solution of -33.8 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 22 columns, reduced to 5 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 4.25
Cbc0013I At root node, 4 cuts changed objective from -54.45922 to -38.511905 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 3.7 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.8, took 10 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 2.75568e-07 - average 1.53093e-08, 1 fixed columns
Coin0506I Presolve 16 (-2) rows, 11 (-1) columns and 46 (-6) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Coin0511I After Postsolve, objective 58.654029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Clp0000I Optimal - objective value 58.654029
Coin0511I After Postsolve, objective 58.654029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.65402882 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 12 columns (11 integer (11 of which binary)) and 52 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.17019
Cbc0038I Pass   1: suminf.    0.23529 (1) obj. -42.9118 iterations 4
Cbc0038I Solution found of -31.25
Cbc0038I Relaxing continuous gives -31.25
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 12 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -31.25 to -33.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.025
Cbc0038I Pass   2: suminf.    0.23529 (1) obj. -42.9118 iterations 0
Cbc0038I Pass   3: suminf.    0.16381 (1) obj. -36.025 iterations 2
Cbc0038I Pass   4: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass   5: suminf.    1.06578 (3) obj. -36.025 iterations 2
Cbc0038I Pass   6: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass   7: suminf.    0.90805 (2) obj. -36.025 iterations 2
Cbc0038I Pass   8: suminf.    0.90805 (2) obj. -36.025 iterations 0
Cbc0038I Pass   9: suminf.    0.61270 (2) obj. -36.025 iterations 2
Cbc0038I Pass  10: suminf.    0.83750 (2) obj. -36.025 iterations 2
Cbc0038I Pass  11: suminf.    1.68432 (4) obj. -36.025 iterations 2
Cbc0038I Pass  12: suminf.    0.74437 (2) obj. -36.025 iterations 3
Cbc0038I Pass  13: suminf.    0.16381 (1) obj. -36.025 iterations 1
Cbc0038I Pass  14: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass  15: suminf.    1.06578 (3) obj. -36.025 iterations 2
Cbc0038I Pass  16: suminf.    0.39639 (1) obj. -36.025 iterations 2
Cbc0038I Pass  17: suminf.    0.55379 (2) obj. -36.025 iterations 2
Cbc0038I Pass  18: suminf.    0.44781 (2) obj. -36.025 iterations 1
Cbc0038I Pass  19: suminf.    0.55379 (2) obj. -36.025 iterations 4
Cbc0038I Pass  20: suminf.    0.55379 (2) obj. -36.025 iterations 0
Cbc0038I Pass  21: suminf.    1.35874 (3) obj. -36.025 iterations 1
Cbc0038I Pass  22: suminf.    0.07633 (1) obj. -36.025 iterations 3
Cbc0038I Pass  23: suminf.    1.05749 (8) obj. -36.025 iterations 7
Cbc0038I Pass  24: suminf.    1.16140 (3) obj. -36.025 iterations 10
Cbc0038I Pass  25: suminf.    0.61270 (2) obj. -36.025 iterations 3
Cbc0038I Pass  26: suminf.    0.61270 (2) obj. -36.025 iterations 0
Cbc0038I Pass  27: suminf.    0.83750 (2) obj. -36.025 iterations 2
Cbc0038I Pass  28: suminf.    0.91062 (2) obj. -36.025 iterations 2
Cbc0038I Pass  29: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I Pass  30: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I Pass  31: suminf.    0.91062 (2) obj. -36.025 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 12 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -33.8 - took 0.01 seconds
Cbc0012I Integer solution of -33.8 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 12 columns, reduced to 8 rows 6 columns
Cbc0031I 6 added rows had average density of 5.8333333
Cbc0013I At root node, 6 cuts changed objective from -55.722486 to -34.782868 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 119 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 235 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.8, took 593 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 10 times (31 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 22 (-5) columns and 107 (-47) elements
Clp1000I sum of infeasibilities 2.21259e-09 - average 1.22922e-10, 13 fixed columns
Coin0506I Presolve 5 (-13) rows, 9 (-13) columns and 22 (-85) elements
Clp0029I End of values pass after 9 iterations
Clp0014I Perturbing problem by 0.001% of 1.2206364 - largest nonzero change 0 ( 0%) - largest zero change 1.8387668e-05
Clp0000I Optimal - objective value 10.588636
Clp0000I Optimal - objective value 10.588636
Coin0511I After Postsolve, objective 10.588636, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9584285 - largest nonzero change 2.3669095e-05 ( 0.0013770154%) - largest zero change 1.6275402e-05
Clp0000I Optimal - objective value 68.590402
Clp0000I Optimal - objective value 68.590402
Clp0000I Optimal - objective value 68.590402
Coin0511I After Postsolve, objective 68.590402, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.59040192 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (22 of which binary)) and 109 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.394%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.08441
Cbc0038I Pass   1: suminf.    0.47897 (4) obj. -38.296 iterations 2
Cbc0038I Pass   2: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Solution found of -31.25
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 22 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -33.6
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Pass   4: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Pass   5: suminf.    0.15410 (1) obj. -33.6 iterations 5
Cbc0038I Pass   6: suminf.    0.23529 (1) obj. -42.9118 iterations 1
Cbc0038I Pass   7: suminf.    0.77193 (3) obj. -35.8807 iterations 3
Cbc0038I Pass   8: suminf.    0.30870 (6) obj. -33.6 iterations 2
Cbc0038I Pass   9: suminf.    0.49816 (2) obj. -33.6 iterations 7
Cbc0038I Pass  10: suminf.    0.39063 (2) obj. -33.8719 iterations 2
Cbc0038I Pass  11: suminf.    0.40422 (2) obj. -33.6 iterations 2
Cbc0038I Pass  12: suminf.    1.06467 (5) obj. -33.6 iterations 3
Cbc0038I Pass  13: suminf.    0.83814 (6) obj. -33.6 iterations 1
Cbc0038I Pass  14: suminf.    0.68811 (3) obj. -33.6 iterations 5
Cbc0038I Pass  15: suminf.    0.50164 (2) obj. -33.6 iterations 2
Cbc0038I Pass  16: suminf.    0.39063 (2) obj. -33.8719 iterations 2
Cbc0038I Pass  17: suminf.    0.40422 (2) obj. -33.6 iterations 2
Cbc0038I Pass  18: suminf.    0.39907 (2) obj. -33.6 iterations 1
Cbc0038I Pass  19: suminf.    1.32333 (5) obj. -33.6 iterations 5
Cbc0038I Pass  20: suminf.    0.77131 (3) obj. -33.6 iterations 2
Cbc0038I Pass  21: suminf.    0.93603 (3) obj. -33.6 iterations 3
Cbc0038I Pass  22: suminf.    0.87932 (3) obj. -33.6 iterations 1
Cbc0038I Pass  23: suminf.    0.49816 (2) obj. -33.6 iterations 2
Cbc0038I Pass  24: suminf.    0.39063 (2) obj. -33.8719 iterations 2
Cbc0038I Pass  25: suminf.    0.40422 (2) obj. -33.6 iterations 2
Cbc0038I Pass  26: suminf.    0.57669 (4) obj. -33.6 iterations 4
Cbc0038I Pass  27: suminf.    0.57669 (4) obj. -33.6 iterations 0
Cbc0038I Pass  28: suminf.    0.87932 (3) obj. -33.6 iterations 5
Cbc0038I Pass  29: suminf.    0.87932 (3) obj. -33.6 iterations 0
Cbc0038I Pass  30: suminf.    0.49816 (2) obj. -33.6 iterations 2
Cbc0038I Pass  31: suminf.    0.39063 (2) obj. -33.8719 iterations 2
Cbc0038I Pass  32: suminf.    0.40422 (2) obj. -33.6 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 22 columns, reduced to 11 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -31.25 to -33.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -37.975
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Pass  33: suminf.    0.47897 (4) obj. -38.296 iterations 0
Cbc0038I Pass  34: suminf.    0.44098 (1) obj. -37.975 iterations 5
Cbc0038I Pass  35: suminf.    0.23529 (1) obj. -42.9118 iterations 1
Cbc0038I Pass  36: suminf.    0.65196 (3) obj. -42.8333 iterations 3
Cbc0038I Pass  37: suminf.    0.65196 (3) obj. -42.8333 iterations 0
Cbc0038I Pass  38: suminf.    0.29672 (1) obj. -37.975 iterations 3
Cbc0038I Pass  39: suminf.    0.23529 (1) obj. -38.9118 iterations 1
Cbc0038I Pass  40: suminf.    1.03131 (4) obj. -37.975 iterations 3
Cbc0038I Pass  41: suminf.    0.60784 (3) obj. -41.3627 iterations 1
Cbc0038I Pass  42: suminf.    1.76849 (7) obj. -37.975 iterations 8
Cbc0038I Pass  43: suminf.    1.33583 (7) obj. -37.975 iterations 2
Cbc0038I Pass  44: suminf.    0.97222 (4) obj. -37.975 iterations 6
Cbc0038I Pass  45: suminf.    0.97222 (4) obj. -37.975 iterations 0
Cbc0038I Pass  46: suminf.    0.79412 (3) obj. -37.975 iterations 2
Cbc0038I Pass  47: suminf.    0.79412 (3) obj. -37.975 iterations 0
Cbc0038I Pass  48: suminf.    0.78844 (3) obj. -37.975 iterations 1
Cbc0038I Pass  49: suminf.    0.52604 (3) obj. -40.7885 iterations 2
Cbc0038I Pass  50: suminf.    0.87773 (3) obj. -37.975 iterations 2
Cbc0038I Pass  51: suminf.    1.38611 (5) obj. -37.975 iterations 4
Cbc0038I Pass  52: suminf.    1.38611 (5) obj. -37.975 iterations 0
Cbc0038I Pass  53: suminf.    0.79412 (3) obj. -37.975 iterations 4
Cbc0038I Pass  54: suminf.    0.79412 (3) obj. -37.975 iterations 0
Cbc0038I Pass  55: suminf.    0.78844 (3) obj. -37.975 iterations 1
Cbc0038I Pass  56: suminf.    0.52604 (3) obj. -40.7885 iterations 2
Cbc0038I Pass  57: suminf.    0.87773 (3) obj. -37.975 iterations 2
Cbc0038I Pass  58: suminf.    1.84731 (6) obj. -37.975 iterations 5
Cbc0038I Pass  59: suminf.    1.44096 (5) obj. -37.975 iterations 1
Cbc0038I Pass  60: suminf.    1.03088 (5) obj. -37.975 iterations 2
Cbc0038I Pass  61: suminf.    1.13776 (4) obj. -37.975 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 22 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -33.8 - took 0.01 seconds
Cbc0012I Integer solution of -33.8 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 22 columns, reduced to 5 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 5.25
Cbc0013I At root node, 4 cuts changed objective from -54.45922 to -38.511905 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 3.7 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.8, took 11 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.05

