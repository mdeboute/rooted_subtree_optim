Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-9) rows, 32 (-3) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 0.00033688 - average 5.61467e-06, 4 fixed columns
Coin0506I Presolve 52 (-8) rows, 28 (-4) columns and 152 (-24) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Coin0511I After Postsolve, objective 67.093277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Coin0511I After Postsolve, objective 67.093277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.09327696 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 32 columns (31 integer (31 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.933%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.96495
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.7526 iterations 15
Cbc0038I Solution found of -18.7526
Cbc0038I Relaxing continuous gives -18.7526
Cbc0038I Rounding solution of -24.0537 is better than previous of -18.7526

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 32 columns, reduced to 20 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28.3577
Cbc0038I Pass   2: suminf.    0.32153 (2) obj. -28.3577 iterations 2
Cbc0038I Pass   3: suminf.    0.75183 (2) obj. -28.3577 iterations 1
Cbc0038I Pass   4: suminf.    0.96009 (6) obj. -28.3577 iterations 8
Cbc0038I Pass   5: suminf.    0.93006 (3) obj. -28.3577 iterations 3
Cbc0038I Pass   6: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass   7: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass   8: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass   9: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  10: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  11: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  12: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  13: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  14: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  15: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  16: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  17: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  18: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  19: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  20: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  21: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  22: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  23: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  24: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  25: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  26: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  27: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  28: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  29: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  30: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  31: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 32 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -24.0537 - took 0.01 seconds
Cbc0012I Integer solution of -24.0537 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 60 rows 32 columns, reduced to 21 rows 16 columns
Cbc0031I 10 added rows had average density of 26.4
Cbc0013I At root node, 10 cuts changed objective from -67.093277 to -47.243855 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2364 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 978 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 50 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.651 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.0537 best solution, best possible -47.243855 (1.32 seconds)
Cbc0012I Integer solution of -25.83258 found by rounding after 3999 iterations and 8 nodes (1.38 seconds)
Cbc0012I Integer solution of -26.82369 found by rounding after 4210 iterations and 19 nodes (1.39 seconds)
Cbc0012I Integer solution of -27.3444 found by rounding after 4244 iterations and 20 nodes (1.39 seconds)
Cbc0012I Integer solution of -27.99662 found by rounding after 4298 iterations and 27 nodes (1.40 seconds)
Cbc0001I Search completed - best objective -27.99661999999999, took 4302 iterations and 28 nodes (1.40 seconds)
Cbc0032I Strong branching done 244 times (2720 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 7, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       1.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-9) rows, 61 (-5) columns and 613 (-110) elements
Clp1000I sum of infeasibilities 2.59347e-08 - average 4.39571e-10, 21 fixed columns
Coin0506I Presolve 41 (-18) rows, 40 (-21) columns and 273 (-340) elements
Clp0006I 0  Obj 66.531423 Dual inf 4.6016316 (39)
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 1.6868497 - largest nonzero change 2.2167667e-05 ( 0.0018562596%) - largest zero change 2.7976165e-05
Clp0000I Optimal - objective value 91.297423
Clp0000I Optimal - objective value 91.297423
Coin0511I After Postsolve, objective 91.297423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 91.297423 Dual inf 5.2201496 (7)
Clp0014I Perturbing problem by 0.001% of 1.6686188 - largest nonzero change 2.2167667e-05 ( 0.0018562596%) - largest zero change 2.7976165e-05
Clp0000I Optimal - objective value 96.88653
Clp0000I Optimal - objective value 96.88653
Clp0000I Optimal - objective value 96.88653
Coin0511I After Postsolve, objective 96.88653, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.88652958 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 61 columns (61 integer (61 of which binary)) and 623 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.464%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.98187
Cbc0038I Pass   1: suminf.    1.01238 (16) obj. -21.0959 iterations 17
Cbc0038I Pass   2: suminf.    1.01238 (16) obj. -21.0959 iterations 2
Cbc0038I Solution found of 22.1812
Cbc0038I Rounding solution of -16.7177 is better than previous of 22.1812

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 61 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -16.7177 to -18.7911 (0.02 seconds)
Cbc0038I Round again with cutoff of -25.5169
Cbc0038I Pass   3: suminf.    1.66085 (19) obj. -25.5169 iterations 7
Cbc0038I Pass   4: suminf.    1.46944 (17) obj. -25.5169 iterations 7
Cbc0038I Pass   5: suminf.    0.96539 (6) obj. -25.5169 iterations 26
Cbc0038I Pass   6: suminf.    0.96539 (6) obj. -25.5169 iterations 0
Cbc0038I Pass   7: suminf.    0.27842 (4) obj. -25.5169 iterations 11
Cbc0038I Pass   8: suminf.    0.54046 (2) obj. -25.5169 iterations 4
Cbc0038I Pass   9: suminf.    0.35238 (2) obj. -29.4708 iterations 2
Cbc0038I Pass  10: suminf.    0.51733 (2) obj. -25.5169 iterations 1
Cbc0038I Pass  11: suminf.    0.51733 (2) obj. -25.5169 iterations 0
Cbc0038I Pass  12: suminf.    2.08575 (9) obj. -25.5169 iterations 9
Cbc0038I Pass  13: suminf.    1.98465 (8) obj. -29.3047 iterations 2
Cbc0038I Pass  14: suminf.    0.63210 (2) obj. -25.5169 iterations 9
Cbc0038I Pass  15: suminf.    0.58622 (2) obj. -26.3779 iterations 1
Cbc0038I Pass  16: suminf.    1.64617 (7) obj. -25.5169 iterations 10
Cbc0038I Pass  17: suminf.    1.63400 (8) obj. -25.5169 iterations 5
Cbc0038I Pass  18: suminf.    0.76140 (3) obj. -25.5169 iterations 6
Cbc0038I Pass  19: suminf.    0.76140 (3) obj. -25.5169 iterations 0
Cbc0038I Pass  20: suminf.    0.77134 (3) obj. -25.5169 iterations 1
Cbc0038I Pass  21: suminf.    2.64865 (10) obj. -25.5169 iterations 17
Cbc0038I Pass  22: suminf.    1.30394 (10) obj. -25.5169 iterations 5
Cbc0038I Pass  23: suminf.    1.30394 (10) obj. -25.5169 iterations 0
Cbc0038I Pass  24: suminf.    0.17228 (2) obj. -25.5169 iterations 11
Cbc0038I Pass  25: suminf.    0.14848 (2) obj. -26.0172 iterations 2
Cbc0038I Pass  26: suminf.    0.17514 (2) obj. -25.5169 iterations 1
Cbc0038I Pass  27: suminf.    3.73347 (14) obj. -25.5169 iterations 28
Cbc0038I Pass  28: suminf.    3.20559 (13) obj. -25.5169 iterations 2
Cbc0038I Pass  29: suminf.    2.59230 (11) obj. -25.5169 iterations 5
Cbc0038I Pass  30: suminf.    2.51518 (11) obj. -25.5169 iterations 1
Cbc0038I Pass  31: suminf.    2.11501 (7) obj. -25.5169 iterations 14
Cbc0038I Pass  32: suminf.    1.13709 (8) obj. -25.5169 iterations 3
Cbc0038I Rounding solution of -23.0502 is better than previous of -18.7911

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 61 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -23.0502 to -25.3999 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.6233
Cbc0038I Pass  32: suminf.    2.50638 (19) obj. -37.6233 iterations 0
Cbc0038I Pass  33: suminf.    2.50638 (19) obj. -37.6233 iterations 2
Cbc0038I Pass  34: suminf.    1.11397 (7) obj. -37.6233 iterations 29
Cbc0038I Pass  35: suminf.    1.05743 (7) obj. -37.6233 iterations 1
Cbc0038I Pass  36: suminf.    0.77006 (3) obj. -37.6233 iterations 7
Cbc0038I Pass  37: suminf.    0.55238 (3) obj. -40.6708 iterations 1
Cbc0038I Pass  38: suminf.    0.77006 (3) obj. -37.6233 iterations 2
Cbc0038I Pass  39: suminf.    1.85090 (7) obj. -37.6233 iterations 15
Cbc0038I Pass  40: suminf.    1.02611 (6) obj. -37.6233 iterations 6
Cbc0038I Pass  41: suminf.    1.11665 (4) obj. -37.6233 iterations 8
Cbc0038I Pass  42: suminf.    1.11665 (4) obj. -37.6233 iterations 0
Cbc0038I Pass  43: suminf.    1.10373 (4) obj. -37.6233 iterations 2
Cbc0038I Pass  44: suminf.    0.76214 (4) obj. -37.6233 iterations 1
Cbc0038I Pass  45: suminf.    1.99014 (10) obj. -37.6233 iterations 11
Cbc0038I Pass  46: suminf.    1.99014 (10) obj. -37.6233 iterations 2
Cbc0038I Pass  47: suminf.    1.36209 (5) obj. -37.6233 iterations 10
Cbc0038I Pass  48: suminf.    1.07792 (5) obj. -37.6233 iterations 2
Cbc0038I Pass  49: suminf.    1.36209 (5) obj. -37.6233 iterations 2
Cbc0038I Pass  50: suminf.    1.82906 (7) obj. -37.6233 iterations 8
Cbc0038I Pass  51: suminf.    1.82906 (7) obj. -37.6233 iterations 3
Cbc0038I Pass  52: suminf.    1.31003 (5) obj. -37.6233 iterations 4
Cbc0038I Pass  53: suminf.    1.31003 (5) obj. -37.6233 iterations 0
Cbc0038I Pass  54: suminf.    1.35082 (5) obj. -37.6233 iterations 2
Cbc0038I Pass  55: suminf.    1.35082 (5) obj. -37.6233 iterations 0
Cbc0038I Pass  56: suminf.    2.15559 (11) obj. -37.6233 iterations 12
Cbc0038I Pass  57: suminf.    1.71474 (7) obj. -37.6233 iterations 7
Cbc0038I Pass  58: suminf.    1.40052 (5) obj. -37.6233 iterations 7
Cbc0038I Pass  59: suminf.    1.18371 (5) obj. -37.6233 iterations 1
Cbc0038I Pass  60: suminf.    1.40052 (5) obj. -37.6233 iterations 2
Cbc0038I Pass  61: suminf.    1.52556 (7) obj. -37.6233 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 61 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -25.3999 - took 0.04 seconds
Cbc0012I Integer solution of -25.39987 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 59 rows 61 columns, reduced to 10 rows 14 columns
Cbc0031I 21 added rows had average density of 11.095238
Cbc0013I At root node, 21 cuts changed objective from -86.048748 to -32.230897 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1240 row cuts average 3.2 elements, 13 column cuts (13 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 693 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 298 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 261 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.646 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -25.39987 best solution, best possible -32.177071 (1.34 seconds)
Cbc0012I Integer solution of -25.83258 found by rounding after 1709 iterations and 5 nodes (1.37 seconds)
Cbc0012I Integer solution of -26.82369 found by DiveCoefficient after 1857 iterations and 9 nodes (1.40 seconds)
Cbc0012I Integer solution of -27.3444 found by DiveCoefficient after 1987 iterations and 11 nodes (1.42 seconds)
Cbc0004I Integer solution of -27.99662 found after 2064 iterations and 13 nodes (1.43 seconds)
Cbc0001I Search completed - best objective -27.99661999999999, took 2169 iterations and 18 nodes (1.44 seconds)
Cbc0032I Strong branching done 140 times (876 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 5, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.44

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-9) rows, 32 (-3) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 0.00033688 - average 5.61467e-06, 4 fixed columns
Coin0506I Presolve 52 (-8) rows, 28 (-4) columns and 152 (-24) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Coin0511I After Postsolve, objective 67.093277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Clp0000I Optimal - objective value 67.093277
Coin0511I After Postsolve, objective 67.093277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.09327696 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 60 rows, 32 columns (31 integer (31 of which binary)) and 178 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.933%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.96495
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.7526 iterations 15
Cbc0038I Solution found of -18.7526
Cbc0038I Relaxing continuous gives -18.7526
Cbc0038I Rounding solution of -24.0537 is better than previous of -18.7526

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 32 columns, reduced to 20 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28.3577
Cbc0038I Pass   2: suminf.    0.32153 (2) obj. -28.3577 iterations 2
Cbc0038I Pass   3: suminf.    0.75183 (2) obj. -28.3577 iterations 1
Cbc0038I Pass   4: suminf.    0.96009 (6) obj. -28.3577 iterations 8
Cbc0038I Pass   5: suminf.    0.93006 (3) obj. -28.3577 iterations 3
Cbc0038I Pass   6: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass   7: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass   8: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass   9: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  10: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  11: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  12: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  13: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  14: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  15: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  16: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  17: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  18: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  19: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  20: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  21: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  22: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  23: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  24: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  25: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  26: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I Pass  27: suminf.    0.54634 (3) obj. -28.3577 iterations 3
Cbc0038I Pass  28: suminf.    0.48478 (2) obj. -28.3577 iterations 2
Cbc0038I Pass  29: suminf.    0.94560 (4) obj. -28.3577 iterations 4
Cbc0038I Pass  30: suminf.    0.93006 (3) obj. -28.3577 iterations 1
Cbc0038I Pass  31: suminf.    1.06148 (3) obj. -28.3577 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 32 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -24.0537 - took 0.01 seconds
Cbc0012I Integer solution of -24.0537 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 60 rows 32 columns, reduced to 21 rows 16 columns
Cbc0031I 10 added rows had average density of 26.4
Cbc0013I At root node, 10 cuts changed objective from -67.093277 to -47.243855 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2364 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 978 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 50 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.0537 best solution, best possible -47.243855 (1.44 seconds)
Cbc0012I Integer solution of -25.83258 found by rounding after 3999 iterations and 8 nodes (1.51 seconds)
Cbc0012I Integer solution of -26.82369 found by rounding after 4210 iterations and 19 nodes (1.52 seconds)
Cbc0012I Integer solution of -27.3444 found by rounding after 4244 iterations and 20 nodes (1.52 seconds)
Cbc0012I Integer solution of -27.99662 found by rounding after 4298 iterations and 27 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -27.99661999999999, took 4302 iterations and 28 nodes (1.53 seconds)
Cbc0032I Strong branching done 244 times (2720 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 7, 44 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 61 (-6) columns and 613 (-111) elements
Clp1000I sum of infeasibilities 2.59347e-08 - average 4.39571e-10, 21 fixed columns
Coin0506I Presolve 41 (-18) rows, 40 (-21) columns and 273 (-340) elements
Clp0006I 0  Obj 66.531423 Dual inf 4.6016316 (39)
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 1.6868497 - largest nonzero change 2.2167667e-05 ( 0.0018562596%) - largest zero change 2.7976165e-05
Clp0000I Optimal - objective value 91.297423
Clp0000I Optimal - objective value 91.297423
Coin0511I After Postsolve, objective 91.297423, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 91.297423 Dual inf 5.2201496 (7)
Clp0014I Perturbing problem by 0.001% of 1.6686188 - largest nonzero change 2.2167667e-05 ( 0.0018562596%) - largest zero change 2.7976165e-05
Clp0000I Optimal - objective value 96.88653
Clp0000I Optimal - objective value 96.88653
Clp0000I Optimal - objective value 96.88653
Coin0511I After Postsolve, objective 96.88653, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.88652958 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 61 columns (61 integer (61 of which binary)) and 623 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.464%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.98187
Cbc0038I Pass   1: suminf.    1.01238 (16) obj. -21.0959 iterations 17
Cbc0038I Pass   2: suminf.    1.01238 (16) obj. -21.0959 iterations 2
Cbc0038I Solution found of 22.1812
Cbc0038I Rounding solution of -16.7177 is better than previous of 22.1812

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 61 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -16.7177 to -18.7911 (0.02 seconds)
Cbc0038I Round again with cutoff of -25.5169
Cbc0038I Pass   3: suminf.    1.66085 (19) obj. -25.5169 iterations 7
Cbc0038I Pass   4: suminf.    1.46944 (17) obj. -25.5169 iterations 7
Cbc0038I Pass   5: suminf.    0.96539 (6) obj. -25.5169 iterations 26
Cbc0038I Pass   6: suminf.    0.96539 (6) obj. -25.5169 iterations 0
Cbc0038I Pass   7: suminf.    0.27842 (4) obj. -25.5169 iterations 11
Cbc0038I Pass   8: suminf.    0.54046 (2) obj. -25.5169 iterations 4
Cbc0038I Pass   9: suminf.    0.35238 (2) obj. -29.4708 iterations 2
Cbc0038I Pass  10: suminf.    0.51733 (2) obj. -25.5169 iterations 1
Cbc0038I Pass  11: suminf.    0.51733 (2) obj. -25.5169 iterations 0
Cbc0038I Pass  12: suminf.    2.08575 (9) obj. -25.5169 iterations 9
Cbc0038I Pass  13: suminf.    1.98465 (8) obj. -29.3047 iterations 2
Cbc0038I Pass  14: suminf.    0.63210 (2) obj. -25.5169 iterations 9
Cbc0038I Pass  15: suminf.    0.58622 (2) obj. -26.3779 iterations 1
Cbc0038I Pass  16: suminf.    1.64617 (7) obj. -25.5169 iterations 10
Cbc0038I Pass  17: suminf.    1.63400 (8) obj. -25.5169 iterations 5
Cbc0038I Pass  18: suminf.    0.76140 (3) obj. -25.5169 iterations 6
Cbc0038I Pass  19: suminf.    0.76140 (3) obj. -25.5169 iterations 0
Cbc0038I Pass  20: suminf.    0.77134 (3) obj. -25.5169 iterations 1
Cbc0038I Pass  21: suminf.    2.64865 (10) obj. -25.5169 iterations 17
Cbc0038I Pass  22: suminf.    1.30394 (10) obj. -25.5169 iterations 5
Cbc0038I Pass  23: suminf.    1.30394 (10) obj. -25.5169 iterations 0
Cbc0038I Pass  24: suminf.    0.17228 (2) obj. -25.5169 iterations 11
Cbc0038I Pass  25: suminf.    0.14848 (2) obj. -26.0172 iterations 2
Cbc0038I Pass  26: suminf.    0.17514 (2) obj. -25.5169 iterations 1
Cbc0038I Pass  27: suminf.    3.73347 (14) obj. -25.5169 iterations 28
Cbc0038I Pass  28: suminf.    3.20559 (13) obj. -25.5169 iterations 2
Cbc0038I Pass  29: suminf.    2.59230 (11) obj. -25.5169 iterations 5
Cbc0038I Pass  30: suminf.    2.51518 (11) obj. -25.5169 iterations 1
Cbc0038I Pass  31: suminf.    2.11501 (7) obj. -25.5169 iterations 14
Cbc0038I Pass  32: suminf.    1.13709 (8) obj. -25.5169 iterations 3
Cbc0038I Rounding solution of -23.0502 is better than previous of -18.7911

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 61 columns, reduced to 34 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -23.0502 to -25.3999 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.6233
Cbc0038I Pass  32: suminf.    2.50638 (19) obj. -37.6233 iterations 0
Cbc0038I Pass  33: suminf.    2.50638 (19) obj. -37.6233 iterations 2
Cbc0038I Pass  34: suminf.    1.11397 (7) obj. -37.6233 iterations 29
Cbc0038I Pass  35: suminf.    1.05743 (7) obj. -37.6233 iterations 1
Cbc0038I Pass  36: suminf.    0.77006 (3) obj. -37.6233 iterations 7
Cbc0038I Pass  37: suminf.    0.55238 (3) obj. -40.6708 iterations 1
Cbc0038I Pass  38: suminf.    0.77006 (3) obj. -37.6233 iterations 2
Cbc0038I Pass  39: suminf.    1.85090 (7) obj. -37.6233 iterations 15
Cbc0038I Pass  40: suminf.    1.02611 (6) obj. -37.6233 iterations 6
Cbc0038I Pass  41: suminf.    1.11665 (4) obj. -37.6233 iterations 8
Cbc0038I Pass  42: suminf.    1.11665 (4) obj. -37.6233 iterations 0
Cbc0038I Pass  43: suminf.    1.10373 (4) obj. -37.6233 iterations 2
Cbc0038I Pass  44: suminf.    0.76214 (4) obj. -37.6233 iterations 1
Cbc0038I Pass  45: suminf.    1.99014 (10) obj. -37.6233 iterations 11
Cbc0038I Pass  46: suminf.    1.99014 (10) obj. -37.6233 iterations 2
Cbc0038I Pass  47: suminf.    1.36209 (5) obj. -37.6233 iterations 10
Cbc0038I Pass  48: suminf.    1.07792 (5) obj. -37.6233 iterations 2
Cbc0038I Pass  49: suminf.    1.36209 (5) obj. -37.6233 iterations 2
Cbc0038I Pass  50: suminf.    1.82906 (7) obj. -37.6233 iterations 8
Cbc0038I Pass  51: suminf.    1.82906 (7) obj. -37.6233 iterations 3
Cbc0038I Pass  52: suminf.    1.31003 (5) obj. -37.6233 iterations 4
Cbc0038I Pass  53: suminf.    1.31003 (5) obj. -37.6233 iterations 0
Cbc0038I Pass  54: suminf.    1.35082 (5) obj. -37.6233 iterations 2
Cbc0038I Pass  55: suminf.    1.35082 (5) obj. -37.6233 iterations 0
Cbc0038I Pass  56: suminf.    2.15559 (11) obj. -37.6233 iterations 12
Cbc0038I Pass  57: suminf.    1.71474 (7) obj. -37.6233 iterations 7
Cbc0038I Pass  58: suminf.    1.40052 (5) obj. -37.6233 iterations 7
Cbc0038I Pass  59: suminf.    1.18371 (5) obj. -37.6233 iterations 1
Cbc0038I Pass  60: suminf.    1.40052 (5) obj. -37.6233 iterations 2
Cbc0038I Pass  61: suminf.    1.52556 (7) obj. -37.6233 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 61 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -25.3999 - took 0.03 seconds
Cbc0012I Integer solution of -25.39987 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 59 rows 61 columns, reduced to 10 rows 14 columns
Cbc0031I 21 added rows had average density of 11.095238
Cbc0013I At root node, 21 cuts changed objective from -86.048748 to -32.230897 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1240 row cuts average 3.2 elements, 13 column cuts (13 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 693 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 298 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 261 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -25.39987 best solution, best possible -32.177071 (1.37 seconds)
Cbc0012I Integer solution of -25.83258 found by rounding after 1709 iterations and 5 nodes (1.40 seconds)
Cbc0012I Integer solution of -26.82369 found by DiveCoefficient after 1857 iterations and 9 nodes (1.43 seconds)
Cbc0012I Integer solution of -27.3444 found by DiveCoefficient after 1987 iterations and 11 nodes (1.45 seconds)
Cbc0004I Integer solution of -27.99662 found after 2064 iterations and 13 nodes (1.46 seconds)
Cbc0001I Search completed - best objective -27.99661999999999, took 2169 iterations and 18 nodes (1.47 seconds)
Cbc0032I Strong branching done 140 times (876 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 5, 47 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.47

