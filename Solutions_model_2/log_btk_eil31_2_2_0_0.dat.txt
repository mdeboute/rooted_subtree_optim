Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-28) rows, 24 (-9) columns and 115 (-68) elements
Clp1000I sum of infeasibilities 5.23876e-05 - average 1.41588e-06, 19 fixed columns
Coin0506I Presolve 3 (-34) rows, 3 (-21) columns and 6 (-109) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 1185.6845
Clp0000I Optimal - objective value 1185.6845
Coin0511I After Postsolve, objective 1185.6845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9332423 - largest nonzero change 1.3608772e-05 ( 0.0009598595%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 1185.6845
Clp0000I Optimal - objective value 1185.6845
Clp0000I Optimal - objective value 1185.6845
Coin0511I After Postsolve, objective 1185.6845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1185.684462 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 37 rows, 24 columns (23 integer (23 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.762%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.59405
Cbc0038I Pass   1: suminf.    0.59405 (2) obj. -1185.68 iterations 2
Cbc0038I Solution found of -471.264
Cbc0038I Relaxing continuous gives -471.264
Cbc0038I Rounding solution of -572.713 is better than previous of -471.264

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -634.01
Cbc0038I Pass   2: suminf.    0.59405 (2) obj. -1185.68 iterations 0
Cbc0038I Pass   3: suminf.    0.29315 (1) obj. -634.01 iterations 3
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass   5: suminf.    0.34248 (4) obj. -634.01 iterations 5
Cbc0038I Pass   6: suminf.    0.16935 (1) obj. -634.01 iterations 3
Cbc0038I Pass   7: suminf.    0.20000 (1) obj. -651.025 iterations 1
Cbc0038I Pass   8: suminf.    0.48889 (1) obj. -793.704 iterations 4
Cbc0038I Pass   9: suminf.    0.48889 (1) obj. -793.704 iterations 2
Cbc0038I Pass  10: suminf.    0.22346 (1) obj. -634.01 iterations 1
Cbc0038I Pass  11: suminf.    0.50208 (2) obj. -634.01 iterations 3
Cbc0038I Pass  12: suminf.    0.17963 (1) obj. -634.01 iterations 2
Cbc0038I Pass  13: suminf.    0.28889 (1) obj. -694.669 iterations 1
Cbc0038I Pass  14: suminf.    0.63719 (4) obj. -718.18 iterations 5
Cbc0038I Pass  15: suminf.    0.11019 (1) obj. -634.01 iterations 5
Cbc0038I Pass  16: suminf.    0.18889 (1) obj. -677.701 iterations 1
Cbc0038I Pass  17: suminf.    0.29451 (2) obj. -634.01 iterations 6
Cbc0038I Pass  18: suminf.    0.13167 (2) obj. -634.01 iterations 2
Cbc0038I Pass  19: suminf.    0.23475 (2) obj. -684.706 iterations 1
Cbc0038I Pass  20: suminf.    0.25322 (2) obj. -691.53 iterations 2
Cbc0038I Pass  21: suminf.    0.13167 (2) obj. -634.01 iterations 2
Cbc0038I Pass  22: suminf.    0.21382 (2) obj. -674.413 iterations 1
Cbc0038I Pass  23: suminf.    0.54265 (3) obj. -634.01 iterations 5
Cbc0038I Pass  24: suminf.    0.12249 (1) obj. -634.01 iterations 3
Cbc0038I Pass  25: suminf.    0.15556 (1) obj. -652.366 iterations 1
Cbc0038I Pass  26: suminf.    0.20000 (1) obj. -671.471 iterations 6
Cbc0038I Pass  27: suminf.    0.11775 (1) obj. -634.01 iterations 4
Cbc0038I Pass  28: suminf.    0.17778 (1) obj. -667.336 iterations 1
Cbc0038I Pass  29: suminf.    0.43333 (1) obj. -779.172 iterations 4
Cbc0038I Pass  30: suminf.    0.17186 (1) obj. -634.01 iterations 2
Cbc0038I Pass  31: suminf.    0.43333 (1) obj. -779.172 iterations 1
Cbc0038I Rounding solution of -574.659 is better than previous of -572.713

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 24 columns, reduced to 6 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -574.659 to -578.54 (0.01 seconds)
Cbc0038I Round again with cutoff of -744.345
Cbc0038I Pass  31: suminf.    0.59405 (2) obj. -1185.68 iterations 0
Cbc0038I Pass  32: suminf.    0.49189 (1) obj. -744.345 iterations 3
Cbc0038I Pass  33: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass  34: suminf.    0.85573 (6) obj. -744.345 iterations 11
Cbc0038I Pass  35: suminf.    0.38743 (2) obj. -744.345 iterations 5
Cbc0038I Pass  36: suminf.    0.43750 (1) obj. -759.232 iterations 2
Cbc0038I Pass  37: suminf.    0.70945 (3) obj. -744.345 iterations 13
Cbc0038I Pass  38: suminf.    0.70945 (3) obj. -744.345 iterations 1
Cbc0038I Pass  39: suminf.    0.56491 (3) obj. -744.345 iterations 2
Cbc0038I Pass  40: suminf.    0.49234 (4) obj. -744.345 iterations 1
Cbc0038I Pass  41: suminf.    0.52932 (3) obj. -919.702 iterations 4
Cbc0038I Pass  42: suminf.    0.49383 (2) obj. -906.98 iterations 1
Cbc0038I Pass  43: suminf.    0.44004 (1) obj. -744.345 iterations 4
Cbc0038I Pass  44: suminf.    0.44444 (1) obj. -808.477 iterations 1
Cbc0038I Pass  45: suminf.    1.10048 (3) obj. -744.345 iterations 4
Cbc0038I Pass  46: suminf.    0.37778 (1) obj. -841.033 iterations 7
Cbc0038I Pass  47: suminf.    0.44806 (1) obj. -744.345 iterations 1
Cbc0038I Pass  48: suminf.    1.54250 (4) obj. -744.345 iterations 8
Cbc0038I Pass  49: suminf.    0.68807 (3) obj. -744.345 iterations 3
Cbc0038I Pass  50: suminf.    0.67782 (2) obj. -848.638 iterations 1
Cbc0038I Pass  51: suminf.    0.44153 (2) obj. -744.345 iterations 2
Cbc0038I Pass  52: suminf.    0.47003 (2) obj. -758.358 iterations 1
Cbc0038I Pass  53: suminf.    0.85629 (3) obj. -744.345 iterations 5
Cbc0038I Pass  54: suminf.    0.43450 (1) obj. -744.345 iterations 5
Cbc0038I Pass  55: suminf.    0.46667 (1) obj. -762.201 iterations 1
Cbc0038I Pass  56: suminf.    0.43450 (1) obj. -744.345 iterations 1
Cbc0038I Pass  57: suminf.    0.46667 (1) obj. -762.201 iterations 1
Cbc0038I Pass  58: suminf.    1.94524 (4) obj. -744.345 iterations 11
Cbc0038I Pass  59: suminf.    0.45764 (3) obj. -744.345 iterations 4
Cbc0038I Pass  60: suminf.    0.46079 (2) obj. -745.714 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 24 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -578.54 - took 0.05 seconds
Cbc0012I Integer solution of -578.5403 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 7 added rows had average density of 13.714286
Cbc0013I At root node, 7 cuts changed objective from -1185.6845 to -592.00396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 121 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 288 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -582.1066 found by DiveCoefficient after 902 iterations and 1 nodes (0.10 seconds)
Cbc0012I Integer solution of -588.6234 found by rounding after 948 iterations and 3 nodes (0.11 seconds)
Cbc0001I Search completed - best objective -588.6233999999999, took 978 iterations and 6 nodes (0.11 seconds)
Cbc0032I Strong branching done 48 times (191 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-24) rows, 49 (-13) columns and 436 (-210) elements
Clp1000I sum of infeasibilities 0 - average 0, 28 fixed columns
Coin0506I Presolve 2 (-37) rows, 2 (-47) columns and 4 (-432) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 1219.7108
Clp0000I Optimal - objective value 1219.7108
Coin0511I After Postsolve, objective 1219.7108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1970808 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 1219.7108
Clp0000I Optimal - objective value 1219.7108
Clp0000I Optimal - objective value 1219.7108
Coin0511I After Postsolve, objective 1219.7108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1219.710763 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 44 columns (44 integer (44 of which binary)) and 347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.376%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.73744
Cbc0038I Pass   1: suminf.    0.26250 (2) obj. -954.087 iterations 14
Cbc0038I Pass   2: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Solution found of -471.264
Cbc0038I Rounding solution of -572.713 is better than previous of -471.264

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -634.281
Cbc0038I Pass   3: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass   4: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass   5: suminf.    0.29364 (1) obj. -634.281 iterations 3
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass   7: suminf.    0.62877 (3) obj. -634.281 iterations 6
Cbc0038I Pass   8: suminf.    0.46454 (2) obj. -634.281 iterations 1
Cbc0038I Pass   9: suminf.    0.31111 (1) obj. -707.006 iterations 2
Cbc0038I Pass  10: suminf.    0.18011 (1) obj. -634.281 iterations 1
Cbc0038I Pass  11: suminf.    2.63526 (9) obj. -634.281 iterations 13
Cbc0038I Pass  12: suminf.    1.87795 (7) obj. -634.281 iterations 4
Cbc0038I Pass  13: suminf.    0.37778 (1) obj. -836.033 iterations 7
Cbc0038I Pass  14: suminf.    0.25881 (1) obj. -634.281 iterations 1
Cbc0038I Pass  15: suminf.    1.28057 (5) obj. -634.281 iterations 4
Cbc0038I Pass  16: suminf.    1.28057 (5) obj. -634.281 iterations 0
Cbc0038I Pass  17: suminf.    2.53968 (9) obj. -634.281 iterations 7
Cbc0038I Pass  18: suminf.    1.72734 (8) obj. -634.281 iterations 3
Cbc0038I Pass  19: suminf.    0.20000 (1) obj. -897.925 iterations 10
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -897.925 iterations 0
Cbc0038I Pass  21: suminf.    0.26602 (1) obj. -634.281 iterations 2
Cbc0038I Pass  22: suminf.    0.37778 (1) obj. -832.033 iterations 1
Cbc0038I Pass  23: suminf.    2.52720 (9) obj. -634.281 iterations 13
Cbc0038I Pass  24: suminf.    1.72746 (7) obj. -634.281 iterations 5
Cbc0038I Pass  25: suminf.    0.37778 (1) obj. -834.033 iterations 7
Cbc0038I Pass  26: suminf.    0.26241 (1) obj. -634.281 iterations 1
Cbc0038I Pass  27: suminf.    2.83645 (8) obj. -634.281 iterations 15
Cbc0038I Pass  28: suminf.    0.90008 (4) obj. -634.281 iterations 6
Cbc0038I Pass  29: suminf.    0.26271 (2) obj. -634.281 iterations 3
Cbc0038I Pass  30: suminf.    0.25528 (2) obj. -634.281 iterations 1
Cbc0038I Pass  31: suminf.    0.52274 (2) obj. -800.126 iterations 1
Cbc0038I Pass  32: suminf.    0.41053 (1) obj. -795.329 iterations 1
Cbc0038I Rounding solution of -574.659 is better than previous of -572.713

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 44 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -745.104
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass  33: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass  34: suminf.    0.49326 (1) obj. -745.104 iterations 3
Cbc0038I Pass  35: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass  36: suminf.    1.30671 (4) obj. -745.104 iterations 8
Cbc0038I Pass  37: suminf.    1.26308 (8) obj. -745.104 iterations 2
Cbc0038I Pass  38: suminf.    0.42130 (3) obj. -1061.49 iterations 13
Cbc0038I Pass  39: suminf.    0.14815 (2) obj. -963.583 iterations 1
Cbc0038I Pass  40: suminf.    0.49233 (1) obj. -745.104 iterations 3
Cbc0038I Pass  41: suminf.    0.16667 (1) obj. -925.899 iterations 1
Cbc0038I Pass  42: suminf.    1.55892 (5) obj. -745.104 iterations 8
Cbc0038I Pass  43: suminf.    0.87775 (3) obj. -745.104 iterations 4
Cbc0038I Pass  44: suminf.    0.40000 (1) obj. -818.696 iterations 3
Cbc0038I Pass  45: suminf.    0.46744 (1) obj. -745.104 iterations 1
Cbc0038I Pass  46: suminf.    2.16867 (7) obj. -745.104 iterations 9
Cbc0038I Pass  47: suminf.    1.68404 (6) obj. -745.104 iterations 4
Cbc0038I Pass  48: suminf.    0.26250 (1) obj. -866.612 iterations 6
Cbc0038I Pass  49: suminf.    0.26250 (1) obj. -866.612 iterations 0
Cbc0038I Pass  50: suminf.    0.46831 (2) obj. -745.104 iterations 2
Cbc0038I Pass  51: suminf.    0.72788 (3) obj. -745.104 iterations 5
Cbc0038I Pass  52: suminf.    0.72788 (3) obj. -745.104 iterations 0
Cbc0038I Pass  53: suminf.    0.12500 (1) obj. -917.974 iterations 5
Cbc0038I Pass  54: suminf.    0.12500 (1) obj. -917.974 iterations 0
Cbc0038I Pass  55: suminf.    0.49898 (1) obj. -745.104 iterations 2
Cbc0038I Pass  56: suminf.    0.30000 (1) obj. -856.7 iterations 1
Cbc0038I Pass  57: suminf.    1.87521 (4) obj. -745.104 iterations 9
Cbc0038I Pass  58: suminf.    0.91378 (2) obj. -745.104 iterations 6
Cbc0038I Pass  59: suminf.    0.34444 (1) obj. -832.481 iterations 2
Cbc0038I Pass  60: suminf.    0.49816 (1) obj. -745.104 iterations 1
Cbc0038I Pass  61: suminf.    2.01609 (5) obj. -745.104 iterations 7
Cbc0038I Rounding solution of -588.623 is better than previous of -574.659

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 44 columns, reduced to 26 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -878.091
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass  62: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass  63: suminf.    0.26719 (1) obj. -878.091 iterations 3
Cbc0038I Pass  64: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass  65: suminf.    0.70490 (4) obj. -878.091 iterations 5
Cbc0038I Pass  66: suminf.    0.41667 (2) obj. -931.649 iterations 2
Cbc0038I Pass  67: suminf.    0.26179 (1) obj. -878.091 iterations 2
Cbc0038I Pass  68: suminf.    0.16667 (1) obj. -930.899 iterations 1
Cbc0038I Pass  69: suminf.    1.46742 (4) obj. -878.091 iterations 9
Cbc0038I Pass  70: suminf.    1.03594 (3) obj. -878.091 iterations 3
Cbc0038I Pass  71: suminf.    0.23750 (1) obj. -889.099 iterations 3
Cbc0038I Pass  72: suminf.    0.23750 (1) obj. -889.099 iterations 0
Cbc0038I Pass  73: suminf.    0.70397 (2) obj. -878.091 iterations 2
Cbc0038I Pass  74: suminf.    2.47981 (8) obj. -878.091 iterations 14
Cbc0038I Pass  75: suminf.    1.77652 (8) obj. -878.091 iterations 3
Cbc0038I Pass  76: suminf.    0.29047 (2) obj. -878.091 iterations 6
Cbc0038I Pass  77: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass  78: suminf.    0.26719 (1) obj. -878.091 iterations 1
Cbc0038I Pass  79: suminf.    1.02637 (5) obj. -878.091 iterations 7
Cbc0038I Pass  80: suminf.    1.02637 (5) obj. -878.091 iterations 2
Cbc0038I Pass  81: suminf.    2.13118 (7) obj. -878.091 iterations 4
Cbc0038I Pass  82: suminf.    2.13118 (7) obj. -878.091 iterations 0
Cbc0038I Pass  83: suminf.    0.29263 (2) obj. -878.091 iterations 5
Cbc0038I Pass  84: suminf.    0.20000 (1) obj. -919.849 iterations 2
Cbc0038I Pass  85: suminf.    0.27522 (1) obj. -878.091 iterations 1
Cbc0038I Pass  86: suminf.    2.32686 (7) obj. -878.091 iterations 10
Cbc0038I Pass  87: suminf.    2.08422 (6) obj. -878.091 iterations 4
Cbc0038I Pass  88: suminf.    0.26539 (1) obj. -878.091 iterations 5
Cbc0038I Pass  89: suminf.    0.16667 (1) obj. -932.899 iterations 1
Cbc0038I Pass  90: suminf.    1.97156 (6) obj. -878.091 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 44 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -588.623 - took 0.02 seconds
Cbc0012I Integer solution of -588.6234 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 44 columns, reduced to 20 rows 23 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 12 added rows had average density of 3.3333333
Cbc0013I At root node, 12 cuts changed objective from -1188.3942 to -604.69338 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 4.3 elements, 24 column cuts (24 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -588.6233999999999, took 47 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-28) rows, 24 (-9) columns and 115 (-68) elements
Clp1000I sum of infeasibilities 5.23876e-05 - average 1.41588e-06, 19 fixed columns
Coin0506I Presolve 3 (-34) rows, 3 (-21) columns and 6 (-109) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 1185.6845
Clp0000I Optimal - objective value 1185.6845
Coin0511I After Postsolve, objective 1185.6845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9332423 - largest nonzero change 1.3608772e-05 ( 0.0009598595%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 1185.6845
Clp0000I Optimal - objective value 1185.6845
Clp0000I Optimal - objective value 1185.6845
Coin0511I After Postsolve, objective 1185.6845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1185.684462 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 37 rows, 24 columns (23 integer (23 of which binary)) and 115 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.762%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.59405
Cbc0038I Pass   1: suminf.    0.59405 (2) obj. -1185.68 iterations 2
Cbc0038I Solution found of -471.264
Cbc0038I Relaxing continuous gives -471.264
Cbc0038I Rounding solution of -572.713 is better than previous of -471.264

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -634.01
Cbc0038I Pass   2: suminf.    0.59405 (2) obj. -1185.68 iterations 0
Cbc0038I Pass   3: suminf.    0.29315 (1) obj. -634.01 iterations 3
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass   5: suminf.    0.34248 (4) obj. -634.01 iterations 5
Cbc0038I Pass   6: suminf.    0.16935 (1) obj. -634.01 iterations 3
Cbc0038I Pass   7: suminf.    0.20000 (1) obj. -651.025 iterations 1
Cbc0038I Pass   8: suminf.    0.48889 (1) obj. -793.704 iterations 4
Cbc0038I Pass   9: suminf.    0.48889 (1) obj. -793.704 iterations 2
Cbc0038I Pass  10: suminf.    0.22346 (1) obj. -634.01 iterations 1
Cbc0038I Pass  11: suminf.    0.50208 (2) obj. -634.01 iterations 3
Cbc0038I Pass  12: suminf.    0.17963 (1) obj. -634.01 iterations 2
Cbc0038I Pass  13: suminf.    0.28889 (1) obj. -694.669 iterations 1
Cbc0038I Pass  14: suminf.    0.63719 (4) obj. -718.18 iterations 5
Cbc0038I Pass  15: suminf.    0.11019 (1) obj. -634.01 iterations 5
Cbc0038I Pass  16: suminf.    0.18889 (1) obj. -677.701 iterations 1
Cbc0038I Pass  17: suminf.    0.29451 (2) obj. -634.01 iterations 6
Cbc0038I Pass  18: suminf.    0.13167 (2) obj. -634.01 iterations 2
Cbc0038I Pass  19: suminf.    0.23475 (2) obj. -684.706 iterations 1
Cbc0038I Pass  20: suminf.    0.25322 (2) obj. -691.53 iterations 2
Cbc0038I Pass  21: suminf.    0.13167 (2) obj. -634.01 iterations 2
Cbc0038I Pass  22: suminf.    0.21382 (2) obj. -674.413 iterations 1
Cbc0038I Pass  23: suminf.    0.54265 (3) obj. -634.01 iterations 5
Cbc0038I Pass  24: suminf.    0.12249 (1) obj. -634.01 iterations 3
Cbc0038I Pass  25: suminf.    0.15556 (1) obj. -652.366 iterations 1
Cbc0038I Pass  26: suminf.    0.20000 (1) obj. -671.471 iterations 6
Cbc0038I Pass  27: suminf.    0.11775 (1) obj. -634.01 iterations 4
Cbc0038I Pass  28: suminf.    0.17778 (1) obj. -667.336 iterations 1
Cbc0038I Pass  29: suminf.    0.43333 (1) obj. -779.172 iterations 4
Cbc0038I Pass  30: suminf.    0.17186 (1) obj. -634.01 iterations 2
Cbc0038I Pass  31: suminf.    0.43333 (1) obj. -779.172 iterations 1
Cbc0038I Rounding solution of -574.659 is better than previous of -572.713

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 24 columns, reduced to 6 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -574.659 to -578.54 (0.01 seconds)
Cbc0038I Round again with cutoff of -744.345
Cbc0038I Pass  31: suminf.    0.59405 (2) obj. -1185.68 iterations 0
Cbc0038I Pass  32: suminf.    0.49189 (1) obj. -744.345 iterations 3
Cbc0038I Pass  33: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass  34: suminf.    0.85573 (6) obj. -744.345 iterations 11
Cbc0038I Pass  35: suminf.    0.38743 (2) obj. -744.345 iterations 5
Cbc0038I Pass  36: suminf.    0.43750 (1) obj. -759.232 iterations 2
Cbc0038I Pass  37: suminf.    0.70945 (3) obj. -744.345 iterations 13
Cbc0038I Pass  38: suminf.    0.70945 (3) obj. -744.345 iterations 1
Cbc0038I Pass  39: suminf.    0.56491 (3) obj. -744.345 iterations 2
Cbc0038I Pass  40: suminf.    0.49234 (4) obj. -744.345 iterations 1
Cbc0038I Pass  41: suminf.    0.52932 (3) obj. -919.702 iterations 4
Cbc0038I Pass  42: suminf.    0.49383 (2) obj. -906.98 iterations 1
Cbc0038I Pass  43: suminf.    0.44004 (1) obj. -744.345 iterations 4
Cbc0038I Pass  44: suminf.    0.44444 (1) obj. -808.477 iterations 1
Cbc0038I Pass  45: suminf.    1.10048 (3) obj. -744.345 iterations 4
Cbc0038I Pass  46: suminf.    0.37778 (1) obj. -841.033 iterations 7
Cbc0038I Pass  47: suminf.    0.44806 (1) obj. -744.345 iterations 1
Cbc0038I Pass  48: suminf.    1.54250 (4) obj. -744.345 iterations 8
Cbc0038I Pass  49: suminf.    0.68807 (3) obj. -744.345 iterations 3
Cbc0038I Pass  50: suminf.    0.67782 (2) obj. -848.638 iterations 1
Cbc0038I Pass  51: suminf.    0.44153 (2) obj. -744.345 iterations 2
Cbc0038I Pass  52: suminf.    0.47003 (2) obj. -758.358 iterations 1
Cbc0038I Pass  53: suminf.    0.85629 (3) obj. -744.345 iterations 5
Cbc0038I Pass  54: suminf.    0.43450 (1) obj. -744.345 iterations 5
Cbc0038I Pass  55: suminf.    0.46667 (1) obj. -762.201 iterations 1
Cbc0038I Pass  56: suminf.    0.43450 (1) obj. -744.345 iterations 1
Cbc0038I Pass  57: suminf.    0.46667 (1) obj. -762.201 iterations 1
Cbc0038I Pass  58: suminf.    1.94524 (4) obj. -744.345 iterations 11
Cbc0038I Pass  59: suminf.    0.45764 (3) obj. -744.345 iterations 4
Cbc0038I Pass  60: suminf.    0.46079 (2) obj. -745.714 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 24 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -578.54 - took 0.02 seconds
Cbc0012I Integer solution of -578.5403 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 7 added rows had average density of 13.714286
Cbc0013I At root node, 7 cuts changed objective from -1185.6845 to -592.00396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 121 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 288 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -582.1066 found by DiveCoefficient after 902 iterations and 1 nodes (0.10 seconds)
Cbc0012I Integer solution of -588.6234 found by rounding after 948 iterations and 3 nodes (0.10 seconds)
Cbc0001I Search completed - best objective -588.6233999999999, took 978 iterations and 6 nodes (0.10 seconds)
Cbc0032I Strong branching done 48 times (191 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-31) rows, 43 (-20) columns and 338 (-311) elements
Clp1000I sum of infeasibilities 2.73953e-09 - average 8.05743e-11, 41 fixed columns
Coin0506I Presolve 2 (-32) rows, 2 (-41) columns and 4 (-334) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 1176.4205
Clp0000I Optimal - objective value 1176.4205
Coin0511I After Postsolve, objective 1176.4205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.14810129 - largest nonzero change 0 ( 0%) - largest zero change 2.6227412e-05
Clp0000I Optimal - objective value 1219.7108
Clp0000I Optimal - objective value 1219.7108
Clp0000I Optimal - objective value 1219.7108
Coin0511I After Postsolve, objective 1219.7108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1219.710763 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 44 columns (44 integer (44 of which binary)) and 347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.376%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.73744
Cbc0038I Pass   1: suminf.    0.26250 (2) obj. -954.087 iterations 14
Cbc0038I Pass   2: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Solution found of -471.264
Cbc0038I Rounding solution of -572.713 is better than previous of -471.264

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -634.281
Cbc0038I Pass   3: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass   4: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass   5: suminf.    0.29364 (1) obj. -634.281 iterations 3
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass   7: suminf.    0.62877 (3) obj. -634.281 iterations 6
Cbc0038I Pass   8: suminf.    0.46454 (2) obj. -634.281 iterations 1
Cbc0038I Pass   9: suminf.    0.31111 (1) obj. -707.006 iterations 2
Cbc0038I Pass  10: suminf.    0.18011 (1) obj. -634.281 iterations 1
Cbc0038I Pass  11: suminf.    2.63526 (9) obj. -634.281 iterations 13
Cbc0038I Pass  12: suminf.    1.87795 (7) obj. -634.281 iterations 4
Cbc0038I Pass  13: suminf.    0.37778 (1) obj. -836.033 iterations 7
Cbc0038I Pass  14: suminf.    0.25881 (1) obj. -634.281 iterations 1
Cbc0038I Pass  15: suminf.    1.28057 (5) obj. -634.281 iterations 4
Cbc0038I Pass  16: suminf.    1.28057 (5) obj. -634.281 iterations 0
Cbc0038I Pass  17: suminf.    2.53968 (9) obj. -634.281 iterations 7
Cbc0038I Pass  18: suminf.    1.72734 (8) obj. -634.281 iterations 3
Cbc0038I Pass  19: suminf.    0.20000 (1) obj. -897.925 iterations 10
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -897.925 iterations 0
Cbc0038I Pass  21: suminf.    0.26602 (1) obj. -634.281 iterations 2
Cbc0038I Pass  22: suminf.    0.37778 (1) obj. -832.033 iterations 1
Cbc0038I Pass  23: suminf.    2.52720 (9) obj. -634.281 iterations 13
Cbc0038I Pass  24: suminf.    1.72746 (7) obj. -634.281 iterations 5
Cbc0038I Pass  25: suminf.    0.37778 (1) obj. -834.033 iterations 7
Cbc0038I Pass  26: suminf.    0.26241 (1) obj. -634.281 iterations 1
Cbc0038I Pass  27: suminf.    2.83645 (8) obj. -634.281 iterations 15
Cbc0038I Pass  28: suminf.    0.90008 (4) obj. -634.281 iterations 6
Cbc0038I Pass  29: suminf.    0.26271 (2) obj. -634.281 iterations 3
Cbc0038I Pass  30: suminf.    0.25528 (2) obj. -634.281 iterations 1
Cbc0038I Pass  31: suminf.    0.52274 (2) obj. -800.126 iterations 1
Cbc0038I Pass  32: suminf.    0.41053 (1) obj. -795.329 iterations 1
Cbc0038I Rounding solution of -574.659 is better than previous of -572.713

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 44 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -745.104
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass  33: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass  34: suminf.    0.49326 (1) obj. -745.104 iterations 3
Cbc0038I Pass  35: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass  36: suminf.    1.30671 (4) obj. -745.104 iterations 8
Cbc0038I Pass  37: suminf.    1.26308 (8) obj. -745.104 iterations 2
Cbc0038I Pass  38: suminf.    0.42130 (3) obj. -1061.49 iterations 13
Cbc0038I Pass  39: suminf.    0.14815 (2) obj. -963.583 iterations 1
Cbc0038I Pass  40: suminf.    0.49233 (1) obj. -745.104 iterations 3
Cbc0038I Pass  41: suminf.    0.16667 (1) obj. -925.899 iterations 1
Cbc0038I Pass  42: suminf.    1.55892 (5) obj. -745.104 iterations 8
Cbc0038I Pass  43: suminf.    0.87775 (3) obj. -745.104 iterations 4
Cbc0038I Pass  44: suminf.    0.40000 (1) obj. -818.696 iterations 3
Cbc0038I Pass  45: suminf.    0.46744 (1) obj. -745.104 iterations 1
Cbc0038I Pass  46: suminf.    2.16867 (7) obj. -745.104 iterations 9
Cbc0038I Pass  47: suminf.    1.68404 (6) obj. -745.104 iterations 4
Cbc0038I Pass  48: suminf.    0.26250 (1) obj. -866.612 iterations 6
Cbc0038I Pass  49: suminf.    0.26250 (1) obj. -866.612 iterations 0
Cbc0038I Pass  50: suminf.    0.46831 (2) obj. -745.104 iterations 2
Cbc0038I Pass  51: suminf.    0.72788 (3) obj. -745.104 iterations 5
Cbc0038I Pass  52: suminf.    0.72788 (3) obj. -745.104 iterations 0
Cbc0038I Pass  53: suminf.    0.12500 (1) obj. -917.974 iterations 5
Cbc0038I Pass  54: suminf.    0.12500 (1) obj. -917.974 iterations 0
Cbc0038I Pass  55: suminf.    0.49898 (1) obj. -745.104 iterations 2
Cbc0038I Pass  56: suminf.    0.30000 (1) obj. -856.7 iterations 1
Cbc0038I Pass  57: suminf.    1.87521 (4) obj. -745.104 iterations 9
Cbc0038I Pass  58: suminf.    0.91378 (2) obj. -745.104 iterations 6
Cbc0038I Pass  59: suminf.    0.34444 (1) obj. -832.481 iterations 2
Cbc0038I Pass  60: suminf.    0.49816 (1) obj. -745.104 iterations 1
Cbc0038I Pass  61: suminf.    2.01609 (5) obj. -745.104 iterations 7
Cbc0038I Rounding solution of -588.623 is better than previous of -574.659

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 44 columns, reduced to 26 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -878.091
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass  62: suminf.    0.26250 (2) obj. -954.087 iterations 0
Cbc0038I Pass  63: suminf.    0.26719 (1) obj. -878.091 iterations 3
Cbc0038I Pass  64: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass  65: suminf.    0.70490 (4) obj. -878.091 iterations 5
Cbc0038I Pass  66: suminf.    0.41667 (2) obj. -931.649 iterations 2
Cbc0038I Pass  67: suminf.    0.26179 (1) obj. -878.091 iterations 2
Cbc0038I Pass  68: suminf.    0.16667 (1) obj. -930.899 iterations 1
Cbc0038I Pass  69: suminf.    1.46742 (4) obj. -878.091 iterations 9
Cbc0038I Pass  70: suminf.    1.03594 (3) obj. -878.091 iterations 3
Cbc0038I Pass  71: suminf.    0.23750 (1) obj. -889.099 iterations 3
Cbc0038I Pass  72: suminf.    0.23750 (1) obj. -889.099 iterations 0
Cbc0038I Pass  73: suminf.    0.70397 (2) obj. -878.091 iterations 2
Cbc0038I Pass  74: suminf.    2.47981 (8) obj. -878.091 iterations 14
Cbc0038I Pass  75: suminf.    1.77652 (8) obj. -878.091 iterations 3
Cbc0038I Pass  76: suminf.    0.29047 (2) obj. -878.091 iterations 6
Cbc0038I Pass  77: suminf.    0.16667 (1) obj. -933.899 iterations 1
Cbc0038I Pass  78: suminf.    0.26719 (1) obj. -878.091 iterations 1
Cbc0038I Pass  79: suminf.    1.02637 (5) obj. -878.091 iterations 7
Cbc0038I Pass  80: suminf.    1.02637 (5) obj. -878.091 iterations 2
Cbc0038I Pass  81: suminf.    2.13118 (7) obj. -878.091 iterations 4
Cbc0038I Pass  82: suminf.    2.13118 (7) obj. -878.091 iterations 0
Cbc0038I Pass  83: suminf.    0.29263 (2) obj. -878.091 iterations 5
Cbc0038I Pass  84: suminf.    0.20000 (1) obj. -919.849 iterations 2
Cbc0038I Pass  85: suminf.    0.27522 (1) obj. -878.091 iterations 1
Cbc0038I Pass  86: suminf.    2.32686 (7) obj. -878.091 iterations 10
Cbc0038I Pass  87: suminf.    2.08422 (6) obj. -878.091 iterations 4
Cbc0038I Pass  88: suminf.    0.26539 (1) obj. -878.091 iterations 5
Cbc0038I Pass  89: suminf.    0.16667 (1) obj. -932.899 iterations 1
Cbc0038I Pass  90: suminf.    1.97156 (6) obj. -878.091 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 44 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -588.623 - took 0.02 seconds
Cbc0012I Integer solution of -588.6234 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 44 columns, reduced to 20 rows 23 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 12 added rows had average density of 3.3333333
Cbc0013I At root node, 12 cuts changed objective from -1188.3942 to -604.69338 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 4.3 elements, 24 column cuts (24 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -588.6233999999999, took 47 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

