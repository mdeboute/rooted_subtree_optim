Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 6.90468e-05 - average 5.07697e-07, 13 fixed columns
Coin0506I Presolve 109 (-27) rows, 62 (-14) columns and 336 (-80) elements
Clp0000I Optimal - objective value 50.388537
Clp0000I Optimal - objective value 50.388537
Coin0511I After Postsolve, objective 50.388537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24226426 - largest nonzero change 0 ( 0%) - largest zero change 2.8422965e-05
Clp0000I Optimal - objective value 50.388537
Clp0000I Optimal - objective value 50.388537
Clp0000I Optimal - objective value 50.388537
Coin0511I After Postsolve, objective 50.388537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.38853718 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 417 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.96063
Cbc0038I Solution found of -3.07914
Cbc0038I Relaxing continuous gives -11.1241
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -11.1241 to -24.8655 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4179
Cbc0038I Pass   1: suminf.    2.14140 (16) obj. -27.4179 iterations 27
Cbc0038I Pass   2: suminf.    0.52703 (3) obj. -27.4179 iterations 22
Cbc0038I Pass   3: suminf.    0.52703 (3) obj. -27.4179 iterations 0
Cbc0038I Pass   4: suminf.    1.24606 (4) obj. -27.4179 iterations 7
Cbc0038I Pass   5: suminf.    1.21214 (5) obj. -27.4179 iterations 2
Cbc0038I Pass   6: suminf.    2.16963 (5) obj. -27.4179 iterations 7
Cbc0038I Pass   7: suminf.    1.59469 (6) obj. -27.4179 iterations 2
Cbc0038I Pass   8: suminf.    1.25489 (5) obj. -27.4179 iterations 2
Cbc0038I Pass   9: suminf.    0.79258 (3) obj. -27.4179 iterations 5
Cbc0038I Pass  10: suminf.    0.79258 (3) obj. -27.4179 iterations 0
Cbc0038I Pass  11: suminf.    0.51848 (4) obj. -27.4179 iterations 4
Cbc0038I Pass  12: suminf.    0.50057 (4) obj. -27.4179 iterations 2
Cbc0038I Pass  13: suminf.    1.58079 (4) obj. -27.4179 iterations 7
Cbc0038I Pass  14: suminf.    1.57670 (5) obj. -27.4179 iterations 2
Cbc0038I Pass  15: suminf.    2.16963 (5) obj. -27.4179 iterations 7
Cbc0038I Pass  16: suminf.    1.59469 (6) obj. -27.4179 iterations 2
Cbc0038I Pass  17: suminf.    1.25489 (5) obj. -27.4179 iterations 2
Cbc0038I Pass  18: suminf.    0.79258 (3) obj. -27.4179 iterations 5
Cbc0038I Pass  19: suminf.    0.79258 (3) obj. -27.4179 iterations 0
Cbc0038I Pass  20: suminf.    0.51848 (4) obj. -27.4179 iterations 4
Cbc0038I Pass  21: suminf.    0.50057 (4) obj. -27.4179 iterations 2
Cbc0038I Pass  22: suminf.    1.58079 (4) obj. -27.4179 iterations 7
Cbc0038I Pass  23: suminf.    1.57670 (5) obj. -27.4179 iterations 2
Cbc0038I Pass  24: suminf.    2.16963 (5) obj. -27.4179 iterations 7
Cbc0038I Pass  25: suminf.    1.59469 (6) obj. -27.4179 iterations 2
Cbc0038I Pass  26: suminf.    1.25489 (5) obj. -27.4179 iterations 2
Cbc0038I Pass  27: suminf.    0.79258 (3) obj. -27.4179 iterations 5
Cbc0038I Pass  28: suminf.    0.79258 (3) obj. -27.4179 iterations 0
Cbc0038I Pass  29: suminf.    0.51848 (4) obj. -27.4179 iterations 4
Cbc0038I Pass  30: suminf.    0.50057 (4) obj. -27.4179 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 66 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -24.8655 - took 0.07 seconds
Cbc0012I Integer solution of -24.86549 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 63 rows 37 columns
Cbc0031I 21 added rows had average density of 56.619048
Cbc0013I At root node, 21 cuts changed objective from -50.388537 to -41.82903 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9249 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1807 row cuts average 65.8 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 55.9 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.86549 best solution, best possible -41.82903 (0.77 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 38 columns
Cbc0001I Search completed - best objective -24.86548999999999, took 8221 iterations and 92 nodes (1.19 seconds)
Cbc0032I Strong branching done 798 times (15794 iterations), fathomed 10 nodes and fixed 15 variables
Cbc0035I Maximum depth 25, 249 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 115 (-37) columns and 1856 (-1447) elements
Clp1000I sum of infeasibilities 6.68029e-07 - average 6.61415e-09, 24 fixed columns
Coin0506I Presolve 82 (-19) rows, 90 (-25) columns and 1280 (-576) elements
Clp0006I 0  Obj 62.493365 Dual inf 6.4995839 (84)
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 1.8907631 - largest nonzero change 1.2394928e-05 ( 0.00091204228%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 69.040713
Clp0000I Optimal - objective value 69.040713
Coin0511I After Postsolve, objective 69.040713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 69.040713
Clp0000I Optimal - objective value 69.040713
Clp0000I Optimal - objective value 69.040713
Clp0000I Optimal - objective value 69.040713
Coin0511I After Postsolve, objective 69.040713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.04071256 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 116 columns (116 integer (116 of which binary)) and 1862 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 1.15833
Cbc0038I Pass   1: suminf.    1.09107 (18) obj. -59.044 iterations 15
Cbc0038I Solution found of -16.8477
Cbc0038I Rounding solution of -24.5778 is better than previous of -16.8477

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -28.0247
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.09107 (18) obj. -59.044 iterations 0
Cbc0038I Pass   3: suminf.    0.66710 (6) obj. -28.0247 iterations 14
Cbc0038I Pass   4: suminf.    0.26872 (6) obj. -33.1059 iterations 1
Cbc0038I Pass   5: suminf.    0.09637 (1) obj. -28.0247 iterations 6
Cbc0038I Pass   6: suminf.    0.07407 (1) obj. -28.3006 iterations 1
Cbc0038I Pass   7: suminf.    0.74125 (19) obj. -28.0247 iterations 38
Cbc0038I Pass   8: suminf.    0.62233 (13) obj. -28.0247 iterations 10
Cbc0038I Pass   9: suminf.    1.05898 (6) obj. -28.0247 iterations 20
Cbc0038I Pass  10: suminf.    0.86821 (6) obj. -28.0247 iterations 2
Cbc0038I Pass  11: suminf.    0.31285 (4) obj. -28.0247 iterations 6
Cbc0038I Pass  12: suminf.    0.30777 (4) obj. -28.04 iterations 1
Cbc0038I Pass  13: suminf.    0.31285 (4) obj. -28.0247 iterations 5
Cbc0038I Pass  14: suminf.    1.60504 (15) obj. -28.0247 iterations 22
Cbc0038I Pass  15: suminf.    1.23595 (14) obj. -28.0247 iterations 2
Cbc0038I Pass  16: suminf.    0.74009 (13) obj. -28.0247 iterations 5
Cbc0038I Pass  17: suminf.    0.79177 (6) obj. -28.0247 iterations 19
Cbc0038I Pass  18: suminf.    0.79177 (6) obj. -28.0247 iterations 1
Cbc0038I Pass  19: suminf.    0.72034 (5) obj. -28.0247 iterations 6
Cbc0038I Pass  20: suminf.    0.72034 (5) obj. -28.0247 iterations 0
Cbc0038I Pass  21: suminf.    0.63552 (5) obj. -28.0247 iterations 5
Cbc0038I Pass  22: suminf.    0.63552 (5) obj. -28.0247 iterations 0
Cbc0038I Pass  23: suminf.    0.72034 (5) obj. -28.0247 iterations 5
Cbc0038I Pass  24: suminf.    2.59679 (13) obj. -28.0247 iterations 21
Cbc0038I Pass  25: suminf.    0.85793 (10) obj. -28.0247 iterations 12
Cbc0038I Pass  26: suminf.    0.97532 (7) obj. -28.0247 iterations 11
Cbc0038I Pass  27: suminf.    0.97532 (7) obj. -28.0247 iterations 0
Cbc0038I Pass  28: suminf.    0.92456 (7) obj. -28.0247 iterations 6
Cbc0038I Pass  29: suminf.    0.92456 (7) obj. -28.0247 iterations 2
Cbc0038I Pass  30: suminf.    0.97532 (7) obj. -28.0247 iterations 3
Cbc0038I Pass  31: suminf.    1.33706 (16) obj. -28.0247 iterations 12
Cbc0038I Rounding solution of -24.8655 is better than previous of -24.5778

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -34.2291
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.09107 (18) obj. -59.044 iterations 0
Cbc0038I Pass  32: suminf.    0.54578 (3) obj. -34.2291 iterations 18
Cbc0038I Pass  33: suminf.    0.17699 (3) obj. -37.5482 iterations 1
Cbc0038I Pass  34: suminf.    0.41535 (2) obj. -34.2291 iterations 3
Cbc0038I Pass  35: suminf.    0.15525 (2) obj. -36.57 iterations 1
Cbc0038I Pass  36: suminf.    0.39382 (7) obj. -34.2291 iterations 10
Cbc0038I Pass  37: suminf.    0.22877 (3) obj. -34.4964 iterations 6
Cbc0038I Pass  38: suminf.    0.32003 (3) obj. -34.2291 iterations 4
Cbc0038I Pass  39: suminf.    0.32003 (3) obj. -34.2291 iterations 2
Cbc0038I Pass  40: suminf.    0.56671 (3) obj. -34.2291 iterations 8
Cbc0038I Pass  41: suminf.    0.22769 (3) obj. -37.2802 iterations 3
Cbc0038I Pass  42: suminf.    1.07154 (6) obj. -34.2291 iterations 12
Cbc0038I Pass  43: suminf.    0.57847 (5) obj. -34.2291 iterations 9
Cbc0038I Pass  44: suminf.    0.37081 (5) obj. -34.2291 iterations 6
Cbc0038I Pass  45: suminf.    0.37081 (5) obj. -34.2291 iterations 0
Cbc0038I Pass  46: suminf.    0.24047 (3) obj. -34.2291 iterations 6
Cbc0038I Pass  47: suminf.    0.22769 (3) obj. -34.2802 iterations 2
Cbc0038I Pass  48: suminf.    2.25482 (15) obj. -34.2291 iterations 18
Cbc0038I Pass  49: suminf.    0.37078 (6) obj. -34.3687 iterations 9
Cbc0038I Pass  50: suminf.    0.37078 (6) obj. -34.3687 iterations 0
Cbc0038I Pass  51: suminf.    0.70414 (5) obj. -34.2291 iterations 6
Cbc0038I Pass  52: suminf.    0.70414 (5) obj. -34.2291 iterations 2
Cbc0038I Pass  53: suminf.    0.54398 (4) obj. -34.2291 iterations 4
Cbc0038I Pass  54: suminf.    0.54398 (4) obj. -34.2291 iterations 2
Cbc0038I Pass  55: suminf.    0.71017 (4) obj. -34.2291 iterations 2
Cbc0038I Pass  56: suminf.    0.71017 (4) obj. -34.2291 iterations 1
Cbc0038I Pass  57: suminf.    0.54398 (4) obj. -34.2291 iterations 4
Cbc0038I Pass  58: suminf.    0.87180 (8) obj. -34.2291 iterations 16
Cbc0038I Pass  59: suminf.    0.66724 (6) obj. -34.3334 iterations 3
Cbc0038I Pass  60: suminf.    0.54787 (4) obj. -34.2291 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.8655 - took 0.04 seconds
Cbc0012I Integer solution of -24.86549 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 102 rows 116 columns, reduced to 4 rows 4 columns
Cbc0031I 33 added rows had average density of 33.969697
Cbc0013I At root node, 33 cuts changed objective from -59.046427 to -30.842138 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 633 row cuts average 9.5 elements, 7 column cuts (7 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 51.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 112 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 64.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.86549 best solution, best possible -30.842138 (0.40 seconds)
Cbc0010I After 7 nodes, 8 on tree, -24.86549 best solution, best possible -30.842138 (1.11 seconds)
Cbc0001I Search completed - best objective -24.86548999999999, took 1162 iterations and 26 nodes (1.68 seconds)
Cbc0032I Strong branching done 318 times (3773 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 10, 58 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.69

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 6.90468e-05 - average 5.07697e-07, 13 fixed columns
Coin0506I Presolve 109 (-27) rows, 62 (-14) columns and 336 (-80) elements
Clp0000I Optimal - objective value 50.388537
Clp0000I Optimal - objective value 50.388537
Coin0511I After Postsolve, objective 50.388537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24226426 - largest nonzero change 0 ( 0%) - largest zero change 2.8422965e-05
Clp0000I Optimal - objective value 50.388537
Clp0000I Optimal - objective value 50.388537
Clp0000I Optimal - objective value 50.388537
Coin0511I After Postsolve, objective 50.388537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.38853718 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 417 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.96063
Cbc0038I Solution found of -3.07914
Cbc0038I Relaxing continuous gives -11.1241
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -11.1241 to -24.8655 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4179
Cbc0038I Pass   1: suminf.    2.14140 (16) obj. -27.4179 iterations 27
Cbc0038I Pass   2: suminf.    0.52703 (3) obj. -27.4179 iterations 22
Cbc0038I Pass   3: suminf.    0.52703 (3) obj. -27.4179 iterations 0
Cbc0038I Pass   4: suminf.    1.24606 (4) obj. -27.4179 iterations 7
Cbc0038I Pass   5: suminf.    1.21214 (5) obj. -27.4179 iterations 2
Cbc0038I Pass   6: suminf.    2.16963 (5) obj. -27.4179 iterations 7
Cbc0038I Pass   7: suminf.    1.59469 (6) obj. -27.4179 iterations 2
Cbc0038I Pass   8: suminf.    1.25489 (5) obj. -27.4179 iterations 2
Cbc0038I Pass   9: suminf.    0.79258 (3) obj. -27.4179 iterations 5
Cbc0038I Pass  10: suminf.    0.79258 (3) obj. -27.4179 iterations 0
Cbc0038I Pass  11: suminf.    0.51848 (4) obj. -27.4179 iterations 4
Cbc0038I Pass  12: suminf.    0.50057 (4) obj. -27.4179 iterations 2
Cbc0038I Pass  13: suminf.    1.58079 (4) obj. -27.4179 iterations 7
Cbc0038I Pass  14: suminf.    1.57670 (5) obj. -27.4179 iterations 2
Cbc0038I Pass  15: suminf.    2.16963 (5) obj. -27.4179 iterations 7
Cbc0038I Pass  16: suminf.    1.59469 (6) obj. -27.4179 iterations 2
Cbc0038I Pass  17: suminf.    1.25489 (5) obj. -27.4179 iterations 2
Cbc0038I Pass  18: suminf.    0.79258 (3) obj. -27.4179 iterations 5
Cbc0038I Pass  19: suminf.    0.79258 (3) obj. -27.4179 iterations 0
Cbc0038I Pass  20: suminf.    0.51848 (4) obj. -27.4179 iterations 4
Cbc0038I Pass  21: suminf.    0.50057 (4) obj. -27.4179 iterations 2
Cbc0038I Pass  22: suminf.    1.58079 (4) obj. -27.4179 iterations 7
Cbc0038I Pass  23: suminf.    1.57670 (5) obj. -27.4179 iterations 2
Cbc0038I Pass  24: suminf.    2.16963 (5) obj. -27.4179 iterations 7
Cbc0038I Pass  25: suminf.    1.59469 (6) obj. -27.4179 iterations 2
Cbc0038I Pass  26: suminf.    1.25489 (5) obj. -27.4179 iterations 2
Cbc0038I Pass  27: suminf.    0.79258 (3) obj. -27.4179 iterations 5
Cbc0038I Pass  28: suminf.    0.79258 (3) obj. -27.4179 iterations 0
Cbc0038I Pass  29: suminf.    0.51848 (4) obj. -27.4179 iterations 4
Cbc0038I Pass  30: suminf.    0.50057 (4) obj. -27.4179 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 66 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -24.8655 - took 0.06 seconds
Cbc0012I Integer solution of -24.86549 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 63 rows 37 columns
Cbc0031I 21 added rows had average density of 56.619048
Cbc0013I At root node, 21 cuts changed objective from -50.388537 to -41.82903 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9249 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1807 row cuts average 65.8 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 55.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.86549 best solution, best possible -41.82903 (0.71 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 64 rows 38 columns
Cbc0001I Search completed - best objective -24.86548999999999, took 8221 iterations and 92 nodes (1.10 seconds)
Cbc0032I Strong branching done 798 times (15794 iterations), fathomed 10 nodes and fixed 15 variables
Cbc0035I Maximum depth 25, 249 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 115 (-38) columns and 1856 (-1448) elements
Clp1000I sum of infeasibilities 6.68029e-07 - average 6.61415e-09, 24 fixed columns
Coin0506I Presolve 82 (-19) rows, 90 (-25) columns and 1280 (-576) elements
Clp0006I 0  Obj 62.493365 Dual inf 6.4995839 (84)
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 1.8907631 - largest nonzero change 1.2394928e-05 ( 0.00091204228%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 69.040713
Clp0000I Optimal - objective value 69.040713
Coin0511I After Postsolve, objective 69.040713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 69.040713
Clp0000I Optimal - objective value 69.040713
Clp0000I Optimal - objective value 69.040713
Clp0000I Optimal - objective value 69.040713
Coin0511I After Postsolve, objective 69.040713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.04071256 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 116 columns (116 integer (116 of which binary)) and 1862 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 1.15833
Cbc0038I Pass   1: suminf.    1.09107 (18) obj. -59.044 iterations 15
Cbc0038I Solution found of -16.8477
Cbc0038I Rounding solution of -24.5778 is better than previous of -16.8477

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -28.0247
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.09107 (18) obj. -59.044 iterations 0
Cbc0038I Pass   3: suminf.    0.66710 (6) obj. -28.0247 iterations 14
Cbc0038I Pass   4: suminf.    0.26872 (6) obj. -33.1059 iterations 1
Cbc0038I Pass   5: suminf.    0.09637 (1) obj. -28.0247 iterations 6
Cbc0038I Pass   6: suminf.    0.07407 (1) obj. -28.3006 iterations 1
Cbc0038I Pass   7: suminf.    0.74125 (19) obj. -28.0247 iterations 38
Cbc0038I Pass   8: suminf.    0.62233 (13) obj. -28.0247 iterations 10
Cbc0038I Pass   9: suminf.    1.05898 (6) obj. -28.0247 iterations 20
Cbc0038I Pass  10: suminf.    0.86821 (6) obj. -28.0247 iterations 2
Cbc0038I Pass  11: suminf.    0.31285 (4) obj. -28.0247 iterations 6
Cbc0038I Pass  12: suminf.    0.30777 (4) obj. -28.04 iterations 1
Cbc0038I Pass  13: suminf.    0.31285 (4) obj. -28.0247 iterations 5
Cbc0038I Pass  14: suminf.    1.60504 (15) obj. -28.0247 iterations 22
Cbc0038I Pass  15: suminf.    1.23595 (14) obj. -28.0247 iterations 2
Cbc0038I Pass  16: suminf.    0.74009 (13) obj. -28.0247 iterations 5
Cbc0038I Pass  17: suminf.    0.79177 (6) obj. -28.0247 iterations 19
Cbc0038I Pass  18: suminf.    0.79177 (6) obj. -28.0247 iterations 1
Cbc0038I Pass  19: suminf.    0.72034 (5) obj. -28.0247 iterations 6
Cbc0038I Pass  20: suminf.    0.72034 (5) obj. -28.0247 iterations 0
Cbc0038I Pass  21: suminf.    0.63552 (5) obj. -28.0247 iterations 5
Cbc0038I Pass  22: suminf.    0.63552 (5) obj. -28.0247 iterations 0
Cbc0038I Pass  23: suminf.    0.72034 (5) obj. -28.0247 iterations 5
Cbc0038I Pass  24: suminf.    2.59679 (13) obj. -28.0247 iterations 21
Cbc0038I Pass  25: suminf.    0.85793 (10) obj. -28.0247 iterations 12
Cbc0038I Pass  26: suminf.    0.97532 (7) obj. -28.0247 iterations 11
Cbc0038I Pass  27: suminf.    0.97532 (7) obj. -28.0247 iterations 0
Cbc0038I Pass  28: suminf.    0.92456 (7) obj. -28.0247 iterations 6
Cbc0038I Pass  29: suminf.    0.92456 (7) obj. -28.0247 iterations 2
Cbc0038I Pass  30: suminf.    0.97532 (7) obj. -28.0247 iterations 3
Cbc0038I Pass  31: suminf.    1.33706 (16) obj. -28.0247 iterations 12
Cbc0038I Rounding solution of -24.8655 is better than previous of -24.5778

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -34.2291
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.09107 (18) obj. -59.044 iterations 0
Cbc0038I Pass  32: suminf.    0.54578 (3) obj. -34.2291 iterations 18
Cbc0038I Pass  33: suminf.    0.17699 (3) obj. -37.5482 iterations 1
Cbc0038I Pass  34: suminf.    0.41535 (2) obj. -34.2291 iterations 3
Cbc0038I Pass  35: suminf.    0.15525 (2) obj. -36.57 iterations 1
Cbc0038I Pass  36: suminf.    0.39382 (7) obj. -34.2291 iterations 10
Cbc0038I Pass  37: suminf.    0.22877 (3) obj. -34.4964 iterations 6
Cbc0038I Pass  38: suminf.    0.32003 (3) obj. -34.2291 iterations 4
Cbc0038I Pass  39: suminf.    0.32003 (3) obj. -34.2291 iterations 2
Cbc0038I Pass  40: suminf.    0.56671 (3) obj. -34.2291 iterations 8
Cbc0038I Pass  41: suminf.    0.22769 (3) obj. -37.2802 iterations 3
Cbc0038I Pass  42: suminf.    1.07154 (6) obj. -34.2291 iterations 12
Cbc0038I Pass  43: suminf.    0.57847 (5) obj. -34.2291 iterations 9
Cbc0038I Pass  44: suminf.    0.37081 (5) obj. -34.2291 iterations 6
Cbc0038I Pass  45: suminf.    0.37081 (5) obj. -34.2291 iterations 0
Cbc0038I Pass  46: suminf.    0.24047 (3) obj. -34.2291 iterations 6
Cbc0038I Pass  47: suminf.    0.22769 (3) obj. -34.2802 iterations 2
Cbc0038I Pass  48: suminf.    2.25482 (15) obj. -34.2291 iterations 18
Cbc0038I Pass  49: suminf.    0.37078 (6) obj. -34.3687 iterations 9
Cbc0038I Pass  50: suminf.    0.37078 (6) obj. -34.3687 iterations 0
Cbc0038I Pass  51: suminf.    0.70414 (5) obj. -34.2291 iterations 6
Cbc0038I Pass  52: suminf.    0.70414 (5) obj. -34.2291 iterations 2
Cbc0038I Pass  53: suminf.    0.54398 (4) obj. -34.2291 iterations 4
Cbc0038I Pass  54: suminf.    0.54398 (4) obj. -34.2291 iterations 2
Cbc0038I Pass  55: suminf.    0.71017 (4) obj. -34.2291 iterations 2
Cbc0038I Pass  56: suminf.    0.71017 (4) obj. -34.2291 iterations 1
Cbc0038I Pass  57: suminf.    0.54398 (4) obj. -34.2291 iterations 4
Cbc0038I Pass  58: suminf.    0.87180 (8) obj. -34.2291 iterations 16
Cbc0038I Pass  59: suminf.    0.66724 (6) obj. -34.3334 iterations 3
Cbc0038I Pass  60: suminf.    0.54787 (4) obj. -34.2291 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 116 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.8655 - took 0.04 seconds
Cbc0012I Integer solution of -24.86549 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 102 rows 116 columns, reduced to 4 rows 4 columns
Cbc0031I 33 added rows had average density of 33.969697
Cbc0013I At root node, 33 cuts changed objective from -59.046427 to -30.842138 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 633 row cuts average 9.5 elements, 7 column cuts (7 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 51.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 112 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 64.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.86549 best solution, best possible -30.842138 (0.34 seconds)
Cbc0010I After 8 nodes, 7 on tree, -24.86549 best solution, best possible -30.842138 (1.12 seconds)
Cbc0001I Search completed - best objective -24.86548999999999, took 1162 iterations and 26 nodes (1.43 seconds)
Cbc0032I Strong branching done 318 times (3773 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 10, 58 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       1.43

