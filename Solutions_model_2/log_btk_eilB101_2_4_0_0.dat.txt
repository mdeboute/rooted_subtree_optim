Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 95 (-8) columns and 532 (-71) elements
Clp1000I sum of infeasibilities 1.44137e-05 - average 8.23639e-08, 67 fixed columns
Coin0506I Presolve 44 (-131) rows, 26 (-69) columns and 134 (-398) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 216.96888
Clp0000I Optimal - objective value 216.96888
Coin0511I After Postsolve, objective 216.96888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19839883 - largest nonzero change 0 ( 0%) - largest zero change 2.8815367e-05
Clp0000I Optimal - objective value 216.96888
Clp0000I Optimal - objective value 216.96888
Clp0000I Optimal - objective value 216.96888
Coin0511I After Postsolve, objective 216.96888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 216.9688774 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 95 columns (94 integer (94 of which binary)) and 586 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.505%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.72717
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -89.9673 iterations 41
Cbc0038I Solution found of -89.9673
Cbc0038I Relaxing continuous gives -89.9673
Cbc0038I Rounding solution of -120.865 is better than previous of -89.9673

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 95 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -120.865 to -185.976 (0.03 seconds)
Cbc0038I Round again with cutoff of -189.075
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.77246 (5) obj. -189.075 iterations 18
Cbc0038I Pass   3: suminf.    1.41116 (9) obj. -189.075 iterations 8
Cbc0038I Pass   4: suminf.    0.67790 (3) obj. -189.075 iterations 19
Cbc0038I Pass   5: suminf.    1.23439 (4) obj. -189.075 iterations 4
Cbc0038I Pass   6: suminf.    1.11693 (6) obj. -189.075 iterations 11
Cbc0038I Pass   7: suminf.    2.90150 (7) obj. -189.075 iterations 23
Cbc0038I Pass   8: suminf.    2.55868 (7) obj. -189.075 iterations 10
Cbc0038I Pass   9: suminf.    1.94308 (6) obj. -189.075 iterations 3
Cbc0038I Pass  10: suminf.    1.41116 (9) obj. -189.075 iterations 22
Cbc0038I Pass  11: suminf.    0.67790 (3) obj. -189.075 iterations 19
Cbc0038I Pass  12: suminf.    1.23439 (4) obj. -189.075 iterations 4
Cbc0038I Pass  13: suminf.    1.11693 (6) obj. -189.075 iterations 11
Cbc0038I Pass  14: suminf.    2.90150 (7) obj. -189.075 iterations 27
Cbc0038I Pass  15: suminf.    2.55868 (7) obj. -189.075 iterations 12
Cbc0038I Pass  16: suminf.    1.94308 (6) obj. -189.075 iterations 3
Cbc0038I Pass  17: suminf.    1.41116 (9) obj. -189.075 iterations 21
Cbc0038I Pass  18: suminf.    0.67790 (3) obj. -189.075 iterations 19
Cbc0038I Pass  19: suminf.    1.23439 (4) obj. -189.075 iterations 4
Cbc0038I Pass  20: suminf.    1.11693 (6) obj. -189.075 iterations 11
Cbc0038I Pass  21: suminf.    2.90150 (7) obj. -189.075 iterations 30
Cbc0038I Pass  22: suminf.    2.55868 (7) obj. -189.075 iterations 13
Cbc0038I Pass  23: suminf.    1.94308 (6) obj. -189.075 iterations 3
Cbc0038I Pass  24: suminf.    1.41116 (9) obj. -189.075 iterations 22
Cbc0038I Pass  25: suminf.    0.67790 (3) obj. -189.075 iterations 19
Cbc0038I Pass  26: suminf.    1.23439 (4) obj. -189.075 iterations 5
Cbc0038I Pass  27: suminf.    1.11693 (6) obj. -189.075 iterations 10
Cbc0038I Pass  28: suminf.    2.90150 (7) obj. -189.075 iterations 20
Cbc0038I Pass  29: suminf.    2.55868 (7) obj. -189.075 iterations 13
Cbc0038I Pass  30: suminf.    1.94308 (6) obj. -189.075 iterations 3
Cbc0038I Pass  31: suminf.    1.41116 (9) obj. -189.075 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 95 columns, reduced to 42 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -185.976 - took 0.03 seconds
Cbc0012I Integer solution of -185.97608 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 173 rows 95 columns, reduced to 36 rows 21 columns
Cbc0031I 14 added rows had average density of 36.928571
Cbc0013I At root node, 14 cuts changed objective from -216.96888 to -201.33254 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 412 row cuts average 3.4 elements, 11 column cuts (11 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 70.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -185.97608, took 778 iterations and 4 nodes (0.17 seconds)
Cbc0032I Strong branching done 90 times (1526 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-67) rows, 150 (-52) columns and 3006 (-2647) elements
Clp1000I sum of infeasibilities 1.44154e-06 - average 1.05222e-08, 114 fixed columns
Coin0506I Presolve 29 (-108) rows, 35 (-115) columns and 123 (-2883) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 1.6021512 - largest nonzero change 1.9915056e-05 ( 0.00091204228%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 155.61047
Clp0000I Optimal - objective value 155.61047
Coin0511I After Postsolve, objective 155.61047, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6013871 - largest nonzero change 1.840002e-05 ( 0.001262127%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 248.34979
Clp0000I Optimal - objective value 248.34979
Clp0000I Optimal - objective value 248.34979
Coin0511I After Postsolve, objective 248.34979, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 248.3497941 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 150 columns (150 integer (150 of which binary)) and 3034 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 5.48227
Cbc0038I Pass   1: suminf.    0.52911 (20) obj. -79.9491 iterations 35
Cbc0038I Pass   2: suminf.    0.52911 (20) obj. -79.9491 iterations 1
Cbc0038I Pass   3: suminf.    0.13157 (6) obj. -66.3467 iterations 14
Cbc0038I Solution found of -58.5242
Cbc0038I Rounding solution of -122.797 is better than previous of -58.5242

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 150 columns, reduced to 27 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -122.797 to -142.762 (0.06 seconds)
Cbc0038I Round again with cutoff of -150.778
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.36467 (44) obj. -150.778 iterations 13
Cbc0038I Pass   5: suminf.    0.98326 (20) obj. -150.778 iterations 24
Cbc0038I Pass   6: suminf.    0.96535 (19) obj. -152.881 iterations 1
Cbc0038I Pass   7: suminf.    0.28291 (2) obj. -150.778 iterations 21
Cbc0038I Pass   8: suminf.    0.37931 (1) obj. -158.738 iterations 3
Cbc0038I Pass   9: suminf.    0.37931 (1) obj. -158.738 iterations 0
Cbc0038I Pass  10: suminf.    0.48007 (1) obj. -150.778 iterations 1
Cbc0038I Pass  11: suminf.    2.12624 (20) obj. -150.778 iterations 39
Cbc0038I Pass  12: suminf.    0.82348 (17) obj. -150.778 iterations 13
Cbc0038I Pass  13: suminf.    0.56371 (2) obj. -150.778 iterations 17
Cbc0038I Pass  14: suminf.    0.56371 (2) obj. -150.778 iterations 5
Cbc0038I Pass  15: suminf.    0.03333 (1) obj. -151.298 iterations 7
Cbc0038I Pass  16: suminf.    0.02442 (2) obj. -150.778 iterations 2
Cbc0038I Pass  17: suminf.    0.52915 (4) obj. -161.471 iterations 5
Cbc0038I Pass  18: suminf.    1.47182 (11) obj. -150.778 iterations 16
Cbc0038I Pass  19: suminf.    1.40207 (10) obj. -151.617 iterations 6
Cbc0038I Pass  20: suminf.    0.99518 (4) obj. -150.778 iterations 21
Cbc0038I Pass  21: suminf.    0.97397 (4) obj. -150.778 iterations 12
Cbc0038I Pass  22: suminf.    2.36876 (5) obj. -150.778 iterations 15
Cbc0038I Pass  23: suminf.    1.00185 (4) obj. -158.017 iterations 5
Cbc0038I Pass  24: suminf.    0.33962 (3) obj. -152.09 iterations 3
Cbc0038I Pass  25: suminf.    2.50218 (15) obj. -150.778 iterations 22
Cbc0038I Pass  26: suminf.    0.35411 (9) obj. -161.115 iterations 7
Cbc0038I Solution found of -151.519
Cbc0038I Rounding solution of -158.156 is better than previous of -151.519

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 150 columns, reduced to 63 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -158.156 to -173.212 (0.14 seconds)
Cbc0038I Round again with cutoff of -183.154
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  27: suminf.    3.76325 (44) obj. -183.154 iterations 1
Cbc0038I Pass  28: suminf.    1.48341 (20) obj. -183.154 iterations 30
Cbc0038I Pass  29: suminf.    1.34633 (10) obj. -183.154 iterations 30
Cbc0038I Pass  30: suminf.    1.10117 (12) obj. -183.154 iterations 12
Cbc0038I Pass  31: suminf.    1.76935 (8) obj. -183.154 iterations 37
Cbc0038I Pass  32: suminf.    1.51983 (10) obj. -183.154 iterations 3
Cbc0038I Pass  33: suminf.    1.94348 (10) obj. -183.154 iterations 14
Cbc0038I Pass  34: suminf.    1.93465 (12) obj. -183.154 iterations 3
Cbc0038I Pass  35: suminf.    1.52712 (12) obj. -183.154 iterations 5
Cbc0038I Pass  36: suminf.    2.07250 (15) obj. -183.154 iterations 21
Cbc0038I Pass  37: suminf.    1.80039 (16) obj. -183.154 iterations 6
Cbc0038I Pass  38: suminf.    2.11909 (12) obj. -183.154 iterations 26
Cbc0038I Pass  39: suminf.    1.57298 (14) obj. -183.154 iterations 9
Cbc0038I Pass  40: suminf.    2.12770 (11) obj. -183.154 iterations 23
Cbc0038I Pass  41: suminf.    1.65697 (11) obj. -183.154 iterations 8
Cbc0038I Pass  42: suminf.    2.04369 (10) obj. -183.154 iterations 8
Cbc0038I Pass  43: suminf.    1.59048 (10) obj. -183.154 iterations 8
Cbc0038I Pass  44: suminf.    2.22203 (12) obj. -183.154 iterations 20
Cbc0038I Pass  45: suminf.    2.01983 (11) obj. -183.154 iterations 3
Cbc0038I Pass  46: suminf.    1.79439 (11) obj. -183.154 iterations 3
Cbc0038I Pass  47: suminf.    1.79439 (11) obj. -183.154 iterations 2
Cbc0038I Pass  48: suminf.    2.01983 (11) obj. -183.154 iterations 10
Cbc0038I Pass  49: suminf.    1.99868 (18) obj. -183.154 iterations 30
Cbc0038I Pass  50: suminf.    1.23753 (15) obj. -183.154 iterations 14
Cbc0038I Pass  51: suminf.    2.37854 (10) obj. -183.154 iterations 20
Cbc0038I Pass  52: suminf.    2.25186 (11) obj. -183.154 iterations 7
Cbc0038I Pass  53: suminf.    2.26935 (9) obj. -183.154 iterations 17
Cbc0038I Pass  54: suminf.    2.01983 (11) obj. -183.154 iterations 3
Cbc0038I Pass  55: suminf.    1.79439 (11) obj. -183.154 iterations 3
Cbc0038I Pass  56: suminf.    1.79439 (11) obj. -183.154 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 150 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -173.212 - took 0.12 seconds
Cbc0012I Integer solution of -173.21158 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 134 rows 150 columns, reduced to 50 rows 53 columns
Cbc0031I 52 added rows had average density of 26.923077
Cbc0013I At root node, 52 cuts changed objective from -222.92439 to -193.95684 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 2929 row cuts average 7.1 elements, 14 column cuts (14 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 102 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 393 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 356 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 57.4 elements, 0 column cuts (0 active)  in 0.193 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -173.21158 best solution, best possible -193.95684 (0.90 seconds)
Cbc0010I After 5 nodes, 6 on tree, -173.21158 best solution, best possible -193.95684 (1.60 seconds)
Cbc0010I After 28 nodes, 11 on tree, -173.21158 best solution, best possible -193.95684 (2.31 seconds)
Cbc0038I Full problem 134 rows 150 columns, reduced to 17 rows 21 columns
Cbc0012I Integer solution of -185.97608 found by RINS after 1807 iterations and 41 nodes (2.63 seconds)
Cbc0001I Search completed - best objective -185.97608, took 2236 iterations and 49 nodes (2.76 seconds)
Cbc0032I Strong branching done 684 times (9832 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 21, 158 variables fixed on reduced cost
Total time (CPU seconds):       1.81   (Wallclock seconds):       2.77

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 95 (-8) columns and 532 (-71) elements
Clp1000I sum of infeasibilities 1.44137e-05 - average 8.23639e-08, 67 fixed columns
Coin0506I Presolve 44 (-131) rows, 26 (-69) columns and 134 (-398) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 216.96888
Clp0000I Optimal - objective value 216.96888
Coin0511I After Postsolve, objective 216.96888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.19839883 - largest nonzero change 0 ( 0%) - largest zero change 2.8815367e-05
Clp0000I Optimal - objective value 216.96888
Clp0000I Optimal - objective value 216.96888
Clp0000I Optimal - objective value 216.96888
Coin0511I After Postsolve, objective 216.96888, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 216.9688774 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 173 rows, 95 columns (94 integer (94 of which binary)) and 586 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.505%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 5.72717
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -89.9673 iterations 41
Cbc0038I Solution found of -89.9673
Cbc0038I Relaxing continuous gives -89.9673
Cbc0038I Rounding solution of -120.865 is better than previous of -89.9673

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 95 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -120.865 to -185.976 (0.04 seconds)
Cbc0038I Round again with cutoff of -189.075
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.77246 (5) obj. -189.075 iterations 18
Cbc0038I Pass   3: suminf.    1.41116 (9) obj. -189.075 iterations 8
Cbc0038I Pass   4: suminf.    0.67790 (3) obj. -189.075 iterations 19
Cbc0038I Pass   5: suminf.    1.23439 (4) obj. -189.075 iterations 4
Cbc0038I Pass   6: suminf.    1.11693 (6) obj. -189.075 iterations 11
Cbc0038I Pass   7: suminf.    2.90150 (7) obj. -189.075 iterations 23
Cbc0038I Pass   8: suminf.    2.55868 (7) obj. -189.075 iterations 10
Cbc0038I Pass   9: suminf.    1.94308 (6) obj. -189.075 iterations 3
Cbc0038I Pass  10: suminf.    1.41116 (9) obj. -189.075 iterations 22
Cbc0038I Pass  11: suminf.    0.67790 (3) obj. -189.075 iterations 19
Cbc0038I Pass  12: suminf.    1.23439 (4) obj. -189.075 iterations 4
Cbc0038I Pass  13: suminf.    1.11693 (6) obj. -189.075 iterations 11
Cbc0038I Pass  14: suminf.    2.90150 (7) obj. -189.075 iterations 27
Cbc0038I Pass  15: suminf.    2.55868 (7) obj. -189.075 iterations 12
Cbc0038I Pass  16: suminf.    1.94308 (6) obj. -189.075 iterations 3
Cbc0038I Pass  17: suminf.    1.41116 (9) obj. -189.075 iterations 21
Cbc0038I Pass  18: suminf.    0.67790 (3) obj. -189.075 iterations 19
Cbc0038I Pass  19: suminf.    1.23439 (4) obj. -189.075 iterations 4
Cbc0038I Pass  20: suminf.    1.11693 (6) obj. -189.075 iterations 11
Cbc0038I Pass  21: suminf.    2.90150 (7) obj. -189.075 iterations 30
Cbc0038I Pass  22: suminf.    2.55868 (7) obj. -189.075 iterations 13
Cbc0038I Pass  23: suminf.    1.94308 (6) obj. -189.075 iterations 3
Cbc0038I Pass  24: suminf.    1.41116 (9) obj. -189.075 iterations 22
Cbc0038I Pass  25: suminf.    0.67790 (3) obj. -189.075 iterations 19
Cbc0038I Pass  26: suminf.    1.23439 (4) obj. -189.075 iterations 5
Cbc0038I Pass  27: suminf.    1.11693 (6) obj. -189.075 iterations 10
Cbc0038I Pass  28: suminf.    2.90150 (7) obj. -189.075 iterations 20
Cbc0038I Pass  29: suminf.    2.55868 (7) obj. -189.075 iterations 13
Cbc0038I Pass  30: suminf.    1.94308 (6) obj. -189.075 iterations 3
Cbc0038I Pass  31: suminf.    1.41116 (9) obj. -189.075 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 173 rows 95 columns, reduced to 42 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -185.976 - took 0.03 seconds
Cbc0012I Integer solution of -185.97608 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 173 rows 95 columns, reduced to 36 rows 21 columns
Cbc0031I 14 added rows had average density of 36.928571
Cbc0013I At root node, 14 cuts changed objective from -216.96888 to -201.33254 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 412 row cuts average 3.4 elements, 11 column cuts (11 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 70.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0001I Search completed - best objective -185.97608, took 778 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 90 times (1526 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 1, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-70) rows, 148 (-55) columns and 2910 (-2744) elements
Clp1000I sum of infeasibilities 2.01934e-06 - average 1.4958e-08, 112 fixed columns
Coin0506I Presolve 28 (-107) rows, 35 (-113) columns and 121 (-2789) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 2.1386903 - largest nonzero change 1.7399921e-05 ( 0.00080919949%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 142.70986
Clp0000I Optimal - objective value 142.70986
Coin0511I After Postsolve, objective 142.70986, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6169432 - largest nonzero change 1.3319809e-05 ( 0.00096990836%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 237.69419
Clp0000I Optimal - objective value 237.69419
Clp0000I Optimal - objective value 237.69419
Coin0511I After Postsolve, objective 237.69419, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 237.6941935 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 148 columns (148 integer (148 of which binary)) and 2933 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.334%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 9.07745
Cbc0038I Pass   1: suminf.    1.40331 (25) obj. -190.917 iterations 40
Cbc0038I Pass   2: suminf.    1.40331 (25) obj. -190.917 iterations 1
Cbc0038I Pass   3: suminf.    0.10131 (5) obj. -162.708 iterations 24
Cbc0038I Solution found of -157.809
Cbc0038I Rounding solution of -158.224 is better than previous of -157.809

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 148 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -164.211
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.40331 (25) obj. -190.917 iterations 0
Cbc0038I Pass   5: suminf.    1.40331 (25) obj. -190.917 iterations 1
Cbc0038I Pass   6: suminf.    0.57330 (15) obj. -181.747 iterations 10
Cbc0038I Pass   7: suminf.    0.08409 (1) obj. -164.211 iterations 19
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -173.035 iterations 1
Cbc0038I Pass   9: suminf.    1.94447 (22) obj. -164.211 iterations 39
Cbc0038I Pass  10: suminf.    1.67846 (22) obj. -164.211 iterations 7
Cbc0038I Pass  11: suminf.    0.61847 (4) obj. -164.211 iterations 42
Cbc0038I Pass  12: suminf.    0.26667 (1) obj. -166.71 iterations 16
Cbc0038I Pass  13: suminf.    0.29949 (1) obj. -164.211 iterations 1
Cbc0038I Pass  14: suminf.    2.22458 (14) obj. -164.211 iterations 22
Cbc0038I Pass  15: suminf.    1.83040 (10) obj. -164.211 iterations 2
Cbc0038I Pass  16: suminf.    1.15746 (8) obj. -164.211 iterations 13
Cbc0038I Pass  17: suminf.    1.13141 (10) obj. -164.211 iterations 12
Cbc0038I Pass  18: suminf.    1.21003 (4) obj. -164.211 iterations 20
Cbc0038I Pass  19: suminf.    1.21003 (4) obj. -164.211 iterations 0
Cbc0038I Pass  20: suminf.    1.27969 (4) obj. -164.211 iterations 7
Cbc0038I Pass  21: suminf.    2.71343 (13) obj. -164.211 iterations 29
Cbc0038I Pass  22: suminf.    1.76284 (11) obj. -164.211 iterations 7
Cbc0038I Pass  23: suminf.    1.14406 (5) obj. -164.211 iterations 19
Cbc0038I Pass  24: suminf.    0.73804 (5) obj. -164.211 iterations 7
Cbc0038I Pass  25: suminf.    0.43822 (3) obj. -164.211 iterations 13
Cbc0038I Pass  26: suminf.    0.26667 (1) obj. -165.71 iterations 4
Cbc0038I Pass  27: suminf.    0.28635 (1) obj. -164.211 iterations 1
Cbc0038I Pass  28: suminf.    2.19058 (14) obj. -164.211 iterations 27
Cbc0038I Pass  29: suminf.    2.19058 (14) obj. -164.211 iterations 1
Cbc0038I Pass  30: suminf.    0.31314 (2) obj. -164.211 iterations 20
Cbc0038I Pass  31: suminf.    0.26667 (1) obj. -164.71 iterations 2
Cbc0038I Pass  32: suminf.    0.27321 (1) obj. -164.211 iterations 1
Cbc0038I Pass  33: suminf.    2.37097 (12) obj. -164.211 iterations 32
Cbc0038I Rounding solution of -165.244 is better than previous of -158.224

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 148 columns, reduced to 57 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -165.244 to -174.526 (0.10 seconds)
Cbc0038I Round again with cutoff of -183.24
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.40331 (25) obj. -190.917 iterations 0
Cbc0038I Pass  34: suminf.    1.40331 (25) obj. -190.917 iterations 1
Cbc0038I Pass  35: suminf.    0.99071 (29) obj. -183.24 iterations 45
Cbc0038I Pass  36: suminf.    1.99100 (14) obj. -183.24 iterations 43
Cbc0038I Pass  37: suminf.    1.89016 (14) obj. -183.24 iterations 8
Cbc0038I Pass  38: suminf.    4.06721 (14) obj. -183.24 iterations 20
Cbc0038I Pass  39: suminf.    4.06721 (14) obj. -183.24 iterations 0
Cbc0038I Pass  40: suminf.    4.06721 (14) obj. -183.24 iterations 2
Cbc0038I Pass  41: suminf.    4.20796 (20) obj. -183.24 iterations 12
Cbc0038I Pass  42: suminf.    2.87191 (17) obj. -183.24 iterations 5
Cbc0038I Pass  43: suminf.    2.68358 (17) obj. -183.24 iterations 1
Cbc0038I Pass  44: suminf.    2.33626 (15) obj. -183.24 iterations 13
Cbc0038I Pass  45: suminf.    2.31963 (13) obj. -183.24 iterations 3
Cbc0038I Pass  46: suminf.    4.06721 (14) obj. -183.24 iterations 7
Cbc0038I Pass  47: suminf.    4.06721 (14) obj. -183.24 iterations 0
Cbc0038I Pass  48: suminf.    4.03811 (14) obj. -183.24 iterations 3
Cbc0038I Pass  49: suminf.    4.03811 (14) obj. -183.24 iterations 2
Cbc0038I Pass  50: suminf.    2.85438 (18) obj. -183.24 iterations 11
Cbc0038I Pass  51: suminf.    2.85438 (18) obj. -183.24 iterations 1
Cbc0038I Pass  52: suminf.    4.06721 (14) obj. -183.24 iterations 12
Cbc0038I Pass  53: suminf.    4.06721 (14) obj. -183.24 iterations 2
Cbc0038I Pass  54: suminf.    4.03811 (14) obj. -183.24 iterations 3
Cbc0038I Pass  55: suminf.    4.03811 (14) obj. -183.24 iterations 2
Cbc0038I Pass  56: suminf.    4.06721 (14) obj. -183.24 iterations 3
Cbc0038I Pass  57: suminf.    3.15598 (17) obj. -183.24 iterations 21
Cbc0038I Pass  58: suminf.    3.15598 (17) obj. -183.24 iterations 3
Cbc0038I Pass  59: suminf.    4.51158 (14) obj. -183.24 iterations 12
Cbc0038I Pass  60: suminf.    3.36501 (14) obj. -183.24 iterations 1
Cbc0038I Pass  61: suminf.    2.31963 (13) obj. -183.24 iterations 9
Cbc0038I Pass  62: suminf.    2.31963 (13) obj. -183.24 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 148 columns, reduced to 53 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -174.526 - took 0.15 seconds
Cbc0012I Integer solution of -174.52618 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 132 rows 148 columns, reduced to 54 rows 56 columns
Cbc0031I 58 added rows had average density of 25.224138
Cbc0013I At root node, 58 cuts changed objective from -218.09337 to -196.41555 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 2408 row cuts average 10.8 elements, 11 column cuts (11 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 90 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 221 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 72.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -174.52618 best solution, best possible -196.41555 (0.68 seconds)
Cbc0010I After 39 nodes, 9 on tree, -174.52618 best solution, best possible -196.41555 (1.38 seconds)
Cbc0038I Full problem 132 rows 148 columns, reduced to 9 rows 14 columns
Cbc0038I Full problem 190 rows 148 columns, reduced to 115 rows 124 columns
Cbc0044I Reduced cost fixing - 115 rows, 124 columns - restarting search
Cbc0012I Integer solution of -174.52618 found by Previous solution after 0 iterations and 0 nodes (1.46 seconds)
Cbc0038I Full problem 115 rows 124 columns, reduced to 54 rows 56 columns
Cbc0031I 45 added rows had average density of 35.111111
Cbc0013I At root node, 45 cuts changed objective from -216.58805 to -194.52412 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3179 row cuts average 3.5 elements, 0 column cuts (39 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 524 row cuts average 108.2 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 210 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 781 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 499 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 96 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 234 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.666 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 656 row cuts average 22.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -174.52618 best solution, best possible -194.34701 (3.40 seconds)
Cbc0004I Integer solution of -185.97608 found after 3355 iterations and 1 nodes (3.41 seconds)
Cbc0001I Search completed - best objective -185.97608, took 3883 iterations and 8 nodes (3.85 seconds)
Cbc0032I Strong branching done 186 times (3361 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 55 variables fixed on reduced cost
Cbc0038I Probing was tried 131 times and created 3494 cuts of which 39 were active after adding rounds of cuts (0.076 seconds)
Cbc0038I Gomory was tried 129 times and created 524 cuts of which 0 were active after adding rounds of cuts (0.120 seconds)
Cbc0038I Knapsack was tried 129 times and created 445 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Cbc0038I Clique was tried 129 times and created 884 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
Cbc0038I MixedIntegerRounding2 was tried 129 times and created 574 cuts of which 0 were active after adding rounds of cuts (0.069 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 129 times and created 179 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
Cbc0038I ZeroHalf was tried 129 times and created 292 cuts of which 0 were active after adding rounds of cuts (0.834 seconds)
Cbc0038I Stored from first was tried 129 times and created 752 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -185.97608 found by Reduced search after 5575 iterations and 58 nodes (3.86 seconds)
Cbc0001I Search completed - best objective -185.97608, took 5575 iterations and 58 nodes (3.86 seconds)
Cbc0032I Strong branching done 706 times (11201 iterations), fathomed 12 nodes and fixed 7 variables
Cbc0035I Maximum depth 24, 87 variables fixed on reduced cost
Total time (CPU seconds):       2.60   (Wallclock seconds):       3.87

