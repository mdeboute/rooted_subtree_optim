Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 48 (-2) columns and 274 (-11) elements
Clp1000I sum of infeasibilities 2.87542e-05 - average 3.09185e-07, 6 fixed columns
Coin0506I Presolve 81 (-12) rows, 42 (-6) columns and 238 (-36) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 24.810696 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Coin0511I After Postsolve, objective 2171.7199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Coin0511I After Postsolve, objective 2171.7199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2171.719906 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 48 columns (47 integer (47 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.80438
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -147.058 iterations 32
Cbc0038I Solution found of -147.058
Cbc0038I Relaxing continuous gives -147.058
Cbc0038I Rounding solution of -521.413 is better than previous of -147.058

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -521.413 to -651.23 (0.02 seconds)
Cbc0038I Round again with cutoff of -803.28
Cbc0038I Pass   2: suminf.    0.92615 (5) obj. -803.28 iterations 4
Cbc0038I Pass   3: suminf.    0.86264 (4) obj. -803.28 iterations 1
Cbc0038I Pass   4: suminf.    1.18361 (3) obj. -803.28 iterations 4
Cbc0038I Pass   5: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass   6: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass   7: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass   8: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass   9: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  10: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  11: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  12: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  13: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  14: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  15: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  16: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  17: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  18: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  19: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  20: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  21: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  22: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  23: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  24: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  25: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  26: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  27: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  28: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  29: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  30: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  31: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -651.23 - took 0.03 seconds
Cbc0012I Integer solution of -651.23047 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0031I 21 added rows had average density of 31.619048
Cbc0013I At root node, 21 cuts changed objective from -2171.7199 to -1480.223 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6577 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2105 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 307 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 132 row cuts average 42.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 5 nodes, 6 on tree, -651.23047 best solution, best possible -1480.223 (0.67 seconds)
Cbc0001I Search completed - best objective -651.2304684999999, took 8849 iterations and 28 nodes (0.81 seconds)
Cbc0032I Strong branching done 468 times (9593 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.81

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-5) rows, 94 (-2) columns and 1355 (-58) elements
Clp1000I sum of infeasibilities 4.29086e-08 - average 4.61383e-10, 90 fixed columns
Coin0506I Presolve 2 (-91) rows, 3 (-91) columns and 5 (-1350) elements
Clp0006I 0  Obj 83.349353 Dual inf 5.595897 (3)
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 83.350469
Clp0000I Optimal - objective value 83.350469
Coin0511I After Postsolve, objective 83.350469, infeasibilities - dual 17.452 (1), primal 0 (0)
Coin0512I Presolved model was optimal, full model needs cleaning up
Clp0006I 0  Obj 83.350469 Dual inf 3778.1356 (61)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.8140406e-05 ( 0.00044337115%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 3106.6026
Clp0000I Optimal - objective value 3106.6026
Clp0000I Optimal - objective value 3106.6026
Coin0511I After Postsolve, objective 3106.6026, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3106.602586 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 94 columns (94 integer (94 of which binary)) and 1357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.126%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.4159
Cbc0038I Pass   1: suminf.    3.40664 (28) obj. -1722.63 iterations 10
Cbc0038I Pass   2: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass   3: suminf.    1.68852 (17) obj. -531.703 iterations 11
Cbc0038I Pass   4: suminf.    0.45907 (6) obj. -192.433 iterations 11
Cbc0038I Solution found of 2.03353
Cbc0038I Rounding solution of -291.072 is better than previous of 2.03353

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -291.072 to -427.35 (0.02 seconds)
Cbc0038I Round again with cutoff of -682.408
Cbc0038I Pass   5: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass   6: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass   7: suminf.    0.67351 (3) obj. -682.408 iterations 26
Cbc0038I Pass   8: suminf.    0.42747 (3) obj. -742.196 iterations 1
Cbc0038I Pass   9: suminf.    0.81651 (13) obj. -682.408 iterations 3
Cbc0038I Pass  10: suminf.    0.81651 (13) obj. -682.408 iterations 0
Cbc0038I Pass  11: suminf.    0.35378 (2) obj. -682.408 iterations 15
Cbc0038I Pass  12: suminf.    0.35378 (2) obj. -682.408 iterations 0
Cbc0038I Pass  13: suminf.    0.70943 (2) obj. -682.408 iterations 1
Cbc0038I Pass  14: suminf.    0.46640 (2) obj. -842.32 iterations 1
Cbc0038I Pass  15: suminf.    0.35378 (2) obj. -682.408 iterations 1
Cbc0038I Pass  16: suminf.    2.25804 (9) obj. -682.408 iterations 20
Cbc0038I Pass  17: suminf.    1.37793 (6) obj. -682.408 iterations 11
Cbc0038I Pass  18: suminf.    0.49391 (2) obj. -682.408 iterations 5
Cbc0038I Pass  19: suminf.    0.49391 (2) obj. -682.408 iterations 0
Cbc0038I Pass  20: suminf.    0.74588 (2) obj. -682.408 iterations 1
Cbc0038I Pass  21: suminf.    0.55534 (2) obj. -807.788 iterations 1
Cbc0038I Pass  22: suminf.    3.50942 (16) obj. -682.408 iterations 32
Cbc0038I Pass  23: suminf.    3.50942 (16) obj. -682.408 iterations 4
Cbc0038I Pass  24: suminf.    0.41674 (3) obj. -682.408 iterations 16
Cbc0038I Pass  25: suminf.    0.40761 (2) obj. -688.136 iterations 1
Cbc0038I Pass  26: suminf.    0.59391 (2) obj. -682.408 iterations 5
Cbc0038I Pass  27: suminf.    0.59391 (2) obj. -682.408 iterations 0
Cbc0038I Pass  28: suminf.    0.70895 (2) obj. -682.408 iterations 1
Cbc0038I Pass  29: suminf.    0.55534 (2) obj. -783.488 iterations 1
Cbc0038I Pass  30: suminf.    2.63617 (9) obj. -1049.55 iterations 28
Cbc0038I Pass  31: suminf.    2.63617 (9) obj. -1049.55 iterations 11
Cbc0038I Pass  32: suminf.    0.95285 (3) obj. -682.408 iterations 10
Cbc0038I Pass  33: suminf.    0.95285 (3) obj. -682.408 iterations 0
Cbc0038I Pass  34: suminf.    0.97171 (3) obj. -682.408 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 33 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -427.35 to -633.649 (0.04 seconds)
Cbc0038I Round again with cutoff of -1141.51
Cbc0038I Pass  34: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass  35: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass  36: suminf.    1.75423 (24) obj. -1141.51 iterations 17
Cbc0038I Pass  37: suminf.    1.75423 (24) obj. -1141.51 iterations 0
Cbc0038I Pass  38: suminf.    0.85091 (7) obj. -1141.51 iterations 27
Cbc0038I Pass  39: suminf.    0.85091 (7) obj. -1141.51 iterations 0
Cbc0038I Pass  40: suminf.    0.90514 (6) obj. -1141.51 iterations 6
Cbc0038I Pass  41: suminf.    0.89347 (5) obj. -1141.51 iterations 1
Cbc0038I Pass  42: suminf.    0.81225 (3) obj. -1141.51 iterations 6
Cbc0038I Pass  43: suminf.    0.81225 (3) obj. -1141.51 iterations 1
Cbc0038I Pass  44: suminf.    0.86527 (3) obj. -1141.51 iterations 1
Cbc0038I Pass  45: suminf.    0.86527 (3) obj. -1141.51 iterations 0
Cbc0038I Pass  46: suminf.    0.81225 (3) obj. -1141.51 iterations 2
Cbc0038I Pass  47: suminf.    2.78807 (10) obj. -1141.51 iterations 19
Cbc0038I Pass  48: suminf.    2.78807 (10) obj. -1141.51 iterations 4
Cbc0038I Pass  49: suminf.    2.30363 (7) obj. -1141.51 iterations 7
Cbc0038I Pass  50: suminf.    1.58314 (5) obj. -1302.03 iterations 2
Cbc0038I Pass  51: suminf.    1.29987 (4) obj. -1141.51 iterations 5
Cbc0038I Pass  52: suminf.    1.18314 (4) obj. -1168.83 iterations 3
Cbc0038I Pass  53: suminf.    2.44755 (10) obj. -1281.19 iterations 26
Cbc0038I Pass  54: suminf.    2.44755 (10) obj. -1281.19 iterations 11
Cbc0038I Pass  55: suminf.    1.13591 (4) obj. -1141.51 iterations 14
Cbc0038I Pass  56: suminf.    1.13591 (4) obj. -1141.51 iterations 1
Cbc0038I Pass  57: suminf.    1.27726 (4) obj. -1141.51 iterations 2
Cbc0038I Pass  58: suminf.    1.04980 (4) obj. -1192.01 iterations 2
Cbc0038I Pass  59: suminf.    2.50166 (11) obj. -1141.51 iterations 16
Cbc0038I Pass  60: suminf.    2.50166 (11) obj. -1141.51 iterations 3
Cbc0038I Pass  61: suminf.    1.39534 (5) obj. -1141.51 iterations 10
Cbc0038I Pass  62: suminf.    1.39534 (5) obj. -1141.51 iterations 1
Cbc0038I Pass  63: suminf.    1.28789 (5) obj. -1141.51 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -633.649 - took 0.03 seconds
Cbc0012I Integer solution of -633.64947 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 93 rows 94 columns, reduced to 21 rows 25 columns
Cbc0012I Integer solution of -639.68847 found by DiveCoefficient after 479 iterations and 0 nodes (0.28 seconds)
Cbc0031I 50 added rows had average density of 11.4
Cbc0013I At root node, 50 cuts changed objective from -2977.9217 to -653.69055 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 1540 row cuts average 6.0 elements, 26 column cuts (26 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 173 row cuts average 53.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 178 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 224 row cuts average 47.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0016I Integer solution of -651.23047 found by strong branching after 480 iterations and 0 nodes (0.28 seconds)
Cbc0001I Search completed - best objective -651.2304684999999, took 480 iterations and 0 nodes (0.28 seconds)
Cbc0032I Strong branching done 10 times (34 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 48 (-2) columns and 274 (-11) elements
Clp1000I sum of infeasibilities 2.87542e-05 - average 3.09185e-07, 6 fixed columns
Coin0506I Presolve 81 (-12) rows, 42 (-6) columns and 238 (-36) elements
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 24.810696 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Coin0511I After Postsolve, objective 2171.7199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Clp0000I Optimal - objective value 2171.7199
Coin0511I After Postsolve, objective 2171.7199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2171.719906 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 48 columns (47 integer (47 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 9.80438
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -147.058 iterations 32
Cbc0038I Solution found of -147.058
Cbc0038I Relaxing continuous gives -147.058
Cbc0038I Rounding solution of -521.413 is better than previous of -147.058

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -521.413 to -651.23 (0.03 seconds)
Cbc0038I Round again with cutoff of -803.28
Cbc0038I Pass   2: suminf.    0.92615 (5) obj. -803.28 iterations 4
Cbc0038I Pass   3: suminf.    0.86264 (4) obj. -803.28 iterations 1
Cbc0038I Pass   4: suminf.    1.18361 (3) obj. -803.28 iterations 4
Cbc0038I Pass   5: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass   6: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass   7: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass   8: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass   9: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  10: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  11: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  12: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  13: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  14: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  15: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  16: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  17: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  18: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  19: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  20: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  21: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  22: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  23: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  24: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  25: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I Pass  26: suminf.    1.31134 (4) obj. -803.28 iterations 1
Cbc0038I Pass  27: suminf.    1.56429 (5) obj. -803.28 iterations 4
Cbc0038I Pass  28: suminf.    1.08127 (4) obj. -803.28 iterations 3
Cbc0038I Pass  29: suminf.    0.99807 (3) obj. -803.28 iterations 1
Cbc0038I Pass  30: suminf.    1.45822 (4) obj. -803.28 iterations 3
Cbc0038I Pass  31: suminf.    1.33963 (5) obj. -803.28 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -651.23 - took 0.03 seconds
Cbc0012I Integer solution of -651.23047 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 93 rows 48 columns, reduced to 56 rows 29 columns
Cbc0031I 21 added rows had average density of 31.619048
Cbc0013I At root node, 21 cuts changed objective from -2171.7199 to -1480.223 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6577 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2105 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 307 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 132 row cuts average 42.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -651.23047 best solution, best possible -1480.223 (0.68 seconds)
Cbc0001I Search completed - best objective -651.2304684999999, took 8849 iterations and 28 nodes (0.78 seconds)
Cbc0032I Strong branching done 468 times (9593 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 94 (-3) columns and 1355 (-59) elements
Clp1000I sum of infeasibilities 4.29086e-08 - average 4.61383e-10, 90 fixed columns
Coin0506I Presolve 2 (-91) rows, 3 (-91) columns and 5 (-1350) elements
Clp0006I 0  Obj 83.349353 Dual inf 5.595897 (3)
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 83.350469
Clp0000I Optimal - objective value 83.350469
Coin0511I After Postsolve, objective 83.350469, infeasibilities - dual 17.452 (1), primal 0 (0)
Coin0512I Presolved model was optimal, full model needs cleaning up
Clp0006I 0  Obj 83.350469 Dual inf 3778.1356 (61)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.8140406e-05 ( 0.00044337115%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 3106.6026
Clp0000I Optimal - objective value 3106.6026
Clp0000I Optimal - objective value 3106.6026
Coin0511I After Postsolve, objective 3106.6026, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3106.602586 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 94 columns (94 integer (94 of which binary)) and 1357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.126%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.4159
Cbc0038I Pass   1: suminf.    3.40664 (28) obj. -1722.63 iterations 10
Cbc0038I Pass   2: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass   3: suminf.    1.68852 (17) obj. -531.703 iterations 11
Cbc0038I Pass   4: suminf.    0.45907 (6) obj. -192.433 iterations 11
Cbc0038I Solution found of 2.03353
Cbc0038I Rounding solution of -291.072 is better than previous of 2.03353

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -291.072 to -427.35 (0.02 seconds)
Cbc0038I Round again with cutoff of -682.408
Cbc0038I Pass   5: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass   6: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass   7: suminf.    0.67351 (3) obj. -682.408 iterations 26
Cbc0038I Pass   8: suminf.    0.42747 (3) obj. -742.196 iterations 1
Cbc0038I Pass   9: suminf.    0.81651 (13) obj. -682.408 iterations 3
Cbc0038I Pass  10: suminf.    0.81651 (13) obj. -682.408 iterations 0
Cbc0038I Pass  11: suminf.    0.35378 (2) obj. -682.408 iterations 15
Cbc0038I Pass  12: suminf.    0.35378 (2) obj. -682.408 iterations 0
Cbc0038I Pass  13: suminf.    0.70943 (2) obj. -682.408 iterations 1
Cbc0038I Pass  14: suminf.    0.46640 (2) obj. -842.32 iterations 1
Cbc0038I Pass  15: suminf.    0.35378 (2) obj. -682.408 iterations 1
Cbc0038I Pass  16: suminf.    2.25804 (9) obj. -682.408 iterations 20
Cbc0038I Pass  17: suminf.    1.37793 (6) obj. -682.408 iterations 11
Cbc0038I Pass  18: suminf.    0.49391 (2) obj. -682.408 iterations 5
Cbc0038I Pass  19: suminf.    0.49391 (2) obj. -682.408 iterations 0
Cbc0038I Pass  20: suminf.    0.74588 (2) obj. -682.408 iterations 1
Cbc0038I Pass  21: suminf.    0.55534 (2) obj. -807.788 iterations 1
Cbc0038I Pass  22: suminf.    3.50942 (16) obj. -682.408 iterations 32
Cbc0038I Pass  23: suminf.    3.50942 (16) obj. -682.408 iterations 4
Cbc0038I Pass  24: suminf.    0.41674 (3) obj. -682.408 iterations 16
Cbc0038I Pass  25: suminf.    0.40761 (2) obj. -688.136 iterations 1
Cbc0038I Pass  26: suminf.    0.59391 (2) obj. -682.408 iterations 5
Cbc0038I Pass  27: suminf.    0.59391 (2) obj. -682.408 iterations 0
Cbc0038I Pass  28: suminf.    0.70895 (2) obj. -682.408 iterations 1
Cbc0038I Pass  29: suminf.    0.55534 (2) obj. -783.488 iterations 1
Cbc0038I Pass  30: suminf.    2.63617 (9) obj. -1049.55 iterations 28
Cbc0038I Pass  31: suminf.    2.63617 (9) obj. -1049.55 iterations 11
Cbc0038I Pass  32: suminf.    0.95285 (3) obj. -682.408 iterations 10
Cbc0038I Pass  33: suminf.    0.95285 (3) obj. -682.408 iterations 0
Cbc0038I Pass  34: suminf.    0.97171 (3) obj. -682.408 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 33 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -427.35 to -633.649 (0.04 seconds)
Cbc0038I Round again with cutoff of -1141.51
Cbc0038I Pass  34: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass  35: suminf.    3.40664 (28) obj. -1722.63 iterations 0
Cbc0038I Pass  36: suminf.    1.75423 (24) obj. -1141.51 iterations 17
Cbc0038I Pass  37: suminf.    1.75423 (24) obj. -1141.51 iterations 0
Cbc0038I Pass  38: suminf.    0.85091 (7) obj. -1141.51 iterations 27
Cbc0038I Pass  39: suminf.    0.85091 (7) obj. -1141.51 iterations 0
Cbc0038I Pass  40: suminf.    0.90514 (6) obj. -1141.51 iterations 6
Cbc0038I Pass  41: suminf.    0.89347 (5) obj. -1141.51 iterations 1
Cbc0038I Pass  42: suminf.    0.81225 (3) obj. -1141.51 iterations 6
Cbc0038I Pass  43: suminf.    0.81225 (3) obj. -1141.51 iterations 1
Cbc0038I Pass  44: suminf.    0.86527 (3) obj. -1141.51 iterations 1
Cbc0038I Pass  45: suminf.    0.86527 (3) obj. -1141.51 iterations 0
Cbc0038I Pass  46: suminf.    0.81225 (3) obj. -1141.51 iterations 2
Cbc0038I Pass  47: suminf.    2.78807 (10) obj. -1141.51 iterations 19
Cbc0038I Pass  48: suminf.    2.78807 (10) obj. -1141.51 iterations 4
Cbc0038I Pass  49: suminf.    2.30363 (7) obj. -1141.51 iterations 7
Cbc0038I Pass  50: suminf.    1.58314 (5) obj. -1302.03 iterations 2
Cbc0038I Pass  51: suminf.    1.29987 (4) obj. -1141.51 iterations 5
Cbc0038I Pass  52: suminf.    1.18314 (4) obj. -1168.83 iterations 3
Cbc0038I Pass  53: suminf.    2.44755 (10) obj. -1281.19 iterations 26
Cbc0038I Pass  54: suminf.    2.44755 (10) obj. -1281.19 iterations 11
Cbc0038I Pass  55: suminf.    1.13591 (4) obj. -1141.51 iterations 14
Cbc0038I Pass  56: suminf.    1.13591 (4) obj. -1141.51 iterations 1
Cbc0038I Pass  57: suminf.    1.27726 (4) obj. -1141.51 iterations 2
Cbc0038I Pass  58: suminf.    1.04980 (4) obj. -1192.01 iterations 2
Cbc0038I Pass  59: suminf.    2.50166 (11) obj. -1141.51 iterations 16
Cbc0038I Pass  60: suminf.    2.50166 (11) obj. -1141.51 iterations 3
Cbc0038I Pass  61: suminf.    1.39534 (5) obj. -1141.51 iterations 10
Cbc0038I Pass  62: suminf.    1.39534 (5) obj. -1141.51 iterations 1
Cbc0038I Pass  63: suminf.    1.28789 (5) obj. -1141.51 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -633.649 - took 0.03 seconds
Cbc0012I Integer solution of -633.64947 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 93 rows 94 columns, reduced to 21 rows 25 columns
Cbc0012I Integer solution of -639.68847 found by DiveCoefficient after 479 iterations and 0 nodes (0.27 seconds)
Cbc0031I 50 added rows had average density of 11.4
Cbc0013I At root node, 50 cuts changed objective from -2977.9217 to -653.69055 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 1540 row cuts average 6.0 elements, 26 column cuts (26 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 173 row cuts average 53.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 178 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 224 row cuts average 47.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0016I Integer solution of -651.23047 found by strong branching after 480 iterations and 0 nodes (0.27 seconds)
Cbc0001I Search completed - best objective -651.2304684999999, took 480 iterations and 0 nodes (0.27 seconds)
Cbc0032I Strong branching done 10 times (34 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.28

