Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 22 (-2) columns and 112 (-17) elements
Clp1000I sum of infeasibilities 6.36971e-05 - average 1.67624e-06, 2 fixed columns
Coin0506I Presolve 34 (-4) rows, 20 (-2) columns and 100 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 75.817546
Clp0000I Optimal - objective value 75.817546
Coin0511I After Postsolve, objective 75.817546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.817546
Clp0000I Optimal - objective value 75.817546
Clp0000I Optimal - objective value 75.817546
Coin0511I After Postsolve, objective 75.817546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.81754558 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.82804
Cbc0038I Solution found of -10.3867
Cbc0038I Relaxing continuous gives -15.6468
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -15.6468 to -38.2284 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.9559
Cbc0038I Pass   1: suminf.    1.09878 (7) obj. -41.9559 iterations 17
Cbc0038I Pass   2: suminf.    1.07324 (4) obj. -41.9559 iterations 14
Cbc0038I Pass   3: suminf.    1.01716 (3) obj. -41.9559 iterations 1
Cbc0038I Pass   4: suminf.    0.30045 (2) obj. -41.9559 iterations 4
Cbc0038I Pass   5: suminf.    0.29170 (2) obj. -41.9559 iterations 1
Cbc0038I Pass   6: suminf.    0.95486 (2) obj. -41.9559 iterations 2
Cbc0038I Pass   7: suminf.    0.76945 (2) obj. -41.9559 iterations 2
Cbc0038I Pass   8: suminf.    1.54202 (5) obj. -41.9559 iterations 4
Cbc0038I Pass   9: suminf.    1.18287 (3) obj. -41.9559 iterations 3
Cbc0038I Pass  10: suminf.    1.18287 (3) obj. -41.9559 iterations 0
Cbc0038I Pass  11: suminf.    0.19636 (2) obj. -41.9559 iterations 2
Cbc0038I Pass  12: suminf.    0.95521 (2) obj. -41.9559 iterations 2
Cbc0038I Pass  13: suminf.    1.48553 (8) obj. -41.9559 iterations 5
Cbc0038I Pass  14: suminf.    1.42550 (6) obj. -41.9559 iterations 2
Cbc0038I Pass  15: suminf.    0.84801 (3) obj. -41.9559 iterations 10
Cbc0038I Pass  16: suminf.    0.76198 (3) obj. -41.9559 iterations 4
Cbc0038I Pass  17: suminf.    0.42429 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  18: suminf.    0.37598 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  19: suminf.    0.44301 (3) obj. -41.9559 iterations 2
Cbc0038I Pass  20: suminf.    0.37598 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  21: suminf.    1.05123 (4) obj. -41.9559 iterations 4
Cbc0038I Pass  22: suminf.    1.05123 (4) obj. -41.9559 iterations 1
Cbc0038I Pass  23: suminf.    0.83737 (5) obj. -41.9559 iterations 5
Cbc0038I Pass  24: suminf.    0.43049 (1) obj. -41.9559 iterations 3
Cbc0038I Pass  25: suminf.    0.26166 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  26: suminf.    1.45200 (7) obj. -41.9559 iterations 9
Cbc0038I Pass  27: suminf.    1.20638 (6) obj. -41.9559 iterations 5
Cbc0038I Pass  28: suminf.    0.47095 (2) obj. -41.9559 iterations 7
Cbc0038I Pass  29: suminf.    0.35009 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  30: suminf.    0.45718 (1) obj. -41.9559 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -38.2284 - took 0.04 seconds
Cbc0012I Integer solution of -38.22843 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 13.833333
Cbc0013I At root node, 12 cuts changed objective from -75.502481 to -56.252018 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1394 row cuts average 4.2 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 578 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 127 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38.22843, took 2079 iterations and 6 nodes (0.17 seconds)
Cbc0032I Strong branching done 74 times (749 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-10) rows, 40 (-4) columns and 293 (-67) elements
Clp1000I sum of infeasibilities 1.95318e-10 - average 5.42549e-12, 7 fixed columns
Coin0506I Presolve 30 (-6) rows, 33 (-7) columns and 199 (-94) elements
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 3.6429658 - largest nonzero change 0 ( 0%) - largest zero change 2.6094575e-05
Clp0000I Optimal - objective value 91.784194
Clp0000I Optimal - objective value 91.784194
Coin0511I After Postsolve, objective 91.784194, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.784194
Clp0000I Optimal - objective value 91.784194
Clp0000I Optimal - objective value 91.784194
Coin0511I After Postsolve, objective 91.784194, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.78419411 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 297 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 3.08789
Cbc0038I Pass   1: suminf.    0.87571 (7) obj. -74.0775 iterations 4
Cbc0038I Pass   2: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Solution found of -10.7526
Cbc0038I Rounding solution of -30.8584 is better than previous of -10.7526

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.0996
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Pass   4: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Pass   5: suminf.    0.34734 (1) obj. -36.0996 iterations 8
Cbc0038I Pass   6: suminf.    0.12000 (1) obj. -44.9285 iterations 1
Cbc0038I Pass   7: suminf.    1.08061 (7) obj. -36.0996 iterations 11
Cbc0038I Pass   8: suminf.    1.08061 (7) obj. -36.0996 iterations 1
Cbc0038I Pass   9: suminf.    1.27297 (4) obj. -36.0996 iterations 7
Cbc0038I Pass  10: suminf.    0.99871 (6) obj. -36.0996 iterations 2
Cbc0038I Pass  11: suminf.    1.33094 (3) obj. -36.0996 iterations 7
Cbc0038I Pass  12: suminf.    0.31796 (2) obj. -36.0996 iterations 1
Cbc0038I Pass  13: suminf.    0.23368 (2) obj. -36.4188 iterations 2
Cbc0038I Pass  14: suminf.    0.24964 (2) obj. -36.0996 iterations 2
Cbc0038I Pass  15: suminf.    1.22866 (6) obj. -36.0996 iterations 8
Cbc0038I Pass  16: suminf.    1.22866 (6) obj. -36.0996 iterations 2
Cbc0038I Pass  17: suminf.    0.53530 (2) obj. -36.0996 iterations 5
Cbc0038I Pass  18: suminf.    0.43609 (2) obj. -38.0839 iterations 1
Cbc0038I Pass  19: suminf.    0.53530 (2) obj. -36.0996 iterations 2
Cbc0038I Pass  20: suminf.    1.53230 (6) obj. -36.0996 iterations 7
Cbc0038I Pass  21: suminf.    0.58953 (3) obj. -38.9304 iterations 5
Cbc0038I Pass  22: suminf.    1.65502 (8) obj. -50.5142 iterations 8
Cbc0038I Pass  23: suminf.    0.90421 (6) obj. -38.5238 iterations 1
Cbc0038I Pass  24: suminf.    0.99547 (3) obj. -36.0996 iterations 8
Cbc0038I Pass  25: suminf.    0.56588 (3) obj. -36.0996 iterations 2
Cbc0038I Pass  26: suminf.    0.70292 (2) obj. -36.0996 iterations 4
Cbc0038I Pass  27: suminf.    0.62703 (2) obj. -36.0996 iterations 1
Cbc0038I Pass  28: suminf.    1.84472 (9) obj. -36.0996 iterations 9
Cbc0038I Pass  29: suminf.    1.37714 (7) obj. -46.0274 iterations 4
Cbc0038I Pass  30: suminf.    0.70292 (2) obj. -36.0996 iterations 8
Cbc0038I Pass  31: suminf.    1.66774 (8) obj. -36.0996 iterations 15
Cbc0038I Pass  32: suminf.    1.59692 (7) obj. -40.8342 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 24 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -10.7526 to -38.2284 (0.02 seconds)
Cbc0038I Round again with cutoff of -47.2368
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Pass  33: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Pass  34: suminf.    0.23541 (2) obj. -47.2368 iterations 7
Cbc0038I Pass  35: suminf.    0.17865 (2) obj. -47.2368 iterations 1
Cbc0038I Pass  36: suminf.    0.26414 (2) obj. -47.2368 iterations 1
Cbc0038I Pass  37: suminf.    2.45262 (13) obj. -47.2368 iterations 13
Cbc0038I Pass  38: suminf.    2.45262 (13) obj. -47.2368 iterations 1
Cbc0038I Pass  39: suminf.    1.44356 (6) obj. -47.2368 iterations 17
Cbc0038I Pass  40: suminf.    1.16901 (4) obj. -47.2368 iterations 3
Cbc0038I Pass  41: suminf.    0.97467 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  42: suminf.    0.68517 (4) obj. -48.0118 iterations 2
Cbc0038I Pass  43: suminf.    1.55528 (4) obj. -47.2368 iterations 5
Cbc0038I Pass  44: suminf.    1.55528 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  45: suminf.    0.71073 (5) obj. -47.2368 iterations 3
Cbc0038I Pass  46: suminf.    0.70938 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  47: suminf.    0.52307 (3) obj. -47.2368 iterations 2
Cbc0038I Pass  48: suminf.    0.49996 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  49: suminf.    1.38536 (5) obj. -47.2368 iterations 4
Cbc0038I Pass  50: suminf.    1.07565 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  51: suminf.    0.52307 (3) obj. -47.2368 iterations 2
Cbc0038I Pass  52: suminf.    1.04184 (6) obj. -47.2368 iterations 7
Cbc0038I Pass  53: suminf.    0.78635 (5) obj. -48.3322 iterations 4
Cbc0038I Pass  54: suminf.    1.25949 (5) obj. -47.2368 iterations 5
Cbc0038I Pass  55: suminf.    0.90561 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  56: suminf.    1.19416 (5) obj. -47.2368 iterations 3
Cbc0038I Pass  57: suminf.    1.16633 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  58: suminf.    0.90561 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  59: suminf.    1.79677 (9) obj. -47.2368 iterations 9
Cbc0038I Pass  60: suminf.    1.08131 (6) obj. -47.2368 iterations 3
Cbc0038I Pass  61: suminf.    1.06183 (7) obj. -47.2368 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -38.2284 - took 0.02 seconds
Cbc0012I Integer solution of -38.22843 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 18 rows 19 columns
Cbc0031I 19 added rows had average density of 11.631579
Cbc0013I At root node, 19 cuts changed objective from -83.269684 to -40.108374 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1785 row cuts average 4.1 elements, 6 column cuts (6 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 611 row cuts average 28.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 174 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 249 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 143 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.754 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.22843 best solution, best possible -40.108083 (1.51 seconds)
Cbc0001I Search completed - best objective -38.22843, took 2095 iterations and 2 nodes (1.63 seconds)
Cbc0032I Strong branching done 38 times (453 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 22 (-2) columns and 112 (-17) elements
Clp1000I sum of infeasibilities 6.36971e-05 - average 1.67624e-06, 2 fixed columns
Coin0506I Presolve 34 (-4) rows, 20 (-2) columns and 100 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 75.817546
Clp0000I Optimal - objective value 75.817546
Coin0511I After Postsolve, objective 75.817546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 75.817546
Clp0000I Optimal - objective value 75.817546
Clp0000I Optimal - objective value 75.817546
Coin0511I After Postsolve, objective 75.817546, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.81754558 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 114 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.82804
Cbc0038I Solution found of -10.3867
Cbc0038I Relaxing continuous gives -15.6468
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -15.6468 to -38.2284 (0.02 seconds)
Cbc0038I Round again with cutoff of -41.9559
Cbc0038I Pass   1: suminf.    1.09878 (7) obj. -41.9559 iterations 17
Cbc0038I Pass   2: suminf.    1.07324 (4) obj. -41.9559 iterations 14
Cbc0038I Pass   3: suminf.    1.01716 (3) obj. -41.9559 iterations 1
Cbc0038I Pass   4: suminf.    0.30045 (2) obj. -41.9559 iterations 4
Cbc0038I Pass   5: suminf.    0.29170 (2) obj. -41.9559 iterations 1
Cbc0038I Pass   6: suminf.    0.95486 (2) obj. -41.9559 iterations 2
Cbc0038I Pass   7: suminf.    0.76945 (2) obj. -41.9559 iterations 2
Cbc0038I Pass   8: suminf.    1.54202 (5) obj. -41.9559 iterations 4
Cbc0038I Pass   9: suminf.    1.18287 (3) obj. -41.9559 iterations 3
Cbc0038I Pass  10: suminf.    1.18287 (3) obj. -41.9559 iterations 0
Cbc0038I Pass  11: suminf.    0.19636 (2) obj. -41.9559 iterations 2
Cbc0038I Pass  12: suminf.    0.95521 (2) obj. -41.9559 iterations 2
Cbc0038I Pass  13: suminf.    1.48553 (8) obj. -41.9559 iterations 5
Cbc0038I Pass  14: suminf.    1.42550 (6) obj. -41.9559 iterations 2
Cbc0038I Pass  15: suminf.    0.84801 (3) obj. -41.9559 iterations 10
Cbc0038I Pass  16: suminf.    0.76198 (3) obj. -41.9559 iterations 4
Cbc0038I Pass  17: suminf.    0.42429 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  18: suminf.    0.37598 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  19: suminf.    0.44301 (3) obj. -41.9559 iterations 2
Cbc0038I Pass  20: suminf.    0.37598 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  21: suminf.    1.05123 (4) obj. -41.9559 iterations 4
Cbc0038I Pass  22: suminf.    1.05123 (4) obj. -41.9559 iterations 1
Cbc0038I Pass  23: suminf.    0.83737 (5) obj. -41.9559 iterations 5
Cbc0038I Pass  24: suminf.    0.43049 (1) obj. -41.9559 iterations 3
Cbc0038I Pass  25: suminf.    0.26166 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  26: suminf.    1.45200 (7) obj. -41.9559 iterations 9
Cbc0038I Pass  27: suminf.    1.20638 (6) obj. -41.9559 iterations 5
Cbc0038I Pass  28: suminf.    0.47095 (2) obj. -41.9559 iterations 7
Cbc0038I Pass  29: suminf.    0.35009 (1) obj. -41.9559 iterations 2
Cbc0038I Pass  30: suminf.    0.45718 (1) obj. -41.9559 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -38.2284 - took 0.02 seconds
Cbc0012I Integer solution of -38.22843 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 13.833333
Cbc0013I At root node, 12 cuts changed objective from -75.502481 to -56.252018 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1394 row cuts average 4.2 elements, 1 column cuts (1 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 578 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 127 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38.22843, took 2079 iterations and 6 nodes (0.17 seconds)
Cbc0032I Strong branching done 74 times (749 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 2, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 40 (-5) columns and 293 (-68) elements
Clp1000I sum of infeasibilities 1.95318e-10 - average 5.42549e-12, 7 fixed columns
Coin0506I Presolve 30 (-6) rows, 33 (-7) columns and 199 (-94) elements
Clp0029I End of values pass after 33 iterations
Clp0014I Perturbing problem by 0.001% of 3.6429658 - largest nonzero change 0 ( 0%) - largest zero change 2.6094575e-05
Clp0000I Optimal - objective value 91.784194
Clp0000I Optimal - objective value 91.784194
Coin0511I After Postsolve, objective 91.784194, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.784194
Clp0000I Optimal - objective value 91.784194
Clp0000I Optimal - objective value 91.784194
Coin0511I After Postsolve, objective 91.784194, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.78419411 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 40 columns (40 integer (40 of which binary)) and 297 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 3.08789
Cbc0038I Pass   1: suminf.    0.87571 (7) obj. -74.0775 iterations 4
Cbc0038I Pass   2: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Solution found of -10.7526
Cbc0038I Rounding solution of -30.8584 is better than previous of -10.7526

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.0996
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Pass   4: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Pass   5: suminf.    0.34734 (1) obj. -36.0996 iterations 8
Cbc0038I Pass   6: suminf.    0.12000 (1) obj. -44.9285 iterations 1
Cbc0038I Pass   7: suminf.    1.08061 (7) obj. -36.0996 iterations 11
Cbc0038I Pass   8: suminf.    1.08061 (7) obj. -36.0996 iterations 1
Cbc0038I Pass   9: suminf.    1.27297 (4) obj. -36.0996 iterations 7
Cbc0038I Pass  10: suminf.    0.99871 (6) obj. -36.0996 iterations 2
Cbc0038I Pass  11: suminf.    1.33094 (3) obj. -36.0996 iterations 7
Cbc0038I Pass  12: suminf.    0.31796 (2) obj. -36.0996 iterations 1
Cbc0038I Pass  13: suminf.    0.23368 (2) obj. -36.4188 iterations 2
Cbc0038I Pass  14: suminf.    0.24964 (2) obj. -36.0996 iterations 2
Cbc0038I Pass  15: suminf.    1.22866 (6) obj. -36.0996 iterations 8
Cbc0038I Pass  16: suminf.    1.22866 (6) obj. -36.0996 iterations 2
Cbc0038I Pass  17: suminf.    0.53530 (2) obj. -36.0996 iterations 5
Cbc0038I Pass  18: suminf.    0.43609 (2) obj. -38.0839 iterations 1
Cbc0038I Pass  19: suminf.    0.53530 (2) obj. -36.0996 iterations 2
Cbc0038I Pass  20: suminf.    1.53230 (6) obj. -36.0996 iterations 7
Cbc0038I Pass  21: suminf.    0.58953 (3) obj. -38.9304 iterations 5
Cbc0038I Pass  22: suminf.    1.65502 (8) obj. -50.5142 iterations 8
Cbc0038I Pass  23: suminf.    0.90421 (6) obj. -38.5238 iterations 1
Cbc0038I Pass  24: suminf.    0.99547 (3) obj. -36.0996 iterations 8
Cbc0038I Pass  25: suminf.    0.56588 (3) obj. -36.0996 iterations 2
Cbc0038I Pass  26: suminf.    0.70292 (2) obj. -36.0996 iterations 4
Cbc0038I Pass  27: suminf.    0.62703 (2) obj. -36.0996 iterations 1
Cbc0038I Pass  28: suminf.    1.84472 (9) obj. -36.0996 iterations 9
Cbc0038I Pass  29: suminf.    1.37714 (7) obj. -46.0274 iterations 4
Cbc0038I Pass  30: suminf.    0.70292 (2) obj. -36.0996 iterations 8
Cbc0038I Pass  31: suminf.    1.66774 (8) obj. -36.0996 iterations 15
Cbc0038I Pass  32: suminf.    1.59692 (7) obj. -40.8342 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 24 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -10.7526 to -38.2284 (0.03 seconds)
Cbc0038I Round again with cutoff of -47.2368
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Pass  33: suminf.    0.87571 (7) obj. -74.0775 iterations 0
Cbc0038I Pass  34: suminf.    0.23541 (2) obj. -47.2368 iterations 7
Cbc0038I Pass  35: suminf.    0.17865 (2) obj. -47.2368 iterations 1
Cbc0038I Pass  36: suminf.    0.26414 (2) obj. -47.2368 iterations 1
Cbc0038I Pass  37: suminf.    2.45262 (13) obj. -47.2368 iterations 13
Cbc0038I Pass  38: suminf.    2.45262 (13) obj. -47.2368 iterations 1
Cbc0038I Pass  39: suminf.    1.44356 (6) obj. -47.2368 iterations 17
Cbc0038I Pass  40: suminf.    1.16901 (4) obj. -47.2368 iterations 3
Cbc0038I Pass  41: suminf.    0.97467 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  42: suminf.    0.68517 (4) obj. -48.0118 iterations 2
Cbc0038I Pass  43: suminf.    1.55528 (4) obj. -47.2368 iterations 5
Cbc0038I Pass  44: suminf.    1.55528 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  45: suminf.    0.71073 (5) obj. -47.2368 iterations 3
Cbc0038I Pass  46: suminf.    0.70938 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  47: suminf.    0.52307 (3) obj. -47.2368 iterations 2
Cbc0038I Pass  48: suminf.    0.49996 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  49: suminf.    1.38536 (5) obj. -47.2368 iterations 4
Cbc0038I Pass  50: suminf.    1.07565 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  51: suminf.    0.52307 (3) obj. -47.2368 iterations 2
Cbc0038I Pass  52: suminf.    1.04184 (6) obj. -47.2368 iterations 7
Cbc0038I Pass  53: suminf.    0.78635 (5) obj. -48.3322 iterations 4
Cbc0038I Pass  54: suminf.    1.25949 (5) obj. -47.2368 iterations 5
Cbc0038I Pass  55: suminf.    0.90561 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  56: suminf.    1.19416 (5) obj. -47.2368 iterations 3
Cbc0038I Pass  57: suminf.    1.16633 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  58: suminf.    0.90561 (4) obj. -47.2368 iterations 1
Cbc0038I Pass  59: suminf.    1.79677 (9) obj. -47.2368 iterations 9
Cbc0038I Pass  60: suminf.    1.08131 (6) obj. -47.2368 iterations 3
Cbc0038I Pass  61: suminf.    1.06183 (7) obj. -47.2368 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 40 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -38.2284 - took 0.02 seconds
Cbc0012I Integer solution of -38.22843 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 40 columns, reduced to 18 rows 19 columns
Cbc0031I 19 added rows had average density of 11.631579
Cbc0013I At root node, 19 cuts changed objective from -83.269684 to -40.108374 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1785 row cuts average 4.1 elements, 6 column cuts (6 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 611 row cuts average 28.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 174 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 249 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 143 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.780 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.22843 best solution, best possible -40.108083 (1.61 seconds)
Cbc0001I Search completed - best objective -38.22843, took 2095 iterations and 2 nodes (1.75 seconds)
Cbc0032I Strong branching done 38 times (453 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.75

