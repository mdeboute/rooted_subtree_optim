Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 96 (-7) columns and 540 (-63) elements
Clp1000I sum of infeasibilities 2.54088e-05 - average 1.42746e-07, 17 fixed columns
Coin0506I Presolve 143 (-35) rows, 78 (-18) columns and 434 (-106) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 2.7600686 - largest nonzero change 0 ( 0%) - largest zero change 2.99042e-05
Clp0000I Optimal - objective value 89.543379
Clp0000I Optimal - objective value 89.543379
Coin0511I After Postsolve, objective 89.543379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.543379
Clp0000I Optimal - objective value 89.543379
Clp0000I Optimal - objective value 89.543379
Coin0511I After Postsolve, objective 89.543379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.54337937 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 96 columns (95 integer (95 of which binary)) and 540 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.950%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.4162
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.849 iterations 41
Cbc0038I Solution found of -16.849
Cbc0038I Relaxing continuous gives -16.849
Cbc0038I Rounding solution of -38.6654 is better than previous of -16.849

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 96 columns, reduced to 51 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -38.6654 to -58.2873 (0.03 seconds)
Cbc0038I Round again with cutoff of -61.413
Cbc0038I Pass   2: suminf.    2.23516 (6) obj. -61.413 iterations 6
Cbc0038I Pass   3: suminf.    1.66013 (5) obj. -61.413 iterations 3
Cbc0038I Pass   4: suminf.    0.81646 (3) obj. -61.413 iterations 4
Cbc0038I Pass   5: suminf.    0.81599 (3) obj. -61.413 iterations 1
Cbc0038I Pass   6: suminf.    0.47354 (2) obj. -61.413 iterations 5
Cbc0038I Pass   7: suminf.    0.46337 (3) obj. -61.413 iterations 2
Cbc0038I Pass   8: suminf.    0.83466 (4) obj. -61.413 iterations 2
Cbc0038I Pass   9: suminf.    4.51582 (15) obj. -61.413 iterations 14
Cbc0038I Pass  10: suminf.    2.26374 (10) obj. -61.413 iterations 9
Cbc0038I Pass  11: suminf.    2.25683 (9) obj. -61.413 iterations 1
Cbc0038I Pass  12: suminf.    1.82274 (4) obj. -61.413 iterations 12
Cbc0038I Pass  13: suminf.    1.16332 (3) obj. -61.413 iterations 2
Cbc0038I Pass  14: suminf.    1.07313 (3) obj. -61.413 iterations 1
Cbc0038I Pass  15: suminf.    0.50850 (4) obj. -61.413 iterations 4
Cbc0038I Pass  16: suminf.    1.45312 (4) obj. -61.413 iterations 5
Cbc0038I Pass  17: suminf.    0.92457 (2) obj. -61.413 iterations 4
Cbc0038I Pass  18: suminf.    0.82843 (3) obj. -61.413 iterations 2
Cbc0038I Pass  19: suminf.    1.21310 (4) obj. -61.413 iterations 4
Cbc0038I Pass  20: suminf.    0.90067 (2) obj. -61.413 iterations 5
Cbc0038I Pass  21: suminf.    0.54130 (3) obj. -61.413 iterations 4
Cbc0038I Pass  22: suminf.    0.50850 (4) obj. -61.413 iterations 1
Cbc0038I Pass  23: suminf.    1.45312 (4) obj. -61.413 iterations 5
Cbc0038I Pass  24: suminf.    0.92457 (2) obj. -61.413 iterations 4
Cbc0038I Pass  25: suminf.    0.82843 (3) obj. -61.413 iterations 2
Cbc0038I Pass  26: suminf.    1.21310 (4) obj. -61.413 iterations 4
Cbc0038I Pass  27: suminf.    0.90067 (2) obj. -61.413 iterations 5
Cbc0038I Pass  28: suminf.    0.54130 (3) obj. -61.413 iterations 4
Cbc0038I Pass  29: suminf.    0.50850 (4) obj. -61.413 iterations 1
Cbc0038I Pass  30: suminf.    1.45312 (4) obj. -61.413 iterations 5
Cbc0038I Pass  31: suminf.    0.92457 (2) obj. -61.413 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 96 columns, reduced to 63 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -58.2873 - took 0.04 seconds
Cbc0012I Integer solution of -58.287347 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 178 rows 96 columns, reduced to 51 rows 30 columns
Cbc0031I 19 added rows had average density of 76.736842
Cbc0013I At root node, 19 cuts changed objective from -89.543379 to -71.24208 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6076 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1621 row cuts average 95.8 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 94.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 3 nodes, 4 on tree, -58.287347 best solution, best possible -71.24208 (0.67 seconds)
Cbc0001I Search completed - best objective -58.28734700000001, took 4760 iterations and 18 nodes (0.71 seconds)
Cbc0032I Strong branching done 264 times (6468 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 6, 110 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-71) rows, 145 (-57) columns and 2916 (-2737) elements
Clp1000I sum of infeasibilities 7.55329e-07 - average 5.67917e-09, 27 fixed columns
Coin0506I Presolve 107 (-26) rows, 118 (-27) columns and 2066 (-850) elements
Clp0006I 0  Obj 92.46259 Dual inf 9.0771953 (112)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 2.1595224 - largest nonzero change 2.5849013e-05 ( 0.0015823696%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 111.62867
Clp0000I Optimal - objective value 111.62867
Coin0511I After Postsolve, objective 111.62867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 111.62867
Clp0000I Optimal - objective value 111.62867
Clp0000I Optimal - objective value 111.62867
Clp0000I Optimal - objective value 111.62867
Coin0511I After Postsolve, objective 111.62867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 111.6286702 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 145 columns (145 integer (145 of which binary)) and 2918 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.498%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 6.54125
Cbc0038I Pass   1: suminf.    2.90042 (42) obj. -96.2496 iterations 35
Cbc0038I Pass   2: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass   3: suminf.    0.73226 (17) obj. -54.5851 iterations 25
Cbc0038I Solution found of -18.0269
Cbc0038I Rounding solution of -31.773 is better than previous of -18.0269

Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -31.773 to -31.8051 (0.04 seconds)
Cbc0038I Round again with cutoff of -38.7714
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass   5: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass   6: suminf.    1.47709 (28) obj. -69.4859 iterations 14
Cbc0038I Pass   7: suminf.    0.57921 (14) obj. -50.7886 iterations 14
Cbc0038I Pass   8: suminf.    0.10789 (3) obj. -38.7714 iterations 16
Cbc0038I Pass   9: suminf.    0.10589 (3) obj. -38.7714 iterations 2
Cbc0038I Pass  10: suminf.    0.61226 (2) obj. -38.7714 iterations 3
Cbc0038I Pass  11: suminf.    0.15125 (2) obj. -46.2013 iterations 2
Cbc0038I Pass  12: suminf.    0.17243 (2) obj. -38.7714 iterations 2
Cbc0038I Pass  13: suminf.    0.16983 (2) obj. -38.7714 iterations 2
Cbc0038I Pass  14: suminf.    2.38142 (18) obj. -38.7714 iterations 38
Cbc0038I Pass  15: suminf.    2.02959 (17) obj. -38.7714 iterations 9
Cbc0038I Pass  16: suminf.    1.55817 (5) obj. -38.7714 iterations 35
Cbc0038I Pass  17: suminf.    1.55817 (5) obj. -38.7714 iterations 0
Cbc0038I Pass  18: suminf.    0.87522 (4) obj. -38.7714 iterations 11
Cbc0038I Pass  19: suminf.    0.65937 (4) obj. -38.7714 iterations 3
Cbc0038I Pass  20: suminf.    1.23893 (4) obj. -38.7714 iterations 7
Cbc0038I Pass  21: suminf.    1.23893 (4) obj. -38.7714 iterations 2
Cbc0038I Pass  22: suminf.    0.55057 (3) obj. -38.7714 iterations 6
Cbc0038I Pass  23: suminf.    0.55057 (3) obj. -38.7714 iterations 2
Cbc0038I Pass  24: suminf.    1.38399 (3) obj. -38.7714 iterations 6
Cbc0038I Pass  25: suminf.    0.82682 (3) obj. -38.7714 iterations 2
Cbc0038I Pass  26: suminf.    2.27853 (14) obj. -38.7714 iterations 28
Cbc0038I Pass  27: suminf.    1.16863 (10) obj. -38.7714 iterations 12
Cbc0038I Pass  28: suminf.    0.65198 (8) obj. -39.0855 iterations 3
Cbc0038I Pass  29: suminf.    0.99325 (4) obj. -38.7714 iterations 24
Cbc0038I Pass  30: suminf.    0.66196 (3) obj. -38.7714 iterations 9
Cbc0038I Pass  31: suminf.    1.15288 (9) obj. -38.7714 iterations 13
Cbc0038I Pass  32: suminf.    1.15288 (9) obj. -38.7714 iterations 0
Cbc0038I Pass  33: suminf.    4.20479 (14) obj. -38.7714 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 23 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -31.8051 to -35.8025 (0.07 seconds)
Cbc0038I Round again with cutoff of -51.3107
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass  34: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass  35: suminf.    0.63142 (15) obj. -51.3107 iterations 29
Cbc0038I Pass  36: suminf.    0.48913 (5) obj. -51.3107 iterations 24
Cbc0038I Pass  37: suminf.    0.46168 (11) obj. -51.3107 iterations 5
Cbc0038I Pass  38: suminf.    2.03664 (9) obj. -51.3107 iterations 13
Cbc0038I Pass  39: suminf.    0.26200 (3) obj. -52.7583 iterations 18
Cbc0038I Pass  40: suminf.    0.26200 (3) obj. -52.7583 iterations 0
Cbc0038I Pass  41: suminf.    0.62388 (3) obj. -51.3107 iterations 6
Cbc0038I Pass  42: suminf.    0.82646 (9) obj. -51.3107 iterations 30
Cbc0038I Pass  43: suminf.    0.70833 (11) obj. -51.3107 iterations 9
Cbc0038I Pass  44: suminf.    1.08804 (4) obj. -51.3107 iterations 18
Cbc0038I Pass  45: suminf.    0.60620 (4) obj. -51.3107 iterations 3
Cbc0038I Pass  46: suminf.    1.36489 (10) obj. -51.3107 iterations 13
Cbc0038I Pass  47: suminf.    0.74897 (4) obj. -51.3107 iterations 7
Cbc0038I Pass  48: suminf.    0.76299 (3) obj. -51.3107 iterations 10
Cbc0038I Pass  49: suminf.    0.71088 (3) obj. -51.3107 iterations 7
Cbc0038I Pass  50: suminf.    1.34331 (15) obj. -51.3107 iterations 47
Cbc0038I Pass  51: suminf.    1.20850 (14) obj. -51.3107 iterations 7
Cbc0038I Pass  52: suminf.    0.75311 (6) obj. -51.3107 iterations 28
Cbc0038I Pass  53: suminf.    0.57032 (7) obj. -51.3107 iterations 4
Cbc0038I Pass  54: suminf.    2.16426 (12) obj. -51.3107 iterations 23
Cbc0038I Pass  55: suminf.    2.16426 (12) obj. -51.3107 iterations 0
Cbc0038I Pass  56: suminf.    2.30345 (10) obj. -51.3107 iterations 11
Cbc0038I Pass  57: suminf.    0.33612 (4) obj. -53.5359 iterations 16
Cbc0038I Pass  58: suminf.    0.33612 (4) obj. -53.5359 iterations 0
Cbc0038I Pass  59: suminf.    0.44614 (4) obj. -51.3107 iterations 10
Cbc0038I Pass  60: suminf.    0.41797 (10) obj. -51.3107 iterations 6
Cbc0038I Pass  61: suminf.    2.30345 (10) obj. -51.3107 iterations 8
Cbc0038I Pass  62: suminf.    0.33612 (4) obj. -53.5359 iterations 16
Cbc0038I Rounding solution of -36.698 is better than previous of -35.8025

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -36.698 to -42.6303 (0.10 seconds)
Cbc0038I Round again with cutoff of -66.3579
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass  63: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass  64: suminf.    1.40687 (20) obj. -66.3579 iterations 27
Cbc0038I Pass  65: suminf.    1.02052 (20) obj. -67.9033 iterations 7
Cbc0038I Pass  66: suminf.    0.95320 (18) obj. -66.3579 iterations 36
Cbc0038I Pass  67: suminf.    0.95320 (18) obj. -66.3579 iterations 0
Cbc0038I Pass  68: suminf.    1.22484 (11) obj. -66.3579 iterations 17
Cbc0038I Pass  69: suminf.    1.21270 (16) obj. -66.3579 iterations 2
Cbc0038I Pass  70: suminf.    1.11114 (16) obj. -66.3579 iterations 7
Cbc0038I Pass  71: suminf.    1.11114 (16) obj. -66.3579 iterations 3
Cbc0038I Pass  72: suminf.    2.53358 (16) obj. -66.3579 iterations 9
Cbc0038I Pass  73: suminf.    1.23875 (11) obj. -66.3579 iterations 18
Cbc0038I Pass  74: suminf.    0.89264 (10) obj. -67.3538 iterations 2
Cbc0038I Pass  75: suminf.    1.25861 (10) obj. -66.3579 iterations 13
Cbc0038I Pass  76: suminf.    1.21270 (16) obj. -66.3579 iterations 4
Cbc0038I Pass  77: suminf.    2.53358 (16) obj. -66.3579 iterations 9
Cbc0038I Pass  78: suminf.    1.23875 (11) obj. -66.3579 iterations 18
Cbc0038I Pass  79: suminf.    0.89264 (10) obj. -67.3538 iterations 2
Cbc0038I Pass  80: suminf.    1.25861 (10) obj. -66.3579 iterations 13
Cbc0038I Pass  81: suminf.    1.21270 (16) obj. -66.3579 iterations 4
Cbc0038I Pass  82: suminf.    2.53358 (16) obj. -66.3579 iterations 9
Cbc0038I Pass  83: suminf.    1.23875 (11) obj. -66.3579 iterations 18
Cbc0038I Pass  84: suminf.    0.89264 (10) obj. -67.3538 iterations 2
Cbc0038I Pass  85: suminf.    1.25861 (10) obj. -66.3579 iterations 14
Cbc0038I Pass  86: suminf.    1.21270 (16) obj. -66.3579 iterations 4
Cbc0038I Pass  87: suminf.    2.53358 (16) obj. -66.3579 iterations 9
Cbc0038I Pass  88: suminf.    1.23875 (11) obj. -66.3579 iterations 18
Cbc0038I Pass  89: suminf.    0.89264 (10) obj. -67.3538 iterations 2
Cbc0038I Pass  90: suminf.    1.25861 (10) obj. -66.3579 iterations 13
Cbc0038I Pass  91: suminf.    1.21270 (16) obj. -66.3579 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -42.6303 - took 0.10 seconds
Cbc0012I Integer solution of -42.630267 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 15 rows 16 columns
Cbc0031I 59 added rows had average density of 26.40678
Cbc0013I At root node, 59 cuts changed objective from -101.46794 to -60.968658 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8372 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1114 row cuts average 130.7 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 400 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 832 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 278 row cuts average 87.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 110 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.672 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -42.630267 best solution, best possible -60.968658 (2.47 seconds)
Cbc0012I Integer solution of -44.496977 found by rounding after 3056 iterations and 2 nodes (2.61 seconds)
Cbc0012I Integer solution of -52.087677 found by DiveCoefficient after 3056 iterations and 2 nodes (2.61 seconds)
Cbc0012I Integer solution of -54.381147 found by DiveCoefficient after 3068 iterations and 2 nodes (2.64 seconds)
Cbc0012I Integer solution of -57.381147 found by DiveCoefficient after 3072 iterations and 3 nodes (2.66 seconds)
Cbc0012I Integer solution of -58.287347 found by DiveCoefficient after 3135 iterations and 6 nodes (2.85 seconds)
Cbc0010I After 12 nodes, 1 on tree, -58.287347 best solution, best possible -60.908515 (3.27 seconds)
Cbc0001I Search completed - best objective -58.28734700000001, took 3993 iterations and 20 nodes (3.62 seconds)
Cbc0032I Strong branching done 372 times (4716 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 56 variables fixed on reduced cost
Total time (CPU seconds):       2.45   (Wallclock seconds):       3.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 178 (-27) rows, 96 (-7) columns and 540 (-63) elements
Clp1000I sum of infeasibilities 2.54088e-05 - average 1.42746e-07, 17 fixed columns
Coin0506I Presolve 143 (-35) rows, 78 (-18) columns and 434 (-106) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 2.7600686 - largest nonzero change 0 ( 0%) - largest zero change 2.99042e-05
Clp0000I Optimal - objective value 89.543379
Clp0000I Optimal - objective value 89.543379
Coin0511I After Postsolve, objective 89.543379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.543379
Clp0000I Optimal - objective value 89.543379
Clp0000I Optimal - objective value 89.543379
Coin0511I After Postsolve, objective 89.543379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.54337937 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 178 rows, 96 columns (95 integer (95 of which binary)) and 540 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.950%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 10.4162
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.849 iterations 41
Cbc0038I Solution found of -16.849
Cbc0038I Relaxing continuous gives -16.849
Cbc0038I Rounding solution of -38.6654 is better than previous of -16.849

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 96 columns, reduced to 51 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -38.6654 to -58.2873 (0.02 seconds)
Cbc0038I Round again with cutoff of -61.413
Cbc0038I Pass   2: suminf.    2.23516 (6) obj. -61.413 iterations 6
Cbc0038I Pass   3: suminf.    1.66013 (5) obj. -61.413 iterations 3
Cbc0038I Pass   4: suminf.    0.81646 (3) obj. -61.413 iterations 4
Cbc0038I Pass   5: suminf.    0.81599 (3) obj. -61.413 iterations 1
Cbc0038I Pass   6: suminf.    0.47354 (2) obj. -61.413 iterations 5
Cbc0038I Pass   7: suminf.    0.46337 (3) obj. -61.413 iterations 2
Cbc0038I Pass   8: suminf.    0.83466 (4) obj. -61.413 iterations 2
Cbc0038I Pass   9: suminf.    4.51582 (15) obj. -61.413 iterations 14
Cbc0038I Pass  10: suminf.    2.26374 (10) obj. -61.413 iterations 9
Cbc0038I Pass  11: suminf.    2.25683 (9) obj. -61.413 iterations 1
Cbc0038I Pass  12: suminf.    1.82274 (4) obj. -61.413 iterations 12
Cbc0038I Pass  13: suminf.    1.16332 (3) obj. -61.413 iterations 2
Cbc0038I Pass  14: suminf.    1.07313 (3) obj. -61.413 iterations 1
Cbc0038I Pass  15: suminf.    0.50850 (4) obj. -61.413 iterations 4
Cbc0038I Pass  16: suminf.    1.45312 (4) obj. -61.413 iterations 5
Cbc0038I Pass  17: suminf.    0.92457 (2) obj. -61.413 iterations 4
Cbc0038I Pass  18: suminf.    0.82843 (3) obj. -61.413 iterations 2
Cbc0038I Pass  19: suminf.    1.21310 (4) obj. -61.413 iterations 4
Cbc0038I Pass  20: suminf.    0.90067 (2) obj. -61.413 iterations 5
Cbc0038I Pass  21: suminf.    0.54130 (3) obj. -61.413 iterations 4
Cbc0038I Pass  22: suminf.    0.50850 (4) obj. -61.413 iterations 1
Cbc0038I Pass  23: suminf.    1.45312 (4) obj. -61.413 iterations 5
Cbc0038I Pass  24: suminf.    0.92457 (2) obj. -61.413 iterations 4
Cbc0038I Pass  25: suminf.    0.82843 (3) obj. -61.413 iterations 2
Cbc0038I Pass  26: suminf.    1.21310 (4) obj. -61.413 iterations 4
Cbc0038I Pass  27: suminf.    0.90067 (2) obj. -61.413 iterations 5
Cbc0038I Pass  28: suminf.    0.54130 (3) obj. -61.413 iterations 4
Cbc0038I Pass  29: suminf.    0.50850 (4) obj. -61.413 iterations 1
Cbc0038I Pass  30: suminf.    1.45312 (4) obj. -61.413 iterations 5
Cbc0038I Pass  31: suminf.    0.92457 (2) obj. -61.413 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 96 columns, reduced to 63 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -58.2873 - took 0.03 seconds
Cbc0012I Integer solution of -58.287347 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 178 rows 96 columns, reduced to 51 rows 30 columns
Cbc0031I 19 added rows had average density of 76.736842
Cbc0013I At root node, 19 cuts changed objective from -89.543379 to -71.24208 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6076 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1621 row cuts average 95.8 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 154 row cuts average 94.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -58.287347 best solution, best possible -71.24208 (0.68 seconds)
Cbc0001I Search completed - best objective -58.28734700000001, took 4760 iterations and 18 nodes (0.74 seconds)
Cbc0032I Strong branching done 264 times (6468 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 6, 110 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-72) rows, 145 (-58) columns and 2916 (-2738) elements
Clp1000I sum of infeasibilities 7.55329e-07 - average 5.67917e-09, 27 fixed columns
Coin0506I Presolve 107 (-26) rows, 118 (-27) columns and 2066 (-850) elements
Clp0006I 0  Obj 92.46259 Dual inf 9.0771953 (112)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 2.1595224 - largest nonzero change 2.5849013e-05 ( 0.0015823696%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 111.62867
Clp0000I Optimal - objective value 111.62867
Coin0511I After Postsolve, objective 111.62867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 111.62867
Clp0000I Optimal - objective value 111.62867
Clp0000I Optimal - objective value 111.62867
Clp0000I Optimal - objective value 111.62867
Coin0511I After Postsolve, objective 111.62867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 111.6286702 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 145 columns (145 integer (145 of which binary)) and 2918 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.498%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 6.54125
Cbc0038I Pass   1: suminf.    2.90042 (42) obj. -96.2496 iterations 35
Cbc0038I Pass   2: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass   3: suminf.    0.73226 (17) obj. -54.5851 iterations 25
Cbc0038I Solution found of -18.0269
Cbc0038I Rounding solution of -31.773 is better than previous of -18.0269

Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -31.773 to -31.8051 (0.04 seconds)
Cbc0038I Round again with cutoff of -38.7714
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass   5: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass   6: suminf.    1.47709 (28) obj. -69.4859 iterations 14
Cbc0038I Pass   7: suminf.    0.57921 (14) obj. -50.7886 iterations 14
Cbc0038I Pass   8: suminf.    0.10789 (3) obj. -38.7714 iterations 16
Cbc0038I Pass   9: suminf.    0.10589 (3) obj. -38.7714 iterations 2
Cbc0038I Pass  10: suminf.    0.61226 (2) obj. -38.7714 iterations 3
Cbc0038I Pass  11: suminf.    0.15125 (2) obj. -46.2013 iterations 2
Cbc0038I Pass  12: suminf.    0.17243 (2) obj. -38.7714 iterations 2
Cbc0038I Pass  13: suminf.    0.16983 (2) obj. -38.7714 iterations 2
Cbc0038I Pass  14: suminf.    2.38142 (18) obj. -38.7714 iterations 38
Cbc0038I Pass  15: suminf.    2.02959 (17) obj. -38.7714 iterations 9
Cbc0038I Pass  16: suminf.    1.55817 (5) obj. -38.7714 iterations 35
Cbc0038I Pass  17: suminf.    1.55817 (5) obj. -38.7714 iterations 0
Cbc0038I Pass  18: suminf.    0.87522 (4) obj. -38.7714 iterations 11
Cbc0038I Pass  19: suminf.    0.65937 (4) obj. -38.7714 iterations 3
Cbc0038I Pass  20: suminf.    1.23893 (4) obj. -38.7714 iterations 7
Cbc0038I Pass  21: suminf.    1.23893 (4) obj. -38.7714 iterations 2
Cbc0038I Pass  22: suminf.    0.55057 (3) obj. -38.7714 iterations 6
Cbc0038I Pass  23: suminf.    0.55057 (3) obj. -38.7714 iterations 2
Cbc0038I Pass  24: suminf.    1.38399 (3) obj. -38.7714 iterations 6
Cbc0038I Pass  25: suminf.    0.82682 (3) obj. -38.7714 iterations 2
Cbc0038I Pass  26: suminf.    2.27853 (14) obj. -38.7714 iterations 28
Cbc0038I Pass  27: suminf.    1.16863 (10) obj. -38.7714 iterations 12
Cbc0038I Pass  28: suminf.    0.65198 (8) obj. -39.0855 iterations 3
Cbc0038I Pass  29: suminf.    0.99325 (4) obj. -38.7714 iterations 24
Cbc0038I Pass  30: suminf.    0.66196 (3) obj. -38.7714 iterations 9
Cbc0038I Pass  31: suminf.    1.15288 (9) obj. -38.7714 iterations 13
Cbc0038I Pass  32: suminf.    1.15288 (9) obj. -38.7714 iterations 0
Cbc0038I Pass  33: suminf.    4.20479 (14) obj. -38.7714 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 23 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -31.8051 to -35.8025 (0.07 seconds)
Cbc0038I Round again with cutoff of -51.3107
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass  34: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass  35: suminf.    0.63142 (15) obj. -51.3107 iterations 29
Cbc0038I Pass  36: suminf.    0.48913 (5) obj. -51.3107 iterations 24
Cbc0038I Pass  37: suminf.    0.46168 (11) obj. -51.3107 iterations 5
Cbc0038I Pass  38: suminf.    2.03664 (9) obj. -51.3107 iterations 13
Cbc0038I Pass  39: suminf.    0.26200 (3) obj. -52.7583 iterations 18
Cbc0038I Pass  40: suminf.    0.26200 (3) obj. -52.7583 iterations 0
Cbc0038I Pass  41: suminf.    0.62388 (3) obj. -51.3107 iterations 6
Cbc0038I Pass  42: suminf.    0.82646 (9) obj. -51.3107 iterations 30
Cbc0038I Pass  43: suminf.    0.70833 (11) obj. -51.3107 iterations 9
Cbc0038I Pass  44: suminf.    1.08804 (4) obj. -51.3107 iterations 18
Cbc0038I Pass  45: suminf.    0.60620 (4) obj. -51.3107 iterations 3
Cbc0038I Pass  46: suminf.    1.36489 (10) obj. -51.3107 iterations 13
Cbc0038I Pass  47: suminf.    0.74897 (4) obj. -51.3107 iterations 7
Cbc0038I Pass  48: suminf.    0.76299 (3) obj. -51.3107 iterations 10
Cbc0038I Pass  49: suminf.    0.71088 (3) obj. -51.3107 iterations 7
Cbc0038I Pass  50: suminf.    1.34331 (15) obj. -51.3107 iterations 47
Cbc0038I Pass  51: suminf.    1.20850 (14) obj. -51.3107 iterations 7
Cbc0038I Pass  52: suminf.    0.75311 (6) obj. -51.3107 iterations 28
Cbc0038I Pass  53: suminf.    0.57032 (7) obj. -51.3107 iterations 4
Cbc0038I Pass  54: suminf.    2.16426 (12) obj. -51.3107 iterations 23
Cbc0038I Pass  55: suminf.    2.16426 (12) obj. -51.3107 iterations 0
Cbc0038I Pass  56: suminf.    2.30345 (10) obj. -51.3107 iterations 11
Cbc0038I Pass  57: suminf.    0.33612 (4) obj. -53.5359 iterations 16
Cbc0038I Pass  58: suminf.    0.33612 (4) obj. -53.5359 iterations 0
Cbc0038I Pass  59: suminf.    0.44614 (4) obj. -51.3107 iterations 10
Cbc0038I Pass  60: suminf.    0.41797 (10) obj. -51.3107 iterations 6
Cbc0038I Pass  61: suminf.    2.30345 (10) obj. -51.3107 iterations 8
Cbc0038I Pass  62: suminf.    0.33612 (4) obj. -53.5359 iterations 16
Cbc0038I Rounding solution of -36.698 is better than previous of -35.8025

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -36.698 to -42.6303 (0.10 seconds)
Cbc0038I Round again with cutoff of -66.3579
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass  63: suminf.    2.90042 (42) obj. -96.2496 iterations 0
Cbc0038I Pass  64: suminf.    1.40687 (20) obj. -66.3579 iterations 27
Cbc0038I Pass  65: suminf.    1.02052 (20) obj. -67.9033 iterations 7
Cbc0038I Pass  66: suminf.    0.95320 (18) obj. -66.3579 iterations 36
Cbc0038I Pass  67: suminf.    0.95320 (18) obj. -66.3579 iterations 0
Cbc0038I Pass  68: suminf.    1.22484 (11) obj. -66.3579 iterations 17
Cbc0038I Pass  69: suminf.    1.21270 (16) obj. -66.3579 iterations 2
Cbc0038I Pass  70: suminf.    1.11114 (16) obj. -66.3579 iterations 7
Cbc0038I Pass  71: suminf.    1.11114 (16) obj. -66.3579 iterations 3
Cbc0038I Pass  72: suminf.    2.53358 (16) obj. -66.3579 iterations 9
Cbc0038I Pass  73: suminf.    1.23875 (11) obj. -66.3579 iterations 18
Cbc0038I Pass  74: suminf.    0.89264 (10) obj. -67.3538 iterations 2
Cbc0038I Pass  75: suminf.    1.25861 (10) obj. -66.3579 iterations 13
Cbc0038I Pass  76: suminf.    1.21270 (16) obj. -66.3579 iterations 4
Cbc0038I Pass  77: suminf.    2.53358 (16) obj. -66.3579 iterations 9
Cbc0038I Pass  78: suminf.    1.23875 (11) obj. -66.3579 iterations 18
Cbc0038I Pass  79: suminf.    0.89264 (10) obj. -67.3538 iterations 2
Cbc0038I Pass  80: suminf.    1.25861 (10) obj. -66.3579 iterations 13
Cbc0038I Pass  81: suminf.    1.21270 (16) obj. -66.3579 iterations 4
Cbc0038I Pass  82: suminf.    2.53358 (16) obj. -66.3579 iterations 9
Cbc0038I Pass  83: suminf.    1.23875 (11) obj. -66.3579 iterations 18
Cbc0038I Pass  84: suminf.    0.89264 (10) obj. -67.3538 iterations 2
Cbc0038I Pass  85: suminf.    1.25861 (10) obj. -66.3579 iterations 14
Cbc0038I Pass  86: suminf.    1.21270 (16) obj. -66.3579 iterations 4
Cbc0038I Pass  87: suminf.    2.53358 (16) obj. -66.3579 iterations 9
Cbc0038I Pass  88: suminf.    1.23875 (11) obj. -66.3579 iterations 18
Cbc0038I Pass  89: suminf.    0.89264 (10) obj. -67.3538 iterations 2
Cbc0038I Pass  90: suminf.    1.25861 (10) obj. -66.3579 iterations 13
Cbc0038I Pass  91: suminf.    1.21270 (16) obj. -66.3579 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -42.6303 - took 0.09 seconds
Cbc0012I Integer solution of -42.630267 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 15 rows 16 columns
Cbc0031I 59 added rows had average density of 26.40678
Cbc0013I At root node, 59 cuts changed objective from -101.46794 to -60.968658 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8372 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1114 row cuts average 130.7 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 400 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 832 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 278 row cuts average 87.7 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 110 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.706 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -42.630267 best solution, best possible -60.968658 (2.69 seconds)
Cbc0012I Integer solution of -44.496977 found by rounding after 3056 iterations and 2 nodes (2.83 seconds)
Cbc0012I Integer solution of -52.087677 found by DiveCoefficient after 3056 iterations and 2 nodes (2.83 seconds)
Cbc0012I Integer solution of -54.381147 found by DiveCoefficient after 3068 iterations and 2 nodes (2.86 seconds)
Cbc0012I Integer solution of -57.381147 found by DiveCoefficient after 3072 iterations and 3 nodes (2.88 seconds)
Cbc0012I Integer solution of -58.287347 found by DiveCoefficient after 3135 iterations and 6 nodes (3.07 seconds)
Cbc0010I After 12 nodes, 1 on tree, -58.287347 best solution, best possible -60.908515 (3.49 seconds)
Cbc0001I Search completed - best objective -58.28734700000001, took 3993 iterations and 20 nodes (3.90 seconds)
Cbc0032I Strong branching done 372 times (4716 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 56 variables fixed on reduced cost
Total time (CPU seconds):       2.56   (Wallclock seconds):       3.92

