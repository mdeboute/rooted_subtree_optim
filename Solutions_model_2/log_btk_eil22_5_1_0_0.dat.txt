Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 22 (-2) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 8.61231e-07 - average 2.60979e-08, 1 fixed columns
Coin0506I Presolve 32 (-1) rows, 21 (-1) columns and 98 (-4) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 63.148928
Clp0000I Optimal - objective value 63.148928
Coin0511I After Postsolve, objective 63.148928, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.148928
Clp0000I Optimal - objective value 63.148928
Clp0000I Optimal - objective value 63.148928
Coin0511I After Postsolve, objective 63.148928, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.1489282 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.131%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.32877
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.1976 iterations 14
Cbc0038I Solution found of -13.1976
Cbc0038I Relaxing continuous gives -13.1976
Cbc0038I Rounding solution of -15.0357 is better than previous of -13.1976

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -15.0357 to -25.0904 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.8963
Cbc0038I Pass   2: suminf.    0.70915 (3) obj. -28.8963 iterations 4
Cbc0038I Pass   3: suminf.    0.23277 (1) obj. -28.8963 iterations 4
Cbc0038I Pass   4: suminf.    0.40842 (2) obj. -28.8963 iterations 5
Cbc0038I Pass   5: suminf.    0.56790 (5) obj. -28.8963 iterations 5
Cbc0038I Pass   6: suminf.    0.34741 (2) obj. -28.8963 iterations 8
Cbc0038I Pass   7: suminf.    0.23669 (1) obj. -28.8963 iterations 1
Cbc0038I Pass   8: suminf.    0.41731 (2) obj. -28.8963 iterations 5
Cbc0038I Pass   9: suminf.    0.52023 (4) obj. -28.8963 iterations 4
Cbc0038I Pass  10: suminf.    0.75311 (4) obj. -28.8963 iterations 8
Cbc0038I Pass  11: suminf.    0.65172 (5) obj. -28.8963 iterations 2
Cbc0038I Pass  12: suminf.    0.75552 (2) obj. -28.8963 iterations 7
Cbc0038I Pass  13: suminf.    0.44794 (2) obj. -28.8963 iterations 1
Cbc0038I Pass  14: suminf.    0.90471 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  15: suminf.    0.38697 (2) obj. -28.8963 iterations 4
Cbc0038I Pass  16: suminf.    0.83758 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  17: suminf.    0.94686 (5) obj. -28.8963 iterations 8
Cbc0038I Pass  18: suminf.    0.62890 (4) obj. -28.8963 iterations 3
Cbc0038I Pass  19: suminf.    0.75552 (2) obj. -28.8963 iterations 7
Cbc0038I Pass  20: suminf.    0.44794 (2) obj. -28.8963 iterations 1
Cbc0038I Pass  21: suminf.    0.90471 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  22: suminf.    0.38697 (2) obj. -28.8963 iterations 4
Cbc0038I Pass  23: suminf.    0.83758 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  24: suminf.    1.10026 (4) obj. -28.8963 iterations 4
Cbc0038I Pass  25: suminf.    0.75552 (2) obj. -28.8963 iterations 6
Cbc0038I Pass  26: suminf.    0.44794 (2) obj. -28.8963 iterations 1
Cbc0038I Pass  27: suminf.    0.90471 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  28: suminf.    0.38697 (2) obj. -28.8963 iterations 4
Cbc0038I Pass  29: suminf.    0.83758 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  30: suminf.    0.86390 (4) obj. -28.8963 iterations 8
Cbc0038I Pass  31: suminf.    0.69205 (5) obj. -28.8963 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 25 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -25.0904 - took 0.04 seconds
Cbc0012I Integer solution of -25.0904 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 19 rows 13 columns
Cbc0031I 9 added rows had average density of 18.111111
Cbc0013I At root node, 9 cuts changed objective from -63.148928 to -46.512069 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1808 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 675 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25.09039999999999, took 2443 iterations and 10 nodes (0.18 seconds)
Cbc0032I Strong branching done 112 times (1104 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-14) rows, 41 (-3) columns and 297 (-63) elements
Clp1000I sum of infeasibilities 7.47835e-09 - average 2.33698e-10, 1 fixed columns
Coin0506I Presolve 32 (0) rows, 40 (-1) columns and 276 (-21) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 3.7647311 - largest nonzero change 1.1510883e-05 ( 0.00058074366%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 78.838155
Clp0000I Optimal - objective value 78.838155
Coin0511I After Postsolve, objective 78.838155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 78.838155
Clp0000I Optimal - objective value 78.838155
Clp0000I Optimal - objective value 78.838155
Coin0511I After Postsolve, objective 78.838155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.83815512 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 41 columns (41 integer (41 of which binary)) and 299 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.875%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.81946
Cbc0038I Pass   1: suminf.    1.34469 (10) obj. -51.3097 iterations 8
Cbc0038I Pass   2: suminf.    1.34469 (10) obj. -51.3097 iterations 3
Cbc0038I Solution found of -12.9976
Cbc0038I Rounding solution of -15.0357 is better than previous of -12.9976

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -15.0357 to -15.9976 (0.01 seconds)
Cbc0038I Round again with cutoff of -21.5332
Cbc0038I Pass   3: suminf.    1.34469 (10) obj. -51.3097 iterations 0
Cbc0038I Pass   4: suminf.    1.34469 (10) obj. -51.3097 iterations 1
Cbc0038I Pass   5: suminf.    0.38327 (2) obj. -21.5332 iterations 11
Cbc0038I Pass   6: suminf.    0.44211 (2) obj. -35.3818 iterations 1
Cbc0038I Pass   7: suminf.    0.10526 (1) obj. -28.2081 iterations 1
Cbc0038I Pass   8: suminf.    1.02134 (5) obj. -42.2396 iterations 10
Cbc0038I Pass   9: suminf.    1.02134 (5) obj. -42.2396 iterations 1
Cbc0038I Pass  10: suminf.    0.46578 (2) obj. -21.5332 iterations 7
Cbc0038I Pass  11: suminf.    0.46578 (2) obj. -21.5332 iterations 0
Cbc0038I Pass  12: suminf.    0.38357 (2) obj. -21.5332 iterations 2
Cbc0038I Pass  13: suminf.    0.70203 (2) obj. -21.5332 iterations 2
Cbc0038I Pass  14: suminf.    1.15269 (6) obj. -31.891 iterations 9
Cbc0038I Pass  15: suminf.    0.82925 (5) obj. -27.0942 iterations 1
Cbc0038I Pass  16: suminf.    0.54718 (2) obj. -21.5332 iterations 10
Cbc0038I Pass  17: suminf.    0.46115 (2) obj. -29.4867 iterations 1
Cbc0038I Pass  18: suminf.    0.21053 (1) obj. -24.3461 iterations 1
Cbc0038I Pass  19: suminf.    1.28647 (5) obj. -21.5332 iterations 7
Cbc0038I Pass  20: suminf.    1.16666 (5) obj. -21.5332 iterations 3
Cbc0038I Pass  21: suminf.    0.37644 (2) obj. -21.5332 iterations 4
Cbc0038I Pass  22: suminf.    0.37644 (2) obj. -21.5332 iterations 0
Cbc0038I Pass  23: suminf.    0.36341 (2) obj. -29.1939 iterations 1
Cbc0038I Pass  24: suminf.    0.26316 (1) obj. -27.1376 iterations 1
Cbc0038I Pass  25: suminf.    1.48105 (7) obj. -29.0451 iterations 10
Cbc0038I Pass  26: suminf.    1.44332 (6) obj. -28.6678 iterations 1
Cbc0038I Pass  27: suminf.    0.78502 (4) obj. -21.5332 iterations 9
Cbc0038I Pass  28: suminf.    0.79734 (3) obj. -21.5332 iterations 1
Cbc0038I Pass  29: suminf.    0.49409 (2) obj. -21.5332 iterations 2
Cbc0038I Pass  30: suminf.    0.49409 (2) obj. -21.5332 iterations 0
Cbc0038I Pass  31: suminf.    0.36341 (2) obj. -27.1939 iterations 1
Cbc0038I Pass  32: suminf.    0.26316 (1) obj. -25.1376 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -15.9976 to -20.3148 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.497
Cbc0038I Pass  32: suminf.    1.34469 (10) obj. -51.3097 iterations 0
Cbc0038I Pass  33: suminf.    1.34469 (10) obj. -51.3097 iterations 1
Cbc0038I Pass  34: suminf.    0.67062 (2) obj. -31.497 iterations 11
Cbc0038I Pass  35: suminf.    0.25969 (2) obj. -31.497 iterations 1
Cbc0038I Pass  36: suminf.    0.67062 (2) obj. -31.497 iterations 2
Cbc0038I Pass  37: suminf.    3.85296 (12) obj. -31.497 iterations 17
Cbc0038I Pass  38: suminf.    2.08299 (8) obj. -31.497 iterations 1
Cbc0038I Pass  39: suminf.    0.84120 (2) obj. -31.497 iterations 8
Cbc0038I Pass  40: suminf.    0.58998 (2) obj. -31.497 iterations 2
Cbc0038I Pass  41: suminf.    0.68370 (2) obj. -31.497 iterations 2
Cbc0038I Pass  42: suminf.    2.03715 (8) obj. -31.497 iterations 14
Cbc0038I Pass  43: suminf.    1.94173 (7) obj. -32.4512 iterations 2
Cbc0038I Pass  44: suminf.    0.80700 (3) obj. -31.497 iterations 8
Cbc0038I Pass  45: suminf.    0.80700 (3) obj. -31.497 iterations 0
Cbc0038I Pass  46: suminf.    1.12637 (3) obj. -31.497 iterations 1
Cbc0038I Pass  47: suminf.    0.76872 (3) obj. -31.497 iterations 2
Cbc0038I Pass  48: suminf.    0.85743 (3) obj. -31.497 iterations 3
Cbc0038I Pass  49: suminf.    0.81210 (3) obj. -31.497 iterations 6
Cbc0038I Pass  50: suminf.    0.26316 (1) obj. -31.8411 iterations 4
Cbc0038I Pass  51: suminf.    0.61520 (2) obj. -31.497 iterations 3
Cbc0038I Pass  52: suminf.    1.43556 (5) obj. -31.497 iterations 6
Cbc0038I Pass  53: suminf.    1.02723 (3) obj. -31.497 iterations 3
Cbc0038I Pass  54: suminf.    1.01871 (3) obj. -31.497 iterations 4
Cbc0038I Pass  55: suminf.    0.87863 (3) obj. -31.497 iterations 2
Cbc0038I Pass  56: suminf.    0.87863 (3) obj. -31.497 iterations 1
Cbc0038I Pass  57: suminf.    1.20369 (3) obj. -31.497 iterations 4
Cbc0038I Pass  58: suminf.    0.83568 (3) obj. -31.497 iterations 1
Cbc0038I Pass  59: suminf.    1.01871 (3) obj. -31.497 iterations 3
Cbc0038I Pass  60: suminf.    0.87863 (3) obj. -31.497 iterations 2
Cbc0038I Pass  61: suminf.    0.87863 (3) obj. -31.497 iterations 1
Cbc0038I Rounding solution of -20.5148 is better than previous of -20.3148

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -20.5148 to -25.0904 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.4537
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.34469 (10) obj. -51.3097 iterations 0
Cbc0038I Pass  62: suminf.    1.34469 (10) obj. -51.3097 iterations 1
Cbc0038I Pass  63: suminf.    1.11668 (6) obj. -43.4537 iterations 13
Cbc0038I Pass  64: suminf.    0.53686 (4) obj. -44.2479 iterations 3
Cbc0038I Pass  65: suminf.    0.87466 (4) obj. -43.4537 iterations 9
Cbc0038I Pass  66: suminf.    0.87466 (4) obj. -43.4537 iterations 0
Cbc0038I Pass  67: suminf.    0.66992 (4) obj. -43.4537 iterations 4
Cbc0038I Pass  68: suminf.    0.66992 (4) obj. -43.4537 iterations 0
Cbc0038I Pass  69: suminf.    0.87466 (4) obj. -43.4537 iterations 3
Cbc0038I Pass  70: suminf.    1.58690 (6) obj. -43.4537 iterations 10
Cbc0038I Pass  71: suminf.    1.32956 (6) obj. -43.4537 iterations 3
Cbc0038I Pass  72: suminf.    1.13329 (4) obj. -43.4537 iterations 9
Cbc0038I Pass  73: suminf.    0.93744 (4) obj. -43.4537 iterations 2
Cbc0038I Pass  74: suminf.    1.63333 (7) obj. -43.4537 iterations 5
Cbc0038I Pass  75: suminf.    1.31328 (6) obj. -43.4537 iterations 4
Cbc0038I Pass  76: suminf.    1.50315 (9) obj. -49.1772 iterations 9
Cbc0038I Pass  77: suminf.    1.50315 (9) obj. -49.1772 iterations 1
Cbc0038I Pass  78: suminf.    0.93655 (4) obj. -43.4537 iterations 11
Cbc0038I Pass  79: suminf.    0.73060 (4) obj. -44.8952 iterations 2
Cbc0038I Pass  80: suminf.    2.03097 (8) obj. -43.4537 iterations 6
Cbc0038I Pass  81: suminf.    1.60439 (6) obj. -43.4537 iterations 3
Cbc0038I Pass  82: suminf.    1.34068 (4) obj. -43.4537 iterations 4
Cbc0038I Pass  83: suminf.    1.20494 (4) obj. -43.4537 iterations 1
Cbc0038I Pass  84: suminf.    1.21825 (5) obj. -43.4537 iterations 2
Cbc0038I Pass  85: suminf.    1.20494 (4) obj. -43.4537 iterations 2
Cbc0038I Pass  86: suminf.    1.56416 (6) obj. -43.4537 iterations 3
Cbc0038I Pass  87: suminf.    1.56416 (6) obj. -43.4537 iterations 1
Cbc0038I Pass  88: suminf.    0.99043 (4) obj. -43.4537 iterations 4
Cbc0038I Pass  89: suminf.    0.98439 (4) obj. -43.4537 iterations 1
Cbc0038I Pass  90: suminf.    1.53082 (6) obj. -43.4537 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -25.0904 - took 0.03 seconds
Cbc0012I Integer solution of -25.0904 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 18 added rows had average density of 9.9444444
Cbc0013I At root node, 18 cuts changed objective from -71.352441 to -25.097014 in 51 passes
Cbc0014I Cut generator 0 (Probing) - 314 row cuts average 3.9 elements, 12 column cuts (12 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 297 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 85 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 146 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.419 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25.09039999999999, took 606 iterations and 0 nodes (0.84 seconds)
Cbc0032I Strong branching done 4 times (22 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 22 (-2) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 8.61231e-07 - average 2.60979e-08, 1 fixed columns
Coin0506I Presolve 32 (-1) rows, 21 (-1) columns and 98 (-4) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 63.148928
Clp0000I Optimal - objective value 63.148928
Coin0511I After Postsolve, objective 63.148928, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.148928
Clp0000I Optimal - objective value 63.148928
Clp0000I Optimal - objective value 63.148928
Coin0511I After Postsolve, objective 63.148928, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.1489282 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.131%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.32877
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.1976 iterations 14
Cbc0038I Solution found of -13.1976
Cbc0038I Relaxing continuous gives -13.1976
Cbc0038I Rounding solution of -15.0357 is better than previous of -13.1976

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -15.0357 to -25.0904 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.8963
Cbc0038I Pass   2: suminf.    0.70915 (3) obj. -28.8963 iterations 4
Cbc0038I Pass   3: suminf.    0.23277 (1) obj. -28.8963 iterations 4
Cbc0038I Pass   4: suminf.    0.40842 (2) obj. -28.8963 iterations 5
Cbc0038I Pass   5: suminf.    0.56790 (5) obj. -28.8963 iterations 5
Cbc0038I Pass   6: suminf.    0.34741 (2) obj. -28.8963 iterations 8
Cbc0038I Pass   7: suminf.    0.23669 (1) obj. -28.8963 iterations 1
Cbc0038I Pass   8: suminf.    0.41731 (2) obj. -28.8963 iterations 5
Cbc0038I Pass   9: suminf.    0.52023 (4) obj. -28.8963 iterations 4
Cbc0038I Pass  10: suminf.    0.75311 (4) obj. -28.8963 iterations 8
Cbc0038I Pass  11: suminf.    0.65172 (5) obj. -28.8963 iterations 2
Cbc0038I Pass  12: suminf.    0.75552 (2) obj. -28.8963 iterations 7
Cbc0038I Pass  13: suminf.    0.44794 (2) obj. -28.8963 iterations 1
Cbc0038I Pass  14: suminf.    0.90471 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  15: suminf.    0.38697 (2) obj. -28.8963 iterations 4
Cbc0038I Pass  16: suminf.    0.83758 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  17: suminf.    0.94686 (5) obj. -28.8963 iterations 8
Cbc0038I Pass  18: suminf.    0.62890 (4) obj. -28.8963 iterations 3
Cbc0038I Pass  19: suminf.    0.75552 (2) obj. -28.8963 iterations 7
Cbc0038I Pass  20: suminf.    0.44794 (2) obj. -28.8963 iterations 1
Cbc0038I Pass  21: suminf.    0.90471 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  22: suminf.    0.38697 (2) obj. -28.8963 iterations 4
Cbc0038I Pass  23: suminf.    0.83758 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  24: suminf.    1.10026 (4) obj. -28.8963 iterations 4
Cbc0038I Pass  25: suminf.    0.75552 (2) obj. -28.8963 iterations 6
Cbc0038I Pass  26: suminf.    0.44794 (2) obj. -28.8963 iterations 1
Cbc0038I Pass  27: suminf.    0.90471 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  28: suminf.    0.38697 (2) obj. -28.8963 iterations 4
Cbc0038I Pass  29: suminf.    0.83758 (2) obj. -28.8963 iterations 3
Cbc0038I Pass  30: suminf.    0.86390 (4) obj. -28.8963 iterations 8
Cbc0038I Pass  31: suminf.    0.69205 (5) obj. -28.8963 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 25 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -25.0904 - took 0.02 seconds
Cbc0012I Integer solution of -25.0904 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 19 rows 13 columns
Cbc0031I 9 added rows had average density of 18.111111
Cbc0013I At root node, 9 cuts changed objective from -63.148928 to -46.512069 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1808 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 675 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 124 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25.09039999999999, took 2443 iterations and 10 nodes (0.18 seconds)
Cbc0032I Strong branching done 112 times (1104 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 41 (-4) columns and 297 (-64) elements
Clp1000I sum of infeasibilities 7.47835e-09 - average 2.33698e-10, 1 fixed columns
Coin0506I Presolve 32 (0) rows, 40 (-1) columns and 276 (-21) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 3.7647311 - largest nonzero change 1.1510883e-05 ( 0.00058074366%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 78.838155
Clp0000I Optimal - objective value 78.838155
Coin0511I After Postsolve, objective 78.838155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 78.838155
Clp0000I Optimal - objective value 78.838155
Clp0000I Optimal - objective value 78.838155
Coin0511I After Postsolve, objective 78.838155, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.83815512 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 41 columns (41 integer (41 of which binary)) and 299 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.875%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.81946
Cbc0038I Pass   1: suminf.    1.34469 (10) obj. -51.3097 iterations 8
Cbc0038I Pass   2: suminf.    1.34469 (10) obj. -51.3097 iterations 3
Cbc0038I Solution found of -12.9976
Cbc0038I Rounding solution of -15.0357 is better than previous of -12.9976

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -15.0357 to -15.9976 (0.01 seconds)
Cbc0038I Round again with cutoff of -21.5332
Cbc0038I Pass   3: suminf.    1.34469 (10) obj. -51.3097 iterations 0
Cbc0038I Pass   4: suminf.    1.34469 (10) obj. -51.3097 iterations 1
Cbc0038I Pass   5: suminf.    0.38327 (2) obj. -21.5332 iterations 11
Cbc0038I Pass   6: suminf.    0.44211 (2) obj. -35.3818 iterations 1
Cbc0038I Pass   7: suminf.    0.10526 (1) obj. -28.2081 iterations 1
Cbc0038I Pass   8: suminf.    1.02134 (5) obj. -42.2396 iterations 10
Cbc0038I Pass   9: suminf.    1.02134 (5) obj. -42.2396 iterations 1
Cbc0038I Pass  10: suminf.    0.46578 (2) obj. -21.5332 iterations 7
Cbc0038I Pass  11: suminf.    0.46578 (2) obj. -21.5332 iterations 0
Cbc0038I Pass  12: suminf.    0.38357 (2) obj. -21.5332 iterations 2
Cbc0038I Pass  13: suminf.    0.70203 (2) obj. -21.5332 iterations 2
Cbc0038I Pass  14: suminf.    1.15269 (6) obj. -31.891 iterations 9
Cbc0038I Pass  15: suminf.    0.82925 (5) obj. -27.0942 iterations 1
Cbc0038I Pass  16: suminf.    0.54718 (2) obj. -21.5332 iterations 10
Cbc0038I Pass  17: suminf.    0.46115 (2) obj. -29.4867 iterations 1
Cbc0038I Pass  18: suminf.    0.21053 (1) obj. -24.3461 iterations 1
Cbc0038I Pass  19: suminf.    1.28647 (5) obj. -21.5332 iterations 7
Cbc0038I Pass  20: suminf.    1.16666 (5) obj. -21.5332 iterations 3
Cbc0038I Pass  21: suminf.    0.37644 (2) obj. -21.5332 iterations 4
Cbc0038I Pass  22: suminf.    0.37644 (2) obj. -21.5332 iterations 0
Cbc0038I Pass  23: suminf.    0.36341 (2) obj. -29.1939 iterations 1
Cbc0038I Pass  24: suminf.    0.26316 (1) obj. -27.1376 iterations 1
Cbc0038I Pass  25: suminf.    1.48105 (7) obj. -29.0451 iterations 10
Cbc0038I Pass  26: suminf.    1.44332 (6) obj. -28.6678 iterations 1
Cbc0038I Pass  27: suminf.    0.78502 (4) obj. -21.5332 iterations 9
Cbc0038I Pass  28: suminf.    0.79734 (3) obj. -21.5332 iterations 1
Cbc0038I Pass  29: suminf.    0.49409 (2) obj. -21.5332 iterations 2
Cbc0038I Pass  30: suminf.    0.49409 (2) obj. -21.5332 iterations 0
Cbc0038I Pass  31: suminf.    0.36341 (2) obj. -27.1939 iterations 1
Cbc0038I Pass  32: suminf.    0.26316 (1) obj. -25.1376 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -15.9976 to -20.3148 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.497
Cbc0038I Pass  32: suminf.    1.34469 (10) obj. -51.3097 iterations 0
Cbc0038I Pass  33: suminf.    1.34469 (10) obj. -51.3097 iterations 1
Cbc0038I Pass  34: suminf.    0.67062 (2) obj. -31.497 iterations 11
Cbc0038I Pass  35: suminf.    0.25969 (2) obj. -31.497 iterations 1
Cbc0038I Pass  36: suminf.    0.67062 (2) obj. -31.497 iterations 2
Cbc0038I Pass  37: suminf.    3.85296 (12) obj. -31.497 iterations 17
Cbc0038I Pass  38: suminf.    2.08299 (8) obj. -31.497 iterations 1
Cbc0038I Pass  39: suminf.    0.84120 (2) obj. -31.497 iterations 8
Cbc0038I Pass  40: suminf.    0.58998 (2) obj. -31.497 iterations 2
Cbc0038I Pass  41: suminf.    0.68370 (2) obj. -31.497 iterations 2
Cbc0038I Pass  42: suminf.    2.03715 (8) obj. -31.497 iterations 14
Cbc0038I Pass  43: suminf.    1.94173 (7) obj. -32.4512 iterations 2
Cbc0038I Pass  44: suminf.    0.80700 (3) obj. -31.497 iterations 8
Cbc0038I Pass  45: suminf.    0.80700 (3) obj. -31.497 iterations 0
Cbc0038I Pass  46: suminf.    1.12637 (3) obj. -31.497 iterations 1
Cbc0038I Pass  47: suminf.    0.76872 (3) obj. -31.497 iterations 2
Cbc0038I Pass  48: suminf.    0.85743 (3) obj. -31.497 iterations 3
Cbc0038I Pass  49: suminf.    0.81210 (3) obj. -31.497 iterations 6
Cbc0038I Pass  50: suminf.    0.26316 (1) obj. -31.8411 iterations 4
Cbc0038I Pass  51: suminf.    0.61520 (2) obj. -31.497 iterations 3
Cbc0038I Pass  52: suminf.    1.43556 (5) obj. -31.497 iterations 6
Cbc0038I Pass  53: suminf.    1.02723 (3) obj. -31.497 iterations 3
Cbc0038I Pass  54: suminf.    1.01871 (3) obj. -31.497 iterations 4
Cbc0038I Pass  55: suminf.    0.87863 (3) obj. -31.497 iterations 2
Cbc0038I Pass  56: suminf.    0.87863 (3) obj. -31.497 iterations 1
Cbc0038I Pass  57: suminf.    1.20369 (3) obj. -31.497 iterations 4
Cbc0038I Pass  58: suminf.    0.83568 (3) obj. -31.497 iterations 1
Cbc0038I Pass  59: suminf.    1.01871 (3) obj. -31.497 iterations 3
Cbc0038I Pass  60: suminf.    0.87863 (3) obj. -31.497 iterations 2
Cbc0038I Pass  61: suminf.    0.87863 (3) obj. -31.497 iterations 1
Cbc0038I Rounding solution of -20.5148 is better than previous of -20.3148

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -20.5148 to -25.0904 (0.04 seconds)
Cbc0038I Round again with cutoff of -43.4537
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.34469 (10) obj. -51.3097 iterations 0
Cbc0038I Pass  62: suminf.    1.34469 (10) obj. -51.3097 iterations 1
Cbc0038I Pass  63: suminf.    1.11668 (6) obj. -43.4537 iterations 13
Cbc0038I Pass  64: suminf.    0.53686 (4) obj. -44.2479 iterations 3
Cbc0038I Pass  65: suminf.    0.87466 (4) obj. -43.4537 iterations 9
Cbc0038I Pass  66: suminf.    0.87466 (4) obj. -43.4537 iterations 0
Cbc0038I Pass  67: suminf.    0.66992 (4) obj. -43.4537 iterations 4
Cbc0038I Pass  68: suminf.    0.66992 (4) obj. -43.4537 iterations 0
Cbc0038I Pass  69: suminf.    0.87466 (4) obj. -43.4537 iterations 3
Cbc0038I Pass  70: suminf.    1.58690 (6) obj. -43.4537 iterations 10
Cbc0038I Pass  71: suminf.    1.32956 (6) obj. -43.4537 iterations 3
Cbc0038I Pass  72: suminf.    1.13329 (4) obj. -43.4537 iterations 9
Cbc0038I Pass  73: suminf.    0.93744 (4) obj. -43.4537 iterations 2
Cbc0038I Pass  74: suminf.    1.63333 (7) obj. -43.4537 iterations 5
Cbc0038I Pass  75: suminf.    1.31328 (6) obj. -43.4537 iterations 4
Cbc0038I Pass  76: suminf.    1.50315 (9) obj. -49.1772 iterations 9
Cbc0038I Pass  77: suminf.    1.50315 (9) obj. -49.1772 iterations 1
Cbc0038I Pass  78: suminf.    0.93655 (4) obj. -43.4537 iterations 11
Cbc0038I Pass  79: suminf.    0.73060 (4) obj. -44.8952 iterations 2
Cbc0038I Pass  80: suminf.    2.03097 (8) obj. -43.4537 iterations 6
Cbc0038I Pass  81: suminf.    1.60439 (6) obj. -43.4537 iterations 3
Cbc0038I Pass  82: suminf.    1.34068 (4) obj. -43.4537 iterations 4
Cbc0038I Pass  83: suminf.    1.20494 (4) obj. -43.4537 iterations 1
Cbc0038I Pass  84: suminf.    1.21825 (5) obj. -43.4537 iterations 2
Cbc0038I Pass  85: suminf.    1.20494 (4) obj. -43.4537 iterations 2
Cbc0038I Pass  86: suminf.    1.56416 (6) obj. -43.4537 iterations 3
Cbc0038I Pass  87: suminf.    1.56416 (6) obj. -43.4537 iterations 1
Cbc0038I Pass  88: suminf.    0.99043 (4) obj. -43.4537 iterations 4
Cbc0038I Pass  89: suminf.    0.98439 (4) obj. -43.4537 iterations 1
Cbc0038I Pass  90: suminf.    1.53082 (6) obj. -43.4537 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -25.0904 - took 0.04 seconds
Cbc0012I Integer solution of -25.0904 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 18 added rows had average density of 9.9444444
Cbc0013I At root node, 18 cuts changed objective from -71.352441 to -25.097014 in 51 passes
Cbc0014I Cut generator 0 (Probing) - 314 row cuts average 3.9 elements, 12 column cuts (12 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 297 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 85 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 146 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 29 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.416 seconds - new frequency is 1
Cbc0001I Search completed - best objective -25.09039999999999, took 606 iterations and 0 nodes (0.84 seconds)
Cbc0032I Strong branching done 4 times (22 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.85

