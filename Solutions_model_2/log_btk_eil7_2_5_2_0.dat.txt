Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 10 (-7) rows, 7 (-2) columns and 27 (-12) elements
Clp1000I sum of infeasibilities 1.68221e-06 - average 1.68221e-07, 1 fixed columns
Coin0506I Presolve 7 (-3) rows, 5 (-2) columns and 17 (-10) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 94.043478
Clp0000I Optimal - objective value 94.043478
Coin0511I After Postsolve, objective 94.043478, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.043478
Clp0000I Optimal - objective value 94.043478
Clp0000I Optimal - objective value 94.043478
Coin0511I After Postsolve, objective 94.043478, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.04347826 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 10 rows, 7 columns (6 integer (6 of which binary)) and 27 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.619%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.304348
Cbc0038I Solution found of -84
Cbc0038I Relaxing continuous gives -84
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 7 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -84 to -85 (0.00 seconds)
Cbc0038I Round again with cutoff of -86.8043
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.08498 (1) obj. -86.8043 iterations 3
Cbc0038I Pass   2: suminf.    0.13879 (1) obj. -86.8043 iterations 4
Cbc0038I Pass   3: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   4: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   5: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   6: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   7: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   8: suminf.    0.08498 (1) obj. -86.8043 iterations 3
Cbc0038I Pass   9: suminf.    0.21485 (3) obj. -86.8043 iterations 1
Cbc0038I Pass  10: suminf.    0.08498 (1) obj. -86.8043 iterations 1
Cbc0038I Pass  11: suminf.    1.26313 (3) obj. -86.8043 iterations 3
Cbc0038I Pass  12: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  13: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  14: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  15: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  16: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  17: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  18: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  19: suminf.    1.28108 (4) obj. -86.8043 iterations 3
Cbc0038I Pass  20: suminf.    0.21485 (3) obj. -86.8043 iterations 2
Cbc0038I Pass  21: suminf.    1.45829 (3) obj. -86.8043 iterations 2
Cbc0038I Pass  22: suminf.    1.45829 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  23: suminf.    1.28108 (4) obj. -86.8043 iterations 1
Cbc0038I Pass  24: suminf.    0.21485 (3) obj. -86.8043 iterations 2
Cbc0038I Pass  25: suminf.    0.08498 (1) obj. -86.8043 iterations 1
Cbc0038I Pass  26: suminf.    0.08498 (1) obj. -86.8043 iterations 0
Cbc0038I Pass  27: suminf.    0.22351 (3) obj. -86.8043 iterations 1
Cbc0038I Pass  28: suminf.    0.08498 (1) obj. -86.8043 iterations 2
Cbc0038I Pass  29: suminf.    0.13879 (1) obj. -86.8043 iterations 4
Cbc0038I Pass  30: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 7 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -85 - took 0.01 seconds
Cbc0012I Integer solution of -85 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0038I Full problem 10 rows 7 columns, reduced to 1 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -94.043478 to -94.043478 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -85, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 10 (-6) rows, 12 (-2) columns and 42 (-18) elements
Clp1000I sum of infeasibilities 6.22609e-09 - average 6.22609e-10, 4 fixed columns
Coin0506I Presolve 6 (-4) rows, 8 (-4) columns and 21 (-21) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 1.4118521 - largest nonzero change 1.2551031e-05 ( 0.00035629117%) - largest zero change 2.4587003e-05
Clp0000I Optimal - objective value 105.33333
Clp0000I Optimal - objective value 105.33333
Coin0511I After Postsolve, objective 105.33333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 112.43333
Clp0000I Optimal - objective value 112.43333
Clp0000I Optimal - objective value 112.43333
Coin0511I After Postsolve, objective 112.43333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.4333333 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 10 rows, 12 columns (12 integer (12 of which binary)) and 44 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.48333
Cbc0038I Pass   1: suminf.    0.20000 (1) obj. -83.8 iterations 4
Cbc0038I Pass   2: suminf.    0.20000 (1) obj. -83.8 iterations 0
Cbc0038I Solution found of -83
Cbc0038I Rounding solution of -84 is better than previous of -83

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 12 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -84 to -85 (0.00 seconds)
Cbc0038I Round again with cutoff of -87.9932
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.48333 (4) obj. -105.933 iterations 1
Cbc0038I Pass   4: suminf.    0.98333 (3) obj. -100.933 iterations 1
Cbc0038I Pass   5: suminf.    0.18708 (1) obj. -87.9932 iterations 4
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -97 iterations 2
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass   8: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass   9: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass  10: suminf.    0.18708 (1) obj. -87.9932 iterations 5
Cbc0038I Pass  11: suminf.    0.18708 (1) obj. -87.9932 iterations 1
Cbc0038I Pass  12: suminf.    0.33333 (1) obj. -88.3333 iterations 5
Cbc0038I Pass  13: suminf.    0.33333 (1) obj. -88.3333 iterations 1
Cbc0038I Pass  14: suminf.    0.33333 (1) obj. -88.3333 iterations 0
Cbc0038I Pass  15: suminf.    0.73333 (2) obj. -88.9333 iterations 1
Cbc0038I Pass  16: suminf.    0.98333 (3) obj. -100.933 iterations 2
Cbc0038I Pass  17: suminf.    0.98333 (3) obj. -100.933 iterations 1
Cbc0038I Pass  18: suminf.    0.18708 (1) obj. -87.9932 iterations 4
Cbc0038I Pass  19: suminf.    0.83333 (2) obj. -93.3333 iterations 4
Cbc0038I Pass  20: suminf.    0.83333 (2) obj. -93.3333 iterations 1
Cbc0038I Pass  21: suminf.    0.33333 (1) obj. -88.3333 iterations 1
Cbc0038I Pass  22: suminf.    0.33333 (1) obj. -88.3333 iterations 1
Cbc0038I Pass  23: suminf.    0.33333 (1) obj. -88.3333 iterations 0
Cbc0038I Pass  24: suminf.    0.25000 (1) obj. -97 iterations 5
Cbc0038I Pass  25: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass  26: suminf.    0.75000 (2) obj. -102 iterations 1
Cbc0038I Pass  27: suminf.    0.25000 (1) obj. -97 iterations 2
Cbc0038I Pass  28: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass  29: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass  30: suminf.    0.75000 (2) obj. -102 iterations 2
Cbc0038I Pass  31: suminf.    0.65000 (2) obj. -97.6 iterations 2
Cbc0038I Pass  32: suminf.    0.65000 (2) obj. -97.6 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -85 - took 0.00 seconds
Cbc0012I Integer solution of -85 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0001I Search completed - best objective -85, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 10 (-7) rows, 7 (-2) columns and 27 (-12) elements
Clp1000I sum of infeasibilities 1.68221e-06 - average 1.68221e-07, 1 fixed columns
Coin0506I Presolve 7 (-3) rows, 5 (-2) columns and 17 (-10) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 94.043478
Clp0000I Optimal - objective value 94.043478
Coin0511I After Postsolve, objective 94.043478, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.043478
Clp0000I Optimal - objective value 94.043478
Clp0000I Optimal - objective value 94.043478
Coin0511I After Postsolve, objective 94.043478, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.04347826 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 10 rows, 7 columns (6 integer (6 of which binary)) and 27 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.619%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.304348
Cbc0038I Solution found of -84
Cbc0038I Relaxing continuous gives -84
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 7 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -84 to -85 (0.00 seconds)
Cbc0038I Round again with cutoff of -86.8043
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.08498 (1) obj. -86.8043 iterations 3
Cbc0038I Pass   2: suminf.    0.13879 (1) obj. -86.8043 iterations 4
Cbc0038I Pass   3: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   4: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   5: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   6: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   7: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I Pass   8: suminf.    0.08498 (1) obj. -86.8043 iterations 3
Cbc0038I Pass   9: suminf.    0.21485 (3) obj. -86.8043 iterations 1
Cbc0038I Pass  10: suminf.    0.08498 (1) obj. -86.8043 iterations 1
Cbc0038I Pass  11: suminf.    1.26313 (3) obj. -86.8043 iterations 3
Cbc0038I Pass  12: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  13: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  14: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  15: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  16: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  17: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  18: suminf.    1.26313 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  19: suminf.    1.28108 (4) obj. -86.8043 iterations 3
Cbc0038I Pass  20: suminf.    0.21485 (3) obj. -86.8043 iterations 2
Cbc0038I Pass  21: suminf.    1.45829 (3) obj. -86.8043 iterations 2
Cbc0038I Pass  22: suminf.    1.45829 (3) obj. -86.8043 iterations 0
Cbc0038I Pass  23: suminf.    1.28108 (4) obj. -86.8043 iterations 1
Cbc0038I Pass  24: suminf.    0.21485 (3) obj. -86.8043 iterations 2
Cbc0038I Pass  25: suminf.    0.08498 (1) obj. -86.8043 iterations 1
Cbc0038I Pass  26: suminf.    0.08498 (1) obj. -86.8043 iterations 0
Cbc0038I Pass  27: suminf.    0.22351 (3) obj. -86.8043 iterations 1
Cbc0038I Pass  28: suminf.    0.08498 (1) obj. -86.8043 iterations 2
Cbc0038I Pass  29: suminf.    0.13879 (1) obj. -86.8043 iterations 4
Cbc0038I Pass  30: suminf.    0.13879 (1) obj. -86.8043 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 7 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -85 - took 0.01 seconds
Cbc0012I Integer solution of -85 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0038I Full problem 10 rows 7 columns, reduced to 1 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -94.043478 to -94.043478 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -85, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 10 (-7) rows, 12 (-3) columns and 42 (-19) elements
Clp1000I sum of infeasibilities 6.22609e-09 - average 6.22609e-10, 4 fixed columns
Coin0506I Presolve 6 (-4) rows, 8 (-4) columns and 21 (-21) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 1.4118521 - largest nonzero change 1.2551031e-05 ( 0.00035629117%) - largest zero change 2.4587003e-05
Clp0000I Optimal - objective value 105.33333
Clp0000I Optimal - objective value 105.33333
Coin0511I After Postsolve, objective 105.33333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 112.43333
Clp0000I Optimal - objective value 112.43333
Clp0000I Optimal - objective value 112.43333
Coin0511I After Postsolve, objective 112.43333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.4333333 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 10 rows, 12 columns (12 integer (12 of which binary)) and 44 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.48333
Cbc0038I Pass   1: suminf.    0.20000 (1) obj. -83.8 iterations 4
Cbc0038I Pass   2: suminf.    0.20000 (1) obj. -83.8 iterations 0
Cbc0038I Solution found of -83
Cbc0038I Rounding solution of -84 is better than previous of -83

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 12 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -84 to -85 (0.00 seconds)
Cbc0038I Round again with cutoff of -87.9932
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.48333 (4) obj. -105.933 iterations 1
Cbc0038I Pass   4: suminf.    0.98333 (3) obj. -100.933 iterations 1
Cbc0038I Pass   5: suminf.    0.18708 (1) obj. -87.9932 iterations 4
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -97 iterations 2
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass   8: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass   9: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass  10: suminf.    0.18708 (1) obj. -87.9932 iterations 5
Cbc0038I Pass  11: suminf.    0.18708 (1) obj. -87.9932 iterations 1
Cbc0038I Pass  12: suminf.    0.33333 (1) obj. -88.3333 iterations 5
Cbc0038I Pass  13: suminf.    0.33333 (1) obj. -88.3333 iterations 1
Cbc0038I Pass  14: suminf.    0.33333 (1) obj. -88.3333 iterations 0
Cbc0038I Pass  15: suminf.    0.73333 (2) obj. -88.9333 iterations 1
Cbc0038I Pass  16: suminf.    0.98333 (3) obj. -100.933 iterations 2
Cbc0038I Pass  17: suminf.    0.98333 (3) obj. -100.933 iterations 1
Cbc0038I Pass  18: suminf.    0.18708 (1) obj. -87.9932 iterations 4
Cbc0038I Pass  19: suminf.    0.83333 (2) obj. -93.3333 iterations 4
Cbc0038I Pass  20: suminf.    0.83333 (2) obj. -93.3333 iterations 1
Cbc0038I Pass  21: suminf.    0.33333 (1) obj. -88.3333 iterations 1
Cbc0038I Pass  22: suminf.    0.33333 (1) obj. -88.3333 iterations 1
Cbc0038I Pass  23: suminf.    0.33333 (1) obj. -88.3333 iterations 0
Cbc0038I Pass  24: suminf.    0.25000 (1) obj. -97 iterations 5
Cbc0038I Pass  25: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass  26: suminf.    0.75000 (2) obj. -102 iterations 1
Cbc0038I Pass  27: suminf.    0.25000 (1) obj. -97 iterations 2
Cbc0038I Pass  28: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass  29: suminf.    0.25000 (1) obj. -97 iterations 1
Cbc0038I Pass  30: suminf.    0.75000 (2) obj. -102 iterations 2
Cbc0038I Pass  31: suminf.    0.65000 (2) obj. -97.6 iterations 2
Cbc0038I Pass  32: suminf.    0.65000 (2) obj. -97.6 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -85 - took 0.00 seconds
Cbc0012I Integer solution of -85 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0001I Search completed - best objective -85, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

