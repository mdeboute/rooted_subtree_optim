Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 4.1789e-05 - average 2.23471e-07, 28 fixed columns
Coin0506I Presolve 127 (-60) rows, 71 (-30) columns and 388 (-180) elements
Clp0014I Perturbing problem by 0.001% of 0.29138457 - largest nonzero change 0 ( 0%) - largest zero change 2.9533151e-05
Clp0000I Optimal - objective value 54.981511
Clp0000I Optimal - objective value 54.981511
Coin0511I After Postsolve, objective 54.981511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24517373 - largest nonzero change 0 ( 0%) - largest zero change 2.9533151e-05
Clp0000I Optimal - objective value 54.981511
Clp0000I Optimal - objective value 54.981511
Clp0000I Optimal - objective value 54.981511
Coin0511I After Postsolve, objective 54.981511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.98151065 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 10.4304
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.6033 iterations 49
Cbc0038I Solution found of -16.6033
Cbc0038I Relaxing continuous gives -16.6033
Cbc0038I Rounding solution of -23.2334 is better than previous of -16.6033

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -23.2334 to -24.2293 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.3046
Cbc0038I Pass   2: suminf.    0.97862 (4) obj. -27.3046 iterations 8
Cbc0038I Pass   3: suminf.    0.85399 (2) obj. -27.3046 iterations 6
Cbc0038I Pass   4: suminf.    0.79570 (3) obj. -27.3046 iterations 6
Cbc0038I Pass   5: suminf.    1.25430 (5) obj. -27.3046 iterations 9
Cbc0038I Pass   6: suminf.    1.25430 (5) obj. -27.3046 iterations 0
Cbc0038I Pass   7: suminf.    1.28816 (4) obj. -27.3046 iterations 6
Cbc0038I Pass   8: suminf.    1.25511 (5) obj. -27.3046 iterations 1
Cbc0038I Pass   9: suminf.    1.62327 (5) obj. -27.3046 iterations 11
Cbc0038I Pass  10: suminf.    1.40410 (4) obj. -27.3046 iterations 6
Cbc0038I Pass  11: suminf.    1.66272 (6) obj. -27.3046 iterations 6
Cbc0038I Pass  12: suminf.    1.63951 (5) obj. -27.3046 iterations 10
Cbc0038I Pass  13: suminf.    1.30114 (4) obj. -27.3046 iterations 3
Cbc0038I Pass  14: suminf.    1.72220 (6) obj. -27.3046 iterations 8
Cbc0038I Pass  15: suminf.    1.72220 (6) obj. -27.3046 iterations 0
Cbc0038I Pass  16: suminf.    1.28816 (4) obj. -27.3046 iterations 13
Cbc0038I Pass  17: suminf.    1.25511 (5) obj. -27.3046 iterations 1
Cbc0038I Pass  18: suminf.    1.62327 (5) obj. -27.3046 iterations 11
Cbc0038I Pass  19: suminf.    1.40410 (4) obj. -27.3046 iterations 6
Cbc0038I Pass  20: suminf.    1.66272 (6) obj. -27.3046 iterations 6
Cbc0038I Pass  21: suminf.    1.63951 (5) obj. -27.3046 iterations 12
Cbc0038I Pass  22: suminf.    1.30114 (4) obj. -27.3046 iterations 3
Cbc0038I Pass  23: suminf.    1.72220 (6) obj. -27.3046 iterations 10
Cbc0038I Pass  24: suminf.    1.72220 (6) obj. -27.3046 iterations 0
Cbc0038I Pass  25: suminf.    1.28816 (4) obj. -27.3046 iterations 13
Cbc0038I Pass  26: suminf.    1.25511 (5) obj. -27.3046 iterations 1
Cbc0038I Pass  27: suminf.    1.62327 (5) obj. -27.3046 iterations 11
Cbc0038I Pass  28: suminf.    1.40410 (4) obj. -27.3046 iterations 6
Cbc0038I Pass  29: suminf.    1.66272 (6) obj. -27.3046 iterations 6
Cbc0038I Pass  30: suminf.    1.63951 (5) obj. -27.3046 iterations 10
Cbc0038I Pass  31: suminf.    1.30114 (4) obj. -27.3046 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -24.2293 - took 0.06 seconds
Cbc0012I Integer solution of -24.2293 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 56 rows 33 columns
Cbc0031I 22 added rows had average density of 61.727273
Cbc0013I At root node, 22 cuts changed objective from -54.981511 to -41.983873 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5823 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1062 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.2293 best solution, best possible -41.983873 (0.72 seconds)
Cbc0012I Integer solution of -26.675581 found by rounding after 5772 iterations and 38 nodes (0.93 seconds)
Cbc0012I Integer solution of -26.965711 found by rounding after 5824 iterations and 41 nodes (0.93 seconds)
Cbc0001I Search completed - best objective -26.96571069999999, took 6497 iterations and 58 nodes (0.95 seconds)
Cbc0032I Strong branching done 688 times (14327 iterations), fathomed 2 nodes and fixed 19 variables
Cbc0035I Maximum depth 26, 327 variables fixed on reduced cost
Total time (CPU seconds):       0.93   (Wallclock seconds):       0.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-73) rows, 144 (-58) columns and 2552 (-3101) elements
Clp1000I sum of infeasibilities 1.52406e-07 - average 1.1634e-09, 84 fixed columns
Coin0506I Presolve 48 (-83) rows, 60 (-84) columns and 210 (-2342) elements
Clp0006I 0  Obj 2.8556593 Dual inf 3.5078518 (58)
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 1.6068763 - largest nonzero change 2.9680824e-05 ( 0.0018056464%) - largest zero change 2.9847962e-05
Clp0000I Optimal - objective value 9.2651657
Clp0000I Optimal - objective value 9.2651657
Coin0511I After Postsolve, objective 9.2651657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 9.2651657 Dual inf 65.548312 (44)
Clp0014I Perturbing problem by 0.001% of 1.5269209 - largest nonzero change 2.1427809e-05 ( 0.0021367864%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 71.341514
Clp0000I Optimal - objective value 71.341514
Clp0000I Optimal - objective value 71.341514
Coin0511I After Postsolve, objective 71.341514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.34151424 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 144 columns (144 integer (144 of which binary)) and 2556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.693%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 4.25553
Cbc0038I Pass   1: suminf.    1.46500 (28) obj. -45.9234 iterations 24
Cbc0038I Pass   2: suminf.    1.46500 (28) obj. -45.9234 iterations 1
Cbc0038I Pass   3: suminf.    0.51427 (13) obj. -20.7354 iterations 15
Cbc0038I Solution found of -8.24962
Cbc0038I Rounding solution of -11.2098 is better than previous of -8.24962

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 144 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -11.2098 to -13.4273 (0.04 seconds)
Cbc0038I Round again with cutoff of -18.3374
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.46500 (28) obj. -45.9234 iterations 0
Cbc0038I Pass   5: suminf.    1.46500 (28) obj. -45.9234 iterations 2
Cbc0038I Pass   6: suminf.    0.57903 (9) obj. -18.3374 iterations 21
Cbc0038I Pass   7: suminf.    0.53999 (13) obj. -18.3374 iterations 18
Cbc0038I Pass   8: suminf.    0.70629 (3) obj. -18.3374 iterations 18
Cbc0038I Pass   9: suminf.    0.70629 (3) obj. -18.3374 iterations 2
Cbc0038I Pass  10: suminf.    1.01350 (3) obj. -18.3374 iterations 3
Cbc0038I Pass  11: suminf.    1.01350 (3) obj. -18.3374 iterations 1
Cbc0038I Pass  12: suminf.    0.70629 (3) obj. -18.3374 iterations 3
Cbc0038I Pass  13: suminf.    1.72413 (13) obj. -18.3374 iterations 27
Cbc0038I Pass  14: suminf.    0.51727 (9) obj. -19.513 iterations 6
Cbc0038I Pass  15: suminf.    0.51727 (9) obj. -19.513 iterations 1
Cbc0038I Pass  16: suminf.    1.12982 (10) obj. -18.3374 iterations 11
Cbc0038I Pass  17: suminf.    1.12276 (9) obj. -18.3374 iterations 1
Cbc0038I Pass  18: suminf.    0.86946 (3) obj. -18.3374 iterations 11
Cbc0038I Pass  19: suminf.    0.86946 (3) obj. -18.3374 iterations 0
Cbc0038I Pass  20: suminf.    0.82514 (3) obj. -18.3374 iterations 4
Cbc0038I Pass  21: suminf.    0.33568 (3) obj. -18.3374 iterations 2
Cbc0038I Pass  22: suminf.    0.86946 (3) obj. -18.3374 iterations 3
Cbc0038I Pass  23: suminf.    2.86360 (12) obj. -18.3374 iterations 22
Cbc0038I Pass  24: suminf.    1.45500 (11) obj. -18.3374 iterations 8
Cbc0038I Pass  25: suminf.    1.25836 (9) obj. -18.3636 iterations 3
Cbc0038I Pass  26: suminf.    1.21468 (5) obj. -18.3374 iterations 15
Cbc0038I Pass  27: suminf.    1.21468 (5) obj. -18.3374 iterations 0
Cbc0038I Pass  28: suminf.    0.99405 (5) obj. -18.3374 iterations 7
Cbc0038I Pass  29: suminf.    0.99405 (5) obj. -18.3374 iterations 2
Cbc0038I Pass  30: suminf.    0.85325 (4) obj. -18.3374 iterations 5
Cbc0038I Pass  31: suminf.    0.85325 (4) obj. -18.3374 iterations 0
Cbc0038I Pass  32: suminf.    0.73477 (4) obj. -18.3374 iterations 3
Cbc0038I Pass  33: suminf.    0.51582 (4) obj. -19.6511 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 144 columns, reduced to 54 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -13.4273 to -24.4931 (0.09 seconds)
Cbc0038I Round again with cutoff of -32.1002
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.46500 (28) obj. -45.9234 iterations 0
Cbc0038I Pass  34: suminf.    1.46500 (28) obj. -45.9234 iterations 2
Cbc0038I Pass  35: suminf.    2.17778 (19) obj. -32.1002 iterations 37
Cbc0038I Pass  36: suminf.    1.45634 (18) obj. -32.1002 iterations 1
Cbc0038I Pass  37: suminf.    1.92141 (15) obj. -32.1002 iterations 34
Cbc0038I Pass  38: suminf.    1.46312 (12) obj. -32.1002 iterations 12
Cbc0038I Pass  39: suminf.    1.50556 (12) obj. -32.1002 iterations 10
Cbc0038I Pass  40: suminf.    2.34387 (12) obj. -32.1002 iterations 34
Cbc0038I Pass  41: suminf.    1.43942 (10) obj. -32.1002 iterations 19
Cbc0038I Pass  42: suminf.    1.50754 (9) obj. -32.1002 iterations 21
Cbc0038I Pass  43: suminf.    1.26495 (9) obj. -32.3428 iterations 11
Cbc0038I Pass  44: suminf.    1.59258 (14) obj. -32.1002 iterations 18
Cbc0038I Pass  45: suminf.    1.55895 (14) obj. -32.1002 iterations 4
Cbc0038I Pass  46: suminf.    1.59258 (14) obj. -32.1002 iterations 9
Cbc0038I Pass  47: suminf.    1.47459 (14) obj. -32.1002 iterations 17
Cbc0038I Pass  48: suminf.    1.28323 (17) obj. -32.1002 iterations 9
Cbc0038I Pass  49: suminf.    2.59097 (18) obj. -32.1002 iterations 23
Cbc0038I Pass  50: suminf.    1.88092 (15) obj. -32.1002 iterations 2
Cbc0038I Pass  51: suminf.    1.08180 (9) obj. -32.1002 iterations 5
Cbc0038I Pass  52: suminf.    1.03974 (9) obj. -32.1422 iterations 8
Cbc0038I Pass  53: suminf.    1.85407 (14) obj. -32.1002 iterations 12
Cbc0038I Pass  54: suminf.    1.08180 (9) obj. -32.1002 iterations 9
Cbc0038I Pass  55: suminf.    1.03146 (9) obj. -32.1505 iterations 12
Cbc0038I Pass  56: suminf.    2.14406 (20) obj. -32.1002 iterations 20
Cbc0038I Pass  57: suminf.    2.06193 (20) obj. -32.1002 iterations 3
Cbc0038I Pass  58: suminf.    2.09904 (13) obj. -32.1002 iterations 29
Cbc0038I Pass  59: suminf.    1.63594 (12) obj. -32.1002 iterations 9
Cbc0038I Pass  60: suminf.    1.11687 (10) obj. -32.1002 iterations 13
Cbc0038I Pass  61: suminf.    0.88187 (10) obj. -32.1002 iterations 7
Cbc0038I Pass  62: suminf.    2.02773 (18) obj. -32.1002 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 144 columns, reduced to 38 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -24.4931 - took 0.11 seconds
Cbc0012I Integer solution of -24.493139 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 131 rows 144 columns, reduced to 46 rows 51 columns
Cbc0031I 63 added rows had average density of 30.460317
Cbc0013I At root node, 63 cuts changed objective from -62.527899 to -29.983907 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8568 row cuts average 7.5 elements, 1 column cuts (12 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 815 row cuts average 133.4 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 530 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 540 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 274 row cuts average 92.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.681 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.493139 best solution, best possible -29.983907 (2.70 seconds)
Cbc0012I Integer solution of -26.425029 found by rounding after 3615 iterations and 1 nodes (2.71 seconds)
Cbc0012I Integer solution of -26.693571 found by DiveCoefficient after 3643 iterations and 1 nodes (2.71 seconds)
Cbc0012I Integer solution of -26.965711 found by rounding after 3649 iterations and 3 nodes (2.72 seconds)
Cbc0001I Search completed - best objective -26.96571069999999, took 4538 iterations and 18 nodes (3.09 seconds)
Cbc0032I Strong branching done 428 times (8781 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 56 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       3.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 4.1789e-05 - average 2.23471e-07, 28 fixed columns
Coin0506I Presolve 127 (-60) rows, 71 (-30) columns and 388 (-180) elements
Clp0014I Perturbing problem by 0.001% of 0.29138457 - largest nonzero change 0 ( 0%) - largest zero change 2.9533151e-05
Clp0000I Optimal - objective value 54.981511
Clp0000I Optimal - objective value 54.981511
Coin0511I After Postsolve, objective 54.981511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24517373 - largest nonzero change 0 ( 0%) - largest zero change 2.9533151e-05
Clp0000I Optimal - objective value 54.981511
Clp0000I Optimal - objective value 54.981511
Clp0000I Optimal - objective value 54.981511
Coin0511I After Postsolve, objective 54.981511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.98151065 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 10.4304
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.6033 iterations 49
Cbc0038I Solution found of -16.6033
Cbc0038I Relaxing continuous gives -16.6033
Cbc0038I Rounding solution of -23.2334 is better than previous of -16.6033

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 56 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -23.2334 to -24.2293 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.3046
Cbc0038I Pass   2: suminf.    0.97862 (4) obj. -27.3046 iterations 8
Cbc0038I Pass   3: suminf.    0.85399 (2) obj. -27.3046 iterations 6
Cbc0038I Pass   4: suminf.    0.79570 (3) obj. -27.3046 iterations 6
Cbc0038I Pass   5: suminf.    1.25430 (5) obj. -27.3046 iterations 9
Cbc0038I Pass   6: suminf.    1.25430 (5) obj. -27.3046 iterations 0
Cbc0038I Pass   7: suminf.    1.28816 (4) obj. -27.3046 iterations 6
Cbc0038I Pass   8: suminf.    1.25511 (5) obj. -27.3046 iterations 1
Cbc0038I Pass   9: suminf.    1.62327 (5) obj. -27.3046 iterations 11
Cbc0038I Pass  10: suminf.    1.40410 (4) obj. -27.3046 iterations 6
Cbc0038I Pass  11: suminf.    1.66272 (6) obj. -27.3046 iterations 6
Cbc0038I Pass  12: suminf.    1.63951 (5) obj. -27.3046 iterations 10
Cbc0038I Pass  13: suminf.    1.30114 (4) obj. -27.3046 iterations 3
Cbc0038I Pass  14: suminf.    1.72220 (6) obj. -27.3046 iterations 8
Cbc0038I Pass  15: suminf.    1.72220 (6) obj. -27.3046 iterations 0
Cbc0038I Pass  16: suminf.    1.28816 (4) obj. -27.3046 iterations 13
Cbc0038I Pass  17: suminf.    1.25511 (5) obj. -27.3046 iterations 1
Cbc0038I Pass  18: suminf.    1.62327 (5) obj. -27.3046 iterations 11
Cbc0038I Pass  19: suminf.    1.40410 (4) obj. -27.3046 iterations 6
Cbc0038I Pass  20: suminf.    1.66272 (6) obj. -27.3046 iterations 6
Cbc0038I Pass  21: suminf.    1.63951 (5) obj. -27.3046 iterations 12
Cbc0038I Pass  22: suminf.    1.30114 (4) obj. -27.3046 iterations 3
Cbc0038I Pass  23: suminf.    1.72220 (6) obj. -27.3046 iterations 10
Cbc0038I Pass  24: suminf.    1.72220 (6) obj. -27.3046 iterations 0
Cbc0038I Pass  25: suminf.    1.28816 (4) obj. -27.3046 iterations 13
Cbc0038I Pass  26: suminf.    1.25511 (5) obj. -27.3046 iterations 1
Cbc0038I Pass  27: suminf.    1.62327 (5) obj. -27.3046 iterations 11
Cbc0038I Pass  28: suminf.    1.40410 (4) obj. -27.3046 iterations 6
Cbc0038I Pass  29: suminf.    1.66272 (6) obj. -27.3046 iterations 6
Cbc0038I Pass  30: suminf.    1.63951 (5) obj. -27.3046 iterations 10
Cbc0038I Pass  31: suminf.    1.30114 (4) obj. -27.3046 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -24.2293 - took 0.07 seconds
Cbc0012I Integer solution of -24.2293 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 56 rows 33 columns
Cbc0031I 22 added rows had average density of 61.727273
Cbc0013I At root node, 22 cuts changed objective from -54.981511 to -41.983873 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5823 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1062 row cuts average 100.7 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.2293 best solution, best possible -41.983873 (0.76 seconds)
Cbc0012I Integer solution of -26.675581 found by rounding after 5772 iterations and 38 nodes (0.99 seconds)
Cbc0012I Integer solution of -26.965711 found by rounding after 5824 iterations and 41 nodes (1.00 seconds)
Cbc0001I Search completed - best objective -26.96571069999999, took 6497 iterations and 58 nodes (1.03 seconds)
Cbc0032I Strong branching done 688 times (14327 iterations), fathomed 2 nodes and fixed 19 variables
Cbc0035I Maximum depth 26, 327 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-74) rows, 144 (-59) columns and 2552 (-3102) elements
Clp1000I sum of infeasibilities 1.52406e-07 - average 1.1634e-09, 84 fixed columns
Coin0506I Presolve 48 (-83) rows, 60 (-84) columns and 210 (-2342) elements
Clp0006I 0  Obj 2.8556593 Dual inf 3.5078518 (58)
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 1.6068763 - largest nonzero change 2.9680824e-05 ( 0.0018056464%) - largest zero change 2.9847962e-05
Clp0000I Optimal - objective value 9.2651657
Clp0000I Optimal - objective value 9.2651657
Coin0511I After Postsolve, objective 9.2651657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 9.2651657 Dual inf 65.548312 (44)
Clp0014I Perturbing problem by 0.001% of 1.5269209 - largest nonzero change 2.1427809e-05 ( 0.0021367864%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 71.341514
Clp0000I Optimal - objective value 71.341514
Clp0000I Optimal - objective value 71.341514
Coin0511I After Postsolve, objective 71.341514, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.34151424 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 144 columns (144 integer (144 of which binary)) and 2556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.693%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 4.25553
Cbc0038I Pass   1: suminf.    1.46500 (28) obj. -45.9234 iterations 24
Cbc0038I Pass   2: suminf.    1.46500 (28) obj. -45.9234 iterations 1
Cbc0038I Pass   3: suminf.    0.51427 (13) obj. -20.7354 iterations 15
Cbc0038I Solution found of -8.24962
Cbc0038I Rounding solution of -11.2098 is better than previous of -8.24962

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 144 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -11.2098 to -13.4273 (0.04 seconds)
Cbc0038I Round again with cutoff of -18.3374
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.46500 (28) obj. -45.9234 iterations 0
Cbc0038I Pass   5: suminf.    1.46500 (28) obj. -45.9234 iterations 2
Cbc0038I Pass   6: suminf.    0.57903 (9) obj. -18.3374 iterations 21
Cbc0038I Pass   7: suminf.    0.53999 (13) obj. -18.3374 iterations 18
Cbc0038I Pass   8: suminf.    0.70629 (3) obj. -18.3374 iterations 18
Cbc0038I Pass   9: suminf.    0.70629 (3) obj. -18.3374 iterations 2
Cbc0038I Pass  10: suminf.    1.01350 (3) obj. -18.3374 iterations 3
Cbc0038I Pass  11: suminf.    1.01350 (3) obj. -18.3374 iterations 1
Cbc0038I Pass  12: suminf.    0.70629 (3) obj. -18.3374 iterations 3
Cbc0038I Pass  13: suminf.    1.72413 (13) obj. -18.3374 iterations 27
Cbc0038I Pass  14: suminf.    0.51727 (9) obj. -19.513 iterations 6
Cbc0038I Pass  15: suminf.    0.51727 (9) obj. -19.513 iterations 1
Cbc0038I Pass  16: suminf.    1.12982 (10) obj. -18.3374 iterations 11
Cbc0038I Pass  17: suminf.    1.12276 (9) obj. -18.3374 iterations 1
Cbc0038I Pass  18: suminf.    0.86946 (3) obj. -18.3374 iterations 11
Cbc0038I Pass  19: suminf.    0.86946 (3) obj. -18.3374 iterations 0
Cbc0038I Pass  20: suminf.    0.82514 (3) obj. -18.3374 iterations 4
Cbc0038I Pass  21: suminf.    0.33568 (3) obj. -18.3374 iterations 2
Cbc0038I Pass  22: suminf.    0.86946 (3) obj. -18.3374 iterations 3
Cbc0038I Pass  23: suminf.    2.86360 (12) obj. -18.3374 iterations 22
Cbc0038I Pass  24: suminf.    1.45500 (11) obj. -18.3374 iterations 8
Cbc0038I Pass  25: suminf.    1.25836 (9) obj. -18.3636 iterations 3
Cbc0038I Pass  26: suminf.    1.21468 (5) obj. -18.3374 iterations 15
Cbc0038I Pass  27: suminf.    1.21468 (5) obj. -18.3374 iterations 0
Cbc0038I Pass  28: suminf.    0.99405 (5) obj. -18.3374 iterations 7
Cbc0038I Pass  29: suminf.    0.99405 (5) obj. -18.3374 iterations 2
Cbc0038I Pass  30: suminf.    0.85325 (4) obj. -18.3374 iterations 5
Cbc0038I Pass  31: suminf.    0.85325 (4) obj. -18.3374 iterations 0
Cbc0038I Pass  32: suminf.    0.73477 (4) obj. -18.3374 iterations 3
Cbc0038I Pass  33: suminf.    0.51582 (4) obj. -19.6511 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 144 columns, reduced to 54 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -13.4273 to -24.4931 (0.10 seconds)
Cbc0038I Round again with cutoff of -32.1002
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.46500 (28) obj. -45.9234 iterations 0
Cbc0038I Pass  34: suminf.    1.46500 (28) obj. -45.9234 iterations 2
Cbc0038I Pass  35: suminf.    2.17778 (19) obj. -32.1002 iterations 37
Cbc0038I Pass  36: suminf.    1.45634 (18) obj. -32.1002 iterations 1
Cbc0038I Pass  37: suminf.    1.92141 (15) obj. -32.1002 iterations 34
Cbc0038I Pass  38: suminf.    1.46312 (12) obj. -32.1002 iterations 12
Cbc0038I Pass  39: suminf.    1.50556 (12) obj. -32.1002 iterations 10
Cbc0038I Pass  40: suminf.    2.34387 (12) obj. -32.1002 iterations 34
Cbc0038I Pass  41: suminf.    1.43942 (10) obj. -32.1002 iterations 19
Cbc0038I Pass  42: suminf.    1.50754 (9) obj. -32.1002 iterations 21
Cbc0038I Pass  43: suminf.    1.26495 (9) obj. -32.3428 iterations 11
Cbc0038I Pass  44: suminf.    1.59258 (14) obj. -32.1002 iterations 18
Cbc0038I Pass  45: suminf.    1.55895 (14) obj. -32.1002 iterations 4
Cbc0038I Pass  46: suminf.    1.59258 (14) obj. -32.1002 iterations 9
Cbc0038I Pass  47: suminf.    1.47459 (14) obj. -32.1002 iterations 17
Cbc0038I Pass  48: suminf.    1.28323 (17) obj. -32.1002 iterations 9
Cbc0038I Pass  49: suminf.    2.59097 (18) obj. -32.1002 iterations 23
Cbc0038I Pass  50: suminf.    1.88092 (15) obj. -32.1002 iterations 2
Cbc0038I Pass  51: suminf.    1.08180 (9) obj. -32.1002 iterations 5
Cbc0038I Pass  52: suminf.    1.03974 (9) obj. -32.1422 iterations 8
Cbc0038I Pass  53: suminf.    1.85407 (14) obj. -32.1002 iterations 12
Cbc0038I Pass  54: suminf.    1.08180 (9) obj. -32.1002 iterations 9
Cbc0038I Pass  55: suminf.    1.03146 (9) obj. -32.1505 iterations 12
Cbc0038I Pass  56: suminf.    2.14406 (20) obj. -32.1002 iterations 20
Cbc0038I Pass  57: suminf.    2.06193 (20) obj. -32.1002 iterations 3
Cbc0038I Pass  58: suminf.    2.09904 (13) obj. -32.1002 iterations 29
Cbc0038I Pass  59: suminf.    1.63594 (12) obj. -32.1002 iterations 9
Cbc0038I Pass  60: suminf.    1.11687 (10) obj. -32.1002 iterations 13
Cbc0038I Pass  61: suminf.    0.88187 (10) obj. -32.1002 iterations 7
Cbc0038I Pass  62: suminf.    2.02773 (18) obj. -32.1002 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 144 columns, reduced to 38 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -24.4931 - took 0.12 seconds
Cbc0012I Integer solution of -24.493139 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 131 rows 144 columns, reduced to 46 rows 51 columns
Cbc0031I 63 added rows had average density of 30.460317
Cbc0013I At root node, 63 cuts changed objective from -62.527899 to -29.983907 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8568 row cuts average 7.5 elements, 1 column cuts (12 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 815 row cuts average 133.4 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 530 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 540 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 274 row cuts average 92.2 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.493139 best solution, best possible -29.983907 (2.91 seconds)
Cbc0012I Integer solution of -26.425029 found by rounding after 3615 iterations and 1 nodes (2.91 seconds)
Cbc0012I Integer solution of -26.693571 found by DiveCoefficient after 3643 iterations and 1 nodes (2.91 seconds)
Cbc0012I Integer solution of -26.965711 found by rounding after 3649 iterations and 3 nodes (2.92 seconds)
Cbc0001I Search completed - best objective -26.96571069999999, took 4538 iterations and 18 nodes (3.29 seconds)
Cbc0032I Strong branching done 428 times (8781 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 56 variables fixed on reduced cost
Total time (CPU seconds):       2.38   (Wallclock seconds):       3.31

