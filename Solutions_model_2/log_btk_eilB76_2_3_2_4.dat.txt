Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 70 (-8) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 4.01769e-06 - average 2.99828e-08, 8 fixed columns
Coin0506I Presolve 118 (-16) rows, 62 (-8) columns and 353 (-47) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.2705441 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 43.579317
Clp0000I Optimal - objective value 43.579317
Coin0511I After Postsolve, objective 43.579317, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.579317
Clp0000I Optimal - objective value 43.579317
Clp0000I Optimal - objective value 43.579317
Coin0511I After Postsolve, objective 43.579317, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.57931737 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 70 columns (69 integer (69 of which binary)) and 462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.908%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.71252
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.8411 iterations 37
Cbc0038I Solution found of -10.8411
Cbc0038I Relaxing continuous gives -10.8411
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 70 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -10.8411 to -17.9786 (0.03 seconds)
Cbc0038I Round again with cutoff of -20.5096
Cbc0038I Pass   2: suminf.    0.76597 (4) obj. -20.5096 iterations 7
Cbc0038I Pass   3: suminf.    1.50079 (7) obj. -20.5096 iterations 15
Cbc0038I Pass   4: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass   5: suminf.    1.28622 (6) obj. -20.5096 iterations 11
Cbc0038I Pass   6: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass   7: suminf.    0.76597 (4) obj. -20.5096 iterations 6
Cbc0038I Pass   8: suminf.    0.76597 (4) obj. -20.5096 iterations 0
Cbc0038I Pass   9: suminf.    1.50079 (7) obj. -20.5096 iterations 12
Cbc0038I Pass  10: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass  11: suminf.    1.28622 (6) obj. -20.5096 iterations 11
Cbc0038I Pass  12: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass  13: suminf.    0.76597 (4) obj. -20.5096 iterations 6
Cbc0038I Pass  14: suminf.    0.76597 (4) obj. -20.5096 iterations 0
Cbc0038I Pass  15: suminf.    1.50079 (7) obj. -20.5096 iterations 12
Cbc0038I Pass  16: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass  17: suminf.    1.28622 (6) obj. -20.5096 iterations 10
Cbc0038I Pass  18: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass  19: suminf.    0.76597 (4) obj. -20.5096 iterations 7
Cbc0038I Pass  20: suminf.    0.76597 (4) obj. -20.5096 iterations 0
Cbc0038I Pass  21: suminf.    1.50079 (7) obj. -20.5096 iterations 14
Cbc0038I Pass  22: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass  23: suminf.    1.28622 (6) obj. -20.5096 iterations 10
Cbc0038I Pass  24: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass  25: suminf.    0.76597 (4) obj. -20.5096 iterations 6
Cbc0038I Pass  26: suminf.    0.76597 (4) obj. -20.5096 iterations 0
Cbc0038I Pass  27: suminf.    1.50079 (7) obj. -20.5096 iterations 12
Cbc0038I Pass  28: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass  29: suminf.    1.28622 (6) obj. -20.5096 iterations 11
Cbc0038I Pass  30: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass  31: suminf.    0.76597 (4) obj. -20.5096 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 70 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -17.9786 - took 0.04 seconds
Cbc0012I Integer solution of -17.97862 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 127 rows 70 columns, reduced to 70 rows 37 columns
Cbc0031I 23 added rows had average density of 36.608696
Cbc0013I At root node, 23 cuts changed objective from -43.2874 to -32.146589 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7198 row cuts average 8.9 elements, 1 column cuts (1 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1752 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 9 nodes, 8 on tree, -17.97862 best solution, best possible -32.146589 (0.68 seconds)
Cbc0001I Search completed - best objective -17.97862, took 5943 iterations and 34 nodes (0.72 seconds)
Cbc0032I Strong branching done 448 times (8968 iterations), fathomed 0 nodes and fixed 21 variables
Cbc0035I Maximum depth 14, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-33) rows, 125 (-27) columns and 2313 (-990) elements
Clp1000I sum of infeasibilities 6.17451e-07 - average 5.1029e-09, 103 fixed columns
Coin0506I Presolve 19 (-102) rows, 21 (-104) columns and 75 (-2238) elements
Clp0006I 0  Obj 61.977612 Dual inf 4.0453342 (21)
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 61.996003
Clp0000I Optimal - objective value 61.996003
Coin0511I After Postsolve, objective 61.996003, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.996003 Dual inf 95.361734 (51)
Clp0014I Perturbing problem by 0.001% of 1.8913484 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 160.97565
Clp0000I Optimal - objective value 160.97565
Clp0000I Optimal - objective value 160.97565
Coin0511I After Postsolve, objective 160.97565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 160.9756537 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 74 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 120 columns (120 integer (120 of which binary)) and 2150 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 1.43399
Cbc0038I Pass   1: suminf.    0.38361 (14) obj. -32.8954 iterations 49
Cbc0038I Solution found of -5.68039
Cbc0038I Rounding solution of -9.70867 is better than previous of -5.68039

Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -12.6816
Cbc0038I Pass   2: suminf.    0.38361 (14) obj. -32.8954 iterations 0
Cbc0038I Pass   3: suminf.    0.47950 (6) obj. -12.6816 iterations 31
Cbc0038I Pass   4: suminf.    0.87190 (3) obj. -12.6816 iterations 21
Cbc0038I Pass   5: suminf.    0.51565 (3) obj. -15.4634 iterations 2
Cbc0038I Pass   6: suminf.    0.79184 (3) obj. -12.6816 iterations 13
Cbc0038I Pass   7: suminf.    0.16634 (3) obj. -12.6816 iterations 1
Cbc0038I Pass   8: suminf.    1.26725 (15) obj. -12.6816 iterations 28
Cbc0038I Pass   9: suminf.    0.81323 (16) obj. -12.6816 iterations 14
Cbc0038I Pass  10: suminf.    1.41586 (6) obj. -12.6816 iterations 58
Cbc0038I Pass  11: suminf.    0.53977 (5) obj. -12.6816 iterations 2
Cbc0038I Pass  12: suminf.    0.62402 (5) obj. -12.6816 iterations 14
Cbc0038I Pass  13: suminf.    0.50341 (4) obj. -12.6816 iterations 10
Cbc0038I Pass  14: suminf.    0.53266 (4) obj. -12.6816 iterations 5
Cbc0038I Pass  15: suminf.    0.20170 (4) obj. -14.0055 iterations 5
Cbc0038I Pass  16: suminf.    0.70001 (8) obj. -12.6816 iterations 24
Cbc0038I Pass  17: suminf.    0.69477 (9) obj. -12.6816 iterations 3
Cbc0038I Pass  18: suminf.    0.77646 (8) obj. -12.6816 iterations 21
Cbc0038I Pass  19: suminf.    0.73666 (7) obj. -12.6816 iterations 7
Cbc0038I Pass  20: suminf.    0.62934 (5) obj. -12.6816 iterations 14
Cbc0038I Pass  21: suminf.    0.58258 (5) obj. -12.7752 iterations 6
Cbc0038I Pass  22: suminf.    1.01948 (10) obj. -12.6816 iterations 20
Cbc0038I Pass  23: suminf.    0.92814 (7) obj. -12.6816 iterations 6
Cbc0038I Pass  24: suminf.    1.14320 (8) obj. -12.6816 iterations 11
Cbc0038I Pass  25: suminf.    1.09905 (5) obj. -12.6816 iterations 4
Cbc0038I Pass  26: suminf.    1.13307 (8) obj. -12.6816 iterations 5
Cbc0038I Pass  27: suminf.    1.08911 (5) obj. -12.6816 iterations 4
Cbc0038I Pass  28: suminf.    1.14320 (8) obj. -12.6816 iterations 5
Cbc0038I Pass  29: suminf.    1.98175 (12) obj. -12.6816 iterations 24
Cbc0038I Pass  30: suminf.    0.49741 (7) obj. -12.6816 iterations 8
Cbc0038I Pass  31: suminf.    0.47761 (8) obj. -12.6816 iterations 5
Cbc0038I Rounding solution of -10.6274 is better than previous of -9.70867

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 27 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -10.6274 to -15.1838 (0.08 seconds)
Cbc0038I Round again with cutoff of -20.0346
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.38361 (14) obj. -32.8954 iterations 0
Cbc0038I Pass  32: suminf.    0.70163 (15) obj. -20.0346 iterations 41
Cbc0038I Pass  33: suminf.    0.70421 (14) obj. -20.0346 iterations 1
Cbc0038I Pass  34: suminf.    1.43926 (6) obj. -20.0346 iterations 31
Cbc0038I Pass  35: suminf.    0.20170 (4) obj. -21.0055 iterations 5
Cbc0038I Pass  36: suminf.    0.80049 (5) obj. -20.0346 iterations 11
Cbc0038I Pass  37: suminf.    0.67988 (4) obj. -20.0346 iterations 7
Cbc0038I Pass  38: suminf.    0.44443 (4) obj. -20.0346 iterations 6
Cbc0038I Pass  39: suminf.    1.23457 (19) obj. -20.0346 iterations 32
Cbc0038I Pass  40: suminf.    0.92432 (20) obj. -20.0346 iterations 3
Cbc0038I Pass  41: suminf.    0.31853 (7) obj. -20.0346 iterations 9
Cbc0038I Pass  42: suminf.    0.32342 (7) obj. -20.0346 iterations 1
Cbc0038I Pass  43: suminf.    1.12304 (8) obj. -20.0346 iterations 22
Cbc0038I Pass  44: suminf.    0.81595 (13) obj. -20.0346 iterations 8
Cbc0038I Pass  45: suminf.    1.43926 (7) obj. -20.0346 iterations 16
Cbc0038I Pass  46: suminf.    0.25284 (6) obj. -20.9032 iterations 6
Cbc0038I Pass  47: suminf.    1.01913 (8) obj. -20.0346 iterations 12
Cbc0038I Pass  48: suminf.    0.75562 (6) obj. -20.0346 iterations 7
Cbc0038I Pass  49: suminf.    1.25835 (8) obj. -20.0346 iterations 18
Cbc0038I Pass  50: suminf.    1.25835 (8) obj. -20.0346 iterations 1
Cbc0038I Pass  51: suminf.    0.58300 (7) obj. -20.0346 iterations 12
Cbc0038I Pass  52: suminf.    0.58300 (7) obj. -20.0346 iterations 2
Cbc0038I Pass  53: suminf.    0.61632 (7) obj. -20.0346 iterations 13
Cbc0038I Pass  54: suminf.    0.61632 (7) obj. -20.0346 iterations 3
Cbc0038I Pass  55: suminf.    0.58300 (7) obj. -20.0346 iterations 13
Cbc0038I Pass  56: suminf.    1.47489 (12) obj. -20.0346 iterations 31
Cbc0038I Pass  57: suminf.    0.94854 (12) obj. -20.0346 iterations 10
Cbc0038I Pass  58: suminf.    1.39607 (12) obj. -20.0346 iterations 12
Cbc0038I Pass  59: suminf.    1.12164 (11) obj. -20.0346 iterations 7
Cbc0038I Pass  60: suminf.    1.12639 (7) obj. -20.0346 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -15.1838 - took 0.05 seconds
Cbc0012I Integer solution of -15.18379 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 107 rows 120 columns, reduced to 4 rows 4 columns
Cbc0031I 65 added rows had average density of 20.723077
Cbc0013I At root node, 65 cuts changed objective from -39.437306 to -21.795346 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8574 row cuts average 4.6 elements, 4 column cuts (4 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1102 row cuts average 98.6 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 229 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 595 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 328 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 400 row cuts average 33.5 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 713 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.753 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15.18379 best solution, best possible -21.795346 (2.42 seconds)
Cbc0012I Integer solution of -15.85328 found by DiveCoefficient after 4342 iterations and 2 nodes (2.75 seconds)
Cbc0016I Integer solution of -17.97862 found by strong branching after 4516 iterations and 5 nodes (3.05 seconds)
Cbc0001I Search completed - best objective -17.97862, took 4795 iterations and 10 nodes (3.06 seconds)
Cbc0032I Strong branching done 330 times (7877 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 19 variables fixed on reduced cost
Total time (CPU seconds):       2.08   (Wallclock seconds):       3.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 70 (-8) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 4.01769e-06 - average 2.99828e-08, 8 fixed columns
Coin0506I Presolve 118 (-16) rows, 62 (-8) columns and 353 (-47) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.2705441 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 43.579317
Clp0000I Optimal - objective value 43.579317
Coin0511I After Postsolve, objective 43.579317, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.579317
Clp0000I Optimal - objective value 43.579317
Clp0000I Optimal - objective value 43.579317
Coin0511I After Postsolve, objective 43.579317, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.57931737 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 70 columns (69 integer (69 of which binary)) and 462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.908%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.71252
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.8411 iterations 37
Cbc0038I Solution found of -10.8411
Cbc0038I Relaxing continuous gives -10.8411
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 70 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -10.8411 to -17.9786 (0.04 seconds)
Cbc0038I Round again with cutoff of -20.5096
Cbc0038I Pass   2: suminf.    0.76597 (4) obj. -20.5096 iterations 7
Cbc0038I Pass   3: suminf.    1.50079 (7) obj. -20.5096 iterations 15
Cbc0038I Pass   4: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass   5: suminf.    1.28622 (6) obj. -20.5096 iterations 11
Cbc0038I Pass   6: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass   7: suminf.    0.76597 (4) obj. -20.5096 iterations 6
Cbc0038I Pass   8: suminf.    0.76597 (4) obj. -20.5096 iterations 0
Cbc0038I Pass   9: suminf.    1.50079 (7) obj. -20.5096 iterations 12
Cbc0038I Pass  10: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass  11: suminf.    1.28622 (6) obj. -20.5096 iterations 11
Cbc0038I Pass  12: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass  13: suminf.    0.76597 (4) obj. -20.5096 iterations 6
Cbc0038I Pass  14: suminf.    0.76597 (4) obj. -20.5096 iterations 0
Cbc0038I Pass  15: suminf.    1.50079 (7) obj. -20.5096 iterations 12
Cbc0038I Pass  16: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass  17: suminf.    1.28622 (6) obj. -20.5096 iterations 10
Cbc0038I Pass  18: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass  19: suminf.    0.76597 (4) obj. -20.5096 iterations 7
Cbc0038I Pass  20: suminf.    0.76597 (4) obj. -20.5096 iterations 0
Cbc0038I Pass  21: suminf.    1.50079 (7) obj. -20.5096 iterations 14
Cbc0038I Pass  22: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass  23: suminf.    1.28622 (6) obj. -20.5096 iterations 10
Cbc0038I Pass  24: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass  25: suminf.    0.76597 (4) obj. -20.5096 iterations 6
Cbc0038I Pass  26: suminf.    0.76597 (4) obj. -20.5096 iterations 0
Cbc0038I Pass  27: suminf.    1.50079 (7) obj. -20.5096 iterations 12
Cbc0038I Pass  28: suminf.    1.49942 (7) obj. -20.5096 iterations 3
Cbc0038I Pass  29: suminf.    1.28622 (6) obj. -20.5096 iterations 11
Cbc0038I Pass  30: suminf.    0.92001 (3) obj. -20.5096 iterations 7
Cbc0038I Pass  31: suminf.    0.76597 (4) obj. -20.5096 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 70 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -17.9786 - took 0.04 seconds
Cbc0012I Integer solution of -17.97862 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 127 rows 70 columns, reduced to 70 rows 37 columns
Cbc0031I 23 added rows had average density of 36.608696
Cbc0013I At root node, 23 cuts changed objective from -43.2874 to -32.146589 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7198 row cuts average 8.9 elements, 1 column cuts (1 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1752 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 69.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -17.97862 best solution, best possible -32.146589 (0.67 seconds)
Cbc0001I Search completed - best objective -17.97862, took 5943 iterations and 34 nodes (0.77 seconds)
Cbc0032I Strong branching done 448 times (8968 iterations), fathomed 0 nodes and fixed 21 variables
Cbc0035I Maximum depth 14, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.74   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 120 (-33) columns and 2109 (-1195) elements
Clp1000I sum of infeasibilities 2.83618e-08 - average 2.44499e-10, 79 fixed columns
Coin0506I Presolve 38 (-78) rows, 41 (-79) columns and 153 (-1956) elements
Clp0006I 0  Obj -46.605616 Dual inf 1.0830641 (40)
Clp0029I End of values pass after 41 iterations
Clp0014I Perturbing problem by 0.001% of 3.5053062 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value -45.615842
Clp0000I Optimal - objective value -45.615842
Coin0511I After Postsolve, objective -45.615842, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -45.615842 Dual inf 77.573732 (51)
Clp0014I Perturbing problem by 0.001% of 2.1761232 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 54.174031
Clp0000I Optimal - objective value 54.174031
Clp0000I Optimal - objective value 54.174031
Coin0511I After Postsolve, objective 54.174031, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.17403068 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 74 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 51 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 120 columns (120 integer (120 of which binary)) and 2151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.244%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 1.82809
Cbc0038I Pass   1: suminf.    0.79027 (17) obj. -42.4815 iterations 27
Cbc0038I Solution found of -0.58545
Cbc0038I Rounding solution of -6.46542 is better than previous of -0.58545

Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 19 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -6.46542 to -7.74927 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.5187
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.79027 (17) obj. -42.4815 iterations 0
Cbc0038I Pass   3: suminf.    0.44958 (6) obj. -11.5187 iterations 19
Cbc0038I Pass   4: suminf.    0.38366 (2) obj. -11.5187 iterations 11
Cbc0038I Pass   5: suminf.    0.27054 (2) obj. -11.5187 iterations 6
Cbc0038I Pass   6: suminf.    0.55390 (20) obj. -14.7176 iterations 31
Cbc0038I Pass   7: suminf.    0.18723 (4) obj. -12.1441 iterations 10
Cbc0038I Pass   8: suminf.    0.74601 (4) obj. -11.5187 iterations 8
Cbc0038I Pass   9: suminf.    0.32728 (3) obj. -11.5187 iterations 5
Cbc0038I Pass  10: suminf.    0.60720 (3) obj. -11.5187 iterations 4
Cbc0038I Pass  11: suminf.    0.49919 (3) obj. -11.5187 iterations 11
Cbc0038I Pass  12: suminf.    0.97597 (4) obj. -11.5187 iterations 3
Cbc0038I Pass  13: suminf.    0.66428 (3) obj. -11.5187 iterations 18
Cbc0038I Pass  14: suminf.    0.59199 (3) obj. -12.0204 iterations 3
Cbc0038I Pass  15: suminf.    0.66428 (3) obj. -11.5187 iterations 4
Cbc0038I Pass  16: suminf.    2.47010 (17) obj. -11.5187 iterations 27
Cbc0038I Pass  17: suminf.    0.55708 (7) obj. -11.5187 iterations 11
Cbc0038I Pass  18: suminf.    0.55708 (7) obj. -11.5187 iterations 1
Cbc0038I Pass  19: suminf.    0.66517 (6) obj. -11.5187 iterations 7
Cbc0038I Pass  20: suminf.    0.46149 (6) obj. -12.3334 iterations 4
Cbc0038I Pass  21: suminf.    0.86886 (6) obj. -11.5187 iterations 12
Cbc0038I Pass  22: suminf.    0.95114 (8) obj. -11.5187 iterations 18
Cbc0038I Pass  23: suminf.    0.39198 (6) obj. -11.5187 iterations 7
Cbc0038I Pass  24: suminf.    0.68707 (8) obj. -11.5187 iterations 10
Cbc0038I Pass  25: suminf.    0.64602 (5) obj. -11.5187 iterations 3
Cbc0038I Pass  26: suminf.    1.16074 (7) obj. -11.5187 iterations 5
Cbc0038I Pass  27: suminf.    0.91089 (5) obj. -11.5187 iterations 2
Cbc0038I Pass  28: suminf.    0.28421 (5) obj. -11.5187 iterations 8
Cbc0038I Pass  29: suminf.    0.64602 (5) obj. -11.5187 iterations 4
Cbc0038I Pass  30: suminf.    0.64602 (5) obj. -11.5187 iterations 0
Cbc0038I Pass  31: suminf.    1.16074 (7) obj. -11.5187 iterations 3
Cbc0038I Rounding solution of -8.68574 is better than previous of -7.74927

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -18.3035
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.79027 (17) obj. -42.4815 iterations 0
Cbc0038I Pass  32: suminf.    0.61005 (5) obj. -18.3035 iterations 30
Cbc0038I Pass  33: suminf.    0.28456 (3) obj. -18.3035 iterations 10
Cbc0038I Pass  34: suminf.    0.65776 (3) obj. -18.3035 iterations 6
Cbc0038I Pass  35: suminf.    0.20822 (3) obj. -22.3493 iterations 4
Cbc0038I Pass  36: suminf.    0.54656 (15) obj. -18.3035 iterations 23
Cbc0038I Pass  37: suminf.    0.48428 (12) obj. -18.3035 iterations 12
Cbc0038I Pass  38: suminf.    1.58423 (8) obj. -18.3035 iterations 20
Cbc0038I Pass  39: suminf.    1.16147 (8) obj. -19.149 iterations 1
Cbc0038I Pass  40: suminf.    1.35532 (15) obj. -18.3035 iterations 11
Cbc0038I Pass  41: suminf.    1.33465 (25) obj. -18.3035 iterations 3
Cbc0038I Pass  42: suminf.    1.23105 (22) obj. -18.3035 iterations 21
Cbc0038I Pass  43: suminf.    0.84071 (22) obj. -18.3035 iterations 3
Cbc0038I Pass  44: suminf.    1.41805 (20) obj. -18.3035 iterations 17
Cbc0038I Pass  45: suminf.    0.99218 (20) obj. -18.3035 iterations 6
Cbc0038I Pass  46: suminf.    1.41805 (20) obj. -18.3035 iterations 8
Cbc0038I Pass  47: suminf.    1.17996 (17) obj. -18.3035 iterations 20
Cbc0038I Pass  48: suminf.    0.62382 (24) obj. -18.3035 iterations 7
Cbc0038I Pass  49: suminf.    1.32172 (22) obj. -18.3035 iterations 11
Cbc0038I Pass  50: suminf.    1.32172 (22) obj. -18.3035 iterations 2
Cbc0038I Pass  51: suminf.    1.41805 (20) obj. -18.3035 iterations 15
Cbc0038I Pass  52: suminf.    0.94352 (20) obj. -18.3035 iterations 7
Cbc0038I Pass  53: suminf.    1.41805 (20) obj. -18.3035 iterations 10
Cbc0038I Pass  54: suminf.    0.99218 (20) obj. -18.3035 iterations 6
Cbc0038I Pass  55: suminf.    1.49729 (19) obj. -18.3035 iterations 14
Cbc0038I Pass  56: suminf.    1.49729 (19) obj. -18.3035 iterations 0
Cbc0038I Pass  57: suminf.    0.55334 (9) obj. -18.3035 iterations 14
Cbc0038I Pass  58: suminf.    0.55334 (9) obj. -18.3035 iterations 3
Cbc0038I Pass  59: suminf.    0.61078 (9) obj. -18.3035 iterations 4
Cbc0038I Pass  60: suminf.    0.61078 (9) obj. -18.3035 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 120 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -8.68574 - took 0.04 seconds
Cbc0012I Integer solution of -8.68574 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 107 rows 120 columns, reduced to 5 rows 7 columns
Cbc0012I Integer solution of -12.83067 found by DiveCoefficient after 3454 iterations and 0 nodes (2.68 seconds)
Cbc0031I 51 added rows had average density of 37.019608
Cbc0013I At root node, 51 cuts changed objective from -45.442523 to -20.069882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10188 row cuts average 15.3 elements, 1 column cuts (7 active)  in 0.225 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1511 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 936 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 20 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 588 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 347 row cuts average 71.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 283 row cuts average 28.2 elements, 0 column cuts (0 active)  in 0.704 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.83067 best solution, best possible -20.069882 (2.71 seconds)
Cbc0012I Integer solution of -17.97862 found by rounding after 3473 iterations and 1 nodes (2.75 seconds)
Cbc0010I After 4 nodes, 4 on tree, -17.97862 best solution, best possible -20.069882 (3.44 seconds)
Cbc0001I Search completed - best objective -17.97862, took 4175 iterations and 8 nodes (3.45 seconds)
Cbc0032I Strong branching done 174 times (2671 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 34 variables fixed on reduced cost
Total time (CPU seconds):       2.32   (Wallclock seconds):       3.47

