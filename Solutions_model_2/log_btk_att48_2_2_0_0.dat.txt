Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 46 (-4) columns and 205 (-80) elements
Clp1000I sum of infeasibilities 0 - average 0, 3 fixed columns
Coin0506I Presolve 72 (-9) rows, 43 (-3) columns and 184 (-21) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Coin0511I After Postsolve, objective 2725.5159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Coin0511I After Postsolve, objective 2725.5159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2725.51589 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 46 columns (45 integer (45 of which binary)) and 205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.870%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 10.5346
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -425.391 iterations 32
Cbc0038I Solution found of -425.391
Cbc0038I Relaxing continuous gives -425.391
Cbc0038I Rounding solution of -716.28 is better than previous of -425.391

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 46 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -716.28 to -1470.67 (0.02 seconds)
Cbc0038I Round again with cutoff of -1596.15
Cbc0038I Pass   2: suminf.    2.77395 (13) obj. -1596.15 iterations 12
Cbc0038I Pass   3: suminf.    1.83512 (5) obj. -1596.15 iterations 16
Cbc0038I Pass   4: suminf.    1.41678 (6) obj. -1596.15 iterations 5
Cbc0038I Pass   5: suminf.    1.50878 (5) obj. -1596.15 iterations 8
Cbc0038I Pass   6: suminf.    1.50878 (5) obj. -1596.15 iterations 0
Cbc0038I Pass   7: suminf.    1.96843 (6) obj. -1596.15 iterations 4
Cbc0038I Pass   8: suminf.    1.31323 (4) obj. -1596.15 iterations 3
Cbc0038I Pass   9: suminf.    1.81352 (7) obj. -1596.15 iterations 9
Cbc0038I Pass  10: suminf.    1.31225 (5) obj. -1596.15 iterations 4
Cbc0038I Pass  11: suminf.    1.54311 (5) obj. -1596.15 iterations 6
Cbc0038I Pass  12: suminf.    1.54311 (5) obj. -1596.15 iterations 0
Cbc0038I Pass  13: suminf.    0.92663 (3) obj. -1596.15 iterations 4
Cbc0038I Pass  14: suminf.    0.89788 (3) obj. -1596.15 iterations 1
Cbc0038I Pass  15: suminf.    1.18504 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  16: suminf.    1.05842 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  17: suminf.    1.34897 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  18: suminf.    2.81835 (12) obj. -1596.15 iterations 18
Cbc0038I Pass  19: suminf.    1.56624 (9) obj. -1596.15 iterations 5
Cbc0038I Pass  20: suminf.    1.61046 (6) obj. -1596.15 iterations 10
Cbc0038I Pass  21: suminf.    1.42058 (6) obj. -1596.15 iterations 1
Cbc0038I Pass  22: suminf.    1.05272 (3) obj. -1596.15 iterations 6
Cbc0038I Pass  23: suminf.    0.66893 (2) obj. -1596.15 iterations 1
Cbc0038I Pass  24: suminf.    0.82013 (2) obj. -1596.15 iterations 1
Cbc0038I Pass  25: suminf.    0.70790 (3) obj. -1596.15 iterations 1
Cbc0038I Pass  26: suminf.    1.15147 (3) obj. -1596.15 iterations 2
Cbc0038I Pass  27: suminf.    1.10027 (5) obj. -1596.15 iterations 14
Cbc0038I Pass  28: suminf.    0.78110 (4) obj. -1596.15 iterations 1
Cbc0038I Pass  29: suminf.    1.01447 (4) obj. -1596.15 iterations 4
Cbc0038I Pass  30: suminf.    1.00958 (5) obj. -1596.15 iterations 1
Cbc0038I Pass  31: suminf.    1.33514 (4) obj. -1596.15 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 46 columns, reduced to 70 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1470.67 - took 0.07 seconds
Cbc0012I Integer solution of -1470.666 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 21 added rows had average density of 21.238095
Cbc0013I At root node, 21 cuts changed objective from -2725.5159 to -1949.2235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6654 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1380 row cuts average 43.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1470.666, took 4721 iterations and 16 nodes (0.46 seconds)
Cbc0032I Strong branching done 318 times (4976 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-15) rows, 92 (-4) columns and 1225 (-188) elements
Clp1000I sum of infeasibilities 4.86237e-08 - average 5.85827e-10, 75 fixed columns
Coin0506I Presolve 9 (-74) rows, 17 (-75) columns and 33 (-1192) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 1.44445 - largest nonzero change 1.702643e-05 ( 0.00085132148%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value -2738.4931
Clp0000I Optimal - objective value -2738.4931
Coin0511I After Postsolve, objective -2738.4931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5108369 - largest nonzero change 2.3155777e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3617.6266
Clp0000I Optimal - objective value 3617.6266
Clp0000I Optimal - objective value 3617.6266
Coin0511I After Postsolve, objective 3617.6266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3617.626648 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 83 rows, 92 columns (92 integer (92 of which binary)) and 1226 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.992%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 8.31612
Cbc0038I Pass   1: suminf.    2.89742 (22) obj. -2107.43 iterations 27
Cbc0038I Pass   2: suminf.    2.89742 (22) obj. -2107.43 iterations 3
Cbc0038I Pass   3: suminf.    0.29298 (5) obj. -1243.47 iterations 17
Cbc0038I Solution found of -793.443
Cbc0038I Rounding solution of -1099.87 is better than previous of -793.443

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1334.43
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.89742 (22) obj. -2107.43 iterations 0
Cbc0038I Pass   5: suminf.    2.89742 (22) obj. -2107.43 iterations 1
Cbc0038I Pass   6: suminf.    0.56926 (24) obj. -1334.43 iterations 32
Cbc0038I Pass   7: suminf.    1.54461 (13) obj. -1334.43 iterations 13
Cbc0038I Pass   8: suminf.    0.45451 (2) obj. -1334.43 iterations 16
Cbc0038I Pass   9: suminf.    0.20192 (2) obj. -1400.87 iterations 3
Cbc0038I Pass  10: suminf.    0.45451 (2) obj. -1334.43 iterations 5
Cbc0038I Pass  11: suminf.    2.34968 (10) obj. -1334.43 iterations 20
Cbc0038I Pass  12: suminf.    1.09167 (6) obj. -1334.43 iterations 6
Cbc0038I Pass  13: suminf.    1.09167 (6) obj. -1334.43 iterations 5
Cbc0038I Pass  14: suminf.    0.69563 (3) obj. -1334.43 iterations 13
Cbc0038I Pass  15: suminf.    0.27885 (2) obj. -1427.38 iterations 6
Cbc0038I Pass  16: suminf.    0.61776 (2) obj. -1334.43 iterations 3
Cbc0038I Pass  17: suminf.    0.61776 (2) obj. -1334.43 iterations 0
Cbc0038I Pass  18: suminf.    0.36073 (2) obj. -1334.43 iterations 3
Cbc0038I Pass  19: suminf.    2.64430 (14) obj. -1334.43 iterations 35
Cbc0038I Pass  20: suminf.    2.49947 (13) obj. -1334.43 iterations 12
Cbc0038I Pass  21: suminf.    0.74692 (3) obj. -1334.43 iterations 21
Cbc0038I Pass  22: suminf.    0.49506 (3) obj. -1386.07 iterations 6
Cbc0038I Pass  23: suminf.    0.74692 (3) obj. -1334.43 iterations 5
Cbc0038I Pass  24: suminf.    4.82896 (17) obj. -1334.43 iterations 23
Cbc0038I Pass  25: suminf.    2.32486 (12) obj. -1334.43 iterations 11
Cbc0038I Pass  26: suminf.    1.52076 (9) obj. -1573.67 iterations 3
Cbc0038I Pass  27: suminf.    0.96970 (5) obj. -1334.43 iterations 12
Cbc0038I Pass  28: suminf.    0.96970 (5) obj. -1334.43 iterations 0
Cbc0038I Pass  29: suminf.    1.25059 (5) obj. -1334.43 iterations 3
Cbc0038I Pass  30: suminf.    1.25059 (5) obj. -1334.43 iterations 0
Cbc0038I Pass  31: suminf.    0.96970 (5) obj. -1334.43 iterations 4
Cbc0038I Pass  32: suminf.    2.48658 (11) obj. -1334.43 iterations 16
Cbc0038I Pass  33: suminf.    2.07396 (10) obj. -1478.85 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 92 columns, reduced to 43 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -793.443 to -1400.12 (0.04 seconds)
Cbc0038I Round again with cutoff of -1809.19
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.89742 (22) obj. -2107.43 iterations 0
Cbc0038I Pass  34: suminf.    2.89742 (22) obj. -2107.43 iterations 1
Cbc0038I Pass  35: suminf.    2.10522 (30) obj. -1809.19 iterations 26
Cbc0038I Pass  36: suminf.    1.26681 (8) obj. -1809.19 iterations 32
Cbc0038I Pass  37: suminf.    0.90896 (8) obj. -1870.38 iterations 3
Cbc0038I Pass  38: suminf.    0.93013 (5) obj. -1809.19 iterations 13
Cbc0038I Pass  39: suminf.    0.82764 (5) obj. -1825.59 iterations 7
Cbc0038I Pass  40: suminf.    3.06463 (15) obj. -1809.19 iterations 17
Cbc0038I Pass  41: suminf.    2.49388 (12) obj. -1873.97 iterations 4
Cbc0038I Pass  42: suminf.    1.61737 (7) obj. -1809.19 iterations 17
Cbc0038I Pass  43: suminf.    1.61737 (7) obj. -1809.19 iterations 1
Cbc0038I Pass  44: suminf.    1.66099 (7) obj. -1809.19 iterations 6
Cbc0038I Pass  45: suminf.    1.66099 (7) obj. -1809.19 iterations 1
Cbc0038I Pass  46: suminf.    1.61737 (7) obj. -1809.19 iterations 2
Cbc0038I Pass  47: suminf.    2.52983 (15) obj. -1809.19 iterations 13
Cbc0038I Pass  48: suminf.    1.89912 (10) obj. -1867.19 iterations 7
Cbc0038I Pass  49: suminf.    1.44453 (8) obj. -1809.19 iterations 12
Cbc0038I Pass  50: suminf.    1.44453 (8) obj. -1809.19 iterations 3
Cbc0038I Pass  51: suminf.    1.30866 (6) obj. -1809.19 iterations 6
Cbc0038I Pass  52: suminf.    1.21045 (6) obj. -1823.92 iterations 5
Cbc0038I Pass  53: suminf.    2.46937 (15) obj. -1809.19 iterations 28
Cbc0038I Pass  54: suminf.    2.16701 (14) obj. -1961.45 iterations 5
Cbc0038I Pass  55: suminf.    1.11278 (5) obj. -1809.19 iterations 16
Cbc0038I Pass  56: suminf.    0.97507 (5) obj. -1831.22 iterations 4
Cbc0038I Pass  57: suminf.    1.11278 (5) obj. -1809.19 iterations 6
Cbc0038I Pass  58: suminf.    1.66187 (9) obj. -1809.19 iterations 21
Cbc0038I Pass  59: suminf.    1.66187 (9) obj. -1809.19 iterations 4
Cbc0038I Pass  60: suminf.    1.03591 (6) obj. -1809.19 iterations 10
Cbc0038I Pass  61: suminf.    1.03591 (6) obj. -1809.19 iterations 1
Cbc0038I Pass  62: suminf.    0.82563 (6) obj. -1809.19 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 92 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1400.12 - took 0.04 seconds
Cbc0012I Integer solution of -1400.116 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 83 rows 92 columns, reduced to 26 rows 32 columns
Cbc0031I 40 added rows had average density of 12.15
Cbc0013I At root node, 40 cuts changed objective from -3445.4744 to -1508.4757 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 2241 row cuts average 5.7 elements, 17 column cuts (17 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 127 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 67 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1400.116 best solution, best possible -1507.6795 (0.51 seconds)
Cbc0012I Integer solution of -1431.089 found by rounding after 484 iterations and 1 nodes (0.52 seconds)
Cbc0004I Integer solution of -1470.666 found after 518 iterations and 2 nodes (0.52 seconds)
Cbc0001I Search completed - best objective -1470.666, took 518 iterations and 2 nodes (0.52 seconds)
Cbc0032I Strong branching done 42 times (659 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.53

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 81 (-18) rows, 46 (-4) columns and 205 (-80) elements
Clp1000I sum of infeasibilities 0 - average 0, 3 fixed columns
Coin0506I Presolve 72 (-9) rows, 43 (-3) columns and 184 (-21) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Coin0511I After Postsolve, objective 2725.5159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Clp0000I Optimal - objective value 2725.5159
Coin0511I After Postsolve, objective 2725.5159, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2725.51589 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 81 rows, 46 columns (45 integer (45 of which binary)) and 205 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.870%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 10.5346
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -425.391 iterations 32
Cbc0038I Solution found of -425.391
Cbc0038I Relaxing continuous gives -425.391
Cbc0038I Rounding solution of -716.28 is better than previous of -425.391

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 46 columns, reduced to 67 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -716.28 to -1470.67 (0.02 seconds)
Cbc0038I Round again with cutoff of -1596.15
Cbc0038I Pass   2: suminf.    2.77395 (13) obj. -1596.15 iterations 12
Cbc0038I Pass   3: suminf.    1.83512 (5) obj. -1596.15 iterations 16
Cbc0038I Pass   4: suminf.    1.41678 (6) obj. -1596.15 iterations 5
Cbc0038I Pass   5: suminf.    1.50878 (5) obj. -1596.15 iterations 8
Cbc0038I Pass   6: suminf.    1.50878 (5) obj. -1596.15 iterations 0
Cbc0038I Pass   7: suminf.    1.96843 (6) obj. -1596.15 iterations 4
Cbc0038I Pass   8: suminf.    1.31323 (4) obj. -1596.15 iterations 3
Cbc0038I Pass   9: suminf.    1.81352 (7) obj. -1596.15 iterations 9
Cbc0038I Pass  10: suminf.    1.31225 (5) obj. -1596.15 iterations 4
Cbc0038I Pass  11: suminf.    1.54311 (5) obj. -1596.15 iterations 6
Cbc0038I Pass  12: suminf.    1.54311 (5) obj. -1596.15 iterations 0
Cbc0038I Pass  13: suminf.    0.92663 (3) obj. -1596.15 iterations 4
Cbc0038I Pass  14: suminf.    0.89788 (3) obj. -1596.15 iterations 1
Cbc0038I Pass  15: suminf.    1.18504 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  16: suminf.    1.05842 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  17: suminf.    1.34897 (4) obj. -1596.15 iterations 2
Cbc0038I Pass  18: suminf.    2.81835 (12) obj. -1596.15 iterations 18
Cbc0038I Pass  19: suminf.    1.56624 (9) obj. -1596.15 iterations 5
Cbc0038I Pass  20: suminf.    1.61046 (6) obj. -1596.15 iterations 10
Cbc0038I Pass  21: suminf.    1.42058 (6) obj. -1596.15 iterations 1
Cbc0038I Pass  22: suminf.    1.05272 (3) obj. -1596.15 iterations 6
Cbc0038I Pass  23: suminf.    0.66893 (2) obj. -1596.15 iterations 1
Cbc0038I Pass  24: suminf.    0.82013 (2) obj. -1596.15 iterations 1
Cbc0038I Pass  25: suminf.    0.70790 (3) obj. -1596.15 iterations 1
Cbc0038I Pass  26: suminf.    1.15147 (3) obj. -1596.15 iterations 2
Cbc0038I Pass  27: suminf.    1.10027 (5) obj. -1596.15 iterations 14
Cbc0038I Pass  28: suminf.    0.78110 (4) obj. -1596.15 iterations 1
Cbc0038I Pass  29: suminf.    1.01447 (4) obj. -1596.15 iterations 4
Cbc0038I Pass  30: suminf.    1.00958 (5) obj. -1596.15 iterations 1
Cbc0038I Pass  31: suminf.    1.33514 (4) obj. -1596.15 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 46 columns, reduced to 70 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1470.67 - took 0.06 seconds
Cbc0012I Integer solution of -1470.666 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 21 added rows had average density of 21.238095
Cbc0013I At root node, 21 cuts changed objective from -2725.5159 to -1949.2235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6654 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1380 row cuts average 43.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1470.666, took 4721 iterations and 16 nodes (0.48 seconds)
Cbc0032I Strong branching done 318 times (4976 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-16) rows, 92 (-5) columns and 1225 (-189) elements
Clp1000I sum of infeasibilities 4.86237e-08 - average 5.85827e-10, 75 fixed columns
Coin0506I Presolve 9 (-74) rows, 17 (-75) columns and 33 (-1192) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 1.44445 - largest nonzero change 1.702643e-05 ( 0.00085132148%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value -2738.4931
Clp0000I Optimal - objective value -2738.4931
Coin0511I After Postsolve, objective -2738.4931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.5108369 - largest nonzero change 2.3155777e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3617.6266
Clp0000I Optimal - objective value 3617.6266
Clp0000I Optimal - objective value 3617.6266
Coin0511I After Postsolve, objective 3617.6266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3617.626648 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 83 rows, 92 columns (92 integer (92 of which binary)) and 1226 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.992%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 8.31612
Cbc0038I Pass   1: suminf.    2.89742 (22) obj. -2107.43 iterations 27
Cbc0038I Pass   2: suminf.    2.89742 (22) obj. -2107.43 iterations 3
Cbc0038I Pass   3: suminf.    0.29298 (5) obj. -1243.47 iterations 17
Cbc0038I Solution found of -793.443
Cbc0038I Rounding solution of -1099.87 is better than previous of -793.443

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1334.43
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.89742 (22) obj. -2107.43 iterations 0
Cbc0038I Pass   5: suminf.    2.89742 (22) obj. -2107.43 iterations 1
Cbc0038I Pass   6: suminf.    0.56926 (24) obj. -1334.43 iterations 32
Cbc0038I Pass   7: suminf.    1.54461 (13) obj. -1334.43 iterations 13
Cbc0038I Pass   8: suminf.    0.45451 (2) obj. -1334.43 iterations 16
Cbc0038I Pass   9: suminf.    0.20192 (2) obj. -1400.87 iterations 3
Cbc0038I Pass  10: suminf.    0.45451 (2) obj. -1334.43 iterations 5
Cbc0038I Pass  11: suminf.    2.34968 (10) obj. -1334.43 iterations 20
Cbc0038I Pass  12: suminf.    1.09167 (6) obj. -1334.43 iterations 6
Cbc0038I Pass  13: suminf.    1.09167 (6) obj. -1334.43 iterations 5
Cbc0038I Pass  14: suminf.    0.69563 (3) obj. -1334.43 iterations 13
Cbc0038I Pass  15: suminf.    0.27885 (2) obj. -1427.38 iterations 6
Cbc0038I Pass  16: suminf.    0.61776 (2) obj. -1334.43 iterations 3
Cbc0038I Pass  17: suminf.    0.61776 (2) obj. -1334.43 iterations 0
Cbc0038I Pass  18: suminf.    0.36073 (2) obj. -1334.43 iterations 3
Cbc0038I Pass  19: suminf.    2.64430 (14) obj. -1334.43 iterations 35
Cbc0038I Pass  20: suminf.    2.49947 (13) obj. -1334.43 iterations 12
Cbc0038I Pass  21: suminf.    0.74692 (3) obj. -1334.43 iterations 21
Cbc0038I Pass  22: suminf.    0.49506 (3) obj. -1386.07 iterations 6
Cbc0038I Pass  23: suminf.    0.74692 (3) obj. -1334.43 iterations 5
Cbc0038I Pass  24: suminf.    4.82896 (17) obj. -1334.43 iterations 23
Cbc0038I Pass  25: suminf.    2.32486 (12) obj. -1334.43 iterations 11
Cbc0038I Pass  26: suminf.    1.52076 (9) obj. -1573.67 iterations 3
Cbc0038I Pass  27: suminf.    0.96970 (5) obj. -1334.43 iterations 12
Cbc0038I Pass  28: suminf.    0.96970 (5) obj. -1334.43 iterations 0
Cbc0038I Pass  29: suminf.    1.25059 (5) obj. -1334.43 iterations 3
Cbc0038I Pass  30: suminf.    1.25059 (5) obj. -1334.43 iterations 0
Cbc0038I Pass  31: suminf.    0.96970 (5) obj. -1334.43 iterations 4
Cbc0038I Pass  32: suminf.    2.48658 (11) obj. -1334.43 iterations 16
Cbc0038I Pass  33: suminf.    2.07396 (10) obj. -1478.85 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 92 columns, reduced to 43 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -793.443 to -1400.12 (0.04 seconds)
Cbc0038I Round again with cutoff of -1809.19
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.89742 (22) obj. -2107.43 iterations 0
Cbc0038I Pass  34: suminf.    2.89742 (22) obj. -2107.43 iterations 1
Cbc0038I Pass  35: suminf.    2.10522 (30) obj. -1809.19 iterations 26
Cbc0038I Pass  36: suminf.    1.26681 (8) obj. -1809.19 iterations 32
Cbc0038I Pass  37: suminf.    0.90896 (8) obj. -1870.38 iterations 3
Cbc0038I Pass  38: suminf.    0.93013 (5) obj. -1809.19 iterations 13
Cbc0038I Pass  39: suminf.    0.82764 (5) obj. -1825.59 iterations 7
Cbc0038I Pass  40: suminf.    3.06463 (15) obj. -1809.19 iterations 17
Cbc0038I Pass  41: suminf.    2.49388 (12) obj. -1873.97 iterations 4
Cbc0038I Pass  42: suminf.    1.61737 (7) obj. -1809.19 iterations 17
Cbc0038I Pass  43: suminf.    1.61737 (7) obj. -1809.19 iterations 1
Cbc0038I Pass  44: suminf.    1.66099 (7) obj. -1809.19 iterations 6
Cbc0038I Pass  45: suminf.    1.66099 (7) obj. -1809.19 iterations 1
Cbc0038I Pass  46: suminf.    1.61737 (7) obj. -1809.19 iterations 2
Cbc0038I Pass  47: suminf.    2.52983 (15) obj. -1809.19 iterations 13
Cbc0038I Pass  48: suminf.    1.89912 (10) obj. -1867.19 iterations 7
Cbc0038I Pass  49: suminf.    1.44453 (8) obj. -1809.19 iterations 12
Cbc0038I Pass  50: suminf.    1.44453 (8) obj. -1809.19 iterations 3
Cbc0038I Pass  51: suminf.    1.30866 (6) obj. -1809.19 iterations 6
Cbc0038I Pass  52: suminf.    1.21045 (6) obj. -1823.92 iterations 5
Cbc0038I Pass  53: suminf.    2.46937 (15) obj. -1809.19 iterations 28
Cbc0038I Pass  54: suminf.    2.16701 (14) obj. -1961.45 iterations 5
Cbc0038I Pass  55: suminf.    1.11278 (5) obj. -1809.19 iterations 16
Cbc0038I Pass  56: suminf.    0.97507 (5) obj. -1831.22 iterations 4
Cbc0038I Pass  57: suminf.    1.11278 (5) obj. -1809.19 iterations 6
Cbc0038I Pass  58: suminf.    1.66187 (9) obj. -1809.19 iterations 21
Cbc0038I Pass  59: suminf.    1.66187 (9) obj. -1809.19 iterations 4
Cbc0038I Pass  60: suminf.    1.03591 (6) obj. -1809.19 iterations 10
Cbc0038I Pass  61: suminf.    1.03591 (6) obj. -1809.19 iterations 1
Cbc0038I Pass  62: suminf.    0.82563 (6) obj. -1809.19 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 92 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1400.12 - took 0.04 seconds
Cbc0012I Integer solution of -1400.116 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 83 rows 92 columns, reduced to 26 rows 32 columns
Cbc0031I 40 added rows had average density of 12.15
Cbc0013I At root node, 40 cuts changed objective from -3445.4744 to -1508.4757 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 2241 row cuts average 5.7 elements, 17 column cuts (17 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 127 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 67 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1400.116 best solution, best possible -1507.6795 (0.57 seconds)
Cbc0012I Integer solution of -1431.089 found by rounding after 484 iterations and 1 nodes (0.58 seconds)
Cbc0004I Integer solution of -1470.666 found after 518 iterations and 2 nodes (0.58 seconds)
Cbc0001I Search completed - best objective -1470.666, took 518 iterations and 2 nodes (0.58 seconds)
Cbc0032I Strong branching done 42 times (659 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.58

