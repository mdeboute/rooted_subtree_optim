Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 18 (-31) rows, 11 (-14) columns and 44 (-91) elements
Clp0000I Optimal - objective value 9378.1
Coin0511I After Postsolve, objective 9378.1, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9378.1 - 6 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 11 columns (10 integer (10 of which binary)) and 44 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.881%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.427019
Cbc0038I Solution found of -5956
Cbc0038I Relaxing continuous gives -5956
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6222.59
Cbc0038I Pass   1: suminf.    0.04285 (1) obj. -6222.59 iterations 3
Cbc0038I Pass   2: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass   3: suminf.    0.34918 (1) obj. -6222.59 iterations 6
Cbc0038I Pass   4: suminf.    0.34918 (1) obj. -6222.59 iterations 1
Cbc0038I Pass   5: suminf.    0.44099 (1) obj. -7528.14 iterations 1
Cbc0038I Pass   6: suminf.    0.44099 (1) obj. -7528.14 iterations 0
Cbc0038I Pass   7: suminf.    0.49534 (1) obj. -7290.98 iterations 3
Cbc0038I Pass   8: suminf.    0.49534 (1) obj. -7290.98 iterations 1
Cbc0038I Pass   9: suminf.    0.33295 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  10: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  11: suminf.    0.30901 (1) obj. -6356.36 iterations 1
Cbc0038I Pass  12: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  13: suminf.    0.75687 (2) obj. -6222.59 iterations 3
Cbc0038I Pass  14: suminf.    0.75687 (2) obj. -6222.59 iterations 0
Cbc0038I Pass  15: suminf.    0.44099 (1) obj. -7458.14 iterations 1
Cbc0038I Pass  16: suminf.    0.36043 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  17: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  18: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  19: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  20: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  21: suminf.    0.75687 (2) obj. -6222.59 iterations 2
Cbc0038I Pass  22: suminf.    0.00797 (1) obj. -6222.59 iterations 4
Cbc0038I Pass  23: suminf.    0.00797 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  24: suminf.    0.34161 (1) obj. -8298.53 iterations 1
Cbc0038I Pass  25: suminf.    0.33051 (1) obj. -6222.59 iterations 5
Cbc0038I Pass  26: suminf.    0.21584 (1) obj. -6936.05 iterations 2
Cbc0038I Pass  27: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  28: suminf.    0.16149 (1) obj. -7148.92 iterations 3
Cbc0038I Pass  29: suminf.    0.31491 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  30: suminf.    0.16149 (1) obj. -7148.92 iterations 1
Cbc0038I Rounding solution of -6173 is better than previous of -5956

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6700.65
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.11968 (1) obj. -6700.65 iterations 0
Cbc0038I Pass  31: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass  32: suminf.    0.42702 (1) obj. -8612.91 iterations 2
Cbc0038I Pass  33: suminf.    0.11968 (1) obj. -6700.65 iterations 2
Cbc0038I Pass  34: suminf.    0.42601 (1) obj. -6700.65 iterations 5
Cbc0038I Pass  35: suminf.    0.44099 (1) obj. -7528.14 iterations 1
Cbc0038I Pass  36: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  37: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  38: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  39: suminf.    0.11968 (1) obj. -6700.65 iterations 4
Cbc0038I Pass  40: suminf.    0.11968 (1) obj. -6700.65 iterations 0
Cbc0038I Pass  41: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass  42: suminf.    1.79775 (5) obj. -6700.65 iterations 5
Cbc0038I Pass  43: suminf.    0.49121 (2) obj. -6700.65 iterations 1
Cbc0038I Pass  44: suminf.    0.16149 (1) obj. -7148.92 iterations 2
Cbc0038I Pass  45: suminf.    0.23573 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  46: suminf.    0.19255 (1) obj. -7060.4 iterations 2
Cbc0038I Pass  47: suminf.    0.25213 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  48: suminf.    0.19255 (1) obj. -7060.4 iterations 1
Cbc0038I Pass  49: suminf.    0.54033 (3) obj. -6700.65 iterations 4
Cbc0038I Pass  50: suminf.    0.24689 (1) obj. -6841.82 iterations 3
Cbc0038I Pass  51: suminf.    0.26958 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  52: suminf.    0.43323 (1) obj. -7776.44 iterations 2
Cbc0038I Pass  53: suminf.    0.43323 (1) obj. -7776.44 iterations 0
Cbc0038I Pass  54: suminf.    0.39387 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  55: suminf.    2.05372 (6) obj. -6700.65 iterations 8
Cbc0038I Pass  56: suminf.    1.00645 (4) obj. -6700.65 iterations 2
Cbc0038I Pass  57: suminf.    0.41010 (1) obj. -6700.65 iterations 4
Cbc0038I Pass  58: suminf.    0.37888 (1) obj. -8013.6 iterations 1
Cbc0038I Pass  59: suminf.    0.24689 (1) obj. -6841.82 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -6173 - took 0.01 seconds
Cbc0012I Integer solution of -6173 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -6221 found by DiveCoefficient after 1 iterations and 0 nodes (0.02 seconds)
Cbc0013I At root node, 0 cuts changed objective from -8612.9099 to -6221 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6221, took 1 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-14) rows, 35 (-11) columns and 227 (-161) elements
Clp1000I sum of infeasibilities 1.61794e-07 - average 4.75864e-09, 34 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-35) columns and 0 (-227) elements
Clp0000I Optimal - objective value 9335.1
Clp0000I Optimal - objective value 9335.1
Coin0511I After Postsolve, objective 9335.1, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.18217187 - largest nonzero change 0 ( 0%) - largest zero change 2.5852926e-05
Clp0000I Optimal - objective value 9474.2939
Clp0000I Optimal - objective value 9474.2939
Clp0000I Optimal - objective value 9474.2939
Coin0511I After Postsolve, objective 9474.2939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9474.293932 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 33 columns (33 integer (33 of which binary)) and 206 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.317%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 5.09566
Cbc0038I Pass   1: suminf.    1.40846 (6) obj. -8566.75 iterations 21
Cbc0038I Solution found of -3996
Cbc0038I Rounding solution of -4149 is better than previous of -3996

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4594.4
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.40846 (6) obj. -8566.75 iterations 0
Cbc0038I Pass   3: suminf.    0.09617 (1) obj. -4594.4 iterations 9
Cbc0038I Pass   4: suminf.    0.27317 (1) obj. -8518.33 iterations 1
Cbc0038I Pass   5: suminf.    1.11997 (5) obj. -4594.4 iterations 7
Cbc0038I Pass   6: suminf.    0.98426 (4) obj. -4594.4 iterations 2
Cbc0038I Pass   7: suminf.    0.31585 (1) obj. -8375.76 iterations 4
Cbc0038I Pass   8: suminf.    0.07641 (1) obj. -4594.4 iterations 1
Cbc0038I Pass   9: suminf.    0.14984 (2) obj. -4594.4 iterations 3
Cbc0038I Pass  10: suminf.    0.14984 (2) obj. -4594.4 iterations 2
Cbc0038I Pass  11: suminf.    2.36235 (11) obj. -4594.4 iterations 10
Cbc0038I Pass  12: suminf.    2.24613 (10) obj. -4594.4 iterations 1
Cbc0038I Pass  13: suminf.    1.60204 (12) obj. -4594.4 iterations 3
Cbc0038I Pass  14: suminf.    1.60204 (12) obj. -4594.4 iterations 0
Cbc0038I Pass  15: suminf.    0.27317 (1) obj. -8518.33 iterations 13
Cbc0038I Pass  16: suminf.    0.09617 (1) obj. -4594.4 iterations 1
Cbc0038I Pass  17: suminf.    0.53781 (5) obj. -4594.4 iterations 5
Cbc0038I Pass  18: suminf.    0.44058 (4) obj. -4594.4 iterations 3
Cbc0038I Pass  19: suminf.    0.83653 (7) obj. -4594.4 iterations 4
Cbc0038I Pass  20: suminf.    0.74588 (6) obj. -4594.4 iterations 2
Cbc0038I Pass  21: suminf.    0.29756 (1) obj. -8465.58 iterations 6
Cbc0038I Pass  22: suminf.    0.08026 (1) obj. -4594.4 iterations 1
Cbc0038I Pass  23: suminf.    1.01546 (8) obj. -4594.4 iterations 8
Cbc0038I Pass  24: suminf.    0.88400 (7) obj. -4594.4 iterations 2
Cbc0038I Pass  25: suminf.    1.64680 (12) obj. -4594.4 iterations 5
Cbc0038I Pass  26: suminf.    1.64680 (12) obj. -4594.4 iterations 0
Cbc0038I Pass  27: suminf.    1.68188 (13) obj. -4594.4 iterations 1
Cbc0038I Pass  28: suminf.    1.68188 (13) obj. -4594.4 iterations 0
Cbc0038I Pass  29: suminf.    0.29756 (1) obj. -8465.58 iterations 14
Cbc0038I Pass  30: suminf.    0.08026 (1) obj. -4594.4 iterations 1
Cbc0038I Pass  31: suminf.    0.36230 (3) obj. -4594.4 iterations 3
Cbc0038I Rounding solution of -4250 is better than previous of -4149

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -5394.31
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.40846 (6) obj. -8566.75 iterations 0
Cbc0038I Pass  32: suminf.    0.22474 (1) obj. -5394.31 iterations 9
Cbc0038I Pass  33: suminf.    0.27317 (1) obj. -8518.33 iterations 1
Cbc0038I Pass  34: suminf.    0.17744 (2) obj. -7191.14 iterations 2
Cbc0038I Pass  35: suminf.    0.15122 (1) obj. -7191.11 iterations 1
Cbc0038I Pass  36: suminf.    0.44000 (1) obj. -5394.31 iterations 1
Cbc0038I Pass  37: suminf.    1.59315 (7) obj. -5394.31 iterations 8
Cbc0038I Solution found of -5940
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 33 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -5940 to -5956 (0.02 seconds)
Cbc0038I Round again with cutoff of -6748.09
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  38: suminf.    1.40846 (6) obj. -8566.75 iterations 0
Cbc0038I Pass  39: suminf.    0.44232 (1) obj. -6748.09 iterations 9
Cbc0038I Pass  40: suminf.    0.27317 (1) obj. -8518.33 iterations 1
Cbc0038I Pass  41: suminf.    0.52471 (3) obj. -7233.28 iterations 4
Cbc0038I Pass  42: suminf.    0.52471 (3) obj. -7233.28 iterations 1
Cbc0038I Pass  43: suminf.    0.22242 (1) obj. -6748.09 iterations 3
Cbc0038I Pass  44: suminf.    0.15122 (1) obj. -7191.11 iterations 1
Cbc0038I Pass  45: suminf.    2.24279 (6) obj. -6748.09 iterations 8
Cbc0038I Pass  46: suminf.    1.76388 (4) obj. -6748.09 iterations 2
Cbc0038I Pass  47: suminf.    0.50000 (1) obj. -7107 iterations 4
Cbc0038I Pass  48: suminf.    0.44232 (1) obj. -6748.09 iterations 1
Cbc0038I Pass  49: suminf.    2.62500 (6) obj. -6748.09 iterations 9
Cbc0038I Pass  50: suminf.    0.88445 (2) obj. -6748.09 iterations 5
Cbc0038I Pass  51: suminf.    0.27317 (1) obj. -8518.33 iterations 2
Cbc0038I Pass  52: suminf.    0.44232 (1) obj. -6748.09 iterations 1
Cbc0038I Pass  53: suminf.    1.24939 (4) obj. -6748.09 iterations 5
Cbc0038I Pass  54: suminf.    1.18646 (3) obj. -6748.09 iterations 2
Cbc0038I Pass  55: suminf.    0.50000 (1) obj. -7107 iterations 3
Cbc0038I Pass  56: suminf.    0.44232 (1) obj. -6748.09 iterations 1
Cbc0038I Pass  57: suminf.    1.01755 (3) obj. -6748.09 iterations 2
Cbc0038I Pass  58: suminf.    1.01755 (3) obj. -6748.09 iterations 0
Cbc0038I Pass  59: suminf.    2.39059 (6) obj. -6748.09 iterations 3
Cbc0038I Pass  60: suminf.    1.89316 (5) obj. -6748.09 iterations 1
Cbc0038I Pass  61: suminf.    2.70880 (8) obj. -6748.09 iterations 4
Cbc0038I Pass  62: suminf.    1.86016 (6) obj. -6748.09 iterations 4
Cbc0038I Pass  63: suminf.    0.27317 (1) obj. -8518.33 iterations 6
Cbc0038I Pass  64: suminf.    0.44232 (1) obj. -6748.09 iterations 1
Cbc0038I Pass  65: suminf.    2.09284 (6) obj. -6748.09 iterations 8
Cbc0038I Pass  66: suminf.    2.01638 (5) obj. -6748.09 iterations 2
Cbc0038I Pass  67: suminf.    0.41585 (1) obj. -6765.44 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -5956 - took 0.02 seconds
Cbc0012I Integer solution of -5956 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -6173 found by DiveCoefficient after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -6221 found by DiveCoefficient after 30 iterations and 0 nodes (0.03 seconds)
Cbc0031I 6 added rows had average density of 7.8333333
Cbc0013I At root node, 6 cuts changed objective from -8593.978 to -6221 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 47 row cuts average 2.7 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -6221, took 30 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 18 (-31) rows, 11 (-14) columns and 44 (-91) elements
Clp0000I Optimal - objective value 9378.1
Coin0511I After Postsolve, objective 9378.1, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9378.1 - 6 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 11 columns (10 integer (10 of which binary)) and 44 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.881%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.427019
Cbc0038I Solution found of -5956
Cbc0038I Relaxing continuous gives -5956
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6222.59
Cbc0038I Pass   1: suminf.    0.04285 (1) obj. -6222.59 iterations 3
Cbc0038I Pass   2: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass   3: suminf.    0.34918 (1) obj. -6222.59 iterations 6
Cbc0038I Pass   4: suminf.    0.34918 (1) obj. -6222.59 iterations 1
Cbc0038I Pass   5: suminf.    0.44099 (1) obj. -7528.14 iterations 1
Cbc0038I Pass   6: suminf.    0.44099 (1) obj. -7528.14 iterations 0
Cbc0038I Pass   7: suminf.    0.49534 (1) obj. -7290.98 iterations 3
Cbc0038I Pass   8: suminf.    0.49534 (1) obj. -7290.98 iterations 1
Cbc0038I Pass   9: suminf.    0.33295 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  10: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  11: suminf.    0.30901 (1) obj. -6356.36 iterations 1
Cbc0038I Pass  12: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  13: suminf.    0.75687 (2) obj. -6222.59 iterations 3
Cbc0038I Pass  14: suminf.    0.75687 (2) obj. -6222.59 iterations 0
Cbc0038I Pass  15: suminf.    0.44099 (1) obj. -7458.14 iterations 1
Cbc0038I Pass  16: suminf.    0.36043 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  17: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  18: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  19: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  20: suminf.    0.36043 (1) obj. -6222.59 iterations 0
Cbc0038I Pass  21: suminf.    0.75687 (2) obj. -6222.59 iterations 2
Cbc0038I Pass  22: suminf.    0.00797 (1) obj. -6222.59 iterations 4
Cbc0038I Pass  23: suminf.    0.00797 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  24: suminf.    0.34161 (1) obj. -8298.53 iterations 1
Cbc0038I Pass  25: suminf.    0.33051 (1) obj. -6222.59 iterations 5
Cbc0038I Pass  26: suminf.    0.21584 (1) obj. -6936.05 iterations 2
Cbc0038I Pass  27: suminf.    0.33051 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  28: suminf.    0.16149 (1) obj. -7148.92 iterations 3
Cbc0038I Pass  29: suminf.    0.31491 (1) obj. -6222.59 iterations 1
Cbc0038I Pass  30: suminf.    0.16149 (1) obj. -7148.92 iterations 1
Cbc0038I Rounding solution of -6173 is better than previous of -5956

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6700.65
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.11968 (1) obj. -6700.65 iterations 0
Cbc0038I Pass  31: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass  32: suminf.    0.42702 (1) obj. -8612.91 iterations 2
Cbc0038I Pass  33: suminf.    0.11968 (1) obj. -6700.65 iterations 2
Cbc0038I Pass  34: suminf.    0.42601 (1) obj. -6700.65 iterations 5
Cbc0038I Pass  35: suminf.    0.44099 (1) obj. -7528.14 iterations 1
Cbc0038I Pass  36: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  37: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  38: suminf.    0.42601 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  39: suminf.    0.11968 (1) obj. -6700.65 iterations 4
Cbc0038I Pass  40: suminf.    0.11968 (1) obj. -6700.65 iterations 0
Cbc0038I Pass  41: suminf.    0.42702 (1) obj. -8612.91 iterations 1
Cbc0038I Pass  42: suminf.    1.79775 (5) obj. -6700.65 iterations 5
Cbc0038I Pass  43: suminf.    0.49121 (2) obj. -6700.65 iterations 1
Cbc0038I Pass  44: suminf.    0.16149 (1) obj. -7148.92 iterations 2
Cbc0038I Pass  45: suminf.    0.23573 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  46: suminf.    0.19255 (1) obj. -7060.4 iterations 2
Cbc0038I Pass  47: suminf.    0.25213 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  48: suminf.    0.19255 (1) obj. -7060.4 iterations 1
Cbc0038I Pass  49: suminf.    0.54033 (3) obj. -6700.65 iterations 4
Cbc0038I Pass  50: suminf.    0.24689 (1) obj. -6841.82 iterations 3
Cbc0038I Pass  51: suminf.    0.26958 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  52: suminf.    0.43323 (1) obj. -7776.44 iterations 2
Cbc0038I Pass  53: suminf.    0.43323 (1) obj. -7776.44 iterations 0
Cbc0038I Pass  54: suminf.    0.39387 (1) obj. -6700.65 iterations 1
Cbc0038I Pass  55: suminf.    2.05372 (6) obj. -6700.65 iterations 8
Cbc0038I Pass  56: suminf.    1.00645 (4) obj. -6700.65 iterations 2
Cbc0038I Pass  57: suminf.    0.41010 (1) obj. -6700.65 iterations 4
Cbc0038I Pass  58: suminf.    0.37888 (1) obj. -8013.6 iterations 1
Cbc0038I Pass  59: suminf.    0.24689 (1) obj. -6841.82 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 11 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -6173 - took 0.01 seconds
Cbc0012I Integer solution of -6173 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -6221 found by DiveCoefficient after 1 iterations and 0 nodes (0.02 seconds)
Cbc0013I At root node, 0 cuts changed objective from -8612.9099 to -6221 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6221, took 1 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-25) rows, 26 (-21) columns and 154 (-235) elements
Clp1000I sum of infeasibilities 1.13069e-05 - average 4.71122e-07, 25 fixed columns
Coin0506I Presolve 0 (-24) rows, 0 (-26) columns and 0 (-154) elements
Clp0000I Optimal - objective value 9373.1833
Clp0000I Optimal - objective value 9373.1833
Coin0511I After Postsolve, objective 9373.1833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.0777104 - largest nonzero change 1.7799242e-05 ( 0.0017799242%) - largest zero change 1.7259297e-05
Clp0000I Optimal - objective value 9474.2939
Clp0000I Optimal - objective value 9474.2939
Clp0000I Optimal - objective value 9474.2939
Coin0511I After Postsolve, objective 9474.2939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 9474.293932 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 31 columns (31 integer (31 of which binary)) and 175 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.807%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 3.79082
Cbc0038I Pass   1: suminf.    0.27317 (1) obj. -8518.33 iterations 25
Cbc0038I Solution found of -3996
Cbc0038I Rounding solution of -4149 is better than previous of -3996

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4589.33
Cbc0038I Pass   2: suminf.    0.27317 (1) obj. -8518.33 iterations 0
Cbc0038I Pass   3: suminf.    0.09536 (1) obj. -4589.33 iterations 1
Cbc0038I Pass   4: suminf.    1.15564 (6) obj. -4589.33 iterations 7
Cbc0038I Pass   5: suminf.    1.15564 (6) obj. -4589.33 iterations 1
Cbc0038I Pass   6: suminf.    1.23909 (7) obj. -4589.33 iterations 2
Cbc0038I Pass   7: suminf.    1.23909 (7) obj. -4589.33 iterations 1
Cbc0038I Pass   8: suminf.    1.73701 (10) obj. -4589.33 iterations 3
Cbc0038I Pass   9: suminf.    2.48287 (11) obj. -4589.33 iterations 3
Cbc0038I Pass  10: suminf.    2.48287 (11) obj. -4589.33 iterations 0
Cbc0038I Pass  11: suminf.    0.44444 (1) obj. -7551.67 iterations 12
Cbc0038I Pass  12: suminf.    0.07945 (1) obj. -4589.33 iterations 1
Cbc0038I Pass  13: suminf.    1.37215 (4) obj. -4589.33 iterations 6
Cbc0038I Pass  14: suminf.    0.54459 (2) obj. -4589.33 iterations 3
Cbc0038I Pass  15: suminf.    0.07945 (1) obj. -4589.33 iterations 3
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -6169 iterations 1
Cbc0038I Pass  17: suminf.    2.58516 (9) obj. -4589.33 iterations 10
Cbc0038I Pass  18: suminf.    1.56443 (7) obj. -4589.33 iterations 2
Cbc0038I Pass  19: suminf.    0.44444 (1) obj. -7551.67 iterations 7
Cbc0038I Pass  20: suminf.    0.07945 (1) obj. -4589.33 iterations 1
Cbc0038I Pass  21: suminf.    1.83420 (7) obj. -4589.33 iterations 7
Cbc0038I Pass  22: suminf.    0.34634 (1) obj. -8063.06 iterations 7
Cbc0038I Pass  23: suminf.    0.09536 (1) obj. -4589.33 iterations 1
Cbc0038I Pass  24: suminf.    3.19138 (9) obj. -4589.33 iterations 10
Cbc0038I Pass  25: suminf.    2.19669 (7) obj. -4589.33 iterations 3
Cbc0038I Pass  26: suminf.    0.44444 (1) obj. -7575.67 iterations 7
Cbc0038I Pass  27: suminf.    0.07559 (1) obj. -4589.33 iterations 1
Cbc0038I Pass  28: suminf.    2.39562 (7) obj. -4589.33 iterations 8
Cbc0038I Pass  29: suminf.    1.46664 (5) obj. -4589.33 iterations 3
Cbc0038I Pass  30: suminf.    2.82614 (8) obj. -4589.33 iterations 4
Cbc0038I Pass  31: suminf.    1.92712 (6) obj. -4589.33 iterations 2
Cbc0038I Rounding solution of -6055 is better than previous of -4149

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 31 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -6055 to -6173 (0.02 seconds)
Cbc0038I Round again with cutoff of -6647.87
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27317 (1) obj. -8518.33 iterations 0
Cbc0038I Pass  32: suminf.    0.42621 (1) obj. -6647.87 iterations 1
Cbc0038I Pass  33: suminf.    2.65330 (6) obj. -6647.87 iterations 5
Cbc0038I Pass  34: suminf.    2.33701 (5) obj. -6647.87 iterations 1
Cbc0038I Pass  35: suminf.    3.56595 (8) obj. -6647.87 iterations 4
Cbc0038I Pass  36: suminf.    3.18114 (7) obj. -6647.87 iterations 1
Cbc0038I Pass  37: suminf.    5.38537 (12) obj. -6647.87 iterations 5
Cbc0038I Pass  38: suminf.    4.09468 (9) obj. -6647.87 iterations 3
Cbc0038I Pass  39: suminf.    0.27317 (1) obj. -8518.33 iterations 10
Cbc0038I Pass  40: suminf.    0.42621 (1) obj. -6647.87 iterations 1
Cbc0038I Pass  41: suminf.    0.84994 (4) obj. -6647.87 iterations 4
Cbc0038I Pass  42: suminf.    0.49560 (2) obj. -6647.87 iterations 3
Cbc0038I Pass  43: suminf.    0.23724 (1) obj. -6647.87 iterations 1
Cbc0038I Pass  44: suminf.    0.12683 (1) obj. -7334.87 iterations 1
Cbc0038I Pass  45: suminf.    1.64080 (6) obj. -6647.87 iterations 8
Cbc0038I Pass  46: suminf.    1.28383 (4) obj. -6647.87 iterations 3
Cbc0038I Pass  47: suminf.    0.28571 (1) obj. -7696.71 iterations 6
Cbc0038I Pass  48: suminf.    0.11714 (1) obj. -6647.87 iterations 1
Cbc0038I Pass  49: suminf.    0.74763 (5) obj. -6647.87 iterations 6
Cbc0038I Pass  50: suminf.    0.57187 (3) obj. -6647.87 iterations 2
Cbc0038I Pass  51: suminf.    0.11111 (1) obj. -6832.33 iterations 3
Cbc0038I Pass  52: suminf.    0.08146 (1) obj. -6647.87 iterations 1
Cbc0038I Pass  53: suminf.    0.39300 (3) obj. -6647.87 iterations 4
Cbc0038I Pass  54: suminf.    0.08146 (1) obj. -6647.87 iterations 4
Cbc0038I Pass  55: suminf.    1.76786 (5) obj. -6647.87 iterations 5
Cbc0038I Pass  56: suminf.    1.16243 (3) obj. -6647.87 iterations 3
Cbc0038I Pass  57: suminf.    0.44444 (1) obj. -7674.67 iterations 3
Cbc0038I Pass  58: suminf.    0.39053 (1) obj. -6647.87 iterations 1
Cbc0038I Pass  59: suminf.    1.06413 (3) obj. -6647.87 iterations 2
Cbc0038I Pass  60: suminf.    0.78086 (2) obj. -6647.87 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29 rows 31 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -6173 to -6221 (0.03 seconds)
Cbc0038I Round again with cutoff of -7216.51
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.27317 (1) obj. -8518.33 iterations 0
Cbc0038I Pass  61: suminf.    0.48240 (1) obj. -7216.51 iterations 1
Cbc0038I Pass  62: suminf.    1.17800 (4) obj. -7216.51 iterations 4
Cbc0038I Pass  63: suminf.    0.34634 (1) obj. -8063.06 iterations 4
Cbc0038I Pass  64: suminf.    0.48240 (1) obj. -7216.51 iterations 1
Cbc0038I Pass  65: suminf.    1.67430 (5) obj. -7216.51 iterations 5
Cbc0038I Pass  66: suminf.    1.29363 (8) obj. -7216.51 iterations 12
Cbc0038I Pass  67: suminf.    0.61987 (3) obj. -7216.51 iterations 5
Cbc0038I Pass  68: suminf.    0.28571 (1) obj. -7696.71 iterations 3
Cbc0038I Pass  69: suminf.    0.20854 (1) obj. -7216.51 iterations 1
Cbc0038I Pass  70: suminf.    0.84320 (6) obj. -7216.51 iterations 5
Cbc0038I Pass  71: suminf.    0.41452 (2) obj. -7216.51 iterations 4
Cbc0038I Pass  72: suminf.    0.60642 (4) obj. -7216.51 iterations 2
Cbc0038I Pass  73: suminf.    0.41452 (2) obj. -7216.51 iterations 2
Cbc0038I Pass  74: suminf.    1.20084 (6) obj. -7216.51 iterations 4
Cbc0038I Pass  75: suminf.    0.62140 (3) obj. -7216.51 iterations 3
Cbc0038I Pass  76: suminf.    0.28571 (1) obj. -7696.71 iterations 3
Cbc0038I Pass  77: suminf.    0.20854 (1) obj. -7216.51 iterations 1
Cbc0038I Pass  78: suminf.    0.42546 (3) obj. -7216.51 iterations 6
Cbc0038I Pass  79: suminf.    0.12683 (1) obj. -7334.87 iterations 3
Cbc0038I Pass  80: suminf.    0.14585 (1) obj. -7216.51 iterations 1
Cbc0038I Pass  81: suminf.    2.06355 (7) obj. -7216.51 iterations 6
Cbc0038I Pass  82: suminf.    1.08444 (3) obj. -7216.51 iterations 2
Cbc0038I Pass  83: suminf.    0.41682 (2) obj. -7216.51 iterations 2
Cbc0038I Pass  84: suminf.    0.28571 (1) obj. -7696.71 iterations 2
Cbc0038I Pass  85: suminf.    0.20854 (1) obj. -7216.51 iterations 1
Cbc0038I Pass  86: suminf.    0.84694 (6) obj. -7216.51 iterations 5
Cbc0038I Pass  87: suminf.    0.41171 (2) obj. -7216.51 iterations 4
Cbc0038I Pass  88: suminf.    0.68571 (4) obj. -7216.51 iterations 2
Cbc0038I Pass  89: suminf.    0.41171 (2) obj. -7216.51 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -6221 - took 0.02 seconds
Cbc0012I Integer solution of -6221 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -8543.3412 to -8543.3412 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -6221, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

