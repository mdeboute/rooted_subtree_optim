Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 177 (-28) rows, 101 (-2) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 2.02653e-05 - average 1.14493e-07, 17 fixed columns
Coin0506I Presolve 145 (-32) rows, 84 (-17) columns and 450 (-98) elements
Clp0029I End of values pass after 84 iterations
Clp0000I Optimal - objective value 44.495858
Clp0000I Optimal - objective value 44.495858
Coin0511I After Postsolve, objective 44.495858, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24373901 - largest nonzero change 0 ( 0%) - largest zero change 2.6737739e-05
Clp0000I Optimal - objective value 44.495858
Clp0000I Optimal - objective value 44.495858
Clp0000I Optimal - objective value 44.495858
Coin0511I After Postsolve, objective 44.495858, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.49585806 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 177 rows, 101 columns (100 integer (100 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.854%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 60 integers unsatisfied sum - 13.9009
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.1851 iterations 94
Cbc0038I Solution found of 11.1851
Cbc0038I Relaxing continuous gives 11.1851
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 100 rows 61 columns
Cbc0038I Mini branch and bound improved solution from 11.1851 to -16.4726 (0.06 seconds)
Cbc0038I Round again with cutoff of -19.275
Cbc0038I Pass   2: suminf.    4.05743 (18) obj. -19.275 iterations 25
Cbc0038I Pass   3: suminf.    2.61221 (8) obj. -19.275 iterations 16
Cbc0038I Pass   4: suminf.    2.30570 (8) obj. -19.275 iterations 14
Cbc0038I Pass   5: suminf.    2.19047 (9) obj. -19.275 iterations 6
Cbc0038I Pass   6: suminf.    2.19047 (9) obj. -19.275 iterations 4
Cbc0038I Pass   7: suminf.    2.21717 (9) obj. -19.275 iterations 16
Cbc0038I Pass   8: suminf.    2.21717 (9) obj. -19.275 iterations 0
Cbc0038I Pass   9: suminf.    3.20384 (8) obj. -19.275 iterations 13
Cbc0038I Pass  10: suminf.    2.18278 (9) obj. -19.275 iterations 8
Cbc0038I Pass  11: suminf.    2.04151 (7) obj. -19.275 iterations 14
Cbc0038I Pass  12: suminf.    2.04151 (7) obj. -19.275 iterations 1
Cbc0038I Pass  13: suminf.    1.94222 (9) obj. -19.275 iterations 18
Cbc0038I Pass  14: suminf.    1.87681 (6) obj. -19.275 iterations 6
Cbc0038I Pass  15: suminf.    2.04151 (7) obj. -19.275 iterations 11
Cbc0038I Pass  16: suminf.    4.11313 (16) obj. -19.275 iterations 33
Cbc0038I Pass  17: suminf.    3.02515 (13) obj. -19.275 iterations 9
Cbc0038I Pass  18: suminf.    2.01581 (8) obj. -19.275 iterations 21
Cbc0038I Pass  19: suminf.    1.97087 (8) obj. -19.275 iterations 2
Cbc0038I Pass  20: suminf.    1.87878 (7) obj. -19.275 iterations 10
Cbc0038I Pass  21: suminf.    1.87681 (6) obj. -19.275 iterations 1
Cbc0038I Pass  22: suminf.    2.04151 (7) obj. -19.275 iterations 10
Cbc0038I Pass  23: suminf.    2.04151 (7) obj. -19.275 iterations 0
Cbc0038I Pass  24: suminf.    1.94222 (9) obj. -19.275 iterations 16
Cbc0038I Pass  25: suminf.    4.71481 (14) obj. -19.275 iterations 33
Cbc0038I Pass  26: suminf.    3.09239 (13) obj. -19.275 iterations 20
Cbc0038I Pass  27: suminf.    2.73359 (12) obj. -19.275 iterations 9
Cbc0038I Pass  28: suminf.    2.31399 (8) obj. -19.275 iterations 22
Cbc0038I Pass  29: suminf.    2.26905 (8) obj. -19.275 iterations 1
Cbc0038I Pass  30: suminf.    1.87878 (7) obj. -19.275 iterations 13
Cbc0038I Pass  31: suminf.    1.87681 (6) obj. -19.275 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 113 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -16.4726 to -16.5006 (0.13 seconds)
Cbc0038I Round again with cutoff of -24.3192
Cbc0038I Pass  31: suminf.    5.15880 (21) obj. -24.3192 iterations 1
Cbc0038I Pass  32: suminf.    3.47583 (10) obj. -24.3192 iterations 12
Cbc0038I Pass  33: suminf.    3.47583 (10) obj. -24.3192 iterations 0
Cbc0038I Pass  34: suminf.    3.26239 (9) obj. -24.3192 iterations 13
Cbc0038I Pass  35: suminf.    2.64413 (10) obj. -24.3192 iterations 7
Cbc0038I Pass  36: suminf.    3.82923 (10) obj. -24.3192 iterations 16
Cbc0038I Pass  37: suminf.    3.66212 (10) obj. -24.3192 iterations 2
Cbc0038I Pass  38: suminf.    3.60435 (10) obj. -24.3192 iterations 5
Cbc0038I Pass  39: suminf.    2.97987 (9) obj. -24.3192 iterations 20
Cbc0038I Pass  40: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I Pass  41: suminf.    2.83021 (9) obj. -24.3192 iterations 3
Cbc0038I Pass  42: suminf.    2.95097 (10) obj. -24.3192 iterations 17
Cbc0038I Pass  43: suminf.    2.85675 (10) obj. -24.3192 iterations 9
Cbc0038I Pass  44: suminf.    3.41479 (11) obj. -24.3192 iterations 15
Cbc0038I Pass  45: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I Pass  46: suminf.    2.83021 (9) obj. -24.3192 iterations 3
Cbc0038I Pass  47: suminf.    2.95097 (10) obj. -24.3192 iterations 17
Cbc0038I Pass  48: suminf.    2.85675 (10) obj. -24.3192 iterations 9
Cbc0038I Pass  49: suminf.    3.41479 (11) obj. -24.3192 iterations 15
Cbc0038I Pass  50: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I Pass  51: suminf.    2.83021 (9) obj. -24.3192 iterations 3
Cbc0038I Pass  52: suminf.    2.95097 (10) obj. -24.3192 iterations 17
Cbc0038I Pass  53: suminf.    2.85675 (10) obj. -24.3192 iterations 9
Cbc0038I Pass  54: suminf.    3.41479 (11) obj. -24.3192 iterations 15
Cbc0038I Pass  55: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I Pass  56: suminf.    2.83021 (9) obj. -24.3192 iterations 3
Cbc0038I Pass  57: suminf.    2.95097 (10) obj. -24.3192 iterations 17
Cbc0038I Pass  58: suminf.    2.85675 (10) obj. -24.3192 iterations 9
Cbc0038I Pass  59: suminf.    3.41479 (11) obj. -24.3192 iterations 15
Cbc0038I Pass  60: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 101 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -16.5006 - took 0.17 seconds
Cbc0012I Integer solution of -16.50057 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 100 rows 61 columns
Cbc0031I 46 added rows had average density of 54.565217
Cbc0013I At root node, 46 cuts changed objective from -44.495858 to -36.532864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24269 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.148 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3680 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.50057 best solution, best possible -36.532864 (1.93 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 21 rows 17 columns
Cbc0012I Integer solution of -16.79008 found by RINS after 14087 iterations and 41 nodes (2.33 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 17 rows 16 columns
Cbc0010I After 159 nodes, 2 on tree, -16.79008 best solution, best possible -24.579279 (2.63 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 6 rows 6 columns
Cbc0004I Integer solution of -17.09812 found after 18759 iterations and 227 nodes (2.73 seconds)
Cbc0012I Integer solution of -17.14278 found by rounding after 18835 iterations and 233 nodes (2.73 seconds)
Cbc0001I Search completed - best objective -17.14278, took 19454 iterations and 266 nodes (2.80 seconds)
Cbc0032I Strong branching done 2046 times (26123 iterations), fathomed 30 nodes and fixed 138 variables
Cbc0035I Maximum depth 31, 847 variables fixed on reduced cost
Total time (CPU seconds):       2.74   (Wallclock seconds):       2.83

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-83) rows, 144 (-58) columns and 2487 (-3166) elements
Clp1000I sum of infeasibilities 7.01127e-08 - average 5.79444e-10, 69 fixed columns
Coin0506I Presolve 54 (-67) rows, 75 (-69) columns and 252 (-2235) elements
Clp0006I 0  Obj -21.155417 Dual inf 141.82772 (74)
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.24501418 - largest nonzero change 2.9932119e-05 ( 0.0025888945%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value -9.9988326
Clp0000I Optimal - objective value -9.9988326
Coin0511I After Postsolve, objective -9.9988326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.9988326 Dual inf 142.5663 (45)
Clp0014I Perturbing problem by 0.001% of 1.4085416 - largest nonzero change 2.7814203e-05 ( 0.0027814203%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 51.507379
Clp0000I Optimal - objective value 51.507379
Clp0000I Optimal - objective value 51.507379
Coin0511I After Postsolve, objective 51.507379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.50737857 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 144 columns (144 integer (144 of which binary)) and 2490 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.560%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.70361
Cbc0038I Pass   1: suminf.    4.70098 (33) obj. -36.1761 iterations 16
Cbc0038I Pass   2: suminf.    4.70098 (33) obj. -36.1761 iterations 1
Cbc0038I Pass   3: suminf.    2.29348 (18) obj. -18.5886 iterations 15
Cbc0038I Solution found of -1.95346
Cbc0038I Rounding solution of -3.52937 is better than previous of -1.95346

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -3.52937 to -3.58836 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.09973
Cbc0038I Pass   4: suminf.    4.70098 (33) obj. -36.1761 iterations 0
Cbc0038I Pass   5: suminf.    4.70098 (33) obj. -36.1761 iterations 1
Cbc0038I Pass   6: suminf.    1.57443 (13) obj. -14.3076 iterations 20
Cbc0038I Pass   7: suminf.    0.58149 (3) obj. -7.09973 iterations 34
Cbc0038I Pass   8: suminf.    0.58149 (3) obj. -7.09973 iterations 0
Cbc0038I Pass   9: suminf.    1.23581 (4) obj. -7.09973 iterations 7
Cbc0038I Pass  10: suminf.    1.01777 (4) obj. -7.09973 iterations 8
Cbc0038I Pass  11: suminf.    0.40571 (2) obj. -7.20093 iterations 7
Cbc0038I Pass  12: suminf.    0.38214 (3) obj. -7.09973 iterations 4
Cbc0038I Pass  13: suminf.    0.43102 (2) obj. -7.09973 iterations 4
Cbc0038I Pass  14: suminf.    2.66883 (17) obj. -7.09973 iterations 51
Cbc0038I Pass  15: suminf.    2.28843 (16) obj. -7.09973 iterations 8
Cbc0038I Pass  16: suminf.    0.78078 (12) obj. -7.09973 iterations 33
Cbc0038I Pass  17: suminf.    0.76509 (6) obj. -7.09973 iterations 1
Cbc0038I Pass  18: suminf.    0.90102 (4) obj. -7.09973 iterations 9
Cbc0038I Pass  19: suminf.    0.90102 (4) obj. -7.09973 iterations 2
Cbc0038I Pass  20: suminf.    1.34368 (5) obj. -7.09973 iterations 6
Cbc0038I Pass  21: suminf.    1.22827 (6) obj. -7.09973 iterations 1
Cbc0038I Pass  22: suminf.    0.73142 (4) obj. -7.09973 iterations 10
Cbc0038I Pass  23: suminf.    0.50278 (5) obj. -7.09973 iterations 9
Cbc0038I Pass  24: suminf.    0.68291 (4) obj. -7.09973 iterations 5
Cbc0038I Pass  25: suminf.    1.26711 (9) obj. -7.09973 iterations 28
Cbc0038I Pass  26: suminf.    0.53962 (5) obj. -7.41925 iterations 9
Cbc0038I Pass  27: suminf.    0.53806 (5) obj. -7.09973 iterations 18
Cbc0038I Pass  28: suminf.    0.49354 (4) obj. -7.36819 iterations 2
Cbc0038I Pass  29: suminf.    1.41456 (11) obj. -7.09973 iterations 15
Cbc0038I Pass  30: suminf.    1.41456 (11) obj. -7.09973 iterations 0
Cbc0038I Pass  31: suminf.    1.76726 (10) obj. -7.09973 iterations 11
Cbc0038I Pass  32: suminf.    1.13936 (9) obj. -7.09973 iterations 7
Cbc0038I Pass  33: suminf.    1.60274 (8) obj. -7.09973 iterations 4
Cbc0038I Rounding solution of -5.44847 is better than previous of -3.58836

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 34 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -5.44847 to -8.88191 (0.10 seconds)
Cbc0038I Round again with cutoff of -14.8458
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.70098 (33) obj. -36.1761 iterations 0
Cbc0038I Pass  34: suminf.    4.70098 (33) obj. -36.1761 iterations 1
Cbc0038I Pass  35: suminf.    1.30906 (12) obj. -14.8458 iterations 28
Cbc0038I Pass  36: suminf.    1.30906 (12) obj. -14.8458 iterations 0
Cbc0038I Pass  37: suminf.    1.98065 (17) obj. -14.8458 iterations 29
Cbc0038I Pass  38: suminf.    1.97149 (17) obj. -14.8458 iterations 3
Cbc0038I Pass  39: suminf.    3.46273 (18) obj. -14.8458 iterations 15
Cbc0038I Pass  40: suminf.    2.94925 (18) obj. -14.8458 iterations 3
Cbc0038I Pass  41: suminf.    1.59494 (18) obj. -14.8458 iterations 4
Cbc0038I Pass  42: suminf.    1.59494 (18) obj. -14.8458 iterations 0
Cbc0038I Pass  43: suminf.    3.46273 (18) obj. -14.8458 iterations 15
Cbc0038I Pass  44: suminf.    3.17206 (16) obj. -14.8458 iterations 19
Cbc0038I Pass  45: suminf.    2.60442 (19) obj. -14.8458 iterations 8
Cbc0038I Pass  46: suminf.    2.69818 (18) obj. -14.8458 iterations 18
Cbc0038I Pass  47: suminf.    2.64271 (18) obj. -14.8458 iterations 5
Cbc0038I Pass  48: suminf.    2.95294 (17) obj. -14.8458 iterations 11
Cbc0038I Pass  49: suminf.    2.95294 (17) obj. -14.8458 iterations 2
Cbc0038I Pass  50: suminf.    3.87906 (19) obj. -14.8458 iterations 9
Cbc0038I Pass  51: suminf.    2.89767 (18) obj. -14.8458 iterations 6
Cbc0038I Pass  52: suminf.    2.81802 (17) obj. -14.8458 iterations 5
Cbc0038I Pass  53: suminf.    2.92554 (17) obj. -14.8458 iterations 4
Cbc0038I Pass  54: suminf.    2.92740 (17) obj. -14.8458 iterations 4
Cbc0038I Pass  55: suminf.    3.87906 (19) obj. -14.8458 iterations 9
Cbc0038I Pass  56: suminf.    2.89767 (18) obj. -14.8458 iterations 6
Cbc0038I Pass  57: suminf.    2.81802 (17) obj. -14.8458 iterations 5
Cbc0038I Pass  58: suminf.    2.82737 (17) obj. -14.8458 iterations 7
Cbc0038I Pass  59: suminf.    2.82737 (17) obj. -14.8458 iterations 4
Cbc0038I Pass  60: suminf.    2.81802 (17) obj. -14.8458 iterations 5
Cbc0038I Pass  61: suminf.    2.07545 (17) obj. -14.8458 iterations 25
Cbc0038I Pass  62: suminf.    1.48205 (14) obj. -14.8458 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -8.88191 - took 0.08 seconds
Cbc0012I Integer solution of -8.88191 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 121 rows 144 columns, reduced to 16 rows 23 columns
Cbc0031I 79 added rows had average density of 27.708861
Cbc0013I At root node, 79 cuts changed objective from -38.701113 to -20.494825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13191 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1413 row cuts average 138.1 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1020 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1046 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 313 row cuts average 94.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 244 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.766 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.88191 best solution, best possible -20.494825 (2.87 seconds)
Cbc0012I Integer solution of -11.71333 found by rounding after 4732 iterations and 1 nodes (2.92 seconds)
Cbc0012I Integer solution of -13.163041 found by rounding after 5089 iterations and 2 nodes (3.12 seconds)
Cbc0012I Integer solution of -14.93414 found by DiveCoefficient after 5401 iterations and 4 nodes (3.69 seconds)
Cbc0010I After 4 nodes, 5 on tree, -14.93414 best solution, best possible -20.494825 (3.69 seconds)
Cbc0012I Integer solution of -15.37391 found by DiveCoefficient after 5603 iterations and 9 nodes (4.07 seconds)
Cbc0016I Integer solution of -16.99221 found by strong branching after 5692 iterations and 10 nodes (4.20 seconds)
Cbc0010I After 16 nodes, 10 on tree, -16.99221 best solution, best possible -20.494825 (4.45 seconds)
Cbc0010I After 33 nodes, 12 on tree, -16.99221 best solution, best possible -20.494825 (5.19 seconds)
Cbc0016I Integer solution of -17.14278 found by strong branching after 6988 iterations and 38 nodes (5.37 seconds)
Cbc0038I Full problem 121 rows 144 columns, reduced to 2 rows 6 columns
Cbc0010I After 55 nodes, 10 on tree, -17.14278 best solution, best possible -20.494825 (5.89 seconds)
Cbc0001I Search completed - best objective -17.14278, took 8428 iterations and 70 nodes (6.12 seconds)
Cbc0032I Strong branching done 864 times (17005 iterations), fathomed 8 nodes and fixed 25 variables
Cbc0035I Maximum depth 20, 134 variables fixed on reduced cost
Total time (CPU seconds):       4.29   (Wallclock seconds):       6.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 177 (-28) rows, 101 (-2) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 2.02653e-05 - average 1.14493e-07, 17 fixed columns
Coin0506I Presolve 145 (-32) rows, 84 (-17) columns and 450 (-98) elements
Clp0029I End of values pass after 84 iterations
Clp0000I Optimal - objective value 44.495858
Clp0000I Optimal - objective value 44.495858
Coin0511I After Postsolve, objective 44.495858, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24373901 - largest nonzero change 0 ( 0%) - largest zero change 2.6737739e-05
Clp0000I Optimal - objective value 44.495858
Clp0000I Optimal - objective value 44.495858
Clp0000I Optimal - objective value 44.495858
Coin0511I After Postsolve, objective 44.495858, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.49585806 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 177 rows, 101 columns (100 integer (100 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.854%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 60 integers unsatisfied sum - 13.9009
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.1851 iterations 94
Cbc0038I Solution found of 11.1851
Cbc0038I Relaxing continuous gives 11.1851
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 100 rows 61 columns
Cbc0038I Mini branch and bound improved solution from 11.1851 to -16.4726 (0.06 seconds)
Cbc0038I Round again with cutoff of -19.275
Cbc0038I Pass   2: suminf.    4.05743 (18) obj. -19.275 iterations 25
Cbc0038I Pass   3: suminf.    2.61221 (8) obj. -19.275 iterations 16
Cbc0038I Pass   4: suminf.    2.30570 (8) obj. -19.275 iterations 14
Cbc0038I Pass   5: suminf.    2.19047 (9) obj. -19.275 iterations 6
Cbc0038I Pass   6: suminf.    2.19047 (9) obj. -19.275 iterations 4
Cbc0038I Pass   7: suminf.    2.21717 (9) obj. -19.275 iterations 16
Cbc0038I Pass   8: suminf.    2.21717 (9) obj. -19.275 iterations 0
Cbc0038I Pass   9: suminf.    3.20384 (8) obj. -19.275 iterations 13
Cbc0038I Pass  10: suminf.    2.18278 (9) obj. -19.275 iterations 8
Cbc0038I Pass  11: suminf.    2.04151 (7) obj. -19.275 iterations 14
Cbc0038I Pass  12: suminf.    2.04151 (7) obj. -19.275 iterations 1
Cbc0038I Pass  13: suminf.    1.94222 (9) obj. -19.275 iterations 18
Cbc0038I Pass  14: suminf.    1.87681 (6) obj. -19.275 iterations 6
Cbc0038I Pass  15: suminf.    2.04151 (7) obj. -19.275 iterations 11
Cbc0038I Pass  16: suminf.    4.11313 (16) obj. -19.275 iterations 33
Cbc0038I Pass  17: suminf.    3.02515 (13) obj. -19.275 iterations 9
Cbc0038I Pass  18: suminf.    2.01581 (8) obj. -19.275 iterations 21
Cbc0038I Pass  19: suminf.    1.97087 (8) obj. -19.275 iterations 2
Cbc0038I Pass  20: suminf.    1.87878 (7) obj. -19.275 iterations 10
Cbc0038I Pass  21: suminf.    1.87681 (6) obj. -19.275 iterations 1
Cbc0038I Pass  22: suminf.    2.04151 (7) obj. -19.275 iterations 10
Cbc0038I Pass  23: suminf.    2.04151 (7) obj. -19.275 iterations 0
Cbc0038I Pass  24: suminf.    1.94222 (9) obj. -19.275 iterations 16
Cbc0038I Pass  25: suminf.    4.71481 (14) obj. -19.275 iterations 33
Cbc0038I Pass  26: suminf.    3.09239 (13) obj. -19.275 iterations 20
Cbc0038I Pass  27: suminf.    2.73359 (12) obj. -19.275 iterations 9
Cbc0038I Pass  28: suminf.    2.31399 (8) obj. -19.275 iterations 22
Cbc0038I Pass  29: suminf.    2.26905 (8) obj. -19.275 iterations 1
Cbc0038I Pass  30: suminf.    1.87878 (7) obj. -19.275 iterations 13
Cbc0038I Pass  31: suminf.    1.87681 (6) obj. -19.275 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 113 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -16.4726 to -16.5006 (0.14 seconds)
Cbc0038I Round again with cutoff of -24.3192
Cbc0038I Pass  31: suminf.    5.15880 (21) obj. -24.3192 iterations 1
Cbc0038I Pass  32: suminf.    3.47583 (10) obj. -24.3192 iterations 12
Cbc0038I Pass  33: suminf.    3.47583 (10) obj. -24.3192 iterations 0
Cbc0038I Pass  34: suminf.    3.26239 (9) obj. -24.3192 iterations 13
Cbc0038I Pass  35: suminf.    2.64413 (10) obj. -24.3192 iterations 7
Cbc0038I Pass  36: suminf.    3.82923 (10) obj. -24.3192 iterations 16
Cbc0038I Pass  37: suminf.    3.66212 (10) obj. -24.3192 iterations 2
Cbc0038I Pass  38: suminf.    3.60435 (10) obj. -24.3192 iterations 5
Cbc0038I Pass  39: suminf.    2.97987 (9) obj. -24.3192 iterations 20
Cbc0038I Pass  40: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I Pass  41: suminf.    2.83021 (9) obj. -24.3192 iterations 3
Cbc0038I Pass  42: suminf.    2.95097 (10) obj. -24.3192 iterations 17
Cbc0038I Pass  43: suminf.    2.85675 (10) obj. -24.3192 iterations 9
Cbc0038I Pass  44: suminf.    3.41479 (11) obj. -24.3192 iterations 15
Cbc0038I Pass  45: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I Pass  46: suminf.    2.83021 (9) obj. -24.3192 iterations 3
Cbc0038I Pass  47: suminf.    2.95097 (10) obj. -24.3192 iterations 17
Cbc0038I Pass  48: suminf.    2.85675 (10) obj. -24.3192 iterations 9
Cbc0038I Pass  49: suminf.    3.41479 (11) obj. -24.3192 iterations 15
Cbc0038I Pass  50: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I Pass  51: suminf.    2.83021 (9) obj. -24.3192 iterations 3
Cbc0038I Pass  52: suminf.    2.95097 (10) obj. -24.3192 iterations 17
Cbc0038I Pass  53: suminf.    2.85675 (10) obj. -24.3192 iterations 9
Cbc0038I Pass  54: suminf.    3.41479 (11) obj. -24.3192 iterations 15
Cbc0038I Pass  55: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I Pass  56: suminf.    2.83021 (9) obj. -24.3192 iterations 3
Cbc0038I Pass  57: suminf.    2.95097 (10) obj. -24.3192 iterations 17
Cbc0038I Pass  58: suminf.    2.85675 (10) obj. -24.3192 iterations 9
Cbc0038I Pass  59: suminf.    3.41479 (11) obj. -24.3192 iterations 15
Cbc0038I Pass  60: suminf.    2.87892 (8) obj. -24.3192 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 101 columns, reduced to 101 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -16.5006 - took 0.20 seconds
Cbc0012I Integer solution of -16.50057 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 100 rows 61 columns
Cbc0031I 46 added rows had average density of 54.565217
Cbc0013I At root node, 46 cuts changed objective from -44.495858 to -36.532864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24269 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3680 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.50057 best solution, best possible -36.532864 (2.11 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 21 rows 17 columns
Cbc0012I Integer solution of -16.79008 found by RINS after 14087 iterations and 41 nodes (2.52 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 17 rows 16 columns
Cbc0010I After 158 nodes, 1 on tree, -16.79008 best solution, best possible -24.579279 (2.81 seconds)
Cbc0038I Full problem 177 rows 101 columns, reduced to 6 rows 6 columns
Cbc0004I Integer solution of -17.09812 found after 18759 iterations and 227 nodes (2.94 seconds)
Cbc0012I Integer solution of -17.14278 found by rounding after 18835 iterations and 233 nodes (2.95 seconds)
Cbc0001I Search completed - best objective -17.14278, took 19454 iterations and 266 nodes (3.01 seconds)
Cbc0032I Strong branching done 2046 times (26123 iterations), fathomed 30 nodes and fixed 138 variables
Cbc0035I Maximum depth 31, 847 variables fixed on reduced cost
Total time (CPU seconds):       2.88   (Wallclock seconds):       3.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-84) rows, 144 (-59) columns and 2487 (-3167) elements
Clp1000I sum of infeasibilities 7.01127e-08 - average 5.79444e-10, 69 fixed columns
Coin0506I Presolve 54 (-67) rows, 75 (-69) columns and 252 (-2235) elements
Clp0006I 0  Obj -21.155417 Dual inf 141.82772 (74)
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.24501418 - largest nonzero change 2.9932119e-05 ( 0.0025888945%) - largest zero change 2.9853267e-05
Clp0000I Optimal - objective value -9.9988326
Clp0000I Optimal - objective value -9.9988326
Coin0511I After Postsolve, objective -9.9988326, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.9988326 Dual inf 142.5663 (45)
Clp0014I Perturbing problem by 0.001% of 1.4085416 - largest nonzero change 2.7814203e-05 ( 0.0027814203%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 51.507379
Clp0000I Optimal - objective value 51.507379
Clp0000I Optimal - objective value 51.507379
Coin0511I After Postsolve, objective 51.507379, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.50737857 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 144 columns (144 integer (144 of which binary)) and 2490 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.560%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.70361
Cbc0038I Pass   1: suminf.    4.70098 (33) obj. -36.1761 iterations 16
Cbc0038I Pass   2: suminf.    4.70098 (33) obj. -36.1761 iterations 1
Cbc0038I Pass   3: suminf.    2.29348 (18) obj. -18.5886 iterations 15
Cbc0038I Solution found of -1.95346
Cbc0038I Rounding solution of -3.52937 is better than previous of -1.95346

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -3.52937 to -3.58836 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.09973
Cbc0038I Pass   4: suminf.    4.70098 (33) obj. -36.1761 iterations 0
Cbc0038I Pass   5: suminf.    4.70098 (33) obj. -36.1761 iterations 1
Cbc0038I Pass   6: suminf.    1.57443 (13) obj. -14.3076 iterations 20
Cbc0038I Pass   7: suminf.    0.58149 (3) obj. -7.09973 iterations 34
Cbc0038I Pass   8: suminf.    0.58149 (3) obj. -7.09973 iterations 0
Cbc0038I Pass   9: suminf.    1.23581 (4) obj. -7.09973 iterations 7
Cbc0038I Pass  10: suminf.    1.01777 (4) obj. -7.09973 iterations 8
Cbc0038I Pass  11: suminf.    0.40571 (2) obj. -7.20093 iterations 7
Cbc0038I Pass  12: suminf.    0.38214 (3) obj. -7.09973 iterations 4
Cbc0038I Pass  13: suminf.    0.43102 (2) obj. -7.09973 iterations 4
Cbc0038I Pass  14: suminf.    2.66883 (17) obj. -7.09973 iterations 51
Cbc0038I Pass  15: suminf.    2.28843 (16) obj. -7.09973 iterations 8
Cbc0038I Pass  16: suminf.    0.78078 (12) obj. -7.09973 iterations 33
Cbc0038I Pass  17: suminf.    0.76509 (6) obj. -7.09973 iterations 1
Cbc0038I Pass  18: suminf.    0.90102 (4) obj. -7.09973 iterations 9
Cbc0038I Pass  19: suminf.    0.90102 (4) obj. -7.09973 iterations 2
Cbc0038I Pass  20: suminf.    1.34368 (5) obj. -7.09973 iterations 6
Cbc0038I Pass  21: suminf.    1.22827 (6) obj. -7.09973 iterations 1
Cbc0038I Pass  22: suminf.    0.73142 (4) obj. -7.09973 iterations 10
Cbc0038I Pass  23: suminf.    0.50278 (5) obj. -7.09973 iterations 9
Cbc0038I Pass  24: suminf.    0.68291 (4) obj. -7.09973 iterations 5
Cbc0038I Pass  25: suminf.    1.26711 (9) obj. -7.09973 iterations 28
Cbc0038I Pass  26: suminf.    0.53962 (5) obj. -7.41925 iterations 9
Cbc0038I Pass  27: suminf.    0.53806 (5) obj. -7.09973 iterations 18
Cbc0038I Pass  28: suminf.    0.49354 (4) obj. -7.36819 iterations 2
Cbc0038I Pass  29: suminf.    1.41456 (11) obj. -7.09973 iterations 15
Cbc0038I Pass  30: suminf.    1.41456 (11) obj. -7.09973 iterations 0
Cbc0038I Pass  31: suminf.    1.76726 (10) obj. -7.09973 iterations 11
Cbc0038I Pass  32: suminf.    1.13936 (9) obj. -7.09973 iterations 7
Cbc0038I Pass  33: suminf.    1.60274 (8) obj. -7.09973 iterations 4
Cbc0038I Rounding solution of -5.44847 is better than previous of -3.58836

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 144 columns, reduced to 34 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -5.44847 to -8.88191 (0.10 seconds)
Cbc0038I Round again with cutoff of -14.8458
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.70098 (33) obj. -36.1761 iterations 0
Cbc0038I Pass  34: suminf.    4.70098 (33) obj. -36.1761 iterations 1
Cbc0038I Pass  35: suminf.    1.30906 (12) obj. -14.8458 iterations 28
Cbc0038I Pass  36: suminf.    1.30906 (12) obj. -14.8458 iterations 0
Cbc0038I Pass  37: suminf.    1.98065 (17) obj. -14.8458 iterations 29
Cbc0038I Pass  38: suminf.    1.97149 (17) obj. -14.8458 iterations 3
Cbc0038I Pass  39: suminf.    3.46273 (18) obj. -14.8458 iterations 15
Cbc0038I Pass  40: suminf.    2.94925 (18) obj. -14.8458 iterations 3
Cbc0038I Pass  41: suminf.    1.59494 (18) obj. -14.8458 iterations 4
Cbc0038I Pass  42: suminf.    1.59494 (18) obj. -14.8458 iterations 0
Cbc0038I Pass  43: suminf.    3.46273 (18) obj. -14.8458 iterations 15
Cbc0038I Pass  44: suminf.    3.17206 (16) obj. -14.8458 iterations 19
Cbc0038I Pass  45: suminf.    2.60442 (19) obj. -14.8458 iterations 8
Cbc0038I Pass  46: suminf.    2.69818 (18) obj. -14.8458 iterations 18
Cbc0038I Pass  47: suminf.    2.64271 (18) obj. -14.8458 iterations 5
Cbc0038I Pass  48: suminf.    2.95294 (17) obj. -14.8458 iterations 11
Cbc0038I Pass  49: suminf.    2.95294 (17) obj. -14.8458 iterations 2
Cbc0038I Pass  50: suminf.    3.87906 (19) obj. -14.8458 iterations 9
Cbc0038I Pass  51: suminf.    2.89767 (18) obj. -14.8458 iterations 6
Cbc0038I Pass  52: suminf.    2.81802 (17) obj. -14.8458 iterations 5
Cbc0038I Pass  53: suminf.    2.92554 (17) obj. -14.8458 iterations 4
Cbc0038I Pass  54: suminf.    2.92740 (17) obj. -14.8458 iterations 4
Cbc0038I Pass  55: suminf.    3.87906 (19) obj. -14.8458 iterations 9
Cbc0038I Pass  56: suminf.    2.89767 (18) obj. -14.8458 iterations 6
Cbc0038I Pass  57: suminf.    2.81802 (17) obj. -14.8458 iterations 5
Cbc0038I Pass  58: suminf.    2.82737 (17) obj. -14.8458 iterations 7
Cbc0038I Pass  59: suminf.    2.82737 (17) obj. -14.8458 iterations 4
Cbc0038I Pass  60: suminf.    2.81802 (17) obj. -14.8458 iterations 5
Cbc0038I Pass  61: suminf.    2.07545 (17) obj. -14.8458 iterations 25
Cbc0038I Pass  62: suminf.    1.48205 (14) obj. -14.8458 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -8.88191 - took 0.08 seconds
Cbc0012I Integer solution of -8.88191 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 121 rows 144 columns, reduced to 16 rows 23 columns
Cbc0031I 79 added rows had average density of 27.708861
Cbc0013I At root node, 79 cuts changed objective from -38.701113 to -20.494825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13191 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1413 row cuts average 138.1 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1020 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1046 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 313 row cuts average 94.7 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 244 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.808 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.88191 best solution, best possible -20.494825 (3.10 seconds)
Cbc0012I Integer solution of -11.71333 found by rounding after 4732 iterations and 1 nodes (3.16 seconds)
Cbc0012I Integer solution of -13.163041 found by rounding after 5089 iterations and 2 nodes (3.38 seconds)
Cbc0010I After 3 nodes, 4 on tree, -13.163041 best solution, best possible -20.494825 (3.89 seconds)
Cbc0012I Integer solution of -14.93414 found by DiveCoefficient after 5401 iterations and 4 nodes (4.09 seconds)
Cbc0012I Integer solution of -15.37391 found by DiveCoefficient after 5603 iterations and 9 nodes (4.60 seconds)
Cbc0010I After 9 nodes, 9 on tree, -15.37391 best solution, best possible -20.494825 (4.69 seconds)
Cbc0016I Integer solution of -16.99221 found by strong branching after 5692 iterations and 10 nodes (4.77 seconds)
Cbc0010I After 23 nodes, 10 on tree, -16.99221 best solution, best possible -20.494825 (5.41 seconds)
Cbc0010I After 36 nodes, 14 on tree, -16.99221 best solution, best possible -20.494825 (6.11 seconds)
Cbc0016I Integer solution of -17.14278 found by strong branching after 6988 iterations and 38 nodes (6.16 seconds)
Cbc0038I Full problem 121 rows 144 columns, reduced to 2 rows 6 columns
Cbc0010I After 57 nodes, 10 on tree, -17.14278 best solution, best possible -20.494825 (6.86 seconds)
Cbc0001I Search completed - best objective -17.14278, took 8428 iterations and 70 nodes (7.06 seconds)
Cbc0032I Strong branching done 864 times (17005 iterations), fathomed 8 nodes and fixed 25 variables
Cbc0035I Maximum depth 20, 134 variables fixed on reduced cost
Total time (CPU seconds):       4.82   (Wallclock seconds):       7.08

