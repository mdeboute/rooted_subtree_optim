Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 76 (-2) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 6.56968e-05 - average 5.13257e-07, 10 fixed columns
Coin0506I Presolve 110 (-18) rows, 66 (-10) columns and 344 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 0.33998987 - largest nonzero change 0 ( 0%) - largest zero change 2.9375698e-05
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Coin0511I After Postsolve, objective 37.551041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Coin0511I After Postsolve, objective 37.551041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.55104094 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 76 columns (75 integer (75 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.084%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.3417
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.401 iterations 59
Cbc0038I Solution found of 13.401
Cbc0038I Relaxing continuous gives 13.401
Cbc0038I Rounding solution of -5.96876 is better than previous of 13.401

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.96876 to -7.98318 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.9401
Cbc0038I Pass   2: suminf.    3.56059 (14) obj. -10.9401 iterations 19
Cbc0038I Pass   3: suminf.    1.32453 (7) obj. -10.9401 iterations 18
Cbc0038I Pass   4: suminf.    2.94251 (8) obj. -10.9401 iterations 17
Cbc0038I Pass   5: suminf.    2.72630 (7) obj. -10.9401 iterations 1
Cbc0038I Pass   6: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass   7: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass   8: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass   9: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  10: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  11: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  12: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  13: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  14: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  15: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  16: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  17: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  18: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  19: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  20: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  21: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  22: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  23: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  24: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  25: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  26: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  27: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  28: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  29: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  30: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  31: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.98318 - took 0.10 seconds
Cbc0012I Integer solution of -7.98318 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0031I 25 added rows had average density of 53.16
Cbc0013I At root node, 25 cuts changed objective from -37.551041 to -28.08918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13943 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2005 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 98 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.98318 best solution, best possible -28.08918 (0.97 seconds)
Cbc0012I Integer solution of -8.92782 found by rounding after 8005 iterations and 6 nodes (1.02 seconds)
Cbc0012I Integer solution of -9.07578 found by rounding after 8012 iterations and 7 nodes (1.02 seconds)
Cbc0012I Integer solution of -9.69696 found by rounding after 8016 iterations and 8 nodes (1.02 seconds)
Cbc0012I Integer solution of -9.9102 found by DiveCoefficient after 8110 iterations and 12 nodes (1.03 seconds)
Cbc0016I Integer solution of -9.92622 found by strong branching after 8155 iterations and 19 nodes (1.03 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 77 rows 47 columns
Cbc0012I Integer solution of -10.59874 found by RINS after 9064 iterations and 42 nodes (1.32 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 9 rows 10 columns
Cbc0001I Search completed - best objective -10.59874000000001, took 12292 iterations and 156 nodes (1.62 seconds)
Cbc0032I Strong branching done 1744 times (26991 iterations), fathomed 8 nodes and fixed 100 variables
Cbc0035I Maximum depth 36, 388 variables fixed on reduced cost
Total time (CPU seconds):       1.57   (Wallclock seconds):       1.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 114 (-38) columns and 1799 (-1504) elements
Clp1000I sum of infeasibilities 1.1585e-07 - average 1.25924e-09, 28 fixed columns
Coin0506I Presolve 71 (-21) rows, 86 (-28) columns and 1130 (-669) elements
Clp0006I 0  Obj 36.618866 Dual inf 3.8356033 (86)
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.1216897 - largest nonzero change 2.9199453e-05 ( 0.0024275985%) - largest zero change 2.7996378e-05
Clp0000I Optimal - objective value 54.347306
Clp0000I Optimal - objective value 54.347306
Coin0511I After Postsolve, objective 54.347306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.347306
Clp0000I Optimal - objective value 54.347306
Clp0000I Optimal - objective value 54.347306
Clp0000I Optimal - objective value 54.347306
Coin0511I After Postsolve, objective 54.347306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34730635 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 114 columns (114 integer (114 of which binary)) and 1801 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.416%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.09603
Cbc0038I Pass   1: suminf.    4.09640 (32) obj. -39.7216 iterations 11
Cbc0038I Pass   2: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass   3: suminf.    2.43447 (21) obj. -26.1228 iterations 11
Cbc0038I Solution found of -2.25212
Cbc0038I Rounding solution of -3.56107 is better than previous of -2.25212

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 114 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -3.56107 to -4.88799 (0.02 seconds)
Cbc0038I Round again with cutoff of -8.84992
Cbc0038I Pass   4: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass   5: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass   6: suminf.    2.57531 (22) obj. -27.8411 iterations 10
Cbc0038I Pass   7: suminf.    0.44009 (3) obj. -8.84992 iterations 31
Cbc0038I Pass   8: suminf.    0.44009 (3) obj. -8.84992 iterations 0
Cbc0038I Pass   9: suminf.    0.31873 (4) obj. -8.84992 iterations 3
Cbc0038I Pass  10: suminf.    0.31873 (4) obj. -8.84992 iterations 0
Cbc0038I Pass  11: suminf.    1.44212 (4) obj. -8.84992 iterations 7
Cbc0038I Pass  12: suminf.    0.91053 (5) obj. -8.84992 iterations 3
Cbc0038I Pass  13: suminf.    0.67646 (7) obj. -8.84992 iterations 5
Cbc0038I Pass  14: suminf.    0.61495 (5) obj. -8.84992 iterations 3
Cbc0038I Pass  15: suminf.    0.91053 (5) obj. -8.84992 iterations 7
Cbc0038I Pass  16: suminf.    3.85129 (15) obj. -8.84992 iterations 17
Cbc0038I Pass  17: suminf.    2.09732 (10) obj. -10.5413 iterations 6
Cbc0038I Pass  18: suminf.    1.44084 (6) obj. -8.84992 iterations 17
Cbc0038I Pass  19: suminf.    1.29835 (5) obj. -9.27977 iterations 3
Cbc0038I Pass  20: suminf.    1.18949 (5) obj. -8.84992 iterations 10
Cbc0038I Pass  21: suminf.    0.83018 (5) obj. -8.84992 iterations 3
Cbc0038I Pass  22: suminf.    1.53601 (4) obj. -8.84992 iterations 13
Cbc0038I Pass  23: suminf.    0.70487 (5) obj. -8.84992 iterations 6
Cbc0038I Pass  24: suminf.    0.55309 (3) obj. -9.0714 iterations 4
Cbc0038I Pass  25: suminf.    0.88891 (4) obj. -8.84992 iterations 4
Cbc0038I Pass  26: suminf.    2.42274 (13) obj. -8.84992 iterations 27
Cbc0038I Pass  27: suminf.    1.97881 (14) obj. -8.84992 iterations 11
Cbc0038I Pass  28: suminf.    1.35194 (6) obj. -8.84992 iterations 17
Cbc0038I Pass  29: suminf.    1.25380 (10) obj. -8.84992 iterations 18
Cbc0038I Pass  30: suminf.    1.08690 (10) obj. -8.84992 iterations 5
Cbc0038I Pass  31: suminf.    0.95547 (6) obj. -8.84992 iterations 21
Cbc0038I Pass  32: suminf.    0.73382 (6) obj. -8.84992 iterations 9
Cbc0038I Pass  33: suminf.    1.19140 (5) obj. -8.84992 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 114 columns, reduced to 23 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -4.88799 to -6.91497 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.9812
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass  34: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass  35: suminf.    1.32045 (13) obj. -15.9812 iterations 21
Cbc0038I Pass  36: suminf.    0.94834 (6) obj. -15.9812 iterations 16
Cbc0038I Pass  37: suminf.    0.77336 (6) obj. -15.9812 iterations 3
Cbc0038I Pass  38: suminf.    0.94834 (6) obj. -15.9812 iterations 6
Cbc0038I Pass  39: suminf.    2.74473 (15) obj. -15.9812 iterations 17
Cbc0038I Pass  40: suminf.    2.57680 (13) obj. -16.3266 iterations 3
Cbc0038I Pass  41: suminf.    2.50330 (13) obj. -15.9812 iterations 1
Cbc0038I Pass  42: suminf.    1.80349 (9) obj. -15.9812 iterations 13
Cbc0038I Pass  43: suminf.    1.25045 (8) obj. -15.9812 iterations 4
Cbc0038I Pass  44: suminf.    1.83873 (8) obj. -15.9812 iterations 9
Cbc0038I Pass  45: suminf.    1.63272 (9) obj. -15.9812 iterations 5
Cbc0038I Pass  46: suminf.    1.80361 (8) obj. -15.9812 iterations 8
Cbc0038I Pass  47: suminf.    1.64714 (9) obj. -15.9812 iterations 5
Cbc0038I Pass  48: suminf.    2.91232 (13) obj. -15.9812 iterations 12
Cbc0038I Pass  49: suminf.    2.72653 (12) obj. -15.9812 iterations 3
Cbc0038I Pass  50: suminf.    1.71167 (10) obj. -15.9812 iterations 16
Cbc0038I Pass  51: suminf.    1.55686 (11) obj. -15.9812 iterations 2
Cbc0038I Pass  52: suminf.    1.76168 (12) obj. -15.9812 iterations 20
Cbc0038I Pass  53: suminf.    1.76168 (12) obj. -15.9812 iterations 1
Cbc0038I Pass  54: suminf.    3.02935 (12) obj. -15.9812 iterations 6
Cbc0038I Pass  55: suminf.    1.54811 (8) obj. -15.9812 iterations 7
Cbc0038I Pass  56: suminf.    1.40091 (9) obj. -15.9812 iterations 3
Cbc0038I Pass  57: suminf.    1.76168 (12) obj. -15.9812 iterations 15
Cbc0038I Pass  58: suminf.    1.76168 (12) obj. -15.9812 iterations 3
Cbc0038I Pass  59: suminf.    1.70331 (12) obj. -15.9812 iterations 8
Cbc0038I Pass  60: suminf.    1.70331 (12) obj. -15.9812 iterations 2
Cbc0038I Pass  61: suminf.    2.96014 (11) obj. -15.9812 iterations 8
Cbc0038I Pass  62: suminf.    1.54811 (8) obj. -15.9812 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -6.91497 - took 0.06 seconds
Cbc0012I Integer solution of -6.91497 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 92 rows 114 columns, reduced to 7 rows 8 columns
Cbc0031I 58 added rows had average density of 40.034483
Cbc0013I At root node, 58 cuts changed objective from -44.506342 to -14.174117 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14233 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1395 row cuts average 109.3 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 675 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1181 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 59.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.681 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.91497 best solution, best possible -14.174117 (2.60 seconds)
Cbc0012I Integer solution of -8.30679 found by rounding after 5563 iterations and 8 nodes (2.99 seconds)
Cbc0012I Integer solution of -9.75666 found by rounding after 5740 iterations and 12 nodes (3.04 seconds)
Cbc0016I Integer solution of -10.59874 found by strong branching after 6626 iterations and 31 nodes (3.15 seconds)
Cbc0001I Search completed - best objective -10.59874000000001, took 7095 iterations and 40 nodes (3.17 seconds)
Cbc0032I Strong branching done 606 times (13523 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 18, 73 variables fixed on reduced cost
Total time (CPU seconds):       2.40   (Wallclock seconds):       3.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 76 (-2) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 6.56968e-05 - average 5.13257e-07, 10 fixed columns
Coin0506I Presolve 110 (-18) rows, 66 (-10) columns and 344 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 0.33998987 - largest nonzero change 0 ( 0%) - largest zero change 2.9375698e-05
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Coin0511I After Postsolve, objective 37.551041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Clp0000I Optimal - objective value 37.551041
Coin0511I After Postsolve, objective 37.551041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.55104094 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 128 rows, 76 columns (75 integer (75 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.084%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.3417
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.401 iterations 59
Cbc0038I Solution found of 13.401
Cbc0038I Relaxing continuous gives 13.401
Cbc0038I Rounding solution of -5.96876 is better than previous of 13.401

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -5.96876 to -7.98318 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.9401
Cbc0038I Pass   2: suminf.    3.56059 (14) obj. -10.9401 iterations 19
Cbc0038I Pass   3: suminf.    1.32453 (7) obj. -10.9401 iterations 18
Cbc0038I Pass   4: suminf.    2.94251 (8) obj. -10.9401 iterations 17
Cbc0038I Pass   5: suminf.    2.72630 (7) obj. -10.9401 iterations 1
Cbc0038I Pass   6: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass   7: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass   8: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass   9: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  10: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  11: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  12: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  13: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  14: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  15: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  16: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  17: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  18: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  19: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  20: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  21: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  22: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  23: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  24: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I Pass  25: suminf.    1.17902 (6) obj. -10.9401 iterations 4
Cbc0038I Pass  26: suminf.    2.72630 (7) obj. -10.9401 iterations 9
Cbc0038I Pass  27: suminf.    1.38054 (8) obj. -10.9401 iterations 3
Cbc0038I Pass  28: suminf.    1.17718 (5) obj. -10.9401 iterations 2
Cbc0038I Pass  29: suminf.    1.49441 (6) obj. -10.9401 iterations 11
Cbc0038I Pass  30: suminf.    0.94406 (6) obj. -10.9401 iterations 6
Cbc0038I Pass  31: suminf.    1.71261 (7) obj. -10.9401 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.98318 - took 0.09 seconds
Cbc0012I Integer solution of -7.98318 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 67 rows 44 columns
Cbc0031I 25 added rows had average density of 53.16
Cbc0013I At root node, 25 cuts changed objective from -37.551041 to -28.08918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13943 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2005 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 98 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.98318 best solution, best possible -28.08918 (0.90 seconds)
Cbc0012I Integer solution of -8.92782 found by rounding after 8005 iterations and 6 nodes (0.95 seconds)
Cbc0012I Integer solution of -9.07578 found by rounding after 8012 iterations and 7 nodes (0.95 seconds)
Cbc0012I Integer solution of -9.69696 found by rounding after 8016 iterations and 8 nodes (0.95 seconds)
Cbc0012I Integer solution of -9.9102 found by DiveCoefficient after 8110 iterations and 12 nodes (0.96 seconds)
Cbc0016I Integer solution of -9.92622 found by strong branching after 8155 iterations and 19 nodes (0.96 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 77 rows 47 columns
Cbc0012I Integer solution of -10.59874 found by RINS after 9064 iterations and 42 nodes (1.23 seconds)
Cbc0038I Full problem 128 rows 76 columns, reduced to 9 rows 10 columns
Cbc0001I Search completed - best objective -10.59874000000001, took 12292 iterations and 156 nodes (1.52 seconds)
Cbc0032I Strong branching done 1744 times (26991 iterations), fathomed 8 nodes and fixed 100 variables
Cbc0035I Maximum depth 36, 388 variables fixed on reduced cost
Total time (CPU seconds):       1.48   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 114 (-39) columns and 1799 (-1505) elements
Clp1000I sum of infeasibilities 1.1585e-07 - average 1.25924e-09, 28 fixed columns
Coin0506I Presolve 71 (-21) rows, 86 (-28) columns and 1130 (-669) elements
Clp0006I 0  Obj 36.618866 Dual inf 3.8356033 (86)
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.1216897 - largest nonzero change 2.9199453e-05 ( 0.0024275985%) - largest zero change 2.7996378e-05
Clp0000I Optimal - objective value 54.347306
Clp0000I Optimal - objective value 54.347306
Coin0511I After Postsolve, objective 54.347306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.347306
Clp0000I Optimal - objective value 54.347306
Clp0000I Optimal - objective value 54.347306
Clp0000I Optimal - objective value 54.347306
Coin0511I After Postsolve, objective 54.347306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.34730635 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 114 columns (114 integer (114 of which binary)) and 1801 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.416%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.09603
Cbc0038I Pass   1: suminf.    4.09640 (32) obj. -39.7216 iterations 11
Cbc0038I Pass   2: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass   3: suminf.    2.43447 (21) obj. -26.1228 iterations 11
Cbc0038I Solution found of -2.25212
Cbc0038I Rounding solution of -3.56107 is better than previous of -2.25212

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 114 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -3.56107 to -4.88799 (0.02 seconds)
Cbc0038I Round again with cutoff of -8.84992
Cbc0038I Pass   4: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass   5: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass   6: suminf.    2.57531 (22) obj. -27.8411 iterations 10
Cbc0038I Pass   7: suminf.    0.44009 (3) obj. -8.84992 iterations 31
Cbc0038I Pass   8: suminf.    0.44009 (3) obj. -8.84992 iterations 0
Cbc0038I Pass   9: suminf.    0.31873 (4) obj. -8.84992 iterations 3
Cbc0038I Pass  10: suminf.    0.31873 (4) obj. -8.84992 iterations 0
Cbc0038I Pass  11: suminf.    1.44212 (4) obj. -8.84992 iterations 7
Cbc0038I Pass  12: suminf.    0.91053 (5) obj. -8.84992 iterations 3
Cbc0038I Pass  13: suminf.    0.67646 (7) obj. -8.84992 iterations 5
Cbc0038I Pass  14: suminf.    0.61495 (5) obj. -8.84992 iterations 3
Cbc0038I Pass  15: suminf.    0.91053 (5) obj. -8.84992 iterations 7
Cbc0038I Pass  16: suminf.    3.85129 (15) obj. -8.84992 iterations 17
Cbc0038I Pass  17: suminf.    2.09732 (10) obj. -10.5413 iterations 6
Cbc0038I Pass  18: suminf.    1.44084 (6) obj. -8.84992 iterations 17
Cbc0038I Pass  19: suminf.    1.29835 (5) obj. -9.27977 iterations 3
Cbc0038I Pass  20: suminf.    1.18949 (5) obj. -8.84992 iterations 10
Cbc0038I Pass  21: suminf.    0.83018 (5) obj. -8.84992 iterations 3
Cbc0038I Pass  22: suminf.    1.53601 (4) obj. -8.84992 iterations 13
Cbc0038I Pass  23: suminf.    0.70487 (5) obj. -8.84992 iterations 6
Cbc0038I Pass  24: suminf.    0.55309 (3) obj. -9.0714 iterations 4
Cbc0038I Pass  25: suminf.    0.88891 (4) obj. -8.84992 iterations 4
Cbc0038I Pass  26: suminf.    2.42274 (13) obj. -8.84992 iterations 27
Cbc0038I Pass  27: suminf.    1.97881 (14) obj. -8.84992 iterations 11
Cbc0038I Pass  28: suminf.    1.35194 (6) obj. -8.84992 iterations 17
Cbc0038I Pass  29: suminf.    1.25380 (10) obj. -8.84992 iterations 18
Cbc0038I Pass  30: suminf.    1.08690 (10) obj. -8.84992 iterations 5
Cbc0038I Pass  31: suminf.    0.95547 (6) obj. -8.84992 iterations 21
Cbc0038I Pass  32: suminf.    0.73382 (6) obj. -8.84992 iterations 9
Cbc0038I Pass  33: suminf.    1.19140 (5) obj. -8.84992 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 114 columns, reduced to 23 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -4.88799 to -6.91497 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.9812
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass  34: suminf.    4.09640 (32) obj. -39.7216 iterations 0
Cbc0038I Pass  35: suminf.    1.32045 (13) obj. -15.9812 iterations 21
Cbc0038I Pass  36: suminf.    0.94834 (6) obj. -15.9812 iterations 16
Cbc0038I Pass  37: suminf.    0.77336 (6) obj. -15.9812 iterations 3
Cbc0038I Pass  38: suminf.    0.94834 (6) obj. -15.9812 iterations 6
Cbc0038I Pass  39: suminf.    2.74473 (15) obj. -15.9812 iterations 17
Cbc0038I Pass  40: suminf.    2.57680 (13) obj. -16.3266 iterations 3
Cbc0038I Pass  41: suminf.    2.50330 (13) obj. -15.9812 iterations 1
Cbc0038I Pass  42: suminf.    1.80349 (9) obj. -15.9812 iterations 13
Cbc0038I Pass  43: suminf.    1.25045 (8) obj. -15.9812 iterations 4
Cbc0038I Pass  44: suminf.    1.83873 (8) obj. -15.9812 iterations 9
Cbc0038I Pass  45: suminf.    1.63272 (9) obj. -15.9812 iterations 5
Cbc0038I Pass  46: suminf.    1.80361 (8) obj. -15.9812 iterations 8
Cbc0038I Pass  47: suminf.    1.64714 (9) obj. -15.9812 iterations 5
Cbc0038I Pass  48: suminf.    2.91232 (13) obj. -15.9812 iterations 12
Cbc0038I Pass  49: suminf.    2.72653 (12) obj. -15.9812 iterations 3
Cbc0038I Pass  50: suminf.    1.71167 (10) obj. -15.9812 iterations 16
Cbc0038I Pass  51: suminf.    1.55686 (11) obj. -15.9812 iterations 2
Cbc0038I Pass  52: suminf.    1.76168 (12) obj. -15.9812 iterations 20
Cbc0038I Pass  53: suminf.    1.76168 (12) obj. -15.9812 iterations 1
Cbc0038I Pass  54: suminf.    3.02935 (12) obj. -15.9812 iterations 6
Cbc0038I Pass  55: suminf.    1.54811 (8) obj. -15.9812 iterations 7
Cbc0038I Pass  56: suminf.    1.40091 (9) obj. -15.9812 iterations 3
Cbc0038I Pass  57: suminf.    1.76168 (12) obj. -15.9812 iterations 15
Cbc0038I Pass  58: suminf.    1.76168 (12) obj. -15.9812 iterations 3
Cbc0038I Pass  59: suminf.    1.70331 (12) obj. -15.9812 iterations 8
Cbc0038I Pass  60: suminf.    1.70331 (12) obj. -15.9812 iterations 2
Cbc0038I Pass  61: suminf.    2.96014 (11) obj. -15.9812 iterations 8
Cbc0038I Pass  62: suminf.    1.54811 (8) obj. -15.9812 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -6.91497 - took 0.06 seconds
Cbc0012I Integer solution of -6.91497 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 92 rows 114 columns, reduced to 7 rows 8 columns
Cbc0031I 58 added rows had average density of 40.034483
Cbc0013I At root node, 58 cuts changed objective from -44.506342 to -14.174117 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14233 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1395 row cuts average 109.3 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 675 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1181 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 59.3 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.665 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.91497 best solution, best possible -14.174117 (2.51 seconds)
Cbc0012I Integer solution of -8.30679 found by rounding after 5563 iterations and 8 nodes (2.87 seconds)
Cbc0012I Integer solution of -9.75666 found by rounding after 5740 iterations and 12 nodes (2.92 seconds)
Cbc0016I Integer solution of -10.59874 found by strong branching after 6626 iterations and 31 nodes (3.04 seconds)
Cbc0001I Search completed - best objective -10.59874000000001, took 7095 iterations and 40 nodes (3.05 seconds)
Cbc0032I Strong branching done 606 times (13523 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 18, 73 variables fixed on reduced cost
Total time (CPU seconds):       2.32   (Wallclock seconds):       3.07

