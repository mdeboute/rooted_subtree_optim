Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 3.55492e-05 - average 6.02528e-07, 2 fixed columns
Coin0506I Presolve 50 (-9) rows, 30 (-3) columns and 152 (-24) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Coin0511I After Postsolve, objective 68.510679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Coin0511I After Postsolve, objective 68.510679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.51067917 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.668%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.00459
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.95811 iterations 23
Cbc0038I Solution found of 5.95811
Cbc0038I Relaxing continuous gives 5.95811
Cbc0038I Rounding solution of -5.31414 is better than previous of 5.95811

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -5.31414 to -12.5079 (0.01 seconds)
Cbc0038I Round again with cutoff of -18.1083
Cbc0038I Pass   2: suminf.    0.86576 (4) obj. -18.1083 iterations 4
Cbc0038I Pass   3: suminf.    1.54230 (4) obj. -18.1083 iterations 2
Cbc0038I Pass   4: suminf.    0.84991 (3) obj. -18.1083 iterations 4
Cbc0038I Pass   5: suminf.    0.84991 (3) obj. -18.1083 iterations 0
Cbc0038I Pass   6: suminf.    1.05104 (3) obj. -18.1083 iterations 3
Cbc0038I Pass   7: suminf.    1.05104 (3) obj. -18.1083 iterations 0
Cbc0038I Pass   8: suminf.    1.28473 (5) obj. -18.1083 iterations 10
Cbc0038I Pass   9: suminf.    0.52733 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  10: suminf.    0.42488 (2) obj. -18.1083 iterations 5
Cbc0038I Pass  11: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  12: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  13: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  14: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  15: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  16: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  17: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  18: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  19: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  20: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  21: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  22: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  23: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  24: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  25: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  26: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  27: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  28: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  29: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  30: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  31: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -12.5079 to -19.4136 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.2331
Cbc0038I Pass  31: suminf.    1.21075 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  32: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  33: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  34: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  35: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  36: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  37: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  38: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  39: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  40: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  41: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  42: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  43: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  44: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  45: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  46: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  47: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  48: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  49: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  50: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  51: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  52: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  53: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  54: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  55: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  56: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  57: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  58: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  59: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  60: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -19.4136 - took 0.07 seconds
Cbc0012I Integer solution of -19.4136 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 31 rows 21 columns
Cbc0031I 12 added rows had average density of 25.833333
Cbc0013I At root node, 12 cuts changed objective from -68.510679 to -43.697875 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1935 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 726 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19.4136, took 3134 iterations and 8 nodes (0.28 seconds)
Cbc0032I Strong branching done 160 times (2376 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-13) rows, 60 (-6) columns and 586 (-137) elements
Clp1000I sum of infeasibilities 4.23015e-08 - average 7.69119e-10, 31 fixed columns
Coin0506I Presolve 22 (-33) rows, 29 (-31) columns and 97 (-489) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 1.8186591 - largest nonzero change 2.3325072e-05 ( 0.0016580886%) - largest zero change 2.9560048e-05
Clp0000I Optimal - objective value -24.934172
Clp0000I Optimal - objective value -24.934172
Coin0511I After Postsolve, objective -24.934172, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306579 - largest nonzero change 2.1397661e-05 ( 0.0016580886%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 84.977715
Clp0000I Optimal - objective value 84.977715
Clp0000I Optimal - objective value 84.977715
Coin0511I After Postsolve, objective 84.977715, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.97771471 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 60 columns (60 integer (60 of which binary)) and 589 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.48676
Cbc0038I Pass   1: suminf.    1.30904 (14) obj. -38.2831 iterations 19
Cbc0038I Pass   2: suminf.    1.30904 (14) obj. -38.2831 iterations 1
Cbc0038I Pass   3: suminf.    0.25615 (4) obj. -1.4809 iterations 10
Cbc0038I Solution found of 5.05759
Cbc0038I Rounding solution of -7.66493 is better than previous of 5.05759

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -7.66493 to -10.3089 (0.01 seconds)
Cbc0038I Round again with cutoff of -17.7088
Cbc0038I Pass   4: suminf.    1.30904 (14) obj. -38.2831 iterations 0
Cbc0038I Pass   5: suminf.    1.30904 (14) obj. -38.2831 iterations 1
Cbc0038I Pass   6: suminf.    1.12093 (4) obj. -17.7088 iterations 19
Cbc0038I Pass   7: suminf.    0.68108 (3) obj. -17.7088 iterations 3
Cbc0038I Pass   8: suminf.    0.68108 (3) obj. -17.7088 iterations 0
Cbc0038I Pass   9: suminf.    0.69349 (3) obj. -17.7088 iterations 1
Cbc0038I Pass  10: suminf.    0.69349 (3) obj. -17.7088 iterations 0
Cbc0038I Pass  11: suminf.    1.00251 (6) obj. -17.7088 iterations 17
Cbc0038I Pass  12: suminf.    0.91034 (6) obj. -18.8149 iterations 10
Cbc0038I Pass  13: suminf.    1.18957 (11) obj. -17.7088 iterations 8
Cbc0038I Pass  14: suminf.    1.18957 (11) obj. -17.7088 iterations 0
Cbc0038I Pass  15: suminf.    1.63180 (5) obj. -17.7088 iterations 12
Cbc0038I Pass  16: suminf.    0.76662 (3) obj. -17.7088 iterations 3
Cbc0038I Pass  17: suminf.    0.75555 (3) obj. -17.8306 iterations 1
Cbc0038I Pass  18: suminf.    1.28099 (4) obj. -17.7088 iterations 3
Cbc0038I Pass  19: suminf.    1.47836 (9) obj. -17.7088 iterations 11
Cbc0038I Pass  20: suminf.    1.28632 (7) obj. -17.7088 iterations 4
Cbc0038I Pass  21: suminf.    1.67682 (5) obj. -17.7088 iterations 7
Cbc0038I Pass  22: suminf.    1.25269 (6) obj. -17.7088 iterations 2
Cbc0038I Pass  23: suminf.    1.10283 (4) obj. -17.7088 iterations 3
Cbc0038I Pass  24: suminf.    0.91333 (3) obj. -17.7088 iterations 2
Cbc0038I Pass  25: suminf.    0.96122 (3) obj. -17.7088 iterations 2
Cbc0038I Pass  26: suminf.    2.16578 (8) obj. -17.7088 iterations 13
Cbc0038I Pass  27: suminf.    1.89186 (7) obj. -25.1376 iterations 3
Cbc0038I Pass  28: suminf.    0.90793 (3) obj. -17.7088 iterations 6
Cbc0038I Pass  29: suminf.    0.73668 (3) obj. -19.5925 iterations 1
Cbc0038I Pass  30: suminf.    4.36293 (13) obj. -17.7088 iterations 20
Cbc0038I Pass  31: suminf.    3.05244 (10) obj. -23.824 iterations 5
Cbc0038I Pass  32: suminf.    2.35849 (8) obj. -25.4622 iterations 2
Cbc0038I Pass  33: suminf.    1.29909 (5) obj. -17.7088 iterations 9
Cbc0038I Rounding solution of -11.466 is better than previous of -10.3089

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 42 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -11.466 to -19.4136 (0.04 seconds)
Cbc0038I Round again with cutoff of -32.3924
Cbc0038I Pass  33: suminf.    1.30904 (14) obj. -38.2831 iterations 0
Cbc0038I Pass  34: suminf.    1.30904 (14) obj. -38.2831 iterations 1
Cbc0038I Pass  35: suminf.    2.06554 (13) obj. -32.3924 iterations 22
Cbc0038I Pass  36: suminf.    2.06554 (13) obj. -32.3924 iterations 1
Cbc0038I Pass  37: suminf.    1.52256 (7) obj. -32.3924 iterations 13
Cbc0038I Pass  38: suminf.    1.08844 (5) obj. -35.8146 iterations 2
Cbc0038I Pass  39: suminf.    1.44138 (6) obj. -32.3924 iterations 6
Cbc0038I Pass  40: suminf.    1.25165 (5) obj. -36.2039 iterations 3
Cbc0038I Pass  41: suminf.    1.67709 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  42: suminf.    1.00345 (4) obj. -32.3924 iterations 1
Cbc0038I Pass  43: suminf.    0.97891 (4) obj. -32.6132 iterations 1
Cbc0038I Pass  44: suminf.    1.52046 (8) obj. -32.3924 iterations 10
Cbc0038I Pass  45: suminf.    1.52046 (8) obj. -32.3924 iterations 4
Cbc0038I Pass  46: suminf.    1.42815 (5) obj. -32.3924 iterations 8
Cbc0038I Pass  47: suminf.    1.42481 (5) obj. -32.3924 iterations 1
Cbc0038I Pass  48: suminf.    1.64675 (6) obj. -32.3924 iterations 6
Cbc0038I Pass  49: suminf.    1.33576 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  50: suminf.    1.67709 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  51: suminf.    1.00345 (4) obj. -32.3924 iterations 1
Cbc0038I Pass  52: suminf.    0.97891 (4) obj. -32.6132 iterations 1
Cbc0038I Pass  53: suminf.    1.67709 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  54: suminf.    3.41766 (12) obj. -32.3924 iterations 14
Cbc0038I Pass  55: suminf.    2.28842 (11) obj. -32.3924 iterations 4
Cbc0038I Pass  56: suminf.    2.27266 (10) obj. -32.3924 iterations 1
Cbc0038I Pass  57: suminf.    2.04387 (6) obj. -32.3924 iterations 9
Cbc0038I Pass  58: suminf.    1.76261 (6) obj. -32.3924 iterations 1
Cbc0038I Pass  59: suminf.    1.39491 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  60: suminf.    1.37556 (5) obj. -32.3924 iterations 3
Cbc0038I Pass  61: suminf.    1.67928 (7) obj. -32.3924 iterations 6
Cbc0038I Pass  62: suminf.    1.67928 (7) obj. -32.3924 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 16 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -19.4136 - took 0.05 seconds
Cbc0012I Integer solution of -19.4136 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 55 rows 60 columns, reduced to 13 rows 18 columns
Cbc0031I 27 added rows had average density of 13.962963
Cbc0013I At root node, 27 cuts changed objective from -84.30721 to -21.89812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2222 row cuts average 3.5 elements, 9 column cuts (9 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 735 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 209 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 254 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.4136 best solution, best possible -21.592491 (1.60 seconds)
Cbc0001I Search completed - best objective -19.4136, took 1591 iterations and 2 nodes (1.60 seconds)
Cbc0032I Strong branching done 52 times (800 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 3.55492e-05 - average 6.02528e-07, 2 fixed columns
Coin0506I Presolve 50 (-9) rows, 30 (-3) columns and 152 (-24) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Coin0511I After Postsolve, objective 68.510679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Clp0000I Optimal - objective value 68.510679
Coin0511I After Postsolve, objective 68.510679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.51067917 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 59 rows, 33 columns (32 integer (32 of which binary)) and 177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.668%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.00459
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.95811 iterations 23
Cbc0038I Solution found of 5.95811
Cbc0038I Relaxing continuous gives 5.95811
Cbc0038I Rounding solution of -5.31414 is better than previous of 5.95811

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -5.31414 to -12.5079 (0.01 seconds)
Cbc0038I Round again with cutoff of -18.1083
Cbc0038I Pass   2: suminf.    0.86576 (4) obj. -18.1083 iterations 4
Cbc0038I Pass   3: suminf.    1.54230 (4) obj. -18.1083 iterations 2
Cbc0038I Pass   4: suminf.    0.84991 (3) obj. -18.1083 iterations 4
Cbc0038I Pass   5: suminf.    0.84991 (3) obj. -18.1083 iterations 0
Cbc0038I Pass   6: suminf.    1.05104 (3) obj. -18.1083 iterations 3
Cbc0038I Pass   7: suminf.    1.05104 (3) obj. -18.1083 iterations 0
Cbc0038I Pass   8: suminf.    1.28473 (5) obj. -18.1083 iterations 10
Cbc0038I Pass   9: suminf.    0.52733 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  10: suminf.    0.42488 (2) obj. -18.1083 iterations 5
Cbc0038I Pass  11: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  12: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  13: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  14: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  15: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  16: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  17: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  18: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  19: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  20: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  21: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  22: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  23: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  24: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  25: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  26: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I Pass  27: suminf.    0.98682 (3) obj. -18.1083 iterations 0
Cbc0038I Pass  28: suminf.    0.79653 (3) obj. -18.1083 iterations 6
Cbc0038I Pass  29: suminf.    0.39644 (1) obj. -18.1083 iterations 2
Cbc0038I Pass  30: suminf.    0.42488 (2) obj. -18.1083 iterations 3
Cbc0038I Pass  31: suminf.    0.98682 (3) obj. -18.1083 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -12.5079 to -19.4136 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.2331
Cbc0038I Pass  31: suminf.    1.21075 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  32: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  33: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  34: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  35: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  36: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  37: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  38: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  39: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  40: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  41: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  42: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  43: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  44: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  45: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  46: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  47: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  48: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  49: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  50: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  51: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  52: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  53: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  54: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  55: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  56: suminf.    1.21075 (5) obj. -29.2331 iterations 2
Cbc0038I Pass  57: suminf.    1.21075 (5) obj. -29.2331 iterations 0
Cbc0038I Pass  58: suminf.    1.76840 (5) obj. -29.2331 iterations 4
Cbc0038I Pass  59: suminf.    1.45394 (5) obj. -29.2331 iterations 3
Cbc0038I Pass  60: suminf.    1.45394 (5) obj. -29.2331 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 33 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -19.4136 - took 0.04 seconds
Cbc0012I Integer solution of -19.4136 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 59 rows 33 columns, reduced to 31 rows 21 columns
Cbc0031I 12 added rows had average density of 25.833333
Cbc0013I At root node, 12 cuts changed objective from -68.510679 to -43.697875 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1935 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 726 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -19.4136, took 3134 iterations and 8 nodes (0.27 seconds)
Cbc0032I Strong branching done 160 times (2376 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 60 (-7) columns and 586 (-138) elements
Clp1000I sum of infeasibilities 4.23015e-08 - average 7.69119e-10, 31 fixed columns
Coin0506I Presolve 22 (-33) rows, 29 (-31) columns and 97 (-489) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 1.8186591 - largest nonzero change 2.3325072e-05 ( 0.0016580886%) - largest zero change 2.9560048e-05
Clp0000I Optimal - objective value -24.934172
Clp0000I Optimal - objective value -24.934172
Coin0511I After Postsolve, objective -24.934172, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306579 - largest nonzero change 2.1397661e-05 ( 0.0016580886%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 84.977715
Clp0000I Optimal - objective value 84.977715
Clp0000I Optimal - objective value 84.977715
Coin0511I After Postsolve, objective 84.977715, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.97771471 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 60 columns (60 integer (60 of which binary)) and 589 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.342%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.48676
Cbc0038I Pass   1: suminf.    1.30904 (14) obj. -38.2831 iterations 19
Cbc0038I Pass   2: suminf.    1.30904 (14) obj. -38.2831 iterations 1
Cbc0038I Pass   3: suminf.    0.25615 (4) obj. -1.4809 iterations 10
Cbc0038I Solution found of 5.05759
Cbc0038I Rounding solution of -7.66493 is better than previous of 5.05759

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -7.66493 to -10.3089 (0.02 seconds)
Cbc0038I Round again with cutoff of -17.7088
Cbc0038I Pass   4: suminf.    1.30904 (14) obj. -38.2831 iterations 0
Cbc0038I Pass   5: suminf.    1.30904 (14) obj. -38.2831 iterations 1
Cbc0038I Pass   6: suminf.    1.12093 (4) obj. -17.7088 iterations 19
Cbc0038I Pass   7: suminf.    0.68108 (3) obj. -17.7088 iterations 3
Cbc0038I Pass   8: suminf.    0.68108 (3) obj. -17.7088 iterations 0
Cbc0038I Pass   9: suminf.    0.69349 (3) obj. -17.7088 iterations 1
Cbc0038I Pass  10: suminf.    0.69349 (3) obj. -17.7088 iterations 0
Cbc0038I Pass  11: suminf.    1.00251 (6) obj. -17.7088 iterations 17
Cbc0038I Pass  12: suminf.    0.91034 (6) obj. -18.8149 iterations 10
Cbc0038I Pass  13: suminf.    1.18957 (11) obj. -17.7088 iterations 8
Cbc0038I Pass  14: suminf.    1.18957 (11) obj. -17.7088 iterations 0
Cbc0038I Pass  15: suminf.    1.63180 (5) obj. -17.7088 iterations 12
Cbc0038I Pass  16: suminf.    0.76662 (3) obj. -17.7088 iterations 3
Cbc0038I Pass  17: suminf.    0.75555 (3) obj. -17.8306 iterations 1
Cbc0038I Pass  18: suminf.    1.28099 (4) obj. -17.7088 iterations 3
Cbc0038I Pass  19: suminf.    1.47836 (9) obj. -17.7088 iterations 11
Cbc0038I Pass  20: suminf.    1.28632 (7) obj. -17.7088 iterations 4
Cbc0038I Pass  21: suminf.    1.67682 (5) obj. -17.7088 iterations 7
Cbc0038I Pass  22: suminf.    1.25269 (6) obj. -17.7088 iterations 2
Cbc0038I Pass  23: suminf.    1.10283 (4) obj. -17.7088 iterations 3
Cbc0038I Pass  24: suminf.    0.91333 (3) obj. -17.7088 iterations 2
Cbc0038I Pass  25: suminf.    0.96122 (3) obj. -17.7088 iterations 2
Cbc0038I Pass  26: suminf.    2.16578 (8) obj. -17.7088 iterations 13
Cbc0038I Pass  27: suminf.    1.89186 (7) obj. -25.1376 iterations 3
Cbc0038I Pass  28: suminf.    0.90793 (3) obj. -17.7088 iterations 6
Cbc0038I Pass  29: suminf.    0.73668 (3) obj. -19.5925 iterations 1
Cbc0038I Pass  30: suminf.    4.36293 (13) obj. -17.7088 iterations 20
Cbc0038I Pass  31: suminf.    3.05244 (10) obj. -23.824 iterations 5
Cbc0038I Pass  32: suminf.    2.35849 (8) obj. -25.4622 iterations 2
Cbc0038I Pass  33: suminf.    1.29909 (5) obj. -17.7088 iterations 9
Cbc0038I Rounding solution of -11.466 is better than previous of -10.3089

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 42 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -11.466 to -19.4136 (0.05 seconds)
Cbc0038I Round again with cutoff of -32.3924
Cbc0038I Pass  33: suminf.    1.30904 (14) obj. -38.2831 iterations 0
Cbc0038I Pass  34: suminf.    1.30904 (14) obj. -38.2831 iterations 1
Cbc0038I Pass  35: suminf.    2.06554 (13) obj. -32.3924 iterations 22
Cbc0038I Pass  36: suminf.    2.06554 (13) obj. -32.3924 iterations 1
Cbc0038I Pass  37: suminf.    1.52256 (7) obj. -32.3924 iterations 13
Cbc0038I Pass  38: suminf.    1.08844 (5) obj. -35.8146 iterations 2
Cbc0038I Pass  39: suminf.    1.44138 (6) obj. -32.3924 iterations 6
Cbc0038I Pass  40: suminf.    1.25165 (5) obj. -36.2039 iterations 3
Cbc0038I Pass  41: suminf.    1.67709 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  42: suminf.    1.00345 (4) obj. -32.3924 iterations 1
Cbc0038I Pass  43: suminf.    0.97891 (4) obj. -32.6132 iterations 1
Cbc0038I Pass  44: suminf.    1.52046 (8) obj. -32.3924 iterations 10
Cbc0038I Pass  45: suminf.    1.52046 (8) obj. -32.3924 iterations 4
Cbc0038I Pass  46: suminf.    1.42815 (5) obj. -32.3924 iterations 8
Cbc0038I Pass  47: suminf.    1.42481 (5) obj. -32.3924 iterations 1
Cbc0038I Pass  48: suminf.    1.64675 (6) obj. -32.3924 iterations 6
Cbc0038I Pass  49: suminf.    1.33576 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  50: suminf.    1.67709 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  51: suminf.    1.00345 (4) obj. -32.3924 iterations 1
Cbc0038I Pass  52: suminf.    0.97891 (4) obj. -32.6132 iterations 1
Cbc0038I Pass  53: suminf.    1.67709 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  54: suminf.    3.41766 (12) obj. -32.3924 iterations 14
Cbc0038I Pass  55: suminf.    2.28842 (11) obj. -32.3924 iterations 4
Cbc0038I Pass  56: suminf.    2.27266 (10) obj. -32.3924 iterations 1
Cbc0038I Pass  57: suminf.    2.04387 (6) obj. -32.3924 iterations 9
Cbc0038I Pass  58: suminf.    1.76261 (6) obj. -32.3924 iterations 1
Cbc0038I Pass  59: suminf.    1.39491 (5) obj. -32.3924 iterations 2
Cbc0038I Pass  60: suminf.    1.37556 (5) obj. -32.3924 iterations 3
Cbc0038I Pass  61: suminf.    1.67928 (7) obj. -32.3924 iterations 6
Cbc0038I Pass  62: suminf.    1.67928 (7) obj. -32.3924 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 60 columns, reduced to 16 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -19.4136 - took 0.06 seconds
Cbc0012I Integer solution of -19.4136 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 55 rows 60 columns, reduced to 13 rows 18 columns
Cbc0031I 27 added rows had average density of 13.962963
Cbc0013I At root node, 27 cuts changed objective from -84.30721 to -21.89812 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2222 row cuts average 3.5 elements, 9 column cuts (9 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 735 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 209 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 254 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.4136 best solution, best possible -21.592491 (1.55 seconds)
Cbc0001I Search completed - best objective -19.4136, took 1591 iterations and 2 nodes (1.56 seconds)
Cbc0032I Strong branching done 52 times (800 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.57

