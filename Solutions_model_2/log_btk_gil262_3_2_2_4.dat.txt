Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 508 (-19) rows, 262 (-2) columns and 1508 (-37) elements
Clp1000I sum of infeasibilities 0.000103199 - average 2.03148e-07, 126 fixed columns
Coin0506I Presolve 245 (-263) rows, 130 (-132) columns and 728 (-780) elements
Clp0029I End of values pass after 130 iterations
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Coin0511I After Postsolve, objective 145.54651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13460114 - largest nonzero change 0 ( 0%) - largest zero change 2.9375418e-05
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Coin0511I After Postsolve, objective 145.54651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.5465126 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 508 rows, 262 columns (261 integer (261 of which binary)) and 1508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 87 integers unsatisfied sum - 12.9569
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.6981 iterations 292
Cbc0038I Solution found of 12.6981
Cbc0038I Relaxing continuous gives 12.6981
Cbc0038I Rounding solution of -17.1651 is better than previous of 12.6981

Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 156 rows 88 columns
Cbc0038I Mini branch and bound improved solution from -17.1651 to -76.3718 (0.10 seconds)
Cbc0038I Round again with cutoff of -83.2893
Cbc0038I Pass   2: suminf.    4.27101 (18) obj. -83.2893 iterations 50
Cbc0038I Pass   3: suminf.    3.00356 (11) obj. -83.2893 iterations 47
Cbc0038I Pass   4: suminf.    2.99629 (10) obj. -83.2893 iterations 1
Cbc0038I Pass   5: suminf.    1.80213 (7) obj. -83.2893 iterations 21
Cbc0038I Pass   6: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass   7: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass   8: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass   9: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  10: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  11: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I Pass  12: suminf.    1.51284 (5) obj. -83.2893 iterations 13
Cbc0038I Pass  13: suminf.    2.16122 (10) obj. -83.2893 iterations 25
Cbc0038I Pass  14: suminf.    2.15743 (9) obj. -83.2893 iterations 1
Cbc0038I Pass  15: suminf.    1.80213 (7) obj. -83.2893 iterations 18
Cbc0038I Pass  16: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass  17: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass  18: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass  19: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  20: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  21: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I Pass  22: suminf.    1.51284 (5) obj. -83.2893 iterations 13
Cbc0038I Pass  23: suminf.    2.16122 (10) obj. -83.2893 iterations 25
Cbc0038I Pass  24: suminf.    2.15743 (9) obj. -83.2893 iterations 1
Cbc0038I Pass  25: suminf.    1.80213 (7) obj. -83.2893 iterations 18
Cbc0038I Pass  26: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass  27: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass  28: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass  29: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  30: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  31: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 171 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -76.3718 to -77.5829 (0.19 seconds)
Cbc0038I Round again with cutoff of -95.7408
Cbc0038I Pass  31: suminf.    4.98800 (19) obj. -95.7408 iterations 15
Cbc0038I Pass  32: suminf.    3.97800 (12) obj. -95.7408 iterations 48
Cbc0038I Pass  33: suminf.    3.21831 (10) obj. -95.7408 iterations 27
Cbc0038I Pass  34: suminf.    3.05252 (10) obj. -95.7408 iterations 10
Cbc0038I Pass  35: suminf.    3.06406 (11) obj. -95.7408 iterations 22
Cbc0038I Pass  36: suminf.    2.48692 (10) obj. -95.7408 iterations 6
Cbc0038I Pass  37: suminf.    2.48306 (9) obj. -95.7408 iterations 2
Cbc0038I Pass  38: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  39: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  40: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  41: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  42: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  43: suminf.    2.90864 (10) obj. -95.7408 iterations 34
Cbc0038I Pass  44: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  45: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  46: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  47: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  48: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  49: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  50: suminf.    2.90864 (10) obj. -95.7408 iterations 34
Cbc0038I Pass  51: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  52: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  53: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  54: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  55: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  56: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  57: suminf.    2.90864 (10) obj. -95.7408 iterations 35
Cbc0038I Pass  58: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  59: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  60: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 171 rows 96 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -77.5829 - took 0.28 seconds
Cbc0012I Integer solution of -77.582887 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 156 rows 88 columns
Cbc0031I 48 added rows had average density of 109.14583
Cbc0013I At root node, 48 cuts changed objective from -145.54651 to -131.56179 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44921 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.535 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3245 row cuts average 251.1 elements, 0 column cuts (0 active)  in 0.553 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.562 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 178.7 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -77.582887 best solution, best possible -131.56179 (5.88 seconds)
Cbc0010I After 14 nodes, 11 on tree, -77.582887 best solution, best possible -131.56179 (6.58 seconds)
Cbc0012I Integer solution of -78.346787 found by rounding after 22549 iterations and 30 nodes (6.70 seconds)
Cbc0012I Integer solution of -80.137217 found by rounding after 22572 iterations and 33 nodes (6.71 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -80.541947 found by RINS after 22791 iterations and 41 nodes (6.74 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 5 rows 7 columns
Cbc0004I Integer solution of -81.350487 found after 25466 iterations and 141 nodes (7.00 seconds)
Cbc0010I After 197 nodes, 15 on tree, -81.350487 best solution, best possible -131.56179 (7.30 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 182 rows 98 columns
Cbc0012I Integer solution of -81.735387 found by rounding after 30039 iterations and 252 nodes (7.70 seconds)
Cbc0010I After 304 nodes, 18 on tree, -81.735387 best solution, best possible -131.56179 (8.01 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 11 rows 11 columns
Cbc0001I Search completed - best objective -81.735387, took 40066 iterations and 470 nodes (8.72 seconds)
Cbc0032I Strong branching done 3368 times (79220 iterations), fathomed 87 nodes and fixed 294 variables
Cbc0035I Maximum depth 78, 2020 variables fixed on reduced cost
Total time (CPU seconds):       8.57   (Wallclock seconds):       8.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 390 (-136) rows, 404 (-120) columns and 19263 (-16473) elements
Clp1000I sum of infeasibilities 3.1402e-06 - average 8.05181e-09, 250 fixed columns
Coin0506I Presolve 139 (-251) rows, 153 (-251) columns and 565 (-18698) elements
Clp0006I 0  Obj -23.116234 Primal inf 9.0312473e-06 (1) Dual inf 1.0100001e+11 (150)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 0.15819094 - largest nonzero change 2.6381946e-05 ( 0.0023983587%) - largest zero change 2.9681786e-05
Clp0000I Optimal - objective value -21.790237
Clp0000I Optimal - objective value -21.790237
Coin0511I After Postsolve, objective -21.790237, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -21.790237 Dual inf 270.35289 (147)
Clp0014I Perturbing problem by 0.001% of 1.7259627 - largest nonzero change 2.8877519e-05 ( 0.0023983587%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 192.77898
Clp0000I Optimal - objective value 192.77898
Clp0000I Optimal - objective value 192.77898
Coin0511I After Postsolve, objective 192.77898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 192.7789826 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 390 rows, 404 columns (404 integer (404 of which binary)) and 19263 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.747%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 144 integers unsatisfied sum - 6.81554
Cbc0038I Pass   1: suminf.    2.90929 (86) obj. -179.499 iterations 69
Cbc0038I Pass   2: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass   3: suminf.    1.79931 (62) obj. -115.755 iterations 24
Cbc0038I Pass   4: suminf.    1.28568 (49) obj. -97.5046 iterations 13
Cbc0038I Pass   5: suminf.    0.72101 (34) obj. -80.1819 iterations 15
Cbc0038I Pass   6: suminf.    0.22361 (15) obj. -57.8024 iterations 19
Cbc0038I Solution found of -41.0589
Cbc0038I Rounding solution of -48.5839 is better than previous of -41.0589

Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 390 rows 404 columns, reduced to 62 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -63.0035
Cbc0038I Pass   7: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass   8: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass   9: suminf.    2.04772 (68) obj. -128.217 iterations 18
Cbc0038I Pass  10: suminf.    1.40230 (52) obj. -101.349 iterations 16
Cbc0038I Pass  11: suminf.    0.48637 (27) obj. -70.5168 iterations 25
Cbc0038I Pass  12: suminf.    0.62088 (13) obj. -63.0035 iterations 27
Cbc0038I Pass  13: suminf.    1.01782 (4) obj. -63.0035 iterations 28
Cbc0038I Pass  14: suminf.    1.01782 (4) obj. -63.0035 iterations 0
Cbc0038I Pass  15: suminf.    1.18961 (5) obj. -63.0035 iterations 44
Cbc0038I Pass  16: suminf.    0.65392 (5) obj. -63.0035 iterations 16
Cbc0038I Pass  17: suminf.    1.71878 (5) obj. -63.0035 iterations 19
Cbc0038I Pass  18: suminf.    1.71878 (5) obj. -63.0035 iterations 5
Cbc0038I Pass  19: suminf.    1.69910 (5) obj. -63.0035 iterations 5
Cbc0038I Pass  20: suminf.    1.69910 (5) obj. -63.0035 iterations 6
Cbc0038I Pass  21: suminf.    1.71878 (5) obj. -63.0035 iterations 5
Cbc0038I Pass  22: suminf.    2.47036 (25) obj. -63.0035 iterations 131
Cbc0038I Pass  23: suminf.    0.91154 (22) obj. -63.0035 iterations 18
Cbc0038I Pass  24: suminf.    0.78848 (21) obj. -67.2098 iterations 1
Cbc0038I Pass  25: suminf.    1.27594 (13) obj. -63.0035 iterations 33
Cbc0038I Pass  26: suminf.    1.27594 (13) obj. -63.0035 iterations 1
Cbc0038I Pass  27: suminf.    0.87772 (6) obj. -63.0035 iterations 17
Cbc0038I Pass  28: suminf.    0.59774 (6) obj. -63.0035 iterations 2
Cbc0038I Pass  29: suminf.    0.87772 (6) obj. -63.0035 iterations 3
Cbc0038I Pass  30: suminf.    1.33927 (33) obj. -63.0035 iterations 89
Cbc0038I Pass  31: suminf.    1.14841 (19) obj. -63.0035 iterations 72
Cbc0038I Pass  32: suminf.    0.95418 (8) obj. -63.0035 iterations 35
Cbc0038I Pass  33: suminf.    0.47257 (7) obj. -63.5885 iterations 12
Cbc0038I Pass  34: suminf.    1.34364 (33) obj. -63.0035 iterations 27
Cbc0038I Pass  35: suminf.    1.22984 (34) obj. -63.0035 iterations 13
Cbc0038I Pass  36: suminf.    0.97908 (32) obj. -63.0035 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 234 integers at bound fixed and 0 continuous
Cbc0038I Full problem 390 rows 404 columns, reduced to 155 rows 167 columns - 29 fixed gives 126, 137 - still too large
Cbc0038I Full problem 390 rows 404 columns, reduced to 80 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -41.0589 to -49.5044 (0.23 seconds)
Cbc0038I Round again with cutoff of -88.9586
Cbc0038I Pass  36: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass  37: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass  38: suminf.    2.30509 (74) obj. -134.916 iterations 12
Cbc0038I Pass  39: suminf.    1.63844 (58) obj. -110.956 iterations 16
Cbc0038I Pass  40: suminf.    1.02908 (42) obj. -88.9586 iterations 20
Cbc0038I Pass  41: suminf.    0.98064 (20) obj. -88.9586 iterations 59
Cbc0038I Pass  42: suminf.    0.85070 (19) obj. -88.9586 iterations 4
Cbc0038I Pass  43: suminf.    1.07000 (9) obj. -88.9586 iterations 24
Cbc0038I Pass  44: suminf.    1.07000 (9) obj. -88.9586 iterations 29
Cbc0038I Pass  45: suminf.    1.04490 (9) obj. -88.9586 iterations 13
Cbc0038I Pass  46: suminf.    1.04490 (9) obj. -88.9586 iterations 6
Cbc0038I Pass  47: suminf.    1.07000 (9) obj. -88.9586 iterations 9
Cbc0038I Pass  48: suminf.    3.81569 (28) obj. -88.9586 iterations 105
Cbc0038I Pass  49: suminf.    0.97867 (23) obj. -88.9586 iterations 24
Cbc0038I Pass  50: suminf.    0.97867 (23) obj. -88.9586 iterations 0
Cbc0038I Pass  51: suminf.    1.67193 (16) obj. -88.9586 iterations 34
Cbc0038I Pass  52: suminf.    1.55712 (18) obj. -88.9586 iterations 7
Cbc0038I Pass  53: suminf.    1.65694 (13) obj. -88.9586 iterations 21
Cbc0038I Pass  54: suminf.    1.10641 (13) obj. -88.9586 iterations 6
Cbc0038I Pass  55: suminf.    1.62344 (40) obj. -88.9586 iterations 16
Cbc0038I Pass  56: suminf.    1.62344 (40) obj. -88.9586 iterations 8
Cbc0038I Pass  57: suminf.    1.82302 (38) obj. -88.9586 iterations 17
Cbc0038I Pass  58: suminf.    1.82302 (38) obj. -88.9586 iterations 15
Cbc0038I Pass  59: suminf.    1.77373 (31) obj. -88.9586 iterations 53
Cbc0038I Pass  60: suminf.    1.44875 (32) obj. -88.9586 iterations 11
Cbc0038I Pass  61: suminf.    1.99495 (29) obj. -88.9586 iterations 38
Cbc0038I Pass  62: suminf.    1.99495 (29) obj. -88.9586 iterations 13
Cbc0038I Pass  63: suminf.    2.06340 (28) obj. -88.9586 iterations 15
Cbc0038I Pass  64: suminf.    2.06340 (28) obj. -88.9586 iterations 11
Cbc0038I Pass  65: suminf.    2.06568 (28) obj. -88.9586 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -49.5044 - took 0.21 seconds
Cbc0012I Integer solution of -49.50444 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 390 rows 404 columns, reduced to 8 rows 8 columns
Cbc0031I 158 added rows had average density of 80.164557
Cbc0013I At root node, 158 cuts changed objective from -192.77898 to -108.21416 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 29855 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.551 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3358 row cuts average 375.5 elements, 0 column cuts (0 active)  in 1.318 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 457 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6058 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.732 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1964 row cuts average 10.2 elements, 0 column cuts (0 active)  in 1.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 439 row cuts average 198.9 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 592 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.499 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -49.50444 best solution, best possible -108.21416 (9.63 seconds)
Cbc0010I After 1 nodes, 2 on tree, -49.50444 best solution, best possible -108.21416 (10.56 seconds)
Cbc0012I Integer solution of -70.347747 found by rounding after 16663 iterations and 3 nodes (10.97 seconds)
Cbc0010I After 3 nodes, 4 on tree, -70.347747 best solution, best possible -108.21416 (11.35 seconds)
Cbc0012I Integer solution of -70.36793 found by rounding after 17043 iterations and 4 nodes (11.37 seconds)
Cbc0012I Integer solution of -73.44768 found by DiveCoefficient after 17167 iterations and 4 nodes (11.47 seconds)
Cbc0012I Integer solution of -75.558817 found by rounding after 17181 iterations and 5 nodes (11.47 seconds)
Cbc0012I Integer solution of -77.87968 found by DiveCoefficient after 17214 iterations and 5 nodes (11.55 seconds)
Cbc0016I Integer solution of -79.75808 found by strong branching after 17315 iterations and 7 nodes (11.76 seconds)
Cbc0012I Integer solution of -80.14325 found by DiveCoefficient after 17438 iterations and 10 nodes (11.99 seconds)
Cbc0012I Integer solution of -80.734067 found by rounding after 17489 iterations and 11 nodes (12.08 seconds)
Cbc0010I After 11 nodes, 8 on tree, -80.734067 best solution, best possible -108.21416 (12.08 seconds)
Cbc0010I After 20 nodes, 7 on tree, -80.734067 best solution, best possible -108.21416 (12.79 seconds)
Cbc0010I After 30 nodes, 9 on tree, -80.734067 best solution, best possible -108.21416 (13.57 seconds)
Cbc0010I After 37 nodes, 11 on tree, -80.734067 best solution, best possible -108.21416 (14.30 seconds)
Cbc0038I Full problem 390 rows 404 columns, reduced to 110 rows 132 columns
Cbc0012I Integer solution of -81.735387 found by RINS after 20264 iterations and 41 nodes (15.07 seconds)
Cbc0010I After 41 nodes, 11 on tree, -81.735387 best solution, best possible -108.21416 (15.07 seconds)
Cbc0010I After 61 nodes, 12 on tree, -81.735387 best solution, best possible -108.21416 (15.79 seconds)
Cbc0010I After 83 nodes, 14 on tree, -81.735387 best solution, best possible -108.21416 (16.51 seconds)
Cbc0038I Full problem 390 rows 404 columns, reduced to 15 rows 22 columns
Cbc0010I After 103 nodes, 14 on tree, -81.735387 best solution, best possible -108.21416 (17.27 seconds)
Cbc0010I After 129 nodes, 13 on tree, -81.735387 best solution, best possible -108.21416 (18.03 seconds)
Cbc0010I After 144 nodes, 19 on tree, -81.735387 best solution, best possible -108.21416 (18.76 seconds)
Cbc0010I After 174 nodes, 18 on tree, -81.735387 best solution, best possible -108.21416 (19.48 seconds)
Cbc0010I After 198 nodes, 18 on tree, -81.735387 best solution, best possible -108.21416 (20.19 seconds)
Cbc0010I After 230 nodes, 16 on tree, -81.735387 best solution, best possible -108.21416 (20.96 seconds)
Cbc0010I After 272 nodes, 9 on tree, -81.735387 best solution, best possible -108.21416 (21.68 seconds)
Cbc0038I Full problem 390 rows 404 columns, reduced to 114 rows 130 columns
Cbc0010I After 292 nodes, 7 on tree, -81.735387 best solution, best possible -108.21416 (22.47 seconds)
Cbc0010I After 299 nodes, 6 on tree, -81.735387 best solution, best possible -108.21416 (23.25 seconds)
Cbc0010I After 319 nodes, 10 on tree, -81.735387 best solution, best possible -108.21416 (23.98 seconds)
Cbc0010I After 337 nodes, 8 on tree, -81.735387 best solution, best possible -108.21416 (24.74 seconds)
Cbc0010I After 351 nodes, 2 on tree, -81.735387 best solution, best possible -108.21416 (25.90 seconds)
Cbc0010I After 353 nodes, 4 on tree, -81.735387 best solution, best possible -108.21416 (26.68 seconds)
Cbc0010I After 379 nodes, 6 on tree, -81.735387 best solution, best possible -108.21416 (27.39 seconds)
Cbc0010I After 398 nodes, 9 on tree, -81.735387 best solution, best possible -108.21416 (28.14 seconds)
Cbc0010I After 418 nodes, 7 on tree, -81.735387 best solution, best possible -108.21416 (28.85 seconds)
Cbc0010I After 425 nodes, 5 on tree, -81.735387 best solution, best possible -108.21416 (29.84 seconds)
Cbc0010I After 430 nodes, 6 on tree, -81.735387 best solution, best possible -108.21416 (31.01 seconds)
Cbc0010I After 432 nodes, 7 on tree, -81.735387 best solution, best possible -108.21416 (31.82 seconds)
Cbc0010I After 439 nodes, 8 on tree, -81.735387 best solution, best possible -108.21416 (32.59 seconds)
Cbc0010I After 456 nodes, 6 on tree, -81.735387 best solution, best possible -108.21416 (33.81 seconds)
Cbc0010I After 470 nodes, 4 on tree, -81.735387 best solution, best possible -108.21416 (34.52 seconds)
Cbc0001I Search completed - best objective -81.735387, took 53209 iterations and 488 nodes (35.18 seconds)
Cbc0032I Strong branching done 1830 times (52654 iterations), fathomed 9 nodes and fixed 16 variables
Cbc0035I Maximum depth 32, 1760 variables fixed on reduced cost
Total time (CPU seconds):       31.57   (Wallclock seconds):       35.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 508 (-19) rows, 262 (-2) columns and 1508 (-37) elements
Clp1000I sum of infeasibilities 0.000103199 - average 2.03148e-07, 126 fixed columns
Coin0506I Presolve 245 (-263) rows, 130 (-132) columns and 728 (-780) elements
Clp0029I End of values pass after 130 iterations
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Coin0511I After Postsolve, objective 145.54651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13460114 - largest nonzero change 0 ( 0%) - largest zero change 2.9375418e-05
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Clp0000I Optimal - objective value 145.54651
Coin0511I After Postsolve, objective 145.54651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.5465126 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 508 rows, 262 columns (261 integer (261 of which binary)) and 1508 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 87 integers unsatisfied sum - 12.9569
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.6981 iterations 292
Cbc0038I Solution found of 12.6981
Cbc0038I Relaxing continuous gives 12.6981
Cbc0038I Rounding solution of -17.1651 is better than previous of 12.6981

Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 156 rows 88 columns
Cbc0038I Mini branch and bound improved solution from -17.1651 to -76.3718 (0.10 seconds)
Cbc0038I Round again with cutoff of -83.2893
Cbc0038I Pass   2: suminf.    4.27101 (18) obj. -83.2893 iterations 50
Cbc0038I Pass   3: suminf.    3.00356 (11) obj. -83.2893 iterations 47
Cbc0038I Pass   4: suminf.    2.99629 (10) obj. -83.2893 iterations 1
Cbc0038I Pass   5: suminf.    1.80213 (7) obj. -83.2893 iterations 21
Cbc0038I Pass   6: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass   7: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass   8: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass   9: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  10: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  11: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I Pass  12: suminf.    1.51284 (5) obj. -83.2893 iterations 13
Cbc0038I Pass  13: suminf.    2.16122 (10) obj. -83.2893 iterations 25
Cbc0038I Pass  14: suminf.    2.15743 (9) obj. -83.2893 iterations 1
Cbc0038I Pass  15: suminf.    1.80213 (7) obj. -83.2893 iterations 18
Cbc0038I Pass  16: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass  17: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass  18: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass  19: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  20: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  21: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I Pass  22: suminf.    1.51284 (5) obj. -83.2893 iterations 13
Cbc0038I Pass  23: suminf.    2.16122 (10) obj. -83.2893 iterations 25
Cbc0038I Pass  24: suminf.    2.15743 (9) obj. -83.2893 iterations 1
Cbc0038I Pass  25: suminf.    1.80213 (7) obj. -83.2893 iterations 18
Cbc0038I Pass  26: suminf.    1.74354 (7) obj. -83.2893 iterations 15
Cbc0038I Pass  27: suminf.    2.49506 (8) obj. -83.2893 iterations 23
Cbc0038I Pass  28: suminf.    2.07764 (10) obj. -83.2893 iterations 10
Cbc0038I Pass  29: suminf.    1.57660 (7) obj. -83.2893 iterations 24
Cbc0038I Pass  30: suminf.    2.45333 (9) obj. -83.2893 iterations 23
Cbc0038I Pass  31: suminf.    1.87341 (5) obj. -83.2893 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 171 rows 96 columns
Cbc0038I Mini branch and bound improved solution from -76.3718 to -77.5829 (0.19 seconds)
Cbc0038I Round again with cutoff of -95.7408
Cbc0038I Pass  31: suminf.    4.98800 (19) obj. -95.7408 iterations 15
Cbc0038I Pass  32: suminf.    3.97800 (12) obj. -95.7408 iterations 48
Cbc0038I Pass  33: suminf.    3.21831 (10) obj. -95.7408 iterations 27
Cbc0038I Pass  34: suminf.    3.05252 (10) obj. -95.7408 iterations 10
Cbc0038I Pass  35: suminf.    3.06406 (11) obj. -95.7408 iterations 22
Cbc0038I Pass  36: suminf.    2.48692 (10) obj. -95.7408 iterations 6
Cbc0038I Pass  37: suminf.    2.48306 (9) obj. -95.7408 iterations 2
Cbc0038I Pass  38: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  39: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  40: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  41: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  42: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  43: suminf.    2.90864 (10) obj. -95.7408 iterations 34
Cbc0038I Pass  44: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  45: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  46: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  47: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  48: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  49: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  50: suminf.    2.90864 (10) obj. -95.7408 iterations 34
Cbc0038I Pass  51: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  52: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  53: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I Pass  54: suminf.    3.15489 (10) obj. -95.7408 iterations 29
Cbc0038I Pass  55: suminf.    2.74629 (10) obj. -95.7408 iterations 12
Cbc0038I Pass  56: suminf.    2.73890 (9) obj. -95.7408 iterations 8
Cbc0038I Pass  57: suminf.    2.90864 (10) obj. -95.7408 iterations 35
Cbc0038I Pass  58: suminf.    2.48306 (9) obj. -95.7408 iterations 17
Cbc0038I Pass  59: suminf.    3.15626 (10) obj. -95.7408 iterations 28
Cbc0038I Pass  60: suminf.    2.88736 (9) obj. -95.7408 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 262 columns, reduced to 171 rows 96 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -77.5829 - took 0.28 seconds
Cbc0012I Integer solution of -77.582887 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 156 rows 88 columns
Cbc0031I 48 added rows had average density of 109.14583
Cbc0013I At root node, 48 cuts changed objective from -145.54651 to -131.56179 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44921 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.535 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3245 row cuts average 251.1 elements, 0 column cuts (0 active)  in 0.554 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.569 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 178.7 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -77.582887 best solution, best possible -131.56179 (5.92 seconds)
Cbc0010I After 13 nodes, 10 on tree, -77.582887 best solution, best possible -131.56179 (6.66 seconds)
Cbc0012I Integer solution of -78.346787 found by rounding after 22549 iterations and 30 nodes (6.80 seconds)
Cbc0012I Integer solution of -80.137217 found by rounding after 22572 iterations and 33 nodes (6.81 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -80.541947 found by RINS after 22791 iterations and 41 nodes (6.84 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 5 rows 7 columns
Cbc0004I Integer solution of -81.350487 found after 25466 iterations and 141 nodes (7.13 seconds)
Cbc0010I After 193 nodes, 11 on tree, -81.350487 best solution, best possible -131.56179 (7.37 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 182 rows 98 columns
Cbc0012I Integer solution of -81.735387 found by rounding after 30039 iterations and 252 nodes (7.84 seconds)
Cbc0010I After 297 nodes, 16 on tree, -81.735387 best solution, best possible -131.56179 (8.09 seconds)
Cbc0038I Full problem 508 rows 262 columns, reduced to 11 rows 11 columns
Cbc0010I After 413 nodes, 11 on tree, -81.735387 best solution, best possible -131.56179 (8.79 seconds)
Cbc0001I Search completed - best objective -81.735387, took 40066 iterations and 470 nodes (8.96 seconds)
Cbc0032I Strong branching done 3368 times (79220 iterations), fathomed 87 nodes and fixed 294 variables
Cbc0035I Maximum depth 78, 2020 variables fixed on reduced cost
Total time (CPU seconds):       8.79   (Wallclock seconds):       9.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 390 (-137) rows, 404 (-121) columns and 19263 (-16474) elements
Clp1000I sum of infeasibilities 3.1402e-06 - average 8.05181e-09, 250 fixed columns
Coin0506I Presolve 139 (-251) rows, 153 (-251) columns and 565 (-18698) elements
Clp0006I 0  Obj -23.116234 Primal inf 9.0312473e-06 (1) Dual inf 1.0100001e+11 (150)
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 0.15819094 - largest nonzero change 2.6381946e-05 ( 0.0023983587%) - largest zero change 2.9681786e-05
Clp0000I Optimal - objective value -21.790237
Clp0000I Optimal - objective value -21.790237
Coin0511I After Postsolve, objective -21.790237, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -21.790237 Dual inf 270.35289 (147)
Clp0014I Perturbing problem by 0.001% of 1.7259627 - largest nonzero change 2.8877519e-05 ( 0.0023983587%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 192.77898
Clp0000I Optimal - objective value 192.77898
Clp0000I Optimal - objective value 192.77898
Coin0511I After Postsolve, objective 192.77898, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 192.7789826 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 390 rows, 404 columns (404 integer (404 of which binary)) and 19263 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 5.747%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 144 integers unsatisfied sum - 6.81554
Cbc0038I Pass   1: suminf.    2.90929 (86) obj. -179.499 iterations 69
Cbc0038I Pass   2: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass   3: suminf.    1.79931 (62) obj. -115.755 iterations 24
Cbc0038I Pass   4: suminf.    1.28568 (49) obj. -97.5046 iterations 13
Cbc0038I Pass   5: suminf.    0.72101 (34) obj. -80.1819 iterations 15
Cbc0038I Pass   6: suminf.    0.22361 (15) obj. -57.8024 iterations 19
Cbc0038I Solution found of -41.0589
Cbc0038I Rounding solution of -48.5839 is better than previous of -41.0589

Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 390 rows 404 columns, reduced to 62 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -63.0035
Cbc0038I Pass   7: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass   8: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass   9: suminf.    2.04772 (68) obj. -128.217 iterations 18
Cbc0038I Pass  10: suminf.    1.40230 (52) obj. -101.349 iterations 16
Cbc0038I Pass  11: suminf.    0.48637 (27) obj. -70.5168 iterations 25
Cbc0038I Pass  12: suminf.    0.62088 (13) obj. -63.0035 iterations 27
Cbc0038I Pass  13: suminf.    1.01782 (4) obj. -63.0035 iterations 28
Cbc0038I Pass  14: suminf.    1.01782 (4) obj. -63.0035 iterations 0
Cbc0038I Pass  15: suminf.    1.18961 (5) obj. -63.0035 iterations 44
Cbc0038I Pass  16: suminf.    0.65392 (5) obj. -63.0035 iterations 16
Cbc0038I Pass  17: suminf.    1.71878 (5) obj. -63.0035 iterations 19
Cbc0038I Pass  18: suminf.    1.71878 (5) obj. -63.0035 iterations 5
Cbc0038I Pass  19: suminf.    1.69910 (5) obj. -63.0035 iterations 5
Cbc0038I Pass  20: suminf.    1.69910 (5) obj. -63.0035 iterations 6
Cbc0038I Pass  21: suminf.    1.71878 (5) obj. -63.0035 iterations 5
Cbc0038I Pass  22: suminf.    2.47036 (25) obj. -63.0035 iterations 131
Cbc0038I Pass  23: suminf.    0.91154 (22) obj. -63.0035 iterations 18
Cbc0038I Pass  24: suminf.    0.78848 (21) obj. -67.2098 iterations 1
Cbc0038I Pass  25: suminf.    1.27594 (13) obj. -63.0035 iterations 33
Cbc0038I Pass  26: suminf.    1.27594 (13) obj. -63.0035 iterations 1
Cbc0038I Pass  27: suminf.    0.87772 (6) obj. -63.0035 iterations 17
Cbc0038I Pass  28: suminf.    0.59774 (6) obj. -63.0035 iterations 2
Cbc0038I Pass  29: suminf.    0.87772 (6) obj. -63.0035 iterations 3
Cbc0038I Pass  30: suminf.    1.33927 (33) obj. -63.0035 iterations 89
Cbc0038I Pass  31: suminf.    1.14841 (19) obj. -63.0035 iterations 72
Cbc0038I Pass  32: suminf.    0.95418 (8) obj. -63.0035 iterations 35
Cbc0038I Pass  33: suminf.    0.47257 (7) obj. -63.5885 iterations 12
Cbc0038I Pass  34: suminf.    1.34364 (33) obj. -63.0035 iterations 27
Cbc0038I Pass  35: suminf.    1.22984 (34) obj. -63.0035 iterations 13
Cbc0038I Pass  36: suminf.    0.97908 (32) obj. -63.0035 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 234 integers at bound fixed and 0 continuous
Cbc0038I Full problem 390 rows 404 columns, reduced to 155 rows 167 columns - 29 fixed gives 126, 137 - still too large
Cbc0038I Full problem 390 rows 404 columns, reduced to 80 rows 89 columns
Cbc0038I Mini branch and bound improved solution from -41.0589 to -49.5044 (0.24 seconds)
Cbc0038I Round again with cutoff of -88.9586
Cbc0038I Pass  36: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass  37: suminf.    2.90929 (86) obj. -179.499 iterations 0
Cbc0038I Pass  38: suminf.    2.30509 (74) obj. -134.916 iterations 12
Cbc0038I Pass  39: suminf.    1.63844 (58) obj. -110.956 iterations 16
Cbc0038I Pass  40: suminf.    1.02908 (42) obj. -88.9586 iterations 20
Cbc0038I Pass  41: suminf.    0.98064 (20) obj. -88.9586 iterations 59
Cbc0038I Pass  42: suminf.    0.85070 (19) obj. -88.9586 iterations 4
Cbc0038I Pass  43: suminf.    1.07000 (9) obj. -88.9586 iterations 24
Cbc0038I Pass  44: suminf.    1.07000 (9) obj. -88.9586 iterations 29
Cbc0038I Pass  45: suminf.    1.04490 (9) obj. -88.9586 iterations 13
Cbc0038I Pass  46: suminf.    1.04490 (9) obj. -88.9586 iterations 6
Cbc0038I Pass  47: suminf.    1.07000 (9) obj. -88.9586 iterations 9
Cbc0038I Pass  48: suminf.    3.81569 (28) obj. -88.9586 iterations 105
Cbc0038I Pass  49: suminf.    0.97867 (23) obj. -88.9586 iterations 24
Cbc0038I Pass  50: suminf.    0.97867 (23) obj. -88.9586 iterations 0
Cbc0038I Pass  51: suminf.    1.67193 (16) obj. -88.9586 iterations 34
Cbc0038I Pass  52: suminf.    1.55712 (18) obj. -88.9586 iterations 7
Cbc0038I Pass  53: suminf.    1.65694 (13) obj. -88.9586 iterations 21
Cbc0038I Pass  54: suminf.    1.10641 (13) obj. -88.9586 iterations 6
Cbc0038I Pass  55: suminf.    1.62344 (40) obj. -88.9586 iterations 16
Cbc0038I Pass  56: suminf.    1.62344 (40) obj. -88.9586 iterations 8
Cbc0038I Pass  57: suminf.    1.82302 (38) obj. -88.9586 iterations 17
Cbc0038I Pass  58: suminf.    1.82302 (38) obj. -88.9586 iterations 15
Cbc0038I Pass  59: suminf.    1.77373 (31) obj. -88.9586 iterations 53
Cbc0038I Pass  60: suminf.    1.44875 (32) obj. -88.9586 iterations 11
Cbc0038I Pass  61: suminf.    1.99495 (29) obj. -88.9586 iterations 38
Cbc0038I Pass  62: suminf.    1.99495 (29) obj. -88.9586 iterations 13
Cbc0038I Pass  63: suminf.    2.06340 (28) obj. -88.9586 iterations 15
Cbc0038I Pass  64: suminf.    2.06340 (28) obj. -88.9586 iterations 11
Cbc0038I Pass  65: suminf.    2.06568 (28) obj. -88.9586 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 249 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -49.5044 - took 0.21 seconds
Cbc0012I Integer solution of -49.50444 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 390 rows 404 columns, reduced to 8 rows 8 columns
Cbc0031I 158 added rows had average density of 80.164557
Cbc0013I At root node, 158 cuts changed objective from -192.77898 to -108.21416 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 29855 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.546 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3358 row cuts average 375.5 elements, 0 column cuts (0 active)  in 1.300 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 457 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6058 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1964 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.993 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 439 row cuts average 198.9 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 592 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.491 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -49.50444 best solution, best possible -108.21416 (9.58 seconds)
Cbc0010I After 1 nodes, 2 on tree, -49.50444 best solution, best possible -108.21416 (10.51 seconds)
Cbc0012I Integer solution of -70.347747 found by rounding after 16663 iterations and 3 nodes (10.92 seconds)
Cbc0010I After 3 nodes, 4 on tree, -70.347747 best solution, best possible -108.21416 (11.27 seconds)
Cbc0012I Integer solution of -70.36793 found by rounding after 17043 iterations and 4 nodes (11.30 seconds)
Cbc0012I Integer solution of -73.44768 found by DiveCoefficient after 17167 iterations and 4 nodes (11.39 seconds)
Cbc0012I Integer solution of -75.558817 found by rounding after 17181 iterations and 5 nodes (11.39 seconds)
Cbc0012I Integer solution of -77.87968 found by DiveCoefficient after 17214 iterations and 5 nodes (11.47 seconds)
Cbc0016I Integer solution of -79.75808 found by strong branching after 17315 iterations and 7 nodes (11.68 seconds)
Cbc0012I Integer solution of -80.14325 found by DiveCoefficient after 17438 iterations and 10 nodes (11.91 seconds)
Cbc0012I Integer solution of -80.734067 found by rounding after 17489 iterations and 11 nodes (12.00 seconds)
Cbc0010I After 11 nodes, 8 on tree, -80.734067 best solution, best possible -108.21416 (12.00 seconds)
Cbc0010I After 21 nodes, 8 on tree, -80.734067 best solution, best possible -108.21416 (12.76 seconds)
Cbc0010I After 30 nodes, 9 on tree, -80.734067 best solution, best possible -108.21416 (13.48 seconds)
Cbc0010I After 37 nodes, 11 on tree, -80.734067 best solution, best possible -108.21416 (14.21 seconds)
Cbc0038I Full problem 390 rows 404 columns, reduced to 110 rows 132 columns
Cbc0012I Integer solution of -81.735387 found by RINS after 20264 iterations and 41 nodes (15.01 seconds)
Cbc0010I After 41 nodes, 11 on tree, -81.735387 best solution, best possible -108.21416 (15.01 seconds)
Cbc0010I After 61 nodes, 12 on tree, -81.735387 best solution, best possible -108.21416 (15.75 seconds)
Cbc0010I After 83 nodes, 14 on tree, -81.735387 best solution, best possible -108.21416 (16.48 seconds)
Cbc0038I Full problem 390 rows 404 columns, reduced to 15 rows 22 columns
Cbc0010I After 103 nodes, 14 on tree, -81.735387 best solution, best possible -108.21416 (17.25 seconds)
Cbc0010I After 129 nodes, 13 on tree, -81.735387 best solution, best possible -108.21416 (18.01 seconds)
Cbc0010I After 144 nodes, 19 on tree, -81.735387 best solution, best possible -108.21416 (18.73 seconds)
Cbc0010I After 174 nodes, 18 on tree, -81.735387 best solution, best possible -108.21416 (19.46 seconds)
Cbc0010I After 198 nodes, 18 on tree, -81.735387 best solution, best possible -108.21416 (20.18 seconds)
Cbc0010I After 229 nodes, 15 on tree, -81.735387 best solution, best possible -108.21416 (20.89 seconds)
Cbc0010I After 268 nodes, 9 on tree, -81.735387 best solution, best possible -108.21416 (21.60 seconds)
Cbc0038I Full problem 390 rows 404 columns, reduced to 114 rows 130 columns
Cbc0010I After 292 nodes, 7 on tree, -81.735387 best solution, best possible -108.21416 (22.46 seconds)
Cbc0010I After 299 nodes, 6 on tree, -81.735387 best solution, best possible -108.21416 (23.24 seconds)
Cbc0010I After 319 nodes, 10 on tree, -81.735387 best solution, best possible -108.21416 (23.97 seconds)
Cbc0010I After 337 nodes, 8 on tree, -81.735387 best solution, best possible -108.21416 (24.72 seconds)
Cbc0010I After 351 nodes, 2 on tree, -81.735387 best solution, best possible -108.21416 (25.83 seconds)
Cbc0010I After 353 nodes, 4 on tree, -81.735387 best solution, best possible -108.21416 (26.63 seconds)
Cbc0010I After 379 nodes, 6 on tree, -81.735387 best solution, best possible -108.21416 (27.34 seconds)
Cbc0010I After 398 nodes, 9 on tree, -81.735387 best solution, best possible -108.21416 (28.09 seconds)
Cbc0010I After 421 nodes, 5 on tree, -81.735387 best solution, best possible -108.21416 (28.79 seconds)
Cbc0010I After 425 nodes, 5 on tree, -81.735387 best solution, best possible -108.21416 (29.77 seconds)
Cbc0010I After 429 nodes, 5 on tree, -81.735387 best solution, best possible -108.21416 (30.47 seconds)
Cbc0010I After 431 nodes, 6 on tree, -81.735387 best solution, best possible -108.21416 (31.23 seconds)
Cbc0010I After 433 nodes, 8 on tree, -81.735387 best solution, best possible -108.21416 (31.95 seconds)
Cbc0010I After 441 nodes, 10 on tree, -81.735387 best solution, best possible -108.21416 (32.66 seconds)
Cbc0010I After 456 nodes, 6 on tree, -81.735387 best solution, best possible -108.21416 (33.77 seconds)
Cbc0010I After 471 nodes, 4 on tree, -81.735387 best solution, best possible -108.21416 (34.52 seconds)
Cbc0001I Search completed - best objective -81.735387, took 53209 iterations and 488 nodes (35.10 seconds)
Cbc0032I Strong branching done 1830 times (52654 iterations), fathomed 9 nodes and fixed 16 variables
Cbc0035I Maximum depth 32, 1760 variables fixed on reduced cost
Total time (CPU seconds):       31.51   (Wallclock seconds):       35.21

