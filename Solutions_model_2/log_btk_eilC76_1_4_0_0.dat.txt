Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 2.16637e-05 - average 1.66644e-07, 13 fixed columns
Coin0506I Presolve 106 (-24) rows, 63 (-13) columns and 330 (-74) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 3.0569803 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Coin0511I After Postsolve, objective 34.142892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Coin0511I After Postsolve, objective 34.142892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.14289243 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.19918
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.8822 iterations 42
Cbc0038I Solution found of 11.8822
Cbc0038I Relaxing continuous gives 11.8822
Cbc0038I Rounding solution of 1.28016 is better than previous of 11.8822

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 65 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 1.28016 to -5.04045 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.95078
Cbc0038I Pass   2: suminf.    1.02823 (28) obj. -7.95078 iterations 27
Cbc0038I Pass   3: suminf.    1.00833 (29) obj. -7.95078 iterations 6
Cbc0038I Pass   4: suminf.    1.48196 (9) obj. -7.95078 iterations 29
Cbc0038I Pass   5: suminf.    0.68906 (5) obj. -7.95078 iterations 9
Cbc0038I Pass   6: suminf.    2.08053 (7) obj. -7.95078 iterations 10
Cbc0038I Pass   7: suminf.    1.43689 (4) obj. -7.95078 iterations 6
Cbc0038I Pass   8: suminf.    1.18835 (3) obj. -7.95078 iterations 1
Cbc0038I Pass   9: suminf.    1.18730 (5) obj. -7.95078 iterations 3
Cbc0038I Pass  10: suminf.    1.18730 (5) obj. -7.95078 iterations 0
Cbc0038I Pass  11: suminf.    2.01458 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  12: suminf.    1.66590 (7) obj. -7.95078 iterations 1
Cbc0038I Pass  13: suminf.    1.70315 (5) obj. -7.95078 iterations 6
Cbc0038I Pass  14: suminf.    1.64621 (5) obj. -7.95078 iterations 1
Cbc0038I Pass  15: suminf.    2.05903 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  16: suminf.    1.13932 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  17: suminf.    1.00516 (8) obj. -7.95078 iterations 5
Cbc0038I Pass  18: suminf.    4.54879 (15) obj. -7.95078 iterations 25
Cbc0038I Pass  19: suminf.    2.48206 (9) obj. -7.95078 iterations 10
Cbc0038I Pass  20: suminf.    2.48206 (9) obj. -7.95078 iterations 0
Cbc0038I Pass  21: suminf.    1.51891 (6) obj. -7.95078 iterations 20
Cbc0038I Pass  22: suminf.    1.48479 (5) obj. -7.95078 iterations 1
Cbc0038I Pass  23: suminf.    1.41182 (5) obj. -7.95078 iterations 4
Cbc0038I Pass  24: suminf.    1.39468 (4) obj. -7.95078 iterations 1
Cbc0038I Pass  25: suminf.    1.48479 (5) obj. -7.95078 iterations 3
Cbc0038I Pass  26: suminf.    3.07431 (10) obj. -7.95078 iterations 18
Cbc0038I Pass  27: suminf.    2.12261 (7) obj. -7.95078 iterations 8
Cbc0038I Pass  28: suminf.    1.80503 (5) obj. -7.95078 iterations 8
Cbc0038I Pass  29: suminf.    1.79178 (6) obj. -7.95078 iterations 1
Cbc0038I Pass  30: suminf.    2.57873 (7) obj. -7.95078 iterations 7
Cbc0038I Pass  31: suminf.    1.93721 (8) obj. -7.95078 iterations 2
Cbc0038I Rounding solution of -5.06209 is better than previous of -5.04045

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 88 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -13.1892
Cbc0038I Pass  31: suminf.    2.38871 (28) obj. -13.1892 iterations 0
Cbc0038I Pass  32: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  33: suminf.    2.69266 (11) obj. -13.1892 iterations 40
Cbc0038I Pass  34: suminf.    1.73744 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  35: suminf.    2.49593 (8) obj. -13.1892 iterations 14
Cbc0038I Pass  36: suminf.    2.18597 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  37: suminf.    3.32039 (10) obj. -13.1892 iterations 13
Cbc0038I Pass  38: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  39: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  40: suminf.    2.38871 (28) obj. -13.1892 iterations 23
Cbc0038I Pass  41: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  42: suminf.    3.20115 (9) obj. -13.1892 iterations 24
Cbc0038I Pass  43: suminf.    2.53367 (8) obj. -13.1892 iterations 1
Cbc0038I Pass  44: suminf.    1.89399 (13) obj. -13.1892 iterations 21
Cbc0038I Pass  45: suminf.    1.89428 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  46: suminf.    1.41482 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  47: suminf.    2.32387 (7) obj. -13.1892 iterations 11
Cbc0038I Pass  48: suminf.    2.06007 (7) obj. -13.1892 iterations 3
Cbc0038I Pass  49: suminf.    3.32039 (10) obj. -13.1892 iterations 8
Cbc0038I Pass  50: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  51: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  52: suminf.    2.38871 (28) obj. -13.1892 iterations 22
Cbc0038I Pass  53: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  54: suminf.    2.69266 (11) obj. -13.1892 iterations 41
Cbc0038I Pass  55: suminf.    1.73744 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  56: suminf.    2.49593 (8) obj. -13.1892 iterations 14
Cbc0038I Pass  57: suminf.    2.18597 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  58: suminf.    3.32039 (10) obj. -13.1892 iterations 13
Cbc0038I Pass  59: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  60: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -5.06209 - took 0.10 seconds
Cbc0012I Integer solution of -5.06209 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -5.25049 found by RINS after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 27 added rows had average density of 60.037037
Cbc0013I At root node, 27 cuts changed objective from -34.142892 to -26.086883 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15020 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1829 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.25049 best solution, best possible -26.086883 (1.03 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 51 rows 33 columns
Cbc0012I Integer solution of -6.92074 found by rounding after 10811 iterations and 65 nodes (1.35 seconds)
Cbc0001I Search completed - best objective -6.920739999999999, took 11367 iterations and 76 nodes (1.37 seconds)
Cbc0032I Strong branching done 872 times (17973 iterations), fathomed 4 nodes and fixed 20 variables
Cbc0035I Maximum depth 33, 271 variables fixed on reduced cost
Total time (CPU seconds):       1.33   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-58) rows, 116 (-36) columns and 1745 (-1558) elements
Clp1000I sum of infeasibilities 3.2419e-08 - average 3.37698e-10, 44 fixed columns
Coin0506I Presolve 60 (-36) rows, 72 (-44) columns and 724 (-1021) elements
Clp0006I 0  Obj 34.336033 Dual inf 1.9766415 (72)
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 4.5126165 - largest nonzero change 2.5312577e-05 ( 0.0016324266%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 48.406632
Clp0000I Optimal - objective value 48.406632
Coin0511I After Postsolve, objective 48.406632, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.406632
Clp0000I Optimal - objective value 48.406632
Clp0000I Optimal - objective value 48.406632
Clp0000I Optimal - objective value 48.406632
Coin0511I After Postsolve, objective 48.406632, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.40663164 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 116 columns (116 integer (116 of which binary)) and 1756 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.990%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.51436
Cbc0038I Pass   1: suminf.    3.19074 (28) obj. -22.9241 iterations 9
Cbc0038I Pass   2: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass   3: suminf.    0.08333 (1) obj. 14.541 iterations 27
Cbc0038I Solution found of 15.4576
Cbc0038I Rounding solution of 7.29334 is better than previous of 15.4576

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 3.5264
Cbc0038I Pass   4: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass   5: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass   6: suminf.    0.81544 (8) obj. 3.5264 iterations 26
Cbc0038I Pass   7: suminf.    0.81544 (8) obj. 3.5264 iterations 0
Cbc0038I Pass   8: suminf.    0.39335 (2) obj. 3.5264 iterations 10
Cbc0038I Pass   9: suminf.    0.23417 (2) obj. 3.45788 iterations 3
Cbc0038I Pass  10: suminf.    0.39335 (2) obj. 3.5264 iterations 3
Cbc0038I Pass  11: suminf.    2.10690 (14) obj. 3.5264 iterations 35
Cbc0038I Pass  12: suminf.    1.52382 (12) obj. 1.95993 iterations 6
Cbc0038I Pass  13: suminf.    1.07406 (12) obj. 3.5264 iterations 3
Cbc0038I Pass  14: suminf.    0.92195 (5) obj. 3.5264 iterations 15
Cbc0038I Pass  15: suminf.    0.92195 (5) obj. 3.5264 iterations 0
Cbc0038I Pass  16: suminf.    0.18149 (2) obj. 3.5264 iterations 8
Cbc0038I Pass  17: suminf.    0.56385 (3) obj. 3.5264 iterations 4
Cbc0038I Pass  18: suminf.    0.41015 (2) obj. 3.5264 iterations 11
Cbc0038I Pass  19: suminf.    0.27428 (2) obj. 2.66604 iterations 2
Cbc0038I Pass  20: suminf.    1.15812 (13) obj. 3.5264 iterations 30
Cbc0038I Pass  21: suminf.    1.01910 (13) obj. 3.5264 iterations 6
Cbc0038I Pass  22: suminf.    0.37737 (4) obj. 3.5264 iterations 14
Cbc0038I Pass  23: suminf.    0.83227 (4) obj. 3.5264 iterations 8
Cbc0038I Pass  24: suminf.    0.83227 (4) obj. 3.5264 iterations 0
Cbc0038I Pass  25: suminf.    0.65837 (4) obj. 3.5264 iterations 4
Cbc0038I Pass  26: suminf.    0.84612 (11) obj. 3.5264 iterations 19
Cbc0038I Pass  27: suminf.    0.81651 (12) obj. 3.5264 iterations 5
Cbc0038I Pass  28: suminf.    1.27204 (4) obj. 3.5264 iterations 15
Cbc0038I Pass  29: suminf.    0.35269 (3) obj. 3.3008 iterations 7
Cbc0038I Pass  30: suminf.    0.92829 (3) obj. 3.5264 iterations 8
Cbc0038I Pass  31: suminf.    0.49548 (4) obj. 3.5264 iterations 3
Cbc0038I Pass  32: suminf.    0.41489 (3) obj. 3.5264 iterations 6
Cbc0038I Pass  33: suminf.    0.41489 (3) obj. 3.5264 iterations 0
Cbc0038I Rounding solution of 2.79343 is better than previous of 7.29334

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 116 columns, reduced to 32 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 2.79343 to 2.24668 (0.10 seconds)
Cbc0038I Round again with cutoff of -4.27776
Cbc0038I Pass  33: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass  34: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass  35: suminf.    0.92152 (10) obj. -6.31095 iterations 18
Cbc0038I Pass  36: suminf.    0.86326 (6) obj. -4.27776 iterations 10
Cbc0038I Pass  37: suminf.    0.69800 (7) obj. -4.27776 iterations 3
Cbc0038I Pass  38: suminf.    0.74626 (4) obj. -4.27776 iterations 6
Cbc0038I Pass  39: suminf.    0.44751 (5) obj. -5.45785 iterations 2
Cbc0038I Pass  40: suminf.    1.61694 (17) obj. -6.23014 iterations 29
Cbc0038I Pass  41: suminf.    1.31727 (10) obj. -6.32756 iterations 12
Cbc0038I Pass  42: suminf.    0.60335 (8) obj. -4.27776 iterations 14
Cbc0038I Pass  43: suminf.    0.59858 (8) obj. -4.27776 iterations 3
Cbc0038I Pass  44: suminf.    1.18855 (6) obj. -4.27776 iterations 15
Cbc0038I Pass  45: suminf.    1.12188 (6) obj. -4.27776 iterations 7
Cbc0038I Pass  46: suminf.    1.92945 (7) obj. -4.27776 iterations 8
Cbc0038I Pass  47: suminf.    1.92945 (7) obj. -4.27776 iterations 0
Cbc0038I Pass  48: suminf.    1.11796 (6) obj. -4.27776 iterations 15
Cbc0038I Pass  49: suminf.    1.05129 (6) obj. -4.27776 iterations 5
Cbc0038I Pass  50: suminf.    1.92945 (7) obj. -4.27776 iterations 8
Cbc0038I Pass  51: suminf.    1.14023 (9) obj. -4.27776 iterations 14
Cbc0038I Pass  52: suminf.    1.13482 (9) obj. -4.27776 iterations 6
Cbc0038I Pass  53: suminf.    0.80649 (5) obj. -4.27776 iterations 8
Cbc0038I Pass  54: suminf.    0.80649 (5) obj. -4.27776 iterations 3
Cbc0038I Pass  55: suminf.    0.88646 (5) obj. -4.27776 iterations 8
Cbc0038I Pass  56: suminf.    0.61630 (6) obj. -5.12027 iterations 4
Cbc0038I Pass  57: suminf.    0.85016 (5) obj. -4.27776 iterations 6
Cbc0038I Pass  58: suminf.    1.81560 (13) obj. -4.27776 iterations 25
Cbc0038I Pass  59: suminf.    1.57430 (11) obj. -4.27776 iterations 8
Cbc0038I Pass  60: suminf.    1.44930 (6) obj. -4.27776 iterations 16
Cbc0038I Pass  61: suminf.    0.94449 (5) obj. -4.27776 iterations 5
Cbc0038I Pass  62: suminf.    0.93429 (5) obj. -4.27776 iterations 6
Cbc0038I Rounding solution of 2.06803 is better than previous of 2.24668

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 116 columns, reduced to 30 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -12.107
Cbc0038I Pass  62: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass  63: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass  64: suminf.    1.77307 (18) obj. -12.107 iterations 17
Cbc0038I Pass  65: suminf.    1.95556 (12) obj. -12.107 iterations 15
Cbc0038I Pass  66: suminf.    1.54670 (11) obj. -12.107 iterations 3
Cbc0038I Pass  67: suminf.    1.32163 (12) obj. -12.107 iterations 5
Cbc0038I Pass  68: suminf.    1.64417 (11) obj. -12.107 iterations 15
Cbc0038I Pass  69: suminf.    1.45719 (12) obj. -12.2794 iterations 6
Cbc0038I Pass  70: suminf.    2.41876 (18) obj. -12.107 iterations 14
Cbc0038I Pass  71: suminf.    2.09263 (17) obj. -12.107 iterations 6
Cbc0038I Pass  72: suminf.    1.78251 (11) obj. -12.107 iterations 18
Cbc0038I Pass  73: suminf.    1.97349 (17) obj. -12.107 iterations 18
Cbc0038I Pass  74: suminf.    1.74015 (14) obj. -12.107 iterations 7
Cbc0038I Pass  75: suminf.    2.62197 (14) obj. -12.107 iterations 16
Cbc0038I Pass  76: suminf.    2.58087 (14) obj. -12.107 iterations 5
Cbc0038I Pass  77: suminf.    3.22869 (14) obj. -12.107 iterations 11
Cbc0038I Pass  78: suminf.    2.66206 (14) obj. -12.107 iterations 7
Cbc0038I Pass  79: suminf.    2.76074 (13) obj. -12.107 iterations 7
Cbc0038I Pass  80: suminf.    3.04519 (17) obj. -12.107 iterations 25
Cbc0038I Pass  81: suminf.    2.75723 (18) obj. -12.107 iterations 5
Cbc0038I Pass  82: suminf.    1.83178 (14) obj. -12.107 iterations 24
Cbc0038I Pass  83: suminf.    1.72303 (12) obj. -12.107 iterations 6
Cbc0038I Pass  84: suminf.    1.78208 (12) obj. -12.107 iterations 5
Cbc0038I Pass  85: suminf.    2.32889 (16) obj. -12.107 iterations 19
Cbc0038I Pass  86: suminf.    2.25811 (15) obj. -12.107 iterations 5
Cbc0038I Pass  87: suminf.    2.67527 (15) obj. -12.107 iterations 16
Cbc0038I Pass  88: suminf.    1.76571 (12) obj. -12.107 iterations 8
Cbc0038I Pass  89: suminf.    1.72303 (12) obj. -12.107 iterations 5
Cbc0038I Pass  90: suminf.    1.78208 (12) obj. -12.107 iterations 5
Cbc0038I Pass  91: suminf.    3.04429 (17) obj. -12.107 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 116 columns, reduced to 36 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of 2.06803 - took 0.13 seconds
Cbc0012I Integer solution of 2.068027 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 96 rows 116 columns, reduced to 3 rows 4 columns
Cbc0031I 53 added rows had average density of 38.90566
Cbc0013I At root node, 53 cuts changed objective from -30.37512 to -10.890653 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13605 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1088 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 297 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 860 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 283 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.652 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 2.068027 best solution, best possible -10.890653 (2.33 seconds)
Cbc0012I Integer solution of 1.55406 found by rounding after 4810 iterations and 1 nodes (2.35 seconds)
Cbc0012I Integer solution of -1.99411 found by DiveCoefficient after 5548 iterations and 4 nodes (2.68 seconds)
Cbc0012I Integer solution of -4.25975 found by rounding after 5589 iterations and 5 nodes (2.70 seconds)
Cbc0004I Integer solution of -6.92074 found after 5623 iterations and 5 nodes (2.70 seconds)
Cbc0010I After 19 nodes, 3 on tree, -6.92074 best solution, best possible -10.890653 (3.04 seconds)
Cbc0001I Search completed - best objective -6.920739999999999, took 6574 iterations and 22 nodes (3.04 seconds)
Cbc0032I Strong branching done 518 times (12618 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 50 variables fixed on reduced cost
Total time (CPU seconds):       2.43   (Wallclock seconds):       3.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 2.16637e-05 - average 1.66644e-07, 13 fixed columns
Coin0506I Presolve 106 (-24) rows, 63 (-13) columns and 330 (-74) elements
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 3.0569803 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Coin0511I After Postsolve, objective 34.142892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Clp0000I Optimal - objective value 34.142892
Coin0511I After Postsolve, objective 34.142892, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.14289243 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 9.19918
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.8822 iterations 42
Cbc0038I Solution found of 11.8822
Cbc0038I Relaxing continuous gives 11.8822
Cbc0038I Rounding solution of 1.28016 is better than previous of 11.8822

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 65 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 1.28016 to -5.04045 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.95078
Cbc0038I Pass   2: suminf.    1.02823 (28) obj. -7.95078 iterations 27
Cbc0038I Pass   3: suminf.    1.00833 (29) obj. -7.95078 iterations 6
Cbc0038I Pass   4: suminf.    1.48196 (9) obj. -7.95078 iterations 29
Cbc0038I Pass   5: suminf.    0.68906 (5) obj. -7.95078 iterations 9
Cbc0038I Pass   6: suminf.    2.08053 (7) obj. -7.95078 iterations 10
Cbc0038I Pass   7: suminf.    1.43689 (4) obj. -7.95078 iterations 6
Cbc0038I Pass   8: suminf.    1.18835 (3) obj. -7.95078 iterations 1
Cbc0038I Pass   9: suminf.    1.18730 (5) obj. -7.95078 iterations 3
Cbc0038I Pass  10: suminf.    1.18730 (5) obj. -7.95078 iterations 0
Cbc0038I Pass  11: suminf.    2.01458 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  12: suminf.    1.66590 (7) obj. -7.95078 iterations 1
Cbc0038I Pass  13: suminf.    1.70315 (5) obj. -7.95078 iterations 6
Cbc0038I Pass  14: suminf.    1.64621 (5) obj. -7.95078 iterations 1
Cbc0038I Pass  15: suminf.    2.05903 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  16: suminf.    1.13932 (6) obj. -7.95078 iterations 4
Cbc0038I Pass  17: suminf.    1.00516 (8) obj. -7.95078 iterations 5
Cbc0038I Pass  18: suminf.    4.54879 (15) obj. -7.95078 iterations 25
Cbc0038I Pass  19: suminf.    2.48206 (9) obj. -7.95078 iterations 10
Cbc0038I Pass  20: suminf.    2.48206 (9) obj. -7.95078 iterations 0
Cbc0038I Pass  21: suminf.    1.51891 (6) obj. -7.95078 iterations 20
Cbc0038I Pass  22: suminf.    1.48479 (5) obj. -7.95078 iterations 1
Cbc0038I Pass  23: suminf.    1.41182 (5) obj. -7.95078 iterations 4
Cbc0038I Pass  24: suminf.    1.39468 (4) obj. -7.95078 iterations 1
Cbc0038I Pass  25: suminf.    1.48479 (5) obj. -7.95078 iterations 3
Cbc0038I Pass  26: suminf.    3.07431 (10) obj. -7.95078 iterations 18
Cbc0038I Pass  27: suminf.    2.12261 (7) obj. -7.95078 iterations 8
Cbc0038I Pass  28: suminf.    1.80503 (5) obj. -7.95078 iterations 8
Cbc0038I Pass  29: suminf.    1.79178 (6) obj. -7.95078 iterations 1
Cbc0038I Pass  30: suminf.    2.57873 (7) obj. -7.95078 iterations 7
Cbc0038I Pass  31: suminf.    1.93721 (8) obj. -7.95078 iterations 2
Cbc0038I Rounding solution of -5.06209 is better than previous of -5.04045

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 88 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -13.1892
Cbc0038I Pass  31: suminf.    2.38871 (28) obj. -13.1892 iterations 0
Cbc0038I Pass  32: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  33: suminf.    2.69266 (11) obj. -13.1892 iterations 40
Cbc0038I Pass  34: suminf.    1.73744 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  35: suminf.    2.49593 (8) obj. -13.1892 iterations 14
Cbc0038I Pass  36: suminf.    2.18597 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  37: suminf.    3.32039 (10) obj. -13.1892 iterations 13
Cbc0038I Pass  38: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  39: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  40: suminf.    2.38871 (28) obj. -13.1892 iterations 23
Cbc0038I Pass  41: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  42: suminf.    3.20115 (9) obj. -13.1892 iterations 24
Cbc0038I Pass  43: suminf.    2.53367 (8) obj. -13.1892 iterations 1
Cbc0038I Pass  44: suminf.    1.89399 (13) obj. -13.1892 iterations 21
Cbc0038I Pass  45: suminf.    1.89428 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  46: suminf.    1.41482 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  47: suminf.    2.32387 (7) obj. -13.1892 iterations 11
Cbc0038I Pass  48: suminf.    2.06007 (7) obj. -13.1892 iterations 3
Cbc0038I Pass  49: suminf.    3.32039 (10) obj. -13.1892 iterations 8
Cbc0038I Pass  50: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  51: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I Pass  52: suminf.    2.38871 (28) obj. -13.1892 iterations 22
Cbc0038I Pass  53: suminf.    2.34248 (29) obj. -13.1892 iterations 6
Cbc0038I Pass  54: suminf.    2.69266 (11) obj. -13.1892 iterations 41
Cbc0038I Pass  55: suminf.    1.73744 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  56: suminf.    2.49593 (8) obj. -13.1892 iterations 14
Cbc0038I Pass  57: suminf.    2.18597 (8) obj. -13.1892 iterations 4
Cbc0038I Pass  58: suminf.    3.32039 (10) obj. -13.1892 iterations 13
Cbc0038I Pass  59: suminf.    3.32039 (10) obj. -13.1892 iterations 0
Cbc0038I Pass  60: suminf.    2.25134 (9) obj. -13.1892 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -5.06209 - took 0.12 seconds
Cbc0012I Integer solution of -5.06209 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -5.25049 found by RINS after 0 iterations and 0 nodes (0.17 seconds)
Cbc0031I 27 added rows had average density of 60.037037
Cbc0013I At root node, 27 cuts changed objective from -34.142892 to -26.086883 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15020 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1829 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 47 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.25049 best solution, best possible -26.086883 (1.26 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 51 rows 33 columns
Cbc0012I Integer solution of -6.92074 found by rounding after 10811 iterations and 65 nodes (1.65 seconds)
Cbc0001I Search completed - best objective -6.920739999999999, took 11367 iterations and 76 nodes (1.67 seconds)
Cbc0032I Strong branching done 872 times (17973 iterations), fathomed 4 nodes and fixed 20 variables
Cbc0035I Maximum depth 33, 271 variables fixed on reduced cost
Total time (CPU seconds):       1.60   (Wallclock seconds):       1.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 96 (-59) rows, 116 (-37) columns and 1745 (-1559) elements
Clp1000I sum of infeasibilities 3.2419e-08 - average 3.37698e-10, 44 fixed columns
Coin0506I Presolve 60 (-36) rows, 72 (-44) columns and 724 (-1021) elements
Clp0006I 0  Obj 34.336033 Dual inf 1.9766415 (72)
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 4.5126165 - largest nonzero change 2.5312577e-05 ( 0.0016324266%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 48.406632
Clp0000I Optimal - objective value 48.406632
Coin0511I After Postsolve, objective 48.406632, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.406632
Clp0000I Optimal - objective value 48.406632
Clp0000I Optimal - objective value 48.406632
Clp0000I Optimal - objective value 48.406632
Coin0511I After Postsolve, objective 48.406632, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.40663164 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 116 columns (116 integer (116 of which binary)) and 1756 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.990%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 4.51436
Cbc0038I Pass   1: suminf.    3.19074 (28) obj. -22.9241 iterations 9
Cbc0038I Pass   2: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass   3: suminf.    0.08333 (1) obj. 14.541 iterations 27
Cbc0038I Solution found of 15.4576
Cbc0038I Rounding solution of 7.29334 is better than previous of 15.4576

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 3.5264
Cbc0038I Pass   4: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass   5: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass   6: suminf.    0.81544 (8) obj. 3.5264 iterations 26
Cbc0038I Pass   7: suminf.    0.81544 (8) obj. 3.5264 iterations 0
Cbc0038I Pass   8: suminf.    0.39335 (2) obj. 3.5264 iterations 10
Cbc0038I Pass   9: suminf.    0.23417 (2) obj. 3.45788 iterations 3
Cbc0038I Pass  10: suminf.    0.39335 (2) obj. 3.5264 iterations 3
Cbc0038I Pass  11: suminf.    2.10690 (14) obj. 3.5264 iterations 35
Cbc0038I Pass  12: suminf.    1.52382 (12) obj. 1.95993 iterations 6
Cbc0038I Pass  13: suminf.    1.07406 (12) obj. 3.5264 iterations 3
Cbc0038I Pass  14: suminf.    0.92195 (5) obj. 3.5264 iterations 15
Cbc0038I Pass  15: suminf.    0.92195 (5) obj. 3.5264 iterations 0
Cbc0038I Pass  16: suminf.    0.18149 (2) obj. 3.5264 iterations 8
Cbc0038I Pass  17: suminf.    0.56385 (3) obj. 3.5264 iterations 4
Cbc0038I Pass  18: suminf.    0.41015 (2) obj. 3.5264 iterations 11
Cbc0038I Pass  19: suminf.    0.27428 (2) obj. 2.66604 iterations 2
Cbc0038I Pass  20: suminf.    1.15812 (13) obj. 3.5264 iterations 30
Cbc0038I Pass  21: suminf.    1.01910 (13) obj. 3.5264 iterations 6
Cbc0038I Pass  22: suminf.    0.37737 (4) obj. 3.5264 iterations 14
Cbc0038I Pass  23: suminf.    0.83227 (4) obj. 3.5264 iterations 8
Cbc0038I Pass  24: suminf.    0.83227 (4) obj. 3.5264 iterations 0
Cbc0038I Pass  25: suminf.    0.65837 (4) obj. 3.5264 iterations 4
Cbc0038I Pass  26: suminf.    0.84612 (11) obj. 3.5264 iterations 19
Cbc0038I Pass  27: suminf.    0.81651 (12) obj. 3.5264 iterations 5
Cbc0038I Pass  28: suminf.    1.27204 (4) obj. 3.5264 iterations 15
Cbc0038I Pass  29: suminf.    0.35269 (3) obj. 3.3008 iterations 7
Cbc0038I Pass  30: suminf.    0.92829 (3) obj. 3.5264 iterations 8
Cbc0038I Pass  31: suminf.    0.49548 (4) obj. 3.5264 iterations 3
Cbc0038I Pass  32: suminf.    0.41489 (3) obj. 3.5264 iterations 6
Cbc0038I Pass  33: suminf.    0.41489 (3) obj. 3.5264 iterations 0
Cbc0038I Rounding solution of 2.79343 is better than previous of 7.29334

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 116 columns, reduced to 32 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 2.79343 to 2.24668 (0.11 seconds)
Cbc0038I Round again with cutoff of -4.27776
Cbc0038I Pass  33: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass  34: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass  35: suminf.    0.92152 (10) obj. -6.31095 iterations 18
Cbc0038I Pass  36: suminf.    0.86326 (6) obj. -4.27776 iterations 10
Cbc0038I Pass  37: suminf.    0.69800 (7) obj. -4.27776 iterations 3
Cbc0038I Pass  38: suminf.    0.74626 (4) obj. -4.27776 iterations 6
Cbc0038I Pass  39: suminf.    0.44751 (5) obj. -5.45785 iterations 2
Cbc0038I Pass  40: suminf.    1.61694 (17) obj. -6.23014 iterations 29
Cbc0038I Pass  41: suminf.    1.31727 (10) obj. -6.32756 iterations 12
Cbc0038I Pass  42: suminf.    0.60335 (8) obj. -4.27776 iterations 14
Cbc0038I Pass  43: suminf.    0.59858 (8) obj. -4.27776 iterations 3
Cbc0038I Pass  44: suminf.    1.18855 (6) obj. -4.27776 iterations 15
Cbc0038I Pass  45: suminf.    1.12188 (6) obj. -4.27776 iterations 7
Cbc0038I Pass  46: suminf.    1.92945 (7) obj. -4.27776 iterations 8
Cbc0038I Pass  47: suminf.    1.92945 (7) obj. -4.27776 iterations 0
Cbc0038I Pass  48: suminf.    1.11796 (6) obj. -4.27776 iterations 15
Cbc0038I Pass  49: suminf.    1.05129 (6) obj. -4.27776 iterations 5
Cbc0038I Pass  50: suminf.    1.92945 (7) obj. -4.27776 iterations 8
Cbc0038I Pass  51: suminf.    1.14023 (9) obj. -4.27776 iterations 14
Cbc0038I Pass  52: suminf.    1.13482 (9) obj. -4.27776 iterations 6
Cbc0038I Pass  53: suminf.    0.80649 (5) obj. -4.27776 iterations 8
Cbc0038I Pass  54: suminf.    0.80649 (5) obj. -4.27776 iterations 3
Cbc0038I Pass  55: suminf.    0.88646 (5) obj. -4.27776 iterations 8
Cbc0038I Pass  56: suminf.    0.61630 (6) obj. -5.12027 iterations 4
Cbc0038I Pass  57: suminf.    0.85016 (5) obj. -4.27776 iterations 6
Cbc0038I Pass  58: suminf.    1.81560 (13) obj. -4.27776 iterations 25
Cbc0038I Pass  59: suminf.    1.57430 (11) obj. -4.27776 iterations 8
Cbc0038I Pass  60: suminf.    1.44930 (6) obj. -4.27776 iterations 16
Cbc0038I Pass  61: suminf.    0.94449 (5) obj. -4.27776 iterations 5
Cbc0038I Pass  62: suminf.    0.93429 (5) obj. -4.27776 iterations 6
Cbc0038I Rounding solution of 2.06803 is better than previous of 2.24668

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 116 columns, reduced to 30 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -12.107
Cbc0038I Pass  62: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass  63: suminf.    3.19074 (28) obj. -22.9241 iterations 0
Cbc0038I Pass  64: suminf.    1.77307 (18) obj. -12.107 iterations 17
Cbc0038I Pass  65: suminf.    1.95556 (12) obj. -12.107 iterations 15
Cbc0038I Pass  66: suminf.    1.54670 (11) obj. -12.107 iterations 3
Cbc0038I Pass  67: suminf.    1.32163 (12) obj. -12.107 iterations 5
Cbc0038I Pass  68: suminf.    1.64417 (11) obj. -12.107 iterations 15
Cbc0038I Pass  69: suminf.    1.45719 (12) obj. -12.2794 iterations 6
Cbc0038I Pass  70: suminf.    2.41876 (18) obj. -12.107 iterations 14
Cbc0038I Pass  71: suminf.    2.09263 (17) obj. -12.107 iterations 6
Cbc0038I Pass  72: suminf.    1.78251 (11) obj. -12.107 iterations 18
Cbc0038I Pass  73: suminf.    1.97349 (17) obj. -12.107 iterations 18
Cbc0038I Pass  74: suminf.    1.74015 (14) obj. -12.107 iterations 7
Cbc0038I Pass  75: suminf.    2.62197 (14) obj. -12.107 iterations 16
Cbc0038I Pass  76: suminf.    2.58087 (14) obj. -12.107 iterations 5
Cbc0038I Pass  77: suminf.    3.22869 (14) obj. -12.107 iterations 11
Cbc0038I Pass  78: suminf.    2.66206 (14) obj. -12.107 iterations 7
Cbc0038I Pass  79: suminf.    2.76074 (13) obj. -12.107 iterations 7
Cbc0038I Pass  80: suminf.    3.04519 (17) obj. -12.107 iterations 25
Cbc0038I Pass  81: suminf.    2.75723 (18) obj. -12.107 iterations 5
Cbc0038I Pass  82: suminf.    1.83178 (14) obj. -12.107 iterations 24
Cbc0038I Pass  83: suminf.    1.72303 (12) obj. -12.107 iterations 6
Cbc0038I Pass  84: suminf.    1.78208 (12) obj. -12.107 iterations 5
Cbc0038I Pass  85: suminf.    2.32889 (16) obj. -12.107 iterations 19
Cbc0038I Pass  86: suminf.    2.25811 (15) obj. -12.107 iterations 5
Cbc0038I Pass  87: suminf.    2.67527 (15) obj. -12.107 iterations 16
Cbc0038I Pass  88: suminf.    1.76571 (12) obj. -12.107 iterations 8
Cbc0038I Pass  89: suminf.    1.72303 (12) obj. -12.107 iterations 5
Cbc0038I Pass  90: suminf.    1.78208 (12) obj. -12.107 iterations 5
Cbc0038I Pass  91: suminf.    3.04429 (17) obj. -12.107 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 116 columns, reduced to 36 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of 2.06803 - took 0.15 seconds
Cbc0012I Integer solution of 2.068027 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 96 rows 116 columns, reduced to 3 rows 4 columns
Cbc0031I 53 added rows had average density of 38.90566
Cbc0013I At root node, 53 cuts changed objective from -30.37512 to -10.890653 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13605 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1088 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 297 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 860 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 283 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.713 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 2.068027 best solution, best possible -10.890653 (2.65 seconds)
Cbc0012I Integer solution of 1.55406 found by rounding after 4810 iterations and 1 nodes (2.68 seconds)
Cbc0012I Integer solution of -1.99411 found by DiveCoefficient after 5548 iterations and 4 nodes (3.10 seconds)
Cbc0012I Integer solution of -4.25975 found by rounding after 5589 iterations and 5 nodes (3.12 seconds)
Cbc0004I Integer solution of -6.92074 found after 5623 iterations and 5 nodes (3.13 seconds)
Cbc0010I After 12 nodes, 3 on tree, -6.92074 best solution, best possible -10.890653 (3.40 seconds)
Cbc0001I Search completed - best objective -6.920739999999999, took 6574 iterations and 22 nodes (3.57 seconds)
Cbc0032I Strong branching done 518 times (12618 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 50 variables fixed on reduced cost
Total time (CPU seconds):       2.79   (Wallclock seconds):       3.59

