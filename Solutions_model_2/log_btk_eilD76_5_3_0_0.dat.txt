Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 3.43826e-06 - average 2.52813e-08, 10 fixed columns
Coin0506I Presolve 117 (-19) rows, 66 (-10) columns and 358 (-58) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.7411268 - largest nonzero change 0 ( 0%) - largest zero change 1.8429708e-05
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Coin0511I After Postsolve, objective 43.843772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Coin0511I After Postsolve, objective 43.843772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.84377199 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.0701
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.37568 iterations 51
Cbc0038I Solution found of -2.37568
Cbc0038I Relaxing continuous gives -2.37568
Cbc0038I Rounding solution of -9.07922 is better than previous of -2.37568

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -9.07922 to -22.5793 (0.06 seconds)
Cbc0038I Round again with cutoff of -24.7059
Cbc0038I Pass   2: suminf.    2.79206 (9) obj. -24.7059 iterations 12
Cbc0038I Pass   3: suminf.    2.79206 (9) obj. -24.7059 iterations 0
Cbc0038I Pass   4: suminf.    2.17555 (6) obj. -24.7059 iterations 9
Cbc0038I Pass   5: suminf.    1.45497 (6) obj. -24.7059 iterations 6
Cbc0038I Pass   6: suminf.    1.73094 (5) obj. -24.7059 iterations 11
Cbc0038I Pass   7: suminf.    1.25034 (4) obj. -24.7059 iterations 5
Cbc0038I Pass   8: suminf.    1.15908 (3) obj. -24.7059 iterations 2
Cbc0038I Pass   9: suminf.    1.38224 (4) obj. -24.7059 iterations 4
Cbc0038I Pass  10: suminf.    1.38634 (4) obj. -24.7059 iterations 4
Cbc0038I Pass  11: suminf.    1.67639 (5) obj. -24.7059 iterations 19
Cbc0038I Pass  12: suminf.    1.00795 (3) obj. -24.7059 iterations 10
Cbc0038I Pass  13: suminf.    0.85848 (3) obj. -24.7059 iterations 2
Cbc0038I Pass  14: suminf.    0.64816 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  15: suminf.    0.40880 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  16: suminf.    1.13657 (4) obj. -24.7059 iterations 3
Cbc0038I Pass  17: suminf.    0.71069 (3) obj. -24.7059 iterations 6
Cbc0038I Pass  18: suminf.    0.71069 (3) obj. -24.7059 iterations 0
Cbc0038I Pass  19: suminf.    1.45095 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  20: suminf.    1.64021 (7) obj. -24.7059 iterations 21
Cbc0038I Pass  21: suminf.    1.36967 (5) obj. -24.7059 iterations 6
Cbc0038I Pass  22: suminf.    1.15018 (3) obj. -24.7059 iterations 11
Cbc0038I Pass  23: suminf.    0.37989 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  24: suminf.    0.92694 (2) obj. -24.7059 iterations 1
Cbc0038I Pass  25: suminf.    4.39991 (12) obj. -24.7059 iterations 22
Cbc0038I Pass  26: suminf.    1.75588 (7) obj. -24.7059 iterations 15
Cbc0038I Pass  27: suminf.    1.51459 (4) obj. -24.7059 iterations 8
Cbc0038I Pass  28: suminf.    1.12376 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  29: suminf.    0.74869 (3) obj. -24.7059 iterations 3
Cbc0038I Pass  30: suminf.    1.42954 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  31: suminf.    2.36726 (8) obj. -24.7059 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 84 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -22.5793 to -22.6967 (0.12 seconds)
Cbc0038I Round again with cutoff of -28.5334
Cbc0038I Pass  31: suminf.    3.51887 (16) obj. -28.5334 iterations 7
Cbc0038I Pass  32: suminf.    3.51887 (16) obj. -28.5334 iterations 0
Cbc0038I Pass  33: suminf.    2.38471 (7) obj. -28.5334 iterations 19
Cbc0038I Pass  34: suminf.    2.07406 (7) obj. -28.5334 iterations 3
Cbc0038I Pass  35: suminf.    1.98241 (6) obj. -28.5334 iterations 7
Cbc0038I Pass  36: suminf.    1.44004 (5) obj. -28.5334 iterations 3
Cbc0038I Pass  37: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  38: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  39: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  40: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  41: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  42: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  43: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  44: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  45: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  46: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  47: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  48: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  49: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  50: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  51: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  52: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  53: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  54: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  55: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  56: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  57: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  58: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  59: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  60: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -22.6967 - took 0.14 seconds
Cbc0012I Integer solution of -22.696745 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 75 rows 45 columns
Cbc0031I 26 added rows had average density of 39
Cbc0013I At root node, 26 cuts changed objective from -43.843772 to -35.801596 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13303 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2314 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 61.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.696745 best solution, best possible -35.801596 (0.95 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 58 rows 36 columns
Cbc0001I Search completed - best objective -22.696745, took 9427 iterations and 58 nodes (1.34 seconds)
Cbc0032I Strong branching done 832 times (13402 iterations), fathomed 5 nodes and fixed 5 variables
Cbc0035I Maximum depth 22, 123 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       1.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 120 (-32) columns and 2171 (-1132) elements
Clp1000I sum of infeasibilities 1.39924e-07 - average 1.32004e-09, 20 fixed columns
Coin0506I Presolve 90 (-16) rows, 99 (-21) columns and 1525 (-646) elements
Clp0006I 0  Obj 51.636265 Dual inf 3.6667921 (97)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.0024143 - largest nonzero change 1.4490516e-05 ( 0.0010393299%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 59.999041
Clp0000I Optimal - objective value 59.999041
Coin0511I After Postsolve, objective 59.999041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.999041
Clp0000I Optimal - objective value 59.999041
Clp0000I Optimal - objective value 59.999041
Clp0000I Optimal - objective value 59.999041
Coin0511I After Postsolve, objective 59.999041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.99904109 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 120 columns (120 integer (120 of which binary)) and 2173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.050%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 6.46049
Cbc0038I Pass   1: suminf.    1.90584 (36) obj. -36.5358 iterations 15
Cbc0038I Pass   2: suminf.    1.90584 (36) obj. -36.5358 iterations 1
Cbc0038I Pass   3: suminf.    0.37866 (11) obj. -3.67644 iterations 25
Cbc0038I Solution found of 7.90323
Cbc0038I Rounding solution of -4.20146 is better than previous of 7.90323

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -4.20146 to -5.66105 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.578
Cbc0038I Pass   4: suminf.    1.90584 (36) obj. -36.5358 iterations 0
Cbc0038I Pass   5: suminf.    1.90584 (36) obj. -36.5358 iterations 1
Cbc0038I Pass   6: suminf.    0.80861 (19) obj. -15.0409 iterations 17
Cbc0038I Pass   7: suminf.    0.66435 (3) obj. -10.578 iterations 28
Cbc0038I Pass   8: suminf.    0.66435 (3) obj. -10.578 iterations 0
Cbc0038I Pass   9: suminf.    0.93595 (3) obj. -11.0635 iterations 6
Cbc0038I Pass  10: suminf.    0.42188 (2) obj. -10.578 iterations 8
Cbc0038I Pass  11: suminf.    0.18461 (2) obj. -10.578 iterations 3
Cbc0038I Pass  12: suminf.    1.09777 (3) obj. -10.578 iterations 5
Cbc0038I Pass  13: suminf.    1.41908 (10) obj. -11.233 iterations 28
Cbc0038I Pass  14: suminf.    1.41908 (10) obj. -11.233 iterations 4
Cbc0038I Pass  15: suminf.    0.96523 (4) obj. -10.578 iterations 15
Cbc0038I Pass  16: suminf.    0.62371 (3) obj. -10.578 iterations 2
Cbc0038I Pass  17: suminf.    0.88405 (3) obj. -10.578 iterations 5
Cbc0038I Pass  18: suminf.    0.55877 (4) obj. -10.578 iterations 1
Cbc0038I Pass  19: suminf.    0.41032 (2) obj. -10.578 iterations 6
Cbc0038I Pass  20: suminf.    0.38986 (2) obj. -10.6394 iterations 3
Cbc0038I Pass  21: suminf.    0.41032 (2) obj. -10.578 iterations 4
Cbc0038I Pass  22: suminf.    1.02079 (10) obj. -10.578 iterations 36
Cbc0038I Pass  23: suminf.    0.90753 (9) obj. -11.2837 iterations 7
Cbc0038I Pass  24: suminf.    0.77087 (5) obj. -10.578 iterations 16
Cbc0038I Pass  25: suminf.    0.77423 (5) obj. -10.578 iterations 1
Cbc0038I Pass  26: suminf.    1.18086 (4) obj. -10.578 iterations 9
Cbc0038I Pass  27: suminf.    0.81084 (4) obj. -11.6881 iterations 2
Cbc0038I Pass  28: suminf.    1.03477 (4) obj. -10.578 iterations 5
Cbc0038I Pass  29: suminf.    0.81435 (5) obj. -10.578 iterations 3
Cbc0038I Pass  30: suminf.    0.58109 (4) obj. -10.578 iterations 5
Cbc0038I Pass  31: suminf.    0.40598 (2) obj. -10.6904 iterations 5
Cbc0038I Pass  32: suminf.    0.44343 (2) obj. -10.578 iterations 3
Cbc0038I Pass  33: suminf.    1.13491 (9) obj. -10.578 iterations 26
Cbc0038I Rounding solution of -8.90132 is better than previous of -5.66105

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 49 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -8.90132 to -20.132 (0.08 seconds)
Cbc0038I Round again with cutoff of -27.0717
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.90584 (36) obj. -36.5358 iterations 0
Cbc0038I Pass  34: suminf.    1.90584 (36) obj. -36.5358 iterations 1
Cbc0038I Pass  35: suminf.    1.56689 (20) obj. -27.0717 iterations 33
Cbc0038I Pass  36: suminf.    1.56689 (20) obj. -27.0717 iterations 0
Cbc0038I Pass  37: suminf.    1.17300 (12) obj. -27.0717 iterations 26
Cbc0038I Pass  38: suminf.    1.17300 (12) obj. -27.0717 iterations 3
Cbc0038I Pass  39: suminf.    1.11765 (10) obj. -27.0717 iterations 12
Cbc0038I Pass  40: suminf.    1.11765 (10) obj. -27.0717 iterations 2
Cbc0038I Pass  41: suminf.    1.13211 (10) obj. -27.0717 iterations 4
Cbc0038I Pass  42: suminf.    1.13211 (10) obj. -27.0717 iterations 3
Cbc0038I Pass  43: suminf.    1.11765 (10) obj. -27.0717 iterations 5
Cbc0038I Pass  44: suminf.    2.59952 (16) obj. -27.0717 iterations 17
Cbc0038I Pass  45: suminf.    1.24225 (13) obj. -27.0717 iterations 9
Cbc0038I Pass  46: suminf.    1.23064 (13) obj. -27.1823 iterations 1
Cbc0038I Pass  47: suminf.    1.31978 (12) obj. -27.0717 iterations 18
Cbc0038I Pass  48: suminf.    1.31978 (12) obj. -27.0717 iterations 1
Cbc0038I Pass  49: suminf.    1.94944 (12) obj. -27.0717 iterations 13
Cbc0038I Pass  50: suminf.    1.94944 (12) obj. -27.0717 iterations 1
Cbc0038I Pass  51: suminf.    1.37937 (11) obj. -27.0717 iterations 6
Cbc0038I Pass  52: suminf.    1.27339 (11) obj. -27.0717 iterations 3
Cbc0038I Pass  53: suminf.    1.69245 (11) obj. -27.0717 iterations 2
Cbc0038I Pass  54: suminf.    1.69245 (11) obj. -27.0717 iterations 1
Cbc0038I Pass  55: suminf.    2.01319 (17) obj. -27.0717 iterations 18
Cbc0038I Pass  56: suminf.    1.97660 (17) obj. -27.0717 iterations 5
Cbc0038I Pass  57: suminf.    1.66168 (14) obj. -27.0717 iterations 19
Cbc0038I Pass  58: suminf.    1.26465 (11) obj. -27.2242 iterations 4
Cbc0038I Pass  59: suminf.    1.41716 (11) obj. -27.0717 iterations 5
Cbc0038I Pass  60: suminf.    1.93473 (18) obj. -27.0717 iterations 26
Cbc0038I Pass  61: suminf.    1.78209 (17) obj. -27.0717 iterations 6
Cbc0038I Pass  62: suminf.    2.28799 (14) obj. -27.0717 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -20.132 - took 0.08 seconds
Cbc0012I Integer solution of -20.132028 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 106 rows 120 columns, reduced to 24 rows 30 columns
Cbc0031I 62 added rows had average density of 25.241935
Cbc0013I At root node, 62 cuts changed objective from -54.830152 to -25.045989 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10695 row cuts average 5.2 elements, 1 column cuts (1 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1424 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 741 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1215 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 333 row cuts average 56.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 193 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.625 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.132028 best solution, best possible -25.045989 (2.27 seconds)
Cbc0012I Integer solution of -20.826601 found by DiveCoefficient after 4535 iterations and 2 nodes (2.50 seconds)
Cbc0012I Integer solution of -21.18465 found by DiveCoefficient after 4696 iterations and 4 nodes (2.77 seconds)
Cbc0010I After 6 nodes, 7 on tree, -21.18465 best solution, best possible -25.045989 (3.05 seconds)
Cbc0012I Integer solution of -21.959327 found by rounding after 5211 iterations and 16 nodes (3.31 seconds)
Cbc0016I Integer solution of -22.696745 found by strong branching after 5219 iterations and 18 nodes (3.33 seconds)
Cbc0001I Search completed - best objective -22.696745, took 5779 iterations and 28 nodes (3.40 seconds)
Cbc0032I Strong branching done 424 times (9109 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 13, 31 variables fixed on reduced cost
Total time (CPU seconds):       2.52   (Wallclock seconds):       3.42

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 3.43826e-06 - average 2.52813e-08, 10 fixed columns
Coin0506I Presolve 117 (-19) rows, 66 (-10) columns and 358 (-58) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.7411268 - largest nonzero change 0 ( 0%) - largest zero change 1.8429708e-05
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Coin0511I After Postsolve, objective 43.843772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Clp0000I Optimal - objective value 43.843772
Coin0511I After Postsolve, objective 43.843772, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.84377199 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 10.0701
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.37568 iterations 51
Cbc0038I Solution found of -2.37568
Cbc0038I Relaxing continuous gives -2.37568
Cbc0038I Rounding solution of -9.07922 is better than previous of -2.37568

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 74 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -9.07922 to -22.5793 (0.05 seconds)
Cbc0038I Round again with cutoff of -24.7059
Cbc0038I Pass   2: suminf.    2.79206 (9) obj. -24.7059 iterations 12
Cbc0038I Pass   3: suminf.    2.79206 (9) obj. -24.7059 iterations 0
Cbc0038I Pass   4: suminf.    2.17555 (6) obj. -24.7059 iterations 9
Cbc0038I Pass   5: suminf.    1.45497 (6) obj. -24.7059 iterations 6
Cbc0038I Pass   6: suminf.    1.73094 (5) obj. -24.7059 iterations 11
Cbc0038I Pass   7: suminf.    1.25034 (4) obj. -24.7059 iterations 5
Cbc0038I Pass   8: suminf.    1.15908 (3) obj. -24.7059 iterations 2
Cbc0038I Pass   9: suminf.    1.38224 (4) obj. -24.7059 iterations 4
Cbc0038I Pass  10: suminf.    1.38634 (4) obj. -24.7059 iterations 4
Cbc0038I Pass  11: suminf.    1.67639 (5) obj. -24.7059 iterations 19
Cbc0038I Pass  12: suminf.    1.00795 (3) obj. -24.7059 iterations 10
Cbc0038I Pass  13: suminf.    0.85848 (3) obj. -24.7059 iterations 2
Cbc0038I Pass  14: suminf.    0.64816 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  15: suminf.    0.40880 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  16: suminf.    1.13657 (4) obj. -24.7059 iterations 3
Cbc0038I Pass  17: suminf.    0.71069 (3) obj. -24.7059 iterations 6
Cbc0038I Pass  18: suminf.    0.71069 (3) obj. -24.7059 iterations 0
Cbc0038I Pass  19: suminf.    1.45095 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  20: suminf.    1.64021 (7) obj. -24.7059 iterations 21
Cbc0038I Pass  21: suminf.    1.36967 (5) obj. -24.7059 iterations 6
Cbc0038I Pass  22: suminf.    1.15018 (3) obj. -24.7059 iterations 11
Cbc0038I Pass  23: suminf.    0.37989 (2) obj. -24.7059 iterations 2
Cbc0038I Pass  24: suminf.    0.92694 (2) obj. -24.7059 iterations 1
Cbc0038I Pass  25: suminf.    4.39991 (12) obj. -24.7059 iterations 22
Cbc0038I Pass  26: suminf.    1.75588 (7) obj. -24.7059 iterations 15
Cbc0038I Pass  27: suminf.    1.51459 (4) obj. -24.7059 iterations 8
Cbc0038I Pass  28: suminf.    1.12376 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  29: suminf.    0.74869 (3) obj. -24.7059 iterations 3
Cbc0038I Pass  30: suminf.    1.42954 (3) obj. -24.7059 iterations 1
Cbc0038I Pass  31: suminf.    2.36726 (8) obj. -24.7059 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 84 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -22.5793 to -22.6967 (0.11 seconds)
Cbc0038I Round again with cutoff of -28.5334
Cbc0038I Pass  31: suminf.    3.51887 (16) obj. -28.5334 iterations 7
Cbc0038I Pass  32: suminf.    3.51887 (16) obj. -28.5334 iterations 0
Cbc0038I Pass  33: suminf.    2.38471 (7) obj. -28.5334 iterations 19
Cbc0038I Pass  34: suminf.    2.07406 (7) obj. -28.5334 iterations 3
Cbc0038I Pass  35: suminf.    1.98241 (6) obj. -28.5334 iterations 7
Cbc0038I Pass  36: suminf.    1.44004 (5) obj. -28.5334 iterations 3
Cbc0038I Pass  37: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  38: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  39: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  40: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  41: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  42: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  43: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  44: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  45: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  46: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  47: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  48: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  49: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  50: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  51: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  52: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  53: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  54: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  55: suminf.    1.44004 (5) obj. -28.5334 iterations 1
Cbc0038I Pass  56: suminf.    1.91175 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  57: suminf.    1.33427 (5) obj. -28.5334 iterations 2
Cbc0038I Pass  58: suminf.    1.33427 (5) obj. -28.5334 iterations 0
Cbc0038I Pass  59: suminf.    1.46528 (5) obj. -28.5334 iterations 4
Cbc0038I Pass  60: suminf.    1.44004 (5) obj. -28.5334 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 80 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -22.6967 - took 0.14 seconds
Cbc0012I Integer solution of -22.696745 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 75 rows 45 columns
Cbc0031I 26 added rows had average density of 39
Cbc0013I At root node, 26 cuts changed objective from -43.843772 to -35.801596 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13303 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2314 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 61.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.696745 best solution, best possible -35.801596 (0.89 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 58 rows 36 columns
Cbc0001I Search completed - best objective -22.696745, took 9427 iterations and 58 nodes (1.27 seconds)
Cbc0032I Strong branching done 832 times (13402 iterations), fathomed 5 nodes and fixed 5 variables
Cbc0035I Maximum depth 22, 123 variables fixed on reduced cost
Total time (CPU seconds):       1.25   (Wallclock seconds):       1.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 120 (-33) columns and 2171 (-1133) elements
Clp1000I sum of infeasibilities 1.39924e-07 - average 1.32004e-09, 20 fixed columns
Coin0506I Presolve 90 (-16) rows, 99 (-21) columns and 1525 (-646) elements
Clp0006I 0  Obj 51.636265 Dual inf 3.6667921 (97)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 2.0024143 - largest nonzero change 1.4490516e-05 ( 0.0010393299%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 59.999041
Clp0000I Optimal - objective value 59.999041
Coin0511I After Postsolve, objective 59.999041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.999041
Clp0000I Optimal - objective value 59.999041
Clp0000I Optimal - objective value 59.999041
Clp0000I Optimal - objective value 59.999041
Coin0511I After Postsolve, objective 59.999041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.99904109 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 120 columns (120 integer (120 of which binary)) and 2173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.050%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 6.46049
Cbc0038I Pass   1: suminf.    1.90584 (36) obj. -36.5358 iterations 15
Cbc0038I Pass   2: suminf.    1.90584 (36) obj. -36.5358 iterations 1
Cbc0038I Pass   3: suminf.    0.37866 (11) obj. -3.67644 iterations 25
Cbc0038I Solution found of 7.90323
Cbc0038I Rounding solution of -4.20146 is better than previous of 7.90323

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -4.20146 to -5.66105 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.578
Cbc0038I Pass   4: suminf.    1.90584 (36) obj. -36.5358 iterations 0
Cbc0038I Pass   5: suminf.    1.90584 (36) obj. -36.5358 iterations 1
Cbc0038I Pass   6: suminf.    0.80861 (19) obj. -15.0409 iterations 17
Cbc0038I Pass   7: suminf.    0.66435 (3) obj. -10.578 iterations 28
Cbc0038I Pass   8: suminf.    0.66435 (3) obj. -10.578 iterations 0
Cbc0038I Pass   9: suminf.    0.93595 (3) obj. -11.0635 iterations 6
Cbc0038I Pass  10: suminf.    0.42188 (2) obj. -10.578 iterations 8
Cbc0038I Pass  11: suminf.    0.18461 (2) obj. -10.578 iterations 3
Cbc0038I Pass  12: suminf.    1.09777 (3) obj. -10.578 iterations 5
Cbc0038I Pass  13: suminf.    1.41908 (10) obj. -11.233 iterations 28
Cbc0038I Pass  14: suminf.    1.41908 (10) obj. -11.233 iterations 4
Cbc0038I Pass  15: suminf.    0.96523 (4) obj. -10.578 iterations 15
Cbc0038I Pass  16: suminf.    0.62371 (3) obj. -10.578 iterations 2
Cbc0038I Pass  17: suminf.    0.88405 (3) obj. -10.578 iterations 5
Cbc0038I Pass  18: suminf.    0.55877 (4) obj. -10.578 iterations 1
Cbc0038I Pass  19: suminf.    0.41032 (2) obj. -10.578 iterations 6
Cbc0038I Pass  20: suminf.    0.38986 (2) obj. -10.6394 iterations 3
Cbc0038I Pass  21: suminf.    0.41032 (2) obj. -10.578 iterations 4
Cbc0038I Pass  22: suminf.    1.02079 (10) obj. -10.578 iterations 36
Cbc0038I Pass  23: suminf.    0.90753 (9) obj. -11.2837 iterations 7
Cbc0038I Pass  24: suminf.    0.77087 (5) obj. -10.578 iterations 16
Cbc0038I Pass  25: suminf.    0.77423 (5) obj. -10.578 iterations 1
Cbc0038I Pass  26: suminf.    1.18086 (4) obj. -10.578 iterations 9
Cbc0038I Pass  27: suminf.    0.81084 (4) obj. -11.6881 iterations 2
Cbc0038I Pass  28: suminf.    1.03477 (4) obj. -10.578 iterations 5
Cbc0038I Pass  29: suminf.    0.81435 (5) obj. -10.578 iterations 3
Cbc0038I Pass  30: suminf.    0.58109 (4) obj. -10.578 iterations 5
Cbc0038I Pass  31: suminf.    0.40598 (2) obj. -10.6904 iterations 5
Cbc0038I Pass  32: suminf.    0.44343 (2) obj. -10.578 iterations 3
Cbc0038I Pass  33: suminf.    1.13491 (9) obj. -10.578 iterations 26
Cbc0038I Rounding solution of -8.90132 is better than previous of -5.66105

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 120 columns, reduced to 49 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -8.90132 to -20.132 (0.07 seconds)
Cbc0038I Round again with cutoff of -27.0717
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.90584 (36) obj. -36.5358 iterations 0
Cbc0038I Pass  34: suminf.    1.90584 (36) obj. -36.5358 iterations 1
Cbc0038I Pass  35: suminf.    1.56689 (20) obj. -27.0717 iterations 33
Cbc0038I Pass  36: suminf.    1.56689 (20) obj. -27.0717 iterations 0
Cbc0038I Pass  37: suminf.    1.17300 (12) obj. -27.0717 iterations 26
Cbc0038I Pass  38: suminf.    1.17300 (12) obj. -27.0717 iterations 3
Cbc0038I Pass  39: suminf.    1.11765 (10) obj. -27.0717 iterations 12
Cbc0038I Pass  40: suminf.    1.11765 (10) obj. -27.0717 iterations 2
Cbc0038I Pass  41: suminf.    1.13211 (10) obj. -27.0717 iterations 4
Cbc0038I Pass  42: suminf.    1.13211 (10) obj. -27.0717 iterations 3
Cbc0038I Pass  43: suminf.    1.11765 (10) obj. -27.0717 iterations 5
Cbc0038I Pass  44: suminf.    2.59952 (16) obj. -27.0717 iterations 17
Cbc0038I Pass  45: suminf.    1.24225 (13) obj. -27.0717 iterations 9
Cbc0038I Pass  46: suminf.    1.23064 (13) obj. -27.1823 iterations 1
Cbc0038I Pass  47: suminf.    1.31978 (12) obj. -27.0717 iterations 18
Cbc0038I Pass  48: suminf.    1.31978 (12) obj. -27.0717 iterations 1
Cbc0038I Pass  49: suminf.    1.94944 (12) obj. -27.0717 iterations 13
Cbc0038I Pass  50: suminf.    1.94944 (12) obj. -27.0717 iterations 1
Cbc0038I Pass  51: suminf.    1.37937 (11) obj. -27.0717 iterations 6
Cbc0038I Pass  52: suminf.    1.27339 (11) obj. -27.0717 iterations 3
Cbc0038I Pass  53: suminf.    1.69245 (11) obj. -27.0717 iterations 2
Cbc0038I Pass  54: suminf.    1.69245 (11) obj. -27.0717 iterations 1
Cbc0038I Pass  55: suminf.    2.01319 (17) obj. -27.0717 iterations 18
Cbc0038I Pass  56: suminf.    1.97660 (17) obj. -27.0717 iterations 5
Cbc0038I Pass  57: suminf.    1.66168 (14) obj. -27.0717 iterations 19
Cbc0038I Pass  58: suminf.    1.26465 (11) obj. -27.2242 iterations 4
Cbc0038I Pass  59: suminf.    1.41716 (11) obj. -27.0717 iterations 5
Cbc0038I Pass  60: suminf.    1.93473 (18) obj. -27.0717 iterations 26
Cbc0038I Pass  61: suminf.    1.78209 (17) obj. -27.0717 iterations 6
Cbc0038I Pass  62: suminf.    2.28799 (14) obj. -27.0717 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -20.132 - took 0.08 seconds
Cbc0012I Integer solution of -20.132028 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 106 rows 120 columns, reduced to 24 rows 30 columns
Cbc0031I 62 added rows had average density of 25.241935
Cbc0013I At root node, 62 cuts changed objective from -54.830152 to -25.045989 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10695 row cuts average 5.2 elements, 1 column cuts (1 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1424 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 741 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1215 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 333 row cuts average 56.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 193 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.622 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.132028 best solution, best possible -25.045989 (2.26 seconds)
Cbc0012I Integer solution of -20.826601 found by DiveCoefficient after 4535 iterations and 2 nodes (2.49 seconds)
Cbc0012I Integer solution of -21.18465 found by DiveCoefficient after 4696 iterations and 4 nodes (2.77 seconds)
Cbc0010I After 6 nodes, 7 on tree, -21.18465 best solution, best possible -25.045989 (3.05 seconds)
Cbc0012I Integer solution of -21.959327 found by rounding after 5211 iterations and 16 nodes (3.30 seconds)
Cbc0016I Integer solution of -22.696745 found by strong branching after 5219 iterations and 18 nodes (3.33 seconds)
Cbc0001I Search completed - best objective -22.696745, took 5779 iterations and 28 nodes (3.40 seconds)
Cbc0032I Strong branching done 424 times (9109 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 13, 31 variables fixed on reduced cost
Total time (CPU seconds):       2.48   (Wallclock seconds):       3.42

