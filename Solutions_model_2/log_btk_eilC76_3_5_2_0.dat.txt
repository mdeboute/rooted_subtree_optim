Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 4.03087e-05 - average 3.077e-07, 16 fixed columns
Coin0506I Presolve 97 (-34) rows, 57 (-17) columns and 300 (-102) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Coin0511I After Postsolve, objective 84.057075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Coin0511I After Postsolve, objective 84.057075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.05707533 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.9363
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.45878 iterations 47
Cbc0038I Solution found of 1.45878
Cbc0038I Relaxing continuous gives 1.45878
Cbc0038I Rounding solution of -41.8138 is better than previous of 1.45878

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -41.8138 to -47.9718 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.5804
Cbc0038I Pass   2: suminf.    3.50742 (13) obj. -51.5804 iterations 21
Cbc0038I Pass   3: suminf.    3.34566 (13) obj. -51.5804 iterations 2
Cbc0038I Pass   4: suminf.    1.34188 (4) obj. -51.5804 iterations 22
Cbc0038I Pass   5: suminf.    1.28377 (5) obj. -51.5804 iterations 1
Cbc0038I Pass   6: suminf.    0.97768 (5) obj. -51.5804 iterations 9
Cbc0038I Pass   7: suminf.    1.63860 (5) obj. -51.5804 iterations 4
Cbc0038I Pass   8: suminf.    1.17068 (7) obj. -51.5804 iterations 7
Cbc0038I Pass   9: suminf.    1.17068 (7) obj. -51.5804 iterations 0
Cbc0038I Pass  10: suminf.    1.25880 (5) obj. -51.5804 iterations 10
Cbc0038I Pass  11: suminf.    1.84190 (5) obj. -51.5804 iterations 8
Cbc0038I Pass  12: suminf.    1.20981 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  13: suminf.    1.19677 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  14: suminf.    1.13099 (4) obj. -51.5804 iterations 1
Cbc0038I Pass  15: suminf.    1.57125 (5) obj. -51.5804 iterations 11
Cbc0038I Pass  16: suminf.    1.44132 (4) obj. -51.5804 iterations 9
Cbc0038I Pass  17: suminf.    0.99960 (3) obj. -51.5804 iterations 7
Cbc0038I Pass  18: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  19: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  20: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  21: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  22: suminf.    0.99960 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  23: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  24: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  25: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  26: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  27: suminf.    0.99960 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  28: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  29: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  30: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  31: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -47.9718 - took 0.07 seconds
Cbc0012I Integer solution of -47.971757 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 55 rows 32 columns
Cbc0012I Integer solution of -49.180167 found by RINS after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 21 added rows had average density of 43.285714
Cbc0013I At root node, 21 cuts changed objective from -84.057075 to -74.515582 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6296 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1225 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 72.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 28 nodes, 1 on tree, -49.180167 best solution, best possible -74.51376 (0.67 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 2 rows 5 columns
Cbc0001I Search completed - best objective -49.18016700000001, took 7397 iterations and 92 nodes (0.81 seconds)
Cbc0032I Strong branching done 954 times (9906 iterations), fathomed 9 nodes and fixed 77 variables
Cbc0035I Maximum depth 13, 442 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 117 (-35) columns and 1994 (-1309) elements
Clp1000I sum of infeasibilities 1.28944e-07 - average 1.26415e-09, 26 fixed columns
Coin0506I Presolve 79 (-23) rows, 91 (-26) columns and 1202 (-792) elements
Clp0006I 0  Obj 87.716151 Dual inf 7.5405585 (90)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.2223069 - largest nonzero change 2.9462423e-05 ( 0.0021869008%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 104.6363
Clp0000I Optimal - objective value 104.6363
Coin0511I After Postsolve, objective 104.6363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 104.6363
Clp0000I Optimal - objective value 104.6363
Clp0000I Optimal - objective value 104.6363
Clp0000I Optimal - objective value 104.6363
Coin0511I After Postsolve, objective 104.6363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.636303 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 119 columns (119 integer (119 of which binary)) and 2015 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.95464
Cbc0038I Pass   1: suminf.    2.27549 (30) obj. -49.7996 iterations 15
Cbc0038I Pass   2: suminf.    2.27549 (30) obj. -49.7996 iterations 0
Cbc0038I Pass   3: suminf.    0.10819 (2) obj. -13.8363 iterations 28
Cbc0038I Solution found of -11.9445
Cbc0038I Rounding solution of -29.1939 is better than previous of -11.9445

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -29.1939 to -42.689 (0.05 seconds)
Cbc0038I Round again with cutoff of -47.2604
Cbc0038I Pass   4: suminf.    2.27549 (30) obj. -49.7996 iterations 0
Cbc0038I Pass   5: suminf.    2.27549 (30) obj. -49.7996 iterations 0
Cbc0038I Pass   6: suminf.    1.90840 (18) obj. -47.2604 iterations 19
Cbc0038I Pass   7: suminf.    1.90840 (18) obj. -47.2604 iterations 0
Cbc0038I Pass   8: suminf.    1.06564 (6) obj. -47.2604 iterations 26
Cbc0038I Pass   9: suminf.    0.84999 (5) obj. -47.2604 iterations 2
Cbc0038I Pass  10: suminf.    0.97834 (4) obj. -47.2604 iterations 14
Cbc0038I Pass  11: suminf.    0.34008 (7) obj. -47.2604 iterations 9
Cbc0038I Pass  12: suminf.    1.32364 (4) obj. -47.2604 iterations 14
Cbc0038I Pass  13: suminf.    0.68309 (3) obj. -47.2604 iterations 4
Cbc0038I Pass  14: suminf.    0.68309 (3) obj. -47.2604 iterations 2
Cbc0038I Pass  15: suminf.    0.70742 (4) obj. -47.2604 iterations 5
Cbc0038I Pass  16: suminf.    0.70742 (4) obj. -47.2604 iterations 0
Cbc0038I Pass  17: suminf.    1.09954 (3) obj. -47.2604 iterations 7
Cbc0038I Pass  18: suminf.    1.06451 (3) obj. -47.2604 iterations 2
Cbc0038I Pass  19: suminf.    0.41355 (3) obj. -47.2604 iterations 7
Cbc0038I Pass  20: suminf.    0.38799 (4) obj. -47.2604 iterations 5
Cbc0038I Pass  21: suminf.    0.55827 (5) obj. -47.2604 iterations 8
Cbc0038I Pass  22: suminf.    0.55827 (5) obj. -47.2604 iterations 0
Cbc0038I Pass  23: suminf.    0.51073 (3) obj. -47.2604 iterations 8
Cbc0038I Pass  24: suminf.    0.46554 (3) obj. -47.2604 iterations 4
Cbc0038I Pass  25: suminf.    1.07263 (4) obj. -47.2604 iterations 3
Cbc0038I Pass  26: suminf.    0.34433 (2) obj. -47.2604 iterations 2
Cbc0038I Pass  27: suminf.    0.18097 (3) obj. -49.3164 iterations 3
Cbc0038I Pass  28: suminf.    0.46554 (3) obj. -47.2604 iterations 9
Cbc0038I Pass  29: suminf.    0.46554 (3) obj. -47.2604 iterations 0
Cbc0038I Pass  30: suminf.    1.07263 (4) obj. -47.2604 iterations 3
Cbc0038I Pass  31: suminf.    0.34433 (2) obj. -47.2604 iterations 2
Cbc0038I Pass  32: suminf.    0.18097 (3) obj. -49.3164 iterations 3
Cbc0038I Pass  33: suminf.    0.46554 (3) obj. -47.2604 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 13 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -42.689 to -43.5611 (0.06 seconds)
Cbc0038I Round again with cutoff of -55.4888
Cbc0038I Pass  33: suminf.    3.13869 (33) obj. -55.4888 iterations 1
Cbc0038I Pass  34: suminf.    2.74185 (31) obj. -55.4888 iterations 2
Cbc0038I Pass  35: suminf.    2.28919 (30) obj. -60.3147 iterations 3
Cbc0038I Pass  36: suminf.    1.99942 (18) obj. -55.4888 iterations 26
Cbc0038I Pass  37: suminf.    1.99942 (18) obj. -55.4888 iterations 0
Cbc0038I Pass  38: suminf.    1.79316 (8) obj. -55.4888 iterations 21
Cbc0038I Pass  39: suminf.    1.26063 (7) obj. -55.4888 iterations 7
Cbc0038I Pass  40: suminf.    1.01927 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  41: suminf.    1.46055 (6) obj. -55.4888 iterations 14
Cbc0038I Pass  42: suminf.    1.46055 (6) obj. -55.4888 iterations 3
Cbc0038I Pass  43: suminf.    1.40552 (6) obj. -55.4888 iterations 7
Cbc0038I Pass  44: suminf.    1.01325 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  45: suminf.    1.00795 (6) obj. -55.4888 iterations 9
Cbc0038I Pass  46: suminf.    1.00528 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  47: suminf.    1.15417 (5) obj. -55.4888 iterations 17
Cbc0038I Pass  48: suminf.    2.10671 (15) obj. -55.4888 iterations 30
Cbc0038I Pass  49: suminf.    1.67665 (13) obj. -57.8485 iterations 8
Cbc0038I Pass  50: suminf.    1.51632 (6) obj. -55.4888 iterations 19
Cbc0038I Pass  51: suminf.    1.46055 (6) obj. -55.4888 iterations 4
Cbc0038I Pass  52: suminf.    1.40552 (6) obj. -55.4888 iterations 7
Cbc0038I Pass  53: suminf.    1.01325 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  54: suminf.    1.00795 (6) obj. -55.4888 iterations 7
Cbc0038I Pass  55: suminf.    1.00528 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  56: suminf.    1.15417 (5) obj. -55.4888 iterations 13
Cbc0038I Pass  57: suminf.    2.78379 (11) obj. -55.4888 iterations 16
Cbc0038I Pass  58: suminf.    2.11408 (9) obj. -55.4888 iterations 10
Cbc0038I Pass  59: suminf.    1.54750 (6) obj. -55.4888 iterations 13
Cbc0038I Pass  60: suminf.    1.53080 (6) obj. -55.4888 iterations 6
Cbc0038I Pass  61: suminf.    1.17107 (6) obj. -55.4888 iterations 8
Cbc0038I Pass  62: suminf.    1.16044 (7) obj. -55.4888 iterations 5
Cbc0038I Rounding solution of -45.0396 is better than previous of -43.5611

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 13 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -65.3628
Cbc0038I Pass  62: suminf.    3.61267 (37) obj. -65.3628 iterations 1
Cbc0038I Pass  63: suminf.    3.52846 (33) obj. -65.3628 iterations 2
Cbc0038I Pass  64: suminf.    2.18581 (23) obj. -66.0861 iterations 12
Cbc0038I Pass  65: suminf.    2.60898 (18) obj. -65.3628 iterations 18
Cbc0038I Pass  66: suminf.    2.60898 (18) obj. -65.3628 iterations 0
Cbc0038I Pass  67: suminf.    2.25594 (13) obj. -65.3628 iterations 29
Cbc0038I Pass  68: suminf.    2.06554 (15) obj. -65.3628 iterations 4
Cbc0038I Pass  69: suminf.    2.23893 (13) obj. -65.3628 iterations 16
Cbc0038I Pass  70: suminf.    2.23893 (13) obj. -65.3628 iterations 0
Cbc0038I Pass  71: suminf.    2.25860 (13) obj. -65.3628 iterations 2
Cbc0038I Pass  72: suminf.    2.25860 (13) obj. -65.3628 iterations 2
Cbc0038I Pass  73: suminf.    2.23893 (13) obj. -65.3628 iterations 11
Cbc0038I Pass  74: suminf.    2.46703 (15) obj. -65.3628 iterations 19
Cbc0038I Pass  75: suminf.    2.41977 (15) obj. -65.3628 iterations 6
Cbc0038I Pass  76: suminf.    2.58156 (14) obj. -65.3628 iterations 20
Cbc0038I Pass  77: suminf.    2.58156 (14) obj. -65.3628 iterations 0
Cbc0038I Pass  78: suminf.    2.57850 (14) obj. -65.3628 iterations 5
Cbc0038I Pass  79: suminf.    2.57996 (14) obj. -65.3628 iterations 1
Cbc0038I Pass  80: suminf.    2.58156 (14) obj. -65.3628 iterations 4
Cbc0038I Pass  81: suminf.    3.63350 (16) obj. -65.3628 iterations 11
Cbc0038I Pass  82: suminf.    3.47755 (16) obj. -65.3628 iterations 5
Cbc0038I Pass  83: suminf.    2.86000 (13) obj. -65.3628 iterations 21
Cbc0038I Pass  84: suminf.    2.86000 (13) obj. -65.3628 iterations 0
Cbc0038I Pass  85: suminf.    2.79107 (13) obj. -65.3628 iterations 7
Cbc0038I Pass  86: suminf.    2.79107 (13) obj. -65.3628 iterations 3
Cbc0038I Pass  87: suminf.    2.86000 (13) obj. -65.3628 iterations 7
Cbc0038I Pass  88: suminf.    3.51106 (17) obj. -65.3628 iterations 19
Cbc0038I Pass  89: suminf.    3.51106 (17) obj. -65.3628 iterations 6
Cbc0038I Pass  90: suminf.    2.76232 (13) obj. -65.3628 iterations 18
Cbc0038I Pass  91: suminf.    2.35290 (14) obj. -65.3628 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -45.0396 - took 0.10 seconds
Cbc0012I Integer solution of -45.03959 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 2 rows 4 columns
Cbc0031I 56 added rows had average density of 42.571429
Cbc0013I At root node, 56 cuts changed objective from -88.402236 to -58.454174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8972 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1081 row cuts average 109.5 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 402 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 821 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 343 row cuts average 70.3 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -45.03959 best solution, best possible -58.454174 (2.36 seconds)
Cbc0012I Integer solution of -48.19335 found by DiveCoefficient after 4027 iterations and 1 nodes (2.36 seconds)
Cbc0004I Integer solution of -48.35733 found after 4240 iterations and 21 nodes (2.40 seconds)
Cbc0012I Integer solution of -49.0894 found by rounding after 4293 iterations and 37 nodes (2.42 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 52 rows 61 columns
Cbc0010I After 51 nodes, 6 on tree, -49.0894 best solution, best possible -58.100132 (3.06 seconds)
Cbc0012I Integer solution of -49.180167 found by rounding after 5670 iterations and 74 nodes (3.18 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 42 rows 47 columns
Cbc0010I After 141 nodes, 3 on tree, -49.180167 best solution, best possible -58.100132 (3.79 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 49 rows 58 columns
Cbc0010I After 200 nodes, 14 on tree, -49.180167 best solution, best possible -58.088806 (4.49 seconds)
Cbc0010I After 363 nodes, 6 on tree, -49.180167 best solution, best possible -58.088806 (5.19 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 52 rows 61 columns
Cbc0010I After 466 nodes, 5 on tree, -49.180167 best solution, best possible -58.088806 (5.89 seconds)
Cbc0010I After 531 nodes, 1 on tree, -49.180167 best solution, best possible -52.885467 (6.59 seconds)
Cbc0001I Search completed - best objective -49.18016700000001, took 36462 iterations and 2004 nodes (6.61 seconds)
Cbc0032I Strong branching done 4860 times (67847 iterations), fathomed 47 nodes and fixed 67 variables
Cbc0041I Maximum depth 24, 1398 variables fixed on reduced cost (complete fathoming 11 times, 1470 nodes taking 16126 iterations)
Total time (CPU seconds):       5.79   (Wallclock seconds):       6.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 74 (-4) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 4.03087e-05 - average 3.077e-07, 16 fixed columns
Coin0506I Presolve 97 (-34) rows, 57 (-17) columns and 300 (-102) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Coin0511I After Postsolve, objective 84.057075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Clp0000I Optimal - objective value 84.057075
Coin0511I After Postsolve, objective 84.057075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.05707533 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 74 columns (73 integer (73 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.9363
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.45878 iterations 47
Cbc0038I Solution found of 1.45878
Cbc0038I Relaxing continuous gives 1.45878
Cbc0038I Rounding solution of -41.8138 is better than previous of 1.45878

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 55 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -41.8138 to -47.9718 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.5804
Cbc0038I Pass   2: suminf.    3.50742 (13) obj. -51.5804 iterations 21
Cbc0038I Pass   3: suminf.    3.34566 (13) obj. -51.5804 iterations 2
Cbc0038I Pass   4: suminf.    1.34188 (4) obj. -51.5804 iterations 22
Cbc0038I Pass   5: suminf.    1.28377 (5) obj. -51.5804 iterations 1
Cbc0038I Pass   6: suminf.    0.97768 (5) obj. -51.5804 iterations 9
Cbc0038I Pass   7: suminf.    1.63860 (5) obj. -51.5804 iterations 4
Cbc0038I Pass   8: suminf.    1.17068 (7) obj. -51.5804 iterations 7
Cbc0038I Pass   9: suminf.    1.17068 (7) obj. -51.5804 iterations 0
Cbc0038I Pass  10: suminf.    1.25880 (5) obj. -51.5804 iterations 10
Cbc0038I Pass  11: suminf.    1.84190 (5) obj. -51.5804 iterations 8
Cbc0038I Pass  12: suminf.    1.20981 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  13: suminf.    1.19677 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  14: suminf.    1.13099 (4) obj. -51.5804 iterations 1
Cbc0038I Pass  15: suminf.    1.57125 (5) obj. -51.5804 iterations 11
Cbc0038I Pass  16: suminf.    1.44132 (4) obj. -51.5804 iterations 9
Cbc0038I Pass  17: suminf.    0.99960 (3) obj. -51.5804 iterations 7
Cbc0038I Pass  18: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  19: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  20: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  21: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  22: suminf.    0.99960 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  23: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  24: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  25: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  26: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  27: suminf.    0.99960 (3) obj. -51.5804 iterations 2
Cbc0038I Pass  28: suminf.    0.95993 (3) obj. -51.5804 iterations 1
Cbc0038I Pass  29: suminf.    0.95993 (3) obj. -51.5804 iterations 0
Cbc0038I Pass  30: suminf.    1.15876 (3) obj. -51.5804 iterations 3
Cbc0038I Pass  31: suminf.    0.81052 (3) obj. -51.5804 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 74 columns, reduced to 66 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -47.9718 - took 0.08 seconds
Cbc0012I Integer solution of -47.971757 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 55 rows 32 columns
Cbc0012I Integer solution of -49.180167 found by RINS after 0 iterations and 0 nodes (0.14 seconds)
Cbc0031I 21 added rows had average density of 43.285714
Cbc0013I At root node, 21 cuts changed objective from -84.057075 to -74.515582 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6296 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1225 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 72.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 8 nodes, 5 on tree, -49.180167 best solution, best possible -74.515582 (0.67 seconds)
Cbc0038I Full problem 131 rows 74 columns, reduced to 2 rows 5 columns
Cbc0001I Search completed - best objective -49.18016700000001, took 7397 iterations and 92 nodes (0.89 seconds)
Cbc0032I Strong branching done 954 times (9906 iterations), fathomed 9 nodes and fixed 77 variables
Cbc0035I Maximum depth 13, 442 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.90

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 117 (-36) columns and 1994 (-1310) elements
Clp1000I sum of infeasibilities 1.28944e-07 - average 1.26415e-09, 26 fixed columns
Coin0506I Presolve 79 (-23) rows, 91 (-26) columns and 1202 (-792) elements
Clp0006I 0  Obj 87.716151 Dual inf 7.5405585 (90)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.2223069 - largest nonzero change 2.9462423e-05 ( 0.0021869008%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 104.6363
Clp0000I Optimal - objective value 104.6363
Coin0511I After Postsolve, objective 104.6363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 104.6363
Clp0000I Optimal - objective value 104.6363
Clp0000I Optimal - objective value 104.6363
Clp0000I Optimal - objective value 104.6363
Coin0511I After Postsolve, objective 104.6363, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.636303 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 119 columns (119 integer (119 of which binary)) and 2015 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.95464
Cbc0038I Pass   1: suminf.    2.27549 (30) obj. -49.7996 iterations 15
Cbc0038I Pass   2: suminf.    2.27549 (30) obj. -49.7996 iterations 0
Cbc0038I Pass   3: suminf.    0.10819 (2) obj. -13.8363 iterations 28
Cbc0038I Solution found of -11.9445
Cbc0038I Rounding solution of -29.1939 is better than previous of -11.9445

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -29.1939 to -42.689 (0.05 seconds)
Cbc0038I Round again with cutoff of -47.2604
Cbc0038I Pass   4: suminf.    2.27549 (30) obj. -49.7996 iterations 0
Cbc0038I Pass   5: suminf.    2.27549 (30) obj. -49.7996 iterations 0
Cbc0038I Pass   6: suminf.    1.90840 (18) obj. -47.2604 iterations 19
Cbc0038I Pass   7: suminf.    1.90840 (18) obj. -47.2604 iterations 0
Cbc0038I Pass   8: suminf.    1.06564 (6) obj. -47.2604 iterations 26
Cbc0038I Pass   9: suminf.    0.84999 (5) obj. -47.2604 iterations 2
Cbc0038I Pass  10: suminf.    0.97834 (4) obj. -47.2604 iterations 14
Cbc0038I Pass  11: suminf.    0.34008 (7) obj. -47.2604 iterations 9
Cbc0038I Pass  12: suminf.    1.32364 (4) obj. -47.2604 iterations 14
Cbc0038I Pass  13: suminf.    0.68309 (3) obj. -47.2604 iterations 4
Cbc0038I Pass  14: suminf.    0.68309 (3) obj. -47.2604 iterations 2
Cbc0038I Pass  15: suminf.    0.70742 (4) obj. -47.2604 iterations 5
Cbc0038I Pass  16: suminf.    0.70742 (4) obj. -47.2604 iterations 0
Cbc0038I Pass  17: suminf.    1.09954 (3) obj. -47.2604 iterations 7
Cbc0038I Pass  18: suminf.    1.06451 (3) obj. -47.2604 iterations 2
Cbc0038I Pass  19: suminf.    0.41355 (3) obj. -47.2604 iterations 7
Cbc0038I Pass  20: suminf.    0.38799 (4) obj. -47.2604 iterations 5
Cbc0038I Pass  21: suminf.    0.55827 (5) obj. -47.2604 iterations 8
Cbc0038I Pass  22: suminf.    0.55827 (5) obj. -47.2604 iterations 0
Cbc0038I Pass  23: suminf.    0.51073 (3) obj. -47.2604 iterations 8
Cbc0038I Pass  24: suminf.    0.46554 (3) obj. -47.2604 iterations 4
Cbc0038I Pass  25: suminf.    1.07263 (4) obj. -47.2604 iterations 3
Cbc0038I Pass  26: suminf.    0.34433 (2) obj. -47.2604 iterations 2
Cbc0038I Pass  27: suminf.    0.18097 (3) obj. -49.3164 iterations 3
Cbc0038I Pass  28: suminf.    0.46554 (3) obj. -47.2604 iterations 9
Cbc0038I Pass  29: suminf.    0.46554 (3) obj. -47.2604 iterations 0
Cbc0038I Pass  30: suminf.    1.07263 (4) obj. -47.2604 iterations 3
Cbc0038I Pass  31: suminf.    0.34433 (2) obj. -47.2604 iterations 2
Cbc0038I Pass  32: suminf.    0.18097 (3) obj. -49.3164 iterations 3
Cbc0038I Pass  33: suminf.    0.46554 (3) obj. -47.2604 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 13 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -42.689 to -43.5611 (0.07 seconds)
Cbc0038I Round again with cutoff of -55.4888
Cbc0038I Pass  33: suminf.    3.13869 (33) obj. -55.4888 iterations 1
Cbc0038I Pass  34: suminf.    2.74185 (31) obj. -55.4888 iterations 2
Cbc0038I Pass  35: suminf.    2.28919 (30) obj. -60.3147 iterations 3
Cbc0038I Pass  36: suminf.    1.99942 (18) obj. -55.4888 iterations 26
Cbc0038I Pass  37: suminf.    1.99942 (18) obj. -55.4888 iterations 0
Cbc0038I Pass  38: suminf.    1.79316 (8) obj. -55.4888 iterations 21
Cbc0038I Pass  39: suminf.    1.26063 (7) obj. -55.4888 iterations 7
Cbc0038I Pass  40: suminf.    1.01927 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  41: suminf.    1.46055 (6) obj. -55.4888 iterations 14
Cbc0038I Pass  42: suminf.    1.46055 (6) obj. -55.4888 iterations 3
Cbc0038I Pass  43: suminf.    1.40552 (6) obj. -55.4888 iterations 7
Cbc0038I Pass  44: suminf.    1.01325 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  45: suminf.    1.00795 (6) obj. -55.4888 iterations 9
Cbc0038I Pass  46: suminf.    1.00528 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  47: suminf.    1.15417 (5) obj. -55.4888 iterations 17
Cbc0038I Pass  48: suminf.    2.10671 (15) obj. -55.4888 iterations 30
Cbc0038I Pass  49: suminf.    1.67665 (13) obj. -57.8485 iterations 8
Cbc0038I Pass  50: suminf.    1.51632 (6) obj. -55.4888 iterations 19
Cbc0038I Pass  51: suminf.    1.46055 (6) obj. -55.4888 iterations 4
Cbc0038I Pass  52: suminf.    1.40552 (6) obj. -55.4888 iterations 7
Cbc0038I Pass  53: suminf.    1.01325 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  54: suminf.    1.00795 (6) obj. -55.4888 iterations 7
Cbc0038I Pass  55: suminf.    1.00528 (7) obj. -55.4888 iterations 3
Cbc0038I Pass  56: suminf.    1.15417 (5) obj. -55.4888 iterations 13
Cbc0038I Pass  57: suminf.    2.78379 (11) obj. -55.4888 iterations 16
Cbc0038I Pass  58: suminf.    2.11408 (9) obj. -55.4888 iterations 10
Cbc0038I Pass  59: suminf.    1.54750 (6) obj. -55.4888 iterations 13
Cbc0038I Pass  60: suminf.    1.53080 (6) obj. -55.4888 iterations 6
Cbc0038I Pass  61: suminf.    1.17107 (6) obj. -55.4888 iterations 8
Cbc0038I Pass  62: suminf.    1.16044 (7) obj. -55.4888 iterations 5
Cbc0038I Rounding solution of -45.0396 is better than previous of -43.5611

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 13 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -65.3628
Cbc0038I Pass  62: suminf.    3.61267 (37) obj. -65.3628 iterations 1
Cbc0038I Pass  63: suminf.    3.52846 (33) obj. -65.3628 iterations 2
Cbc0038I Pass  64: suminf.    2.18581 (23) obj. -66.0861 iterations 12
Cbc0038I Pass  65: suminf.    2.60898 (18) obj. -65.3628 iterations 18
Cbc0038I Pass  66: suminf.    2.60898 (18) obj. -65.3628 iterations 0
Cbc0038I Pass  67: suminf.    2.25594 (13) obj. -65.3628 iterations 29
Cbc0038I Pass  68: suminf.    2.06554 (15) obj. -65.3628 iterations 4
Cbc0038I Pass  69: suminf.    2.23893 (13) obj. -65.3628 iterations 16
Cbc0038I Pass  70: suminf.    2.23893 (13) obj. -65.3628 iterations 0
Cbc0038I Pass  71: suminf.    2.25860 (13) obj. -65.3628 iterations 2
Cbc0038I Pass  72: suminf.    2.25860 (13) obj. -65.3628 iterations 2
Cbc0038I Pass  73: suminf.    2.23893 (13) obj. -65.3628 iterations 11
Cbc0038I Pass  74: suminf.    2.46703 (15) obj. -65.3628 iterations 19
Cbc0038I Pass  75: suminf.    2.41977 (15) obj. -65.3628 iterations 6
Cbc0038I Pass  76: suminf.    2.58156 (14) obj. -65.3628 iterations 20
Cbc0038I Pass  77: suminf.    2.58156 (14) obj. -65.3628 iterations 0
Cbc0038I Pass  78: suminf.    2.57850 (14) obj. -65.3628 iterations 5
Cbc0038I Pass  79: suminf.    2.57996 (14) obj. -65.3628 iterations 1
Cbc0038I Pass  80: suminf.    2.58156 (14) obj. -65.3628 iterations 4
Cbc0038I Pass  81: suminf.    3.63350 (16) obj. -65.3628 iterations 11
Cbc0038I Pass  82: suminf.    3.47755 (16) obj. -65.3628 iterations 5
Cbc0038I Pass  83: suminf.    2.86000 (13) obj. -65.3628 iterations 21
Cbc0038I Pass  84: suminf.    2.86000 (13) obj. -65.3628 iterations 0
Cbc0038I Pass  85: suminf.    2.79107 (13) obj. -65.3628 iterations 7
Cbc0038I Pass  86: suminf.    2.79107 (13) obj. -65.3628 iterations 3
Cbc0038I Pass  87: suminf.    2.86000 (13) obj. -65.3628 iterations 7
Cbc0038I Pass  88: suminf.    3.51106 (17) obj. -65.3628 iterations 19
Cbc0038I Pass  89: suminf.    3.51106 (17) obj. -65.3628 iterations 6
Cbc0038I Pass  90: suminf.    2.76232 (13) obj. -65.3628 iterations 18
Cbc0038I Pass  91: suminf.    2.35290 (14) obj. -65.3628 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 119 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -45.0396 - took 0.10 seconds
Cbc0012I Integer solution of -45.03959 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 2 rows 4 columns
Cbc0031I 56 added rows had average density of 42.571429
Cbc0013I At root node, 56 cuts changed objective from -88.402236 to -58.454174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8972 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1081 row cuts average 109.5 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 402 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 821 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 343 row cuts average 70.3 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 47 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -45.03959 best solution, best possible -58.454174 (2.58 seconds)
Cbc0012I Integer solution of -48.19335 found by DiveCoefficient after 4027 iterations and 1 nodes (2.59 seconds)
Cbc0004I Integer solution of -48.35733 found after 4240 iterations and 21 nodes (2.63 seconds)
Cbc0012I Integer solution of -49.0894 found by rounding after 4293 iterations and 37 nodes (2.64 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 52 rows 61 columns
Cbc0010I After 50 nodes, 5 on tree, -49.0894 best solution, best possible -58.100132 (3.29 seconds)
Cbc0012I Integer solution of -49.180167 found by rounding after 5670 iterations and 74 nodes (3.44 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 42 rows 47 columns
Cbc0010I After 140 nodes, 3 on tree, -49.180167 best solution, best possible -58.100132 (4.01 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 49 rows 58 columns
Cbc0010I After 200 nodes, 14 on tree, -49.180167 best solution, best possible -58.088806 (4.81 seconds)
Cbc0010I After 360 nodes, 5 on tree, -49.180167 best solution, best possible -58.088806 (5.51 seconds)
Cbc0038I Full problem 104 rows 119 columns, reduced to 52 rows 61 columns
Cbc0010I After 452 nodes, 8 on tree, -49.180167 best solution, best possible -58.088806 (6.22 seconds)
Cbc0010I After 519 nodes, 3 on tree, -49.180167 best solution, best possible -52.885467 (6.92 seconds)
Cbc0001I Search completed - best objective -49.18016700000001, took 36462 iterations and 2004 nodes (7.00 seconds)
Cbc0032I Strong branching done 4860 times (67847 iterations), fathomed 47 nodes and fixed 67 variables
Cbc0041I Maximum depth 24, 1398 variables fixed on reduced cost (complete fathoming 11 times, 1470 nodes taking 16126 iterations)
Total time (CPU seconds):       6.06   (Wallclock seconds):       7.02

