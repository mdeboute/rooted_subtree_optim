Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 277 (-26) elements
Clp1000I sum of infeasibilities 1.66977e-05 - average 1.83491e-07, 4 fixed columns
Coin0506I Presolve 83 (-8) rows, 47 (-4) columns and 253 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 43.054094
Clp0000I Optimal - objective value 43.054094
Coin0511I After Postsolve, objective 43.054094, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.054094
Clp0000I Optimal - objective value 43.054094
Clp0000I Optimal - objective value 43.054094
Coin0511I After Postsolve, objective 43.054094, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.05409384 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 277 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 9.00331
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.81865 iterations 37
Cbc0038I Solution found of 4.81865
Cbc0038I Relaxing continuous gives 4.81865
Cbc0038I Rounding solution of 1.38562 is better than previous of 4.81865

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 1.38562 to -16.4322 (0.03 seconds)
Cbc0038I Round again with cutoff of -19.0945
Cbc0038I Pass   2: suminf.    3.00940 (11) obj. -19.0945 iterations 14
Cbc0038I Pass   3: suminf.    2.01008 (6) obj. -19.0945 iterations 13
Cbc0038I Pass   4: suminf.    1.33121 (5) obj. -19.0945 iterations 2
Cbc0038I Pass   5: suminf.    0.83430 (3) obj. -19.0945 iterations 7
Cbc0038I Pass   6: suminf.    0.83417 (3) obj. -19.0945 iterations 1
Cbc0038I Pass   7: suminf.    1.15553 (4) obj. -19.0945 iterations 6
Cbc0038I Pass   8: suminf.    2.00277 (13) obj. -19.0945 iterations 15
Cbc0038I Pass   9: suminf.    1.15960 (5) obj. -19.0945 iterations 11
Cbc0038I Pass  10: suminf.    0.80007 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  11: suminf.    1.48187 (6) obj. -19.0945 iterations 7
Cbc0038I Pass  12: suminf.    1.43744 (5) obj. -19.0945 iterations 1
Cbc0038I Pass  13: suminf.    1.73523 (4) obj. -19.0945 iterations 5
Cbc0038I Pass  14: suminf.    1.15443 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  15: suminf.    0.71456 (4) obj. -19.0945 iterations 1
Cbc0038I Pass  16: suminf.    1.48187 (6) obj. -19.0945 iterations 6
Cbc0038I Pass  17: suminf.    1.43744 (5) obj. -19.0945 iterations 1
Cbc0038I Pass  18: suminf.    1.73523 (4) obj. -19.0945 iterations 5
Cbc0038I Pass  19: suminf.    1.15443 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  20: suminf.    0.71456 (4) obj. -19.0945 iterations 1
Cbc0038I Pass  21: suminf.    1.48187 (6) obj. -19.0945 iterations 6
Cbc0038I Pass  22: suminf.    1.43744 (5) obj. -19.0945 iterations 1
Cbc0038I Pass  23: suminf.    1.73523 (4) obj. -19.0945 iterations 5
Cbc0038I Pass  24: suminf.    1.15443 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  25: suminf.    0.71456 (4) obj. -19.0945 iterations 1
Cbc0038I Pass  26: suminf.    1.48187 (6) obj. -19.0945 iterations 6
Cbc0038I Pass  27: suminf.    1.43744 (5) obj. -19.0945 iterations 1
Cbc0038I Pass  28: suminf.    1.73523 (4) obj. -19.0945 iterations 5
Cbc0038I Pass  29: suminf.    1.15443 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  30: suminf.    0.71456 (4) obj. -19.0945 iterations 1
Cbc0038I Pass  31: suminf.    1.48187 (6) obj. -19.0945 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -16.4322 - took 0.05 seconds
Cbc0012I Integer solution of -16.432226 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 58 rows 34 columns
Cbc0031I 23 added rows had average density of 34.565217
Cbc0013I At root node, 23 cuts changed objective from -43.054094 to -32.077272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8308 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1973 row cuts average 49.4 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 131 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 41.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0001I Search completed - best objective -16.43222590400001, took 6438 iterations and 22 nodes (0.56 seconds)
Cbc0032I Strong branching done 392 times (5004 iterations), fathomed 2 nodes and fixed 22 variables
Cbc0035I Maximum depth 5, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.55   (Wallclock seconds):       0.57

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-28) rows, 85 (-17) columns and 1081 (-497) elements
Clp1000I sum of infeasibilities 1.61067e-08 - average 2.1193e-10, 7 fixed columns
Coin0506I Presolve 69 (-7) rows, 78 (-7) columns and 910 (-171) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 4.42246 - largest nonzero change 1.9470026e-05 ( 0.0012247315%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 53.936873
Clp0000I Optimal - objective value 53.936873
Coin0511I After Postsolve, objective 53.936873, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.936873
Clp0000I Optimal - objective value 53.936873
Clp0000I Optimal - objective value 53.936873
Coin0511I After Postsolve, objective 53.936873, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.9368726 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 76 rows, 85 columns (85 integer (85 of which binary)) and 1083 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.832%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.59769
Cbc0038I Pass   1: suminf.    2.91149 (25) obj. -38.4702 iterations 16
Cbc0038I Pass   2: suminf.    2.91149 (25) obj. -38.4702 iterations 1
Cbc0038I Pass   3: suminf.    0.30861 (4) obj. -3.87096 iterations 21
Cbc0038I Solution found of 0.74351
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 85 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -3.52995
Cbc0038I Pass   4: suminf.    2.91149 (25) obj. -38.4702 iterations 0
Cbc0038I Pass   5: suminf.    2.91149 (25) obj. -38.4702 iterations 1
Cbc0038I Pass   6: suminf.    1.13977 (13) obj. -17.5175 iterations 12
Cbc0038I Pass   7: suminf.    0.46788 (2) obj. -3.52995 iterations 16
Cbc0038I Pass   8: suminf.    0.20000 (2) obj. -6.74399 iterations 2
Cbc0038I Pass   9: suminf.    0.18750 (1) obj. -6.56899 iterations 1
Cbc0038I Pass  10: suminf.    0.76980 (7) obj. -3.52995 iterations 27
Cbc0038I Pass  11: suminf.    0.46989 (5) obj. -3.52995 iterations 10
Cbc0038I Pass  12: suminf.    0.47121 (2) obj. -3.52995 iterations 8
Cbc0038I Pass  13: suminf.    0.47121 (2) obj. -3.52995 iterations 1
Cbc0038I Pass  14: suminf.    0.18046 (2) obj. -6.91322 iterations 2
Cbc0038I Pass  15: suminf.    0.16667 (1) obj. -6.72012 iterations 1
Cbc0038I Pass  16: suminf.    3.19006 (12) obj. -5.08136 iterations 19
Cbc0038I Pass  17: suminf.    0.65315 (9) obj. -3.52995 iterations 12
Cbc0038I Pass  18: suminf.    0.65315 (9) obj. -3.52995 iterations 0
Cbc0038I Pass  19: suminf.    0.71261 (2) obj. -3.52995 iterations 11
Cbc0038I Pass  20: suminf.    0.56875 (3) obj. -3.52995 iterations 3
Cbc0038I Pass  21: suminf.    3.72681 (19) obj. -3.52995 iterations 38
Cbc0038I Pass  22: suminf.    2.00323 (9) obj. -3.52995 iterations 10
Cbc0038I Pass  23: suminf.    1.65858 (9) obj. -4.39879 iterations 3
Cbc0038I Pass  24: suminf.    1.59172 (9) obj. -3.52995 iterations 3
Cbc0038I Pass  25: suminf.    0.81684 (4) obj. -3.52995 iterations 12
Cbc0038I Pass  26: suminf.    0.52210 (5) obj. -3.52995 iterations 7
Cbc0038I Pass  27: suminf.    0.82367 (4) obj. -3.52995 iterations 6
Cbc0038I Pass  28: suminf.    1.57117 (9) obj. -3.52995 iterations 14
Cbc0038I Pass  29: suminf.    1.22653 (8) obj. -4.06283 iterations 3
Cbc0038I Pass  30: suminf.    1.05927 (7) obj. -3.52995 iterations 12
Cbc0038I Pass  31: suminf.    0.97246 (7) obj. -3.52995 iterations 2
Cbc0038I Pass  32: suminf.    1.12629 (5) obj. -3.52995 iterations 15
Cbc0038I Pass  33: suminf.    0.70330 (6) obj. -3.52995 iterations 3
Cbc0038I Rounding solution of -0.22012 is better than previous of 0.74351

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 85 columns, reduced to 56 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -0.22012 to -16.1228 (0.06 seconds)
Cbc0038I Round again with cutoff of -21.2964
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.91149 (25) obj. -38.4702 iterations 0
Cbc0038I Pass  34: suminf.    2.91149 (25) obj. -38.4702 iterations 1
Cbc0038I Pass  35: suminf.    1.12699 (11) obj. -21.2964 iterations 15
Cbc0038I Pass  36: suminf.    1.03526 (11) obj. -22.122 iterations 1
Cbc0038I Pass  37: suminf.    1.40974 (11) obj. -21.2964 iterations 35
Cbc0038I Pass  38: suminf.    1.40974 (11) obj. -21.2964 iterations 1
Cbc0038I Pass  39: suminf.    1.52269 (10) obj. -21.2964 iterations 7
Cbc0038I Pass  40: suminf.    1.49959 (10) obj. -21.2964 iterations 5
Cbc0038I Pass  41: suminf.    2.17335 (13) obj. -21.2964 iterations 14
Cbc0038I Pass  42: suminf.    1.84248 (13) obj. -21.2964 iterations 3
Cbc0038I Pass  43: suminf.    1.61416 (10) obj. -21.2964 iterations 15
Cbc0038I Pass  44: suminf.    1.60024 (10) obj. -21.3242 iterations 3
Cbc0038I Pass  45: suminf.    1.61416 (10) obj. -21.2964 iterations 4
Cbc0038I Pass  46: suminf.    2.13615 (15) obj. -21.2964 iterations 12
Cbc0038I Pass  47: suminf.    1.64991 (16) obj. -21.2964 iterations 4
Cbc0038I Pass  48: suminf.    2.34143 (11) obj. -21.2964 iterations 12
Cbc0038I Pass  49: suminf.    2.26479 (14) obj. -21.2964 iterations 9
Cbc0038I Pass  50: suminf.    1.95793 (13) obj. -22.0131 iterations 11
Cbc0038I Pass  51: suminf.    1.61416 (11) obj. -21.2964 iterations 9
Cbc0038I Pass  52: suminf.    1.60024 (10) obj. -21.3242 iterations 3
Cbc0038I Pass  53: suminf.    1.61416 (10) obj. -21.2964 iterations 4
Cbc0038I Pass  54: suminf.    3.11839 (19) obj. -21.2964 iterations 12
Cbc0038I Pass  55: suminf.    2.75299 (14) obj. -21.2964 iterations 3
Cbc0038I Pass  56: suminf.    2.02986 (13) obj. -21.2964 iterations 3
Cbc0038I Pass  57: suminf.    3.06097 (18) obj. -21.2964 iterations 15
Cbc0038I Pass  58: suminf.    3.06097 (18) obj. -21.2964 iterations 1
Cbc0038I Pass  59: suminf.    2.34429 (12) obj. -21.2964 iterations 15
Cbc0038I Pass  60: suminf.    1.88581 (12) obj. -21.5523 iterations 3
Cbc0038I Pass  61: suminf.    2.01375 (12) obj. -21.2964 iterations 5
Cbc0038I Pass  62: suminf.    3.08854 (15) obj. -21.2964 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 85 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -16.1228 - took 0.06 seconds
Cbc0012I Integer solution of -16.12282 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 76 rows 85 columns, reduced to 19 rows 20 columns
Cbc0031I 46 added rows had average density of 8.7608696
Cbc0013I At root node, 46 cuts changed objective from -41.990203 to -16.778249 in 28 passes
Cbc0014I Cut generator 0 (Probing) - 2579 row cuts average 6.7 elements, 11 column cuts (11 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 104 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 157 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.192 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.12282 best solution, best possible -16.638239 (0.56 seconds)
Cbc0012I Integer solution of -16.123146 found by rounding after 736 iterations and 1 nodes (0.57 seconds)
Cbc0004I Integer solution of -16.432226 found after 749 iterations and 1 nodes (0.58 seconds)
Cbc0001I Search completed - best objective -16.43222590400001, took 756 iterations and 2 nodes (0.58 seconds)
Cbc0032I Strong branching done 20 times (238 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 277 (-26) elements
Clp1000I sum of infeasibilities 1.66977e-05 - average 1.83491e-07, 4 fixed columns
Coin0506I Presolve 83 (-8) rows, 47 (-4) columns and 253 (-24) elements
Clp0029I End of values pass after 47 iterations
Clp0000I Optimal - objective value 43.054094
Clp0000I Optimal - objective value 43.054094
Coin0511I After Postsolve, objective 43.054094, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.054094
Clp0000I Optimal - objective value 43.054094
Clp0000I Optimal - objective value 43.054094
Coin0511I After Postsolve, objective 43.054094, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.05409384 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 277 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 9.00331
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.81865 iterations 37
Cbc0038I Solution found of 4.81865
Cbc0038I Relaxing continuous gives 4.81865
Cbc0038I Rounding solution of 1.38562 is better than previous of 4.81865

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 58 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 1.38562 to -16.4322 (0.03 seconds)
Cbc0038I Round again with cutoff of -19.0945
Cbc0038I Pass   2: suminf.    3.00940 (11) obj. -19.0945 iterations 14
Cbc0038I Pass   3: suminf.    2.01008 (6) obj. -19.0945 iterations 13
Cbc0038I Pass   4: suminf.    1.33121 (5) obj. -19.0945 iterations 2
Cbc0038I Pass   5: suminf.    0.83430 (3) obj. -19.0945 iterations 7
Cbc0038I Pass   6: suminf.    0.83417 (3) obj. -19.0945 iterations 1
Cbc0038I Pass   7: suminf.    1.15553 (4) obj. -19.0945 iterations 6
Cbc0038I Pass   8: suminf.    2.00277 (13) obj. -19.0945 iterations 15
Cbc0038I Pass   9: suminf.    1.15960 (5) obj. -19.0945 iterations 11
Cbc0038I Pass  10: suminf.    0.80007 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  11: suminf.    1.48187 (6) obj. -19.0945 iterations 7
Cbc0038I Pass  12: suminf.    1.43744 (5) obj. -19.0945 iterations 1
Cbc0038I Pass  13: suminf.    1.73523 (4) obj. -19.0945 iterations 5
Cbc0038I Pass  14: suminf.    1.15443 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  15: suminf.    0.71456 (4) obj. -19.0945 iterations 1
Cbc0038I Pass  16: suminf.    1.48187 (6) obj. -19.0945 iterations 6
Cbc0038I Pass  17: suminf.    1.43744 (5) obj. -19.0945 iterations 1
Cbc0038I Pass  18: suminf.    1.73523 (4) obj. -19.0945 iterations 5
Cbc0038I Pass  19: suminf.    1.15443 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  20: suminf.    0.71456 (4) obj. -19.0945 iterations 1
Cbc0038I Pass  21: suminf.    1.48187 (6) obj. -19.0945 iterations 6
Cbc0038I Pass  22: suminf.    1.43744 (5) obj. -19.0945 iterations 1
Cbc0038I Pass  23: suminf.    1.73523 (4) obj. -19.0945 iterations 5
Cbc0038I Pass  24: suminf.    1.15443 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  25: suminf.    0.71456 (4) obj. -19.0945 iterations 1
Cbc0038I Pass  26: suminf.    1.48187 (6) obj. -19.0945 iterations 6
Cbc0038I Pass  27: suminf.    1.43744 (5) obj. -19.0945 iterations 1
Cbc0038I Pass  28: suminf.    1.73523 (4) obj. -19.0945 iterations 5
Cbc0038I Pass  29: suminf.    1.15443 (4) obj. -19.0945 iterations 2
Cbc0038I Pass  30: suminf.    0.71456 (4) obj. -19.0945 iterations 1
Cbc0038I Pass  31: suminf.    1.48187 (6) obj. -19.0945 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 68 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -16.4322 - took 0.06 seconds
Cbc0012I Integer solution of -16.432226 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 58 rows 34 columns
Cbc0031I 23 added rows had average density of 34.565217
Cbc0013I At root node, 23 cuts changed objective from -43.054094 to -32.077272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8308 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1973 row cuts average 49.4 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 131 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 41.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0010I After 9 nodes, 5 on tree, -16.432226 best solution, best possible -32.077272 (0.69 seconds)
Cbc0001I Search completed - best objective -16.43222590400001, took 6438 iterations and 22 nodes (0.73 seconds)
Cbc0032I Strong branching done 392 times (5004 iterations), fathomed 2 nodes and fixed 22 variables
Cbc0035I Maximum depth 5, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-29) rows, 85 (-18) columns and 1081 (-498) elements
Clp1000I sum of infeasibilities 1.61067e-08 - average 2.1193e-10, 7 fixed columns
Coin0506I Presolve 69 (-7) rows, 78 (-7) columns and 910 (-171) elements
Clp0006I 0  Obj 47.859946 Dual inf 2.6075028 (78)
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 4.42246 - largest nonzero change 1.9470026e-05 ( 0.0012247315%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 53.936873
Clp0000I Optimal - objective value 53.936873
Coin0511I After Postsolve, objective 53.936873, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.936873
Clp0000I Optimal - objective value 53.936873
Clp0000I Optimal - objective value 53.936873
Clp0000I Optimal - objective value 53.936873
Coin0511I After Postsolve, objective 53.936873, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.9368726 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 76 rows, 85 columns (85 integer (85 of which binary)) and 1083 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.832%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 6.59769
Cbc0038I Pass   1: suminf.    2.91149 (25) obj. -38.4702 iterations 16
Cbc0038I Pass   2: suminf.    2.91149 (25) obj. -38.4702 iterations 1
Cbc0038I Pass   3: suminf.    0.30861 (4) obj. -3.87096 iterations 21
Cbc0038I Solution found of 0.74351
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 85 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -3.52995
Cbc0038I Pass   4: suminf.    2.91149 (25) obj. -38.4702 iterations 0
Cbc0038I Pass   5: suminf.    2.91149 (25) obj. -38.4702 iterations 1
Cbc0038I Pass   6: suminf.    1.13977 (13) obj. -17.5175 iterations 12
Cbc0038I Pass   7: suminf.    0.46788 (2) obj. -3.52995 iterations 16
Cbc0038I Pass   8: suminf.    0.20000 (2) obj. -6.74399 iterations 2
Cbc0038I Pass   9: suminf.    0.18750 (1) obj. -6.56899 iterations 1
Cbc0038I Pass  10: suminf.    0.76980 (7) obj. -3.52995 iterations 27
Cbc0038I Pass  11: suminf.    0.46989 (5) obj. -3.52995 iterations 10
Cbc0038I Pass  12: suminf.    0.47121 (2) obj. -3.52995 iterations 8
Cbc0038I Pass  13: suminf.    0.47121 (2) obj. -3.52995 iterations 1
Cbc0038I Pass  14: suminf.    0.18046 (2) obj. -6.91322 iterations 2
Cbc0038I Pass  15: suminf.    0.16667 (1) obj. -6.72012 iterations 1
Cbc0038I Pass  16: suminf.    3.19006 (12) obj. -5.08136 iterations 19
Cbc0038I Pass  17: suminf.    0.65315 (9) obj. -3.52995 iterations 12
Cbc0038I Pass  18: suminf.    0.65315 (9) obj. -3.52995 iterations 0
Cbc0038I Pass  19: suminf.    0.71261 (2) obj. -3.52995 iterations 11
Cbc0038I Pass  20: suminf.    0.56875 (3) obj. -3.52995 iterations 3
Cbc0038I Pass  21: suminf.    3.72681 (19) obj. -3.52995 iterations 38
Cbc0038I Pass  22: suminf.    2.00323 (9) obj. -3.52995 iterations 10
Cbc0038I Pass  23: suminf.    1.65858 (9) obj. -4.39879 iterations 3
Cbc0038I Pass  24: suminf.    1.59172 (9) obj. -3.52995 iterations 3
Cbc0038I Pass  25: suminf.    0.81684 (4) obj. -3.52995 iterations 12
Cbc0038I Pass  26: suminf.    0.52210 (5) obj. -3.52995 iterations 7
Cbc0038I Pass  27: suminf.    0.82367 (4) obj. -3.52995 iterations 6
Cbc0038I Pass  28: suminf.    1.57117 (9) obj. -3.52995 iterations 14
Cbc0038I Pass  29: suminf.    1.22653 (8) obj. -4.06283 iterations 3
Cbc0038I Pass  30: suminf.    1.05927 (7) obj. -3.52995 iterations 12
Cbc0038I Pass  31: suminf.    0.97246 (7) obj. -3.52995 iterations 2
Cbc0038I Pass  32: suminf.    1.12629 (5) obj. -3.52995 iterations 15
Cbc0038I Pass  33: suminf.    0.70330 (6) obj. -3.52995 iterations 3
Cbc0038I Rounding solution of -0.22012 is better than previous of 0.74351

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 85 columns, reduced to 56 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -0.22012 to -16.1228 (0.06 seconds)
Cbc0038I Round again with cutoff of -21.2964
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.91149 (25) obj. -38.4702 iterations 0
Cbc0038I Pass  34: suminf.    2.91149 (25) obj. -38.4702 iterations 1
Cbc0038I Pass  35: suminf.    1.12699 (11) obj. -21.2964 iterations 15
Cbc0038I Pass  36: suminf.    1.03526 (11) obj. -22.122 iterations 1
Cbc0038I Pass  37: suminf.    1.40974 (11) obj. -21.2964 iterations 35
Cbc0038I Pass  38: suminf.    1.40974 (11) obj. -21.2964 iterations 1
Cbc0038I Pass  39: suminf.    1.52269 (10) obj. -21.2964 iterations 7
Cbc0038I Pass  40: suminf.    1.49959 (10) obj. -21.2964 iterations 5
Cbc0038I Pass  41: suminf.    2.17335 (13) obj. -21.2964 iterations 14
Cbc0038I Pass  42: suminf.    1.84248 (13) obj. -21.2964 iterations 3
Cbc0038I Pass  43: suminf.    1.61416 (10) obj. -21.2964 iterations 15
Cbc0038I Pass  44: suminf.    1.60024 (10) obj. -21.3242 iterations 3
Cbc0038I Pass  45: suminf.    1.61416 (10) obj. -21.2964 iterations 4
Cbc0038I Pass  46: suminf.    2.13615 (15) obj. -21.2964 iterations 12
Cbc0038I Pass  47: suminf.    1.64991 (16) obj. -21.2964 iterations 4
Cbc0038I Pass  48: suminf.    2.34143 (11) obj. -21.2964 iterations 12
Cbc0038I Pass  49: suminf.    2.26479 (14) obj. -21.2964 iterations 9
Cbc0038I Pass  50: suminf.    1.95793 (13) obj. -22.0131 iterations 11
Cbc0038I Pass  51: suminf.    1.61416 (11) obj. -21.2964 iterations 9
Cbc0038I Pass  52: suminf.    1.60024 (10) obj. -21.3242 iterations 3
Cbc0038I Pass  53: suminf.    1.61416 (10) obj. -21.2964 iterations 4
Cbc0038I Pass  54: suminf.    3.11839 (19) obj. -21.2964 iterations 12
Cbc0038I Pass  55: suminf.    2.75299 (14) obj. -21.2964 iterations 3
Cbc0038I Pass  56: suminf.    2.02986 (13) obj. -21.2964 iterations 3
Cbc0038I Pass  57: suminf.    3.06097 (18) obj. -21.2964 iterations 15
Cbc0038I Pass  58: suminf.    3.06097 (18) obj. -21.2964 iterations 1
Cbc0038I Pass  59: suminf.    2.34429 (12) obj. -21.2964 iterations 15
Cbc0038I Pass  60: suminf.    1.88581 (12) obj. -21.5523 iterations 3
Cbc0038I Pass  61: suminf.    2.01375 (12) obj. -21.2964 iterations 5
Cbc0038I Pass  62: suminf.    3.08854 (15) obj. -21.2964 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 85 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -16.1228 - took 0.07 seconds
Cbc0012I Integer solution of -16.12282 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 76 rows 85 columns, reduced to 19 rows 20 columns
Cbc0031I 46 added rows had average density of 8.7608696
Cbc0013I At root node, 46 cuts changed objective from -41.990203 to -16.778249 in 28 passes
Cbc0014I Cut generator 0 (Probing) - 2579 row cuts average 6.7 elements, 11 column cuts (11 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 104 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 157 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 217 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 48 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.12282 best solution, best possible -16.638239 (0.60 seconds)
Cbc0012I Integer solution of -16.123146 found by rounding after 736 iterations and 1 nodes (0.62 seconds)
Cbc0004I Integer solution of -16.432226 found after 749 iterations and 1 nodes (0.62 seconds)
Cbc0001I Search completed - best objective -16.43222590400001, took 756 iterations and 2 nodes (0.62 seconds)
Cbc0032I Strong branching done 20 times (238 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.63

