Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 569 (-34) elements
Clp1000I sum of infeasibilities 3.54076e-05 - average 1.89345e-07, 23 fixed columns
Coin0506I Presolve 140 (-47) rows, 76 (-25) columns and 425 (-144) elements
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 0.21958772 - largest nonzero change 0 ( 0%) - largest zero change 2.878693e-05
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Coin0511I After Postsolve, objective 40.856093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20404508 - largest nonzero change 0 ( 0%) - largest zero change 2.9532665e-05
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Coin0511I After Postsolve, objective 40.856093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.85609287 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 186 rows, 101 columns (100 integer (100 of which binary)) and 580 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.010%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.17535
Cbc0038I Solution found of 0.532324
Cbc0038I Relaxing continuous gives -2.09293
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 56 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -2.09293 to -12.0923 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.9687
Cbc0038I Pass   1: suminf.    1.60254 (12) obj. -14.9687 iterations 61
Cbc0038I Pass   2: suminf.    2.94333 (8) obj. -14.9687 iterations 16
Cbc0038I Pass   3: suminf.    2.44440 (6) obj. -14.9687 iterations 2
Cbc0038I Pass   4: suminf.    2.08138 (6) obj. -14.9687 iterations 2
Cbc0038I Pass   5: suminf.    1.99197 (6) obj. -14.9687 iterations 1
Cbc0038I Pass   6: suminf.    1.89426 (6) obj. -14.9687 iterations 9
Cbc0038I Pass   7: suminf.    1.32274 (4) obj. -14.9687 iterations 7
Cbc0038I Pass   8: suminf.    1.12435 (3) obj. -14.9687 iterations 1
Cbc0038I Pass   9: suminf.    1.27997 (3) obj. -14.9687 iterations 2
Cbc0038I Pass  10: suminf.    1.00032 (4) obj. -14.9687 iterations 5
Cbc0038I Pass  11: suminf.    1.12647 (4) obj. -14.9687 iterations 4
Cbc0038I Pass  12: suminf.    4.02001 (9) obj. -14.9687 iterations 21
Cbc0038I Pass  13: suminf.    1.94487 (6) obj. -14.9687 iterations 14
Cbc0038I Pass  14: suminf.    1.86826 (6) obj. -14.9687 iterations 2
Cbc0038I Pass  15: suminf.    1.53215 (5) obj. -14.9687 iterations 13
Cbc0038I Pass  16: suminf.    1.48380 (4) obj. -14.9687 iterations 3
Cbc0038I Pass  17: suminf.    1.71307 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  18: suminf.    1.71307 (6) obj. -14.9687 iterations 0
Cbc0038I Pass  19: suminf.    1.57768 (5) obj. -14.9687 iterations 11
Cbc0038I Pass  20: suminf.    2.88966 (12) obj. -14.9687 iterations 41
Cbc0038I Pass  21: suminf.    2.06801 (10) obj. -14.9687 iterations 16
Cbc0038I Pass  22: suminf.    2.16851 (7) obj. -14.9687 iterations 27
Cbc0038I Pass  23: suminf.    1.20179 (6) obj. -14.9687 iterations 4
Cbc0038I Pass  24: suminf.    1.20179 (6) obj. -14.9687 iterations 0
Cbc0038I Pass  25: suminf.    2.05255 (5) obj. -14.9687 iterations 11
Cbc0038I Pass  26: suminf.    1.57112 (5) obj. -14.9687 iterations 4
Cbc0038I Pass  27: suminf.    1.46026 (5) obj. -14.9687 iterations 1
Cbc0038I Pass  28: suminf.    2.25131 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  29: suminf.    1.48943 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  30: suminf.    1.20179 (6) obj. -14.9687 iterations 3
Cbc0038I Rounding solution of -13.6855 is better than previous of -12.0923

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -20.1462
Cbc0038I Pass  30: suminf.    2.32142 (16) obj. -20.1462 iterations 5
Cbc0038I Pass  31: suminf.    2.25111 (6) obj. -20.1462 iterations 21
Cbc0038I Pass  32: suminf.    2.02702 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  33: suminf.    1.62795 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  34: suminf.    1.25430 (5) obj. -20.1462 iterations 9
Cbc0038I Pass  35: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  36: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  37: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  38: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  39: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  40: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  41: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  42: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  43: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  44: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  45: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  46: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  47: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  48: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  49: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  50: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  51: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  52: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  53: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  54: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  55: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  56: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  57: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  58: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  59: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Rounding solution of -14.7544 is better than previous of -13.6855

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 56 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -26.3592
Cbc0038I Pass  59: suminf.    3.26325 (24) obj. -26.3592 iterations 5
Cbc0038I Pass  60: suminf.    3.39849 (11) obj. -26.3592 iterations 28
Cbc0038I Pass  61: suminf.    2.82666 (9) obj. -26.3592 iterations 14
Cbc0038I Pass  62: suminf.    2.76657 (9) obj. -26.3592 iterations 2
Cbc0038I Pass  63: suminf.    3.06511 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  64: suminf.    2.94939 (9) obj. -26.3592 iterations 4
Cbc0038I Pass  65: suminf.    2.26840 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  66: suminf.    2.19908 (9) obj. -26.3592 iterations 3
Cbc0038I Pass  67: suminf.    3.06067 (9) obj. -26.3592 iterations 9
Cbc0038I Pass  68: suminf.    2.75964 (11) obj. -26.3592 iterations 16
Cbc0038I Pass  69: suminf.    2.12032 (8) obj. -26.3592 iterations 13
Cbc0038I Pass  70: suminf.    2.96625 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  71: suminf.    2.39634 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  72: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  73: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  74: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  75: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  76: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  77: suminf.    2.39634 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  78: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  79: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  80: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  81: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  82: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  83: suminf.    2.39634 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  84: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  85: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  86: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  87: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  88: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -14.7544 - took 0.10 seconds
Cbc0012I Integer solution of -14.75436 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 186 rows 101 columns, reduced to 60 rows 39 columns
Cbc0012I Integer solution of -15.70326 found by RINS after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 22 added rows had average density of 61.454545
Cbc0013I At root node, 22 cuts changed objective from -40.856093 to -34.059455 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10106 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1621 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.70326 best solution, best possible -34.059455 (0.92 seconds)
Cbc0004I Integer solution of -16.01313 found after 8398 iterations and 46 nodes (1.14 seconds)
Cbc0001I Search completed - best objective -16.01313, took 10101 iterations and 94 nodes (1.29 seconds)
Cbc0032I Strong branching done 1190 times (19467 iterations), fathomed 6 nodes and fixed 52 variables
Cbc0035I Maximum depth 29, 280 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-76) rows, 141 (-61) columns and 2488 (-3165) elements
Clp1000I sum of infeasibilities 5.88781e-07 - average 4.59986e-09, 84 fixed columns
Coin0506I Presolve 48 (-80) rows, 57 (-84) columns and 205 (-2283) elements
Clp0006I 0  Obj -11.126443 Dual inf 3.7236978 (57)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 1.4001659 - largest nonzero change 1.5272877e-05 ( 0.00091204228%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value -9.0087476
Clp0000I Optimal - objective value -9.0087476
Coin0511I After Postsolve, objective -9.0087476, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.0087476 Dual inf 58.036977 (41)
Clp0014I Perturbing problem by 0.001% of 1.4804143 - largest nonzero change 2.9394864e-05 ( 0.0029394864%) - largest zero change 2.9638225e-05
Clp0000I Optimal - objective value 50.123274
Clp0000I Optimal - objective value 50.123274
Clp0000I Optimal - objective value 50.123274
Coin0511I After Postsolve, objective 50.123274, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.12327362 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 141 columns (141 integer (141 of which binary)) and 2501 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.819%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.0029
Cbc0038I Pass   1: suminf.    3.63930 (35) obj. -39.2094 iterations 14
Cbc0038I Pass   2: suminf.    3.23918 (34) obj. -37.2704 iterations 3
Cbc0038I Pass   3: suminf.    0.41422 (7) obj. -4.73827 iterations 27
Cbc0038I Solution found of 1.84751
Cbc0038I Rounding solution of 1.73064 is better than previous of 1.84751

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 141 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 1.73064 to -0.4933 (0.04 seconds)
Cbc0038I Round again with cutoff of -4.63682
Cbc0038I Pass   4: suminf.    3.63930 (35) obj. -39.2094 iterations 0
Cbc0038I Pass   5: suminf.    3.23918 (34) obj. -37.2704 iterations 4
Cbc0038I Pass   6: suminf.    0.55178 (9) obj. -6.60071 iterations 25
Cbc0038I Pass   7: suminf.    0.76249 (3) obj. -4.63682 iterations 15
Cbc0038I Pass   8: suminf.    0.63690 (3) obj. -8.9071 iterations 2
Cbc0038I Pass   9: suminf.    0.16688 (2) obj. -4.63682 iterations 5
Cbc0038I Pass  10: suminf.    1.03670 (3) obj. -4.63682 iterations 4
Cbc0038I Pass  11: suminf.    0.43497 (3) obj. -4.63682 iterations 2
Cbc0038I Pass  12: suminf.    0.67629 (3) obj. -4.63682 iterations 5
Cbc0038I Pass  13: suminf.    0.48889 (2) obj. -5.54574 iterations 2
Cbc0038I Pass  14: suminf.    0.58669 (2) obj. -4.63682 iterations 4
Cbc0038I Pass  15: suminf.    1.38542 (13) obj. -8.24837 iterations 40
Cbc0038I Pass  16: suminf.    1.28601 (12) obj. -7.71357 iterations 6
Cbc0038I Pass  17: suminf.    0.87588 (5) obj. -4.63682 iterations 19
Cbc0038I Pass  18: suminf.    0.50291 (4) obj. -4.63682 iterations 11
Cbc0038I Pass  19: suminf.    0.38153 (3) obj. -4.63682 iterations 2
Cbc0038I Pass  20: suminf.    0.38153 (3) obj. -4.63682 iterations 0
Cbc0038I Pass  21: suminf.    0.61010 (3) obj. -4.63682 iterations 7
Cbc0038I Pass  22: suminf.    0.60673 (3) obj. -4.63682 iterations 1
Cbc0038I Pass  23: suminf.    0.25334 (3) obj. -4.63682 iterations 4
Cbc0038I Pass  24: suminf.    0.15777 (2) obj. -4.67314 iterations 3
Cbc0038I Pass  25: suminf.    0.63727 (3) obj. -4.63682 iterations 10
Cbc0038I Pass  26: suminf.    0.63727 (3) obj. -4.63682 iterations 1
Cbc0038I Pass  27: suminf.    0.49367 (2) obj. -4.86556 iterations 3
Cbc0038I Pass  28: suminf.    0.48024 (2) obj. -4.63682 iterations 5
Cbc0038I Pass  29: suminf.    0.57913 (2) obj. -4.63682 iterations 3
Cbc0038I Pass  30: suminf.    1.67824 (10) obj. -4.63682 iterations 20
Cbc0038I Pass  31: suminf.    0.84463 (8) obj. -4.63682 iterations 17
Cbc0038I Pass  32: suminf.    0.76847 (4) obj. -4.63682 iterations 13
Cbc0038I Pass  33: suminf.    0.59371 (5) obj. -4.63682 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 141 columns, reduced to 24 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -0.4933 to -4.78919 (0.07 seconds)
Cbc0038I Round again with cutoff of -12.2169
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.63930 (35) obj. -39.2094 iterations 0
Cbc0038I Pass  34: suminf.    3.23918 (34) obj. -37.2704 iterations 7
Cbc0038I Pass  35: suminf.    1.05566 (16) obj. -21.4539 iterations 18
Cbc0038I Pass  36: suminf.    0.71467 (8) obj. -12.2169 iterations 24
Cbc0038I Pass  37: suminf.    0.62158 (9) obj. -12.2169 iterations 2
Cbc0038I Pass  38: suminf.    1.55835 (7) obj. -12.2169 iterations 8
Cbc0038I Pass  39: suminf.    0.76903 (4) obj. -12.2169 iterations 6
Cbc0038I Pass  40: suminf.    0.61987 (4) obj. -12.2169 iterations 5
Cbc0038I Pass  41: suminf.    1.10016 (5) obj. -12.2169 iterations 9
Cbc0038I Pass  42: suminf.    0.98618 (5) obj. -12.2169 iterations 8
Cbc0038I Pass  43: suminf.    1.10163 (5) obj. -12.2169 iterations 7
Cbc0038I Pass  44: suminf.    0.50940 (5) obj. -12.2169 iterations 4
Cbc0038I Pass  45: suminf.    1.04815 (5) obj. -12.2169 iterations 5
Cbc0038I Pass  46: suminf.    1.13579 (9) obj. -12.2169 iterations 17
Cbc0038I Pass  47: suminf.    1.13579 (9) obj. -12.2169 iterations 5
Cbc0038I Pass  48: suminf.    0.92321 (5) obj. -12.2169 iterations 12
Cbc0038I Pass  49: suminf.    1.54487 (10) obj. -12.2169 iterations 15
Cbc0038I Pass  50: suminf.    0.93687 (9) obj. -12.2169 iterations 10
Cbc0038I Pass  51: suminf.    1.04815 (5) obj. -12.2169 iterations 13
Cbc0038I Pass  52: suminf.    0.50940 (5) obj. -12.2169 iterations 2
Cbc0038I Pass  53: suminf.    1.04815 (5) obj. -12.2169 iterations 5
Cbc0038I Pass  54: suminf.    1.55492 (12) obj. -12.2169 iterations 18
Cbc0038I Pass  55: suminf.    1.21291 (10) obj. -12.2169 iterations 12
Cbc0038I Pass  56: suminf.    1.31976 (6) obj. -12.2169 iterations 17
Cbc0038I Pass  57: suminf.    1.01206 (6) obj. -12.2169 iterations 8
Cbc0038I Pass  58: suminf.    1.43759 (5) obj. -12.2169 iterations 7
Cbc0038I Pass  59: suminf.    1.04390 (5) obj. -13.0043 iterations 1
Cbc0038I Pass  60: suminf.    0.95691 (5) obj. -12.2169 iterations 5
Cbc0038I Pass  61: suminf.    0.94884 (5) obj. -12.2169 iterations 4
Cbc0038I Pass  62: suminf.    1.43759 (5) obj. -12.2169 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 141 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -4.78919 - took 0.05 seconds
Cbc0012I Integer solution of -4.78919 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 127 rows 141 columns, reduced to 6 rows 5 columns
Cbc0031I 61 added rows had average density of 46.442623
Cbc0013I At root node, 61 cuts changed objective from -41.927561 to -21.756893 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18309 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2227 row cuts average 137.0 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 915 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1183 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 366 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 100 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.302 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.78919 best solution, best possible -21.756893 (2.18 seconds)
Cbc0012I Integer solution of -9.73839 found by DiveCoefficient after 7109 iterations and 5 nodes (2.98 seconds)
Cbc0010I After 5 nodes, 4 on tree, -9.73839 best solution, best possible -21.756893 (2.98 seconds)
Cbc0012I Integer solution of -12.38135 found by rounding after 7267 iterations and 8 nodes (3.06 seconds)
Cbc0012I Integer solution of -13.57933 found by DiveCoefficient after 7267 iterations and 8 nodes (3.06 seconds)
Cbc0004I Integer solution of -16.01313 found after 7299 iterations and 9 nodes (3.07 seconds)
Cbc0010I After 33 nodes, 6 on tree, -16.01313 best solution, best possible -21.756893 (3.70 seconds)
Cbc0001I Search completed - best objective -16.01313, took 9157 iterations and 48 nodes (3.97 seconds)
Cbc0032I Strong branching done 832 times (20090 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 174 variables fixed on reduced cost
Total time (CPU seconds):       3.61   (Wallclock seconds):       3.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 569 (-34) elements
Clp1000I sum of infeasibilities 3.54076e-05 - average 1.89345e-07, 23 fixed columns
Coin0506I Presolve 140 (-47) rows, 76 (-25) columns and 425 (-144) elements
Clp0029I End of values pass after 76 iterations
Clp0014I Perturbing problem by 0.001% of 0.21958772 - largest nonzero change 0 ( 0%) - largest zero change 2.878693e-05
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Coin0511I After Postsolve, objective 40.856093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20404508 - largest nonzero change 0 ( 0%) - largest zero change 2.9532665e-05
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Clp0000I Optimal - objective value 40.856093
Coin0511I After Postsolve, objective 40.856093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.85609287 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 186 rows, 101 columns (100 integer (100 of which binary)) and 580 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.010%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.17535
Cbc0038I Solution found of 0.532324
Cbc0038I Relaxing continuous gives -2.09293
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 56 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -2.09293 to -12.0923 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.9687
Cbc0038I Pass   1: suminf.    1.60254 (12) obj. -14.9687 iterations 61
Cbc0038I Pass   2: suminf.    2.94333 (8) obj. -14.9687 iterations 16
Cbc0038I Pass   3: suminf.    2.44440 (6) obj. -14.9687 iterations 2
Cbc0038I Pass   4: suminf.    2.08138 (6) obj. -14.9687 iterations 2
Cbc0038I Pass   5: suminf.    1.99197 (6) obj. -14.9687 iterations 1
Cbc0038I Pass   6: suminf.    1.89426 (6) obj. -14.9687 iterations 9
Cbc0038I Pass   7: suminf.    1.32274 (4) obj. -14.9687 iterations 7
Cbc0038I Pass   8: suminf.    1.12435 (3) obj. -14.9687 iterations 1
Cbc0038I Pass   9: suminf.    1.27997 (3) obj. -14.9687 iterations 2
Cbc0038I Pass  10: suminf.    1.00032 (4) obj. -14.9687 iterations 5
Cbc0038I Pass  11: suminf.    1.12647 (4) obj. -14.9687 iterations 4
Cbc0038I Pass  12: suminf.    4.02001 (9) obj. -14.9687 iterations 21
Cbc0038I Pass  13: suminf.    1.94487 (6) obj. -14.9687 iterations 14
Cbc0038I Pass  14: suminf.    1.86826 (6) obj. -14.9687 iterations 2
Cbc0038I Pass  15: suminf.    1.53215 (5) obj. -14.9687 iterations 13
Cbc0038I Pass  16: suminf.    1.48380 (4) obj. -14.9687 iterations 3
Cbc0038I Pass  17: suminf.    1.71307 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  18: suminf.    1.71307 (6) obj. -14.9687 iterations 0
Cbc0038I Pass  19: suminf.    1.57768 (5) obj. -14.9687 iterations 11
Cbc0038I Pass  20: suminf.    2.88966 (12) obj. -14.9687 iterations 41
Cbc0038I Pass  21: suminf.    2.06801 (10) obj. -14.9687 iterations 16
Cbc0038I Pass  22: suminf.    2.16851 (7) obj. -14.9687 iterations 27
Cbc0038I Pass  23: suminf.    1.20179 (6) obj. -14.9687 iterations 4
Cbc0038I Pass  24: suminf.    1.20179 (6) obj. -14.9687 iterations 0
Cbc0038I Pass  25: suminf.    2.05255 (5) obj. -14.9687 iterations 11
Cbc0038I Pass  26: suminf.    1.57112 (5) obj. -14.9687 iterations 4
Cbc0038I Pass  27: suminf.    1.46026 (5) obj. -14.9687 iterations 1
Cbc0038I Pass  28: suminf.    2.25131 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  29: suminf.    1.48943 (6) obj. -14.9687 iterations 6
Cbc0038I Pass  30: suminf.    1.20179 (6) obj. -14.9687 iterations 3
Cbc0038I Rounding solution of -13.6855 is better than previous of -12.0923

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -20.1462
Cbc0038I Pass  30: suminf.    2.32142 (16) obj. -20.1462 iterations 5
Cbc0038I Pass  31: suminf.    2.25111 (6) obj. -20.1462 iterations 21
Cbc0038I Pass  32: suminf.    2.02702 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  33: suminf.    1.62795 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  34: suminf.    1.25430 (5) obj. -20.1462 iterations 9
Cbc0038I Pass  35: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  36: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  37: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  38: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  39: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  40: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  41: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  42: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  43: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  44: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  45: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  46: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  47: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  48: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  49: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  50: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  51: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Pass  52: suminf.    1.28439 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  53: suminf.    1.19744 (5) obj. -20.1462 iterations 3
Cbc0038I Pass  54: suminf.    1.77619 (4) obj. -20.1462 iterations 4
Cbc0038I Pass  55: suminf.    1.50033 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  56: suminf.    1.27096 (4) obj. -20.1462 iterations 2
Cbc0038I Pass  57: suminf.    1.25430 (5) obj. -20.1462 iterations 7
Cbc0038I Pass  58: suminf.    1.25430 (5) obj. -20.1462 iterations 0
Cbc0038I Pass  59: suminf.    1.78513 (4) obj. -20.1462 iterations 5
Cbc0038I Rounding solution of -14.7544 is better than previous of -13.6855

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 56 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -26.3592
Cbc0038I Pass  59: suminf.    3.26325 (24) obj. -26.3592 iterations 5
Cbc0038I Pass  60: suminf.    3.39849 (11) obj. -26.3592 iterations 28
Cbc0038I Pass  61: suminf.    2.82666 (9) obj. -26.3592 iterations 14
Cbc0038I Pass  62: suminf.    2.76657 (9) obj. -26.3592 iterations 2
Cbc0038I Pass  63: suminf.    3.06511 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  64: suminf.    2.94939 (9) obj. -26.3592 iterations 4
Cbc0038I Pass  65: suminf.    2.26840 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  66: suminf.    2.19908 (9) obj. -26.3592 iterations 3
Cbc0038I Pass  67: suminf.    3.06067 (9) obj. -26.3592 iterations 9
Cbc0038I Pass  68: suminf.    2.75964 (11) obj. -26.3592 iterations 16
Cbc0038I Pass  69: suminf.    2.12032 (8) obj. -26.3592 iterations 13
Cbc0038I Pass  70: suminf.    2.96625 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  71: suminf.    2.39634 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  72: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  73: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  74: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  75: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  76: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  77: suminf.    2.39634 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  78: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  79: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  80: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  81: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  82: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I Pass  83: suminf.    2.39634 (8) obj. -26.3592 iterations 8
Cbc0038I Pass  84: suminf.    2.32823 (8) obj. -26.3592 iterations 2
Cbc0038I Pass  85: suminf.    2.36584 (7) obj. -26.3592 iterations 10
Cbc0038I Pass  86: suminf.    2.06850 (8) obj. -26.3592 iterations 10
Cbc0038I Pass  87: suminf.    2.06303 (7) obj. -26.3592 iterations 2
Cbc0038I Pass  88: suminf.    2.79061 (10) obj. -26.3592 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 186 rows 101 columns, reduced to 73 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -14.7544 - took 0.10 seconds
Cbc0012I Integer solution of -14.75436 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 186 rows 101 columns, reduced to 60 rows 39 columns
Cbc0012I Integer solution of -15.70326 found by RINS after 0 iterations and 0 nodes (0.16 seconds)
Cbc0031I 22 added rows had average density of 61.454545
Cbc0013I At root node, 22 cuts changed objective from -40.856093 to -34.059455 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10106 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1621 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.70326 best solution, best possible -34.059455 (0.90 seconds)
Cbc0004I Integer solution of -16.01313 found after 8398 iterations and 46 nodes (1.09 seconds)
Cbc0001I Search completed - best objective -16.01313, took 10101 iterations and 94 nodes (1.24 seconds)
Cbc0032I Strong branching done 1190 times (19467 iterations), fathomed 6 nodes and fixed 52 variables
Cbc0035I Maximum depth 29, 280 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-77) rows, 141 (-62) columns and 2488 (-3166) elements
Clp1000I sum of infeasibilities 5.88781e-07 - average 4.59986e-09, 84 fixed columns
Coin0506I Presolve 48 (-80) rows, 57 (-84) columns and 205 (-2283) elements
Clp0006I 0  Obj -11.126443 Dual inf 3.7236978 (57)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 1.4001659 - largest nonzero change 1.5272877e-05 ( 0.00091204228%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value -9.0087476
Clp0000I Optimal - objective value -9.0087476
Coin0511I After Postsolve, objective -9.0087476, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.0087476 Dual inf 58.036977 (41)
Clp0014I Perturbing problem by 0.001% of 1.4804143 - largest nonzero change 2.9394864e-05 ( 0.0029394864%) - largest zero change 2.9638225e-05
Clp0000I Optimal - objective value 50.123274
Clp0000I Optimal - objective value 50.123274
Clp0000I Optimal - objective value 50.123274
Coin0511I After Postsolve, objective 50.123274, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.12327362 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 141 columns (141 integer (141 of which binary)) and 2501 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.819%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.0029
Cbc0038I Pass   1: suminf.    3.63930 (35) obj. -39.2094 iterations 14
Cbc0038I Pass   2: suminf.    3.23918 (34) obj. -37.2704 iterations 3
Cbc0038I Pass   3: suminf.    0.41422 (7) obj. -4.73827 iterations 27
Cbc0038I Solution found of 1.84751
Cbc0038I Rounding solution of 1.73064 is better than previous of 1.84751

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 141 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 1.73064 to -0.4933 (0.03 seconds)
Cbc0038I Round again with cutoff of -4.63682
Cbc0038I Pass   4: suminf.    3.63930 (35) obj. -39.2094 iterations 0
Cbc0038I Pass   5: suminf.    3.23918 (34) obj. -37.2704 iterations 4
Cbc0038I Pass   6: suminf.    0.55178 (9) obj. -6.60071 iterations 25
Cbc0038I Pass   7: suminf.    0.76249 (3) obj. -4.63682 iterations 15
Cbc0038I Pass   8: suminf.    0.63690 (3) obj. -8.9071 iterations 2
Cbc0038I Pass   9: suminf.    0.16688 (2) obj. -4.63682 iterations 5
Cbc0038I Pass  10: suminf.    1.03670 (3) obj. -4.63682 iterations 4
Cbc0038I Pass  11: suminf.    0.43497 (3) obj. -4.63682 iterations 2
Cbc0038I Pass  12: suminf.    0.67629 (3) obj. -4.63682 iterations 5
Cbc0038I Pass  13: suminf.    0.48889 (2) obj. -5.54574 iterations 2
Cbc0038I Pass  14: suminf.    0.58669 (2) obj. -4.63682 iterations 4
Cbc0038I Pass  15: suminf.    1.38542 (13) obj. -8.24837 iterations 40
Cbc0038I Pass  16: suminf.    1.28601 (12) obj. -7.71357 iterations 6
Cbc0038I Pass  17: suminf.    0.87588 (5) obj. -4.63682 iterations 19
Cbc0038I Pass  18: suminf.    0.50291 (4) obj. -4.63682 iterations 11
Cbc0038I Pass  19: suminf.    0.38153 (3) obj. -4.63682 iterations 2
Cbc0038I Pass  20: suminf.    0.38153 (3) obj. -4.63682 iterations 0
Cbc0038I Pass  21: suminf.    0.61010 (3) obj. -4.63682 iterations 7
Cbc0038I Pass  22: suminf.    0.60673 (3) obj. -4.63682 iterations 1
Cbc0038I Pass  23: suminf.    0.25334 (3) obj. -4.63682 iterations 4
Cbc0038I Pass  24: suminf.    0.15777 (2) obj. -4.67314 iterations 3
Cbc0038I Pass  25: suminf.    0.63727 (3) obj. -4.63682 iterations 10
Cbc0038I Pass  26: suminf.    0.63727 (3) obj. -4.63682 iterations 1
Cbc0038I Pass  27: suminf.    0.49367 (2) obj. -4.86556 iterations 3
Cbc0038I Pass  28: suminf.    0.48024 (2) obj. -4.63682 iterations 5
Cbc0038I Pass  29: suminf.    0.57913 (2) obj. -4.63682 iterations 3
Cbc0038I Pass  30: suminf.    1.67824 (10) obj. -4.63682 iterations 20
Cbc0038I Pass  31: suminf.    0.84463 (8) obj. -4.63682 iterations 17
Cbc0038I Pass  32: suminf.    0.76847 (4) obj. -4.63682 iterations 13
Cbc0038I Pass  33: suminf.    0.59371 (5) obj. -4.63682 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 141 columns, reduced to 24 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -0.4933 to -4.78919 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.2169
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.63930 (35) obj. -39.2094 iterations 0
Cbc0038I Pass  34: suminf.    3.23918 (34) obj. -37.2704 iterations 7
Cbc0038I Pass  35: suminf.    1.05566 (16) obj. -21.4539 iterations 18
Cbc0038I Pass  36: suminf.    0.71467 (8) obj. -12.2169 iterations 24
Cbc0038I Pass  37: suminf.    0.62158 (9) obj. -12.2169 iterations 2
Cbc0038I Pass  38: suminf.    1.55835 (7) obj. -12.2169 iterations 8
Cbc0038I Pass  39: suminf.    0.76903 (4) obj. -12.2169 iterations 6
Cbc0038I Pass  40: suminf.    0.61987 (4) obj. -12.2169 iterations 5
Cbc0038I Pass  41: suminf.    1.10016 (5) obj. -12.2169 iterations 9
Cbc0038I Pass  42: suminf.    0.98618 (5) obj. -12.2169 iterations 8
Cbc0038I Pass  43: suminf.    1.10163 (5) obj. -12.2169 iterations 7
Cbc0038I Pass  44: suminf.    0.50940 (5) obj. -12.2169 iterations 4
Cbc0038I Pass  45: suminf.    1.04815 (5) obj. -12.2169 iterations 5
Cbc0038I Pass  46: suminf.    1.13579 (9) obj. -12.2169 iterations 17
Cbc0038I Pass  47: suminf.    1.13579 (9) obj. -12.2169 iterations 5
Cbc0038I Pass  48: suminf.    0.92321 (5) obj. -12.2169 iterations 12
Cbc0038I Pass  49: suminf.    1.54487 (10) obj. -12.2169 iterations 15
Cbc0038I Pass  50: suminf.    0.93687 (9) obj. -12.2169 iterations 10
Cbc0038I Pass  51: suminf.    1.04815 (5) obj. -12.2169 iterations 13
Cbc0038I Pass  52: suminf.    0.50940 (5) obj. -12.2169 iterations 2
Cbc0038I Pass  53: suminf.    1.04815 (5) obj. -12.2169 iterations 5
Cbc0038I Pass  54: suminf.    1.55492 (12) obj. -12.2169 iterations 18
Cbc0038I Pass  55: suminf.    1.21291 (10) obj. -12.2169 iterations 12
Cbc0038I Pass  56: suminf.    1.31976 (6) obj. -12.2169 iterations 17
Cbc0038I Pass  57: suminf.    1.01206 (6) obj. -12.2169 iterations 8
Cbc0038I Pass  58: suminf.    1.43759 (5) obj. -12.2169 iterations 7
Cbc0038I Pass  59: suminf.    1.04390 (5) obj. -13.0043 iterations 1
Cbc0038I Pass  60: suminf.    0.95691 (5) obj. -12.2169 iterations 5
Cbc0038I Pass  61: suminf.    0.94884 (5) obj. -12.2169 iterations 4
Cbc0038I Pass  62: suminf.    1.43759 (5) obj. -12.2169 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 141 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -4.78919 - took 0.05 seconds
Cbc0012I Integer solution of -4.78919 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 127 rows 141 columns, reduced to 6 rows 5 columns
Cbc0031I 61 added rows had average density of 46.442623
Cbc0013I At root node, 61 cuts changed objective from -41.927561 to -21.756893 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18309 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2227 row cuts average 137.0 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 915 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1183 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 366 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 100 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.282 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.78919 best solution, best possible -21.756893 (1.99 seconds)
Cbc0012I Integer solution of -9.73839 found by DiveCoefficient after 7109 iterations and 5 nodes (2.74 seconds)
Cbc0010I After 5 nodes, 4 on tree, -9.73839 best solution, best possible -21.756893 (2.74 seconds)
Cbc0012I Integer solution of -12.38135 found by rounding after 7267 iterations and 8 nodes (2.81 seconds)
Cbc0012I Integer solution of -13.57933 found by DiveCoefficient after 7267 iterations and 8 nodes (2.81 seconds)
Cbc0004I Integer solution of -16.01313 found after 7299 iterations and 9 nodes (2.82 seconds)
Cbc0010I After 35 nodes, 4 on tree, -16.01313 best solution, best possible -21.756893 (3.52 seconds)
Cbc0001I Search completed - best objective -16.01313, took 9157 iterations and 48 nodes (3.64 seconds)
Cbc0032I Strong branching done 832 times (20090 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 174 variables fixed on reduced cost
Total time (CPU seconds):       3.35   (Wallclock seconds):       3.67

