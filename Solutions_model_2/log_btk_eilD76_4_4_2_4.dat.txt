Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 75 (-3) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 4.32827e-05 - average 3.30403e-07, 9 fixed columns
Coin0506I Presolve 110 (-21) rows, 64 (-11) columns and 340 (-64) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 2.8936957 - largest nonzero change 0 ( 0%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 56.165454
Clp0000I Optimal - objective value 56.165454
Coin0511I After Postsolve, objective 56.165454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.165454
Clp0000I Optimal - objective value 56.165454
Clp0000I Optimal - objective value 56.165454
Coin0511I After Postsolve, objective 56.165454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.16545379 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 75 columns (74 integer (74 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.139%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.1945
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.17442 iterations 62
Cbc0038I Solution found of 8.17442
Cbc0038I Relaxing continuous gives 8.17442
Cbc0038I Rounding solution of -4.88134 is better than previous of 8.17442

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -4.88134 to -26.0955 (0.05 seconds)
Cbc0038I Round again with cutoff of -29.1025
Cbc0038I Pass   2: suminf.    4.76700 (20) obj. -29.1025 iterations 32
Cbc0038I Pass   3: suminf.    4.48200 (38) obj. -29.1025 iterations 13
Cbc0038I Pass   4: suminf.    1.96357 (9) obj. -29.1025 iterations 43
Cbc0038I Pass   5: suminf.    1.96357 (9) obj. -29.1025 iterations 0
Cbc0038I Pass   6: suminf.    4.80626 (14) obj. -29.1025 iterations 17
Cbc0038I Pass   7: suminf.    2.90201 (12) obj. -29.1025 iterations 2
Cbc0038I Pass   8: suminf.    2.26848 (10) obj. -29.1025 iterations 3
Cbc0038I Pass   9: suminf.    2.97493 (9) obj. -29.1025 iterations 11
Cbc0038I Pass  10: suminf.    1.46751 (8) obj. -29.1025 iterations 8
Cbc0038I Pass  11: suminf.    1.40897 (6) obj. -29.1025 iterations 2
Cbc0038I Pass  12: suminf.    2.56288 (7) obj. -29.1025 iterations 6
Cbc0038I Pass  13: suminf.    1.34587 (5) obj. -29.1025 iterations 5
Cbc0038I Pass  14: suminf.    1.21939 (6) obj. -29.1025 iterations 3
Cbc0038I Pass  15: suminf.    1.18984 (6) obj. -29.1025 iterations 3
Cbc0038I Pass  16: suminf.    1.74635 (6) obj. -29.1025 iterations 10
Cbc0038I Pass  17: suminf.    1.33390 (5) obj. -29.1025 iterations 3
Cbc0038I Pass  18: suminf.    1.67822 (5) obj. -29.1025 iterations 7
Cbc0038I Pass  19: suminf.    1.11735 (4) obj. -29.1025 iterations 4
Cbc0038I Pass  20: suminf.    2.15959 (6) obj. -29.1025 iterations 5
Cbc0038I Pass  21: suminf.    1.16877 (5) obj. -29.1025 iterations 7
Cbc0038I Pass  22: suminf.    1.11529 (5) obj. -29.1025 iterations 2
Cbc0038I Pass  23: suminf.    1.69090 (5) obj. -29.1025 iterations 5
Cbc0038I Pass  24: suminf.    1.11735 (4) obj. -29.1025 iterations 4
Cbc0038I Pass  25: suminf.    2.15959 (6) obj. -29.1025 iterations 5
Cbc0038I Pass  26: suminf.    1.16877 (5) obj. -29.1025 iterations 7
Cbc0038I Pass  27: suminf.    1.11529 (5) obj. -29.1025 iterations 2
Cbc0038I Pass  28: suminf.    1.69090 (5) obj. -29.1025 iterations 5
Cbc0038I Pass  29: suminf.    1.11735 (4) obj. -29.1025 iterations 4
Cbc0038I Pass  30: suminf.    2.15959 (6) obj. -29.1025 iterations 5
Cbc0038I Pass  31: suminf.    1.16877 (5) obj. -29.1025 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 86 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -26.0955 to -26.5574 (0.10 seconds)
Cbc0038I Round again with cutoff of -34.5151
Cbc0038I Pass  31: suminf.    5.63813 (20) obj. -34.5151 iterations 0
Cbc0038I Pass  32: suminf.    3.98906 (13) obj. -34.5151 iterations 16
Cbc0038I Pass  33: suminf.    3.52985 (10) obj. -34.5151 iterations 7
Cbc0038I Pass  34: suminf.    3.52669 (10) obj. -34.5151 iterations 3
Cbc0038I Pass  35: suminf.    2.86300 (8) obj. -34.5151 iterations 15
Cbc0038I Pass  36: suminf.    1.94009 (7) obj. -34.5151 iterations 3
Cbc0038I Pass  37: suminf.    1.83950 (6) obj. -34.5151 iterations 4
Cbc0038I Pass  38: suminf.    2.29323 (6) obj. -34.5151 iterations 12
Cbc0038I Pass  39: suminf.    1.88079 (5) obj. -34.5151 iterations 6
Cbc0038I Pass  40: suminf.    1.86742 (5) obj. -34.5151 iterations 1
Cbc0038I Pass  41: suminf.    2.02357 (5) obj. -34.5151 iterations 6
Cbc0038I Pass  42: suminf.    1.84894 (5) obj. -34.5151 iterations 2
Cbc0038I Pass  43: suminf.    2.18684 (5) obj. -34.5151 iterations 5
Cbc0038I Pass  44: suminf.    2.50705 (10) obj. -34.5151 iterations 25
Cbc0038I Pass  45: suminf.    2.02543 (11) obj. -34.5151 iterations 8
Cbc0038I Pass  46: suminf.    2.69267 (8) obj. -34.5151 iterations 22
Cbc0038I Pass  47: suminf.    2.69267 (8) obj. -34.5151 iterations 0
Cbc0038I Pass  48: suminf.    2.41036 (7) obj. -34.5151 iterations 12
Cbc0038I Pass  49: suminf.    2.25085 (5) obj. -34.5151 iterations 4
Cbc0038I Pass  50: suminf.    1.76727 (5) obj. -34.5151 iterations 3
Cbc0038I Pass  51: suminf.    2.38917 (6) obj. -34.5151 iterations 5
Cbc0038I Pass  52: suminf.    1.96811 (6) obj. -34.5151 iterations 2
Cbc0038I Pass  53: suminf.    1.87129 (6) obj. -34.5151 iterations 4
Cbc0038I Pass  54: suminf.    2.48796 (6) obj. -34.5151 iterations 12
Cbc0038I Pass  55: suminf.    1.89849 (6) obj. -34.5151 iterations 9
Cbc0038I Pass  56: suminf.    2.34934 (6) obj. -34.5151 iterations 8
Cbc0038I Pass  57: suminf.    4.71756 (12) obj. -34.5151 iterations 26
Cbc0038I Pass  58: suminf.    3.26685 (11) obj. -34.5151 iterations 11
Cbc0038I Pass  59: suminf.    3.26685 (11) obj. -34.5151 iterations 2
Cbc0038I Pass  60: suminf.    3.87713 (13) obj. -34.5151 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 82 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -26.5574 - took 0.12 seconds
Cbc0012I Integer solution of -26.5574 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 75 rows 46 columns
Cbc0031I 26 added rows had average density of 61.230769
Cbc0013I At root node, 26 cuts changed objective from -56.165454 to -46.831865 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10870 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2030 row cuts average 74.1 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 179 row cuts average 65.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.5574 best solution, best possible -46.831865 (0.91 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 16 rows 17 columns
Cbc0016I Integer solution of -26.7296 found by strong branching after 9268 iterations and 55 nodes (1.20 seconds)
Cbc0001I Search completed - best objective -26.7296, took 10527 iterations and 90 nodes (1.27 seconds)
Cbc0032I Strong branching done 858 times (15325 iterations), fathomed 10 nodes and fixed 26 variables
Cbc0035I Maximum depth 21, 375 variables fixed on reduced cost
Total time (CPU seconds):       1.24   (Wallclock seconds):       1.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-56) rows, 115 (-37) columns and 1883 (-1420) elements
Clp1000I sum of infeasibilities 8.1248e-08 - average 8.29062e-10, 24 fixed columns
Coin0506I Presolve 76 (-22) rows, 91 (-24) columns and 1173 (-710) elements
Clp0006I 0  Obj 46.972456 Dual inf 4.9418952 (91)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.0505937 - largest nonzero change 2.8090968e-05 ( 0.0019019041%) - largest zero change 2.9911785e-05
Clp0000I Optimal - objective value 68.613746
Clp0000I Optimal - objective value 68.613746
Coin0511I After Postsolve, objective 68.613746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 68.613746
Clp0000I Optimal - objective value 68.613746
Clp0000I Optimal - objective value 68.613746
Clp0000I Optimal - objective value 68.613746
Coin0511I After Postsolve, objective 68.613746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.61374574 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 116 columns (116 integer (116 of which binary)) and 1890 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.508%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.52784
Cbc0038I Pass   1: suminf.    3.19822 (30) obj. -46.7676 iterations 14
Cbc0038I Pass   2: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass   3: suminf.    0.13778 (3) obj. -6.2135 iterations 27
Cbc0038I Solution found of -2.39294
Cbc0038I Rounding solution of -12.8909 is better than previous of -2.39294

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -17.5045
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass   5: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass   6: suminf.    0.54232 (6) obj. -17.5045 iterations 25
Cbc0038I Pass   7: suminf.    0.40208 (6) obj. -19.3276 iterations 1
Cbc0038I Pass   8: suminf.    0.63779 (5) obj. -17.5045 iterations 8
Cbc0038I Pass   9: suminf.    0.63779 (5) obj. -17.5045 iterations 0
Cbc0038I Pass  10: suminf.    1.56030 (10) obj. -17.5045 iterations 11
Cbc0038I Pass  11: suminf.    0.51632 (9) obj. -17.5045 iterations 3
Cbc0038I Pass  12: suminf.    0.29505 (2) obj. -17.5072 iterations 5
Cbc0038I Pass  13: suminf.    0.63029 (4) obj. -17.5045 iterations 4
Cbc0038I Pass  14: suminf.    0.52601 (3) obj. -17.5045 iterations 2
Cbc0038I Pass  15: suminf.    0.27047 (2) obj. -17.5045 iterations 3
Cbc0038I Pass  16: suminf.    0.27047 (2) obj. -17.5045 iterations 0
Cbc0038I Pass  17: suminf.    0.71428 (3) obj. -17.5045 iterations 7
Cbc0038I Pass  18: suminf.    0.48419 (2) obj. -17.5045 iterations 6
Cbc0038I Pass  19: suminf.    0.32238 (2) obj. -19.1139 iterations 1
Cbc0038I Pass  20: suminf.    0.48419 (2) obj. -17.5045 iterations 1
Cbc0038I Pass  21: suminf.    1.17132 (10) obj. -21.5324 iterations 26
Cbc0038I Pass  22: suminf.    1.17132 (10) obj. -21.5324 iterations 4
Cbc0038I Pass  23: suminf.    0.78480 (4) obj. -17.5045 iterations 13
Cbc0038I Pass  24: suminf.    0.58128 (4) obj. -17.5045 iterations 1
Cbc0038I Pass  25: suminf.    0.73461 (3) obj. -17.5045 iterations 3
Cbc0038I Pass  26: suminf.    0.13514 (1) obj. -18.4326 iterations 2
Cbc0038I Pass  27: suminf.    0.20653 (1) obj. -17.5045 iterations 1
Cbc0038I Pass  28: suminf.    2.21295 (13) obj. -17.5045 iterations 35
Cbc0038I Pass  29: suminf.    1.55170 (10) obj. -17.5045 iterations 7
Cbc0038I Pass  30: suminf.    1.51496 (10) obj. -17.5045 iterations 1
Cbc0038I Pass  31: suminf.    1.46908 (7) obj. -17.5045 iterations 18
Cbc0038I Pass  32: suminf.    1.46908 (7) obj. -17.5045 iterations 0
Cbc0038I Pass  33: suminf.    1.04372 (4) obj. -17.5045 iterations 9
Cbc0038I Rounding solution of -18.8189 is better than previous of -12.8909

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 28 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -18.8189 to -22.274 (0.06 seconds)
Cbc0038I Round again with cutoff of -29.6245
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass  34: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass  35: suminf.    2.04059 (19) obj. -29.6245 iterations 12
Cbc0038I Pass  36: suminf.    2.23678 (15) obj. -29.6245 iterations 23
Cbc0038I Pass  37: suminf.    2.23678 (15) obj. -29.6245 iterations 0
Cbc0038I Pass  38: suminf.    2.09828 (11) obj. -29.6245 iterations 16
Cbc0038I Pass  39: suminf.    1.75596 (13) obj. -29.6245 iterations 5
Cbc0038I Pass  40: suminf.    2.06789 (13) obj. -29.6245 iterations 6
Cbc0038I Pass  41: suminf.    2.06789 (13) obj. -29.6245 iterations 1
Cbc0038I Pass  42: suminf.    3.50454 (13) obj. -29.6245 iterations 7
Cbc0038I Pass  43: suminf.    3.50454 (13) obj. -29.6245 iterations 0
Cbc0038I Pass  44: suminf.    2.06789 (13) obj. -29.6245 iterations 10
Cbc0038I Pass  45: suminf.    2.83526 (16) obj. -29.6245 iterations 18
Cbc0038I Pass  46: suminf.    2.09604 (13) obj. -29.6245 iterations 9
Cbc0038I Pass  47: suminf.    1.73383 (12) obj. -29.6245 iterations 8
Cbc0038I Pass  48: suminf.    2.08073 (10) obj. -29.6245 iterations 14
Cbc0038I Pass  49: suminf.    1.34899 (10) obj. -29.6245 iterations 3
Cbc0038I Pass  50: suminf.    1.55574 (10) obj. -29.6245 iterations 4
Cbc0038I Pass  51: suminf.    1.98136 (17) obj. -29.6245 iterations 20
Cbc0038I Pass  52: suminf.    1.41099 (12) obj. -29.6245 iterations 11
Cbc0038I Pass  53: suminf.    1.29018 (9) obj. -29.6245 iterations 16
Cbc0038I Pass  54: suminf.    1.23025 (15) obj. -29.6245 iterations 4
Cbc0038I Pass  55: suminf.    2.21097 (12) obj. -29.6245 iterations 13
Cbc0038I Pass  56: suminf.    2.11823 (13) obj. -29.6245 iterations 5
Cbc0038I Pass  57: suminf.    2.57139 (11) obj. -29.6245 iterations 11
Cbc0038I Pass  58: suminf.    2.57139 (11) obj. -29.6245 iterations 2
Cbc0038I Pass  59: suminf.    2.51089 (11) obj. -29.6245 iterations 4
Cbc0038I Pass  60: suminf.    2.51089 (11) obj. -29.6245 iterations 2
Cbc0038I Pass  61: suminf.    2.57139 (11) obj. -29.6245 iterations 4
Cbc0038I Pass  62: suminf.    2.94934 (16) obj. -29.6245 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -22.274 - took 0.07 seconds
Cbc0012I Integer solution of -22.27401 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 8 rows 12 columns
Cbc0031I 64 added rows had average density of 31.15625
Cbc0013I At root node, 64 cuts changed objective from -59.025963 to -37.551134 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23052 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2317 row cuts average 113.4 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 716 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1726 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 368 row cuts average 52.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 65 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.658 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.27401 best solution, best possible -37.551134 (2.84 seconds)
Cbc0012I Integer solution of -24.20651 found by rounding after 7714 iterations and 7 nodes (3.31 seconds)
Cbc0012I Integer solution of -24.89267 found by rounding after 7771 iterations and 10 nodes (3.35 seconds)
Cbc0012I Integer solution of -25.71215 found by rounding after 7792 iterations and 16 nodes (3.36 seconds)
Cbc0004I Integer solution of -25.7296 found after 7808 iterations and 23 nodes (3.36 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 21 rows 28 columns
Cbc0010I After 41 nodes, 14 on tree, -25.7296 best solution, best possible -34.350431 (3.55 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 58 rows 70 columns
Cbc0012I Integer solution of -26.5574 found by rounding after 10160 iterations and 118 nodes (3.81 seconds)
Cbc0010I After 222 nodes, 12 on tree, -26.5574 best solution, best possible -34.350431 (4.25 seconds)
Cbc0012I Integer solution of -26.71215 found by rounding after 15262 iterations and 271 nodes (4.49 seconds)
Cbc0012I Integer solution of -26.7296 found by rounding after 15285 iterations and 278 nodes (4.49 seconds)
Cbc0001I Search completed - best objective -26.7296, took 15521 iterations and 286 nodes (4.50 seconds)
Cbc0032I Strong branching done 2332 times (31168 iterations), fathomed 42 nodes and fixed 38 variables
Cbc0035I Maximum depth 22, 673 variables fixed on reduced cost
Total time (CPU seconds):       3.72   (Wallclock seconds):       4.52

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 75 (-3) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 4.32827e-05 - average 3.30403e-07, 9 fixed columns
Coin0506I Presolve 110 (-21) rows, 64 (-11) columns and 340 (-64) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 2.8936957 - largest nonzero change 0 ( 0%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 56.165454
Clp0000I Optimal - objective value 56.165454
Coin0511I After Postsolve, objective 56.165454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 56.165454
Clp0000I Optimal - objective value 56.165454
Clp0000I Optimal - objective value 56.165454
Coin0511I After Postsolve, objective 56.165454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.16545379 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 75 columns (74 integer (74 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.139%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.1945
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.17442 iterations 62
Cbc0038I Solution found of 8.17442
Cbc0038I Relaxing continuous gives 8.17442
Cbc0038I Rounding solution of -4.88134 is better than previous of 8.17442

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 75 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -4.88134 to -26.0955 (0.05 seconds)
Cbc0038I Round again with cutoff of -29.1025
Cbc0038I Pass   2: suminf.    4.76700 (20) obj. -29.1025 iterations 32
Cbc0038I Pass   3: suminf.    4.48200 (38) obj. -29.1025 iterations 13
Cbc0038I Pass   4: suminf.    1.96357 (9) obj. -29.1025 iterations 43
Cbc0038I Pass   5: suminf.    1.96357 (9) obj. -29.1025 iterations 0
Cbc0038I Pass   6: suminf.    4.80626 (14) obj. -29.1025 iterations 17
Cbc0038I Pass   7: suminf.    2.90201 (12) obj. -29.1025 iterations 2
Cbc0038I Pass   8: suminf.    2.26848 (10) obj. -29.1025 iterations 3
Cbc0038I Pass   9: suminf.    2.97493 (9) obj. -29.1025 iterations 11
Cbc0038I Pass  10: suminf.    1.46751 (8) obj. -29.1025 iterations 8
Cbc0038I Pass  11: suminf.    1.40897 (6) obj. -29.1025 iterations 2
Cbc0038I Pass  12: suminf.    2.56288 (7) obj. -29.1025 iterations 6
Cbc0038I Pass  13: suminf.    1.34587 (5) obj. -29.1025 iterations 5
Cbc0038I Pass  14: suminf.    1.21939 (6) obj. -29.1025 iterations 3
Cbc0038I Pass  15: suminf.    1.18984 (6) obj. -29.1025 iterations 3
Cbc0038I Pass  16: suminf.    1.74635 (6) obj. -29.1025 iterations 10
Cbc0038I Pass  17: suminf.    1.33390 (5) obj. -29.1025 iterations 3
Cbc0038I Pass  18: suminf.    1.67822 (5) obj. -29.1025 iterations 7
Cbc0038I Pass  19: suminf.    1.11735 (4) obj. -29.1025 iterations 4
Cbc0038I Pass  20: suminf.    2.15959 (6) obj. -29.1025 iterations 5
Cbc0038I Pass  21: suminf.    1.16877 (5) obj. -29.1025 iterations 7
Cbc0038I Pass  22: suminf.    1.11529 (5) obj. -29.1025 iterations 2
Cbc0038I Pass  23: suminf.    1.69090 (5) obj. -29.1025 iterations 5
Cbc0038I Pass  24: suminf.    1.11735 (4) obj. -29.1025 iterations 4
Cbc0038I Pass  25: suminf.    2.15959 (6) obj. -29.1025 iterations 5
Cbc0038I Pass  26: suminf.    1.16877 (5) obj. -29.1025 iterations 7
Cbc0038I Pass  27: suminf.    1.11529 (5) obj. -29.1025 iterations 2
Cbc0038I Pass  28: suminf.    1.69090 (5) obj. -29.1025 iterations 5
Cbc0038I Pass  29: suminf.    1.11735 (4) obj. -29.1025 iterations 4
Cbc0038I Pass  30: suminf.    2.15959 (6) obj. -29.1025 iterations 5
Cbc0038I Pass  31: suminf.    1.16877 (5) obj. -29.1025 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 86 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -26.0955 to -26.5574 (0.10 seconds)
Cbc0038I Round again with cutoff of -34.5151
Cbc0038I Pass  31: suminf.    5.63813 (20) obj. -34.5151 iterations 0
Cbc0038I Pass  32: suminf.    3.98906 (13) obj. -34.5151 iterations 16
Cbc0038I Pass  33: suminf.    3.52985 (10) obj. -34.5151 iterations 7
Cbc0038I Pass  34: suminf.    3.52669 (10) obj. -34.5151 iterations 3
Cbc0038I Pass  35: suminf.    2.86300 (8) obj. -34.5151 iterations 15
Cbc0038I Pass  36: suminf.    1.94009 (7) obj. -34.5151 iterations 3
Cbc0038I Pass  37: suminf.    1.83950 (6) obj. -34.5151 iterations 4
Cbc0038I Pass  38: suminf.    2.29323 (6) obj. -34.5151 iterations 12
Cbc0038I Pass  39: suminf.    1.88079 (5) obj. -34.5151 iterations 6
Cbc0038I Pass  40: suminf.    1.86742 (5) obj. -34.5151 iterations 1
Cbc0038I Pass  41: suminf.    2.02357 (5) obj. -34.5151 iterations 6
Cbc0038I Pass  42: suminf.    1.84894 (5) obj. -34.5151 iterations 2
Cbc0038I Pass  43: suminf.    2.18684 (5) obj. -34.5151 iterations 5
Cbc0038I Pass  44: suminf.    2.50705 (10) obj. -34.5151 iterations 25
Cbc0038I Pass  45: suminf.    2.02543 (11) obj. -34.5151 iterations 8
Cbc0038I Pass  46: suminf.    2.69267 (8) obj. -34.5151 iterations 22
Cbc0038I Pass  47: suminf.    2.69267 (8) obj. -34.5151 iterations 0
Cbc0038I Pass  48: suminf.    2.41036 (7) obj. -34.5151 iterations 12
Cbc0038I Pass  49: suminf.    2.25085 (5) obj. -34.5151 iterations 4
Cbc0038I Pass  50: suminf.    1.76727 (5) obj. -34.5151 iterations 3
Cbc0038I Pass  51: suminf.    2.38917 (6) obj. -34.5151 iterations 5
Cbc0038I Pass  52: suminf.    1.96811 (6) obj. -34.5151 iterations 2
Cbc0038I Pass  53: suminf.    1.87129 (6) obj. -34.5151 iterations 4
Cbc0038I Pass  54: suminf.    2.48796 (6) obj. -34.5151 iterations 12
Cbc0038I Pass  55: suminf.    1.89849 (6) obj. -34.5151 iterations 9
Cbc0038I Pass  56: suminf.    2.34934 (6) obj. -34.5151 iterations 8
Cbc0038I Pass  57: suminf.    4.71756 (12) obj. -34.5151 iterations 26
Cbc0038I Pass  58: suminf.    3.26685 (11) obj. -34.5151 iterations 11
Cbc0038I Pass  59: suminf.    3.26685 (11) obj. -34.5151 iterations 2
Cbc0038I Pass  60: suminf.    3.87713 (13) obj. -34.5151 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 82 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -26.5574 - took 0.12 seconds
Cbc0012I Integer solution of -26.5574 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 75 rows 46 columns
Cbc0031I 26 added rows had average density of 61.230769
Cbc0013I At root node, 26 cuts changed objective from -56.165454 to -46.831865 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10870 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2030 row cuts average 74.1 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 179 row cuts average 65.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.5574 best solution, best possible -46.831865 (0.93 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 16 rows 17 columns
Cbc0016I Integer solution of -26.7296 found by strong branching after 9268 iterations and 55 nodes (1.21 seconds)
Cbc0001I Search completed - best objective -26.7296, took 10527 iterations and 90 nodes (1.28 seconds)
Cbc0032I Strong branching done 858 times (15325 iterations), fathomed 10 nodes and fixed 26 variables
Cbc0035I Maximum depth 21, 375 variables fixed on reduced cost
Total time (CPU seconds):       1.25   (Wallclock seconds):       1.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 115 (-38) columns and 1883 (-1421) elements
Clp1000I sum of infeasibilities 8.1248e-08 - average 8.29062e-10, 24 fixed columns
Coin0506I Presolve 76 (-22) rows, 91 (-24) columns and 1173 (-710) elements
Clp0006I 0  Obj 46.972456 Dual inf 4.9418952 (91)
Clp0029I End of values pass after 91 iterations
Clp0014I Perturbing problem by 0.001% of 2.0505937 - largest nonzero change 2.8090968e-05 ( 0.0019019041%) - largest zero change 2.9911785e-05
Clp0000I Optimal - objective value 68.613746
Clp0000I Optimal - objective value 68.613746
Coin0511I After Postsolve, objective 68.613746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 68.613746
Clp0000I Optimal - objective value 68.613746
Clp0000I Optimal - objective value 68.613746
Clp0000I Optimal - objective value 68.613746
Coin0511I After Postsolve, objective 68.613746, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.61374574 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 116 columns (116 integer (116 of which binary)) and 1890 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.508%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.52784
Cbc0038I Pass   1: suminf.    3.19822 (30) obj. -46.7676 iterations 14
Cbc0038I Pass   2: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass   3: suminf.    0.13778 (3) obj. -6.2135 iterations 27
Cbc0038I Solution found of -2.39294
Cbc0038I Rounding solution of -12.8909 is better than previous of -2.39294

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -17.5045
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass   5: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass   6: suminf.    0.54232 (6) obj. -17.5045 iterations 25
Cbc0038I Pass   7: suminf.    0.40208 (6) obj. -19.3276 iterations 1
Cbc0038I Pass   8: suminf.    0.63779 (5) obj. -17.5045 iterations 8
Cbc0038I Pass   9: suminf.    0.63779 (5) obj. -17.5045 iterations 0
Cbc0038I Pass  10: suminf.    1.56030 (10) obj. -17.5045 iterations 11
Cbc0038I Pass  11: suminf.    0.51632 (9) obj. -17.5045 iterations 3
Cbc0038I Pass  12: suminf.    0.29505 (2) obj. -17.5072 iterations 5
Cbc0038I Pass  13: suminf.    0.63029 (4) obj. -17.5045 iterations 4
Cbc0038I Pass  14: suminf.    0.52601 (3) obj. -17.5045 iterations 2
Cbc0038I Pass  15: suminf.    0.27047 (2) obj. -17.5045 iterations 3
Cbc0038I Pass  16: suminf.    0.27047 (2) obj. -17.5045 iterations 0
Cbc0038I Pass  17: suminf.    0.71428 (3) obj. -17.5045 iterations 7
Cbc0038I Pass  18: suminf.    0.48419 (2) obj. -17.5045 iterations 6
Cbc0038I Pass  19: suminf.    0.32238 (2) obj. -19.1139 iterations 1
Cbc0038I Pass  20: suminf.    0.48419 (2) obj. -17.5045 iterations 1
Cbc0038I Pass  21: suminf.    1.17132 (10) obj. -21.5324 iterations 26
Cbc0038I Pass  22: suminf.    1.17132 (10) obj. -21.5324 iterations 4
Cbc0038I Pass  23: suminf.    0.78480 (4) obj. -17.5045 iterations 13
Cbc0038I Pass  24: suminf.    0.58128 (4) obj. -17.5045 iterations 1
Cbc0038I Pass  25: suminf.    0.73461 (3) obj. -17.5045 iterations 3
Cbc0038I Pass  26: suminf.    0.13514 (1) obj. -18.4326 iterations 2
Cbc0038I Pass  27: suminf.    0.20653 (1) obj. -17.5045 iterations 1
Cbc0038I Pass  28: suminf.    2.21295 (13) obj. -17.5045 iterations 35
Cbc0038I Pass  29: suminf.    1.55170 (10) obj. -17.5045 iterations 7
Cbc0038I Pass  30: suminf.    1.51496 (10) obj. -17.5045 iterations 1
Cbc0038I Pass  31: suminf.    1.46908 (7) obj. -17.5045 iterations 18
Cbc0038I Pass  32: suminf.    1.46908 (7) obj. -17.5045 iterations 0
Cbc0038I Pass  33: suminf.    1.04372 (4) obj. -17.5045 iterations 9
Cbc0038I Rounding solution of -18.8189 is better than previous of -12.8909

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 28 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -18.8189 to -22.274 (0.06 seconds)
Cbc0038I Round again with cutoff of -29.6245
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass  34: suminf.    3.19822 (30) obj. -46.7676 iterations 0
Cbc0038I Pass  35: suminf.    2.04059 (19) obj. -29.6245 iterations 12
Cbc0038I Pass  36: suminf.    2.23678 (15) obj. -29.6245 iterations 23
Cbc0038I Pass  37: suminf.    2.23678 (15) obj. -29.6245 iterations 0
Cbc0038I Pass  38: suminf.    2.09828 (11) obj. -29.6245 iterations 16
Cbc0038I Pass  39: suminf.    1.75596 (13) obj. -29.6245 iterations 5
Cbc0038I Pass  40: suminf.    2.06789 (13) obj. -29.6245 iterations 6
Cbc0038I Pass  41: suminf.    2.06789 (13) obj. -29.6245 iterations 1
Cbc0038I Pass  42: suminf.    3.50454 (13) obj. -29.6245 iterations 7
Cbc0038I Pass  43: suminf.    3.50454 (13) obj. -29.6245 iterations 0
Cbc0038I Pass  44: suminf.    2.06789 (13) obj. -29.6245 iterations 10
Cbc0038I Pass  45: suminf.    2.83526 (16) obj. -29.6245 iterations 18
Cbc0038I Pass  46: suminf.    2.09604 (13) obj. -29.6245 iterations 9
Cbc0038I Pass  47: suminf.    1.73383 (12) obj. -29.6245 iterations 8
Cbc0038I Pass  48: suminf.    2.08073 (10) obj. -29.6245 iterations 14
Cbc0038I Pass  49: suminf.    1.34899 (10) obj. -29.6245 iterations 3
Cbc0038I Pass  50: suminf.    1.55574 (10) obj. -29.6245 iterations 4
Cbc0038I Pass  51: suminf.    1.98136 (17) obj. -29.6245 iterations 20
Cbc0038I Pass  52: suminf.    1.41099 (12) obj. -29.6245 iterations 11
Cbc0038I Pass  53: suminf.    1.29018 (9) obj. -29.6245 iterations 16
Cbc0038I Pass  54: suminf.    1.23025 (15) obj. -29.6245 iterations 4
Cbc0038I Pass  55: suminf.    2.21097 (12) obj. -29.6245 iterations 13
Cbc0038I Pass  56: suminf.    2.11823 (13) obj. -29.6245 iterations 5
Cbc0038I Pass  57: suminf.    2.57139 (11) obj. -29.6245 iterations 11
Cbc0038I Pass  58: suminf.    2.57139 (11) obj. -29.6245 iterations 2
Cbc0038I Pass  59: suminf.    2.51089 (11) obj. -29.6245 iterations 4
Cbc0038I Pass  60: suminf.    2.51089 (11) obj. -29.6245 iterations 2
Cbc0038I Pass  61: suminf.    2.57139 (11) obj. -29.6245 iterations 4
Cbc0038I Pass  62: suminf.    2.94934 (16) obj. -29.6245 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -22.274 - took 0.07 seconds
Cbc0012I Integer solution of -22.27401 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 8 rows 12 columns
Cbc0031I 64 added rows had average density of 31.15625
Cbc0013I At root node, 64 cuts changed objective from -59.025963 to -37.551134 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23052 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2317 row cuts average 113.4 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 716 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1726 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 368 row cuts average 52.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 65 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.644 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -22.27401 best solution, best possible -37.551134 (2.89 seconds)
Cbc0012I Integer solution of -24.20651 found by rounding after 7714 iterations and 7 nodes (3.36 seconds)
Cbc0012I Integer solution of -24.89267 found by rounding after 7771 iterations and 10 nodes (3.40 seconds)
Cbc0012I Integer solution of -25.71215 found by rounding after 7792 iterations and 16 nodes (3.40 seconds)
Cbc0004I Integer solution of -25.7296 found after 7808 iterations and 23 nodes (3.41 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 21 rows 28 columns
Cbc0010I After 41 nodes, 14 on tree, -25.7296 best solution, best possible -34.350431 (3.61 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 58 rows 70 columns
Cbc0012I Integer solution of -26.5574 found by rounding after 10160 iterations and 118 nodes (3.86 seconds)
Cbc0010I After 230 nodes, 11 on tree, -26.5574 best solution, best possible -34.350431 (4.31 seconds)
Cbc0012I Integer solution of -26.71215 found by rounding after 15262 iterations and 271 nodes (4.51 seconds)
Cbc0012I Integer solution of -26.7296 found by rounding after 15285 iterations and 278 nodes (4.52 seconds)
Cbc0001I Search completed - best objective -26.7296, took 15521 iterations and 286 nodes (4.53 seconds)
Cbc0032I Strong branching done 2332 times (31168 iterations), fathomed 42 nodes and fixed 38 variables
Cbc0035I Maximum depth 22, 673 variables fixed on reduced cost
Total time (CPU seconds):       3.70   (Wallclock seconds):       4.55

