Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 345 (-148) rows, 174 (-73) columns and 1026 (-429) elements
Clp0000I Optimal - objective value 129009.2
Coin0511I After Postsolve, objective 129009.2, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129009.197 - 154 iterations time 0.012, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 345 rows, 174 columns (173 integer (173 of which binary)) and 1026 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.565%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 10.7384
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -34098.7 iterations 63
Cbc0038I Solution found of -34098.7
Cbc0038I Relaxing continuous gives -34098.7
Cbc0038I Rounding solution of -38909.4 is better than previous of -34098.7

Cbc0038I Before mini branch and bound, 145 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 174 columns, reduced to 47 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -38909.4 to -84001.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -88501.9
Cbc0038I Pass   2: suminf.    0.76538 (2) obj. -88501.9 iterations 2
Cbc0038I Pass   3: suminf.    0.52295 (2) obj. -88501.9 iterations 3
Cbc0038I Pass   4: suminf.    0.50130 (2) obj. -88501.9 iterations 1
Cbc0038I Pass   5: suminf.    0.59539 (3) obj. -88501.9 iterations 2
Cbc0038I Pass   6: suminf.    6.74025 (23) obj. -88501.9 iterations 34
Cbc0038I Pass   7: suminf.    1.36239 (8) obj. -88501.9 iterations 24
Cbc0038I Pass   8: suminf.    1.36239 (8) obj. -88501.9 iterations 0
Cbc0038I Pass   9: suminf.    1.79250 (5) obj. -88501.9 iterations 7
Cbc0038I Pass  10: suminf.    1.64511 (6) obj. -88501.9 iterations 3
Cbc0038I Pass  11: suminf.    1.79250 (5) obj. -88501.9 iterations 6
Cbc0038I Pass  12: suminf.    1.63348 (6) obj. -88501.9 iterations 3
Cbc0038I Pass  13: suminf.    1.84110 (14) obj. -88501.9 iterations 5
Cbc0038I Pass  14: suminf.    1.83718 (15) obj. -88501.9 iterations 2
Cbc0038I Pass  15: suminf.    2.71399 (14) obj. -88501.9 iterations 21
Cbc0038I Pass  16: suminf.    2.64583 (14) obj. -88501.9 iterations 2
Cbc0038I Pass  17: suminf.    2.79139 (13) obj. -88501.9 iterations 13
Cbc0038I Pass  18: suminf.    2.54007 (14) obj. -88501.9 iterations 1
Cbc0038I Pass  19: suminf.    2.53767 (15) obj. -88501.9 iterations 1
Cbc0038I Pass  20: suminf.    3.29290 (12) obj. -88501.9 iterations 18
Cbc0038I Pass  21: suminf.    3.29290 (12) obj. -88501.9 iterations 0
Cbc0038I Pass  22: suminf.    3.13275 (14) obj. -88501.9 iterations 15
Cbc0038I Pass  23: suminf.    2.53463 (14) obj. -88501.9 iterations 5
Cbc0038I Pass  24: suminf.    2.52867 (15) obj. -88501.9 iterations 1
Cbc0038I Pass  25: suminf.    3.29290 (12) obj. -88501.9 iterations 18
Cbc0038I Pass  26: suminf.    3.29290 (12) obj. -88501.9 iterations 0
Cbc0038I Pass  27: suminf.    3.13275 (14) obj. -88501.9 iterations 15
Cbc0038I Pass  28: suminf.    2.52104 (14) obj. -88501.9 iterations 5
Cbc0038I Pass  29: suminf.    2.50020 (15) obj. -88501.9 iterations 1
Cbc0038I Pass  30: suminf.    3.29290 (12) obj. -88501.9 iterations 17
Cbc0038I Pass  31: suminf.    3.29290 (12) obj. -88501.9 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 118 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 174 columns, reduced to 75 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -84001.1 - took 0.06 seconds
Cbc0012I Integer solution of -84001.101 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 345 rows 174 columns, reduced to 47 rows 29 columns
Cbc0031I 27 added rows had average density of 9.2962963
Cbc0013I At root node, 27 cuts changed objective from -129009.2 to -84183.042 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 1836 row cuts average 2.9 elements, 20 column cuts (29 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0012I Integer solution of -84061.329 found by DiveCoefficient after 233 iterations and 4 nodes (0.17 seconds)
Cbc0001I Search completed - best objective -84061.32949999999, took 555 iterations and 22 nodes (0.27 seconds)
Cbc0032I Strong branching done 116 times (565 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 6, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 341 (-151) rows, 342 (-148) columns and 15475 (-15870) elements
Clp1000I sum of infeasibilities 0.0436871 - average 0.000128115, 192 fixed columns
Coin0506I Presolve 135 (-206) rows, 142 (-200) columns and 407 (-15068) elements
Clp0029I End of values pass after 142 iterations
Clp0014I Perturbing problem by 0.001% of 2.3424505 - largest nonzero change 3.0268624e-05 ( 0.0020014766%) - largest zero change 2.9019187e-05
Clp0000I Optimal - objective value 42071.703
Clp0000I Optimal - objective value 42071.703
Coin0511I After Postsolve, objective 42071.703, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.3214676 - largest nonzero change 2.9797534e-05 ( 0.0029019187%) - largest zero change 2.957689e-05
Clp0000I Optimal - objective value 149273.62
Clp0000I Optimal - objective value 149273.62
Clp0000I Optimal - objective value 149273.62
Coin0511I After Postsolve, objective 149273.62, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149273.6152 - 0 iterations time 0.272, Presolve 0.00, Idiot 0.26

Starting MIP optimization
Cgl0004I processed model has 341 rows, 342 columns (342 integer (342 of which binary)) and 15475 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 164 integers unsatisfied sum - 58.1491
Cbc0038I Pass   1: suminf.   12.02926 (58) obj. -63933.7 iterations 142
Cbc0038I Pass   2: suminf.   12.02926 (58) obj. -63933.7 iterations 12
Cbc0038I Pass   3: suminf.    5.89983 (39) obj. -60904.7 iterations 19
Cbc0038I Pass   4: suminf.    1.48814 (17) obj. -57571.2 iterations 22
Cbc0038I Pass   5: suminf.    0.12330 (3) obj. -54881.5 iterations 14
Cbc0038I Solution found of -54330.1
Cbc0038I Rounding solution of -54495.3 is better than previous of -54330.1

Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 342 columns, reduced to 171 rows 177 columns - 33 fixed gives 138, 144 - ok now
Cbc0038I Full problem 341 rows 342 columns, reduced to 50 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -54495.3 to -81112.1 (0.15 seconds)
Cbc0038I Round again with cutoff of -87155.9
Cbc0038I Pass   6: suminf.   13.63301 (88) obj. -87155.9 iterations 24
Cbc0038I Pass   7: suminf.   13.63301 (88) obj. -87155.9 iterations 0
Cbc0038I Pass   8: suminf.    5.37082 (62) obj. -87155.9 iterations 31
Cbc0038I Pass   9: suminf.    2.99947 (48) obj. -87155.9 iterations 14
Cbc0038I Pass  10: suminf.    1.50748 (27) obj. -90766.4 iterations 23
Cbc0038I Pass  11: suminf.    0.43427 (4) obj. -87155.9 iterations 33
Cbc0038I Pass  12: suminf.    0.23009 (3) obj. -88893.3 iterations 4
Cbc0038I Pass  13: suminf.    0.11355 (1) obj. -87155.9 iterations 3
Cbc0038I Pass  14: suminf.    0.09524 (1) obj. -88146.9 iterations 1
Cbc0038I Pass  15: suminf.    8.65043 (28) obj. -87155.9 iterations 58
Cbc0038I Pass  16: suminf.    6.31058 (24) obj. -87155.9 iterations 18
Cbc0038I Pass  17: suminf.    2.42496 (12) obj. -87155.9 iterations 13
Cbc0038I Pass  18: suminf.    1.64969 (11) obj. -87155.9 iterations 4
Cbc0038I Pass  19: suminf.    0.91452 (4) obj. -87155.9 iterations 7
Cbc0038I Pass  20: suminf.    0.91452 (4) obj. -87155.9 iterations 0
Cbc0038I Pass  21: suminf.    0.91340 (4) obj. -87155.9 iterations 4
Cbc0038I Pass  22: suminf.    0.91340 (4) obj. -87155.9 iterations 0
Cbc0038I Pass  23: suminf.    0.91452 (4) obj. -87155.9 iterations 1
Cbc0038I Pass  24: suminf.    9.54406 (30) obj. -87155.9 iterations 46
Cbc0038I Pass  25: suminf.    7.01707 (25) obj. -87155.9 iterations 11
Cbc0038I Pass  26: suminf.    1.23578 (13) obj. -87155.9 iterations 22
Cbc0038I Pass  27: suminf.    1.23578 (13) obj. -87155.9 iterations 0
Cbc0038I Pass  28: suminf.    1.84068 (8) obj. -87155.9 iterations 7
Cbc0038I Pass  29: suminf.    1.38167 (7) obj. -87155.9 iterations 2
Cbc0038I Pass  30: suminf.    0.90688 (7) obj. -87155.9 iterations 5
Cbc0038I Pass  31: suminf.    1.38167 (7) obj. -87155.9 iterations 2
Cbc0038I Pass  32: suminf.    9.55064 (33) obj. -87155.9 iterations 52
Cbc0038I Pass  33: suminf.    7.95710 (29) obj. -87155.9 iterations 13
Cbc0038I Pass  34: suminf.    2.07823 (11) obj. -87155.9 iterations 23
Cbc0038I Pass  35: suminf.    2.07823 (11) obj. -87155.9 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 342 columns, reduced to 174 rows 194 columns - 135 fixed gives 51, 59 - ok now
Cbc0038I Full problem 341 rows 342 columns, reduced to 39 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -81112.1 to -81277.3 (0.24 seconds)
Cbc0038I Round again with cutoff of -98034.7
Cbc0038I Pass  35: suminf.   15.09096 (90) obj. -98034.7 iterations 3
Cbc0038I Pass  36: suminf.   15.06050 (91) obj. -98034.7 iterations 1
Cbc0038I Pass  37: suminf.   10.22562 (76) obj. -98034.7 iterations 15
Cbc0038I Pass  38: suminf.   10.22562 (76) obj. -98034.7 iterations 0
Cbc0038I Pass  39: suminf.    7.10986 (64) obj. -98034.7 iterations 12
Cbc0038I Pass  40: suminf.    6.78015 (63) obj. -98034.7 iterations 1
Cbc0038I Pass  41: suminf.    4.80596 (54) obj. -98034.7 iterations 9
Cbc0038I Pass  42: suminf.    4.80596 (54) obj. -98034.7 iterations 0
Cbc0038I Pass  43: suminf.    2.80202 (35) obj. -98034.7 iterations 22
Cbc0038I Pass  44: suminf.    2.23149 (35) obj. -98034.7 iterations 2
Cbc0038I Pass  45: suminf.    1.51145 (17) obj. -98034.7 iterations 25
Cbc0038I Pass  46: suminf.    1.51145 (17) obj. -98034.7 iterations 0
Cbc0038I Pass  47: suminf.    1.36383 (9) obj. -98034.7 iterations 8
Cbc0038I Pass  48: suminf.    1.36383 (9) obj. -98034.7 iterations 0
Cbc0038I Pass  49: suminf.    0.92665 (4) obj. -98034.7 iterations 10
Cbc0038I Pass  50: suminf.    0.51665 (4) obj. -98034.7 iterations 3
Cbc0038I Pass  51: suminf.    0.92665 (4) obj. -98034.7 iterations 9
Cbc0038I Pass  52: suminf.   11.71469 (43) obj. -98034.7 iterations 49
Cbc0038I Pass  53: suminf.    4.93972 (20) obj. -98034.7 iterations 24
Cbc0038I Pass  54: suminf.    4.85091 (20) obj. -98034.7 iterations 2
Cbc0038I Pass  55: suminf.    1.34493 (7) obj. -98034.7 iterations 16
Cbc0038I Pass  56: suminf.    1.34493 (7) obj. -98034.7 iterations 0
Cbc0038I Pass  57: suminf.    1.04381 (4) obj. -98034.7 iterations 6
Cbc0038I Pass  58: suminf.    0.39057 (4) obj. -98034.7 iterations 2
Cbc0038I Pass  59: suminf.   11.06877 (39) obj. -98034.7 iterations 54
Cbc0038I Pass  60: suminf.    8.60822 (34) obj. -98034.7 iterations 14
Cbc0038I Pass  61: suminf.    7.96278 (32) obj. -98034.7 iterations 3
Cbc0038I Pass  62: suminf.    2.85824 (16) obj. -98034.7 iterations 19
Cbc0038I Pass  63: suminf.    2.17432 (15) obj. -98034.7 iterations 3
Cbc0038I Pass  64: suminf.    0.78698 (5) obj. -98034.7 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 153 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 342 columns, reduced to 169 rows 185 columns - 128 fixed gives 48, 57 - ok now
Cbc0038I Full problem 341 rows 342 columns, reduced to 19 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of -81277.3 - took 0.23 seconds
Cbc0012I Integer solution of -81277.303 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 341 rows 342 columns, reduced to 6 rows 9 columns
Cbc0012I Integer solution of -81974.887 found by DiveCoefficient after 497 iterations and 0 nodes (0.78 seconds)
Cbc0031I 171 added rows had average density of 6.4795322
Cbc0013I At root node, 171 cuts changed objective from -141549.81 to -84167.218 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 6311 row cuts average 2.1 elements, 5 column cuts (5 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 160 row cuts average 94.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 164 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 95.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -81974.887 best solution, best possible -84167.218 (0.79 seconds)
Cbc0012I Integer solution of -82055.775 found by rounding after 504 iterations and 1 nodes (0.80 seconds)
Cbc0012I Integer solution of -83614.801 found by DiveCoefficient after 514 iterations and 1 nodes (0.81 seconds)
Cbc0012I Integer solution of -83848.747 found by DiveCoefficient after 524 iterations and 2 nodes (0.86 seconds)
Cbc0012I Integer solution of -84007.312 found by DiveCoefficient after 526 iterations and 3 nodes (0.87 seconds)
Cbc0010I After 28 nodes, 2 on tree, -84007.312 best solution, best possible -84167.218 (1.49 seconds)
Cbc0038I Full problem 341 rows 342 columns, reduced to 9 rows 14 columns
Cbc0016I Integer solution of -84048.735 found by strong branching after 1225 iterations and 44 nodes (1.91 seconds)
Cbc0012I Integer solution of -84061.329 found by DiveCoefficient after 1278 iterations and 49 nodes (1.95 seconds)
Cbc0038I Full problem 512 rows 342 columns, reduced to 21 rows 31 columns
Cbc0044I Reduced cost fixing - 21 rows, 31 columns - restarting search
Cbc0012I Integer solution of -84061.329 found by Previous solution after 0 iterations and 0 nodes (2.00 seconds)
Cbc0038I Full problem 21 rows 31 columns, reduced to 8 rows 10 columns
Cbc0031I 7 added rows had average density of 24.142857
Cbc0013I At root node, 7 cuts changed objective from -84370.813 to -84143.537 in 90 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 159 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.689 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 29 row cuts average 28.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -84061.329 best solution, best possible -84143.537 (3.25 seconds)
Cbc0001I Search completed - best objective -84061.32949999998, took 583 iterations and 6 nodes (3.31 seconds)
Cbc0032I Strong branching done 70 times (256 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Cbc0038I Probing was tried 96 times and created 52 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I Gomory was tried 94 times and created 160 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Cbc0038I Knapsack was tried 94 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I Clique was tried 90 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I OddWheel was tried 90 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I MixedIntegerRounding2 was tried 94 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I FlowCover was tried 90 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 94 times and created 71 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I ZeroHalf was tried 94 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.720 seconds)
Cbc0038I Stored from first was tried 94 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -84061.32949999999, took 1892 iterations and 56 nodes (3.32 seconds)
Cbc0032I Strong branching done 178 times (975 iterations), fathomed 8 nodes and fixed 4 variables
Cbc0035I Maximum depth 9, 128 variables fixed on reduced cost
Total time (CPU seconds):       2.67   (Wallclock seconds):       3.36

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 345 (-148) rows, 174 (-73) columns and 1026 (-429) elements
Clp0000I Optimal - objective value 129009.2
Coin0511I After Postsolve, objective 129009.2, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129009.197 - 154 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 345 rows, 174 columns (173 integer (173 of which binary)) and 1026 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.565%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 10.7384
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -34098.7 iterations 63
Cbc0038I Solution found of -34098.7
Cbc0038I Relaxing continuous gives -34098.7
Cbc0038I Rounding solution of -38909.4 is better than previous of -34098.7

Cbc0038I Before mini branch and bound, 145 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 174 columns, reduced to 47 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -38909.4 to -84001.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -88501.9
Cbc0038I Pass   2: suminf.    0.76538 (2) obj. -88501.9 iterations 2
Cbc0038I Pass   3: suminf.    0.52295 (2) obj. -88501.9 iterations 3
Cbc0038I Pass   4: suminf.    0.50130 (2) obj. -88501.9 iterations 1
Cbc0038I Pass   5: suminf.    0.59539 (3) obj. -88501.9 iterations 2
Cbc0038I Pass   6: suminf.    6.74025 (23) obj. -88501.9 iterations 34
Cbc0038I Pass   7: suminf.    1.36239 (8) obj. -88501.9 iterations 24
Cbc0038I Pass   8: suminf.    1.36239 (8) obj. -88501.9 iterations 0
Cbc0038I Pass   9: suminf.    1.79250 (5) obj. -88501.9 iterations 7
Cbc0038I Pass  10: suminf.    1.64511 (6) obj. -88501.9 iterations 3
Cbc0038I Pass  11: suminf.    1.79250 (5) obj. -88501.9 iterations 6
Cbc0038I Pass  12: suminf.    1.63348 (6) obj. -88501.9 iterations 3
Cbc0038I Pass  13: suminf.    1.84110 (14) obj. -88501.9 iterations 5
Cbc0038I Pass  14: suminf.    1.83718 (15) obj. -88501.9 iterations 2
Cbc0038I Pass  15: suminf.    2.71399 (14) obj. -88501.9 iterations 21
Cbc0038I Pass  16: suminf.    2.64583 (14) obj. -88501.9 iterations 2
Cbc0038I Pass  17: suminf.    2.79139 (13) obj. -88501.9 iterations 13
Cbc0038I Pass  18: suminf.    2.54007 (14) obj. -88501.9 iterations 1
Cbc0038I Pass  19: suminf.    2.53767 (15) obj. -88501.9 iterations 1
Cbc0038I Pass  20: suminf.    3.29290 (12) obj. -88501.9 iterations 18
Cbc0038I Pass  21: suminf.    3.29290 (12) obj. -88501.9 iterations 0
Cbc0038I Pass  22: suminf.    3.13275 (14) obj. -88501.9 iterations 15
Cbc0038I Pass  23: suminf.    2.53463 (14) obj. -88501.9 iterations 5
Cbc0038I Pass  24: suminf.    2.52867 (15) obj. -88501.9 iterations 1
Cbc0038I Pass  25: suminf.    3.29290 (12) obj. -88501.9 iterations 18
Cbc0038I Pass  26: suminf.    3.29290 (12) obj. -88501.9 iterations 0
Cbc0038I Pass  27: suminf.    3.13275 (14) obj. -88501.9 iterations 15
Cbc0038I Pass  28: suminf.    2.52104 (14) obj. -88501.9 iterations 5
Cbc0038I Pass  29: suminf.    2.50020 (15) obj. -88501.9 iterations 1
Cbc0038I Pass  30: suminf.    3.29290 (12) obj. -88501.9 iterations 17
Cbc0038I Pass  31: suminf.    3.29290 (12) obj. -88501.9 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 118 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 174 columns, reduced to 75 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -84001.1 - took 0.06 seconds
Cbc0012I Integer solution of -84001.101 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 345 rows 174 columns, reduced to 47 rows 29 columns
Cbc0031I 27 added rows had average density of 9.2962963
Cbc0013I At root node, 27 cuts changed objective from -129009.2 to -84183.042 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 1836 row cuts average 2.9 elements, 20 column cuts (29 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0012I Integer solution of -84061.329 found by DiveCoefficient after 233 iterations and 4 nodes (0.16 seconds)
Cbc0001I Search completed - best objective -84061.32949999999, took 555 iterations and 22 nodes (0.26 seconds)
Cbc0032I Strong branching done 116 times (565 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 6, 52 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 341 (-152) rows, 342 (-149) columns and 15475 (-15871) elements
Clp1000I sum of infeasibilities 0.0436871 - average 0.000128115, 192 fixed columns
Coin0506I Presolve 135 (-206) rows, 142 (-200) columns and 407 (-15068) elements
Clp0029I End of values pass after 142 iterations
Clp0014I Perturbing problem by 0.001% of 2.3424505 - largest nonzero change 3.0268624e-05 ( 0.0020014766%) - largest zero change 2.9019187e-05
Clp0000I Optimal - objective value 42071.703
Clp0000I Optimal - objective value 42071.703
Coin0511I After Postsolve, objective 42071.703, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.3214676 - largest nonzero change 2.9797534e-05 ( 0.0029019187%) - largest zero change 2.957689e-05
Clp0000I Optimal - objective value 149273.62
Clp0000I Optimal - objective value 149273.62
Clp0000I Optimal - objective value 149273.62
Coin0511I After Postsolve, objective 149273.62, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149273.6152 - 0 iterations time 0.262, Presolve 0.00, Idiot 0.25

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 341 rows, 342 columns (342 integer (342 of which binary)) and 15475 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 164 integers unsatisfied sum - 58.1491
Cbc0038I Pass   1: suminf.   12.02926 (58) obj. -63933.7 iterations 142
Cbc0038I Pass   2: suminf.   12.02926 (58) obj. -63933.7 iterations 12
Cbc0038I Pass   3: suminf.    5.89983 (39) obj. -60904.7 iterations 19
Cbc0038I Pass   4: suminf.    1.48814 (17) obj. -57571.2 iterations 22
Cbc0038I Pass   5: suminf.    0.12330 (3) obj. -54881.5 iterations 14
Cbc0038I Solution found of -54330.1
Cbc0038I Rounding solution of -54495.3 is better than previous of -54330.1

Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 342 columns, reduced to 171 rows 177 columns - 33 fixed gives 138, 144 - ok now
Cbc0038I Full problem 341 rows 342 columns, reduced to 50 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -54495.3 to -81112.1 (0.14 seconds)
Cbc0038I Round again with cutoff of -87155.9
Cbc0038I Pass   6: suminf.   13.63301 (88) obj. -87155.9 iterations 24
Cbc0038I Pass   7: suminf.   13.63301 (88) obj. -87155.9 iterations 0
Cbc0038I Pass   8: suminf.    5.37082 (62) obj. -87155.9 iterations 31
Cbc0038I Pass   9: suminf.    2.99947 (48) obj. -87155.9 iterations 14
Cbc0038I Pass  10: suminf.    1.50748 (27) obj. -90766.4 iterations 23
Cbc0038I Pass  11: suminf.    0.43427 (4) obj. -87155.9 iterations 33
Cbc0038I Pass  12: suminf.    0.23009 (3) obj. -88893.3 iterations 4
Cbc0038I Pass  13: suminf.    0.11355 (1) obj. -87155.9 iterations 3
Cbc0038I Pass  14: suminf.    0.09524 (1) obj. -88146.9 iterations 1
Cbc0038I Pass  15: suminf.    8.65043 (28) obj. -87155.9 iterations 58
Cbc0038I Pass  16: suminf.    6.31058 (24) obj. -87155.9 iterations 18
Cbc0038I Pass  17: suminf.    2.42496 (12) obj. -87155.9 iterations 13
Cbc0038I Pass  18: suminf.    1.64969 (11) obj. -87155.9 iterations 4
Cbc0038I Pass  19: suminf.    0.91452 (4) obj. -87155.9 iterations 7
Cbc0038I Pass  20: suminf.    0.91452 (4) obj. -87155.9 iterations 0
Cbc0038I Pass  21: suminf.    0.91340 (4) obj. -87155.9 iterations 4
Cbc0038I Pass  22: suminf.    0.91340 (4) obj. -87155.9 iterations 0
Cbc0038I Pass  23: suminf.    0.91452 (4) obj. -87155.9 iterations 1
Cbc0038I Pass  24: suminf.    9.54406 (30) obj. -87155.9 iterations 46
Cbc0038I Pass  25: suminf.    7.01707 (25) obj. -87155.9 iterations 11
Cbc0038I Pass  26: suminf.    1.23578 (13) obj. -87155.9 iterations 22
Cbc0038I Pass  27: suminf.    1.23578 (13) obj. -87155.9 iterations 0
Cbc0038I Pass  28: suminf.    1.84068 (8) obj. -87155.9 iterations 7
Cbc0038I Pass  29: suminf.    1.38167 (7) obj. -87155.9 iterations 2
Cbc0038I Pass  30: suminf.    0.90688 (7) obj. -87155.9 iterations 5
Cbc0038I Pass  31: suminf.    1.38167 (7) obj. -87155.9 iterations 2
Cbc0038I Pass  32: suminf.    9.55064 (33) obj. -87155.9 iterations 52
Cbc0038I Pass  33: suminf.    7.95710 (29) obj. -87155.9 iterations 13
Cbc0038I Pass  34: suminf.    2.07823 (11) obj. -87155.9 iterations 23
Cbc0038I Pass  35: suminf.    2.07823 (11) obj. -87155.9 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 342 columns, reduced to 174 rows 194 columns - 135 fixed gives 51, 59 - ok now
Cbc0038I Full problem 341 rows 342 columns, reduced to 39 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -81112.1 to -81277.3 (0.23 seconds)
Cbc0038I Round again with cutoff of -98034.7
Cbc0038I Pass  35: suminf.   15.09096 (90) obj. -98034.7 iterations 3
Cbc0038I Pass  36: suminf.   15.06050 (91) obj. -98034.7 iterations 1
Cbc0038I Pass  37: suminf.   10.22562 (76) obj. -98034.7 iterations 15
Cbc0038I Pass  38: suminf.   10.22562 (76) obj. -98034.7 iterations 0
Cbc0038I Pass  39: suminf.    7.10986 (64) obj. -98034.7 iterations 12
Cbc0038I Pass  40: suminf.    6.78015 (63) obj. -98034.7 iterations 1
Cbc0038I Pass  41: suminf.    4.80596 (54) obj. -98034.7 iterations 9
Cbc0038I Pass  42: suminf.    4.80596 (54) obj. -98034.7 iterations 0
Cbc0038I Pass  43: suminf.    2.80202 (35) obj. -98034.7 iterations 22
Cbc0038I Pass  44: suminf.    2.23149 (35) obj. -98034.7 iterations 2
Cbc0038I Pass  45: suminf.    1.51145 (17) obj. -98034.7 iterations 25
Cbc0038I Pass  46: suminf.    1.51145 (17) obj. -98034.7 iterations 0
Cbc0038I Pass  47: suminf.    1.36383 (9) obj. -98034.7 iterations 8
Cbc0038I Pass  48: suminf.    1.36383 (9) obj. -98034.7 iterations 0
Cbc0038I Pass  49: suminf.    0.92665 (4) obj. -98034.7 iterations 10
Cbc0038I Pass  50: suminf.    0.51665 (4) obj. -98034.7 iterations 3
Cbc0038I Pass  51: suminf.    0.92665 (4) obj. -98034.7 iterations 9
Cbc0038I Pass  52: suminf.   11.71469 (43) obj. -98034.7 iterations 49
Cbc0038I Pass  53: suminf.    4.93972 (20) obj. -98034.7 iterations 24
Cbc0038I Pass  54: suminf.    4.85091 (20) obj. -98034.7 iterations 2
Cbc0038I Pass  55: suminf.    1.34493 (7) obj. -98034.7 iterations 16
Cbc0038I Pass  56: suminf.    1.34493 (7) obj. -98034.7 iterations 0
Cbc0038I Pass  57: suminf.    1.04381 (4) obj. -98034.7 iterations 6
Cbc0038I Pass  58: suminf.    0.39057 (4) obj. -98034.7 iterations 2
Cbc0038I Pass  59: suminf.   11.06877 (39) obj. -98034.7 iterations 54
Cbc0038I Pass  60: suminf.    8.60822 (34) obj. -98034.7 iterations 14
Cbc0038I Pass  61: suminf.    7.96278 (32) obj. -98034.7 iterations 3
Cbc0038I Pass  62: suminf.    2.85824 (16) obj. -98034.7 iterations 19
Cbc0038I Pass  63: suminf.    2.17432 (15) obj. -98034.7 iterations 3
Cbc0038I Pass  64: suminf.    0.78698 (5) obj. -98034.7 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 153 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 342 columns, reduced to 169 rows 185 columns - 128 fixed gives 48, 57 - ok now
Cbc0038I Full problem 341 rows 342 columns, reduced to 19 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -81277.3 - took 0.21 seconds
Cbc0012I Integer solution of -81277.303 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 341 rows 342 columns, reduced to 6 rows 9 columns
Cbc0012I Integer solution of -81974.887 found by DiveCoefficient after 497 iterations and 0 nodes (0.69 seconds)
Cbc0031I 171 added rows had average density of 6.4795322
Cbc0013I At root node, 171 cuts changed objective from -141549.81 to -84167.218 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 6311 row cuts average 2.1 elements, 5 column cuts (5 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 160 row cuts average 94.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 164 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 95.3 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -81974.887 best solution, best possible -84167.218 (0.70 seconds)
Cbc0012I Integer solution of -82055.775 found by rounding after 504 iterations and 1 nodes (0.71 seconds)
Cbc0012I Integer solution of -83614.801 found by DiveCoefficient after 514 iterations and 1 nodes (0.72 seconds)
Cbc0012I Integer solution of -83848.747 found by DiveCoefficient after 524 iterations and 2 nodes (0.76 seconds)
Cbc0012I Integer solution of -84007.312 found by DiveCoefficient after 526 iterations and 3 nodes (0.77 seconds)
Cbc0010I After 31 nodes, 2 on tree, -84007.312 best solution, best possible -84156.761 (1.40 seconds)
Cbc0038I Full problem 341 rows 342 columns, reduced to 9 rows 14 columns
Cbc0016I Integer solution of -84048.735 found by strong branching after 1225 iterations and 44 nodes (1.71 seconds)
Cbc0012I Integer solution of -84061.329 found by DiveCoefficient after 1278 iterations and 49 nodes (1.74 seconds)
Cbc0038I Full problem 512 rows 342 columns, reduced to 21 rows 31 columns
Cbc0044I Reduced cost fixing - 21 rows, 31 columns - restarting search
Cbc0012I Integer solution of -84061.329 found by Previous solution after 0 iterations and 0 nodes (1.79 seconds)
Cbc0038I Full problem 21 rows 31 columns, reduced to 8 rows 10 columns
Cbc0031I 7 added rows had average density of 24.142857
Cbc0013I At root node, 7 cuts changed objective from -84370.813 to -84143.537 in 90 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 159 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.682 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 29 row cuts average 28.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -84061.329 best solution, best possible -84143.537 (3.06 seconds)
Cbc0001I Search completed - best objective -84061.32949999998, took 583 iterations and 6 nodes (3.11 seconds)
Cbc0032I Strong branching done 70 times (256 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Cbc0038I Probing was tried 96 times and created 52 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I Gomory was tried 94 times and created 160 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I Knapsack was tried 94 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I Clique was tried 90 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I OddWheel was tried 90 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I MixedIntegerRounding2 was tried 94 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I FlowCover was tried 90 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 94 times and created 71 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I ZeroHalf was tried 94 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.712 seconds)
Cbc0038I Stored from first was tried 94 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -84061.32949999999, took 1892 iterations and 56 nodes (3.12 seconds)
Cbc0032I Strong branching done 178 times (975 iterations), fathomed 8 nodes and fixed 4 variables
Cbc0035I Maximum depth 9, 128 variables fixed on reduced cost
Total time (CPU seconds):       2.50   (Wallclock seconds):       3.16

