Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.48913e-05 - average 3.25299e-07, 11 fixed columns
Coin0506I Presolve 117 (-21) rows, 65 (-11) columns and 356 (-64) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 52.709714
Clp0000I Optimal - objective value 52.709714
Coin0511I After Postsolve, objective 52.709714, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25103927 - largest nonzero change 0 ( 0%) - largest zero change 2.6787132e-05
Clp0000I Optimal - objective value 52.709714
Clp0000I Optimal - objective value 52.709714
Clp0000I Optimal - objective value 52.709714
Coin0511I After Postsolve, objective 52.709714, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.70971376 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.72678
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.87718 iterations 57
Cbc0038I Solution found of 3.87718
Cbc0038I Relaxing continuous gives 3.87718
Cbc0038I Rounding solution of -2.56845 is better than previous of 3.87718

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -2.56845 to -23.9016 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.7825
Cbc0038I Pass   2: suminf.    2.85535 (12) obj. -26.7825 iterations 19
Cbc0038I Pass   3: suminf.    2.85535 (12) obj. -26.7825 iterations 0
Cbc0038I Pass   4: suminf.    2.73142 (8) obj. -26.7825 iterations 19
Cbc0038I Pass   5: suminf.    2.69088 (8) obj. -26.7825 iterations 6
Cbc0038I Pass   6: suminf.    3.11201 (9) obj. -26.7825 iterations 19
Cbc0038I Pass   7: suminf.    2.30412 (8) obj. -26.7825 iterations 4
Cbc0038I Pass   8: suminf.    1.77120 (6) obj. -26.7825 iterations 6
Cbc0038I Pass   9: suminf.    1.77120 (6) obj. -26.7825 iterations 0
Cbc0038I Pass  10: suminf.    2.20678 (7) obj. -26.7825 iterations 15
Cbc0038I Pass  11: suminf.    1.93992 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  12: suminf.    1.93992 (6) obj. -26.7825 iterations 2
Cbc0038I Pass  13: suminf.    2.30412 (8) obj. -26.7825 iterations 16
Cbc0038I Pass  14: suminf.    1.77120 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  15: suminf.    1.77120 (6) obj. -26.7825 iterations 0
Cbc0038I Pass  16: suminf.    2.20678 (7) obj. -26.7825 iterations 15
Cbc0038I Pass  17: suminf.    1.93992 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  18: suminf.    1.93992 (6) obj. -26.7825 iterations 2
Cbc0038I Pass  19: suminf.    2.30412 (8) obj. -26.7825 iterations 16
Cbc0038I Pass  20: suminf.    1.77120 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  21: suminf.    1.77120 (6) obj. -26.7825 iterations 0
Cbc0038I Pass  22: suminf.    2.20678 (7) obj. -26.7825 iterations 15
Cbc0038I Pass  23: suminf.    1.93992 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  24: suminf.    1.93992 (6) obj. -26.7825 iterations 2
Cbc0038I Pass  25: suminf.    2.30412 (8) obj. -26.7825 iterations 16
Cbc0038I Pass  26: suminf.    1.77120 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  27: suminf.    1.77120 (6) obj. -26.7825 iterations 0
Cbc0038I Pass  28: suminf.    2.20678 (7) obj. -26.7825 iterations 15
Cbc0038I Pass  29: suminf.    1.93992 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  30: suminf.    1.93992 (6) obj. -26.7825 iterations 2
Cbc0038I Pass  31: suminf.    2.30412 (8) obj. -26.7825 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23.9016 - took 0.05 seconds
Cbc0012I Integer solution of -23.90159 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 83 rows 48 columns
Cbc0031I 25 added rows had average density of 41.16
Cbc0013I At root node, 25 cuts changed objective from -52.709714 to -44.588566 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12627 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1989 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 200 row cuts average 74.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.90159 best solution, best possible -44.588566 (0.84 seconds)
Cbc0012I Integer solution of -23.99476 found by rounding after 7763 iterations and 19 nodes (0.98 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 1 rows 2 columns
Cbc0004I Integer solution of -24.27097 found after 8693 iterations and 60 nodes (1.05 seconds)
Cbc0012I Integer solution of -24.30689 found by rounding after 8797 iterations and 72 nodes (1.06 seconds)
Cbc0001I Search completed - best objective -24.30689, took 9323 iterations and 86 nodes (1.08 seconds)
Cbc0032I Strong branching done 758 times (14365 iterations), fathomed 7 nodes and fixed 24 variables
Cbc0035I Maximum depth 28, 186 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 118 (-34) columns and 1967 (-1336) elements
Clp1000I sum of infeasibilities 3.41034e-07 - average 3.2173e-09, 57 fixed columns
Coin0506I Presolve 49 (-57) rows, 61 (-57) columns and 214 (-1753) elements
Clp0006I 0  Obj -7.6757991 Dual inf 95.617548 (60)
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 0.26845896 - largest nonzero change 1.9510905e-05 ( 0.0016756202%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -6.7735691
Clp0000I Optimal - objective value -6.7735691
Coin0511I After Postsolve, objective -6.7735691, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -6.7735691 Dual inf 75.495065 (43)
Clp0014I Perturbing problem by 0.001% of 1.6216438 - largest nonzero change 2.6774595e-05 ( 0.0026774595%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 65.353307
Clp0000I Optimal - objective value 65.353307
Clp0000I Optimal - objective value 65.353307
Coin0511I After Postsolve, objective 65.353307, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.35330659 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 118 columns (118 integer (118 of which binary)) and 1969 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.27178
Cbc0038I Pass   1: suminf.    1.40168 (29) obj. -42.8681 iterations 17
Cbc0038I Pass   2: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass   3: suminf.    0.76537 (19) obj. -23.2771 iterations 10
Cbc0038I Solution found of 1.66223
Cbc0038I Rounding solution of -4.36417 is better than previous of 1.66223

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -9.84758
Cbc0038I Pass   4: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass   5: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass   6: suminf.    0.53522 (2) obj. -9.84758 iterations 41
Cbc0038I Pass   7: suminf.    0.53522 (2) obj. -9.84758 iterations 4
Cbc0038I Pass   8: suminf.    0.46856 (2) obj. -9.84758 iterations 3
Cbc0038I Pass   9: suminf.    0.36364 (2) obj. -11.0321 iterations 1
Cbc0038I Pass  10: suminf.    1.13159 (13) obj. -16.455 iterations 26
Cbc0038I Pass  11: suminf.    0.46622 (10) obj. -11.13 iterations 5
Cbc0038I Pass  12: suminf.    1.33274 (10) obj. -9.84758 iterations 17
Cbc0038I Pass  13: suminf.    1.33274 (10) obj. -9.84758 iterations 0
Cbc0038I Pass  14: suminf.    0.97378 (4) obj. -9.84758 iterations 19
Cbc0038I Pass  15: suminf.    0.66663 (4) obj. -9.84758 iterations 7
Cbc0038I Pass  16: suminf.    0.93203 (3) obj. -9.84758 iterations 7
Cbc0038I Pass  17: suminf.    0.93203 (3) obj. -9.84758 iterations 0
Cbc0038I Pass  18: suminf.    0.95045 (3) obj. -9.84758 iterations 13
Cbc0038I Pass  19: suminf.    0.58448 (3) obj. -11.6774 iterations 7
Cbc0038I Pass  20: suminf.    0.93203 (3) obj. -9.84758 iterations 10
Cbc0038I Pass  21: suminf.    1.17779 (10) obj. -9.84758 iterations 26
Cbc0038I Pass  22: suminf.    0.77899 (10) obj. -9.84758 iterations 8
Cbc0038I Pass  23: suminf.    1.10830 (5) obj. -9.84758 iterations 18
Cbc0038I Pass  24: suminf.    0.72950 (5) obj. -12.351 iterations 4
Cbc0038I Pass  25: suminf.    0.99448 (5) obj. -9.84758 iterations 11
Cbc0038I Pass  26: suminf.    0.99448 (5) obj. -9.84758 iterations 0
Cbc0038I Pass  27: suminf.    1.06364 (4) obj. -9.84758 iterations 5
Cbc0038I Pass  28: suminf.    1.03962 (5) obj. -9.84758 iterations 4
Cbc0038I Pass  29: suminf.    0.99448 (5) obj. -9.84758 iterations 6
Cbc0038I Pass  30: suminf.    1.06301 (10) obj. -12.4042 iterations 20
Cbc0038I Pass  31: suminf.    0.69196 (9) obj. -12.4898 iterations 3
Cbc0038I Pass  32: suminf.    0.82192 (5) obj. -9.84758 iterations 15
Cbc0038I Pass  33: suminf.    0.53339 (6) obj. -9.84758 iterations 4
Cbc0038I Rounding solution of -9.43161 is better than previous of -4.36417

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 41 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -9.43161 to -24.3069 (0.07 seconds)
Cbc0038I Round again with cutoff of -31.2851
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass  34: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass  35: suminf.    1.09433 (20) obj. -31.2851 iterations 11
Cbc0038I Pass  36: suminf.    1.07035 (20) obj. -31.5712 iterations 1
Cbc0038I Pass  37: suminf.    2.53609 (19) obj. -31.2851 iterations 46
Cbc0038I Pass  38: suminf.    2.54677 (18) obj. -31.2851 iterations 2
Cbc0038I Pass  39: suminf.    2.29002 (14) obj. -31.2851 iterations 19
Cbc0038I Pass  40: suminf.    1.87370 (14) obj. -31.2851 iterations 17
Cbc0038I Pass  41: suminf.    1.63660 (15) obj. -31.2851 iterations 8
Cbc0038I Pass  42: suminf.    2.88866 (21) obj. -31.2851 iterations 11
Cbc0038I Pass  43: suminf.    1.72666 (14) obj. -31.2851 iterations 3
Cbc0038I Pass  44: suminf.    1.71940 (15) obj. -31.2851 iterations 7
Cbc0038I Pass  45: suminf.    2.80891 (21) obj. -31.2851 iterations 11
Cbc0038I Pass  46: suminf.    1.64148 (15) obj. -31.2851 iterations 2
Cbc0038I Pass  47: suminf.    1.63660 (15) obj. -31.2851 iterations 7
Cbc0038I Pass  48: suminf.    2.88866 (21) obj. -31.2851 iterations 10
Cbc0038I Pass  49: suminf.    1.72666 (14) obj. -31.2851 iterations 3
Cbc0038I Pass  50: suminf.    1.71940 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  51: suminf.    1.64148 (15) obj. -31.2851 iterations 10
Cbc0038I Pass  52: suminf.    1.63660 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  53: suminf.    2.88866 (21) obj. -31.2851 iterations 9
Cbc0038I Pass  54: suminf.    1.72666 (14) obj. -31.2851 iterations 3
Cbc0038I Pass  55: suminf.    1.71940 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  56: suminf.    1.64148 (15) obj. -31.2851 iterations 10
Cbc0038I Pass  57: suminf.    1.63660 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  58: suminf.    2.88866 (21) obj. -31.2851 iterations 9
Cbc0038I Pass  59: suminf.    1.72666 (14) obj. -31.2851 iterations 3
Cbc0038I Pass  60: suminf.    1.71940 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  61: suminf.    2.80891 (21) obj. -31.2851 iterations 10
Cbc0038I Pass  62: suminf.    1.64148 (15) obj. -31.2851 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -24.3069 - took 0.08 seconds
Cbc0012I Integer solution of -24.30689 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 22 rows 25 columns
Cbc0031I 58 added rows had average density of 28.12069
Cbc0013I At root node, 58 cuts changed objective from -59.197375 to -30.394343 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14897 row cuts average 9.9 elements, 1 column cuts (1 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1330 row cuts average 109.9 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 77 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 460 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 798 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 288 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 309 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.676 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.30689 best solution, best possible -30.394343 (2.61 seconds)
Cbc0010I After 6 nodes, 5 on tree, -24.30689 best solution, best possible -30.182171 (3.36 seconds)
Cbc0010I After 24 nodes, 8 on tree, -24.30689 best solution, best possible -30.182171 (4.10 seconds)
Cbc0001I Search completed - best objective -24.30689, took 6511 iterations and 32 nodes (4.17 seconds)
Cbc0032I Strong branching done 508 times (9509 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 38 variables fixed on reduced cost
Total time (CPU seconds):       3.03   (Wallclock seconds):       4.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 4.48913e-05 - average 3.25299e-07, 11 fixed columns
Coin0506I Presolve 117 (-21) rows, 65 (-11) columns and 356 (-64) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 52.709714
Clp0000I Optimal - objective value 52.709714
Coin0511I After Postsolve, objective 52.709714, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25103927 - largest nonzero change 0 ( 0%) - largest zero change 2.6787132e-05
Clp0000I Optimal - objective value 52.709714
Clp0000I Optimal - objective value 52.709714
Clp0000I Optimal - objective value 52.709714
Coin0511I After Postsolve, objective 52.709714, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.70971376 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.72678
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.87718 iterations 57
Cbc0038I Solution found of 3.87718
Cbc0038I Relaxing continuous gives 3.87718
Cbc0038I Rounding solution of -2.56845 is better than previous of 3.87718

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -2.56845 to -23.9016 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.7825
Cbc0038I Pass   2: suminf.    2.85535 (12) obj. -26.7825 iterations 19
Cbc0038I Pass   3: suminf.    2.85535 (12) obj. -26.7825 iterations 0
Cbc0038I Pass   4: suminf.    2.73142 (8) obj. -26.7825 iterations 19
Cbc0038I Pass   5: suminf.    2.69088 (8) obj. -26.7825 iterations 6
Cbc0038I Pass   6: suminf.    3.11201 (9) obj. -26.7825 iterations 19
Cbc0038I Pass   7: suminf.    2.30412 (8) obj. -26.7825 iterations 4
Cbc0038I Pass   8: suminf.    1.77120 (6) obj. -26.7825 iterations 6
Cbc0038I Pass   9: suminf.    1.77120 (6) obj. -26.7825 iterations 0
Cbc0038I Pass  10: suminf.    2.20678 (7) obj. -26.7825 iterations 15
Cbc0038I Pass  11: suminf.    1.93992 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  12: suminf.    1.93992 (6) obj. -26.7825 iterations 2
Cbc0038I Pass  13: suminf.    2.30412 (8) obj. -26.7825 iterations 16
Cbc0038I Pass  14: suminf.    1.77120 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  15: suminf.    1.77120 (6) obj. -26.7825 iterations 0
Cbc0038I Pass  16: suminf.    2.20678 (7) obj. -26.7825 iterations 15
Cbc0038I Pass  17: suminf.    1.93992 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  18: suminf.    1.93992 (6) obj. -26.7825 iterations 2
Cbc0038I Pass  19: suminf.    2.30412 (8) obj. -26.7825 iterations 16
Cbc0038I Pass  20: suminf.    1.77120 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  21: suminf.    1.77120 (6) obj. -26.7825 iterations 0
Cbc0038I Pass  22: suminf.    2.20678 (7) obj. -26.7825 iterations 15
Cbc0038I Pass  23: suminf.    1.93992 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  24: suminf.    1.93992 (6) obj. -26.7825 iterations 2
Cbc0038I Pass  25: suminf.    2.30412 (8) obj. -26.7825 iterations 16
Cbc0038I Pass  26: suminf.    1.77120 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  27: suminf.    1.77120 (6) obj. -26.7825 iterations 0
Cbc0038I Pass  28: suminf.    2.20678 (7) obj. -26.7825 iterations 15
Cbc0038I Pass  29: suminf.    1.93992 (6) obj. -26.7825 iterations 6
Cbc0038I Pass  30: suminf.    1.93992 (6) obj. -26.7825 iterations 2
Cbc0038I Pass  31: suminf.    2.30412 (8) obj. -26.7825 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23.9016 - took 0.05 seconds
Cbc0012I Integer solution of -23.90159 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 83 rows 48 columns
Cbc0031I 25 added rows had average density of 41.16
Cbc0013I At root node, 25 cuts changed objective from -52.709714 to -44.588566 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12627 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1989 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 200 row cuts average 74.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.90159 best solution, best possible -44.588566 (0.85 seconds)
Cbc0012I Integer solution of -23.99476 found by rounding after 7763 iterations and 19 nodes (1.00 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 1 rows 2 columns
Cbc0004I Integer solution of -24.27097 found after 8693 iterations and 60 nodes (1.07 seconds)
Cbc0012I Integer solution of -24.30689 found by rounding after 8797 iterations and 72 nodes (1.08 seconds)
Cbc0001I Search completed - best objective -24.30689, took 9323 iterations and 86 nodes (1.09 seconds)
Cbc0032I Strong branching done 758 times (14365 iterations), fathomed 7 nodes and fixed 24 variables
Cbc0035I Maximum depth 28, 186 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 118 (-35) columns and 1967 (-1337) elements
Clp1000I sum of infeasibilities 3.41034e-07 - average 3.2173e-09, 57 fixed columns
Coin0506I Presolve 49 (-57) rows, 61 (-57) columns and 214 (-1753) elements
Clp0006I 0  Obj -7.6757991 Dual inf 95.617548 (60)
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 0.26845896 - largest nonzero change 1.9510905e-05 ( 0.0016756202%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -6.7735691
Clp0000I Optimal - objective value -6.7735691
Coin0511I After Postsolve, objective -6.7735691, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -6.7735691 Dual inf 75.495065 (43)
Clp0014I Perturbing problem by 0.001% of 1.6216438 - largest nonzero change 2.6774595e-05 ( 0.0026774595%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 65.353307
Clp0000I Optimal - objective value 65.353307
Clp0000I Optimal - objective value 65.353307
Coin0511I After Postsolve, objective 65.353307, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.35330659 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 118 columns (118 integer (118 of which binary)) and 1969 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.27178
Cbc0038I Pass   1: suminf.    1.40168 (29) obj. -42.8681 iterations 17
Cbc0038I Pass   2: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass   3: suminf.    0.76537 (19) obj. -23.2771 iterations 10
Cbc0038I Solution found of 1.66223
Cbc0038I Rounding solution of -4.36417 is better than previous of 1.66223

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -9.84758
Cbc0038I Pass   4: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass   5: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass   6: suminf.    0.53522 (2) obj. -9.84758 iterations 41
Cbc0038I Pass   7: suminf.    0.53522 (2) obj. -9.84758 iterations 4
Cbc0038I Pass   8: suminf.    0.46856 (2) obj. -9.84758 iterations 3
Cbc0038I Pass   9: suminf.    0.36364 (2) obj. -11.0321 iterations 1
Cbc0038I Pass  10: suminf.    1.13159 (13) obj. -16.455 iterations 26
Cbc0038I Pass  11: suminf.    0.46622 (10) obj. -11.13 iterations 5
Cbc0038I Pass  12: suminf.    1.33274 (10) obj. -9.84758 iterations 17
Cbc0038I Pass  13: suminf.    1.33274 (10) obj. -9.84758 iterations 0
Cbc0038I Pass  14: suminf.    0.97378 (4) obj. -9.84758 iterations 19
Cbc0038I Pass  15: suminf.    0.66663 (4) obj. -9.84758 iterations 7
Cbc0038I Pass  16: suminf.    0.93203 (3) obj. -9.84758 iterations 7
Cbc0038I Pass  17: suminf.    0.93203 (3) obj. -9.84758 iterations 0
Cbc0038I Pass  18: suminf.    0.95045 (3) obj. -9.84758 iterations 13
Cbc0038I Pass  19: suminf.    0.58448 (3) obj. -11.6774 iterations 7
Cbc0038I Pass  20: suminf.    0.93203 (3) obj. -9.84758 iterations 10
Cbc0038I Pass  21: suminf.    1.17779 (10) obj. -9.84758 iterations 26
Cbc0038I Pass  22: suminf.    0.77899 (10) obj. -9.84758 iterations 8
Cbc0038I Pass  23: suminf.    1.10830 (5) obj. -9.84758 iterations 18
Cbc0038I Pass  24: suminf.    0.72950 (5) obj. -12.351 iterations 4
Cbc0038I Pass  25: suminf.    0.99448 (5) obj. -9.84758 iterations 11
Cbc0038I Pass  26: suminf.    0.99448 (5) obj. -9.84758 iterations 0
Cbc0038I Pass  27: suminf.    1.06364 (4) obj. -9.84758 iterations 5
Cbc0038I Pass  28: suminf.    1.03962 (5) obj. -9.84758 iterations 4
Cbc0038I Pass  29: suminf.    0.99448 (5) obj. -9.84758 iterations 6
Cbc0038I Pass  30: suminf.    1.06301 (10) obj. -12.4042 iterations 20
Cbc0038I Pass  31: suminf.    0.69196 (9) obj. -12.4898 iterations 3
Cbc0038I Pass  32: suminf.    0.82192 (5) obj. -9.84758 iterations 15
Cbc0038I Pass  33: suminf.    0.53339 (6) obj. -9.84758 iterations 4
Cbc0038I Rounding solution of -9.43161 is better than previous of -4.36417

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 41 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -9.43161 to -24.3069 (0.06 seconds)
Cbc0038I Round again with cutoff of -31.2851
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass  34: suminf.    1.40168 (29) obj. -42.8681 iterations 0
Cbc0038I Pass  35: suminf.    1.09433 (20) obj. -31.2851 iterations 11
Cbc0038I Pass  36: suminf.    1.07035 (20) obj. -31.5712 iterations 1
Cbc0038I Pass  37: suminf.    2.53609 (19) obj. -31.2851 iterations 46
Cbc0038I Pass  38: suminf.    2.54677 (18) obj. -31.2851 iterations 2
Cbc0038I Pass  39: suminf.    2.29002 (14) obj. -31.2851 iterations 19
Cbc0038I Pass  40: suminf.    1.87370 (14) obj. -31.2851 iterations 17
Cbc0038I Pass  41: suminf.    1.63660 (15) obj. -31.2851 iterations 8
Cbc0038I Pass  42: suminf.    2.88866 (21) obj. -31.2851 iterations 11
Cbc0038I Pass  43: suminf.    1.72666 (14) obj. -31.2851 iterations 3
Cbc0038I Pass  44: suminf.    1.71940 (15) obj. -31.2851 iterations 7
Cbc0038I Pass  45: suminf.    2.80891 (21) obj. -31.2851 iterations 11
Cbc0038I Pass  46: suminf.    1.64148 (15) obj. -31.2851 iterations 2
Cbc0038I Pass  47: suminf.    1.63660 (15) obj. -31.2851 iterations 7
Cbc0038I Pass  48: suminf.    2.88866 (21) obj. -31.2851 iterations 10
Cbc0038I Pass  49: suminf.    1.72666 (14) obj. -31.2851 iterations 3
Cbc0038I Pass  50: suminf.    1.71940 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  51: suminf.    1.64148 (15) obj. -31.2851 iterations 10
Cbc0038I Pass  52: suminf.    1.63660 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  53: suminf.    2.88866 (21) obj. -31.2851 iterations 9
Cbc0038I Pass  54: suminf.    1.72666 (14) obj. -31.2851 iterations 3
Cbc0038I Pass  55: suminf.    1.71940 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  56: suminf.    1.64148 (15) obj. -31.2851 iterations 10
Cbc0038I Pass  57: suminf.    1.63660 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  58: suminf.    2.88866 (21) obj. -31.2851 iterations 9
Cbc0038I Pass  59: suminf.    1.72666 (14) obj. -31.2851 iterations 3
Cbc0038I Pass  60: suminf.    1.71940 (15) obj. -31.2851 iterations 6
Cbc0038I Pass  61: suminf.    2.80891 (21) obj. -31.2851 iterations 10
Cbc0038I Pass  62: suminf.    1.64148 (15) obj. -31.2851 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -24.3069 - took 0.08 seconds
Cbc0012I Integer solution of -24.30689 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 22 rows 25 columns
Cbc0031I 58 added rows had average density of 28.12069
Cbc0013I At root node, 58 cuts changed objective from -59.197375 to -30.394343 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14897 row cuts average 9.9 elements, 1 column cuts (1 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1330 row cuts average 109.9 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 77 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 460 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 798 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 288 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 309 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.30689 best solution, best possible -30.394343 (2.63 seconds)
Cbc0010I After 6 nodes, 5 on tree, -24.30689 best solution, best possible -30.182171 (3.40 seconds)
Cbc0010I After 23 nodes, 9 on tree, -24.30689 best solution, best possible -30.182171 (4.11 seconds)
Cbc0001I Search completed - best objective -24.30689, took 6511 iterations and 32 nodes (4.24 seconds)
Cbc0032I Strong branching done 508 times (9509 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 38 variables fixed on reduced cost
Total time (CPU seconds):       3.08   (Wallclock seconds):       4.26

