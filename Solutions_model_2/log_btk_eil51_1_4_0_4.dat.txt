Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 40 (-13) columns and 211 (-92) elements
Clp1000I sum of infeasibilities 9.34503e-06 - average 1.35435e-07, 10 fixed columns
Coin0506I Presolve 48 (-21) rows, 29 (-11) columns and 147 (-64) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 5.5832366 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 142.45842
Clp0000I Optimal - objective value 142.45842
Coin0511I After Postsolve, objective 142.45842, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 142.45842
Clp0000I Optimal - objective value 142.45842
Clp0000I Optimal - objective value 142.45842
Coin0511I After Postsolve, objective 142.45842, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.4584237 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 69 rows, 40 columns (39 integer (39 of which binary)) and 211 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.068%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.9263
Cbc0038I Pass   1: suminf.    1.33973 (3) obj. -110.038 iterations 13
Cbc0038I Solution found of -65.935
Cbc0038I Relaxing continuous gives -65.935
Cbc0038I Rounding solution of -104.585 is better than previous of -65.935

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 40 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -104.585 to -112.106 (0.01 seconds)
Cbc0038I Round again with cutoff of -115.141
Cbc0038I Pass   2: suminf.    1.36294 (4) obj. -115.141 iterations 2
Cbc0038I Pass   3: suminf.    0.94351 (3) obj. -115.141 iterations 7
Cbc0038I Pass   4: suminf.    0.58346 (3) obj. -115.141 iterations 4
Cbc0038I Pass   5: suminf.    1.60997 (8) obj. -115.141 iterations 9
Cbc0038I Pass   6: suminf.    1.27234 (5) obj. -115.141 iterations 9
Cbc0038I Pass   7: suminf.    1.27665 (3) obj. -115.141 iterations 6
Cbc0038I Pass   8: suminf.    0.63734 (2) obj. -115.141 iterations 3
Cbc0038I Pass   9: suminf.    0.70678 (2) obj. -115.141 iterations 1
Cbc0038I Pass  10: suminf.    1.39623 (6) obj. -115.141 iterations 7
Cbc0038I Pass  11: suminf.    1.19060 (7) obj. -115.141 iterations 4
Cbc0038I Pass  12: suminf.    0.43911 (3) obj. -115.141 iterations 7
Cbc0038I Pass  13: suminf.    0.43911 (3) obj. -115.141 iterations 0
Cbc0038I Pass  14: suminf.    1.01311 (5) obj. -115.141 iterations 5
Cbc0038I Pass  15: suminf.    1.46343 (6) obj. -115.141 iterations 5
Cbc0038I Pass  16: suminf.    1.11098 (7) obj. -115.141 iterations 6
Cbc0038I Pass  17: suminf.    1.93510 (6) obj. -115.141 iterations 9
Cbc0038I Pass  18: suminf.    0.63734 (2) obj. -115.141 iterations 9
Cbc0038I Pass  19: suminf.    0.70678 (2) obj. -115.141 iterations 1
Cbc0038I Pass  20: suminf.    1.91213 (5) obj. -115.141 iterations 7
Cbc0038I Pass  21: suminf.    1.45072 (5) obj. -115.141 iterations 4
Cbc0038I Pass  22: suminf.    1.43849 (6) obj. -115.141 iterations 5
Cbc0038I Pass  23: suminf.    0.45151 (1) obj. -115.141 iterations 5
Cbc0038I Pass  24: suminf.    0.41530 (2) obj. -115.141 iterations 3
Cbc0038I Pass  25: suminf.    0.60806 (2) obj. -115.141 iterations 2
Cbc0038I Pass  26: suminf.    1.91518 (8) obj. -115.141 iterations 10
Cbc0038I Pass  27: suminf.    0.80213 (3) obj. -115.141 iterations 8
Cbc0038I Pass  28: suminf.    1.01220 (3) obj. -115.141 iterations 3
Cbc0038I Pass  29: suminf.    1.01220 (3) obj. -115.141 iterations 0
Cbc0038I Pass  30: suminf.    1.33851 (4) obj. -115.141 iterations 4
Cbc0038I Pass  31: suminf.    1.33851 (4) obj. -115.141 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 40 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -112.106 to -113.886 (0.02 seconds)
Cbc0038I Round again with cutoff of -120.605
Cbc0038I Pass  31: suminf.    1.39062 (6) obj. -120.605 iterations 1
Cbc0038I Pass  32: suminf.    1.66842 (8) obj. -120.605 iterations 10
Cbc0038I Pass  33: suminf.    0.77350 (5) obj. -120.605 iterations 10
Cbc0038I Pass  34: suminf.    1.35234 (4) obj. -120.605 iterations 3
Cbc0038I Pass  35: suminf.    1.87503 (10) obj. -120.605 iterations 7
Cbc0038I Pass  36: suminf.    1.64369 (6) obj. -120.605 iterations 6
Cbc0038I Pass  37: suminf.    2.41110 (10) obj. -120.605 iterations 17
Cbc0038I Pass  38: suminf.    1.13563 (7) obj. -120.605 iterations 11
Cbc0038I Pass  39: suminf.    1.21354 (4) obj. -120.605 iterations 7
Cbc0038I Pass  40: suminf.    0.84861 (2) obj. -120.605 iterations 2
Cbc0038I Pass  41: suminf.    0.79023 (4) obj. -120.605 iterations 5
Cbc0038I Pass  42: suminf.    1.25284 (3) obj. -120.605 iterations 2
Cbc0038I Pass  43: suminf.    2.32785 (11) obj. -120.605 iterations 11
Cbc0038I Pass  44: suminf.    1.64842 (5) obj. -120.605 iterations 7
Cbc0038I Pass  45: suminf.    1.64842 (5) obj. -120.605 iterations 0
Cbc0038I Pass  46: suminf.    1.30756 (5) obj. -120.605 iterations 5
Cbc0038I Pass  47: suminf.    1.25284 (3) obj. -120.605 iterations 3
Cbc0038I Pass  48: suminf.    0.79023 (4) obj. -120.605 iterations 4
Cbc0038I Pass  49: suminf.    1.25284 (3) obj. -120.605 iterations 2
Cbc0038I Pass  50: suminf.    2.22976 (8) obj. -120.605 iterations 5
Cbc0038I Pass  51: suminf.    1.63236 (6) obj. -120.605 iterations 10
Cbc0038I Pass  52: suminf.    1.17935 (4) obj. -120.605 iterations 4
Cbc0038I Pass  53: suminf.    0.93397 (4) obj. -120.605 iterations 1
Cbc0038I Pass  54: suminf.    1.46993 (4) obj. -120.605 iterations 4
Cbc0038I Pass  55: suminf.    1.58174 (7) obj. -120.605 iterations 5
Cbc0038I Pass  56: suminf.    1.02776 (4) obj. -120.605 iterations 3
Cbc0038I Pass  57: suminf.    1.79004 (5) obj. -120.605 iterations 5
Cbc0038I Pass  58: suminf.    1.30161 (5) obj. -120.605 iterations 4
Cbc0038I Pass  59: suminf.    1.79004 (5) obj. -120.605 iterations 5
Cbc0038I Pass  60: suminf.    2.47232 (9) obj. -120.605 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 40 columns, reduced to 41 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -113.886 - took 0.03 seconds
Cbc0012I Integer solution of -113.88613 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 69 rows 40 columns, reduced to 24 rows 17 columns
Cbc0031I 6 added rows had average density of 20.666667
Cbc0013I At root node, 6 cuts changed objective from -142.45842 to -123.63445 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 477 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 261 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 153 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -113.88613, took 1026 iterations and 6 nodes (0.14 seconds)
Cbc0032I Strong branching done 60 times (368 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-44) rows, 69 (-33) columns and 805 (-773) elements
Clp1000I sum of infeasibilities 1.87164e-07 - average 3.11939e-09, 9 fixed columns
Coin0506I Presolve 52 (-8) rows, 59 (-10) columns and 579 (-226) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 170.73269
Clp0000I Optimal - objective value 170.73269
Coin0511I After Postsolve, objective 170.73269, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 170.73269
Clp0000I Optimal - objective value 170.73269
Clp0000I Optimal - objective value 170.73269
Coin0511I After Postsolve, objective 170.73269, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.7326852 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 71 columns (71 integer (71 of which binary)) and 814 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.348%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.00195
Cbc0038I Pass   1: suminf.    2.77666 (18) obj. -116.507 iterations 19
Cbc0038I Pass   2: suminf.    2.77666 (18) obj. -116.507 iterations 1
Cbc0038I Solution found of -85.7398
Cbc0038I Rounding solution of -86.5203 is better than previous of -85.7398

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 71 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -86.5203 to -109.675 (0.02 seconds)
Cbc0038I Round again with cutoff of -115.17
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.77666 (18) obj. -116.507 iterations 0
Cbc0038I Pass   4: suminf.    2.77666 (18) obj. -116.507 iterations 1
Cbc0038I Pass   5: suminf.    2.07701 (15) obj. -115.17 iterations 27
Cbc0038I Pass   6: suminf.    1.33753 (22) obj. -115.17 iterations 2
Cbc0038I Pass   7: suminf.    0.87819 (4) obj. -115.17 iterations 31
Cbc0038I Pass   8: suminf.    0.31314 (1) obj. -115.17 iterations 3
Cbc0038I Pass   9: suminf.    0.23684 (1) obj. -115.78 iterations 6
Cbc0038I Pass  10: suminf.    2.17628 (12) obj. -115.17 iterations 16
Cbc0038I Pass  11: suminf.    1.67738 (10) obj. -128.194 iterations 4
Cbc0038I Pass  12: suminf.    2.06071 (13) obj. -130.811 iterations 6
Cbc0038I Pass  13: suminf.    2.06071 (13) obj. -130.811 iterations 4
Cbc0038I Pass  14: suminf.    3.87632 (22) obj. -115.17 iterations 14
Cbc0038I Pass  15: suminf.    2.93758 (20) obj. -115.17 iterations 5
Cbc0038I Pass  16: suminf.    0.31314 (1) obj. -115.17 iterations 27
Cbc0038I Pass  17: suminf.    0.23684 (1) obj. -115.78 iterations 6
Cbc0038I Pass  18: suminf.    1.91353 (11) obj. -115.17 iterations 23
Cbc0038I Pass  19: suminf.    1.78369 (9) obj. -115.17 iterations 7
Cbc0038I Pass  20: suminf.    1.46197 (6) obj. -115.17 iterations 13
Cbc0038I Pass  21: suminf.    1.17880 (6) obj. -115.17 iterations 3
Cbc0038I Pass  22: suminf.    0.99494 (3) obj. -115.17 iterations 11
Cbc0038I Pass  23: suminf.    0.93684 (5) obj. -115.17 iterations 2
Cbc0038I Pass  24: suminf.    1.54284 (6) obj. -115.17 iterations 8
Cbc0038I Pass  25: suminf.    0.38686 (2) obj. -115.17 iterations 7
Cbc0038I Pass  26: suminf.    0.23684 (1) obj. -115.78 iterations 7
Cbc0038I Pass  27: suminf.    0.31314 (1) obj. -115.17 iterations 5
Cbc0038I Pass  28: suminf.    1.10708 (7) obj. -115.17 iterations 9
Cbc0038I Pass  29: suminf.    0.89492 (5) obj. -117.675 iterations 8
Cbc0038I Pass  30: suminf.    1.50795 (11) obj. -115.17 iterations 12
Cbc0038I Pass  31: suminf.    1.37434 (9) obj. -115.929 iterations 5
Cbc0038I Pass  32: suminf.    0.71314 (2) obj. -115.17 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 71 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -109.675 - took 0.03 seconds
Cbc0012I Integer solution of -109.67483 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 62 rows 71 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -112.10577 found by DiveCoefficient after 145 iterations and 0 nodes (0.24 seconds)
Cbc0031I 20 added rows had average density of 12.55
Cbc0013I At root node, 20 cuts changed objective from -164.62312 to -118.36804 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 210 row cuts average 2.3 elements, 18 column cuts (18 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 38 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0010I After 4 nodes, 4 on tree, -112.10577 best solution, best possible -118.36804 (0.54 seconds)
Cbc0004I Integer solution of -113.88613 found after 411 iterations and 8 nodes (0.61 seconds)
Cbc0001I Search completed - best objective -113.88613, took 411 iterations and 8 nodes (0.61 seconds)
Cbc0032I Strong branching done 154 times (1030 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 40 (-13) columns and 211 (-92) elements
Clp1000I sum of infeasibilities 9.34503e-06 - average 1.35435e-07, 10 fixed columns
Coin0506I Presolve 48 (-21) rows, 29 (-11) columns and 147 (-64) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 5.5832366 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 142.45842
Clp0000I Optimal - objective value 142.45842
Coin0511I After Postsolve, objective 142.45842, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 142.45842
Clp0000I Optimal - objective value 142.45842
Clp0000I Optimal - objective value 142.45842
Coin0511I After Postsolve, objective 142.45842, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.4584237 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 69 rows, 40 columns (39 integer (39 of which binary)) and 211 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.068%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.9263
Cbc0038I Pass   1: suminf.    1.33973 (3) obj. -110.038 iterations 13
Cbc0038I Solution found of -65.935
Cbc0038I Relaxing continuous gives -65.935
Cbc0038I Rounding solution of -104.585 is better than previous of -65.935

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 40 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -104.585 to -112.106 (0.01 seconds)
Cbc0038I Round again with cutoff of -115.141
Cbc0038I Pass   2: suminf.    1.36294 (4) obj. -115.141 iterations 2
Cbc0038I Pass   3: suminf.    0.94351 (3) obj. -115.141 iterations 7
Cbc0038I Pass   4: suminf.    0.58346 (3) obj. -115.141 iterations 4
Cbc0038I Pass   5: suminf.    1.60997 (8) obj. -115.141 iterations 9
Cbc0038I Pass   6: suminf.    1.27234 (5) obj. -115.141 iterations 9
Cbc0038I Pass   7: suminf.    1.27665 (3) obj. -115.141 iterations 6
Cbc0038I Pass   8: suminf.    0.63734 (2) obj. -115.141 iterations 3
Cbc0038I Pass   9: suminf.    0.70678 (2) obj. -115.141 iterations 1
Cbc0038I Pass  10: suminf.    1.39623 (6) obj. -115.141 iterations 7
Cbc0038I Pass  11: suminf.    1.19060 (7) obj. -115.141 iterations 4
Cbc0038I Pass  12: suminf.    0.43911 (3) obj. -115.141 iterations 7
Cbc0038I Pass  13: suminf.    0.43911 (3) obj. -115.141 iterations 0
Cbc0038I Pass  14: suminf.    1.01311 (5) obj. -115.141 iterations 5
Cbc0038I Pass  15: suminf.    1.46343 (6) obj. -115.141 iterations 5
Cbc0038I Pass  16: suminf.    1.11098 (7) obj. -115.141 iterations 6
Cbc0038I Pass  17: suminf.    1.93510 (6) obj. -115.141 iterations 9
Cbc0038I Pass  18: suminf.    0.63734 (2) obj. -115.141 iterations 9
Cbc0038I Pass  19: suminf.    0.70678 (2) obj. -115.141 iterations 1
Cbc0038I Pass  20: suminf.    1.91213 (5) obj. -115.141 iterations 7
Cbc0038I Pass  21: suminf.    1.45072 (5) obj. -115.141 iterations 4
Cbc0038I Pass  22: suminf.    1.43849 (6) obj. -115.141 iterations 5
Cbc0038I Pass  23: suminf.    0.45151 (1) obj. -115.141 iterations 5
Cbc0038I Pass  24: suminf.    0.41530 (2) obj. -115.141 iterations 3
Cbc0038I Pass  25: suminf.    0.60806 (2) obj. -115.141 iterations 2
Cbc0038I Pass  26: suminf.    1.91518 (8) obj. -115.141 iterations 10
Cbc0038I Pass  27: suminf.    0.80213 (3) obj. -115.141 iterations 8
Cbc0038I Pass  28: suminf.    1.01220 (3) obj. -115.141 iterations 3
Cbc0038I Pass  29: suminf.    1.01220 (3) obj. -115.141 iterations 0
Cbc0038I Pass  30: suminf.    1.33851 (4) obj. -115.141 iterations 4
Cbc0038I Pass  31: suminf.    1.33851 (4) obj. -115.141 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 40 columns, reduced to 29 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -112.106 to -113.886 (0.02 seconds)
Cbc0038I Round again with cutoff of -120.605
Cbc0038I Pass  31: suminf.    1.39062 (6) obj. -120.605 iterations 1
Cbc0038I Pass  32: suminf.    1.66842 (8) obj. -120.605 iterations 10
Cbc0038I Pass  33: suminf.    0.77350 (5) obj. -120.605 iterations 10
Cbc0038I Pass  34: suminf.    1.35234 (4) obj. -120.605 iterations 3
Cbc0038I Pass  35: suminf.    1.87503 (10) obj. -120.605 iterations 7
Cbc0038I Pass  36: suminf.    1.64369 (6) obj. -120.605 iterations 6
Cbc0038I Pass  37: suminf.    2.41110 (10) obj. -120.605 iterations 17
Cbc0038I Pass  38: suminf.    1.13563 (7) obj. -120.605 iterations 11
Cbc0038I Pass  39: suminf.    1.21354 (4) obj. -120.605 iterations 7
Cbc0038I Pass  40: suminf.    0.84861 (2) obj. -120.605 iterations 2
Cbc0038I Pass  41: suminf.    0.79023 (4) obj. -120.605 iterations 5
Cbc0038I Pass  42: suminf.    1.25284 (3) obj. -120.605 iterations 2
Cbc0038I Pass  43: suminf.    2.32785 (11) obj. -120.605 iterations 11
Cbc0038I Pass  44: suminf.    1.64842 (5) obj. -120.605 iterations 7
Cbc0038I Pass  45: suminf.    1.64842 (5) obj. -120.605 iterations 0
Cbc0038I Pass  46: suminf.    1.30756 (5) obj. -120.605 iterations 5
Cbc0038I Pass  47: suminf.    1.25284 (3) obj. -120.605 iterations 3
Cbc0038I Pass  48: suminf.    0.79023 (4) obj. -120.605 iterations 4
Cbc0038I Pass  49: suminf.    1.25284 (3) obj. -120.605 iterations 2
Cbc0038I Pass  50: suminf.    2.22976 (8) obj. -120.605 iterations 5
Cbc0038I Pass  51: suminf.    1.63236 (6) obj. -120.605 iterations 10
Cbc0038I Pass  52: suminf.    1.17935 (4) obj. -120.605 iterations 4
Cbc0038I Pass  53: suminf.    0.93397 (4) obj. -120.605 iterations 1
Cbc0038I Pass  54: suminf.    1.46993 (4) obj. -120.605 iterations 4
Cbc0038I Pass  55: suminf.    1.58174 (7) obj. -120.605 iterations 5
Cbc0038I Pass  56: suminf.    1.02776 (4) obj. -120.605 iterations 3
Cbc0038I Pass  57: suminf.    1.79004 (5) obj. -120.605 iterations 5
Cbc0038I Pass  58: suminf.    1.30161 (5) obj. -120.605 iterations 4
Cbc0038I Pass  59: suminf.    1.79004 (5) obj. -120.605 iterations 5
Cbc0038I Pass  60: suminf.    2.47232 (9) obj. -120.605 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 40 columns, reduced to 41 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -113.886 - took 0.03 seconds
Cbc0012I Integer solution of -113.88613 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 69 rows 40 columns, reduced to 24 rows 17 columns
Cbc0031I 6 added rows had average density of 20.666667
Cbc0013I At root node, 6 cuts changed objective from -142.45842 to -123.63445 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 477 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 261 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 153 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -113.88613, took 1026 iterations and 6 nodes (0.16 seconds)
Cbc0032I Strong branching done 60 times (368 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-45) rows, 69 (-34) columns and 805 (-774) elements
Clp1000I sum of infeasibilities 1.87164e-07 - average 3.11939e-09, 9 fixed columns
Coin0506I Presolve 52 (-8) rows, 59 (-10) columns and 579 (-226) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 170.73269
Clp0000I Optimal - objective value 170.73269
Coin0511I After Postsolve, objective 170.73269, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 170.73269
Clp0000I Optimal - objective value 170.73269
Clp0000I Optimal - objective value 170.73269
Coin0511I After Postsolve, objective 170.73269, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 170.7326852 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 71 columns (71 integer (71 of which binary)) and 814 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.348%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.00195
Cbc0038I Pass   1: suminf.    2.77666 (18) obj. -116.507 iterations 19
Cbc0038I Pass   2: suminf.    2.77666 (18) obj. -116.507 iterations 1
Cbc0038I Solution found of -85.7398
Cbc0038I Rounding solution of -86.5203 is better than previous of -85.7398

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 71 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -86.5203 to -109.675 (0.01 seconds)
Cbc0038I Round again with cutoff of -115.17
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.77666 (18) obj. -116.507 iterations 0
Cbc0038I Pass   4: suminf.    2.77666 (18) obj. -116.507 iterations 1
Cbc0038I Pass   5: suminf.    2.07701 (15) obj. -115.17 iterations 27
Cbc0038I Pass   6: suminf.    1.33753 (22) obj. -115.17 iterations 2
Cbc0038I Pass   7: suminf.    0.87819 (4) obj. -115.17 iterations 31
Cbc0038I Pass   8: suminf.    0.31314 (1) obj. -115.17 iterations 3
Cbc0038I Pass   9: suminf.    0.23684 (1) obj. -115.78 iterations 6
Cbc0038I Pass  10: suminf.    2.17628 (12) obj. -115.17 iterations 16
Cbc0038I Pass  11: suminf.    1.67738 (10) obj. -128.194 iterations 4
Cbc0038I Pass  12: suminf.    2.06071 (13) obj. -130.811 iterations 6
Cbc0038I Pass  13: suminf.    2.06071 (13) obj. -130.811 iterations 4
Cbc0038I Pass  14: suminf.    3.87632 (22) obj. -115.17 iterations 14
Cbc0038I Pass  15: suminf.    2.93758 (20) obj. -115.17 iterations 5
Cbc0038I Pass  16: suminf.    0.31314 (1) obj. -115.17 iterations 27
Cbc0038I Pass  17: suminf.    0.23684 (1) obj. -115.78 iterations 6
Cbc0038I Pass  18: suminf.    1.91353 (11) obj. -115.17 iterations 23
Cbc0038I Pass  19: suminf.    1.78369 (9) obj. -115.17 iterations 7
Cbc0038I Pass  20: suminf.    1.46197 (6) obj. -115.17 iterations 13
Cbc0038I Pass  21: suminf.    1.17880 (6) obj. -115.17 iterations 3
Cbc0038I Pass  22: suminf.    0.99494 (3) obj. -115.17 iterations 11
Cbc0038I Pass  23: suminf.    0.93684 (5) obj. -115.17 iterations 2
Cbc0038I Pass  24: suminf.    1.54284 (6) obj. -115.17 iterations 8
Cbc0038I Pass  25: suminf.    0.38686 (2) obj. -115.17 iterations 7
Cbc0038I Pass  26: suminf.    0.23684 (1) obj. -115.78 iterations 7
Cbc0038I Pass  27: suminf.    0.31314 (1) obj. -115.17 iterations 5
Cbc0038I Pass  28: suminf.    1.10708 (7) obj. -115.17 iterations 9
Cbc0038I Pass  29: suminf.    0.89492 (5) obj. -117.675 iterations 8
Cbc0038I Pass  30: suminf.    1.50795 (11) obj. -115.17 iterations 12
Cbc0038I Pass  31: suminf.    1.37434 (9) obj. -115.929 iterations 5
Cbc0038I Pass  32: suminf.    0.71314 (2) obj. -115.17 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 71 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -109.675 - took 0.03 seconds
Cbc0012I Integer solution of -109.67483 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 62 rows 71 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -112.10577 found by DiveCoefficient after 145 iterations and 0 nodes (0.24 seconds)
Cbc0031I 20 added rows had average density of 12.55
Cbc0013I At root node, 20 cuts changed objective from -164.62312 to -118.36804 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 210 row cuts average 2.3 elements, 18 column cuts (18 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 38 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -112.10577 best solution, best possible -118.36804 (0.48 seconds)
Cbc0004I Integer solution of -113.88613 found after 411 iterations and 8 nodes (0.60 seconds)
Cbc0001I Search completed - best objective -113.88613, took 411 iterations and 8 nodes (0.60 seconds)
Cbc0032I Strong branching done 154 times (1030 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.39   (Wallclock seconds):       0.61

