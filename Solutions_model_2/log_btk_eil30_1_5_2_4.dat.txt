Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-10) rows, 29 (-3) columns and 156 (-21) elements
Clp1000I sum of infeasibilities 5.08325e-06 - average 9.59104e-08, 1 fixed columns
Coin0506I Presolve 51 (-2) rows, 28 (-1) columns and 150 (-6) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 100.65123
Clp0000I Optimal - objective value 100.65123
Coin0511I After Postsolve, objective 100.65123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 100.65123
Clp0000I Optimal - objective value 100.65123
Clp0000I Optimal - objective value 100.65123
Coin0511I After Postsolve, objective 100.65123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.6512349 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 29 columns (28 integer (28 of which binary)) and 159 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.448%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.4254
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.1205 iterations 25
Cbc0038I Solution found of -43.1205
Cbc0038I Relaxing continuous gives -43.1205
Cbc0038I Rounding solution of -45.7127 is better than previous of -43.1205

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 29 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -45.7127 to -45.8444 (0.03 seconds)
Cbc0038I Round again with cutoff of -51.3252
Cbc0038I Pass   2: suminf.    0.30308 (3) obj. -51.3252 iterations 2
Cbc0038I Pass   3: suminf.    0.33995 (1) obj. -51.3252 iterations 3
Cbc0038I Pass   4: suminf.    0.23562 (2) obj. -51.3252 iterations 2
Cbc0038I Pass   5: suminf.    0.43064 (1) obj. -51.3252 iterations 2
Cbc0038I Pass   6: suminf.    0.20254 (1) obj. -51.3252 iterations 1
Cbc0038I Pass   7: suminf.    1.79482 (4) obj. -51.3252 iterations 5
Cbc0038I Pass   8: suminf.    0.51696 (2) obj. -51.3252 iterations 3
Cbc0038I Pass   9: suminf.    2.44583 (9) obj. -51.3252 iterations 10
Cbc0038I Pass  10: suminf.    1.46876 (5) obj. -51.3252 iterations 5
Cbc0038I Pass  11: suminf.    2.12202 (7) obj. -51.3252 iterations 5
Cbc0038I Pass  12: suminf.    2.12202 (7) obj. -51.3252 iterations 1
Cbc0038I Pass  13: suminf.    0.50098 (3) obj. -51.3252 iterations 9
Cbc0038I Pass  14: suminf.    0.46552 (2) obj. -51.3252 iterations 1
Cbc0038I Pass  15: suminf.    0.65643 (3) obj. -51.3252 iterations 2
Cbc0038I Pass  16: suminf.    0.63337 (4) obj. -51.3252 iterations 1
Cbc0038I Pass  17: suminf.    1.06795 (3) obj. -51.3252 iterations 3
Cbc0038I Pass  18: suminf.    0.99289 (3) obj. -51.3252 iterations 1
Cbc0038I Pass  19: suminf.    1.01458 (3) obj. -51.3252 iterations 2
Cbc0038I Pass  20: suminf.    0.67030 (4) obj. -51.3252 iterations 2
Cbc0038I Pass  21: suminf.    1.52076 (4) obj. -51.3252 iterations 4
Cbc0038I Pass  22: suminf.    1.25229 (4) obj. -51.3252 iterations 1
Cbc0038I Pass  23: suminf.    1.65367 (8) obj. -51.3252 iterations 10
Cbc0038I Pass  24: suminf.    1.08792 (5) obj. -51.3252 iterations 5
Cbc0038I Pass  25: suminf.    0.49078 (1) obj. -51.3252 iterations 6
Cbc0038I Pass  26: suminf.    0.49448 (2) obj. -51.3252 iterations 2
Cbc0038I Pass  27: suminf.    0.50098 (3) obj. -51.3252 iterations 3
Cbc0038I Pass  28: suminf.    0.46552 (2) obj. -51.3252 iterations 1
Cbc0038I Pass  29: suminf.    0.65643 (3) obj. -51.3252 iterations 2
Cbc0038I Pass  30: suminf.    0.63337 (4) obj. -51.3252 iterations 1
Cbc0038I Pass  31: suminf.    1.06795 (3) obj. -51.3252 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 29 columns, reduced to 53 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -45.8444 - took 0.09 seconds
Cbc0012I Integer solution of -45.84443 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 12 added rows had average density of 23.916667
Cbc0013I At root node, 12 cuts changed objective from -100.65123 to -69.854613 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2464 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1133 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -45.84442999999999, took 3428 iterations and 14 nodes (0.28 seconds)
Cbc0032I Strong branching done 156 times (1741 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-10) rows, 55 (-5) columns and 526 (-86) elements
Clp1000I sum of infeasibilities 3.35779e-05 - average 6.45729e-07, 41 fixed columns
Coin0506I Presolve 9 (-43) rows, 14 (-41) columns and 40 (-486) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 0.43605629 - largest nonzero change 0 ( 0%) - largest zero change 1.5409559e-05
Clp0000I Optimal - objective value 40.471679
Clp0000I Optimal - objective value 40.471679
Coin0511I After Postsolve, objective 40.471679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2728163 - largest nonzero change 2.5172761e-05 ( 0.0021869008%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 133.16828
Clp0000I Optimal - objective value 133.16828
Clp0000I Optimal - objective value 133.16828
Coin0511I After Postsolve, objective 133.16828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.1682793 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 55 columns (55 integer (55 of which binary)) and 531 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.944%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 7.3697
Cbc0038I Pass   1: suminf.    3.63936 (17) obj. -91.8312 iterations 10
Cbc0038I Pass   2: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Solution found of -17.3896
Cbc0038I Rounding solution of -25.9498 is better than previous of -17.3896

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -25.9498 to -40.5414 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.6378
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Pass   4: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Pass   5: suminf.    0.59922 (5) obj. -48.6378 iterations 23
Cbc0038I Pass   6: suminf.    0.59922 (5) obj. -48.6378 iterations 2
Cbc0038I Pass   7: suminf.    0.97737 (4) obj. -48.6378 iterations 4
Cbc0038I Pass   8: suminf.    0.97737 (4) obj. -48.6378 iterations 0
Cbc0038I Pass   9: suminf.    0.57709 (4) obj. -48.6378 iterations 2
Cbc0038I Pass  10: suminf.    0.57709 (4) obj. -48.6378 iterations 0
Cbc0038I Pass  11: suminf.    1.43466 (15) obj. -48.6378 iterations 7
Cbc0038I Pass  12: suminf.    1.43466 (15) obj. -48.6378 iterations 0
Cbc0038I Pass  13: suminf.    0.58481 (6) obj. -48.6378 iterations 14
Cbc0038I Pass  14: suminf.    0.58481 (6) obj. -48.6378 iterations 0
Cbc0038I Pass  15: suminf.    0.41127 (2) obj. -48.6378 iterations 9
Cbc0038I Pass  16: suminf.    0.38235 (2) obj. -48.9848 iterations 1
Cbc0038I Pass  17: suminf.    0.41127 (2) obj. -48.6378 iterations 2
Cbc0038I Pass  18: suminf.    3.21894 (9) obj. -48.6378 iterations 12
Cbc0038I Pass  19: suminf.    1.75157 (6) obj. -48.6378 iterations 6
Cbc0038I Pass  20: suminf.    0.52496 (2) obj. -48.6378 iterations 5
Cbc0038I Pass  21: suminf.    0.52496 (2) obj. -48.6378 iterations 0
Cbc0038I Pass  22: suminf.    0.87542 (3) obj. -48.6378 iterations 2
Cbc0038I Pass  23: suminf.    0.79412 (2) obj. -49.3168 iterations 2
Cbc0038I Pass  24: suminf.    0.85070 (2) obj. -48.6378 iterations 2
Cbc0038I Pass  25: suminf.    2.58592 (10) obj. -48.6378 iterations 15
Cbc0038I Pass  26: suminf.    2.58592 (10) obj. -48.6378 iterations 1
Cbc0038I Pass  27: suminf.    0.97536 (3) obj. -48.6378 iterations 10
Cbc0038I Pass  28: suminf.    0.97536 (3) obj. -48.6378 iterations 0
Cbc0038I Pass  29: suminf.    1.18735 (3) obj. -48.6378 iterations 1
Cbc0038I Pass  30: suminf.    1.18735 (3) obj. -48.6378 iterations 0
Cbc0038I Pass  31: suminf.    0.97536 (3) obj. -48.6378 iterations 2
Cbc0038I Pass  32: suminf.    6.47821 (17) obj. -48.6378 iterations 20
Cbc0038I Rounding solution of -41.1864 is better than previous of -40.5414

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 35 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -41.1864 to -45.7127 (0.05 seconds)
Cbc0038I Round again with cutoff of -63.2111
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Pass  33: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Pass  34: suminf.    1.16798 (17) obj. -63.2111 iterations 24
Cbc0038I Pass  35: suminf.    1.16798 (17) obj. -63.2111 iterations 1
Cbc0038I Pass  36: suminf.    1.33929 (4) obj. -63.2111 iterations 19
Cbc0038I Pass  37: suminf.    1.21097 (5) obj. -64.2545 iterations 3
Cbc0038I Pass  38: suminf.    1.77790 (5) obj. -63.2111 iterations 6
Cbc0038I Pass  39: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  40: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  41: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I Pass  42: suminf.    1.44784 (4) obj. -63.3713 iterations 1
Cbc0038I Pass  43: suminf.    1.77790 (5) obj. -63.2111 iterations 3
Cbc0038I Pass  44: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  45: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  46: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I Pass  47: suminf.    1.44784 (4) obj. -63.3713 iterations 1
Cbc0038I Pass  48: suminf.    1.77790 (5) obj. -63.2111 iterations 3
Cbc0038I Pass  49: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  50: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  51: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I Pass  52: suminf.    1.44784 (4) obj. -63.3713 iterations 1
Cbc0038I Pass  53: suminf.    1.77790 (5) obj. -63.2111 iterations 3
Cbc0038I Pass  54: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  55: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  56: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I Pass  57: suminf.    1.44784 (4) obj. -63.3713 iterations 1
Cbc0038I Pass  58: suminf.    1.77790 (5) obj. -63.2111 iterations 3
Cbc0038I Pass  59: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  60: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  61: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -45.7127 - took 0.05 seconds
Cbc0012I Integer solution of -45.71269 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 52 rows 55 columns, reduced to 6 rows 7 columns
Cbc0031I 22 added rows had average density of 9.6363636
Cbc0013I At root node, 22 cuts changed objective from -121.50436 to -50.622204 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 572 row cuts average 4.9 elements, 13 column cuts (13 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 388 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 224 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.684 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -45.71269 best solution, best possible -50.622204 (1.42 seconds)
Cbc0012I Integer solution of -45.84443 found by DiveCoefficient after 1532 iterations and 6 nodes (1.45 seconds)
Cbc0001I Search completed - best objective -45.84442999999999, took 1602 iterations and 10 nodes (1.46 seconds)
Cbc0032I Strong branching done 106 times (783 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.46

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-10) rows, 29 (-3) columns and 156 (-21) elements
Clp1000I sum of infeasibilities 5.08325e-06 - average 9.59104e-08, 1 fixed columns
Coin0506I Presolve 51 (-2) rows, 28 (-1) columns and 150 (-6) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 100.65123
Clp0000I Optimal - objective value 100.65123
Coin0511I After Postsolve, objective 100.65123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 100.65123
Clp0000I Optimal - objective value 100.65123
Clp0000I Optimal - objective value 100.65123
Coin0511I After Postsolve, objective 100.65123, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 100.6512349 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 29 columns (28 integer (28 of which binary)) and 159 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.448%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.4254
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -43.1205 iterations 25
Cbc0038I Solution found of -43.1205
Cbc0038I Relaxing continuous gives -43.1205
Cbc0038I Rounding solution of -45.7127 is better than previous of -43.1205

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 29 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -45.7127 to -45.8444 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.3252
Cbc0038I Pass   2: suminf.    0.30308 (3) obj. -51.3252 iterations 2
Cbc0038I Pass   3: suminf.    0.33995 (1) obj. -51.3252 iterations 3
Cbc0038I Pass   4: suminf.    0.23562 (2) obj. -51.3252 iterations 2
Cbc0038I Pass   5: suminf.    0.43064 (1) obj. -51.3252 iterations 2
Cbc0038I Pass   6: suminf.    0.20254 (1) obj. -51.3252 iterations 1
Cbc0038I Pass   7: suminf.    1.79482 (4) obj. -51.3252 iterations 5
Cbc0038I Pass   8: suminf.    0.51696 (2) obj. -51.3252 iterations 3
Cbc0038I Pass   9: suminf.    2.44583 (9) obj. -51.3252 iterations 10
Cbc0038I Pass  10: suminf.    1.46876 (5) obj. -51.3252 iterations 5
Cbc0038I Pass  11: suminf.    2.12202 (7) obj. -51.3252 iterations 5
Cbc0038I Pass  12: suminf.    2.12202 (7) obj. -51.3252 iterations 1
Cbc0038I Pass  13: suminf.    0.50098 (3) obj. -51.3252 iterations 9
Cbc0038I Pass  14: suminf.    0.46552 (2) obj. -51.3252 iterations 1
Cbc0038I Pass  15: suminf.    0.65643 (3) obj. -51.3252 iterations 2
Cbc0038I Pass  16: suminf.    0.63337 (4) obj. -51.3252 iterations 1
Cbc0038I Pass  17: suminf.    1.06795 (3) obj. -51.3252 iterations 3
Cbc0038I Pass  18: suminf.    0.99289 (3) obj. -51.3252 iterations 1
Cbc0038I Pass  19: suminf.    1.01458 (3) obj. -51.3252 iterations 2
Cbc0038I Pass  20: suminf.    0.67030 (4) obj. -51.3252 iterations 2
Cbc0038I Pass  21: suminf.    1.52076 (4) obj. -51.3252 iterations 4
Cbc0038I Pass  22: suminf.    1.25229 (4) obj. -51.3252 iterations 1
Cbc0038I Pass  23: suminf.    1.65367 (8) obj. -51.3252 iterations 10
Cbc0038I Pass  24: suminf.    1.08792 (5) obj. -51.3252 iterations 5
Cbc0038I Pass  25: suminf.    0.49078 (1) obj. -51.3252 iterations 6
Cbc0038I Pass  26: suminf.    0.49448 (2) obj. -51.3252 iterations 2
Cbc0038I Pass  27: suminf.    0.50098 (3) obj. -51.3252 iterations 3
Cbc0038I Pass  28: suminf.    0.46552 (2) obj. -51.3252 iterations 1
Cbc0038I Pass  29: suminf.    0.65643 (3) obj. -51.3252 iterations 2
Cbc0038I Pass  30: suminf.    0.63337 (4) obj. -51.3252 iterations 1
Cbc0038I Pass  31: suminf.    1.06795 (3) obj. -51.3252 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 29 columns, reduced to 53 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -45.8444 - took 0.06 seconds
Cbc0012I Integer solution of -45.84443 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 12 added rows had average density of 23.916667
Cbc0013I At root node, 12 cuts changed objective from -100.65123 to -69.854613 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2464 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1133 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -45.84442999999999, took 3428 iterations and 14 nodes (0.35 seconds)
Cbc0032I Strong branching done 156 times (1741 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 55 (-6) columns and 526 (-87) elements
Clp1000I sum of infeasibilities 3.35779e-05 - average 6.45729e-07, 41 fixed columns
Coin0506I Presolve 9 (-43) rows, 14 (-41) columns and 40 (-486) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 0.43605629 - largest nonzero change 0 ( 0%) - largest zero change 1.5409559e-05
Clp0000I Optimal - objective value 40.471679
Clp0000I Optimal - objective value 40.471679
Coin0511I After Postsolve, objective 40.471679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2728163 - largest nonzero change 2.5172761e-05 ( 0.0021869008%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 133.16828
Clp0000I Optimal - objective value 133.16828
Clp0000I Optimal - objective value 133.16828
Coin0511I After Postsolve, objective 133.16828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.1682793 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 55 columns (55 integer (55 of which binary)) and 531 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.944%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 7.3697
Cbc0038I Pass   1: suminf.    3.63936 (17) obj. -91.8312 iterations 10
Cbc0038I Pass   2: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Solution found of -17.3896
Cbc0038I Rounding solution of -25.9498 is better than previous of -17.3896

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -25.9498 to -40.5414 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.6378
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Pass   4: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Pass   5: suminf.    0.59922 (5) obj. -48.6378 iterations 23
Cbc0038I Pass   6: suminf.    0.59922 (5) obj. -48.6378 iterations 2
Cbc0038I Pass   7: suminf.    0.97737 (4) obj. -48.6378 iterations 4
Cbc0038I Pass   8: suminf.    0.97737 (4) obj. -48.6378 iterations 0
Cbc0038I Pass   9: suminf.    0.57709 (4) obj. -48.6378 iterations 2
Cbc0038I Pass  10: suminf.    0.57709 (4) obj. -48.6378 iterations 0
Cbc0038I Pass  11: suminf.    1.43466 (15) obj. -48.6378 iterations 7
Cbc0038I Pass  12: suminf.    1.43466 (15) obj. -48.6378 iterations 0
Cbc0038I Pass  13: suminf.    0.58481 (6) obj. -48.6378 iterations 14
Cbc0038I Pass  14: suminf.    0.58481 (6) obj. -48.6378 iterations 0
Cbc0038I Pass  15: suminf.    0.41127 (2) obj. -48.6378 iterations 9
Cbc0038I Pass  16: suminf.    0.38235 (2) obj. -48.9848 iterations 1
Cbc0038I Pass  17: suminf.    0.41127 (2) obj. -48.6378 iterations 2
Cbc0038I Pass  18: suminf.    3.21894 (9) obj. -48.6378 iterations 12
Cbc0038I Pass  19: suminf.    1.75157 (6) obj. -48.6378 iterations 6
Cbc0038I Pass  20: suminf.    0.52496 (2) obj. -48.6378 iterations 5
Cbc0038I Pass  21: suminf.    0.52496 (2) obj. -48.6378 iterations 0
Cbc0038I Pass  22: suminf.    0.87542 (3) obj. -48.6378 iterations 2
Cbc0038I Pass  23: suminf.    0.79412 (2) obj. -49.3168 iterations 2
Cbc0038I Pass  24: suminf.    0.85070 (2) obj. -48.6378 iterations 2
Cbc0038I Pass  25: suminf.    2.58592 (10) obj. -48.6378 iterations 15
Cbc0038I Pass  26: suminf.    2.58592 (10) obj. -48.6378 iterations 1
Cbc0038I Pass  27: suminf.    0.97536 (3) obj. -48.6378 iterations 10
Cbc0038I Pass  28: suminf.    0.97536 (3) obj. -48.6378 iterations 0
Cbc0038I Pass  29: suminf.    1.18735 (3) obj. -48.6378 iterations 1
Cbc0038I Pass  30: suminf.    1.18735 (3) obj. -48.6378 iterations 0
Cbc0038I Pass  31: suminf.    0.97536 (3) obj. -48.6378 iterations 2
Cbc0038I Pass  32: suminf.    6.47821 (17) obj. -48.6378 iterations 20
Cbc0038I Rounding solution of -41.1864 is better than previous of -40.5414

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 35 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -41.1864 to -45.7127 (0.06 seconds)
Cbc0038I Round again with cutoff of -63.2111
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Pass  33: suminf.    3.63936 (17) obj. -91.8312 iterations 0
Cbc0038I Pass  34: suminf.    1.16798 (17) obj. -63.2111 iterations 24
Cbc0038I Pass  35: suminf.    1.16798 (17) obj. -63.2111 iterations 1
Cbc0038I Pass  36: suminf.    1.33929 (4) obj. -63.2111 iterations 19
Cbc0038I Pass  37: suminf.    1.21097 (5) obj. -64.2545 iterations 3
Cbc0038I Pass  38: suminf.    1.77790 (5) obj. -63.2111 iterations 6
Cbc0038I Pass  39: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  40: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  41: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I Pass  42: suminf.    1.44784 (4) obj. -63.3713 iterations 1
Cbc0038I Pass  43: suminf.    1.77790 (5) obj. -63.2111 iterations 3
Cbc0038I Pass  44: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  45: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  46: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I Pass  47: suminf.    1.44784 (4) obj. -63.3713 iterations 1
Cbc0038I Pass  48: suminf.    1.77790 (5) obj. -63.2111 iterations 3
Cbc0038I Pass  49: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  50: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  51: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I Pass  52: suminf.    1.44784 (4) obj. -63.3713 iterations 1
Cbc0038I Pass  53: suminf.    1.77790 (5) obj. -63.2111 iterations 3
Cbc0038I Pass  54: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  55: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  56: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I Pass  57: suminf.    1.44784 (4) obj. -63.3713 iterations 1
Cbc0038I Pass  58: suminf.    1.77790 (5) obj. -63.2111 iterations 3
Cbc0038I Pass  59: suminf.    1.00605 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  60: suminf.    0.93953 (4) obj. -63.2111 iterations 1
Cbc0038I Pass  61: suminf.    1.46241 (4) obj. -63.2111 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -45.7127 - took 0.05 seconds
Cbc0012I Integer solution of -45.71269 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 52 rows 55 columns, reduced to 6 rows 7 columns
Cbc0031I 22 added rows had average density of 9.6363636
Cbc0013I At root node, 22 cuts changed objective from -121.50436 to -50.622204 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 572 row cuts average 4.9 elements, 13 column cuts (13 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 388 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 224 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 22 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.803 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -45.71269 best solution, best possible -50.622204 (1.76 seconds)
Cbc0012I Integer solution of -45.84443 found by DiveCoefficient after 1532 iterations and 6 nodes (1.81 seconds)
Cbc0001I Search completed - best objective -45.84442999999999, took 1602 iterations and 10 nodes (1.81 seconds)
Cbc0032I Strong branching done 106 times (783 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.82

