Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 101 (-2) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 4.57658e-05 - average 2.5285e-07, 12 fixed columns
Coin0506I Presolve 151 (-30) rows, 86 (-15) columns and 466 (-90) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.2308542 - largest nonzero change 0 ( 0%) - largest zero change 2.5950631e-05
Clp0000I Optimal - objective value 37.110667
Clp0000I Optimal - objective value 37.110667
Coin0511I After Postsolve, objective 37.110667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.110667
Clp0000I Optimal - objective value 37.110667
Clp0000I Optimal - objective value 37.110667
Coin0511I After Postsolve, objective 37.110667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.11066691 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 181 rows, 101 columns (100 integer (100 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 14.1275
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.3611 iterations 80
Cbc0038I Solution found of 14.3611
Cbc0038I Relaxing continuous gives 14.3611
Cbc0038I Rounding solution of -1.51687 is better than previous of 14.3611

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 85 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -1.51687 to -5.93875 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.05603
Cbc0038I Pass   2: suminf.    2.31023 (32) obj. -9.05603 iterations 41
Cbc0038I Pass   3: suminf.    2.16938 (44) obj. -9.05603 iterations 17
Cbc0038I Pass   4: suminf.    1.52618 (6) obj. -9.05603 iterations 42
Cbc0038I Pass   5: suminf.    0.94264 (6) obj. -9.05603 iterations 7
Cbc0038I Pass   6: suminf.    2.08434 (8) obj. -9.05603 iterations 14
Cbc0038I Pass   7: suminf.    1.57512 (7) obj. -9.05603 iterations 4
Cbc0038I Pass   8: suminf.    2.50083 (6) obj. -9.05603 iterations 11
Cbc0038I Pass   9: suminf.    2.23586 (9) obj. -9.05603 iterations 10
Cbc0038I Pass  10: suminf.    2.47005 (8) obj. -9.05603 iterations 10
Cbc0038I Pass  11: suminf.    2.47005 (8) obj. -9.05603 iterations 0
Cbc0038I Pass  12: suminf.    1.97641 (6) obj. -9.05603 iterations 9
Cbc0038I Pass  13: suminf.    2.58002 (6) obj. -9.05603 iterations 5
Cbc0038I Pass  14: suminf.    2.11088 (6) obj. -9.05603 iterations 1
Cbc0038I Pass  15: suminf.    2.50369 (6) obj. -9.05603 iterations 4
Cbc0038I Pass  16: suminf.    2.08002 (7) obj. -9.05603 iterations 6
Cbc0038I Pass  17: suminf.    2.08002 (7) obj. -9.05603 iterations 0
Cbc0038I Pass  18: suminf.    2.76356 (7) obj. -9.05603 iterations 3
Cbc0038I Pass  19: suminf.    2.15715 (8) obj. -9.05603 iterations 8
Cbc0038I Pass  20: suminf.    2.91811 (8) obj. -9.05603 iterations 12
Cbc0038I Pass  21: suminf.    2.91811 (8) obj. -9.05603 iterations 0
Cbc0038I Pass  22: suminf.    2.33877 (6) obj. -9.05603 iterations 9
Cbc0038I Pass  23: suminf.    2.82740 (7) obj. -9.05603 iterations 9
Cbc0038I Pass  24: suminf.    2.34584 (10) obj. -9.05603 iterations 10
Cbc0038I Pass  25: suminf.    2.34584 (10) obj. -9.05603 iterations 0
Cbc0038I Pass  26: suminf.    3.05045 (10) obj. -9.05603 iterations 16
Cbc0038I Pass  27: suminf.    2.69581 (8) obj. -9.05603 iterations 2
Cbc0038I Pass  28: suminf.    2.19195 (11) obj. -9.05603 iterations 10
Cbc0038I Pass  29: suminf.    2.03977 (11) obj. -9.05603 iterations 3
Cbc0038I Pass  30: suminf.    1.83734 (8) obj. -9.05603 iterations 14
Cbc0038I Pass  31: suminf.    2.22031 (11) obj. -9.05603 iterations 14
Cbc0038I Rounding solution of -6.96871 is better than previous of -5.93875

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 102 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -14.667
Cbc0038I Pass  31: suminf.    4.08641 (32) obj. -14.667 iterations 0
Cbc0038I Pass  32: suminf.    3.75602 (25) obj. -14.667 iterations 12
Cbc0038I Pass  33: suminf.    3.39503 (11) obj. -14.667 iterations 23
Cbc0038I Pass  34: suminf.    3.15250 (11) obj. -14.667 iterations 6
Cbc0038I Pass  35: suminf.    3.14145 (11) obj. -14.667 iterations 2
Cbc0038I Pass  36: suminf.    4.07298 (10) obj. -14.667 iterations 14
Cbc0038I Pass  37: suminf.    3.47653 (9) obj. -14.667 iterations 7
Cbc0038I Pass  38: suminf.    3.86229 (9) obj. -14.667 iterations 7
Cbc0038I Pass  39: suminf.    3.64355 (9) obj. -14.667 iterations 5
Cbc0038I Pass  40: suminf.    3.47653 (9) obj. -14.667 iterations 11
Cbc0038I Pass  41: suminf.    5.99529 (18) obj. -14.667 iterations 23
Cbc0038I Pass  42: suminf.    3.76973 (12) obj. -14.667 iterations 29
Cbc0038I Pass  43: suminf.    3.76973 (12) obj. -14.667 iterations 3
Cbc0038I Pass  44: suminf.    3.34105 (9) obj. -14.667 iterations 13
Cbc0038I Pass  45: suminf.    3.06180 (10) obj. -14.667 iterations 2
Cbc0038I Pass  46: suminf.    3.05035 (8) obj. -14.667 iterations 13
Cbc0038I Pass  47: suminf.    2.90707 (9) obj. -14.667 iterations 5
Cbc0038I Pass  48: suminf.    2.90707 (9) obj. -14.667 iterations 0
Cbc0038I Pass  49: suminf.    3.06180 (10) obj. -14.667 iterations 11
Cbc0038I Pass  50: suminf.    3.06180 (10) obj. -14.667 iterations 0
Cbc0038I Pass  51: suminf.    3.05035 (8) obj. -14.667 iterations 13
Cbc0038I Pass  52: suminf.    2.90707 (9) obj. -14.667 iterations 5
Cbc0038I Pass  53: suminf.    2.90707 (9) obj. -14.667 iterations 0
Cbc0038I Pass  54: suminf.    3.06180 (10) obj. -14.667 iterations 11
Cbc0038I Pass  55: suminf.    3.06180 (10) obj. -14.667 iterations 0
Cbc0038I Pass  56: suminf.    3.05035 (8) obj. -14.667 iterations 13
Cbc0038I Pass  57: suminf.    2.90707 (9) obj. -14.667 iterations 5
Cbc0038I Pass  58: suminf.    2.90707 (9) obj. -14.667 iterations 0
Cbc0038I Pass  59: suminf.    3.06180 (10) obj. -14.667 iterations 11
Cbc0038I Pass  60: suminf.    3.06180 (10) obj. -14.667 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 101 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -6.96871 - took 0.16 seconds
Cbc0012I Integer solution of -7.060355 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 91 rows 53 columns
Cbc0031I 27 added rows had average density of 61.555556
Cbc0013I At root node, 27 cuts changed objective from -37.110667 to -29.208092 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20908 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2821 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.060355 best solution, best possible -29.208092 (1.74 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 66 rows 43 columns
Cbc0012I Integer solution of -7.443335 found by RINS after 11921 iterations and 41 nodes (2.13 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -7.443335000000005, took 13891 iterations and 102 nodes (2.29 seconds)
Cbc0032I Strong branching done 1158 times (21577 iterations), fathomed 16 nodes and fixed 64 variables
Cbc0035I Maximum depth 27, 419 variables fixed on reduced cost
Total time (CPU seconds):       2.18   (Wallclock seconds):       2.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-79) rows, 144 (-58) columns and 2745 (-2908) elements
Clp1000I sum of infeasibilities 1.87912e-07 - average 1.50329e-09, 20 fixed columns
Coin0506I Presolve 106 (-19) rows, 124 (-20) columns and 2202 (-543) elements
Clp0006I 0  Obj 36.63978 Dual inf 5.8351008 (124)
Clp0014I Perturbing problem by 0.001% of 2.0066362 - largest nonzero change 2.3307994e-05 ( 0.0015380202%) - largest zero change 2.8529609e-05
Clp0000I Optimal - objective value 54.887945
Clp0000I Optimal - objective value 54.887945
Coin0511I After Postsolve, objective 54.887945, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.887945
Clp0000I Optimal - objective value 54.887945
Clp0000I Optimal - objective value 54.887945
Clp0000I Optimal - objective value 54.887945
Coin0511I After Postsolve, objective 54.887945, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.88794493 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 146 columns (146 integer (146 of which binary)) and 2755 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.019%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.898
Cbc0038I Pass   1: suminf.    4.23824 (37) obj. -40.929 iterations 17
Cbc0038I Pass   2: suminf.    4.23824 (37) obj. -40.929 iterations 1
Cbc0038I Pass   3: suminf.    1.23103 (14) obj. -12.3856 iterations 23
Cbc0038I Solution found of 1.33342
Cbc0038I Rounding solution of -2.98187 is better than previous of 1.33342

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 146 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -2.98187 to -4.39765 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.96488
Cbc0038I Pass   4: suminf.    4.23824 (37) obj. -40.929 iterations 0
Cbc0038I Pass   5: suminf.    4.23824 (37) obj. -40.929 iterations 1
Cbc0038I Pass   6: suminf.    2.29907 (23) obj. -20.3175 iterations 14
Cbc0038I Pass   7: suminf.    0.81018 (11) obj. -8.96488 iterations 18
Cbc0038I Pass   8: suminf.    0.56647 (5) obj. -8.96488 iterations 14
Cbc0038I Pass   9: suminf.    0.56647 (5) obj. -8.96488 iterations 0
Cbc0038I Pass  10: suminf.    0.28935 (2) obj. -9.09234 iterations 5
Cbc0038I Pass  11: suminf.    0.26438 (2) obj. -8.96488 iterations 2
Cbc0038I Pass  12: suminf.    0.31484 (2) obj. -8.96488 iterations 3
Cbc0038I Pass  13: suminf.    2.95380 (23) obj. -13.0603 iterations 32
Cbc0038I Pass  14: suminf.    2.07508 (15) obj. -11.6305 iterations 11
Cbc0038I Pass  15: suminf.    1.33134 (9) obj. -8.96488 iterations 30
Cbc0038I Pass  16: suminf.    1.32455 (9) obj. -8.96488 iterations 2
Cbc0038I Pass  17: suminf.    0.79727 (6) obj. -8.96488 iterations 13
Cbc0038I Pass  18: suminf.    0.79035 (4) obj. -8.96488 iterations 4
Cbc0038I Pass  19: suminf.    0.82475 (4) obj. -8.96488 iterations 6
Cbc0038I Pass  20: suminf.    0.82475 (4) obj. -8.96488 iterations 0
Cbc0038I Pass  21: suminf.    0.79035 (4) obj. -8.96488 iterations 6
Cbc0038I Pass  22: suminf.    2.02194 (13) obj. -8.96488 iterations 39
Cbc0038I Pass  23: suminf.    1.76479 (10) obj. -8.96488 iterations 11
Cbc0038I Pass  24: suminf.    0.77366 (5) obj. -8.96488 iterations 13
Cbc0038I Pass  25: suminf.    0.65599 (4) obj. -8.9678 iterations 6
Cbc0038I Pass  26: suminf.    1.11303 (6) obj. -8.96488 iterations 12
Cbc0038I Pass  27: suminf.    1.11303 (6) obj. -8.96488 iterations 0
Cbc0038I Pass  28: suminf.    0.82089 (5) obj. -8.96488 iterations 16
Cbc0038I Pass  29: suminf.    0.57162 (4) obj. -9.44369 iterations 6
Cbc0038I Pass  30: suminf.    1.16512 (5) obj. -8.96488 iterations 12
Cbc0038I Pass  31: suminf.    1.05710 (3) obj. -8.96488 iterations 11
Cbc0038I Pass  32: suminf.    0.75813 (4) obj. -9.48607 iterations 4
Cbc0038I Pass  33: suminf.    1.98543 (13) obj. -9.6029 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 146 columns, reduced to 21 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -4.39765 to -5.7823 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.1857
Cbc0038I Pass  33: suminf.    4.23824 (37) obj. -40.929 iterations 0
Cbc0038I Pass  34: suminf.    4.23824 (37) obj. -40.929 iterations 1
Cbc0038I Pass  35: suminf.    1.47972 (20) obj. -17.1857 iterations 27
Cbc0038I Pass  36: suminf.    1.47972 (20) obj. -17.1857 iterations 0
Cbc0038I Pass  37: suminf.    1.62213 (8) obj. -17.1857 iterations 31
Cbc0038I Pass  38: suminf.    1.27219 (8) obj. -17.1857 iterations 1
Cbc0038I Pass  39: suminf.    1.68743 (6) obj. -17.1857 iterations 12
Cbc0038I Pass  40: suminf.    1.34246 (7) obj. -17.63 iterations 4
Cbc0038I Pass  41: suminf.    1.68743 (6) obj. -17.1857 iterations 8
Cbc0038I Pass  42: suminf.    3.23972 (18) obj. -17.1857 iterations 24
Cbc0038I Pass  43: suminf.    2.14678 (13) obj. -18.7333 iterations 6
Cbc0038I Pass  44: suminf.    1.75207 (9) obj. -17.1857 iterations 24
Cbc0038I Pass  45: suminf.    1.75207 (9) obj. -17.1857 iterations 1
Cbc0038I Pass  46: suminf.    1.57392 (8) obj. -17.1857 iterations 13
Cbc0038I Pass  47: suminf.    1.57392 (8) obj. -17.1857 iterations 0
Cbc0038I Pass  48: suminf.    1.14738 (10) obj. -17.1857 iterations 13
Cbc0038I Pass  49: suminf.    1.14339 (9) obj. -17.1857 iterations 9
Cbc0038I Pass  50: suminf.    1.35432 (8) obj. -17.1857 iterations 9
Cbc0038I Pass  51: suminf.    1.35432 (8) obj. -17.1857 iterations 5
Cbc0038I Pass  52: suminf.    1.65563 (8) obj. -17.1857 iterations 10
Cbc0038I Pass  53: suminf.    1.32110 (7) obj. -17.6411 iterations 7
Cbc0038I Pass  54: suminf.    1.60968 (6) obj. -17.1857 iterations 10
Cbc0038I Pass  55: suminf.    3.07466 (14) obj. -17.1857 iterations 27
Cbc0038I Pass  56: suminf.    2.37811 (14) obj. -17.1857 iterations 10
Cbc0038I Pass  57: suminf.    2.21735 (14) obj. -17.1857 iterations 13
Cbc0038I Pass  58: suminf.    2.21014 (15) obj. -17.1857 iterations 5
Cbc0038I Pass  59: suminf.    1.56848 (9) obj. -17.1857 iterations 20
Cbc0038I Pass  60: suminf.    1.17736 (9) obj. -17.1857 iterations 13
Cbc0038I Pass  61: suminf.    1.05759 (7) obj. -17.1857 iterations 20
Cbc0038I Pass  62: suminf.    1.04636 (7) obj. -17.2082 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -5.7823 - took 0.08 seconds
Cbc0012I Integer solution of -5.782303 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 5 rows 8 columns
Cbc0031I 70 added rows had average density of 49.114286
Cbc0013I At root node, 70 cuts changed objective from -50.068998 to -15.684548 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18409 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2190 row cuts average 142.6 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 869 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2066 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 449 row cuts average 84.1 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.400 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.782303 best solution, best possible -15.684548 (2.80 seconds)
Cbc0012I Integer solution of -5.885337 found by rounding after 8147 iterations and 5 nodes (2.99 seconds)
Cbc0012I Integer solution of -6.47564 found by rounding after 8634 iterations and 20 nodes (3.21 seconds)
Cbc0016I Integer solution of -6.49569 found by strong branching after 8683 iterations and 24 nodes (3.22 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 2 rows 4 columns
Cbc0012I Integer solution of -6.59962 found by DiveCoefficient after 8934 iterations and 52 nodes (3.29 seconds)
Cbc0012I Integer solution of -6.62312 found by rounding after 8944 iterations and 57 nodes (3.30 seconds)
Cbc0012I Integer solution of -6.79764 found by DiveCoefficient after 8952 iterations and 59 nodes (3.30 seconds)
Cbc0016I Integer solution of -6.813335 found by strong branching after 9048 iterations and 74 nodes (3.33 seconds)
Cbc0012I Integer solution of -6.81373 found by rounding after 9068 iterations and 75 nodes (3.33 seconds)
Cbc0010I After 84 nodes, 1 on tree, -6.81373 best solution, best possible -15.682604 (3.60 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 32 rows 48 columns
Cbc0012I Integer solution of -7.24465 found by RINS after 10319 iterations and 93 nodes (3.97 seconds)
Cbc0012I Integer solution of -7.443335 found by rounding after 11580 iterations and 141 nodes (4.28 seconds)
Cbc0010I After 150 nodes, 3 on tree, -7.443335 best solution, best possible -15.682604 (4.33 seconds)
Cbc0010I After 182 nodes, 7 on tree, -7.443335 best solution, best possible -15.471077 (5.03 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 48 rows 61 columns
Cbc0001I Search completed - best objective -7.443335000000005, took 16065 iterations and 236 nodes (5.73 seconds)
Cbc0032I Strong branching done 2364 times (22769 iterations), fathomed 40 nodes and fixed 31 variables
Cbc0035I Maximum depth 15, 699 variables fixed on reduced cost
Total time (CPU seconds):       5.11   (Wallclock seconds):       5.76

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 101 (-2) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 4.57658e-05 - average 2.5285e-07, 12 fixed columns
Coin0506I Presolve 151 (-30) rows, 86 (-15) columns and 466 (-90) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.2308542 - largest nonzero change 0 ( 0%) - largest zero change 2.5950631e-05
Clp0000I Optimal - objective value 37.110667
Clp0000I Optimal - objective value 37.110667
Coin0511I After Postsolve, objective 37.110667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.110667
Clp0000I Optimal - objective value 37.110667
Clp0000I Optimal - objective value 37.110667
Coin0511I After Postsolve, objective 37.110667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.11066691 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 181 rows, 101 columns (100 integer (100 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 14.1275
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.3611 iterations 80
Cbc0038I Solution found of 14.3611
Cbc0038I Relaxing continuous gives 14.3611
Cbc0038I Rounding solution of -1.51687 is better than previous of 14.3611

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 85 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -1.51687 to -5.93875 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.05603
Cbc0038I Pass   2: suminf.    2.31023 (32) obj. -9.05603 iterations 41
Cbc0038I Pass   3: suminf.    2.16938 (44) obj. -9.05603 iterations 17
Cbc0038I Pass   4: suminf.    1.52618 (6) obj. -9.05603 iterations 42
Cbc0038I Pass   5: suminf.    0.94264 (6) obj. -9.05603 iterations 7
Cbc0038I Pass   6: suminf.    2.08434 (8) obj. -9.05603 iterations 14
Cbc0038I Pass   7: suminf.    1.57512 (7) obj. -9.05603 iterations 4
Cbc0038I Pass   8: suminf.    2.50083 (6) obj. -9.05603 iterations 11
Cbc0038I Pass   9: suminf.    2.23586 (9) obj. -9.05603 iterations 10
Cbc0038I Pass  10: suminf.    2.47005 (8) obj. -9.05603 iterations 10
Cbc0038I Pass  11: suminf.    2.47005 (8) obj. -9.05603 iterations 0
Cbc0038I Pass  12: suminf.    1.97641 (6) obj. -9.05603 iterations 9
Cbc0038I Pass  13: suminf.    2.58002 (6) obj. -9.05603 iterations 5
Cbc0038I Pass  14: suminf.    2.11088 (6) obj. -9.05603 iterations 1
Cbc0038I Pass  15: suminf.    2.50369 (6) obj. -9.05603 iterations 4
Cbc0038I Pass  16: suminf.    2.08002 (7) obj. -9.05603 iterations 6
Cbc0038I Pass  17: suminf.    2.08002 (7) obj. -9.05603 iterations 0
Cbc0038I Pass  18: suminf.    2.76356 (7) obj. -9.05603 iterations 3
Cbc0038I Pass  19: suminf.    2.15715 (8) obj. -9.05603 iterations 8
Cbc0038I Pass  20: suminf.    2.91811 (8) obj. -9.05603 iterations 12
Cbc0038I Pass  21: suminf.    2.91811 (8) obj. -9.05603 iterations 0
Cbc0038I Pass  22: suminf.    2.33877 (6) obj. -9.05603 iterations 9
Cbc0038I Pass  23: suminf.    2.82740 (7) obj. -9.05603 iterations 9
Cbc0038I Pass  24: suminf.    2.34584 (10) obj. -9.05603 iterations 10
Cbc0038I Pass  25: suminf.    2.34584 (10) obj. -9.05603 iterations 0
Cbc0038I Pass  26: suminf.    3.05045 (10) obj. -9.05603 iterations 16
Cbc0038I Pass  27: suminf.    2.69581 (8) obj. -9.05603 iterations 2
Cbc0038I Pass  28: suminf.    2.19195 (11) obj. -9.05603 iterations 10
Cbc0038I Pass  29: suminf.    2.03977 (11) obj. -9.05603 iterations 3
Cbc0038I Pass  30: suminf.    1.83734 (8) obj. -9.05603 iterations 14
Cbc0038I Pass  31: suminf.    2.22031 (11) obj. -9.05603 iterations 14
Cbc0038I Rounding solution of -6.96871 is better than previous of -5.93875

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 102 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -14.667
Cbc0038I Pass  31: suminf.    4.08641 (32) obj. -14.667 iterations 0
Cbc0038I Pass  32: suminf.    3.75602 (25) obj. -14.667 iterations 12
Cbc0038I Pass  33: suminf.    3.39503 (11) obj. -14.667 iterations 23
Cbc0038I Pass  34: suminf.    3.15250 (11) obj. -14.667 iterations 6
Cbc0038I Pass  35: suminf.    3.14145 (11) obj. -14.667 iterations 2
Cbc0038I Pass  36: suminf.    4.07298 (10) obj. -14.667 iterations 14
Cbc0038I Pass  37: suminf.    3.47653 (9) obj. -14.667 iterations 7
Cbc0038I Pass  38: suminf.    3.86229 (9) obj. -14.667 iterations 7
Cbc0038I Pass  39: suminf.    3.64355 (9) obj. -14.667 iterations 5
Cbc0038I Pass  40: suminf.    3.47653 (9) obj. -14.667 iterations 11
Cbc0038I Pass  41: suminf.    5.99529 (18) obj. -14.667 iterations 23
Cbc0038I Pass  42: suminf.    3.76973 (12) obj. -14.667 iterations 29
Cbc0038I Pass  43: suminf.    3.76973 (12) obj. -14.667 iterations 3
Cbc0038I Pass  44: suminf.    3.34105 (9) obj. -14.667 iterations 13
Cbc0038I Pass  45: suminf.    3.06180 (10) obj. -14.667 iterations 2
Cbc0038I Pass  46: suminf.    3.05035 (8) obj. -14.667 iterations 13
Cbc0038I Pass  47: suminf.    2.90707 (9) obj. -14.667 iterations 5
Cbc0038I Pass  48: suminf.    2.90707 (9) obj. -14.667 iterations 0
Cbc0038I Pass  49: suminf.    3.06180 (10) obj. -14.667 iterations 11
Cbc0038I Pass  50: suminf.    3.06180 (10) obj. -14.667 iterations 0
Cbc0038I Pass  51: suminf.    3.05035 (8) obj. -14.667 iterations 13
Cbc0038I Pass  52: suminf.    2.90707 (9) obj. -14.667 iterations 5
Cbc0038I Pass  53: suminf.    2.90707 (9) obj. -14.667 iterations 0
Cbc0038I Pass  54: suminf.    3.06180 (10) obj. -14.667 iterations 11
Cbc0038I Pass  55: suminf.    3.06180 (10) obj. -14.667 iterations 0
Cbc0038I Pass  56: suminf.    3.05035 (8) obj. -14.667 iterations 13
Cbc0038I Pass  57: suminf.    2.90707 (9) obj. -14.667 iterations 5
Cbc0038I Pass  58: suminf.    2.90707 (9) obj. -14.667 iterations 0
Cbc0038I Pass  59: suminf.    3.06180 (10) obj. -14.667 iterations 11
Cbc0038I Pass  60: suminf.    3.06180 (10) obj. -14.667 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 101 columns, reduced to 101 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -6.96871 - took 0.16 seconds
Cbc0012I Integer solution of -7.060355 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 91 rows 53 columns
Cbc0031I 27 added rows had average density of 61.555556
Cbc0013I At root node, 27 cuts changed objective from -37.110667 to -29.208092 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20908 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2821 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.060355 best solution, best possible -29.208092 (1.70 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 66 rows 43 columns
Cbc0012I Integer solution of -7.443335 found by RINS after 11921 iterations and 41 nodes (2.09 seconds)
Cbc0038I Full problem 181 rows 101 columns, reduced to 3 rows 6 columns
Cbc0001I Search completed - best objective -7.443335000000005, took 13891 iterations and 102 nodes (2.25 seconds)
Cbc0032I Strong branching done 1158 times (21577 iterations), fathomed 16 nodes and fixed 64 variables
Cbc0035I Maximum depth 27, 419 variables fixed on reduced cost
Total time (CPU seconds):       2.16   (Wallclock seconds):       2.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 125 (-80) rows, 144 (-59) columns and 2745 (-2909) elements
Clp1000I sum of infeasibilities 1.87912e-07 - average 1.50329e-09, 20 fixed columns
Coin0506I Presolve 106 (-19) rows, 124 (-20) columns and 2202 (-543) elements
Clp0006I 0  Obj 36.63978 Dual inf 5.8351008 (124)
Clp0014I Perturbing problem by 0.001% of 2.0066362 - largest nonzero change 2.3307994e-05 ( 0.0015380202%) - largest zero change 2.8529609e-05
Clp0000I Optimal - objective value 54.887945
Clp0000I Optimal - objective value 54.887945
Coin0511I After Postsolve, objective 54.887945, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.887945
Clp0000I Optimal - objective value 54.887945
Clp0000I Optimal - objective value 54.887945
Clp0000I Optimal - objective value 54.887945
Coin0511I After Postsolve, objective 54.887945, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.88794493 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 146 columns (146 integer (146 of which binary)) and 2755 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.019%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.898
Cbc0038I Pass   1: suminf.    4.23824 (37) obj. -40.929 iterations 17
Cbc0038I Pass   2: suminf.    4.23824 (37) obj. -40.929 iterations 1
Cbc0038I Pass   3: suminf.    1.23103 (14) obj. -12.3856 iterations 23
Cbc0038I Solution found of 1.33342
Cbc0038I Rounding solution of -2.98187 is better than previous of 1.33342

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 146 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -2.98187 to -4.39765 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.96488
Cbc0038I Pass   4: suminf.    4.23824 (37) obj. -40.929 iterations 0
Cbc0038I Pass   5: suminf.    4.23824 (37) obj. -40.929 iterations 1
Cbc0038I Pass   6: suminf.    2.29907 (23) obj. -20.3175 iterations 14
Cbc0038I Pass   7: suminf.    0.81018 (11) obj. -8.96488 iterations 18
Cbc0038I Pass   8: suminf.    0.56647 (5) obj. -8.96488 iterations 14
Cbc0038I Pass   9: suminf.    0.56647 (5) obj. -8.96488 iterations 0
Cbc0038I Pass  10: suminf.    0.28935 (2) obj. -9.09234 iterations 5
Cbc0038I Pass  11: suminf.    0.26438 (2) obj. -8.96488 iterations 2
Cbc0038I Pass  12: suminf.    0.31484 (2) obj. -8.96488 iterations 3
Cbc0038I Pass  13: suminf.    2.95380 (23) obj. -13.0603 iterations 32
Cbc0038I Pass  14: suminf.    2.07508 (15) obj. -11.6305 iterations 11
Cbc0038I Pass  15: suminf.    1.33134 (9) obj. -8.96488 iterations 30
Cbc0038I Pass  16: suminf.    1.32455 (9) obj. -8.96488 iterations 2
Cbc0038I Pass  17: suminf.    0.79727 (6) obj. -8.96488 iterations 13
Cbc0038I Pass  18: suminf.    0.79035 (4) obj. -8.96488 iterations 4
Cbc0038I Pass  19: suminf.    0.82475 (4) obj. -8.96488 iterations 6
Cbc0038I Pass  20: suminf.    0.82475 (4) obj. -8.96488 iterations 0
Cbc0038I Pass  21: suminf.    0.79035 (4) obj. -8.96488 iterations 6
Cbc0038I Pass  22: suminf.    2.02194 (13) obj. -8.96488 iterations 39
Cbc0038I Pass  23: suminf.    1.76479 (10) obj. -8.96488 iterations 11
Cbc0038I Pass  24: suminf.    0.77366 (5) obj. -8.96488 iterations 13
Cbc0038I Pass  25: suminf.    0.65599 (4) obj. -8.9678 iterations 6
Cbc0038I Pass  26: suminf.    1.11303 (6) obj. -8.96488 iterations 12
Cbc0038I Pass  27: suminf.    1.11303 (6) obj. -8.96488 iterations 0
Cbc0038I Pass  28: suminf.    0.82089 (5) obj. -8.96488 iterations 16
Cbc0038I Pass  29: suminf.    0.57162 (4) obj. -9.44369 iterations 6
Cbc0038I Pass  30: suminf.    1.16512 (5) obj. -8.96488 iterations 12
Cbc0038I Pass  31: suminf.    1.05710 (3) obj. -8.96488 iterations 11
Cbc0038I Pass  32: suminf.    0.75813 (4) obj. -9.48607 iterations 4
Cbc0038I Pass  33: suminf.    1.98543 (13) obj. -9.6029 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 146 columns, reduced to 21 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -4.39765 to -5.7823 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.1857
Cbc0038I Pass  33: suminf.    4.23824 (37) obj. -40.929 iterations 0
Cbc0038I Pass  34: suminf.    4.23824 (37) obj. -40.929 iterations 1
Cbc0038I Pass  35: suminf.    1.47972 (20) obj. -17.1857 iterations 27
Cbc0038I Pass  36: suminf.    1.47972 (20) obj. -17.1857 iterations 0
Cbc0038I Pass  37: suminf.    1.62213 (8) obj. -17.1857 iterations 31
Cbc0038I Pass  38: suminf.    1.27219 (8) obj. -17.1857 iterations 1
Cbc0038I Pass  39: suminf.    1.68743 (6) obj. -17.1857 iterations 12
Cbc0038I Pass  40: suminf.    1.34246 (7) obj. -17.63 iterations 4
Cbc0038I Pass  41: suminf.    1.68743 (6) obj. -17.1857 iterations 8
Cbc0038I Pass  42: suminf.    3.23972 (18) obj. -17.1857 iterations 24
Cbc0038I Pass  43: suminf.    2.14678 (13) obj. -18.7333 iterations 6
Cbc0038I Pass  44: suminf.    1.75207 (9) obj. -17.1857 iterations 24
Cbc0038I Pass  45: suminf.    1.75207 (9) obj. -17.1857 iterations 1
Cbc0038I Pass  46: suminf.    1.57392 (8) obj. -17.1857 iterations 13
Cbc0038I Pass  47: suminf.    1.57392 (8) obj. -17.1857 iterations 0
Cbc0038I Pass  48: suminf.    1.14738 (10) obj. -17.1857 iterations 13
Cbc0038I Pass  49: suminf.    1.14339 (9) obj. -17.1857 iterations 9
Cbc0038I Pass  50: suminf.    1.35432 (8) obj. -17.1857 iterations 9
Cbc0038I Pass  51: suminf.    1.35432 (8) obj. -17.1857 iterations 5
Cbc0038I Pass  52: suminf.    1.65563 (8) obj. -17.1857 iterations 10
Cbc0038I Pass  53: suminf.    1.32110 (7) obj. -17.6411 iterations 7
Cbc0038I Pass  54: suminf.    1.60968 (6) obj. -17.1857 iterations 10
Cbc0038I Pass  55: suminf.    3.07466 (14) obj. -17.1857 iterations 27
Cbc0038I Pass  56: suminf.    2.37811 (14) obj. -17.1857 iterations 10
Cbc0038I Pass  57: suminf.    2.21735 (14) obj. -17.1857 iterations 13
Cbc0038I Pass  58: suminf.    2.21014 (15) obj. -17.1857 iterations 5
Cbc0038I Pass  59: suminf.    1.56848 (9) obj. -17.1857 iterations 20
Cbc0038I Pass  60: suminf.    1.17736 (9) obj. -17.1857 iterations 13
Cbc0038I Pass  61: suminf.    1.05759 (7) obj. -17.1857 iterations 20
Cbc0038I Pass  62: suminf.    1.04636 (7) obj. -17.2082 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -5.7823 - took 0.08 seconds
Cbc0012I Integer solution of -5.782303 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 5 rows 8 columns
Cbc0031I 70 added rows had average density of 49.114286
Cbc0013I At root node, 70 cuts changed objective from -50.068998 to -15.684548 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18409 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.185 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2190 row cuts average 142.6 elements, 0 column cuts (0 active)  in 0.308 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 869 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2066 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 449 row cuts average 84.1 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.429 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.782303 best solution, best possible -15.684548 (3.01 seconds)
Cbc0012I Integer solution of -5.885337 found by rounding after 8147 iterations and 5 nodes (3.22 seconds)
Cbc0012I Integer solution of -6.47564 found by rounding after 8634 iterations and 20 nodes (3.44 seconds)
Cbc0016I Integer solution of -6.49569 found by strong branching after 8683 iterations and 24 nodes (3.46 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 2 rows 4 columns
Cbc0012I Integer solution of -6.59962 found by DiveCoefficient after 8934 iterations and 52 nodes (3.53 seconds)
Cbc0012I Integer solution of -6.62312 found by rounding after 8944 iterations and 57 nodes (3.54 seconds)
Cbc0012I Integer solution of -6.79764 found by DiveCoefficient after 8952 iterations and 59 nodes (3.54 seconds)
Cbc0016I Integer solution of -6.813335 found by strong branching after 9048 iterations and 74 nodes (3.57 seconds)
Cbc0012I Integer solution of -6.81373 found by rounding after 9068 iterations and 75 nodes (3.57 seconds)
Cbc0010I After 84 nodes, 1 on tree, -6.81373 best solution, best possible -15.682604 (3.84 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 32 rows 48 columns
Cbc0012I Integer solution of -7.24465 found by RINS after 10319 iterations and 93 nodes (4.22 seconds)
Cbc0010I After 139 nodes, 4 on tree, -7.24465 best solution, best possible -15.682604 (4.54 seconds)
Cbc0012I Integer solution of -7.443335 found by rounding after 11580 iterations and 141 nodes (4.54 seconds)
Cbc0010I After 181 nodes, 7 on tree, -7.443335 best solution, best possible -15.471077 (5.29 seconds)
Cbc0038I Full problem 127 rows 146 columns, reduced to 48 rows 61 columns
Cbc0001I Search completed - best objective -7.443335000000005, took 16065 iterations and 236 nodes (5.99 seconds)
Cbc0032I Strong branching done 2364 times (22769 iterations), fathomed 40 nodes and fixed 31 variables
Cbc0035I Maximum depth 15, 699 variables fixed on reduced cost
Total time (CPU seconds):       5.35   (Wallclock seconds):       6.02

