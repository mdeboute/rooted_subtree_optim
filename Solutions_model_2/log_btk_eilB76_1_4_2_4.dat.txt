Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-42) rows, 63 (-15) columns and 344 (-109) elements
Clp1000I sum of infeasibilities 6.09543e-05 - average 5.39419e-07, 9 fixed columns
Coin0506I Presolve 90 (-23) rows, 51 (-12) columns and 274 (-70) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 52.542333
Clp0000I Optimal - objective value 52.542333
Coin0511I After Postsolve, objective 52.542333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.542333
Clp0000I Optimal - objective value 52.542333
Clp0000I Optimal - objective value 52.542333
Coin0511I After Postsolve, objective 52.542333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.54233322 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 63 columns (62 integer (62 of which binary)) and 394 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.600%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 3.95452
Cbc0038I Solution found of -8.94738
Cbc0038I Relaxing continuous gives -14.3076
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 63 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -14.3076 to -30.3511 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.4952
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.68593 (15) obj. -32.4952 iterations 21
Cbc0038I Pass   2: suminf.    1.81818 (5) obj. -32.4952 iterations 21
Cbc0038I Pass   3: suminf.    1.81818 (5) obj. -32.4952 iterations 0
Cbc0038I Pass   4: suminf.    1.34557 (6) obj. -32.4952 iterations 16
Cbc0038I Pass   5: suminf.    1.10395 (3) obj. -32.4952 iterations 10
Cbc0038I Pass   6: suminf.    1.10395 (3) obj. -32.4952 iterations 0
Cbc0038I Pass   7: suminf.    0.66402 (2) obj. -32.4952 iterations 4
Cbc0038I Pass   8: suminf.    0.61951 (2) obj. -32.4952 iterations 3
Cbc0038I Pass   9: suminf.    0.17012 (2) obj. -32.4952 iterations 1
Cbc0038I Pass  10: suminf.    0.66402 (2) obj. -32.4952 iterations 2
Cbc0038I Pass  11: suminf.    1.92381 (7) obj. -32.4952 iterations 12
Cbc0038I Pass  12: suminf.    0.91564 (5) obj. -32.4952 iterations 8
Cbc0038I Pass  13: suminf.    0.89284 (4) obj. -32.4952 iterations 1
Cbc0038I Pass  14: suminf.    1.20231 (4) obj. -32.4952 iterations 6
Cbc0038I Pass  15: suminf.    1.00835 (3) obj. -32.4952 iterations 2
Cbc0038I Pass  16: suminf.    0.83618 (3) obj. -32.4952 iterations 1
Cbc0038I Pass  17: suminf.    1.05086 (7) obj. -32.4952 iterations 13
Cbc0038I Pass  18: suminf.    0.94367 (4) obj. -32.4952 iterations 10
Cbc0038I Pass  19: suminf.    0.83101 (4) obj. -32.4952 iterations 2
Cbc0038I Pass  20: suminf.    0.39490 (2) obj. -32.4952 iterations 7
Cbc0038I Pass  21: suminf.    0.17012 (2) obj. -32.4952 iterations 2
Cbc0038I Pass  22: suminf.    0.66402 (2) obj. -32.4952 iterations 2
Cbc0038I Pass  23: suminf.    0.66402 (2) obj. -32.4952 iterations 0
Cbc0038I Pass  24: suminf.    0.61951 (2) obj. -32.4952 iterations 3
Cbc0038I Pass  25: suminf.    1.93813 (8) obj. -32.4952 iterations 7
Cbc0038I Pass  26: suminf.    1.25731 (6) obj. -32.4952 iterations 18
Cbc0038I Pass  27: suminf.    0.93158 (3) obj. -32.4952 iterations 6
Cbc0038I Pass  28: suminf.    0.83101 (4) obj. -32.4952 iterations 1
Cbc0038I Pass  29: suminf.    0.39490 (2) obj. -32.4952 iterations 6
Cbc0038I Pass  30: suminf.    0.17012 (2) obj. -32.4952 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 63 columns, reduced to 53 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -30.3511 to -30.4615 (0.04 seconds)
Cbc0038I Round again with cutoff of -36.3542
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.04365 (15) obj. -36.3542 iterations 0
Cbc0038I Pass  31: suminf.    2.16821 (6) obj. -36.3542 iterations 17
Cbc0038I Pass  32: suminf.    1.44528 (4) obj. -36.3542 iterations 4
Cbc0038I Pass  33: suminf.    1.31332 (3) obj. -36.3542 iterations 1
Cbc0038I Pass  34: suminf.    0.76678 (2) obj. -36.3542 iterations 6
Cbc0038I Pass  35: suminf.    0.41005 (4) obj. -36.3542 iterations 8
Cbc0038I Pass  36: suminf.    0.77605 (2) obj. -36.3542 iterations 4
Cbc0038I Pass  37: suminf.    0.32495 (2) obj. -36.3542 iterations 3
Cbc0038I Pass  38: suminf.    0.56120 (2) obj. -36.3542 iterations 3
Cbc0038I Pass  39: suminf.    1.43750 (10) obj. -36.3542 iterations 19
Cbc0038I Pass  40: suminf.    2.38352 (7) obj. -36.3542 iterations 25
Cbc0038I Pass  41: suminf.    1.00105 (5) obj. -36.3542 iterations 22
Cbc0038I Pass  42: suminf.    1.15046 (3) obj. -36.3542 iterations 6
Cbc0038I Pass  43: suminf.    1.08891 (3) obj. -36.3542 iterations 1
Cbc0038I Pass  44: suminf.    1.00105 (5) obj. -36.3542 iterations 5
Cbc0038I Pass  45: suminf.    1.57478 (7) obj. -36.3542 iterations 6
Cbc0038I Pass  46: suminf.    1.94024 (6) obj. -36.3542 iterations 9
Cbc0038I Pass  47: suminf.    1.97082 (8) obj. -36.3542 iterations 20
Cbc0038I Pass  48: suminf.    0.97716 (5) obj. -36.3542 iterations 14
Cbc0038I Pass  49: suminf.    1.14865 (4) obj. -36.3542 iterations 6
Cbc0038I Pass  50: suminf.    3.03126 (9) obj. -36.3542 iterations 19
Cbc0038I Pass  51: suminf.    1.51251 (4) obj. -36.3542 iterations 13
Cbc0038I Pass  52: suminf.    1.36540 (4) obj. -36.3542 iterations 2
Cbc0038I Pass  53: suminf.    1.15651 (5) obj. -36.3542 iterations 4
Cbc0038I Pass  54: suminf.    1.15651 (5) obj. -36.3542 iterations 1
Cbc0038I Pass  55: suminf.    1.47630 (5) obj. -36.3542 iterations 8
Cbc0038I Pass  56: suminf.    1.00819 (4) obj. -36.3542 iterations 3
Cbc0038I Pass  57: suminf.    1.00805 (4) obj. -36.3542 iterations 1
Cbc0038I Pass  58: suminf.    1.28350 (4) obj. -36.3542 iterations 5
Cbc0038I Pass  59: suminf.    1.25321 (4) obj. -36.3542 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 63 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -30.4615 - took 0.05 seconds
Cbc0012I Integer solution of -30.461453 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 107 rows 63 columns, reduced to 46 rows 27 columns
Cbc0031I 19 added rows had average density of 26.631579
Cbc0013I At root node, 19 cuts changed objective from -51.790359 to -43.954238 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4365 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 987 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0012I Integer solution of -31.203063 found by rounding after 3988 iterations and 12 nodes (0.47 seconds)
Cbc0038I Full problem 107 rows 63 columns, reduced to 5 rows 5 columns
Cbc0001I Search completed - best objective -31.203063, took 4694 iterations and 46 nodes (0.51 seconds)
Cbc0032I Strong branching done 412 times (6320 iterations), fathomed 7 nodes and fixed 18 variables
Cbc0035I Maximum depth 13, 101 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 113 (-39) columns and 1895 (-1408) elements
Clp1000I sum of infeasibilities 1.11022e-16 - average 1.08845e-18, 61 fixed columns
Coin0506I Presolve 53 (-49) rows, 52 (-61) columns and 355 (-1540) elements
Clp0029I End of values pass after 52 iterations
Clp0000I Optimal - objective value 193.03656
Clp0000I Optimal - objective value 193.03656
Coin0511I After Postsolve, objective 193.03656, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 193.03656
Clp0000I Optimal - objective value 193.03656
Clp0000I Optimal - objective value 193.03656
Coin0511I After Postsolve, objective 193.03656, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.0365566 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 73 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 113 columns (113 integer (113 of which binary)) and 1925 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.208%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.3535
Cbc0038I Pass   1: suminf.    1.03574 (27) obj. -92.8414 iterations 22
Cbc0038I Pass   2: suminf.    1.03574 (27) obj. -92.8414 iterations 0
Cbc0038I Pass   3: suminf.    0.46970 (14) obj. -76.5829 iterations 13
Cbc0038I Pass   4: suminf.    0.08546 (3) obj. -60.1755 iterations 11
Cbc0038I Solution found of -56.2866
Cbc0038I Rounding solution of -60.0172 is better than previous of -56.2866

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 113 columns, reduced to 46 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -60.0172 to -122.287 (0.06 seconds)
Cbc0038I Round again with cutoff of -127.673
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   5: suminf.    1.69790 (28) obj. -127.673 iterations 7
Cbc0038I Pass   6: suminf.    1.69435 (28) obj. -128.039 iterations 2
Cbc0038I Pass   7: suminf.    2.17457 (30) obj. -127.673 iterations 20
Cbc0038I Pass   8: suminf.    2.17457 (30) obj. -127.673 iterations 1
Cbc0038I Pass   9: suminf.    1.91531 (10) obj. -127.673 iterations 30
Cbc0038I Pass  10: suminf.    1.91531 (10) obj. -127.673 iterations 0
Cbc0038I Pass  11: suminf.    0.12791 (2) obj. -127.673 iterations 15
Cbc0038I Pass  12: suminf.    0.10162 (1) obj. -127.673 iterations 3
Cbc0038I Pass  13: suminf.    0.10714 (1) obj. -127.965 iterations 2
Cbc0038I Pass  14: suminf.    3.47227 (12) obj. -127.673 iterations 20
Cbc0038I Pass  15: suminf.    2.94392 (11) obj. -127.673 iterations 7
Cbc0038I Pass  16: suminf.    0.10162 (1) obj. -127.673 iterations 11
Cbc0038I Pass  17: suminf.    2.93087 (17) obj. -127.673 iterations 33
Cbc0038I Pass  18: suminf.    2.93087 (17) obj. -127.673 iterations 0
Cbc0038I Pass  19: suminf.    0.25257 (1) obj. -127.673 iterations 18
Cbc0038I Pass  20: suminf.    0.25257 (1) obj. -127.673 iterations 4
Cbc0038I Pass  21: suminf.    0.38123 (2) obj. -129.513 iterations 3
Cbc0038I Pass  22: suminf.    3.32190 (12) obj. -127.673 iterations 11
Cbc0038I Pass  23: suminf.    2.81476 (10) obj. -127.673 iterations 8
Cbc0038I Pass  24: suminf.    2.44476 (9) obj. -127.673 iterations 1
Cbc0038I Pass  25: suminf.    4.77627 (17) obj. -127.673 iterations 12
Cbc0038I Pass  26: suminf.    4.77627 (17) obj. -127.673 iterations 1
Cbc0038I Pass  27: suminf.    0.25257 (1) obj. -127.673 iterations 17
Cbc0038I Pass  28: suminf.    0.38123 (2) obj. -129.513 iterations 2
Cbc0038I Pass  29: suminf.    2.79437 (10) obj. -127.673 iterations 15
Cbc0038I Pass  30: suminf.    2.63812 (9) obj. -127.673 iterations 2
Cbc0038I Pass  31: suminf.    0.25257 (1) obj. -127.673 iterations 10
Cbc0038I Pass  32: suminf.    2.69063 (9) obj. -127.673 iterations 11
Cbc0038I Pass  33: suminf.    2.03973 (8) obj. -127.673 iterations 2
Cbc0038I Pass  34: suminf.    1.61735 (6) obj. -128.113 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 113 columns, reduced to 48 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -122.287 - took 0.03 seconds
Cbc0012I Integer solution of -122.28664 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 91 rows 113 columns, reduced to 46 rows 45 columns
Cbc0031I 6 added rows had average density of 7
Cbc0013I At root node, 27 cuts changed objective from -176.14629 to -122.28664 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 295 row cuts average 18.7 elements, 57 column cuts (57 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 54 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 31.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -122.286643, took 87 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-42) rows, 63 (-15) columns and 344 (-109) elements
Clp1000I sum of infeasibilities 6.09543e-05 - average 5.39419e-07, 9 fixed columns
Coin0506I Presolve 90 (-23) rows, 51 (-12) columns and 274 (-70) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 52.542333
Clp0000I Optimal - objective value 52.542333
Coin0511I After Postsolve, objective 52.542333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.542333
Clp0000I Optimal - objective value 52.542333
Clp0000I Optimal - objective value 52.542333
Coin0511I After Postsolve, objective 52.542333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.54233322 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 63 columns (62 integer (62 of which binary)) and 394 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.600%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 3.95452
Cbc0038I Solution found of -8.94738
Cbc0038I Relaxing continuous gives -14.3076
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 63 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -14.3076 to -30.3511 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.4952
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.68593 (15) obj. -32.4952 iterations 21
Cbc0038I Pass   2: suminf.    1.81818 (5) obj. -32.4952 iterations 21
Cbc0038I Pass   3: suminf.    1.81818 (5) obj. -32.4952 iterations 0
Cbc0038I Pass   4: suminf.    1.34557 (6) obj. -32.4952 iterations 16
Cbc0038I Pass   5: suminf.    1.10395 (3) obj. -32.4952 iterations 10
Cbc0038I Pass   6: suminf.    1.10395 (3) obj. -32.4952 iterations 0
Cbc0038I Pass   7: suminf.    0.66402 (2) obj. -32.4952 iterations 4
Cbc0038I Pass   8: suminf.    0.61951 (2) obj. -32.4952 iterations 3
Cbc0038I Pass   9: suminf.    0.17012 (2) obj. -32.4952 iterations 1
Cbc0038I Pass  10: suminf.    0.66402 (2) obj. -32.4952 iterations 2
Cbc0038I Pass  11: suminf.    1.92381 (7) obj. -32.4952 iterations 12
Cbc0038I Pass  12: suminf.    0.91564 (5) obj. -32.4952 iterations 8
Cbc0038I Pass  13: suminf.    0.89284 (4) obj. -32.4952 iterations 1
Cbc0038I Pass  14: suminf.    1.20231 (4) obj. -32.4952 iterations 6
Cbc0038I Pass  15: suminf.    1.00835 (3) obj. -32.4952 iterations 2
Cbc0038I Pass  16: suminf.    0.83618 (3) obj. -32.4952 iterations 1
Cbc0038I Pass  17: suminf.    1.05086 (7) obj. -32.4952 iterations 13
Cbc0038I Pass  18: suminf.    0.94367 (4) obj. -32.4952 iterations 10
Cbc0038I Pass  19: suminf.    0.83101 (4) obj. -32.4952 iterations 2
Cbc0038I Pass  20: suminf.    0.39490 (2) obj. -32.4952 iterations 7
Cbc0038I Pass  21: suminf.    0.17012 (2) obj. -32.4952 iterations 2
Cbc0038I Pass  22: suminf.    0.66402 (2) obj. -32.4952 iterations 2
Cbc0038I Pass  23: suminf.    0.66402 (2) obj. -32.4952 iterations 0
Cbc0038I Pass  24: suminf.    0.61951 (2) obj. -32.4952 iterations 3
Cbc0038I Pass  25: suminf.    1.93813 (8) obj. -32.4952 iterations 7
Cbc0038I Pass  26: suminf.    1.25731 (6) obj. -32.4952 iterations 18
Cbc0038I Pass  27: suminf.    0.93158 (3) obj. -32.4952 iterations 6
Cbc0038I Pass  28: suminf.    0.83101 (4) obj. -32.4952 iterations 1
Cbc0038I Pass  29: suminf.    0.39490 (2) obj. -32.4952 iterations 6
Cbc0038I Pass  30: suminf.    0.17012 (2) obj. -32.4952 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 63 columns, reduced to 53 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -30.3511 to -30.4615 (0.04 seconds)
Cbc0038I Round again with cutoff of -36.3542
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.04365 (15) obj. -36.3542 iterations 0
Cbc0038I Pass  31: suminf.    2.16821 (6) obj. -36.3542 iterations 17
Cbc0038I Pass  32: suminf.    1.44528 (4) obj. -36.3542 iterations 4
Cbc0038I Pass  33: suminf.    1.31332 (3) obj. -36.3542 iterations 1
Cbc0038I Pass  34: suminf.    0.76678 (2) obj. -36.3542 iterations 6
Cbc0038I Pass  35: suminf.    0.41005 (4) obj. -36.3542 iterations 8
Cbc0038I Pass  36: suminf.    0.77605 (2) obj. -36.3542 iterations 4
Cbc0038I Pass  37: suminf.    0.32495 (2) obj. -36.3542 iterations 3
Cbc0038I Pass  38: suminf.    0.56120 (2) obj. -36.3542 iterations 3
Cbc0038I Pass  39: suminf.    1.43750 (10) obj. -36.3542 iterations 19
Cbc0038I Pass  40: suminf.    2.38352 (7) obj. -36.3542 iterations 25
Cbc0038I Pass  41: suminf.    1.00105 (5) obj. -36.3542 iterations 22
Cbc0038I Pass  42: suminf.    1.15046 (3) obj. -36.3542 iterations 6
Cbc0038I Pass  43: suminf.    1.08891 (3) obj. -36.3542 iterations 1
Cbc0038I Pass  44: suminf.    1.00105 (5) obj. -36.3542 iterations 5
Cbc0038I Pass  45: suminf.    1.57478 (7) obj. -36.3542 iterations 6
Cbc0038I Pass  46: suminf.    1.94024 (6) obj. -36.3542 iterations 9
Cbc0038I Pass  47: suminf.    1.97082 (8) obj. -36.3542 iterations 20
Cbc0038I Pass  48: suminf.    0.97716 (5) obj. -36.3542 iterations 14
Cbc0038I Pass  49: suminf.    1.14865 (4) obj. -36.3542 iterations 6
Cbc0038I Pass  50: suminf.    3.03126 (9) obj. -36.3542 iterations 19
Cbc0038I Pass  51: suminf.    1.51251 (4) obj. -36.3542 iterations 13
Cbc0038I Pass  52: suminf.    1.36540 (4) obj. -36.3542 iterations 2
Cbc0038I Pass  53: suminf.    1.15651 (5) obj. -36.3542 iterations 4
Cbc0038I Pass  54: suminf.    1.15651 (5) obj. -36.3542 iterations 1
Cbc0038I Pass  55: suminf.    1.47630 (5) obj. -36.3542 iterations 8
Cbc0038I Pass  56: suminf.    1.00819 (4) obj. -36.3542 iterations 3
Cbc0038I Pass  57: suminf.    1.00805 (4) obj. -36.3542 iterations 1
Cbc0038I Pass  58: suminf.    1.28350 (4) obj. -36.3542 iterations 5
Cbc0038I Pass  59: suminf.    1.25321 (4) obj. -36.3542 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 63 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -30.4615 - took 0.05 seconds
Cbc0012I Integer solution of -30.461453 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 107 rows 63 columns, reduced to 46 rows 27 columns
Cbc0031I 19 added rows had average density of 26.631579
Cbc0013I At root node, 19 cuts changed objective from -51.790359 to -43.954238 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4365 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 987 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0012I Integer solution of -31.203063 found by rounding after 3988 iterations and 12 nodes (0.48 seconds)
Cbc0038I Full problem 107 rows 63 columns, reduced to 5 rows 5 columns
Cbc0001I Search completed - best objective -31.203063, took 4694 iterations and 46 nodes (0.51 seconds)
Cbc0032I Strong branching done 412 times (6320 iterations), fathomed 7 nodes and fixed 18 variables
Cbc0035I Maximum depth 13, 101 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-64) rows, 102 (-51) columns and 1568 (-1736) elements
Clp1000I sum of infeasibilities 4.58175e-07 - average 5.03489e-09, 9 fixed columns
Coin0506I Presolve 83 (-8) rows, 93 (-9) columns and 1322 (-246) elements
Clp0029I End of values pass after 93 iterations
Clp0014I Perturbing problem by 0.001% of 1.3505991 - largest nonzero change 0 ( 0%) - largest zero change 2.9238587e-05
Clp0000I Optimal - objective value 67.310713
Clp0000I Optimal - objective value 67.310713
Coin0511I After Postsolve, objective 67.310713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.310713
Clp0000I Optimal - objective value 67.310713
Clp0000I Optimal - objective value 67.310713
Coin0511I After Postsolve, objective 67.310713, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.31071267 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 57 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 103 columns (103 integer (103 of which binary)) and 1614 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.214%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 2.98098
Cbc0038I Pass   1: suminf.    0.59662 (18) obj. -47.5856 iterations 15
Cbc0038I Pass   2: suminf.    0.59662 (18) obj. -47.5856 iterations 2
Cbc0038I Pass   3: suminf.    0.04350 (2) obj. -19.6824 iterations 32
Cbc0038I Solution found of -17.7259
Cbc0038I Rounding solution of -18.4565 is better than previous of -17.7259

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 103 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -22.5033
Cbc0038I Pass   4: suminf.    0.59662 (18) obj. -47.5856 iterations 0
Cbc0038I Pass   5: suminf.    0.59662 (18) obj. -47.5856 iterations 2
Cbc0038I Pass   6: suminf.    0.19156 (8) obj. -27.4889 iterations 10
Cbc0038I Pass   7: suminf.    0.35611 (2) obj. -22.5033 iterations 14
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -23.1618 iterations 5
Cbc0038I Pass   9: suminf.    0.20000 (1) obj. -23.1618 iterations 0
Cbc0038I Pass  10: suminf.    0.49532 (1) obj. -22.5033 iterations 2
Cbc0038I Pass  11: suminf.    0.42534 (2) obj. -24.6099 iterations 2
Cbc0038I Pass  12: suminf.    0.57918 (2) obj. -22.5033 iterations 1
Cbc0038I Pass  13: suminf.    1.58072 (11) obj. -22.5033 iterations 25
Cbc0038I Pass  14: suminf.    0.66223 (10) obj. -22.5033 iterations 26
Cbc0038I Pass  15: suminf.    2.03224 (7) obj. -22.5033 iterations 22
Cbc0038I Pass  16: suminf.    1.77064 (7) obj. -22.5033 iterations 2
Cbc0038I Pass  17: suminf.    1.53728 (14) obj. -22.5033 iterations 12
Cbc0038I Pass  18: suminf.    1.07767 (10) obj. -22.5033 iterations 6
Cbc0038I Pass  19: suminf.    0.98748 (9) obj. -22.5033 iterations 25
Cbc0038I Pass  20: suminf.    0.85110 (8) obj. -22.5033 iterations 4
Cbc0038I Pass  21: suminf.    1.01629 (6) obj. -22.5033 iterations 4
Cbc0038I Pass  22: suminf.    2.09685 (19) obj. -22.5033 iterations 21
Cbc0038I Pass  23: suminf.    0.83402 (17) obj. -22.5033 iterations 11
Cbc0038I Pass  24: suminf.    1.45071 (10) obj. -22.5033 iterations 12
Cbc0038I Pass  25: suminf.    0.91794 (9) obj. -22.5033 iterations 2
Cbc0038I Pass  26: suminf.    1.35861 (8) obj. -22.5033 iterations 14
Cbc0038I Pass  27: suminf.    1.13872 (8) obj. -22.5033 iterations 8
Cbc0038I Pass  28: suminf.    1.08813 (7) obj. -22.5033 iterations 5
Cbc0038I Pass  29: suminf.    0.92143 (8) obj. -22.5033 iterations 2
Cbc0038I Pass  30: suminf.    1.14498 (8) obj. -22.5033 iterations 8
Cbc0038I Pass  31: suminf.    1.05539 (9) obj. -22.5033 iterations 12
Cbc0038I Pass  32: suminf.    0.89012 (9) obj. -22.5033 iterations 3
Cbc0038I Pass  33: suminf.    1.63765 (14) obj. -22.5033 iterations 11
Cbc0038I Rounding solution of -24.4492 is better than previous of -18.4565

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 103 columns, reduced to 42 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -24.4492 to -30.0024 (0.07 seconds)
Cbc0038I Round again with cutoff of -35.7867
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  33: suminf.    0.59662 (18) obj. -47.5856 iterations 0
Cbc0038I Pass  34: suminf.    0.59662 (18) obj. -47.5856 iterations 2
Cbc0038I Pass  35: suminf.    1.66369 (19) obj. -35.7867 iterations 45
Cbc0038I Pass  36: suminf.    1.66369 (19) obj. -35.7867 iterations 1
Cbc0038I Pass  37: suminf.    1.84766 (11) obj. -35.7867 iterations 17
Cbc0038I Pass  38: suminf.    1.21002 (13) obj. -35.7867 iterations 2
Cbc0038I Pass  39: suminf.    1.45747 (13) obj. -35.7867 iterations 9
Cbc0038I Pass  40: suminf.    1.45979 (13) obj. -35.7867 iterations 5
Cbc0038I Pass  41: suminf.    1.44642 (12) obj. -35.7867 iterations 5
Cbc0038I Pass  42: suminf.    1.49111 (13) obj. -35.7867 iterations 8
Cbc0038I Pass  43: suminf.    1.15492 (14) obj. -35.7867 iterations 4
Cbc0038I Pass  44: suminf.    1.87027 (17) obj. -35.7867 iterations 6
Cbc0038I Pass  45: suminf.    1.30348 (17) obj. -35.7867 iterations 1
Cbc0038I Pass  46: suminf.    1.61011 (15) obj. -35.7867 iterations 12
Cbc0038I Pass  47: suminf.    1.57802 (15) obj. -35.7867 iterations 3
Cbc0038I Pass  48: suminf.    1.48713 (14) obj. -35.7867 iterations 6
Cbc0038I Pass  49: suminf.    1.29594 (15) obj. -35.7867 iterations 1
Cbc0038I Pass  50: suminf.    1.54269 (14) obj. -35.7867 iterations 12
Cbc0038I Pass  51: suminf.    1.53996 (14) obj. -35.7867 iterations 6
Cbc0038I Pass  52: suminf.    1.44642 (13) obj. -35.7867 iterations 5
Cbc0038I Pass  53: suminf.    1.26324 (14) obj. -35.7867 iterations 1
Cbc0038I Pass  54: suminf.    1.54071 (17) obj. -35.7867 iterations 9
Cbc0038I Pass  55: suminf.    1.16551 (16) obj. -35.7867 iterations 3
Cbc0038I Pass  56: suminf.    1.75526 (13) obj. -35.7867 iterations 15
Cbc0038I Pass  57: suminf.    1.53996 (14) obj. -35.7867 iterations 9
Cbc0038I Pass  58: suminf.    1.44642 (13) obj. -35.7867 iterations 6
Cbc0038I Pass  59: suminf.    1.26324 (14) obj. -35.7867 iterations 1
Cbc0038I Pass  60: suminf.    1.54269 (14) obj. -35.7867 iterations 11
Cbc0038I Pass  61: suminf.    1.96096 (18) obj. -35.7867 iterations 20
Cbc0038I Pass  62: suminf.    1.57109 (17) obj. -35.7867 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 103 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -30.0024 - took 0.09 seconds
Cbc0012I Integer solution of -30.002443 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 86 rows 103 columns, reduced to 19 rows 21 columns
Cbc0031I 57 added rows had average density of 14.561404
Cbc0013I At root node, 57 cuts changed objective from -58.923462 to -38.257555 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 1781 row cuts average 2.6 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 28 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 112 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 143 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 256 row cuts average 52.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 92 row cuts average 33.4 elements, 0 column cuts (0 active)  in 0.227 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -30.002443 best solution, best possible -38.257555 (0.77 seconds)
Cbc0012I Integer solution of -31.048763 found by DiveCoefficient after 832 iterations and 1 nodes (0.99 seconds)
Cbc0012I Integer solution of -31.203063 found by rounding after 1065 iterations and 7 nodes (1.24 seconds)
Cbc0010I After 10 nodes, 6 on tree, -31.203063 best solution, best possible -38.257555 (1.52 seconds)
Cbc0001I Search completed - best objective -31.203063, took 2017 iterations and 20 nodes (1.81 seconds)
Cbc0032I Strong branching done 388 times (9473 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 49 variables fixed on reduced cost
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.82

