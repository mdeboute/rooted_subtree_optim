Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-16) rows, 43 (-7) columns and 245 (-40) elements
Clp1000I sum of infeasibilities 0.00165036 - average 1.98839e-05, 2 fixed columns
Coin0506I Presolve 79 (-4) rows, 41 (-2) columns and 233 (-12) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 1397.5486
Clp0000I Optimal - objective value 1397.5486
Coin0511I After Postsolve, objective 1397.5486, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5909114 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 1397.5486
Clp0000I Optimal - objective value 1397.5486
Clp0000I Optimal - objective value 1397.5486
Coin0511I After Postsolve, objective 1397.5486, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1397.548595 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 43 columns (42 integer (42 of which binary)) and 245 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.165%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 11.8548
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1305.07 iterations 31
Cbc0038I Solution found of 1305.07
Cbc0038I Relaxing continuous gives 1305.07
Cbc0038I Rounding solution of 1072.29 is better than previous of 1305.07

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 43 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 1072.29 to 279.341 (0.04 seconds)
Cbc0038I Round again with cutoff of 111.652
Cbc0038I Pass   2: suminf.    2.72857 (11) obj. 111.652 iterations 10
Cbc0038I Pass   3: suminf.    2.92635 (12) obj. 111.652 iterations 15
Cbc0038I Pass   4: suminf.    2.92635 (12) obj. 111.652 iterations 0
Cbc0038I Pass   5: suminf.    3.41053 (10) obj. 111.652 iterations 9
Cbc0038I Pass   6: suminf.    3.41053 (10) obj. 111.652 iterations 0
Cbc0038I Pass   7: suminf.    3.12206 (10) obj. 111.652 iterations 6
Cbc0038I Pass   8: suminf.    3.02456 (10) obj. 111.652 iterations 1
Cbc0038I Pass   9: suminf.    2.12578 (9) obj. 111.652 iterations 3
Cbc0038I Pass  10: suminf.    3.11640 (11) obj. 111.652 iterations 8
Cbc0038I Pass  11: suminf.    2.55898 (10) obj. 111.652 iterations 2
Cbc0038I Pass  12: suminf.    2.23359 (10) obj. 111.652 iterations 6
Cbc0038I Pass  13: suminf.    2.86017 (9) obj. 111.652 iterations 10
Cbc0038I Pass  14: suminf.    2.18815 (8) obj. 111.652 iterations 5
Cbc0038I Pass  15: suminf.    2.97074 (10) obj. 111.652 iterations 8
Cbc0038I Pass  16: suminf.    2.97074 (10) obj. 111.652 iterations 0
Cbc0038I Pass  17: suminf.    1.19116 (7) obj. 111.652 iterations 11
Cbc0038I Pass  18: suminf.    1.11604 (6) obj. 111.652 iterations 1
Cbc0038I Pass  19: suminf.    2.99140 (10) obj. 111.652 iterations 9
Cbc0038I Pass  20: suminf.    2.32481 (11) obj. 111.652 iterations 17
Cbc0038I Pass  21: suminf.    1.27896 (9) obj. 111.652 iterations 6
Cbc0038I Pass  22: suminf.    1.27896 (9) obj. 111.652 iterations 0
Cbc0038I Pass  23: suminf.    2.04939 (8) obj. 111.652 iterations 8
Cbc0038I Pass  24: suminf.    1.52100 (8) obj. 111.652 iterations 2
Cbc0038I Pass  25: suminf.    1.51749 (7) obj. 111.652 iterations 1
Cbc0038I Pass  26: suminf.    1.89953 (7) obj. 111.652 iterations 7
Cbc0038I Pass  27: suminf.    1.41423 (7) obj. 111.652 iterations 3
Cbc0038I Pass  28: suminf.    1.41423 (7) obj. 111.652 iterations 0
Cbc0038I Pass  29: suminf.    1.52100 (8) obj. 111.652 iterations 6
Cbc0038I Pass  30: suminf.    1.51749 (7) obj. 111.652 iterations 1
Cbc0038I Pass  31: suminf.    1.89953 (7) obj. 111.652 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 43 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 279.341 - took 0.05 seconds
Cbc0012I Integer solution of 279.34056 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 18 added rows had average density of 26.277778
Cbc0013I At root node, 18 cuts changed objective from -1397.5486 to -518.24733 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6204 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1203 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 119 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 36.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0016I Integer solution of -0.457143 found by strong branching after 4761 iterations and 6 nodes (0.51 seconds)
Cbc0001I Search completed - best objective -0.457143, took 5047 iterations and 12 nodes (0.52 seconds)
Cbc0032I Strong branching done 288 times (6093 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.52   (Wallclock seconds):       0.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-10) rows, 89 (-7) columns and 1219 (-194) elements
Clp1000I sum of infeasibilities 3.33235e-08 - average 3.78677e-10, 78 fixed columns
Coin0506I Presolve 8 (-80) rows, 11 (-78) columns and 25 (-1194) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.3333417 - largest nonzero change 1.7029246e-05 ( 0.0008514623%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value -2997.7966
Clp0000I Optimal - objective value -2997.7966
Coin0511I After Postsolve, objective -2997.7966, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6341646 - largest nonzero change 2.398299e-05 ( 0.002398299%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 1987.0264
Clp0000I Optimal - objective value 1987.0264
Clp0000I Optimal - objective value 1987.0264
Coin0511I After Postsolve, objective 1987.0264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1987.02639 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 89 columns (89 integer (89 of which binary)) and 1221 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.150%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.3399
Cbc0038I Pass   1: suminf.    2.71413 (26) obj. -600.409 iterations 25
Cbc0038I Pass   2: suminf.    2.71413 (26) obj. -600.409 iterations 2
Cbc0038I Pass   3: suminf.    1.04471 (14) obj. 477.929 iterations 12
Cbc0038I Solution found of 922.344
Cbc0038I Rounding solution of 425.824 is better than previous of 922.344

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 89 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 242.613
Cbc0038I Pass   4: suminf.    2.71413 (26) obj. -600.409 iterations 0
Cbc0038I Pass   5: suminf.    2.71413 (26) obj. -600.409 iterations 1
Cbc0038I Pass   6: suminf.    1.26352 (16) obj. 242.613 iterations 12
Cbc0038I Pass   7: suminf.    0.86271 (7) obj. 242.613 iterations 12
Cbc0038I Pass   8: suminf.    0.68822 (7) obj. 242.613 iterations 1
Cbc0038I Pass   9: suminf.    0.99126 (3) obj. 242.613 iterations 19
Cbc0038I Pass  10: suminf.    0.61132 (3) obj. 242.613 iterations 2
Cbc0038I Pass  11: suminf.    1.24247 (12) obj. 242.613 iterations 39
Cbc0038I Pass  12: suminf.    1.06211 (7) obj. 242.613 iterations 24
Cbc0038I Pass  13: suminf.    1.07282 (5) obj. 242.613 iterations 14
Cbc0038I Pass  14: suminf.    1.07282 (5) obj. 242.613 iterations 0
Cbc0038I Pass  15: suminf.    1.17171 (5) obj. 242.613 iterations 4
Cbc0038I Pass  16: suminf.    1.17171 (5) obj. 242.613 iterations 0
Cbc0038I Pass  17: suminf.    2.49048 (16) obj. 242.613 iterations 25
Cbc0038I Pass  18: suminf.    2.03525 (15) obj. 242.613 iterations 6
Cbc0038I Pass  19: suminf.    1.63576 (8) obj. 242.613 iterations 16
Cbc0038I Pass  20: suminf.    1.36436 (8) obj. 242.613 iterations 3
Cbc0038I Pass  21: suminf.    2.15620 (10) obj. 242.613 iterations 8
Cbc0038I Pass  22: suminf.    2.15620 (10) obj. 242.613 iterations 0
Cbc0038I Pass  23: suminf.    0.87966 (4) obj. 242.613 iterations 10
Cbc0038I Pass  24: suminf.    0.86698 (4) obj. 239.481 iterations 2
Cbc0038I Pass  25: suminf.    0.87966 (4) obj. 242.613 iterations 4
Cbc0038I Pass  26: suminf.    2.84664 (12) obj. 242.613 iterations 25
Cbc0038I Pass  27: suminf.    2.84664 (12) obj. 242.613 iterations 6
Cbc0038I Pass  28: suminf.    2.02763 (7) obj. 242.613 iterations 8
Cbc0038I Pass  29: suminf.    2.02763 (7) obj. 242.613 iterations 0
Cbc0038I Pass  30: suminf.    2.33343 (7) obj. 242.613 iterations 2
Cbc0038I Pass  31: suminf.    1.52798 (7) obj. 242.613 iterations 4
Cbc0038I Pass  32: suminf.    1.42068 (7) obj. 242.613 iterations 2
Cbc0038I Pass  33: suminf.    1.52798 (7) obj. 242.613 iterations 4
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 89 columns, reduced to 27 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 425.824 to 334.33 (0.05 seconds)
Cbc0038I Round again with cutoff of -87.1674
Cbc0038I Pass  33: suminf.    2.71413 (26) obj. -600.409 iterations 0
Cbc0038I Pass  34: suminf.    2.71413 (26) obj. -600.409 iterations 1
Cbc0038I Pass  35: suminf.    1.02372 (8) obj. -87.1674 iterations 26
Cbc0038I Pass  36: suminf.    0.99998 (8) obj. -87.1674 iterations 5
Cbc0038I Pass  37: suminf.    1.14694 (5) obj. -87.1674 iterations 24
Cbc0038I Pass  38: suminf.    0.89559 (5) obj. -87.1674 iterations 4
Cbc0038I Pass  39: suminf.    1.47318 (11) obj. -87.1674 iterations 22
Cbc0038I Pass  40: suminf.    1.47318 (11) obj. -87.1674 iterations 5
Cbc0038I Pass  41: suminf.    1.21254 (11) obj. -87.1674 iterations 15
Cbc0038I Pass  42: suminf.    1.21254 (11) obj. -87.1674 iterations 1
Cbc0038I Pass  43: suminf.    1.20137 (9) obj. -87.1674 iterations 13
Cbc0038I Pass  44: suminf.    1.18937 (8) obj. -87.1674 iterations 3
Cbc0038I Pass  45: suminf.    2.24655 (10) obj. -87.1674 iterations 11
Cbc0038I Pass  46: suminf.    1.49994 (7) obj. -249.822 iterations 5
Cbc0038I Pass  47: suminf.    1.19942 (5) obj. -87.1674 iterations 6
Cbc0038I Pass  48: suminf.    1.12412 (5) obj. -100.57 iterations 3
Cbc0038I Pass  49: suminf.    2.57726 (11) obj. -87.1674 iterations 20
Cbc0038I Pass  50: suminf.    2.43096 (10) obj. -170.409 iterations 6
Cbc0038I Pass  51: suminf.    1.40748 (5) obj. -87.1674 iterations 17
Cbc0038I Pass  52: suminf.    1.40748 (5) obj. -87.1674 iterations 2
Cbc0038I Pass  53: suminf.    1.11151 (5) obj. -87.1674 iterations 4
Cbc0038I Pass  54: suminf.    1.11151 (5) obj. -87.1674 iterations 0
Cbc0038I Pass  55: suminf.    1.40748 (5) obj. -87.1674 iterations 3
Cbc0038I Pass  56: suminf.    1.38097 (6) obj. -87.1674 iterations 13
Cbc0038I Pass  57: suminf.    1.35431 (6) obj. -90.7666 iterations 4
Cbc0038I Pass  58: suminf.    1.28368 (6) obj. -87.1674 iterations 6
Cbc0038I Pass  59: suminf.    1.28368 (6) obj. -87.1674 iterations 2
Cbc0038I Pass  60: suminf.    1.47582 (6) obj. -87.1674 iterations 2
Cbc0038I Pass  61: suminf.    1.47582 (6) obj. -87.1674 iterations 1
Cbc0038I Pass  62: suminf.    1.28368 (6) obj. -87.1674 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 89 columns, reduced to 12 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 334.33 - took 0.05 seconds
Cbc0012I Integer solution of 334.33046 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 89 columns, reduced to 12 rows 19 columns
Cbc0012I Integer solution of -0.457143 found by DiveCoefficient after 121 iterations and 0 nodes (0.10 seconds)
Cbc0031I 49 added rows had average density of 9.5510204
Cbc0013I At root node, 49 cuts changed objective from -1406.2872 to -0.457143 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 916 row cuts average 3.5 elements, 0 column cuts (49 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 62 row cuts average 34.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -0.457143, took 121 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-16) rows, 43 (-7) columns and 245 (-40) elements
Clp1000I sum of infeasibilities 0.00165036 - average 1.98839e-05, 2 fixed columns
Coin0506I Presolve 79 (-4) rows, 41 (-2) columns and 233 (-12) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 1397.5486
Clp0000I Optimal - objective value 1397.5486
Coin0511I After Postsolve, objective 1397.5486, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5909114 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 1397.5486
Clp0000I Optimal - objective value 1397.5486
Clp0000I Optimal - objective value 1397.5486
Coin0511I After Postsolve, objective 1397.5486, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1397.548595 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 43 columns (42 integer (42 of which binary)) and 245 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.165%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 11.8548
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1305.07 iterations 31
Cbc0038I Solution found of 1305.07
Cbc0038I Relaxing continuous gives 1305.07
Cbc0038I Rounding solution of 1072.29 is better than previous of 1305.07

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 43 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 1072.29 to 279.341 (0.03 seconds)
Cbc0038I Round again with cutoff of 111.652
Cbc0038I Pass   2: suminf.    2.72857 (11) obj. 111.652 iterations 10
Cbc0038I Pass   3: suminf.    2.92635 (12) obj. 111.652 iterations 15
Cbc0038I Pass   4: suminf.    2.92635 (12) obj. 111.652 iterations 0
Cbc0038I Pass   5: suminf.    3.41053 (10) obj. 111.652 iterations 9
Cbc0038I Pass   6: suminf.    3.41053 (10) obj. 111.652 iterations 0
Cbc0038I Pass   7: suminf.    3.12206 (10) obj. 111.652 iterations 6
Cbc0038I Pass   8: suminf.    3.02456 (10) obj. 111.652 iterations 1
Cbc0038I Pass   9: suminf.    2.12578 (9) obj. 111.652 iterations 3
Cbc0038I Pass  10: suminf.    3.11640 (11) obj. 111.652 iterations 8
Cbc0038I Pass  11: suminf.    2.55898 (10) obj. 111.652 iterations 2
Cbc0038I Pass  12: suminf.    2.23359 (10) obj. 111.652 iterations 6
Cbc0038I Pass  13: suminf.    2.86017 (9) obj. 111.652 iterations 10
Cbc0038I Pass  14: suminf.    2.18815 (8) obj. 111.652 iterations 5
Cbc0038I Pass  15: suminf.    2.97074 (10) obj. 111.652 iterations 8
Cbc0038I Pass  16: suminf.    2.97074 (10) obj. 111.652 iterations 0
Cbc0038I Pass  17: suminf.    1.19116 (7) obj. 111.652 iterations 11
Cbc0038I Pass  18: suminf.    1.11604 (6) obj. 111.652 iterations 1
Cbc0038I Pass  19: suminf.    2.99140 (10) obj. 111.652 iterations 9
Cbc0038I Pass  20: suminf.    2.32481 (11) obj. 111.652 iterations 17
Cbc0038I Pass  21: suminf.    1.27896 (9) obj. 111.652 iterations 6
Cbc0038I Pass  22: suminf.    1.27896 (9) obj. 111.652 iterations 0
Cbc0038I Pass  23: suminf.    2.04939 (8) obj. 111.652 iterations 8
Cbc0038I Pass  24: suminf.    1.52100 (8) obj. 111.652 iterations 2
Cbc0038I Pass  25: suminf.    1.51749 (7) obj. 111.652 iterations 1
Cbc0038I Pass  26: suminf.    1.89953 (7) obj. 111.652 iterations 7
Cbc0038I Pass  27: suminf.    1.41423 (7) obj. 111.652 iterations 3
Cbc0038I Pass  28: suminf.    1.41423 (7) obj. 111.652 iterations 0
Cbc0038I Pass  29: suminf.    1.52100 (8) obj. 111.652 iterations 6
Cbc0038I Pass  30: suminf.    1.51749 (7) obj. 111.652 iterations 1
Cbc0038I Pass  31: suminf.    1.89953 (7) obj. 111.652 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 43 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 279.341 - took 0.05 seconds
Cbc0012I Integer solution of 279.34056 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 18 added rows had average density of 26.277778
Cbc0013I At root node, 18 cuts changed objective from -1397.5486 to -518.24733 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6204 row cuts average 4.1 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1203 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 119 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 151 row cuts average 36.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0016I Integer solution of -0.457143 found by strong branching after 4761 iterations and 6 nodes (0.53 seconds)
Cbc0001I Search completed - best objective -0.457143, took 5047 iterations and 12 nodes (0.54 seconds)
Cbc0032I Strong branching done 288 times (6093 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 89 (-8) columns and 1219 (-195) elements
Clp1000I sum of infeasibilities 3.33235e-08 - average 3.78677e-10, 78 fixed columns
Coin0506I Presolve 8 (-80) rows, 11 (-78) columns and 25 (-1194) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.3333417 - largest nonzero change 1.7029246e-05 ( 0.0008514623%) - largest zero change 1.7799242e-05
Clp0000I Optimal - objective value -2997.7966
Clp0000I Optimal - objective value -2997.7966
Coin0511I After Postsolve, objective -2997.7966, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6341646 - largest nonzero change 2.398299e-05 ( 0.002398299%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 1987.0264
Clp0000I Optimal - objective value 1987.0264
Clp0000I Optimal - objective value 1987.0264
Coin0511I After Postsolve, objective 1987.0264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1987.02639 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 89 columns (89 integer (89 of which binary)) and 1221 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.150%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.3399
Cbc0038I Pass   1: suminf.    2.71413 (26) obj. -600.409 iterations 25
Cbc0038I Pass   2: suminf.    2.71413 (26) obj. -600.409 iterations 2
Cbc0038I Pass   3: suminf.    1.04471 (14) obj. 477.929 iterations 12
Cbc0038I Solution found of 922.344
Cbc0038I Rounding solution of 425.824 is better than previous of 922.344

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 89 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 242.613
Cbc0038I Pass   4: suminf.    2.71413 (26) obj. -600.409 iterations 0
Cbc0038I Pass   5: suminf.    2.71413 (26) obj. -600.409 iterations 1
Cbc0038I Pass   6: suminf.    1.26352 (16) obj. 242.613 iterations 12
Cbc0038I Pass   7: suminf.    0.86271 (7) obj. 242.613 iterations 12
Cbc0038I Pass   8: suminf.    0.68822 (7) obj. 242.613 iterations 1
Cbc0038I Pass   9: suminf.    0.99126 (3) obj. 242.613 iterations 19
Cbc0038I Pass  10: suminf.    0.61132 (3) obj. 242.613 iterations 2
Cbc0038I Pass  11: suminf.    1.24247 (12) obj. 242.613 iterations 39
Cbc0038I Pass  12: suminf.    1.06211 (7) obj. 242.613 iterations 24
Cbc0038I Pass  13: suminf.    1.07282 (5) obj. 242.613 iterations 14
Cbc0038I Pass  14: suminf.    1.07282 (5) obj. 242.613 iterations 0
Cbc0038I Pass  15: suminf.    1.17171 (5) obj. 242.613 iterations 4
Cbc0038I Pass  16: suminf.    1.17171 (5) obj. 242.613 iterations 0
Cbc0038I Pass  17: suminf.    2.49048 (16) obj. 242.613 iterations 25
Cbc0038I Pass  18: suminf.    2.03525 (15) obj. 242.613 iterations 6
Cbc0038I Pass  19: suminf.    1.63576 (8) obj. 242.613 iterations 16
Cbc0038I Pass  20: suminf.    1.36436 (8) obj. 242.613 iterations 3
Cbc0038I Pass  21: suminf.    2.15620 (10) obj. 242.613 iterations 8
Cbc0038I Pass  22: suminf.    2.15620 (10) obj. 242.613 iterations 0
Cbc0038I Pass  23: suminf.    0.87966 (4) obj. 242.613 iterations 10
Cbc0038I Pass  24: suminf.    0.86698 (4) obj. 239.481 iterations 2
Cbc0038I Pass  25: suminf.    0.87966 (4) obj. 242.613 iterations 4
Cbc0038I Pass  26: suminf.    2.84664 (12) obj. 242.613 iterations 25
Cbc0038I Pass  27: suminf.    2.84664 (12) obj. 242.613 iterations 6
Cbc0038I Pass  28: suminf.    2.02763 (7) obj. 242.613 iterations 8
Cbc0038I Pass  29: suminf.    2.02763 (7) obj. 242.613 iterations 0
Cbc0038I Pass  30: suminf.    2.33343 (7) obj. 242.613 iterations 2
Cbc0038I Pass  31: suminf.    1.52798 (7) obj. 242.613 iterations 4
Cbc0038I Pass  32: suminf.    1.42068 (7) obj. 242.613 iterations 2
Cbc0038I Pass  33: suminf.    1.52798 (7) obj. 242.613 iterations 4
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 89 columns, reduced to 27 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 425.824 to 334.33 (0.05 seconds)
Cbc0038I Round again with cutoff of -87.1674
Cbc0038I Pass  33: suminf.    2.71413 (26) obj. -600.409 iterations 0
Cbc0038I Pass  34: suminf.    2.71413 (26) obj. -600.409 iterations 1
Cbc0038I Pass  35: suminf.    1.02372 (8) obj. -87.1674 iterations 26
Cbc0038I Pass  36: suminf.    0.99998 (8) obj. -87.1674 iterations 5
Cbc0038I Pass  37: suminf.    1.14694 (5) obj. -87.1674 iterations 24
Cbc0038I Pass  38: suminf.    0.89559 (5) obj. -87.1674 iterations 4
Cbc0038I Pass  39: suminf.    1.47318 (11) obj. -87.1674 iterations 22
Cbc0038I Pass  40: suminf.    1.47318 (11) obj. -87.1674 iterations 5
Cbc0038I Pass  41: suminf.    1.21254 (11) obj. -87.1674 iterations 15
Cbc0038I Pass  42: suminf.    1.21254 (11) obj. -87.1674 iterations 1
Cbc0038I Pass  43: suminf.    1.20137 (9) obj. -87.1674 iterations 13
Cbc0038I Pass  44: suminf.    1.18937 (8) obj. -87.1674 iterations 3
Cbc0038I Pass  45: suminf.    2.24655 (10) obj. -87.1674 iterations 11
Cbc0038I Pass  46: suminf.    1.49994 (7) obj. -249.822 iterations 5
Cbc0038I Pass  47: suminf.    1.19942 (5) obj. -87.1674 iterations 6
Cbc0038I Pass  48: suminf.    1.12412 (5) obj. -100.57 iterations 3
Cbc0038I Pass  49: suminf.    2.57726 (11) obj. -87.1674 iterations 20
Cbc0038I Pass  50: suminf.    2.43096 (10) obj. -170.409 iterations 6
Cbc0038I Pass  51: suminf.    1.40748 (5) obj. -87.1674 iterations 17
Cbc0038I Pass  52: suminf.    1.40748 (5) obj. -87.1674 iterations 2
Cbc0038I Pass  53: suminf.    1.11151 (5) obj. -87.1674 iterations 4
Cbc0038I Pass  54: suminf.    1.11151 (5) obj. -87.1674 iterations 0
Cbc0038I Pass  55: suminf.    1.40748 (5) obj. -87.1674 iterations 3
Cbc0038I Pass  56: suminf.    1.38097 (6) obj. -87.1674 iterations 13
Cbc0038I Pass  57: suminf.    1.35431 (6) obj. -90.7666 iterations 4
Cbc0038I Pass  58: suminf.    1.28368 (6) obj. -87.1674 iterations 6
Cbc0038I Pass  59: suminf.    1.28368 (6) obj. -87.1674 iterations 2
Cbc0038I Pass  60: suminf.    1.47582 (6) obj. -87.1674 iterations 2
Cbc0038I Pass  61: suminf.    1.47582 (6) obj. -87.1674 iterations 1
Cbc0038I Pass  62: suminf.    1.28368 (6) obj. -87.1674 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 89 columns, reduced to 12 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 334.33 - took 0.05 seconds
Cbc0012I Integer solution of 334.33046 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 88 rows 89 columns, reduced to 12 rows 19 columns
Cbc0012I Integer solution of -0.457143 found by DiveCoefficient after 121 iterations and 0 nodes (0.11 seconds)
Cbc0031I 49 added rows had average density of 9.5510204
Cbc0013I At root node, 49 cuts changed objective from -1406.2872 to -0.457143 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 916 row cuts average 3.5 elements, 0 column cuts (49 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 62 row cuts average 34.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -0.457143, took 121 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

