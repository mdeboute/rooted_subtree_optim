Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 28 (-4) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 1.05923e-06 - average 2.07693e-08, 2 fixed columns
Coin0506I Presolve 47 (-4) rows, 26 (-2) columns and 138 (-12) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 73.833508
Clp0000I Optimal - objective value 73.833508
Coin0511I After Postsolve, objective 73.833508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.833508
Clp0000I Optimal - objective value 73.833508
Clp0000I Optimal - objective value 73.833508
Coin0511I After Postsolve, objective 73.833508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.83350783 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 28 columns (27 integer (27 of which binary)) and 150 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.133%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.83134
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.53892 iterations 17
Cbc0038I Solution found of -5.53892
Cbc0038I Relaxing continuous gives -5.53892
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -5.53892 to -27.5314 (0.03 seconds)
Cbc0038I Round again with cutoff of -32.0925
Cbc0038I Pass   2: suminf.    0.42192 (3) obj. -32.0925 iterations 4
Cbc0038I Pass   3: suminf.    0.13464 (2) obj. -32.0925 iterations 2
Cbc0038I Pass   4: suminf.    0.14550 (2) obj. -32.0925 iterations 4
Cbc0038I Pass   5: suminf.    0.14550 (2) obj. -32.0925 iterations 0
Cbc0038I Pass   6: suminf.    0.70250 (3) obj. -32.0925 iterations 3
Cbc0038I Pass   7: suminf.    0.70250 (3) obj. -32.0925 iterations 0
Cbc0038I Pass   8: suminf.    1.29184 (4) obj. -32.0925 iterations 3
Cbc0038I Pass   9: suminf.    0.80590 (5) obj. -32.0925 iterations 2
Cbc0038I Pass  10: suminf.    0.79242 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  11: suminf.    2.45674 (7) obj. -32.0925 iterations 5
Cbc0038I Pass  12: suminf.    1.44760 (6) obj. -32.0925 iterations 4
Cbc0038I Pass  13: suminf.    1.23418 (4) obj. -32.0925 iterations 6
Cbc0038I Pass  14: suminf.    0.96124 (4) obj. -32.0925 iterations 1
Cbc0038I Pass  15: suminf.    0.80590 (5) obj. -32.0925 iterations 1
Cbc0038I Pass  16: suminf.    0.79242 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  17: suminf.    0.70250 (3) obj. -32.0925 iterations 1
Cbc0038I Pass  18: suminf.    1.29184 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  19: suminf.    2.23124 (6) obj. -32.0925 iterations 2
Cbc0038I Pass  20: suminf.    0.80590 (5) obj. -32.0925 iterations 2
Cbc0038I Pass  21: suminf.    0.80590 (5) obj. -32.0925 iterations 0
Cbc0038I Pass  22: suminf.    0.79242 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  23: suminf.    0.70250 (3) obj. -32.0925 iterations 1
Cbc0038I Pass  24: suminf.    1.29184 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  25: suminf.    1.86208 (5) obj. -32.0925 iterations 9
Cbc0038I Pass  26: suminf.    1.26448 (4) obj. -32.0925 iterations 2
Cbc0038I Pass  27: suminf.    0.44830 (3) obj. -32.0925 iterations 4
Cbc0038I Pass  28: suminf.    0.96428 (3) obj. -32.0925 iterations 2
Cbc0038I Pass  29: suminf.    0.78428 (4) obj. -32.0925 iterations 2
Cbc0038I Pass  30: suminf.    1.23418 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  31: suminf.    0.96124 (4) obj. -32.0925 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -27.5314 to -28.354 (0.05 seconds)
Cbc0038I Round again with cutoff of -40.3023
Cbc0038I Pass  31: suminf.    0.23709 (3) obj. -40.3023 iterations 0
Cbc0038I Pass  32: suminf.    0.13464 (2) obj. -40.3023 iterations 2
Cbc0038I Pass  33: suminf.    0.40883 (2) obj. -40.3023 iterations 4
Cbc0038I Pass  34: suminf.    0.40883 (2) obj. -40.3023 iterations 0
Cbc0038I Pass  35: suminf.    1.16986 (4) obj. -40.3023 iterations 4
Cbc0038I Pass  36: suminf.    1.16986 (4) obj. -40.3023 iterations 0
Cbc0038I Pass  37: suminf.    1.21029 (3) obj. -40.3023 iterations 6
Cbc0038I Pass  38: suminf.    0.82636 (5) obj. -40.3023 iterations 2
Cbc0038I Pass  39: suminf.    1.16986 (4) obj. -40.3023 iterations 6
Cbc0038I Pass  40: suminf.    1.37990 (6) obj. -40.3023 iterations 5
Cbc0038I Pass  41: suminf.    1.37990 (6) obj. -40.3023 iterations 0
Cbc0038I Pass  42: suminf.    0.96865 (4) obj. -40.3023 iterations 4
Cbc0038I Pass  43: suminf.    0.41309 (3) obj. -40.3023 iterations 4
Cbc0038I Pass  44: suminf.    1.49951 (4) obj. -40.3023 iterations 3
Cbc0038I Pass  45: suminf.    0.84394 (4) obj. -40.3023 iterations 3
Cbc0038I Pass  46: suminf.    1.20877 (5) obj. -40.3023 iterations 4
Cbc0038I Pass  47: suminf.    1.20877 (5) obj. -40.3023 iterations 0
Cbc0038I Pass  48: suminf.    1.06342 (4) obj. -40.3023 iterations 5
Cbc0038I Pass  49: suminf.    1.50217 (7) obj. -40.3023 iterations 6
Cbc0038I Pass  50: suminf.    1.49951 (4) obj. -40.3023 iterations 8
Cbc0038I Pass  51: suminf.    0.84394 (4) obj. -40.3023 iterations 3
Cbc0038I Pass  52: suminf.    1.20877 (5) obj. -40.3023 iterations 4
Cbc0038I Pass  53: suminf.    1.20877 (5) obj. -40.3023 iterations 0
Cbc0038I Pass  54: suminf.    1.06342 (4) obj. -40.3023 iterations 5
Cbc0038I Pass  55: suminf.    1.38485 (7) obj. -40.3023 iterations 7
Cbc0038I Pass  56: suminf.    1.31391 (6) obj. -40.3023 iterations 1
Cbc0038I Pass  57: suminf.    1.32459 (5) obj. -40.3023 iterations 9
Cbc0038I Pass  58: suminf.    1.10845 (4) obj. -40.3023 iterations 1
Cbc0038I Pass  59: suminf.    0.41309 (3) obj. -40.3023 iterations 2
Cbc0038I Pass  60: suminf.    1.49951 (4) obj. -40.3023 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 37 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -28.354 - took 0.09 seconds
Cbc0012I Integer solution of -28.35404 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 13 added rows had average density of 17.461538
Cbc0013I At root node, 13 cuts changed objective from -73.141305 to -44.184381 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2066 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1133 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -28.35404, took 2548 iterations and 10 nodes (0.23 seconds)
Cbc0032I Strong branching done 98 times (1080 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-15) rows, 50 (-10) columns and 444 (-168) elements
Clp1000I sum of infeasibilities 4.91231e-06 - average 1.04517e-07, 17 fixed columns
Coin0506I Presolve 28 (-19) rows, 29 (-21) columns and 154 (-290) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 1.3072275 - largest nonzero change 0 ( 0%) - largest zero change 2.7377053e-05
Clp0000I Optimal - objective value 139.9255
Clp0000I Optimal - objective value 139.9255
Coin0511I After Postsolve, objective 139.9255, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21726517 - largest nonzero change 0 ( 0%) - largest zero change 2.9196393e-05
Clp0000I Optimal - objective value 139.9255
Clp0000I Optimal - objective value 139.9255
Clp0000I Optimal - objective value 139.9255
Coin0511I After Postsolve, objective 139.9255, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 139.9254973 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 50 columns (50 integer (50 of which binary)) and 454 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.901%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.15183
Cbc0038I Pass   1: suminf.    1.03508 (11) obj. -8.16995 iterations 8
Cbc0038I Pass   2: suminf.    1.03508 (11) obj. -8.16995 iterations 1
Cbc0038I Solution found of 61.3918
Cbc0038I Rounding solution of -24.6082 is better than previous of 61.3918

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -24.6082 to -37.5985 (0.01 seconds)
Cbc0038I Round again with cutoff of -42.379
Cbc0038I Pass   3: suminf.    2.93578 (16) obj. -42.379 iterations 4
Cbc0038I Pass   4: suminf.    1.47617 (13) obj. -42.379 iterations 9
Cbc0038I Pass   5: suminf.    0.63013 (14) obj. -42.379 iterations 2
Cbc0038I Pass   6: suminf.    0.63013 (14) obj. -42.379 iterations 0
Cbc0038I Pass   7: suminf.    0.14516 (1) obj. -57.9878 iterations 19
Cbc0038I Pass   8: suminf.    0.45510 (1) obj. -42.379 iterations 1
Cbc0038I Pass   9: suminf.    1.37399 (5) obj. -42.379 iterations 11
Cbc0038I Pass  10: suminf.    1.24499 (4) obj. -42.379 iterations 2
Cbc0038I Pass  11: suminf.    1.27345 (6) obj. -42.379 iterations 2
Cbc0038I Pass  12: suminf.    1.24025 (4) obj. -42.379 iterations 2
Cbc0038I Pass  13: suminf.    1.35636 (5) obj. -42.379 iterations 3
Cbc0038I Pass  14: suminf.    1.23105 (4) obj. -42.379 iterations 1
Cbc0038I Pass  15: suminf.    2.62293 (9) obj. -42.379 iterations 9
Cbc0038I Pass  16: suminf.    2.22070 (9) obj. -42.379 iterations 2
Cbc0038I Pass  17: suminf.    1.58857 (8) obj. -42.379 iterations 2
Cbc0038I Pass  18: suminf.    1.17375 (3) obj. -42.379 iterations 9
Cbc0038I Pass  19: suminf.    1.17375 (3) obj. -42.379 iterations 0
Cbc0038I Pass  20: suminf.    0.74895 (2) obj. -42.379 iterations 1
Cbc0038I Pass  21: suminf.    0.49498 (2) obj. -42.379 iterations 1
Cbc0038I Pass  22: suminf.    2.90421 (8) obj. -42.379 iterations 12
Cbc0038I Pass  23: suminf.    2.90421 (8) obj. -42.379 iterations 2
Cbc0038I Pass  24: suminf.    3.42121 (10) obj. -42.379 iterations 8
Cbc0038I Pass  25: suminf.    3.19057 (9) obj. -42.379 iterations 1
Cbc0038I Pass  26: suminf.    1.53663 (5) obj. -42.379 iterations 13
Cbc0038I Pass  27: suminf.    1.50656 (5) obj. -42.379 iterations 3
Cbc0038I Pass  28: suminf.    1.72303 (5) obj. -42.379 iterations 4
Cbc0038I Pass  29: suminf.    1.50656 (5) obj. -42.379 iterations 2
Cbc0038I Pass  30: suminf.    3.07846 (10) obj. -42.379 iterations 24
Cbc0038I Pass  31: suminf.    2.45192 (7) obj. -42.379 iterations 4
Cbc0038I Pass  32: suminf.    0.56495 (2) obj. -42.379 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -37.5985 to -38.3306 (0.03 seconds)
Cbc0038I Round again with cutoff of -50.9838
Cbc0038I Pass  32: suminf.    3.93893 (16) obj. -50.9838 iterations 0
Cbc0038I Pass  33: suminf.    2.21711 (13) obj. -50.9838 iterations 9
Cbc0038I Pass  34: suminf.    1.46065 (14) obj. -50.9838 iterations 2
Cbc0038I Pass  35: suminf.    1.46065 (14) obj. -50.9838 iterations 0
Cbc0038I Pass  36: suminf.    0.14516 (1) obj. -57.9878 iterations 19
Cbc0038I Pass  37: suminf.    0.32453 (1) obj. -50.9838 iterations 1
Cbc0038I Pass  38: suminf.    1.04483 (8) obj. -50.9838 iterations 10
Cbc0038I Pass  39: suminf.    0.66680 (3) obj. -55.6446 iterations 7
Cbc0038I Pass  40: suminf.    0.24770 (1) obj. -50.9838 iterations 3
Cbc0038I Pass  41: suminf.    0.14516 (1) obj. -54.9878 iterations 1
Cbc0038I Pass  42: suminf.    0.24770 (1) obj. -50.9838 iterations 1
Cbc0038I Pass  43: suminf.    2.37210 (8) obj. -50.9838 iterations 7
Cbc0038I Pass  44: suminf.    1.28219 (5) obj. -50.9838 iterations 6
Cbc0038I Pass  45: suminf.    0.22209 (1) obj. -50.9838 iterations 4
Cbc0038I Pass  46: suminf.    0.14516 (1) obj. -53.9878 iterations 1
Cbc0038I Pass  47: suminf.    0.22209 (1) obj. -50.9838 iterations 1
Cbc0038I Pass  48: suminf.    1.42744 (5) obj. -50.9838 iterations 13
Cbc0038I Pass  49: suminf.    0.62728 (3) obj. -50.9838 iterations 9
Cbc0038I Pass  50: suminf.    0.66217 (3) obj. -50.9838 iterations 3
Cbc0038I Pass  51: suminf.    0.26257 (2) obj. -50.9838 iterations 1
Cbc0038I Pass  52: suminf.    1.58343 (5) obj. -50.9838 iterations 6
Cbc0038I Pass  53: suminf.    0.85352 (4) obj. -50.9838 iterations 4
Cbc0038I Pass  54: suminf.    0.26257 (2) obj. -50.9838 iterations 2
Cbc0038I Pass  55: suminf.    2.43423 (8) obj. -50.9838 iterations 13
Cbc0038I Pass  56: suminf.    2.32176 (8) obj. -50.9838 iterations 5
Cbc0038I Pass  57: suminf.    1.70593 (6) obj. -50.9838 iterations 10
Cbc0038I Pass  58: suminf.    1.31201 (7) obj. -50.9838 iterations 6
Cbc0038I Pass  59: suminf.    1.30767 (5) obj. -50.9838 iterations 1
Cbc0038I Pass  60: suminf.    1.33324 (4) obj. -50.9838 iterations 5
Cbc0038I Pass  61: suminf.    1.33324 (4) obj. -50.9838 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 50 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -38.3306 - took 0.03 seconds
Cbc0012I Integer solution of -38.33057 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 47 rows 50 columns, reduced to 15 rows 17 columns
Cbc0031I 24 added rows had average density of 11.833333
Cbc0013I At root node, 24 cuts changed objective from -85.402854 to -45.169942 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 990 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 564 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 33 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 115 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 157 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.724 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -38.33057 best solution, best possible -45.169942 (1.55 seconds)
Cbc0001I Search completed - best objective -38.33056999999999, took 1608 iterations and 4 nodes (1.58 seconds)
Cbc0032I Strong branching done 78 times (1014 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.59

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 28 (-4) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 1.05923e-06 - average 2.07693e-08, 2 fixed columns
Coin0506I Presolve 47 (-4) rows, 26 (-2) columns and 138 (-12) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 73.833508
Clp0000I Optimal - objective value 73.833508
Coin0511I After Postsolve, objective 73.833508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.833508
Clp0000I Optimal - objective value 73.833508
Clp0000I Optimal - objective value 73.833508
Coin0511I After Postsolve, objective 73.833508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.83350783 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 28 columns (27 integer (27 of which binary)) and 150 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.133%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.83134
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -5.53892 iterations 17
Cbc0038I Solution found of -5.53892
Cbc0038I Relaxing continuous gives -5.53892
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -5.53892 to -27.5314 (0.03 seconds)
Cbc0038I Round again with cutoff of -32.0925
Cbc0038I Pass   2: suminf.    0.42192 (3) obj. -32.0925 iterations 4
Cbc0038I Pass   3: suminf.    0.13464 (2) obj. -32.0925 iterations 2
Cbc0038I Pass   4: suminf.    0.14550 (2) obj. -32.0925 iterations 4
Cbc0038I Pass   5: suminf.    0.14550 (2) obj. -32.0925 iterations 0
Cbc0038I Pass   6: suminf.    0.70250 (3) obj. -32.0925 iterations 3
Cbc0038I Pass   7: suminf.    0.70250 (3) obj. -32.0925 iterations 0
Cbc0038I Pass   8: suminf.    1.29184 (4) obj. -32.0925 iterations 3
Cbc0038I Pass   9: suminf.    0.80590 (5) obj. -32.0925 iterations 2
Cbc0038I Pass  10: suminf.    0.79242 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  11: suminf.    2.45674 (7) obj. -32.0925 iterations 5
Cbc0038I Pass  12: suminf.    1.44760 (6) obj. -32.0925 iterations 4
Cbc0038I Pass  13: suminf.    1.23418 (4) obj. -32.0925 iterations 6
Cbc0038I Pass  14: suminf.    0.96124 (4) obj. -32.0925 iterations 1
Cbc0038I Pass  15: suminf.    0.80590 (5) obj. -32.0925 iterations 1
Cbc0038I Pass  16: suminf.    0.79242 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  17: suminf.    0.70250 (3) obj. -32.0925 iterations 1
Cbc0038I Pass  18: suminf.    1.29184 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  19: suminf.    2.23124 (6) obj. -32.0925 iterations 2
Cbc0038I Pass  20: suminf.    0.80590 (5) obj. -32.0925 iterations 2
Cbc0038I Pass  21: suminf.    0.80590 (5) obj. -32.0925 iterations 0
Cbc0038I Pass  22: suminf.    0.79242 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  23: suminf.    0.70250 (3) obj. -32.0925 iterations 1
Cbc0038I Pass  24: suminf.    1.29184 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  25: suminf.    1.86208 (5) obj. -32.0925 iterations 9
Cbc0038I Pass  26: suminf.    1.26448 (4) obj. -32.0925 iterations 2
Cbc0038I Pass  27: suminf.    0.44830 (3) obj. -32.0925 iterations 4
Cbc0038I Pass  28: suminf.    0.96428 (3) obj. -32.0925 iterations 2
Cbc0038I Pass  29: suminf.    0.78428 (4) obj. -32.0925 iterations 2
Cbc0038I Pass  30: suminf.    1.23418 (4) obj. -32.0925 iterations 3
Cbc0038I Pass  31: suminf.    0.96124 (4) obj. -32.0925 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 38 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -27.5314 to -28.354 (0.07 seconds)
Cbc0038I Round again with cutoff of -40.3023
Cbc0038I Pass  31: suminf.    0.23709 (3) obj. -40.3023 iterations 0
Cbc0038I Pass  32: suminf.    0.13464 (2) obj. -40.3023 iterations 2
Cbc0038I Pass  33: suminf.    0.40883 (2) obj. -40.3023 iterations 4
Cbc0038I Pass  34: suminf.    0.40883 (2) obj. -40.3023 iterations 0
Cbc0038I Pass  35: suminf.    1.16986 (4) obj. -40.3023 iterations 4
Cbc0038I Pass  36: suminf.    1.16986 (4) obj. -40.3023 iterations 0
Cbc0038I Pass  37: suminf.    1.21029 (3) obj. -40.3023 iterations 6
Cbc0038I Pass  38: suminf.    0.82636 (5) obj. -40.3023 iterations 2
Cbc0038I Pass  39: suminf.    1.16986 (4) obj. -40.3023 iterations 6
Cbc0038I Pass  40: suminf.    1.37990 (6) obj. -40.3023 iterations 5
Cbc0038I Pass  41: suminf.    1.37990 (6) obj. -40.3023 iterations 0
Cbc0038I Pass  42: suminf.    0.96865 (4) obj. -40.3023 iterations 4
Cbc0038I Pass  43: suminf.    0.41309 (3) obj. -40.3023 iterations 4
Cbc0038I Pass  44: suminf.    1.49951 (4) obj. -40.3023 iterations 3
Cbc0038I Pass  45: suminf.    0.84394 (4) obj. -40.3023 iterations 3
Cbc0038I Pass  46: suminf.    1.20877 (5) obj. -40.3023 iterations 4
Cbc0038I Pass  47: suminf.    1.20877 (5) obj. -40.3023 iterations 0
Cbc0038I Pass  48: suminf.    1.06342 (4) obj. -40.3023 iterations 5
Cbc0038I Pass  49: suminf.    1.50217 (7) obj. -40.3023 iterations 6
Cbc0038I Pass  50: suminf.    1.49951 (4) obj. -40.3023 iterations 8
Cbc0038I Pass  51: suminf.    0.84394 (4) obj. -40.3023 iterations 3
Cbc0038I Pass  52: suminf.    1.20877 (5) obj. -40.3023 iterations 4
Cbc0038I Pass  53: suminf.    1.20877 (5) obj. -40.3023 iterations 0
Cbc0038I Pass  54: suminf.    1.06342 (4) obj. -40.3023 iterations 5
Cbc0038I Pass  55: suminf.    1.38485 (7) obj. -40.3023 iterations 7
Cbc0038I Pass  56: suminf.    1.31391 (6) obj. -40.3023 iterations 1
Cbc0038I Pass  57: suminf.    1.32459 (5) obj. -40.3023 iterations 9
Cbc0038I Pass  58: suminf.    1.10845 (4) obj. -40.3023 iterations 1
Cbc0038I Pass  59: suminf.    0.41309 (3) obj. -40.3023 iterations 2
Cbc0038I Pass  60: suminf.    1.49951 (4) obj. -40.3023 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 28 columns, reduced to 37 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -28.354 - took 0.07 seconds
Cbc0012I Integer solution of -28.35404 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 13 added rows had average density of 17.461538
Cbc0013I At root node, 13 cuts changed objective from -73.141305 to -44.184381 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2066 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1133 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -28.35404, took 2548 iterations and 10 nodes (0.26 seconds)
Cbc0032I Strong branching done 98 times (1080 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 49 (-12) columns and 425 (-188) elements
Clp1000I sum of infeasibilities 2.46342e-07 - average 5.35526e-09, 29 fixed columns
Coin0506I Presolve 19 (-27) rows, 20 (-29) columns and 73 (-352) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 1.190108 - largest nonzero change 2.4819352e-05 ( 0.0018056464%) - largest zero change 1.9504978e-05
Clp0000I Optimal - objective value 12.071383
Clp0000I Optimal - objective value 12.071383
Coin0511I After Postsolve, objective 12.071383, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1955012 - largest nonzero change 2.6623887e-05 ( 0.0021869008%) - largest zero change 2.398299e-05
Clp0000I Optimal - objective value 95.557144
Clp0000I Optimal - objective value 95.557144
Clp0000I Optimal - objective value 95.557144
Coin0511I After Postsolve, objective 95.557144, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.55714428 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 49 columns (49 integer (49 of which binary)) and 427 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.813%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.46192
Cbc0038I Pass   1: suminf.    1.06862 (7) obj. -81.34 iterations 12
Cbc0038I Solution found of -22.3267
Cbc0038I Rounding solution of -27.5199 is better than previous of -22.3267

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.0263
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.06862 (7) obj. -81.34 iterations 0
Cbc0038I Pass   3: suminf.    0.60731 (2) obj. -33.0263 iterations 9
Cbc0038I Pass   4: suminf.    0.48643 (2) obj. -39.6571 iterations 2
Cbc0038I Pass   5: suminf.    0.88588 (2) obj. -33.0263 iterations 3
Cbc0038I Pass   6: suminf.    0.88588 (2) obj. -33.0263 iterations 0
Cbc0038I Pass   7: suminf.    0.72613 (2) obj. -33.0263 iterations 1
Cbc0038I Pass   8: suminf.    1.23619 (11) obj. -33.0263 iterations 13
Cbc0038I Pass   9: suminf.    0.70697 (3) obj. -33.0263 iterations 9
Cbc0038I Pass  10: suminf.    0.69614 (2) obj. -33.0263 iterations 3
Cbc0038I Pass  11: suminf.    0.71141 (2) obj. -33.0263 iterations 1
Cbc0038I Pass  12: suminf.    1.67966 (12) obj. -33.0263 iterations 16
Cbc0038I Pass  13: suminf.    1.67966 (12) obj. -33.0263 iterations 0
Cbc0038I Pass  14: suminf.    0.55541 (4) obj. -33.0263 iterations 14
Cbc0038I Pass  15: suminf.    0.50906 (3) obj. -33.3332 iterations 1
Cbc0038I Pass  16: suminf.    0.70207 (4) obj. -33.0263 iterations 3
Cbc0038I Pass  17: suminf.    1.26832 (6) obj. -33.0263 iterations 6
Cbc0038I Pass  18: suminf.    1.26855 (6) obj. -33.0263 iterations 2
Cbc0038I Pass  19: suminf.    1.44714 (5) obj. -33.0263 iterations 3
Cbc0038I Pass  20: suminf.    1.14740 (5) obj. -33.0263 iterations 1
Cbc0038I Pass  21: suminf.    0.84043 (5) obj. -33.0263 iterations 3
Cbc0038I Pass  22: suminf.    0.81895 (4) obj. -33.0959 iterations 1
Cbc0038I Pass  23: suminf.    0.82431 (4) obj. -33.0263 iterations 3
Cbc0038I Pass  24: suminf.    2.11164 (10) obj. -33.0263 iterations 16
Cbc0038I Pass  25: suminf.    2.10533 (10) obj. -33.0263 iterations 4
Cbc0038I Pass  26: suminf.    1.46630 (6) obj. -33.0263 iterations 8
Cbc0038I Pass  27: suminf.    1.46630 (6) obj. -33.0263 iterations 0
Cbc0038I Pass  28: suminf.    1.37525 (6) obj. -33.0263 iterations 3
Cbc0038I Pass  29: suminf.    1.37525 (6) obj. -33.0263 iterations 0
Cbc0038I Pass  30: suminf.    1.46630 (6) obj. -33.0263 iterations 3
Cbc0038I Pass  31: suminf.    1.18121 (8) obj. -33.0263 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 49 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -22.3267 to -28.354 (0.04 seconds)
Cbc0038I Round again with cutoff of -42.9376
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.06862 (7) obj. -81.34 iterations 0
Cbc0038I Pass  32: suminf.    0.26046 (3) obj. -42.9376 iterations 9
Cbc0038I Pass  33: suminf.    0.24672 (2) obj. -42.9376 iterations 1
Cbc0038I Pass  34: suminf.    0.63172 (2) obj. -42.9376 iterations 1
Cbc0038I Pass  35: suminf.    1.80061 (10) obj. -42.9376 iterations 15
Cbc0038I Pass  36: suminf.    1.80169 (10) obj. -42.9376 iterations 2
Cbc0038I Pass  37: suminf.    1.18772 (5) obj. -42.9376 iterations 12
Cbc0038I Pass  38: suminf.    1.13830 (4) obj. -43.6405 iterations 1
Cbc0038I Pass  39: suminf.    1.19237 (4) obj. -42.9376 iterations 3
Cbc0038I Pass  40: suminf.    2.74839 (11) obj. -42.9376 iterations 14
Cbc0038I Pass  41: suminf.    2.68213 (12) obj. -42.9376 iterations 4
Cbc0038I Pass  42: suminf.    2.51048 (7) obj. -42.9376 iterations 11
Cbc0038I Pass  43: suminf.    2.41867 (6) obj. -42.9376 iterations 3
Cbc0038I Pass  44: suminf.    2.36852 (6) obj. -42.9376 iterations 2
Cbc0038I Pass  45: suminf.    2.36852 (6) obj. -42.9376 iterations 1
Cbc0038I Pass  46: suminf.    2.41867 (6) obj. -42.9376 iterations 4
Cbc0038I Pass  47: suminf.    3.57431 (10) obj. -42.9376 iterations 9
Cbc0038I Pass  48: suminf.    2.57408 (9) obj. -42.9376 iterations 4
Cbc0038I Pass  49: suminf.    2.49716 (8) obj. -42.9376 iterations 7
Cbc0038I Pass  50: suminf.    2.49716 (8) obj. -42.9376 iterations 0
Cbc0038I Pass  51: suminf.    2.29806 (8) obj. -42.9376 iterations 1
Cbc0038I Pass  52: suminf.    2.29806 (8) obj. -42.9376 iterations 0
Cbc0038I Pass  53: suminf.    2.49716 (8) obj. -42.9376 iterations 1
Cbc0038I Pass  54: suminf.    2.69985 (8) obj. -42.9376 iterations 4
Cbc0038I Pass  55: suminf.    2.35360 (8) obj. -42.9376 iterations 2
Cbc0038I Pass  56: suminf.    1.84960 (7) obj. -44.694 iterations 2
Cbc0038I Pass  57: suminf.    1.74205 (7) obj. -42.9376 iterations 4
Cbc0038I Pass  58: suminf.    1.74205 (7) obj. -42.9376 iterations 1
Cbc0038I Pass  59: suminf.    1.71497 (7) obj. -42.9376 iterations 6
Cbc0038I Pass  60: suminf.    1.71497 (7) obj. -42.9376 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 49 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -28.354 - took 0.04 seconds
Cbc0012I Integer solution of -28.35404 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 46 rows 49 columns, reduced to 0 rows 0 columns
Cbc0031I 22 added rows had average density of 10.318182
Cbc0013I At root node, 22 cuts changed objective from -82.582801 to -29.335259 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3974 row cuts average 5.1 elements, 9 column cuts (9 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 812 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 21 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 212 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 206 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 126 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.751 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.35404 best solution, best possible -29.321867 (1.64 seconds)
Cbc0001I Search completed - best objective -28.35404, took 2320 iterations and 2 nodes (1.78 seconds)
Cbc0032I Strong branching done 32 times (354 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.79

