Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 2.93786e-05 - average 2.11357e-07, 6 fixed columns
Coin0506I Presolve 126 (-13) rows, 69 (-7) columns and 382 (-40) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 2.8090846 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Coin0511I After Postsolve, objective 45.649359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Coin0511I After Postsolve, objective 45.649359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.64935871 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.2352
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.62373 iterations 54
Cbc0038I Solution found of 1.62373
Cbc0038I Relaxing continuous gives 1.62373
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 1.62373 to -11.5888 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.9949
Cbc0038I Pass   2: suminf.    2.24767 (11) obj. -14.9949 iterations 17
Cbc0038I Pass   3: suminf.    0.89283 (5) obj. -14.9949 iterations 20
Cbc0038I Pass   4: suminf.    0.74250 (7) obj. -14.9949 iterations 6
Cbc0038I Pass   5: suminf.    2.90819 (8) obj. -14.9949 iterations 19
Cbc0038I Pass   6: suminf.    2.91128 (8) obj. -14.9949 iterations 2
Cbc0038I Pass   7: suminf.    0.56443 (4) obj. -14.9949 iterations 13
Cbc0038I Pass   8: suminf.    0.56443 (4) obj. -14.9949 iterations 0
Cbc0038I Pass   9: suminf.    2.21096 (6) obj. -14.9949 iterations 12
Cbc0038I Pass  10: suminf.    2.21096 (6) obj. -14.9949 iterations 0
Cbc0038I Pass  11: suminf.    2.83176 (10) obj. -14.9949 iterations 20
Cbc0038I Pass  12: suminf.    2.35431 (7) obj. -14.9949 iterations 8
Cbc0038I Pass  13: suminf.    0.87686 (4) obj. -14.9949 iterations 11
Cbc0038I Pass  14: suminf.    1.05408 (4) obj. -14.9949 iterations 10
Cbc0038I Pass  15: suminf.    1.05408 (4) obj. -14.9949 iterations 0
Cbc0038I Pass  16: suminf.    0.91608 (3) obj. -14.9949 iterations 9
Cbc0038I Pass  17: suminf.    0.53142 (2) obj. -14.9949 iterations 2
Cbc0038I Pass  18: suminf.    1.54803 (7) obj. -14.9949 iterations 17
Cbc0038I Pass  19: suminf.    1.32640 (6) obj. -14.9949 iterations 4
Cbc0038I Pass  20: suminf.    1.38004 (4) obj. -14.9949 iterations 14
Cbc0038I Pass  21: suminf.    1.46123 (4) obj. -14.9949 iterations 5
Cbc0038I Pass  22: suminf.    1.46123 (4) obj. -14.9949 iterations 0
Cbc0038I Pass  23: suminf.    1.87121 (4) obj. -14.9949 iterations 4
Cbc0038I Pass  24: suminf.    3.52119 (13) obj. -14.9949 iterations 24
Cbc0038I Pass  25: suminf.    2.30395 (11) obj. -14.9949 iterations 6
Cbc0038I Pass  26: suminf.    2.26252 (10) obj. -14.9949 iterations 2
Cbc0038I Pass  27: suminf.    2.22824 (7) obj. -14.9949 iterations 24
Cbc0038I Pass  28: suminf.    2.22824 (7) obj. -14.9949 iterations 0
Cbc0038I Pass  29: suminf.    1.09672 (5) obj. -14.9949 iterations 13
Cbc0038I Pass  30: suminf.    0.79940 (4) obj. -14.9949 iterations 4
Cbc0038I Pass  31: suminf.    1.68120 (4) obj. -14.9949 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -11.5888 to -12.9814 (0.12 seconds)
Cbc0038I Round again with cutoff of -21.1258
Cbc0038I Pass  31: suminf.    3.44816 (13) obj. -21.1258 iterations 5
Cbc0038I Pass  32: suminf.    1.27984 (6) obj. -21.1258 iterations 21
Cbc0038I Pass  33: suminf.    1.95741 (6) obj. -21.1258 iterations 10
Cbc0038I Pass  34: suminf.    1.04063 (4) obj. -21.1258 iterations 2
Cbc0038I Pass  35: suminf.    1.04063 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  36: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  37: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  38: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  39: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  40: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  41: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  42: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  43: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  44: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  45: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  46: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  47: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  48: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  49: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  50: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  51: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  52: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  53: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  54: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  55: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  56: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  57: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  58: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  59: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  60: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 88 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -12.9814 - took 0.14 seconds
Cbc0012I Integer solution of -12.98145 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 86 rows 48 columns
Cbc0031I 23 added rows had average density of 66.608696
Cbc0013I At root node, 23 cuts changed objective from -45.649359 to -36.701057 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11141 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1584 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.98145 best solution, best possible -36.701057 (0.97 seconds)
Cbc0012I Integer solution of -13.152073 found by DiveCoefficient after 7572 iterations and 9 nodes (1.15 seconds)
Cbc0012I Integer solution of -14.728213 found by rounding after 8197 iterations and 28 nodes (1.23 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 15 rows 13 columns
Cbc0016I Integer solution of -14.824153 found by strong branching after 9732 iterations and 91 nodes (1.34 seconds)
Cbc0001I Search completed - best objective -14.824153, took 10159 iterations and 100 nodes (1.35 seconds)
Cbc0032I Strong branching done 1000 times (20061 iterations), fathomed 9 nodes and fixed 51 variables
Cbc0035I Maximum depth 31, 192 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 114 (-38) columns and 1822 (-1481) elements
Clp1000I sum of infeasibilities 6.42279e-08 - average 6.23572e-10, 28 fixed columns
Coin0506I Presolve 78 (-25) rows, 86 (-28) columns and 1142 (-680) elements
Clp0006I 0  Obj 54.666834 Dual inf 3.7370951 (85)
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.0780372 - largest nonzero change 1.4241087e-05 ( 0.0008514623%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 68.491659
Clp0000I Optimal - objective value 68.491659
Coin0511I After Postsolve, objective 68.491659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 68.491659
Clp0000I Optimal - objective value 68.491659
Clp0000I Optimal - objective value 68.491659
Clp0000I Optimal - objective value 68.491659
Coin0511I After Postsolve, objective 68.491659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.49165911 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 114 columns (114 integer (114 of which binary)) and 1824 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.40631
Cbc0038I Pass   1: suminf.    2.51003 (29) obj. -40.0762 iterations 12
Cbc0038I Pass   2: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass   3: suminf.    1.34199 (18) obj. -26.6942 iterations 11
Cbc0038I Solution found of -1.6902
Cbc0038I Rounding solution of -3.60236 is better than previous of -1.6902

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3.60236 to -9.5811 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.4624
Cbc0038I Pass   4: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass   5: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass   6: suminf.    1.43430 (19) obj. -27.6018 iterations 10
Cbc0038I Pass   7: suminf.    0.93577 (8) obj. -14.4624 iterations 21
Cbc0038I Pass   8: suminf.    0.87821 (6) obj. -17.358 iterations 2
Cbc0038I Pass   9: suminf.    0.64720 (3) obj. -14.4624 iterations 15
Cbc0038I Pass  10: suminf.    0.58186 (3) obj. -14.4624 iterations 1
Cbc0038I Pass  11: suminf.    0.64720 (3) obj. -14.4624 iterations 3
Cbc0038I Pass  12: suminf.    1.71456 (12) obj. -14.4624 iterations 24
Cbc0038I Pass  13: suminf.    1.68307 (11) obj. -14.4624 iterations 5
Cbc0038I Pass  14: suminf.    1.93045 (5) obj. -14.4624 iterations 17
Cbc0038I Pass  15: suminf.    0.82036 (3) obj. -14.4624 iterations 3
Cbc0038I Pass  16: suminf.    1.18345 (3) obj. -14.4624 iterations 3
Cbc0038I Pass  17: suminf.    3.39077 (21) obj. -14.4624 iterations 40
Cbc0038I Pass  18: suminf.    2.09389 (13) obj. -14.4624 iterations 15
Cbc0038I Pass  19: suminf.    1.63528 (10) obj. -17.0542 iterations 3
Cbc0038I Pass  20: suminf.    1.01746 (5) obj. -14.4624 iterations 18
Cbc0038I Pass  21: suminf.    1.01746 (5) obj. -14.4624 iterations 0
Cbc0038I Pass  22: suminf.    0.91056 (6) obj. -14.4624 iterations 15
Cbc0038I Pass  23: suminf.    0.50039 (7) obj. -14.4624 iterations 5
Cbc0038I Pass  24: suminf.    0.90999 (4) obj. -14.4624 iterations 18
Cbc0038I Pass  25: suminf.    0.44824 (2) obj. -14.4624 iterations 6
Cbc0038I Pass  26: suminf.    0.47056 (2) obj. -14.4624 iterations 2
Cbc0038I Pass  27: suminf.    1.99268 (13) obj. -14.4624 iterations 22
Cbc0038I Pass  28: suminf.    1.35677 (10) obj. -14.4624 iterations 6
Cbc0038I Pass  29: suminf.    0.95036 (8) obj. -15.0187 iterations 2
Cbc0038I Pass  30: suminf.    1.00617 (8) obj. -14.4624 iterations 23
Cbc0038I Pass  31: suminf.    1.00617 (8) obj. -14.4624 iterations 0
Cbc0038I Pass  32: suminf.    1.42503 (4) obj. -14.4624 iterations 14
Cbc0038I Pass  33: suminf.    1.42503 (4) obj. -14.4624 iterations 0
Cbc0038I Rounding solution of -9.7066 is better than previous of -9.5811

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 46 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -9.7066 to -10.9533 (0.08 seconds)
Cbc0038I Round again with cutoff of -23.2485
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass  34: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass  35: suminf.    1.69697 (16) obj. -23.2485 iterations 21
Cbc0038I Pass  36: suminf.    1.59735 (7) obj. -23.2485 iterations 24
Cbc0038I Pass  37: suminf.    1.04854 (6) obj. -23.5315 iterations 6
Cbc0038I Pass  38: suminf.    0.83054 (6) obj. -23.2485 iterations 9
Cbc0038I Pass  39: suminf.    0.82483 (7) obj. -23.2485 iterations 4
Cbc0038I Pass  40: suminf.    0.96210 (7) obj. -23.2485 iterations 8
Cbc0038I Pass  41: suminf.    0.96210 (7) obj. -23.2485 iterations 3
Cbc0038I Pass  42: suminf.    0.82483 (7) obj. -23.2485 iterations 6
Cbc0038I Pass  43: suminf.    1.74699 (13) obj. -23.2485 iterations 13
Cbc0038I Pass  44: suminf.    1.31200 (13) obj. -23.2485 iterations 7
Cbc0038I Pass  45: suminf.    2.22508 (9) obj. -23.2485 iterations 17
Cbc0038I Pass  46: suminf.    1.66904 (9) obj. -23.2485 iterations 6
Cbc0038I Pass  47: suminf.    1.54213 (7) obj. -23.2485 iterations 7
Cbc0038I Pass  48: suminf.    1.25543 (7) obj. -23.2485 iterations 5
Cbc0038I Pass  49: suminf.    1.04732 (7) obj. -23.2485 iterations 4
Cbc0038I Pass  50: suminf.    0.82483 (7) obj. -23.2485 iterations 4
Cbc0038I Pass  51: suminf.    0.96210 (7) obj. -23.2485 iterations 7
Cbc0038I Pass  52: suminf.    0.96210 (7) obj. -23.2485 iterations 2
Cbc0038I Pass  53: suminf.    0.82483 (7) obj. -23.2485 iterations 5
Cbc0038I Pass  54: suminf.    2.61263 (14) obj. -23.2485 iterations 18
Cbc0038I Pass  55: suminf.    1.17466 (10) obj. -24.1282 iterations 8
Cbc0038I Pass  56: suminf.    1.53527 (10) obj. -23.2485 iterations 16
Cbc0038I Pass  57: suminf.    1.53527 (10) obj. -23.2485 iterations 0
Cbc0038I Pass  58: suminf.    2.56093 (9) obj. -23.2485 iterations 12
Cbc0038I Pass  59: suminf.    1.98387 (13) obj. -23.2485 iterations 6
Cbc0038I Pass  60: suminf.    1.22500 (8) obj. -23.2485 iterations 10
Cbc0038I Pass  61: suminf.    1.18847 (8) obj. -23.2485 iterations 2
Cbc0038I Pass  62: suminf.    1.06081 (8) obj. -23.2485 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 28 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -10.9533 - took 0.08 seconds
Cbc0012I Integer solution of -10.95326 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 23 rows 28 columns
Cbc0031I 54 added rows had average density of 39.925926
Cbc0013I At root node, 54 cuts changed objective from -58.392995 to -21.502749 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12247 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 960 row cuts average 103.6 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 457 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1299 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 375 row cuts average 54.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.649 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.95326 best solution, best possible -21.502749 (2.42 seconds)
Cbc0012I Integer solution of -13.632713 found by rounding after 4101 iterations and 1 nodes (2.43 seconds)
Cbc0012I Integer solution of -14.577593 found by rounding after 4285 iterations and 14 nodes (2.47 seconds)
Cbc0012I Integer solution of -14.728213 found by rounding after 4355 iterations and 22 nodes (2.49 seconds)
Cbc0004I Integer solution of -14.824153 found after 4374 iterations and 22 nodes (2.49 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 47 rows 58 columns
Cbc0010I After 41 nodes, 8 on tree, -14.824153 best solution, best possible -21.08715 (3.24 seconds)
Cbc0010I After 120 nodes, 7 on tree, -14.824153 best solution, best possible -21.08715 (3.96 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 52 rows 63 columns
Cbc0010I After 201 nodes, 4 on tree, -14.824153 best solution, best possible -21.08715 (4.66 seconds)
Cbc0001I Search completed - best objective -14.824153, took 12223 iterations and 236 nodes (4.94 seconds)
Cbc0032I Strong branching done 2750 times (45951 iterations), fathomed 42 nodes and fixed 51 variables
Cbc0035I Maximum depth 18, 656 variables fixed on reduced cost
Total time (CPU seconds):       4.21   (Wallclock seconds):       4.95

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 2.93786e-05 - average 2.11357e-07, 6 fixed columns
Coin0506I Presolve 126 (-13) rows, 69 (-7) columns and 382 (-40) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 2.8090846 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Coin0511I After Postsolve, objective 45.649359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Clp0000I Optimal - objective value 45.649359
Coin0511I After Postsolve, objective 45.649359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.64935871 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.2352
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 1.62373 iterations 54
Cbc0038I Solution found of 1.62373
Cbc0038I Relaxing continuous gives 1.62373
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 1.62373 to -11.5888 (0.06 seconds)
Cbc0038I Round again with cutoff of -14.9949
Cbc0038I Pass   2: suminf.    2.24767 (11) obj. -14.9949 iterations 17
Cbc0038I Pass   3: suminf.    0.89283 (5) obj. -14.9949 iterations 20
Cbc0038I Pass   4: suminf.    0.74250 (7) obj. -14.9949 iterations 6
Cbc0038I Pass   5: suminf.    2.90819 (8) obj. -14.9949 iterations 19
Cbc0038I Pass   6: suminf.    2.91128 (8) obj. -14.9949 iterations 2
Cbc0038I Pass   7: suminf.    0.56443 (4) obj. -14.9949 iterations 13
Cbc0038I Pass   8: suminf.    0.56443 (4) obj. -14.9949 iterations 0
Cbc0038I Pass   9: suminf.    2.21096 (6) obj. -14.9949 iterations 12
Cbc0038I Pass  10: suminf.    2.21096 (6) obj. -14.9949 iterations 0
Cbc0038I Pass  11: suminf.    2.83176 (10) obj. -14.9949 iterations 20
Cbc0038I Pass  12: suminf.    2.35431 (7) obj. -14.9949 iterations 8
Cbc0038I Pass  13: suminf.    0.87686 (4) obj. -14.9949 iterations 11
Cbc0038I Pass  14: suminf.    1.05408 (4) obj. -14.9949 iterations 10
Cbc0038I Pass  15: suminf.    1.05408 (4) obj. -14.9949 iterations 0
Cbc0038I Pass  16: suminf.    0.91608 (3) obj. -14.9949 iterations 9
Cbc0038I Pass  17: suminf.    0.53142 (2) obj. -14.9949 iterations 2
Cbc0038I Pass  18: suminf.    1.54803 (7) obj. -14.9949 iterations 17
Cbc0038I Pass  19: suminf.    1.32640 (6) obj. -14.9949 iterations 4
Cbc0038I Pass  20: suminf.    1.38004 (4) obj. -14.9949 iterations 14
Cbc0038I Pass  21: suminf.    1.46123 (4) obj. -14.9949 iterations 5
Cbc0038I Pass  22: suminf.    1.46123 (4) obj. -14.9949 iterations 0
Cbc0038I Pass  23: suminf.    1.87121 (4) obj. -14.9949 iterations 4
Cbc0038I Pass  24: suminf.    3.52119 (13) obj. -14.9949 iterations 24
Cbc0038I Pass  25: suminf.    2.30395 (11) obj. -14.9949 iterations 6
Cbc0038I Pass  26: suminf.    2.26252 (10) obj. -14.9949 iterations 2
Cbc0038I Pass  27: suminf.    2.22824 (7) obj. -14.9949 iterations 24
Cbc0038I Pass  28: suminf.    2.22824 (7) obj. -14.9949 iterations 0
Cbc0038I Pass  29: suminf.    1.09672 (5) obj. -14.9949 iterations 13
Cbc0038I Pass  30: suminf.    0.79940 (4) obj. -14.9949 iterations 4
Cbc0038I Pass  31: suminf.    1.68120 (4) obj. -14.9949 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -11.5888 to -12.9814 (0.13 seconds)
Cbc0038I Round again with cutoff of -21.1258
Cbc0038I Pass  31: suminf.    3.44816 (13) obj. -21.1258 iterations 5
Cbc0038I Pass  32: suminf.    1.27984 (6) obj. -21.1258 iterations 21
Cbc0038I Pass  33: suminf.    1.95741 (6) obj. -21.1258 iterations 10
Cbc0038I Pass  34: suminf.    1.04063 (4) obj. -21.1258 iterations 2
Cbc0038I Pass  35: suminf.    1.04063 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  36: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  37: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  38: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  39: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  40: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  41: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  42: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  43: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  44: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  45: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  46: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  47: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  48: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  49: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  50: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  51: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  52: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  53: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  54: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I Pass  55: suminf.    0.49834 (4) obj. -21.1258 iterations 7
Cbc0038I Pass  56: suminf.    1.14668 (4) obj. -21.1258 iterations 9
Cbc0038I Pass  57: suminf.    1.14668 (4) obj. -21.1258 iterations 0
Cbc0038I Pass  58: suminf.    1.23811 (5) obj. -21.1258 iterations 7
Cbc0038I Pass  59: suminf.    1.04063 (4) obj. -21.1258 iterations 1
Cbc0038I Pass  60: suminf.    1.83319 (5) obj. -21.1258 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 88 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -12.9814 - took 0.15 seconds
Cbc0012I Integer solution of -12.98145 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 86 rows 48 columns
Cbc0031I 23 added rows had average density of 66.608696
Cbc0013I At root node, 23 cuts changed objective from -45.649359 to -36.701057 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11141 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1584 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 62 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.98145 best solution, best possible -36.701057 (1.12 seconds)
Cbc0012I Integer solution of -13.152073 found by DiveCoefficient after 7572 iterations and 9 nodes (1.31 seconds)
Cbc0012I Integer solution of -14.728213 found by rounding after 8197 iterations and 28 nodes (1.40 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 15 rows 13 columns
Cbc0016I Integer solution of -14.824153 found by strong branching after 9732 iterations and 91 nodes (1.52 seconds)
Cbc0001I Search completed - best objective -14.824153, took 10159 iterations and 100 nodes (1.53 seconds)
Cbc0032I Strong branching done 1000 times (20061 iterations), fathomed 9 nodes and fixed 51 variables
Cbc0035I Maximum depth 31, 192 variables fixed on reduced cost
Total time (CPU seconds):       1.47   (Wallclock seconds):       1.54

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 114 (-39) columns and 1822 (-1482) elements
Clp1000I sum of infeasibilities 6.42279e-08 - average 6.23572e-10, 28 fixed columns
Coin0506I Presolve 78 (-25) rows, 86 (-28) columns and 1142 (-680) elements
Clp0006I 0  Obj 54.666834 Dual inf 3.7370951 (85)
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.0780372 - largest nonzero change 1.4241087e-05 ( 0.0008514623%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 68.491659
Clp0000I Optimal - objective value 68.491659
Coin0511I After Postsolve, objective 68.491659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 68.491659
Clp0000I Optimal - objective value 68.491659
Clp0000I Optimal - objective value 68.491659
Clp0000I Optimal - objective value 68.491659
Coin0511I After Postsolve, objective 68.491659, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.49165911 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 114 columns (114 integer (114 of which binary)) and 1824 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.462%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.40631
Cbc0038I Pass   1: suminf.    2.51003 (29) obj. -40.0762 iterations 12
Cbc0038I Pass   2: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass   3: suminf.    1.34199 (18) obj. -26.6942 iterations 11
Cbc0038I Solution found of -1.6902
Cbc0038I Rounding solution of -3.60236 is better than previous of -1.6902

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3.60236 to -9.5811 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.4624
Cbc0038I Pass   4: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass   5: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass   6: suminf.    1.43430 (19) obj. -27.6018 iterations 10
Cbc0038I Pass   7: suminf.    0.93577 (8) obj. -14.4624 iterations 21
Cbc0038I Pass   8: suminf.    0.87821 (6) obj. -17.358 iterations 2
Cbc0038I Pass   9: suminf.    0.64720 (3) obj. -14.4624 iterations 15
Cbc0038I Pass  10: suminf.    0.58186 (3) obj. -14.4624 iterations 1
Cbc0038I Pass  11: suminf.    0.64720 (3) obj. -14.4624 iterations 3
Cbc0038I Pass  12: suminf.    1.71456 (12) obj. -14.4624 iterations 24
Cbc0038I Pass  13: suminf.    1.68307 (11) obj. -14.4624 iterations 5
Cbc0038I Pass  14: suminf.    1.93045 (5) obj. -14.4624 iterations 17
Cbc0038I Pass  15: suminf.    0.82036 (3) obj. -14.4624 iterations 3
Cbc0038I Pass  16: suminf.    1.18345 (3) obj. -14.4624 iterations 3
Cbc0038I Pass  17: suminf.    3.39077 (21) obj. -14.4624 iterations 40
Cbc0038I Pass  18: suminf.    2.09389 (13) obj. -14.4624 iterations 15
Cbc0038I Pass  19: suminf.    1.63528 (10) obj. -17.0542 iterations 3
Cbc0038I Pass  20: suminf.    1.01746 (5) obj. -14.4624 iterations 18
Cbc0038I Pass  21: suminf.    1.01746 (5) obj. -14.4624 iterations 0
Cbc0038I Pass  22: suminf.    0.91056 (6) obj. -14.4624 iterations 15
Cbc0038I Pass  23: suminf.    0.50039 (7) obj. -14.4624 iterations 5
Cbc0038I Pass  24: suminf.    0.90999 (4) obj. -14.4624 iterations 18
Cbc0038I Pass  25: suminf.    0.44824 (2) obj. -14.4624 iterations 6
Cbc0038I Pass  26: suminf.    0.47056 (2) obj. -14.4624 iterations 2
Cbc0038I Pass  27: suminf.    1.99268 (13) obj. -14.4624 iterations 22
Cbc0038I Pass  28: suminf.    1.35677 (10) obj. -14.4624 iterations 6
Cbc0038I Pass  29: suminf.    0.95036 (8) obj. -15.0187 iterations 2
Cbc0038I Pass  30: suminf.    1.00617 (8) obj. -14.4624 iterations 23
Cbc0038I Pass  31: suminf.    1.00617 (8) obj. -14.4624 iterations 0
Cbc0038I Pass  32: suminf.    1.42503 (4) obj. -14.4624 iterations 14
Cbc0038I Pass  33: suminf.    1.42503 (4) obj. -14.4624 iterations 0
Cbc0038I Rounding solution of -9.7066 is better than previous of -9.5811

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 46 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -9.7066 to -10.9533 (0.08 seconds)
Cbc0038I Round again with cutoff of -23.2485
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass  34: suminf.    2.51003 (29) obj. -40.0762 iterations 0
Cbc0038I Pass  35: suminf.    1.69697 (16) obj. -23.2485 iterations 21
Cbc0038I Pass  36: suminf.    1.59735 (7) obj. -23.2485 iterations 24
Cbc0038I Pass  37: suminf.    1.04854 (6) obj. -23.5315 iterations 6
Cbc0038I Pass  38: suminf.    0.83054 (6) obj. -23.2485 iterations 9
Cbc0038I Pass  39: suminf.    0.82483 (7) obj. -23.2485 iterations 4
Cbc0038I Pass  40: suminf.    0.96210 (7) obj. -23.2485 iterations 8
Cbc0038I Pass  41: suminf.    0.96210 (7) obj. -23.2485 iterations 3
Cbc0038I Pass  42: suminf.    0.82483 (7) obj. -23.2485 iterations 6
Cbc0038I Pass  43: suminf.    1.74699 (13) obj. -23.2485 iterations 13
Cbc0038I Pass  44: suminf.    1.31200 (13) obj. -23.2485 iterations 7
Cbc0038I Pass  45: suminf.    2.22508 (9) obj. -23.2485 iterations 17
Cbc0038I Pass  46: suminf.    1.66904 (9) obj. -23.2485 iterations 6
Cbc0038I Pass  47: suminf.    1.54213 (7) obj. -23.2485 iterations 7
Cbc0038I Pass  48: suminf.    1.25543 (7) obj. -23.2485 iterations 5
Cbc0038I Pass  49: suminf.    1.04732 (7) obj. -23.2485 iterations 4
Cbc0038I Pass  50: suminf.    0.82483 (7) obj. -23.2485 iterations 4
Cbc0038I Pass  51: suminf.    0.96210 (7) obj. -23.2485 iterations 7
Cbc0038I Pass  52: suminf.    0.96210 (7) obj. -23.2485 iterations 2
Cbc0038I Pass  53: suminf.    0.82483 (7) obj. -23.2485 iterations 5
Cbc0038I Pass  54: suminf.    2.61263 (14) obj. -23.2485 iterations 18
Cbc0038I Pass  55: suminf.    1.17466 (10) obj. -24.1282 iterations 8
Cbc0038I Pass  56: suminf.    1.53527 (10) obj. -23.2485 iterations 16
Cbc0038I Pass  57: suminf.    1.53527 (10) obj. -23.2485 iterations 0
Cbc0038I Pass  58: suminf.    2.56093 (9) obj. -23.2485 iterations 12
Cbc0038I Pass  59: suminf.    1.98387 (13) obj. -23.2485 iterations 6
Cbc0038I Pass  60: suminf.    1.22500 (8) obj. -23.2485 iterations 10
Cbc0038I Pass  61: suminf.    1.18847 (8) obj. -23.2485 iterations 2
Cbc0038I Pass  62: suminf.    1.06081 (8) obj. -23.2485 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 28 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -10.9533 - took 0.08 seconds
Cbc0012I Integer solution of -10.95326 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 23 rows 28 columns
Cbc0031I 54 added rows had average density of 39.925926
Cbc0013I At root node, 54 cuts changed objective from -58.392995 to -21.502749 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12247 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 960 row cuts average 103.6 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 457 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1299 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 375 row cuts average 54.6 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.696 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -10.95326 best solution, best possible -21.502749 (2.64 seconds)
Cbc0012I Integer solution of -13.632713 found by rounding after 4101 iterations and 1 nodes (2.64 seconds)
Cbc0012I Integer solution of -14.577593 found by rounding after 4285 iterations and 14 nodes (2.69 seconds)
Cbc0012I Integer solution of -14.728213 found by rounding after 4355 iterations and 22 nodes (2.70 seconds)
Cbc0004I Integer solution of -14.824153 found after 4374 iterations and 22 nodes (2.70 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 47 rows 58 columns
Cbc0010I After 41 nodes, 8 on tree, -14.824153 best solution, best possible -21.08715 (3.44 seconds)
Cbc0010I After 115 nodes, 6 on tree, -14.824153 best solution, best possible -21.08715 (4.15 seconds)
Cbc0010I After 192 nodes, 5 on tree, -14.824153 best solution, best possible -21.08715 (4.87 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 52 rows 63 columns
Cbc0001I Search completed - best objective -14.824153, took 12223 iterations and 236 nodes (5.27 seconds)
Cbc0032I Strong branching done 2750 times (45951 iterations), fathomed 42 nodes and fixed 51 variables
Cbc0035I Maximum depth 18, 656 variables fixed on reduced cost
Total time (CPU seconds):       4.43   (Wallclock seconds):       5.28

