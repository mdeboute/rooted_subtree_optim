Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 19 (-6) columns and 93 (-42) elements
Clp1000I sum of infeasibilities 1.57049e-05 - average 5.06611e-07, 0 fixed columns
Coin0506I Presolve 31 (0) rows, 19 (0) columns and 93 (0) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 160.4271
Clp0000I Optimal - objective value 160.4271
Coin0511I After Postsolve, objective 160.4271, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 160.4271
Clp0000I Optimal - objective value 160.4271
Clp0000I Optimal - objective value 160.4271
Coin0511I After Postsolve, objective 160.4271, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 160.4271018 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 93 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.76639
Cbc0038I Pass   1: suminf.    0.90537 (4) obj. -111.094 iterations 18
Cbc0038I Pass   2: suminf.    0.90537 (4) obj. -111.094 iterations 0
Cbc0038I Solution found of -48.2417
Cbc0038I Relaxing continuous gives -48.2417
Cbc0038I Rounding solution of -88.4623 is better than previous of -48.2417

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -88.4623 to -111.871 (0.02 seconds)
Cbc0038I Round again with cutoff of -116.714
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.94763 (5) obj. -116.714 iterations 1
Cbc0038I Pass   4: suminf.    0.94763 (5) obj. -116.714 iterations 0
Cbc0038I Pass   5: suminf.    0.83515 (5) obj. -116.714 iterations 8
Cbc0038I Pass   6: suminf.    0.44366 (3) obj. -116.714 iterations 2
Cbc0038I Pass   7: suminf.    0.14507 (3) obj. -116.714 iterations 3
Cbc0038I Pass   8: suminf.    0.54105 (5) obj. -116.714 iterations 6
Cbc0038I Pass   9: suminf.    0.22339 (3) obj. -116.714 iterations 2
Cbc0038I Pass  10: suminf.    0.68652 (5) obj. -116.714 iterations 7
Cbc0038I Pass  11: suminf.    0.66404 (4) obj. -116.714 iterations 1
Cbc0038I Pass  12: suminf.    0.64707 (5) obj. -116.714 iterations 5
Cbc0038I Pass  13: suminf.    0.61096 (4) obj. -116.714 iterations 1
Cbc0038I Pass  14: suminf.    0.87711 (4) obj. -116.714 iterations 4
Cbc0038I Pass  15: suminf.    0.23126 (3) obj. -116.714 iterations 3
Cbc0038I Pass  16: suminf.    0.83468 (5) obj. -116.714 iterations 3
Cbc0038I Pass  17: suminf.    0.81436 (4) obj. -116.714 iterations 1
Cbc0038I Pass  18: suminf.    0.69047 (5) obj. -116.714 iterations 3
Cbc0038I Pass  19: suminf.    0.67105 (4) obj. -116.714 iterations 1
Cbc0038I Pass  20: suminf.    0.50210 (4) obj. -116.714 iterations 2
Cbc0038I Pass  21: suminf.    0.49337 (3) obj. -116.714 iterations 1
Cbc0038I Pass  22: suminf.    0.92598 (3) obj. -116.714 iterations 2
Cbc0038I Pass  23: suminf.    0.42947 (4) obj. -116.714 iterations 3
Cbc0038I Pass  24: suminf.    0.50210 (4) obj. -116.714 iterations 4
Cbc0038I Pass  25: suminf.    0.84924 (3) obj. -116.714 iterations 3
Cbc0038I Pass  26: suminf.    0.84924 (3) obj. -116.714 iterations 0
Cbc0038I Pass  27: suminf.    0.50210 (4) obj. -116.714 iterations 3
Cbc0038I Pass  28: suminf.    0.49337 (3) obj. -116.714 iterations 1
Cbc0038I Pass  29: suminf.    0.92598 (3) obj. -116.714 iterations 2
Cbc0038I Pass  30: suminf.    0.42947 (4) obj. -116.714 iterations 3
Cbc0038I Pass  31: suminf.    0.50210 (4) obj. -116.714 iterations 4
Cbc0038I Pass  32: suminf.    1.31939 (5) obj. -116.714 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -111.871 - took 0.03 seconds
Cbc0012I Integer solution of -111.87074 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 11 added rows had average density of 12
Cbc0013I At root node, 11 cuts changed objective from -160.30225 to -113.39716 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 242 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 317 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 167 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -111.870735, took 1017 iterations and 10 nodes (0.14 seconds)
Cbc0032I Strong branching done 52 times (184 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-13) rows, 40 (-6) columns and 300 (-88) elements
Clp1000I sum of infeasibilities 8.20882e-06 - average 2.34538e-07, 12 fixed columns
Coin0506I Presolve 24 (-11) rows, 27 (-13) columns and 148 (-152) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 0.17189081 - largest nonzero change 0 ( 0%) - largest zero change 2.4930908e-05
Clp0000I Optimal - objective value 389.91895
Clp0000I Optimal - objective value 389.91895
Coin0511I After Postsolve, objective 389.91895, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0164146 - largest nonzero change 1.7247382e-05 ( 0.0017247382%) - largest zero change 2.7540308e-05
Clp0000I Optimal - objective value 391.7336
Clp0000I Optimal - objective value 391.7336
Clp0000I Optimal - objective value 391.7336
Coin0511I After Postsolve, objective 391.7336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 391.7336034 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 37 columns (37 integer (37 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.505%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.04259
Cbc0038I Pass   1: suminf.    0.88773 (6) obj. -72.5893 iterations 10
Cbc0038I Pass   2: suminf.    0.88773 (6) obj. -72.5893 iterations 1
Cbc0038I Solution found of -49.0463
Cbc0038I Rounding solution of -57.3708 is better than previous of -49.0463

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -57.3708 to -208.883 (0.01 seconds)
Cbc0038I Round again with cutoff of -215.089
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.64180 (14) obj. -244.481 iterations 2
Cbc0038I Pass   4: suminf.    3.64180 (14) obj. -244.481 iterations 0
Cbc0038I Pass   5: suminf.    0.52106 (2) obj. -215.089 iterations 27
Cbc0038I Pass   6: suminf.    0.53194 (2) obj. -217.773 iterations 1
Cbc0038I Pass   7: suminf.    0.49305 (2) obj. -215.089 iterations 1
Cbc0038I Pass   8: suminf.    0.52106 (2) obj. -215.089 iterations 1
Cbc0038I Pass   9: suminf.    2.41232 (7) obj. -238.029 iterations 11
Cbc0038I Pass  10: suminf.    1.06570 (4) obj. -223.67 iterations 4
Cbc0038I Pass  11: suminf.    0.49048 (2) obj. -215.089 iterations 7
Cbc0038I Pass  12: suminf.    0.57625 (2) obj. -216.976 iterations 1
Cbc0038I Pass  13: suminf.    2.32821 (5) obj. -229.528 iterations 8
Cbc0038I Pass  14: suminf.    2.32821 (5) obj. -229.528 iterations 3
Cbc0038I Pass  15: suminf.    3.17087 (9) obj. -246.829 iterations 11
Cbc0038I Pass  16: suminf.    1.62958 (5) obj. -227.805 iterations 5
Cbc0038I Pass  17: suminf.    0.37496 (2) obj. -215.089 iterations 7
Cbc0038I Pass  18: suminf.    0.37496 (2) obj. -215.089 iterations 1
Cbc0038I Pass  19: suminf.    0.54819 (2) obj. -218.9 iterations 1
Cbc0038I Pass  20: suminf.    1.21096 (4) obj. -215.089 iterations 8
Cbc0038I Pass  21: suminf.    0.96913 (4) obj. -215.089 iterations 5
Cbc0038I Pass  22: suminf.    0.34108 (2) obj. -227.791 iterations 3
Cbc0038I Solution found of -219.923
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 6 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -230.127
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  23: suminf.    3.64180 (14) obj. -244.481 iterations 0
Cbc0038I Pass  24: suminf.    3.64180 (14) obj. -244.481 iterations 0
Cbc0038I Pass  25: suminf.    1.06076 (3) obj. -230.127 iterations 28
Cbc0038I Pass  26: suminf.    0.84733 (4) obj. -230.127 iterations 1
Cbc0038I Pass  27: suminf.    1.18619 (3) obj. -230.127 iterations 2
Cbc0038I Pass  28: suminf.    1.18619 (3) obj. -230.127 iterations 0
Cbc0038I Pass  29: suminf.    0.84733 (4) obj. -230.127 iterations 3
Cbc0038I Pass  30: suminf.    0.99845 (3) obj. -230.127 iterations 3
Cbc0038I Pass  31: suminf.    0.99845 (3) obj. -230.127 iterations 0
Cbc0038I Pass  32: suminf.    1.31389 (4) obj. -236.692 iterations 2
Cbc0038I Pass  33: suminf.    0.83525 (3) obj. -230.127 iterations 2
Cbc0038I Pass  34: suminf.    0.99845 (3) obj. -230.127 iterations 3
Cbc0038I Pass  35: suminf.    3.75625 (11) obj. -230.127 iterations 12
Cbc0038I Pass  36: suminf.    1.88907 (5) obj. -230.127 iterations 8
Cbc0038I Pass  37: suminf.    1.55230 (4) obj. -230.127 iterations 1
Cbc0038I Pass  38: suminf.    0.80211 (2) obj. -230.127 iterations 5
Cbc0038I Pass  39: suminf.    0.80128 (2) obj. -230.127 iterations 1
Cbc0038I Pass  40: suminf.    0.76361 (3) obj. -233.891 iterations 2
Cbc0038I Pass  41: suminf.    0.59254 (3) obj. -230.127 iterations 1
Cbc0038I Pass  42: suminf.    0.80211 (2) obj. -230.127 iterations 2
Cbc0038I Pass  43: suminf.    2.12703 (11) obj. -230.127 iterations 10
Cbc0038I Pass  44: suminf.    2.02794 (6) obj. -230.127 iterations 5
Cbc0038I Pass  45: suminf.    1.98056 (6) obj. -236.558 iterations 4
Cbc0038I Pass  46: suminf.    1.56550 (5) obj. -230.127 iterations 2
Cbc0038I Pass  47: suminf.    1.57118 (4) obj. -230.127 iterations 6
Cbc0038I Pass  48: suminf.    1.29361 (5) obj. -230.127 iterations 1
Cbc0038I Pass  49: suminf.    1.86712 (4) obj. -230.127 iterations 2
Cbc0038I Pass  50: suminf.    1.86712 (4) obj. -230.127 iterations 0
Cbc0038I Pass  51: suminf.    1.29361 (5) obj. -230.127 iterations 4
Cbc0038I Pass  52: suminf.    1.18639 (6) obj. -230.127 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -219.923 to -224.973 (0.03 seconds)
Cbc0038I Round again with cutoff of -242.372
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  52: suminf.    3.64180 (14) obj. -244.481 iterations 0
Cbc0038I Pass  53: suminf.    3.64180 (14) obj. -244.481 iterations 0
Cbc0038I Pass  54: suminf.    1.61118 (5) obj. -242.372 iterations 26
Cbc0038I Pass  55: suminf.    1.43574 (5) obj. -242.806 iterations 2
Cbc0038I Pass  56: suminf.    1.89379 (6) obj. -242.372 iterations 4
Cbc0038I Pass  57: suminf.    1.89379 (6) obj. -242.372 iterations 0
Cbc0038I Pass  58: suminf.    1.51243 (5) obj. -242.372 iterations 5
Cbc0038I Pass  59: suminf.    2.06726 (7) obj. -242.372 iterations 9
Cbc0038I Pass  60: suminf.    2.01502 (7) obj. -242.372 iterations 2
Cbc0038I Pass  61: suminf.    2.25782 (5) obj. -242.372 iterations 4
Cbc0038I Pass  62: suminf.    1.58185 (6) obj. -242.372 iterations 6
Cbc0038I Pass  63: suminf.    2.30633 (5) obj. -242.372 iterations 2
Cbc0038I Pass  64: suminf.    3.41139 (12) obj. -242.372 iterations 11
Cbc0038I Pass  65: suminf.    2.87871 (9) obj. -242.372 iterations 6
Cbc0038I Pass  66: suminf.    2.87871 (9) obj. -242.372 iterations 0
Cbc0038I Pass  67: suminf.    1.61145 (5) obj. -242.372 iterations 7
Cbc0038I Pass  68: suminf.    1.49414 (6) obj. -242.372 iterations 1
Cbc0038I Pass  69: suminf.    2.00728 (5) obj. -242.372 iterations 2
Cbc0038I Pass  70: suminf.    1.49414 (6) obj. -242.372 iterations 2
Cbc0038I Pass  71: suminf.    2.01335 (6) obj. -242.372 iterations 6
Cbc0038I Pass  72: suminf.    2.01335 (6) obj. -242.372 iterations 1
Cbc0038I Pass  73: suminf.    1.29974 (5) obj. -242.372 iterations 6
Cbc0038I Pass  74: suminf.    1.29974 (5) obj. -242.372 iterations 0
Cbc0038I Pass  75: suminf.    1.66917 (4) obj. -242.372 iterations 2
Cbc0038I Pass  76: suminf.    1.27708 (4) obj. -242.372 iterations 1
Cbc0038I Pass  77: suminf.    3.53186 (9) obj. -242.372 iterations 8
Cbc0038I Pass  78: suminf.    3.00822 (9) obj. -242.372 iterations 4
Cbc0038I Pass  79: suminf.    2.07480 (7) obj. -242.372 iterations 3
Cbc0038I Pass  80: suminf.    1.99942 (6) obj. -242.372 iterations 3
Cbc0038I Pass  81: suminf.    1.90725 (7) obj. -242.372 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 37 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -224.973 - took 0.04 seconds
Cbc0012I Integer solution of -224.9733 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 32 rows 37 columns, reduced to 6 rows 9 columns
Cbc0031I 5 added rows had average density of 14
Cbc0013I At root node, 5 cuts changed objective from -234.78425 to -225.60689 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 347 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 78 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 150 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.834 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -224.9733 best solution, best possible -225.60689 (1.56 seconds)
Cbc0001I Search completed - best objective -224.9733049999999, took 1097 iterations and 8 nodes (1.58 seconds)
Cbc0032I Strong branching done 52 times (177 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-18) rows, 19 (-6) columns and 93 (-42) elements
Clp1000I sum of infeasibilities 1.57049e-05 - average 5.06611e-07, 0 fixed columns
Coin0506I Presolve 31 (0) rows, 19 (0) columns and 93 (0) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 160.4271
Clp0000I Optimal - objective value 160.4271
Coin0511I After Postsolve, objective 160.4271, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 160.4271
Clp0000I Optimal - objective value 160.4271
Clp0000I Optimal - objective value 160.4271
Coin0511I After Postsolve, objective 160.4271, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 160.4271018 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 19 columns (18 integer (18 of which binary)) and 93 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.76639
Cbc0038I Pass   1: suminf.    0.90537 (4) obj. -111.094 iterations 18
Cbc0038I Pass   2: suminf.    0.90537 (4) obj. -111.094 iterations 0
Cbc0038I Solution found of -48.2417
Cbc0038I Relaxing continuous gives -48.2417
Cbc0038I Rounding solution of -88.4623 is better than previous of -48.2417

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -88.4623 to -111.871 (0.02 seconds)
Cbc0038I Round again with cutoff of -116.714
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.94763 (5) obj. -116.714 iterations 1
Cbc0038I Pass   4: suminf.    0.94763 (5) obj. -116.714 iterations 0
Cbc0038I Pass   5: suminf.    0.83515 (5) obj. -116.714 iterations 8
Cbc0038I Pass   6: suminf.    0.44366 (3) obj. -116.714 iterations 2
Cbc0038I Pass   7: suminf.    0.14507 (3) obj. -116.714 iterations 3
Cbc0038I Pass   8: suminf.    0.54105 (5) obj. -116.714 iterations 6
Cbc0038I Pass   9: suminf.    0.22339 (3) obj. -116.714 iterations 2
Cbc0038I Pass  10: suminf.    0.68652 (5) obj. -116.714 iterations 7
Cbc0038I Pass  11: suminf.    0.66404 (4) obj. -116.714 iterations 1
Cbc0038I Pass  12: suminf.    0.64707 (5) obj. -116.714 iterations 5
Cbc0038I Pass  13: suminf.    0.61096 (4) obj. -116.714 iterations 1
Cbc0038I Pass  14: suminf.    0.87711 (4) obj. -116.714 iterations 4
Cbc0038I Pass  15: suminf.    0.23126 (3) obj. -116.714 iterations 3
Cbc0038I Pass  16: suminf.    0.83468 (5) obj. -116.714 iterations 3
Cbc0038I Pass  17: suminf.    0.81436 (4) obj. -116.714 iterations 1
Cbc0038I Pass  18: suminf.    0.69047 (5) obj. -116.714 iterations 3
Cbc0038I Pass  19: suminf.    0.67105 (4) obj. -116.714 iterations 1
Cbc0038I Pass  20: suminf.    0.50210 (4) obj. -116.714 iterations 2
Cbc0038I Pass  21: suminf.    0.49337 (3) obj. -116.714 iterations 1
Cbc0038I Pass  22: suminf.    0.92598 (3) obj. -116.714 iterations 2
Cbc0038I Pass  23: suminf.    0.42947 (4) obj. -116.714 iterations 3
Cbc0038I Pass  24: suminf.    0.50210 (4) obj. -116.714 iterations 4
Cbc0038I Pass  25: suminf.    0.84924 (3) obj. -116.714 iterations 3
Cbc0038I Pass  26: suminf.    0.84924 (3) obj. -116.714 iterations 0
Cbc0038I Pass  27: suminf.    0.50210 (4) obj. -116.714 iterations 3
Cbc0038I Pass  28: suminf.    0.49337 (3) obj. -116.714 iterations 1
Cbc0038I Pass  29: suminf.    0.92598 (3) obj. -116.714 iterations 2
Cbc0038I Pass  30: suminf.    0.42947 (4) obj. -116.714 iterations 3
Cbc0038I Pass  31: suminf.    0.50210 (4) obj. -116.714 iterations 4
Cbc0038I Pass  32: suminf.    1.31939 (5) obj. -116.714 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 19 columns, reduced to 26 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -111.871 - took 0.03 seconds
Cbc0012I Integer solution of -111.87074 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 11 added rows had average density of 12
Cbc0013I At root node, 11 cuts changed objective from -160.30225 to -113.39716 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 242 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 317 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 167 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -111.870735, took 1017 iterations and 10 nodes (0.15 seconds)
Cbc0032I Strong branching done 52 times (184 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-20) rows, 34 (-13) columns and 246 (-143) elements
Clp1000I sum of infeasibilities 2.18477e-07 - average 7.53368e-09, 6 fixed columns
Coin0506I Presolve 23 (-6) rows, 27 (-7) columns and 133 (-113) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 2.7619674 - largest nonzero change 1.6021485e-05 ( 0.00096271338%) - largest zero change 2.671199e-05
Clp0000I Optimal - objective value 200.90096
Clp0000I Optimal - objective value 200.90096
Coin0511I After Postsolve, objective 200.90096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 200.90096
Clp0000I Optimal - objective value 200.90096
Clp0000I Optimal - objective value 200.90096
Coin0511I After Postsolve, objective 200.90096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 200.9009644 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 36 columns (36 integer (36 of which binary)) and 255 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.486%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.63705
Cbc0038I Pass   1: suminf.    1.92727 (10) obj. -71.981 iterations 10
Cbc0038I Pass   2: suminf.    1.92727 (10) obj. -71.981 iterations 0
Cbc0038I Solution found of -40.4162
Cbc0038I Rounding solution of -66.0457 is better than previous of -40.4162

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 36 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -66.0457 to -100.227 (0.01 seconds)
Cbc0038I Round again with cutoff of -107.183
Cbc0038I Pass   3: suminf.    3.30904 (13) obj. -107.183 iterations 1
Cbc0038I Pass   4: suminf.    3.30904 (13) obj. -107.183 iterations 0
Cbc0038I Pass   5: suminf.    0.59896 (2) obj. -107.183 iterations 20
Cbc0038I Pass   6: suminf.    0.50000 (1) obj. -112.383 iterations 1
Cbc0038I Pass   7: suminf.    0.42463 (1) obj. -107.183 iterations 1
Cbc0038I Pass   8: suminf.    1.67894 (7) obj. -107.183 iterations 9
Cbc0038I Pass   9: suminf.    1.55417 (5) obj. -111.428 iterations 2
Cbc0038I Pass  10: suminf.    0.23661 (1) obj. -107.183 iterations 6
Cbc0038I Pass  11: suminf.    0.50000 (1) obj. -125.357 iterations 1
Cbc0038I Pass  12: suminf.    1.38163 (4) obj. -107.183 iterations 3
Cbc0038I Pass  13: suminf.    2.24386 (8) obj. -107.183 iterations 9
Cbc0038I Pass  14: suminf.    2.17500 (6) obj. -109.38 iterations 5
Cbc0038I Pass  15: suminf.    0.87410 (2) obj. -107.183 iterations 6
Cbc0038I Pass  16: suminf.    0.47125 (3) obj. -125.832 iterations 3
Cbc0038I Pass  17: suminf.    0.16543 (1) obj. -107.183 iterations 2
Cbc0038I Pass  18: suminf.    0.90938 (4) obj. -107.183 iterations 3
Cbc0038I Pass  19: suminf.    0.89731 (3) obj. -107.183 iterations 1
Cbc0038I Pass  20: suminf.    2.66847 (8) obj. -113.703 iterations 10
Cbc0038I Pass  21: suminf.    2.22179 (8) obj. -112.74 iterations 2
Cbc0038I Pass  22: suminf.    0.45738 (2) obj. -107.183 iterations 10
Cbc0038I Pass  23: suminf.    0.45738 (2) obj. -107.183 iterations 0
Cbc0038I Pass  24: suminf.    0.53716 (2) obj. -108.938 iterations 1
Cbc0038I Pass  25: suminf.    1.83513 (6) obj. -107.183 iterations 6
Cbc0038I Pass  26: suminf.    1.82319 (5) obj. -107.183 iterations 1
Cbc0038I Pass  27: suminf.    0.44444 (1) obj. -117.714 iterations 4
Cbc0038I Pass  28: suminf.    0.29181 (1) obj. -107.183 iterations 1
Cbc0038I Pass  29: suminf.    3.25054 (10) obj. -107.183 iterations 15
Cbc0038I Pass  30: suminf.    3.06015 (9) obj. -107.183 iterations 2
Cbc0038I Pass  31: suminf.    1.09732 (3) obj. -107.183 iterations 9
Cbc0038I Pass  32: suminf.    0.35527 (1) obj. -107.183 iterations 2
Cbc0038I Rounding solution of -109.605 is better than previous of -100.227

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 36 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -121.641
Cbc0038I Pass  32: suminf.    3.88764 (13) obj. -121.641 iterations 1
Cbc0038I Pass  33: suminf.    3.47828 (13) obj. -121.641 iterations 1
Cbc0038I Pass  34: suminf.    0.96241 (3) obj. -121.641 iterations 16
Cbc0038I Pass  35: suminf.    0.96241 (3) obj. -121.641 iterations 0
Cbc0038I Pass  36: suminf.    0.44868 (2) obj. -130.987 iterations 2
Cbc0038I Pass  37: suminf.    0.31035 (1) obj. -121.641 iterations 2
Cbc0038I Pass  38: suminf.    0.44444 (1) obj. -130.894 iterations 1
Cbc0038I Pass  39: suminf.    2.17198 (7) obj. -121.641 iterations 10
Cbc0038I Pass  40: suminf.    1.23211 (5) obj. -121.641 iterations 4
Cbc0038I Pass  41: suminf.    0.69085 (3) obj. -121.641 iterations 6
Cbc0038I Pass  42: suminf.    0.68556 (3) obj. -121.641 iterations 1
Cbc0038I Pass  43: suminf.    0.35595 (2) obj. -121.641 iterations 1
Cbc0038I Pass  44: suminf.    0.34254 (1) obj. -121.641 iterations 1
Cbc0038I Pass  45: suminf.    0.50000 (1) obj. -132.506 iterations 1
Cbc0038I Pass  46: suminf.    1.68157 (6) obj. -121.641 iterations 7
Cbc0038I Pass  47: suminf.    1.61328 (5) obj. -121.641 iterations 1
Cbc0038I Pass  48: suminf.    0.68556 (3) obj. -121.641 iterations 6
Cbc0038I Pass  49: suminf.    0.35595 (2) obj. -121.641 iterations 1
Cbc0038I Pass  50: suminf.    0.34254 (1) obj. -121.641 iterations 1
Cbc0038I Pass  51: suminf.    0.50000 (1) obj. -132.506 iterations 1
Cbc0038I Pass  52: suminf.    2.06067 (6) obj. -121.641 iterations 9
Cbc0038I Pass  53: suminf.    2.06067 (6) obj. -121.641 iterations 0
Cbc0038I Pass  54: suminf.    0.96535 (3) obj. -121.641 iterations 6
Cbc0038I Pass  55: suminf.    0.96535 (3) obj. -121.641 iterations 0
Cbc0038I Pass  56: suminf.    0.52946 (4) obj. -127.323 iterations 3
Cbc0038I Pass  57: suminf.    0.40165 (4) obj. -121.641 iterations 1
Cbc0038I Pass  58: suminf.    0.96535 (3) obj. -121.641 iterations 3
Cbc0038I Pass  59: suminf.    1.37462 (6) obj. -125.293 iterations 13
Cbc0038I Pass  60: suminf.    0.43571 (3) obj. -121.641 iterations 4
Cbc0038I Pass  61: suminf.    0.66301 (3) obj. -121.641 iterations 3
Cbc0038I Rounding solution of -111.871 is better than previous of -109.605

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 36 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -136.085
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.62215 (13) obj. -136.085 iterations 1
Cbc0038I Pass  62: suminf.    0.81783 (4) obj. -136.085 iterations 16
Cbc0038I Pass  63: suminf.    1.30881 (5) obj. -142.606 iterations 4
Cbc0038I Pass  64: suminf.    0.83783 (4) obj. -136.085 iterations 2
Cbc0038I Pass  65: suminf.    0.83277 (3) obj. -136.085 iterations 3
Cbc0038I Pass  66: suminf.    0.83277 (3) obj. -136.085 iterations 0
Cbc0038I Pass  67: suminf.    1.96775 (6) obj. -136.085 iterations 9
Cbc0038I Pass  68: suminf.    1.81427 (7) obj. -136.085 iterations 1
Cbc0038I Pass  69: suminf.    1.32226 (4) obj. -136.085 iterations 5
Cbc0038I Pass  70: suminf.    1.23592 (5) obj. -136.085 iterations 1
Cbc0038I Pass  71: suminf.    1.20831 (4) obj. -136.085 iterations 3
Cbc0038I Pass  72: suminf.    1.14276 (5) obj. -136.085 iterations 1
Cbc0038I Pass  73: suminf.    3.01630 (8) obj. -136.085 iterations 8
Cbc0038I Pass  74: suminf.    3.01630 (8) obj. -136.085 iterations 1
Cbc0038I Pass  75: suminf.    1.14276 (5) obj. -136.085 iterations 8
Cbc0038I Pass  76: suminf.    2.65758 (9) obj. -136.085 iterations 8
Cbc0038I Pass  77: suminf.    1.83717 (7) obj. -136.085 iterations 3
Cbc0038I Pass  78: suminf.    1.20831 (4) obj. -136.085 iterations 6
Cbc0038I Pass  79: suminf.    1.14276 (5) obj. -136.085 iterations 1
Cbc0038I Pass  80: suminf.    1.32226 (4) obj. -136.085 iterations 3
Cbc0038I Pass  81: suminf.    1.23592 (5) obj. -136.085 iterations 1
Cbc0038I Pass  82: suminf.    2.13719 (5) obj. -136.085 iterations 6
Cbc0038I Pass  83: suminf.    1.37648 (4) obj. -136.085 iterations 3
Cbc0038I Pass  84: suminf.    1.37648 (4) obj. -136.085 iterations 0
Cbc0038I Pass  85: suminf.    1.16614 (3) obj. -136.085 iterations 3
Cbc0038I Pass  86: suminf.    1.16614 (3) obj. -136.085 iterations 0
Cbc0038I Pass  87: suminf.    1.08383 (3) obj. -136.085 iterations 2
Cbc0038I Pass  88: suminf.    0.98292 (5) obj. -136.085 iterations 5
Cbc0038I Pass  89: suminf.    0.98292 (5) obj. -136.085 iterations 0
Cbc0038I Pass  90: suminf.    1.16614 (3) obj. -136.085 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -111.871 - took 0.03 seconds
Cbc0012I Integer solution of -111.87072 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 31 rows 36 columns, reduced to 3 rows 4 columns
Cbc0031I 7 added rows had average density of 12
Cbc0013I At root node, 7 cuts changed objective from -169.78572 to -112.62019 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 81 row cuts average 2.3 elements, 17 column cuts (17 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 262 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 78 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 133 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -111.870725, took 981 iterations and 8 nodes (0.13 seconds)
Cbc0032I Strong branching done 50 times (168 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

