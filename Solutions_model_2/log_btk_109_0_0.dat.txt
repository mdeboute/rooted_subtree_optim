Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 207 (-13) rows, 107 (-4) columns and 518 (-26) elements
Clp1000I sum of infeasibilities 4.54831e-05 - average 2.19725e-07, 73 fixed columns
Coin0506I Presolve 64 (-143) rows, 34 (-73) columns and 159 (-359) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 0.56923251 - largest nonzero change 2.3354137e-05 ( 0.0019250019%) - largest zero change 1.0539651e-05
Clp0000I Optimal - objective value 1809707.6
Clp0000I Optimal - objective value 1809707.6
Coin0511I After Postsolve, objective 1809707.6, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1809707.6
Clp0000I Optimal - objective value 1809707.6
Clp0000I Optimal - objective value 1809707.6
Coin0511I After Postsolve, objective 1809707.6, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1809707.637 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 207 rows, 107 columns (106 integer (106 of which binary)) and 518 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.895%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.57143
Cbc0038I Pass   1: suminf.    0.56693 (4) obj. -1.24373e+06 iterations 9
Cbc0038I Pass   2: suminf.    0.56693 (4) obj. -1.24373e+06 iterations 0
Cbc0038I Solution found of -662056
Cbc0038I Relaxing continuous gives -662056
Cbc0038I Rounding solution of -676534 is better than previous of -662056

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 207 rows 107 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -676534 to -1.33781e+06 (0.01 seconds)
Cbc0038I Round again with cutoff of -1.385e+06
Cbc0038I Pass   3: suminf.    1.35629 (5) obj. -1.385e+06 iterations 1
Cbc0038I Pass   4: suminf.    0.93406 (3) obj. -1.385e+06 iterations 8
Cbc0038I Pass   5: suminf.    0.21392 (3) obj. -1.385e+06 iterations 14
Cbc0038I Pass   6: suminf.    0.21392 (3) obj. -1.385e+06 iterations 0
Cbc0038I Pass   7: suminf.    1.15025 (8) obj. -1.385e+06 iterations 30
Cbc0038I Pass   8: suminf.    0.39088 (6) obj. -1.385e+06 iterations 21
Cbc0038I Pass   9: suminf.    0.60080 (5) obj. -1.385e+06 iterations 13
Cbc0038I Pass  10: suminf.    0.34158 (4) obj. -1.385e+06 iterations 16
Cbc0038I Pass  11: suminf.    0.77751 (16) obj. -1.385e+06 iterations 38
Cbc0038I Pass  12: suminf.    0.56730 (9) obj. -1.385e+06 iterations 21
Cbc0038I Pass  13: suminf.    1.96672 (9) obj. -1.385e+06 iterations 9
Cbc0038I Pass  14: suminf.    1.96672 (9) obj. -1.385e+06 iterations 0
Cbc0038I Pass  15: suminf.    2.78495 (7) obj. -1.59556e+06 iterations 10
Cbc0038I Pass  16: suminf.    0.62664 (7) obj. -1.385e+06 iterations 1
Cbc0038I Pass  17: suminf.    0.60706 (5) obj. -1.385e+06 iterations 4
Cbc0038I Pass  18: suminf.    0.33024 (4) obj. -1.385e+06 iterations 7
Cbc0038I Pass  19: suminf.    1.34595 (13) obj. -1.385e+06 iterations 15
Cbc0038I Pass  20: suminf.    0.61024 (11) obj. -1.385e+06 iterations 11
Cbc0038I Pass  21: suminf.    0.28878 (9) obj. -1.385e+06 iterations 8
Cbc0038I Pass  22: suminf.    0.70308 (7) obj. -1.385e+06 iterations 10
Cbc0038I Pass  23: suminf.    0.60608 (7) obj. -1.385e+06 iterations 10
Cbc0038I Pass  24: suminf.    0.70308 (7) obj. -1.385e+06 iterations 6
Cbc0038I Pass  25: suminf.    1.37700 (13) obj. -1.385e+06 iterations 10
Cbc0038I Pass  26: suminf.    0.58075 (10) obj. -1.385e+06 iterations 7
Cbc0038I Pass  27: suminf.    0.37553 (8) obj. -1.385e+06 iterations 8
Cbc0038I Pass  28: suminf.    0.70659 (8) obj. -1.385e+06 iterations 6
Cbc0038I Pass  29: suminf.    0.60608 (7) obj. -1.385e+06 iterations 9
Cbc0038I Pass  30: suminf.    0.70308 (7) obj. -1.385e+06 iterations 5
Cbc0038I Pass  31: suminf.    0.60504 (9) obj. -1.385e+06 iterations 9
Cbc0038I Pass  32: suminf.    1.15958 (11) obj. -1.385e+06 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 207 rows 107 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -1.33781e+06 to -1.39418e+06 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.47728e+06
Cbc0038I Pass  32: suminf.    1.77797 (5) obj. -1.47728e+06 iterations 0
Cbc0038I Pass  33: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 15
Cbc0038I Pass  34: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 0
Cbc0038I Pass  35: suminf.    1.37195 (7) obj. -1.47728e+06 iterations 22
Cbc0038I Pass  36: suminf.    1.13647 (5) obj. -1.47728e+06 iterations 30
Cbc0038I Pass  37: suminf.    1.35380 (5) obj. -1.47728e+06 iterations 10
Cbc0038I Pass  38: suminf.    1.35380 (5) obj. -1.47728e+06 iterations 0
Cbc0038I Pass  39: suminf.    1.59522 (5) obj. -1.47728e+06 iterations 18
Cbc0038I Pass  40: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 20
Cbc0038I Pass  41: suminf.    1.31961 (5) obj. -1.47728e+06 iterations 17
Cbc0038I Pass  42: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 21
Cbc0038I Pass  43: suminf.    1.71785 (5) obj. -1.47728e+06 iterations 4
Cbc0038I Pass  44: suminf.    1.40647 (5) obj. -1.47728e+06 iterations 21
Cbc0038I Pass  45: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 12
Cbc0038I Pass  46: suminf.    1.59522 (5) obj. -1.47728e+06 iterations 3
Cbc0038I Pass  47: suminf.    1.22413 (10) obj. -1.47728e+06 iterations 14
Cbc0038I Pass  48: suminf.    1.22413 (10) obj. -1.47728e+06 iterations 6
Cbc0038I Pass  49: suminf.    4.02304 (9) obj. -1.70251e+06 iterations 6
Cbc0038I Pass  50: suminf.    0.97967 (5) obj. -1.47728e+06 iterations 9
Cbc0038I Pass  51: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 3
Cbc0038I Pass  52: suminf.    1.39400 (10) obj. -1.47728e+06 iterations 24
Cbc0038I Pass  53: suminf.    1.38743 (8) obj. -1.47728e+06 iterations 29
Cbc0038I Pass  54: suminf.    2.12546 (7) obj. -1.47728e+06 iterations 10
Cbc0038I Pass  55: suminf.    2.12546 (7) obj. -1.47728e+06 iterations 0
Cbc0038I Pass  56: suminf.    2.40860 (7) obj. -1.55496e+06 iterations 12
Cbc0038I Pass  57: suminf.    1.61240 (7) obj. -1.47728e+06 iterations 1
Cbc0038I Pass  58: suminf.    2.12546 (7) obj. -1.47728e+06 iterations 8
Cbc0038I Pass  59: suminf.    3.33600 (14) obj. -1.47728e+06 iterations 20
Cbc0038I Pass  60: suminf.    1.82125 (8) obj. -1.47728e+06 iterations 27
Cbc0038I Pass  61: suminf.    1.66468 (5) obj. -1.47728e+06 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 207 rows 107 columns, reduced to 29 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1.39418e+06 - took 0.04 seconds
Cbc0012I Integer solution of -1394176.2 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -1401199.6 found by DiveCoefficient after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 207 rows 107 columns, reduced to 26 rows 27 columns
Cbc0012I Integer solution of -1402851.9 found by DiveCoefficient after 45 iterations and 0 nodes (0.06 seconds)
Cbc0031I 6 added rows had average density of 13.333333
Cbc0013I At root node, 6 cuts changed objective from -1809707.6 to -1402851.9 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 2.4 elements, 41 column cuts (41 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 14 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1402851.891, took 45 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 168 (-51) rows, 173 (-45) columns and 3734 (-2696) elements
Clp1000I sum of infeasibilities 0.000178765 - average 1.06408e-06, 50 fixed columns
Coin0506I Presolve 117 (-51) rows, 119 (-54) columns and 2041 (-1693) elements
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 2.815917 - largest nonzero change 2.868689e-05 ( 0.0025627714%) - largest zero change 2.8931856e-05
Clp0000I Optimal - objective value 1830554.9
Clp0000I Optimal - objective value 1830554.9
Coin0511I After Postsolve, objective 1830554.9, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1830554.9
Clp0000I Optimal - objective value 1830554.9
Clp0000I Optimal - objective value 1830554.9
Coin0511I After Postsolve, objective 1830554.9, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1830554.905 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 168 rows, 173 columns (173 integer (173 of which binary)) and 3737 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.054%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 13.4374
Cbc0038I Pass   1: suminf.    8.23987 (49) obj. -15882.3 iterations 10
Cbc0038I Pass   2: suminf.    8.23987 (49) obj. -15882.3 iterations 0
Cbc0038I Pass   3: suminf.    5.82635 (38) obj. -10895.8 iterations 11
Cbc0038I Pass   4: suminf.    3.18148 (23) obj. -8196.24 iterations 15
Cbc0038I Pass   5: suminf.    1.16176 (10) obj. -5706.75 iterations 13
Cbc0038I Solution found of -2292.39
Cbc0038I Rounding solution of -4669.74 is better than previous of -2292.39

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 173 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -4669.74 to -1.33781e+06 (0.06 seconds)
Cbc0038I Round again with cutoff of -1.38652e+06
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   6: suminf.   11.17562 (61) obj. -1.38652e+06 iterations 7
Cbc0038I Pass   7: suminf.   10.11601 (60) obj. -1.38652e+06 iterations 3
Cbc0038I Pass   8: suminf.    4.18309 (31) obj. -1.38652e+06 iterations 32
Cbc0038I Pass   9: suminf.    1.21409 (14) obj. -1.38652e+06 iterations 17
Cbc0038I Pass  10: suminf.    1.95276 (4) obj. -1.66874e+06 iterations 15
Cbc0038I Pass  11: suminf.    1.37583 (5) obj. -1.38652e+06 iterations 1
Cbc0038I Pass  12: suminf.    0.94049 (3) obj. -1.38652e+06 iterations 3
Cbc0038I Pass  13: suminf.    0.22082 (3) obj. -1.38652e+06 iterations 7
Cbc0038I Pass  14: suminf.    0.22082 (3) obj. -1.38652e+06 iterations 0
Cbc0038I Pass  15: suminf.    4.34757 (34) obj. -1.38652e+06 iterations 49
Cbc0038I Pass  16: suminf.    4.13028 (31) obj. -1.38652e+06 iterations 19
Cbc0038I Pass  17: suminf.    0.70588 (11) obj. -1.38652e+06 iterations 20
Cbc0038I Pass  18: suminf.    0.42461 (5) obj. -1.38652e+06 iterations 10
Cbc0038I Pass  19: suminf.    0.38014 (4) obj. -1.38652e+06 iterations 8
Cbc0038I Pass  20: suminf.    0.43719 (5) obj. -1.38652e+06 iterations 1
Cbc0038I Pass  21: suminf.    3.78696 (15) obj. -1.38652e+06 iterations 26
Cbc0038I Pass  22: suminf.    2.19370 (14) obj. -1.38652e+06 iterations 11
Cbc0038I Pass  23: suminf.    1.55592 (7) obj. -1.38652e+06 iterations 11
Cbc0038I Pass  24: suminf.    1.55592 (7) obj. -1.38652e+06 iterations 0
Cbc0038I Pass  25: suminf.    1.76882 (7) obj. -1.49467e+06 iterations 7
Cbc0038I Pass  26: suminf.    0.66022 (7) obj. -1.38652e+06 iterations 1
Cbc0038I Pass  27: suminf.    2.01660 (16) obj. -1.38652e+06 iterations 23
Cbc0038I Pass  28: suminf.    1.70010 (15) obj. -1.38652e+06 iterations 19
Cbc0038I Pass  29: suminf.    1.81629 (7) obj. -1.38652e+06 iterations 13
Cbc0038I Pass  30: suminf.    1.81629 (7) obj. -1.38652e+06 iterations 0
Cbc0038I Pass  31: suminf.    1.58065 (7) obj. -1.47636e+06 iterations 8
Cbc0038I Pass  32: suminf.    0.65973 (7) obj. -1.38652e+06 iterations 1
Cbc0038I Pass  33: suminf.    1.81629 (7) obj. -1.38652e+06 iterations 3
Cbc0038I Pass  34: suminf.    2.99437 (18) obj. -1.38652e+06 iterations 24
Cbc0038I Pass  35: suminf.    2.64721 (18) obj. -1.38652e+06 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 173 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -1.33781e+06 to -1.37837e+06 (0.10 seconds)
Cbc0038I Round again with cutoff of -1.4742e+06
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  35: suminf.   12.00882 (61) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  36: suminf.    6.15155 (39) obj. -1.4742e+06 iterations 26
Cbc0038I Pass  37: suminf.    6.15155 (39) obj. -1.4742e+06 iterations 1
Cbc0038I Pass  38: suminf.    5.22385 (28) obj. -1.4742e+06 iterations 16
Cbc0038I Pass  39: suminf.    0.89905 (4) obj. -1.4742e+06 iterations 41
Cbc0038I Pass  40: suminf.    0.89905 (4) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  41: suminf.    1.77697 (5) obj. -1.4742e+06 iterations 1
Cbc0038I Pass  42: suminf.    4.06167 (18) obj. -1.4742e+06 iterations 24
Cbc0038I Pass  43: suminf.    2.90167 (17) obj. -1.4742e+06 iterations 7
Cbc0038I Pass  44: suminf.    1.85673 (9) obj. -1.4742e+06 iterations 16
Cbc0038I Pass  45: suminf.    1.85673 (9) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  46: suminf.    1.24531 (5) obj. -1.4742e+06 iterations 5
Cbc0038I Pass  47: suminf.    0.88661 (4) obj. -1.4742e+06 iterations 12
Cbc0038I Pass  48: suminf.    4.06348 (19) obj. -1.4742e+06 iterations 32
Cbc0038I Pass  49: suminf.    4.06348 (19) obj. -1.4742e+06 iterations 11
Cbc0038I Pass  50: suminf.    1.70031 (8) obj. -1.4742e+06 iterations 22
Cbc0038I Pass  51: suminf.    1.70031 (8) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  52: suminf.    2.74731 (7) obj. -1.58653e+06 iterations 12
Cbc0038I Pass  53: suminf.    1.59588 (7) obj. -1.4742e+06 iterations 1
Cbc0038I Pass  54: suminf.    1.63014 (7) obj. -1.4742e+06 iterations 7
Cbc0038I Pass  55: suminf.    1.63014 (7) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  56: suminf.    5.43469 (21) obj. -1.4742e+06 iterations 32
Cbc0038I Pass  57: suminf.    4.41906 (18) obj. -1.4742e+06 iterations 12
Cbc0038I Pass  58: suminf.    3.52367 (18) obj. -1.4742e+06 iterations 8
Cbc0038I Pass  59: suminf.    1.64114 (7) obj. -1.4742e+06 iterations 17
Cbc0038I Pass  60: suminf.    1.64114 (7) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  61: suminf.    2.74731 (7) obj. -1.58583e+06 iterations 8
Cbc0038I Pass  62: suminf.    1.60306 (7) obj. -1.4742e+06 iterations 1
Cbc0038I Pass  63: suminf.    1.64114 (7) obj. -1.4742e+06 iterations 3
Cbc0038I Pass  64: suminf.    4.09994 (20) obj. -1.4742e+06 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 173 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -1.37837e+06 - took 0.07 seconds
Cbc0012I Integer solution of -1378368.6 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0012I Integer solution of -1383516.9 found by DiveCoefficient after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 168 rows 173 columns, reduced to 12 rows 17 columns
Cbc0012I Integer solution of -1402851.9 found by DiveCoefficient after 167 iterations and 0 nodes (0.34 seconds)
Cbc0031I 13 added rows had average density of 38.846154
Cbc0013I At root node, 13 cuts changed objective from -1824921.3 to -1402871.1 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 225 row cuts average 7.1 elements, 11 column cuts (11 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 67.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 72.3 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 19.249414 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -1402851.891, took 167 iterations and 0 nodes (0.34 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.36

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 207 (-13) rows, 107 (-4) columns and 518 (-26) elements
Clp1000I sum of infeasibilities 4.54831e-05 - average 2.19725e-07, 73 fixed columns
Coin0506I Presolve 64 (-143) rows, 34 (-73) columns and 159 (-359) elements
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 0.56923251 - largest nonzero change 2.3354137e-05 ( 0.0019250019%) - largest zero change 1.0539651e-05
Clp0000I Optimal - objective value 1809707.6
Clp0000I Optimal - objective value 1809707.6
Coin0511I After Postsolve, objective 1809707.6, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1809707.6
Clp0000I Optimal - objective value 1809707.6
Clp0000I Optimal - objective value 1809707.6
Coin0511I After Postsolve, objective 1809707.6, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1809707.637 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 207 rows, 107 columns (106 integer (106 of which binary)) and 518 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.895%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.57143
Cbc0038I Pass   1: suminf.    0.56693 (4) obj. -1.24373e+06 iterations 9
Cbc0038I Pass   2: suminf.    0.56693 (4) obj. -1.24373e+06 iterations 0
Cbc0038I Solution found of -662056
Cbc0038I Relaxing continuous gives -662056
Cbc0038I Rounding solution of -676534 is better than previous of -662056

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 207 rows 107 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -676534 to -1.33781e+06 (0.01 seconds)
Cbc0038I Round again with cutoff of -1.385e+06
Cbc0038I Pass   3: suminf.    1.35629 (5) obj. -1.385e+06 iterations 1
Cbc0038I Pass   4: suminf.    0.93406 (3) obj. -1.385e+06 iterations 8
Cbc0038I Pass   5: suminf.    0.21392 (3) obj. -1.385e+06 iterations 14
Cbc0038I Pass   6: suminf.    0.21392 (3) obj. -1.385e+06 iterations 0
Cbc0038I Pass   7: suminf.    1.15025 (8) obj. -1.385e+06 iterations 30
Cbc0038I Pass   8: suminf.    0.39088 (6) obj. -1.385e+06 iterations 21
Cbc0038I Pass   9: suminf.    0.60080 (5) obj. -1.385e+06 iterations 13
Cbc0038I Pass  10: suminf.    0.34158 (4) obj. -1.385e+06 iterations 16
Cbc0038I Pass  11: suminf.    0.77751 (16) obj. -1.385e+06 iterations 38
Cbc0038I Pass  12: suminf.    0.56730 (9) obj. -1.385e+06 iterations 21
Cbc0038I Pass  13: suminf.    1.96672 (9) obj. -1.385e+06 iterations 9
Cbc0038I Pass  14: suminf.    1.96672 (9) obj. -1.385e+06 iterations 0
Cbc0038I Pass  15: suminf.    2.78495 (7) obj. -1.59556e+06 iterations 10
Cbc0038I Pass  16: suminf.    0.62664 (7) obj. -1.385e+06 iterations 1
Cbc0038I Pass  17: suminf.    0.60706 (5) obj. -1.385e+06 iterations 4
Cbc0038I Pass  18: suminf.    0.33024 (4) obj. -1.385e+06 iterations 7
Cbc0038I Pass  19: suminf.    1.34595 (13) obj. -1.385e+06 iterations 15
Cbc0038I Pass  20: suminf.    0.61024 (11) obj. -1.385e+06 iterations 11
Cbc0038I Pass  21: suminf.    0.28878 (9) obj. -1.385e+06 iterations 8
Cbc0038I Pass  22: suminf.    0.70308 (7) obj. -1.385e+06 iterations 10
Cbc0038I Pass  23: suminf.    0.60608 (7) obj. -1.385e+06 iterations 10
Cbc0038I Pass  24: suminf.    0.70308 (7) obj. -1.385e+06 iterations 6
Cbc0038I Pass  25: suminf.    1.37700 (13) obj. -1.385e+06 iterations 10
Cbc0038I Pass  26: suminf.    0.58075 (10) obj. -1.385e+06 iterations 7
Cbc0038I Pass  27: suminf.    0.37553 (8) obj. -1.385e+06 iterations 8
Cbc0038I Pass  28: suminf.    0.70659 (8) obj. -1.385e+06 iterations 6
Cbc0038I Pass  29: suminf.    0.60608 (7) obj. -1.385e+06 iterations 9
Cbc0038I Pass  30: suminf.    0.70308 (7) obj. -1.385e+06 iterations 5
Cbc0038I Pass  31: suminf.    0.60504 (9) obj. -1.385e+06 iterations 9
Cbc0038I Pass  32: suminf.    1.15958 (11) obj. -1.385e+06 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 207 rows 107 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -1.33781e+06 to -1.39418e+06 (0.03 seconds)
Cbc0038I Round again with cutoff of -1.47728e+06
Cbc0038I Pass  32: suminf.    1.77797 (5) obj. -1.47728e+06 iterations 0
Cbc0038I Pass  33: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 15
Cbc0038I Pass  34: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 0
Cbc0038I Pass  35: suminf.    1.37195 (7) obj. -1.47728e+06 iterations 22
Cbc0038I Pass  36: suminf.    1.13647 (5) obj. -1.47728e+06 iterations 30
Cbc0038I Pass  37: suminf.    1.35380 (5) obj. -1.47728e+06 iterations 10
Cbc0038I Pass  38: suminf.    1.35380 (5) obj. -1.47728e+06 iterations 0
Cbc0038I Pass  39: suminf.    1.59522 (5) obj. -1.47728e+06 iterations 18
Cbc0038I Pass  40: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 20
Cbc0038I Pass  41: suminf.    1.31961 (5) obj. -1.47728e+06 iterations 17
Cbc0038I Pass  42: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 21
Cbc0038I Pass  43: suminf.    1.71785 (5) obj. -1.47728e+06 iterations 4
Cbc0038I Pass  44: suminf.    1.40647 (5) obj. -1.47728e+06 iterations 21
Cbc0038I Pass  45: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 12
Cbc0038I Pass  46: suminf.    1.59522 (5) obj. -1.47728e+06 iterations 3
Cbc0038I Pass  47: suminf.    1.22413 (10) obj. -1.47728e+06 iterations 14
Cbc0038I Pass  48: suminf.    1.22413 (10) obj. -1.47728e+06 iterations 6
Cbc0038I Pass  49: suminf.    4.02304 (9) obj. -1.70251e+06 iterations 6
Cbc0038I Pass  50: suminf.    0.97967 (5) obj. -1.47728e+06 iterations 9
Cbc0038I Pass  51: suminf.    0.91031 (4) obj. -1.47728e+06 iterations 3
Cbc0038I Pass  52: suminf.    1.39400 (10) obj. -1.47728e+06 iterations 24
Cbc0038I Pass  53: suminf.    1.38743 (8) obj. -1.47728e+06 iterations 29
Cbc0038I Pass  54: suminf.    2.12546 (7) obj. -1.47728e+06 iterations 10
Cbc0038I Pass  55: suminf.    2.12546 (7) obj. -1.47728e+06 iterations 0
Cbc0038I Pass  56: suminf.    2.40860 (7) obj. -1.55496e+06 iterations 12
Cbc0038I Pass  57: suminf.    1.61240 (7) obj. -1.47728e+06 iterations 1
Cbc0038I Pass  58: suminf.    2.12546 (7) obj. -1.47728e+06 iterations 8
Cbc0038I Pass  59: suminf.    3.33600 (14) obj. -1.47728e+06 iterations 20
Cbc0038I Pass  60: suminf.    1.82125 (8) obj. -1.47728e+06 iterations 27
Cbc0038I Pass  61: suminf.    1.66468 (5) obj. -1.47728e+06 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 207 rows 107 columns, reduced to 29 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -1.39418e+06 - took 0.04 seconds
Cbc0012I Integer solution of -1394176.2 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -1401199.6 found by DiveCoefficient after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 207 rows 107 columns, reduced to 26 rows 27 columns
Cbc0012I Integer solution of -1402851.9 found by DiveCoefficient after 45 iterations and 0 nodes (0.05 seconds)
Cbc0031I 6 added rows had average density of 13.333333
Cbc0013I At root node, 6 cuts changed objective from -1809707.6 to -1402851.9 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 2.4 elements, 41 column cuts (41 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 14 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1402851.891, took 45 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 168 (-52) rows, 173 (-46) columns and 3734 (-2697) elements
Clp1000I sum of infeasibilities 0.000178765 - average 1.06408e-06, 50 fixed columns
Coin0506I Presolve 117 (-51) rows, 119 (-54) columns and 2041 (-1693) elements
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 2.815917 - largest nonzero change 2.868689e-05 ( 0.0025627714%) - largest zero change 2.8931856e-05
Clp0000I Optimal - objective value 1830554.9
Clp0000I Optimal - objective value 1830554.9
Coin0511I After Postsolve, objective 1830554.9, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1830554.9
Clp0000I Optimal - objective value 1830554.9
Clp0000I Optimal - objective value 1830554.9
Coin0511I After Postsolve, objective 1830554.9, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1830554.905 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 168 rows, 173 columns (173 integer (173 of which binary)) and 3737 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.054%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 13.4374
Cbc0038I Pass   1: suminf.    8.23987 (49) obj. -15882.3 iterations 10
Cbc0038I Pass   2: suminf.    8.23987 (49) obj. -15882.3 iterations 0
Cbc0038I Pass   3: suminf.    5.82635 (38) obj. -10895.8 iterations 11
Cbc0038I Pass   4: suminf.    3.18148 (23) obj. -8196.24 iterations 15
Cbc0038I Pass   5: suminf.    1.16176 (10) obj. -5706.75 iterations 13
Cbc0038I Solution found of -2292.39
Cbc0038I Rounding solution of -4669.74 is better than previous of -2292.39

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 173 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -4669.74 to -1.33781e+06 (0.07 seconds)
Cbc0038I Round again with cutoff of -1.38652e+06
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   6: suminf.   11.17562 (61) obj. -1.38652e+06 iterations 7
Cbc0038I Pass   7: suminf.   10.11601 (60) obj. -1.38652e+06 iterations 3
Cbc0038I Pass   8: suminf.    4.18309 (31) obj. -1.38652e+06 iterations 32
Cbc0038I Pass   9: suminf.    1.21409 (14) obj. -1.38652e+06 iterations 17
Cbc0038I Pass  10: suminf.    1.95276 (4) obj. -1.66874e+06 iterations 15
Cbc0038I Pass  11: suminf.    1.37583 (5) obj. -1.38652e+06 iterations 1
Cbc0038I Pass  12: suminf.    0.94049 (3) obj. -1.38652e+06 iterations 3
Cbc0038I Pass  13: suminf.    0.22082 (3) obj. -1.38652e+06 iterations 7
Cbc0038I Pass  14: suminf.    0.22082 (3) obj. -1.38652e+06 iterations 0
Cbc0038I Pass  15: suminf.    4.34757 (34) obj. -1.38652e+06 iterations 49
Cbc0038I Pass  16: suminf.    4.13028 (31) obj. -1.38652e+06 iterations 19
Cbc0038I Pass  17: suminf.    0.70588 (11) obj. -1.38652e+06 iterations 20
Cbc0038I Pass  18: suminf.    0.42461 (5) obj. -1.38652e+06 iterations 10
Cbc0038I Pass  19: suminf.    0.38014 (4) obj. -1.38652e+06 iterations 8
Cbc0038I Pass  20: suminf.    0.43719 (5) obj. -1.38652e+06 iterations 1
Cbc0038I Pass  21: suminf.    3.78696 (15) obj. -1.38652e+06 iterations 26
Cbc0038I Pass  22: suminf.    2.19370 (14) obj. -1.38652e+06 iterations 11
Cbc0038I Pass  23: suminf.    1.55592 (7) obj. -1.38652e+06 iterations 11
Cbc0038I Pass  24: suminf.    1.55592 (7) obj. -1.38652e+06 iterations 0
Cbc0038I Pass  25: suminf.    1.76882 (7) obj. -1.49467e+06 iterations 7
Cbc0038I Pass  26: suminf.    0.66022 (7) obj. -1.38652e+06 iterations 1
Cbc0038I Pass  27: suminf.    2.01660 (16) obj. -1.38652e+06 iterations 23
Cbc0038I Pass  28: suminf.    1.70010 (15) obj. -1.38652e+06 iterations 19
Cbc0038I Pass  29: suminf.    1.81629 (7) obj. -1.38652e+06 iterations 13
Cbc0038I Pass  30: suminf.    1.81629 (7) obj. -1.38652e+06 iterations 0
Cbc0038I Pass  31: suminf.    1.58065 (7) obj. -1.47636e+06 iterations 8
Cbc0038I Pass  32: suminf.    0.65973 (7) obj. -1.38652e+06 iterations 1
Cbc0038I Pass  33: suminf.    1.81629 (7) obj. -1.38652e+06 iterations 3
Cbc0038I Pass  34: suminf.    2.99437 (18) obj. -1.38652e+06 iterations 24
Cbc0038I Pass  35: suminf.    2.64721 (18) obj. -1.38652e+06 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 173 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -1.33781e+06 to -1.37837e+06 (0.11 seconds)
Cbc0038I Round again with cutoff of -1.4742e+06
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  35: suminf.   12.00882 (61) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  36: suminf.    6.15155 (39) obj. -1.4742e+06 iterations 26
Cbc0038I Pass  37: suminf.    6.15155 (39) obj. -1.4742e+06 iterations 1
Cbc0038I Pass  38: suminf.    5.22385 (28) obj. -1.4742e+06 iterations 16
Cbc0038I Pass  39: suminf.    0.89905 (4) obj. -1.4742e+06 iterations 41
Cbc0038I Pass  40: suminf.    0.89905 (4) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  41: suminf.    1.77697 (5) obj. -1.4742e+06 iterations 1
Cbc0038I Pass  42: suminf.    4.06167 (18) obj. -1.4742e+06 iterations 24
Cbc0038I Pass  43: suminf.    2.90167 (17) obj. -1.4742e+06 iterations 7
Cbc0038I Pass  44: suminf.    1.85673 (9) obj. -1.4742e+06 iterations 16
Cbc0038I Pass  45: suminf.    1.85673 (9) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  46: suminf.    1.24531 (5) obj. -1.4742e+06 iterations 5
Cbc0038I Pass  47: suminf.    0.88661 (4) obj. -1.4742e+06 iterations 12
Cbc0038I Pass  48: suminf.    4.06348 (19) obj. -1.4742e+06 iterations 32
Cbc0038I Pass  49: suminf.    4.06348 (19) obj. -1.4742e+06 iterations 11
Cbc0038I Pass  50: suminf.    1.70031 (8) obj. -1.4742e+06 iterations 22
Cbc0038I Pass  51: suminf.    1.70031 (8) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  52: suminf.    2.74731 (7) obj. -1.58653e+06 iterations 12
Cbc0038I Pass  53: suminf.    1.59588 (7) obj. -1.4742e+06 iterations 1
Cbc0038I Pass  54: suminf.    1.63014 (7) obj. -1.4742e+06 iterations 7
Cbc0038I Pass  55: suminf.    1.63014 (7) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  56: suminf.    5.43469 (21) obj. -1.4742e+06 iterations 32
Cbc0038I Pass  57: suminf.    4.41906 (18) obj. -1.4742e+06 iterations 12
Cbc0038I Pass  58: suminf.    3.52367 (18) obj. -1.4742e+06 iterations 8
Cbc0038I Pass  59: suminf.    1.64114 (7) obj. -1.4742e+06 iterations 17
Cbc0038I Pass  60: suminf.    1.64114 (7) obj. -1.4742e+06 iterations 0
Cbc0038I Pass  61: suminf.    2.74731 (7) obj. -1.58583e+06 iterations 8
Cbc0038I Pass  62: suminf.    1.60306 (7) obj. -1.4742e+06 iterations 1
Cbc0038I Pass  63: suminf.    1.64114 (7) obj. -1.4742e+06 iterations 3
Cbc0038I Pass  64: suminf.    4.09994 (20) obj. -1.4742e+06 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 173 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -1.37837e+06 - took 0.07 seconds
Cbc0012I Integer solution of -1378368.6 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0012I Integer solution of -1383516.9 found by DiveCoefficient after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 168 rows 173 columns, reduced to 12 rows 17 columns
Cbc0012I Integer solution of -1402851.9 found by DiveCoefficient after 167 iterations and 0 nodes (0.37 seconds)
Cbc0031I 13 added rows had average density of 38.846154
Cbc0013I At root node, 13 cuts changed objective from -1824921.3 to -1402871.1 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 225 row cuts average 7.1 elements, 11 column cuts (11 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 67.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 72.3 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 19.249414 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -1402851.891, took 167 iterations and 0 nodes (0.37 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.38

