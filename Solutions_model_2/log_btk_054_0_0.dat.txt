Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 63 (-47) rows, 34 (-22) columns and 126 (-143) elements
Clp0000I Optimal - objective value 3265.4866
Coin0511I After Postsolve, objective 3265.4866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3265.486626 - 29 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 63 rows, 34 columns (33 integer (33 of which binary)) and 126 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.685%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.83689
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 750 iterations 17
Cbc0038I Solution found of 750
Cbc0038I Relaxing continuous gives 750
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 34 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 750 to -1550 (0.02 seconds)
Cbc0038I Round again with cutoff of -1722.45
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.23532 (5) obj. -1722.45 iterations 5
Cbc0038I Pass   3: suminf.    1.76201 (4) obj. -1722.45 iterations 8
Cbc0038I Pass   4: suminf.    1.04753 (4) obj. -1722.45 iterations 3
Cbc0038I Pass   5: suminf.    0.17505 (3) obj. -1722.45 iterations 7
Cbc0038I Pass   6: suminf.    0.81433 (5) obj. -1722.45 iterations 5
Cbc0038I Pass   7: suminf.    0.75758 (3) obj. -1722.45 iterations 2
Cbc0038I Pass   8: suminf.    0.60170 (2) obj. -1722.45 iterations 4
Cbc0038I Pass   9: suminf.    0.62075 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  10: suminf.    2.87136 (11) obj. -1722.45 iterations 8
Cbc0038I Pass  11: suminf.    0.88546 (3) obj. -1722.45 iterations 4
Cbc0038I Pass  12: suminf.    1.02036 (9) obj. -1722.45 iterations 1
Cbc0038I Pass  13: suminf.    0.88546 (3) obj. -1722.45 iterations 1
Cbc0038I Pass  14: suminf.    2.28794 (11) obj. -1722.45 iterations 7
Cbc0038I Pass  15: suminf.    2.01767 (6) obj. -1722.45 iterations 2
Cbc0038I Pass  16: suminf.    1.63231 (10) obj. -1722.45 iterations 4
Cbc0038I Pass  17: suminf.    1.19474 (13) obj. -1722.45 iterations 2
Cbc0038I Pass  18: suminf.    1.73634 (9) obj. -1722.45 iterations 14
Cbc0038I Pass  19: suminf.    1.73634 (9) obj. -1722.45 iterations 2
Cbc0038I Pass  20: suminf.    1.55757 (6) obj. -1722.45 iterations 11
Cbc0038I Pass  21: suminf.    1.54956 (5) obj. -1722.45 iterations 7
Cbc0038I Pass  22: suminf.    0.73963 (2) obj. -1722.45 iterations 5
Cbc0038I Pass  23: suminf.    0.79466 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  24: suminf.    3.28934 (9) obj. -1722.45 iterations 10
Cbc0038I Pass  25: suminf.    2.83908 (8) obj. -1722.45 iterations 4
Cbc0038I Pass  26: suminf.    2.78156 (7) obj. -1722.45 iterations 11
Cbc0038I Pass  27: suminf.    1.05937 (3) obj. -1722.45 iterations 4
Cbc0038I Pass  28: suminf.    0.73963 (2) obj. -1722.45 iterations 4
Cbc0038I Pass  29: suminf.    0.79466 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  30: suminf.    3.66787 (9) obj. -1722.45 iterations 7
Cbc0038I Pass  31: suminf.    1.51980 (4) obj. -1722.45 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 34 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1550 - took 0.01 seconds
Cbc0012I Integer solution of -1550 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 63 rows 34 columns, reduced to 34 rows 20 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -3265.4866 to -3265.4866 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1550, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-49) rows, 63 (-45) columns and 541 (-1159) elements
Clp1000I sum of infeasibilities 0 - average 0, 51 fixed columns
Coin0506I Presolve 0 (-60) rows, 0 (-63) columns and 0 (-541) elements
Clp0000I Optimal - objective value 1025
Clp0000I Optimal - objective value 1025
Coin0511I After Postsolve, objective 1025, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.2878618 - largest nonzero change 2.8981471e-05 ( 0.0028981471%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 5304.3032
Clp0000I Optimal - objective value 5304.3032
Clp0000I Optimal - objective value 5304.3032
Coin0511I After Postsolve, objective 5304.3032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5304.303204 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0004I processed model has 60 rows, 63 columns (63 integer (63 of which binary)) and 541 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.799%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 6.37565
Cbc0038I Pass   1: suminf.    3.15684 (17) obj. -3276.59 iterations 17
Cbc0038I Pass   2: suminf.    3.15684 (17) obj. -3276.59 iterations 1
Cbc0038I Solution found of 225
Cbc0038I Rounding solution of 150 is better than previous of 225

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -275.998
Cbc0038I Pass   3: suminf.    3.15684 (17) obj. -3276.59 iterations 0
Cbc0038I Pass   4: suminf.    3.15684 (17) obj. -3276.59 iterations 1
Cbc0038I Pass   5: suminf.    0.55770 (6) obj. -981.043 iterations 11
Cbc0038I Pass   6: suminf.    0.33543 (2) obj. -275.998 iterations 12
Cbc0038I Pass   7: suminf.    0.33543 (2) obj. -275.998 iterations 1
Cbc0038I Pass   8: suminf.    0.52466 (2) obj. -275.998 iterations 1
Cbc0038I Pass   9: suminf.    1.39874 (6) obj. -275.998 iterations 9
Cbc0038I Pass  10: suminf.    1.39874 (6) obj. -275.998 iterations 1
Cbc0038I Pass  11: suminf.    0.83464 (2) obj. -275.998 iterations 7
Cbc0038I Pass  12: suminf.    0.83464 (2) obj. -275.998 iterations 1
Cbc0038I Pass  13: suminf.    0.82089 (2) obj. -275.998 iterations 1
Cbc0038I Pass  14: suminf.    0.69697 (2) obj. -368.939 iterations 1
Cbc0038I Pass  15: suminf.    1.10448 (4) obj. -275.998 iterations 12
Cbc0038I Pass  16: suminf.    1.00731 (3) obj. -331.87 iterations 3
Cbc0038I Pass  17: suminf.    0.87932 (3) obj. -275.998 iterations 6
Cbc0038I Pass  18: suminf.    0.87932 (3) obj. -275.998 iterations 1
Cbc0038I Pass  19: suminf.    0.69827 (3) obj. -275.998 iterations 1
Cbc0038I Pass  20: suminf.    0.69827 (3) obj. -275.998 iterations 0
Cbc0038I Pass  21: suminf.    0.87932 (3) obj. -275.998 iterations 1
Cbc0038I Pass  22: suminf.    1.23998 (6) obj. -275.998 iterations 20
Cbc0038I Pass  23: suminf.    1.23998 (6) obj. -275.998 iterations 4
Cbc0038I Pass  24: suminf.    0.78286 (4) obj. -275.998 iterations 8
Cbc0038I Pass  25: suminf.    0.78286 (4) obj. -275.998 iterations 0
Cbc0038I Pass  26: suminf.    0.79636 (4) obj. -275.998 iterations 3
Cbc0038I Pass  27: suminf.    0.79636 (4) obj. -275.998 iterations 0
Cbc0038I Pass  28: suminf.    0.57676 (5) obj. -275.998 iterations 20
Cbc0038I Pass  29: suminf.    0.57676 (5) obj. -275.998 iterations 5
Cbc0038I Pass  30: suminf.    0.64702 (2) obj. -275.998 iterations 5
Cbc0038I Pass  31: suminf.    0.40909 (2) obj. -389.015 iterations 2
Cbc0038I Pass  32: suminf.    0.96310 (5) obj. -586.511 iterations 10
Cbc0038I Rounding solution of -1200 is better than previous of 150

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -1200 to -1450 (0.02 seconds)
Cbc0038I Round again with cutoff of -1957
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.15684 (17) obj. -3276.59 iterations 0
Cbc0038I Pass  33: suminf.    3.15684 (17) obj. -3276.59 iterations 1
Cbc0038I Pass  34: suminf.    1.67894 (17) obj. -1957 iterations 24
Cbc0038I Pass  35: suminf.    1.48935 (7) obj. -1957 iterations 1
Cbc0038I Pass  36: suminf.    1.65244 (7) obj. -1957 iterations 1
Cbc0038I Pass  37: suminf.    1.35661 (7) obj. -2038.35 iterations 1
Cbc0038I Pass  38: suminf.    1.30163 (8) obj. -2584.26 iterations 11
Cbc0038I Pass  39: suminf.    1.30163 (8) obj. -2584.26 iterations 3
Cbc0038I Pass  40: suminf.    0.62324 (4) obj. -1957 iterations 6
Cbc0038I Pass  41: suminf.    0.62324 (4) obj. -1957 iterations 0
Cbc0038I Pass  42: suminf.    1.08304 (4) obj. -1957 iterations 1
Cbc0038I Pass  43: suminf.    1.08304 (4) obj. -1957 iterations 0
Cbc0038I Pass  44: suminf.    0.62324 (4) obj. -1957 iterations 1
Cbc0038I Pass  45: suminf.    1.12006 (5) obj. -1957 iterations 5
Cbc0038I Pass  46: suminf.    0.81190 (5) obj. -2095.67 iterations 3
Cbc0038I Pass  47: suminf.    0.80707 (4) obj. -1957 iterations 3
Cbc0038I Pass  48: suminf.    0.71190 (4) obj. -1983.17 iterations 1
Cbc0038I Pass  49: suminf.    1.26459 (6) obj. -1957 iterations 13
Cbc0038I Pass  50: suminf.    0.93452 (5) obj. -2221.02 iterations 3
Cbc0038I Pass  51: suminf.    0.64527 (4) obj. -1957 iterations 3
Cbc0038I Pass  52: suminf.    0.64527 (4) obj. -1957 iterations 0
Cbc0038I Pass  53: suminf.    1.10830 (4) obj. -1957 iterations 1
Cbc0038I Pass  54: suminf.    1.10830 (4) obj. -1957 iterations 0
Cbc0038I Pass  55: suminf.    0.64527 (4) obj. -1957 iterations 1
Cbc0038I Pass  56: suminf.    0.88701 (4) obj. -2041.6 iterations 7
Cbc0038I Pass  57: suminf.    0.88701 (4) obj. -2041.6 iterations 3
Cbc0038I Pass  58: suminf.    1.15078 (4) obj. -1957 iterations 3
Cbc0038I Pass  59: suminf.    1.15078 (4) obj. -1957 iterations 0
Cbc0038I Pass  60: suminf.    0.99169 (3) obj. -1957 iterations 1
Cbc0038I Pass  61: suminf.    0.67273 (3) obj. -2100.53 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1450 - took 0.01 seconds
Cbc0012I Integer solution of -1450 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -1550 found by DiveCoefficient after 12 iterations and 0 nodes (0.03 seconds)
Cbc0013I At root node, 0 cuts changed objective from -3884.9808 to -1550 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1550, took 12 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 63 (-47) rows, 34 (-22) columns and 126 (-143) elements
Clp0000I Optimal - objective value 3265.4866
Coin0511I After Postsolve, objective 3265.4866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3265.486626 - 29 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 63 rows, 34 columns (33 integer (33 of which binary)) and 126 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.685%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.83689
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 750 iterations 17
Cbc0038I Solution found of 750
Cbc0038I Relaxing continuous gives 750
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 34 columns, reduced to 34 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 750 to -1550 (0.01 seconds)
Cbc0038I Round again with cutoff of -1722.45
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.23532 (5) obj. -1722.45 iterations 5
Cbc0038I Pass   3: suminf.    1.76201 (4) obj. -1722.45 iterations 8
Cbc0038I Pass   4: suminf.    1.04753 (4) obj. -1722.45 iterations 3
Cbc0038I Pass   5: suminf.    0.17505 (3) obj. -1722.45 iterations 7
Cbc0038I Pass   6: suminf.    0.81433 (5) obj. -1722.45 iterations 5
Cbc0038I Pass   7: suminf.    0.75758 (3) obj. -1722.45 iterations 2
Cbc0038I Pass   8: suminf.    0.60170 (2) obj. -1722.45 iterations 4
Cbc0038I Pass   9: suminf.    0.62075 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  10: suminf.    2.87136 (11) obj. -1722.45 iterations 8
Cbc0038I Pass  11: suminf.    0.88546 (3) obj. -1722.45 iterations 4
Cbc0038I Pass  12: suminf.    1.02036 (9) obj. -1722.45 iterations 1
Cbc0038I Pass  13: suminf.    0.88546 (3) obj. -1722.45 iterations 1
Cbc0038I Pass  14: suminf.    2.28794 (11) obj. -1722.45 iterations 7
Cbc0038I Pass  15: suminf.    2.01767 (6) obj. -1722.45 iterations 2
Cbc0038I Pass  16: suminf.    1.63231 (10) obj. -1722.45 iterations 4
Cbc0038I Pass  17: suminf.    1.19474 (13) obj. -1722.45 iterations 2
Cbc0038I Pass  18: suminf.    1.73634 (9) obj. -1722.45 iterations 14
Cbc0038I Pass  19: suminf.    1.73634 (9) obj. -1722.45 iterations 2
Cbc0038I Pass  20: suminf.    1.55757 (6) obj. -1722.45 iterations 11
Cbc0038I Pass  21: suminf.    1.54956 (5) obj. -1722.45 iterations 7
Cbc0038I Pass  22: suminf.    0.73963 (2) obj. -1722.45 iterations 5
Cbc0038I Pass  23: suminf.    0.79466 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  24: suminf.    3.28934 (9) obj. -1722.45 iterations 10
Cbc0038I Pass  25: suminf.    2.83908 (8) obj. -1722.45 iterations 4
Cbc0038I Pass  26: suminf.    2.78156 (7) obj. -1722.45 iterations 11
Cbc0038I Pass  27: suminf.    1.05937 (3) obj. -1722.45 iterations 4
Cbc0038I Pass  28: suminf.    0.73963 (2) obj. -1722.45 iterations 4
Cbc0038I Pass  29: suminf.    0.79466 (2) obj. -1722.45 iterations 1
Cbc0038I Pass  30: suminf.    3.66787 (9) obj. -1722.45 iterations 7
Cbc0038I Pass  31: suminf.    1.51980 (4) obj. -1722.45 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 63 rows 34 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1550 - took 0.04 seconds
Cbc0012I Integer solution of -1550 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 63 rows 34 columns, reduced to 34 rows 20 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -3265.4866 to -3265.4866 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1550, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 60 (-50) rows, 63 (-46) columns and 541 (-1160) elements
Clp1000I sum of infeasibilities 0 - average 0, 51 fixed columns
Coin0506I Presolve 0 (-60) rows, 0 (-63) columns and 0 (-541) elements
Clp0000I Optimal - objective value 1025
Clp0000I Optimal - objective value 1025
Coin0511I After Postsolve, objective 1025, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.2878618 - largest nonzero change 2.8981471e-05 ( 0.0028981471%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 5304.3032
Clp0000I Optimal - objective value 5304.3032
Clp0000I Optimal - objective value 5304.3032
Coin0511I After Postsolve, objective 5304.3032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5304.303204 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 60 rows, 63 columns (63 integer (63 of which binary)) and 541 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.799%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 6.37565
Cbc0038I Pass   1: suminf.    3.15684 (17) obj. -3276.59 iterations 17
Cbc0038I Pass   2: suminf.    3.15684 (17) obj. -3276.59 iterations 1
Cbc0038I Solution found of 225
Cbc0038I Rounding solution of 150 is better than previous of 225

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -275.998
Cbc0038I Pass   3: suminf.    3.15684 (17) obj. -3276.59 iterations 0
Cbc0038I Pass   4: suminf.    3.15684 (17) obj. -3276.59 iterations 1
Cbc0038I Pass   5: suminf.    0.55770 (6) obj. -981.043 iterations 11
Cbc0038I Pass   6: suminf.    0.33543 (2) obj. -275.998 iterations 12
Cbc0038I Pass   7: suminf.    0.33543 (2) obj. -275.998 iterations 1
Cbc0038I Pass   8: suminf.    0.52466 (2) obj. -275.998 iterations 1
Cbc0038I Pass   9: suminf.    1.39874 (6) obj. -275.998 iterations 9
Cbc0038I Pass  10: suminf.    1.39874 (6) obj. -275.998 iterations 1
Cbc0038I Pass  11: suminf.    0.83464 (2) obj. -275.998 iterations 7
Cbc0038I Pass  12: suminf.    0.83464 (2) obj. -275.998 iterations 1
Cbc0038I Pass  13: suminf.    0.82089 (2) obj. -275.998 iterations 1
Cbc0038I Pass  14: suminf.    0.69697 (2) obj. -368.939 iterations 1
Cbc0038I Pass  15: suminf.    1.10448 (4) obj. -275.998 iterations 12
Cbc0038I Pass  16: suminf.    1.00731 (3) obj. -331.87 iterations 3
Cbc0038I Pass  17: suminf.    0.87932 (3) obj. -275.998 iterations 6
Cbc0038I Pass  18: suminf.    0.87932 (3) obj. -275.998 iterations 1
Cbc0038I Pass  19: suminf.    0.69827 (3) obj. -275.998 iterations 1
Cbc0038I Pass  20: suminf.    0.69827 (3) obj. -275.998 iterations 0
Cbc0038I Pass  21: suminf.    0.87932 (3) obj. -275.998 iterations 1
Cbc0038I Pass  22: suminf.    1.23998 (6) obj. -275.998 iterations 20
Cbc0038I Pass  23: suminf.    1.23998 (6) obj. -275.998 iterations 4
Cbc0038I Pass  24: suminf.    0.78286 (4) obj. -275.998 iterations 8
Cbc0038I Pass  25: suminf.    0.78286 (4) obj. -275.998 iterations 0
Cbc0038I Pass  26: suminf.    0.79636 (4) obj. -275.998 iterations 3
Cbc0038I Pass  27: suminf.    0.79636 (4) obj. -275.998 iterations 0
Cbc0038I Pass  28: suminf.    0.57676 (5) obj. -275.998 iterations 20
Cbc0038I Pass  29: suminf.    0.57676 (5) obj. -275.998 iterations 5
Cbc0038I Pass  30: suminf.    0.64702 (2) obj. -275.998 iterations 5
Cbc0038I Pass  31: suminf.    0.40909 (2) obj. -389.015 iterations 2
Cbc0038I Pass  32: suminf.    0.96310 (5) obj. -586.511 iterations 10
Cbc0038I Rounding solution of -1200 is better than previous of 150

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -1200 to -1450 (0.02 seconds)
Cbc0038I Round again with cutoff of -1957
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.15684 (17) obj. -3276.59 iterations 0
Cbc0038I Pass  33: suminf.    3.15684 (17) obj. -3276.59 iterations 1
Cbc0038I Pass  34: suminf.    1.67894 (17) obj. -1957 iterations 24
Cbc0038I Pass  35: suminf.    1.48935 (7) obj. -1957 iterations 1
Cbc0038I Pass  36: suminf.    1.65244 (7) obj. -1957 iterations 1
Cbc0038I Pass  37: suminf.    1.35661 (7) obj. -2038.35 iterations 1
Cbc0038I Pass  38: suminf.    1.30163 (8) obj. -2584.26 iterations 11
Cbc0038I Pass  39: suminf.    1.30163 (8) obj. -2584.26 iterations 3
Cbc0038I Pass  40: suminf.    0.62324 (4) obj. -1957 iterations 6
Cbc0038I Pass  41: suminf.    0.62324 (4) obj. -1957 iterations 0
Cbc0038I Pass  42: suminf.    1.08304 (4) obj. -1957 iterations 1
Cbc0038I Pass  43: suminf.    1.08304 (4) obj. -1957 iterations 0
Cbc0038I Pass  44: suminf.    0.62324 (4) obj. -1957 iterations 1
Cbc0038I Pass  45: suminf.    1.12006 (5) obj. -1957 iterations 5
Cbc0038I Pass  46: suminf.    0.81190 (5) obj. -2095.67 iterations 3
Cbc0038I Pass  47: suminf.    0.80707 (4) obj. -1957 iterations 3
Cbc0038I Pass  48: suminf.    0.71190 (4) obj. -1983.17 iterations 1
Cbc0038I Pass  49: suminf.    1.26459 (6) obj. -1957 iterations 13
Cbc0038I Pass  50: suminf.    0.93452 (5) obj. -2221.02 iterations 3
Cbc0038I Pass  51: suminf.    0.64527 (4) obj. -1957 iterations 3
Cbc0038I Pass  52: suminf.    0.64527 (4) obj. -1957 iterations 0
Cbc0038I Pass  53: suminf.    1.10830 (4) obj. -1957 iterations 1
Cbc0038I Pass  54: suminf.    1.10830 (4) obj. -1957 iterations 0
Cbc0038I Pass  55: suminf.    0.64527 (4) obj. -1957 iterations 1
Cbc0038I Pass  56: suminf.    0.88701 (4) obj. -2041.6 iterations 7
Cbc0038I Pass  57: suminf.    0.88701 (4) obj. -2041.6 iterations 3
Cbc0038I Pass  58: suminf.    1.15078 (4) obj. -1957 iterations 3
Cbc0038I Pass  59: suminf.    1.15078 (4) obj. -1957 iterations 0
Cbc0038I Pass  60: suminf.    0.99169 (3) obj. -1957 iterations 1
Cbc0038I Pass  61: suminf.    0.67273 (3) obj. -2100.53 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 60 rows 63 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1450 - took 0.01 seconds
Cbc0012I Integer solution of -1450 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -1550 found by DiveCoefficient after 12 iterations and 0 nodes (0.03 seconds)
Cbc0013I At root node, 0 cuts changed objective from -3884.9808 to -1550 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1550, took 12 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

