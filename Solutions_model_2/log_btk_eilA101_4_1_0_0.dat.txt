Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 99 (-4) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 9.21999e-05 - average 5.15083e-07, 11 fixed columns
Coin0506I Presolve 153 (-26) rows, 86 (-13) columns and 470 (-78) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.3457641 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 38.347413
Clp0000I Optimal - objective value 38.347413
Coin0511I After Postsolve, objective 38.347413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.347413
Clp0000I Optimal - objective value 38.347413
Clp0000I Optimal - objective value 38.347413
Coin0511I After Postsolve, objective 38.347413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.34741294 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 179 rows, 99 columns (98 integer (98 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.898%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 14.1801
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.5329 iterations 77
Cbc0038I Solution found of 15.5329
Cbc0038I Relaxing continuous gives 15.5329
Cbc0038I Rounding solution of 1.93181 is better than previous of 15.5329

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 99 columns, reduced to 90 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 1.93181 to -9.6344 (0.07 seconds)
Cbc0038I Round again with cutoff of -12.5058
Cbc0038I Pass   2: suminf.    4.39491 (17) obj. -12.5058 iterations 21
Cbc0038I Pass   3: suminf.    4.05126 (20) obj. -12.5058 iterations 9
Cbc0038I Pass   4: suminf.    2.17557 (9) obj. -12.5058 iterations 25
Cbc0038I Pass   5: suminf.    2.08680 (8) obj. -12.5058 iterations 1
Cbc0038I Pass   6: suminf.    3.83215 (11) obj. -12.5058 iterations 17
Cbc0038I Pass   7: suminf.    2.12129 (7) obj. -12.5058 iterations 9
Cbc0038I Pass   8: suminf.    3.30288 (8) obj. -12.5058 iterations 9
Cbc0038I Pass   9: suminf.    2.40185 (7) obj. -12.5058 iterations 7
Cbc0038I Pass  10: suminf.    2.98786 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  11: suminf.    2.00643 (8) obj. -12.5058 iterations 4
Cbc0038I Pass  12: suminf.    1.99885 (8) obj. -12.5058 iterations 2
Cbc0038I Pass  13: suminf.    3.31996 (8) obj. -12.5058 iterations 11
Cbc0038I Pass  14: suminf.    2.64241 (8) obj. -12.5058 iterations 11
Cbc0038I Pass  15: suminf.    2.72276 (7) obj. -12.5058 iterations 8
Cbc0038I Pass  16: suminf.    2.72276 (7) obj. -12.5058 iterations 0
Cbc0038I Pass  17: suminf.    2.95641 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  18: suminf.    2.76373 (7) obj. -12.5058 iterations 1
Cbc0038I Pass  19: suminf.    2.40185 (7) obj. -12.5058 iterations 4
Cbc0038I Pass  20: suminf.    2.98786 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  21: suminf.    2.00643 (8) obj. -12.5058 iterations 4
Cbc0038I Pass  22: suminf.    1.99885 (8) obj. -12.5058 iterations 2
Cbc0038I Pass  23: suminf.    3.31996 (8) obj. -12.5058 iterations 11
Cbc0038I Pass  24: suminf.    2.64241 (8) obj. -12.5058 iterations 11
Cbc0038I Pass  25: suminf.    2.72276 (7) obj. -12.5058 iterations 8
Cbc0038I Pass  26: suminf.    2.72276 (7) obj. -12.5058 iterations 0
Cbc0038I Pass  27: suminf.    2.95641 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  28: suminf.    2.76373 (7) obj. -12.5058 iterations 1
Cbc0038I Pass  29: suminf.    2.40185 (7) obj. -12.5058 iterations 4
Cbc0038I Pass  30: suminf.    2.98786 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  31: suminf.    2.00643 (8) obj. -12.5058 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 99 columns, reduced to 92 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -9.6344 - took 0.12 seconds
Cbc0012I Integer solution of -9.634404 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 90 rows 53 columns
Cbc0031I 39 added rows had average density of 52.512821
Cbc0013I At root node, 39 cuts changed objective from -38.347413 to -30.868668 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23575 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.155 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2464 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 79.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.634404 best solution, best possible -30.868668 (1.85 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 95 rows 54 columns
Cbc0012I Integer solution of -10.259784 found by RINS after 12951 iterations and 43 nodes (2.20 seconds)
Cbc0012I Integer solution of -10.408648 found by rounding after 14639 iterations and 75 nodes (2.41 seconds)
Cbc0016I Integer solution of -10.444205 found by strong branching after 14701 iterations and 82 nodes (2.42 seconds)
Cbc0012I Integer solution of -10.614514 found by rounding after 14746 iterations and 88 nodes (2.43 seconds)
Cbc0010I After 126 nodes, 12 on tree, -10.614514 best solution, best possible -30.868668 (2.56 seconds)
Cbc0001I Search completed - best objective -10.614514, took 16951 iterations and 172 nodes (2.68 seconds)
Cbc0032I Strong branching done 1616 times (30088 iterations), fathomed 22 nodes and fixed 98 variables
Cbc0035I Maximum depth 40, 451 variables fixed on reduced cost
Total time (CPU seconds):       2.57   (Wallclock seconds):       2.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-81) rows, 140 (-62) columns and 2569 (-3084) elements
Clp1000I sum of infeasibilities 1.08462e-07 - average 8.81802e-10, 22 fixed columns
Coin0506I Presolve 103 (-20) rows, 118 (-22) columns and 1866 (-703) elements
Clp0006I 0  Obj 35.313668 Dual inf 5.7028136 (117)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 1.6948126 - largest nonzero change 2.8188793e-05 ( 0.0023983587%) - largest zero change 2.9829375e-05
Clp0000I Optimal - objective value 53.965169
Clp0000I Optimal - objective value 53.965169
Coin0511I After Postsolve, objective 53.965169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.965169
Clp0000I Optimal - objective value 53.965169
Clp0000I Optimal - objective value 53.965169
Clp0000I Optimal - objective value 53.965169
Coin0511I After Postsolve, objective 53.965169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.96516946 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 142 columns (142 integer (142 of which binary)) and 2578 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.933%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.69671
Cbc0038I Pass   1: suminf.    4.99490 (36) obj. -35.6379 iterations 20
Cbc0038I Pass   2: suminf.    4.99490 (36) obj. -35.6379 iterations 1
Cbc0038I Pass   3: suminf.    2.57151 (20) obj. -16.1193 iterations 16
Cbc0038I Solution found of 3.05693
Cbc0038I Rounding solution of 2.78243 is better than previous of 3.05693

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 142 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 2.78243 to -2.28896 (0.03 seconds)
Cbc0038I Round again with cutoff of -6.53892
Cbc0038I Pass   4: suminf.    4.99490 (36) obj. -35.6379 iterations 0
Cbc0038I Pass   5: suminf.    4.99490 (36) obj. -35.6379 iterations 1
Cbc0038I Pass   6: suminf.    1.62263 (13) obj. -10.0682 iterations 23
Cbc0038I Pass   7: suminf.    0.72356 (6) obj. -6.53892 iterations 22
Cbc0038I Pass   8: suminf.    0.72263 (7) obj. -6.53892 iterations 2
Cbc0038I Pass   9: suminf.    0.34106 (4) obj. -6.53892 iterations 33
Cbc0038I Pass  10: suminf.    0.32046 (4) obj. -6.70077 iterations 6
Cbc0038I Pass  11: suminf.    0.37501 (4) obj. -6.53892 iterations 4
Cbc0038I Pass  12: suminf.    3.60030 (18) obj. -6.53892 iterations 28
Cbc0038I Pass  13: suminf.    2.92294 (17) obj. -6.53892 iterations 5
Cbc0038I Pass  14: suminf.    1.29503 (8) obj. -6.53892 iterations 27
Cbc0038I Pass  15: suminf.    0.95749 (6) obj. -6.53892 iterations 3
Cbc0038I Pass  16: suminf.    1.39813 (6) obj. -6.53892 iterations 13
Cbc0038I Pass  17: suminf.    1.39813 (6) obj. -6.53892 iterations 0
Cbc0038I Pass  18: suminf.    1.29107 (5) obj. -6.53892 iterations 8
Cbc0038I Pass  19: suminf.    0.79711 (4) obj. -6.53892 iterations 6
Cbc0038I Pass  20: suminf.    1.27914 (5) obj. -6.53892 iterations 8
Cbc0038I Pass  21: suminf.    0.80672 (4) obj. -6.53892 iterations 10
Cbc0038I Pass  22: suminf.    1.19533 (5) obj. -6.53892 iterations 9
Cbc0038I Pass  23: suminf.    0.75454 (4) obj. -6.53892 iterations 10
Cbc0038I Pass  24: suminf.    3.14857 (12) obj. -6.53892 iterations 21
Cbc0038I Pass  25: suminf.    2.20906 (11) obj. -6.53892 iterations 2
Cbc0038I Pass  26: suminf.    1.67995 (11) obj. -7.93694 iterations 3
Cbc0038I Pass  27: suminf.    1.47545 (8) obj. -6.53892 iterations 12
Cbc0038I Pass  28: suminf.    1.24183 (8) obj. -7.00617 iterations 1
Cbc0038I Pass  29: suminf.    1.96372 (14) obj. -6.53892 iterations 19
Cbc0038I Pass  30: suminf.    1.71617 (13) obj. -6.53892 iterations 7
Cbc0038I Pass  31: suminf.    1.10685 (4) obj. -6.53892 iterations 19
Cbc0038I Pass  32: suminf.    0.53052 (5) obj. -6.53892 iterations 14
Cbc0038I Pass  33: suminf.    0.87097 (5) obj. -6.53892 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 142 columns, reduced to 16 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -2.28896 to -2.69549 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.1887
Cbc0038I Pass  33: suminf.    4.99490 (36) obj. -35.6379 iterations 0
Cbc0038I Pass  34: suminf.    4.99490 (36) obj. -35.6379 iterations 1
Cbc0038I Pass  35: suminf.    1.91886 (14) obj. -14.1887 iterations 37
Cbc0038I Pass  36: suminf.    1.91872 (15) obj. -14.1887 iterations 2
Cbc0038I Pass  37: suminf.    1.45616 (9) obj. -14.1887 iterations 36
Cbc0038I Pass  38: suminf.    1.33391 (8) obj. -14.1887 iterations 7
Cbc0038I Pass  39: suminf.    1.75172 (8) obj. -14.1887 iterations 9
Cbc0038I Pass  40: suminf.    1.75172 (8) obj. -14.1887 iterations 5
Cbc0038I Pass  41: suminf.    1.75498 (8) obj. -14.1887 iterations 7
Cbc0038I Pass  42: suminf.    1.75498 (8) obj. -14.1887 iterations 5
Cbc0038I Pass  43: suminf.    4.55841 (18) obj. -14.1887 iterations 20
Cbc0038I Pass  44: suminf.    1.87958 (11) obj. -16.8445 iterations 8
Cbc0038I Pass  45: suminf.    1.87958 (11) obj. -16.8445 iterations 0
Cbc0038I Pass  46: suminf.    1.29140 (7) obj. -14.1887 iterations 13
Cbc0038I Pass  47: suminf.    1.29140 (7) obj. -14.1887 iterations 2
Cbc0038I Pass  48: suminf.    1.26652 (7) obj. -14.1887 iterations 3
Cbc0038I Pass  49: suminf.    1.26652 (7) obj. -14.1887 iterations 2
Cbc0038I Pass  50: suminf.    1.29140 (7) obj. -14.1887 iterations 3
Cbc0038I Pass  51: suminf.    4.32763 (20) obj. -14.1887 iterations 27
Cbc0038I Pass  52: suminf.    4.15442 (20) obj. -14.1887 iterations 2
Cbc0038I Pass  53: suminf.    2.64208 (15) obj. -14.1887 iterations 14
Cbc0038I Pass  54: suminf.    2.47961 (13) obj. -14.1887 iterations 3
Cbc0038I Pass  55: suminf.    1.69771 (12) obj. -14.1887 iterations 22
Cbc0038I Pass  56: suminf.    1.69716 (10) obj. -14.1887 iterations 8
Cbc0038I Pass  57: suminf.    2.00045 (9) obj. -14.1887 iterations 8
Cbc0038I Pass  58: suminf.    1.52794 (8) obj. -14.2078 iterations 6
Cbc0038I Pass  59: suminf.    2.00045 (9) obj. -14.1887 iterations 9
Cbc0038I Pass  60: suminf.    3.22752 (13) obj. -14.1887 iterations 31
Cbc0038I Pass  61: suminf.    2.73589 (15) obj. -14.1887 iterations 10
Cbc0038I Pass  62: suminf.    2.33322 (13) obj. -14.1887 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -2.69549 - took 0.07 seconds
Cbc0012I Integer solution of -2.695494 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 125 rows 142 columns, reduced to 3 rows 5 columns
Cbc0031I 64 added rows had average density of 44.015625
Cbc0013I At root node, 64 cuts changed objective from -44.787653 to -15.924007 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19424 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2600 row cuts average 134.0 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1172 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2057 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 429 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 79 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.272 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.695494 best solution, best possible -15.924007 (2.45 seconds)
Cbc0012I Integer solution of -6.336964 found by rounding after 7515 iterations and 1 nodes (2.46 seconds)
Cbc0004I Integer solution of -9.503164 found after 7587 iterations and 1 nodes (2.47 seconds)
Cbc0010I After 7 nodes, 6 on tree, -9.503164 best solution, best possible -15.53608 (3.18 seconds)
Cbc0038I Full problem 125 rows 142 columns, reduced to 9 rows 17 columns
Cbc0004I Integer solution of -9.547824 found after 10755 iterations and 45 nodes (3.82 seconds)
Cbc0010I After 57 nodes, 11 on tree, -9.547824 best solution, best possible -15.53608 (3.89 seconds)
Cbc0012I Integer solution of -9.823841 found by rounding after 11896 iterations and 87 nodes (4.01 seconds)
Cbc0038I Full problem 125 rows 142 columns, reduced to 58 rows 77 columns
Cbc0012I Integer solution of -10.134154 found by DiveCoefficient after 13214 iterations and 109 nodes (4.38 seconds)
Cbc0012I Integer solution of -10.340964 found by DiveCoefficient after 13274 iterations and 110 nodes (4.40 seconds)
Cbc0012I Integer solution of -10.408648 found by rounding after 13332 iterations and 113 nodes (4.42 seconds)
Cbc0016I Integer solution of -10.444205 found by strong branching after 13683 iterations and 136 nodes (4.51 seconds)
Cbc0012I Integer solution of -10.46565 found by rounding after 13697 iterations and 137 nodes (4.51 seconds)
Cbc0012I Integer solution of -10.614514 found by rounding after 13736 iterations and 141 nodes (4.52 seconds)
Cbc0010I After 151 nodes, 8 on tree, -10.614514 best solution, best possible -15.53608 (4.59 seconds)
Cbc0001I Search completed - best objective -10.614514, took 14641 iterations and 172 nodes (4.66 seconds)
Cbc0032I Strong branching done 1308 times (24461 iterations), fathomed 34 nodes and fixed 32 variables
Cbc0035I Maximum depth 28, 487 variables fixed on reduced cost
Total time (CPU seconds):       4.25   (Wallclock seconds):       4.69

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 99 (-4) columns and 548 (-55) elements
Clp1000I sum of infeasibilities 9.21999e-05 - average 5.15083e-07, 11 fixed columns
Coin0506I Presolve 153 (-26) rows, 86 (-13) columns and 470 (-78) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.3457641 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 38.347413
Clp0000I Optimal - objective value 38.347413
Coin0511I After Postsolve, objective 38.347413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.347413
Clp0000I Optimal - objective value 38.347413
Clp0000I Optimal - objective value 38.347413
Coin0511I After Postsolve, objective 38.347413, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.34741294 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 179 rows, 99 columns (98 integer (98 of which binary)) and 548 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.898%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 14.1801
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.5329 iterations 77
Cbc0038I Solution found of 15.5329
Cbc0038I Relaxing continuous gives 15.5329
Cbc0038I Rounding solution of 1.93181 is better than previous of 15.5329

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 99 columns, reduced to 90 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 1.93181 to -9.6344 (0.07 seconds)
Cbc0038I Round again with cutoff of -12.5058
Cbc0038I Pass   2: suminf.    4.39491 (17) obj. -12.5058 iterations 21
Cbc0038I Pass   3: suminf.    4.05126 (20) obj. -12.5058 iterations 9
Cbc0038I Pass   4: suminf.    2.17557 (9) obj. -12.5058 iterations 25
Cbc0038I Pass   5: suminf.    2.08680 (8) obj. -12.5058 iterations 1
Cbc0038I Pass   6: suminf.    3.83215 (11) obj. -12.5058 iterations 17
Cbc0038I Pass   7: suminf.    2.12129 (7) obj. -12.5058 iterations 9
Cbc0038I Pass   8: suminf.    3.30288 (8) obj. -12.5058 iterations 9
Cbc0038I Pass   9: suminf.    2.40185 (7) obj. -12.5058 iterations 7
Cbc0038I Pass  10: suminf.    2.98786 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  11: suminf.    2.00643 (8) obj. -12.5058 iterations 4
Cbc0038I Pass  12: suminf.    1.99885 (8) obj. -12.5058 iterations 2
Cbc0038I Pass  13: suminf.    3.31996 (8) obj. -12.5058 iterations 11
Cbc0038I Pass  14: suminf.    2.64241 (8) obj. -12.5058 iterations 11
Cbc0038I Pass  15: suminf.    2.72276 (7) obj. -12.5058 iterations 8
Cbc0038I Pass  16: suminf.    2.72276 (7) obj. -12.5058 iterations 0
Cbc0038I Pass  17: suminf.    2.95641 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  18: suminf.    2.76373 (7) obj. -12.5058 iterations 1
Cbc0038I Pass  19: suminf.    2.40185 (7) obj. -12.5058 iterations 4
Cbc0038I Pass  20: suminf.    2.98786 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  21: suminf.    2.00643 (8) obj. -12.5058 iterations 4
Cbc0038I Pass  22: suminf.    1.99885 (8) obj. -12.5058 iterations 2
Cbc0038I Pass  23: suminf.    3.31996 (8) obj. -12.5058 iterations 11
Cbc0038I Pass  24: suminf.    2.64241 (8) obj. -12.5058 iterations 11
Cbc0038I Pass  25: suminf.    2.72276 (7) obj. -12.5058 iterations 8
Cbc0038I Pass  26: suminf.    2.72276 (7) obj. -12.5058 iterations 0
Cbc0038I Pass  27: suminf.    2.95641 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  28: suminf.    2.76373 (7) obj. -12.5058 iterations 1
Cbc0038I Pass  29: suminf.    2.40185 (7) obj. -12.5058 iterations 4
Cbc0038I Pass  30: suminf.    2.98786 (8) obj. -12.5058 iterations 8
Cbc0038I Pass  31: suminf.    2.00643 (8) obj. -12.5058 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 99 columns, reduced to 92 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -9.6344 - took 0.12 seconds
Cbc0012I Integer solution of -9.634404 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 90 rows 53 columns
Cbc0031I 39 added rows had average density of 52.512821
Cbc0013I At root node, 39 cuts changed objective from -38.347413 to -30.868668 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23575 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2464 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 79.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.634404 best solution, best possible -30.868668 (1.90 seconds)
Cbc0038I Full problem 179 rows 99 columns, reduced to 95 rows 54 columns
Cbc0012I Integer solution of -10.259784 found by RINS after 12951 iterations and 43 nodes (2.25 seconds)
Cbc0012I Integer solution of -10.408648 found by rounding after 14639 iterations and 75 nodes (2.47 seconds)
Cbc0016I Integer solution of -10.444205 found by strong branching after 14701 iterations and 82 nodes (2.48 seconds)
Cbc0012I Integer solution of -10.614514 found by rounding after 14746 iterations and 88 nodes (2.48 seconds)
Cbc0010I After 126 nodes, 12 on tree, -10.614514 best solution, best possible -30.868668 (2.60 seconds)
Cbc0001I Search completed - best objective -10.614514, took 16951 iterations and 172 nodes (2.71 seconds)
Cbc0032I Strong branching done 1616 times (30088 iterations), fathomed 22 nodes and fixed 98 variables
Cbc0035I Maximum depth 40, 451 variables fixed on reduced cost
Total time (CPU seconds):       2.63   (Wallclock seconds):       2.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-82) rows, 140 (-63) columns and 2569 (-3085) elements
Clp1000I sum of infeasibilities 1.08462e-07 - average 8.81802e-10, 22 fixed columns
Coin0506I Presolve 103 (-20) rows, 118 (-22) columns and 1866 (-703) elements
Clp0006I 0  Obj 35.313668 Dual inf 5.7028136 (117)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 1.6948126 - largest nonzero change 2.8188793e-05 ( 0.0023983587%) - largest zero change 2.9829375e-05
Clp0000I Optimal - objective value 53.965169
Clp0000I Optimal - objective value 53.965169
Coin0511I After Postsolve, objective 53.965169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 53.965169
Clp0000I Optimal - objective value 53.965169
Clp0000I Optimal - objective value 53.965169
Clp0000I Optimal - objective value 53.965169
Coin0511I After Postsolve, objective 53.965169, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.96516946 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 125 rows, 142 columns (142 integer (142 of which binary)) and 2578 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.933%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 6.69671
Cbc0038I Pass   1: suminf.    4.99490 (36) obj. -35.6379 iterations 20
Cbc0038I Pass   2: suminf.    4.99490 (36) obj. -35.6379 iterations 1
Cbc0038I Pass   3: suminf.    2.57151 (20) obj. -16.1193 iterations 16
Cbc0038I Solution found of 3.05693
Cbc0038I Rounding solution of 2.78243 is better than previous of 3.05693

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 142 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 2.78243 to -2.28896 (0.04 seconds)
Cbc0038I Round again with cutoff of -6.53892
Cbc0038I Pass   4: suminf.    4.99490 (36) obj. -35.6379 iterations 0
Cbc0038I Pass   5: suminf.    4.99490 (36) obj. -35.6379 iterations 1
Cbc0038I Pass   6: suminf.    1.62263 (13) obj. -10.0682 iterations 23
Cbc0038I Pass   7: suminf.    0.72356 (6) obj. -6.53892 iterations 22
Cbc0038I Pass   8: suminf.    0.72263 (7) obj. -6.53892 iterations 2
Cbc0038I Pass   9: suminf.    0.34106 (4) obj. -6.53892 iterations 33
Cbc0038I Pass  10: suminf.    0.32046 (4) obj. -6.70077 iterations 6
Cbc0038I Pass  11: suminf.    0.37501 (4) obj. -6.53892 iterations 4
Cbc0038I Pass  12: suminf.    3.60030 (18) obj. -6.53892 iterations 28
Cbc0038I Pass  13: suminf.    2.92294 (17) obj. -6.53892 iterations 5
Cbc0038I Pass  14: suminf.    1.29503 (8) obj. -6.53892 iterations 27
Cbc0038I Pass  15: suminf.    0.95749 (6) obj. -6.53892 iterations 3
Cbc0038I Pass  16: suminf.    1.39813 (6) obj. -6.53892 iterations 13
Cbc0038I Pass  17: suminf.    1.39813 (6) obj. -6.53892 iterations 0
Cbc0038I Pass  18: suminf.    1.29107 (5) obj. -6.53892 iterations 8
Cbc0038I Pass  19: suminf.    0.79711 (4) obj. -6.53892 iterations 6
Cbc0038I Pass  20: suminf.    1.27914 (5) obj. -6.53892 iterations 8
Cbc0038I Pass  21: suminf.    0.80672 (4) obj. -6.53892 iterations 10
Cbc0038I Pass  22: suminf.    1.19533 (5) obj. -6.53892 iterations 9
Cbc0038I Pass  23: suminf.    0.75454 (4) obj. -6.53892 iterations 10
Cbc0038I Pass  24: suminf.    3.14857 (12) obj. -6.53892 iterations 21
Cbc0038I Pass  25: suminf.    2.20906 (11) obj. -6.53892 iterations 2
Cbc0038I Pass  26: suminf.    1.67995 (11) obj. -7.93694 iterations 3
Cbc0038I Pass  27: suminf.    1.47545 (8) obj. -6.53892 iterations 12
Cbc0038I Pass  28: suminf.    1.24183 (8) obj. -7.00617 iterations 1
Cbc0038I Pass  29: suminf.    1.96372 (14) obj. -6.53892 iterations 19
Cbc0038I Pass  30: suminf.    1.71617 (13) obj. -6.53892 iterations 7
Cbc0038I Pass  31: suminf.    1.10685 (4) obj. -6.53892 iterations 19
Cbc0038I Pass  32: suminf.    0.53052 (5) obj. -6.53892 iterations 14
Cbc0038I Pass  33: suminf.    0.87097 (5) obj. -6.53892 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 125 rows 142 columns, reduced to 16 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -2.28896 to -2.69549 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.1887
Cbc0038I Pass  33: suminf.    4.99490 (36) obj. -35.6379 iterations 0
Cbc0038I Pass  34: suminf.    4.99490 (36) obj. -35.6379 iterations 1
Cbc0038I Pass  35: suminf.    1.91886 (14) obj. -14.1887 iterations 37
Cbc0038I Pass  36: suminf.    1.91872 (15) obj. -14.1887 iterations 2
Cbc0038I Pass  37: suminf.    1.45616 (9) obj. -14.1887 iterations 36
Cbc0038I Pass  38: suminf.    1.33391 (8) obj. -14.1887 iterations 7
Cbc0038I Pass  39: suminf.    1.75172 (8) obj. -14.1887 iterations 9
Cbc0038I Pass  40: suminf.    1.75172 (8) obj. -14.1887 iterations 5
Cbc0038I Pass  41: suminf.    1.75498 (8) obj. -14.1887 iterations 7
Cbc0038I Pass  42: suminf.    1.75498 (8) obj. -14.1887 iterations 5
Cbc0038I Pass  43: suminf.    4.55841 (18) obj. -14.1887 iterations 20
Cbc0038I Pass  44: suminf.    1.87958 (11) obj. -16.8445 iterations 8
Cbc0038I Pass  45: suminf.    1.87958 (11) obj. -16.8445 iterations 0
Cbc0038I Pass  46: suminf.    1.29140 (7) obj. -14.1887 iterations 13
Cbc0038I Pass  47: suminf.    1.29140 (7) obj. -14.1887 iterations 2
Cbc0038I Pass  48: suminf.    1.26652 (7) obj. -14.1887 iterations 3
Cbc0038I Pass  49: suminf.    1.26652 (7) obj. -14.1887 iterations 2
Cbc0038I Pass  50: suminf.    1.29140 (7) obj. -14.1887 iterations 3
Cbc0038I Pass  51: suminf.    4.32763 (20) obj. -14.1887 iterations 27
Cbc0038I Pass  52: suminf.    4.15442 (20) obj. -14.1887 iterations 2
Cbc0038I Pass  53: suminf.    2.64208 (15) obj. -14.1887 iterations 14
Cbc0038I Pass  54: suminf.    2.47961 (13) obj. -14.1887 iterations 3
Cbc0038I Pass  55: suminf.    1.69771 (12) obj. -14.1887 iterations 22
Cbc0038I Pass  56: suminf.    1.69716 (10) obj. -14.1887 iterations 8
Cbc0038I Pass  57: suminf.    2.00045 (9) obj. -14.1887 iterations 8
Cbc0038I Pass  58: suminf.    1.52794 (8) obj. -14.2078 iterations 6
Cbc0038I Pass  59: suminf.    2.00045 (9) obj. -14.1887 iterations 9
Cbc0038I Pass  60: suminf.    3.22752 (13) obj. -14.1887 iterations 31
Cbc0038I Pass  61: suminf.    2.73589 (15) obj. -14.1887 iterations 10
Cbc0038I Pass  62: suminf.    2.33322 (13) obj. -14.1887 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -2.69549 - took 0.07 seconds
Cbc0012I Integer solution of -2.695494 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 125 rows 142 columns, reduced to 3 rows 5 columns
Cbc0031I 64 added rows had average density of 44.015625
Cbc0013I At root node, 64 cuts changed objective from -44.787653 to -15.924007 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19424 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2600 row cuts average 134.0 elements, 0 column cuts (0 active)  in 0.251 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1172 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2057 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 429 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 79 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.297 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.695494 best solution, best possible -15.924007 (2.56 seconds)
Cbc0012I Integer solution of -6.336964 found by rounding after 7515 iterations and 1 nodes (2.57 seconds)
Cbc0004I Integer solution of -9.503164 found after 7587 iterations and 1 nodes (2.57 seconds)
Cbc0010I After 6 nodes, 5 on tree, -9.503164 best solution, best possible -15.53608 (3.30 seconds)
Cbc0038I Full problem 125 rows 142 columns, reduced to 9 rows 17 columns
Cbc0010I After 43 nodes, 12 on tree, -9.503164 best solution, best possible -15.53608 (4.00 seconds)
Cbc0004I Integer solution of -9.547824 found after 10755 iterations and 45 nodes (4.00 seconds)
Cbc0012I Integer solution of -9.823841 found by rounding after 11896 iterations and 87 nodes (4.20 seconds)
Cbc0038I Full problem 125 rows 142 columns, reduced to 58 rows 77 columns
Cbc0012I Integer solution of -10.134154 found by DiveCoefficient after 13214 iterations and 109 nodes (4.59 seconds)
Cbc0012I Integer solution of -10.340964 found by DiveCoefficient after 13274 iterations and 110 nodes (4.62 seconds)
Cbc0012I Integer solution of -10.408648 found by rounding after 13332 iterations and 113 nodes (4.63 seconds)
Cbc0010I After 124 nodes, 9 on tree, -10.408648 best solution, best possible -15.53608 (4.70 seconds)
Cbc0016I Integer solution of -10.444205 found by strong branching after 13683 iterations and 136 nodes (4.73 seconds)
Cbc0012I Integer solution of -10.46565 found by rounding after 13697 iterations and 137 nodes (4.73 seconds)
Cbc0012I Integer solution of -10.614514 found by rounding after 13736 iterations and 141 nodes (4.75 seconds)
Cbc0001I Search completed - best objective -10.614514, took 14641 iterations and 172 nodes (4.88 seconds)
Cbc0032I Strong branching done 1308 times (24461 iterations), fathomed 34 nodes and fixed 32 variables
Cbc0035I Maximum depth 28, 487 variables fixed on reduced cost
Total time (CPU seconds):       4.46   (Wallclock seconds):       4.92

