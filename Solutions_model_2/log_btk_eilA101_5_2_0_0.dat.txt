Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 101 (-2) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 3.28626e-05 - average 1.80564e-07, 13 fixed columns
Coin0506I Presolve 157 (-25) rows, 88 (-13) columns and 482 (-76) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 0.25684916 - largest nonzero change 0 ( 0%) - largest zero change 2.9533151e-05
Clp0000I Optimal - objective value 51.083977
Clp0000I Optimal - objective value 51.083977
Coin0511I After Postsolve, objective 51.083977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.083977
Clp0000I Optimal - objective value 51.083977
Clp0000I Optimal - objective value 51.083977
Coin0511I After Postsolve, objective 51.083977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.08397703 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 101 columns (100 integer (100 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.878%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 12.8578
Cbc0038I Solution found of 4.33174
Cbc0038I Relaxing continuous gives -4.99506
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 98 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -4.99506 to -27.7628 (0.06 seconds)
Cbc0038I Round again with cutoff of -30.095
Cbc0038I Pass   1: suminf.    5.57064 (43) obj. -30.095 iterations 64
Cbc0038I Pass   2: suminf.    3.09034 (13) obj. -30.095 iterations 40
Cbc0038I Pass   3: suminf.    2.42733 (10) obj. -30.095 iterations 6
Cbc0038I Pass   4: suminf.    3.70049 (16) obj. -30.095 iterations 23
Cbc0038I Pass   5: suminf.    3.62319 (15) obj. -30.095 iterations 1
Cbc0038I Pass   6: suminf.    3.40786 (11) obj. -30.095 iterations 14
Cbc0038I Pass   7: suminf.    3.07571 (13) obj. -30.095 iterations 7
Cbc0038I Pass   8: suminf.    2.99743 (10) obj. -30.095 iterations 9
Cbc0038I Pass   9: suminf.    2.48023 (9) obj. -30.095 iterations 8
Cbc0038I Pass  10: suminf.    2.44634 (10) obj. -30.095 iterations 1
Cbc0038I Pass  11: suminf.    3.27984 (9) obj. -30.095 iterations 11
Cbc0038I Pass  12: suminf.    2.91887 (9) obj. -30.095 iterations 2
Cbc0038I Pass  13: suminf.    4.08794 (11) obj. -30.095 iterations 7
Cbc0038I Pass  14: suminf.    3.22206 (14) obj. -30.095 iterations 6
Cbc0038I Pass  15: suminf.    3.44195 (10) obj. -30.095 iterations 14
Cbc0038I Pass  16: suminf.    2.87519 (9) obj. -30.095 iterations 5
Cbc0038I Pass  17: suminf.    2.83899 (12) obj. -30.095 iterations 2
Cbc0038I Pass  18: suminf.    4.94751 (12) obj. -30.095 iterations 16
Cbc0038I Pass  19: suminf.    3.00465 (9) obj. -30.095 iterations 13
Cbc0038I Pass  20: suminf.    2.91887 (9) obj. -30.095 iterations 1
Cbc0038I Pass  21: suminf.    2.91887 (9) obj. -30.095 iterations 1
Cbc0038I Pass  22: suminf.    4.08794 (11) obj. -30.095 iterations 8
Cbc0038I Pass  23: suminf.    3.22206 (14) obj. -30.095 iterations 6
Cbc0038I Pass  24: suminf.    3.86705 (12) obj. -30.095 iterations 17
Cbc0038I Pass  25: suminf.    3.10029 (10) obj. -30.095 iterations 6
Cbc0038I Pass  26: suminf.    3.07571 (13) obj. -30.095 iterations 2
Cbc0038I Pass  27: suminf.    4.27906 (10) obj. -30.095 iterations 13
Cbc0038I Pass  28: suminf.    2.94528 (9) obj. -30.095 iterations 9
Cbc0038I Pass  29: suminf.    2.91887 (9) obj. -30.095 iterations 2
Cbc0038I Pass  30: suminf.    4.08794 (11) obj. -30.095 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 111 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -27.7628 - took 0.13 seconds
Cbc0012I Integer solution of -27.76277 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 98 rows 57 columns
Cbc0031I 36 added rows had average density of 55.472222
Cbc0013I At root node, 36 cuts changed objective from -51.083977 to -44.553728 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24239 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3011 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.76277 best solution, best possible -44.553728 (1.64 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 87 rows 52 columns
Cbc0012I Integer solution of -27.77595 found by DiveCoefficient after 14861 iterations and 90 nodes (2.06 seconds)
Cbc0012I Integer solution of -27.81456 found by DiveCoefficient after 14863 iterations and 91 nodes (2.07 seconds)
Cbc0012I Integer solution of -27.918178 found by rounding after 14920 iterations and 95 nodes (2.08 seconds)
Cbc0001I Search completed - best objective -27.91817800000001, took 15325 iterations and 132 nodes (2.12 seconds)
Cbc0032I Strong branching done 1092 times (21694 iterations), fathomed 15 nodes and fixed 41 variables
Cbc0035I Maximum depth 31, 376 variables fixed on reduced cost
Total time (CPU seconds):       2.09   (Wallclock seconds):       2.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-70) rows, 152 (-50) columns and 2966 (-2687) elements
Clp1000I sum of infeasibilities 9.46352e-08 - average 7.06233e-10, 24 fixed columns
Coin0506I Presolve 114 (-20) rows, 128 (-24) columns and 2145 (-821) elements
Clp0006I 0  Obj 52.310762 Dual inf 8.7090101 (128)
Clp0029I End of values pass after 128 iterations
Clp0014I Perturbing problem by 0.001% of 1.5280058 - largest nonzero change 2.0268885e-05 ( 0.0017128079%) - largest zero change 2.9695331e-05
Clp0000I Optimal - objective value 65.204193
Clp0000I Optimal - objective value 65.204193
Coin0511I After Postsolve, objective 65.204193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.204193
Clp0000I Optimal - objective value 65.204193
Clp0000I Optimal - objective value 65.204193
Clp0000I Optimal - objective value 65.204193
Coin0511I After Postsolve, objective 65.204193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.20419275 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 153 columns (153 integer (153 of which binary)) and 2973 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 5.40252
Cbc0038I Pass   1: suminf.    3.95889 (40) obj. -56.7123 iterations 23
Cbc0038I Pass   2: suminf.    2.54420 (30) obj. -38.6816 iterations 10
Cbc0038I Pass   3: suminf.    0.32417 (5) obj. -13.1552 iterations 25
Cbc0038I Solution found of -6.6039
Cbc0038I Rounding solution of -9.53532 is better than previous of -6.6039

Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -14.7593
Cbc0038I Pass   4: suminf.    3.95889 (40) obj. -56.7123 iterations 0
Cbc0038I Pass   5: suminf.    2.16423 (27) obj. -36.0615 iterations 13
Cbc0038I Pass   6: suminf.    0.75604 (11) obj. -18.7233 iterations 16
Cbc0038I Pass   7: suminf.    0.77654 (2) obj. -14.7593 iterations 17
Cbc0038I Pass   8: suminf.    0.50141 (2) obj. -14.7593 iterations 1
Cbc0038I Pass   9: suminf.    0.77654 (2) obj. -14.7593 iterations 4
Cbc0038I Pass  10: suminf.    3.36471 (22) obj. -14.7593 iterations 44
Cbc0038I Pass  11: suminf.    1.09389 (17) obj. -14.7593 iterations 21
Cbc0038I Pass  12: suminf.    0.96055 (16) obj. -16.7457 iterations 5
Cbc0038I Pass  13: suminf.    1.20462 (7) obj. -14.7593 iterations 25
Cbc0038I Pass  14: suminf.    1.09240 (8) obj. -14.7593 iterations 3
Cbc0038I Pass  15: suminf.    1.02327 (6) obj. -14.7593 iterations 14
Cbc0038I Pass  16: suminf.    1.02327 (6) obj. -14.7593 iterations 1
Cbc0038I Pass  17: suminf.    0.69004 (3) obj. -14.7593 iterations 7
Cbc0038I Pass  18: suminf.    0.28286 (2) obj. -14.9871 iterations 5
Cbc0038I Pass  19: suminf.    0.69004 (3) obj. -14.7593 iterations 5
Cbc0038I Pass  20: suminf.    1.58011 (14) obj. -15.9543 iterations 41
Cbc0038I Pass  21: suminf.    1.13940 (13) obj. -15.4828 iterations 9
Cbc0038I Pass  22: suminf.    1.42687 (6) obj. -14.7593 iterations 23
Cbc0038I Pass  23: suminf.    0.73026 (4) obj. -16.8218 iterations 6
Cbc0038I Pass  24: suminf.    0.93163 (4) obj. -14.7593 iterations 8
Cbc0038I Pass  25: suminf.    0.68487 (4) obj. -14.7593 iterations 5
Cbc0038I Pass  26: suminf.    0.46290 (3) obj. -14.7593 iterations 6
Cbc0038I Pass  27: suminf.    0.51113 (3) obj. -14.7593 iterations 4
Cbc0038I Pass  28: suminf.    3.07644 (15) obj. -14.7593 iterations 29
Cbc0038I Pass  29: suminf.    1.03584 (8) obj. -14.7593 iterations 16
Cbc0038I Pass  30: suminf.    0.74054 (4) obj. -14.7593 iterations 11
Cbc0038I Pass  31: suminf.    0.66213 (3) obj. -14.9945 iterations 1
Cbc0038I Pass  32: suminf.    0.70918 (3) obj. -14.7593 iterations 5
Cbc0038I Pass  33: suminf.    2.45203 (16) obj. -14.7593 iterations 28
Cbc0038I Rounding solution of -11.6568 is better than previous of -9.53532

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 153 columns, reduced to 47 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -11.6568 to -27.9182 (0.07 seconds)
Cbc0038I Round again with cutoff of -34.6894
Cbc0038I Pass  33: suminf.    3.95889 (40) obj. -56.7123 iterations 0
Cbc0038I Pass  34: suminf.    2.12934 (22) obj. -34.6894 iterations 21
Cbc0038I Pass  35: suminf.    2.04440 (23) obj. -34.6894 iterations 3
Cbc0038I Pass  36: suminf.    2.06833 (13) obj. -34.6894 iterations 29
Cbc0038I Pass  37: suminf.    2.06833 (13) obj. -34.6894 iterations 6
Cbc0038I Pass  38: suminf.    2.06393 (12) obj. -34.6894 iterations 16
Cbc0038I Pass  39: suminf.    2.02183 (13) obj. -34.6894 iterations 8
Cbc0038I Pass  40: suminf.    2.63587 (19) obj. -34.6894 iterations 17
Cbc0038I Pass  41: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  42: suminf.    1.78364 (13) obj. -34.6894 iterations 6
Cbc0038I Pass  43: suminf.    2.07505 (13) obj. -34.6894 iterations 16
Cbc0038I Pass  44: suminf.    2.07505 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  45: suminf.    2.63587 (19) obj. -34.6894 iterations 20
Cbc0038I Pass  46: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  47: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  48: suminf.    2.07505 (13) obj. -34.6894 iterations 16
Cbc0038I Pass  49: suminf.    2.07505 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  50: suminf.    2.63587 (19) obj. -34.6894 iterations 21
Cbc0038I Pass  51: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  52: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  53: suminf.    2.07505 (13) obj. -34.6894 iterations 16
Cbc0038I Pass  54: suminf.    2.07505 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  55: suminf.    2.63587 (19) obj. -34.6894 iterations 20
Cbc0038I Pass  56: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  57: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  58: suminf.    2.07505 (13) obj. -34.6894 iterations 17
Cbc0038I Pass  59: suminf.    2.07505 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  60: suminf.    2.63587 (19) obj. -34.6894 iterations 20
Cbc0038I Pass  61: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  62: suminf.    1.78364 (13) obj. -34.6894 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -27.9182 - took 0.10 seconds
Cbc0012I Integer solution of -27.918178 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 135 rows 153 columns, reduced to 25 rows 27 columns
Cbc0031I 76 added rows had average density of 39.789474
Cbc0013I At root node, 76 cuts changed objective from -61.77391 to -32.260517 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26640 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.297 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2572 row cuts average 143.1 elements, 0 column cuts (0 active)  in 0.243 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1034 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2097 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 427 row cuts average 81.8 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 109 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.230 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.918178 best solution, best possible -32.260517 (2.74 seconds)
Cbc0010I After 5 nodes, 6 on tree, -27.918178 best solution, best possible -32.260517 (3.47 seconds)
Cbc0038I Full problem 135 rows 153 columns, reduced to 2 rows 5 columns
Cbc0010I After 64 nodes, 1 on tree, -27.918178 best solution, best possible -30.904939 (4.20 seconds)
Cbc0001I Search completed - best objective -27.91817800000001, took 12778 iterations and 70 nodes (4.36 seconds)
Cbc0032I Strong branching done 738 times (16240 iterations), fathomed 19 nodes and fixed 10 variables
Cbc0035I Maximum depth 14, 167 variables fixed on reduced cost
Total time (CPU seconds):       4.18   (Wallclock seconds):       4.39

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 101 (-2) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 3.28626e-05 - average 1.80564e-07, 13 fixed columns
Coin0506I Presolve 157 (-25) rows, 88 (-13) columns and 482 (-76) elements
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 0.25684916 - largest nonzero change 0 ( 0%) - largest zero change 2.9533151e-05
Clp0000I Optimal - objective value 51.083977
Clp0000I Optimal - objective value 51.083977
Coin0511I After Postsolve, objective 51.083977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 51.083977
Clp0000I Optimal - objective value 51.083977
Clp0000I Optimal - objective value 51.083977
Coin0511I After Postsolve, objective 51.083977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.08397703 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 101 columns (100 integer (100 of which binary)) and 558 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.878%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 56 integers unsatisfied sum - 12.8578
Cbc0038I Solution found of 4.33174
Cbc0038I Relaxing continuous gives -4.99506
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 98 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -4.99506 to -27.7628 (0.06 seconds)
Cbc0038I Round again with cutoff of -30.095
Cbc0038I Pass   1: suminf.    5.57064 (43) obj. -30.095 iterations 64
Cbc0038I Pass   2: suminf.    3.09034 (13) obj. -30.095 iterations 40
Cbc0038I Pass   3: suminf.    2.42733 (10) obj. -30.095 iterations 6
Cbc0038I Pass   4: suminf.    3.70049 (16) obj. -30.095 iterations 23
Cbc0038I Pass   5: suminf.    3.62319 (15) obj. -30.095 iterations 1
Cbc0038I Pass   6: suminf.    3.40786 (11) obj. -30.095 iterations 14
Cbc0038I Pass   7: suminf.    3.07571 (13) obj. -30.095 iterations 7
Cbc0038I Pass   8: suminf.    2.99743 (10) obj. -30.095 iterations 9
Cbc0038I Pass   9: suminf.    2.48023 (9) obj. -30.095 iterations 8
Cbc0038I Pass  10: suminf.    2.44634 (10) obj. -30.095 iterations 1
Cbc0038I Pass  11: suminf.    3.27984 (9) obj. -30.095 iterations 11
Cbc0038I Pass  12: suminf.    2.91887 (9) obj. -30.095 iterations 2
Cbc0038I Pass  13: suminf.    4.08794 (11) obj. -30.095 iterations 7
Cbc0038I Pass  14: suminf.    3.22206 (14) obj. -30.095 iterations 6
Cbc0038I Pass  15: suminf.    3.44195 (10) obj. -30.095 iterations 14
Cbc0038I Pass  16: suminf.    2.87519 (9) obj. -30.095 iterations 5
Cbc0038I Pass  17: suminf.    2.83899 (12) obj. -30.095 iterations 2
Cbc0038I Pass  18: suminf.    4.94751 (12) obj. -30.095 iterations 16
Cbc0038I Pass  19: suminf.    3.00465 (9) obj. -30.095 iterations 13
Cbc0038I Pass  20: suminf.    2.91887 (9) obj. -30.095 iterations 1
Cbc0038I Pass  21: suminf.    2.91887 (9) obj. -30.095 iterations 1
Cbc0038I Pass  22: suminf.    4.08794 (11) obj. -30.095 iterations 8
Cbc0038I Pass  23: suminf.    3.22206 (14) obj. -30.095 iterations 6
Cbc0038I Pass  24: suminf.    3.86705 (12) obj. -30.095 iterations 17
Cbc0038I Pass  25: suminf.    3.10029 (10) obj. -30.095 iterations 6
Cbc0038I Pass  26: suminf.    3.07571 (13) obj. -30.095 iterations 2
Cbc0038I Pass  27: suminf.    4.27906 (10) obj. -30.095 iterations 13
Cbc0038I Pass  28: suminf.    2.94528 (9) obj. -30.095 iterations 9
Cbc0038I Pass  29: suminf.    2.91887 (9) obj. -30.095 iterations 2
Cbc0038I Pass  30: suminf.    4.08794 (11) obj. -30.095 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 101 columns, reduced to 111 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -27.7628 - took 0.13 seconds
Cbc0012I Integer solution of -27.76277 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 98 rows 57 columns
Cbc0031I 36 added rows had average density of 55.472222
Cbc0013I At root node, 36 cuts changed objective from -51.083977 to -44.553728 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24239 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3011 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.76277 best solution, best possible -44.553728 (1.80 seconds)
Cbc0038I Full problem 182 rows 101 columns, reduced to 87 rows 52 columns
Cbc0012I Integer solution of -27.77595 found by DiveCoefficient after 14861 iterations and 90 nodes (2.29 seconds)
Cbc0012I Integer solution of -27.81456 found by DiveCoefficient after 14863 iterations and 91 nodes (2.29 seconds)
Cbc0012I Integer solution of -27.918178 found by rounding after 14920 iterations and 95 nodes (2.30 seconds)
Cbc0001I Search completed - best objective -27.91817800000001, took 15325 iterations and 132 nodes (2.36 seconds)
Cbc0032I Strong branching done 1092 times (21694 iterations), fathomed 15 nodes and fixed 41 variables
Cbc0035I Maximum depth 31, 376 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       2.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-71) rows, 152 (-51) columns and 2966 (-2688) elements
Clp1000I sum of infeasibilities 9.46352e-08 - average 7.06233e-10, 24 fixed columns
Coin0506I Presolve 114 (-20) rows, 128 (-24) columns and 2145 (-821) elements
Clp0006I 0  Obj 52.310762 Dual inf 8.7090101 (128)
Clp0029I End of values pass after 128 iterations
Clp0014I Perturbing problem by 0.001% of 1.5280058 - largest nonzero change 2.0268885e-05 ( 0.0017128079%) - largest zero change 2.9695331e-05
Clp0000I Optimal - objective value 65.204193
Clp0000I Optimal - objective value 65.204193
Coin0511I After Postsolve, objective 65.204193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.204193
Clp0000I Optimal - objective value 65.204193
Clp0000I Optimal - objective value 65.204193
Clp0000I Optimal - objective value 65.204193
Coin0511I After Postsolve, objective 65.204193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.20419275 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 153 columns (153 integer (153 of which binary)) and 2973 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 5.40252
Cbc0038I Pass   1: suminf.    3.95889 (40) obj. -56.7123 iterations 23
Cbc0038I Pass   2: suminf.    2.54420 (30) obj. -38.6816 iterations 10
Cbc0038I Pass   3: suminf.    0.32417 (5) obj. -13.1552 iterations 25
Cbc0038I Solution found of -6.6039
Cbc0038I Rounding solution of -9.53532 is better than previous of -6.6039

Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -14.7593
Cbc0038I Pass   4: suminf.    3.95889 (40) obj. -56.7123 iterations 0
Cbc0038I Pass   5: suminf.    2.16423 (27) obj. -36.0615 iterations 13
Cbc0038I Pass   6: suminf.    0.75604 (11) obj. -18.7233 iterations 16
Cbc0038I Pass   7: suminf.    0.77654 (2) obj. -14.7593 iterations 17
Cbc0038I Pass   8: suminf.    0.50141 (2) obj. -14.7593 iterations 1
Cbc0038I Pass   9: suminf.    0.77654 (2) obj. -14.7593 iterations 4
Cbc0038I Pass  10: suminf.    3.36471 (22) obj. -14.7593 iterations 44
Cbc0038I Pass  11: suminf.    1.09389 (17) obj. -14.7593 iterations 21
Cbc0038I Pass  12: suminf.    0.96055 (16) obj. -16.7457 iterations 5
Cbc0038I Pass  13: suminf.    1.20462 (7) obj. -14.7593 iterations 25
Cbc0038I Pass  14: suminf.    1.09240 (8) obj. -14.7593 iterations 3
Cbc0038I Pass  15: suminf.    1.02327 (6) obj. -14.7593 iterations 14
Cbc0038I Pass  16: suminf.    1.02327 (6) obj. -14.7593 iterations 1
Cbc0038I Pass  17: suminf.    0.69004 (3) obj. -14.7593 iterations 7
Cbc0038I Pass  18: suminf.    0.28286 (2) obj. -14.9871 iterations 5
Cbc0038I Pass  19: suminf.    0.69004 (3) obj. -14.7593 iterations 5
Cbc0038I Pass  20: suminf.    1.58011 (14) obj. -15.9543 iterations 41
Cbc0038I Pass  21: suminf.    1.13940 (13) obj. -15.4828 iterations 9
Cbc0038I Pass  22: suminf.    1.42687 (6) obj. -14.7593 iterations 23
Cbc0038I Pass  23: suminf.    0.73026 (4) obj. -16.8218 iterations 6
Cbc0038I Pass  24: suminf.    0.93163 (4) obj. -14.7593 iterations 8
Cbc0038I Pass  25: suminf.    0.68487 (4) obj. -14.7593 iterations 5
Cbc0038I Pass  26: suminf.    0.46290 (3) obj. -14.7593 iterations 6
Cbc0038I Pass  27: suminf.    0.51113 (3) obj. -14.7593 iterations 4
Cbc0038I Pass  28: suminf.    3.07644 (15) obj. -14.7593 iterations 29
Cbc0038I Pass  29: suminf.    1.03584 (8) obj. -14.7593 iterations 16
Cbc0038I Pass  30: suminf.    0.74054 (4) obj. -14.7593 iterations 11
Cbc0038I Pass  31: suminf.    0.66213 (3) obj. -14.9945 iterations 1
Cbc0038I Pass  32: suminf.    0.70918 (3) obj. -14.7593 iterations 5
Cbc0038I Pass  33: suminf.    2.45203 (16) obj. -14.7593 iterations 28
Cbc0038I Rounding solution of -11.6568 is better than previous of -9.53532

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 153 columns, reduced to 47 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -11.6568 to -27.9182 (0.08 seconds)
Cbc0038I Round again with cutoff of -34.6894
Cbc0038I Pass  33: suminf.    3.95889 (40) obj. -56.7123 iterations 0
Cbc0038I Pass  34: suminf.    2.12934 (22) obj. -34.6894 iterations 21
Cbc0038I Pass  35: suminf.    2.04440 (23) obj. -34.6894 iterations 3
Cbc0038I Pass  36: suminf.    2.06833 (13) obj. -34.6894 iterations 29
Cbc0038I Pass  37: suminf.    2.06833 (13) obj. -34.6894 iterations 6
Cbc0038I Pass  38: suminf.    2.06393 (12) obj. -34.6894 iterations 16
Cbc0038I Pass  39: suminf.    2.02183 (13) obj. -34.6894 iterations 8
Cbc0038I Pass  40: suminf.    2.63587 (19) obj. -34.6894 iterations 17
Cbc0038I Pass  41: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  42: suminf.    1.78364 (13) obj. -34.6894 iterations 6
Cbc0038I Pass  43: suminf.    2.07505 (13) obj. -34.6894 iterations 16
Cbc0038I Pass  44: suminf.    2.07505 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  45: suminf.    2.63587 (19) obj. -34.6894 iterations 20
Cbc0038I Pass  46: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  47: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  48: suminf.    2.07505 (13) obj. -34.6894 iterations 16
Cbc0038I Pass  49: suminf.    2.07505 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  50: suminf.    2.63587 (19) obj. -34.6894 iterations 21
Cbc0038I Pass  51: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  52: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  53: suminf.    2.07505 (13) obj. -34.6894 iterations 16
Cbc0038I Pass  54: suminf.    2.07505 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  55: suminf.    2.63587 (19) obj. -34.6894 iterations 20
Cbc0038I Pass  56: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  57: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  58: suminf.    2.07505 (13) obj. -34.6894 iterations 17
Cbc0038I Pass  59: suminf.    2.07505 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  60: suminf.    2.63587 (19) obj. -34.6894 iterations 20
Cbc0038I Pass  61: suminf.    1.78364 (13) obj. -34.6894 iterations 7
Cbc0038I Pass  62: suminf.    1.78364 (13) obj. -34.6894 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -27.9182 - took 0.10 seconds
Cbc0012I Integer solution of -27.918178 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 135 rows 153 columns, reduced to 25 rows 27 columns
Cbc0031I 76 added rows had average density of 39.789474
Cbc0013I At root node, 76 cuts changed objective from -61.77391 to -32.260517 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26640 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.324 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2572 row cuts average 143.1 elements, 0 column cuts (0 active)  in 0.263 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1034 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2097 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 427 row cuts average 81.8 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 109 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.243 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -27.918178 best solution, best possible -32.260517 (2.99 seconds)
Cbc0010I After 5 nodes, 6 on tree, -27.918178 best solution, best possible -32.260517 (3.76 seconds)
Cbc0038I Full problem 135 rows 153 columns, reduced to 2 rows 5 columns
Cbc0010I After 64 nodes, 1 on tree, -27.918178 best solution, best possible -30.904939 (4.59 seconds)
Cbc0001I Search completed - best objective -27.91817800000001, took 12778 iterations and 70 nodes (4.78 seconds)
Cbc0032I Strong branching done 738 times (16240 iterations), fathomed 19 nodes and fixed 10 variables
Cbc0035I Maximum depth 14, 167 variables fixed on reduced cost
Total time (CPU seconds):       4.54   (Wallclock seconds):       4.83

