Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 19 (-28) rows, 13 (-11) columns and 58 (-71) elements
Clp0000I Optimal - objective value 127.29471
Coin0511I After Postsolve, objective 127.29471, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 127.2947071 - 12 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 57 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.128%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.15176
Cbc0038I Pass   1: suminf.    0.27778 (1) obj. -113.306 iterations 5
Cbc0038I Solution found of -79
Cbc0038I Relaxing continuous gives -79
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -79 to -98.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -101.829
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27778 (1) obj. -113.306 iterations 0
Cbc0038I Pass   3: suminf.    0.48062 (1) obj. -101.829 iterations 2
Cbc0038I Pass   4: suminf.    0.84851 (3) obj. -101.829 iterations 2
Cbc0038I Pass   5: suminf.    0.48062 (1) obj. -101.829 iterations 2
Cbc0038I Pass   6: suminf.    0.48062 (1) obj. -101.829 iterations 0
Cbc0038I Pass   7: suminf.    0.94005 (3) obj. -101.829 iterations 5
Cbc0038I Pass   8: suminf.    0.55382 (2) obj. -101.829 iterations 1
Cbc0038I Pass   9: suminf.    0.31539 (4) obj. -101.829 iterations 5
Cbc0038I Pass  10: suminf.    1.00064 (5) obj. -101.829 iterations 3
Cbc0038I Pass  11: suminf.    1.16662 (4) obj. -101.829 iterations 4
Cbc0038I Pass  12: suminf.    0.45639 (4) obj. -101.829 iterations 1
Cbc0038I Pass  13: suminf.    0.39110 (4) obj. -101.829 iterations 3
Cbc0038I Pass  14: suminf.    2.07271 (8) obj. -101.829 iterations 7
Cbc0038I Pass  15: suminf.    0.52857 (2) obj. -102.207 iterations 6
Cbc0038I Pass  16: suminf.    0.31539 (4) obj. -101.829 iterations 4
Cbc0038I Pass  17: suminf.    1.00064 (5) obj. -101.829 iterations 3
Cbc0038I Pass  18: suminf.    0.66980 (5) obj. -101.829 iterations 2
Cbc0038I Pass  19: suminf.    1.18202 (4) obj. -101.829 iterations 7
Cbc0038I Pass  20: suminf.    0.36000 (1) obj. -106.46 iterations 4
Cbc0038I Pass  21: suminf.    0.33323 (1) obj. -101.829 iterations 2
Cbc0038I Pass  22: suminf.    0.27778 (1) obj. -113.306 iterations 2
Cbc0038I Pass  23: suminf.    0.48062 (1) obj. -101.829 iterations 2
Cbc0038I Pass  24: suminf.    0.83439 (2) obj. -101.829 iterations 3
Cbc0038I Pass  25: suminf.    0.11286 (1) obj. -101.829 iterations 3
Cbc0038I Pass  26: suminf.    0.13851 (1) obj. -101.829 iterations 1
Cbc0038I Pass  27: suminf.    1.38846 (7) obj. -101.829 iterations 6
Cbc0038I Pass  28: suminf.    0.31539 (4) obj. -101.829 iterations 8
Cbc0038I Pass  29: suminf.    1.00064 (5) obj. -101.829 iterations 3
Cbc0038I Pass  30: suminf.    1.16662 (4) obj. -101.829 iterations 3
Cbc0038I Pass  31: suminf.    0.55382 (2) obj. -101.829 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -98.5 to -107 (0.01 seconds)
Cbc0038I Round again with cutoff of -111.459
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27778 (1) obj. -113.306 iterations 0
Cbc0038I Pass  32: suminf.    0.31666 (1) obj. -111.459 iterations 2
Cbc0038I Pass  33: suminf.    0.27778 (1) obj. -113.306 iterations 1
Cbc0038I Pass  34: suminf.    0.80390 (4) obj. -111.459 iterations 3
Cbc0038I Pass  35: suminf.    0.65128 (2) obj. -117.195 iterations 3
Cbc0038I Pass  36: suminf.    0.40652 (1) obj. -111.459 iterations 4
Cbc0038I Pass  37: suminf.    0.86900 (4) obj. -111.459 iterations 4
Cbc0038I Pass  38: suminf.    0.40652 (1) obj. -111.459 iterations 2
Cbc0038I Pass  39: suminf.    0.80154 (4) obj. -111.459 iterations 4
Cbc0038I Pass  40: suminf.    0.65649 (3) obj. -111.459 iterations 4
Cbc0038I Pass  41: suminf.    0.51238 (2) obj. -111.459 iterations 5
Cbc0038I Pass  42: suminf.    1.26891 (4) obj. -111.459 iterations 4
Cbc0038I Pass  43: suminf.    0.69486 (5) obj. -111.459 iterations 2
Cbc0038I Pass  44: suminf.    0.57491 (3) obj. -111.459 iterations 5
Cbc0038I Pass  45: suminf.    0.17139 (2) obj. -111.459 iterations 6
Cbc0038I Pass  46: suminf.    0.65128 (2) obj. -117.195 iterations 2
Cbc0038I Pass  47: suminf.    0.27778 (1) obj. -113.306 iterations 1
Cbc0038I Pass  48: suminf.    0.31666 (1) obj. -111.459 iterations 2
Cbc0038I Pass  49: suminf.    2.82991 (7) obj. -111.459 iterations 5
Cbc0038I Pass  50: suminf.    0.18808 (3) obj. -111.459 iterations 4
Cbc0038I Pass  51: suminf.    0.69486 (5) obj. -111.459 iterations 6
Cbc0038I Pass  52: suminf.    0.51238 (2) obj. -111.459 iterations 3
Cbc0038I Pass  53: suminf.    0.40652 (1) obj. -111.459 iterations 2
Cbc0038I Pass  54: suminf.    0.27778 (1) obj. -113.306 iterations 2
Cbc0038I Pass  55: suminf.    0.31666 (1) obj. -111.459 iterations 2
Cbc0038I Pass  56: suminf.    1.21304 (5) obj. -111.459 iterations 4
Cbc0038I Pass  57: suminf.    0.69486 (5) obj. -111.459 iterations 4
Cbc0038I Pass  58: suminf.    0.17139 (2) obj. -111.459 iterations 8
Cbc0038I Pass  59: suminf.    0.17139 (2) obj. -111.459 iterations 1
Cbc0038I Pass  60: suminf.    0.65128 (2) obj. -117.195 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -107 - took 0.03 seconds
Cbc0012I Integer solution of -107 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 7 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 4.3333333
Cbc0013I At root node, 4 cuts changed objective from -127.29471 to -107 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 3.7 elements, 4 column cuts (4 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 25 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0001I Search completed - best objective -107, took 29 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-22) rows, 29 (-15) columns and 121 (-239) elements
Clp1000I sum of infeasibilities 2.22045e-16 - average 9.25186e-18, 10 fixed columns
Coin0506I Presolve 17 (-7) rows, 19 (-10) columns and 59 (-62) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 158.29825
Clp0000I Optimal - objective value 158.29825
Coin0511I After Postsolve, objective 158.29825, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 158.29825
Clp0000I Optimal - objective value 158.29825
Clp0000I Optimal - objective value 158.29825
Coin0511I After Postsolve, objective 158.29825, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 158.2982478 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 23 rows, 29 columns (29 integer (29 of which binary)) and 124 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.137%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.756
Cbc0038I Pass   1: suminf.    0.61806 (2) obj. -117.264 iterations 9
Cbc0038I Pass   2: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Solution found of -79
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 29 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -79 to -98.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -102.231
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Pass   4: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Pass   5: suminf.    0.48906 (1) obj. -102.231 iterations 2
Cbc0038I Pass   6: suminf.    0.27778 (1) obj. -113.306 iterations 1
Cbc0038I Pass   7: suminf.    0.24000 (2) obj. -107 iterations 8
Cbc0038I Solution found of -103
Cbc0038I Rounding solution of -107 is better than previous of -103

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 29 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -112.261
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Pass   9: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Pass  10: suminf.    0.29977 (1) obj. -112.261 iterations 2
Cbc0038I Pass  11: suminf.    0.27778 (1) obj. -113.306 iterations 1
Cbc0038I Pass  12: suminf.    0.48059 (2) obj. -112.261 iterations 2
Cbc0038I Pass  13: suminf.    0.27778 (1) obj. -113.306 iterations 2
Cbc0038I Pass  14: suminf.    1.04476 (4) obj. -112.261 iterations 6
Cbc0038I Pass  15: suminf.    1.37614 (3) obj. -112.261 iterations 5
Cbc0038I Pass  16: suminf.    0.98952 (3) obj. -112.261 iterations 1
Cbc0038I Pass  17: suminf.    0.98952 (3) obj. -112.261 iterations 0
Cbc0038I Pass  18: suminf.    1.37614 (3) obj. -112.261 iterations 6
Cbc0038I Pass  19: suminf.    2.07776 (5) obj. -112.261 iterations 2
Cbc0038I Pass  20: suminf.    2.15857 (7) obj. -112.261 iterations 5
Cbc0038I Pass  21: suminf.    1.73148 (5) obj. -113.398 iterations 2
Cbc0038I Pass  22: suminf.    0.98952 (3) obj. -112.261 iterations 6
Cbc0038I Pass  23: suminf.    1.82626 (5) obj. -112.261 iterations 10
Cbc0038I Pass  24: suminf.    0.27778 (1) obj. -113.306 iterations 6
Cbc0038I Pass  25: suminf.    0.29977 (1) obj. -112.261 iterations 1
Cbc0038I Pass  26: suminf.    1.04815 (3) obj. -112.261 iterations 4
Cbc0038I Pass  27: suminf.    1.04815 (3) obj. -112.261 iterations 0
Cbc0038I Pass  28: suminf.    0.27871 (1) obj. -112.261 iterations 4
Cbc0038I Pass  29: suminf.    0.27778 (1) obj. -112.306 iterations 1
Cbc0038I Pass  30: suminf.    2.39384 (7) obj. -112.261 iterations 10
Cbc0038I Pass  31: suminf.    2.12321 (6) obj. -115.88 iterations 1
Cbc0038I Pass  32: suminf.    1.58777 (5) obj. -112.261 iterations 9
Cbc0038I Pass  33: suminf.    0.60371 (2) obj. -112.261 iterations 4
Cbc0038I Pass  34: suminf.    0.65554 (2) obj. -112.261 iterations 1
Cbc0038I Pass  35: suminf.    0.61806 (2) obj. -114.264 iterations 1
Cbc0038I Pass  36: suminf.    0.69000 (4) obj. -112.261 iterations 3
Cbc0038I Pass  37: suminf.    2.13681 (6) obj. -112.261 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 29 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -107 - took 0.01 seconds
Cbc0012I Integer solution of -107 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 23 rows 29 columns, reduced to 6 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -131.306 to -131.306 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -107, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 19 (-28) rows, 13 (-11) columns and 58 (-71) elements
Clp0000I Optimal - objective value 127.29471
Coin0511I After Postsolve, objective 127.29471, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 127.2947071 - 12 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 13 columns (12 integer (12 of which binary)) and 57 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.128%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.15176
Cbc0038I Pass   1: suminf.    0.27778 (1) obj. -113.306 iterations 5
Cbc0038I Solution found of -79
Cbc0038I Relaxing continuous gives -79
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -79 to -98.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -101.829
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27778 (1) obj. -113.306 iterations 0
Cbc0038I Pass   3: suminf.    0.48062 (1) obj. -101.829 iterations 2
Cbc0038I Pass   4: suminf.    0.84851 (3) obj. -101.829 iterations 2
Cbc0038I Pass   5: suminf.    0.48062 (1) obj. -101.829 iterations 2
Cbc0038I Pass   6: suminf.    0.48062 (1) obj. -101.829 iterations 0
Cbc0038I Pass   7: suminf.    0.94005 (3) obj. -101.829 iterations 5
Cbc0038I Pass   8: suminf.    0.55382 (2) obj. -101.829 iterations 1
Cbc0038I Pass   9: suminf.    0.31539 (4) obj. -101.829 iterations 5
Cbc0038I Pass  10: suminf.    1.00064 (5) obj. -101.829 iterations 3
Cbc0038I Pass  11: suminf.    1.16662 (4) obj. -101.829 iterations 4
Cbc0038I Pass  12: suminf.    0.45639 (4) obj. -101.829 iterations 1
Cbc0038I Pass  13: suminf.    0.39110 (4) obj. -101.829 iterations 3
Cbc0038I Pass  14: suminf.    2.07271 (8) obj. -101.829 iterations 7
Cbc0038I Pass  15: suminf.    0.52857 (2) obj. -102.207 iterations 6
Cbc0038I Pass  16: suminf.    0.31539 (4) obj. -101.829 iterations 4
Cbc0038I Pass  17: suminf.    1.00064 (5) obj. -101.829 iterations 3
Cbc0038I Pass  18: suminf.    0.66980 (5) obj. -101.829 iterations 2
Cbc0038I Pass  19: suminf.    1.18202 (4) obj. -101.829 iterations 7
Cbc0038I Pass  20: suminf.    0.36000 (1) obj. -106.46 iterations 4
Cbc0038I Pass  21: suminf.    0.33323 (1) obj. -101.829 iterations 2
Cbc0038I Pass  22: suminf.    0.27778 (1) obj. -113.306 iterations 2
Cbc0038I Pass  23: suminf.    0.48062 (1) obj. -101.829 iterations 2
Cbc0038I Pass  24: suminf.    0.83439 (2) obj. -101.829 iterations 3
Cbc0038I Pass  25: suminf.    0.11286 (1) obj. -101.829 iterations 3
Cbc0038I Pass  26: suminf.    0.13851 (1) obj. -101.829 iterations 1
Cbc0038I Pass  27: suminf.    1.38846 (7) obj. -101.829 iterations 6
Cbc0038I Pass  28: suminf.    0.31539 (4) obj. -101.829 iterations 8
Cbc0038I Pass  29: suminf.    1.00064 (5) obj. -101.829 iterations 3
Cbc0038I Pass  30: suminf.    1.16662 (4) obj. -101.829 iterations 3
Cbc0038I Pass  31: suminf.    0.55382 (2) obj. -101.829 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -98.5 to -107 (0.01 seconds)
Cbc0038I Round again with cutoff of -111.459
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27778 (1) obj. -113.306 iterations 0
Cbc0038I Pass  32: suminf.    0.31666 (1) obj. -111.459 iterations 2
Cbc0038I Pass  33: suminf.    0.27778 (1) obj. -113.306 iterations 1
Cbc0038I Pass  34: suminf.    0.80390 (4) obj. -111.459 iterations 3
Cbc0038I Pass  35: suminf.    0.65128 (2) obj. -117.195 iterations 3
Cbc0038I Pass  36: suminf.    0.40652 (1) obj. -111.459 iterations 4
Cbc0038I Pass  37: suminf.    0.86900 (4) obj. -111.459 iterations 4
Cbc0038I Pass  38: suminf.    0.40652 (1) obj. -111.459 iterations 2
Cbc0038I Pass  39: suminf.    0.80154 (4) obj. -111.459 iterations 4
Cbc0038I Pass  40: suminf.    0.65649 (3) obj. -111.459 iterations 4
Cbc0038I Pass  41: suminf.    0.51238 (2) obj. -111.459 iterations 5
Cbc0038I Pass  42: suminf.    1.26891 (4) obj. -111.459 iterations 4
Cbc0038I Pass  43: suminf.    0.69486 (5) obj. -111.459 iterations 2
Cbc0038I Pass  44: suminf.    0.57491 (3) obj. -111.459 iterations 5
Cbc0038I Pass  45: suminf.    0.17139 (2) obj. -111.459 iterations 6
Cbc0038I Pass  46: suminf.    0.65128 (2) obj. -117.195 iterations 2
Cbc0038I Pass  47: suminf.    0.27778 (1) obj. -113.306 iterations 1
Cbc0038I Pass  48: suminf.    0.31666 (1) obj. -111.459 iterations 2
Cbc0038I Pass  49: suminf.    2.82991 (7) obj. -111.459 iterations 5
Cbc0038I Pass  50: suminf.    0.18808 (3) obj. -111.459 iterations 4
Cbc0038I Pass  51: suminf.    0.69486 (5) obj. -111.459 iterations 6
Cbc0038I Pass  52: suminf.    0.51238 (2) obj. -111.459 iterations 3
Cbc0038I Pass  53: suminf.    0.40652 (1) obj. -111.459 iterations 2
Cbc0038I Pass  54: suminf.    0.27778 (1) obj. -113.306 iterations 2
Cbc0038I Pass  55: suminf.    0.31666 (1) obj. -111.459 iterations 2
Cbc0038I Pass  56: suminf.    1.21304 (5) obj. -111.459 iterations 4
Cbc0038I Pass  57: suminf.    0.69486 (5) obj. -111.459 iterations 4
Cbc0038I Pass  58: suminf.    0.17139 (2) obj. -111.459 iterations 8
Cbc0038I Pass  59: suminf.    0.17139 (2) obj. -111.459 iterations 1
Cbc0038I Pass  60: suminf.    0.65128 (2) obj. -117.195 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 18 rows 13 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -107 - took 0.02 seconds
Cbc0012I Integer solution of -107 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 18 rows 13 columns, reduced to 7 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 4.3333333
Cbc0013I At root node, 4 cuts changed objective from -127.29471 to -107 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 3.7 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 25 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0001I Search completed - best objective -107, took 29 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 24 (-23) rows, 29 (-16) columns and 121 (-240) elements
Clp1000I sum of infeasibilities 2.22045e-16 - average 9.25186e-18, 10 fixed columns
Coin0506I Presolve 17 (-7) rows, 19 (-10) columns and 59 (-62) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 158.29825
Clp0000I Optimal - objective value 158.29825
Coin0511I After Postsolve, objective 158.29825, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 158.29825
Clp0000I Optimal - objective value 158.29825
Clp0000I Optimal - objective value 158.29825
Coin0511I After Postsolve, objective 158.29825, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 158.2982478 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 23 rows, 29 columns (29 integer (29 of which binary)) and 124 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.137%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.756
Cbc0038I Pass   1: suminf.    0.61806 (2) obj. -117.264 iterations 9
Cbc0038I Pass   2: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Solution found of -79
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 29 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -79 to -98.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -102.231
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Pass   4: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Pass   5: suminf.    0.48906 (1) obj. -102.231 iterations 2
Cbc0038I Pass   6: suminf.    0.27778 (1) obj. -113.306 iterations 1
Cbc0038I Pass   7: suminf.    0.24000 (2) obj. -107 iterations 8
Cbc0038I Solution found of -103
Cbc0038I Rounding solution of -107 is better than previous of -103

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 29 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -112.261
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Pass   9: suminf.    0.61806 (2) obj. -117.264 iterations 0
Cbc0038I Pass  10: suminf.    0.29977 (1) obj. -112.261 iterations 2
Cbc0038I Pass  11: suminf.    0.27778 (1) obj. -113.306 iterations 1
Cbc0038I Pass  12: suminf.    0.48059 (2) obj. -112.261 iterations 2
Cbc0038I Pass  13: suminf.    0.27778 (1) obj. -113.306 iterations 2
Cbc0038I Pass  14: suminf.    1.04476 (4) obj. -112.261 iterations 6
Cbc0038I Pass  15: suminf.    1.37614 (3) obj. -112.261 iterations 5
Cbc0038I Pass  16: suminf.    0.98952 (3) obj. -112.261 iterations 1
Cbc0038I Pass  17: suminf.    0.98952 (3) obj. -112.261 iterations 0
Cbc0038I Pass  18: suminf.    1.37614 (3) obj. -112.261 iterations 6
Cbc0038I Pass  19: suminf.    2.07776 (5) obj. -112.261 iterations 2
Cbc0038I Pass  20: suminf.    2.15857 (7) obj. -112.261 iterations 5
Cbc0038I Pass  21: suminf.    1.73148 (5) obj. -113.398 iterations 2
Cbc0038I Pass  22: suminf.    0.98952 (3) obj. -112.261 iterations 6
Cbc0038I Pass  23: suminf.    1.82626 (5) obj. -112.261 iterations 10
Cbc0038I Pass  24: suminf.    0.27778 (1) obj. -113.306 iterations 6
Cbc0038I Pass  25: suminf.    0.29977 (1) obj. -112.261 iterations 1
Cbc0038I Pass  26: suminf.    1.04815 (3) obj. -112.261 iterations 4
Cbc0038I Pass  27: suminf.    1.04815 (3) obj. -112.261 iterations 0
Cbc0038I Pass  28: suminf.    0.27871 (1) obj. -112.261 iterations 4
Cbc0038I Pass  29: suminf.    0.27778 (1) obj. -112.306 iterations 1
Cbc0038I Pass  30: suminf.    2.39384 (7) obj. -112.261 iterations 10
Cbc0038I Pass  31: suminf.    2.12321 (6) obj. -115.88 iterations 1
Cbc0038I Pass  32: suminf.    1.58777 (5) obj. -112.261 iterations 9
Cbc0038I Pass  33: suminf.    0.60371 (2) obj. -112.261 iterations 4
Cbc0038I Pass  34: suminf.    0.65554 (2) obj. -112.261 iterations 1
Cbc0038I Pass  35: suminf.    0.61806 (2) obj. -114.264 iterations 1
Cbc0038I Pass  36: suminf.    0.69000 (4) obj. -112.261 iterations 3
Cbc0038I Pass  37: suminf.    2.13681 (6) obj. -112.261 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 29 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -107 - took 0.01 seconds
Cbc0012I Integer solution of -107 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 23 rows 29 columns, reduced to 6 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -131.306 to -131.306 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -107, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

