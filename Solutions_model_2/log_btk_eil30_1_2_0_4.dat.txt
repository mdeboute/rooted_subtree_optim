Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 39 (-24) rows, 23 (-9) columns and 117 (-60) elements
Clp0000I Optimal - objective value 103.33347
Coin0511I After Postsolve, objective 103.33347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.3334655 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 23 columns (22 integer (22 of which binary)) and 118 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.793%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.26683
Cbc0038I Pass   1: suminf.    0.15625 (2) obj. -36.9688 iterations 17
Cbc0038I Solution found of -34
Cbc0038I Relaxing continuous gives -34
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 23 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -41.3833
Cbc0038I Pass   2: suminf.    0.25424 (6) obj. -41.3833 iterations 3
Cbc0038I Pass   3: suminf.    0.21438 (5) obj. -41.3833 iterations 6
Cbc0038I Pass   4: suminf.    1.08082 (6) obj. -41.3833 iterations 15
Cbc0038I Pass   5: suminf.    0.59203 (6) obj. -41.3833 iterations 2
Cbc0038I Pass   6: suminf.    1.87390 (11) obj. -41.3833 iterations 8
Cbc0038I Pass   7: suminf.    1.87390 (11) obj. -41.3833 iterations 0
Cbc0038I Pass   8: suminf.    1.61577 (7) obj. -41.3833 iterations 16
Cbc0038I Pass   9: suminf.    1.48462 (5) obj. -41.3833 iterations 2
Cbc0038I Pass  10: suminf.    0.25000 (1) obj. -41.3833 iterations 6
Cbc0038I Pass  11: suminf.    0.44642 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  12: suminf.    0.76296 (5) obj. -41.3833 iterations 3
Cbc0038I Pass  13: suminf.    0.42802 (1) obj. -41.3833 iterations 2
Cbc0038I Pass  14: suminf.    0.28226 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  15: suminf.    1.15691 (5) obj. -41.3833 iterations 11
Cbc0038I Pass  16: suminf.    1.15691 (5) obj. -41.3833 iterations 2
Cbc0038I Pass  17: suminf.    0.38794 (1) obj. -41.3833 iterations 6
Cbc0038I Pass  18: suminf.    0.31452 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  19: suminf.    0.59006 (3) obj. -41.3833 iterations 2
Cbc0038I Pass  20: suminf.    0.31452 (1) obj. -41.3833 iterations 3
Cbc0038I Pass  21: suminf.    1.07132 (6) obj. -41.3833 iterations 7
Cbc0038I Pass  22: suminf.    0.28368 (2) obj. -41.3833 iterations 4
Cbc0038I Pass  23: suminf.    0.59270 (2) obj. -41.3833 iterations 4
Cbc0038I Pass  24: suminf.    0.59270 (2) obj. -41.3833 iterations 0
Cbc0038I Pass  25: suminf.    0.42802 (1) obj. -41.3833 iterations 2
Cbc0038I Pass  26: suminf.    0.41129 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  27: suminf.    1.34481 (6) obj. -41.3833 iterations 5
Cbc0038I Pass  28: suminf.    2.25369 (6) obj. -41.3833 iterations 4
Cbc0038I Pass  29: suminf.    1.35765 (4) obj. -41.3833 iterations 4
Cbc0038I Pass  30: suminf.    1.17782 (3) obj. -41.3833 iterations 2
Cbc0038I Pass  31: suminf.    0.51239 (2) obj. -41.3833 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 23 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -34 - took 0.06 seconds
Cbc0012I Integer solution of -34 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 20
Cbc0013I At root node, 9 cuts changed objective from -103.33347 to -53.816663 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 569 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 383 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 112 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -34, took 1625 iterations and 6 nodes (0.16 seconds)
Cbc0032I Strong branching done 94 times (825 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-19) rows, 48 (-12) columns and 381 (-231) elements
Clp1000I sum of infeasibilities 3.22418e-07 - average 7.4981e-09, 30 fixed columns
Coin0506I Presolve 15 (-28) rows, 18 (-30) columns and 61 (-320) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 36.179563
Clp0000I Optimal - objective value 36.179563
Coin0511I After Postsolve, objective 36.179563, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4913658 - largest nonzero change 1.7029246e-05 ( 0.0017029246%) - largest zero change 1.4821603e-05
Clp0000I Optimal - objective value 119.91709
Clp0000I Optimal - objective value 119.91709
Clp0000I Optimal - objective value 119.91709
Coin0511I After Postsolve, objective 119.91709, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.9170916 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 48 columns (48 integer (48 of which binary)) and 384 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.496%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 12.8438
Cbc0038I Pass   1: suminf.    2.11407 (13) obj. -31.5688 iterations 17
Cbc0038I Pass   2: suminf.    2.11407 (13) obj. -31.5688 iterations 1
Cbc0038I Solution found of 11
Cbc0038I Rounding solution of 2 is better than previous of 11

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 2 to -18.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -26.6921
Cbc0038I Pass   3: suminf.    2.11407 (13) obj. -31.5688 iterations 0
Cbc0038I Pass   4: suminf.    2.11407 (13) obj. -31.5688 iterations 1
Cbc0038I Pass   5: suminf.    2.19489 (14) obj. -26.6921 iterations 24
Cbc0038I Pass   6: suminf.    1.80715 (12) obj. -26.6921 iterations 4
Cbc0038I Pass   7: suminf.    1.77906 (13) obj. -26.6921 iterations 2
Cbc0038I Pass   8: suminf.    1.10716 (5) obj. -26.6921 iterations 13
Cbc0038I Pass   9: suminf.    1.03361 (4) obj. -26.6921 iterations 1
Cbc0038I Pass  10: suminf.    0.65465 (4) obj. -26.6921 iterations 2
Cbc0038I Pass  11: suminf.    2.10897 (5) obj. -26.6921 iterations 4
Cbc0038I Pass  12: suminf.    1.22271 (5) obj. -37.9225 iterations 2
Cbc0038I Pass  13: suminf.    0.87442 (5) obj. -26.6921 iterations 3
Cbc0038I Pass  14: suminf.    0.98470 (5) obj. -36.239 iterations 7
Cbc0038I Pass  15: suminf.    0.98470 (5) obj. -36.239 iterations 1
Cbc0038I Pass  16: suminf.    1.85531 (5) obj. -26.6921 iterations 7
Cbc0038I Pass  17: suminf.    0.72925 (6) obj. -26.6921 iterations 6
Cbc0038I Pass  18: suminf.    0.70131 (4) obj. -26.6921 iterations 1
Cbc0038I Pass  19: suminf.    1.48560 (4) obj. -26.6921 iterations 2
Cbc0038I Pass  20: suminf.    1.48560 (4) obj. -26.6921 iterations 1
Cbc0038I Pass  21: suminf.    2.31618 (9) obj. -26.6921 iterations 11
Cbc0038I Pass  22: suminf.    1.55105 (8) obj. -26.6921 iterations 4
Cbc0038I Pass  23: suminf.    1.64058 (5) obj. -26.6921 iterations 10
Cbc0038I Pass  24: suminf.    1.09694 (5) obj. -26.6921 iterations 5
Cbc0038I Pass  25: suminf.    2.15421 (9) obj. -26.6921 iterations 12
Cbc0038I Pass  26: suminf.    2.15421 (9) obj. -26.6921 iterations 0
Cbc0038I Pass  27: suminf.    1.90336 (4) obj. -26.6921 iterations 11
Cbc0038I Pass  28: suminf.    1.34475 (6) obj. -26.6921 iterations 5
Cbc0038I Pass  29: suminf.    2.57671 (7) obj. -26.6921 iterations 3
Cbc0038I Pass  30: suminf.    1.57810 (5) obj. -26.6921 iterations 3
Cbc0038I Pass  31: suminf.    0.72925 (6) obj. -26.6921 iterations 7
Cbc0038I Pass  32: suminf.    0.70131 (4) obj. -26.6921 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 35 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -18.5 to -25.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.5381
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.12394 (15) obj. -40.5381 iterations 1
Cbc0038I Pass  33: suminf.    3.12394 (15) obj. -40.5381 iterations 1
Cbc0038I Pass  34: suminf.    2.16179 (14) obj. -40.5381 iterations 26
Cbc0038I Pass  35: suminf.    2.16179 (14) obj. -40.5381 iterations 0
Cbc0038I Pass  36: suminf.    1.18067 (5) obj. -40.5381 iterations 12
Cbc0038I Pass  37: suminf.    0.86270 (7) obj. -40.5381 iterations 1
Cbc0038I Pass  38: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  39: suminf.    1.17159 (5) obj. -40.5381 iterations 4
Cbc0038I Pass  40: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  41: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I Pass  42: suminf.    1.61652 (6) obj. -40.5381 iterations 0
Cbc0038I Pass  43: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  44: suminf.    1.17159 (5) obj. -40.5381 iterations 3
Cbc0038I Pass  45: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  46: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I Pass  47: suminf.    1.61652 (6) obj. -40.5381 iterations 0
Cbc0038I Pass  48: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  49: suminf.    1.17159 (5) obj. -40.5381 iterations 3
Cbc0038I Pass  50: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  51: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I Pass  52: suminf.    1.61652 (6) obj. -40.5381 iterations 0
Cbc0038I Pass  53: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  54: suminf.    1.17159 (5) obj. -40.5381 iterations 3
Cbc0038I Pass  55: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  56: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I Pass  57: suminf.    1.61652 (6) obj. -40.5381 iterations 0
Cbc0038I Pass  58: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  59: suminf.    1.17159 (5) obj. -40.5381 iterations 3
Cbc0038I Pass  60: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  61: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -25.5 - took 0.04 seconds
Cbc0012I Integer solution of -25.5 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 43 rows 48 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -34 found by DiveCoefficient after 1132 iterations and 0 nodes (0.17 seconds)
Cbc0031I 11 added rows had average density of 12.727273
Cbc0013I At root node, 11 cuts changed objective from -95.921884 to -38.913482 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 304 row cuts average 3.2 elements, 23 column cuts (23 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 285 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 131 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -34, took 1185 iterations and 2 nodes (0.18 seconds)
Cbc0032I Strong branching done 20 times (116 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 39 (-24) rows, 23 (-9) columns and 117 (-60) elements
Clp0000I Optimal - objective value 103.33347
Coin0511I After Postsolve, objective 103.33347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.3334655 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 23 columns (22 integer (22 of which binary)) and 118 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.793%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.26683
Cbc0038I Pass   1: suminf.    0.15625 (2) obj. -36.9688 iterations 17
Cbc0038I Solution found of -34
Cbc0038I Relaxing continuous gives -34
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 23 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -41.3833
Cbc0038I Pass   2: suminf.    0.25424 (6) obj. -41.3833 iterations 3
Cbc0038I Pass   3: suminf.    0.21438 (5) obj. -41.3833 iterations 6
Cbc0038I Pass   4: suminf.    1.08082 (6) obj. -41.3833 iterations 15
Cbc0038I Pass   5: suminf.    0.59203 (6) obj. -41.3833 iterations 2
Cbc0038I Pass   6: suminf.    1.87390 (11) obj. -41.3833 iterations 8
Cbc0038I Pass   7: suminf.    1.87390 (11) obj. -41.3833 iterations 0
Cbc0038I Pass   8: suminf.    1.61577 (7) obj. -41.3833 iterations 16
Cbc0038I Pass   9: suminf.    1.48462 (5) obj. -41.3833 iterations 2
Cbc0038I Pass  10: suminf.    0.25000 (1) obj. -41.3833 iterations 6
Cbc0038I Pass  11: suminf.    0.44642 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  12: suminf.    0.76296 (5) obj. -41.3833 iterations 3
Cbc0038I Pass  13: suminf.    0.42802 (1) obj. -41.3833 iterations 2
Cbc0038I Pass  14: suminf.    0.28226 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  15: suminf.    1.15691 (5) obj. -41.3833 iterations 11
Cbc0038I Pass  16: suminf.    1.15691 (5) obj. -41.3833 iterations 2
Cbc0038I Pass  17: suminf.    0.38794 (1) obj. -41.3833 iterations 6
Cbc0038I Pass  18: suminf.    0.31452 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  19: suminf.    0.59006 (3) obj. -41.3833 iterations 2
Cbc0038I Pass  20: suminf.    0.31452 (1) obj. -41.3833 iterations 3
Cbc0038I Pass  21: suminf.    1.07132 (6) obj. -41.3833 iterations 7
Cbc0038I Pass  22: suminf.    0.28368 (2) obj. -41.3833 iterations 4
Cbc0038I Pass  23: suminf.    0.59270 (2) obj. -41.3833 iterations 4
Cbc0038I Pass  24: suminf.    0.59270 (2) obj. -41.3833 iterations 0
Cbc0038I Pass  25: suminf.    0.42802 (1) obj. -41.3833 iterations 2
Cbc0038I Pass  26: suminf.    0.41129 (1) obj. -41.3833 iterations 1
Cbc0038I Pass  27: suminf.    1.34481 (6) obj. -41.3833 iterations 5
Cbc0038I Pass  28: suminf.    2.25369 (6) obj. -41.3833 iterations 4
Cbc0038I Pass  29: suminf.    1.35765 (4) obj. -41.3833 iterations 4
Cbc0038I Pass  30: suminf.    1.17782 (3) obj. -41.3833 iterations 2
Cbc0038I Pass  31: suminf.    0.51239 (2) obj. -41.3833 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 23 columns, reduced to 38 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -34 - took 0.02 seconds
Cbc0012I Integer solution of -34 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 9 added rows had average density of 20
Cbc0013I At root node, 9 cuts changed objective from -103.33347 to -53.816663 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 569 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 383 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 112 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -34, took 1625 iterations and 6 nodes (0.18 seconds)
Cbc0032I Strong branching done 94 times (825 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-20) rows, 48 (-13) columns and 381 (-232) elements
Clp1000I sum of infeasibilities 3.22418e-07 - average 7.4981e-09, 30 fixed columns
Coin0506I Presolve 15 (-28) rows, 18 (-30) columns and 61 (-320) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 36.179563
Clp0000I Optimal - objective value 36.179563
Coin0511I After Postsolve, objective 36.179563, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4913658 - largest nonzero change 1.7029246e-05 ( 0.0017029246%) - largest zero change 1.4821603e-05
Clp0000I Optimal - objective value 119.91709
Clp0000I Optimal - objective value 119.91709
Clp0000I Optimal - objective value 119.91709
Coin0511I After Postsolve, objective 119.91709, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.9170916 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 48 columns (48 integer (48 of which binary)) and 384 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.496%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 12.8438
Cbc0038I Pass   1: suminf.    2.11407 (13) obj. -31.5688 iterations 17
Cbc0038I Pass   2: suminf.    2.11407 (13) obj. -31.5688 iterations 1
Cbc0038I Solution found of 11
Cbc0038I Rounding solution of 2 is better than previous of 11

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 2 to -18.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -26.6921
Cbc0038I Pass   3: suminf.    2.11407 (13) obj. -31.5688 iterations 0
Cbc0038I Pass   4: suminf.    2.11407 (13) obj. -31.5688 iterations 1
Cbc0038I Pass   5: suminf.    2.19489 (14) obj. -26.6921 iterations 24
Cbc0038I Pass   6: suminf.    1.80715 (12) obj. -26.6921 iterations 4
Cbc0038I Pass   7: suminf.    1.77906 (13) obj. -26.6921 iterations 2
Cbc0038I Pass   8: suminf.    1.10716 (5) obj. -26.6921 iterations 13
Cbc0038I Pass   9: suminf.    1.03361 (4) obj. -26.6921 iterations 1
Cbc0038I Pass  10: suminf.    0.65465 (4) obj. -26.6921 iterations 2
Cbc0038I Pass  11: suminf.    2.10897 (5) obj. -26.6921 iterations 4
Cbc0038I Pass  12: suminf.    1.22271 (5) obj. -37.9225 iterations 2
Cbc0038I Pass  13: suminf.    0.87442 (5) obj. -26.6921 iterations 3
Cbc0038I Pass  14: suminf.    0.98470 (5) obj. -36.239 iterations 7
Cbc0038I Pass  15: suminf.    0.98470 (5) obj. -36.239 iterations 1
Cbc0038I Pass  16: suminf.    1.85531 (5) obj. -26.6921 iterations 7
Cbc0038I Pass  17: suminf.    0.72925 (6) obj. -26.6921 iterations 6
Cbc0038I Pass  18: suminf.    0.70131 (4) obj. -26.6921 iterations 1
Cbc0038I Pass  19: suminf.    1.48560 (4) obj. -26.6921 iterations 2
Cbc0038I Pass  20: suminf.    1.48560 (4) obj. -26.6921 iterations 1
Cbc0038I Pass  21: suminf.    2.31618 (9) obj. -26.6921 iterations 11
Cbc0038I Pass  22: suminf.    1.55105 (8) obj. -26.6921 iterations 4
Cbc0038I Pass  23: suminf.    1.64058 (5) obj. -26.6921 iterations 10
Cbc0038I Pass  24: suminf.    1.09694 (5) obj. -26.6921 iterations 5
Cbc0038I Pass  25: suminf.    2.15421 (9) obj. -26.6921 iterations 12
Cbc0038I Pass  26: suminf.    2.15421 (9) obj. -26.6921 iterations 0
Cbc0038I Pass  27: suminf.    1.90336 (4) obj. -26.6921 iterations 11
Cbc0038I Pass  28: suminf.    1.34475 (6) obj. -26.6921 iterations 5
Cbc0038I Pass  29: suminf.    2.57671 (7) obj. -26.6921 iterations 3
Cbc0038I Pass  30: suminf.    1.57810 (5) obj. -26.6921 iterations 3
Cbc0038I Pass  31: suminf.    0.72925 (6) obj. -26.6921 iterations 7
Cbc0038I Pass  32: suminf.    0.70131 (4) obj. -26.6921 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 35 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -18.5 to -25.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.5381
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.12394 (15) obj. -40.5381 iterations 1
Cbc0038I Pass  33: suminf.    3.12394 (15) obj. -40.5381 iterations 1
Cbc0038I Pass  34: suminf.    2.16179 (14) obj. -40.5381 iterations 26
Cbc0038I Pass  35: suminf.    2.16179 (14) obj. -40.5381 iterations 0
Cbc0038I Pass  36: suminf.    1.18067 (5) obj. -40.5381 iterations 12
Cbc0038I Pass  37: suminf.    0.86270 (7) obj. -40.5381 iterations 1
Cbc0038I Pass  38: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  39: suminf.    1.17159 (5) obj. -40.5381 iterations 4
Cbc0038I Pass  40: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  41: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I Pass  42: suminf.    1.61652 (6) obj. -40.5381 iterations 0
Cbc0038I Pass  43: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  44: suminf.    1.17159 (5) obj. -40.5381 iterations 3
Cbc0038I Pass  45: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  46: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I Pass  47: suminf.    1.61652 (6) obj. -40.5381 iterations 0
Cbc0038I Pass  48: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  49: suminf.    1.17159 (5) obj. -40.5381 iterations 3
Cbc0038I Pass  50: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  51: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I Pass  52: suminf.    1.61652 (6) obj. -40.5381 iterations 0
Cbc0038I Pass  53: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  54: suminf.    1.17159 (5) obj. -40.5381 iterations 3
Cbc0038I Pass  55: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  56: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I Pass  57: suminf.    1.61652 (6) obj. -40.5381 iterations 0
Cbc0038I Pass  58: suminf.    1.51655 (5) obj. -40.5381 iterations 7
Cbc0038I Pass  59: suminf.    1.17159 (5) obj. -40.5381 iterations 3
Cbc0038I Pass  60: suminf.    2.49806 (6) obj. -40.5381 iterations 5
Cbc0038I Pass  61: suminf.    1.61652 (6) obj. -40.5381 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 48 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -25.5 - took 0.04 seconds
Cbc0012I Integer solution of -25.5 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 43 rows 48 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -34 found by DiveCoefficient after 1132 iterations and 0 nodes (0.20 seconds)
Cbc0031I 11 added rows had average density of 12.727273
Cbc0013I At root node, 11 cuts changed objective from -95.921884 to -38.913482 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 304 row cuts average 3.2 elements, 23 column cuts (23 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 285 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 131 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 97 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -34, took 1185 iterations and 2 nodes (0.20 seconds)
Cbc0032I Strong branching done 20 times (116 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

