Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1501 (-44) elements
Clp1000I sum of infeasibilities 8.57187e-05 - average 1.70077e-07, 119 fixed columns
Coin0506I Presolve 258 (-246) rows, 138 (-124) columns and 765 (-736) elements
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 0.17050795 - largest nonzero change 0 ( 0%) - largest zero change 2.9514682e-05
Clp0000I Optimal - objective value 123.90872
Clp0000I Optimal - objective value 123.90872
Coin0511I After Postsolve, objective 123.90872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13707262 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 123.90872
Clp0000I Optimal - objective value 123.90872
Clp0000I Optimal - objective value 123.90872
Coin0511I After Postsolve, objective 123.90872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.9087172 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1501 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 78 integers unsatisfied sum - 12.8246
Cbc0038I Solution found of 15.4654
Cbc0038I Relaxing continuous gives -0.668949
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 143 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -0.668949 to -58.0991 (0.08 seconds)
Cbc0038I Round again with cutoff of -64.6801
Cbc0038I Pass   1: suminf.    4.42602 (59) obj. -64.6801 iterations 199
Cbc0038I Pass   2: suminf.    3.76514 (34) obj. -64.6801 iterations 41
Cbc0038I Pass   3: suminf.    3.99366 (11) obj. -64.6801 iterations 68
Cbc0038I Pass   4: suminf.    3.11048 (11) obj. -64.6801 iterations 26
Cbc0038I Pass   5: suminf.    3.46505 (9) obj. -64.6801 iterations 29
Cbc0038I Pass   6: suminf.    2.37935 (7) obj. -64.6801 iterations 7
Cbc0038I Pass   7: suminf.    2.26872 (7) obj. -64.6801 iterations 9
Cbc0038I Pass   8: suminf.    2.96984 (9) obj. -64.6801 iterations 24
Cbc0038I Pass   9: suminf.    2.62368 (7) obj. -64.6801 iterations 19
Cbc0038I Pass  10: suminf.    2.27406 (6) obj. -64.6801 iterations 1
Cbc0038I Pass  11: suminf.    2.00685 (7) obj. -64.6801 iterations 18
Cbc0038I Pass  12: suminf.    2.00685 (7) obj. -64.6801 iterations 6
Cbc0038I Pass  13: suminf.    2.54692 (7) obj. -64.6801 iterations 13
Cbc0038I Pass  14: suminf.    1.95532 (6) obj. -64.6801 iterations 5
Cbc0038I Pass  15: suminf.    1.79513 (6) obj. -64.6801 iterations 9
Cbc0038I Pass  16: suminf.    2.45636 (6) obj. -64.6801 iterations 13
Cbc0038I Pass  17: suminf.    2.00685 (7) obj. -64.6801 iterations 25
Cbc0038I Pass  18: suminf.    2.00685 (7) obj. -64.6801 iterations 6
Cbc0038I Pass  19: suminf.    2.54692 (7) obj. -64.6801 iterations 13
Cbc0038I Pass  20: suminf.    1.95532 (6) obj. -64.6801 iterations 5
Cbc0038I Pass  21: suminf.    1.79513 (6) obj. -64.6801 iterations 10
Cbc0038I Pass  22: suminf.    2.45636 (6) obj. -64.6801 iterations 14
Cbc0038I Pass  23: suminf.    2.00685 (7) obj. -64.6801 iterations 25
Cbc0038I Pass  24: suminf.    2.00685 (7) obj. -64.6801 iterations 6
Cbc0038I Pass  25: suminf.    2.54692 (7) obj. -64.6801 iterations 13
Cbc0038I Pass  26: suminf.    1.95532 (6) obj. -64.6801 iterations 5
Cbc0038I Pass  27: suminf.    1.79513 (6) obj. -64.6801 iterations 10
Cbc0038I Pass  28: suminf.    2.45636 (6) obj. -64.6801 iterations 14
Cbc0038I Pass  29: suminf.    2.00685 (7) obj. -64.6801 iterations 25
Cbc0038I Pass  30: suminf.    2.00685 (7) obj. -64.6801 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 200 rows 108 columns
Cbc0038I Mini branch and bound improved solution from -58.0991 to -60.2207 (0.18 seconds)
Cbc0038I Round again with cutoff of -76.5258
Cbc0038I Pass  30: suminf.    5.06003 (59) obj. -76.5258 iterations 0
Cbc0038I Pass  31: suminf.    4.59443 (39) obj. -76.5258 iterations 24
Cbc0038I Pass  32: suminf.    3.02719 (8) obj. -76.5258 iterations 61
Cbc0038I Pass  33: suminf.    2.83200 (9) obj. -76.5258 iterations 16
Cbc0038I Pass  34: suminf.    3.37958 (9) obj. -76.5258 iterations 19
Cbc0038I Pass  35: suminf.    2.87244 (7) obj. -76.5258 iterations 19
Cbc0038I Pass  36: suminf.    2.87244 (7) obj. -76.5258 iterations 0
Cbc0038I Pass  37: suminf.    2.78890 (11) obj. -76.5258 iterations 31
Cbc0038I Pass  38: suminf.    2.66615 (8) obj. -76.5258 iterations 17
Cbc0038I Pass  39: suminf.    2.55456 (8) obj. -76.5258 iterations 9
Cbc0038I Pass  40: suminf.    3.12446 (9) obj. -76.5258 iterations 21
Cbc0038I Pass  41: suminf.    2.75792 (8) obj. -76.5258 iterations 4
Cbc0038I Pass  42: suminf.    2.75792 (8) obj. -76.5258 iterations 2
Cbc0038I Pass  43: suminf.    3.37887 (9) obj. -76.5258 iterations 21
Cbc0038I Pass  44: suminf.    3.17721 (8) obj. -76.5258 iterations 16
Cbc0038I Pass  45: suminf.    2.82543 (7) obj. -76.5258 iterations 6
Cbc0038I Pass  46: suminf.    2.78385 (8) obj. -76.5258 iterations 12
Cbc0038I Pass  47: suminf.    3.45500 (8) obj. -76.5258 iterations 17
Cbc0038I Pass  48: suminf.    2.87244 (7) obj. -76.5258 iterations 12
Cbc0038I Pass  49: suminf.    2.87244 (7) obj. -76.5258 iterations 0
Cbc0038I Pass  50: suminf.    2.78890 (11) obj. -76.5258 iterations 31
Cbc0038I Pass  51: suminf.    2.66615 (8) obj. -76.5258 iterations 17
Cbc0038I Pass  52: suminf.    2.55456 (8) obj. -76.5258 iterations 9
Cbc0038I Pass  53: suminf.    3.12446 (9) obj. -76.5258 iterations 21
Cbc0038I Pass  54: suminf.    2.75792 (8) obj. -76.5258 iterations 4
Cbc0038I Pass  55: suminf.    2.75792 (8) obj. -76.5258 iterations 2
Cbc0038I Pass  56: suminf.    3.37887 (9) obj. -76.5258 iterations 22
Cbc0038I Pass  57: suminf.    3.17721 (8) obj. -76.5258 iterations 16
Cbc0038I Pass  58: suminf.    2.82543 (7) obj. -76.5258 iterations 6
Cbc0038I Pass  59: suminf.    2.78385 (8) obj. -76.5258 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 200 rows 108 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -60.2207 - took 0.25 seconds
Cbc0012I Integer solution of -60.220669 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 143 rows 79 columns
Cbc0012I Integer solution of -61.881769 found by RINS after 0 iterations and 0 nodes (0.34 seconds)
Cbc0031I 46 added rows had average density of 169.32609
Cbc0013I At root node, 46 cuts changed objective from -123.90872 to -110.48254 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 43043 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.541 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3658 row cuts average 259.0 elements, 0 column cuts (0 active)  in 0.593 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.810 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 247 row cuts average 255.4 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.881769 best solution, best possible -110.48254 (6.14 seconds)
Cbc0010I After 6 nodes, 7 on tree, -61.881769 best solution, best possible -110.48254 (6.85 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 167 rows 92 columns
Cbc0010I After 41 nodes, 14 on tree, -61.881769 best solution, best possible -110.48254 (7.56 seconds)
Cbc0012I Integer solution of -62.679889 found by rounding after 22500 iterations and 55 nodes (7.68 seconds)
Cbc0012I Integer solution of -64.216739 found by rounding after 23476 iterations and 88 nodes (7.78 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -65.929179 found by rounding after 23590 iterations and 92 nodes (7.80 seconds)
Cbc0010I After 147 nodes, 18 on tree, -65.929179 best solution, best possible -110.48254 (8.28 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 41 rows 30 columns
Cbc0001I Search completed - best objective -65.92917899999999, took 31298 iterations and 240 nodes (8.63 seconds)
Cbc0032I Strong branching done 2202 times (65362 iterations), fathomed 7 nodes and fixed 87 variables
Cbc0035I Maximum depth 65, 988 variables fixed on reduced cost
Total time (CPU seconds):       8.49   (Wallclock seconds):       8.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 348 (-178) rows, 366 (-158) columns and 14692 (-21044) elements
Clp1000I sum of infeasibilities 7.53073e-06 - average 2.164e-08, 62 fixed columns
Coin0506I Presolve 288 (-60) rows, 303 (-63) columns and 10940 (-3752) elements
Clp0006I 0  Obj 131.07952 Dual inf 43.895186 (303)
Clp0029I End of values pass after 303 iterations
Clp0014I Perturbing problem by 0.001% of 1.7230413 - largest nonzero change 2.636724e-05 ( 0.0020250552%) - largest zero change 2.9896223e-05
Clp0000I Optimal - objective value 153.84567
Clp0000I Optimal - objective value 153.84567
Coin0511I After Postsolve, objective 153.84567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 153.84567 Dual inf 21.116907 (2)
Clp0014I Perturbing problem by 0.001% of 1.5159961 - largest nonzero change 2.8127638e-05 ( 0.0021548148%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 153.84567
Clp0000I Optimal - objective value 153.84567
Clp0000I Optimal - objective value 153.84567
Coin0511I After Postsolve, objective 153.84567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 153.8456723 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0004I processed model has 348 rows, 366 columns (366 integer (366 of which binary)) and 14692 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 109 integers unsatisfied sum - 4.81092
Cbc0038I Pass   1: suminf.    2.11571 (65) obj. -126.886 iterations 65
Cbc0038I Pass   2: suminf.    2.11571 (65) obj. -126.886 iterations 1
Cbc0038I Pass   3: suminf.    0.51899 (29) obj. -32.0667 iterations 34
Cbc0038I Pass   4: suminf.    0.11059 (10) obj. -12.4941 iterations 19
Cbc0038I Solution found of -2.60468
Cbc0038I Rounding solution of -22.3565 is better than previous of -2.60468

Cbc0038I Before mini branch and bound, 255 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -35.5055
Cbc0038I Pass   5: suminf.    2.11571 (65) obj. -126.886 iterations 0
Cbc0038I Pass   6: suminf.    2.11571 (65) obj. -126.886 iterations 1
Cbc0038I Pass   7: suminf.    1.03099 (46) obj. -55.3521 iterations 13
Cbc0038I Pass   8: suminf.    0.66281 (34) obj. -42.7511 iterations 12
Cbc0038I Pass   9: suminf.    1.08284 (19) obj. -35.5055 iterations 28
Cbc0038I Pass  10: suminf.    0.83629 (19) obj. -35.5055 iterations 1
Cbc0038I Pass  11: suminf.    0.53873 (2) obj. -35.5055 iterations 24
Cbc0038I Pass  12: suminf.    0.48889 (3) obj. -35.5055 iterations 5
Cbc0038I Pass  13: suminf.    0.55323 (2) obj. -35.5055 iterations 7
Cbc0038I Pass  14: suminf.    3.16277 (45) obj. -35.5055 iterations 95
Cbc0038I Pass  15: suminf.    1.62820 (19) obj. -35.5055 iterations 19
Cbc0038I Pass  16: suminf.    1.05541 (19) obj. -35.5055 iterations 3
Cbc0038I Pass  17: suminf.    2.06740 (34) obj. -35.5055 iterations 38
Cbc0038I Pass  18: suminf.    2.06740 (34) obj. -35.5055 iterations 0
Cbc0038I Pass  19: suminf.    2.36492 (29) obj. -35.5055 iterations 14
Cbc0038I Pass  20: suminf.    2.36492 (29) obj. -35.5055 iterations 0
Cbc0038I Pass  21: suminf.    1.63766 (16) obj. -35.5055 iterations 46
Cbc0038I Pass  22: suminf.    1.33511 (16) obj. -35.5055 iterations 10
Cbc0038I Pass  23: suminf.    1.55844 (9) obj. -35.5055 iterations 32
Cbc0038I Pass  24: suminf.    1.51044 (9) obj. -35.5055 iterations 10
Cbc0038I Pass  25: suminf.    1.71598 (25) obj. -35.5055 iterations 74
Cbc0038I Pass  26: suminf.    1.33770 (26) obj. -35.5055 iterations 14
Cbc0038I Pass  27: suminf.    0.76359 (24) obj. -35.5055 iterations 4
Cbc0038I Pass  28: suminf.    0.76078 (9) obj. -35.5055 iterations 31
Cbc0038I Pass  29: suminf.    0.49830 (12) obj. -35.5055 iterations 40
Cbc0038I Pass  30: suminf.    0.92580 (9) obj. -35.5055 iterations 20
Cbc0038I Pass  31: suminf.    0.68175 (10) obj. -35.5055 iterations 2
Cbc0038I Pass  32: suminf.    0.92580 (9) obj. -35.5055 iterations 14
Cbc0038I Pass  33: suminf.    1.93385 (27) obj. -35.5055 iterations 51
Cbc0038I Pass  34: suminf.    1.93385 (27) obj. -35.5055 iterations 13
Cbc0038I Rounding solution of -29.6583 is better than previous of -22.3565

Cbc0038I Before mini branch and bound, 223 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 130 rows 142 columns - 25 fixed gives 98, 116 - still too large
Cbc0038I Full problem 348 rows 366 columns, reduced to 72 rows 90 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I Round again with cutoff of -59.1735
Cbc0038I Pass  34: suminf.    2.11571 (65) obj. -126.886 iterations 0
Cbc0038I Pass  35: suminf.    2.11571 (65) obj. -126.886 iterations 1
Cbc0038I Pass  36: suminf.    1.52004 (40) obj. -59.1735 iterations 29
Cbc0038I Pass  37: suminf.    1.33026 (40) obj. -59.1735 iterations 1
Cbc0038I Pass  38: suminf.    1.37558 (18) obj. -59.1735 iterations 48
Cbc0038I Pass  39: suminf.    1.02033 (18) obj. -59.1735 iterations 13
Cbc0038I Pass  40: suminf.    1.91403 (8) obj. -59.1735 iterations 73
Cbc0038I Pass  41: suminf.    1.46546 (8) obj. -59.1735 iterations 1
Cbc0038I Pass  42: suminf.    0.99523 (5) obj. -59.1735 iterations 10
Cbc0038I Pass  43: suminf.    0.71615 (5) obj. -59.1735 iterations 1
Cbc0038I Pass  44: suminf.    1.41534 (6) obj. -59.1735 iterations 6
Cbc0038I Pass  45: suminf.    0.66417 (5) obj. -59.1735 iterations 15
Cbc0038I Pass  46: suminf.    0.69710 (5) obj. -59.1735 iterations 5
Cbc0038I Pass  47: suminf.    1.89090 (25) obj. -59.1735 iterations 108
Cbc0038I Pass  48: suminf.    1.72812 (25) obj. -59.1735 iterations 15
Cbc0038I Pass  49: suminf.    1.32517 (11) obj. -59.1735 iterations 26
Cbc0038I Pass  50: suminf.    0.99518 (10) obj. -59.1735 iterations 3
Cbc0038I Pass  51: suminf.    1.28128 (8) obj. -59.1735 iterations 10
Cbc0038I Pass  52: suminf.    0.94459 (8) obj. -59.1735 iterations 5
Cbc0038I Pass  53: suminf.    1.39930 (23) obj. -59.1735 iterations 60
Cbc0038I Pass  54: suminf.    1.23785 (20) obj. -59.7563 iterations 13
Cbc0038I Pass  55: suminf.    1.63993 (13) obj. -59.1735 iterations 51
Cbc0038I Pass  56: suminf.    1.63993 (13) obj. -59.1735 iterations 0
Cbc0038I Pass  57: suminf.    1.53852 (12) obj. -59.1735 iterations 19
Cbc0038I Pass  58: suminf.    1.53852 (12) obj. -59.1735 iterations 0
Cbc0038I Pass  59: suminf.    0.69004 (9) obj. -59.1735 iterations 33
Cbc0038I Pass  60: suminf.    0.69004 (9) obj. -59.1735 iterations 6
Cbc0038I Pass  61: suminf.    2.12602 (10) obj. -59.1735 iterations 17
Cbc0038I Pass  62: suminf.    0.79608 (7) obj. -59.6429 iterations 16
Cbc0038I Pass  63: suminf.    0.72864 (8) obj. -59.1735 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 119 rows 136 columns - 19 fixed gives 99, 117 - still too large
Cbc0038I Full problem 348 rows 366 columns, reduced to 59 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -29.6583 - took 0.20 seconds
Cbc0012I Integer solution of -29.658269 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 87 rows 94 columns
Cbc0012I Integer solution of -44.788282 found by RINS after 0 iterations and 0 nodes (0.38 seconds)
Cbc0031I 153 added rows had average density of 83.895425
Cbc0013I At root node, 153 cuts changed objective from -153.84567 to -94.422062 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35232 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.422 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3034 row cuts average 357.0 elements, 0 column cuts (0 active)  in 1.105 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 252 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4691 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.809 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1388 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.803 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 340 row cuts average 238.2 elements, 0 column cuts (0 active)  in 0.245 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 245 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.801 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -44.788282 best solution, best possible -94.422062 (9.17 seconds)
Cbc0010I After 2 nodes, 1 on tree, -44.788282 best solution, best possible -92.188375 (11.32 seconds)
Cbc0012I Integer solution of -48.903192 found by rounding after 16679 iterations and 5 nodes (12.04 seconds)
Cbc0010I After 5 nodes, 4 on tree, -48.903192 best solution, best possible -92.188375 (12.44 seconds)
Cbc0010I After 9 nodes, 6 on tree, -48.903192 best solution, best possible -92.188375 (13.16 seconds)
Cbc0012I Integer solution of -52.750169 found by rounding after 18069 iterations and 16 nodes (13.54 seconds)
Cbc0012I Integer solution of -57.357032 found by rounding after 18515 iterations and 23 nodes (13.67 seconds)
Cbc0012I Integer solution of -58.418822 found by rounding after 18521 iterations and 24 nodes (13.68 seconds)
Cbc0012I Integer solution of -64.477519 found by rounding after 18523 iterations and 25 nodes (13.68 seconds)
Cbc0016I Integer solution of -64.513719 found by strong branching after 18924 iterations and 36 nodes (13.82 seconds)
Cbc0004I Integer solution of -65.513719 found after 18987 iterations and 38 nodes (13.84 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 57 rows 74 columns
Cbc0010I After 41 nodes, 8 on tree, -65.513719 best solution, best possible -92.188375 (13.94 seconds)
Cbc0010I After 56 nodes, 5 on tree, -65.513719 best solution, best possible -92.188375 (14.65 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 36 rows 48 columns
Cbc0012I Integer solution of -65.929179 found by RINS after 21572 iterations and 92 nodes (15.23 seconds)
Cbc0010I After 107 nodes, 9 on tree, -65.929179 best solution, best possible -92.188375 (15.36 seconds)
Cbc0010I After 164 nodes, 3 on tree, -65.929179 best solution, best possible -92.188375 (16.39 seconds)
Cbc0010I After 166 nodes, 5 on tree, -65.929179 best solution, best possible -92.188375 (17.45 seconds)
Cbc0010I After 168 nodes, 6 on tree, -65.929179 best solution, best possible -92.188375 (18.57 seconds)
Cbc0010I After 171 nodes, 5 on tree, -65.929179 best solution, best possible -92.188375 (19.33 seconds)
Cbc0010I After 194 nodes, 6 on tree, -65.929179 best solution, best possible -92.188375 (20.07 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 144 rows 159 columns
Cbc0010I After 200 nodes, 6 on tree, -65.929179 best solution, best possible -92.188375 (21.11 seconds)
Cbc0001I Search completed - best objective -65.92917899999999, took 31230 iterations and 212 nodes (21.40 seconds)
Cbc0032I Strong branching done 1398 times (34092 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 35, 879 variables fixed on reduced cost
Total time (CPU seconds):       21.08   (Wallclock seconds):       21.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1501 (-44) elements
Clp1000I sum of infeasibilities 8.57187e-05 - average 1.70077e-07, 119 fixed columns
Coin0506I Presolve 258 (-246) rows, 138 (-124) columns and 765 (-736) elements
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 0.17050795 - largest nonzero change 0 ( 0%) - largest zero change 2.9514682e-05
Clp0000I Optimal - objective value 123.90872
Clp0000I Optimal - objective value 123.90872
Coin0511I After Postsolve, objective 123.90872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13707262 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 123.90872
Clp0000I Optimal - objective value 123.90872
Clp0000I Optimal - objective value 123.90872
Coin0511I After Postsolve, objective 123.90872, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 123.9087172 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1501 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 78 integers unsatisfied sum - 12.8246
Cbc0038I Solution found of 15.4654
Cbc0038I Relaxing continuous gives -0.668949
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 143 rows 79 columns
Cbc0038I Mini branch and bound improved solution from -0.668949 to -58.0991 (0.07 seconds)
Cbc0038I Round again with cutoff of -64.6801
Cbc0038I Pass   1: suminf.    4.42602 (59) obj. -64.6801 iterations 199
Cbc0038I Pass   2: suminf.    3.76514 (34) obj. -64.6801 iterations 41
Cbc0038I Pass   3: suminf.    3.99366 (11) obj. -64.6801 iterations 68
Cbc0038I Pass   4: suminf.    3.11048 (11) obj. -64.6801 iterations 26
Cbc0038I Pass   5: suminf.    3.46505 (9) obj. -64.6801 iterations 29
Cbc0038I Pass   6: suminf.    2.37935 (7) obj. -64.6801 iterations 7
Cbc0038I Pass   7: suminf.    2.26872 (7) obj. -64.6801 iterations 9
Cbc0038I Pass   8: suminf.    2.96984 (9) obj. -64.6801 iterations 24
Cbc0038I Pass   9: suminf.    2.62368 (7) obj. -64.6801 iterations 19
Cbc0038I Pass  10: suminf.    2.27406 (6) obj. -64.6801 iterations 1
Cbc0038I Pass  11: suminf.    2.00685 (7) obj. -64.6801 iterations 18
Cbc0038I Pass  12: suminf.    2.00685 (7) obj. -64.6801 iterations 6
Cbc0038I Pass  13: suminf.    2.54692 (7) obj. -64.6801 iterations 13
Cbc0038I Pass  14: suminf.    1.95532 (6) obj. -64.6801 iterations 5
Cbc0038I Pass  15: suminf.    1.79513 (6) obj. -64.6801 iterations 9
Cbc0038I Pass  16: suminf.    2.45636 (6) obj. -64.6801 iterations 13
Cbc0038I Pass  17: suminf.    2.00685 (7) obj. -64.6801 iterations 25
Cbc0038I Pass  18: suminf.    2.00685 (7) obj. -64.6801 iterations 6
Cbc0038I Pass  19: suminf.    2.54692 (7) obj. -64.6801 iterations 13
Cbc0038I Pass  20: suminf.    1.95532 (6) obj. -64.6801 iterations 5
Cbc0038I Pass  21: suminf.    1.79513 (6) obj. -64.6801 iterations 10
Cbc0038I Pass  22: suminf.    2.45636 (6) obj. -64.6801 iterations 14
Cbc0038I Pass  23: suminf.    2.00685 (7) obj. -64.6801 iterations 25
Cbc0038I Pass  24: suminf.    2.00685 (7) obj. -64.6801 iterations 6
Cbc0038I Pass  25: suminf.    2.54692 (7) obj. -64.6801 iterations 13
Cbc0038I Pass  26: suminf.    1.95532 (6) obj. -64.6801 iterations 5
Cbc0038I Pass  27: suminf.    1.79513 (6) obj. -64.6801 iterations 10
Cbc0038I Pass  28: suminf.    2.45636 (6) obj. -64.6801 iterations 14
Cbc0038I Pass  29: suminf.    2.00685 (7) obj. -64.6801 iterations 25
Cbc0038I Pass  30: suminf.    2.00685 (7) obj. -64.6801 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 200 rows 108 columns
Cbc0038I Mini branch and bound improved solution from -58.0991 to -60.2207 (0.18 seconds)
Cbc0038I Round again with cutoff of -76.5258
Cbc0038I Pass  30: suminf.    5.06003 (59) obj. -76.5258 iterations 0
Cbc0038I Pass  31: suminf.    4.59443 (39) obj. -76.5258 iterations 24
Cbc0038I Pass  32: suminf.    3.02719 (8) obj. -76.5258 iterations 61
Cbc0038I Pass  33: suminf.    2.83200 (9) obj. -76.5258 iterations 16
Cbc0038I Pass  34: suminf.    3.37958 (9) obj. -76.5258 iterations 19
Cbc0038I Pass  35: suminf.    2.87244 (7) obj. -76.5258 iterations 19
Cbc0038I Pass  36: suminf.    2.87244 (7) obj. -76.5258 iterations 0
Cbc0038I Pass  37: suminf.    2.78890 (11) obj. -76.5258 iterations 31
Cbc0038I Pass  38: suminf.    2.66615 (8) obj. -76.5258 iterations 17
Cbc0038I Pass  39: suminf.    2.55456 (8) obj. -76.5258 iterations 9
Cbc0038I Pass  40: suminf.    3.12446 (9) obj. -76.5258 iterations 21
Cbc0038I Pass  41: suminf.    2.75792 (8) obj. -76.5258 iterations 4
Cbc0038I Pass  42: suminf.    2.75792 (8) obj. -76.5258 iterations 2
Cbc0038I Pass  43: suminf.    3.37887 (9) obj. -76.5258 iterations 21
Cbc0038I Pass  44: suminf.    3.17721 (8) obj. -76.5258 iterations 16
Cbc0038I Pass  45: suminf.    2.82543 (7) obj. -76.5258 iterations 6
Cbc0038I Pass  46: suminf.    2.78385 (8) obj. -76.5258 iterations 12
Cbc0038I Pass  47: suminf.    3.45500 (8) obj. -76.5258 iterations 17
Cbc0038I Pass  48: suminf.    2.87244 (7) obj. -76.5258 iterations 12
Cbc0038I Pass  49: suminf.    2.87244 (7) obj. -76.5258 iterations 0
Cbc0038I Pass  50: suminf.    2.78890 (11) obj. -76.5258 iterations 31
Cbc0038I Pass  51: suminf.    2.66615 (8) obj. -76.5258 iterations 17
Cbc0038I Pass  52: suminf.    2.55456 (8) obj. -76.5258 iterations 9
Cbc0038I Pass  53: suminf.    3.12446 (9) obj. -76.5258 iterations 21
Cbc0038I Pass  54: suminf.    2.75792 (8) obj. -76.5258 iterations 4
Cbc0038I Pass  55: suminf.    2.75792 (8) obj. -76.5258 iterations 2
Cbc0038I Pass  56: suminf.    3.37887 (9) obj. -76.5258 iterations 22
Cbc0038I Pass  57: suminf.    3.17721 (8) obj. -76.5258 iterations 16
Cbc0038I Pass  58: suminf.    2.82543 (7) obj. -76.5258 iterations 6
Cbc0038I Pass  59: suminf.    2.78385 (8) obj. -76.5258 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 200 rows 108 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -60.2207 - took 0.25 seconds
Cbc0012I Integer solution of -60.220669 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 143 rows 79 columns
Cbc0012I Integer solution of -61.881769 found by RINS after 0 iterations and 0 nodes (0.34 seconds)
Cbc0031I 46 added rows had average density of 169.32609
Cbc0013I At root node, 46 cuts changed objective from -123.90872 to -110.48254 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 43043 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.589 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3658 row cuts average 259.0 elements, 0 column cuts (0 active)  in 0.640 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.833 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 247 row cuts average 255.4 elements, 0 column cuts (0 active)  in 0.197 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -61.881769 best solution, best possible -110.48254 (6.63 seconds)
Cbc0010I After 6 nodes, 7 on tree, -61.881769 best solution, best possible -110.48254 (7.34 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 167 rows 92 columns
Cbc0010I After 41 nodes, 14 on tree, -61.881769 best solution, best possible -110.48254 (8.06 seconds)
Cbc0012I Integer solution of -62.679889 found by rounding after 22500 iterations and 55 nodes (8.18 seconds)
Cbc0012I Integer solution of -64.216739 found by rounding after 23476 iterations and 88 nodes (8.28 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -65.929179 found by rounding after 23590 iterations and 92 nodes (8.30 seconds)
Cbc0010I After 142 nodes, 17 on tree, -65.929179 best solution, best possible -110.48254 (8.76 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 41 rows 30 columns
Cbc0001I Search completed - best objective -65.92917899999999, took 31298 iterations and 240 nodes (9.16 seconds)
Cbc0032I Strong branching done 2202 times (65362 iterations), fathomed 7 nodes and fixed 87 variables
Cbc0035I Maximum depth 65, 988 variables fixed on reduced cost
Total time (CPU seconds):       8.85   (Wallclock seconds):       9.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 348 (-179) rows, 366 (-159) columns and 14692 (-21045) elements
Clp1000I sum of infeasibilities 7.53073e-06 - average 2.164e-08, 62 fixed columns
Coin0506I Presolve 288 (-60) rows, 303 (-63) columns and 10940 (-3752) elements
Clp0006I 0  Obj 131.07952 Dual inf 43.895186 (303)
Clp0029I End of values pass after 303 iterations
Clp0014I Perturbing problem by 0.001% of 1.7230413 - largest nonzero change 2.636724e-05 ( 0.0020250552%) - largest zero change 2.9896223e-05
Clp0000I Optimal - objective value 153.84567
Clp0000I Optimal - objective value 153.84567
Coin0511I After Postsolve, objective 153.84567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 153.84567 Dual inf 21.116907 (2)
Clp0014I Perturbing problem by 0.001% of 1.5159961 - largest nonzero change 2.8127638e-05 ( 0.0021548148%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 153.84567
Clp0000I Optimal - objective value 153.84567
Clp0000I Optimal - objective value 153.84567
Coin0511I After Postsolve, objective 153.84567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 153.8456723 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 348 rows, 366 columns (366 integer (366 of which binary)) and 14692 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.299%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 109 integers unsatisfied sum - 4.81092
Cbc0038I Pass   1: suminf.    2.11571 (65) obj. -126.886 iterations 65
Cbc0038I Pass   2: suminf.    2.11571 (65) obj. -126.886 iterations 1
Cbc0038I Pass   3: suminf.    0.51899 (29) obj. -32.0667 iterations 34
Cbc0038I Pass   4: suminf.    0.11059 (10) obj. -12.4941 iterations 19
Cbc0038I Solution found of -2.60468
Cbc0038I Rounding solution of -22.3565 is better than previous of -2.60468

Cbc0038I Before mini branch and bound, 255 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -35.5055
Cbc0038I Pass   5: suminf.    2.11571 (65) obj. -126.886 iterations 0
Cbc0038I Pass   6: suminf.    2.11571 (65) obj. -126.886 iterations 1
Cbc0038I Pass   7: suminf.    1.03099 (46) obj. -55.3521 iterations 13
Cbc0038I Pass   8: suminf.    0.66281 (34) obj. -42.7511 iterations 12
Cbc0038I Pass   9: suminf.    1.08284 (19) obj. -35.5055 iterations 28
Cbc0038I Pass  10: suminf.    0.83629 (19) obj. -35.5055 iterations 1
Cbc0038I Pass  11: suminf.    0.53873 (2) obj. -35.5055 iterations 24
Cbc0038I Pass  12: suminf.    0.48889 (3) obj. -35.5055 iterations 5
Cbc0038I Pass  13: suminf.    0.55323 (2) obj. -35.5055 iterations 7
Cbc0038I Pass  14: suminf.    3.16277 (45) obj. -35.5055 iterations 95
Cbc0038I Pass  15: suminf.    1.62820 (19) obj. -35.5055 iterations 19
Cbc0038I Pass  16: suminf.    1.05541 (19) obj. -35.5055 iterations 3
Cbc0038I Pass  17: suminf.    2.06740 (34) obj. -35.5055 iterations 38
Cbc0038I Pass  18: suminf.    2.06740 (34) obj. -35.5055 iterations 0
Cbc0038I Pass  19: suminf.    2.36492 (29) obj. -35.5055 iterations 14
Cbc0038I Pass  20: suminf.    2.36492 (29) obj. -35.5055 iterations 0
Cbc0038I Pass  21: suminf.    1.63766 (16) obj. -35.5055 iterations 46
Cbc0038I Pass  22: suminf.    1.33511 (16) obj. -35.5055 iterations 10
Cbc0038I Pass  23: suminf.    1.55844 (9) obj. -35.5055 iterations 32
Cbc0038I Pass  24: suminf.    1.51044 (9) obj. -35.5055 iterations 10
Cbc0038I Pass  25: suminf.    1.71598 (25) obj. -35.5055 iterations 74
Cbc0038I Pass  26: suminf.    1.33770 (26) obj. -35.5055 iterations 14
Cbc0038I Pass  27: suminf.    0.76359 (24) obj. -35.5055 iterations 4
Cbc0038I Pass  28: suminf.    0.76078 (9) obj. -35.5055 iterations 31
Cbc0038I Pass  29: suminf.    0.49830 (12) obj. -35.5055 iterations 40
Cbc0038I Pass  30: suminf.    0.92580 (9) obj. -35.5055 iterations 20
Cbc0038I Pass  31: suminf.    0.68175 (10) obj. -35.5055 iterations 2
Cbc0038I Pass  32: suminf.    0.92580 (9) obj. -35.5055 iterations 14
Cbc0038I Pass  33: suminf.    1.93385 (27) obj. -35.5055 iterations 51
Cbc0038I Pass  34: suminf.    1.93385 (27) obj. -35.5055 iterations 13
Cbc0038I Rounding solution of -29.6583 is better than previous of -22.3565

Cbc0038I Before mini branch and bound, 223 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 130 rows 142 columns - 25 fixed gives 98, 116 - still too large
Cbc0038I Full problem 348 rows 366 columns, reduced to 72 rows 90 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of -59.1735
Cbc0038I Pass  34: suminf.    2.11571 (65) obj. -126.886 iterations 0
Cbc0038I Pass  35: suminf.    2.11571 (65) obj. -126.886 iterations 1
Cbc0038I Pass  36: suminf.    1.52004 (40) obj. -59.1735 iterations 29
Cbc0038I Pass  37: suminf.    1.33026 (40) obj. -59.1735 iterations 1
Cbc0038I Pass  38: suminf.    1.37558 (18) obj. -59.1735 iterations 48
Cbc0038I Pass  39: suminf.    1.02033 (18) obj. -59.1735 iterations 13
Cbc0038I Pass  40: suminf.    1.91403 (8) obj. -59.1735 iterations 73
Cbc0038I Pass  41: suminf.    1.46546 (8) obj. -59.1735 iterations 1
Cbc0038I Pass  42: suminf.    0.99523 (5) obj. -59.1735 iterations 10
Cbc0038I Pass  43: suminf.    0.71615 (5) obj. -59.1735 iterations 1
Cbc0038I Pass  44: suminf.    1.41534 (6) obj. -59.1735 iterations 6
Cbc0038I Pass  45: suminf.    0.66417 (5) obj. -59.1735 iterations 15
Cbc0038I Pass  46: suminf.    0.69710 (5) obj. -59.1735 iterations 5
Cbc0038I Pass  47: suminf.    1.89090 (25) obj. -59.1735 iterations 108
Cbc0038I Pass  48: suminf.    1.72812 (25) obj. -59.1735 iterations 15
Cbc0038I Pass  49: suminf.    1.32517 (11) obj. -59.1735 iterations 26
Cbc0038I Pass  50: suminf.    0.99518 (10) obj. -59.1735 iterations 3
Cbc0038I Pass  51: suminf.    1.28128 (8) obj. -59.1735 iterations 10
Cbc0038I Pass  52: suminf.    0.94459 (8) obj. -59.1735 iterations 5
Cbc0038I Pass  53: suminf.    1.39930 (23) obj. -59.1735 iterations 60
Cbc0038I Pass  54: suminf.    1.23785 (20) obj. -59.7563 iterations 13
Cbc0038I Pass  55: suminf.    1.63993 (13) obj. -59.1735 iterations 51
Cbc0038I Pass  56: suminf.    1.63993 (13) obj. -59.1735 iterations 0
Cbc0038I Pass  57: suminf.    1.53852 (12) obj. -59.1735 iterations 19
Cbc0038I Pass  58: suminf.    1.53852 (12) obj. -59.1735 iterations 0
Cbc0038I Pass  59: suminf.    0.69004 (9) obj. -59.1735 iterations 33
Cbc0038I Pass  60: suminf.    0.69004 (9) obj. -59.1735 iterations 6
Cbc0038I Pass  61: suminf.    2.12602 (10) obj. -59.1735 iterations 17
Cbc0038I Pass  62: suminf.    0.79608 (7) obj. -59.6429 iterations 16
Cbc0038I Pass  63: suminf.    0.72864 (8) obj. -59.1735 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 366 columns, reduced to 119 rows 136 columns - 19 fixed gives 99, 117 - still too large
Cbc0038I Full problem 348 rows 366 columns, reduced to 59 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -29.6583 - took 0.20 seconds
Cbc0012I Integer solution of -29.658269 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 87 rows 94 columns
Cbc0012I Integer solution of -44.788282 found by RINS after 0 iterations and 0 nodes (0.36 seconds)
Cbc0031I 153 added rows had average density of 83.895425
Cbc0013I At root node, 153 cuts changed objective from -153.84567 to -94.422062 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35232 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.433 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3034 row cuts average 357.0 elements, 0 column cuts (0 active)  in 1.133 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 252 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4691 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.839 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1388 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.819 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 340 row cuts average 238.2 elements, 0 column cuts (0 active)  in 0.253 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 245 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.817 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -44.788282 best solution, best possible -94.422062 (9.35 seconds)
Cbc0010I After 2 nodes, 1 on tree, -44.788282 best solution, best possible -92.188375 (11.56 seconds)
Cbc0012I Integer solution of -48.903192 found by rounding after 16679 iterations and 5 nodes (12.31 seconds)
Cbc0010I After 5 nodes, 4 on tree, -48.903192 best solution, best possible -92.188375 (12.72 seconds)
Cbc0010I After 9 nodes, 6 on tree, -48.903192 best solution, best possible -92.188375 (13.47 seconds)
Cbc0012I Integer solution of -52.750169 found by rounding after 18069 iterations and 16 nodes (13.86 seconds)
Cbc0012I Integer solution of -57.357032 found by rounding after 18515 iterations and 23 nodes (14.00 seconds)
Cbc0012I Integer solution of -58.418822 found by rounding after 18521 iterations and 24 nodes (14.01 seconds)
Cbc0012I Integer solution of -64.477519 found by rounding after 18523 iterations and 25 nodes (14.01 seconds)
Cbc0016I Integer solution of -64.513719 found by strong branching after 18924 iterations and 36 nodes (14.16 seconds)
Cbc0010I After 37 nodes, 11 on tree, -64.513719 best solution, best possible -92.188375 (14.17 seconds)
Cbc0004I Integer solution of -65.513719 found after 18987 iterations and 38 nodes (14.18 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 57 rows 74 columns
Cbc0010I After 54 nodes, 5 on tree, -65.513719 best solution, best possible -92.188375 (14.88 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 36 rows 48 columns
Cbc0012I Integer solution of -65.929179 found by RINS after 21572 iterations and 92 nodes (15.60 seconds)
Cbc0010I After 92 nodes, 8 on tree, -65.929179 best solution, best possible -92.188375 (15.60 seconds)
Cbc0010I After 161 nodes, 5 on tree, -65.929179 best solution, best possible -92.188375 (16.30 seconds)
Cbc0010I After 165 nodes, 4 on tree, -65.929179 best solution, best possible -92.188375 (17.16 seconds)
Cbc0010I After 166 nodes, 5 on tree, -65.929179 best solution, best possible -92.188375 (17.91 seconds)
Cbc0010I After 167 nodes, 5 on tree, -65.929179 best solution, best possible -92.188375 (18.64 seconds)
Cbc0010I After 170 nodes, 6 on tree, -65.929179 best solution, best possible -92.188375 (19.79 seconds)
Cbc0010I After 188 nodes, 6 on tree, -65.929179 best solution, best possible -92.188375 (20.54 seconds)
Cbc0038I Full problem 348 rows 366 columns, reduced to 144 rows 159 columns
Cbc0010I After 200 nodes, 6 on tree, -65.929179 best solution, best possible -92.188375 (21.77 seconds)
Cbc0001I Search completed - best objective -65.92917899999999, took 31230 iterations and 212 nodes (22.06 seconds)
Cbc0032I Strong branching done 1398 times (34092 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 35, 879 variables fixed on reduced cost
Total time (CPU seconds):       21.65   (Wallclock seconds):       22.16

