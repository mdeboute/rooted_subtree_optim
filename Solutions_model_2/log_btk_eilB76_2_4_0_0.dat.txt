Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-37) rows, 67 (-11) columns and 363 (-90) elements
Clp1000I sum of infeasibilities 4.62579e-05 - average 3.92016e-07, 12 fixed columns
Coin0506I Presolve 88 (-30) rows, 52 (-15) columns and 273 (-90) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.1109009 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Coin0511I After Postsolve, objective 63.251879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Coin0511I After Postsolve, objective 63.251879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.25187879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 67 columns (66 integer (66 of which binary)) and 391 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.935%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.69739
Cbc0038I Solution found of -9.57801
Cbc0038I Relaxing continuous gives -16.8197
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 52 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -16.8197 to -35.0942 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.8498
Cbc0038I Pass   1: suminf.    1.70738 (13) obj. -37.8498 iterations 54
Cbc0038I Pass   2: suminf.    0.67156 (4) obj. -37.8498 iterations 21
Cbc0038I Pass   3: suminf.    0.64116 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   4: suminf.    0.71351 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   5: suminf.    0.42566 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   6: suminf.    1.19369 (4) obj. -37.8498 iterations 7
Cbc0038I Pass   7: suminf.    0.65849 (2) obj. -37.8498 iterations 5
Cbc0038I Pass   8: suminf.    0.65703 (2) obj. -37.8498 iterations 1
Cbc0038I Pass   9: suminf.    0.47581 (2) obj. -37.8498 iterations 4
Cbc0038I Pass  10: suminf.    1.18741 (6) obj. -37.8498 iterations 11
Cbc0038I Pass  11: suminf.    0.61132 (5) obj. -37.8498 iterations 9
Cbc0038I Pass  12: suminf.    0.76573 (3) obj. -37.8498 iterations 9
Cbc0038I Pass  13: suminf.    0.58720 (2) obj. -37.8498 iterations 3
Cbc0038I Pass  14: suminf.    0.67254 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  15: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  16: suminf.    0.61952 (3) obj. -37.8498 iterations 5
Cbc0038I Pass  17: suminf.    0.46213 (3) obj. -37.8498 iterations 5
Cbc0038I Pass  18: suminf.    0.67557 (2) obj. -37.8498 iterations 5
Cbc0038I Pass  19: suminf.    0.58523 (2) obj. -37.8498 iterations 3
Cbc0038I Pass  20: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  21: suminf.    0.67254 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  22: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  23: suminf.    1.28372 (5) obj. -37.8498 iterations 14
Cbc0038I Pass  24: suminf.    0.65177 (3) obj. -37.8498 iterations 8
Cbc0038I Pass  25: suminf.    0.61115 (2) obj. -37.8498 iterations 4
Cbc0038I Pass  26: suminf.    0.57752 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  27: suminf.    0.63086 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  28: suminf.    0.57752 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  29: suminf.    2.70226 (8) obj. -37.8498 iterations 17
Cbc0038I Pass  30: suminf.    1.31709 (4) obj. -37.8498 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -35.0942 to -35.1631 (0.06 seconds)
Cbc0038I Round again with cutoff of -42.8097
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.11006 (13) obj. -42.8097 iterations 0
Cbc0038I Pass  31: suminf.    1.27185 (5) obj. -42.8097 iterations 19
Cbc0038I Pass  32: suminf.    1.27185 (5) obj. -42.8097 iterations 0
Cbc0038I Pass  33: suminf.    1.29809 (5) obj. -42.8097 iterations 8
Cbc0038I Pass  34: suminf.    1.15113 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  35: suminf.    1.15047 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  36: suminf.    1.29942 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  37: suminf.    2.19403 (7) obj. -42.8097 iterations 13
Cbc0038I Pass  38: suminf.    1.04555 (3) obj. -42.8097 iterations 11
Cbc0038I Pass  39: suminf.    1.03720 (4) obj. -42.8097 iterations 7
Cbc0038I Pass  40: suminf.    0.97931 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  41: suminf.    1.57347 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  42: suminf.    1.48977 (5) obj. -42.8097 iterations 2
Cbc0038I Pass  43: suminf.    1.03720 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  44: suminf.    1.62878 (6) obj. -42.8097 iterations 12
Cbc0038I Pass  45: suminf.    1.23634 (5) obj. -42.8097 iterations 7
Cbc0038I Pass  46: suminf.    1.29942 (5) obj. -42.8097 iterations 14
Cbc0038I Pass  47: suminf.    1.29809 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  48: suminf.    1.15113 (5) obj. -42.8097 iterations 7
Cbc0038I Pass  49: suminf.    1.15047 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  50: suminf.    1.43362 (7) obj. -42.8097 iterations 9
Cbc0038I Pass  51: suminf.    0.76972 (4) obj. -42.8097 iterations 9
Cbc0038I Pass  52: suminf.    1.30610 (4) obj. -42.8097 iterations 13
Cbc0038I Pass  53: suminf.    0.97931 (4) obj. -42.8097 iterations 2
Cbc0038I Pass  54: suminf.    1.57347 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  55: suminf.    1.48977 (5) obj. -42.8097 iterations 2
Cbc0038I Pass  56: suminf.    1.03720 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  57: suminf.    1.16933 (4) obj. -42.8097 iterations 8
Cbc0038I Pass  58: suminf.    0.62442 (4) obj. -42.8097 iterations 7
Cbc0038I Pass  59: suminf.    1.75129 (6) obj. -42.8097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 65 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -35.1631 - took 0.06 seconds
Cbc0012I Integer solution of -35.163116 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 113 rows 67 columns, reduced to 53 rows 31 columns
Cbc0031I 23 added rows had average density of 41.565217
Cbc0013I At root node, 23 cuts changed objective from -62.649081 to -54.342545 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5959 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1294 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0038I Full problem 113 rows 67 columns, reduced to 5 rows 9 columns
Cbc0001I Search completed - best objective -35.1631158, took 6339 iterations and 46 nodes (0.62 seconds)
Cbc0032I Strong branching done 536 times (8854 iterations), fathomed 6 nodes and fixed 33 variables
Cbc0035I Maximum depth 13, 118 variables fixed on reduced cost
Total time (CPU seconds):       0.60   (Wallclock seconds):       0.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-56) rows, 112 (-40) columns and 1848 (-1455) elements
Clp1000I sum of infeasibilities 2.10979e-07 - average 2.15284e-09, 102 fixed columns
Coin0506I Presolve 9 (-89) rows, 10 (-102) columns and 33 (-1815) elements
Clp0006I 0  Obj 94.111206 Dual inf 2.8295598 (10)
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 1.2271909 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 94.786912
Clp0000I Optimal - objective value 94.786912
Coin0511I After Postsolve, objective 94.786912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 94.786912 Dual inf 51.618484 (41)
Clp0014I Perturbing problem by 0.001% of 1.7952423 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 163.79642
Clp0000I Optimal - objective value 163.79642
Clp0000I Optimal - objective value 163.79642
Coin0511I After Postsolve, objective 163.79642, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 163.7964244 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 68 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 113 columns (113 integer (113 of which binary)) and 1894 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.998%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.60948
Cbc0038I Pass   1: suminf.    0.60954 (21) obj. -56.5686 iterations 17
Cbc0038I Pass   2: suminf.    0.60954 (21) obj. -56.5686 iterations 0
Cbc0038I Pass   3: suminf.    0.16129 (8) obj. -44.0168 iterations 13
Cbc0038I Solution found of -33.2406
Cbc0038I Rounding solution of -50.0559 is better than previous of -33.2406

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 113 columns, reduced to 42 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -50.0559 to -93.2406 (0.05 seconds)
Cbc0038I Round again with cutoff of -97.5194
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.91303 (36) obj. -97.5194 iterations 1
Cbc0038I Pass   5: suminf.    2.91303 (36) obj. -97.5194 iterations 0
Cbc0038I Pass   6: suminf.    1.35019 (24) obj. -97.5194 iterations 12
Cbc0038I Pass   7: suminf.    1.32226 (23) obj. -105.516 iterations 1
Cbc0038I Pass   8: suminf.    0.32131 (1) obj. -97.5194 iterations 33
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -98.2406 iterations 1
Cbc0038I Pass  10: suminf.    1.46788 (10) obj. -97.5194 iterations 13
Cbc0038I Pass  11: suminf.    1.37763 (9) obj. -97.5194 iterations 3
Cbc0038I Pass  12: suminf.    1.81153 (6) obj. -97.5194 iterations 15
Cbc0038I Pass  13: suminf.    1.70644 (5) obj. -97.5194 iterations 4
Cbc0038I Pass  14: suminf.    0.81457 (4) obj. -97.5194 iterations 3
Cbc0038I Pass  15: suminf.    0.73057 (4) obj. -97.5194 iterations 2
Cbc0038I Pass  16: suminf.    1.53157 (13) obj. -97.5194 iterations 13
Cbc0038I Pass  17: suminf.    1.43583 (13) obj. -97.5194 iterations 1
Cbc0038I Pass  18: suminf.    1.70644 (5) obj. -97.5194 iterations 19
Cbc0038I Pass  19: suminf.    1.70644 (5) obj. -97.5194 iterations 0
Cbc0038I Pass  20: suminf.    0.81457 (4) obj. -97.5194 iterations 3
Cbc0038I Pass  21: suminf.    0.73057 (4) obj. -97.5194 iterations 2
Cbc0038I Pass  22: suminf.    1.80570 (11) obj. -97.5194 iterations 11
Cbc0038I Pass  23: suminf.    1.65904 (11) obj. -97.5194 iterations 1
Cbc0038I Pass  24: suminf.    1.31213 (10) obj. -97.5194 iterations 3
Cbc0038I Pass  25: suminf.    1.70644 (5) obj. -97.5194 iterations 15
Cbc0038I Pass  26: suminf.    1.70644 (5) obj. -97.5194 iterations 0
Cbc0038I Pass  27: suminf.    0.81457 (4) obj. -97.5194 iterations 3
Cbc0038I Pass  28: suminf.    0.73057 (4) obj. -97.5194 iterations 2
Cbc0038I Pass  29: suminf.    1.63130 (10) obj. -97.5194 iterations 10
Cbc0038I Pass  30: suminf.    1.61816 (10) obj. -97.5194 iterations 1
Cbc0038I Pass  31: suminf.    1.70644 (5) obj. -97.5194 iterations 15
Cbc0038I Pass  32: suminf.    1.70644 (5) obj. -97.5194 iterations 0
Cbc0038I Pass  33: suminf.    0.81457 (4) obj. -97.5194 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 113 columns, reduced to 42 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -93.2406 - took 0.03 seconds
Cbc0012I Integer solution of -93.24059 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 93 rows 113 columns, reduced to 42 rows 41 columns
Cbc0012I Integer solution of -93.309456 found by DiveCoefficient after 147 iterations and 0 nodes (0.13 seconds)
Cbc0031I 11 added rows had average density of 7.6363636
Cbc0013I At root node, 11 cuts changed objective from -136.02786 to -93.309456 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 141 row cuts average 3.8 elements, 47 column cuts (47 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 27 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 75 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -93.30945579999999, took 147 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 118 (-37) rows, 67 (-11) columns and 363 (-90) elements
Clp1000I sum of infeasibilities 4.62579e-05 - average 3.92016e-07, 12 fixed columns
Coin0506I Presolve 88 (-30) rows, 52 (-15) columns and 273 (-90) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.1109009 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Coin0511I After Postsolve, objective 63.251879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Clp0000I Optimal - objective value 63.251879
Coin0511I After Postsolve, objective 63.251879, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.25187879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 67 columns (66 integer (66 of which binary)) and 391 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.935%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 4.69739
Cbc0038I Solution found of -9.57801
Cbc0038I Relaxing continuous gives -16.8197
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 52 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -16.8197 to -35.0942 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.8498
Cbc0038I Pass   1: suminf.    1.70738 (13) obj. -37.8498 iterations 54
Cbc0038I Pass   2: suminf.    0.67156 (4) obj. -37.8498 iterations 21
Cbc0038I Pass   3: suminf.    0.64116 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   4: suminf.    0.71351 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   5: suminf.    0.42566 (3) obj. -37.8498 iterations 2
Cbc0038I Pass   6: suminf.    1.19369 (4) obj. -37.8498 iterations 7
Cbc0038I Pass   7: suminf.    0.65849 (2) obj. -37.8498 iterations 5
Cbc0038I Pass   8: suminf.    0.65703 (2) obj. -37.8498 iterations 1
Cbc0038I Pass   9: suminf.    0.47581 (2) obj. -37.8498 iterations 4
Cbc0038I Pass  10: suminf.    1.18741 (6) obj. -37.8498 iterations 11
Cbc0038I Pass  11: suminf.    0.61132 (5) obj. -37.8498 iterations 9
Cbc0038I Pass  12: suminf.    0.76573 (3) obj. -37.8498 iterations 9
Cbc0038I Pass  13: suminf.    0.58720 (2) obj. -37.8498 iterations 3
Cbc0038I Pass  14: suminf.    0.67254 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  15: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  16: suminf.    0.61952 (3) obj. -37.8498 iterations 5
Cbc0038I Pass  17: suminf.    0.46213 (3) obj. -37.8498 iterations 5
Cbc0038I Pass  18: suminf.    0.67557 (2) obj. -37.8498 iterations 5
Cbc0038I Pass  19: suminf.    0.58523 (2) obj. -37.8498 iterations 3
Cbc0038I Pass  20: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  21: suminf.    0.67254 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  22: suminf.    0.58720 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  23: suminf.    1.28372 (5) obj. -37.8498 iterations 14
Cbc0038I Pass  24: suminf.    0.65177 (3) obj. -37.8498 iterations 8
Cbc0038I Pass  25: suminf.    0.61115 (2) obj. -37.8498 iterations 4
Cbc0038I Pass  26: suminf.    0.57752 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  27: suminf.    0.63086 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  28: suminf.    0.57752 (2) obj. -37.8498 iterations 1
Cbc0038I Pass  29: suminf.    2.70226 (8) obj. -37.8498 iterations 17
Cbc0038I Pass  30: suminf.    1.31709 (4) obj. -37.8498 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -35.0942 to -35.1631 (0.06 seconds)
Cbc0038I Round again with cutoff of -42.8097
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.11006 (13) obj. -42.8097 iterations 0
Cbc0038I Pass  31: suminf.    1.27185 (5) obj. -42.8097 iterations 19
Cbc0038I Pass  32: suminf.    1.27185 (5) obj. -42.8097 iterations 0
Cbc0038I Pass  33: suminf.    1.29809 (5) obj. -42.8097 iterations 8
Cbc0038I Pass  34: suminf.    1.15113 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  35: suminf.    1.15047 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  36: suminf.    1.29942 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  37: suminf.    2.19403 (7) obj. -42.8097 iterations 13
Cbc0038I Pass  38: suminf.    1.04555 (3) obj. -42.8097 iterations 11
Cbc0038I Pass  39: suminf.    1.03720 (4) obj. -42.8097 iterations 7
Cbc0038I Pass  40: suminf.    0.97931 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  41: suminf.    1.57347 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  42: suminf.    1.48977 (5) obj. -42.8097 iterations 2
Cbc0038I Pass  43: suminf.    1.03720 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  44: suminf.    1.62878 (6) obj. -42.8097 iterations 12
Cbc0038I Pass  45: suminf.    1.23634 (5) obj. -42.8097 iterations 7
Cbc0038I Pass  46: suminf.    1.29942 (5) obj. -42.8097 iterations 14
Cbc0038I Pass  47: suminf.    1.29809 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  48: suminf.    1.15113 (5) obj. -42.8097 iterations 7
Cbc0038I Pass  49: suminf.    1.15047 (5) obj. -42.8097 iterations 1
Cbc0038I Pass  50: suminf.    1.43362 (7) obj. -42.8097 iterations 9
Cbc0038I Pass  51: suminf.    0.76972 (4) obj. -42.8097 iterations 9
Cbc0038I Pass  52: suminf.    1.30610 (4) obj. -42.8097 iterations 13
Cbc0038I Pass  53: suminf.    0.97931 (4) obj. -42.8097 iterations 2
Cbc0038I Pass  54: suminf.    1.57347 (5) obj. -42.8097 iterations 5
Cbc0038I Pass  55: suminf.    1.48977 (5) obj. -42.8097 iterations 2
Cbc0038I Pass  56: suminf.    1.03720 (4) obj. -42.8097 iterations 4
Cbc0038I Pass  57: suminf.    1.16933 (4) obj. -42.8097 iterations 8
Cbc0038I Pass  58: suminf.    0.62442 (4) obj. -42.8097 iterations 7
Cbc0038I Pass  59: suminf.    1.75129 (6) obj. -42.8097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 67 columns, reduced to 65 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -35.1631 - took 0.07 seconds
Cbc0012I Integer solution of -35.163116 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 113 rows 67 columns, reduced to 53 rows 31 columns
Cbc0031I 23 added rows had average density of 41.565217
Cbc0013I At root node, 23 cuts changed objective from -62.649081 to -54.342545 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5959 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1294 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0038I Full problem 113 rows 67 columns, reduced to 5 rows 9 columns
Cbc0001I Search completed - best objective -35.1631158, took 6339 iterations and 46 nodes (0.66 seconds)
Cbc0032I Strong branching done 536 times (8854 iterations), fathomed 6 nodes and fixed 33 variables
Cbc0035I Maximum depth 13, 118 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-62) rows, 107 (-46) columns and 1684 (-1620) elements
Clp1000I sum of infeasibilities 2.89948e-06 - average 3.11772e-08, 72 fixed columns
Coin0506I Presolve 25 (-68) rows, 34 (-73) columns and 113 (-1571) elements
Clp0006I 0  Obj 4.7846202 Dual inf 1.2240623 (33)
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 3.7300884 - largest nonzero change 3.6876887e-05 ( 0.00086296483%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 7.3938366
Clp0000I Optimal - objective value 7.3938366
Coin0511I After Postsolve, objective 7.3938366, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 7.3938366 Dual inf 51.670059 (41)
Clp0014I Perturbing problem by 0.001% of 1.8466549 - largest nonzero change 2.843899e-05 ( 0.002843899%) - largest zero change 2.9795546e-05
Clp0000I Optimal - objective value 73.999765
Clp0000I Optimal - objective value 73.999765
Clp0000I Optimal - objective value 73.999765
Coin0511I After Postsolve, objective 73.999765, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.99976481 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 108 columns (108 integer (108 of which binary)) and 1717 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.947%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 2.69439
Cbc0038I Pass   1: suminf.    0.99094 (17) obj. -53.5469 iterations 22
Cbc0038I Pass   2: suminf.    0.99094 (17) obj. -53.5469 iterations 1
Cbc0038I Solution found of -19.6454
Cbc0038I Rounding solution of -24.6257 is better than previous of -19.6454

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 108 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -27.8458
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.99094 (17) obj. -53.5469 iterations 0
Cbc0038I Pass   4: suminf.    0.99094 (17) obj. -53.5469 iterations 2
Cbc0038I Pass   5: suminf.    0.47025 (1) obj. -27.8458 iterations 25
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -33.5962 iterations 2
Cbc0038I Pass   7: suminf.    1.12744 (12) obj. -28.4427 iterations 29
Cbc0038I Pass   8: suminf.    0.82351 (7) obj. -27.8458 iterations 4
Cbc0038I Pass   9: suminf.    0.66960 (3) obj. -27.8458 iterations 9
Cbc0038I Pass  10: suminf.    0.66960 (3) obj. -27.8458 iterations 0
Cbc0038I Pass  11: suminf.    0.50564 (3) obj. -27.8458 iterations 3
Cbc0038I Pass  12: suminf.    0.50564 (3) obj. -27.8458 iterations 1
Cbc0038I Pass  13: suminf.    0.52508 (2) obj. -27.8458 iterations 9
Cbc0038I Pass  14: suminf.    0.45271 (2) obj. -29.0478 iterations 6
Cbc0038I Pass  15: suminf.    0.52253 (2) obj. -27.8458 iterations 2
Cbc0038I Pass  16: suminf.    1.39340 (16) obj. -27.8458 iterations 27
Cbc0038I Pass  17: suminf.    1.26790 (15) obj. -27.8458 iterations 2
Cbc0038I Pass  18: suminf.    0.43683 (9) obj. -27.8458 iterations 17
Cbc0038I Pass  19: suminf.    0.40729 (8) obj. -27.8458 iterations 4
Cbc0038I Pass  20: suminf.    1.96110 (15) obj. -27.8458 iterations 13
Cbc0038I Pass  21: suminf.    1.91918 (13) obj. -27.8458 iterations 6
Cbc0038I Pass  22: suminf.    1.65320 (11) obj. -27.8458 iterations 13
Cbc0038I Pass  23: suminf.    1.08625 (10) obj. -27.8458 iterations 5
Cbc0038I Pass  24: suminf.    1.79998 (12) obj. -27.8458 iterations 7
Cbc0038I Pass  25: suminf.    1.16996 (10) obj. -27.8458 iterations 5
Cbc0038I Pass  26: suminf.    1.65320 (11) obj. -27.8458 iterations 7
Cbc0038I Pass  27: suminf.    1.87622 (15) obj. -27.8458 iterations 16
Cbc0038I Pass  28: suminf.    1.87622 (15) obj. -27.8458 iterations 1
Cbc0038I Pass  29: suminf.    1.79998 (12) obj. -27.8458 iterations 19
Cbc0038I Pass  30: suminf.    1.81411 (14) obj. -27.8458 iterations 18
Cbc0038I Pass  31: suminf.    1.60320 (15) obj. -27.8458 iterations 4
Cbc0038I Pass  32: suminf.    2.24369 (12) obj. -27.8458 iterations 15
Cbc0038I Rounding solution of -27.8232 is better than previous of -24.6257

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 108 columns, reduced to 44 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -27.8232 to -34.9791 (0.09 seconds)
Cbc0038I Round again with cutoff of -39.3486
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.99094 (17) obj. -53.5469 iterations 0
Cbc0038I Pass  33: suminf.    0.99094 (17) obj. -53.5469 iterations 2
Cbc0038I Pass  34: suminf.    1.31303 (18) obj. -39.3486 iterations 42
Cbc0038I Pass  35: suminf.    0.79363 (4) obj. -39.3486 iterations 6
Cbc0038I Pass  36: suminf.    0.35969 (4) obj. -40.2165 iterations 4
Cbc0038I Pass  37: suminf.    1.13402 (8) obj. -39.3486 iterations 8
Cbc0038I Pass  38: suminf.    0.43552 (6) obj. -40.1406 iterations 6
Cbc0038I Pass  39: suminf.    1.39910 (19) obj. -39.3486 iterations 15
Cbc0038I Pass  40: suminf.    0.79363 (5) obj. -39.3486 iterations 7
Cbc0038I Pass  41: suminf.    1.61155 (23) obj. -39.3486 iterations 25
Cbc0038I Pass  42: suminf.    1.61155 (23) obj. -39.3486 iterations 3
Cbc0038I Pass  43: suminf.    1.56880 (19) obj. -39.3486 iterations 22
Cbc0038I Pass  44: suminf.    1.56880 (19) obj. -39.3486 iterations 2
Cbc0038I Pass  45: suminf.    3.68676 (20) obj. -39.3486 iterations 6
Cbc0038I Pass  46: suminf.    2.90050 (20) obj. -39.3486 iterations 7
Cbc0038I Pass  47: suminf.    2.21970 (20) obj. -39.3486 iterations 6
Cbc0038I Pass  48: suminf.    2.19668 (20) obj. -39.3486 iterations 3
Cbc0038I Pass  49: suminf.    2.18186 (20) obj. -39.3486 iterations 2
Cbc0038I Pass  50: suminf.    3.32819 (19) obj. -39.3486 iterations 6
Cbc0038I Pass  51: suminf.    3.16155 (18) obj. -39.3486 iterations 3
Cbc0038I Pass  52: suminf.    3.12822 (18) obj. -39.3486 iterations 2
Cbc0038I Pass  53: suminf.    3.12822 (18) obj. -39.3486 iterations 1
Cbc0038I Pass  54: suminf.    3.16155 (18) obj. -39.3486 iterations 2
Cbc0038I Pass  55: suminf.    3.27496 (23) obj. -39.3486 iterations 18
Cbc0038I Pass  56: suminf.    3.07309 (22) obj. -39.3486 iterations 3
Cbc0038I Pass  57: suminf.    3.30837 (19) obj. -39.3486 iterations 21
Cbc0038I Pass  58: suminf.    3.22940 (19) obj. -39.3486 iterations 6
Cbc0038I Pass  59: suminf.    3.03254 (18) obj. -39.3486 iterations 3
Cbc0038I Pass  60: suminf.    3.12822 (18) obj. -39.3486 iterations 6
Cbc0038I Pass  61: suminf.    3.12822 (18) obj. -39.3486 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 108 columns, reduced to 45 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -34.9791 - took 0.07 seconds
Cbc0012I Integer solution of -34.979116 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 89 rows 108 columns, reduced to 11 rows 14 columns
Cbc0031I 47 added rows had average density of 10.276596
Cbc0013I At root node, 47 cuts changed objective from -56.826081 to -42.873192 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 2244 row cuts average 10.5 elements, 6 column cuts (6 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 60 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 110 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 85 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 187 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 287 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 34.3 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -34.979116 best solution, best possible -42.873192 (0.47 seconds)
Cbc0012I Integer solution of -35.07245 found by rounding after 1037 iterations and 7 nodes (0.91 seconds)
Cbc0010I After 10 nodes, 8 on tree, -35.07245 best solution, best possible -40.95881 (1.17 seconds)
Cbc0012I Integer solution of -35.163116 found by rounding after 1426 iterations and 16 nodes (1.49 seconds)
Cbc0001I Search completed - best objective -35.1631158, took 1905 iterations and 28 nodes (1.73 seconds)
Cbc0032I Strong branching done 468 times (7048 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 50 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.75

