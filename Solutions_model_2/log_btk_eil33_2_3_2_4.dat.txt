Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-16) rows, 32 (-3) columns and 162 (-33) elements
Clp1000I sum of infeasibilities 1.46946e-06 - average 2.77256e-08, 4 fixed columns
Coin0506I Presolve 45 (-8) rows, 28 (-4) columns and 139 (-23) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 3.5550291 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 69.655241
Clp0000I Optimal - objective value 69.655241
Coin0511I After Postsolve, objective 69.655241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.655241
Clp0000I Optimal - objective value 69.655241
Clp0000I Optimal - objective value 69.655241
Coin0511I After Postsolve, objective 69.655241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.65524105 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 32 columns (31 integer (31 of which binary)) and 165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.740%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.25259
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.1995 iterations 15
Cbc0038I Solution found of -25.1995
Cbc0038I Relaxing continuous gives -25.1995
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 32 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29.6452
Cbc0038I Pass   2: suminf.    0.13135 (1) obj. -29.6452 iterations 1
Cbc0038I Pass   3: suminf.    0.36789 (2) obj. -29.6452 iterations 3
Cbc0038I Pass   4: suminf.    0.42247 (2) obj. -29.6452 iterations 5
Cbc0038I Pass   5: suminf.    0.42247 (2) obj. -29.6452 iterations 0
Cbc0038I Pass   6: suminf.    0.41194 (1) obj. -29.6452 iterations 3
Cbc0038I Pass   7: suminf.    0.24711 (1) obj. -29.6452 iterations 2
Cbc0038I Pass   8: suminf.    1.46391 (4) obj. -29.6452 iterations 10
Cbc0038I Pass   9: suminf.    0.85734 (3) obj. -29.6452 iterations 1
Cbc0038I Pass  10: suminf.    1.20321 (4) obj. -29.6452 iterations 8
Cbc0038I Pass  11: suminf.    1.06164 (3) obj. -29.6452 iterations 3
Cbc0038I Pass  12: suminf.    0.71176 (2) obj. -29.6452 iterations 1
Cbc0038I Pass  13: suminf.    1.05022 (4) obj. -29.6452 iterations 4
Cbc0038I Pass  14: suminf.    0.99544 (3) obj. -29.6452 iterations 3
Cbc0038I Pass  15: suminf.    0.62544 (2) obj. -29.6452 iterations 1
Cbc0038I Pass  16: suminf.    0.28098 (2) obj. -29.6452 iterations 4
Cbc0038I Pass  17: suminf.    0.42247 (2) obj. -29.6452 iterations 4
Cbc0038I Pass  18: suminf.    0.42247 (2) obj. -29.6452 iterations 0
Cbc0038I Pass  19: suminf.    0.41194 (1) obj. -29.6452 iterations 2
Cbc0038I Pass  20: suminf.    0.24711 (1) obj. -29.6452 iterations 2
Cbc0038I Pass  21: suminf.    0.25545 (2) obj. -29.6452 iterations 4
Cbc0038I Pass  22: suminf.    0.25545 (2) obj. -29.6452 iterations 1
Cbc0038I Pass  23: suminf.    1.09208 (5) obj. -29.6452 iterations 7
Cbc0038I Pass  24: suminf.    0.77495 (3) obj. -29.6452 iterations 4
Cbc0038I Pass  25: suminf.    0.78393 (3) obj. -29.6452 iterations 8
Cbc0038I Pass  26: suminf.    0.28544 (2) obj. -29.6452 iterations 3
Cbc0038I Pass  27: suminf.    0.30861 (2) obj. -29.6452 iterations 4
Cbc0038I Pass  28: suminf.    0.30861 (2) obj. -29.6452 iterations 0
Cbc0038I Pass  29: suminf.    0.56780 (2) obj. -29.6452 iterations 2
Cbc0038I Pass  30: suminf.    0.18604 (1) obj. -29.6452 iterations 2
Cbc0038I Pass  31: suminf.    0.79545 (4) obj. -29.6452 iterations 3
Cbc0038I Rounding solution of -26.0356 is better than previous of -25.1995

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 32 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -37.6472
Cbc0038I Pass  31: suminf.    0.41572 (2) obj. -37.6472 iterations 1
Cbc0038I Pass  32: suminf.    0.79941 (3) obj. -37.6472 iterations 4
Cbc0038I Pass  33: suminf.    0.79941 (3) obj. -37.6472 iterations 0
Cbc0038I Pass  34: suminf.    0.55882 (2) obj. -37.6472 iterations 2
Cbc0038I Pass  35: suminf.    0.53834 (2) obj. -37.6472 iterations 3
Cbc0038I Pass  36: suminf.    0.67110 (2) obj. -37.6472 iterations 3
Cbc0038I Pass  37: suminf.    1.53448 (5) obj. -37.6472 iterations 9
Cbc0038I Pass  38: suminf.    1.06932 (4) obj. -37.6472 iterations 5
Cbc0038I Pass  39: suminf.    1.02237 (4) obj. -37.6472 iterations 9
Cbc0038I Pass  40: suminf.    1.58837 (7) obj. -37.6472 iterations 11
Cbc0038I Pass  41: suminf.    1.47815 (7) obj. -37.6472 iterations 4
Cbc0038I Pass  42: suminf.    0.67871 (4) obj. -37.6472 iterations 8
Cbc0038I Pass  43: suminf.    0.67871 (4) obj. -37.6472 iterations 0
Cbc0038I Pass  44: suminf.    1.00731 (4) obj. -37.6472 iterations 4
Cbc0038I Pass  45: suminf.    0.86302 (3) obj. -37.6472 iterations 3
Cbc0038I Pass  46: suminf.    1.08488 (4) obj. -37.6472 iterations 3
Cbc0038I Pass  47: suminf.    0.67871 (4) obj. -37.6472 iterations 1
Cbc0038I Pass  48: suminf.    0.67871 (4) obj. -37.6472 iterations 0
Cbc0038I Pass  49: suminf.    1.00731 (4) obj. -37.6472 iterations 4
Cbc0038I Pass  50: suminf.    0.86302 (3) obj. -37.6472 iterations 3
Cbc0038I Pass  51: suminf.    1.08488 (4) obj. -37.6472 iterations 3
Cbc0038I Pass  52: suminf.    0.67871 (4) obj. -37.6472 iterations 1
Cbc0038I Pass  53: suminf.    0.67871 (4) obj. -37.6472 iterations 0
Cbc0038I Pass  54: suminf.    1.00731 (4) obj. -37.6472 iterations 4
Cbc0038I Pass  55: suminf.    0.86302 (3) obj. -37.6472 iterations 3
Cbc0038I Pass  56: suminf.    1.08488 (4) obj. -37.6472 iterations 3
Cbc0038I Pass  57: suminf.    0.67871 (4) obj. -37.6472 iterations 1
Cbc0038I Pass  58: suminf.    0.67871 (4) obj. -37.6472 iterations 0
Cbc0038I Pass  59: suminf.    1.00731 (4) obj. -37.6472 iterations 4
Cbc0038I Pass  60: suminf.    0.86302 (3) obj. -37.6472 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 32 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.0356 - took 0.02 seconds
Cbc0012I Integer solution of -26.03565 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 53 rows 32 columns, reduced to 24 rows 17 columns
Cbc0031I 18 added rows had average density of 18.166667
Cbc0013I At root node, 18 cuts changed objective from -69.655241 to -46.697489 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2559 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 827 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.03565, took 3564 iterations and 12 nodes (0.25 seconds)
Cbc0032I Strong branching done 166 times (2277 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-20) rows, 57 (-9) columns and 549 (-174) elements
Clp1000I sum of infeasibilities 9.6494e-10 - average 2.01029e-11, 9 fixed columns
Coin0506I Presolve 40 (-8) rows, 48 (-9) columns and 388 (-161) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.0406135 - largest nonzero change 2.7289436e-05 ( 0.0018908272%) - largest zero change 2.2439648e-05
Clp0000I Optimal - objective value 87.416971
Clp0000I Optimal - objective value 87.416971
Coin0511I After Postsolve, objective 87.416971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.416971
Clp0000I Optimal - objective value 87.416971
Clp0000I Optimal - objective value 87.416971
Coin0511I After Postsolve, objective 87.416971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.41697072 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 57 columns (57 integer (57 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.719%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 3.42615
Cbc0038I Pass   1: suminf.    1.43374 (14) obj. -51.1681 iterations 11
Cbc0038I Pass   2: suminf.    1.43374 (14) obj. -51.1681 iterations 1
Cbc0038I Solution found of 14.1503
Cbc0038I Rounding solution of -6.58221 is better than previous of 14.1503

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -6.58221 to -12.1273 (0.02 seconds)
Cbc0038I Round again with cutoff of -17.8816
Cbc0038I Pass   3: suminf.    1.43374 (14) obj. -51.1681 iterations 0
Cbc0038I Pass   4: suminf.    1.43374 (14) obj. -51.1681 iterations 1
Cbc0038I Pass   5: suminf.    0.36787 (4) obj. -17.8816 iterations 11
Cbc0038I Pass   6: suminf.    0.22005 (2) obj. -22.2371 iterations 5
Cbc0038I Pass   7: suminf.    0.46211 (2) obj. -17.8816 iterations 3
Cbc0038I Pass   8: suminf.    1.83728 (9) obj. -17.8816 iterations 16
Cbc0038I Pass   9: suminf.    1.50435 (7) obj. -17.8816 iterations 5
Cbc0038I Pass  10: suminf.    0.91605 (3) obj. -17.8816 iterations 7
Cbc0038I Pass  11: suminf.    0.89846 (3) obj. -18.1911 iterations 2
Cbc0038I Pass  12: suminf.    1.65904 (6) obj. -17.8816 iterations 13
Cbc0038I Pass  13: suminf.    1.47666 (6) obj. -17.8816 iterations 3
Cbc0038I Pass  14: suminf.    0.98180 (5) obj. -17.8816 iterations 5
Cbc0038I Pass  15: suminf.    0.98180 (5) obj. -17.8816 iterations 2
Cbc0038I Pass  16: suminf.    1.22878 (5) obj. -17.8816 iterations 5
Cbc0038I Pass  17: suminf.    0.64969 (4) obj. -17.8816 iterations 2
Cbc0038I Pass  18: suminf.    0.64969 (4) obj. -17.8816 iterations 0
Cbc0038I Pass  19: suminf.    1.22785 (4) obj. -17.8816 iterations 6
Cbc0038I Pass  20: suminf.    1.22785 (4) obj. -17.8816 iterations 0
Cbc0038I Pass  21: suminf.    1.19505 (4) obj. -17.8816 iterations 4
Cbc0038I Pass  22: suminf.    0.78478 (3) obj. -17.8816 iterations 2
Cbc0038I Pass  23: suminf.    0.76062 (3) obj. -18.4614 iterations 2
Cbc0038I Pass  24: suminf.    1.22785 (4) obj. -17.8816 iterations 6
Cbc0038I Pass  25: suminf.    1.22785 (4) obj. -17.8816 iterations 1
Cbc0038I Pass  26: suminf.    1.19505 (4) obj. -17.8816 iterations 3
Cbc0038I Pass  27: suminf.    0.78478 (3) obj. -17.8816 iterations 1
Cbc0038I Pass  28: suminf.    0.76062 (3) obj. -18.4614 iterations 1
Cbc0038I Pass  29: suminf.    1.22785 (4) obj. -17.8816 iterations 5
Cbc0038I Pass  30: suminf.    1.22785 (4) obj. -17.8816 iterations 1
Cbc0038I Pass  31: suminf.    1.19505 (4) obj. -17.8816 iterations 3
Cbc0038I Pass  32: suminf.    0.78478 (3) obj. -17.8816 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -12.1273 to -16.3879 (0.03 seconds)
Cbc0038I Round again with cutoff of -28.2393
Cbc0038I Pass  32: suminf.    1.43374 (14) obj. -51.1681 iterations 0
Cbc0038I Pass  33: suminf.    1.43374 (14) obj. -51.1681 iterations 1
Cbc0038I Pass  34: suminf.    0.66898 (4) obj. -28.2393 iterations 11
Cbc0038I Pass  35: suminf.    0.46111 (5) obj. -33.2588 iterations 2
Cbc0038I Pass  36: suminf.    0.77594 (7) obj. -28.2393 iterations 10
Cbc0038I Pass  37: suminf.    0.77594 (7) obj. -28.2393 iterations 0
Cbc0038I Pass  38: suminf.    0.56886 (6) obj. -28.2393 iterations 14
Cbc0038I Pass  39: suminf.    0.56296 (3) obj. -28.2393 iterations 3
Cbc0038I Pass  40: suminf.    0.82056 (3) obj. -28.2393 iterations 2
Cbc0038I Pass  41: suminf.    0.82056 (3) obj. -28.2393 iterations 0
Cbc0038I Pass  42: suminf.    0.56248 (4) obj. -28.2393 iterations 3
Cbc0038I Pass  43: suminf.    1.47143 (8) obj. -28.2393 iterations 11
Cbc0038I Pass  44: suminf.    1.19339 (8) obj. -28.2393 iterations 8
Cbc0038I Pass  45: suminf.    1.35174 (5) obj. -28.2393 iterations 5
Cbc0038I Pass  46: suminf.    1.35174 (5) obj. -28.2393 iterations 2
Cbc0038I Pass  47: suminf.    1.26841 (5) obj. -28.2393 iterations 5
Cbc0038I Pass  48: suminf.    1.26841 (5) obj. -28.2393 iterations 2
Cbc0038I Pass  49: suminf.    1.35174 (5) obj. -28.2393 iterations 3
Cbc0038I Pass  50: suminf.    2.69675 (10) obj. -28.2393 iterations 20
Cbc0038I Pass  51: suminf.    2.26101 (11) obj. -28.2393 iterations 5
Cbc0038I Pass  52: suminf.    1.71564 (6) obj. -28.2393 iterations 13
Cbc0038I Pass  53: suminf.    1.71564 (6) obj. -28.2393 iterations 1
Cbc0038I Pass  54: suminf.    1.76685 (6) obj. -28.2393 iterations 3
Cbc0038I Pass  55: suminf.    1.76685 (6) obj. -28.2393 iterations 1
Cbc0038I Pass  56: suminf.    1.71564 (6) obj. -28.2393 iterations 4
Cbc0038I Pass  57: suminf.    1.63487 (7) obj. -28.2393 iterations 10
Cbc0038I Pass  58: suminf.    1.39679 (6) obj. -28.2393 iterations 4
Cbc0038I Pass  59: suminf.    1.27905 (5) obj. -28.2393 iterations 6
Cbc0038I Pass  60: suminf.    1.27905 (5) obj. -28.2393 iterations 1
Cbc0038I Pass  61: suminf.    1.44572 (5) obj. -28.2393 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 24 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -16.3879 to -24.3737 (0.05 seconds)
Cbc0038I Round again with cutoff of -40.6685
Cbc0038I Pass  61: suminf.    1.43374 (14) obj. -51.1681 iterations 0
Cbc0038I Pass  62: suminf.    1.43374 (14) obj. -51.1681 iterations 1
Cbc0038I Pass  63: suminf.    1.00106 (7) obj. -40.6685 iterations 17
Cbc0038I Pass  64: suminf.    0.99264 (6) obj. -41.3767 iterations 1
Cbc0038I Pass  65: suminf.    0.95249 (7) obj. -40.6685 iterations 12
Cbc0038I Pass  66: suminf.    0.69993 (5) obj. -40.6685 iterations 5
Cbc0038I Pass  67: suminf.    1.30085 (6) obj. -40.6685 iterations 4
Cbc0038I Pass  68: suminf.    1.30085 (6) obj. -40.6685 iterations 1
Cbc0038I Pass  69: suminf.    1.62254 (6) obj. -40.6685 iterations 2
Cbc0038I Pass  70: suminf.    1.62254 (6) obj. -40.6685 iterations 1
Cbc0038I Pass  71: suminf.    1.30085 (6) obj. -40.6685 iterations 3
Cbc0038I Pass  72: suminf.    2.25633 (11) obj. -40.6685 iterations 9
Cbc0038I Pass  73: suminf.    2.25633 (11) obj. -40.6685 iterations 4
Cbc0038I Pass  74: suminf.    1.30085 (6) obj. -40.6685 iterations 8
Cbc0038I Pass  75: suminf.    1.30085 (6) obj. -40.6685 iterations 1
Cbc0038I Pass  76: suminf.    1.62254 (6) obj. -40.6685 iterations 2
Cbc0038I Pass  77: suminf.    1.62254 (6) obj. -40.6685 iterations 1
Cbc0038I Pass  78: suminf.    1.30085 (6) obj. -40.6685 iterations 3
Cbc0038I Pass  79: suminf.    1.51893 (10) obj. -40.6685 iterations 11
Cbc0038I Pass  80: suminf.    1.51893 (10) obj. -40.6685 iterations 0
Cbc0038I Pass  81: suminf.    1.46402 (6) obj. -40.6685 iterations 9
Cbc0038I Pass  82: suminf.    1.45375 (6) obj. -40.7301 iterations 2
Cbc0038I Pass  83: suminf.    1.46402 (6) obj. -40.6685 iterations 3
Cbc0038I Pass  84: suminf.    2.30078 (9) obj. -40.6685 iterations 12
Cbc0038I Pass  85: suminf.    1.74790 (8) obj. -40.6685 iterations 4
Cbc0038I Pass  86: suminf.    2.11491 (7) obj. -40.6685 iterations 7
Cbc0038I Pass  87: suminf.    2.11491 (7) obj. -40.6685 iterations 0
Cbc0038I Pass  88: suminf.    2.05523 (7) obj. -40.6685 iterations 4
Cbc0038I Pass  89: suminf.    1.71229 (7) obj. -40.6685 iterations 1
Cbc0038I Pass  90: suminf.    2.11491 (7) obj. -40.6685 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.3737 - took 0.05 seconds
Cbc0012I Integer solution of -24.37372 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 48 rows 57 columns, reduced to 17 rows 22 columns
Cbc0031I 29 added rows had average density of 9.5517241
Cbc0013I At root node, 29 cuts changed objective from -69.669996 to -27.782692 in 41 passes
Cbc0014I Cut generator 0 (Probing) - 1140 row cuts average 6.3 elements, 9 column cuts (9 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 256 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 158 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.299 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.37372 best solution, best possible -27.782692 (0.71 seconds)
Cbc0012I Integer solution of -24.9537 found by rounding after 605 iterations and 1 nodes (0.72 seconds)
Cbc0004I Integer solution of -25.19953 found after 884 iterations and 5 nodes (0.76 seconds)
Cbc0012I Integer solution of -26.03565 found by rounding after 945 iterations and 7 nodes (0.76 seconds)
Cbc0001I Search completed - best objective -26.03565, took 999 iterations and 8 nodes (0.77 seconds)
Cbc0032I Strong branching done 132 times (1429 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.77

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-16) rows, 32 (-3) columns and 162 (-33) elements
Clp1000I sum of infeasibilities 1.46946e-06 - average 2.77256e-08, 4 fixed columns
Coin0506I Presolve 45 (-8) rows, 28 (-4) columns and 139 (-23) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 3.5550291 - largest nonzero change 0 ( 0%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 69.655241
Clp0000I Optimal - objective value 69.655241
Coin0511I After Postsolve, objective 69.655241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.655241
Clp0000I Optimal - objective value 69.655241
Clp0000I Optimal - objective value 69.655241
Coin0511I After Postsolve, objective 69.655241, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.65524105 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 32 columns (31 integer (31 of which binary)) and 165 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.740%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.25259
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.1995 iterations 15
Cbc0038I Solution found of -25.1995
Cbc0038I Relaxing continuous gives -25.1995
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 32 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29.6452
Cbc0038I Pass   2: suminf.    0.13135 (1) obj. -29.6452 iterations 1
Cbc0038I Pass   3: suminf.    0.36789 (2) obj. -29.6452 iterations 3
Cbc0038I Pass   4: suminf.    0.42247 (2) obj. -29.6452 iterations 5
Cbc0038I Pass   5: suminf.    0.42247 (2) obj. -29.6452 iterations 0
Cbc0038I Pass   6: suminf.    0.41194 (1) obj. -29.6452 iterations 3
Cbc0038I Pass   7: suminf.    0.24711 (1) obj. -29.6452 iterations 2
Cbc0038I Pass   8: suminf.    1.46391 (4) obj. -29.6452 iterations 10
Cbc0038I Pass   9: suminf.    0.85734 (3) obj. -29.6452 iterations 1
Cbc0038I Pass  10: suminf.    1.20321 (4) obj. -29.6452 iterations 8
Cbc0038I Pass  11: suminf.    1.06164 (3) obj. -29.6452 iterations 3
Cbc0038I Pass  12: suminf.    0.71176 (2) obj. -29.6452 iterations 1
Cbc0038I Pass  13: suminf.    1.05022 (4) obj. -29.6452 iterations 4
Cbc0038I Pass  14: suminf.    0.99544 (3) obj. -29.6452 iterations 3
Cbc0038I Pass  15: suminf.    0.62544 (2) obj. -29.6452 iterations 1
Cbc0038I Pass  16: suminf.    0.28098 (2) obj. -29.6452 iterations 4
Cbc0038I Pass  17: suminf.    0.42247 (2) obj. -29.6452 iterations 4
Cbc0038I Pass  18: suminf.    0.42247 (2) obj. -29.6452 iterations 0
Cbc0038I Pass  19: suminf.    0.41194 (1) obj. -29.6452 iterations 2
Cbc0038I Pass  20: suminf.    0.24711 (1) obj. -29.6452 iterations 2
Cbc0038I Pass  21: suminf.    0.25545 (2) obj. -29.6452 iterations 4
Cbc0038I Pass  22: suminf.    0.25545 (2) obj. -29.6452 iterations 1
Cbc0038I Pass  23: suminf.    1.09208 (5) obj. -29.6452 iterations 7
Cbc0038I Pass  24: suminf.    0.77495 (3) obj. -29.6452 iterations 4
Cbc0038I Pass  25: suminf.    0.78393 (3) obj. -29.6452 iterations 8
Cbc0038I Pass  26: suminf.    0.28544 (2) obj. -29.6452 iterations 3
Cbc0038I Pass  27: suminf.    0.30861 (2) obj. -29.6452 iterations 4
Cbc0038I Pass  28: suminf.    0.30861 (2) obj. -29.6452 iterations 0
Cbc0038I Pass  29: suminf.    0.56780 (2) obj. -29.6452 iterations 2
Cbc0038I Pass  30: suminf.    0.18604 (1) obj. -29.6452 iterations 2
Cbc0038I Pass  31: suminf.    0.79545 (4) obj. -29.6452 iterations 3
Cbc0038I Rounding solution of -26.0356 is better than previous of -25.1995

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 32 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -37.6472
Cbc0038I Pass  31: suminf.    0.41572 (2) obj. -37.6472 iterations 1
Cbc0038I Pass  32: suminf.    0.79941 (3) obj. -37.6472 iterations 4
Cbc0038I Pass  33: suminf.    0.79941 (3) obj. -37.6472 iterations 0
Cbc0038I Pass  34: suminf.    0.55882 (2) obj. -37.6472 iterations 2
Cbc0038I Pass  35: suminf.    0.53834 (2) obj. -37.6472 iterations 3
Cbc0038I Pass  36: suminf.    0.67110 (2) obj. -37.6472 iterations 3
Cbc0038I Pass  37: suminf.    1.53448 (5) obj. -37.6472 iterations 9
Cbc0038I Pass  38: suminf.    1.06932 (4) obj. -37.6472 iterations 5
Cbc0038I Pass  39: suminf.    1.02237 (4) obj. -37.6472 iterations 9
Cbc0038I Pass  40: suminf.    1.58837 (7) obj. -37.6472 iterations 11
Cbc0038I Pass  41: suminf.    1.47815 (7) obj. -37.6472 iterations 4
Cbc0038I Pass  42: suminf.    0.67871 (4) obj. -37.6472 iterations 8
Cbc0038I Pass  43: suminf.    0.67871 (4) obj. -37.6472 iterations 0
Cbc0038I Pass  44: suminf.    1.00731 (4) obj. -37.6472 iterations 4
Cbc0038I Pass  45: suminf.    0.86302 (3) obj. -37.6472 iterations 3
Cbc0038I Pass  46: suminf.    1.08488 (4) obj. -37.6472 iterations 3
Cbc0038I Pass  47: suminf.    0.67871 (4) obj. -37.6472 iterations 1
Cbc0038I Pass  48: suminf.    0.67871 (4) obj. -37.6472 iterations 0
Cbc0038I Pass  49: suminf.    1.00731 (4) obj. -37.6472 iterations 4
Cbc0038I Pass  50: suminf.    0.86302 (3) obj. -37.6472 iterations 3
Cbc0038I Pass  51: suminf.    1.08488 (4) obj. -37.6472 iterations 3
Cbc0038I Pass  52: suminf.    0.67871 (4) obj. -37.6472 iterations 1
Cbc0038I Pass  53: suminf.    0.67871 (4) obj. -37.6472 iterations 0
Cbc0038I Pass  54: suminf.    1.00731 (4) obj. -37.6472 iterations 4
Cbc0038I Pass  55: suminf.    0.86302 (3) obj. -37.6472 iterations 3
Cbc0038I Pass  56: suminf.    1.08488 (4) obj. -37.6472 iterations 3
Cbc0038I Pass  57: suminf.    0.67871 (4) obj. -37.6472 iterations 1
Cbc0038I Pass  58: suminf.    0.67871 (4) obj. -37.6472 iterations 0
Cbc0038I Pass  59: suminf.    1.00731 (4) obj. -37.6472 iterations 4
Cbc0038I Pass  60: suminf.    0.86302 (3) obj. -37.6472 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 32 columns, reduced to 25 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -26.0356 - took 0.02 seconds
Cbc0012I Integer solution of -26.03565 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 53 rows 32 columns, reduced to 24 rows 17 columns
Cbc0031I 18 added rows had average density of 18.166667
Cbc0013I At root node, 18 cuts changed objective from -69.655241 to -46.697489 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2559 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 827 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.03565, took 3564 iterations and 12 nodes (0.24 seconds)
Cbc0032I Strong branching done 166 times (2277 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-21) rows, 57 (-10) columns and 549 (-175) elements
Clp1000I sum of infeasibilities 9.6494e-10 - average 2.01029e-11, 9 fixed columns
Coin0506I Presolve 40 (-8) rows, 48 (-9) columns and 388 (-161) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 2.0406135 - largest nonzero change 2.7289436e-05 ( 0.0018908272%) - largest zero change 2.2439648e-05
Clp0000I Optimal - objective value 87.416971
Clp0000I Optimal - objective value 87.416971
Coin0511I After Postsolve, objective 87.416971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.416971
Clp0000I Optimal - objective value 87.416971
Clp0000I Optimal - objective value 87.416971
Coin0511I After Postsolve, objective 87.416971, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.41697072 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 57 columns (57 integer (57 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.719%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 3.42615
Cbc0038I Pass   1: suminf.    1.43374 (14) obj. -51.1681 iterations 11
Cbc0038I Pass   2: suminf.    1.43374 (14) obj. -51.1681 iterations 1
Cbc0038I Solution found of 14.1503
Cbc0038I Rounding solution of -6.58221 is better than previous of 14.1503

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -6.58221 to -12.1273 (0.02 seconds)
Cbc0038I Round again with cutoff of -17.8816
Cbc0038I Pass   3: suminf.    1.43374 (14) obj. -51.1681 iterations 0
Cbc0038I Pass   4: suminf.    1.43374 (14) obj. -51.1681 iterations 1
Cbc0038I Pass   5: suminf.    0.36787 (4) obj. -17.8816 iterations 11
Cbc0038I Pass   6: suminf.    0.22005 (2) obj. -22.2371 iterations 5
Cbc0038I Pass   7: suminf.    0.46211 (2) obj. -17.8816 iterations 3
Cbc0038I Pass   8: suminf.    1.83728 (9) obj. -17.8816 iterations 16
Cbc0038I Pass   9: suminf.    1.50435 (7) obj. -17.8816 iterations 5
Cbc0038I Pass  10: suminf.    0.91605 (3) obj. -17.8816 iterations 7
Cbc0038I Pass  11: suminf.    0.89846 (3) obj. -18.1911 iterations 2
Cbc0038I Pass  12: suminf.    1.65904 (6) obj. -17.8816 iterations 13
Cbc0038I Pass  13: suminf.    1.47666 (6) obj. -17.8816 iterations 3
Cbc0038I Pass  14: suminf.    0.98180 (5) obj. -17.8816 iterations 5
Cbc0038I Pass  15: suminf.    0.98180 (5) obj. -17.8816 iterations 2
Cbc0038I Pass  16: suminf.    1.22878 (5) obj. -17.8816 iterations 5
Cbc0038I Pass  17: suminf.    0.64969 (4) obj. -17.8816 iterations 2
Cbc0038I Pass  18: suminf.    0.64969 (4) obj. -17.8816 iterations 0
Cbc0038I Pass  19: suminf.    1.22785 (4) obj. -17.8816 iterations 6
Cbc0038I Pass  20: suminf.    1.22785 (4) obj. -17.8816 iterations 0
Cbc0038I Pass  21: suminf.    1.19505 (4) obj. -17.8816 iterations 4
Cbc0038I Pass  22: suminf.    0.78478 (3) obj. -17.8816 iterations 2
Cbc0038I Pass  23: suminf.    0.76062 (3) obj. -18.4614 iterations 2
Cbc0038I Pass  24: suminf.    1.22785 (4) obj. -17.8816 iterations 6
Cbc0038I Pass  25: suminf.    1.22785 (4) obj. -17.8816 iterations 1
Cbc0038I Pass  26: suminf.    1.19505 (4) obj. -17.8816 iterations 3
Cbc0038I Pass  27: suminf.    0.78478 (3) obj. -17.8816 iterations 1
Cbc0038I Pass  28: suminf.    0.76062 (3) obj. -18.4614 iterations 1
Cbc0038I Pass  29: suminf.    1.22785 (4) obj. -17.8816 iterations 5
Cbc0038I Pass  30: suminf.    1.22785 (4) obj. -17.8816 iterations 1
Cbc0038I Pass  31: suminf.    1.19505 (4) obj. -17.8816 iterations 3
Cbc0038I Pass  32: suminf.    0.78478 (3) obj. -17.8816 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -12.1273 to -16.3879 (0.03 seconds)
Cbc0038I Round again with cutoff of -28.2393
Cbc0038I Pass  32: suminf.    1.43374 (14) obj. -51.1681 iterations 0
Cbc0038I Pass  33: suminf.    1.43374 (14) obj. -51.1681 iterations 1
Cbc0038I Pass  34: suminf.    0.66898 (4) obj. -28.2393 iterations 11
Cbc0038I Pass  35: suminf.    0.46111 (5) obj. -33.2588 iterations 2
Cbc0038I Pass  36: suminf.    0.77594 (7) obj. -28.2393 iterations 10
Cbc0038I Pass  37: suminf.    0.77594 (7) obj. -28.2393 iterations 0
Cbc0038I Pass  38: suminf.    0.56886 (6) obj. -28.2393 iterations 14
Cbc0038I Pass  39: suminf.    0.56296 (3) obj. -28.2393 iterations 3
Cbc0038I Pass  40: suminf.    0.82056 (3) obj. -28.2393 iterations 2
Cbc0038I Pass  41: suminf.    0.82056 (3) obj. -28.2393 iterations 0
Cbc0038I Pass  42: suminf.    0.56248 (4) obj. -28.2393 iterations 3
Cbc0038I Pass  43: suminf.    1.47143 (8) obj. -28.2393 iterations 11
Cbc0038I Pass  44: suminf.    1.19339 (8) obj. -28.2393 iterations 8
Cbc0038I Pass  45: suminf.    1.35174 (5) obj. -28.2393 iterations 5
Cbc0038I Pass  46: suminf.    1.35174 (5) obj. -28.2393 iterations 2
Cbc0038I Pass  47: suminf.    1.26841 (5) obj. -28.2393 iterations 5
Cbc0038I Pass  48: suminf.    1.26841 (5) obj. -28.2393 iterations 2
Cbc0038I Pass  49: suminf.    1.35174 (5) obj. -28.2393 iterations 3
Cbc0038I Pass  50: suminf.    2.69675 (10) obj. -28.2393 iterations 20
Cbc0038I Pass  51: suminf.    2.26101 (11) obj. -28.2393 iterations 5
Cbc0038I Pass  52: suminf.    1.71564 (6) obj. -28.2393 iterations 13
Cbc0038I Pass  53: suminf.    1.71564 (6) obj. -28.2393 iterations 1
Cbc0038I Pass  54: suminf.    1.76685 (6) obj. -28.2393 iterations 3
Cbc0038I Pass  55: suminf.    1.76685 (6) obj. -28.2393 iterations 1
Cbc0038I Pass  56: suminf.    1.71564 (6) obj. -28.2393 iterations 4
Cbc0038I Pass  57: suminf.    1.63487 (7) obj. -28.2393 iterations 10
Cbc0038I Pass  58: suminf.    1.39679 (6) obj. -28.2393 iterations 4
Cbc0038I Pass  59: suminf.    1.27905 (5) obj. -28.2393 iterations 6
Cbc0038I Pass  60: suminf.    1.27905 (5) obj. -28.2393 iterations 1
Cbc0038I Pass  61: suminf.    1.44572 (5) obj. -28.2393 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 57 columns, reduced to 24 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -16.3879 to -24.3737 (0.05 seconds)
Cbc0038I Round again with cutoff of -40.6685
Cbc0038I Pass  61: suminf.    1.43374 (14) obj. -51.1681 iterations 0
Cbc0038I Pass  62: suminf.    1.43374 (14) obj. -51.1681 iterations 1
Cbc0038I Pass  63: suminf.    1.00106 (7) obj. -40.6685 iterations 17
Cbc0038I Pass  64: suminf.    0.99264 (6) obj. -41.3767 iterations 1
Cbc0038I Pass  65: suminf.    0.95249 (7) obj. -40.6685 iterations 12
Cbc0038I Pass  66: suminf.    0.69993 (5) obj. -40.6685 iterations 5
Cbc0038I Pass  67: suminf.    1.30085 (6) obj. -40.6685 iterations 4
Cbc0038I Pass  68: suminf.    1.30085 (6) obj. -40.6685 iterations 1
Cbc0038I Pass  69: suminf.    1.62254 (6) obj. -40.6685 iterations 2
Cbc0038I Pass  70: suminf.    1.62254 (6) obj. -40.6685 iterations 1
Cbc0038I Pass  71: suminf.    1.30085 (6) obj. -40.6685 iterations 3
Cbc0038I Pass  72: suminf.    2.25633 (11) obj. -40.6685 iterations 9
Cbc0038I Pass  73: suminf.    2.25633 (11) obj. -40.6685 iterations 4
Cbc0038I Pass  74: suminf.    1.30085 (6) obj. -40.6685 iterations 8
Cbc0038I Pass  75: suminf.    1.30085 (6) obj. -40.6685 iterations 1
Cbc0038I Pass  76: suminf.    1.62254 (6) obj. -40.6685 iterations 2
Cbc0038I Pass  77: suminf.    1.62254 (6) obj. -40.6685 iterations 1
Cbc0038I Pass  78: suminf.    1.30085 (6) obj. -40.6685 iterations 3
Cbc0038I Pass  79: suminf.    1.51893 (10) obj. -40.6685 iterations 11
Cbc0038I Pass  80: suminf.    1.51893 (10) obj. -40.6685 iterations 0
Cbc0038I Pass  81: suminf.    1.46402 (6) obj. -40.6685 iterations 9
Cbc0038I Pass  82: suminf.    1.45375 (6) obj. -40.7301 iterations 2
Cbc0038I Pass  83: suminf.    1.46402 (6) obj. -40.6685 iterations 3
Cbc0038I Pass  84: suminf.    2.30078 (9) obj. -40.6685 iterations 12
Cbc0038I Pass  85: suminf.    1.74790 (8) obj. -40.6685 iterations 4
Cbc0038I Pass  86: suminf.    2.11491 (7) obj. -40.6685 iterations 7
Cbc0038I Pass  87: suminf.    2.11491 (7) obj. -40.6685 iterations 0
Cbc0038I Pass  88: suminf.    2.05523 (7) obj. -40.6685 iterations 4
Cbc0038I Pass  89: suminf.    1.71229 (7) obj. -40.6685 iterations 1
Cbc0038I Pass  90: suminf.    2.11491 (7) obj. -40.6685 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.3737 - took 0.05 seconds
Cbc0012I Integer solution of -24.37372 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 48 rows 57 columns, reduced to 17 rows 22 columns
Cbc0031I 29 added rows had average density of 9.5517241
Cbc0013I At root node, 29 cuts changed objective from -69.669996 to -27.782692 in 41 passes
Cbc0014I Cut generator 0 (Probing) - 1140 row cuts average 6.3 elements, 9 column cuts (9 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 256 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 158 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.273 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.37372 best solution, best possible -27.782692 (0.64 seconds)
Cbc0012I Integer solution of -24.9537 found by rounding after 605 iterations and 1 nodes (0.64 seconds)
Cbc0004I Integer solution of -25.19953 found after 884 iterations and 5 nodes (0.68 seconds)
Cbc0012I Integer solution of -26.03565 found by rounding after 945 iterations and 7 nodes (0.69 seconds)
Cbc0001I Search completed - best objective -26.03565, took 999 iterations and 8 nodes (0.69 seconds)
Cbc0032I Strong branching done 132 times (1429 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.69

