Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-32) rows, 36 (-14) columns and 198 (-87) elements
Clp1000I sum of infeasibilities 9.46508e-07 - average 1.4127e-08, 11 fixed columns
Coin0506I Presolve 41 (-26) rows, 25 (-11) columns and 124 (-74) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 2391.4066
Clp0000I Optimal - objective value 2391.4066
Coin0511I After Postsolve, objective 2391.4066, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2391.4066
Clp0000I Optimal - objective value 2391.4066
Clp0000I Optimal - objective value 2391.4066
Coin0511I After Postsolve, objective 2391.4066, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2391.406649 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 67 rows, 36 columns (35 integer (35 of which binary)) and 198 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.473%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.84266
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 210.121 iterations 27
Cbc0038I Solution found of 210.121
Cbc0038I Relaxing continuous gives 210.121
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 36 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 210.121 to -560.429 (0.02 seconds)
Cbc0038I Round again with cutoff of -743.527
Cbc0038I Pass   2: suminf.    1.00000 (5) obj. -743.527 iterations 9
Cbc0038I Pass   3: suminf.    1.00000 (5) obj. -743.527 iterations 0
Cbc0038I Pass   4: suminf.    0.87960 (4) obj. -743.527 iterations 10
Cbc0038I Pass   5: suminf.    0.87960 (4) obj. -743.527 iterations 0
Cbc0038I Pass   6: suminf.    0.88928 (3) obj. -743.527 iterations 3
Cbc0038I Pass   7: suminf.    0.67469 (2) obj. -743.527 iterations 1
Cbc0038I Pass   8: suminf.    0.73617 (4) obj. -743.527 iterations 4
Cbc0038I Pass   9: suminf.    1.04381 (3) obj. -743.527 iterations 3
Cbc0038I Pass  10: suminf.    0.83563 (3) obj. -743.527 iterations 1
Cbc0038I Pass  11: suminf.    0.70608 (3) obj. -743.527 iterations 4
Cbc0038I Pass  12: suminf.    0.68846 (4) obj. -743.527 iterations 1
Cbc0038I Pass  13: suminf.    0.65824 (2) obj. -743.527 iterations 3
Cbc0038I Pass  14: suminf.    0.63531 (2) obj. -743.527 iterations 1
Cbc0038I Pass  15: suminf.    0.87606 (3) obj. -743.527 iterations 2
Cbc0038I Pass  16: suminf.    1.31311 (4) obj. -743.527 iterations 10
Cbc0038I Pass  17: suminf.    1.06661 (4) obj. -743.527 iterations 2
Cbc0038I Pass  18: suminf.    1.02989 (4) obj. -743.527 iterations 1
Cbc0038I Pass  19: suminf.    0.49502 (3) obj. -743.527 iterations 3
Cbc0038I Pass  20: suminf.    0.49502 (3) obj. -743.527 iterations 0
Cbc0038I Pass  21: suminf.    1.08185 (4) obj. -743.527 iterations 4
Cbc0038I Pass  22: suminf.    0.60941 (2) obj. -743.527 iterations 3
Cbc0038I Pass  23: suminf.    0.60187 (2) obj. -743.527 iterations 1
Cbc0038I Pass  24: suminf.    0.92856 (3) obj. -743.527 iterations 2
Cbc0038I Pass  25: suminf.    0.92014 (4) obj. -743.527 iterations 1
Cbc0038I Pass  26: suminf.    1.04092 (3) obj. -743.527 iterations 3
Cbc0038I Pass  27: suminf.    1.01821 (3) obj. -743.527 iterations 1
Cbc0038I Pass  28: suminf.    0.87606 (3) obj. -743.527 iterations 2
Cbc0038I Pass  29: suminf.    0.63531 (2) obj. -743.527 iterations 2
Cbc0038I Pass  30: suminf.    1.25766 (6) obj. -743.527 iterations 10
Cbc0038I Pass  31: suminf.    0.42865 (3) obj. -743.527 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 36 columns, reduced to 39 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -560.429 - took 0.02 seconds
Cbc0012I Integer solution of -560.4291 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 67 rows 36 columns, reduced to 32 rows 20 columns
Cbc0031I 17 added rows had average density of 23
Cbc0013I At root node, 17 cuts changed objective from -2391.4066 to -931.98273 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1740 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 877 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 165 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -560.4290999999994, took 2915 iterations and 6 nodes (0.26 seconds)
Cbc0032I Strong branching done 142 times (2018 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 79 (-19) rows, 82 (-14) columns and 915 (-498) elements
Clp1000I sum of infeasibilities 1.08663e-08 - average 1.37548e-10, 74 fixed columns
Coin0506I Presolve 5 (-74) rows, 8 (-74) columns and 16 (-899) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 462.5391
Clp0000I Optimal - objective value 462.5391
Coin0511I After Postsolve, objective 462.5391, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9025014 - largest nonzero change 2.5858564e-05 ( 0.0023530591%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 3525.4517
Clp0000I Optimal - objective value 3525.4517
Clp0000I Optimal - objective value 3525.4517
Coin0511I After Postsolve, objective 3525.4517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3525.451729 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 82 columns (82 integer (82 of which binary)) and 917 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.297%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 16.4372
Cbc0038I Pass   1: suminf.    2.87040 (16) obj. -1633.25 iterations 27
Cbc0038I Pass   2: suminf.    2.87040 (16) obj. -1633.25 iterations 8
Cbc0038I Solution found of -16.902
Cbc0038I Rounding solution of -107.495 is better than previous of -16.902

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -107.495 to -535.895 (0.03 seconds)
Cbc0038I Round again with cutoff of -770.392
Cbc0038I Pass   3: suminf.    2.87040 (16) obj. -1633.25 iterations 0
Cbc0038I Pass   4: suminf.    2.87040 (16) obj. -1633.25 iterations 2
Cbc0038I Pass   5: suminf.    0.74092 (14) obj. -770.392 iterations 20
Cbc0038I Pass   6: suminf.    0.74092 (14) obj. -770.392 iterations 0
Cbc0038I Pass   7: suminf.    0.64161 (4) obj. -770.392 iterations 11
Cbc0038I Pass   8: suminf.    0.50654 (4) obj. -839.551 iterations 1
Cbc0038I Pass   9: suminf.    0.46788 (2) obj. -770.392 iterations 4
Cbc0038I Pass  10: suminf.    0.46788 (2) obj. -770.392 iterations 0
Cbc0038I Pass  11: suminf.    0.49008 (2) obj. -770.392 iterations 1
Cbc0038I Pass  12: suminf.    1.79296 (10) obj. -770.392 iterations 21
Cbc0038I Pass  13: suminf.    1.79296 (10) obj. -770.392 iterations 2
Cbc0038I Pass  14: suminf.    1.18508 (4) obj. -770.392 iterations 14
Cbc0038I Pass  15: suminf.    0.68627 (2) obj. -838.994 iterations 3
Cbc0038I Pass  16: suminf.    0.81596 (2) obj. -770.392 iterations 1
Cbc0038I Pass  17: suminf.    1.73651 (12) obj. -770.392 iterations 29
Cbc0038I Pass  18: suminf.    1.45645 (8) obj. -872.709 iterations 4
Cbc0038I Pass  19: suminf.    1.22210 (3) obj. -770.392 iterations 18
Cbc0038I Pass  20: suminf.    1.22210 (3) obj. -770.392 iterations 0
Cbc0038I Pass  21: suminf.    1.10380 (3) obj. -770.392 iterations 3
Cbc0038I Pass  22: suminf.    1.01522 (3) obj. -817.249 iterations 1
Cbc0038I Pass  23: suminf.    3.29360 (14) obj. -770.392 iterations 35
Cbc0038I Pass  24: suminf.    2.71027 (12) obj. -1134.29 iterations 5
Cbc0038I Pass  25: suminf.    1.71568 (13) obj. -770.392 iterations 14
Cbc0038I Pass  26: suminf.    1.71568 (13) obj. -770.392 iterations 0
Cbc0038I Pass  27: suminf.    1.62358 (7) obj. -770.392 iterations 10
Cbc0038I Pass  28: suminf.    1.62358 (7) obj. -770.392 iterations 0
Cbc0038I Pass  29: suminf.    0.50294 (2) obj. -770.392 iterations 10
Cbc0038I Pass  30: suminf.    0.50294 (2) obj. -770.392 iterations 3
Cbc0038I Pass  31: suminf.    0.52268 (2) obj. -770.392 iterations 1
Cbc0038I Pass  32: suminf.    2.69147 (9) obj. -770.392 iterations 16
Cbc0038I Rounding solution of -560.429 is better than previous of -535.895

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 45 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -1192.49
Cbc0038I Pass  32: suminf.    2.87040 (16) obj. -1633.25 iterations 0
Cbc0038I Pass  33: suminf.    2.87040 (16) obj. -1633.25 iterations 2
Cbc0038I Pass  34: suminf.    1.46885 (14) obj. -1192.49 iterations 20
Cbc0038I Pass  35: suminf.    1.41858 (13) obj. -1339.41 iterations 1
Cbc0038I Pass  36: suminf.    1.05908 (4) obj. -1192.49 iterations 27
Cbc0038I Pass  37: suminf.    0.94710 (4) obj. -1192.49 iterations 2
Cbc0038I Pass  38: suminf.    1.05908 (4) obj. -1192.49 iterations 2
Cbc0038I Pass  39: suminf.    4.40961 (22) obj. -1192.49 iterations 17
Cbc0038I Pass  40: suminf.    2.05335 (9) obj. -1192.49 iterations 7
Cbc0038I Pass  41: suminf.    2.05335 (9) obj. -1192.49 iterations 0
Cbc0038I Pass  42: suminf.    1.68864 (19) obj. -1192.49 iterations 4
Cbc0038I Pass  43: suminf.    1.68864 (19) obj. -1192.49 iterations 0
Cbc0038I Pass  44: suminf.    1.91587 (7) obj. -1192.49 iterations 14
Cbc0038I Pass  45: suminf.    1.91587 (7) obj. -1192.49 iterations 1
Cbc0038I Pass  46: suminf.    1.62528 (5) obj. -1192.49 iterations 5
Cbc0038I Pass  47: suminf.    1.60506 (5) obj. -1196.21 iterations 3
Cbc0038I Pass  48: suminf.    1.62817 (5) obj. -1192.49 iterations 4
Cbc0038I Pass  49: suminf.    3.96701 (14) obj. -1192.49 iterations 16
Cbc0038I Pass  50: suminf.    2.27672 (11) obj. -1192.49 iterations 10
Cbc0038I Pass  51: suminf.    2.60799 (8) obj. -1192.49 iterations 12
Cbc0038I Pass  52: suminf.    2.39883 (10) obj. -1192.49 iterations 3
Cbc0038I Pass  53: suminf.    2.39883 (10) obj. -1192.49 iterations 0
Cbc0038I Pass  54: suminf.    1.27300 (4) obj. -1192.49 iterations 11
Cbc0038I Pass  55: suminf.    0.99599 (3) obj. -1213.85 iterations 6
Cbc0038I Pass  56: suminf.    1.27300 (4) obj. -1192.49 iterations 4
Cbc0038I Pass  57: suminf.    3.02802 (9) obj. -1192.49 iterations 13
Cbc0038I Pass  58: suminf.    3.02802 (9) obj. -1192.49 iterations 2
Cbc0038I Pass  59: suminf.    1.11122 (4) obj. -1192.49 iterations 10
Cbc0038I Pass  60: suminf.    1.11122 (4) obj. -1192.49 iterations 0
Cbc0038I Pass  61: suminf.    1.46281 (4) obj. -1192.49 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 37 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -560.429 - took 0.05 seconds
Cbc0012I Integer solution of -560.4291 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 79 rows 82 columns, reduced to 4 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 31 added rows had average density of 8.6774194
Cbc0013I At root node, 38 cuts changed objective from -2880.866 to -560.4291 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 474 row cuts average 3.1 elements, 41 column cuts (41 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -560.4290999999994, took 96 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 67 (-32) rows, 36 (-14) columns and 198 (-87) elements
Clp1000I sum of infeasibilities 9.46508e-07 - average 1.4127e-08, 11 fixed columns
Coin0506I Presolve 41 (-26) rows, 25 (-11) columns and 124 (-74) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 2391.4066
Clp0000I Optimal - objective value 2391.4066
Coin0511I After Postsolve, objective 2391.4066, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2391.4066
Clp0000I Optimal - objective value 2391.4066
Clp0000I Optimal - objective value 2391.4066
Coin0511I After Postsolve, objective 2391.4066, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2391.406649 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 67 rows, 36 columns (35 integer (35 of which binary)) and 198 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.473%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.84266
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 210.121 iterations 27
Cbc0038I Solution found of 210.121
Cbc0038I Relaxing continuous gives 210.121
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 36 columns, reduced to 32 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 210.121 to -560.429 (0.02 seconds)
Cbc0038I Round again with cutoff of -743.527
Cbc0038I Pass   2: suminf.    1.00000 (5) obj. -743.527 iterations 9
Cbc0038I Pass   3: suminf.    1.00000 (5) obj. -743.527 iterations 0
Cbc0038I Pass   4: suminf.    0.87960 (4) obj. -743.527 iterations 10
Cbc0038I Pass   5: suminf.    0.87960 (4) obj. -743.527 iterations 0
Cbc0038I Pass   6: suminf.    0.88928 (3) obj. -743.527 iterations 3
Cbc0038I Pass   7: suminf.    0.67469 (2) obj. -743.527 iterations 1
Cbc0038I Pass   8: suminf.    0.73617 (4) obj. -743.527 iterations 4
Cbc0038I Pass   9: suminf.    1.04381 (3) obj. -743.527 iterations 3
Cbc0038I Pass  10: suminf.    0.83563 (3) obj. -743.527 iterations 1
Cbc0038I Pass  11: suminf.    0.70608 (3) obj. -743.527 iterations 4
Cbc0038I Pass  12: suminf.    0.68846 (4) obj. -743.527 iterations 1
Cbc0038I Pass  13: suminf.    0.65824 (2) obj. -743.527 iterations 3
Cbc0038I Pass  14: suminf.    0.63531 (2) obj. -743.527 iterations 1
Cbc0038I Pass  15: suminf.    0.87606 (3) obj. -743.527 iterations 2
Cbc0038I Pass  16: suminf.    1.31311 (4) obj. -743.527 iterations 10
Cbc0038I Pass  17: suminf.    1.06661 (4) obj. -743.527 iterations 2
Cbc0038I Pass  18: suminf.    1.02989 (4) obj. -743.527 iterations 1
Cbc0038I Pass  19: suminf.    0.49502 (3) obj. -743.527 iterations 3
Cbc0038I Pass  20: suminf.    0.49502 (3) obj. -743.527 iterations 0
Cbc0038I Pass  21: suminf.    1.08185 (4) obj. -743.527 iterations 4
Cbc0038I Pass  22: suminf.    0.60941 (2) obj. -743.527 iterations 3
Cbc0038I Pass  23: suminf.    0.60187 (2) obj. -743.527 iterations 1
Cbc0038I Pass  24: suminf.    0.92856 (3) obj. -743.527 iterations 2
Cbc0038I Pass  25: suminf.    0.92014 (4) obj. -743.527 iterations 1
Cbc0038I Pass  26: suminf.    1.04092 (3) obj. -743.527 iterations 3
Cbc0038I Pass  27: suminf.    1.01821 (3) obj. -743.527 iterations 1
Cbc0038I Pass  28: suminf.    0.87606 (3) obj. -743.527 iterations 2
Cbc0038I Pass  29: suminf.    0.63531 (2) obj. -743.527 iterations 2
Cbc0038I Pass  30: suminf.    1.25766 (6) obj. -743.527 iterations 10
Cbc0038I Pass  31: suminf.    0.42865 (3) obj. -743.527 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 36 columns, reduced to 39 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -560.429 - took 0.02 seconds
Cbc0012I Integer solution of -560.4291 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 67 rows 36 columns, reduced to 32 rows 20 columns
Cbc0031I 17 added rows had average density of 23
Cbc0013I At root node, 17 cuts changed objective from -2391.4066 to -931.98273 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1740 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 877 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 165 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 94 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -560.4290999999994, took 2915 iterations and 6 nodes (0.28 seconds)
Cbc0032I Strong branching done 142 times (2018 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 79 (-20) rows, 82 (-15) columns and 915 (-499) elements
Clp1000I sum of infeasibilities 1.08663e-08 - average 1.37548e-10, 74 fixed columns
Coin0506I Presolve 5 (-74) rows, 8 (-74) columns and 16 (-899) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 462.5391
Clp0000I Optimal - objective value 462.5391
Coin0511I After Postsolve, objective 462.5391, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9025014 - largest nonzero change 2.5858564e-05 ( 0.0023530591%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 3525.4517
Clp0000I Optimal - objective value 3525.4517
Clp0000I Optimal - objective value 3525.4517
Coin0511I After Postsolve, objective 3525.4517, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3525.451729 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 82 columns (82 integer (82 of which binary)) and 917 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.297%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 16.4372
Cbc0038I Pass   1: suminf.    2.87040 (16) obj. -1633.25 iterations 27
Cbc0038I Pass   2: suminf.    2.87040 (16) obj. -1633.25 iterations 8
Cbc0038I Solution found of -16.902
Cbc0038I Rounding solution of -107.495 is better than previous of -16.902

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -107.495 to -535.895 (0.02 seconds)
Cbc0038I Round again with cutoff of -770.392
Cbc0038I Pass   3: suminf.    2.87040 (16) obj. -1633.25 iterations 0
Cbc0038I Pass   4: suminf.    2.87040 (16) obj. -1633.25 iterations 2
Cbc0038I Pass   5: suminf.    0.74092 (14) obj. -770.392 iterations 20
Cbc0038I Pass   6: suminf.    0.74092 (14) obj. -770.392 iterations 0
Cbc0038I Pass   7: suminf.    0.64161 (4) obj. -770.392 iterations 11
Cbc0038I Pass   8: suminf.    0.50654 (4) obj. -839.551 iterations 1
Cbc0038I Pass   9: suminf.    0.46788 (2) obj. -770.392 iterations 4
Cbc0038I Pass  10: suminf.    0.46788 (2) obj. -770.392 iterations 0
Cbc0038I Pass  11: suminf.    0.49008 (2) obj. -770.392 iterations 1
Cbc0038I Pass  12: suminf.    1.79296 (10) obj. -770.392 iterations 21
Cbc0038I Pass  13: suminf.    1.79296 (10) obj. -770.392 iterations 2
Cbc0038I Pass  14: suminf.    1.18508 (4) obj. -770.392 iterations 14
Cbc0038I Pass  15: suminf.    0.68627 (2) obj. -838.994 iterations 3
Cbc0038I Pass  16: suminf.    0.81596 (2) obj. -770.392 iterations 1
Cbc0038I Pass  17: suminf.    1.73651 (12) obj. -770.392 iterations 29
Cbc0038I Pass  18: suminf.    1.45645 (8) obj. -872.709 iterations 4
Cbc0038I Pass  19: suminf.    1.22210 (3) obj. -770.392 iterations 18
Cbc0038I Pass  20: suminf.    1.22210 (3) obj. -770.392 iterations 0
Cbc0038I Pass  21: suminf.    1.10380 (3) obj. -770.392 iterations 3
Cbc0038I Pass  22: suminf.    1.01522 (3) obj. -817.249 iterations 1
Cbc0038I Pass  23: suminf.    3.29360 (14) obj. -770.392 iterations 35
Cbc0038I Pass  24: suminf.    2.71027 (12) obj. -1134.29 iterations 5
Cbc0038I Pass  25: suminf.    1.71568 (13) obj. -770.392 iterations 14
Cbc0038I Pass  26: suminf.    1.71568 (13) obj. -770.392 iterations 0
Cbc0038I Pass  27: suminf.    1.62358 (7) obj. -770.392 iterations 10
Cbc0038I Pass  28: suminf.    1.62358 (7) obj. -770.392 iterations 0
Cbc0038I Pass  29: suminf.    0.50294 (2) obj. -770.392 iterations 10
Cbc0038I Pass  30: suminf.    0.50294 (2) obj. -770.392 iterations 3
Cbc0038I Pass  31: suminf.    0.52268 (2) obj. -770.392 iterations 1
Cbc0038I Pass  32: suminf.    2.69147 (9) obj. -770.392 iterations 16
Cbc0038I Rounding solution of -560.429 is better than previous of -535.895

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 45 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -1192.49
Cbc0038I Pass  32: suminf.    2.87040 (16) obj. -1633.25 iterations 0
Cbc0038I Pass  33: suminf.    2.87040 (16) obj. -1633.25 iterations 2
Cbc0038I Pass  34: suminf.    1.46885 (14) obj. -1192.49 iterations 20
Cbc0038I Pass  35: suminf.    1.41858 (13) obj. -1339.41 iterations 1
Cbc0038I Pass  36: suminf.    1.05908 (4) obj. -1192.49 iterations 27
Cbc0038I Pass  37: suminf.    0.94710 (4) obj. -1192.49 iterations 2
Cbc0038I Pass  38: suminf.    1.05908 (4) obj. -1192.49 iterations 2
Cbc0038I Pass  39: suminf.    4.40961 (22) obj. -1192.49 iterations 17
Cbc0038I Pass  40: suminf.    2.05335 (9) obj. -1192.49 iterations 7
Cbc0038I Pass  41: suminf.    2.05335 (9) obj. -1192.49 iterations 0
Cbc0038I Pass  42: suminf.    1.68864 (19) obj. -1192.49 iterations 4
Cbc0038I Pass  43: suminf.    1.68864 (19) obj. -1192.49 iterations 0
Cbc0038I Pass  44: suminf.    1.91587 (7) obj. -1192.49 iterations 14
Cbc0038I Pass  45: suminf.    1.91587 (7) obj. -1192.49 iterations 1
Cbc0038I Pass  46: suminf.    1.62528 (5) obj. -1192.49 iterations 5
Cbc0038I Pass  47: suminf.    1.60506 (5) obj. -1196.21 iterations 3
Cbc0038I Pass  48: suminf.    1.62817 (5) obj. -1192.49 iterations 4
Cbc0038I Pass  49: suminf.    3.96701 (14) obj. -1192.49 iterations 16
Cbc0038I Pass  50: suminf.    2.27672 (11) obj. -1192.49 iterations 10
Cbc0038I Pass  51: suminf.    2.60799 (8) obj. -1192.49 iterations 12
Cbc0038I Pass  52: suminf.    2.39883 (10) obj. -1192.49 iterations 3
Cbc0038I Pass  53: suminf.    2.39883 (10) obj. -1192.49 iterations 0
Cbc0038I Pass  54: suminf.    1.27300 (4) obj. -1192.49 iterations 11
Cbc0038I Pass  55: suminf.    0.99599 (3) obj. -1213.85 iterations 6
Cbc0038I Pass  56: suminf.    1.27300 (4) obj. -1192.49 iterations 4
Cbc0038I Pass  57: suminf.    3.02802 (9) obj. -1192.49 iterations 13
Cbc0038I Pass  58: suminf.    3.02802 (9) obj. -1192.49 iterations 2
Cbc0038I Pass  59: suminf.    1.11122 (4) obj. -1192.49 iterations 10
Cbc0038I Pass  60: suminf.    1.11122 (4) obj. -1192.49 iterations 0
Cbc0038I Pass  61: suminf.    1.46281 (4) obj. -1192.49 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 82 columns, reduced to 37 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -560.429 - took 0.05 seconds
Cbc0012I Integer solution of -560.4291 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 79 rows 82 columns, reduced to 4 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 31 added rows had average density of 8.6774194
Cbc0013I At root node, 38 cuts changed objective from -2880.866 to -560.4291 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 474 row cuts average 3.1 elements, 41 column cuts (41 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 61 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -560.4290999999994, took 96 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.14

