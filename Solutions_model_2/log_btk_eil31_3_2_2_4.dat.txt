Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 25 (-8) columns and 131 (-52) elements
Clp1000I sum of infeasibilities 4.24418e-06 - average 9.64586e-08, 18 fixed columns
Coin0506I Presolve 7 (-37) rows, 5 (-20) columns and 17 (-114) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 3054.752
Clp0000I Optimal - objective value 3054.752
Coin0511I After Postsolve, objective 3054.752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3054.752
Clp0000I Optimal - objective value 3054.752
Clp0000I Optimal - objective value 3054.752
Coin0511I After Postsolve, objective 3054.752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3054.752034 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.600299
Cbc0038I Pass   1: suminf.    0.28013 (2) obj. -3036.7 iterations 4
Cbc0038I Solution found of -533.693
Cbc0038I Relaxing continuous gives -545.673
Cbc0038I Rounding solution of -951.067 is better than previous of -545.673

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -951.067 to -1760.44 (0.00 seconds)
Cbc0038I Round again with cutoff of -1889.87
Cbc0038I Pass   2: suminf.    0.28013 (2) obj. -3036.7 iterations 0
Cbc0038I Pass   3: suminf.    0.24759 (2) obj. -1889.87 iterations 3
Cbc0038I Pass   4: suminf.    0.24759 (2) obj. -1889.87 iterations 0
Cbc0038I Pass   5: suminf.    0.07439 (1) obj. -1889.87 iterations 4
Cbc0038I Pass   6: suminf.    1.11205 (3) obj. -1889.87 iterations 6
Cbc0038I Pass   7: suminf.    0.45071 (2) obj. -1889.87 iterations 4
Cbc0038I Pass   8: suminf.    0.57340 (2) obj. -1889.87 iterations 1
Cbc0038I Pass   9: suminf.    1.10808 (3) obj. -1889.87 iterations 7
Cbc0038I Pass  10: suminf.    0.84410 (2) obj. -1889.87 iterations 3
Cbc0038I Pass  11: suminf.    0.47154 (1) obj. -2660.23 iterations 1
Cbc0038I Pass  12: suminf.    0.02879 (1) obj. -1889.87 iterations 1
Cbc0038I Pass  13: suminf.    0.02879 (1) obj. -1889.87 iterations 0
Cbc0038I Pass  14: suminf.    1.18037 (5) obj. -1889.87 iterations 8
Cbc0038I Pass  15: suminf.    1.01986 (3) obj. -1889.87 iterations 6
Cbc0038I Pass  16: suminf.    0.32361 (2) obj. -1889.87 iterations 3
Cbc0038I Pass  17: suminf.    0.77957 (2) obj. -1889.87 iterations 1
Cbc0038I Pass  18: suminf.    0.77957 (2) obj. -1889.87 iterations 0
Cbc0038I Pass  19: suminf.    0.72873 (2) obj. -2403.73 iterations 1
Cbc0038I Pass  20: suminf.    0.94011 (2) obj. -1987.69 iterations 2
Cbc0038I Pass  21: suminf.    0.86044 (2) obj. -1889.87 iterations 1
Cbc0038I Pass  22: suminf.    0.94011 (2) obj. -1987.69 iterations 1
Cbc0038I Pass  23: suminf.    0.82041 (5) obj. -1889.87 iterations 4
Cbc0038I Pass  24: suminf.    0.52967 (2) obj. -1889.87 iterations 4
Cbc0038I Pass  25: suminf.    0.20357 (2) obj. -1889.87 iterations 4
Cbc0038I Pass  26: suminf.    0.20357 (2) obj. -1889.87 iterations 0
Cbc0038I Pass  27: suminf.    0.18050 (2) obj. -1889.87 iterations 7
Cbc0038I Pass  28: suminf.    0.18050 (2) obj. -1889.87 iterations 1
Cbc0038I Pass  29: suminf.    0.42276 (1) obj. -1956.82 iterations 4
Cbc0038I Pass  30: suminf.    0.38429 (1) obj. -1889.87 iterations 1
Cbc0038I Pass  31: suminf.    0.90286 (3) obj. -1889.87 iterations 11
Cbc0038I Rounding solution of -2013.38 is better than previous of -1760.44

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2013.38 to -2283.03 (0.01 seconds)
Cbc0038I Round again with cutoff of -2437.37
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.28013 (2) obj. -3036.7 iterations 0
Cbc0038I Pass  32: suminf.    0.69395 (2) obj. -2437.37 iterations 4
Cbc0038I Pass  33: suminf.    0.69395 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  34: suminf.    0.38906 (1) obj. -2437.37 iterations 3
Cbc0038I Pass  35: suminf.    1.62798 (4) obj. -2437.37 iterations 10
Cbc0038I Pass  36: suminf.    0.40283 (3) obj. -2437.37 iterations 7
Cbc0038I Pass  37: suminf.    0.40283 (3) obj. -2437.37 iterations 0
Cbc0038I Pass  38: suminf.    0.89191 (2) obj. -2437.37 iterations 3
Cbc0038I Pass  39: suminf.    0.64706 (2) obj. -2737.98 iterations 1
Cbc0038I Pass  40: suminf.    0.89191 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  41: suminf.    1.74610 (5) obj. -2437.37 iterations 8
Cbc0038I Pass  42: suminf.    0.79623 (2) obj. -2437.37 iterations 6
Cbc0038I Pass  43: suminf.    0.79623 (2) obj. -2437.37 iterations 0
Cbc0038I Pass  44: suminf.    0.79476 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  45: suminf.    2.15034 (8) obj. -2437.37 iterations 10
Cbc0038I Pass  46: suminf.    1.23473 (4) obj. -2437.37 iterations 8
Cbc0038I Pass  47: suminf.    0.91039 (2) obj. -2437.37 iterations 2
Cbc0038I Pass  48: suminf.    0.93017 (2) obj. -2523.33 iterations 1
Cbc0038I Pass  49: suminf.    0.86241 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  50: suminf.    0.91039 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  51: suminf.    1.20385 (3) obj. -2437.37 iterations 7
Cbc0038I Pass  52: suminf.    0.88053 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  53: suminf.    0.88053 (2) obj. -2437.37 iterations 0
Cbc0038I Pass  54: suminf.    0.97823 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  55: suminf.    1.09528 (3) obj. -2437.37 iterations 2
Cbc0038I Pass  56: suminf.    1.00933 (3) obj. -2437.37 iterations 6
Cbc0038I Pass  57: suminf.    0.84640 (2) obj. -2437.37 iterations 2
Cbc0038I Pass  58: suminf.    0.97321 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  59: suminf.    1.38899 (3) obj. -2437.37 iterations 4
Cbc0038I Pass  60: suminf.    0.63008 (2) obj. -2522.63 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -2283.03 - took 0.02 seconds
Cbc0012I Integer solution of -2283.025 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 4 rows 6 columns
Cbc0031I 7 added rows had average density of 8.1428571
Cbc0013I At root node, 7 cuts changed objective from -3054.752 to -2359.3056 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2283.025, took 105 iterations and 2 nodes (0.03 seconds)
Cbc0032I Strong branching done 16 times (86 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-17) rows, 51 (-11) columns and 435 (-213) elements
Clp1000I sum of infeasibilities 6.34788e-09 - average 1.35061e-10, 49 fixed columns
Coin0506I Presolve 2 (-45) rows, 2 (-49) columns and 4 (-431) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 3029.752
Clp0000I Optimal - objective value 3029.752
Coin0511I After Postsolve, objective 3029.752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1809243 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 3075.6623
Clp0000I Optimal - objective value 3075.6623
Clp0000I Optimal - objective value 3075.6623
Coin0511I After Postsolve, objective 3075.6623, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3075.662258 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 6 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.79567
Cbc0038I Pass   1: suminf.    0.32143 (1) obj. -1724.33 iterations 15
Cbc0038I Pass   2: suminf.    0.32143 (1) obj. -1724.33 iterations 1
Cbc0038I Solution found of -543.673
Cbc0038I Rounding solution of -545.673 is better than previous of -543.673

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -545.673 to -2148.94 (0.01 seconds)
Cbc0038I Round again with cutoff of -2238.01
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.09005 (12) obj. -2238.01 iterations 5
Cbc0038I Pass   4: suminf.    1.88901 (11) obj. -2238.01 iterations 3
Cbc0038I Pass   5: suminf.    0.42928 (2) obj. -2238.01 iterations 10
Cbc0038I Pass   6: suminf.    0.54538 (2) obj. -2238.01 iterations 1
Cbc0038I Pass   7: suminf.    0.78490 (5) obj. -2238.01 iterations 8
Cbc0038I Pass   8: suminf.    0.78490 (5) obj. -2238.01 iterations 1
Cbc0038I Pass   9: suminf.    0.66805 (3) obj. -2238.01 iterations 5
Cbc0038I Pass  10: suminf.    0.66693 (2) obj. -2238.01 iterations 1
Cbc0038I Pass  11: suminf.    0.70958 (2) obj. -2290.37 iterations 2
Cbc0038I Pass  12: suminf.    1.52003 (9) obj. -2238.01 iterations 11
Cbc0038I Pass  13: suminf.    0.98745 (5) obj. -2238.01 iterations 4
Cbc0038I Pass  14: suminf.    0.98745 (5) obj. -2238.01 iterations 0
Cbc0038I Pass  15: suminf.    0.53862 (2) obj. -2238.01 iterations 4
Cbc0038I Pass  16: suminf.    0.52295 (2) obj. -2238.01 iterations 1
Cbc0038I Pass  17: suminf.    0.52295 (2) obj. -2238.01 iterations 0
Cbc0038I Pass  18: suminf.    0.95490 (6) obj. -2238.01 iterations 6
Cbc0038I Pass  19: suminf.    0.85531 (4) obj. -2238.01 iterations 3
Cbc0038I Pass  20: suminf.    0.85531 (4) obj. -2238.01 iterations 0
Cbc0038I Pass  21: suminf.    0.53701 (2) obj. -2238.01 iterations 3
Cbc0038I Pass  22: suminf.    0.52050 (2) obj. -2238.01 iterations 1
Cbc0038I Pass  23: suminf.    0.52050 (2) obj. -2238.01 iterations 0
Cbc0038I Pass  24: suminf.    0.99613 (3) obj. -2238.01 iterations 14
Cbc0038I Pass  25: suminf.    0.99613 (3) obj. -2238.01 iterations 0
Cbc0038I Pass  26: suminf.    0.42989 (2) obj. -2238.01 iterations 3
Cbc0038I Pass  27: suminf.    0.92702 (3) obj. -2238.01 iterations 2
Cbc0038I Pass  28: suminf.    1.01910 (3) obj. -2238.01 iterations 1
Cbc0038I Pass  29: suminf.    0.92702 (3) obj. -2238.01 iterations 1
Cbc0038I Pass  30: suminf.    2.15526 (9) obj. -2238.01 iterations 16
Cbc0038I Pass  31: suminf.    1.68644 (8) obj. -2238.01 iterations 3
Cbc0038I Pass  32: suminf.    0.83810 (2) obj. -2238.01 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 25 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -2148.94 to -2174.59 (0.03 seconds)
Cbc0038I Round again with cutoff of -2398.33
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.42250 (12) obj. -2398.33 iterations 0
Cbc0038I Pass  33: suminf.    2.24154 (11) obj. -2398.33 iterations 3
Cbc0038I Pass  34: suminf.    0.55568 (2) obj. -2398.33 iterations 10
Cbc0038I Pass  35: suminf.    0.67596 (2) obj. -2398.33 iterations 1
Cbc0038I Pass  36: suminf.    2.12866 (10) obj. -2398.33 iterations 13
Cbc0038I Pass  37: suminf.    2.00484 (9) obj. -2626.28 iterations 2
Cbc0038I Pass  38: suminf.    1.81343 (8) obj. -2398.33 iterations 2
Cbc0038I Pass  39: suminf.    0.43089 (1) obj. -2617.03 iterations 8
Cbc0038I Pass  40: suminf.    0.30520 (1) obj. -2398.33 iterations 1
Cbc0038I Pass  41: suminf.    1.22480 (5) obj. -2398.33 iterations 6
Cbc0038I Pass  42: suminf.    1.05688 (4) obj. -2398.33 iterations 2
Cbc0038I Pass  43: suminf.    0.50000 (1) obj. -2675.44 iterations 4
Cbc0038I Pass  44: suminf.    0.34074 (1) obj. -2398.33 iterations 1
Cbc0038I Pass  45: suminf.    1.50919 (6) obj. -2398.33 iterations 6
Cbc0038I Pass  46: suminf.    1.06286 (4) obj. -2398.33 iterations 2
Cbc0038I Pass  47: suminf.    0.95527 (2) obj. -2398.33 iterations 3
Cbc0038I Pass  48: suminf.    0.61593 (2) obj. -2398.33 iterations 1
Cbc0038I Pass  49: suminf.    2.16556 (9) obj. -2398.33 iterations 11
Cbc0038I Pass  50: suminf.    2.16556 (9) obj. -2398.33 iterations 1
Cbc0038I Pass  51: suminf.    0.58724 (2) obj. -2398.33 iterations 12
Cbc0038I Pass  52: suminf.    0.44000 (1) obj. -2553.63 iterations 2
Cbc0038I Pass  53: suminf.    0.47074 (1) obj. -2398.33 iterations 1
Cbc0038I Pass  54: suminf.    1.73869 (8) obj. -2398.33 iterations 8
Cbc0038I Pass  55: suminf.    0.96580 (3) obj. -2398.33 iterations 3
Cbc0038I Pass  56: suminf.    0.47967 (1) obj. -2549.95 iterations 3
Cbc0038I Pass  57: suminf.    0.39253 (1) obj. -2398.33 iterations 1
Cbc0038I Pass  58: suminf.    1.13297 (4) obj. -2398.33 iterations 7
Cbc0038I Pass  59: suminf.    1.08905 (4) obj. -2398.33 iterations 3
Cbc0038I Pass  60: suminf.    0.75754 (2) obj. -2482.56 iterations 4
Cbc0038I Pass  61: suminf.    0.68894 (2) obj. -2398.33 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 32 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2174.59 - took 0.02 seconds
Cbc0012I Integer solution of -2174.593 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 12 rows 14 columns
Cbc0031I 18 added rows had average density of 14.055556
Cbc0013I At root node, 18 cuts changed objective from -3039.6049 to -2459.7658 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 755 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 471 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 93 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 83 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 238 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 280 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 45 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.702 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2174.593 best solution, best possible -2459.7658 (1.42 seconds)
Cbc0004I Integer solution of -2283.025 found after 1671 iterations and 3 nodes (1.75 seconds)
Cbc0001I Search completed - best objective -2283.025, took 1806 iterations and 6 nodes (1.82 seconds)
Cbc0032I Strong branching done 98 times (970 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.82

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 25 (-8) columns and 131 (-52) elements
Clp1000I sum of infeasibilities 4.24418e-06 - average 9.64586e-08, 18 fixed columns
Coin0506I Presolve 7 (-37) rows, 5 (-20) columns and 17 (-114) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 3054.752
Clp0000I Optimal - objective value 3054.752
Coin0511I After Postsolve, objective 3054.752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3054.752
Clp0000I Optimal - objective value 3054.752
Clp0000I Optimal - objective value 3054.752
Coin0511I After Postsolve, objective 3054.752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3054.752034 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.600299
Cbc0038I Pass   1: suminf.    0.28013 (2) obj. -3036.7 iterations 4
Cbc0038I Solution found of -533.693
Cbc0038I Relaxing continuous gives -545.673
Cbc0038I Rounding solution of -951.067 is better than previous of -545.673

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -951.067 to -1760.44 (0.01 seconds)
Cbc0038I Round again with cutoff of -1889.87
Cbc0038I Pass   2: suminf.    0.28013 (2) obj. -3036.7 iterations 0
Cbc0038I Pass   3: suminf.    0.24759 (2) obj. -1889.87 iterations 3
Cbc0038I Pass   4: suminf.    0.24759 (2) obj. -1889.87 iterations 0
Cbc0038I Pass   5: suminf.    0.07439 (1) obj. -1889.87 iterations 4
Cbc0038I Pass   6: suminf.    1.11205 (3) obj. -1889.87 iterations 6
Cbc0038I Pass   7: suminf.    0.45071 (2) obj. -1889.87 iterations 4
Cbc0038I Pass   8: suminf.    0.57340 (2) obj. -1889.87 iterations 1
Cbc0038I Pass   9: suminf.    1.10808 (3) obj. -1889.87 iterations 7
Cbc0038I Pass  10: suminf.    0.84410 (2) obj. -1889.87 iterations 3
Cbc0038I Pass  11: suminf.    0.47154 (1) obj. -2660.23 iterations 1
Cbc0038I Pass  12: suminf.    0.02879 (1) obj. -1889.87 iterations 1
Cbc0038I Pass  13: suminf.    0.02879 (1) obj. -1889.87 iterations 0
Cbc0038I Pass  14: suminf.    1.18037 (5) obj. -1889.87 iterations 8
Cbc0038I Pass  15: suminf.    1.01986 (3) obj. -1889.87 iterations 6
Cbc0038I Pass  16: suminf.    0.32361 (2) obj. -1889.87 iterations 3
Cbc0038I Pass  17: suminf.    0.77957 (2) obj. -1889.87 iterations 1
Cbc0038I Pass  18: suminf.    0.77957 (2) obj. -1889.87 iterations 0
Cbc0038I Pass  19: suminf.    0.72873 (2) obj. -2403.73 iterations 1
Cbc0038I Pass  20: suminf.    0.94011 (2) obj. -1987.69 iterations 2
Cbc0038I Pass  21: suminf.    0.86044 (2) obj. -1889.87 iterations 1
Cbc0038I Pass  22: suminf.    0.94011 (2) obj. -1987.69 iterations 1
Cbc0038I Pass  23: suminf.    0.82041 (5) obj. -1889.87 iterations 4
Cbc0038I Pass  24: suminf.    0.52967 (2) obj. -1889.87 iterations 4
Cbc0038I Pass  25: suminf.    0.20357 (2) obj. -1889.87 iterations 4
Cbc0038I Pass  26: suminf.    0.20357 (2) obj. -1889.87 iterations 0
Cbc0038I Pass  27: suminf.    0.18050 (2) obj. -1889.87 iterations 7
Cbc0038I Pass  28: suminf.    0.18050 (2) obj. -1889.87 iterations 1
Cbc0038I Pass  29: suminf.    0.42276 (1) obj. -1956.82 iterations 4
Cbc0038I Pass  30: suminf.    0.38429 (1) obj. -1889.87 iterations 1
Cbc0038I Pass  31: suminf.    0.90286 (3) obj. -1889.87 iterations 11
Cbc0038I Rounding solution of -2013.38 is better than previous of -1760.44

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -2013.38 to -2283.03 (0.01 seconds)
Cbc0038I Round again with cutoff of -2437.37
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.28013 (2) obj. -3036.7 iterations 0
Cbc0038I Pass  32: suminf.    0.69395 (2) obj. -2437.37 iterations 4
Cbc0038I Pass  33: suminf.    0.69395 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  34: suminf.    0.38906 (1) obj. -2437.37 iterations 3
Cbc0038I Pass  35: suminf.    1.62798 (4) obj. -2437.37 iterations 10
Cbc0038I Pass  36: suminf.    0.40283 (3) obj. -2437.37 iterations 7
Cbc0038I Pass  37: suminf.    0.40283 (3) obj. -2437.37 iterations 0
Cbc0038I Pass  38: suminf.    0.89191 (2) obj. -2437.37 iterations 3
Cbc0038I Pass  39: suminf.    0.64706 (2) obj. -2737.98 iterations 1
Cbc0038I Pass  40: suminf.    0.89191 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  41: suminf.    1.74610 (5) obj. -2437.37 iterations 8
Cbc0038I Pass  42: suminf.    0.79623 (2) obj. -2437.37 iterations 6
Cbc0038I Pass  43: suminf.    0.79623 (2) obj. -2437.37 iterations 0
Cbc0038I Pass  44: suminf.    0.79476 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  45: suminf.    2.15034 (8) obj. -2437.37 iterations 10
Cbc0038I Pass  46: suminf.    1.23473 (4) obj. -2437.37 iterations 8
Cbc0038I Pass  47: suminf.    0.91039 (2) obj. -2437.37 iterations 2
Cbc0038I Pass  48: suminf.    0.93017 (2) obj. -2523.33 iterations 1
Cbc0038I Pass  49: suminf.    0.86241 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  50: suminf.    0.91039 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  51: suminf.    1.20385 (3) obj. -2437.37 iterations 7
Cbc0038I Pass  52: suminf.    0.88053 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  53: suminf.    0.88053 (2) obj. -2437.37 iterations 0
Cbc0038I Pass  54: suminf.    0.97823 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  55: suminf.    1.09528 (3) obj. -2437.37 iterations 2
Cbc0038I Pass  56: suminf.    1.00933 (3) obj. -2437.37 iterations 6
Cbc0038I Pass  57: suminf.    0.84640 (2) obj. -2437.37 iterations 2
Cbc0038I Pass  58: suminf.    0.97321 (2) obj. -2437.37 iterations 1
Cbc0038I Pass  59: suminf.    1.38899 (3) obj. -2437.37 iterations 4
Cbc0038I Pass  60: suminf.    0.63008 (2) obj. -2522.63 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -2283.03 - took 0.01 seconds
Cbc0012I Integer solution of -2283.025 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 4 rows 6 columns
Cbc0031I 7 added rows had average density of 8.1428571
Cbc0013I At root node, 7 cuts changed objective from -3054.752 to -2359.3056 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 55 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2283.025, took 105 iterations and 2 nodes (0.03 seconds)
Cbc0032I Strong branching done 16 times (86 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 45 (-18) columns and 354 (-295) elements
Clp1000I sum of infeasibilities 2.29996e-08 - average 5.60967e-10, 43 fixed columns
Coin0506I Presolve 2 (-39) rows, 2 (-43) columns and 4 (-350) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 3029.752
Clp0000I Optimal - objective value 3029.752
Coin0511I After Postsolve, objective 3029.752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2377272 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 3075.6623
Clp0000I Optimal - objective value 3075.6623
Clp0000I Optimal - objective value 3075.6623
Coin0511I After Postsolve, objective 3075.6623, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3075.662258 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.35256
Cbc0038I Pass   1: suminf.    0.23577 (1) obj. -1873.37 iterations 10
Cbc0038I Pass   2: suminf.    0.23577 (1) obj. -1873.37 iterations 1
Cbc0038I Solution found of -543.673
Cbc0038I Rounding solution of -545.673 is better than previous of -543.673

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -545.673 to -1760.44 (0.01 seconds)
Cbc0038I Round again with cutoff of -1890.67
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.27383 (8) obj. -1890.67 iterations 3
Cbc0038I Pass   4: suminf.    0.27383 (8) obj. -1890.67 iterations 0
Cbc0038I Pass   5: suminf.    0.07485 (1) obj. -1890.67 iterations 7
Cbc0038I Pass   6: suminf.    0.31504 (2) obj. -2970.77 iterations 2
Cbc0038I Pass   7: suminf.    0.25883 (2) obj. -1890.67 iterations 2
Cbc0038I Pass   8: suminf.    0.25883 (2) obj. -1890.67 iterations 0
Cbc0038I Pass   9: suminf.    0.24115 (2) obj. -2513.12 iterations 9
Cbc0038I Pass  10: suminf.    0.24115 (2) obj. -2513.12 iterations 2
Cbc0038I Pass  11: suminf.    0.15431 (1) obj. -1890.67 iterations 2
Cbc0038I Pass  12: suminf.    0.02439 (1) obj. -2116.73 iterations 1
Cbc0038I Pass  13: suminf.    0.23778 (3) obj. -2142.55 iterations 13
Cbc0038I Pass  14: suminf.    0.12580 (2) obj. -2142.44 iterations 4
Cbc0038I Pass  15: suminf.    0.21678 (1) obj. -1890.67 iterations 2
Cbc0038I Pass  16: suminf.    0.07317 (1) obj. -2140.54 iterations 1
Cbc0038I Pass  17: suminf.    0.02439 (1) obj. -2117.73 iterations 6
Cbc0038I Pass  18: suminf.    0.02439 (1) obj. -2117.73 iterations 2
Cbc0038I Pass  19: suminf.    0.15489 (1) obj. -1890.67 iterations 1
Cbc0038I Pass  20: suminf.    0.56867 (4) obj. -2180.61 iterations 9
Cbc0038I Pass  21: suminf.    0.56867 (4) obj. -2180.61 iterations 1
Cbc0038I Pass  22: suminf.    0.45394 (1) obj. -1890.67 iterations 4
Cbc0038I Pass  23: suminf.    0.38211 (1) obj. -2175.92 iterations 1
Cbc0038I Pass  24: suminf.    0.46668 (4) obj. -2036.25 iterations 14
Cbc0038I Pass  25: suminf.    0.32458 (3) obj. -2036.11 iterations 3
Cbc0038I Pass  26: suminf.    0.28522 (1) obj. -1890.67 iterations 3
Cbc0038I Pass  27: suminf.    0.20325 (1) obj. -2033.29 iterations 1
Cbc0038I Pass  28: suminf.    2.50711 (8) obj. -1890.67 iterations 17
Cbc0038I Pass  29: suminf.    0.54286 (3) obj. -1890.67 iterations 5
Cbc0038I Pass  30: suminf.    0.51830 (2) obj. -1890.67 iterations 2
Cbc0038I Pass  31: suminf.    0.45243 (3) obj. -2254.93 iterations 4
Cbc0038I Pass  32: suminf.    0.36735 (1) obj. -1890.67 iterations 5
Cbc0038I Rounding solution of -1896.52 is better than previous of -1760.44

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -1896.52 to -1961.06 (0.02 seconds)
Cbc0038I Round again with cutoff of -2181.4
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.91310 (8) obj. -2181.4 iterations 0
Cbc0038I Pass  33: suminf.    0.91310 (8) obj. -2181.4 iterations 0
Cbc0038I Pass  34: suminf.    0.24194 (1) obj. -2181.4 iterations 7
Cbc0038I Pass  35: suminf.    0.31504 (2) obj. -2970.77 iterations 2
Cbc0038I Pass  36: suminf.    0.49562 (2) obj. -2181.4 iterations 2
Cbc0038I Pass  37: suminf.    0.49562 (2) obj. -2181.4 iterations 0
Cbc0038I Pass  38: suminf.    0.83186 (3) obj. -2181.4 iterations 7
Cbc0038I Pass  39: suminf.    0.83186 (3) obj. -2181.4 iterations 2
Cbc0038I Pass  40: suminf.    0.72664 (2) obj. -2181.4 iterations 2
Cbc0038I Pass  41: suminf.    0.72475 (2) obj. -2181.4 iterations 1
Cbc0038I Pass  42: suminf.    0.90661 (3) obj. -2181.4 iterations 5
Cbc0038I Pass  43: suminf.    0.72801 (2) obj. -2181.4 iterations 1
Cbc0038I Pass  44: suminf.    0.72979 (2) obj. -2181.4 iterations 1
Cbc0038I Pass  45: suminf.    0.97946 (3) obj. -2181.4 iterations 16
Cbc0038I Pass  46: suminf.    0.78458 (2) obj. -2181.4 iterations 4
Cbc0038I Pass  47: suminf.    0.32520 (1) obj. -2538.47 iterations 2
Cbc0038I Pass  48: suminf.    0.46958 (1) obj. -2181.4 iterations 1
Cbc0038I Pass  49: suminf.    0.59615 (2) obj. -2181.4 iterations 5
Cbc0038I Pass  50: suminf.    0.79590 (2) obj. -2181.4 iterations 1
Cbc0038I Pass  51: suminf.    0.59615 (2) obj. -2181.4 iterations 1
Cbc0038I Pass  52: suminf.    1.86272 (10) obj. -2181.4 iterations 10
Cbc0038I Pass  53: suminf.    1.78425 (9) obj. -2181.4 iterations 3
Cbc0038I Pass  54: suminf.    0.39476 (2) obj. -2203.08 iterations 9
Cbc0038I Pass  55: suminf.    0.37710 (2) obj. -2181.4 iterations 1
Cbc0038I Pass  56: suminf.    1.34220 (4) obj. -2181.4 iterations 6
Cbc0038I Pass  57: suminf.    1.34220 (4) obj. -2181.4 iterations 1
Cbc0038I Pass  58: suminf.    0.79729 (2) obj. -2421.84 iterations 3
Cbc0038I Pass  59: suminf.    0.60773 (2) obj. -2181.4 iterations 1
Cbc0038I Pass  60: suminf.    0.78736 (2) obj. -2181.4 iterations 1
Cbc0038I Pass  61: suminf.    0.78736 (2) obj. -2181.4 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 20 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -1961.06 to -2150.29 (0.04 seconds)
Cbc0038I Round again with cutoff of -2445.8
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.49450 (8) obj. -2445.8 iterations 0
Cbc0038I Pass  62: suminf.    1.49450 (8) obj. -2445.8 iterations 0
Cbc0038I Pass  63: suminf.    0.39390 (1) obj. -2445.8 iterations 7
Cbc0038I Pass  64: suminf.    0.31504 (2) obj. -2970.77 iterations 2
Cbc0038I Pass  65: suminf.    0.71097 (2) obj. -2445.8 iterations 2
Cbc0038I Pass  66: suminf.    0.71097 (2) obj. -2445.8 iterations 0
Cbc0038I Pass  67: suminf.    0.72319 (2) obj. -2445.8 iterations 4
Cbc0038I Pass  68: suminf.    0.40252 (1) obj. -2445.8 iterations 1
Cbc0038I Pass  69: suminf.    0.31504 (2) obj. -2955.77 iterations 2
Cbc0038I Pass  70: suminf.    0.72319 (2) obj. -2445.8 iterations 2
Cbc0038I Pass  71: suminf.    0.72319 (2) obj. -2445.8 iterations 0
Cbc0038I Pass  72: suminf.    1.02700 (3) obj. -2445.8 iterations 4
Cbc0038I Pass  73: suminf.    0.72400 (2) obj. -2445.8 iterations 1
Cbc0038I Pass  74: suminf.    0.40310 (1) obj. -2445.8 iterations 1
Cbc0038I Pass  75: suminf.    0.31504 (2) obj. -2954.77 iterations 2
Cbc0038I Pass  76: suminf.    0.72400 (2) obj. -2445.8 iterations 2
Cbc0038I Pass  77: suminf.    0.93692 (3) obj. -2445.8 iterations 16
Cbc0038I Pass  78: suminf.    0.58333 (2) obj. -2617.81 iterations 7
Cbc0038I Pass  79: suminf.    0.34847 (1) obj. -2445.8 iterations 2
Cbc0038I Pass  80: suminf.    0.25000 (1) obj. -2617.14 iterations 1
Cbc0038I Pass  81: suminf.    1.60707 (8) obj. -2844.89 iterations 10
Cbc0038I Pass  82: suminf.    1.48878 (7) obj. -2844.66 iterations 2
Cbc0038I Pass  83: suminf.    0.61937 (2) obj. -2445.8 iterations 6
Cbc0038I Pass  84: suminf.    0.61937 (2) obj. -2445.8 iterations 0
Cbc0038I Pass  85: suminf.    0.75299 (2) obj. -2445.8 iterations 1
Cbc0038I Pass  86: suminf.    1.12561 (6) obj. -2445.8 iterations 8
Cbc0038I Pass  87: suminf.    1.12561 (6) obj. -2445.8 iterations 2
Cbc0038I Pass  88: suminf.    0.75141 (2) obj. -2445.8 iterations 6
Cbc0038I Pass  89: suminf.    0.61774 (2) obj. -2445.8 iterations 1
Cbc0038I Pass  90: suminf.    1.24055 (5) obj. -2445.8 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -2150.29 - took 0.03 seconds
Cbc0012I Integer solution of -2150.29 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 1 rows 2 columns
Cbc0031I 19 added rows had average density of 10.684211
Cbc0013I At root node, 19 cuts changed objective from -3062.7455 to -2427.7249 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 567 row cuts average 3.3 elements, 6 column cuts (6 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 548 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 115 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 51 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 111 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 242 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -2260.102 found by rounding after 1472 iterations and 2 nodes (0.20 seconds)
Cbc0012I Integer solution of -2283.025 found by rounding after 1570 iterations and 4 nodes (0.21 seconds)
Cbc0001I Search completed - best objective -2283.025, took 1690 iterations and 6 nodes (0.22 seconds)
Cbc0032I Strong branching done 94 times (703 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

