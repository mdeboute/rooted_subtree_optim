Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 9.29514e-07 - average 4.97066e-09, 18 fixed columns
Coin0506I Presolve 144 (-43) rows, 83 (-18) columns and 447 (-121) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 2.2734744 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Coin0511I After Postsolve, objective 35.154566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Coin0511I After Postsolve, objective 35.154566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.15456576 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 13.6601
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.62538 iterations 81
Cbc0038I Solution found of 8.62538
Cbc0038I Relaxing continuous gives 8.62538
Cbc0038I Rounding solution of 5.4436 is better than previous of 8.62538

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 5.4436 to -3.27315 (0.08 seconds)
Cbc0038I Round again with cutoff of -6.46138
Cbc0038I Pass   2: suminf.    2.37288 (14) obj. -6.46138 iterations 15
Cbc0038I Pass   3: suminf.    1.83949 (18) obj. -6.46138 iterations 9
Cbc0038I Pass   4: suminf.    2.51702 (10) obj. -6.46138 iterations 25
Cbc0038I Pass   5: suminf.    2.21909 (9) obj. -6.46138 iterations 2
Cbc0038I Pass   6: suminf.    2.36853 (7) obj. -6.46138 iterations 17
Cbc0038I Pass   7: suminf.    1.71901 (6) obj. -6.46138 iterations 1
Cbc0038I Pass   8: suminf.    1.11192 (5) obj. -6.46138 iterations 6
Cbc0038I Pass   9: suminf.    1.10031 (7) obj. -6.46138 iterations 3
Cbc0038I Pass  10: suminf.    1.85173 (6) obj. -6.46138 iterations 12
Cbc0038I Pass  11: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  12: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  13: suminf.    1.90394 (6) obj. -6.46138 iterations 9
Cbc0038I Pass  14: suminf.    1.69463 (8) obj. -6.46138 iterations 7
Cbc0038I Pass  15: suminf.    2.62330 (8) obj. -6.46138 iterations 12
Cbc0038I Pass  16: suminf.    2.62330 (8) obj. -6.46138 iterations 0
Cbc0038I Pass  17: suminf.    2.76737 (7) obj. -6.46138 iterations 10
Cbc0038I Pass  18: suminf.    1.76588 (6) obj. -6.46138 iterations 6
Cbc0038I Pass  19: suminf.    1.85173 (6) obj. -6.46138 iterations 11
Cbc0038I Pass  20: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  21: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  22: suminf.    1.90394 (6) obj. -6.46138 iterations 8
Cbc0038I Pass  23: suminf.    1.69463 (8) obj. -6.46138 iterations 6
Cbc0038I Pass  24: suminf.    2.62330 (8) obj. -6.46138 iterations 12
Cbc0038I Pass  25: suminf.    2.62330 (8) obj. -6.46138 iterations 0
Cbc0038I Pass  26: suminf.    2.76737 (7) obj. -6.46138 iterations 10
Cbc0038I Pass  27: suminf.    1.76588 (6) obj. -6.46138 iterations 6
Cbc0038I Pass  28: suminf.    1.85173 (6) obj. -6.46138 iterations 11
Cbc0038I Pass  29: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  30: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  31: suminf.    1.90394 (6) obj. -6.46138 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 104 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -3.27315 to -4.40497 (0.17 seconds)
Cbc0038I Round again with cutoff of -12.2
Cbc0038I Pass  31: suminf.    3.97564 (15) obj. -12.2 iterations 1
Cbc0038I Pass  32: suminf.    3.97564 (15) obj. -12.2 iterations 0
Cbc0038I Pass  33: suminf.    3.21792 (9) obj. -12.2 iterations 16
Cbc0038I Pass  34: suminf.    2.73720 (9) obj. -12.2 iterations 5
Cbc0038I Pass  35: suminf.    2.74390 (10) obj. -12.2 iterations 2
Cbc0038I Pass  36: suminf.    3.12527 (11) obj. -12.2 iterations 12
Cbc0038I Pass  37: suminf.    2.40966 (8) obj. -12.2 iterations 3
Cbc0038I Pass  38: suminf.    2.40966 (8) obj. -12.2 iterations 0
Cbc0038I Pass  39: suminf.    2.72897 (10) obj. -12.2 iterations 9
Cbc0038I Pass  40: suminf.    2.66241 (10) obj. -12.2 iterations 1
Cbc0038I Pass  41: suminf.    2.66241 (10) obj. -12.2 iterations 2
Cbc0038I Pass  42: suminf.    3.14072 (9) obj. -12.2 iterations 16
Cbc0038I Pass  43: suminf.    2.96237 (10) obj. -12.2 iterations 5
Cbc0038I Pass  44: suminf.    3.80208 (10) obj. -12.2 iterations 9
Cbc0038I Pass  45: suminf.    2.27322 (7) obj. -12.2 iterations 4
Cbc0038I Pass  46: suminf.    2.06393 (8) obj. -12.2 iterations 2
Cbc0038I Pass  47: suminf.    1.96764 (7) obj. -12.2 iterations 2
Cbc0038I Pass  48: suminf.    2.44798 (8) obj. -12.2 iterations 8
Cbc0038I Pass  49: suminf.    2.40966 (8) obj. -12.2 iterations 1
Cbc0038I Pass  50: suminf.    2.72897 (10) obj. -12.2 iterations 9
Cbc0038I Pass  51: suminf.    2.66241 (10) obj. -12.2 iterations 1
Cbc0038I Pass  52: suminf.    2.66241 (10) obj. -12.2 iterations 2
Cbc0038I Pass  53: suminf.    3.14072 (9) obj. -12.2 iterations 14
Cbc0038I Pass  54: suminf.    2.96237 (10) obj. -12.2 iterations 5
Cbc0038I Pass  55: suminf.    3.80208 (10) obj. -12.2 iterations 9
Cbc0038I Pass  56: suminf.    2.27322 (7) obj. -12.2 iterations 4
Cbc0038I Pass  57: suminf.    2.06393 (8) obj. -12.2 iterations 2
Cbc0038I Pass  58: suminf.    1.96764 (7) obj. -12.2 iterations 2
Cbc0038I Pass  59: suminf.    2.44798 (8) obj. -12.2 iterations 8
Cbc0038I Pass  60: suminf.    2.40966 (8) obj. -12.2 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 104 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -4.40497 - took 0.22 seconds
Cbc0012I Integer solution of -4.40497 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 62 columns
Cbc0012I Integer solution of -4.61368 found by RINS after 0 iterations and 0 nodes (0.33 seconds)
Cbc0031I 30 added rows had average density of 88.033333
Cbc0013I At root node, 30 cuts changed objective from -35.154566 to -26.663369 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18601 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.139 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2704 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.61368 best solution, best possible -26.663369 (1.87 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 57 columns
Cbc0012I Integer solution of -4.835008 found by RINS after 11495 iterations and 41 nodes (2.35 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 67 rows 41 columns
Cbc0010I After 109 nodes, 8 on tree, -4.835008 best solution, best possible -26.663369 (2.57 seconds)
Cbc0001I Search completed - best objective -4.835008000000009, took 14274 iterations and 122 nodes (2.61 seconds)
Cbc0032I Strong branching done 1356 times (27709 iterations), fathomed 14 nodes and fixed 68 variables
Cbc0035I Maximum depth 36, 383 variables fixed on reduced cost
Total time (CPU seconds):       2.50   (Wallclock seconds):       2.63

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-75) rows, 142 (-60) columns and 2473 (-3180) elements
Clp1000I sum of infeasibilities 1.06516e-07 - average 8.25708e-10, 22 fixed columns
Coin0506I Presolve 109 (-20) rows, 120 (-22) columns and 2000 (-473) elements
Clp0006I 0  Obj 32.200971 Dual inf 5.5714062 (120)
Clp0029I End of values pass after 120 iterations
Clp0014I Perturbing problem by 0.001% of 1.6522881 - largest nonzero change 1.9390612e-05 ( 0.0012247315%) - largest zero change 2.8491798e-05
Clp0000I Optimal - objective value 45.659207
Clp0000I Optimal - objective value 45.659207
Coin0511I After Postsolve, objective 45.659207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 45.659207
Clp0000I Optimal - objective value 45.659207
Clp0000I Optimal - objective value 45.659207
Clp0000I Optimal - objective value 45.659207
Coin0511I After Postsolve, objective 45.659207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.6592069 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 142 columns (142 integer (142 of which binary)) and 2477 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.659%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.6384
Cbc0038I Pass   1: suminf.    3.14633 (36) obj. -33.2243 iterations 14
Cbc0038I Pass   2: suminf.    2.72259 (35) obj. -32.2521 iterations 3
Cbc0038I Pass   3: suminf.    0.59303 (12) obj. -0.906575 iterations 21
Cbc0038I Solution found of 10.5004
Cbc0038I Rounding solution of 6.41034 is better than previous of 10.5004

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 142 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 1.83499
Cbc0038I Pass   4: suminf.    3.14633 (36) obj. -33.2243 iterations 0
Cbc0038I Pass   5: suminf.    2.72259 (35) obj. -32.2521 iterations 3
Cbc0038I Pass   6: suminf.    0.66134 (6) obj. 1.83499 iterations 31
Cbc0038I Pass   7: suminf.    0.24419 (2) obj. 1.83499 iterations 14
Cbc0038I Pass   8: suminf.    0.54108 (2) obj. 1.83499 iterations 2
Cbc0038I Pass   9: suminf.    1.94771 (11) obj. 1.83499 iterations 39
Cbc0038I Pass  10: suminf.    1.55632 (10) obj. 1.83499 iterations 10
Cbc0038I Pass  11: suminf.    1.82285 (13) obj. 1.83499 iterations 17
Cbc0038I Pass  12: suminf.    0.96597 (12) obj. 1.83499 iterations 3
Cbc0038I Pass  13: suminf.    1.00738 (4) obj. 1.83499 iterations 16
Cbc0038I Pass  14: suminf.    0.81777 (6) obj. 1.83499 iterations 2
Cbc0038I Pass  15: suminf.    0.37041 (2) obj. 1.83499 iterations 11
Cbc0038I Pass  16: suminf.    0.24959 (2) obj. 1.23091 iterations 4
Cbc0038I Pass  17: suminf.    0.37041 (2) obj. 1.83499 iterations 4
Cbc0038I Pass  18: suminf.    1.43113 (8) obj. 1.83499 iterations 30
Cbc0038I Pass  19: suminf.    1.41950 (7) obj. 1.83499 iterations 3
Cbc0038I Pass  20: suminf.    1.41726 (8) obj. 1.83499 iterations 9
Cbc0038I Pass  21: suminf.    1.19685 (7) obj. 1.83499 iterations 2
Cbc0038I Pass  22: suminf.    1.00466 (6) obj. 1.83499 iterations 4
Cbc0038I Pass  23: suminf.    0.99198 (4) obj. 1.83499 iterations 14
Cbc0038I Pass  24: suminf.    0.79788 (4) obj. 1.64862 iterations 6
Cbc0038I Pass  25: suminf.    0.99198 (4) obj. 1.83499 iterations 11
Cbc0038I Pass  26: suminf.    1.16932 (10) obj. 1.83499 iterations 30
Cbc0038I Pass  27: suminf.    0.89762 (9) obj. 0.946828 iterations 13
Cbc0038I Pass  28: suminf.    0.78044 (5) obj. 1.83499 iterations 17
Cbc0038I Pass  29: suminf.    0.74293 (5) obj. 1.83499 iterations 5
Cbc0038I Pass  30: suminf.    0.34509 (4) obj. 1.83499 iterations 7
Cbc0038I Pass  31: suminf.    0.34509 (4) obj. 1.83499 iterations 0
Cbc0038I Pass  32: suminf.    0.41024 (3) obj. 1.83499 iterations 5
Cbc0038I Pass  33: suminf.    0.79045 (6) obj. 1.83499 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 142 columns, reduced to 45 rows 57 columns
Cbc0038I Mini branch and bound improved solution from 10.5004 to -1.95544 (0.09 seconds)
Cbc0038I Round again with cutoff of -9.43288
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.14633 (36) obj. -33.2243 iterations 0
Cbc0038I Pass  34: suminf.    2.72259 (35) obj. -32.2521 iterations 3
Cbc0038I Pass  35: suminf.    1.20992 (15) obj. -9.43288 iterations 20
Cbc0038I Pass  36: suminf.    0.84786 (15) obj. -12.6914 iterations 1
Cbc0038I Pass  37: suminf.    1.65193 (16) obj. -9.43288 iterations 23
Cbc0038I Pass  38: suminf.    1.43917 (16) obj. -9.43288 iterations 2
Cbc0038I Pass  39: suminf.    1.84245 (10) obj. -9.43288 iterations 30
Cbc0038I Pass  40: suminf.    1.84245 (10) obj. -9.43288 iterations 1
Cbc0038I Pass  41: suminf.    1.64493 (11) obj. -9.43288 iterations 10
Cbc0038I Pass  42: suminf.    1.29690 (8) obj. -9.43288 iterations 13
Cbc0038I Pass  43: suminf.    0.93897 (8) obj. -10.1487 iterations 5
Cbc0038I Pass  44: suminf.    1.66551 (11) obj. -9.43288 iterations 13
Cbc0038I Pass  45: suminf.    1.29690 (8) obj. -9.43288 iterations 12
Cbc0038I Pass  46: suminf.    3.95003 (17) obj. -9.43288 iterations 32
Cbc0038I Pass  47: suminf.    2.14681 (15) obj. -9.43288 iterations 13
Cbc0038I Pass  48: suminf.    1.98762 (14) obj. -9.43288 iterations 9
Cbc0038I Pass  49: suminf.    1.09310 (13) obj. -9.51862 iterations 8
Cbc0038I Pass  50: suminf.    1.56993 (11) obj. -9.43288 iterations 22
Cbc0038I Pass  51: suminf.    1.56957 (11) obj. -9.43288 iterations 2
Cbc0038I Pass  52: suminf.    1.14688 (11) obj. -9.43288 iterations 11
Cbc0038I Pass  53: suminf.    1.14688 (11) obj. -9.43288 iterations 1
Cbc0038I Pass  54: suminf.    2.35849 (10) obj. -9.43288 iterations 14
Cbc0038I Pass  55: suminf.    2.25591 (11) obj. -9.43288 iterations 2
Cbc0038I Pass  56: suminf.    2.15759 (10) obj. -9.43288 iterations 5
Cbc0038I Pass  57: suminf.    2.35849 (10) obj. -9.43288 iterations 6
Cbc0038I Pass  58: suminf.    2.12058 (11) obj. -9.43288 iterations 2
Cbc0038I Pass  59: suminf.    2.01689 (10) obj. -9.43288 iterations 4
Cbc0038I Pass  60: suminf.    2.35849 (10) obj. -9.43288 iterations 13
Cbc0038I Pass  61: suminf.    2.25591 (11) obj. -9.43288 iterations 2
Cbc0038I Pass  62: suminf.    2.15759 (10) obj. -9.43288 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 142 columns, reduced to 46 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -1.95544 - took 0.10 seconds
Cbc0012I Integer solution of -1.95544 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 129 rows 142 columns, reduced to 15 rows 18 columns
Cbc0031I 68 added rows had average density of 55.323529
Cbc0013I At root node, 68 cuts changed objective from -39.342255 to -11.090109 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18336 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2340 row cuts average 138.6 elements, 0 column cuts (0 active)  in 0.283 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1215 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1222 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 360 row cuts average 86.9 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 86 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.456 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.95544 best solution, best possible -11.090109 (3.19 seconds)
Cbc0010I After 3 nodes, 4 on tree, -1.95544 best solution, best possible -11.090109 (3.92 seconds)
Cbc0012I Integer solution of -2.729435 found by rounding after 8559 iterations and 4 nodes (3.92 seconds)
Cbc0004I Integer solution of -3.243768 found after 8643 iterations and 8 nodes (3.93 seconds)
Cbc0012I Integer solution of -3.50941 found by DiveCoefficient after 9003 iterations and 17 nodes (4.19 seconds)
Cbc0012I Integer solution of -3.791917 found by rounding after 9160 iterations and 24 nodes (4.26 seconds)
Cbc0012I Integer solution of -4.292044 found by rounding after 9370 iterations and 30 nodes (4.33 seconds)
Cbc0012I Integer solution of -4.78649 found by rounding after 9598 iterations and 41 nodes (4.38 seconds)
Cbc0038I Full problem 129 rows 142 columns, reduced to 2 rows 2 columns
Cbc0010I After 77 nodes, 13 on tree, -4.78649 best solution, best possible -11.090109 (4.63 seconds)
Cbc0038I Full problem 129 rows 142 columns, reduced to 7 rows 12 columns
Cbc0012I Integer solution of -4.835008 found by rounding after 11695 iterations and 95 nodes (4.72 seconds)
Cbc0010I After 121 nodes, 6 on tree, -4.835008 best solution, best possible -11.090109 (5.36 seconds)
Cbc0001I Search completed - best objective -4.835008000000009, took 14431 iterations and 148 nodes (5.64 seconds)
Cbc0032I Strong branching done 1690 times (29637 iterations), fathomed 21 nodes and fixed 9 variables
Cbc0035I Maximum depth 18, 663 variables fixed on reduced cost
Total time (CPU seconds):       4.97   (Wallclock seconds):       5.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 187 (-18) rows, 101 (-2) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 9.29514e-07 - average 4.97066e-09, 18 fixed columns
Coin0506I Presolve 144 (-43) rows, 83 (-18) columns and 447 (-121) elements
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 2.2734744 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Coin0511I After Postsolve, objective 35.154566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Clp0000I Optimal - objective value 35.154566
Coin0511I After Postsolve, objective 35.154566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.15456576 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 187 rows, 101 columns (100 integer (100 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 13.6601
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.62538 iterations 81
Cbc0038I Solution found of 8.62538
Cbc0038I Relaxing continuous gives 8.62538
Cbc0038I Rounding solution of 5.4436 is better than previous of 8.62538

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 5.4436 to -3.27315 (0.07 seconds)
Cbc0038I Round again with cutoff of -6.46138
Cbc0038I Pass   2: suminf.    2.37288 (14) obj. -6.46138 iterations 15
Cbc0038I Pass   3: suminf.    1.83949 (18) obj. -6.46138 iterations 9
Cbc0038I Pass   4: suminf.    2.51702 (10) obj. -6.46138 iterations 25
Cbc0038I Pass   5: suminf.    2.21909 (9) obj. -6.46138 iterations 2
Cbc0038I Pass   6: suminf.    2.36853 (7) obj. -6.46138 iterations 17
Cbc0038I Pass   7: suminf.    1.71901 (6) obj. -6.46138 iterations 1
Cbc0038I Pass   8: suminf.    1.11192 (5) obj. -6.46138 iterations 6
Cbc0038I Pass   9: suminf.    1.10031 (7) obj. -6.46138 iterations 3
Cbc0038I Pass  10: suminf.    1.85173 (6) obj. -6.46138 iterations 12
Cbc0038I Pass  11: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  12: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  13: suminf.    1.90394 (6) obj. -6.46138 iterations 9
Cbc0038I Pass  14: suminf.    1.69463 (8) obj. -6.46138 iterations 7
Cbc0038I Pass  15: suminf.    2.62330 (8) obj. -6.46138 iterations 12
Cbc0038I Pass  16: suminf.    2.62330 (8) obj. -6.46138 iterations 0
Cbc0038I Pass  17: suminf.    2.76737 (7) obj. -6.46138 iterations 10
Cbc0038I Pass  18: suminf.    1.76588 (6) obj. -6.46138 iterations 6
Cbc0038I Pass  19: suminf.    1.85173 (6) obj. -6.46138 iterations 11
Cbc0038I Pass  20: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  21: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  22: suminf.    1.90394 (6) obj. -6.46138 iterations 8
Cbc0038I Pass  23: suminf.    1.69463 (8) obj. -6.46138 iterations 6
Cbc0038I Pass  24: suminf.    2.62330 (8) obj. -6.46138 iterations 12
Cbc0038I Pass  25: suminf.    2.62330 (8) obj. -6.46138 iterations 0
Cbc0038I Pass  26: suminf.    2.76737 (7) obj. -6.46138 iterations 10
Cbc0038I Pass  27: suminf.    1.76588 (6) obj. -6.46138 iterations 6
Cbc0038I Pass  28: suminf.    1.85173 (6) obj. -6.46138 iterations 11
Cbc0038I Pass  29: suminf.    1.83532 (6) obj. -6.46138 iterations 1
Cbc0038I Pass  30: suminf.    1.83532 (6) obj. -6.46138 iterations 0
Cbc0038I Pass  31: suminf.    1.90394 (6) obj. -6.46138 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 104 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -3.27315 to -4.40497 (0.15 seconds)
Cbc0038I Round again with cutoff of -12.2
Cbc0038I Pass  31: suminf.    3.97564 (15) obj. -12.2 iterations 1
Cbc0038I Pass  32: suminf.    3.97564 (15) obj. -12.2 iterations 0
Cbc0038I Pass  33: suminf.    3.21792 (9) obj. -12.2 iterations 16
Cbc0038I Pass  34: suminf.    2.73720 (9) obj. -12.2 iterations 5
Cbc0038I Pass  35: suminf.    2.74390 (10) obj. -12.2 iterations 2
Cbc0038I Pass  36: suminf.    3.12527 (11) obj. -12.2 iterations 12
Cbc0038I Pass  37: suminf.    2.40966 (8) obj. -12.2 iterations 3
Cbc0038I Pass  38: suminf.    2.40966 (8) obj. -12.2 iterations 0
Cbc0038I Pass  39: suminf.    2.72897 (10) obj. -12.2 iterations 9
Cbc0038I Pass  40: suminf.    2.66241 (10) obj. -12.2 iterations 1
Cbc0038I Pass  41: suminf.    2.66241 (10) obj. -12.2 iterations 2
Cbc0038I Pass  42: suminf.    3.14072 (9) obj. -12.2 iterations 16
Cbc0038I Pass  43: suminf.    2.96237 (10) obj. -12.2 iterations 5
Cbc0038I Pass  44: suminf.    3.80208 (10) obj. -12.2 iterations 9
Cbc0038I Pass  45: suminf.    2.27322 (7) obj. -12.2 iterations 4
Cbc0038I Pass  46: suminf.    2.06393 (8) obj. -12.2 iterations 2
Cbc0038I Pass  47: suminf.    1.96764 (7) obj. -12.2 iterations 2
Cbc0038I Pass  48: suminf.    2.44798 (8) obj. -12.2 iterations 8
Cbc0038I Pass  49: suminf.    2.40966 (8) obj. -12.2 iterations 1
Cbc0038I Pass  50: suminf.    2.72897 (10) obj. -12.2 iterations 9
Cbc0038I Pass  51: suminf.    2.66241 (10) obj. -12.2 iterations 1
Cbc0038I Pass  52: suminf.    2.66241 (10) obj. -12.2 iterations 2
Cbc0038I Pass  53: suminf.    3.14072 (9) obj. -12.2 iterations 14
Cbc0038I Pass  54: suminf.    2.96237 (10) obj. -12.2 iterations 5
Cbc0038I Pass  55: suminf.    3.80208 (10) obj. -12.2 iterations 9
Cbc0038I Pass  56: suminf.    2.27322 (7) obj. -12.2 iterations 4
Cbc0038I Pass  57: suminf.    2.06393 (8) obj. -12.2 iterations 2
Cbc0038I Pass  58: suminf.    1.96764 (7) obj. -12.2 iterations 2
Cbc0038I Pass  59: suminf.    2.44798 (8) obj. -12.2 iterations 8
Cbc0038I Pass  60: suminf.    2.40966 (8) obj. -12.2 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 187 rows 101 columns, reduced to 104 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -4.40497 - took 0.21 seconds
Cbc0012I Integer solution of -4.40497 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 62 columns
Cbc0012I Integer solution of -4.61368 found by RINS after 0 iterations and 0 nodes (0.30 seconds)
Cbc0031I 30 added rows had average density of 88.033333
Cbc0013I At root node, 30 cuts changed objective from -35.154566 to -26.663369 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18601 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2704 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.61368 best solution, best possible -26.663369 (1.84 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 103 rows 57 columns
Cbc0012I Integer solution of -4.835008 found by RINS after 11495 iterations and 41 nodes (2.34 seconds)
Cbc0038I Full problem 187 rows 101 columns, reduced to 67 rows 41 columns
Cbc0010I After 116 nodes, 2 on tree, -4.835008 best solution, best possible -26.663369 (2.54 seconds)
Cbc0001I Search completed - best objective -4.835008000000009, took 14274 iterations and 122 nodes (2.56 seconds)
Cbc0032I Strong branching done 1356 times (27709 iterations), fathomed 14 nodes and fixed 68 variables
Cbc0035I Maximum depth 36, 383 variables fixed on reduced cost
Total time (CPU seconds):       2.48   (Wallclock seconds):       2.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-76) rows, 142 (-61) columns and 2473 (-3181) elements
Clp1000I sum of infeasibilities 1.06516e-07 - average 8.25708e-10, 22 fixed columns
Coin0506I Presolve 109 (-20) rows, 120 (-22) columns and 2000 (-473) elements
Clp0006I 0  Obj 32.200971 Dual inf 5.5714062 (120)
Clp0029I End of values pass after 120 iterations
Clp0014I Perturbing problem by 0.001% of 1.6522881 - largest nonzero change 1.9390612e-05 ( 0.0012247315%) - largest zero change 2.8491798e-05
Clp0000I Optimal - objective value 45.659207
Clp0000I Optimal - objective value 45.659207
Coin0511I After Postsolve, objective 45.659207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 45.659207
Clp0000I Optimal - objective value 45.659207
Clp0000I Optimal - objective value 45.659207
Clp0000I Optimal - objective value 45.659207
Coin0511I After Postsolve, objective 45.659207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.6592069 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 142 columns (142 integer (142 of which binary)) and 2477 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.659%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 6.6384
Cbc0038I Pass   1: suminf.    3.14633 (36) obj. -33.2243 iterations 14
Cbc0038I Pass   2: suminf.    2.72259 (35) obj. -32.2521 iterations 3
Cbc0038I Pass   3: suminf.    0.59303 (12) obj. -0.906575 iterations 21
Cbc0038I Solution found of 10.5004
Cbc0038I Rounding solution of 6.41034 is better than previous of 10.5004

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 142 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 1.83499
Cbc0038I Pass   4: suminf.    3.14633 (36) obj. -33.2243 iterations 0
Cbc0038I Pass   5: suminf.    2.72259 (35) obj. -32.2521 iterations 3
Cbc0038I Pass   6: suminf.    0.66134 (6) obj. 1.83499 iterations 31
Cbc0038I Pass   7: suminf.    0.24419 (2) obj. 1.83499 iterations 14
Cbc0038I Pass   8: suminf.    0.54108 (2) obj. 1.83499 iterations 2
Cbc0038I Pass   9: suminf.    1.94771 (11) obj. 1.83499 iterations 39
Cbc0038I Pass  10: suminf.    1.55632 (10) obj. 1.83499 iterations 10
Cbc0038I Pass  11: suminf.    1.82285 (13) obj. 1.83499 iterations 17
Cbc0038I Pass  12: suminf.    0.96597 (12) obj. 1.83499 iterations 3
Cbc0038I Pass  13: suminf.    1.00738 (4) obj. 1.83499 iterations 16
Cbc0038I Pass  14: suminf.    0.81777 (6) obj. 1.83499 iterations 2
Cbc0038I Pass  15: suminf.    0.37041 (2) obj. 1.83499 iterations 11
Cbc0038I Pass  16: suminf.    0.24959 (2) obj. 1.23091 iterations 4
Cbc0038I Pass  17: suminf.    0.37041 (2) obj. 1.83499 iterations 4
Cbc0038I Pass  18: suminf.    1.43113 (8) obj. 1.83499 iterations 30
Cbc0038I Pass  19: suminf.    1.41950 (7) obj. 1.83499 iterations 3
Cbc0038I Pass  20: suminf.    1.41726 (8) obj. 1.83499 iterations 9
Cbc0038I Pass  21: suminf.    1.19685 (7) obj. 1.83499 iterations 2
Cbc0038I Pass  22: suminf.    1.00466 (6) obj. 1.83499 iterations 4
Cbc0038I Pass  23: suminf.    0.99198 (4) obj. 1.83499 iterations 14
Cbc0038I Pass  24: suminf.    0.79788 (4) obj. 1.64862 iterations 6
Cbc0038I Pass  25: suminf.    0.99198 (4) obj. 1.83499 iterations 11
Cbc0038I Pass  26: suminf.    1.16932 (10) obj. 1.83499 iterations 30
Cbc0038I Pass  27: suminf.    0.89762 (9) obj. 0.946828 iterations 13
Cbc0038I Pass  28: suminf.    0.78044 (5) obj. 1.83499 iterations 17
Cbc0038I Pass  29: suminf.    0.74293 (5) obj. 1.83499 iterations 5
Cbc0038I Pass  30: suminf.    0.34509 (4) obj. 1.83499 iterations 7
Cbc0038I Pass  31: suminf.    0.34509 (4) obj. 1.83499 iterations 0
Cbc0038I Pass  32: suminf.    0.41024 (3) obj. 1.83499 iterations 5
Cbc0038I Pass  33: suminf.    0.79045 (6) obj. 1.83499 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 142 columns, reduced to 45 rows 57 columns
Cbc0038I Mini branch and bound improved solution from 10.5004 to -1.95544 (0.09 seconds)
Cbc0038I Round again with cutoff of -9.43288
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.14633 (36) obj. -33.2243 iterations 0
Cbc0038I Pass  34: suminf.    2.72259 (35) obj. -32.2521 iterations 3
Cbc0038I Pass  35: suminf.    1.20992 (15) obj. -9.43288 iterations 20
Cbc0038I Pass  36: suminf.    0.84786 (15) obj. -12.6914 iterations 1
Cbc0038I Pass  37: suminf.    1.65193 (16) obj. -9.43288 iterations 23
Cbc0038I Pass  38: suminf.    1.43917 (16) obj. -9.43288 iterations 2
Cbc0038I Pass  39: suminf.    1.84245 (10) obj. -9.43288 iterations 30
Cbc0038I Pass  40: suminf.    1.84245 (10) obj. -9.43288 iterations 1
Cbc0038I Pass  41: suminf.    1.64493 (11) obj. -9.43288 iterations 10
Cbc0038I Pass  42: suminf.    1.29690 (8) obj. -9.43288 iterations 13
Cbc0038I Pass  43: suminf.    0.93897 (8) obj. -10.1487 iterations 5
Cbc0038I Pass  44: suminf.    1.66551 (11) obj. -9.43288 iterations 13
Cbc0038I Pass  45: suminf.    1.29690 (8) obj. -9.43288 iterations 12
Cbc0038I Pass  46: suminf.    3.95003 (17) obj. -9.43288 iterations 32
Cbc0038I Pass  47: suminf.    2.14681 (15) obj. -9.43288 iterations 13
Cbc0038I Pass  48: suminf.    1.98762 (14) obj. -9.43288 iterations 9
Cbc0038I Pass  49: suminf.    1.09310 (13) obj. -9.51862 iterations 8
Cbc0038I Pass  50: suminf.    1.56993 (11) obj. -9.43288 iterations 22
Cbc0038I Pass  51: suminf.    1.56957 (11) obj. -9.43288 iterations 2
Cbc0038I Pass  52: suminf.    1.14688 (11) obj. -9.43288 iterations 11
Cbc0038I Pass  53: suminf.    1.14688 (11) obj. -9.43288 iterations 1
Cbc0038I Pass  54: suminf.    2.35849 (10) obj. -9.43288 iterations 14
Cbc0038I Pass  55: suminf.    2.25591 (11) obj. -9.43288 iterations 2
Cbc0038I Pass  56: suminf.    2.15759 (10) obj. -9.43288 iterations 5
Cbc0038I Pass  57: suminf.    2.35849 (10) obj. -9.43288 iterations 6
Cbc0038I Pass  58: suminf.    2.12058 (11) obj. -9.43288 iterations 2
Cbc0038I Pass  59: suminf.    2.01689 (10) obj. -9.43288 iterations 4
Cbc0038I Pass  60: suminf.    2.35849 (10) obj. -9.43288 iterations 13
Cbc0038I Pass  61: suminf.    2.25591 (11) obj. -9.43288 iterations 2
Cbc0038I Pass  62: suminf.    2.15759 (10) obj. -9.43288 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 142 columns, reduced to 46 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -1.95544 - took 0.10 seconds
Cbc0012I Integer solution of -1.95544 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 129 rows 142 columns, reduced to 15 rows 18 columns
Cbc0031I 68 added rows had average density of 55.323529
Cbc0013I At root node, 68 cuts changed objective from -39.342255 to -11.090109 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18336 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2340 row cuts average 138.6 elements, 0 column cuts (0 active)  in 0.267 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1215 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1222 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 360 row cuts average 86.9 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 86 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.439 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.95544 best solution, best possible -11.090109 (2.94 seconds)
Cbc0010I After 3 nodes, 4 on tree, -1.95544 best solution, best possible -11.090109 (3.66 seconds)
Cbc0012I Integer solution of -2.729435 found by rounding after 8559 iterations and 4 nodes (3.67 seconds)
Cbc0004I Integer solution of -3.243768 found after 8643 iterations and 8 nodes (3.68 seconds)
Cbc0012I Integer solution of -3.50941 found by DiveCoefficient after 9003 iterations and 17 nodes (3.92 seconds)
Cbc0012I Integer solution of -3.791917 found by rounding after 9160 iterations and 24 nodes (3.99 seconds)
Cbc0012I Integer solution of -4.292044 found by rounding after 9370 iterations and 30 nodes (4.05 seconds)
Cbc0012I Integer solution of -4.78649 found by rounding after 9598 iterations and 41 nodes (4.11 seconds)
Cbc0038I Full problem 129 rows 142 columns, reduced to 2 rows 2 columns
Cbc0010I After 79 nodes, 11 on tree, -4.78649 best solution, best possible -11.090109 (4.37 seconds)
Cbc0038I Full problem 129 rows 142 columns, reduced to 7 rows 12 columns
Cbc0012I Integer solution of -4.835008 found by rounding after 11695 iterations and 95 nodes (4.45 seconds)
Cbc0010I After 123 nodes, 6 on tree, -4.835008 best solution, best possible -11.090109 (5.13 seconds)
Cbc0001I Search completed - best objective -4.835008000000009, took 14431 iterations and 148 nodes (5.32 seconds)
Cbc0032I Strong branching done 1690 times (29637 iterations), fathomed 21 nodes and fixed 9 variables
Cbc0035I Maximum depth 18, 663 variables fixed on reduced cost
Total time (CPU seconds):       4.78   (Wallclock seconds):       5.35

