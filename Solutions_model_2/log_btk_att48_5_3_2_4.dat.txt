Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 48 (-2) columns and 274 (-11) elements
Clp1000I sum of infeasibilities 1.72136e-05 - average 1.85093e-07, 2 fixed columns
Coin0506I Presolve 89 (-4) rows, 46 (-2) columns and 262 (-12) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 24.609494 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Coin0511I After Postsolve, objective 2098.2552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Coin0511I After Postsolve, objective 2098.2552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2098.255222 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 48 columns (47 integer (47 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 11.4577
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -522.632 iterations 32
Cbc0038I Solution found of -522.632
Cbc0038I Relaxing continuous gives -522.632
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -522.632 to -533.624 (0.03 seconds)
Cbc0038I Round again with cutoff of -690.087
Cbc0038I Pass   2: suminf.    0.23235 (4) obj. -690.087 iterations 4
Cbc0038I Pass   3: suminf.    0.94994 (4) obj. -690.087 iterations 8
Cbc0038I Pass   4: suminf.    1.11791 (3) obj. -690.087 iterations 3
Cbc0038I Pass   5: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass   6: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass   7: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass   8: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass   9: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  10: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  11: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  12: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  13: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  14: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  15: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  16: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  17: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  18: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  19: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  20: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  21: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  22: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  23: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  24: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  25: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  26: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  27: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  28: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  29: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  30: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  31: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -533.624 - took 0.04 seconds
Cbc0012I Integer solution of -533.62351 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0031I 23 added rows had average density of 27
Cbc0013I At root node, 23 cuts changed objective from -2098.2552 to -1394.5739 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6531 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2092 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 271 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 43.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -533.62351 best solution, best possible -1394.5739 (0.70 seconds)
Cbc0001I Search completed - best objective -533.6235120000006, took 8938 iterations and 32 nodes (0.81 seconds)
Cbc0032I Strong branching done 492 times (10006 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 11, 72 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.81

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-5) rows, 94 (-2) columns and 1355 (-58) elements
Clp1000I sum of infeasibilities 5.73848e-09 - average 6.1704e-11, 45 fixed columns
Coin0506I Presolve 31 (-62) rows, 34 (-60) columns and 135 (-1220) elements
Clp0006I 0  Obj 2232.24 Dual inf 36.14346 (34)
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 4.5976507 - largest nonzero change 1.2338614e-05 ( 0.00089285843%) - largest zero change 0
Clp0000I Optimal - objective value 2833.1979
Clp0000I Optimal - objective value 2833.1979
Coin0511I After Postsolve, objective 2833.1979, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2833.1979 Dual inf 361.77751 (6)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.2964539e-05 ( 0.0008409402%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 3018.6562
Clp0000I Optimal - objective value 3018.6562
Clp0000I Optimal - objective value 3018.6562
Coin0511I After Postsolve, objective 3018.6562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3018.656189 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 94 columns (94 integer (94 of which binary)) and 1357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.126%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 13.3572
Cbc0038I Pass   1: suminf.    4.53079 (28) obj. -1854.4 iterations 25
Cbc0038I Pass   2: suminf.    4.53079 (28) obj. -1854.4 iterations 1
Cbc0038I Pass   3: suminf.    2.17930 (17) obj. -787.287 iterations 11
Cbc0038I Pass   4: suminf.    0.54421 (6) obj. -409.385 iterations 11
Cbc0038I Solution found of -220.604
Cbc0038I Rounding solution of -448.709 is better than previous of -220.604

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -448.709 to -469.192 (0.02 seconds)
Cbc0038I Round again with cutoff of -711.27
Cbc0038I Pass   5: suminf.    4.53079 (28) obj. -1854.4 iterations 0
Cbc0038I Pass   6: suminf.    4.53079 (28) obj. -1854.4 iterations 1
Cbc0038I Pass   7: suminf.    0.32885 (2) obj. -711.27 iterations 27
Cbc0038I Pass   8: suminf.    0.28913 (2) obj. -737.406 iterations 1
Cbc0038I Pass   9: suminf.    0.25431 (1) obj. -711.27 iterations 2
Cbc0038I Pass  10: suminf.    0.23913 (1) obj. -721.256 iterations 1
Cbc0038I Pass  11: suminf.    3.03491 (16) obj. -711.27 iterations 37
Cbc0038I Pass  12: suminf.    2.14846 (14) obj. -711.27 iterations 6
Cbc0038I Pass  13: suminf.    1.98449 (9) obj. -711.27 iterations 18
Cbc0038I Pass  14: suminf.    1.98449 (9) obj. -711.27 iterations 0
Cbc0038I Pass  15: suminf.    0.47945 (2) obj. -711.27 iterations 17
Cbc0038I Pass  16: suminf.    0.28261 (1) obj. -773.947 iterations 2
Cbc0038I Pass  17: suminf.    0.37786 (1) obj. -711.27 iterations 1
Cbc0038I Pass  18: suminf.    3.56272 (17) obj. -1277.38 iterations 26
Cbc0038I Pass  19: suminf.    3.56272 (17) obj. -1277.38 iterations 5
Cbc0038I Pass  20: suminf.    0.42182 (2) obj. -711.27 iterations 23
Cbc0038I Pass  21: suminf.    0.42182 (2) obj. -711.27 iterations 0
Cbc0038I Pass  22: suminf.    0.74183 (2) obj. -711.27 iterations 2
Cbc0038I Pass  23: suminf.    3.41077 (15) obj. -711.27 iterations 33
Cbc0038I Pass  24: suminf.    3.41077 (15) obj. -711.27 iterations 0
Cbc0038I Pass  25: suminf.    0.55873 (2) obj. -711.27 iterations 18
Cbc0038I Pass  26: suminf.    0.55873 (2) obj. -711.27 iterations 5
Cbc0038I Pass  27: suminf.    0.75171 (2) obj. -711.27 iterations 2
Cbc0038I Pass  28: suminf.    0.57708 (2) obj. -826.182 iterations 3
Cbc0038I Pass  29: suminf.    0.55873 (2) obj. -711.27 iterations 2
Cbc0038I Pass  30: suminf.    1.92717 (10) obj. -711.27 iterations 20
Cbc0038I Pass  31: suminf.    1.92717 (10) obj. -711.27 iterations 1
Cbc0038I Pass  32: suminf.    0.55833 (3) obj. -711.27 iterations 10
Cbc0038I Pass  33: suminf.    0.50435 (2) obj. -735.287 iterations 4
Cbc0038I Pass  34: suminf.    0.67232 (2) obj. -711.27 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 39 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -469.192 to -514.653 (0.05 seconds)
Cbc0038I Round again with cutoff of -1147.01
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    4.53079 (28) obj. -1854.4 iterations 0
Cbc0038I Pass  35: suminf.    4.53079 (28) obj. -1854.4 iterations 1
Cbc0038I Pass  36: suminf.    2.81667 (19) obj. -1147.01 iterations 10
Cbc0038I Pass  37: suminf.    1.53713 (11) obj. -1147.01 iterations 23
Cbc0038I Pass  38: suminf.    1.42474 (11) obj. -1174.32 iterations 3
Cbc0038I Pass  39: suminf.    0.77035 (13) obj. -1147.01 iterations 17
Cbc0038I Pass  40: suminf.    0.77177 (7) obj. -1147.01 iterations 2
Cbc0038I Pass  41: suminf.    0.96804 (9) obj. -1147.01 iterations 7
Cbc0038I Pass  42: suminf.    0.96804 (9) obj. -1147.01 iterations 0
Cbc0038I Pass  43: suminf.    0.92544 (6) obj. -1147.01 iterations 10
Cbc0038I Pass  44: suminf.    0.92544 (6) obj. -1147.01 iterations 0
Cbc0038I Pass  45: suminf.    0.81996 (3) obj. -1147.01 iterations 4
Cbc0038I Pass  46: suminf.    0.81996 (3) obj. -1147.01 iterations 0
Cbc0038I Pass  47: suminf.    0.67916 (3) obj. -1147.01 iterations 4
Cbc0038I Pass  48: suminf.    0.67916 (3) obj. -1147.01 iterations 0
Cbc0038I Pass  49: suminf.    0.81996 (3) obj. -1147.01 iterations 1
Cbc0038I Pass  50: suminf.    2.31982 (9) obj. -1147.01 iterations 23
Cbc0038I Pass  51: suminf.    2.09691 (9) obj. -1201.18 iterations 9
Cbc0038I Pass  52: suminf.    1.22699 (4) obj. -1147.01 iterations 13
Cbc0038I Pass  53: suminf.    1.22699 (4) obj. -1147.01 iterations 0
Cbc0038I Pass  54: suminf.    1.17791 (4) obj. -1147.01 iterations 1
Cbc0038I Pass  55: suminf.    0.99583 (4) obj. -1187.43 iterations 3
Cbc0038I Pass  56: suminf.    3.13021 (12) obj. -1147.01 iterations 15
Cbc0038I Pass  57: suminf.    2.36272 (10) obj. -1271.7 iterations 7
Cbc0038I Pass  58: suminf.    1.22699 (4) obj. -1147.01 iterations 12
Cbc0038I Pass  59: suminf.    1.22699 (4) obj. -1147.01 iterations 0
Cbc0038I Pass  60: suminf.    1.17791 (4) obj. -1147.01 iterations 1
Cbc0038I Pass  61: suminf.    0.99583 (4) obj. -1187.43 iterations 2
Cbc0038I Pass  62: suminf.    1.22699 (4) obj. -1147.01 iterations 3
Cbc0038I Pass  63: suminf.    3.26254 (13) obj. -1147.01 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 22 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -514.653 - took 0.05 seconds
Cbc0012I Integer solution of -514.65251 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 93 rows 94 columns, reduced to 17 rows 21 columns
Cbc0031I 52 added rows had average density of 19.461538
Cbc0013I At root node, 52 cuts changed objective from -2889.9753 to -626.76083 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10694 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1264 row cuts average 79.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 15 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1125 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 434 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.682 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -514.65251 best solution, best possible -626.76083 (2.14 seconds)
Cbc0016I Integer solution of -522.63151 found by strong branching after 3385 iterations and 4 nodes (2.33 seconds)
Cbc0016I Integer solution of -533.62351 found by strong branching after 3391 iterations and 4 nodes (2.33 seconds)
Cbc0001I Search completed - best objective -533.6235120000006, took 3527 iterations and 8 nodes (2.33 seconds)
Cbc0032I Strong branching done 250 times (4351 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 30 variables fixed on reduced cost
Total time (CPU seconds):       1.72   (Wallclock seconds):       2.34

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 48 (-2) columns and 274 (-11) elements
Clp1000I sum of infeasibilities 1.72136e-05 - average 1.85093e-07, 2 fixed columns
Coin0506I Presolve 89 (-4) rows, 46 (-2) columns and 262 (-12) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 24.609494 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Coin0511I After Postsolve, objective 2098.2552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Clp0000I Optimal - objective value 2098.2552
Coin0511I After Postsolve, objective 2098.2552, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2098.255222 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 48 columns (47 integer (47 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 11.4577
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -522.632 iterations 32
Cbc0038I Solution found of -522.632
Cbc0038I Relaxing continuous gives -522.632
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -522.632 to -533.624 (0.03 seconds)
Cbc0038I Round again with cutoff of -690.087
Cbc0038I Pass   2: suminf.    0.23235 (4) obj. -690.087 iterations 4
Cbc0038I Pass   3: suminf.    0.94994 (4) obj. -690.087 iterations 8
Cbc0038I Pass   4: suminf.    1.11791 (3) obj. -690.087 iterations 3
Cbc0038I Pass   5: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass   6: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass   7: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass   8: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass   9: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  10: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  11: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  12: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  13: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  14: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  15: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  16: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  17: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  18: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  19: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  20: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  21: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  22: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  23: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  24: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  25: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  26: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I Pass  27: suminf.    1.40295 (4) obj. -690.087 iterations 1
Cbc0038I Pass  28: suminf.    1.56908 (5) obj. -690.087 iterations 4
Cbc0038I Pass  29: suminf.    1.12674 (4) obj. -690.087 iterations 3
Cbc0038I Pass  30: suminf.    1.06257 (3) obj. -690.087 iterations 1
Cbc0038I Pass  31: suminf.    1.43139 (4) obj. -690.087 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -533.624 - took 0.04 seconds
Cbc0012I Integer solution of -533.62351 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 93 rows 48 columns, reduced to 61 rows 32 columns
Cbc0031I 23 added rows had average density of 27
Cbc0013I At root node, 23 cuts changed objective from -2098.2552 to -1394.5739 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6531 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2092 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 271 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 43.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -533.62351 best solution, best possible -1394.5739 (0.67 seconds)
Cbc0001I Search completed - best objective -533.6235120000006, took 8938 iterations and 32 nodes (0.77 seconds)
Cbc0032I Strong branching done 492 times (10006 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 11, 72 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-6) rows, 94 (-3) columns and 1355 (-59) elements
Clp1000I sum of infeasibilities 5.73848e-09 - average 6.1704e-11, 45 fixed columns
Coin0506I Presolve 31 (-62) rows, 34 (-60) columns and 135 (-1220) elements
Clp0006I 0  Obj 2232.24 Dual inf 36.14346 (34)
Clp0029I End of values pass after 34 iterations
Clp0014I Perturbing problem by 0.001% of 4.5976507 - largest nonzero change 1.2338614e-05 ( 0.00089285843%) - largest zero change 0
Clp0000I Optimal - objective value 2833.1979
Clp0000I Optimal - objective value 2833.1979
Coin0511I After Postsolve, objective 2833.1979, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2833.1979 Dual inf 361.77751 (6)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.2964539e-05 ( 0.0008409402%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 3018.6562
Clp0000I Optimal - objective value 3018.6562
Clp0000I Optimal - objective value 3018.6562
Coin0511I After Postsolve, objective 3018.6562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3018.656189 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 94 columns (94 integer (94 of which binary)) and 1357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.126%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 13.3572
Cbc0038I Pass   1: suminf.    4.53079 (28) obj. -1854.4 iterations 25
Cbc0038I Pass   2: suminf.    4.53079 (28) obj. -1854.4 iterations 1
Cbc0038I Pass   3: suminf.    2.17930 (17) obj. -787.287 iterations 11
Cbc0038I Pass   4: suminf.    0.54421 (6) obj. -409.385 iterations 11
Cbc0038I Solution found of -220.604
Cbc0038I Rounding solution of -448.709 is better than previous of -220.604

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -448.709 to -469.192 (0.02 seconds)
Cbc0038I Round again with cutoff of -711.27
Cbc0038I Pass   5: suminf.    4.53079 (28) obj. -1854.4 iterations 0
Cbc0038I Pass   6: suminf.    4.53079 (28) obj. -1854.4 iterations 1
Cbc0038I Pass   7: suminf.    0.32885 (2) obj. -711.27 iterations 27
Cbc0038I Pass   8: suminf.    0.28913 (2) obj. -737.406 iterations 1
Cbc0038I Pass   9: suminf.    0.25431 (1) obj. -711.27 iterations 2
Cbc0038I Pass  10: suminf.    0.23913 (1) obj. -721.256 iterations 1
Cbc0038I Pass  11: suminf.    3.03491 (16) obj. -711.27 iterations 37
Cbc0038I Pass  12: suminf.    2.14846 (14) obj. -711.27 iterations 6
Cbc0038I Pass  13: suminf.    1.98449 (9) obj. -711.27 iterations 18
Cbc0038I Pass  14: suminf.    1.98449 (9) obj. -711.27 iterations 0
Cbc0038I Pass  15: suminf.    0.47945 (2) obj. -711.27 iterations 17
Cbc0038I Pass  16: suminf.    0.28261 (1) obj. -773.947 iterations 2
Cbc0038I Pass  17: suminf.    0.37786 (1) obj. -711.27 iterations 1
Cbc0038I Pass  18: suminf.    3.56272 (17) obj. -1277.38 iterations 26
Cbc0038I Pass  19: suminf.    3.56272 (17) obj. -1277.38 iterations 5
Cbc0038I Pass  20: suminf.    0.42182 (2) obj. -711.27 iterations 23
Cbc0038I Pass  21: suminf.    0.42182 (2) obj. -711.27 iterations 0
Cbc0038I Pass  22: suminf.    0.74183 (2) obj. -711.27 iterations 2
Cbc0038I Pass  23: suminf.    3.41077 (15) obj. -711.27 iterations 33
Cbc0038I Pass  24: suminf.    3.41077 (15) obj. -711.27 iterations 0
Cbc0038I Pass  25: suminf.    0.55873 (2) obj. -711.27 iterations 18
Cbc0038I Pass  26: suminf.    0.55873 (2) obj. -711.27 iterations 5
Cbc0038I Pass  27: suminf.    0.75171 (2) obj. -711.27 iterations 2
Cbc0038I Pass  28: suminf.    0.57708 (2) obj. -826.182 iterations 3
Cbc0038I Pass  29: suminf.    0.55873 (2) obj. -711.27 iterations 2
Cbc0038I Pass  30: suminf.    1.92717 (10) obj. -711.27 iterations 20
Cbc0038I Pass  31: suminf.    1.92717 (10) obj. -711.27 iterations 1
Cbc0038I Pass  32: suminf.    0.55833 (3) obj. -711.27 iterations 10
Cbc0038I Pass  33: suminf.    0.50435 (2) obj. -735.287 iterations 4
Cbc0038I Pass  34: suminf.    0.67232 (2) obj. -711.27 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 39 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -469.192 to -514.653 (0.04 seconds)
Cbc0038I Round again with cutoff of -1147.01
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    4.53079 (28) obj. -1854.4 iterations 0
Cbc0038I Pass  35: suminf.    4.53079 (28) obj. -1854.4 iterations 1
Cbc0038I Pass  36: suminf.    2.81667 (19) obj. -1147.01 iterations 10
Cbc0038I Pass  37: suminf.    1.53713 (11) obj. -1147.01 iterations 23
Cbc0038I Pass  38: suminf.    1.42474 (11) obj. -1174.32 iterations 3
Cbc0038I Pass  39: suminf.    0.77035 (13) obj. -1147.01 iterations 17
Cbc0038I Pass  40: suminf.    0.77177 (7) obj. -1147.01 iterations 2
Cbc0038I Pass  41: suminf.    0.96804 (9) obj. -1147.01 iterations 7
Cbc0038I Pass  42: suminf.    0.96804 (9) obj. -1147.01 iterations 0
Cbc0038I Pass  43: suminf.    0.92544 (6) obj. -1147.01 iterations 10
Cbc0038I Pass  44: suminf.    0.92544 (6) obj. -1147.01 iterations 0
Cbc0038I Pass  45: suminf.    0.81996 (3) obj. -1147.01 iterations 4
Cbc0038I Pass  46: suminf.    0.81996 (3) obj. -1147.01 iterations 0
Cbc0038I Pass  47: suminf.    0.67916 (3) obj. -1147.01 iterations 4
Cbc0038I Pass  48: suminf.    0.67916 (3) obj. -1147.01 iterations 0
Cbc0038I Pass  49: suminf.    0.81996 (3) obj. -1147.01 iterations 1
Cbc0038I Pass  50: suminf.    2.31982 (9) obj. -1147.01 iterations 23
Cbc0038I Pass  51: suminf.    2.09691 (9) obj. -1201.18 iterations 9
Cbc0038I Pass  52: suminf.    1.22699 (4) obj. -1147.01 iterations 13
Cbc0038I Pass  53: suminf.    1.22699 (4) obj. -1147.01 iterations 0
Cbc0038I Pass  54: suminf.    1.17791 (4) obj. -1147.01 iterations 1
Cbc0038I Pass  55: suminf.    0.99583 (4) obj. -1187.43 iterations 3
Cbc0038I Pass  56: suminf.    3.13021 (12) obj. -1147.01 iterations 15
Cbc0038I Pass  57: suminf.    2.36272 (10) obj. -1271.7 iterations 7
Cbc0038I Pass  58: suminf.    1.22699 (4) obj. -1147.01 iterations 12
Cbc0038I Pass  59: suminf.    1.22699 (4) obj. -1147.01 iterations 0
Cbc0038I Pass  60: suminf.    1.17791 (4) obj. -1147.01 iterations 1
Cbc0038I Pass  61: suminf.    0.99583 (4) obj. -1187.43 iterations 2
Cbc0038I Pass  62: suminf.    1.22699 (4) obj. -1147.01 iterations 3
Cbc0038I Pass  63: suminf.    3.26254 (13) obj. -1147.01 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 94 columns, reduced to 22 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -514.653 - took 0.04 seconds
Cbc0012I Integer solution of -514.65251 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 93 rows 94 columns, reduced to 17 rows 21 columns
Cbc0031I 52 added rows had average density of 19.461538
Cbc0013I At root node, 52 cuts changed objective from -2889.9753 to -626.76083 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10694 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1264 row cuts average 79.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 15 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1125 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 434 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.652 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -514.65251 best solution, best possible -626.76083 (2.00 seconds)
Cbc0016I Integer solution of -522.63151 found by strong branching after 3385 iterations and 4 nodes (2.19 seconds)
Cbc0016I Integer solution of -533.62351 found by strong branching after 3391 iterations and 4 nodes (2.19 seconds)
Cbc0001I Search completed - best objective -533.6235120000006, took 3527 iterations and 8 nodes (2.19 seconds)
Cbc0032I Strong branching done 250 times (4351 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 30 variables fixed on reduced cost
Total time (CPU seconds):       1.63   (Wallclock seconds):       2.20

