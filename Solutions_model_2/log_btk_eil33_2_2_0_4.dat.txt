Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-43) rows, 15 (-20) columns and 76 (-119) elements
Clp1000I sum of infeasibilities 2.43132e-07 - average 9.35122e-09, 0 fixed columns
Coin0506I Presolve 26 (0) rows, 15 (0) columns and 76 (0) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Coin0511I After Postsolve, objective 91.620412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Coin0511I After Postsolve, objective 91.620412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.62041157 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 15 columns (14 integer (14 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.022%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.45636
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.6667 iterations 14
Cbc0038I Solution found of -21.6667
Cbc0038I Relaxing continuous gives -21.6667
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 15 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -21.6667 to -53.6667 (0.00 seconds)
Cbc0038I Round again with cutoff of -57.4414
Cbc0038I Pass   2: suminf.    0.44198 (8) obj. -57.4414 iterations 8
Cbc0038I Pass   3: suminf.    0.40490 (10) obj. -57.4414 iterations 2
Cbc0038I Pass   4: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass   5: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass   6: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass   7: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass   8: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass   9: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  10: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  11: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  12: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  13: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  14: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  15: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  16: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  17: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  18: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  19: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  20: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  21: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  22: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  23: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  24: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  25: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  26: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  27: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  28: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  29: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  30: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  31: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 15 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -53.6667 - took 0.02 seconds
Cbc0012I Integer solution of -53.6667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -91.412347 to -91.412347 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -53.6667, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-25) rows, 45 (-21) columns and 344 (-379) elements
Clp1000I sum of infeasibilities 2.62639e-08 - average 6.10788e-10, 37 fixed columns
Coin0506I Presolve 8 (-35) rows, 8 (-37) columns and 21 (-323) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 331.94942
Clp0000I Optimal - objective value 331.94942
Coin0511I After Postsolve, objective 331.94942, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3462612 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 508.45036
Clp0000I Optimal - objective value 508.45036
Clp0000I Optimal - objective value 508.45036
Coin0511I After Postsolve, objective 508.45036, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 508.4503559 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 46 columns (46 integer (46 of which binary)) and 323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.45787
Cbc0038I Pass   1: suminf.    0.07921 (4) obj. -126.822 iterations 25
Cbc0038I Solution found of 80
Cbc0038I Rounding solution of 20 is better than previous of 80

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 46 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 20 to -113.667 (0.01 seconds)
Cbc0038I Round again with cutoff of -115.945
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18182 (1) obj. -127.848 iterations 2
Cbc0038I Pass   3: suminf.    0.06701 (1) obj. -115.945 iterations 6
Cbc0038I Pass   4: suminf.    0.17647 (1) obj. -119.667 iterations 1
Cbc0038I Pass   5: suminf.    0.65016 (4) obj. -115.945 iterations 12
Cbc0038I Pass   6: suminf.    0.47950 (3) obj. -115.945 iterations 3
Cbc0038I Pass   7: suminf.    0.37814 (3) obj. -115.945 iterations 4
Cbc0038I Pass   8: suminf.    0.18182 (1) obj. -120.848 iterations 2
Cbc0038I Pass   9: suminf.    0.37771 (2) obj. -115.945 iterations 6
Cbc0038I Pass  10: suminf.    1.46533 (7) obj. -115.945 iterations 18
Cbc0038I Pass  11: suminf.    0.78640 (3) obj. -115.945 iterations 6
Cbc0038I Pass  12: suminf.    0.34146 (3) obj. -115.945 iterations 5
Cbc0038I Pass  13: suminf.    0.18466 (2) obj. -115.945 iterations 1
Cbc0038I Pass  14: suminf.    0.60481 (2) obj. -115.945 iterations 3
Cbc0038I Pass  15: suminf.    0.69027 (5) obj. -115.945 iterations 7
Cbc0038I Pass  16: suminf.    0.10000 (1) obj. -118.567 iterations 4
Cbc0038I Solution found of -117.667
Cbc0038I Rounding solution of -126.667 is better than previous of -117.667

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 46 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -128.624
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  17: suminf.    0.20462 (2) obj. -128.624 iterations 1
Cbc0038I Pass  18: suminf.    0.55796 (2) obj. -128.624 iterations 15
Cbc0038I Pass  19: suminf.    0.89957 (5) obj. -128.624 iterations 7
Cbc0038I Pass  20: suminf.    0.89957 (5) obj. -128.624 iterations 0
Cbc0038I Pass  21: suminf.    0.98118 (4) obj. -128.624 iterations 2
Cbc0038I Pass  22: suminf.    0.26344 (2) obj. -128.624 iterations 5
Cbc0038I Pass  23: suminf.    0.41986 (2) obj. -128.624 iterations 12
Cbc0038I Pass  24: suminf.    2.00766 (10) obj. -128.624 iterations 13
Cbc0038I Pass  25: suminf.    0.73626 (4) obj. -128.624 iterations 6
Cbc0038I Pass  26: suminf.    0.77402 (4) obj. -128.624 iterations 2
Cbc0038I Pass  27: suminf.    1.26039 (8) obj. -128.624 iterations 12
Cbc0038I Pass  28: suminf.    0.42942 (4) obj. -128.624 iterations 10
Cbc0038I Pass  29: suminf.    0.43762 (5) obj. -128.624 iterations 6
Cbc0038I Pass  30: suminf.    0.83096 (6) obj. -128.624 iterations 9
Cbc0038I Pass  31: suminf.    0.11638 (1) obj. -128.624 iterations 6
Cbc0038I Pass  32: suminf.    0.11765 (1) obj. -128.667 iterations 5
Cbc0038I Pass  33: suminf.    0.92942 (7) obj. -128.624 iterations 12
Cbc0038I Pass  34: suminf.    0.92942 (7) obj. -128.624 iterations 0
Cbc0038I Pass  35: suminf.    0.76586 (7) obj. -128.624 iterations 5
Cbc0038I Pass  36: suminf.    0.22684 (3) obj. -128.624 iterations 12
Cbc0038I Pass  37: suminf.    0.34680 (4) obj. -128.624 iterations 5
Cbc0038I Pass  38: suminf.    0.53720 (6) obj. -128.624 iterations 10
Cbc0038I Pass  39: suminf.    0.38816 (4) obj. -128.624 iterations 8
Cbc0038I Pass  40: suminf.    0.41870 (5) obj. -128.624 iterations 2
Cbc0038I Pass  41: suminf.    0.71544 (6) obj. -128.624 iterations 7
Cbc0038I Pass  42: suminf.    0.26576 (3) obj. -128.624 iterations 8
Cbc0038I Pass  43: suminf.    0.29214 (4) obj. -128.624 iterations 3
Cbc0038I Pass  44: suminf.    0.60938 (5) obj. -128.624 iterations 10
Cbc0038I Pass  45: suminf.    0.26576 (3) obj. -128.624 iterations 7
Cbc0038I Pass  46: suminf.    0.29214 (4) obj. -128.624 iterations 3
Cbc0038I Rounding solution of -127.667 is better than previous of -126.667

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 46 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -130.972
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 4
Cbc0038I Pass  46: suminf.    0.27368 (2) obj. -130.972 iterations 0
Cbc0038I Pass  47: suminf.    0.39581 (2) obj. -130.972 iterations 14
Cbc0038I Pass  48: suminf.    0.83395 (5) obj. -130.972 iterations 5
Cbc0038I Pass  49: suminf.    0.50928 (4) obj. -130.972 iterations 4
Cbc0038I Pass  50: suminf.    0.74998 (4) obj. -130.972 iterations 2
Cbc0038I Pass  51: suminf.    1.24607 (6) obj. -130.972 iterations 5
Cbc0038I Pass  52: suminf.    0.63428 (4) obj. -130.972 iterations 3
Cbc0038I Pass  53: suminf.    0.68093 (4) obj. -130.972 iterations 2
Cbc0038I Pass  54: suminf.    1.04413 (6) obj. -130.972 iterations 5
Cbc0038I Pass  55: suminf.    1.04413 (6) obj. -130.972 iterations 2
Cbc0038I Pass  56: suminf.    0.99386 (5) obj. -130.972 iterations 2
Cbc0038I Pass  57: suminf.    0.50928 (4) obj. -130.972 iterations 7
Cbc0038I Pass  58: suminf.    0.74998 (4) obj. -130.972 iterations 2
Cbc0038I Pass  59: suminf.    1.22421 (7) obj. -130.972 iterations 9
Cbc0038I Pass  60: suminf.    0.63428 (4) obj. -130.972 iterations 6
Cbc0038I Pass  61: suminf.    0.68093 (4) obj. -130.972 iterations 2
Cbc0038I Pass  62: suminf.    1.21310 (6) obj. -130.972 iterations 5
Cbc0038I Pass  63: suminf.    0.63428 (4) obj. -130.972 iterations 5
Cbc0038I Pass  64: suminf.    0.68093 (4) obj. -130.972 iterations 2
Cbc0038I Pass  65: suminf.    1.04413 (6) obj. -130.972 iterations 4
Cbc0038I Pass  66: suminf.    1.04413 (6) obj. -130.972 iterations 0
Cbc0038I Pass  67: suminf.    0.99386 (5) obj. -130.972 iterations 7
Cbc0038I Pass  68: suminf.    0.50928 (4) obj. -130.972 iterations 7
Cbc0038I Pass  69: suminf.    0.74998 (4) obj. -130.972 iterations 2
Cbc0038I Pass  70: suminf.    1.08318 (6) obj. -130.972 iterations 4
Cbc0038I Pass  71: suminf.    1.21310 (6) obj. -130.972 iterations 5
Cbc0038I Pass  72: suminf.    0.63428 (4) obj. -130.972 iterations 8
Cbc0038I Pass  73: suminf.    0.68093 (4) obj. -130.972 iterations 2
Cbc0038I Pass  74: suminf.    1.04413 (6) obj. -130.972 iterations 4
Cbc0038I Pass  75: suminf.    1.04413 (6) obj. -130.972 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -127.667 - took 0.02 seconds
Cbc0012I Integer solution of -127.6667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 43 rows 46 columns, reduced to 11 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -136.45072 to -136.45072 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -127.6667, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-43) rows, 15 (-20) columns and 76 (-119) elements
Clp1000I sum of infeasibilities 2.43132e-07 - average 9.35122e-09, 0 fixed columns
Coin0506I Presolve 26 (0) rows, 15 (0) columns and 76 (0) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Coin0511I After Postsolve, objective 91.620412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Clp0000I Optimal - objective value 91.620412
Coin0511I After Postsolve, objective 91.620412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.62041157 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 15 columns (14 integer (14 of which binary)) and 77 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.022%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.45636
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -21.6667 iterations 14
Cbc0038I Solution found of -21.6667
Cbc0038I Relaxing continuous gives -21.6667
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 15 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -21.6667 to -53.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -57.4414
Cbc0038I Pass   2: suminf.    0.44198 (8) obj. -57.4414 iterations 8
Cbc0038I Pass   3: suminf.    0.40490 (10) obj. -57.4414 iterations 2
Cbc0038I Pass   4: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass   5: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass   6: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass   7: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass   8: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass   9: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  10: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  11: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  12: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  13: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  14: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  15: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  16: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  17: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  18: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  19: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  20: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  21: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  22: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  23: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  24: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  25: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  26: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I Pass  27: suminf.    0.41151 (9) obj. -57.4414 iterations 6
Cbc0038I Pass  28: suminf.    0.40490 (10) obj. -57.4414 iterations 1
Cbc0038I Pass  29: suminf.    3.80630 (10) obj. -57.4414 iterations 9
Cbc0038I Pass  30: suminf.    2.53706 (6) obj. -57.4414 iterations 5
Cbc0038I Pass  31: suminf.    1.73972 (5) obj. -57.4414 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 26 rows 15 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -53.6667 - took 0.01 seconds
Cbc0012I Integer solution of -53.6667 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -91.412347 to -91.412347 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -53.6667, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-33) rows, 38 (-29) columns and 253 (-471) elements
Clp1000I sum of infeasibilities 2.69768e-08 - average 7.49354e-10, 4 fixed columns
Coin0506I Presolve 29 (-7) rows, 31 (-7) columns and 169 (-84) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 140.40987
Clp0000I Optimal - objective value 140.40987
Coin0511I After Postsolve, objective 140.40987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 140.40987
Clp0000I Optimal - objective value 140.40987
Clp0000I Optimal - objective value 140.40987
Coin0511I After Postsolve, objective 140.40987, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 140.4098673 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 42 columns (42 integer (42 of which binary)) and 269 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.891%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 1.44599
Cbc0038I Pass   1: suminf.    0.96344 (9) obj. -45.2056 iterations 18
Cbc0038I Solution found of 7
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 42 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 0.70633
Cbc0038I Pass   2: suminf.    0.96344 (9) obj. -45.2056 iterations 0
Cbc0038I Pass   3: suminf.    0.06841 (1) obj. 0.70633 iterations 16
Cbc0038I Pass   4: suminf.    0.10000 (1) obj. -2.2 iterations 1
Cbc0038I Pass   5: suminf.    0.59286 (3) obj. 0.70633 iterations 16
Cbc0038I Pass   6: suminf.    0.19930 (2) obj. -4.95105 iterations 3
Cbc0038I Pass   7: suminf.    0.15385 (1) obj. -0.769231 iterations 1
Cbc0038I Pass   8: suminf.    0.36569 (2) obj. 0.70633 iterations 3
Cbc0038I Pass   9: suminf.    0.33450 (3) obj. 0.70633 iterations 8
Cbc0038I Pass  10: suminf.    0.33450 (3) obj. 0.70633 iterations 0
Cbc0038I Pass  11: suminf.    0.57265 (2) obj. 0.70633 iterations 4
Cbc0038I Pass  12: suminf.    0.13028 (2) obj. 0.70633 iterations 2
Cbc0038I Pass  13: suminf.    0.24412 (4) obj. 0.70633 iterations 11
Cbc0038I Pass  14: suminf.    0.22442 (3) obj. 0.70633 iterations 3
Cbc0038I Pass  15: suminf.    0.66088 (2) obj. 0.70633 iterations 3
Cbc0038I Pass  16: suminf.    0.09767 (2) obj. 0.70633 iterations 1
Cbc0038I Pass  17: suminf.    0.07692 (1) obj. 0.615385 iterations 9
Cbc0038I Pass  18: suminf.    0.07692 (1) obj. 0.615385 iterations 0
Cbc0038I Pass  19: suminf.    0.62575 (2) obj. 0.70633 iterations 2
Cbc0038I Pass  20: suminf.    0.24965 (2) obj. -15.2755 iterations 1
Cbc0038I Pass  21: suminf.    0.74814 (3) obj. 0.70633 iterations 7
Cbc0038I Pass  22: suminf.    0.18463 (2) obj. 0.70633 iterations 2
Cbc0038I Pass  23: suminf.    0.42559 (2) obj. 0.70633 iterations 2
Cbc0038I Pass  24: suminf.    1.76224 (8) obj. 0.70633 iterations 17
Cbc0038I Pass  25: suminf.    0.46692 (5) obj. 0.70633 iterations 6
Cbc0038I Pass  26: suminf.    0.95258 (4) obj. 0.70633 iterations 7
Cbc0038I Pass  27: suminf.    0.69755 (3) obj. 0.70633 iterations 1
Cbc0038I Pass  28: suminf.    0.45019 (2) obj. 0.70633 iterations 3
Cbc0038I Pass  29: suminf.    0.18129 (2) obj. 0.70633 iterations 1
Cbc0038I Pass  30: suminf.    0.15202 (2) obj. 0.70633 iterations 15
Cbc0038I Pass  31: suminf.    0.15202 (2) obj. 0.70633 iterations 0
Cbc0038I Rounding solution of -5 is better than previous of 7

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 42 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -15.1872
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.96344 (9) obj. -45.2056 iterations 0
Cbc0038I Pass  32: suminf.    0.48198 (2) obj. -15.1872 iterations 15
Cbc0038I Pass  33: suminf.    0.25385 (2) obj. -30.9692 iterations 2
Cbc0038I Pass  34: suminf.    0.15385 (1) obj. -21.7692 iterations 1
Cbc0038I Pass  35: suminf.    0.34476 (3) obj. -16.3874 iterations 9
Cbc0038I Pass  36: suminf.    0.34476 (3) obj. -16.3874 iterations 1
Cbc0038I Pass  37: suminf.    0.45332 (2) obj. -15.1872 iterations 4
Cbc0038I Pass  38: suminf.    0.18013 (2) obj. -15.1872 iterations 1
Cbc0038I Pass  39: suminf.    0.45332 (2) obj. -15.1872 iterations 2
Cbc0038I Pass  40: suminf.    0.50947 (3) obj. -15.1872 iterations 5
Cbc0038I Pass  41: suminf.    0.28388 (3) obj. -15.1872 iterations 2
Cbc0038I Pass  42: suminf.    0.36508 (2) obj. -15.1872 iterations 4
Cbc0038I Pass  43: suminf.    0.21274 (2) obj. -15.1872 iterations 2
Cbc0038I Pass  44: suminf.    0.93602 (8) obj. -15.1872 iterations 17
Cbc0038I Pass  45: suminf.    0.51402 (4) obj. -15.1872 iterations 1
Cbc0038I Pass  46: suminf.    0.58091 (3) obj. -15.1872 iterations 7
Cbc0038I Pass  47: suminf.    0.58091 (3) obj. -15.1872 iterations 1
Cbc0038I Pass  48: suminf.    0.54286 (3) obj. -15.1872 iterations 1
Cbc0038I Pass  49: suminf.    0.33082 (3) obj. -15.1872 iterations 1
Cbc0038I Pass  50: suminf.    0.96090 (3) obj. -15.1872 iterations 3
Cbc0038I Pass  51: suminf.    1.35431 (6) obj. -15.1872 iterations 11
Cbc0038I Pass  52: suminf.    0.67860 (5) obj. -15.1872 iterations 3
Cbc0038I Pass  53: suminf.    0.27685 (2) obj. -15.1872 iterations 4
Cbc0038I Pass  54: suminf.    0.24535 (2) obj. -15.1872 iterations 1
Cbc0038I Pass  55: suminf.    0.51721 (4) obj. -15.1872 iterations 13
Cbc0038I Pass  56: suminf.    0.51721 (4) obj. -15.1872 iterations 0
Cbc0038I Pass  57: suminf.    0.75912 (5) obj. -15.1872 iterations 3
Cbc0038I Pass  58: suminf.    0.54659 (4) obj. -15.1872 iterations 1
Cbc0038I Pass  59: suminf.    0.66946 (4) obj. -15.1872 iterations 2
Cbc0038I Pass  60: suminf.    0.56247 (4) obj. -15.1872 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -5 - took 0.02 seconds
Cbc0012I Integer solution of -5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -53.6667 found by DiveCoefficient after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -55.935796 to -55.935796 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -53.6667, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

