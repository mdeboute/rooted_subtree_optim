Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 24 (-25) rows, 16 (-9) columns and 73 (-62) elements
Clp0000I Optimal - objective value 126.19555
Coin0511I After Postsolve, objective 126.19555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.1955547 - 13 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 16 columns (15 integer (15 of which binary)) and 74 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.114%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.46967
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -67.2858 iterations 11
Cbc0038I Solution found of -67.2858
Cbc0038I Relaxing continuous gives -67.2858
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -73.1768
Cbc0038I Pass   2: suminf.    0.06694 (1) obj. -73.1768 iterations 1
Cbc0038I Pass   3: suminf.    0.29441 (2) obj. -73.1768 iterations 3
Cbc0038I Pass   4: suminf.    0.64117 (4) obj. -73.1768 iterations 5
Cbc0038I Pass   5: suminf.    0.62076 (3) obj. -73.1768 iterations 1
Cbc0038I Pass   6: suminf.    0.61503 (3) obj. -73.1768 iterations 1
Cbc0038I Pass   7: suminf.    0.53348 (3) obj. -73.1768 iterations 2
Cbc0038I Pass   8: suminf.    1.41928 (3) obj. -73.1768 iterations 1
Cbc0038I Pass   9: suminf.    0.53348 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  10: suminf.    0.51656 (2) obj. -73.1768 iterations 8
Cbc0038I Pass  11: suminf.    0.51656 (2) obj. -73.1768 iterations 1
Cbc0038I Pass  12: suminf.    0.45878 (1) obj. -73.1768 iterations 2
Cbc0038I Pass  13: suminf.    0.28948 (2) obj. -73.1768 iterations 2
Cbc0038I Pass  14: suminf.    0.36624 (2) obj. -73.1768 iterations 2
Cbc0038I Pass  15: suminf.    0.36624 (2) obj. -73.1768 iterations 2
Cbc0038I Pass  16: suminf.    0.66256 (3) obj. -73.1768 iterations 3
Cbc0038I Pass  17: suminf.    1.30271 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  18: suminf.    0.52533 (3) obj. -73.1768 iterations 6
Cbc0038I Pass  19: suminf.    0.38740 (2) obj. -73.1768 iterations 3
Cbc0038I Pass  20: suminf.    0.39631 (2) obj. -73.1768 iterations 2
Cbc0038I Pass  21: suminf.    0.35311 (2) obj. -73.1768 iterations 1
Cbc0038I Pass  22: suminf.    0.73628 (4) obj. -73.1768 iterations 3
Cbc0038I Pass  23: suminf.    0.71588 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  24: suminf.    0.80586 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  25: suminf.    0.60068 (3) obj. -73.1768 iterations 2
Cbc0038I Pass  26: suminf.    0.60068 (3) obj. -73.1768 iterations 0
Cbc0038I Pass  27: suminf.    1.31584 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  28: suminf.    1.31584 (3) obj. -73.1768 iterations 0
Cbc0038I Pass  29: suminf.    1.18587 (5) obj. -73.1768 iterations 6
Cbc0038I Pass  30: suminf.    0.35311 (2) obj. -73.1768 iterations 6
Cbc0038I Pass  31: suminf.    0.73628 (4) obj. -73.1768 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -67.2858 - took 0.01 seconds
Cbc0012I Integer solution of -67.28576 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 16 columns, reduced to 6 rows 6 columns
Cbc0031I 2 added rows had average density of 6.5
Cbc0013I At root node, 34 cuts changed objective from -126.19555 to -67.28576 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 2.7 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.28575999999998, took 8 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-17) rows, 37 (-9) columns and 244 (-144) elements
Clp1000I sum of infeasibilities 0 - average 0, 33 fixed columns
Coin0506I Presolve 4 (-27) rows, 4 (-33) columns and 12 (-232) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 132.39634
Clp0000I Optimal - objective value 132.39634
Coin0511I After Postsolve, objective 132.39634, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1149997 - largest nonzero change 2.4036697e-05 ( 0.0021869008%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 210.84236
Clp0000I Optimal - objective value 210.84236
Clp0000I Optimal - objective value 210.84236
Coin0511I After Postsolve, objective 210.84236, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 210.8423599 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 37 columns (37 integer (37 of which binary)) and 261 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.865%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 4.23258
Cbc0038I Solution found of -62.1429
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -68.2179
Cbc0038I Pass   1: suminf.    0.09067 (1) obj. -68.2179 iterations 24
Cbc0038I Pass   2: suminf.    0.20512 (1) obj. -75.8861 iterations 1
Cbc0038I Pass   3: suminf.    2.29668 (7) obj. -68.2179 iterations 8
Cbc0038I Pass   4: suminf.    0.85515 (3) obj. -73.566 iterations 4
Cbc0038I Pass   5: suminf.    0.47182 (4) obj. -68.2179 iterations 4
Cbc0038I Pass   6: suminf.    0.90348 (5) obj. -68.2179 iterations 2
Cbc0038I Pass   7: suminf.    0.53076 (2) obj. -68.2179 iterations 3
Cbc0038I Solution found of -77
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -77 to -95.1429 (0.01 seconds)
Cbc0038I Round again with cutoff of -100.693
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.92706 (5) obj. -100.693 iterations 2
Cbc0038I Pass   9: suminf.    1.40960 (6) obj. -100.693 iterations 2
Cbc0038I Pass  10: suminf.    0.19359 (2) obj. -100.693 iterations 3
Cbc0038I Pass  11: suminf.    0.08283 (1) obj. -100.693 iterations 3
Cbc0038I Pass  12: suminf.    0.13195 (1) obj. -103.984 iterations 3
Cbc0038I Pass  13: suminf.    0.69666 (6) obj. -100.693 iterations 7
Cbc0038I Pass  14: suminf.    1.86138 (7) obj. -100.693 iterations 13
Cbc0038I Pass  15: suminf.    1.14891 (6) obj. -100.693 iterations 8
Cbc0038I Pass  16: suminf.    2.55491 (8) obj. -100.693 iterations 4
Cbc0038I Pass  17: suminf.    1.14891 (6) obj. -100.693 iterations 1
Cbc0038I Pass  18: suminf.    0.38160 (4) obj. -100.693 iterations 8
Cbc0038I Pass  19: suminf.    0.08283 (1) obj. -100.693 iterations 4
Cbc0038I Pass  20: suminf.    0.13195 (1) obj. -103.984 iterations 3
Cbc0038I Pass  21: suminf.    0.43872 (6) obj. -100.693 iterations 6
Cbc0038I Pass  22: suminf.    3.70668 (13) obj. -100.693 iterations 14
Cbc0038I Pass  23: suminf.    2.80828 (10) obj. -100.693 iterations 4
Cbc0038I Pass  24: suminf.    2.17642 (6) obj. -100.693 iterations 4
Cbc0038I Pass  25: suminf.    1.15290 (4) obj. -100.693 iterations 3
Cbc0038I Pass  26: suminf.    1.15290 (4) obj. -100.693 iterations 0
Cbc0038I Pass  27: suminf.    1.38881 (4) obj. -100.693 iterations 1
Cbc0038I Pass  28: suminf.    4.51735 (13) obj. -100.693 iterations 15
Cbc0038I Pass  29: suminf.    2.41057 (7) obj. -100.693 iterations 9
Cbc0038I Pass  30: suminf.    2.17642 (6) obj. -100.693 iterations 1
Cbc0038I Pass  31: suminf.    1.15290 (4) obj. -100.693 iterations 3
Cbc0038I Pass  32: suminf.    1.15290 (4) obj. -100.693 iterations 0
Cbc0038I Pass  33: suminf.    1.38881 (4) obj. -100.693 iterations 1
Cbc0038I Pass  34: suminf.    3.59041 (12) obj. -100.693 iterations 8
Cbc0038I Pass  35: suminf.    2.17332 (6) obj. -100.693 iterations 6
Cbc0038I Pass  36: suminf.    1.86561 (5) obj. -100.693 iterations 2
Cbc0038I Pass  37: suminf.    1.15290 (4) obj. -100.693 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -95.1429 - took 0.01 seconds
Cbc0012I Integer solution of -95.1429 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -122.8915 to -122.8915 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -95.1429, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 24 (-25) rows, 16 (-9) columns and 73 (-62) elements
Clp0000I Optimal - objective value 126.19555
Coin0511I After Postsolve, objective 126.19555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.1955547 - 13 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 16 columns (15 integer (15 of which binary)) and 74 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.114%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.46967
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -67.2858 iterations 11
Cbc0038I Solution found of -67.2858
Cbc0038I Relaxing continuous gives -67.2858
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -73.1768
Cbc0038I Pass   2: suminf.    0.06694 (1) obj. -73.1768 iterations 1
Cbc0038I Pass   3: suminf.    0.29441 (2) obj. -73.1768 iterations 3
Cbc0038I Pass   4: suminf.    0.64117 (4) obj. -73.1768 iterations 5
Cbc0038I Pass   5: suminf.    0.62076 (3) obj. -73.1768 iterations 1
Cbc0038I Pass   6: suminf.    0.61503 (3) obj. -73.1768 iterations 1
Cbc0038I Pass   7: suminf.    0.53348 (3) obj. -73.1768 iterations 2
Cbc0038I Pass   8: suminf.    1.41928 (3) obj. -73.1768 iterations 1
Cbc0038I Pass   9: suminf.    0.53348 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  10: suminf.    0.51656 (2) obj. -73.1768 iterations 8
Cbc0038I Pass  11: suminf.    0.51656 (2) obj. -73.1768 iterations 1
Cbc0038I Pass  12: suminf.    0.45878 (1) obj. -73.1768 iterations 2
Cbc0038I Pass  13: suminf.    0.28948 (2) obj. -73.1768 iterations 2
Cbc0038I Pass  14: suminf.    0.36624 (2) obj. -73.1768 iterations 2
Cbc0038I Pass  15: suminf.    0.36624 (2) obj. -73.1768 iterations 2
Cbc0038I Pass  16: suminf.    0.66256 (3) obj. -73.1768 iterations 3
Cbc0038I Pass  17: suminf.    1.30271 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  18: suminf.    0.52533 (3) obj. -73.1768 iterations 6
Cbc0038I Pass  19: suminf.    0.38740 (2) obj. -73.1768 iterations 3
Cbc0038I Pass  20: suminf.    0.39631 (2) obj. -73.1768 iterations 2
Cbc0038I Pass  21: suminf.    0.35311 (2) obj. -73.1768 iterations 1
Cbc0038I Pass  22: suminf.    0.73628 (4) obj. -73.1768 iterations 3
Cbc0038I Pass  23: suminf.    0.71588 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  24: suminf.    0.80586 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  25: suminf.    0.60068 (3) obj. -73.1768 iterations 2
Cbc0038I Pass  26: suminf.    0.60068 (3) obj. -73.1768 iterations 0
Cbc0038I Pass  27: suminf.    1.31584 (3) obj. -73.1768 iterations 1
Cbc0038I Pass  28: suminf.    1.31584 (3) obj. -73.1768 iterations 0
Cbc0038I Pass  29: suminf.    1.18587 (5) obj. -73.1768 iterations 6
Cbc0038I Pass  30: suminf.    0.35311 (2) obj. -73.1768 iterations 6
Cbc0038I Pass  31: suminf.    0.73628 (4) obj. -73.1768 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 16 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -67.2858 - took 0.01 seconds
Cbc0012I Integer solution of -67.28576 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 16 columns, reduced to 6 rows 6 columns
Cbc0031I 2 added rows had average density of 6.5
Cbc0013I At root node, 34 cuts changed objective from -126.19555 to -67.28576 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 2.7 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.28575999999998, took 8 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-20) rows, 35 (-12) columns and 213 (-176) elements
Clp1000I sum of infeasibilities 3.08238e-06 - average 1.06289e-07, 29 fixed columns
Coin0506I Presolve 0 (-29) rows, 0 (-35) columns and 0 (-213) elements
Clp0000I Optimal - objective value 18.048443
Clp0000I Optimal - objective value 18.048443
Coin0511I After Postsolve, objective 18.048443, infeasibilities - dual 11.177561 (2), primal 0 (0)
Coin0512I Presolved model was optimal, full model needs cleaning up
Clp0014I Perturbing problem by 0.001% of 1.3840202 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 149.76273
Clp0000I Optimal - objective value 149.76273
Clp0000I Optimal - objective value 149.76273
Coin0511I After Postsolve, objective 149.76273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 149.762735 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 29 rows, 35 columns (35 integer (35 of which binary)) and 218 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.928%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.29781
Cbc0038I Pass   1: suminf.    1.90238 (6) obj. -49.0845 iterations 19
Cbc0038I Pass   2: suminf.    1.90238 (6) obj. -49.0845 iterations 1
Cbc0038I Solution found of -33
Cbc0038I Rounding solution of -48.4286 is better than previous of -33

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -54.7251
Cbc0038I Pass   3: suminf.    1.98657 (7) obj. -54.7251 iterations 1
Cbc0038I Pass   4: suminf.    1.98657 (7) obj. -54.7251 iterations 1
Cbc0038I Pass   5: suminf.    0.49610 (1) obj. -66.7615 iterations 7
Cbc0038I Pass   6: suminf.    0.32426 (1) obj. -54.7251 iterations 1
Cbc0038I Pass   7: suminf.    2.22715 (7) obj. -54.7251 iterations 9
Cbc0038I Pass   8: suminf.    2.22715 (7) obj. -54.7251 iterations 0
Cbc0038I Pass   9: suminf.    0.54114 (2) obj. -54.7251 iterations 7
Cbc0038I Pass  10: suminf.    0.35411 (1) obj. -54.7251 iterations 1
Cbc0038I Pass  11: suminf.    0.49610 (1) obj. -64.7615 iterations 1
Cbc0038I Pass  12: suminf.    1.07110 (3) obj. -65.9115 iterations 3
Cbc0038I Pass  13: suminf.    0.42873 (1) obj. -54.7251 iterations 3
Cbc0038I Pass  14: suminf.    0.49610 (1) obj. -59.7615 iterations 1
Cbc0038I Pass  15: suminf.    3.26966 (9) obj. -54.7251 iterations 10
Cbc0038I Pass  16: suminf.    2.77605 (9) obj. -54.7251 iterations 4
Cbc0038I Pass  17: suminf.    0.38647 (2) obj. -54.7251 iterations 11
Cbc0038I Pass  18: suminf.    0.17287 (1) obj. -54.7251 iterations 1
Cbc0038I Pass  19: suminf.    0.47341 (1) obj. -74.8617 iterations 1
Cbc0038I Pass  20: suminf.    2.07792 (5) obj. -54.7251 iterations 6
Cbc0038I Pass  21: suminf.    0.82943 (2) obj. -64.4281 iterations 4
Cbc0038I Pass  22: suminf.    0.36903 (1) obj. -54.7251 iterations 2
Cbc0038I Pass  23: suminf.    0.49610 (1) obj. -63.7615 iterations 1
Cbc0038I Pass  24: suminf.    2.85371 (7) obj. -54.7251 iterations 8
Cbc0038I Pass  25: suminf.    2.85371 (7) obj. -54.7251 iterations 2
Cbc0038I Pass  26: suminf.    3.74214 (11) obj. -54.7251 iterations 6
Cbc0038I Pass  27: suminf.    0.58839 (2) obj. -54.7251 iterations 16
Cbc0038I Pass  28: suminf.    0.44366 (1) obj. -54.7251 iterations 1
Cbc0038I Pass  29: suminf.    0.49610 (1) obj. -58.7615 iterations 1
Cbc0038I Pass  30: suminf.    2.80822 (8) obj. -54.7251 iterations 13
Cbc0038I Pass  31: suminf.    0.36264 (2) obj. -54.7251 iterations 9
Cbc0038I Pass  32: suminf.    0.22098 (1) obj. -56.2339 iterations 2
Cbc0038I Rounding solution of -63.5715 is better than previous of -48.4286

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -73.136
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.26136 (7) obj. -73.136 iterations 0
Cbc0038I Pass  33: suminf.    2.26136 (7) obj. -73.136 iterations 1
Cbc0038I Pass  34: suminf.    0.96479 (3) obj. -73.136 iterations 12
Cbc0038I Pass  35: suminf.    1.09556 (3) obj. -73.136 iterations 4
Cbc0038I Pass  36: suminf.    0.96479 (3) obj. -73.136 iterations 5
Cbc0038I Pass  37: suminf.    2.84512 (8) obj. -73.136 iterations 9
Cbc0038I Pass  38: suminf.    0.96507 (3) obj. -73.136 iterations 6
Cbc0038I Pass  39: suminf.    0.53779 (2) obj. -73.136 iterations 3
Cbc0038I Pass  40: suminf.    0.53779 (2) obj. -73.136 iterations 0
Cbc0038I Pass  41: suminf.    0.72098 (2) obj. -78.4482 iterations 3
Cbc0038I Pass  42: suminf.    0.64169 (2) obj. -73.136 iterations 1
Cbc0038I Pass  43: suminf.    1.04942 (4) obj. -73.136 iterations 2
Cbc0038I Pass  44: suminf.    0.64169 (2) obj. -73.136 iterations 2
Cbc0038I Pass  45: suminf.    0.53779 (2) obj. -73.136 iterations 2
Cbc0038I Pass  46: suminf.    0.53779 (2) obj. -73.136 iterations 0
Cbc0038I Pass  47: suminf.    0.72098 (2) obj. -78.4482 iterations 3
Cbc0038I Pass  48: suminf.    0.72878 (3) obj. -73.136 iterations 4
Cbc0038I Pass  49: suminf.    2.06895 (8) obj. -73.136 iterations 13
Cbc0038I Pass  50: suminf.    1.36145 (5) obj. -73.136 iterations 7
Cbc0038I Pass  51: suminf.    0.22449 (2) obj. -80.7966 iterations 4
Cbc0038I Pass  52: suminf.    0.08732 (1) obj. -73.136 iterations 2
Cbc0038I Pass  53: suminf.    0.19049 (1) obj. -80.0484 iterations 1
Cbc0038I Pass  54: suminf.    1.05335 (3) obj. -73.136 iterations 6
Cbc0038I Pass  55: suminf.    0.66911 (2) obj. -73.136 iterations 2
Cbc0038I Pass  56: suminf.    0.75610 (2) obj. -75.6585 iterations 3
Cbc0038I Pass  57: suminf.    0.71845 (2) obj. -73.136 iterations 1
Cbc0038I Pass  58: suminf.    0.66911 (2) obj. -73.136 iterations 2
Cbc0038I Pass  59: suminf.    1.76773 (7) obj. -73.136 iterations 8
Cbc0038I Pass  60: suminf.    1.58689 (5) obj. -73.136 iterations 5
Cbc0038I Pass  61: suminf.    1.58689 (5) obj. -73.136 iterations 1
Cbc0038I Rounding solution of -67.2858 is better than previous of -63.5715

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -84.6132
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.47881 (8) obj. -84.6132 iterations 2
Cbc0038I Pass  62: suminf.    2.47881 (8) obj. -84.6132 iterations 1
Cbc0038I Pass  63: suminf.    2.19097 (7) obj. -84.6132 iterations 14
Cbc0038I Pass  64: suminf.    2.19097 (7) obj. -84.6132 iterations 1
Cbc0038I Pass  65: suminf.    0.94465 (3) obj. -85.6135 iterations 8
Cbc0038I Pass  66: suminf.    0.84463 (3) obj. -84.6132 iterations 3
Cbc0038I Pass  67: suminf.    2.63868 (7) obj. -84.6132 iterations 10
Cbc0038I Pass  68: suminf.    2.33001 (8) obj. -84.6132 iterations 3
Cbc0038I Pass  69: suminf.    2.32616 (7) obj. -84.6132 iterations 1
Cbc0038I Pass  70: suminf.    2.35101 (7) obj. -84.6132 iterations 7
Cbc0038I Pass  71: suminf.    1.45343 (5) obj. -84.6132 iterations 3
Cbc0038I Pass  72: suminf.    1.11129 (4) obj. -84.6132 iterations 3
Cbc0038I Pass  73: suminf.    0.94465 (3) obj. -85.6135 iterations 4
Cbc0038I Pass  74: suminf.    0.84463 (3) obj. -84.6132 iterations 2
Cbc0038I Pass  75: suminf.    2.29279 (6) obj. -84.6132 iterations 8
Cbc0038I Pass  76: suminf.    2.04279 (5) obj. -84.6132 iterations 3
Cbc0038I Pass  77: suminf.    2.07239 (5) obj. -84.6132 iterations 3
Cbc0038I Pass  78: suminf.    2.07239 (5) obj. -84.6132 iterations 3
Cbc0038I Pass  79: suminf.    2.04279 (5) obj. -84.6132 iterations 6
Cbc0038I Pass  80: suminf.    0.84636 (4) obj. -84.6132 iterations 6
Cbc0038I Pass  81: suminf.    0.79096 (2) obj. -84.6132 iterations 2
Cbc0038I Pass  82: suminf.    0.48943 (3) obj. -84.6132 iterations 6
Cbc0038I Pass  83: suminf.    0.48943 (3) obj. -84.6132 iterations 0
Cbc0038I Pass  84: suminf.    0.79003 (3) obj. -87.6192 iterations 3
Cbc0038I Pass  85: suminf.    1.23303 (4) obj. -84.6132 iterations 5
Cbc0038I Pass  86: suminf.    2.17777 (7) obj. -84.6132 iterations 14
Cbc0038I Pass  87: suminf.    1.63734 (5) obj. -84.6132 iterations 7
Cbc0038I Pass  88: suminf.    1.29593 (3) obj. -84.6132 iterations 2
Cbc0038I Pass  89: suminf.    0.84071 (2) obj. -84.6132 iterations 1
Cbc0038I Pass  90: suminf.    0.48943 (3) obj. -84.6132 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -67.2858 - took 0.02 seconds
Cbc0012I Integer solution of -67.28576 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -111.39356 to -111.39356 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -67.28575999999998, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

