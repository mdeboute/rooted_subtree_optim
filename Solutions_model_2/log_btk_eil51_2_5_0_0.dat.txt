Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-13) rows, 51 (-2) columns and 278 (-25) elements
Clp1000I sum of infeasibilities 0.000338405 - average 3.67832e-06, 2 fixed columns
Coin0506I Presolve 89 (-3) rows, 49 (-2) columns and 268 (-10) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 34.263039
Clp0000I Optimal - objective value 34.263039
Coin0511I After Postsolve, objective 34.263039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.263039
Clp0000I Optimal - objective value 34.263039
Clp0000I Optimal - objective value 34.263039
Coin0511I After Postsolve, objective 34.263039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.26303922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 51 columns (50 integer (50 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 9.51559
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.64289 iterations 44
Cbc0038I Solution found of 6.64289
Cbc0038I Relaxing continuous gives 6.64289
Cbc0038I Rounding solution of -7.63764 is better than previous of 6.64289

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -10.3003
Cbc0038I Pass   2: suminf.    2.10213 (8) obj. -10.3003 iterations 14
Cbc0038I Pass   3: suminf.    2.34387 (7) obj. -10.3003 iterations 9
Cbc0038I Pass   4: suminf.    1.37923 (5) obj. -10.3003 iterations 8
Cbc0038I Pass   5: suminf.    1.54397 (6) obj. -10.3003 iterations 14
Cbc0038I Pass   6: suminf.    1.54397 (6) obj. -10.3003 iterations 1
Cbc0038I Pass   7: suminf.    1.38896 (6) obj. -10.3003 iterations 10
Cbc0038I Pass   8: suminf.    2.94752 (8) obj. -10.3003 iterations 9
Cbc0038I Pass   9: suminf.    2.05034 (6) obj. -10.3003 iterations 10
Cbc0038I Pass  10: suminf.    2.05034 (6) obj. -10.3003 iterations 0
Cbc0038I Pass  11: suminf.    1.54397 (6) obj. -10.3003 iterations 12
Cbc0038I Pass  12: suminf.    1.54397 (6) obj. -10.3003 iterations 1
Cbc0038I Pass  13: suminf.    1.38896 (6) obj. -10.3003 iterations 9
Cbc0038I Pass  14: suminf.    1.37923 (5) obj. -10.3003 iterations 1
Cbc0038I Pass  15: suminf.    1.54397 (6) obj. -10.3003 iterations 11
Cbc0038I Pass  16: suminf.    4.39386 (13) obj. -10.3003 iterations 13
Cbc0038I Pass  17: suminf.    2.85477 (10) obj. -10.3003 iterations 8
Cbc0038I Pass  18: suminf.    2.42075 (9) obj. -10.3003 iterations 1
Cbc0038I Pass  19: suminf.    2.62610 (8) obj. -10.3003 iterations 16
Cbc0038I Pass  20: suminf.    2.62610 (8) obj. -10.3003 iterations 0
Cbc0038I Pass  21: suminf.    3.12461 (9) obj. -10.3003 iterations 12
Cbc0038I Pass  22: suminf.    2.70003 (8) obj. -10.3003 iterations 2
Cbc0038I Pass  23: suminf.    3.56695 (13) obj. -10.3003 iterations 7
Cbc0038I Pass  24: suminf.    3.25133 (9) obj. -10.3003 iterations 9
Cbc0038I Pass  25: suminf.    2.71532 (8) obj. -10.3003 iterations 14
Cbc0038I Pass  26: suminf.    1.69771 (7) obj. -10.3003 iterations 10
Cbc0038I Pass  27: suminf.    1.69771 (7) obj. -10.3003 iterations 0
Cbc0038I Pass  28: suminf.    2.75824 (9) obj. -10.3003 iterations 9
Cbc0038I Pass  29: suminf.    2.49807 (8) obj. -10.3003 iterations 2
Cbc0038I Pass  30: suminf.    2.84479 (10) obj. -10.3003 iterations 7
Cbc0038I Pass  31: suminf.    2.74540 (8) obj. -10.3003 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 83 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -7.63764 - took 0.04 seconds
Cbc0012I Integer solution of -7.63764 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 92 rows 51 columns, reduced to 69 rows 39 columns
Cbc0031I 28 added rows had average density of 24.392857
Cbc0013I At root node, 28 cuts changed objective from -34.263039 to -26.231526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11062 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2148 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0004I Integer solution of -7.97951 found after 7567 iterations and 7 nodes (0.65 seconds)
Cbc0010I After 13 nodes, 6 on tree, -7.97951 best solution, best possible -26.231526 (0.67 seconds)
Cbc0004I Integer solution of -8.05709 found after 7802 iterations and 17 nodes (0.68 seconds)
Cbc0001I Search completed - best objective -8.057090000000002, took 8101 iterations and 24 nodes (0.68 seconds)
Cbc0032I Strong branching done 434 times (8941 iterations), fathomed 0 nodes and fixed 30 variables
Cbc0035I Maximum depth 8, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-30) rows, 82 (-20) columns and 996 (-582) elements
Clp1000I sum of infeasibilities 8.6711e-08 - average 1.17177e-09, 39 fixed columns
Coin0506I Presolve 36 (-38) rows, 43 (-39) columns and 152 (-844) elements
Clp0006I 0  Obj -22.654173 Dual inf 28.187474 (43)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.42943193 - largest nonzero change 2.7784594e-05 ( 0.0021869008%) - largest zero change 2.9069018e-05
Clp0000I Optimal - objective value -20.531764
Clp0000I Optimal - objective value -20.531764
Coin0511I After Postsolve, objective -20.531764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -20.531764 Dual inf 17.543912 (32)
Clp0014I Perturbing problem by 0.001% of 4.2759572 - largest nonzero change 2.3303229e-05 ( 0.001262127%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 46.891268
Clp0000I Optimal - objective value 46.891268
Clp0000I Optimal - objective value 46.891268
Coin0511I After Postsolve, objective 46.891268, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.8912683 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 82 columns (82 integer (82 of which binary)) and 998 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.711%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 4.62481
Cbc0038I Pass   1: suminf.    2.45149 (19) obj. -30.6934 iterations 7
Cbc0038I Pass   2: suminf.    1.03224 (9) obj. -14.3694 iterations 10
Cbc0038I Solution found of 1.50095
Cbc0038I Rounding solution of -2.42411 is better than previous of 1.50095

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 82 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -2.42411 to -3.54444 (0.02 seconds)
Cbc0038I Round again with cutoff of -6.91357
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.45149 (19) obj. -30.6934 iterations 0
Cbc0038I Pass   4: suminf.    0.66470 (4) obj. -6.91357 iterations 19
Cbc0038I Pass   5: suminf.    0.61002 (4) obj. -7.26175 iterations 3
Cbc0038I Pass   6: suminf.    0.60919 (4) obj. -6.91357 iterations 10
Cbc0038I Pass   7: suminf.    0.59383 (3) obj. -6.91357 iterations 3
Cbc0038I Pass   8: suminf.    0.35349 (3) obj. -6.95219 iterations 6
Cbc0038I Pass   9: suminf.    0.34081 (3) obj. -6.91357 iterations 4
Cbc0038I Pass  10: suminf.    0.33014 (3) obj. -7.04559 iterations 5
Cbc0038I Pass  11: suminf.    0.29712 (2) obj. -6.91357 iterations 4
Cbc0038I Pass  12: suminf.    0.36314 (3) obj. -6.91357 iterations 6
Cbc0038I Pass  13: suminf.    1.59581 (7) obj. -6.91357 iterations 22
Cbc0038I Pass  14: suminf.    1.16041 (7) obj. -6.91357 iterations 5
Cbc0038I Pass  15: suminf.    1.10152 (4) obj. -6.91357 iterations 9
Cbc0038I Pass  16: suminf.    1.10152 (4) obj. -6.91357 iterations 4
Cbc0038I Pass  17: suminf.    1.20520 (4) obj. -6.91357 iterations 4
Cbc0038I Pass  18: suminf.    1.20520 (4) obj. -6.91357 iterations 1
Cbc0038I Pass  19: suminf.    1.10152 (4) obj. -6.91357 iterations 3
Cbc0038I Pass  20: suminf.    2.52964 (12) obj. -6.91357 iterations 23
Cbc0038I Pass  21: suminf.    1.51750 (9) obj. -6.91357 iterations 7
Cbc0038I Pass  22: suminf.    0.96976 (4) obj. -6.91357 iterations 11
Cbc0038I Pass  23: suminf.    0.70061 (4) obj. -7.44623 iterations 3
Cbc0038I Pass  24: suminf.    0.92313 (3) obj. -6.91357 iterations 6
Cbc0038I Pass  25: suminf.    0.92313 (3) obj. -6.91357 iterations 0
Cbc0038I Pass  26: suminf.    0.85260 (3) obj. -6.91357 iterations 3
Cbc0038I Pass  27: suminf.    0.58612 (3) obj. -7.97947 iterations 2
Cbc0038I Pass  28: suminf.    0.92313 (3) obj. -6.91357 iterations 3
Cbc0038I Pass  29: suminf.    2.04614 (15) obj. -6.91357 iterations 38
Cbc0038I Pass  30: suminf.    2.01480 (11) obj. -6.91357 iterations 4
Cbc0038I Pass  31: suminf.    1.65270 (7) obj. -6.91357 iterations 14
Cbc0038I Pass  32: suminf.    1.46778 (11) obj. -7.54176 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 82 columns, reduced to 43 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -3.54444 to -4.97545 (0.07 seconds)
Cbc0038I Round again with cutoff of -12.9778
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.45149 (19) obj. -30.6934 iterations 0
Cbc0038I Pass  33: suminf.    1.20140 (7) obj. -12.9778 iterations 17
Cbc0038I Pass  34: suminf.    1.02585 (7) obj. -14.1509 iterations 3
Cbc0038I Pass  35: suminf.    0.83802 (6) obj. -12.9778 iterations 11
Cbc0038I Pass  36: suminf.    0.82412 (6) obj. -12.9778 iterations 2
Cbc0038I Pass  37: suminf.    1.08475 (6) obj. -12.9778 iterations 7
Cbc0038I Pass  38: suminf.    1.07678 (6) obj. -12.9778 iterations 6
Cbc0038I Pass  39: suminf.    0.70071 (6) obj. -12.9778 iterations 8
Cbc0038I Pass  40: suminf.    0.70071 (6) obj. -12.9778 iterations 2
Cbc0038I Pass  41: suminf.    1.08475 (6) obj. -12.9778 iterations 4
Cbc0038I Pass  42: suminf.    1.68970 (11) obj. -12.9778 iterations 21
Cbc0038I Pass  43: suminf.    1.68970 (11) obj. -12.9778 iterations 2
Cbc0038I Pass  44: suminf.    1.70271 (8) obj. -12.9778 iterations 8
Cbc0038I Pass  45: suminf.    1.23179 (7) obj. -14.3906 iterations 2
Cbc0038I Pass  46: suminf.    1.72805 (8) obj. -12.9778 iterations 13
Cbc0038I Pass  47: suminf.    1.60702 (7) obj. -12.9778 iterations 7
Cbc0038I Pass  48: suminf.    1.47994 (8) obj. -12.9778 iterations 14
Cbc0038I Pass  49: suminf.    1.37198 (7) obj. -12.9778 iterations 6
Cbc0038I Pass  50: suminf.    1.72805 (8) obj. -12.9778 iterations 9
Cbc0038I Pass  51: suminf.    2.62553 (11) obj. -12.9778 iterations 17
Cbc0038I Pass  52: suminf.    2.44656 (11) obj. -12.9778 iterations 6
Cbc0038I Pass  53: suminf.    1.95579 (8) obj. -12.9778 iterations 11
Cbc0038I Pass  54: suminf.    1.71418 (9) obj. -12.9778 iterations 8
Cbc0038I Pass  55: suminf.    2.25259 (9) obj. -12.9778 iterations 7
Cbc0038I Pass  56: suminf.    1.56949 (8) obj. -12.9778 iterations 4
Cbc0038I Pass  57: suminf.    2.06281 (8) obj. -12.9778 iterations 6
Cbc0038I Pass  58: suminf.    1.14305 (7) obj. -12.9778 iterations 2
Cbc0038I Pass  59: suminf.    1.07515 (8) obj. -12.9778 iterations 4
Cbc0038I Pass  60: suminf.    1.87287 (8) obj. -12.9778 iterations 16
Cbc0038I Pass  61: suminf.    1.32808 (7) obj. -13.1017 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -4.97545 - took 0.06 seconds
Cbc0012I Integer solution of -4.97545 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 74 rows 82 columns, reduced to 5 rows 6 columns
Cbc0031I 43 added rows had average density of 16.790698
Cbc0013I At root node, 43 cuts changed objective from -37.234798 to -15.772373 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10817 row cuts average 2.5 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1169 row cuts average 75.3 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 95 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 975 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 250 row cuts average 36.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.647 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.97545 best solution, best possible -15.772373 (1.78 seconds)
Cbc0012I Integer solution of -7.51599 found by rounding after 3925 iterations and 1 nodes (1.79 seconds)
Cbc0004I Integer solution of -7.63764 found after 3951 iterations and 2 nodes (1.79 seconds)
Cbc0012I Integer solution of -8.05709 found by rounding after 3953 iterations and 3 nodes (1.79 seconds)
Cbc0001I Search completed - best objective -8.057090000000002, took 4953 iterations and 18 nodes (2.15 seconds)
Cbc0032I Strong branching done 348 times (7361 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-13) rows, 51 (-2) columns and 278 (-25) elements
Clp1000I sum of infeasibilities 0.000338405 - average 3.67832e-06, 2 fixed columns
Coin0506I Presolve 89 (-3) rows, 49 (-2) columns and 268 (-10) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 34.263039
Clp0000I Optimal - objective value 34.263039
Coin0511I After Postsolve, objective 34.263039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.263039
Clp0000I Optimal - objective value 34.263039
Clp0000I Optimal - objective value 34.263039
Coin0511I After Postsolve, objective 34.263039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.26303922 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 51 columns (50 integer (50 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 9.51559
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 6.64289 iterations 44
Cbc0038I Solution found of 6.64289
Cbc0038I Relaxing continuous gives 6.64289
Cbc0038I Rounding solution of -7.63764 is better than previous of 6.64289

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 69 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -10.3003
Cbc0038I Pass   2: suminf.    2.10213 (8) obj. -10.3003 iterations 14
Cbc0038I Pass   3: suminf.    2.34387 (7) obj. -10.3003 iterations 9
Cbc0038I Pass   4: suminf.    1.37923 (5) obj. -10.3003 iterations 8
Cbc0038I Pass   5: suminf.    1.54397 (6) obj. -10.3003 iterations 14
Cbc0038I Pass   6: suminf.    1.54397 (6) obj. -10.3003 iterations 1
Cbc0038I Pass   7: suminf.    1.38896 (6) obj. -10.3003 iterations 10
Cbc0038I Pass   8: suminf.    2.94752 (8) obj. -10.3003 iterations 9
Cbc0038I Pass   9: suminf.    2.05034 (6) obj. -10.3003 iterations 10
Cbc0038I Pass  10: suminf.    2.05034 (6) obj. -10.3003 iterations 0
Cbc0038I Pass  11: suminf.    1.54397 (6) obj. -10.3003 iterations 12
Cbc0038I Pass  12: suminf.    1.54397 (6) obj. -10.3003 iterations 1
Cbc0038I Pass  13: suminf.    1.38896 (6) obj. -10.3003 iterations 9
Cbc0038I Pass  14: suminf.    1.37923 (5) obj. -10.3003 iterations 1
Cbc0038I Pass  15: suminf.    1.54397 (6) obj. -10.3003 iterations 11
Cbc0038I Pass  16: suminf.    4.39386 (13) obj. -10.3003 iterations 13
Cbc0038I Pass  17: suminf.    2.85477 (10) obj. -10.3003 iterations 8
Cbc0038I Pass  18: suminf.    2.42075 (9) obj. -10.3003 iterations 1
Cbc0038I Pass  19: suminf.    2.62610 (8) obj. -10.3003 iterations 16
Cbc0038I Pass  20: suminf.    2.62610 (8) obj. -10.3003 iterations 0
Cbc0038I Pass  21: suminf.    3.12461 (9) obj. -10.3003 iterations 12
Cbc0038I Pass  22: suminf.    2.70003 (8) obj. -10.3003 iterations 2
Cbc0038I Pass  23: suminf.    3.56695 (13) obj. -10.3003 iterations 7
Cbc0038I Pass  24: suminf.    3.25133 (9) obj. -10.3003 iterations 9
Cbc0038I Pass  25: suminf.    2.71532 (8) obj. -10.3003 iterations 14
Cbc0038I Pass  26: suminf.    1.69771 (7) obj. -10.3003 iterations 10
Cbc0038I Pass  27: suminf.    1.69771 (7) obj. -10.3003 iterations 0
Cbc0038I Pass  28: suminf.    2.75824 (9) obj. -10.3003 iterations 9
Cbc0038I Pass  29: suminf.    2.49807 (8) obj. -10.3003 iterations 2
Cbc0038I Pass  30: suminf.    2.84479 (10) obj. -10.3003 iterations 7
Cbc0038I Pass  31: suminf.    2.74540 (8) obj. -10.3003 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 83 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -7.63764 - took 0.05 seconds
Cbc0012I Integer solution of -7.63764 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 92 rows 51 columns, reduced to 69 rows 39 columns
Cbc0031I 28 added rows had average density of 24.392857
Cbc0013I At root node, 28 cuts changed objective from -34.263039 to -26.231526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11062 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2148 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0004I Integer solution of -7.97951 found after 7567 iterations and 7 nodes (0.69 seconds)
Cbc0010I After 11 nodes, 4 on tree, -7.97951 best solution, best possible -26.231526 (0.69 seconds)
Cbc0004I Integer solution of -8.05709 found after 7802 iterations and 17 nodes (0.72 seconds)
Cbc0001I Search completed - best objective -8.057090000000002, took 8101 iterations and 24 nodes (0.72 seconds)
Cbc0032I Strong branching done 434 times (8941 iterations), fathomed 0 nodes and fixed 30 variables
Cbc0035I Maximum depth 8, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-31) rows, 82 (-21) columns and 996 (-583) elements
Clp1000I sum of infeasibilities 8.6711e-08 - average 1.17177e-09, 39 fixed columns
Coin0506I Presolve 36 (-38) rows, 43 (-39) columns and 152 (-844) elements
Clp0006I 0  Obj -22.654173 Dual inf 28.187474 (43)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.42943193 - largest nonzero change 2.7784594e-05 ( 0.0021869008%) - largest zero change 2.9069018e-05
Clp0000I Optimal - objective value -20.531764
Clp0000I Optimal - objective value -20.531764
Coin0511I After Postsolve, objective -20.531764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -20.531764 Dual inf 17.543912 (32)
Clp0014I Perturbing problem by 0.001% of 4.2759572 - largest nonzero change 2.3303229e-05 ( 0.001262127%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 46.891268
Clp0000I Optimal - objective value 46.891268
Clp0000I Optimal - objective value 46.891268
Coin0511I After Postsolve, objective 46.891268, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.8912683 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 82 columns (82 integer (82 of which binary)) and 998 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.711%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 4.62481
Cbc0038I Pass   1: suminf.    2.45149 (19) obj. -30.6934 iterations 7
Cbc0038I Pass   2: suminf.    1.03224 (9) obj. -14.3694 iterations 10
Cbc0038I Solution found of 1.50095
Cbc0038I Rounding solution of -2.42411 is better than previous of 1.50095

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 82 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -2.42411 to -3.54444 (0.02 seconds)
Cbc0038I Round again with cutoff of -6.91357
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.45149 (19) obj. -30.6934 iterations 0
Cbc0038I Pass   4: suminf.    0.66470 (4) obj. -6.91357 iterations 19
Cbc0038I Pass   5: suminf.    0.61002 (4) obj. -7.26175 iterations 3
Cbc0038I Pass   6: suminf.    0.60919 (4) obj. -6.91357 iterations 10
Cbc0038I Pass   7: suminf.    0.59383 (3) obj. -6.91357 iterations 3
Cbc0038I Pass   8: suminf.    0.35349 (3) obj. -6.95219 iterations 6
Cbc0038I Pass   9: suminf.    0.34081 (3) obj. -6.91357 iterations 4
Cbc0038I Pass  10: suminf.    0.33014 (3) obj. -7.04559 iterations 5
Cbc0038I Pass  11: suminf.    0.29712 (2) obj. -6.91357 iterations 4
Cbc0038I Pass  12: suminf.    0.36314 (3) obj. -6.91357 iterations 6
Cbc0038I Pass  13: suminf.    1.59581 (7) obj. -6.91357 iterations 22
Cbc0038I Pass  14: suminf.    1.16041 (7) obj. -6.91357 iterations 5
Cbc0038I Pass  15: suminf.    1.10152 (4) obj. -6.91357 iterations 9
Cbc0038I Pass  16: suminf.    1.10152 (4) obj. -6.91357 iterations 4
Cbc0038I Pass  17: suminf.    1.20520 (4) obj. -6.91357 iterations 4
Cbc0038I Pass  18: suminf.    1.20520 (4) obj. -6.91357 iterations 1
Cbc0038I Pass  19: suminf.    1.10152 (4) obj. -6.91357 iterations 3
Cbc0038I Pass  20: suminf.    2.52964 (12) obj. -6.91357 iterations 23
Cbc0038I Pass  21: suminf.    1.51750 (9) obj. -6.91357 iterations 7
Cbc0038I Pass  22: suminf.    0.96976 (4) obj. -6.91357 iterations 11
Cbc0038I Pass  23: suminf.    0.70061 (4) obj. -7.44623 iterations 3
Cbc0038I Pass  24: suminf.    0.92313 (3) obj. -6.91357 iterations 6
Cbc0038I Pass  25: suminf.    0.92313 (3) obj. -6.91357 iterations 0
Cbc0038I Pass  26: suminf.    0.85260 (3) obj. -6.91357 iterations 3
Cbc0038I Pass  27: suminf.    0.58612 (3) obj. -7.97947 iterations 2
Cbc0038I Pass  28: suminf.    0.92313 (3) obj. -6.91357 iterations 3
Cbc0038I Pass  29: suminf.    2.04614 (15) obj. -6.91357 iterations 38
Cbc0038I Pass  30: suminf.    2.01480 (11) obj. -6.91357 iterations 4
Cbc0038I Pass  31: suminf.    1.65270 (7) obj. -6.91357 iterations 14
Cbc0038I Pass  32: suminf.    1.46778 (11) obj. -7.54176 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 82 columns, reduced to 43 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -3.54444 to -4.97545 (0.07 seconds)
Cbc0038I Round again with cutoff of -12.9778
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.45149 (19) obj. -30.6934 iterations 0
Cbc0038I Pass  33: suminf.    1.20140 (7) obj. -12.9778 iterations 17
Cbc0038I Pass  34: suminf.    1.02585 (7) obj. -14.1509 iterations 3
Cbc0038I Pass  35: suminf.    0.83802 (6) obj. -12.9778 iterations 11
Cbc0038I Pass  36: suminf.    0.82412 (6) obj. -12.9778 iterations 2
Cbc0038I Pass  37: suminf.    1.08475 (6) obj. -12.9778 iterations 7
Cbc0038I Pass  38: suminf.    1.07678 (6) obj. -12.9778 iterations 6
Cbc0038I Pass  39: suminf.    0.70071 (6) obj. -12.9778 iterations 8
Cbc0038I Pass  40: suminf.    0.70071 (6) obj. -12.9778 iterations 2
Cbc0038I Pass  41: suminf.    1.08475 (6) obj. -12.9778 iterations 4
Cbc0038I Pass  42: suminf.    1.68970 (11) obj. -12.9778 iterations 21
Cbc0038I Pass  43: suminf.    1.68970 (11) obj. -12.9778 iterations 2
Cbc0038I Pass  44: suminf.    1.70271 (8) obj. -12.9778 iterations 8
Cbc0038I Pass  45: suminf.    1.23179 (7) obj. -14.3906 iterations 2
Cbc0038I Pass  46: suminf.    1.72805 (8) obj. -12.9778 iterations 13
Cbc0038I Pass  47: suminf.    1.60702 (7) obj. -12.9778 iterations 7
Cbc0038I Pass  48: suminf.    1.47994 (8) obj. -12.9778 iterations 14
Cbc0038I Pass  49: suminf.    1.37198 (7) obj. -12.9778 iterations 6
Cbc0038I Pass  50: suminf.    1.72805 (8) obj. -12.9778 iterations 9
Cbc0038I Pass  51: suminf.    2.62553 (11) obj. -12.9778 iterations 17
Cbc0038I Pass  52: suminf.    2.44656 (11) obj. -12.9778 iterations 6
Cbc0038I Pass  53: suminf.    1.95579 (8) obj. -12.9778 iterations 11
Cbc0038I Pass  54: suminf.    1.71418 (9) obj. -12.9778 iterations 8
Cbc0038I Pass  55: suminf.    2.25259 (9) obj. -12.9778 iterations 7
Cbc0038I Pass  56: suminf.    1.56949 (8) obj. -12.9778 iterations 4
Cbc0038I Pass  57: suminf.    2.06281 (8) obj. -12.9778 iterations 6
Cbc0038I Pass  58: suminf.    1.14305 (7) obj. -12.9778 iterations 2
Cbc0038I Pass  59: suminf.    1.07515 (8) obj. -12.9778 iterations 4
Cbc0038I Pass  60: suminf.    1.87287 (8) obj. -12.9778 iterations 16
Cbc0038I Pass  61: suminf.    1.32808 (7) obj. -13.1017 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -4.97545 - took 0.06 seconds
Cbc0012I Integer solution of -4.97545 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 74 rows 82 columns, reduced to 5 rows 6 columns
Cbc0031I 43 added rows had average density of 16.790698
Cbc0013I At root node, 43 cuts changed objective from -37.234798 to -15.772373 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10817 row cuts average 2.5 elements, 1 column cuts (1 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1169 row cuts average 75.3 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 95 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 975 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 250 row cuts average 36.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 63 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.760 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.97545 best solution, best possible -15.772373 (2.15 seconds)
Cbc0012I Integer solution of -7.51599 found by rounding after 3925 iterations and 1 nodes (2.16 seconds)
Cbc0004I Integer solution of -7.63764 found after 3951 iterations and 2 nodes (2.17 seconds)
Cbc0012I Integer solution of -8.05709 found by rounding after 3953 iterations and 3 nodes (2.17 seconds)
Cbc0001I Search completed - best objective -8.057090000000002, took 4953 iterations and 18 nodes (2.55 seconds)
Cbc0032I Strong branching done 348 times (7361 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.89   (Wallclock seconds):       2.56

