Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-27) rows, 22 (-13) columns and 122 (-73) elements
Clp1000I sum of infeasibilities 6.8288e-06 - average 1.6259e-07, 1 fixed columns
Coin0506I Presolve 36 (-6) rows, 19 (-3) columns and 104 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Coin0511I After Postsolve, objective 207.38106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Coin0511I After Postsolve, objective 207.38106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 207.3810569 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 42 rows, 22 columns (21 integer (21 of which binary)) and 122 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.38998
Cbc0038I Pass   1: suminf.    0.16250 (1) obj. -116.105 iterations 16
Cbc0038I Solution found of -42.2857
Cbc0038I Relaxing continuous gives -42.2857
Cbc0038I Rounding solution of -61.1428 is better than previous of -42.2857

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 22 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -61.1428 to -73.2857 (0.01 seconds)
Cbc0038I Round again with cutoff of -86.6953
Cbc0038I Pass   2: suminf.    0.16250 (1) obj. -116.105 iterations 0
Cbc0038I Pass   3: suminf.    0.39555 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   4: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass   5: suminf.    0.54570 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   6: suminf.    1.72965 (6) obj. -86.6953 iterations 7
Cbc0038I Pass   7: suminf.    0.53320 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   8: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass   9: suminf.    0.60241 (2) obj. -96.8795 iterations 2
Cbc0038I Pass  10: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass  11: suminf.    0.56755 (4) obj. -86.6953 iterations 3
Cbc0038I Pass  12: suminf.    0.56755 (4) obj. -86.6953 iterations 0
Cbc0038I Pass  13: suminf.    0.54570 (2) obj. -86.6953 iterations 6
Cbc0038I Pass  14: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass  15: suminf.    1.85568 (5) obj. -86.6953 iterations 6
Cbc0038I Pass  16: suminf.    0.58487 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  17: suminf.    0.53320 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  18: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass  19: suminf.    0.67135 (3) obj. -86.6953 iterations 8
Cbc0038I Pass  20: suminf.    0.24924 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  21: suminf.    0.55508 (3) obj. -86.6953 iterations 4
Cbc0038I Pass  22: suminf.    0.35854 (2) obj. -86.6953 iterations 1
Cbc0038I Pass  23: suminf.    0.64629 (4) obj. -86.6953 iterations 4
Cbc0038I Pass  24: suminf.    0.13037 (1) obj. -86.6953 iterations 5
Cbc0038I Pass  25: suminf.    0.54570 (2) obj. -86.6953 iterations 2
Cbc0038I Pass  26: suminf.    0.35051 (2) obj. -86.6953 iterations 4
Cbc0038I Pass  27: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass  28: suminf.    0.35051 (2) obj. -86.6953 iterations 2
Cbc0038I Pass  29: suminf.    0.78125 (2) obj. -86.6953 iterations 7
Cbc0038I Pass  30: suminf.    0.13037 (1) obj. -86.6953 iterations 4
Cbc0038I Pass  31: suminf.    0.43991 (2) obj. -86.6953 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 22 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -73.2857 - took 0.04 seconds
Cbc0012I Integer solution of -73.2857 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 42 rows 22 columns, reduced to 26 rows 15 columns
Cbc0031I 6 added rows had average density of 21
Cbc0013I At root node, 6 cuts changed objective from -207.38106 to -113.05973 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 528 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 371 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0012I Integer solution of -92.1428 found by DiveCoefficient after 1330 iterations and 6 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -92.14279999999997, took 1403 iterations and 12 nodes (0.14 seconds)
Cbc0032I Strong branching done 136 times (1053 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-12) rows, 56 (-10) columns and 491 (-232) elements
Clp1000I sum of infeasibilities 0.000911684 - average 1.62801e-05, 54 fixed columns
Coin0506I Presolve 2 (-54) rows, 2 (-54) columns and 4 (-487) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 740.01354
Clp0000I Optimal - objective value 740.01354
Coin0511I After Postsolve, objective 740.01354, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6546057 - largest nonzero change 1.7325834e-05 ( 0.0017325834%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 934.22763
Clp0000I Optimal - objective value 934.22763
Clp0000I Optimal - objective value 934.22763
Coin0511I After Postsolve, objective 934.22763, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 934.2276274 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 55 columns (55 integer (55 of which binary)) and 481 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.994%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.07631
Cbc0038I Pass   1: suminf.    1.78475 (14) obj. -245.092 iterations 17
Cbc0038I Pass   2: suminf.    1.78475 (14) obj. -245.092 iterations 1
Cbc0038I Solution found of -186.714
Cbc0038I Rounding solution of -252.286 is better than previous of -186.714

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 55 columns, reduced to 15 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -252.286 to -681.571 (0.02 seconds)
Cbc0038I Round again with cutoff of -696.776
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    6.01277 (22) obj. -696.776 iterations 8
Cbc0038I Pass   4: suminf.    5.93527 (23) obj. -696.776 iterations 1
Cbc0038I Pass   5: suminf.    0.62731 (3) obj. -696.776 iterations 36
Cbc0038I Pass   6: suminf.    0.44821 (2) obj. -756.105 iterations 1
Cbc0038I Pass   7: suminf.    0.14172 (2) obj. -696.776 iterations 3
Cbc0038I Pass   8: suminf.    0.24019 (2) obj. -762.89 iterations 2
Cbc0038I Pass   9: suminf.    0.16250 (1) obj. -755.391 iterations 1
Cbc0038I Pass  10: suminf.    1.21522 (5) obj. -746.137 iterations 9
Cbc0038I Pass  11: suminf.    1.21522 (5) obj. -746.137 iterations 1
Cbc0038I Pass  12: suminf.    0.19142 (2) obj. -696.776 iterations 5
Cbc0038I Pass  13: suminf.    0.19142 (2) obj. -696.776 iterations 0
Cbc0038I Pass  14: suminf.    0.34925 (2) obj. -730.664 iterations 2
Cbc0038I Pass  15: suminf.    0.34925 (2) obj. -730.664 iterations 0
Cbc0038I Pass  16: suminf.    1.89945 (6) obj. -696.776 iterations 10
Cbc0038I Pass  17: suminf.    1.26577 (4) obj. -740.941 iterations 5
Cbc0038I Pass  18: suminf.    0.27919 (2) obj. -696.776 iterations 5
Cbc0038I Pass  19: suminf.    0.17275 (2) obj. -744.534 iterations 2
Cbc0038I Pass  20: suminf.    0.17250 (1) obj. -744.51 iterations 1
Cbc0038I Pass  21: suminf.    2.56497 (9) obj. -696.776 iterations 11
Cbc0038I Pass  22: suminf.    2.17455 (7) obj. -742.878 iterations 3
Cbc0038I Pass  23: suminf.    0.45504 (2) obj. -696.776 iterations 8
Cbc0038I Pass  24: suminf.    0.17250 (1) obj. -719.51 iterations 3
Cbc0038I Pass  25: suminf.    2.97372 (9) obj. -745.321 iterations 15
Cbc0038I Pass  26: suminf.    2.97372 (9) obj. -745.321 iterations 6
Cbc0038I Pass  27: suminf.    0.26771 (2) obj. -696.776 iterations 10
Cbc0038I Pass  28: suminf.    0.17275 (2) obj. -745.534 iterations 2
Cbc0038I Pass  29: suminf.    0.17250 (1) obj. -745.51 iterations 1
Cbc0038I Pass  30: suminf.    2.80937 (10) obj. -696.776 iterations 12
Cbc0038I Pass  31: suminf.    2.80937 (10) obj. -696.776 iterations 1
Cbc0038I Pass  32: suminf.    0.29068 (2) obj. -696.776 iterations 11
Cbc0038I Rounding solution of -729.714 is better than previous of -681.571

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 55 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -750.494
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  32: suminf.    6.53470 (23) obj. -750.494 iterations 1
Cbc0038I Pass  33: suminf.    0.21806 (1) obj. -750.494 iterations 40
Cbc0038I Pass  34: suminf.    0.16250 (1) obj. -755.391 iterations 1
Cbc0038I Pass  35: suminf.    0.21806 (1) obj. -750.494 iterations 1
Cbc0038I Pass  36: suminf.    1.02461 (3) obj. -750.494 iterations 4
Cbc0038I Pass  37: suminf.    0.78635 (3) obj. -773.164 iterations 2
Cbc0038I Pass  38: suminf.    3.41479 (11) obj. -750.494 iterations 10
Cbc0038I Pass  39: suminf.    3.41479 (11) obj. -750.494 iterations 1
Cbc0038I Pass  40: suminf.    0.19537 (1) obj. -750.494 iterations 10
Cbc0038I Pass  41: suminf.    0.16250 (1) obj. -753.391 iterations 1
Cbc0038I Pass  42: suminf.    0.19537 (1) obj. -750.494 iterations 1
Cbc0038I Pass  43: suminf.    1.09731 (4) obj. -751.627 iterations 7
Cbc0038I Pass  44: suminf.    1.09731 (4) obj. -751.627 iterations 1
Cbc0038I Pass  45: suminf.    0.33204 (2) obj. -750.494 iterations 4
Cbc0038I Pass  46: suminf.    0.33204 (2) obj. -750.494 iterations 0
Cbc0038I Pass  47: suminf.    0.77767 (2) obj. -750.494 iterations 3
Cbc0038I Pass  48: suminf.    1.87873 (6) obj. -750.494 iterations 8
Cbc0038I Pass  49: suminf.    1.37057 (5) obj. -750.494 iterations 5
Cbc0038I Pass  50: suminf.    1.28394 (5) obj. -759.859 iterations 1
Cbc0038I Pass  51: suminf.    0.33204 (2) obj. -750.494 iterations 5
Cbc0038I Pass  52: suminf.    0.33204 (2) obj. -750.494 iterations 1
Cbc0038I Pass  53: suminf.    0.77767 (2) obj. -750.494 iterations 3
Cbc0038I Pass  54: suminf.    1.79105 (5) obj. -750.494 iterations 8
Cbc0038I Pass  55: suminf.    1.79105 (5) obj. -750.494 iterations 1
Cbc0038I Pass  56: suminf.    1.18763 (3) obj. -755.543 iterations 6
Cbc0038I Pass  57: suminf.    1.02399 (3) obj. -750.494 iterations 2
Cbc0038I Pass  58: suminf.    1.02307 (3) obj. -750.494 iterations 7
Cbc0038I Pass  59: suminf.    1.02307 (3) obj. -750.494 iterations 2
Cbc0038I Pass  60: suminf.    1.22261 (3) obj. -750.494 iterations 4
Cbc0038I Pass  61: suminf.    0.91921 (3) obj. -750.494 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 55 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -729.714 - took 0.02 seconds
Cbc0012I Integer solution of -729.7143 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -769.6108 to -769.6108 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -729.7143000000001, took 22 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-27) rows, 22 (-13) columns and 122 (-73) elements
Clp1000I sum of infeasibilities 6.8288e-06 - average 1.6259e-07, 1 fixed columns
Coin0506I Presolve 36 (-6) rows, 19 (-3) columns and 104 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Coin0511I After Postsolve, objective 207.38106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Clp0000I Optimal - objective value 207.38106
Coin0511I After Postsolve, objective 207.38106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 207.3810569 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 42 rows, 22 columns (21 integer (21 of which binary)) and 122 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.040%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.38998
Cbc0038I Pass   1: suminf.    0.16250 (1) obj. -116.105 iterations 16
Cbc0038I Solution found of -42.2857
Cbc0038I Relaxing continuous gives -42.2857
Cbc0038I Rounding solution of -61.1428 is better than previous of -42.2857

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 22 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -61.1428 to -73.2857 (0.01 seconds)
Cbc0038I Round again with cutoff of -86.6953
Cbc0038I Pass   2: suminf.    0.16250 (1) obj. -116.105 iterations 0
Cbc0038I Pass   3: suminf.    0.39555 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   4: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass   5: suminf.    0.54570 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   6: suminf.    1.72965 (6) obj. -86.6953 iterations 7
Cbc0038I Pass   7: suminf.    0.53320 (2) obj. -86.6953 iterations 2
Cbc0038I Pass   8: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass   9: suminf.    0.60241 (2) obj. -96.8795 iterations 2
Cbc0038I Pass  10: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass  11: suminf.    0.56755 (4) obj. -86.6953 iterations 3
Cbc0038I Pass  12: suminf.    0.56755 (4) obj. -86.6953 iterations 0
Cbc0038I Pass  13: suminf.    0.54570 (2) obj. -86.6953 iterations 6
Cbc0038I Pass  14: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass  15: suminf.    1.85568 (5) obj. -86.6953 iterations 6
Cbc0038I Pass  16: suminf.    0.58487 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  17: suminf.    0.53320 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  18: suminf.    0.31250 (1) obj. -95.8839 iterations 2
Cbc0038I Pass  19: suminf.    0.67135 (3) obj. -86.6953 iterations 8
Cbc0038I Pass  20: suminf.    0.24924 (2) obj. -86.6953 iterations 3
Cbc0038I Pass  21: suminf.    0.55508 (3) obj. -86.6953 iterations 4
Cbc0038I Pass  22: suminf.    0.35854 (2) obj. -86.6953 iterations 1
Cbc0038I Pass  23: suminf.    0.64629 (4) obj. -86.6953 iterations 4
Cbc0038I Pass  24: suminf.    0.13037 (1) obj. -86.6953 iterations 5
Cbc0038I Pass  25: suminf.    0.54570 (2) obj. -86.6953 iterations 2
Cbc0038I Pass  26: suminf.    0.35051 (2) obj. -86.6953 iterations 4
Cbc0038I Pass  27: suminf.    0.13037 (1) obj. -86.6953 iterations 3
Cbc0038I Pass  28: suminf.    0.35051 (2) obj. -86.6953 iterations 2
Cbc0038I Pass  29: suminf.    0.78125 (2) obj. -86.6953 iterations 7
Cbc0038I Pass  30: suminf.    0.13037 (1) obj. -86.6953 iterations 4
Cbc0038I Pass  31: suminf.    0.43991 (2) obj. -86.6953 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 22 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -73.2857 - took 0.04 seconds
Cbc0012I Integer solution of -73.2857 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 42 rows 22 columns, reduced to 26 rows 15 columns
Cbc0031I 6 added rows had average density of 21
Cbc0013I At root node, 6 cuts changed objective from -207.38106 to -113.05973 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 528 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 371 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -92.1428 found by DiveCoefficient after 1330 iterations and 6 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -92.14279999999997, took 1403 iterations and 12 nodes (0.15 seconds)
Cbc0032I Strong branching done 136 times (1053 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-19) rows, 50 (-17) columns and 371 (-353) elements
Clp1000I sum of infeasibilities 5.23432e-06 - average 1.04686e-07, 9 fixed columns
Coin0506I Presolve 35 (-15) rows, 36 (-14) columns and 229 (-142) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 1.888178 - largest nonzero change 1.030645e-05 ( 0.00086069148%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 277.27485
Clp0000I Optimal - objective value 277.27485
Coin0511I After Postsolve, objective 277.27485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 277.27485
Clp0000I Optimal - objective value 277.27485
Clp0000I Optimal - objective value 277.27485
Coin0511I After Postsolve, objective 277.27485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 277.2748535 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 50 columns (50 integer (50 of which binary)) and 373 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 7.01122
Cbc0038I Pass   1: suminf.    0.31082 (3) obj. -58.4033 iterations 22
Cbc0038I Pass   2: suminf.    0.31082 (3) obj. -58.4033 iterations 1
Cbc0038I Solution found of -32.1428
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 50 columns, reduced to 25 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -32.1428 to -73.2857 (0.01 seconds)
Cbc0038I Round again with cutoff of -83.669
Cbc0038I Pass   3: suminf.    1.10180 (18) obj. -83.669 iterations 5
Cbc0038I Pass   4: suminf.    0.53052 (4) obj. -83.669 iterations 1
Cbc0038I Pass   5: suminf.    0.82263 (16) obj. -83.669 iterations 4
Cbc0038I Pass   6: suminf.    0.82263 (16) obj. -83.669 iterations 0
Cbc0038I Pass   7: suminf.    0.23125 (1) obj. -99.8794 iterations 20
Cbc0038I Pass   8: suminf.    0.09029 (1) obj. -83.669 iterations 1
Cbc0038I Pass   9: suminf.    0.21053 (1) obj. -84.7068 iterations 4
Cbc0038I Pass  10: suminf.    0.21053 (1) obj. -84.7068 iterations 0
Cbc0038I Pass  11: suminf.    0.10768 (1) obj. -83.669 iterations 2
Cbc0038I Pass  12: suminf.    0.18590 (1) obj. -92.6639 iterations 1
Cbc0038I Pass  13: suminf.    1.29975 (6) obj. -83.669 iterations 13
Cbc0038I Pass  14: suminf.    0.70278 (5) obj. -83.669 iterations 5
Cbc0038I Pass  15: suminf.    0.25733 (2) obj. -83.669 iterations 6
Cbc0038I Pass  16: suminf.    0.25733 (2) obj. -83.669 iterations 0
Cbc0038I Pass  17: suminf.    0.32250 (1) obj. -85.0025 iterations 4
Cbc0038I Pass  18: suminf.    0.32250 (1) obj. -85.0025 iterations 0
Cbc0038I Pass  19: suminf.    0.38778 (2) obj. -83.669 iterations 1
Cbc0038I Pass  20: suminf.    2.56646 (11) obj. -83.669 iterations 16
Cbc0038I Pass  21: suminf.    2.56646 (11) obj. -83.669 iterations 0
Cbc0038I Pass  22: suminf.    0.86178 (3) obj. -83.669 iterations 15
Cbc0038I Pass  23: suminf.    0.31579 (1) obj. -86.0602 iterations 2
Cbc0038I Pass  24: suminf.    0.38967 (2) obj. -83.669 iterations 6
Cbc0038I Pass  25: suminf.    0.83418 (3) obj. -83.669 iterations 4
Cbc0038I Pass  26: suminf.    0.78647 (3) obj. -83.669 iterations 8
Cbc0038I Pass  27: suminf.    0.99168 (3) obj. -83.669 iterations 4
Cbc0038I Pass  28: suminf.    0.38967 (2) obj. -83.669 iterations 8
Cbc0038I Pass  29: suminf.    0.38967 (2) obj. -83.669 iterations 0
Cbc0038I Pass  30: suminf.    0.83418 (3) obj. -83.669 iterations 4
Cbc0038I Pass  31: suminf.    0.78647 (3) obj. -83.669 iterations 8
Cbc0038I Pass  32: suminf.    0.99168 (3) obj. -83.669 iterations 4
Cbc0038I Rounding solution of -92.1428 is better than previous of -73.2857

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 50 columns, reduced to 31 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -109.138
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.66111 (18) obj. -109.138 iterations 0
Cbc0038I Pass  33: suminf.    0.27332 (2) obj. -109.138 iterations 33
Cbc0038I Pass  34: suminf.    0.27332 (2) obj. -109.138 iterations 2
Cbc0038I Pass  35: suminf.    0.34517 (2) obj. -109.138 iterations 2
Cbc0038I Pass  36: suminf.    0.68664 (2) obj. -109.138 iterations 3
Cbc0038I Pass  37: suminf.    2.73518 (12) obj. -109.138 iterations 16
Cbc0038I Pass  38: suminf.    1.42706 (7) obj. -109.138 iterations 2
Cbc0038I Pass  39: suminf.    1.18127 (7) obj. -109.138 iterations 1
Cbc0038I Pass  40: suminf.    0.85658 (4) obj. -109.138 iterations 11
Cbc0038I Pass  41: suminf.    0.86327 (4) obj. -109.138 iterations 3
Cbc0038I Pass  42: suminf.    1.08304 (3) obj. -109.138 iterations 2
Cbc0038I Pass  43: suminf.    3.22934 (14) obj. -109.138 iterations 14
Cbc0038I Pass  44: suminf.    3.22934 (14) obj. -109.138 iterations 1
Cbc0038I Pass  45: suminf.    0.68260 (3) obj. -109.138 iterations 16
Cbc0038I Pass  46: suminf.    0.61582 (3) obj. -109.138 iterations 3
Cbc0038I Pass  47: suminf.    0.38721 (3) obj. -109.138 iterations 2
Cbc0038I Pass  48: suminf.    0.54080 (2) obj. -109.138 iterations 3
Cbc0038I Pass  49: suminf.    1.21747 (6) obj. -109.138 iterations 7
Cbc0038I Pass  50: suminf.    1.21747 (6) obj. -109.138 iterations 0
Cbc0038I Pass  51: suminf.    0.51353 (2) obj. -109.138 iterations 5
Cbc0038I Pass  52: suminf.    0.36447 (2) obj. -111.672 iterations 1
Cbc0038I Pass  53: suminf.    0.86322 (5) obj. -125.601 iterations 5
Cbc0038I Pass  54: suminf.    0.51353 (2) obj. -109.138 iterations 5
Cbc0038I Pass  55: suminf.    0.36447 (2) obj. -111.672 iterations 1
Cbc0038I Pass  56: suminf.    0.37719 (3) obj. -113.864 iterations 14
Cbc0038I Pass  57: suminf.    0.37719 (3) obj. -113.864 iterations 2
Cbc0038I Pass  58: suminf.    0.68851 (3) obj. -109.138 iterations 4
Cbc0038I Pass  59: suminf.    0.68851 (3) obj. -109.138 iterations 0
Cbc0038I Pass  60: suminf.    1.06907 (3) obj. -109.138 iterations 4
Cbc0038I Pass  61: suminf.    0.55233 (3) obj. -109.138 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 50 columns, reduced to 30 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -92.1428 - took 0.02 seconds
Cbc0012I Integer solution of -92.1428 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 50 rows 50 columns, reduced to 11 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 7
Cbc0013I At root node, 10 cuts changed objective from -177.11769 to -92.1428 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 211 row cuts average 2.2 elements, 23 column cuts (23 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 63 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0001I Search completed - best objective -92.14279999999997, took 160 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.14

