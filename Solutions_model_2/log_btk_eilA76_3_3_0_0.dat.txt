Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-33) rows, 65 (-13) columns and 366 (-87) elements
Clp1000I sum of infeasibilities 0 - average 0, 60 fixed columns
Coin0506I Presolve 5 (-117) rows, 4 (-61) columns and 11 (-355) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 6554.1667
Clp0000I Optimal - objective value 6554.1667
Coin0511I After Postsolve, objective 6554.1667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 6554.1667
Clp0000I Optimal - objective value 6554.1667
Clp0000I Optimal - objective value 6554.1667
Coin0511I After Postsolve, objective 6554.1667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6554.166744 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 65 columns (64 integer (64 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.244186
Cbc0038I Pass   1: suminf.    0.24419 (3) obj. -6554.17 iterations 0
Cbc0038I Solution found of -3423.34
Cbc0038I Relaxing continuous gives -3438.33
Cbc0038I Rounding solution of -3446.69 is better than previous of -3438.33

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 6 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -3446.69 to -3455.03 (0.02 seconds)
Cbc0038I Round again with cutoff of -3764.94
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.24419 (3) obj. -6554.17 iterations 0
Cbc0038I Pass   3: suminf.    0.28749 (3) obj. -3764.94 iterations 4
Cbc0038I Pass   4: suminf.    1.76457 (6) obj. -3764.94 iterations 16
Cbc0038I Pass   5: suminf.    0.36459 (4) obj. -3764.94 iterations 11
Cbc0038I Pass   6: suminf.    0.36459 (4) obj. -3764.94 iterations 0
Cbc0038I Pass   7: suminf.    1.25581 (3) obj. -4833.94 iterations 9
Cbc0038I Pass   8: suminf.    0.31486 (3) obj. -3764.94 iterations 1
Cbc0038I Pass   9: suminf.    0.47551 (7) obj. -3764.94 iterations 7
Cbc0038I Pass  10: suminf.    0.30452 (3) obj. -3764.94 iterations 16
Cbc0038I Pass  11: suminf.    0.41860 (3) obj. -3894.56 iterations 2
Cbc0038I Pass  12: suminf.    0.91610 (7) obj. -3764.94 iterations 16
Cbc0038I Pass  13: suminf.    0.64361 (4) obj. -3764.94 iterations 8
Cbc0038I Pass  14: suminf.    0.83721 (3) obj. -4375.25 iterations 9
Cbc0038I Pass  15: suminf.    0.30001 (3) obj. -3764.94 iterations 1
Cbc0038I Pass  16: suminf.    0.61638 (5) obj. -3764.94 iterations 10
Cbc0038I Pass  17: suminf.    0.31239 (3) obj. -3764.94 iterations 13
Cbc0038I Pass  18: suminf.    0.52326 (3) obj. -4004.5 iterations 2
Cbc0038I Pass  19: suminf.    0.90250 (5) obj. -3764.94 iterations 18
Cbc0038I Pass  20: suminf.    0.75900 (4) obj. -3764.94 iterations 3
Cbc0038I Pass  21: suminf.    0.76744 (3) obj. -4280.57 iterations 9
Cbc0038I Pass  22: suminf.    0.31358 (3) obj. -3764.94 iterations 1
Cbc0038I Pass  23: suminf.    1.23760 (7) obj. -3764.94 iterations 12
Cbc0038I Pass  24: suminf.    0.29541 (3) obj. -3764.94 iterations 8
Cbc0038I Pass  25: suminf.    0.97674 (3) obj. -4538.99 iterations 2
Cbc0038I Pass  26: suminf.    2.90444 (8) obj. -3764.94 iterations 8
Cbc0038I Pass  27: suminf.    0.57943 (6) obj. -3764.94 iterations 4
Cbc0038I Pass  28: suminf.    0.55814 (3) obj. -6203.61 iterations 6
Cbc0038I Pass  29: suminf.    0.55814 (3) obj. -6203.61 iterations 0
Cbc0038I Pass  30: suminf.    0.28551 (3) obj. -3764.94 iterations 4
Cbc0038I Pass  31: suminf.    2.39087 (7) obj. -3764.94 iterations 8
Cbc0038I Rounding solution of -3461.68 is better than previous of -3455.03

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 46 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -3461.68 to -3462.28 (0.03 seconds)
Cbc0038I Round again with cutoff of -4322.79
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.24419 (3) obj. -6554.17 iterations 0
Cbc0038I Pass  32: suminf.    0.77852 (3) obj. -4322.79 iterations 2
Cbc0038I Pass  33: suminf.    2.49454 (10) obj. -4322.79 iterations 11
Cbc0038I Pass  34: suminf.    0.75783 (3) obj. -4322.79 iterations 16
Cbc0038I Pass  35: suminf.    0.80233 (3) obj. -5918.66 iterations 4
Cbc0038I Pass  36: suminf.    0.80233 (3) obj. -5918.66 iterations 0
Cbc0038I Pass  37: suminf.    0.79295 (3) obj. -4322.79 iterations 1
Cbc0038I Pass  38: suminf.    1.91034 (7) obj. -4322.79 iterations 9
Cbc0038I Pass  39: suminf.    0.79559 (3) obj. -4322.79 iterations 7
Cbc0038I Pass  40: suminf.    1.43023 (3) obj. -5202.31 iterations 2
Cbc0038I Pass  41: suminf.    3.55858 (9) obj. -4322.79 iterations 13
Cbc0038I Pass  42: suminf.    2.97988 (8) obj. -4322.79 iterations 3
Cbc0038I Pass  43: suminf.    2.08001 (7) obj. -4322.79 iterations 2
Cbc0038I Pass  44: suminf.    0.55814 (3) obj. -6203.61 iterations 6
Cbc0038I Pass  45: suminf.    0.55814 (3) obj. -6203.61 iterations 0
Cbc0038I Pass  46: suminf.    0.77654 (3) obj. -4322.79 iterations 2
Cbc0038I Pass  47: suminf.    2.68784 (7) obj. -4322.79 iterations 8
Cbc0038I Pass  48: suminf.    2.68784 (7) obj. -4322.79 iterations 0
Cbc0038I Pass  49: suminf.    0.94186 (3) obj. -5746.91 iterations 7
Cbc0038I Pass  50: suminf.    0.94186 (3) obj. -5746.91 iterations 0
Cbc0038I Pass  51: suminf.    0.80460 (3) obj. -4322.79 iterations 1
Cbc0038I Pass  52: suminf.    2.51907 (7) obj. -4322.79 iterations 9
Cbc0038I Pass  53: suminf.    1.19627 (6) obj. -4322.79 iterations 4
Cbc0038I Pass  54: suminf.    1.19627 (6) obj. -4322.79 iterations 0
Cbc0038I Pass  55: suminf.    0.55814 (3) obj. -6203.61 iterations 9
Cbc0038I Pass  56: suminf.    0.55814 (3) obj. -6203.61 iterations 0
Cbc0038I Pass  57: suminf.    0.77654 (3) obj. -4322.79 iterations 2
Cbc0038I Pass  58: suminf.    1.37146 (5) obj. -4322.79 iterations 16
Cbc0038I Pass  59: suminf.    1.11368 (4) obj. -4322.79 iterations 5
Cbc0038I Pass  60: suminf.    1.32558 (3) obj. -4942.45 iterations 4
Cbc0038I Rounding solution of -3475.89 is better than previous of -3462.28

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 46 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -3475.89 to -3476.37 (0.04 seconds)
Cbc0038I Round again with cutoff of -4992.2
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.24419 (3) obj. -6554.17 iterations 0
Cbc0038I Pass  61: suminf.    1.36775 (3) obj. -4992.2 iterations 2
Cbc0038I Pass  62: suminf.    1.96606 (9) obj. -4992.2 iterations 11
Cbc0038I Pass  63: suminf.    1.38394 (3) obj. -4992.2 iterations 9
Cbc0038I Pass  64: suminf.    1.46512 (3) obj. -5163.68 iterations 2
Cbc0038I Pass  65: suminf.    2.34327 (6) obj. -4992.2 iterations 11
Cbc0038I Pass  66: suminf.    1.39265 (3) obj. -4992.2 iterations 12
Cbc0038I Pass  67: suminf.    1.18605 (3) obj. -5470.84 iterations 2
Cbc0038I Pass  68: suminf.    1.81881 (4) obj. -4992.2 iterations 5
Cbc0038I Pass  69: suminf.    1.81881 (4) obj. -4992.2 iterations 3
Cbc0038I Pass  70: suminf.    1.39265 (3) obj. -4992.2 iterations 2
Cbc0038I Pass  71: suminf.    3.20634 (7) obj. -4992.2 iterations 12
Cbc0038I Pass  72: suminf.    2.41229 (6) obj. -4992.2 iterations 6
Cbc0038I Pass  73: suminf.    0.55814 (3) obj. -6203.61 iterations 9
Cbc0038I Pass  74: suminf.    1.36577 (3) obj. -4992.2 iterations 2
Cbc0038I Pass  75: suminf.    3.14913 (7) obj. -4992.2 iterations 15
Cbc0038I Pass  76: suminf.    1.38344 (3) obj. -4992.2 iterations 11
Cbc0038I Pass  77: suminf.    0.97674 (3) obj. -5719.09 iterations 2
Cbc0038I Pass  78: suminf.    2.11986 (5) obj. -4992.2 iterations 5
Cbc0038I Pass  79: suminf.    1.44818 (4) obj. -4992.2 iterations 9
Cbc0038I Pass  80: suminf.    2.18148 (5) obj. -4992.2 iterations 2
Cbc0038I Pass  81: suminf.    1.44818 (4) obj. -4992.2 iterations 10
Cbc0038I Pass  82: suminf.    1.44818 (4) obj. -4992.2 iterations 3
Cbc0038I Pass  83: suminf.    2.18343 (5) obj. -4992.2 iterations 12
Cbc0038I Pass  84: suminf.    1.39265 (3) obj. -4992.2 iterations 9
Cbc0038I Pass  85: suminf.    1.18605 (3) obj. -5470.84 iterations 2
Cbc0038I Pass  86: suminf.    1.64264 (6) obj. -4992.2 iterations 10
Cbc0038I Pass  87: suminf.    1.12421 (3) obj. -4992.2 iterations 9
Cbc0038I Pass  88: suminf.    1.39265 (3) obj. -4992.2 iterations 1
Cbc0038I Pass  89: suminf.    1.96012 (5) obj. -4992.2 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3476.37 - took 0.03 seconds
Cbc0012I Integer solution of -3476.3657 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 121 rows 65 columns, reduced to 11 rows 7 columns
Cbc0031I 8 added rows had average density of 4.5
Cbc0013I At root node, 8 cuts changed objective from -6554.1667 to -3493.8518 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 3.4 elements, 23 column cuts (23 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3476.365700000001, took 195 iterations and 2 nodes (0.07 seconds)
Cbc0032I Strong branching done 30 times (234 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 111 (-41) columns and 1917 (-1386) elements
Clp1000I sum of infeasibilities 0 - average 0, 96 fixed columns
Coin0506I Presolve 14 (-91) rows, 14 (-97) columns and 35 (-1882) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 6587.0679
Clp0000I Optimal - objective value 6587.0679
Coin0511I After Postsolve, objective 6587.0679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 6587.0679
Clp0000I Optimal - objective value 6587.0679
Clp0000I Optimal - objective value 6587.0679
Coin0511I After Postsolve, objective 6587.0679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6587.067919 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 111 columns (111 integer (111 of which binary)) and 1958 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.587%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.72067
Cbc0038I Pass   1: suminf.    0.24419 (3) obj. -6551.16 iterations 12
Cbc0038I Solution found of -3420.33
Cbc0038I Rounding solution of -3461.68 is better than previous of -3420.33

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 111 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3771.96
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.24419 (3) obj. -6551.16 iterations 0
Cbc0038I Pass   3: suminf.    0.30951 (3) obj. -3771.96 iterations 3
Cbc0038I Pass   4: suminf.    0.99278 (29) obj. -3771.96 iterations 40
Cbc0038I Pass   5: suminf.    0.58698 (7) obj. -3771.96 iterations 28
Cbc0038I Pass   6: suminf.    1.11628 (3) obj. -5564.92 iterations 5
Cbc0038I Pass   7: suminf.    0.30552 (3) obj. -3771.96 iterations 3
Cbc0038I Pass   8: suminf.    1.31736 (18) obj. -3771.96 iterations 35
Cbc0038I Pass   9: suminf.    1.18921 (17) obj. -3771.96 iterations 6
Cbc0038I Pass  10: suminf.    1.25581 (3) obj. -4830.79 iterations 16
Cbc0038I Pass  11: suminf.    0.32382 (3) obj. -3771.96 iterations 3
Cbc0038I Pass  12: suminf.    1.63081 (7) obj. -3771.96 iterations 22
Cbc0038I Pass  13: suminf.    0.33115 (4) obj. -3771.96 iterations 9
Cbc0038I Pass  14: suminf.    1.46512 (3) obj. -5140.68 iterations 5
Cbc0038I Pass  15: suminf.    0.33011 (3) obj. -3771.96 iterations 4
Cbc0038I Pass  16: suminf.    2.62860 (11) obj. -3771.96 iterations 20
Cbc0038I Pass  17: suminf.    1.57458 (11) obj. -3771.96 iterations 5
Cbc0038I Pass  18: suminf.    1.57458 (11) obj. -3771.96 iterations 0
Cbc0038I Pass  19: suminf.    0.34032 (3) obj. -3771.96 iterations 12
Cbc0038I Pass  20: suminf.    0.34032 (3) obj. -3771.96 iterations 0
Cbc0038I Pass  21: suminf.    0.24419 (3) obj. -6516.16 iterations 1
Cbc0038I Pass  22: suminf.    0.53177 (3) obj. -3771.96 iterations 15
Cbc0038I Pass  23: suminf.    0.53177 (3) obj. -3771.96 iterations 3
Cbc0038I Pass  24: suminf.    0.25926 (1) obj. -5921.8 iterations 2
Cbc0038I Pass  25: suminf.    0.10648 (1) obj. -3771.96 iterations 1
Cbc0038I Pass  26: suminf.    0.44860 (4) obj. -3771.96 iterations 29
Cbc0038I Pass  27: suminf.    0.44860 (4) obj. -3771.96 iterations 5
Cbc0038I Pass  28: suminf.    0.40741 (1) obj. -4796.2 iterations 4
Cbc0038I Pass  29: suminf.    0.10523 (1) obj. -3771.96 iterations 1
Cbc0038I Pass  30: suminf.    0.96379 (11) obj. -3771.96 iterations 16
Cbc0038I Pass  31: suminf.    0.96379 (11) obj. -3771.96 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 111 columns, reduced to 47 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3461.68 - took 0.02 seconds
Cbc0012I Integer solution of -3461.68 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 104 rows 111 columns, reduced to 12 rows 12 columns
Cbc0031I 43 added rows had average density of 17.976744
Cbc0013I At root node, 43 cuts changed objective from -6559.4055 to -3487.9591 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 998 row cuts average 7.5 elements, 8 column cuts (42 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 20 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 232 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 34.5 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -3461.68 best solution, best possible -3487.9591 (0.62 seconds)
Cbc0012I Integer solution of -3467.1229 found by DiveCoefficient after 566 iterations and 4 nodes (0.70 seconds)
Cbc0012I Integer solution of -3473.58 found by DiveCoefficient after 567 iterations and 5 nodes (0.71 seconds)
Cbc0012I Integer solution of -3475.0086 found by DiveCoefficient after 590 iterations and 6 nodes (0.74 seconds)
Cbc0012I Integer solution of -3475.8943 found by DiveCoefficient after 635 iterations and 7 nodes (0.78 seconds)
Cbc0016I Integer solution of -3476.3657 found by strong branching after 651 iterations and 7 nodes (0.79 seconds)
Cbc0001I Search completed - best objective -3476.365700000001, took 1150 iterations and 24 nodes (0.94 seconds)
Cbc0032I Strong branching done 436 times (6858 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 11, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.95

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 122 (-33) rows, 65 (-13) columns and 366 (-87) elements
Clp1000I sum of infeasibilities 0 - average 0, 60 fixed columns
Coin0506I Presolve 5 (-117) rows, 4 (-61) columns and 11 (-355) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 6554.1667
Clp0000I Optimal - objective value 6554.1667
Coin0511I After Postsolve, objective 6554.1667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 6554.1667
Clp0000I Optimal - objective value 6554.1667
Clp0000I Optimal - objective value 6554.1667
Coin0511I After Postsolve, objective 6554.1667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6554.166744 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 65 columns (64 integer (64 of which binary)) and 456 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.244186
Cbc0038I Pass   1: suminf.    0.24419 (3) obj. -6554.17 iterations 0
Cbc0038I Solution found of -3423.34
Cbc0038I Relaxing continuous gives -3438.33
Cbc0038I Rounding solution of -3446.69 is better than previous of -3438.33

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 6 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -3446.69 to -3455.03 (0.02 seconds)
Cbc0038I Round again with cutoff of -3764.94
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.24419 (3) obj. -6554.17 iterations 0
Cbc0038I Pass   3: suminf.    0.28749 (3) obj. -3764.94 iterations 4
Cbc0038I Pass   4: suminf.    1.76457 (6) obj. -3764.94 iterations 16
Cbc0038I Pass   5: suminf.    0.36459 (4) obj. -3764.94 iterations 11
Cbc0038I Pass   6: suminf.    0.36459 (4) obj. -3764.94 iterations 0
Cbc0038I Pass   7: suminf.    1.25581 (3) obj. -4833.94 iterations 9
Cbc0038I Pass   8: suminf.    0.31486 (3) obj. -3764.94 iterations 1
Cbc0038I Pass   9: suminf.    0.47551 (7) obj. -3764.94 iterations 7
Cbc0038I Pass  10: suminf.    0.30452 (3) obj. -3764.94 iterations 16
Cbc0038I Pass  11: suminf.    0.41860 (3) obj. -3894.56 iterations 2
Cbc0038I Pass  12: suminf.    0.91610 (7) obj. -3764.94 iterations 16
Cbc0038I Pass  13: suminf.    0.64361 (4) obj. -3764.94 iterations 8
Cbc0038I Pass  14: suminf.    0.83721 (3) obj. -4375.25 iterations 9
Cbc0038I Pass  15: suminf.    0.30001 (3) obj. -3764.94 iterations 1
Cbc0038I Pass  16: suminf.    0.61638 (5) obj. -3764.94 iterations 10
Cbc0038I Pass  17: suminf.    0.31239 (3) obj. -3764.94 iterations 13
Cbc0038I Pass  18: suminf.    0.52326 (3) obj. -4004.5 iterations 2
Cbc0038I Pass  19: suminf.    0.90250 (5) obj. -3764.94 iterations 18
Cbc0038I Pass  20: suminf.    0.75900 (4) obj. -3764.94 iterations 3
Cbc0038I Pass  21: suminf.    0.76744 (3) obj. -4280.57 iterations 9
Cbc0038I Pass  22: suminf.    0.31358 (3) obj. -3764.94 iterations 1
Cbc0038I Pass  23: suminf.    1.23760 (7) obj. -3764.94 iterations 12
Cbc0038I Pass  24: suminf.    0.29541 (3) obj. -3764.94 iterations 8
Cbc0038I Pass  25: suminf.    0.97674 (3) obj. -4538.99 iterations 2
Cbc0038I Pass  26: suminf.    2.90444 (8) obj. -3764.94 iterations 8
Cbc0038I Pass  27: suminf.    0.57943 (6) obj. -3764.94 iterations 4
Cbc0038I Pass  28: suminf.    0.55814 (3) obj. -6203.61 iterations 6
Cbc0038I Pass  29: suminf.    0.55814 (3) obj. -6203.61 iterations 0
Cbc0038I Pass  30: suminf.    0.28551 (3) obj. -3764.94 iterations 4
Cbc0038I Pass  31: suminf.    2.39087 (7) obj. -3764.94 iterations 8
Cbc0038I Rounding solution of -3461.68 is better than previous of -3455.03

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 46 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -3461.68 to -3462.28 (0.03 seconds)
Cbc0038I Round again with cutoff of -4322.79
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.24419 (3) obj. -6554.17 iterations 0
Cbc0038I Pass  32: suminf.    0.77852 (3) obj. -4322.79 iterations 2
Cbc0038I Pass  33: suminf.    2.49454 (10) obj. -4322.79 iterations 11
Cbc0038I Pass  34: suminf.    0.75783 (3) obj. -4322.79 iterations 16
Cbc0038I Pass  35: suminf.    0.80233 (3) obj. -5918.66 iterations 4
Cbc0038I Pass  36: suminf.    0.80233 (3) obj. -5918.66 iterations 0
Cbc0038I Pass  37: suminf.    0.79295 (3) obj. -4322.79 iterations 1
Cbc0038I Pass  38: suminf.    1.91034 (7) obj. -4322.79 iterations 9
Cbc0038I Pass  39: suminf.    0.79559 (3) obj. -4322.79 iterations 7
Cbc0038I Pass  40: suminf.    1.43023 (3) obj. -5202.31 iterations 2
Cbc0038I Pass  41: suminf.    3.55858 (9) obj. -4322.79 iterations 13
Cbc0038I Pass  42: suminf.    2.97988 (8) obj. -4322.79 iterations 3
Cbc0038I Pass  43: suminf.    2.08001 (7) obj. -4322.79 iterations 2
Cbc0038I Pass  44: suminf.    0.55814 (3) obj. -6203.61 iterations 6
Cbc0038I Pass  45: suminf.    0.55814 (3) obj. -6203.61 iterations 0
Cbc0038I Pass  46: suminf.    0.77654 (3) obj. -4322.79 iterations 2
Cbc0038I Pass  47: suminf.    2.68784 (7) obj. -4322.79 iterations 8
Cbc0038I Pass  48: suminf.    2.68784 (7) obj. -4322.79 iterations 0
Cbc0038I Pass  49: suminf.    0.94186 (3) obj. -5746.91 iterations 7
Cbc0038I Pass  50: suminf.    0.94186 (3) obj. -5746.91 iterations 0
Cbc0038I Pass  51: suminf.    0.80460 (3) obj. -4322.79 iterations 1
Cbc0038I Pass  52: suminf.    2.51907 (7) obj. -4322.79 iterations 9
Cbc0038I Pass  53: suminf.    1.19627 (6) obj. -4322.79 iterations 4
Cbc0038I Pass  54: suminf.    1.19627 (6) obj. -4322.79 iterations 0
Cbc0038I Pass  55: suminf.    0.55814 (3) obj. -6203.61 iterations 9
Cbc0038I Pass  56: suminf.    0.55814 (3) obj. -6203.61 iterations 0
Cbc0038I Pass  57: suminf.    0.77654 (3) obj. -4322.79 iterations 2
Cbc0038I Pass  58: suminf.    1.37146 (5) obj. -4322.79 iterations 16
Cbc0038I Pass  59: suminf.    1.11368 (4) obj. -4322.79 iterations 5
Cbc0038I Pass  60: suminf.    1.32558 (3) obj. -4942.45 iterations 4
Cbc0038I Rounding solution of -3475.89 is better than previous of -3462.28

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 46 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -3475.89 to -3476.37 (0.04 seconds)
Cbc0038I Round again with cutoff of -4992.2
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.24419 (3) obj. -6554.17 iterations 0
Cbc0038I Pass  61: suminf.    1.36775 (3) obj. -4992.2 iterations 2
Cbc0038I Pass  62: suminf.    1.96606 (9) obj. -4992.2 iterations 11
Cbc0038I Pass  63: suminf.    1.38394 (3) obj. -4992.2 iterations 9
Cbc0038I Pass  64: suminf.    1.46512 (3) obj. -5163.68 iterations 2
Cbc0038I Pass  65: suminf.    2.34327 (6) obj. -4992.2 iterations 11
Cbc0038I Pass  66: suminf.    1.39265 (3) obj. -4992.2 iterations 12
Cbc0038I Pass  67: suminf.    1.18605 (3) obj. -5470.84 iterations 2
Cbc0038I Pass  68: suminf.    1.81881 (4) obj. -4992.2 iterations 5
Cbc0038I Pass  69: suminf.    1.81881 (4) obj. -4992.2 iterations 3
Cbc0038I Pass  70: suminf.    1.39265 (3) obj. -4992.2 iterations 2
Cbc0038I Pass  71: suminf.    3.20634 (7) obj. -4992.2 iterations 12
Cbc0038I Pass  72: suminf.    2.41229 (6) obj. -4992.2 iterations 6
Cbc0038I Pass  73: suminf.    0.55814 (3) obj. -6203.61 iterations 9
Cbc0038I Pass  74: suminf.    1.36577 (3) obj. -4992.2 iterations 2
Cbc0038I Pass  75: suminf.    3.14913 (7) obj. -4992.2 iterations 15
Cbc0038I Pass  76: suminf.    1.38344 (3) obj. -4992.2 iterations 11
Cbc0038I Pass  77: suminf.    0.97674 (3) obj. -5719.09 iterations 2
Cbc0038I Pass  78: suminf.    2.11986 (5) obj. -4992.2 iterations 5
Cbc0038I Pass  79: suminf.    1.44818 (4) obj. -4992.2 iterations 9
Cbc0038I Pass  80: suminf.    2.18148 (5) obj. -4992.2 iterations 2
Cbc0038I Pass  81: suminf.    1.44818 (4) obj. -4992.2 iterations 10
Cbc0038I Pass  82: suminf.    1.44818 (4) obj. -4992.2 iterations 3
Cbc0038I Pass  83: suminf.    2.18343 (5) obj. -4992.2 iterations 12
Cbc0038I Pass  84: suminf.    1.39265 (3) obj. -4992.2 iterations 9
Cbc0038I Pass  85: suminf.    1.18605 (3) obj. -5470.84 iterations 2
Cbc0038I Pass  86: suminf.    1.64264 (6) obj. -4992.2 iterations 10
Cbc0038I Pass  87: suminf.    1.12421 (3) obj. -4992.2 iterations 9
Cbc0038I Pass  88: suminf.    1.39265 (3) obj. -4992.2 iterations 1
Cbc0038I Pass  89: suminf.    1.96012 (5) obj. -4992.2 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -3476.37 - took 0.03 seconds
Cbc0012I Integer solution of -3476.3657 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 121 rows 65 columns, reduced to 11 rows 7 columns
Cbc0031I 8 added rows had average density of 4.5
Cbc0013I At root node, 8 cuts changed objective from -6554.1667 to -3493.8518 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 3.4 elements, 23 column cuts (23 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3476.365700000001, took 195 iterations and 2 nodes (0.07 seconds)
Cbc0032I Strong branching done 30 times (234 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 111 (-42) columns and 1917 (-1387) elements
Clp1000I sum of infeasibilities 0 - average 0, 96 fixed columns
Coin0506I Presolve 14 (-91) rows, 14 (-97) columns and 35 (-1882) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 6587.0679
Clp0000I Optimal - objective value 6587.0679
Coin0511I After Postsolve, objective 6587.0679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 6587.0679
Clp0000I Optimal - objective value 6587.0679
Clp0000I Optimal - objective value 6587.0679
Coin0511I After Postsolve, objective 6587.0679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6587.067919 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 111 columns (111 integer (111 of which binary)) and 1958 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.587%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.72067
Cbc0038I Pass   1: suminf.    0.24419 (3) obj. -6551.16 iterations 12
Cbc0038I Solution found of -3420.33
Cbc0038I Rounding solution of -3461.68 is better than previous of -3420.33

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 111 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3771.96
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.24419 (3) obj. -6551.16 iterations 0
Cbc0038I Pass   3: suminf.    0.30951 (3) obj. -3771.96 iterations 3
Cbc0038I Pass   4: suminf.    0.99278 (29) obj. -3771.96 iterations 40
Cbc0038I Pass   5: suminf.    0.58698 (7) obj. -3771.96 iterations 28
Cbc0038I Pass   6: suminf.    1.11628 (3) obj. -5564.92 iterations 5
Cbc0038I Pass   7: suminf.    0.30552 (3) obj. -3771.96 iterations 3
Cbc0038I Pass   8: suminf.    1.31736 (18) obj. -3771.96 iterations 35
Cbc0038I Pass   9: suminf.    1.18921 (17) obj. -3771.96 iterations 6
Cbc0038I Pass  10: suminf.    1.25581 (3) obj. -4830.79 iterations 16
Cbc0038I Pass  11: suminf.    0.32382 (3) obj. -3771.96 iterations 3
Cbc0038I Pass  12: suminf.    1.63081 (7) obj. -3771.96 iterations 22
Cbc0038I Pass  13: suminf.    0.33115 (4) obj. -3771.96 iterations 9
Cbc0038I Pass  14: suminf.    1.46512 (3) obj. -5140.68 iterations 5
Cbc0038I Pass  15: suminf.    0.33011 (3) obj. -3771.96 iterations 4
Cbc0038I Pass  16: suminf.    2.62860 (11) obj. -3771.96 iterations 20
Cbc0038I Pass  17: suminf.    1.57458 (11) obj. -3771.96 iterations 5
Cbc0038I Pass  18: suminf.    1.57458 (11) obj. -3771.96 iterations 0
Cbc0038I Pass  19: suminf.    0.34032 (3) obj. -3771.96 iterations 12
Cbc0038I Pass  20: suminf.    0.34032 (3) obj. -3771.96 iterations 0
Cbc0038I Pass  21: suminf.    0.24419 (3) obj. -6516.16 iterations 1
Cbc0038I Pass  22: suminf.    0.53177 (3) obj. -3771.96 iterations 15
Cbc0038I Pass  23: suminf.    0.53177 (3) obj. -3771.96 iterations 3
Cbc0038I Pass  24: suminf.    0.25926 (1) obj. -5921.8 iterations 2
Cbc0038I Pass  25: suminf.    0.10648 (1) obj. -3771.96 iterations 1
Cbc0038I Pass  26: suminf.    0.44860 (4) obj. -3771.96 iterations 29
Cbc0038I Pass  27: suminf.    0.44860 (4) obj. -3771.96 iterations 5
Cbc0038I Pass  28: suminf.    0.40741 (1) obj. -4796.2 iterations 4
Cbc0038I Pass  29: suminf.    0.10523 (1) obj. -3771.96 iterations 1
Cbc0038I Pass  30: suminf.    0.96379 (11) obj. -3771.96 iterations 16
Cbc0038I Pass  31: suminf.    0.96379 (11) obj. -3771.96 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 111 columns, reduced to 47 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3461.68 - took 0.02 seconds
Cbc0012I Integer solution of -3461.68 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 104 rows 111 columns, reduced to 12 rows 12 columns
Cbc0031I 43 added rows had average density of 17.976744
Cbc0013I At root node, 43 cuts changed objective from -6559.4055 to -3487.9591 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 998 row cuts average 7.5 elements, 8 column cuts (42 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 20 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 232 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 34.5 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -3461.68 best solution, best possible -3487.9591 (0.63 seconds)
Cbc0012I Integer solution of -3467.1229 found by DiveCoefficient after 566 iterations and 4 nodes (0.71 seconds)
Cbc0012I Integer solution of -3473.58 found by DiveCoefficient after 567 iterations and 5 nodes (0.72 seconds)
Cbc0012I Integer solution of -3475.0086 found by DiveCoefficient after 590 iterations and 6 nodes (0.75 seconds)
Cbc0012I Integer solution of -3475.8943 found by DiveCoefficient after 635 iterations and 7 nodes (0.79 seconds)
Cbc0016I Integer solution of -3476.3657 found by strong branching after 651 iterations and 7 nodes (0.80 seconds)
Cbc0001I Search completed - best objective -3476.365700000001, took 1150 iterations and 24 nodes (0.96 seconds)
Cbc0032I Strong branching done 436 times (6858 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 11, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.97

