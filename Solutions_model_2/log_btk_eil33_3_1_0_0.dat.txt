Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 30 (-5) columns and 163 (-32) elements
Clp1000I sum of infeasibilities 5.77034e-05 - average 1.04915e-06, 1 fixed columns
Coin0506I Presolve 54 (-1) rows, 29 (-1) columns and 159 (-4) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Coin0511I After Postsolve, objective 87.228915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Coin0511I After Postsolve, objective 87.228915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.22891545 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 170 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.825%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.2985
Cbc0038I Solution found of -7.77244
Cbc0038I Relaxing continuous gives -15.1058
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -15.1058 to -20.842 (0.02 seconds)
Cbc0038I Round again with cutoff of -27.0553
Cbc0038I Pass   1: suminf.    0.61537 (4) obj. -27.0553 iterations 29
Cbc0038I Pass   2: suminf.    0.34929 (1) obj. -27.0553 iterations 7
Cbc0038I Pass   3: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass   4: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass   5: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass   6: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass   7: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass   8: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass   9: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  10: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  11: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  12: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  13: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  14: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  15: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  16: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  17: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  18: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  19: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  20: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  21: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  22: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  23: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  24: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  25: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  26: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  27: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  28: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  29: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  30: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -20.842 - took 0.02 seconds
Cbc0012I Integer solution of -20.84196 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 10 added rows had average density of 24.2
Cbc0013I At root node, 10 cuts changed objective from -82.974129 to -52.832621 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2049 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 973 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.84196, took 3262 iterations and 10 nodes (0.23 seconds)
Cbc0032I Strong branching done 158 times (2357 iterations), fathomed 0 nodes and fixed 15 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-14) rows, 57 (-9) columns and 576 (-147) elements
Clp1000I sum of infeasibilities 1.33934e-09 - average 2.48025e-11, 37 fixed columns
Coin0506I Presolve 17 (-37) rows, 20 (-37) columns and 69 (-507) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 16.618179
Clp0000I Optimal - objective value 16.618179
Coin0511I After Postsolve, objective 16.618179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3717225 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 139.96399
Clp0000I Optimal - objective value 139.96399
Clp0000I Optimal - objective value 139.96399
Coin0511I After Postsolve, objective 139.96399, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 139.963995 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 55 columns (55 integer (55 of which binary)) and 535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.075%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 5.40826
Cbc0038I Pass   1: suminf.    3.47631 (19) obj. -64.3532 iterations 4
Cbc0038I Pass   2: suminf.    3.14690 (17) obj. -63.6708 iterations 2
Cbc0038I Solution found of 13.3849
Cbc0038I Rounding solution of 4.55906 is better than previous of 13.3849

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 4.55906 to -14.7328 (0.02 seconds)
Cbc0038I Round again with cutoff of -20.4975
Cbc0038I Pass   3: suminf.    3.47631 (19) obj. -64.3532 iterations 0
Cbc0038I Pass   4: suminf.    3.14690 (17) obj. -63.6708 iterations 2
Cbc0038I Pass   5: suminf.    0.94428 (4) obj. -20.4975 iterations 23
Cbc0038I Pass   6: suminf.    0.77259 (3) obj. -20.4975 iterations 1
Cbc0038I Pass   7: suminf.    0.23491 (2) obj. -24.3148 iterations 2
Cbc0038I Pass   8: suminf.    1.56940 (10) obj. -20.4975 iterations 9
Cbc0038I Pass   9: suminf.    1.35658 (9) obj. -20.4975 iterations 3
Cbc0038I Pass  10: suminf.    0.91393 (3) obj. -20.4975 iterations 8
Cbc0038I Pass  11: suminf.    0.75000 (3) obj. -24.268 iterations 1
Cbc0038I Pass  12: suminf.    1.12914 (4) obj. -20.4975 iterations 3
Cbc0038I Pass  13: suminf.    1.75888 (8) obj. -20.4975 iterations 15
Cbc0038I Pass  14: suminf.    1.75888 (8) obj. -20.4975 iterations 3
Cbc0038I Pass  15: suminf.    0.34343 (2) obj. -20.4975 iterations 8
Cbc0038I Pass  16: suminf.    0.34299 (3) obj. -20.4975 iterations 1
Cbc0038I Pass  17: suminf.    0.99081 (3) obj. -20.4975 iterations 3
Cbc0038I Pass  18: suminf.    0.99081 (3) obj. -20.4975 iterations 0
Cbc0038I Pass  19: suminf.    0.55991 (3) obj. -20.4975 iterations 1
Cbc0038I Pass  20: suminf.    0.55991 (3) obj. -20.4975 iterations 0
Cbc0038I Pass  21: suminf.    0.99081 (3) obj. -20.4975 iterations 2
Cbc0038I Pass  22: suminf.    1.74415 (7) obj. -20.4975 iterations 10
Cbc0038I Pass  23: suminf.    1.58697 (7) obj. -20.4975 iterations 2
Cbc0038I Pass  24: suminf.    1.11860 (6) obj. -25.6495 iterations 1
Cbc0038I Pass  25: suminf.    1.48267 (4) obj. -20.4975 iterations 7
Cbc0038I Pass  26: suminf.    1.20402 (4) obj. -26.287 iterations 1
Cbc0038I Pass  27: suminf.    3.23329 (16) obj. -24.8709 iterations 23
Cbc0038I Pass  28: suminf.    2.00704 (9) obj. -29.547 iterations 6
Cbc0038I Pass  29: suminf.    2.00704 (9) obj. -29.547 iterations 2
Cbc0038I Pass  30: suminf.    0.95642 (4) obj. -20.4975 iterations 8
Cbc0038I Pass  31: suminf.    0.95642 (4) obj. -20.4975 iterations 0
Cbc0038I Pass  32: suminf.    0.98850 (4) obj. -20.4975 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -14.7328 - took 0.01 seconds
Cbc0012I Integer solution of -14.73278 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 52 rows 55 columns, reduced to 7 rows 8 columns
Cbc0031I 28 added rows had average density of 22
Cbc0013I At root node, 28 cuts changed objective from -72.378897 to -33.083001 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3255 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1123 row cuts average 48.3 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 247 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 266 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 545 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.700 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.73278 best solution, best possible -33.083001 (1.64 seconds)
Cbc0012I Integer solution of -17.3516 found by DiveCoefficient after 2933 iterations and 2 nodes (1.82 seconds)
Cbc0012I Integer solution of -20.40685 found by DiveCoefficient after 3086 iterations and 2 nodes (1.95 seconds)
Cbc0012I Integer solution of -20.84196 found by DiveCoefficient after 3099 iterations and 3 nodes (1.97 seconds)
Cbc0001I Search completed - best objective -20.84196, took 3780 iterations and 10 nodes (2.29 seconds)
Cbc0032I Strong branching done 222 times (3116 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.57   (Wallclock seconds):       2.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 30 (-5) columns and 163 (-32) elements
Clp1000I sum of infeasibilities 5.77034e-05 - average 1.04915e-06, 1 fixed columns
Coin0506I Presolve 54 (-1) rows, 29 (-1) columns and 159 (-4) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Coin0511I After Postsolve, objective 87.228915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Clp0000I Optimal - objective value 87.228915
Coin0511I After Postsolve, objective 87.228915, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.22891545 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 55 rows, 30 columns (29 integer (29 of which binary)) and 170 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.825%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.2985
Cbc0038I Solution found of -7.77244
Cbc0038I Relaxing continuous gives -15.1058
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -15.1058 to -20.842 (0.02 seconds)
Cbc0038I Round again with cutoff of -27.0553
Cbc0038I Pass   1: suminf.    0.61537 (4) obj. -27.0553 iterations 29
Cbc0038I Pass   2: suminf.    0.34929 (1) obj. -27.0553 iterations 7
Cbc0038I Pass   3: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass   4: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass   5: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass   6: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass   7: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass   8: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass   9: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  10: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  11: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  12: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  13: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  14: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  15: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  16: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  17: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  18: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  19: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  20: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  21: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  22: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  23: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  24: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  25: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I Pass  26: suminf.    0.71530 (2) obj. -27.0553 iterations 6
Cbc0038I Pass  27: suminf.    0.34929 (1) obj. -27.0553 iterations 2
Cbc0038I Pass  28: suminf.    0.27151 (2) obj. -27.0553 iterations 3
Cbc0038I Pass  29: suminf.    0.81902 (2) obj. -27.0553 iterations 1
Cbc0038I Pass  30: suminf.    0.78730 (3) obj. -27.0553 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 30 columns, reduced to 47 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -20.842 - took 0.02 seconds
Cbc0012I Integer solution of -20.84196 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 10 added rows had average density of 24.2
Cbc0013I At root node, 10 cuts changed objective from -82.974129 to -52.832621 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2049 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 973 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.84196, took 3262 iterations and 10 nodes (0.21 seconds)
Cbc0032I Strong branching done 158 times (2357 iterations), fathomed 0 nodes and fixed 15 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-17) rows, 55 (-12) columns and 526 (-198) elements
Clp1000I sum of infeasibilities 2.33189e-08 - average 4.48441e-10, 34 fixed columns
Coin0506I Presolve 20 (-32) rows, 21 (-34) columns and 77 (-449) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 1.8864025 - largest nonzero change 1.7174178e-05 ( 0.001262127%) - largest zero change 1.573335e-05
Clp0000I Optimal - objective value -3.5553127
Clp0000I Optimal - objective value -3.5553127
Coin0511I After Postsolve, objective -3.5553127, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.39354 - largest nonzero change 1.7325834e-05 ( 0.0017325834%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 104.05455
Clp0000I Optimal - objective value 104.05455
Clp0000I Optimal - objective value 104.05455
Coin0511I After Postsolve, objective 104.05455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.0545537 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 55 columns (55 integer (55 of which binary)) and 535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.059%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.99072
Cbc0038I Pass   1: suminf.    2.62464 (19) obj. -64.8725 iterations 14
Cbc0038I Pass   2: suminf.    2.62464 (19) obj. -64.8725 iterations 2
Cbc0038I Solution found of 64.8038
Cbc0038I Rounding solution of 7.8942 is better than previous of 64.8038

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 25 rows 26 columns
Cbc0038I Mini branch and bound improved solution from 7.8942 to -20.842 (0.02 seconds)
Cbc0038I Round again with cutoff of -26.2397
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.62464 (19) obj. -64.8725 iterations 0
Cbc0038I Pass   4: suminf.    2.62464 (19) obj. -64.8725 iterations 2
Cbc0038I Pass   5: suminf.    0.71407 (4) obj. -26.2397 iterations 31
Cbc0038I Pass   6: suminf.    0.30774 (4) obj. -29.4487 iterations 3
Cbc0038I Pass   7: suminf.    0.30531 (3) obj. -26.2397 iterations 2
Cbc0038I Pass   8: suminf.    0.24107 (3) obj. -27.582 iterations 2
Cbc0038I Pass   9: suminf.    2.28397 (10) obj. -26.2397 iterations 15
Cbc0038I Pass  10: suminf.    0.62624 (4) obj. -26.2397 iterations 3
Cbc0038I Pass  11: suminf.    0.57787 (3) obj. -26.2397 iterations 4
Cbc0038I Pass  12: suminf.    0.55179 (3) obj. -26.8396 iterations 1
Cbc0038I Pass  13: suminf.    0.58049 (3) obj. -26.2397 iterations 1
Cbc0038I Pass  14: suminf.    1.90575 (11) obj. -26.2397 iterations 12
Cbc0038I Pass  15: suminf.    1.57816 (10) obj. -26.2397 iterations 3
Cbc0038I Pass  16: suminf.    1.18165 (4) obj. -26.2397 iterations 10
Cbc0038I Pass  17: suminf.    1.04212 (4) obj. -29.1972 iterations 2
Cbc0038I Pass  18: suminf.    1.22800 (4) obj. -26.2397 iterations 2
Cbc0038I Pass  19: suminf.    1.10810 (4) obj. -26.2397 iterations 3
Cbc0038I Pass  20: suminf.    1.18760 (4) obj. -26.2397 iterations 1
Cbc0038I Pass  21: suminf.    0.92132 (4) obj. -31.8043 iterations 2
Cbc0038I Pass  22: suminf.    0.93459 (8) obj. -26.2397 iterations 7
Cbc0038I Pass  23: suminf.    0.93459 (8) obj. -26.2397 iterations 0
Cbc0038I Pass  24: suminf.    0.96915 (4) obj. -26.2397 iterations 6
Cbc0038I Pass  25: suminf.    0.88214 (3) obj. -27.1688 iterations 2
Cbc0038I Pass  26: suminf.    0.92661 (3) obj. -26.2397 iterations 1
Cbc0038I Pass  27: suminf.    2.36737 (16) obj. -26.2397 iterations 20
Cbc0038I Pass  28: suminf.    2.24512 (9) obj. -26.4608 iterations 7
Cbc0038I Pass  29: suminf.    1.26464 (4) obj. -26.2397 iterations 11
Cbc0038I Pass  30: suminf.    1.07500 (3) obj. -28.3257 iterations 3
Cbc0038I Pass  31: suminf.    1.17482 (3) obj. -26.2397 iterations 1
Cbc0038I Pass  32: suminf.    1.66975 (12) obj. -26.2397 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 55 columns, reduced to 36 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -20.842 - took 0.03 seconds
Cbc0012I Integer solution of -20.84196 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 52 rows 55 columns, reduced to 25 rows 26 columns
Cbc0031I 22 added rows had average density of 9.3636364
Cbc0013I At root node, 22 cuts changed objective from -74.818113 to -24.963743 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1982 row cuts average 3.2 elements, 8 column cuts (8 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 552 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 111 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 184 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 228 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 151 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.732 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.84196 best solution, best possible -24.963743 (1.54 seconds)
Cbc0001I Search completed - best objective -20.84196, took 1921 iterations and 2 nodes (1.75 seconds)
Cbc0032I Strong branching done 70 times (1065 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.75

