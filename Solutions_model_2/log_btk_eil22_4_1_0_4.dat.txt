Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 22 (-25) rows, 13 (-11) columns and 64 (-65) elements
Clp0000I Optimal - objective value 108.63082
Coin0511I After Postsolve, objective 108.63082, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.6308202 - 17 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 21 rows, 13 columns (12 integer (12 of which binary)) and 63 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.983%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.2089
Cbc0038I Solution found of -20.6127
Cbc0038I Relaxing continuous gives -28.5
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 13 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -28.5 to -61 (0.00 seconds)
Cbc0038I Round again with cutoff of -65.8657
Cbc0038I Pass   1: suminf.    0.92598 (5) obj. -65.8657 iterations 4
Cbc0038I Pass   2: suminf.    1.24447 (3) obj. -65.8657 iterations 9
Cbc0038I Pass   3: suminf.    0.68793 (2) obj. -65.8657 iterations 1
Cbc0038I Pass   4: suminf.    0.68793 (2) obj. -65.8657 iterations 0
Cbc0038I Pass   5: suminf.    0.53407 (2) obj. -65.8657 iterations 3
Cbc0038I Pass   6: suminf.    0.46965 (2) obj. -65.8657 iterations 2
Cbc0038I Pass   7: suminf.    1.01088 (4) obj. -65.8657 iterations 3
Cbc0038I Pass   8: suminf.    0.84199 (3) obj. -65.8657 iterations 2
Cbc0038I Pass   9: suminf.    0.13151 (3) obj. -65.8657 iterations 4
Cbc0038I Pass  10: suminf.    0.13092 (3) obj. -65.8657 iterations 1
Cbc0038I Pass  11: suminf.    1.24447 (3) obj. -65.8657 iterations 6
Cbc0038I Pass  12: suminf.    0.68793 (2) obj. -65.8657 iterations 1
Cbc0038I Pass  13: suminf.    0.68793 (2) obj. -65.8657 iterations 0
Cbc0038I Pass  14: suminf.    0.53407 (2) obj. -65.8657 iterations 3
Cbc0038I Pass  15: suminf.    0.46965 (2) obj. -65.8657 iterations 2
Cbc0038I Pass  16: suminf.    1.79077 (5) obj. -65.8657 iterations 5
Cbc0038I Pass  17: suminf.    1.79077 (5) obj. -65.8657 iterations 0
Cbc0038I Pass  18: suminf.    0.13092 (3) obj. -65.8657 iterations 6
Cbc0038I Pass  19: suminf.    0.13092 (3) obj. -65.8657 iterations 1
Cbc0038I Pass  20: suminf.    1.24447 (3) obj. -65.8657 iterations 6
Cbc0038I Pass  21: suminf.    0.68793 (2) obj. -65.8657 iterations 1
Cbc0038I Pass  22: suminf.    0.68793 (2) obj. -65.8657 iterations 0
Cbc0038I Pass  23: suminf.    0.53407 (2) obj. -65.8657 iterations 3
Cbc0038I Pass  24: suminf.    0.46965 (2) obj. -65.8657 iterations 2
Cbc0038I Pass  25: suminf.    0.74388 (4) obj. -65.8657 iterations 3
Cbc0038I Pass  26: suminf.    0.46965 (2) obj. -65.8657 iterations 3
Cbc0038I Pass  27: suminf.    0.68793 (2) obj. -65.8657 iterations 1
Cbc0038I Pass  28: suminf.    0.68793 (2) obj. -65.8657 iterations 0
Cbc0038I Pass  29: suminf.    0.53407 (2) obj. -65.8657 iterations 3
Cbc0038I Pass  30: suminf.    0.53407 (2) obj. -65.8657 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 13 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -61 - took 0.01 seconds
Cbc0012I Integer solution of -61 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 13 columns, reduced to 12 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 3
Cbc0013I At root node, 4 cuts changed objective from -105.15815 to -61 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.7 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -61, took 12 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-17) rows, 31 (-13) columns and 176 (-184) elements
Clp1000I sum of infeasibilities 5.17798e-11 - average 1.78551e-12, 3 fixed columns
Coin0506I Presolve 26 (-3) rows, 28 (-3) columns and 135 (-41) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 3.8494136 - largest nonzero change 1.513924e-05 ( 0.00096990836%) - largest zero change 1.3019228e-05
Clp0000I Optimal - objective value 129.43566
Clp0000I Optimal - objective value 129.43566
Coin0511I After Postsolve, objective 129.43566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 129.43566
Clp0000I Optimal - objective value 129.43566
Clp0000I Optimal - objective value 129.43566
Coin0511I After Postsolve, objective 129.43566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129.4356567 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 31 columns (31 integer (31 of which binary)) and 179 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.244%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.73996
Cbc0038I Pass   1: suminf.    0.94444 (2) obj. -70.5 iterations 17
Cbc0038I Solution found of -61
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 31 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -64.4153
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.94444 (2) obj. -70.5 iterations 0
Cbc0038I Pass   3: suminf.    0.09189 (3) obj. -64.4153 iterations 4
Cbc0038I Pass   4: suminf.    0.34092 (4) obj. -64.4153 iterations 4
Cbc0038I Pass   5: suminf.    1.35008 (4) obj. -64.4153 iterations 5
Cbc0038I Pass   6: suminf.    0.78461 (2) obj. -64.4153 iterations 3
Cbc0038I Pass   7: suminf.    0.50000 (1) obj. -67 iterations 4
Cbc0038I Pass   8: suminf.    0.61278 (3) obj. -64.4153 iterations 5
Cbc0038I Pass   9: suminf.    2.33732 (7) obj. -64.4153 iterations 12
Cbc0038I Pass  10: suminf.    2.79258 (8) obj. -64.4153 iterations 4
Cbc0038I Pass  11: suminf.    0.44444 (1) obj. -66 iterations 8
Cbc0038I Pass  12: suminf.    0.09189 (3) obj. -64.4153 iterations 3
Cbc0038I Pass  13: suminf.    0.34092 (4) obj. -64.4153 iterations 4
Cbc0038I Pass  14: suminf.    0.87525 (4) obj. -64.4153 iterations 7
Cbc0038I Pass  15: suminf.    2.92858 (9) obj. -64.4153 iterations 13
Cbc0038I Pass  16: suminf.    1.63574 (6) obj. -64.4153 iterations 4
Cbc0038I Pass  17: suminf.    0.58715 (3) obj. -64.4153 iterations 6
Cbc0038I Pass  18: suminf.    0.50498 (4) obj. -64.4153 iterations 3
Cbc0038I Pass  19: suminf.    0.79032 (5) obj. -64.4153 iterations 3
Cbc0038I Pass  20: suminf.    2.26465 (8) obj. -64.4153 iterations 12
Cbc0038I Pass  21: suminf.    0.61034 (4) obj. -64.4153 iterations 11
Cbc0038I Pass  22: suminf.    0.63461 (3) obj. -64.4153 iterations 6
Cbc0038I Pass  23: suminf.    2.51628 (11) obj. -64.4153 iterations 16
Cbc0038I Pass  24: suminf.    1.59563 (8) obj. -64.4153 iterations 6
Cbc0038I Pass  25: suminf.    1.59563 (8) obj. -64.4153 iterations 0
Cbc0038I Pass  26: suminf.    1.03117 (6) obj. -64.4153 iterations 7
Cbc0038I Pass  27: suminf.    0.76856 (5) obj. -64.4153 iterations 5
Cbc0038I Pass  28: suminf.    0.84170 (4) obj. -64.4153 iterations 5
Cbc0038I Pass  29: suminf.    0.69775 (5) obj. -64.4153 iterations 1
Cbc0038I Pass  30: suminf.    1.82458 (6) obj. -64.4153 iterations 2
Cbc0038I Pass  31: suminf.    0.95891 (4) obj. -64.4153 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 31 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -61 - took 0.01 seconds
Cbc0012I Integer solution of -61 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 1 added rows had average density of 11
Cbc0013I At root node, 24 cuts changed objective from -90.653695 to -61 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.0 elements, 16 column cuts (16 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0001I Search completed - best objective -61, took 14 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 22 (-25) rows, 13 (-11) columns and 64 (-65) elements
Clp0000I Optimal - objective value 108.63082
Coin0511I After Postsolve, objective 108.63082, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.6308202 - 17 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 21 rows, 13 columns (12 integer (12 of which binary)) and 63 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.983%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.2089
Cbc0038I Solution found of -20.6127
Cbc0038I Relaxing continuous gives -28.5
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 13 columns, reduced to 12 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -28.5 to -61 (0.01 seconds)
Cbc0038I Round again with cutoff of -65.8657
Cbc0038I Pass   1: suminf.    0.92598 (5) obj. -65.8657 iterations 4
Cbc0038I Pass   2: suminf.    1.24447 (3) obj. -65.8657 iterations 9
Cbc0038I Pass   3: suminf.    0.68793 (2) obj. -65.8657 iterations 1
Cbc0038I Pass   4: suminf.    0.68793 (2) obj. -65.8657 iterations 0
Cbc0038I Pass   5: suminf.    0.53407 (2) obj. -65.8657 iterations 3
Cbc0038I Pass   6: suminf.    0.46965 (2) obj. -65.8657 iterations 2
Cbc0038I Pass   7: suminf.    1.01088 (4) obj. -65.8657 iterations 3
Cbc0038I Pass   8: suminf.    0.84199 (3) obj. -65.8657 iterations 2
Cbc0038I Pass   9: suminf.    0.13151 (3) obj. -65.8657 iterations 4
Cbc0038I Pass  10: suminf.    0.13092 (3) obj. -65.8657 iterations 1
Cbc0038I Pass  11: suminf.    1.24447 (3) obj. -65.8657 iterations 6
Cbc0038I Pass  12: suminf.    0.68793 (2) obj. -65.8657 iterations 1
Cbc0038I Pass  13: suminf.    0.68793 (2) obj. -65.8657 iterations 0
Cbc0038I Pass  14: suminf.    0.53407 (2) obj. -65.8657 iterations 3
Cbc0038I Pass  15: suminf.    0.46965 (2) obj. -65.8657 iterations 2
Cbc0038I Pass  16: suminf.    1.79077 (5) obj. -65.8657 iterations 5
Cbc0038I Pass  17: suminf.    1.79077 (5) obj. -65.8657 iterations 0
Cbc0038I Pass  18: suminf.    0.13092 (3) obj. -65.8657 iterations 6
Cbc0038I Pass  19: suminf.    0.13092 (3) obj. -65.8657 iterations 1
Cbc0038I Pass  20: suminf.    1.24447 (3) obj. -65.8657 iterations 6
Cbc0038I Pass  21: suminf.    0.68793 (2) obj. -65.8657 iterations 1
Cbc0038I Pass  22: suminf.    0.68793 (2) obj. -65.8657 iterations 0
Cbc0038I Pass  23: suminf.    0.53407 (2) obj. -65.8657 iterations 3
Cbc0038I Pass  24: suminf.    0.46965 (2) obj. -65.8657 iterations 2
Cbc0038I Pass  25: suminf.    0.74388 (4) obj. -65.8657 iterations 3
Cbc0038I Pass  26: suminf.    0.46965 (2) obj. -65.8657 iterations 3
Cbc0038I Pass  27: suminf.    0.68793 (2) obj. -65.8657 iterations 1
Cbc0038I Pass  28: suminf.    0.68793 (2) obj. -65.8657 iterations 0
Cbc0038I Pass  29: suminf.    0.53407 (2) obj. -65.8657 iterations 3
Cbc0038I Pass  30: suminf.    0.53407 (2) obj. -65.8657 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 13 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -61 - took 0.01 seconds
Cbc0012I Integer solution of -61 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 21 rows 13 columns, reduced to 12 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 3
Cbc0013I At root node, 4 cuts changed objective from -105.15815 to -61 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 2.7 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -61, took 12 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-18) rows, 31 (-14) columns and 176 (-185) elements
Clp1000I sum of infeasibilities 5.17798e-11 - average 1.78551e-12, 3 fixed columns
Coin0506I Presolve 26 (-3) rows, 28 (-3) columns and 135 (-41) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 3.8494136 - largest nonzero change 1.513924e-05 ( 0.00096990836%) - largest zero change 1.3019228e-05
Clp0000I Optimal - objective value 129.43566
Clp0000I Optimal - objective value 129.43566
Coin0511I After Postsolve, objective 129.43566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 129.43566
Clp0000I Optimal - objective value 129.43566
Clp0000I Optimal - objective value 129.43566
Coin0511I After Postsolve, objective 129.43566, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 129.4356567 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 31 columns (31 integer (31 of which binary)) and 179 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.244%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.73996
Cbc0038I Pass   1: suminf.    0.94444 (2) obj. -70.5 iterations 17
Cbc0038I Solution found of -61
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 31 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -64.4153
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.94444 (2) obj. -70.5 iterations 0
Cbc0038I Pass   3: suminf.    0.09189 (3) obj. -64.4153 iterations 4
Cbc0038I Pass   4: suminf.    0.34092 (4) obj. -64.4153 iterations 4
Cbc0038I Pass   5: suminf.    1.35008 (4) obj. -64.4153 iterations 5
Cbc0038I Pass   6: suminf.    0.78461 (2) obj. -64.4153 iterations 3
Cbc0038I Pass   7: suminf.    0.50000 (1) obj. -67 iterations 4
Cbc0038I Pass   8: suminf.    0.61278 (3) obj. -64.4153 iterations 5
Cbc0038I Pass   9: suminf.    2.33732 (7) obj. -64.4153 iterations 12
Cbc0038I Pass  10: suminf.    2.79258 (8) obj. -64.4153 iterations 4
Cbc0038I Pass  11: suminf.    0.44444 (1) obj. -66 iterations 8
Cbc0038I Pass  12: suminf.    0.09189 (3) obj. -64.4153 iterations 3
Cbc0038I Pass  13: suminf.    0.34092 (4) obj. -64.4153 iterations 4
Cbc0038I Pass  14: suminf.    0.87525 (4) obj. -64.4153 iterations 7
Cbc0038I Pass  15: suminf.    2.92858 (9) obj. -64.4153 iterations 13
Cbc0038I Pass  16: suminf.    1.63574 (6) obj. -64.4153 iterations 4
Cbc0038I Pass  17: suminf.    0.58715 (3) obj. -64.4153 iterations 6
Cbc0038I Pass  18: suminf.    0.50498 (4) obj. -64.4153 iterations 3
Cbc0038I Pass  19: suminf.    0.79032 (5) obj. -64.4153 iterations 3
Cbc0038I Pass  20: suminf.    2.26465 (8) obj. -64.4153 iterations 12
Cbc0038I Pass  21: suminf.    0.61034 (4) obj. -64.4153 iterations 11
Cbc0038I Pass  22: suminf.    0.63461 (3) obj. -64.4153 iterations 6
Cbc0038I Pass  23: suminf.    2.51628 (11) obj. -64.4153 iterations 16
Cbc0038I Pass  24: suminf.    1.59563 (8) obj. -64.4153 iterations 6
Cbc0038I Pass  25: suminf.    1.59563 (8) obj. -64.4153 iterations 0
Cbc0038I Pass  26: suminf.    1.03117 (6) obj. -64.4153 iterations 7
Cbc0038I Pass  27: suminf.    0.76856 (5) obj. -64.4153 iterations 5
Cbc0038I Pass  28: suminf.    0.84170 (4) obj. -64.4153 iterations 5
Cbc0038I Pass  29: suminf.    0.69775 (5) obj. -64.4153 iterations 1
Cbc0038I Pass  30: suminf.    1.82458 (6) obj. -64.4153 iterations 2
Cbc0038I Pass  31: suminf.    0.95891 (4) obj. -64.4153 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 31 columns, reduced to 25 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -61 - took 0.01 seconds
Cbc0012I Integer solution of -61 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 1 added rows had average density of 11
Cbc0013I At root node, 24 cuts changed objective from -90.653695 to -61 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.0 elements, 16 column cuts (16 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0001I Search completed - best objective -61, took 14 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.09

