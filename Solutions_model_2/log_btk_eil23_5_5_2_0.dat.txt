Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-9) rows, 23 (-2) columns and 118 (-17) elements
Clp1000I sum of infeasibilities 8.13781e-06 - average 2.03445e-07, 4 fixed columns
Coin0506I Presolve 29 (-11) rows, 19 (-4) columns and 88 (-30) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 1.6981816 - largest nonzero change 1.4262356e-05 ( 0.0011894246%) - largest zero change 2.5092638e-05
Clp0000I Optimal - objective value 105.11841
Clp0000I Optimal - objective value 105.11841
Coin0511I After Postsolve, objective 105.11841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 105.11841
Clp0000I Optimal - objective value 105.11841
Clp0000I Optimal - objective value 105.11841
Coin0511I After Postsolve, objective 105.11841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.1184086 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 23 columns (22 integer (22 of which binary)) and 123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.198%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.81885
Cbc0038I Pass   1: suminf.    1.08585 (4) obj. -50.7578 iterations 17
Cbc0038I Solution found of 4.8277
Cbc0038I Relaxing continuous gives 4.8277
Cbc0038I Rounding solution of -28.1384 is better than previous of 4.8277

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 20 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -28.1384 to -32.4222 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.0424
Cbc0038I Pass   2: suminf.    1.08585 (4) obj. -50.7578 iterations 0
Cbc0038I Pass   3: suminf.    0.75719 (5) obj. -39.0424 iterations 9
Cbc0038I Pass   4: suminf.    0.66406 (3) obj. -39.0424 iterations 1
Cbc0038I Pass   5: suminf.    0.39162 (2) obj. -39.0424 iterations 2
Cbc0038I Pass   6: suminf.    0.83613 (4) obj. -39.0424 iterations 2
Cbc0038I Pass   7: suminf.    0.96621 (5) obj. -39.0424 iterations 5
Cbc0038I Pass   8: suminf.    0.91645 (4) obj. -39.0424 iterations 1
Cbc0038I Pass   9: suminf.    0.99801 (5) obj. -39.0424 iterations 7
Cbc0038I Pass  10: suminf.    0.91084 (4) obj. -39.0424 iterations 1
Cbc0038I Pass  11: suminf.    1.22360 (4) obj. -39.0424 iterations 3
Cbc0038I Pass  12: suminf.    0.99423 (5) obj. -39.0424 iterations 2
Cbc0038I Pass  13: suminf.    1.44834 (5) obj. -39.0424 iterations 5
Cbc0038I Pass  14: suminf.    1.45251 (5) obj. -39.0424 iterations 1
Cbc0038I Pass  15: suminf.    1.25077 (3) obj. -39.0424 iterations 4
Cbc0038I Pass  16: suminf.    1.12518 (4) obj. -39.0424 iterations 2
Cbc0038I Pass  17: suminf.    1.58579 (4) obj. -39.0424 iterations 3
Cbc0038I Pass  18: suminf.    0.98845 (3) obj. -39.0424 iterations 2
Cbc0038I Pass  19: suminf.    1.34507 (5) obj. -39.0424 iterations 4
Cbc0038I Pass  20: suminf.    0.62335 (2) obj. -39.0424 iterations 3
Cbc0038I Pass  21: suminf.    0.81701 (4) obj. -39.0424 iterations 6
Cbc0038I Pass  22: suminf.    1.43295 (5) obj. -39.0424 iterations 4
Cbc0038I Pass  23: suminf.    1.44044 (5) obj. -39.0424 iterations 1
Cbc0038I Pass  24: suminf.    1.19696 (4) obj. -39.0424 iterations 6
Cbc0038I Pass  25: suminf.    1.09925 (4) obj. -39.0424 iterations 1
Cbc0038I Pass  26: suminf.    1.67873 (5) obj. -39.0424 iterations 5
Cbc0038I Pass  27: suminf.    1.67191 (5) obj. -39.0424 iterations 1
Cbc0038I Pass  28: suminf.    1.56914 (5) obj. -39.0424 iterations 1
Cbc0038I Pass  29: suminf.    2.42238 (7) obj. -39.0424 iterations 3
Cbc0038I Pass  30: suminf.    1.61884 (6) obj. -39.0424 iterations 3
Cbc0038I Pass  31: suminf.    1.23724 (5) obj. -39.0424 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -32.4222 - took 0.02 seconds
Cbc0012I Integer solution of -32.422172 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 40 rows 23 columns, reduced to 18 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 7.7
Cbc0013I At root node, 10 cuts changed objective from -98.623678 to -38.234796 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 158 row cuts average 6.3 elements, 12 column cuts (12 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 43 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.42217199999999, took 121 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-13) rows, 39 (-7) columns and 324 (-64) elements
Clp1000I sum of infeasibilities 1.54605e-08 - average 4.41729e-10, 31 fixed columns
Coin0506I Presolve 8 (-27) rows, 8 (-31) columns and 28 (-296) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 10.89145
Clp0000I Optimal - objective value 10.89145
Coin0511I After Postsolve, objective 10.89145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1628145 - largest nonzero change 1.9669904e-05 ( 0.0017511358%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 126.73211
Clp0000I Optimal - objective value 126.73211
Clp0000I Optimal - objective value 126.73211
Coin0511I After Postsolve, objective 126.73211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.7321111 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 42 columns (42 integer (42 of which binary)) and 344 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.272%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.67365
Cbc0038I Pass   1: suminf.    2.83006 (13) obj. -62.7472 iterations 9
Cbc0038I Pass   2: suminf.    2.83006 (13) obj. -62.7472 iterations 1
Cbc0038I Solution found of 5.84484
Cbc0038I Rounding solution of 3.48094 is better than previous of 5.84484

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 42 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 3.48094 to -16.409 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.8427
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.83006 (13) obj. -62.7472 iterations 0
Cbc0038I Pass   4: suminf.    2.83006 (13) obj. -62.7472 iterations 1
Cbc0038I Pass   5: suminf.    1.07590 (6) obj. -23.8427 iterations 23
Cbc0038I Pass   6: suminf.    1.07590 (6) obj. -23.8427 iterations 0
Cbc0038I Pass   7: suminf.    0.84300 (3) obj. -23.8427 iterations 8
Cbc0038I Pass   8: suminf.    0.38462 (1) obj. -27.2321 iterations 4
Cbc0038I Pass   9: suminf.    0.34839 (2) obj. -23.8427 iterations 4
Cbc0038I Pass  10: suminf.    0.43059 (2) obj. -29.1631 iterations 3
Cbc0038I Pass  11: suminf.    0.83369 (4) obj. -23.8427 iterations 8
Cbc0038I Pass  12: suminf.    0.83369 (4) obj. -23.8427 iterations 0
Cbc0038I Pass  13: suminf.    1.52200 (10) obj. -23.8427 iterations 12
Cbc0038I Pass  14: suminf.    1.52200 (10) obj. -23.8427 iterations 3
Cbc0038I Pass  15: suminf.    0.57504 (4) obj. -23.8427 iterations 12
Cbc0038I Pass  16: suminf.    0.57504 (4) obj. -23.8427 iterations 0
Cbc0038I Pass  17: suminf.    0.77942 (3) obj. -23.8427 iterations 6
Cbc0038I Pass  18: suminf.    0.68363 (3) obj. -23.8427 iterations 2
Cbc0038I Pass  19: suminf.    0.84300 (3) obj. -23.8427 iterations 5
Cbc0038I Pass  20: suminf.    0.38462 (1) obj. -27.2321 iterations 4
Cbc0038I Pass  21: suminf.    0.34839 (2) obj. -23.8427 iterations 4
Cbc0038I Pass  22: suminf.    0.43059 (2) obj. -29.1631 iterations 3
Cbc0038I Pass  23: suminf.    2.50175 (7) obj. -23.8427 iterations 7
Cbc0038I Pass  24: suminf.    1.56709 (4) obj. -35.8227 iterations 4
Cbc0038I Pass  25: suminf.    0.37717 (2) obj. -23.8427 iterations 6
Cbc0038I Pass  26: suminf.    0.42263 (2) obj. -31.1541 iterations 2
Cbc0038I Pass  27: suminf.    0.30769 (1) obj. -26.3265 iterations 1
Cbc0038I Pass  28: suminf.    2.14420 (8) obj. -23.8427 iterations 13
Cbc0038I Pass  29: suminf.    2.05570 (7) obj. -23.8427 iterations 2
Cbc0038I Pass  30: suminf.    0.72051 (2) obj. -23.8427 iterations 9
Cbc0038I Pass  31: suminf.    0.60052 (2) obj. -23.8427 iterations 2
Cbc0038I Pass  32: suminf.    0.72051 (2) obj. -23.8427 iterations 3
Cbc0038I Rounding solution of -29.1093 is better than previous of -16.409

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 42 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -29.1093 to -31.8338 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.6161
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.83006 (13) obj. -62.7472 iterations 0
Cbc0038I Pass  33: suminf.    2.83006 (13) obj. -62.7472 iterations 1
Cbc0038I Pass  34: suminf.    1.52853 (7) obj. -43.6161 iterations 21
Cbc0038I Pass  35: suminf.    1.52853 (7) obj. -43.6161 iterations 0
Cbc0038I Pass  36: suminf.    1.06421 (5) obj. -43.6161 iterations 6
Cbc0038I Pass  37: suminf.    0.99312 (4) obj. -43.6161 iterations 3
Cbc0038I Pass  38: suminf.    0.63461 (3) obj. -43.6161 iterations 6
Cbc0038I Pass  39: suminf.    0.63461 (3) obj. -43.6161 iterations 0
Cbc0038I Pass  40: suminf.    0.64251 (3) obj. -43.6161 iterations 5
Cbc0038I Pass  41: suminf.    0.64251 (3) obj. -43.6161 iterations 0
Cbc0038I Pass  42: suminf.    0.63461 (3) obj. -43.6161 iterations 2
Cbc0038I Pass  43: suminf.    3.13407 (9) obj. -43.6161 iterations 15
Cbc0038I Pass  44: suminf.    1.84029 (5) obj. -43.6161 iterations 9
Cbc0038I Pass  45: suminf.    1.23838 (4) obj. -43.6161 iterations 7
Cbc0038I Pass  46: suminf.    1.23838 (4) obj. -43.6161 iterations 1
Cbc0038I Pass  47: suminf.    1.48772 (4) obj. -43.6161 iterations 1
Cbc0038I Pass  48: suminf.    3.47335 (13) obj. -43.6161 iterations 19
Cbc0038I Pass  49: suminf.    2.53840 (9) obj. -43.6161 iterations 9
Cbc0038I Pass  50: suminf.    3.05413 (10) obj. -43.6161 iterations 2
Cbc0038I Pass  51: suminf.    1.79910 (6) obj. -43.6161 iterations 11
Cbc0038I Pass  52: suminf.    1.46401 (4) obj. -43.6161 iterations 4
Cbc0038I Pass  53: suminf.    1.45156 (5) obj. -43.6161 iterations 2
Cbc0038I Pass  54: suminf.    1.45156 (5) obj. -43.6161 iterations 0
Cbc0038I Pass  55: suminf.    1.75436 (5) obj. -43.6161 iterations 1
Cbc0038I Pass  56: suminf.    1.52409 (4) obj. -43.6161 iterations 1
Cbc0038I Pass  57: suminf.    1.49973 (4) obj. -43.6161 iterations 3
Cbc0038I Pass  58: suminf.    1.45156 (5) obj. -43.6161 iterations 3
Cbc0038I Pass  59: suminf.    1.45156 (5) obj. -43.6161 iterations 0
Cbc0038I Pass  60: suminf.    1.75436 (5) obj. -43.6161 iterations 1
Cbc0038I Pass  61: suminf.    1.52409 (4) obj. -43.6161 iterations 1
Cbc0038I Rounding solution of -32.4222 is better than previous of -31.8338

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 42 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -57.7549
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.83006 (13) obj. -62.7472 iterations 0
Cbc0038I Pass  62: suminf.    2.83006 (13) obj. -62.7472 iterations 1
Cbc0038I Pass  63: suminf.    2.18360 (9) obj. -57.7549 iterations 20
Cbc0038I Pass  64: suminf.    2.05784 (9) obj. -57.7549 iterations 1
Cbc0038I Pass  65: suminf.    1.85829 (7) obj. -57.7549 iterations 7
Cbc0038I Pass  66: suminf.    1.85829 (7) obj. -57.7549 iterations 1
Cbc0038I Pass  67: suminf.    1.80941 (5) obj. -57.7549 iterations 6
Cbc0038I Pass  68: suminf.    1.80941 (5) obj. -57.7549 iterations 1
Cbc0038I Pass  69: suminf.    1.80485 (5) obj. -57.7549 iterations 4
Cbc0038I Pass  70: suminf.    1.80485 (5) obj. -57.7549 iterations 0
Cbc0038I Pass  71: suminf.    1.86394 (5) obj. -57.7549 iterations 2
Cbc0038I Pass  72: suminf.    1.65108 (5) obj. -57.7549 iterations 6
Cbc0038I Pass  73: suminf.    3.15517 (11) obj. -57.7549 iterations 10
Cbc0038I Pass  74: suminf.    1.36958 (5) obj. -57.7549 iterations 6
Cbc0038I Pass  75: suminf.    2.05369 (6) obj. -57.7549 iterations 3
Cbc0038I Pass  76: suminf.    2.05369 (6) obj. -57.7549 iterations 0
Cbc0038I Pass  77: suminf.    2.05369 (6) obj. -57.7549 iterations 3
Cbc0038I Pass  78: suminf.    2.05369 (6) obj. -57.7549 iterations 1
Cbc0038I Pass  79: suminf.    2.99895 (8) obj. -57.7549 iterations 13
Cbc0038I Pass  80: suminf.    2.48661 (7) obj. -57.7549 iterations 5
Cbc0038I Pass  81: suminf.    2.48661 (7) obj. -57.7549 iterations 4
Cbc0038I Pass  82: suminf.    2.48661 (7) obj. -57.7549 iterations 2
Cbc0038I Pass  83: suminf.    2.59772 (7) obj. -57.7549 iterations 1
Cbc0038I Pass  84: suminf.    2.59772 (7) obj. -57.7549 iterations 0
Cbc0038I Pass  85: suminf.    2.59772 (7) obj. -57.7549 iterations 0
Cbc0038I Pass  86: suminf.    2.77208 (7) obj. -57.7549 iterations 3
Cbc0038I Pass  87: suminf.    2.59772 (7) obj. -57.7549 iterations 3
Cbc0038I Pass  88: suminf.    4.38959 (13) obj. -57.7549 iterations 14
Cbc0038I Pass  89: suminf.    2.56363 (9) obj. -57.7549 iterations 12
Cbc0038I Pass  90: suminf.    3.06334 (8) obj. -57.7549 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 42 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -32.4222 - took 0.04 seconds
Cbc0012I Integer solution of -32.422172 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 4.5714286
Cbc0013I At root node, 7 cuts changed objective from -90.745244 to -35.305115 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 94 row cuts average 2.0 elements, 24 column cuts (24 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.42217199999999, took 49 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-9) rows, 23 (-2) columns and 118 (-17) elements
Clp1000I sum of infeasibilities 8.13781e-06 - average 2.03445e-07, 4 fixed columns
Coin0506I Presolve 29 (-11) rows, 19 (-4) columns and 88 (-30) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 1.6981816 - largest nonzero change 1.4262356e-05 ( 0.0011894246%) - largest zero change 2.5092638e-05
Clp0000I Optimal - objective value 105.11841
Clp0000I Optimal - objective value 105.11841
Coin0511I After Postsolve, objective 105.11841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 105.11841
Clp0000I Optimal - objective value 105.11841
Clp0000I Optimal - objective value 105.11841
Coin0511I After Postsolve, objective 105.11841, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.1184086 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 23 columns (22 integer (22 of which binary)) and 123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.198%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.81885
Cbc0038I Pass   1: suminf.    1.08585 (4) obj. -50.7578 iterations 17
Cbc0038I Solution found of 4.8277
Cbc0038I Relaxing continuous gives 4.8277
Cbc0038I Rounding solution of -28.1384 is better than previous of 4.8277

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 20 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -28.1384 to -32.4222 (0.01 seconds)
Cbc0038I Round again with cutoff of -39.0424
Cbc0038I Pass   2: suminf.    1.08585 (4) obj. -50.7578 iterations 0
Cbc0038I Pass   3: suminf.    0.75719 (5) obj. -39.0424 iterations 9
Cbc0038I Pass   4: suminf.    0.66406 (3) obj. -39.0424 iterations 1
Cbc0038I Pass   5: suminf.    0.39162 (2) obj. -39.0424 iterations 2
Cbc0038I Pass   6: suminf.    0.83613 (4) obj. -39.0424 iterations 2
Cbc0038I Pass   7: suminf.    0.96621 (5) obj. -39.0424 iterations 5
Cbc0038I Pass   8: suminf.    0.91645 (4) obj. -39.0424 iterations 1
Cbc0038I Pass   9: suminf.    0.99801 (5) obj. -39.0424 iterations 7
Cbc0038I Pass  10: suminf.    0.91084 (4) obj. -39.0424 iterations 1
Cbc0038I Pass  11: suminf.    1.22360 (4) obj. -39.0424 iterations 3
Cbc0038I Pass  12: suminf.    0.99423 (5) obj. -39.0424 iterations 2
Cbc0038I Pass  13: suminf.    1.44834 (5) obj. -39.0424 iterations 5
Cbc0038I Pass  14: suminf.    1.45251 (5) obj. -39.0424 iterations 1
Cbc0038I Pass  15: suminf.    1.25077 (3) obj. -39.0424 iterations 4
Cbc0038I Pass  16: suminf.    1.12518 (4) obj. -39.0424 iterations 2
Cbc0038I Pass  17: suminf.    1.58579 (4) obj. -39.0424 iterations 3
Cbc0038I Pass  18: suminf.    0.98845 (3) obj. -39.0424 iterations 2
Cbc0038I Pass  19: suminf.    1.34507 (5) obj. -39.0424 iterations 4
Cbc0038I Pass  20: suminf.    0.62335 (2) obj. -39.0424 iterations 3
Cbc0038I Pass  21: suminf.    0.81701 (4) obj. -39.0424 iterations 6
Cbc0038I Pass  22: suminf.    1.43295 (5) obj. -39.0424 iterations 4
Cbc0038I Pass  23: suminf.    1.44044 (5) obj. -39.0424 iterations 1
Cbc0038I Pass  24: suminf.    1.19696 (4) obj. -39.0424 iterations 6
Cbc0038I Pass  25: suminf.    1.09925 (4) obj. -39.0424 iterations 1
Cbc0038I Pass  26: suminf.    1.67873 (5) obj. -39.0424 iterations 5
Cbc0038I Pass  27: suminf.    1.67191 (5) obj. -39.0424 iterations 1
Cbc0038I Pass  28: suminf.    1.56914 (5) obj. -39.0424 iterations 1
Cbc0038I Pass  29: suminf.    2.42238 (7) obj. -39.0424 iterations 3
Cbc0038I Pass  30: suminf.    1.61884 (6) obj. -39.0424 iterations 3
Cbc0038I Pass  31: suminf.    1.23724 (5) obj. -39.0424 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 23 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -32.4222 - took 0.02 seconds
Cbc0012I Integer solution of -32.422172 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 40 rows 23 columns, reduced to 18 rows 13 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 7.7
Cbc0013I At root node, 10 cuts changed objective from -98.623678 to -38.234796 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 158 row cuts average 6.3 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 43 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.42217199999999, took 121 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 39 (-8) columns and 324 (-65) elements
Clp1000I sum of infeasibilities 1.54605e-08 - average 4.41729e-10, 31 fixed columns
Coin0506I Presolve 8 (-27) rows, 8 (-31) columns and 28 (-296) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 10.89145
Clp0000I Optimal - objective value 10.89145
Coin0511I After Postsolve, objective 10.89145, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1628145 - largest nonzero change 1.9669904e-05 ( 0.0017511358%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 126.73211
Clp0000I Optimal - objective value 126.73211
Clp0000I Optimal - objective value 126.73211
Coin0511I After Postsolve, objective 126.73211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.7321111 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 42 columns (42 integer (42 of which binary)) and 344 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.272%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.67365
Cbc0038I Pass   1: suminf.    2.83006 (13) obj. -62.7472 iterations 9
Cbc0038I Pass   2: suminf.    2.83006 (13) obj. -62.7472 iterations 1
Cbc0038I Solution found of 5.84484
Cbc0038I Rounding solution of 3.48094 is better than previous of 5.84484

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 42 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 3.48094 to -16.409 (0.02 seconds)
Cbc0038I Round again with cutoff of -23.8427
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.83006 (13) obj. -62.7472 iterations 0
Cbc0038I Pass   4: suminf.    2.83006 (13) obj. -62.7472 iterations 1
Cbc0038I Pass   5: suminf.    1.07590 (6) obj. -23.8427 iterations 23
Cbc0038I Pass   6: suminf.    1.07590 (6) obj. -23.8427 iterations 0
Cbc0038I Pass   7: suminf.    0.84300 (3) obj. -23.8427 iterations 8
Cbc0038I Pass   8: suminf.    0.38462 (1) obj. -27.2321 iterations 4
Cbc0038I Pass   9: suminf.    0.34839 (2) obj. -23.8427 iterations 4
Cbc0038I Pass  10: suminf.    0.43059 (2) obj. -29.1631 iterations 3
Cbc0038I Pass  11: suminf.    0.83369 (4) obj. -23.8427 iterations 8
Cbc0038I Pass  12: suminf.    0.83369 (4) obj. -23.8427 iterations 0
Cbc0038I Pass  13: suminf.    1.52200 (10) obj. -23.8427 iterations 12
Cbc0038I Pass  14: suminf.    1.52200 (10) obj. -23.8427 iterations 3
Cbc0038I Pass  15: suminf.    0.57504 (4) obj. -23.8427 iterations 12
Cbc0038I Pass  16: suminf.    0.57504 (4) obj. -23.8427 iterations 0
Cbc0038I Pass  17: suminf.    0.77942 (3) obj. -23.8427 iterations 6
Cbc0038I Pass  18: suminf.    0.68363 (3) obj. -23.8427 iterations 2
Cbc0038I Pass  19: suminf.    0.84300 (3) obj. -23.8427 iterations 5
Cbc0038I Pass  20: suminf.    0.38462 (1) obj. -27.2321 iterations 4
Cbc0038I Pass  21: suminf.    0.34839 (2) obj. -23.8427 iterations 4
Cbc0038I Pass  22: suminf.    0.43059 (2) obj. -29.1631 iterations 3
Cbc0038I Pass  23: suminf.    2.50175 (7) obj. -23.8427 iterations 7
Cbc0038I Pass  24: suminf.    1.56709 (4) obj. -35.8227 iterations 4
Cbc0038I Pass  25: suminf.    0.37717 (2) obj. -23.8427 iterations 6
Cbc0038I Pass  26: suminf.    0.42263 (2) obj. -31.1541 iterations 2
Cbc0038I Pass  27: suminf.    0.30769 (1) obj. -26.3265 iterations 1
Cbc0038I Pass  28: suminf.    2.14420 (8) obj. -23.8427 iterations 13
Cbc0038I Pass  29: suminf.    2.05570 (7) obj. -23.8427 iterations 2
Cbc0038I Pass  30: suminf.    0.72051 (2) obj. -23.8427 iterations 9
Cbc0038I Pass  31: suminf.    0.60052 (2) obj. -23.8427 iterations 2
Cbc0038I Pass  32: suminf.    0.72051 (2) obj. -23.8427 iterations 3
Cbc0038I Rounding solution of -29.1093 is better than previous of -16.409

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 42 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -29.1093 to -31.8338 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.6161
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.83006 (13) obj. -62.7472 iterations 0
Cbc0038I Pass  33: suminf.    2.83006 (13) obj. -62.7472 iterations 1
Cbc0038I Pass  34: suminf.    1.52853 (7) obj. -43.6161 iterations 21
Cbc0038I Pass  35: suminf.    1.52853 (7) obj. -43.6161 iterations 0
Cbc0038I Pass  36: suminf.    1.06421 (5) obj. -43.6161 iterations 6
Cbc0038I Pass  37: suminf.    0.99312 (4) obj. -43.6161 iterations 3
Cbc0038I Pass  38: suminf.    0.63461 (3) obj. -43.6161 iterations 6
Cbc0038I Pass  39: suminf.    0.63461 (3) obj. -43.6161 iterations 0
Cbc0038I Pass  40: suminf.    0.64251 (3) obj. -43.6161 iterations 5
Cbc0038I Pass  41: suminf.    0.64251 (3) obj. -43.6161 iterations 0
Cbc0038I Pass  42: suminf.    0.63461 (3) obj. -43.6161 iterations 2
Cbc0038I Pass  43: suminf.    3.13407 (9) obj. -43.6161 iterations 15
Cbc0038I Pass  44: suminf.    1.84029 (5) obj. -43.6161 iterations 9
Cbc0038I Pass  45: suminf.    1.23838 (4) obj. -43.6161 iterations 7
Cbc0038I Pass  46: suminf.    1.23838 (4) obj. -43.6161 iterations 1
Cbc0038I Pass  47: suminf.    1.48772 (4) obj. -43.6161 iterations 1
Cbc0038I Pass  48: suminf.    3.47335 (13) obj. -43.6161 iterations 19
Cbc0038I Pass  49: suminf.    2.53840 (9) obj. -43.6161 iterations 9
Cbc0038I Pass  50: suminf.    3.05413 (10) obj. -43.6161 iterations 2
Cbc0038I Pass  51: suminf.    1.79910 (6) obj. -43.6161 iterations 11
Cbc0038I Pass  52: suminf.    1.46401 (4) obj. -43.6161 iterations 4
Cbc0038I Pass  53: suminf.    1.45156 (5) obj. -43.6161 iterations 2
Cbc0038I Pass  54: suminf.    1.45156 (5) obj. -43.6161 iterations 0
Cbc0038I Pass  55: suminf.    1.75436 (5) obj. -43.6161 iterations 1
Cbc0038I Pass  56: suminf.    1.52409 (4) obj. -43.6161 iterations 1
Cbc0038I Pass  57: suminf.    1.49973 (4) obj. -43.6161 iterations 3
Cbc0038I Pass  58: suminf.    1.45156 (5) obj. -43.6161 iterations 3
Cbc0038I Pass  59: suminf.    1.45156 (5) obj. -43.6161 iterations 0
Cbc0038I Pass  60: suminf.    1.75436 (5) obj. -43.6161 iterations 1
Cbc0038I Pass  61: suminf.    1.52409 (4) obj. -43.6161 iterations 1
Cbc0038I Rounding solution of -32.4222 is better than previous of -31.8338

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 42 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -57.7549
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.83006 (13) obj. -62.7472 iterations 0
Cbc0038I Pass  62: suminf.    2.83006 (13) obj. -62.7472 iterations 1
Cbc0038I Pass  63: suminf.    2.18360 (9) obj. -57.7549 iterations 20
Cbc0038I Pass  64: suminf.    2.05784 (9) obj. -57.7549 iterations 1
Cbc0038I Pass  65: suminf.    1.85829 (7) obj. -57.7549 iterations 7
Cbc0038I Pass  66: suminf.    1.85829 (7) obj. -57.7549 iterations 1
Cbc0038I Pass  67: suminf.    1.80941 (5) obj. -57.7549 iterations 6
Cbc0038I Pass  68: suminf.    1.80941 (5) obj. -57.7549 iterations 1
Cbc0038I Pass  69: suminf.    1.80485 (5) obj. -57.7549 iterations 4
Cbc0038I Pass  70: suminf.    1.80485 (5) obj. -57.7549 iterations 0
Cbc0038I Pass  71: suminf.    1.86394 (5) obj. -57.7549 iterations 2
Cbc0038I Pass  72: suminf.    1.65108 (5) obj. -57.7549 iterations 6
Cbc0038I Pass  73: suminf.    3.15517 (11) obj. -57.7549 iterations 10
Cbc0038I Pass  74: suminf.    1.36958 (5) obj. -57.7549 iterations 6
Cbc0038I Pass  75: suminf.    2.05369 (6) obj. -57.7549 iterations 3
Cbc0038I Pass  76: suminf.    2.05369 (6) obj. -57.7549 iterations 0
Cbc0038I Pass  77: suminf.    2.05369 (6) obj. -57.7549 iterations 3
Cbc0038I Pass  78: suminf.    2.05369 (6) obj. -57.7549 iterations 1
Cbc0038I Pass  79: suminf.    2.99895 (8) obj. -57.7549 iterations 13
Cbc0038I Pass  80: suminf.    2.48661 (7) obj. -57.7549 iterations 5
Cbc0038I Pass  81: suminf.    2.48661 (7) obj. -57.7549 iterations 4
Cbc0038I Pass  82: suminf.    2.48661 (7) obj. -57.7549 iterations 2
Cbc0038I Pass  83: suminf.    2.59772 (7) obj. -57.7549 iterations 1
Cbc0038I Pass  84: suminf.    2.59772 (7) obj. -57.7549 iterations 0
Cbc0038I Pass  85: suminf.    2.59772 (7) obj. -57.7549 iterations 0
Cbc0038I Pass  86: suminf.    2.77208 (7) obj. -57.7549 iterations 3
Cbc0038I Pass  87: suminf.    2.59772 (7) obj. -57.7549 iterations 3
Cbc0038I Pass  88: suminf.    4.38959 (13) obj. -57.7549 iterations 14
Cbc0038I Pass  89: suminf.    2.56363 (9) obj. -57.7549 iterations 12
Cbc0038I Pass  90: suminf.    3.06334 (8) obj. -57.7549 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 42 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -32.4222 - took 0.04 seconds
Cbc0012I Integer solution of -32.422172 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 7 added rows had average density of 4.5714286
Cbc0013I At root node, 7 cuts changed objective from -90.745244 to -35.305115 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 94 row cuts average 2.0 elements, 24 column cuts (24 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.42217199999999, took 49 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

