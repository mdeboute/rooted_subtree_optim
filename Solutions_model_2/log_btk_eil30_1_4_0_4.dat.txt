Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 20 (-43) rows, 13 (-19) columns and 50 (-127) elements
Clp0000I Optimal - objective value 94.611657
Coin0511I After Postsolve, objective 94.611657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.61165668 - 14 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.92005
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -51.5 iterations 8
Cbc0038I Solution found of -51.5
Cbc0038I Relaxing continuous gives -51.5
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -55.8732
Cbc0038I Pass   2: suminf.    0.03629 (1) obj. -55.8732 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -55.8732 iterations 1
Cbc0038I Solution found of -55.8732
Cbc0038I Relaxing continuous gives -62
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -68.1465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.13815 (1) obj. -68.1465 iterations 0
Cbc0038I Pass   5: suminf.    0.17917 (3) obj. -68.1465 iterations 4
Cbc0038I Pass   6: suminf.    1.16118 (4) obj. -68.1465 iterations 6
Cbc0038I Pass   7: suminf.    0.56857 (4) obj. -68.1465 iterations 2
Cbc0038I Pass   8: suminf.    1.11938 (4) obj. -68.1465 iterations 3
Cbc0038I Pass   9: suminf.    0.61439 (3) obj. -68.1465 iterations 2
Cbc0038I Pass  10: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  11: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  12: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  13: suminf.    1.18989 (5) obj. -68.1465 iterations 2
Cbc0038I Pass  14: suminf.    1.81871 (5) obj. -68.1465 iterations 6
Cbc0038I Pass  15: suminf.    1.57903 (6) obj. -68.1465 iterations 5
Cbc0038I Pass  16: suminf.    1.57903 (6) obj. -68.1465 iterations 0
Cbc0038I Pass  17: suminf.    0.61439 (3) obj. -68.1465 iterations 5
Cbc0038I Pass  18: suminf.    0.61439 (3) obj. -68.1465 iterations 0
Cbc0038I Pass  19: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  20: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  21: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  22: suminf.    1.81871 (5) obj. -68.1465 iterations 6
Cbc0038I Pass  23: suminf.    1.81871 (5) obj. -68.1465 iterations 0
Cbc0038I Pass  24: suminf.    1.57903 (6) obj. -68.1465 iterations 5
Cbc0038I Pass  25: suminf.    1.57903 (6) obj. -68.1465 iterations 0
Cbc0038I Pass  26: suminf.    0.61439 (3) obj. -68.1465 iterations 5
Cbc0038I Pass  27: suminf.    0.61439 (3) obj. -68.1465 iterations 0
Cbc0038I Pass  28: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  29: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  30: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  31: suminf.    0.67712 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  32: suminf.    0.67712 (4) obj. -68.1465 iterations 0
Cbc0038I Pass  33: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -62 - took 0.02 seconds
Cbc0012I Integer solution of -62 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0031I 5 added rows had average density of 3.8
Cbc0013I At root node, 43 cuts changed objective from -90.733083 to -41.382114 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 32 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -62, took 3 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-30) rows, 35 (-25) columns and 241 (-371) elements
Clp1000I sum of infeasibilities 1.4546e-07 - average 4.54561e-09, 7 fixed columns
Coin0506I Presolve 26 (-6) rows, 28 (-7) columns and 170 (-71) elements
Clp0029I End of values pass after 28 iterations
Clp0014I Perturbing problem by 0.001% of 1.4934143 - largest nonzero change 1.2058106e-05 ( 0.00096990836%) - largest zero change 1.0055234e-05
Clp0000I Optimal - objective value 141.22494
Clp0000I Optimal - objective value 141.22494
Coin0511I After Postsolve, objective 141.22494, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8299236 - largest nonzero change 1.163888e-05 ( 0.00096990836%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 153.38389
Clp0000I Optimal - objective value 153.38389
Clp0000I Optimal - objective value 153.38389
Coin0511I After Postsolve, objective 153.38389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 153.3838932 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 40 columns (40 integer (40 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.315%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 9.1485
Cbc0038I Pass   1: suminf.    0.73333 (4) obj. -16.9333 iterations 18
Cbc0038I Pass   2: suminf.    0.73333 (4) obj. -16.9333 iterations 0
Cbc0038I Solution found of -0.5
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -0.5 to -41.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -48.4792
Cbc0038I Pass   3: suminf.    1.93615 (7) obj. -48.4792 iterations 1
Cbc0038I Pass   4: suminf.    0.53268 (2) obj. -48.4792 iterations 8
Cbc0038I Pass   5: suminf.    0.48387 (1) obj. -50.4839 iterations 1
Cbc0038I Pass   6: suminf.    0.47207 (1) obj. -48.4792 iterations 1
Cbc0038I Pass   7: suminf.    2.07406 (8) obj. -48.4792 iterations 9
Cbc0038I Pass   8: suminf.    1.98531 (6) obj. -48.4792 iterations 1
Cbc0038I Pass   9: suminf.    0.89017 (2) obj. -54.052 iterations 5
Cbc0038I Pass  10: suminf.    0.62793 (2) obj. -48.4792 iterations 1
Cbc0038I Pass  11: suminf.    0.62793 (2) obj. -48.4792 iterations 0
Cbc0038I Pass  12: suminf.    0.77199 (2) obj. -48.4792 iterations 1
Cbc0038I Pass  13: suminf.    2.24122 (6) obj. -48.4792 iterations 9
Cbc0038I Pass  14: suminf.    2.14602 (5) obj. -48.4792 iterations 3
Cbc0038I Pass  15: suminf.    1.77375 (4) obj. -48.4792 iterations 1
Cbc0038I Pass  16: suminf.    1.33391 (4) obj. -48.4792 iterations 2
Cbc0038I Pass  17: suminf.    0.79320 (2) obj. -48.4792 iterations 3
Cbc0038I Pass  18: suminf.    0.67603 (2) obj. -48.4792 iterations 1
Cbc0038I Pass  19: suminf.    0.67603 (2) obj. -48.4792 iterations 0
Cbc0038I Pass  20: suminf.    1.85025 (5) obj. -48.4792 iterations 4
Cbc0038I Pass  21: suminf.    1.73751 (4) obj. -48.4792 iterations 1
Cbc0038I Pass  22: suminf.    4.16375 (11) obj. -48.4792 iterations 8
Cbc0038I Pass  23: suminf.    3.44702 (9) obj. -48.4792 iterations 3
Cbc0038I Pass  24: suminf.    0.89017 (2) obj. -53.052 iterations 8
Cbc0038I Pass  25: suminf.    0.67603 (2) obj. -48.4792 iterations 1
Cbc0038I Pass  26: suminf.    0.67603 (2) obj. -48.4792 iterations 0
Cbc0038I Pass  27: suminf.    0.79320 (2) obj. -48.4792 iterations 1
Cbc0038I Pass  28: suminf.    3.86047 (9) obj. -48.4792 iterations 8
Cbc0038I Pass  29: suminf.    3.09915 (7) obj. -48.4792 iterations 2
Cbc0038I Pass  30: suminf.    1.83656 (5) obj. -48.4792 iterations 2
Cbc0038I Pass  31: suminf.    0.99996 (3) obj. -48.4792 iterations 6
Cbc0038I Pass  32: suminf.    0.99996 (3) obj. -48.4792 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -41.5 - took 0.01 seconds
Cbc0012I Integer solution of -41.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -62 found by DiveCoefficient after 49 iterations and 0 nodes (0.03 seconds)
Cbc0031I 8 added rows had average density of 6.25
Cbc0013I At root node, 8 cuts changed objective from -106.79325 to -62 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 71 row cuts average 2.5 elements, 20 column cuts (20 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -62, took 49 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 20 (-43) rows, 13 (-19) columns and 50 (-127) elements
Clp0000I Optimal - objective value 94.611657
Coin0511I After Postsolve, objective 94.611657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.61165668 - 14 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 13 columns (12 integer (12 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.92005
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -51.5 iterations 8
Cbc0038I Solution found of -51.5
Cbc0038I Relaxing continuous gives -51.5
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -55.8732
Cbc0038I Pass   2: suminf.    0.03629 (1) obj. -55.8732 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -55.8732 iterations 1
Cbc0038I Solution found of -55.8732
Cbc0038I Relaxing continuous gives -62
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -68.1465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.13815 (1) obj. -68.1465 iterations 0
Cbc0038I Pass   5: suminf.    0.17917 (3) obj. -68.1465 iterations 4
Cbc0038I Pass   6: suminf.    1.16118 (4) obj. -68.1465 iterations 6
Cbc0038I Pass   7: suminf.    0.56857 (4) obj. -68.1465 iterations 2
Cbc0038I Pass   8: suminf.    1.11938 (4) obj. -68.1465 iterations 3
Cbc0038I Pass   9: suminf.    0.61439 (3) obj. -68.1465 iterations 2
Cbc0038I Pass  10: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  11: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  12: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  13: suminf.    1.18989 (5) obj. -68.1465 iterations 2
Cbc0038I Pass  14: suminf.    1.81871 (5) obj. -68.1465 iterations 6
Cbc0038I Pass  15: suminf.    1.57903 (6) obj. -68.1465 iterations 5
Cbc0038I Pass  16: suminf.    1.57903 (6) obj. -68.1465 iterations 0
Cbc0038I Pass  17: suminf.    0.61439 (3) obj. -68.1465 iterations 5
Cbc0038I Pass  18: suminf.    0.61439 (3) obj. -68.1465 iterations 0
Cbc0038I Pass  19: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  20: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  21: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  22: suminf.    1.81871 (5) obj. -68.1465 iterations 6
Cbc0038I Pass  23: suminf.    1.81871 (5) obj. -68.1465 iterations 0
Cbc0038I Pass  24: suminf.    1.57903 (6) obj. -68.1465 iterations 5
Cbc0038I Pass  25: suminf.    1.57903 (6) obj. -68.1465 iterations 0
Cbc0038I Pass  26: suminf.    0.61439 (3) obj. -68.1465 iterations 5
Cbc0038I Pass  27: suminf.    0.61439 (3) obj. -68.1465 iterations 0
Cbc0038I Pass  28: suminf.    0.95144 (4) obj. -68.1465 iterations 4
Cbc0038I Pass  29: suminf.    0.67712 (4) obj. -68.1465 iterations 1
Cbc0038I Pass  30: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  31: suminf.    0.67712 (4) obj. -68.1465 iterations 2
Cbc0038I Pass  32: suminf.    0.67712 (4) obj. -68.1465 iterations 0
Cbc0038I Pass  33: suminf.    1.30672 (4) obj. -68.1465 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 20 rows 13 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -62 - took 0.01 seconds
Cbc0012I Integer solution of -62 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 20 rows 13 columns, reduced to 11 rows 9 columns
Cbc0031I 5 added rows had average density of 3.8
Cbc0013I At root node, 43 cuts changed objective from -90.733083 to -41.382114 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 32 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -62, took 3 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-34) rows, 33 (-28) columns and 192 (-421) elements
Clp1000I sum of infeasibilities 1.05445e-08 - average 3.63603e-10, 24 fixed columns
Coin0506I Presolve 7 (-22) rows, 9 (-24) columns and 21 (-171) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 69.019355
Clp0000I Optimal - objective value 69.019355
Coin0511I After Postsolve, objective 69.019355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.456628 - largest nonzero change 2.2927462e-05 ( 0.0015070958%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 141.93463
Clp0000I Optimal - objective value 141.93463
Clp0000I Optimal - objective value 141.93463
Coin0511I After Postsolve, objective 141.93463, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 141.9346304 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 38 columns (38 integer (38 of which binary)) and 210 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.801%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.78001
Cbc0038I Pass   1: suminf.    0.40000 (2) obj. -10.9 iterations 18
Cbc0038I Pass   2: suminf.    0.40000 (2) obj. -10.9 iterations 0
Cbc0038I Solution found of -0.5
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 38 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -0.5 to -27 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.9943
Cbc0038I Pass   3: suminf.    1.44345 (5) obj. -32.9943 iterations 1
Cbc0038I Pass   4: suminf.    0.84408 (2) obj. -32.9943 iterations 6
Cbc0038I Pass   5: suminf.    0.13174 (1) obj. -32.9943 iterations 1
Cbc0038I Pass   6: suminf.    0.43548 (1) obj. -46.8145 iterations 1
Cbc0038I Pass   7: suminf.    3.38957 (9) obj. -32.9943 iterations 11
Cbc0038I Pass   8: suminf.    2.02880 (6) obj. -32.9943 iterations 4
Cbc0038I Pass   9: suminf.    1.04612 (4) obj. -32.9943 iterations 2
Cbc0038I Pass  10: suminf.    0.79869 (3) obj. -32.9943 iterations 1
Cbc0038I Pass  11: suminf.    1.29500 (5) obj. -32.9943 iterations 3
Cbc0038I Pass  12: suminf.    1.29500 (5) obj. -32.9943 iterations 0
Cbc0038I Pass  13: suminf.    0.46614 (2) obj. -32.9943 iterations 4
Cbc0038I Pass  14: suminf.    0.32954 (1) obj. -32.9943 iterations 1
Cbc0038I Pass  15: suminf.    0.43548 (1) obj. -37.8145 iterations 1
Cbc0038I Pass  16: suminf.    2.24507 (7) obj. -32.9943 iterations 10
Cbc0038I Pass  17: suminf.    0.50171 (2) obj. -32.9943 iterations 7
Cbc0038I Pass  18: suminf.    0.40323 (1) obj. -42.3468 iterations 2
Cbc0038I Pass  19: suminf.    0.19768 (1) obj. -32.9943 iterations 1
Cbc0038I Pass  20: suminf.    0.89963 (5) obj. -32.9943 iterations 7
Cbc0038I Pass  21: suminf.    0.66588 (3) obj. -32.9943 iterations 4
Cbc0038I Pass  22: suminf.    0.65170 (2) obj. -48.7673 iterations 2
Cbc0038I Pass  23: suminf.    0.19768 (1) obj. -32.9943 iterations 2
Cbc0038I Pass  24: suminf.    0.43548 (1) obj. -43.8145 iterations 1
Cbc0038I Pass  25: suminf.    0.49668 (4) obj. -32.9943 iterations 7
Cbc0038I Pass  26: suminf.    0.42843 (3) obj. -32.9943 iterations 3
Cbc0038I Pass  27: suminf.    0.39320 (2) obj. -48.4306 iterations 4
Cbc0038I Pass  28: suminf.    0.01086 (1) obj. -32.9943 iterations 2
Cbc0038I Pass  29: suminf.    0.30645 (1) obj. -46.4435 iterations 1
Cbc0038I Pass  30: suminf.    0.91426 (5) obj. -32.9943 iterations 7
Cbc0038I Pass  31: suminf.    0.47922 (2) obj. -32.9943 iterations 5
Cbc0038I Pass  32: suminf.    0.51020 (2) obj. -33.7041 iterations 2
Cbc0038I Rounding solution of -41.5 is better than previous of -27

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -50.0887
Cbc0038I Pass  32: suminf.    1.58290 (5) obj. -50.0887 iterations 1
Cbc0038I Pass  33: suminf.    0.57842 (2) obj. -50.0887 iterations 5
Cbc0038I Pass  34: suminf.    0.57842 (2) obj. -50.0887 iterations 0
Cbc0038I Pass  35: suminf.    0.65170 (2) obj. -51.7673 iterations 2
Cbc0038I Pass  36: suminf.    2.38417 (9) obj. -50.0887 iterations 12
Cbc0038I Pass  37: suminf.    1.23556 (6) obj. -50.0887 iterations 3
Cbc0038I Pass  38: suminf.    1.12318 (4) obj. -50.0887 iterations 7
Cbc0038I Pass  39: suminf.    1.05050 (4) obj. -50.0887 iterations 2
Cbc0038I Pass  40: suminf.    1.30719 (4) obj. -50.0887 iterations 1
Cbc0038I Pass  41: suminf.    1.30719 (4) obj. -50.0887 iterations 0
Cbc0038I Pass  42: suminf.    1.05050 (4) obj. -50.0887 iterations 1
Cbc0038I Pass  43: suminf.    1.53854 (7) obj. -50.0887 iterations 10
Cbc0038I Pass  44: suminf.    0.98946 (4) obj. -50.0887 iterations 4
Cbc0038I Pass  45: suminf.    0.73848 (4) obj. -50.0887 iterations 1
Cbc0038I Pass  46: suminf.    0.44382 (3) obj. -50.0887 iterations 4
Cbc0038I Pass  47: suminf.    0.44382 (3) obj. -50.0887 iterations 0
Cbc0038I Pass  48: suminf.    0.72653 (3) obj. -58.0973 iterations 1
Cbc0038I Pass  49: suminf.    0.50744 (2) obj. -50.0887 iterations 2
Cbc0038I Pass  50: suminf.    0.44382 (3) obj. -50.0887 iterations 2
Cbc0038I Pass  51: suminf.    0.54402 (3) obj. -50.0887 iterations 3
Cbc0038I Pass  52: suminf.    0.37827 (2) obj. -50.0887 iterations 2
Cbc0038I Pass  53: suminf.    0.39320 (2) obj. -50.4306 iterations 2
Cbc0038I Pass  54: suminf.    0.94582 (4) obj. -50.0887 iterations 3
Cbc0038I Pass  55: suminf.    0.85644 (3) obj. -50.0887 iterations 2
Cbc0038I Pass  56: suminf.    1.35556 (6) obj. -50.0887 iterations 8
Cbc0038I Pass  57: suminf.    0.81279 (3) obj. -50.0887 iterations 5
Cbc0038I Pass  58: suminf.    0.39320 (2) obj. -51.4306 iterations 3
Cbc0038I Pass  59: suminf.    0.33461 (2) obj. -50.0887 iterations 1
Cbc0038I Pass  60: suminf.    1.12274 (4) obj. -50.0887 iterations 8
Cbc0038I Pass  61: suminf.    1.04308 (3) obj. -50.0887 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 38 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -41.5 to -62 (0.03 seconds)
Cbc0038I Round again with cutoff of -68.483
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.07103 (6) obj. -68.483 iterations 1
Cbc0038I Pass  62: suminf.    1.61270 (5) obj. -68.483 iterations 3
Cbc0038I Pass  63: suminf.    1.61270 (5) obj. -68.483 iterations 0
Cbc0038I Pass  64: suminf.    1.64876 (5) obj. -68.483 iterations 2
Cbc0038I Pass  65: suminf.    2.76811 (8) obj. -68.483 iterations 4
Cbc0038I Pass  66: suminf.    2.05715 (6) obj. -68.483 iterations 4
Cbc0038I Pass  67: suminf.    2.16603 (6) obj. -68.483 iterations 5
Cbc0038I Pass  68: suminf.    1.98731 (6) obj. -68.483 iterations 3
Cbc0038I Pass  69: suminf.    2.80576 (9) obj. -68.483 iterations 4
Cbc0038I Pass  70: suminf.    2.22062 (6) obj. -68.483 iterations 3
Cbc0038I Pass  71: suminf.    1.61270 (5) obj. -68.483 iterations 5
Cbc0038I Pass  72: suminf.    1.61270 (5) obj. -68.483 iterations 0
Cbc0038I Pass  73: suminf.    1.64876 (5) obj. -68.483 iterations 2
Cbc0038I Pass  74: suminf.    2.11257 (7) obj. -68.483 iterations 4
Cbc0038I Pass  75: suminf.    2.11257 (7) obj. -68.483 iterations 0
Cbc0038I Pass  76: suminf.    2.33983 (7) obj. -68.483 iterations 3
Cbc0038I Pass  77: suminf.    2.28180 (9) obj. -68.483 iterations 3
Cbc0038I Pass  78: suminf.    1.28050 (5) obj. -68.483 iterations 5
Cbc0038I Pass  79: suminf.    1.28439 (5) obj. -68.483 iterations 1
Cbc0038I Pass  80: suminf.    1.29001 (8) obj. -68.483 iterations 11
Cbc0038I Pass  81: suminf.    1.03228 (6) obj. -68.483 iterations 5
Cbc0038I Pass  82: suminf.    1.28050 (5) obj. -68.483 iterations 3
Cbc0038I Pass  83: suminf.    1.28050 (5) obj. -68.483 iterations 0
Cbc0038I Pass  84: suminf.    1.28439 (5) obj. -68.483 iterations 1
Cbc0038I Pass  85: suminf.    2.19330 (10) obj. -68.483 iterations 8
Cbc0038I Pass  86: suminf.    2.17866 (10) obj. -68.483 iterations 3
Cbc0038I Pass  87: suminf.    2.37801 (10) obj. -68.483 iterations 6
Cbc0038I Pass  88: suminf.    2.28478 (11) obj. -68.483 iterations 4
Cbc0038I Pass  89: suminf.    2.61442 (11) obj. -68.483 iterations 3
Cbc0038I Pass  90: suminf.    2.11008 (9) obj. -68.483 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 38 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -62 - took 0.03 seconds
Cbc0012I Integer solution of -62 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 34 rows 38 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -72.459783 to -72.459783 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -62, took 16 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

