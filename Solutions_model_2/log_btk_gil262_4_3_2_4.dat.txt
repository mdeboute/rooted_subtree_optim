Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 261 (-3) columns and 1498 (-47) elements
Clp1000I sum of infeasibilities 1.17063e-05 - average 2.32268e-08, 56 fixed columns
Coin0506I Presolve 394 (-110) rows, 205 (-56) columns and 1168 (-330) elements
Clp0029I End of values pass after 205 iterations
Clp0014I Perturbing problem by 0.001% of 2.0048876 - largest nonzero change 0 ( 0%) - largest zero change 2.6314508e-05
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Coin0511I After Postsolve, objective 144.25253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Coin0511I After Postsolve, objective 144.25253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.2525254 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 261 columns (260 integer (260 of which binary)) and 1498 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 83 integers unsatisfied sum - 11.8079
Cbc0038I Solution found of 4.11586
Cbc0038I Relaxing continuous gives -10.5646
Cbc0038I Before mini branch and bound, 177 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 154 rows 84 columns
Cbc0038I Mini branch and bound improved solution from -10.5646 to -83.4894 (0.07 seconds)
Cbc0038I Round again with cutoff of -89.5658
Cbc0038I Pass   1: suminf.    3.84529 (42) obj. -89.5658 iterations 179
Cbc0038I Pass   2: suminf.    3.84529 (42) obj. -89.5658 iterations 0
Cbc0038I Pass   3: suminf.    2.03984 (8) obj. -89.5658 iterations 70
Cbc0038I Pass   4: suminf.    1.36943 (7) obj. -89.5658 iterations 10
Cbc0038I Pass   5: suminf.    2.17984 (9) obj. -89.5658 iterations 23
Cbc0038I Pass   6: suminf.    1.42761 (8) obj. -89.5658 iterations 9
Cbc0038I Pass   7: suminf.    2.09549 (7) obj. -89.5658 iterations 14
Cbc0038I Pass   8: suminf.    1.43900 (7) obj. -89.5658 iterations 10
Cbc0038I Pass   9: suminf.    2.74956 (8) obj. -89.5658 iterations 11
Cbc0038I Pass  10: suminf.    1.75244 (7) obj. -89.5658 iterations 11
Cbc0038I Pass  11: suminf.    1.96277 (6) obj. -89.5658 iterations 24
Cbc0038I Pass  12: suminf.    1.36689 (6) obj. -89.5658 iterations 9
Cbc0038I Pass  13: suminf.    1.23059 (5) obj. -89.5658 iterations 4
Cbc0038I Pass  14: suminf.    6.31259 (19) obj. -89.5658 iterations 35
Cbc0038I Pass  15: suminf.    3.51044 (12) obj. -89.5658 iterations 28
Cbc0038I Pass  16: suminf.    3.48894 (14) obj. -89.5658 iterations 2
Cbc0038I Pass  17: suminf.    2.62467 (8) obj. -89.5658 iterations 21
Cbc0038I Pass  18: suminf.    2.24156 (8) obj. -89.5658 iterations 13
Cbc0038I Pass  19: suminf.    2.20804 (6) obj. -89.5658 iterations 7
Cbc0038I Pass  20: suminf.    1.75818 (6) obj. -89.5658 iterations 14
Cbc0038I Pass  21: suminf.    2.59298 (7) obj. -89.5658 iterations 24
Cbc0038I Pass  22: suminf.    2.10177 (7) obj. -89.5658 iterations 8
Cbc0038I Pass  23: suminf.    1.62453 (7) obj. -89.5658 iterations 23
Cbc0038I Pass  24: suminf.    1.43963 (9) obj. -89.5658 iterations 7
Cbc0038I Pass  25: suminf.    2.45965 (8) obj. -89.5658 iterations 11
Cbc0038I Pass  26: suminf.    2.11907 (7) obj. -89.5658 iterations 14
Cbc0038I Pass  27: suminf.    2.11392 (8) obj. -89.5658 iterations 3
Cbc0038I Pass  28: suminf.    2.91896 (8) obj. -89.5658 iterations 24
Cbc0038I Pass  29: suminf.    2.62156 (10) obj. -89.5658 iterations 26
Cbc0038I Pass  30: suminf.    2.31763 (7) obj. -89.5658 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 193 rows 105 columns
Cbc0038I Mini branch and bound improved solution from -83.4894 to -84.177 (0.17 seconds)
Cbc0038I Round again with cutoff of -100.503
Cbc0038I Pass  30: suminf.    4.52194 (53) obj. -100.503 iterations 1
Cbc0038I Pass  31: suminf.    4.52194 (53) obj. -100.503 iterations 0
Cbc0038I Pass  32: suminf.    5.40433 (16) obj. -100.503 iterations 63
Cbc0038I Pass  33: suminf.    3.30726 (12) obj. -100.503 iterations 17
Cbc0038I Pass  34: suminf.    3.19429 (13) obj. -100.503 iterations 4
Cbc0038I Pass  35: suminf.    4.08895 (10) obj. -100.503 iterations 15
Cbc0038I Pass  36: suminf.    2.85843 (10) obj. -100.503 iterations 11
Cbc0038I Pass  37: suminf.    4.23943 (11) obj. -100.503 iterations 14
Cbc0038I Pass  38: suminf.    2.37892 (11) obj. -100.503 iterations 7
Cbc0038I Pass  39: suminf.    2.24379 (9) obj. -100.503 iterations 7
Cbc0038I Pass  40: suminf.    3.17530 (9) obj. -100.503 iterations 11
Cbc0038I Pass  41: suminf.    2.49106 (9) obj. -100.503 iterations 7
Cbc0038I Pass  42: suminf.    2.97101 (9) obj. -100.503 iterations 12
Cbc0038I Pass  43: suminf.    7.76981 (26) obj. -100.503 iterations 52
Cbc0038I Pass  44: suminf.    3.45855 (14) obj. -100.503 iterations 64
Cbc0038I Pass  45: suminf.    2.85769 (12) obj. -100.503 iterations 20
Cbc0038I Pass  46: suminf.    3.67779 (10) obj. -100.503 iterations 14
Cbc0038I Pass  47: suminf.    3.08681 (10) obj. -100.503 iterations 5
Cbc0038I Pass  48: suminf.    2.57776 (9) obj. -100.503 iterations 6
Cbc0038I Pass  49: suminf.    4.01862 (9) obj. -100.503 iterations 11
Cbc0038I Pass  50: suminf.    3.04607 (9) obj. -100.503 iterations 4
Cbc0038I Pass  51: suminf.    2.98179 (10) obj. -100.503 iterations 5
Cbc0038I Pass  52: suminf.    3.76700 (11) obj. -100.503 iterations 12
Cbc0038I Pass  53: suminf.    3.27201 (10) obj. -100.503 iterations 3
Cbc0038I Pass  54: suminf.    2.80589 (10) obj. -100.503 iterations 5
Cbc0038I Pass  55: suminf.    2.36942 (10) obj. -100.503 iterations 6
Cbc0038I Pass  56: suminf.    4.09035 (10) obj. -100.503 iterations 15
Cbc0038I Pass  57: suminf.    2.52744 (9) obj. -100.503 iterations 11
Cbc0038I Pass  58: suminf.    5.52279 (19) obj. -100.503 iterations 46
Cbc0038I Pass  59: suminf.    3.25908 (12) obj. -100.503 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 220 rows 119 columns
Cbc0038I Mini branch and bound improved solution from -84.177 to -92.6206 (0.32 seconds)
Cbc0038I Round again with cutoff of -113.628
Cbc0038I Pass  59: suminf.    5.33556 (58) obj. -113.628 iterations 4
Cbc0038I Pass  60: suminf.    5.33556 (58) obj. -113.628 iterations 0
Cbc0038I Pass  61: suminf.    5.65768 (17) obj. -113.628 iterations 74
Cbc0038I Pass  62: suminf.    4.96402 (17) obj. -113.628 iterations 36
Cbc0038I Pass  63: suminf.    5.17529 (16) obj. -113.628 iterations 20
Cbc0038I Pass  64: suminf.    4.33642 (34) obj. -113.628 iterations 58
Cbc0038I Pass  65: suminf.    5.65117 (17) obj. -113.628 iterations 56
Cbc0038I Pass  66: suminf.    4.05451 (15) obj. -113.628 iterations 24
Cbc0038I Pass  67: suminf.    3.81005 (15) obj. -113.628 iterations 14
Cbc0038I Pass  68: suminf.    4.56381 (16) obj. -113.628 iterations 19
Cbc0038I Pass  69: suminf.    3.78382 (11) obj. -113.628 iterations 19
Cbc0038I Pass  70: suminf.    3.16606 (11) obj. -113.628 iterations 13
Cbc0038I Pass  71: suminf.    3.16606 (11) obj. -113.628 iterations 1
Cbc0038I Pass  72: suminf.    3.80862 (16) obj. -113.628 iterations 23
Cbc0038I Pass  73: suminf.    2.91114 (11) obj. -113.628 iterations 10
Cbc0038I Pass  74: suminf.    2.48716 (10) obj. -113.628 iterations 7
Cbc0038I Pass  75: suminf.    2.89209 (12) obj. -113.628 iterations 9
Cbc0038I Pass  76: suminf.    1.91359 (12) obj. -113.628 iterations 12
Cbc0038I Pass  77: suminf.    1.90187 (12) obj. -113.628 iterations 2
Cbc0038I Pass  78: suminf.    3.54014 (12) obj. -113.628 iterations 13
Cbc0038I Pass  79: suminf.    2.38356 (12) obj. -113.628 iterations 12
Cbc0038I Pass  80: suminf.    8.23699 (26) obj. -113.628 iterations 55
Cbc0038I Pass  81: suminf.    2.99354 (13) obj. -113.628 iterations 54
Cbc0038I Pass  82: suminf.    2.57359 (11) obj. -113.628 iterations 6
Cbc0038I Pass  83: suminf.    2.34389 (11) obj. -113.628 iterations 10
Cbc0038I Pass  84: suminf.    4.47779 (13) obj. -113.628 iterations 21
Cbc0038I Pass  85: suminf.    2.38798 (11) obj. -113.628 iterations 14
Cbc0038I Pass  86: suminf.    2.22706 (9) obj. -113.628 iterations 12
Cbc0038I Pass  87: suminf.    4.00736 (14) obj. -113.628 iterations 26
Cbc0038I Pass  88: suminf.    2.69940 (12) obj. -113.628 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 222 rows 119 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.45 seconds - Feasibility pump exiting with objective of -92.6206 - took 0.42 seconds
Cbc0012I Integer solution of -92.62064 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 154 rows 84 columns
Cbc0031I 44 added rows had average density of 114.38636
Cbc0013I At root node, 44 cuts changed objective from -144.25253 to -133.90627 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 46016 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.516 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3401 row cuts average 259.0 elements, 0 column cuts (0 active)  in 0.511 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.541 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 254.3 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -92.62064 best solution, best possible -133.90627 (5.93 seconds)
Cbc0010I After 13 nodes, 13 on tree, -92.62064 best solution, best possible -133.90627 (6.65 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 25 rows 20 columns
Cbc0038I Full problem 504 rows 261 columns, reduced to 62 rows 39 columns
Cbc0010I After 99 nodes, 11 on tree, -92.62064 best solution, best possible -133.90627 (7.35 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 109 rows 60 columns
Cbc0001I Search completed - best objective -92.62064000000001, took 31320 iterations and 242 nodes (7.96 seconds)
Cbc0032I Strong branching done 2528 times (69001 iterations), fathomed 11 nodes and fixed 70 variables
Cbc0035I Maximum depth 77, 948 variables fixed on reduced cost
Total time (CPU seconds):       7.83   (Wallclock seconds):       8.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 361 (-165) rows, 377 (-147) columns and 17030 (-18706) elements
Clp1000I sum of infeasibilities 5.74709e-06 - average 1.59199e-08, 207 fixed columns
Coin0506I Presolve 155 (-206) rows, 167 (-210) columns and 623 (-16407) elements
Clp0006I 0  Obj 77.375853 Primal inf 3.6921054e-07 (1) Dual inf 6.723562e+08 (167)
Clp0029I End of values pass after 167 iterations
Clp0014I Perturbing problem by 0.001% of 1.5496048 - largest nonzero change 2.4265918e-05 ( 0.0016125406%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 89.3603
Clp0000I Optimal - objective value 89.3603
Coin0511I After Postsolve, objective 89.3603, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 89.3603 Dual inf 263.63803 (123)
Clp0014I Perturbing problem by 0.001% of 1.9687157 - largest nonzero change 2.9538751e-05 ( 0.0024275985%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 253.79256
Clp0000I Optimal - objective value 253.79256
Clp0000I Optimal - objective value 253.79256
Coin0511I After Postsolve, objective 253.79256, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 253.7925644 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0004I processed model has 361 rows, 377 columns (377 integer (377 of which binary)) and 17030 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.815%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 118 integers unsatisfied sum - 6.68836
Cbc0038I Pass   1: suminf.    1.30174 (56) obj. -228.982 iterations 48
Cbc0038I Pass   2: suminf.    1.30174 (56) obj. -228.982 iterations 3
Cbc0038I Pass   3: suminf.    0.58442 (39) obj. -178.239 iterations 17
Cbc0038I Pass   4: suminf.    0.23517 (23) obj. -159.666 iterations 16
Cbc0038I Pass   5: suminf.    0.03119 (5) obj. -137.922 iterations 18
Cbc0038I Solution found of -131.959
Cbc0038I Rounding solution of -137.918 is better than previous of -131.959

Cbc0038I Before mini branch and bound, 256 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 377 columns, reduced to 62 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -149.506
Cbc0038I Pass   6: suminf.    1.30174 (56) obj. -228.982 iterations 0
Cbc0038I Pass   7: suminf.    1.30174 (56) obj. -228.982 iterations 4
Cbc0038I Pass   8: suminf.    0.44794 (34) obj. -170.454 iterations 22
Cbc0038I Pass   9: suminf.    0.17732 (19) obj. -153.753 iterations 15
Cbc0038I Pass  10: suminf.    0.94793 (13) obj. -149.506 iterations 47
Cbc0038I Pass  11: suminf.    0.44281 (2) obj. -149.506 iterations 8
Cbc0038I Pass  12: suminf.    0.74021 (3) obj. -149.506 iterations 9
Cbc0038I Pass  13: suminf.    0.61863 (3) obj. -150.6 iterations 2
Cbc0038I Pass  14: suminf.    0.83727 (3) obj. -149.506 iterations 10
Cbc0038I Pass  15: suminf.    0.58338 (3) obj. -151.791 iterations 6
Cbc0038I Pass  16: suminf.    1.18237 (28) obj. -149.506 iterations 46
Cbc0038I Pass  17: suminf.    0.76330 (28) obj. -152.02 iterations 18
Cbc0038I Pass  18: suminf.    1.36387 (35) obj. -149.506 iterations 54
Cbc0038I Pass  19: suminf.    1.20863 (36) obj. -149.506 iterations 9
Cbc0038I Pass  20: suminf.    1.39820 (21) obj. -149.506 iterations 82
Cbc0038I Pass  21: suminf.    1.01871 (22) obj. -149.506 iterations 11
Cbc0038I Pass  22: suminf.    1.47151 (16) obj. -149.506 iterations 39
Cbc0038I Pass  23: suminf.    1.04426 (16) obj. -149.506 iterations 22
Cbc0038I Pass  24: suminf.    1.34921 (15) obj. -149.506 iterations 16
Cbc0038I Pass  25: suminf.    2.04965 (35) obj. -149.506 iterations 69
Cbc0038I Pass  26: suminf.    1.66095 (31) obj. -149.506 iterations 13
Cbc0038I Pass  27: suminf.    1.14701 (30) obj. -149.506 iterations 17
Cbc0038I Pass  28: suminf.    1.77521 (17) obj. -149.506 iterations 31
Cbc0038I Pass  29: suminf.    1.53986 (30) obj. -149.506 iterations 13
Cbc0038I Pass  30: suminf.    1.27394 (16) obj. -149.506 iterations 46
Cbc0038I Pass  31: suminf.    1.10934 (17) obj. -149.506 iterations 14
Cbc0038I Pass  32: suminf.    1.27394 (16) obj. -149.506 iterations 22
Cbc0038I Pass  33: suminf.    1.13931 (17) obj. -149.506 iterations 17
Cbc0038I Pass  34: suminf.    1.58313 (15) obj. -149.506 iterations 31
Cbc0038I Pass  35: suminf.    1.04426 (16) obj. -149.506 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 361 rows 377 columns, reduced to 128 rows 137 columns - 17 fixed gives 110, 119 - still too large
Cbc0038I Full problem 361 rows 377 columns, reduced to 18 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -137.918 - took 0.12 seconds
Cbc0012I Integer solution of -137.91804 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0031I 116 added rows had average density of 40.353448
Cbc0013I At root node, 116 cuts changed objective from -253.79256 to -147.12105 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 2687 row cuts average 10.9 elements, 25 column cuts (25 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 159 row cuts average 149.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 102 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 259 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 554 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 411 row cuts average 169.1 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 124 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -137.91804 best solution, best possible -147.12105 (1.05 seconds)
Cbc0012I Integer solution of -137.9707 found by DiveCoefficient after 933 iterations and 6 nodes (1.53 seconds)
Cbc0012I Integer solution of -139.11298 found by DiveCoefficient after 1243 iterations and 13 nodes (1.67 seconds)
Cbc0012I Integer solution of -139.15633 found by rounding after 1272 iterations and 15 nodes (1.68 seconds)
Cbc0012I Integer solution of -141.03423 found by rounding after 1285 iterations and 16 nodes (1.69 seconds)
Cbc0010I After 19 nodes, 11 on tree, -141.03423 best solution, best possible -147.12105 (1.79 seconds)
Cbc0038I Full problem 361 rows 377 columns, reduced to 0 rows 0 columns
Cbc0004I Integer solution of -141.26105 found after 2096 iterations and 44 nodes (2.28 seconds)
Cbc0038I Full problem 477 rows 377 columns, reduced to 297 rows 311 columns
Cbc0044I Reduced cost fixing - 297 rows, 311 columns - restarting search
Cbc0012I Integer solution of -141.26105 found by Previous solution after 0 iterations and 0 nodes (2.37 seconds)
Cbc0038I Full problem 297 rows 311 columns, reduced to 4 rows 7 columns
Cbc0031I 85 added rows had average density of 36.011765
Cbc0013I At root node, 85 cuts changed objective from -249.70497 to -145.92159 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 1460 row cuts average 3.9 elements, 27 column cuts (27 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 45 row cuts average 80.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 122 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 291 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 83 row cuts average 136.3 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 94 row cuts average 27.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 78 row cuts average 38.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -141.26105 best solution, best possible -145.73823 (2.78 seconds)
Cbc0038I Full problem 297 rows 311 columns, reduced to 21 rows 25 columns
Cbc0012I Integer solution of -142.42841 found by RINS after 2028 iterations and 41 nodes (3.42 seconds)
Cbc0001I Search completed - best objective -142.42841, took 2393 iterations and 48 nodes (3.48 seconds)
Cbc0032I Strong branching done 342 times (4220 iterations), fathomed 6 nodes and fixed 41 variables
Cbc0035I Maximum depth 7, 333 variables fixed on reduced cost
Cbc0038I Probing was tried 49 times and created 2713 cuts of which 0 were active after adding rounds of cuts (0.077 seconds)
Cbc0038I Gomory was tried 49 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Cbc0038I Knapsack was tried 49 times and created 496 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
Cbc0038I Clique was tried 49 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Cbc0038I OddWheel was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I MixedIntegerRounding2 was tried 49 times and created 350 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Cbc0038I FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 49 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.111 seconds)
Cbc0038I ZeroHalf was tried 49 times and created 245 cuts of which 0 were active after adding rounds of cuts (0.094 seconds)
Cbc0038I Stored from first was tried 49 times and created 192 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -142.42841 found by Reduced search after 4607 iterations and 98 nodes (3.49 seconds)
Cbc0001I Search completed - best objective -142.42841, took 4607 iterations and 98 nodes (3.49 seconds)
Cbc0032I Strong branching done 676 times (14167 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 18, 416 variables fixed on reduced cost
Total time (CPU seconds):       2.96   (Wallclock seconds):       3.52

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 261 (-3) columns and 1498 (-47) elements
Clp1000I sum of infeasibilities 1.17063e-05 - average 2.32268e-08, 56 fixed columns
Coin0506I Presolve 394 (-110) rows, 205 (-56) columns and 1168 (-330) elements
Clp0029I End of values pass after 205 iterations
Clp0014I Perturbing problem by 0.001% of 2.0048876 - largest nonzero change 0 ( 0%) - largest zero change 2.6314508e-05
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Coin0511I After Postsolve, objective 144.25253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Clp0000I Optimal - objective value 144.25253
Coin0511I After Postsolve, objective 144.25253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 144.2525254 - 0 iterations time 0.072, Presolve 0.00, Idiot 0.07

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 261 columns (260 integer (260 of which binary)) and 1498 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.368%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 83 integers unsatisfied sum - 11.8079
Cbc0038I Solution found of 4.11586
Cbc0038I Relaxing continuous gives -10.5646
Cbc0038I Before mini branch and bound, 177 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 154 rows 84 columns
Cbc0038I Mini branch and bound improved solution from -10.5646 to -83.4894 (0.07 seconds)
Cbc0038I Round again with cutoff of -89.5658
Cbc0038I Pass   1: suminf.    3.84529 (42) obj. -89.5658 iterations 179
Cbc0038I Pass   2: suminf.    3.84529 (42) obj. -89.5658 iterations 0
Cbc0038I Pass   3: suminf.    2.03984 (8) obj. -89.5658 iterations 70
Cbc0038I Pass   4: suminf.    1.36943 (7) obj. -89.5658 iterations 10
Cbc0038I Pass   5: suminf.    2.17984 (9) obj. -89.5658 iterations 23
Cbc0038I Pass   6: suminf.    1.42761 (8) obj. -89.5658 iterations 9
Cbc0038I Pass   7: suminf.    2.09549 (7) obj. -89.5658 iterations 14
Cbc0038I Pass   8: suminf.    1.43900 (7) obj. -89.5658 iterations 10
Cbc0038I Pass   9: suminf.    2.74956 (8) obj. -89.5658 iterations 11
Cbc0038I Pass  10: suminf.    1.75244 (7) obj. -89.5658 iterations 11
Cbc0038I Pass  11: suminf.    1.96277 (6) obj. -89.5658 iterations 24
Cbc0038I Pass  12: suminf.    1.36689 (6) obj. -89.5658 iterations 9
Cbc0038I Pass  13: suminf.    1.23059 (5) obj. -89.5658 iterations 4
Cbc0038I Pass  14: suminf.    6.31259 (19) obj. -89.5658 iterations 35
Cbc0038I Pass  15: suminf.    3.51044 (12) obj. -89.5658 iterations 28
Cbc0038I Pass  16: suminf.    3.48894 (14) obj. -89.5658 iterations 2
Cbc0038I Pass  17: suminf.    2.62467 (8) obj. -89.5658 iterations 21
Cbc0038I Pass  18: suminf.    2.24156 (8) obj. -89.5658 iterations 13
Cbc0038I Pass  19: suminf.    2.20804 (6) obj. -89.5658 iterations 7
Cbc0038I Pass  20: suminf.    1.75818 (6) obj. -89.5658 iterations 14
Cbc0038I Pass  21: suminf.    2.59298 (7) obj. -89.5658 iterations 24
Cbc0038I Pass  22: suminf.    2.10177 (7) obj. -89.5658 iterations 8
Cbc0038I Pass  23: suminf.    1.62453 (7) obj. -89.5658 iterations 23
Cbc0038I Pass  24: suminf.    1.43963 (9) obj. -89.5658 iterations 7
Cbc0038I Pass  25: suminf.    2.45965 (8) obj. -89.5658 iterations 11
Cbc0038I Pass  26: suminf.    2.11907 (7) obj. -89.5658 iterations 14
Cbc0038I Pass  27: suminf.    2.11392 (8) obj. -89.5658 iterations 3
Cbc0038I Pass  28: suminf.    2.91896 (8) obj. -89.5658 iterations 24
Cbc0038I Pass  29: suminf.    2.62156 (10) obj. -89.5658 iterations 26
Cbc0038I Pass  30: suminf.    2.31763 (7) obj. -89.5658 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 193 rows 105 columns
Cbc0038I Mini branch and bound improved solution from -83.4894 to -84.177 (0.16 seconds)
Cbc0038I Round again with cutoff of -100.503
Cbc0038I Pass  30: suminf.    4.52194 (53) obj. -100.503 iterations 1
Cbc0038I Pass  31: suminf.    4.52194 (53) obj. -100.503 iterations 0
Cbc0038I Pass  32: suminf.    5.40433 (16) obj. -100.503 iterations 63
Cbc0038I Pass  33: suminf.    3.30726 (12) obj. -100.503 iterations 17
Cbc0038I Pass  34: suminf.    3.19429 (13) obj. -100.503 iterations 4
Cbc0038I Pass  35: suminf.    4.08895 (10) obj. -100.503 iterations 15
Cbc0038I Pass  36: suminf.    2.85843 (10) obj. -100.503 iterations 11
Cbc0038I Pass  37: suminf.    4.23943 (11) obj. -100.503 iterations 14
Cbc0038I Pass  38: suminf.    2.37892 (11) obj. -100.503 iterations 7
Cbc0038I Pass  39: suminf.    2.24379 (9) obj. -100.503 iterations 7
Cbc0038I Pass  40: suminf.    3.17530 (9) obj. -100.503 iterations 11
Cbc0038I Pass  41: suminf.    2.49106 (9) obj. -100.503 iterations 7
Cbc0038I Pass  42: suminf.    2.97101 (9) obj. -100.503 iterations 12
Cbc0038I Pass  43: suminf.    7.76981 (26) obj. -100.503 iterations 52
Cbc0038I Pass  44: suminf.    3.45855 (14) obj. -100.503 iterations 64
Cbc0038I Pass  45: suminf.    2.85769 (12) obj. -100.503 iterations 20
Cbc0038I Pass  46: suminf.    3.67779 (10) obj. -100.503 iterations 14
Cbc0038I Pass  47: suminf.    3.08681 (10) obj. -100.503 iterations 5
Cbc0038I Pass  48: suminf.    2.57776 (9) obj. -100.503 iterations 6
Cbc0038I Pass  49: suminf.    4.01862 (9) obj. -100.503 iterations 11
Cbc0038I Pass  50: suminf.    3.04607 (9) obj. -100.503 iterations 4
Cbc0038I Pass  51: suminf.    2.98179 (10) obj. -100.503 iterations 5
Cbc0038I Pass  52: suminf.    3.76700 (11) obj. -100.503 iterations 12
Cbc0038I Pass  53: suminf.    3.27201 (10) obj. -100.503 iterations 3
Cbc0038I Pass  54: suminf.    2.80589 (10) obj. -100.503 iterations 5
Cbc0038I Pass  55: suminf.    2.36942 (10) obj. -100.503 iterations 6
Cbc0038I Pass  56: suminf.    4.09035 (10) obj. -100.503 iterations 15
Cbc0038I Pass  57: suminf.    2.52744 (9) obj. -100.503 iterations 11
Cbc0038I Pass  58: suminf.    5.52279 (19) obj. -100.503 iterations 46
Cbc0038I Pass  59: suminf.    3.25908 (12) obj. -100.503 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 220 rows 119 columns
Cbc0038I Mini branch and bound improved solution from -84.177 to -92.6206 (0.29 seconds)
Cbc0038I Round again with cutoff of -113.628
Cbc0038I Pass  59: suminf.    5.33556 (58) obj. -113.628 iterations 4
Cbc0038I Pass  60: suminf.    5.33556 (58) obj. -113.628 iterations 0
Cbc0038I Pass  61: suminf.    5.65768 (17) obj. -113.628 iterations 74
Cbc0038I Pass  62: suminf.    4.96402 (17) obj. -113.628 iterations 36
Cbc0038I Pass  63: suminf.    5.17529 (16) obj. -113.628 iterations 20
Cbc0038I Pass  64: suminf.    4.33642 (34) obj. -113.628 iterations 58
Cbc0038I Pass  65: suminf.    5.65117 (17) obj. -113.628 iterations 56
Cbc0038I Pass  66: suminf.    4.05451 (15) obj. -113.628 iterations 24
Cbc0038I Pass  67: suminf.    3.81005 (15) obj. -113.628 iterations 14
Cbc0038I Pass  68: suminf.    4.56381 (16) obj. -113.628 iterations 19
Cbc0038I Pass  69: suminf.    3.78382 (11) obj. -113.628 iterations 19
Cbc0038I Pass  70: suminf.    3.16606 (11) obj. -113.628 iterations 13
Cbc0038I Pass  71: suminf.    3.16606 (11) obj. -113.628 iterations 1
Cbc0038I Pass  72: suminf.    3.80862 (16) obj. -113.628 iterations 23
Cbc0038I Pass  73: suminf.    2.91114 (11) obj. -113.628 iterations 10
Cbc0038I Pass  74: suminf.    2.48716 (10) obj. -113.628 iterations 7
Cbc0038I Pass  75: suminf.    2.89209 (12) obj. -113.628 iterations 9
Cbc0038I Pass  76: suminf.    1.91359 (12) obj. -113.628 iterations 12
Cbc0038I Pass  77: suminf.    1.90187 (12) obj. -113.628 iterations 2
Cbc0038I Pass  78: suminf.    3.54014 (12) obj. -113.628 iterations 13
Cbc0038I Pass  79: suminf.    2.38356 (12) obj. -113.628 iterations 12
Cbc0038I Pass  80: suminf.    8.23699 (26) obj. -113.628 iterations 55
Cbc0038I Pass  81: suminf.    2.99354 (13) obj. -113.628 iterations 54
Cbc0038I Pass  82: suminf.    2.57359 (11) obj. -113.628 iterations 6
Cbc0038I Pass  83: suminf.    2.34389 (11) obj. -113.628 iterations 10
Cbc0038I Pass  84: suminf.    4.47779 (13) obj. -113.628 iterations 21
Cbc0038I Pass  85: suminf.    2.38798 (11) obj. -113.628 iterations 14
Cbc0038I Pass  86: suminf.    2.22706 (9) obj. -113.628 iterations 12
Cbc0038I Pass  87: suminf.    4.00736 (14) obj. -113.628 iterations 26
Cbc0038I Pass  88: suminf.    2.69940 (12) obj. -113.628 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 261 columns, reduced to 222 rows 119 columns
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of -92.6206 - took 0.39 seconds
Cbc0012I Integer solution of -92.62064 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 154 rows 84 columns
Cbc0031I 44 added rows had average density of 114.38636
Cbc0013I At root node, 44 cuts changed objective from -144.25253 to -133.90627 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 46016 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.519 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3401 row cuts average 259.0 elements, 0 column cuts (0 active)  in 0.508 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.538 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 254.3 elements, 0 column cuts (0 active)  in 0.219 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -92.62064 best solution, best possible -133.90627 (5.92 seconds)
Cbc0010I After 12 nodes, 12 on tree, -92.62064 best solution, best possible -133.90627 (6.64 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 25 rows 20 columns
Cbc0038I Full problem 504 rows 261 columns, reduced to 62 rows 39 columns
Cbc0010I After 98 nodes, 10 on tree, -92.62064 best solution, best possible -133.90627 (7.35 seconds)
Cbc0038I Full problem 504 rows 261 columns, reduced to 109 rows 60 columns
Cbc0001I Search completed - best objective -92.62064000000001, took 31320 iterations and 242 nodes (7.98 seconds)
Cbc0032I Strong branching done 2528 times (69001 iterations), fathomed 11 nodes and fixed 70 variables
Cbc0035I Maximum depth 77, 948 variables fixed on reduced cost
Total time (CPU seconds):       7.85   (Wallclock seconds):       8.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 360 (-167) rows, 376 (-149) columns and 16970 (-18767) elements
Clp1000I sum of infeasibilities 3.69148e-06 - average 1.02541e-08, 190 fixed columns
Coin0506I Presolve 169 (-191) rows, 183 (-193) columns and 678 (-16292) elements
Clp0006I 0  Obj -0.40586053 Dual inf 23.377595 (183)
Clp0029I End of values pass after 183 iterations
Clp0014I Perturbing problem by 0.001% of 1.3983735 - largest nonzero change 2.2103488e-05 ( 0.001669401%) - largest zero change 2.9235086e-05
Clp0000I Optimal - objective value 5.4322479
Clp0000I Optimal - objective value 5.4322479
Coin0511I After Postsolve, objective 5.4322479, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 5.4322479 Dual inf 218.10595 (119)
Clp0014I Perturbing problem by 0.001% of 1.9720593 - largest nonzero change 2.748375e-05 ( 0.002748375%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 179.42408
Clp0000I Optimal - objective value 179.42408
Clp0000I Optimal - objective value 179.42408
Coin0511I After Postsolve, objective 179.42408, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 179.4240755 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 360 rows, 376 columns (376 integer (376 of which binary)) and 16970 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 114 integers unsatisfied sum - 5.19227
Cbc0038I Pass   1: suminf.    1.06055 (55) obj. -135.152 iterations 52
Cbc0038I Pass   2: suminf.    1.06055 (55) obj. -135.152 iterations 13
Cbc0038I Pass   3: suminf.    0.39513 (37) obj. -83.2143 iterations 18
Cbc0038I Pass   4: suminf.    0.12623 (20) obj. -62.554 iterations 17
Cbc0038I Pass   5: suminf.    0.02070 (4) obj. -42.6869 iterations 16
Cbc0038I Solution found of -38.7076
Cbc0038I Rounding solution of -56.8739 is better than previous of -38.7076

Cbc0038I Before mini branch and bound, 261 integers at bound fixed and 0 continuous
Cbc0038I Full problem 360 rows 376 columns, reduced to 59 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -56.8739 to -63.6417 (0.14 seconds)
Cbc0038I Round again with cutoff of -75.2184
Cbc0038I Pass   6: suminf.    1.06055 (55) obj. -135.152 iterations 0
Cbc0038I Pass   7: suminf.    1.06055 (55) obj. -135.152 iterations 1
Cbc0038I Pass   8: suminf.    0.58676 (43) obj. -91.9187 iterations 12
Cbc0038I Pass   9: suminf.    0.61274 (22) obj. -75.2184 iterations 25
Cbc0038I Pass  10: suminf.    0.34003 (9) obj. -75.2184 iterations 23
Cbc0038I Pass  11: suminf.    0.96984 (4) obj. -75.2184 iterations 21
Cbc0038I Pass  12: suminf.    0.70414 (3) obj. -77.2873 iterations 2
Cbc0038I Pass  13: suminf.    0.98918 (14) obj. -75.2184 iterations 21
Cbc0038I Pass  14: suminf.    0.96356 (14) obj. -75.2184 iterations 14
Cbc0038I Pass  15: suminf.    1.75901 (41) obj. -75.2184 iterations 30
Cbc0038I Pass  16: suminf.    1.73572 (42) obj. -75.2184 iterations 17
Cbc0038I Pass  17: suminf.    1.38700 (27) obj. -75.2184 iterations 52
Cbc0038I Pass  18: suminf.    1.38700 (27) obj. -75.2184 iterations 11
Cbc0038I Pass  19: suminf.    2.28067 (13) obj. -75.2184 iterations 47
Cbc0038I Pass  20: suminf.    2.01833 (13) obj. -75.2184 iterations 10
Cbc0038I Pass  21: suminf.    2.28067 (13) obj. -75.2184 iterations 17
Cbc0038I Pass  22: suminf.    1.88491 (27) obj. -75.2184 iterations 56
Cbc0038I Pass  23: suminf.    1.78772 (25) obj. -75.2184 iterations 10
Cbc0038I Pass  24: suminf.    1.58289 (15) obj. -75.2184 iterations 30
Cbc0038I Pass  25: suminf.    1.58198 (23) obj. -75.2184 iterations 13
Cbc0038I Pass  26: suminf.    1.56818 (17) obj. -75.2184 iterations 32
Cbc0038I Pass  27: suminf.    1.18261 (13) obj. -75.2184 iterations 5
Cbc0038I Pass  28: suminf.    0.89809 (14) obj. -75.2184 iterations 23
Cbc0038I Pass  29: suminf.    1.38242 (14) obj. -75.2184 iterations 14
Cbc0038I Pass  30: suminf.    1.25770 (13) obj. -75.2184 iterations 5
Cbc0038I Pass  31: suminf.    0.93055 (14) obj. -75.2184 iterations 23
Cbc0038I Pass  32: suminf.    1.38242 (14) obj. -75.2184 iterations 14
Cbc0038I Pass  33: suminf.    1.18261 (13) obj. -75.2184 iterations 5
Cbc0038I Pass  34: suminf.    0.89809 (14) obj. -75.2184 iterations 24
Cbc0038I Pass  35: suminf.    1.38242 (14) obj. -75.2184 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 246 integers at bound fixed and 0 continuous
Cbc0038I Full problem 360 rows 376 columns, reduced to 89 rows 97 columns
Cbc0038I Mini branch and bound improved solution from -63.6417 to -84.079 (0.31 seconds)
Cbc0038I Round again with cutoff of -103.145
Cbc0038I Pass  35: suminf.    1.06055 (55) obj. -135.152 iterations 0
Cbc0038I Pass  36: suminf.    1.06055 (55) obj. -135.152 iterations 1
Cbc0038I Pass  37: suminf.    0.57521 (33) obj. -103.145 iterations 29
Cbc0038I Pass  38: suminf.    0.57521 (33) obj. -103.145 iterations 0
Cbc0038I Pass  39: suminf.    1.76092 (62) obj. -103.145 iterations 50
Cbc0038I Pass  40: suminf.    1.76092 (62) obj. -103.145 iterations 0
Cbc0038I Pass  41: suminf.    1.54844 (54) obj. -103.145 iterations 40
Cbc0038I Pass  42: suminf.    1.51301 (55) obj. -103.145 iterations 8
Cbc0038I Pass  43: suminf.    1.89326 (42) obj. -103.145 iterations 50
Cbc0038I Pass  44: suminf.    1.89326 (42) obj. -103.145 iterations 10
Cbc0038I Pass  45: suminf.    1.62215 (41) obj. -103.145 iterations 20
Cbc0038I Pass  46: suminf.    1.62215 (41) obj. -103.145 iterations 8
Cbc0038I Pass  47: suminf.    1.79961 (38) obj. -103.145 iterations 22
Cbc0038I Pass  48: suminf.    1.79961 (38) obj. -103.145 iterations 11
Cbc0038I Pass  49: suminf.    1.57661 (36) obj. -103.145 iterations 18
Cbc0038I Pass  50: suminf.    1.43898 (37) obj. -103.145 iterations 26
Cbc0038I Pass  51: suminf.    1.56297 (35) obj. -103.145 iterations 28
Cbc0038I Pass  52: suminf.    1.42780 (36) obj. -103.145 iterations 26
Cbc0038I Pass  53: suminf.    1.52536 (35) obj. -103.145 iterations 19
Cbc0038I Pass  54: suminf.    3.06405 (49) obj. -103.145 iterations 81
Cbc0038I Pass  55: suminf.    1.75813 (48) obj. -103.145 iterations 22
Cbc0038I Pass  56: suminf.    2.29304 (42) obj. -103.145 iterations 48
Cbc0038I Pass  57: suminf.    1.83175 (43) obj. -103.145 iterations 24
Cbc0038I Pass  58: suminf.    1.77292 (40) obj. -103.145 iterations 29
Cbc0038I Pass  59: suminf.    1.76641 (40) obj. -103.145 iterations 16
Cbc0038I Pass  60: suminf.    2.16890 (37) obj. -103.145 iterations 29
Cbc0038I Pass  61: suminf.    1.90964 (37) obj. -103.145 iterations 19
Cbc0038I Pass  62: suminf.    2.13341 (32) obj. -103.145 iterations 43
Cbc0038I Pass  63: suminf.    2.05829 (39) obj. -103.145 iterations 19
Cbc0038I Pass  64: suminf.    1.75771 (34) obj. -103.145 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 360 rows 376 columns, reduced to 91 rows 100 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.45 seconds - Feasibility pump exiting with objective of -84.079 - took 0.34 seconds
Cbc0012I Integer solution of -84.07903 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0038I Full problem 360 rows 376 columns, reduced to 83 rows 88 columns
Cbc0031I 146 added rows had average density of 75.335616
Cbc0013I At root node, 146 cuts changed objective from -179.40815 to -110.77498 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23966 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.437 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3005 row cuts average 358.2 elements, 0 column cuts (0 active)  in 1.023 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 658 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4101 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.608 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2005 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.810 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 344 row cuts average 243.9 elements, 0 column cuts (0 active)  in 0.283 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 700 row cuts average 53.2 elements, 0 column cuts (0 active)  in 0.696 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -84.07903 best solution, best possible -110.77498 (8.50 seconds)
Cbc0010I After 3 nodes, 2 on tree, -84.07903 best solution, best possible -110.63896 (9.21 seconds)
Cbc0010I After 7 nodes, 4 on tree, -84.07903 best solution, best possible -110.63896 (9.97 seconds)
Cbc0012I Integer solution of -84.0888 found by rounding after 16813 iterations and 21 nodes (10.52 seconds)
Cbc0012I Integer solution of -87.63485 found by rounding after 16833 iterations and 22 nodes (10.58 seconds)
Cbc0010I After 24 nodes, 10 on tree, -87.63485 best solution, best possible -110.63896 (10.75 seconds)
Cbc0010I After 40 nodes, 15 on tree, -87.63485 best solution, best possible -110.63896 (11.47 seconds)
Cbc0038I Full problem 360 rows 376 columns, reduced to 73 rows 82 columns
Cbc0012I Integer solution of -92.62064 found by RINS after 17865 iterations and 43 nodes (11.75 seconds)
Cbc0010I After 53 nodes, 11 on tree, -92.62064 best solution, best possible -110.63896 (12.20 seconds)
Cbc0010I After 77 nodes, 2 on tree, -92.62064 best solution, best possible -110.63896 (12.95 seconds)
Cbc0010I After 82 nodes, 5 on tree, -92.62064 best solution, best possible -110.63896 (13.73 seconds)
Cbc0010I After 83 nodes, 5 on tree, -92.62064 best solution, best possible -110.63896 (14.58 seconds)
Cbc0038I Full problem 360 rows 376 columns, reduced to 28 rows 33 columns
Cbc0010I After 98 nodes, 5 on tree, -92.62064 best solution, best possible -110.63896 (15.29 seconds)
Cbc0010I After 112 nodes, 8 on tree, -92.62064 best solution, best possible -110.63896 (16.03 seconds)
Cbc0010I After 139 nodes, 7 on tree, -92.62064 best solution, best possible -110.63896 (16.77 seconds)
Cbc0001I Search completed - best objective -92.62064000000001, took 28158 iterations and 152 nodes (16.92 seconds)
Cbc0032I Strong branching done 1544 times (37348 iterations), fathomed 9 nodes and fixed 33 variables
Cbc0035I Maximum depth 21, 981 variables fixed on reduced cost
Total time (CPU seconds):       15.42   (Wallclock seconds):       17.01

