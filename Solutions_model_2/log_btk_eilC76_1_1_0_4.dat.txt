Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 55 (-23) columns and 306 (-147) elements
Clp1000I sum of infeasibilities 1.75887e-05 - average 1.74146e-07, 20 fixed columns
Coin0506I Presolve 54 (-47) rows, 32 (-23) columns and 166 (-140) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Coin0511I After Postsolve, objective 190.87649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Coin0511I After Postsolve, objective 190.87649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 190.8764858 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 101 rows, 55 columns (54 integer (54 of which binary)) and 306 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.622%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.64681
Cbc0038I Pass   1: suminf.    0.58182 (2) obj. -145.372 iterations 15
Cbc0038I Pass   2: suminf.    0.58182 (2) obj. -145.372 iterations 0
Cbc0038I Solution found of -105.128
Cbc0038I Relaxing continuous gives -105.128
Cbc0038I Rounding solution of -112.676 is better than previous of -105.128

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 55 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -112.676 to -159.618 (0.01 seconds)
Cbc0038I Round again with cutoff of -162.744
Cbc0038I Pass   3: suminf.    1.10312 (4) obj. -162.744 iterations 5
Cbc0038I Pass   4: suminf.    0.34412 (2) obj. -162.744 iterations 8
Cbc0038I Pass   5: suminf.    1.05848 (8) obj. -162.744 iterations 7
Cbc0038I Pass   6: suminf.    1.10436 (5) obj. -162.744 iterations 9
Cbc0038I Pass   7: suminf.    0.36618 (2) obj. -162.744 iterations 8
Cbc0038I Pass   8: suminf.    0.49822 (1) obj. -162.744 iterations 3
Cbc0038I Pass   9: suminf.    0.94285 (7) obj. -162.744 iterations 10
Cbc0038I Pass  10: suminf.    0.48270 (2) obj. -162.744 iterations 13
Cbc0038I Pass  11: suminf.    1.46147 (7) obj. -162.744 iterations 12
Cbc0038I Pass  12: suminf.    0.62891 (6) obj. -162.744 iterations 7
Cbc0038I Pass  13: suminf.    0.10747 (2) obj. -162.744 iterations 2
Cbc0038I Pass  14: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  15: suminf.    1.89638 (9) obj. -162.744 iterations 14
Cbc0038I Pass  16: suminf.    1.50987 (7) obj. -162.744 iterations 4
Cbc0038I Pass  17: suminf.    1.84107 (4) obj. -162.744 iterations 8
Cbc0038I Pass  18: suminf.    0.10747 (2) obj. -162.744 iterations 6
Cbc0038I Pass  19: suminf.    0.10747 (2) obj. -162.744 iterations 0
Cbc0038I Pass  20: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  21: suminf.    4.08332 (15) obj. -162.744 iterations 16
Cbc0038I Pass  22: suminf.    2.49932 (11) obj. -162.744 iterations 9
Cbc0038I Pass  23: suminf.    1.29785 (8) obj. -162.744 iterations 10
Cbc0038I Pass  24: suminf.    0.50092 (4) obj. -162.744 iterations 3
Cbc0038I Pass  25: suminf.    0.25743 (3) obj. -162.744 iterations 7
Cbc0038I Pass  26: suminf.    0.19387 (3) obj. -162.744 iterations 1
Cbc0038I Pass  27: suminf.    0.99015 (6) obj. -162.744 iterations 10
Cbc0038I Pass  28: suminf.    1.98378 (5) obj. -162.744 iterations 8
Cbc0038I Pass  29: suminf.    0.10747 (2) obj. -162.744 iterations 6
Cbc0038I Pass  30: suminf.    0.10747 (2) obj. -162.744 iterations 0
Cbc0038I Pass  31: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  32: suminf.    6.07656 (15) obj. -162.744 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 55 columns, reduced to 55 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -159.618 - took 0.02 seconds
Cbc0012I Integer solution of -159.6176 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 101 rows 55 columns, reduced to 18 rows 14 columns
Cbc0031I 5 added rows had average density of 46
Cbc0013I At root node, 5 cuts changed objective from -190.87649 to -175.18148 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 269 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 372 row cuts average 46.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 41.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -159.6176, took 1326 iterations and 20 nodes (0.20 seconds)
Cbc0032I Strong branching done 148 times (850 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 116 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-65) rows, 96 (-56) columns and 1335 (-1968) elements
Clp1000I sum of infeasibilities 1.36686e-07 - average 1.5358e-09, 17 fixed columns
Coin0506I Presolve 72 (-17) rows, 78 (-18) columns and 997 (-338) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 6.1780838 - largest nonzero change 1.903345e-05 ( 0.0011371494%) - largest zero change 2.5736794e-05
Clp0000I Optimal - objective value 225.78919
Clp0000I Optimal - objective value 225.78919
Coin0511I After Postsolve, objective 225.78919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 225.78919
Clp0000I Optimal - objective value 225.78919
Clp0000I Optimal - objective value 225.78919
Coin0511I After Postsolve, objective 225.78919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 225.789194 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 96 columns (96 integer (96 of which binary)) and 1337 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.671%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.82276
Cbc0038I Pass   1: suminf.    2.16022 (25) obj. -144.233 iterations 13
Cbc0038I Pass   2: suminf.    2.16022 (25) obj. -144.233 iterations 0
Cbc0038I Pass   3: suminf.    0.49081 (8) obj. -118.976 iterations 17
Cbc0038I Solution found of -110.533
Cbc0038I Rounding solution of -120.695 is better than previous of -110.533

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 96 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -120.695 to -149.456 (0.03 seconds)
Cbc0038I Round again with cutoff of -156.435
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.71006 (34) obj. -156.435 iterations 6
Cbc0038I Pass   5: suminf.    2.64065 (26) obj. -156.435 iterations 1
Cbc0038I Pass   6: suminf.    1.51150 (24) obj. -156.435 iterations 19
Cbc0038I Pass   7: suminf.    1.21897 (7) obj. -156.435 iterations 27
Cbc0038I Pass   8: suminf.    1.19958 (8) obj. -156.435 iterations 1
Cbc0038I Pass   9: suminf.    3.01396 (8) obj. -156.435 iterations 9
Cbc0038I Pass  10: suminf.    0.75965 (5) obj. -165.254 iterations 12
Cbc0038I Pass  11: suminf.    0.75965 (5) obj. -165.254 iterations 0
Cbc0038I Pass  12: suminf.    0.54618 (2) obj. -156.435 iterations 11
Cbc0038I Pass  13: suminf.    0.54618 (2) obj. -156.435 iterations 0
Cbc0038I Pass  14: suminf.    0.32143 (1) obj. -164.872 iterations 6
Cbc0038I Pass  15: suminf.    0.14698 (1) obj. -156.435 iterations 2
Cbc0038I Pass  16: suminf.    2.82082 (9) obj. -156.435 iterations 15
Cbc0038I Pass  17: suminf.    0.82875 (6) obj. -156.435 iterations 5
Cbc0038I Pass  18: suminf.    0.65190 (2) obj. -156.435 iterations 13
Cbc0038I Pass  19: suminf.    0.65190 (2) obj. -156.435 iterations 0
Cbc0038I Pass  20: suminf.    0.32143 (1) obj. -161.872 iterations 5
Cbc0038I Pass  21: suminf.    0.20901 (1) obj. -156.435 iterations 2
Cbc0038I Pass  22: suminf.    2.03199 (13) obj. -156.435 iterations 31
Cbc0038I Pass  23: suminf.    1.38140 (11) obj. -156.435 iterations 8
Cbc0038I Pass  24: suminf.    0.26401 (2) obj. -156.435 iterations 16
Cbc0038I Pass  25: suminf.    0.65190 (2) obj. -156.435 iterations 5
Cbc0038I Pass  26: suminf.    0.65190 (2) obj. -156.435 iterations 0
Cbc0038I Pass  27: suminf.    0.32143 (1) obj. -161.872 iterations 7
Cbc0038I Pass  28: suminf.    0.20901 (1) obj. -156.435 iterations 4
Cbc0038I Pass  29: suminf.    3.02263 (14) obj. -156.435 iterations 19
Cbc0038I Pass  30: suminf.    0.97226 (8) obj. -156.435 iterations 4
Cbc0038I Pass  31: suminf.    0.87516 (7) obj. -156.435 iterations 5
Cbc0038I Pass  32: suminf.    0.68040 (2) obj. -156.435 iterations 11
Cbc0038I Pass  33: suminf.    0.68040 (2) obj. -156.435 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 96 columns, reduced to 44 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -149.456 to -154.127 (0.06 seconds)
Cbc0038I Round again with cutoff of -168.995
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.27607 (34) obj. -168.995 iterations 0
Cbc0038I Pass  34: suminf.    2.78764 (35) obj. -168.995 iterations 1
Cbc0038I Pass  35: suminf.    2.37391 (27) obj. -168.995 iterations 3
Cbc0038I Pass  36: suminf.    1.77087 (22) obj. -168.995 iterations 26
Cbc0038I Pass  37: suminf.    1.76691 (20) obj. -168.995 iterations 2
Cbc0038I Pass  38: suminf.    1.09462 (14) obj. -168.995 iterations 11
Cbc0038I Pass  39: suminf.    1.08009 (11) obj. -168.995 iterations 2
Cbc0038I Pass  40: suminf.    0.98881 (2) obj. -168.995 iterations 18
Cbc0038I Pass  41: suminf.    0.68242 (3) obj. -168.995 iterations 7
Cbc0038I Pass  42: suminf.    0.98881 (2) obj. -168.995 iterations 3
Cbc0038I Pass  43: suminf.    0.76636 (7) obj. -168.995 iterations 14
Cbc0038I Pass  44: suminf.    0.56963 (5) obj. -170.037 iterations 9
Cbc0038I Pass  45: suminf.    0.43839 (3) obj. -168.995 iterations 9
Cbc0038I Pass  46: suminf.    0.43839 (3) obj. -168.995 iterations 0
Cbc0038I Pass  47: suminf.    0.97595 (2) obj. -168.995 iterations 6
Cbc0038I Pass  48: suminf.    0.68336 (3) obj. -168.995 iterations 7
Cbc0038I Pass  49: suminf.    0.97595 (2) obj. -168.995 iterations 3
Cbc0038I Pass  50: suminf.    2.48473 (12) obj. -168.995 iterations 21
Cbc0038I Pass  51: suminf.    1.19755 (9) obj. -168.995 iterations 6
Cbc0038I Pass  52: suminf.    1.61674 (12) obj. -168.995 iterations 9
Cbc0038I Pass  53: suminf.    1.44118 (11) obj. -177.961 iterations 6
Cbc0038I Pass  54: suminf.    0.59324 (3) obj. -168.995 iterations 14
Cbc0038I Pass  55: suminf.    0.59324 (3) obj. -168.995 iterations 1
Cbc0038I Pass  56: suminf.    0.94071 (2) obj. -168.995 iterations 5
Cbc0038I Pass  57: suminf.    0.68429 (3) obj. -168.995 iterations 5
Cbc0038I Pass  58: suminf.    0.94071 (2) obj. -168.995 iterations 3
Cbc0038I Pass  59: suminf.    2.50752 (12) obj. -168.995 iterations 15
Cbc0038I Pass  60: suminf.    1.60895 (9) obj. -168.995 iterations 3
Cbc0038I Pass  61: suminf.    1.60895 (9) obj. -168.995 iterations 5
Cbc0038I Pass  62: suminf.    1.11619 (4) obj. -168.995 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 96 columns, reduced to 41 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -154.127 - took 0.05 seconds
Cbc0012I Integer solution of -154.1275 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -158.921 found by DiveCoefficient after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 89 rows 96 columns, reduced to 20 rows 21 columns
Cbc0031I 26 added rows had average density of 25.230769
Cbc0013I At root node, 26 cuts changed objective from -219.23741 to -168.16833 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 398 row cuts average 2.2 elements, 22 column cuts (22 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 116 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 40.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0004I Integer solution of -159.6176 found after 393 iterations and 6 nodes (0.35 seconds)
Cbc0001I Search completed - best objective -159.6176, took 591 iterations and 16 nodes (0.37 seconds)
Cbc0032I Strong branching done 218 times (1403 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 6, 55 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 55 (-23) columns and 306 (-147) elements
Clp1000I sum of infeasibilities 1.75887e-05 - average 1.74146e-07, 20 fixed columns
Coin0506I Presolve 54 (-47) rows, 32 (-23) columns and 166 (-140) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Coin0511I After Postsolve, objective 190.87649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Clp0000I Optimal - objective value 190.87649
Coin0511I After Postsolve, objective 190.87649, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 190.8764858 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 101 rows, 55 columns (54 integer (54 of which binary)) and 306 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.622%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.64681
Cbc0038I Pass   1: suminf.    0.58182 (2) obj. -145.372 iterations 15
Cbc0038I Pass   2: suminf.    0.58182 (2) obj. -145.372 iterations 0
Cbc0038I Solution found of -105.128
Cbc0038I Relaxing continuous gives -105.128
Cbc0038I Rounding solution of -112.676 is better than previous of -105.128

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 55 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -112.676 to -159.618 (0.01 seconds)
Cbc0038I Round again with cutoff of -162.744
Cbc0038I Pass   3: suminf.    1.10312 (4) obj. -162.744 iterations 5
Cbc0038I Pass   4: suminf.    0.34412 (2) obj. -162.744 iterations 8
Cbc0038I Pass   5: suminf.    1.05848 (8) obj. -162.744 iterations 7
Cbc0038I Pass   6: suminf.    1.10436 (5) obj. -162.744 iterations 9
Cbc0038I Pass   7: suminf.    0.36618 (2) obj. -162.744 iterations 8
Cbc0038I Pass   8: suminf.    0.49822 (1) obj. -162.744 iterations 3
Cbc0038I Pass   9: suminf.    0.94285 (7) obj. -162.744 iterations 10
Cbc0038I Pass  10: suminf.    0.48270 (2) obj. -162.744 iterations 13
Cbc0038I Pass  11: suminf.    1.46147 (7) obj. -162.744 iterations 12
Cbc0038I Pass  12: suminf.    0.62891 (6) obj. -162.744 iterations 7
Cbc0038I Pass  13: suminf.    0.10747 (2) obj. -162.744 iterations 2
Cbc0038I Pass  14: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  15: suminf.    1.89638 (9) obj. -162.744 iterations 14
Cbc0038I Pass  16: suminf.    1.50987 (7) obj. -162.744 iterations 4
Cbc0038I Pass  17: suminf.    1.84107 (4) obj. -162.744 iterations 8
Cbc0038I Pass  18: suminf.    0.10747 (2) obj. -162.744 iterations 6
Cbc0038I Pass  19: suminf.    0.10747 (2) obj. -162.744 iterations 0
Cbc0038I Pass  20: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  21: suminf.    4.08332 (15) obj. -162.744 iterations 16
Cbc0038I Pass  22: suminf.    2.49932 (11) obj. -162.744 iterations 9
Cbc0038I Pass  23: suminf.    1.29785 (8) obj. -162.744 iterations 10
Cbc0038I Pass  24: suminf.    0.50092 (4) obj. -162.744 iterations 3
Cbc0038I Pass  25: suminf.    0.25743 (3) obj. -162.744 iterations 7
Cbc0038I Pass  26: suminf.    0.19387 (3) obj. -162.744 iterations 1
Cbc0038I Pass  27: suminf.    0.99015 (6) obj. -162.744 iterations 10
Cbc0038I Pass  28: suminf.    1.98378 (5) obj. -162.744 iterations 8
Cbc0038I Pass  29: suminf.    0.10747 (2) obj. -162.744 iterations 6
Cbc0038I Pass  30: suminf.    0.10747 (2) obj. -162.744 iterations 0
Cbc0038I Pass  31: suminf.    0.15339 (2) obj. -162.744 iterations 7
Cbc0038I Pass  32: suminf.    6.07656 (15) obj. -162.744 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 55 columns, reduced to 55 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -159.618 - took 0.02 seconds
Cbc0012I Integer solution of -159.6176 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 101 rows 55 columns, reduced to 18 rows 14 columns
Cbc0031I 5 added rows had average density of 46
Cbc0013I At root node, 5 cuts changed objective from -190.87649 to -175.18148 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 269 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 372 row cuts average 46.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 41.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -159.6176, took 1326 iterations and 20 nodes (0.24 seconds)
Cbc0032I Strong branching done 148 times (850 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 116 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-66) rows, 96 (-57) columns and 1335 (-1969) elements
Clp1000I sum of infeasibilities 1.36686e-07 - average 1.5358e-09, 17 fixed columns
Coin0506I Presolve 72 (-17) rows, 78 (-18) columns and 997 (-338) elements
Clp0029I End of values pass after 78 iterations
Clp0014I Perturbing problem by 0.001% of 6.1780838 - largest nonzero change 1.903345e-05 ( 0.0011371494%) - largest zero change 2.5736794e-05
Clp0000I Optimal - objective value 225.78919
Clp0000I Optimal - objective value 225.78919
Coin0511I After Postsolve, objective 225.78919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 225.78919
Clp0000I Optimal - objective value 225.78919
Clp0000I Optimal - objective value 225.78919
Coin0511I After Postsolve, objective 225.78919, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 225.789194 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 96 columns (96 integer (96 of which binary)) and 1337 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.671%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 5.82276
Cbc0038I Pass   1: suminf.    2.16022 (25) obj. -144.233 iterations 13
Cbc0038I Pass   2: suminf.    2.16022 (25) obj. -144.233 iterations 0
Cbc0038I Pass   3: suminf.    0.49081 (8) obj. -118.976 iterations 17
Cbc0038I Solution found of -110.533
Cbc0038I Rounding solution of -120.695 is better than previous of -110.533

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 96 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -120.695 to -149.456 (0.03 seconds)
Cbc0038I Round again with cutoff of -156.435
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.71006 (34) obj. -156.435 iterations 6
Cbc0038I Pass   5: suminf.    2.64065 (26) obj. -156.435 iterations 1
Cbc0038I Pass   6: suminf.    1.51150 (24) obj. -156.435 iterations 19
Cbc0038I Pass   7: suminf.    1.21897 (7) obj. -156.435 iterations 27
Cbc0038I Pass   8: suminf.    1.19958 (8) obj. -156.435 iterations 1
Cbc0038I Pass   9: suminf.    3.01396 (8) obj. -156.435 iterations 9
Cbc0038I Pass  10: suminf.    0.75965 (5) obj. -165.254 iterations 12
Cbc0038I Pass  11: suminf.    0.75965 (5) obj. -165.254 iterations 0
Cbc0038I Pass  12: suminf.    0.54618 (2) obj. -156.435 iterations 11
Cbc0038I Pass  13: suminf.    0.54618 (2) obj. -156.435 iterations 0
Cbc0038I Pass  14: suminf.    0.32143 (1) obj. -164.872 iterations 6
Cbc0038I Pass  15: suminf.    0.14698 (1) obj. -156.435 iterations 2
Cbc0038I Pass  16: suminf.    2.82082 (9) obj. -156.435 iterations 15
Cbc0038I Pass  17: suminf.    0.82875 (6) obj. -156.435 iterations 5
Cbc0038I Pass  18: suminf.    0.65190 (2) obj. -156.435 iterations 13
Cbc0038I Pass  19: suminf.    0.65190 (2) obj. -156.435 iterations 0
Cbc0038I Pass  20: suminf.    0.32143 (1) obj. -161.872 iterations 5
Cbc0038I Pass  21: suminf.    0.20901 (1) obj. -156.435 iterations 2
Cbc0038I Pass  22: suminf.    2.03199 (13) obj. -156.435 iterations 31
Cbc0038I Pass  23: suminf.    1.38140 (11) obj. -156.435 iterations 8
Cbc0038I Pass  24: suminf.    0.26401 (2) obj. -156.435 iterations 16
Cbc0038I Pass  25: suminf.    0.65190 (2) obj. -156.435 iterations 5
Cbc0038I Pass  26: suminf.    0.65190 (2) obj. -156.435 iterations 0
Cbc0038I Pass  27: suminf.    0.32143 (1) obj. -161.872 iterations 7
Cbc0038I Pass  28: suminf.    0.20901 (1) obj. -156.435 iterations 4
Cbc0038I Pass  29: suminf.    3.02263 (14) obj. -156.435 iterations 19
Cbc0038I Pass  30: suminf.    0.97226 (8) obj. -156.435 iterations 4
Cbc0038I Pass  31: suminf.    0.87516 (7) obj. -156.435 iterations 5
Cbc0038I Pass  32: suminf.    0.68040 (2) obj. -156.435 iterations 11
Cbc0038I Pass  33: suminf.    0.68040 (2) obj. -156.435 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 96 columns, reduced to 44 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -149.456 to -154.127 (0.07 seconds)
Cbc0038I Round again with cutoff of -168.995
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.27607 (34) obj. -168.995 iterations 0
Cbc0038I Pass  34: suminf.    2.78764 (35) obj. -168.995 iterations 1
Cbc0038I Pass  35: suminf.    2.37391 (27) obj. -168.995 iterations 3
Cbc0038I Pass  36: suminf.    1.77087 (22) obj. -168.995 iterations 26
Cbc0038I Pass  37: suminf.    1.76691 (20) obj. -168.995 iterations 2
Cbc0038I Pass  38: suminf.    1.09462 (14) obj. -168.995 iterations 11
Cbc0038I Pass  39: suminf.    1.08009 (11) obj. -168.995 iterations 2
Cbc0038I Pass  40: suminf.    0.98881 (2) obj. -168.995 iterations 18
Cbc0038I Pass  41: suminf.    0.68242 (3) obj. -168.995 iterations 7
Cbc0038I Pass  42: suminf.    0.98881 (2) obj. -168.995 iterations 3
Cbc0038I Pass  43: suminf.    0.76636 (7) obj. -168.995 iterations 14
Cbc0038I Pass  44: suminf.    0.56963 (5) obj. -170.037 iterations 9
Cbc0038I Pass  45: suminf.    0.43839 (3) obj. -168.995 iterations 9
Cbc0038I Pass  46: suminf.    0.43839 (3) obj. -168.995 iterations 0
Cbc0038I Pass  47: suminf.    0.97595 (2) obj. -168.995 iterations 6
Cbc0038I Pass  48: suminf.    0.68336 (3) obj. -168.995 iterations 7
Cbc0038I Pass  49: suminf.    0.97595 (2) obj. -168.995 iterations 3
Cbc0038I Pass  50: suminf.    2.48473 (12) obj. -168.995 iterations 21
Cbc0038I Pass  51: suminf.    1.19755 (9) obj. -168.995 iterations 6
Cbc0038I Pass  52: suminf.    1.61674 (12) obj. -168.995 iterations 9
Cbc0038I Pass  53: suminf.    1.44118 (11) obj. -177.961 iterations 6
Cbc0038I Pass  54: suminf.    0.59324 (3) obj. -168.995 iterations 14
Cbc0038I Pass  55: suminf.    0.59324 (3) obj. -168.995 iterations 1
Cbc0038I Pass  56: suminf.    0.94071 (2) obj. -168.995 iterations 5
Cbc0038I Pass  57: suminf.    0.68429 (3) obj. -168.995 iterations 5
Cbc0038I Pass  58: suminf.    0.94071 (2) obj. -168.995 iterations 3
Cbc0038I Pass  59: suminf.    2.50752 (12) obj. -168.995 iterations 15
Cbc0038I Pass  60: suminf.    1.60895 (9) obj. -168.995 iterations 3
Cbc0038I Pass  61: suminf.    1.60895 (9) obj. -168.995 iterations 5
Cbc0038I Pass  62: suminf.    1.11619 (4) obj. -168.995 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 96 columns, reduced to 41 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -154.127 - took 0.07 seconds
Cbc0012I Integer solution of -154.1275 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0012I Integer solution of -158.921 found by DiveCoefficient after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 89 rows 96 columns, reduced to 20 rows 21 columns
Cbc0031I 26 added rows had average density of 25.230769
Cbc0013I At root node, 26 cuts changed objective from -219.23741 to -168.16833 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 398 row cuts average 2.2 elements, 22 column cuts (22 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 116 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 40.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0010I After 1 nodes, 2 on tree, -158.921 best solution, best possible -167.95811 (0.39 seconds)
Cbc0004I Integer solution of -159.6176 found after 393 iterations and 6 nodes (0.41 seconds)
Cbc0001I Search completed - best objective -159.6176, took 591 iterations and 16 nodes (0.44 seconds)
Cbc0032I Strong branching done 218 times (1403 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 6, 55 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.44

