Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-22) rows, 46 (-7) columns and 251 (-52) elements
Clp1000I sum of infeasibilities 3.52621e-05 - average 4.24844e-07, 4 fixed columns
Coin0506I Presolve 75 (-8) rows, 42 (-4) columns and 227 (-24) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 47.956315
Clp0000I Optimal - objective value 47.956315
Coin0511I After Postsolve, objective 47.956315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.956315
Clp0000I Optimal - objective value 47.956315
Clp0000I Optimal - objective value 47.956315
Coin0511I After Postsolve, objective 47.956315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.95631525 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 46 columns (45 integer (45 of which binary)) and 251 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 8.94767
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.87935 iterations 30
Cbc0038I Solution found of 2.87935
Cbc0038I Relaxing continuous gives 2.87935
Cbc0038I Rounding solution of -10.5585 is better than previous of 2.87935

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 46 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -14.2983
Cbc0038I Pass   2: suminf.    1.61592 (4) obj. -14.2983 iterations 10
Cbc0038I Pass   3: suminf.    1.61592 (4) obj. -14.2983 iterations 1
Cbc0038I Pass   4: suminf.    0.99116 (3) obj. -14.2983 iterations 7
Cbc0038I Pass   5: suminf.    0.93597 (2) obj. -14.2983 iterations 2
Cbc0038I Pass   6: suminf.    0.83982 (2) obj. -14.2983 iterations 3
Cbc0038I Pass   7: suminf.    1.70079 (7) obj. -14.2983 iterations 15
Cbc0038I Pass   8: suminf.    1.33871 (5) obj. -14.2983 iterations 16
Cbc0038I Pass   9: suminf.    1.33871 (5) obj. -14.2983 iterations 0
Cbc0038I Pass  10: suminf.    0.81868 (3) obj. -14.2983 iterations 9
Cbc0038I Pass  11: suminf.    0.81868 (3) obj. -14.2983 iterations 0
Cbc0038I Pass  12: suminf.    0.93597 (2) obj. -14.2983 iterations 9
Cbc0038I Pass  13: suminf.    0.83982 (2) obj. -14.2983 iterations 3
Cbc0038I Pass  14: suminf.    2.40782 (8) obj. -14.2983 iterations 13
Cbc0038I Pass  15: suminf.    1.34891 (4) obj. -14.2983 iterations 11
Cbc0038I Pass  16: suminf.    1.36952 (4) obj. -14.2983 iterations 7
Cbc0038I Pass  17: suminf.    1.14945 (4) obj. -14.2983 iterations 3
Cbc0038I Pass  18: suminf.    1.14945 (4) obj. -14.2983 iterations 0
Cbc0038I Pass  19: suminf.    1.34553 (4) obj. -14.2983 iterations 4
Cbc0038I Pass  20: suminf.    1.34553 (4) obj. -14.2983 iterations 0
Cbc0038I Pass  21: suminf.    0.95760 (2) obj. -14.2983 iterations 7
Cbc0038I Pass  22: suminf.    0.74098 (2) obj. -14.2983 iterations 5
Cbc0038I Pass  23: suminf.    0.74098 (2) obj. -14.2983 iterations 1
Cbc0038I Pass  24: suminf.    0.70642 (2) obj. -14.2983 iterations 3
Cbc0038I Pass  25: suminf.    1.76960 (7) obj. -14.2983 iterations 7
Cbc0038I Pass  26: suminf.    1.21003 (5) obj. -14.2983 iterations 12
Cbc0038I Pass  27: suminf.    1.00791 (6) obj. -14.2983 iterations 3
Cbc0038I Pass  28: suminf.    2.03535 (6) obj. -14.2983 iterations 11
Cbc0038I Pass  29: suminf.    1.52825 (4) obj. -14.2983 iterations 11
Cbc0038I Pass  30: suminf.    1.34553 (4) obj. -14.2983 iterations 4
Cbc0038I Pass  31: suminf.    1.34553 (4) obj. -14.2983 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 46 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -10.5585 - took 0.06 seconds
Cbc0012I Integer solution of -10.55847 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 83 rows 46 columns, reduced to 61 rows 35 columns
Cbc0031I 18 added rows had average density of 22.888889
Cbc0013I At root node, 18 cuts changed objective from -47.956315 to -34.629741 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6534 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1674 row cuts average 46.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0016I Integer solution of -14.66795 found by strong branching after 6627 iterations and 14 nodes (0.56 seconds)
Cbc0001I Search completed - best objective -14.66795, took 7075 iterations and 24 nodes (0.57 seconds)
Cbc0032I Strong branching done 378 times (7413 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 10, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-28) rows, 83 (-19) columns and 1119 (-459) elements
Clp1000I sum of infeasibilities 6.64289e-08 - average 8.74064e-10, 46 fixed columns
Coin0506I Presolve 30 (-46) rows, 37 (-46) columns and 129 (-990) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 1.0575385 - largest nonzero change 1.1053924e-05 ( 0.00055269619%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value -10.596656
Clp0000I Optimal - objective value -10.596656
Coin0511I After Postsolve, objective -10.596656, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.4590409 - largest nonzero change 1.5795841e-05 ( 0.0015795841%) - largest zero change 2.9778313e-05
Clp0000I Optimal - objective value 65.957442
Clp0000I Optimal - objective value 65.957442
Clp0000I Optimal - objective value 65.957442
Coin0511I After Postsolve, objective 65.957442, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.95744242 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 76 rows, 83 columns (83 integer (83 of which binary)) and 1123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.496%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 5.80303
Cbc0038I Pass   1: suminf.    2.97598 (26) obj. -47.057 iterations 21
Cbc0038I Pass   2: suminf.    2.97598 (26) obj. -47.057 iterations 1
Cbc0038I Pass   3: suminf.    0.05882 (1) obj. 3.88558 iterations 25
Cbc0038I Solution found of 4.82676
Cbc0038I Rounding solution of -2.32707 is better than previous of 4.82676

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 83 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -2.32707 to -5.00892 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.2322
Cbc0038I Pass   4: suminf.    2.97598 (26) obj. -47.057 iterations 0
Cbc0038I Pass   5: suminf.    2.97598 (26) obj. -47.057 iterations 1
Cbc0038I Pass   6: suminf.    1.50061 (15) obj. -16.7873 iterations 11
Cbc0038I Pass   7: suminf.    0.61567 (2) obj. -10.2322 iterations 23
Cbc0038I Pass   8: suminf.    0.27287 (2) obj. -13.3174 iterations 1
Cbc0038I Pass   9: suminf.    2.75435 (12) obj. -10.2322 iterations 18
Cbc0038I Pass  10: suminf.    1.30408 (9) obj. -10.2322 iterations 5
Cbc0038I Pass  11: suminf.    1.08215 (8) obj. -12.7216 iterations 1
Cbc0038I Pass  12: suminf.    0.65048 (3) obj. -10.2322 iterations 9
Cbc0038I Pass  13: suminf.    0.31835 (2) obj. -12.59 iterations 3
Cbc0038I Pass  14: suminf.    0.58032 (2) obj. -10.2322 iterations 2
Cbc0038I Pass  15: suminf.    2.23642 (11) obj. -16.9465 iterations 18
Cbc0038I Pass  16: suminf.    0.74767 (8) obj. -15.3309 iterations 5
Cbc0038I Pass  17: suminf.    0.36291 (2) obj. -10.2322 iterations 8
Cbc0038I Pass  18: suminf.    0.36291 (2) obj. -10.2322 iterations 0
Cbc0038I Pass  19: suminf.    0.53484 (2) obj. -10.2322 iterations 1
Cbc0038I Pass  20: suminf.    4.57618 (18) obj. -10.2322 iterations 27
Cbc0038I Pass  21: suminf.    1.51475 (12) obj. -10.2322 iterations 8
Cbc0038I Pass  22: suminf.    1.51475 (12) obj. -10.2322 iterations 0
Cbc0038I Pass  23: suminf.    0.39069 (2) obj. -10.2322 iterations 12
Cbc0038I Pass  24: suminf.    0.27287 (2) obj. -11.2926 iterations 1
Cbc0038I Pass  25: suminf.    1.91591 (12) obj. -10.2322 iterations 10
Cbc0038I Pass  26: suminf.    0.67666 (6) obj. -10.2322 iterations 5
Cbc0038I Pass  27: suminf.    0.54047 (5) obj. -11.9341 iterations 1
Cbc0038I Pass  28: suminf.    0.55610 (3) obj. -10.2322 iterations 7
Cbc0038I Pass  29: suminf.    0.55610 (3) obj. -10.2322 iterations 1
Cbc0038I Pass  30: suminf.    0.91098 (3) obj. -10.2322 iterations 5
Cbc0038I Pass  31: suminf.    0.69650 (3) obj. -11.1937 iterations 2
Cbc0038I Pass  32: suminf.    3.35297 (14) obj. -10.2322 iterations 22
Cbc0038I Pass  33: suminf.    0.93948 (7) obj. -10.2322 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 83 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -5.00892 to -6.62013 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.634
Cbc0038I Pass  33: suminf.    2.97598 (26) obj. -47.057 iterations 0
Cbc0038I Pass  34: suminf.    2.97598 (26) obj. -47.057 iterations 1
Cbc0038I Pass  35: suminf.    1.60658 (13) obj. -19.634 iterations 15
Cbc0038I Pass  36: suminf.    1.28820 (7) obj. -19.634 iterations 24
Cbc0038I Pass  37: suminf.    1.28820 (7) obj. -19.634 iterations 1
Cbc0038I Pass  38: suminf.    2.82956 (7) obj. -19.634 iterations 9
Cbc0038I Pass  39: suminf.    0.78716 (4) obj. -19.634 iterations 4
Cbc0038I Pass  40: suminf.    0.78716 (4) obj. -19.634 iterations 0
Cbc0038I Pass  41: suminf.    0.91085 (4) obj. -19.634 iterations 5
Cbc0038I Pass  42: suminf.    0.91085 (4) obj. -19.634 iterations 1
Cbc0038I Pass  43: suminf.    0.78716 (4) obj. -19.634 iterations 2
Cbc0038I Pass  44: suminf.    2.00836 (12) obj. -19.634 iterations 23
Cbc0038I Pass  45: suminf.    0.81711 (8) obj. -19.634 iterations 8
Cbc0038I Pass  46: suminf.    0.69903 (8) obj. -20.6967 iterations 1
Cbc0038I Pass  47: suminf.    2.21933 (9) obj. -19.634 iterations 15
Cbc0038I Pass  48: suminf.    2.21393 (8) obj. -19.634 iterations 1
Cbc0038I Pass  49: suminf.    3.12634 (8) obj. -19.634 iterations 6
Cbc0038I Pass  50: suminf.    1.76708 (8) obj. -19.634 iterations 1
Cbc0038I Pass  51: suminf.    1.73953 (8) obj. -19.634 iterations 7
Cbc0038I Pass  52: suminf.    1.73888 (8) obj. -19.634 iterations 11
Cbc0038I Pass  53: suminf.    1.73888 (8) obj. -19.634 iterations 1
Cbc0038I Pass  54: suminf.    3.12634 (8) obj. -19.634 iterations 9
Cbc0038I Pass  55: suminf.    1.76708 (8) obj. -19.634 iterations 1
Cbc0038I Pass  56: suminf.    1.73953 (8) obj. -19.634 iterations 7
Cbc0038I Pass  57: suminf.    1.73888 (8) obj. -19.634 iterations 11
Cbc0038I Pass  58: suminf.    1.73888 (8) obj. -19.634 iterations 1
Cbc0038I Pass  59: suminf.    3.12634 (8) obj. -19.634 iterations 9
Cbc0038I Pass  60: suminf.    1.76708 (8) obj. -19.634 iterations 1
Cbc0038I Pass  61: suminf.    1.73953 (8) obj. -19.634 iterations 7
Cbc0038I Pass  62: suminf.    1.73888 (8) obj. -19.634 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 83 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -6.62013 - took 0.03 seconds
Cbc0012I Integer solution of -6.62013 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 76 rows 83 columns, reduced to 16 rows 18 columns
Cbc0031I 48 added rows had average density of 26.166667
Cbc0013I At root node, 48 cuts changed objective from -57.241144 to -21.691636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12632 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1509 row cuts average 78.4 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 33 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1203 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 407 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 98 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.664 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.62013 best solution, best possible -21.691636 (2.07 seconds)
Cbc0012I Integer solution of -10.55847 found by rounding after 4244 iterations and 1 nodes (2.07 seconds)
Cbc0004I Integer solution of -14.66795 found after 4255 iterations and 1 nodes (2.08 seconds)
Cbc0010I After 17 nodes, 7 on tree, -14.66795 best solution, best possible -21.304712 (2.77 seconds)
Cbc0001I Search completed - best objective -14.66795, took 5932 iterations and 28 nodes (2.91 seconds)
Cbc0032I Strong branching done 520 times (12917 iterations), fathomed 4 nodes and fixed 1 variables
Cbc0035I Maximum depth 8, 36 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       2.92

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 83 (-22) rows, 46 (-7) columns and 251 (-52) elements
Clp1000I sum of infeasibilities 3.52621e-05 - average 4.24844e-07, 4 fixed columns
Coin0506I Presolve 75 (-8) rows, 42 (-4) columns and 227 (-24) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 47.956315
Clp0000I Optimal - objective value 47.956315
Coin0511I After Postsolve, objective 47.956315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.956315
Clp0000I Optimal - objective value 47.956315
Clp0000I Optimal - objective value 47.956315
Coin0511I After Postsolve, objective 47.956315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.95631525 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 83 rows, 46 columns (45 integer (45 of which binary)) and 251 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 8.94767
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.87935 iterations 30
Cbc0038I Solution found of 2.87935
Cbc0038I Relaxing continuous gives 2.87935
Cbc0038I Rounding solution of -10.5585 is better than previous of 2.87935

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 46 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -14.2983
Cbc0038I Pass   2: suminf.    1.61592 (4) obj. -14.2983 iterations 10
Cbc0038I Pass   3: suminf.    1.61592 (4) obj. -14.2983 iterations 1
Cbc0038I Pass   4: suminf.    0.99116 (3) obj. -14.2983 iterations 7
Cbc0038I Pass   5: suminf.    0.93597 (2) obj. -14.2983 iterations 2
Cbc0038I Pass   6: suminf.    0.83982 (2) obj. -14.2983 iterations 3
Cbc0038I Pass   7: suminf.    1.70079 (7) obj. -14.2983 iterations 15
Cbc0038I Pass   8: suminf.    1.33871 (5) obj. -14.2983 iterations 16
Cbc0038I Pass   9: suminf.    1.33871 (5) obj. -14.2983 iterations 0
Cbc0038I Pass  10: suminf.    0.81868 (3) obj. -14.2983 iterations 9
Cbc0038I Pass  11: suminf.    0.81868 (3) obj. -14.2983 iterations 0
Cbc0038I Pass  12: suminf.    0.93597 (2) obj. -14.2983 iterations 9
Cbc0038I Pass  13: suminf.    0.83982 (2) obj. -14.2983 iterations 3
Cbc0038I Pass  14: suminf.    2.40782 (8) obj. -14.2983 iterations 13
Cbc0038I Pass  15: suminf.    1.34891 (4) obj. -14.2983 iterations 11
Cbc0038I Pass  16: suminf.    1.36952 (4) obj. -14.2983 iterations 7
Cbc0038I Pass  17: suminf.    1.14945 (4) obj. -14.2983 iterations 3
Cbc0038I Pass  18: suminf.    1.14945 (4) obj. -14.2983 iterations 0
Cbc0038I Pass  19: suminf.    1.34553 (4) obj. -14.2983 iterations 4
Cbc0038I Pass  20: suminf.    1.34553 (4) obj. -14.2983 iterations 0
Cbc0038I Pass  21: suminf.    0.95760 (2) obj. -14.2983 iterations 7
Cbc0038I Pass  22: suminf.    0.74098 (2) obj. -14.2983 iterations 5
Cbc0038I Pass  23: suminf.    0.74098 (2) obj. -14.2983 iterations 1
Cbc0038I Pass  24: suminf.    0.70642 (2) obj. -14.2983 iterations 3
Cbc0038I Pass  25: suminf.    1.76960 (7) obj. -14.2983 iterations 7
Cbc0038I Pass  26: suminf.    1.21003 (5) obj. -14.2983 iterations 12
Cbc0038I Pass  27: suminf.    1.00791 (6) obj. -14.2983 iterations 3
Cbc0038I Pass  28: suminf.    2.03535 (6) obj. -14.2983 iterations 11
Cbc0038I Pass  29: suminf.    1.52825 (4) obj. -14.2983 iterations 11
Cbc0038I Pass  30: suminf.    1.34553 (4) obj. -14.2983 iterations 4
Cbc0038I Pass  31: suminf.    1.34553 (4) obj. -14.2983 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 83 rows 46 columns, reduced to 71 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -10.5585 - took 0.06 seconds
Cbc0012I Integer solution of -10.55847 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 83 rows 46 columns, reduced to 61 rows 35 columns
Cbc0031I 18 added rows had average density of 22.888889
Cbc0013I At root node, 18 cuts changed objective from -47.956315 to -34.629741 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6534 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1674 row cuts average 46.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0016I Integer solution of -14.66795 found by strong branching after 6627 iterations and 14 nodes (0.63 seconds)
Cbc0001I Search completed - best objective -14.66795, took 7075 iterations and 24 nodes (0.65 seconds)
Cbc0032I Strong branching done 378 times (7413 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 10, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.62   (Wallclock seconds):       0.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 76 (-29) rows, 83 (-20) columns and 1119 (-460) elements
Clp1000I sum of infeasibilities 6.64289e-08 - average 8.74064e-10, 46 fixed columns
Coin0506I Presolve 30 (-46) rows, 37 (-46) columns and 129 (-990) elements
Clp0006I 0  Obj -13.021568 Primal inf 2.0080928e-07 (1) Dual inf 1.4056249e+10 (37)
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 1.0575385 - largest nonzero change 1.1053924e-05 ( 0.00055269619%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value -10.596656
Clp0000I Optimal - objective value -10.596656
Coin0511I After Postsolve, objective -10.596656, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -10.596656 Dual inf 28.1524 (38)
Clp0014I Perturbing problem by 0.001% of 4.4590409 - largest nonzero change 1.5795841e-05 ( 0.0015795841%) - largest zero change 2.9778313e-05
Clp0000I Optimal - objective value 65.957442
Clp0000I Optimal - objective value 65.957442
Clp0000I Optimal - objective value 65.957442
Coin0511I After Postsolve, objective 65.957442, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.95744242 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 76 rows, 83 columns (83 integer (83 of which binary)) and 1123 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.496%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 5.80303
Cbc0038I Pass   1: suminf.    2.97598 (26) obj. -47.057 iterations 21
Cbc0038I Pass   2: suminf.    2.97598 (26) obj. -47.057 iterations 1
Cbc0038I Pass   3: suminf.    0.05882 (1) obj. 3.88558 iterations 25
Cbc0038I Solution found of 4.82676
Cbc0038I Rounding solution of -2.32707 is better than previous of 4.82676

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 83 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -2.32707 to -5.00892 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.2322
Cbc0038I Pass   4: suminf.    2.97598 (26) obj. -47.057 iterations 0
Cbc0038I Pass   5: suminf.    2.97598 (26) obj. -47.057 iterations 1
Cbc0038I Pass   6: suminf.    1.50061 (15) obj. -16.7873 iterations 11
Cbc0038I Pass   7: suminf.    0.61567 (2) obj. -10.2322 iterations 23
Cbc0038I Pass   8: suminf.    0.27287 (2) obj. -13.3174 iterations 1
Cbc0038I Pass   9: suminf.    2.75435 (12) obj. -10.2322 iterations 18
Cbc0038I Pass  10: suminf.    1.30408 (9) obj. -10.2322 iterations 5
Cbc0038I Pass  11: suminf.    1.08215 (8) obj. -12.7216 iterations 1
Cbc0038I Pass  12: suminf.    0.65048 (3) obj. -10.2322 iterations 9
Cbc0038I Pass  13: suminf.    0.31835 (2) obj. -12.59 iterations 3
Cbc0038I Pass  14: suminf.    0.58032 (2) obj. -10.2322 iterations 2
Cbc0038I Pass  15: suminf.    2.23642 (11) obj. -16.9465 iterations 18
Cbc0038I Pass  16: suminf.    0.74767 (8) obj. -15.3309 iterations 5
Cbc0038I Pass  17: suminf.    0.36291 (2) obj. -10.2322 iterations 8
Cbc0038I Pass  18: suminf.    0.36291 (2) obj. -10.2322 iterations 0
Cbc0038I Pass  19: suminf.    0.53484 (2) obj. -10.2322 iterations 1
Cbc0038I Pass  20: suminf.    4.57618 (18) obj. -10.2322 iterations 27
Cbc0038I Pass  21: suminf.    1.51475 (12) obj. -10.2322 iterations 8
Cbc0038I Pass  22: suminf.    1.51475 (12) obj. -10.2322 iterations 0
Cbc0038I Pass  23: suminf.    0.39069 (2) obj. -10.2322 iterations 12
Cbc0038I Pass  24: suminf.    0.27287 (2) obj. -11.2926 iterations 1
Cbc0038I Pass  25: suminf.    1.91591 (12) obj. -10.2322 iterations 10
Cbc0038I Pass  26: suminf.    0.67666 (6) obj. -10.2322 iterations 5
Cbc0038I Pass  27: suminf.    0.54047 (5) obj. -11.9341 iterations 1
Cbc0038I Pass  28: suminf.    0.55610 (3) obj. -10.2322 iterations 7
Cbc0038I Pass  29: suminf.    0.55610 (3) obj. -10.2322 iterations 1
Cbc0038I Pass  30: suminf.    0.91098 (3) obj. -10.2322 iterations 5
Cbc0038I Pass  31: suminf.    0.69650 (3) obj. -11.1937 iterations 2
Cbc0038I Pass  32: suminf.    3.35297 (14) obj. -10.2322 iterations 22
Cbc0038I Pass  33: suminf.    0.93948 (7) obj. -10.2322 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 83 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -5.00892 to -6.62013 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.634
Cbc0038I Pass  33: suminf.    2.97598 (26) obj. -47.057 iterations 0
Cbc0038I Pass  34: suminf.    2.97598 (26) obj. -47.057 iterations 1
Cbc0038I Pass  35: suminf.    1.60658 (13) obj. -19.634 iterations 15
Cbc0038I Pass  36: suminf.    1.28820 (7) obj. -19.634 iterations 24
Cbc0038I Pass  37: suminf.    1.28820 (7) obj. -19.634 iterations 1
Cbc0038I Pass  38: suminf.    2.82956 (7) obj. -19.634 iterations 9
Cbc0038I Pass  39: suminf.    0.78716 (4) obj. -19.634 iterations 4
Cbc0038I Pass  40: suminf.    0.78716 (4) obj. -19.634 iterations 0
Cbc0038I Pass  41: suminf.    0.91085 (4) obj. -19.634 iterations 5
Cbc0038I Pass  42: suminf.    0.91085 (4) obj. -19.634 iterations 1
Cbc0038I Pass  43: suminf.    0.78716 (4) obj. -19.634 iterations 2
Cbc0038I Pass  44: suminf.    2.00836 (12) obj. -19.634 iterations 23
Cbc0038I Pass  45: suminf.    0.81711 (8) obj. -19.634 iterations 8
Cbc0038I Pass  46: suminf.    0.69903 (8) obj. -20.6967 iterations 1
Cbc0038I Pass  47: suminf.    2.21933 (9) obj. -19.634 iterations 15
Cbc0038I Pass  48: suminf.    2.21393 (8) obj. -19.634 iterations 1
Cbc0038I Pass  49: suminf.    3.12634 (8) obj. -19.634 iterations 6
Cbc0038I Pass  50: suminf.    1.76708 (8) obj. -19.634 iterations 1
Cbc0038I Pass  51: suminf.    1.73953 (8) obj. -19.634 iterations 7
Cbc0038I Pass  52: suminf.    1.73888 (8) obj. -19.634 iterations 11
Cbc0038I Pass  53: suminf.    1.73888 (8) obj. -19.634 iterations 1
Cbc0038I Pass  54: suminf.    3.12634 (8) obj. -19.634 iterations 9
Cbc0038I Pass  55: suminf.    1.76708 (8) obj. -19.634 iterations 1
Cbc0038I Pass  56: suminf.    1.73953 (8) obj. -19.634 iterations 7
Cbc0038I Pass  57: suminf.    1.73888 (8) obj. -19.634 iterations 11
Cbc0038I Pass  58: suminf.    1.73888 (8) obj. -19.634 iterations 1
Cbc0038I Pass  59: suminf.    3.12634 (8) obj. -19.634 iterations 9
Cbc0038I Pass  60: suminf.    1.76708 (8) obj. -19.634 iterations 1
Cbc0038I Pass  61: suminf.    1.73953 (8) obj. -19.634 iterations 7
Cbc0038I Pass  62: suminf.    1.73888 (8) obj. -19.634 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 76 rows 83 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -6.62013 - took 0.04 seconds
Cbc0012I Integer solution of -6.62013 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 76 rows 83 columns, reduced to 16 rows 18 columns
Cbc0031I 48 added rows had average density of 26.166667
Cbc0013I At root node, 48 cuts changed objective from -57.241144 to -21.691636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12632 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1509 row cuts average 78.4 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 33 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1203 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 407 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 98 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.62013 best solution, best possible -21.691636 (2.37 seconds)
Cbc0012I Integer solution of -10.55847 found by rounding after 4244 iterations and 1 nodes (2.38 seconds)
Cbc0004I Integer solution of -14.66795 found after 4255 iterations and 1 nodes (2.38 seconds)
Cbc0010I After 17 nodes, 7 on tree, -14.66795 best solution, best possible -21.304712 (3.08 seconds)
Cbc0001I Search completed - best objective -14.66795, took 5932 iterations and 28 nodes (3.22 seconds)
Cbc0032I Strong branching done 520 times (12917 iterations), fathomed 4 nodes and fixed 1 variables
Cbc0035I Maximum depth 8, 36 variables fixed on reduced cost
Total time (CPU seconds):       2.46   (Wallclock seconds):       3.24

