Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 1.98853e-05 - average 3.89908e-07, 4 fixed columns
Coin0506I Presolve 41 (-10) rows, 25 (-4) columns and 125 (-27) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Coin0511I After Postsolve, objective 95.999368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Coin0511I After Postsolve, objective 95.999368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.99936847 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.981%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.65297
Cbc0038I Pass   1: suminf.    0.13710 (1) obj. -46.8483 iterations 22
Cbc0038I Solution found of -23.646
Cbc0038I Relaxing continuous gives -23.646
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -23.646 to -43.7684 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.9916
Cbc0038I Pass   2: suminf.    0.18649 (2) obj. -48.9916 iterations 1
Cbc0038I Pass   3: suminf.    0.59213 (3) obj. -48.9916 iterations 8
Cbc0038I Pass   4: suminf.    0.44258 (2) obj. -48.9916 iterations 1
Cbc0038I Pass   5: suminf.    0.53394 (2) obj. -48.9916 iterations 3
Cbc0038I Pass   6: suminf.    2.91025 (11) obj. -48.9916 iterations 7
Cbc0038I Pass   7: suminf.    1.14101 (4) obj. -48.9916 iterations 17
Cbc0038I Pass   8: suminf.    1.54297 (6) obj. -48.9916 iterations 4
Cbc0038I Pass   9: suminf.    1.03497 (5) obj. -48.9916 iterations 4
Cbc0038I Pass  10: suminf.    1.01323 (5) obj. -48.9916 iterations 3
Cbc0038I Pass  11: suminf.    0.53394 (2) obj. -48.9916 iterations 9
Cbc0038I Pass  12: suminf.    0.44258 (2) obj. -48.9916 iterations 1
Cbc0038I Pass  13: suminf.    1.22188 (3) obj. -48.9916 iterations 7
Cbc0038I Pass  14: suminf.    0.57646 (4) obj. -48.9916 iterations 5
Cbc0038I Pass  15: suminf.    1.37826 (6) obj. -48.9916 iterations 7
Cbc0038I Pass  16: suminf.    1.37826 (6) obj. -48.9916 iterations 0
Cbc0038I Pass  17: suminf.    1.33341 (4) obj. -48.9916 iterations 9
Cbc0038I Pass  18: suminf.    1.15755 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  19: suminf.    0.60597 (2) obj. -48.9916 iterations 2
Cbc0038I Pass  20: suminf.    0.34404 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  21: suminf.    1.16365 (3) obj. -48.9916 iterations 3
Cbc0038I Pass  22: suminf.    0.44258 (2) obj. -48.9916 iterations 4
Cbc0038I Pass  23: suminf.    0.53394 (2) obj. -48.9916 iterations 1
Cbc0038I Pass  24: suminf.    3.89314 (11) obj. -48.9916 iterations 15
Cbc0038I Pass  25: suminf.    3.09559 (9) obj. -48.9916 iterations 5
Cbc0038I Pass  26: suminf.    1.23957 (4) obj. -48.9916 iterations 7
Cbc0038I Pass  27: suminf.    1.07842 (3) obj. -48.9916 iterations 1
Cbc0038I Pass  28: suminf.    0.73468 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  29: suminf.    0.81878 (2) obj. -48.9916 iterations 4
Cbc0038I Pass  30: suminf.    0.62170 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  31: suminf.    0.72734 (2) obj. -48.9916 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -43.7684 to -47.692 (0.03 seconds)
Cbc0038I Round again with cutoff of -58.3931
Cbc0038I Pass  31: suminf.    0.73284 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  32: suminf.    0.72675 (3) obj. -58.3931 iterations 3
Cbc0038I Pass  33: suminf.    1.20026 (6) obj. -58.3931 iterations 11
Cbc0038I Pass  34: suminf.    1.05005 (5) obj. -58.3931 iterations 1
Cbc0038I Pass  35: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  36: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  37: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  38: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  39: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  40: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  41: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  42: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  43: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  44: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  45: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  46: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  47: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  48: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  49: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  50: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  51: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  52: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  53: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  54: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  55: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  56: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  57: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  58: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  59: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  60: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.692 - took 0.06 seconds
Cbc0012I Integer solution of -47.69201 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 34 rows 21 columns
Cbc0031I 19 added rows had average density of 16.947368
Cbc0013I At root node, 19 cuts changed objective from -95.999368 to -54.673297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1820 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 929 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.654 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -47.69201 best solution, best possible -54.673297 (1.33 seconds)
Cbc0001I Search completed - best objective -47.69201000000001, took 2901 iterations and 8 nodes (1.37 seconds)
Cbc0032I Strong branching done 136 times (951 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-15) rows, 52 (-8) columns and 482 (-130) elements
Clp1000I sum of infeasibilities 1.43877e-09 - average 3.06121e-11, 20 fixed columns
Coin0506I Presolve 25 (-22) rows, 28 (-24) columns and 154 (-328) elements
Clp0006I 0  Obj 102.65662 Dual inf 13.73339 (26)
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 117.41702
Clp0000I Optimal - objective value 117.41702
Coin0511I After Postsolve, objective 117.41702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 117.41702 Dual inf 27.968213 (2)
Clp0014I Perturbing problem by 0.001% of 0.22231372 - largest nonzero change 2.7878182e-05 ( 0.0023633483%) - largest zero change 2.9851085e-05
Clp0000I Optimal - objective value 119.39337
Clp0000I Optimal - objective value 119.39337
Clp0000I Optimal - objective value 119.39337
Coin0511I After Postsolve, objective 119.39337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.3933698 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 53 columns (53 integer (53 of which binary)) and 487 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 5.89495
Cbc0038I Pass   1: suminf.    3.25065 (14) obj. -96.6432 iterations 14
Cbc0038I Pass   2: suminf.    3.25065 (14) obj. -96.6432 iterations 0
Cbc0038I Solution found of -36.6881
Cbc0038I Rounding solution of -40.6117 is better than previous of -36.6881

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -47.525
Cbc0038I Pass   3: suminf.    3.25065 (14) obj. -96.6432 iterations 0
Cbc0038I Pass   4: suminf.    3.25065 (14) obj. -96.6432 iterations 0
Cbc0038I Pass   5: suminf.    0.40303 (1) obj. -47.525 iterations 20
Cbc0038I Pass   6: suminf.    0.40323 (1) obj. -47.5303 iterations 1
Cbc0038I Pass   7: suminf.    2.30026 (7) obj. -47.525 iterations 12
Cbc0038I Pass   8: suminf.    1.94243 (6) obj. -47.525 iterations 3
Cbc0038I Pass   9: suminf.    1.81549 (5) obj. -47.525 iterations 4
Cbc0038I Pass  10: suminf.    1.81549 (5) obj. -47.525 iterations 0
Cbc0038I Pass  11: suminf.    1.04261 (4) obj. -47.525 iterations 2
Cbc0038I Pass  12: suminf.    0.94558 (3) obj. -47.525 iterations 1
Cbc0038I Pass  13: suminf.    1.03005 (3) obj. -47.525 iterations 1
Cbc0038I Pass  14: suminf.    1.03005 (3) obj. -47.525 iterations 0
Cbc0038I Pass  15: suminf.    0.94558 (3) obj. -47.525 iterations 1
Cbc0038I Pass  16: suminf.    1.80990 (10) obj. -47.525 iterations 13
Cbc0038I Pass  17: suminf.    1.75137 (9) obj. -47.525 iterations 1
Cbc0038I Pass  18: suminf.    2.89326 (9) obj. -47.525 iterations 13
Cbc0038I Pass  19: suminf.    2.51899 (7) obj. -47.525 iterations 3
Cbc0038I Pass  20: suminf.    1.09657 (3) obj. -47.525 iterations 4
Cbc0038I Pass  21: suminf.    1.09657 (3) obj. -47.525 iterations 0
Cbc0038I Pass  22: suminf.    1.15797 (3) obj. -47.525 iterations 2
Cbc0038I Pass  23: suminf.    1.15797 (3) obj. -47.525 iterations 1
Cbc0038I Pass  24: suminf.    1.09657 (3) obj. -47.525 iterations 3
Cbc0038I Pass  25: suminf.    2.70684 (11) obj. -47.525 iterations 13
Cbc0038I Pass  26: suminf.    2.55648 (9) obj. -47.525 iterations 1
Cbc0038I Pass  27: suminf.    2.00921 (6) obj. -47.525 iterations 8
Cbc0038I Pass  28: suminf.    2.00921 (6) obj. -47.525 iterations 0
Cbc0038I Pass  29: suminf.    1.68446 (6) obj. -47.525 iterations 2
Cbc0038I Pass  30: suminf.    1.54031 (6) obj. -47.525 iterations 5
Cbc0038I Pass  31: suminf.    1.31421 (5) obj. -47.525 iterations 4
Cbc0038I Pass  32: suminf.    1.22925 (4) obj. -47.525 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 53 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -40.6117 - took 0.02 seconds
Cbc0012I Integer solution of -40.61173 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -47.69201 found by DiveCoefficient after 220 iterations and 0 nodes (0.18 seconds)
Cbc0031I 26 added rows had average density of 10.230769
Cbc0013I At root node, 26 cuts changed objective from -109.7439 to -47.69201 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 343 row cuts average 4.0 elements, 13 column cuts (13 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 97 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 46 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0001I Search completed - best objective -47.69201000000001, took 220 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 1.98853e-05 - average 3.89908e-07, 4 fixed columns
Coin0506I Presolve 41 (-10) rows, 25 (-4) columns and 125 (-27) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Coin0511I After Postsolve, objective 95.999368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Clp0000I Optimal - objective value 95.999368
Coin0511I After Postsolve, objective 95.999368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.99936847 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 152 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.981%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 5.65297
Cbc0038I Pass   1: suminf.    0.13710 (1) obj. -46.8483 iterations 22
Cbc0038I Solution found of -23.646
Cbc0038I Relaxing continuous gives -23.646
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -23.646 to -43.7684 (0.02 seconds)
Cbc0038I Round again with cutoff of -48.9916
Cbc0038I Pass   2: suminf.    0.18649 (2) obj. -48.9916 iterations 1
Cbc0038I Pass   3: suminf.    0.59213 (3) obj. -48.9916 iterations 8
Cbc0038I Pass   4: suminf.    0.44258 (2) obj. -48.9916 iterations 1
Cbc0038I Pass   5: suminf.    0.53394 (2) obj. -48.9916 iterations 3
Cbc0038I Pass   6: suminf.    2.91025 (11) obj. -48.9916 iterations 7
Cbc0038I Pass   7: suminf.    1.14101 (4) obj. -48.9916 iterations 17
Cbc0038I Pass   8: suminf.    1.54297 (6) obj. -48.9916 iterations 4
Cbc0038I Pass   9: suminf.    1.03497 (5) obj. -48.9916 iterations 4
Cbc0038I Pass  10: suminf.    1.01323 (5) obj. -48.9916 iterations 3
Cbc0038I Pass  11: suminf.    0.53394 (2) obj. -48.9916 iterations 9
Cbc0038I Pass  12: suminf.    0.44258 (2) obj. -48.9916 iterations 1
Cbc0038I Pass  13: suminf.    1.22188 (3) obj. -48.9916 iterations 7
Cbc0038I Pass  14: suminf.    0.57646 (4) obj. -48.9916 iterations 5
Cbc0038I Pass  15: suminf.    1.37826 (6) obj. -48.9916 iterations 7
Cbc0038I Pass  16: suminf.    1.37826 (6) obj. -48.9916 iterations 0
Cbc0038I Pass  17: suminf.    1.33341 (4) obj. -48.9916 iterations 9
Cbc0038I Pass  18: suminf.    1.15755 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  19: suminf.    0.60597 (2) obj. -48.9916 iterations 2
Cbc0038I Pass  20: suminf.    0.34404 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  21: suminf.    1.16365 (3) obj. -48.9916 iterations 3
Cbc0038I Pass  22: suminf.    0.44258 (2) obj. -48.9916 iterations 4
Cbc0038I Pass  23: suminf.    0.53394 (2) obj. -48.9916 iterations 1
Cbc0038I Pass  24: suminf.    3.89314 (11) obj. -48.9916 iterations 15
Cbc0038I Pass  25: suminf.    3.09559 (9) obj. -48.9916 iterations 5
Cbc0038I Pass  26: suminf.    1.23957 (4) obj. -48.9916 iterations 7
Cbc0038I Pass  27: suminf.    1.07842 (3) obj. -48.9916 iterations 1
Cbc0038I Pass  28: suminf.    0.73468 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  29: suminf.    0.81878 (2) obj. -48.9916 iterations 4
Cbc0038I Pass  30: suminf.    0.62170 (3) obj. -48.9916 iterations 2
Cbc0038I Pass  31: suminf.    0.72734 (2) obj. -48.9916 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 40 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -43.7684 to -47.692 (0.04 seconds)
Cbc0038I Round again with cutoff of -58.3931
Cbc0038I Pass  31: suminf.    0.73284 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  32: suminf.    0.72675 (3) obj. -58.3931 iterations 3
Cbc0038I Pass  33: suminf.    1.20026 (6) obj. -58.3931 iterations 11
Cbc0038I Pass  34: suminf.    1.05005 (5) obj. -58.3931 iterations 1
Cbc0038I Pass  35: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  36: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  37: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  38: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  39: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  40: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  41: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  42: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  43: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  44: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  45: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  46: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  47: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  48: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  49: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  50: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  51: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  52: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  53: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I Pass  54: suminf.    1.36531 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  55: suminf.    1.05005 (5) obj. -58.3931 iterations 2
Cbc0038I Pass  56: suminf.    1.65568 (4) obj. -58.3931 iterations 7
Cbc0038I Pass  57: suminf.    1.15713 (3) obj. -58.3931 iterations 2
Cbc0038I Pass  58: suminf.    0.81740 (3) obj. -58.3931 iterations 1
Cbc0038I Pass  59: suminf.    0.78316 (4) obj. -58.3931 iterations 4
Cbc0038I Pass  60: suminf.    0.76273 (4) obj. -58.3931 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.692 - took 0.03 seconds
Cbc0012I Integer solution of -47.69201 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 34 rows 21 columns
Cbc0031I 19 added rows had average density of 16.947368
Cbc0013I At root node, 19 cuts changed objective from -95.999368 to -54.673297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1820 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 929 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.829 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -47.69201 best solution, best possible -54.673297 (1.73 seconds)
Cbc0001I Search completed - best objective -47.69201000000001, took 2901 iterations and 8 nodes (1.78 seconds)
Cbc0032I Strong branching done 136 times (951 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 6 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 52 (-9) columns and 482 (-131) elements
Clp1000I sum of infeasibilities 1.43877e-09 - average 3.06121e-11, 20 fixed columns
Coin0506I Presolve 25 (-22) rows, 28 (-24) columns and 154 (-328) elements
Clp0006I 0  Obj 102.65662 Dual inf 13.73339 (26)
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 117.41702
Clp0000I Optimal - objective value 117.41702
Coin0511I After Postsolve, objective 117.41702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 117.41702 Dual inf 27.968213 (2)
Clp0014I Perturbing problem by 0.001% of 0.22231372 - largest nonzero change 2.7878182e-05 ( 0.0023633483%) - largest zero change 2.9851085e-05
Clp0000I Optimal - objective value 119.39337
Clp0000I Optimal - objective value 119.39337
Clp0000I Optimal - objective value 119.39337
Coin0511I After Postsolve, objective 119.39337, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.3933698 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 53 columns (53 integer (53 of which binary)) and 487 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.759%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 5.89495
Cbc0038I Pass   1: suminf.    3.25065 (14) obj. -96.6432 iterations 14
Cbc0038I Pass   2: suminf.    3.25065 (14) obj. -96.6432 iterations 0
Cbc0038I Solution found of -36.6881
Cbc0038I Rounding solution of -40.6117 is better than previous of -36.6881

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -47.525
Cbc0038I Pass   3: suminf.    3.25065 (14) obj. -96.6432 iterations 0
Cbc0038I Pass   4: suminf.    3.25065 (14) obj. -96.6432 iterations 0
Cbc0038I Pass   5: suminf.    0.40303 (1) obj. -47.525 iterations 20
Cbc0038I Pass   6: suminf.    0.40323 (1) obj. -47.5303 iterations 1
Cbc0038I Pass   7: suminf.    2.30026 (7) obj. -47.525 iterations 12
Cbc0038I Pass   8: suminf.    1.94243 (6) obj. -47.525 iterations 3
Cbc0038I Pass   9: suminf.    1.81549 (5) obj. -47.525 iterations 4
Cbc0038I Pass  10: suminf.    1.81549 (5) obj. -47.525 iterations 0
Cbc0038I Pass  11: suminf.    1.04261 (4) obj. -47.525 iterations 2
Cbc0038I Pass  12: suminf.    0.94558 (3) obj. -47.525 iterations 1
Cbc0038I Pass  13: suminf.    1.03005 (3) obj. -47.525 iterations 1
Cbc0038I Pass  14: suminf.    1.03005 (3) obj. -47.525 iterations 0
Cbc0038I Pass  15: suminf.    0.94558 (3) obj. -47.525 iterations 1
Cbc0038I Pass  16: suminf.    1.80990 (10) obj. -47.525 iterations 13
Cbc0038I Pass  17: suminf.    1.75137 (9) obj. -47.525 iterations 1
Cbc0038I Pass  18: suminf.    2.89326 (9) obj. -47.525 iterations 13
Cbc0038I Pass  19: suminf.    2.51899 (7) obj. -47.525 iterations 3
Cbc0038I Pass  20: suminf.    1.09657 (3) obj. -47.525 iterations 4
Cbc0038I Pass  21: suminf.    1.09657 (3) obj. -47.525 iterations 0
Cbc0038I Pass  22: suminf.    1.15797 (3) obj. -47.525 iterations 2
Cbc0038I Pass  23: suminf.    1.15797 (3) obj. -47.525 iterations 1
Cbc0038I Pass  24: suminf.    1.09657 (3) obj. -47.525 iterations 3
Cbc0038I Pass  25: suminf.    2.70684 (11) obj. -47.525 iterations 13
Cbc0038I Pass  26: suminf.    2.55648 (9) obj. -47.525 iterations 1
Cbc0038I Pass  27: suminf.    2.00921 (6) obj. -47.525 iterations 8
Cbc0038I Pass  28: suminf.    2.00921 (6) obj. -47.525 iterations 0
Cbc0038I Pass  29: suminf.    1.68446 (6) obj. -47.525 iterations 2
Cbc0038I Pass  30: suminf.    1.54031 (6) obj. -47.525 iterations 5
Cbc0038I Pass  31: suminf.    1.31421 (5) obj. -47.525 iterations 4
Cbc0038I Pass  32: suminf.    1.22925 (4) obj. -47.525 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 53 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -40.6117 - took 0.02 seconds
Cbc0012I Integer solution of -40.61173 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -47.69201 found by DiveCoefficient after 220 iterations and 0 nodes (0.21 seconds)
Cbc0031I 26 added rows had average density of 10.230769
Cbc0013I At root node, 26 cuts changed objective from -109.7439 to -47.69201 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 343 row cuts average 4.0 elements, 13 column cuts (13 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 97 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 46 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0001I Search completed - best objective -47.69201000000001, took 220 iterations and 0 nodes (0.21 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.22

