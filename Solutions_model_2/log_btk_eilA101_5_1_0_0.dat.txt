Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 574 (-29) elements
Clp1000I sum of infeasibilities 1.25632e-05 - average 6.61219e-08, 20 fixed columns
Coin0506I Presolve 150 (-40) rows, 81 (-20) columns and 454 (-120) elements
Clp0029I End of values pass after 81 iterations
Clp0000I Optimal - objective value 54.227778
Clp0000I Optimal - objective value 54.227778
Coin0511I After Postsolve, objective 54.227778, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.227778
Clp0000I Optimal - objective value 54.227778
Clp0000I Optimal - objective value 54.227778
Coin0511I After Postsolve, objective 54.227778, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.22777798 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 12.3268
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.7382 iterations 72
Cbc0038I Solution found of 0.7382
Cbc0038I Relaxing continuous gives 0.7382
Cbc0038I Rounding solution of -13.5312 is better than previous of 0.7382

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 100 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -13.5312 to -26.919 (0.06 seconds)
Cbc0038I Round again with cutoff of -29.6499
Cbc0038I Pass   2: suminf.    4.46270 (14) obj. -29.6499 iterations 27
Cbc0038I Pass   3: suminf.    2.83489 (9) obj. -29.6499 iterations 22
Cbc0038I Pass   4: suminf.    2.76476 (8) obj. -29.6499 iterations 6
Cbc0038I Pass   5: suminf.    2.83374 (8) obj. -29.6499 iterations 14
Cbc0038I Pass   6: suminf.    2.43698 (7) obj. -29.6499 iterations 2
Cbc0038I Pass   7: suminf.    2.11366 (7) obj. -29.6499 iterations 4
Cbc0038I Pass   8: suminf.    3.33334 (12) obj. -29.6499 iterations 19
Cbc0038I Pass   9: suminf.    3.33334 (12) obj. -29.6499 iterations 0
Cbc0038I Pass  10: suminf.    4.23773 (12) obj. -29.6499 iterations 17
Cbc0038I Pass  11: suminf.    2.04028 (7) obj. -29.6499 iterations 7
Cbc0038I Pass  12: suminf.    2.04028 (7) obj. -29.6499 iterations 0
Cbc0038I Pass  13: suminf.    2.94221 (9) obj. -29.6499 iterations 15
Cbc0038I Pass  14: suminf.    2.43698 (7) obj. -29.6499 iterations 9
Cbc0038I Pass  15: suminf.    2.11366 (7) obj. -29.6499 iterations 4
Cbc0038I Pass  16: suminf.    3.33334 (12) obj. -29.6499 iterations 19
Cbc0038I Pass  17: suminf.    3.33334 (12) obj. -29.6499 iterations 0
Cbc0038I Pass  18: suminf.    4.23773 (12) obj. -29.6499 iterations 17
Cbc0038I Pass  19: suminf.    2.04028 (7) obj. -29.6499 iterations 7
Cbc0038I Pass  20: suminf.    2.04028 (7) obj. -29.6499 iterations 0
Cbc0038I Pass  21: suminf.    2.94221 (9) obj. -29.6499 iterations 15
Cbc0038I Pass  22: suminf.    2.43698 (7) obj. -29.6499 iterations 9
Cbc0038I Pass  23: suminf.    2.11366 (7) obj. -29.6499 iterations 4
Cbc0038I Pass  24: suminf.    3.33334 (12) obj. -29.6499 iterations 19
Cbc0038I Pass  25: suminf.    3.33334 (12) obj. -29.6499 iterations 0
Cbc0038I Pass  26: suminf.    4.23773 (12) obj. -29.6499 iterations 18
Cbc0038I Pass  27: suminf.    2.04028 (7) obj. -29.6499 iterations 7
Cbc0038I Pass  28: suminf.    2.04028 (7) obj. -29.6499 iterations 0
Cbc0038I Pass  29: suminf.    2.94221 (9) obj. -29.6499 iterations 15
Cbc0038I Pass  30: suminf.    2.43698 (7) obj. -29.6499 iterations 9
Cbc0038I Pass  31: suminf.    2.11366 (7) obj. -29.6499 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 100 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -26.919 - took 0.10 seconds
Cbc0012I Integer solution of -26.918956 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 100 rows 55 columns
Cbc0031I 25 added rows had average density of 74.2
Cbc0013I At root node, 25 cuts changed objective from -54.227778 to -45.928947 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16871 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2785 row cuts average 100.9 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.918956 best solution, best possible -45.928947 (1.33 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 16 rows 15 columns
Cbc0012I Integer solution of -27.53163 found by rounding after 11303 iterations and 42 nodes (1.68 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 24 rows 22 columns
Cbc0001I Search completed - best objective -27.53163000000001, took 13888 iterations and 100 nodes (1.85 seconds)
Cbc0032I Strong branching done 1106 times (22115 iterations), fathomed 4 nodes and fixed 33 variables
Cbc0035I Maximum depth 38, 258 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       1.87

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-67) rows, 147 (-55) columns and 2801 (-2852) elements
Clp1000I sum of infeasibilities 4.55513e-07 - average 3.32491e-09, 61 fixed columns
Coin0506I Presolve 72 (-65) rows, 86 (-61) columns and 310 (-2491) elements
Clp0006I 0  Obj -2.7563701 Dual inf 105.52214 (86)
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 0.24416912 - largest nonzero change 1.201646e-05 ( 0.0010393299%) - largest zero change 2.9932119e-05
Clp0000I Optimal - objective value 1.6868222
Clp0000I Optimal - objective value 1.6868222
Coin0511I After Postsolve, objective 1.6868222, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1.6868222 Dual inf 94.502279 (47)
Clp0014I Perturbing problem by 0.001% of 1.4798387 - largest nonzero change 1.8540007e-05 ( 0.0018540007%) - largest zero change 2.9862257e-05
Clp0000I Optimal - objective value 64.796293
Clp0000I Optimal - objective value 64.796293
Clp0000I Optimal - objective value 64.796293
Coin0511I After Postsolve, objective 64.796293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.7962928 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 147 columns (147 integer (147 of which binary)) and 2804 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 7.23758
Cbc0038I Pass   1: suminf.    3.77036 (39) obj. -51.6007 iterations 14
Cbc0038I Pass   2: suminf.    3.77036 (39) obj. -51.6007 iterations 1
Cbc0038I Pass   3: suminf.    0.29362 (8) obj. -14.4887 iterations 26
Cbc0038I Solution found of -5.82401
Cbc0038I Rounding solution of -10.1334 is better than previous of -5.82401

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 147 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -10.1334 to -10.9702 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.6658
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.77036 (39) obj. -51.6007 iterations 0
Cbc0038I Pass   5: suminf.    3.77036 (39) obj. -51.6007 iterations 1
Cbc0038I Pass   6: suminf.    1.61542 (25) obj. -30.1872 iterations 21
Cbc0038I Pass   7: suminf.    0.79010 (15) obj. -19.1581 iterations 10
Cbc0038I Pass   8: suminf.    1.22847 (6) obj. -15.6658 iterations 23
Cbc0038I Pass   9: suminf.    1.22847 (6) obj. -15.6658 iterations 0
Cbc0038I Pass  10: suminf.    0.62355 (2) obj. -15.6658 iterations 6
Cbc0038I Pass  11: suminf.    0.58047 (2) obj. -15.8812 iterations 1
Cbc0038I Pass  12: suminf.    0.62355 (2) obj. -15.6658 iterations 4
Cbc0038I Pass  13: suminf.    2.68369 (21) obj. -15.6658 iterations 45
Cbc0038I Pass  14: suminf.    2.04410 (17) obj. -15.6658 iterations 13
Cbc0038I Pass  15: suminf.    2.01392 (17) obj. -15.6658 iterations 4
Cbc0038I Pass  16: suminf.    3.31560 (13) obj. -15.6658 iterations 26
Cbc0038I Pass  17: suminf.    1.59385 (9) obj. -15.6658 iterations 3
Cbc0038I Pass  18: suminf.    1.18329 (8) obj. -15.6658 iterations 8
Cbc0038I Pass  19: suminf.    1.18329 (8) obj. -15.6658 iterations 3
Cbc0038I Pass  20: suminf.    1.19862 (6) obj. -15.6658 iterations 6
Cbc0038I Pass  21: suminf.    0.63866 (5) obj. -16.2796 iterations 4
Cbc0038I Pass  22: suminf.    1.36295 (8) obj. -15.6658 iterations 11
Cbc0038I Pass  23: suminf.    0.53552 (5) obj. -15.6658 iterations 7
Cbc0038I Pass  24: suminf.    0.32787 (3) obj. -15.9147 iterations 4
Cbc0038I Pass  25: suminf.    0.45230 (3) obj. -15.6658 iterations 5
Cbc0038I Pass  26: suminf.    1.47761 (18) obj. -17.3088 iterations 40
Cbc0038I Pass  27: suminf.    1.29000 (11) obj. -16.7181 iterations 23
Cbc0038I Pass  28: suminf.    0.85915 (7) obj. -15.6658 iterations 19
Cbc0038I Pass  29: suminf.    0.85915 (7) obj. -15.6658 iterations 1
Cbc0038I Pass  30: suminf.    1.06171 (5) obj. -15.6658 iterations 15
Cbc0038I Pass  31: suminf.    0.63275 (5) obj. -16.1982 iterations 3
Cbc0038I Pass  32: suminf.    1.40884 (6) obj. -15.6658 iterations 19
Cbc0038I Pass  33: suminf.    1.40884 (6) obj. -15.6658 iterations 0
Cbc0038I Rounding solution of -11.025 is better than previous of -10.9702

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 147 columns, reduced to 34 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -11.025 to -16.6964 (0.10 seconds)
Cbc0038I Round again with cutoff of -24.9422
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.77036 (39) obj. -51.6007 iterations 0
Cbc0038I Pass  34: suminf.    3.77036 (39) obj. -51.6007 iterations 1
Cbc0038I Pass  35: suminf.    1.40687 (15) obj. -24.9422 iterations 38
Cbc0038I Pass  36: suminf.    1.40687 (15) obj. -24.9422 iterations 0
Cbc0038I Pass  37: suminf.    1.64292 (7) obj. -24.9422 iterations 21
Cbc0038I Pass  38: suminf.    1.44364 (8) obj. -24.9422 iterations 2
Cbc0038I Pass  39: suminf.    1.64292 (7) obj. -24.9422 iterations 7
Cbc0038I Pass  40: suminf.    2.08681 (14) obj. -24.9422 iterations 28
Cbc0038I Pass  41: suminf.    1.87720 (13) obj. -24.9422 iterations 7
Cbc0038I Pass  42: suminf.    0.74379 (8) obj. -24.9422 iterations 15
Cbc0038I Pass  43: suminf.    0.71564 (7) obj. -24.9985 iterations 3
Cbc0038I Pass  44: suminf.    0.74379 (7) obj. -24.9422 iterations 9
Cbc0038I Pass  45: suminf.    2.32396 (17) obj. -24.9422 iterations 22
Cbc0038I Pass  46: suminf.    1.28073 (15) obj. -24.9422 iterations 12
Cbc0038I Pass  47: suminf.    1.41277 (11) obj. -24.9422 iterations 25
Cbc0038I Pass  48: suminf.    1.41277 (11) obj. -24.9422 iterations 0
Cbc0038I Pass  49: suminf.    1.63290 (16) obj. -24.9422 iterations 7
Cbc0038I Pass  50: suminf.    1.63166 (10) obj. -24.9422 iterations 1
Cbc0038I Pass  51: suminf.    1.59453 (9) obj. -24.9422 iterations 9
Cbc0038I Pass  52: suminf.    1.35059 (9) obj. -24.9422 iterations 4
Cbc0038I Pass  53: suminf.    1.59453 (9) obj. -24.9422 iterations 13
Cbc0038I Pass  54: suminf.    1.79368 (17) obj. -24.9422 iterations 17
Cbc0038I Pass  55: suminf.    1.46777 (10) obj. -24.9877 iterations 8
Cbc0038I Pass  56: suminf.    1.45523 (10) obj. -24.9422 iterations 1
Cbc0038I Pass  57: suminf.    1.36944 (9) obj. -24.9422 iterations 11
Cbc0038I Pass  58: suminf.    1.35059 (9) obj. -24.9422 iterations 2
Cbc0038I Pass  59: suminf.    1.59453 (9) obj. -24.9422 iterations 15
Cbc0038I Pass  60: suminf.    3.67396 (20) obj. -24.9422 iterations 22
Cbc0038I Pass  61: suminf.    1.81723 (15) obj. -24.9422 iterations 7
Cbc0038I Pass  62: suminf.    1.51606 (14) obj. -26.5319 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 147 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -16.6964 to -19.7455 (0.20 seconds)
Cbc0038I Round again with cutoff of -34.8371
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.77036 (39) obj. -51.6007 iterations 0
Cbc0038I Pass  63: suminf.    3.77036 (39) obj. -51.6007 iterations 1
Cbc0038I Pass  64: suminf.    1.91159 (21) obj. -34.8371 iterations 34
Cbc0038I Pass  65: suminf.    1.90000 (20) obj. -35.3244 iterations 2
Cbc0038I Pass  66: suminf.    2.56466 (17) obj. -34.8371 iterations 18
Cbc0038I Pass  67: suminf.    2.24917 (17) obj. -34.8371 iterations 5
Cbc0038I Pass  68: suminf.    2.35644 (17) obj. -34.8371 iterations 15
Cbc0038I Pass  69: suminf.    2.23247 (17) obj. -34.8371 iterations 8
Cbc0038I Pass  70: suminf.    2.35644 (17) obj. -34.8371 iterations 15
Cbc0038I Pass  71: suminf.    3.03474 (26) obj. -34.8371 iterations 15
Cbc0038I Pass  72: suminf.    2.53680 (20) obj. -34.8371 iterations 4
Cbc0038I Pass  73: suminf.    2.52108 (18) obj. -34.8371 iterations 22
Cbc0038I Pass  74: suminf.    2.48209 (25) obj. -34.8371 iterations 6
Cbc0038I Pass  75: suminf.    2.52108 (18) obj. -34.8371 iterations 10
Cbc0038I Pass  76: suminf.    2.48094 (27) obj. -34.8371 iterations 35
Cbc0038I Pass  77: suminf.    2.28360 (18) obj. -34.8371 iterations 6
Cbc0038I Pass  78: suminf.    2.50697 (17) obj. -34.8371 iterations 21
Cbc0038I Pass  79: suminf.    1.92888 (17) obj. -34.8371 iterations 9
Cbc0038I Pass  80: suminf.    2.50697 (17) obj. -34.8371 iterations 21
Cbc0038I Pass  81: suminf.    2.11572 (17) obj. -34.8371 iterations 9
Cbc0038I Pass  82: suminf.    2.50697 (17) obj. -34.8371 iterations 17
Cbc0038I Pass  83: suminf.    2.12154 (17) obj. -34.8371 iterations 8
Cbc0038I Pass  84: suminf.    2.50697 (17) obj. -34.8371 iterations 18
Cbc0038I Pass  85: suminf.    2.14177 (17) obj. -34.8371 iterations 9
Cbc0038I Pass  86: suminf.    2.84073 (21) obj. -34.8371 iterations 22
Cbc0038I Pass  87: suminf.    2.19013 (19) obj. -35.4069 iterations 11
Cbc0038I Pass  88: suminf.    2.32906 (18) obj. -34.8371 iterations 17
Cbc0038I Pass  89: suminf.    2.27560 (18) obj. -34.8371 iterations 5
Cbc0038I Pass  90: suminf.    2.54378 (18) obj. -34.8371 iterations 15
Cbc0038I Pass  91: suminf.    2.53624 (18) obj. -34.8371 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 147 columns, reduced to 57 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -19.7455 - took 0.18 seconds
Cbc0012I Integer solution of -19.74547 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 137 rows 147 columns, reduced to 33 rows 39 columns
Cbc0031I 72 added rows had average density of 51.444444
Cbc0013I At root node, 72 cuts changed objective from -57.925075 to -31.648367 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15993 row cuts average 2.0 elements, 0 column cuts (18 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1658 row cuts average 140.6 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1059 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1012 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 342 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.471 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.74547 best solution, best possible -31.648367 (2.89 seconds)
Cbc0012I Integer solution of -24.28292 found by rounding after 7942 iterations and 4 nodes (3.43 seconds)
Cbc0012I Integer solution of -25.41084 found by DiveCoefficient after 7987 iterations and 4 nodes (3.44 seconds)
Cbc0012I Integer solution of -26.53163 found by DiveCoefficient after 7991 iterations and 5 nodes (3.44 seconds)
Cbc0010I After 8 nodes, 5 on tree, -26.53163 best solution, best possible -31.648367 (3.59 seconds)
Cbc0012I Integer solution of -27.53163 found by rounding after 10013 iterations and 34 nodes (4.08 seconds)
Cbc0001I Search completed - best objective -27.53163000000001, took 10580 iterations and 38 nodes (4.24 seconds)
Cbc0032I Strong branching done 652 times (17679 iterations), fathomed 5 nodes and fixed 1 variables
Cbc0035I Maximum depth 12, 139 variables fixed on reduced cost
Total time (CPU seconds):       3.73   (Wallclock seconds):       4.27

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 101 (-2) columns and 574 (-29) elements
Clp1000I sum of infeasibilities 1.25632e-05 - average 6.61219e-08, 20 fixed columns
Coin0506I Presolve 150 (-40) rows, 81 (-20) columns and 454 (-120) elements
Clp0029I End of values pass after 81 iterations
Clp0000I Optimal - objective value 54.227778
Clp0000I Optimal - objective value 54.227778
Coin0511I After Postsolve, objective 54.227778, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.227778
Clp0000I Optimal - objective value 54.227778
Clp0000I Optimal - objective value 54.227778
Coin0511I After Postsolve, objective 54.227778, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.22777798 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 190 rows, 101 columns (100 integer (100 of which binary)) and 574 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.917%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 12.3268
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.7382 iterations 72
Cbc0038I Solution found of 0.7382
Cbc0038I Relaxing continuous gives 0.7382
Cbc0038I Rounding solution of -13.5312 is better than previous of 0.7382

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 100 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -13.5312 to -26.919 (0.06 seconds)
Cbc0038I Round again with cutoff of -29.6499
Cbc0038I Pass   2: suminf.    4.46270 (14) obj. -29.6499 iterations 27
Cbc0038I Pass   3: suminf.    2.83489 (9) obj. -29.6499 iterations 22
Cbc0038I Pass   4: suminf.    2.76476 (8) obj. -29.6499 iterations 6
Cbc0038I Pass   5: suminf.    2.83374 (8) obj. -29.6499 iterations 14
Cbc0038I Pass   6: suminf.    2.43698 (7) obj. -29.6499 iterations 2
Cbc0038I Pass   7: suminf.    2.11366 (7) obj. -29.6499 iterations 4
Cbc0038I Pass   8: suminf.    3.33334 (12) obj. -29.6499 iterations 19
Cbc0038I Pass   9: suminf.    3.33334 (12) obj. -29.6499 iterations 0
Cbc0038I Pass  10: suminf.    4.23773 (12) obj. -29.6499 iterations 17
Cbc0038I Pass  11: suminf.    2.04028 (7) obj. -29.6499 iterations 7
Cbc0038I Pass  12: suminf.    2.04028 (7) obj. -29.6499 iterations 0
Cbc0038I Pass  13: suminf.    2.94221 (9) obj. -29.6499 iterations 15
Cbc0038I Pass  14: suminf.    2.43698 (7) obj. -29.6499 iterations 9
Cbc0038I Pass  15: suminf.    2.11366 (7) obj. -29.6499 iterations 4
Cbc0038I Pass  16: suminf.    3.33334 (12) obj. -29.6499 iterations 19
Cbc0038I Pass  17: suminf.    3.33334 (12) obj. -29.6499 iterations 0
Cbc0038I Pass  18: suminf.    4.23773 (12) obj. -29.6499 iterations 17
Cbc0038I Pass  19: suminf.    2.04028 (7) obj. -29.6499 iterations 7
Cbc0038I Pass  20: suminf.    2.04028 (7) obj. -29.6499 iterations 0
Cbc0038I Pass  21: suminf.    2.94221 (9) obj. -29.6499 iterations 15
Cbc0038I Pass  22: suminf.    2.43698 (7) obj. -29.6499 iterations 9
Cbc0038I Pass  23: suminf.    2.11366 (7) obj. -29.6499 iterations 4
Cbc0038I Pass  24: suminf.    3.33334 (12) obj. -29.6499 iterations 19
Cbc0038I Pass  25: suminf.    3.33334 (12) obj. -29.6499 iterations 0
Cbc0038I Pass  26: suminf.    4.23773 (12) obj. -29.6499 iterations 18
Cbc0038I Pass  27: suminf.    2.04028 (7) obj. -29.6499 iterations 7
Cbc0038I Pass  28: suminf.    2.04028 (7) obj. -29.6499 iterations 0
Cbc0038I Pass  29: suminf.    2.94221 (9) obj. -29.6499 iterations 15
Cbc0038I Pass  30: suminf.    2.43698 (7) obj. -29.6499 iterations 9
Cbc0038I Pass  31: suminf.    2.11366 (7) obj. -29.6499 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 190 rows 101 columns, reduced to 100 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -26.919 - took 0.10 seconds
Cbc0012I Integer solution of -26.918956 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 100 rows 55 columns
Cbc0031I 25 added rows had average density of 74.2
Cbc0013I At root node, 25 cuts changed objective from -54.227778 to -45.928947 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16871 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2785 row cuts average 100.9 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -26.918956 best solution, best possible -45.928947 (1.37 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 16 rows 15 columns
Cbc0012I Integer solution of -27.53163 found by rounding after 11303 iterations and 42 nodes (1.75 seconds)
Cbc0038I Full problem 190 rows 101 columns, reduced to 24 rows 22 columns
Cbc0001I Search completed - best objective -27.53163000000001, took 13888 iterations and 100 nodes (1.95 seconds)
Cbc0032I Strong branching done 1106 times (22115 iterations), fathomed 4 nodes and fixed 33 variables
Cbc0035I Maximum depth 38, 258 variables fixed on reduced cost
Total time (CPU seconds):       1.90   (Wallclock seconds):       1.97

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-68) rows, 147 (-56) columns and 2801 (-2853) elements
Clp1000I sum of infeasibilities 4.55513e-07 - average 3.32491e-09, 61 fixed columns
Coin0506I Presolve 72 (-65) rows, 86 (-61) columns and 310 (-2491) elements
Clp0006I 0  Obj -2.7563701 Dual inf 105.52214 (86)
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 0.24416912 - largest nonzero change 1.201646e-05 ( 0.0010393299%) - largest zero change 2.9932119e-05
Clp0000I Optimal - objective value 1.6868222
Clp0000I Optimal - objective value 1.6868222
Coin0511I After Postsolve, objective 1.6868222, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 1.6868222 Dual inf 94.502279 (47)
Clp0014I Perturbing problem by 0.001% of 1.4798387 - largest nonzero change 1.8540007e-05 ( 0.0018540007%) - largest zero change 2.9862257e-05
Clp0000I Optimal - objective value 64.796293
Clp0000I Optimal - objective value 64.796293
Clp0000I Optimal - objective value 64.796293
Coin0511I After Postsolve, objective 64.796293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.7962928 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 147 columns (147 integer (147 of which binary)) and 2804 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 7.23758
Cbc0038I Pass   1: suminf.    3.77036 (39) obj. -51.6007 iterations 14
Cbc0038I Pass   2: suminf.    3.77036 (39) obj. -51.6007 iterations 1
Cbc0038I Pass   3: suminf.    0.29362 (8) obj. -14.4887 iterations 26
Cbc0038I Solution found of -5.82401
Cbc0038I Rounding solution of -10.1334 is better than previous of -5.82401

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 147 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -10.1334 to -10.9702 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.6658
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.77036 (39) obj. -51.6007 iterations 0
Cbc0038I Pass   5: suminf.    3.77036 (39) obj. -51.6007 iterations 1
Cbc0038I Pass   6: suminf.    1.61542 (25) obj. -30.1872 iterations 21
Cbc0038I Pass   7: suminf.    0.79010 (15) obj. -19.1581 iterations 10
Cbc0038I Pass   8: suminf.    1.22847 (6) obj. -15.6658 iterations 23
Cbc0038I Pass   9: suminf.    1.22847 (6) obj. -15.6658 iterations 0
Cbc0038I Pass  10: suminf.    0.62355 (2) obj. -15.6658 iterations 6
Cbc0038I Pass  11: suminf.    0.58047 (2) obj. -15.8812 iterations 1
Cbc0038I Pass  12: suminf.    0.62355 (2) obj. -15.6658 iterations 4
Cbc0038I Pass  13: suminf.    2.68369 (21) obj. -15.6658 iterations 45
Cbc0038I Pass  14: suminf.    2.04410 (17) obj. -15.6658 iterations 13
Cbc0038I Pass  15: suminf.    2.01392 (17) obj. -15.6658 iterations 4
Cbc0038I Pass  16: suminf.    3.31560 (13) obj. -15.6658 iterations 26
Cbc0038I Pass  17: suminf.    1.59385 (9) obj. -15.6658 iterations 3
Cbc0038I Pass  18: suminf.    1.18329 (8) obj. -15.6658 iterations 8
Cbc0038I Pass  19: suminf.    1.18329 (8) obj. -15.6658 iterations 3
Cbc0038I Pass  20: suminf.    1.19862 (6) obj. -15.6658 iterations 6
Cbc0038I Pass  21: suminf.    0.63866 (5) obj. -16.2796 iterations 4
Cbc0038I Pass  22: suminf.    1.36295 (8) obj. -15.6658 iterations 11
Cbc0038I Pass  23: suminf.    0.53552 (5) obj. -15.6658 iterations 7
Cbc0038I Pass  24: suminf.    0.32787 (3) obj. -15.9147 iterations 4
Cbc0038I Pass  25: suminf.    0.45230 (3) obj. -15.6658 iterations 5
Cbc0038I Pass  26: suminf.    1.47761 (18) obj. -17.3088 iterations 40
Cbc0038I Pass  27: suminf.    1.29000 (11) obj. -16.7181 iterations 23
Cbc0038I Pass  28: suminf.    0.85915 (7) obj. -15.6658 iterations 19
Cbc0038I Pass  29: suminf.    0.85915 (7) obj. -15.6658 iterations 1
Cbc0038I Pass  30: suminf.    1.06171 (5) obj. -15.6658 iterations 15
Cbc0038I Pass  31: suminf.    0.63275 (5) obj. -16.1982 iterations 3
Cbc0038I Pass  32: suminf.    1.40884 (6) obj. -15.6658 iterations 19
Cbc0038I Pass  33: suminf.    1.40884 (6) obj. -15.6658 iterations 0
Cbc0038I Rounding solution of -11.025 is better than previous of -10.9702

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 147 columns, reduced to 34 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -11.025 to -16.6964 (0.11 seconds)
Cbc0038I Round again with cutoff of -24.9422
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.77036 (39) obj. -51.6007 iterations 0
Cbc0038I Pass  34: suminf.    3.77036 (39) obj. -51.6007 iterations 1
Cbc0038I Pass  35: suminf.    1.40687 (15) obj. -24.9422 iterations 38
Cbc0038I Pass  36: suminf.    1.40687 (15) obj. -24.9422 iterations 0
Cbc0038I Pass  37: suminf.    1.64292 (7) obj. -24.9422 iterations 21
Cbc0038I Pass  38: suminf.    1.44364 (8) obj. -24.9422 iterations 2
Cbc0038I Pass  39: suminf.    1.64292 (7) obj. -24.9422 iterations 7
Cbc0038I Pass  40: suminf.    2.08681 (14) obj. -24.9422 iterations 28
Cbc0038I Pass  41: suminf.    1.87720 (13) obj. -24.9422 iterations 7
Cbc0038I Pass  42: suminf.    0.74379 (8) obj. -24.9422 iterations 15
Cbc0038I Pass  43: suminf.    0.71564 (7) obj. -24.9985 iterations 3
Cbc0038I Pass  44: suminf.    0.74379 (7) obj. -24.9422 iterations 9
Cbc0038I Pass  45: suminf.    2.32396 (17) obj. -24.9422 iterations 22
Cbc0038I Pass  46: suminf.    1.28073 (15) obj. -24.9422 iterations 12
Cbc0038I Pass  47: suminf.    1.41277 (11) obj. -24.9422 iterations 25
Cbc0038I Pass  48: suminf.    1.41277 (11) obj. -24.9422 iterations 0
Cbc0038I Pass  49: suminf.    1.63290 (16) obj. -24.9422 iterations 7
Cbc0038I Pass  50: suminf.    1.63166 (10) obj. -24.9422 iterations 1
Cbc0038I Pass  51: suminf.    1.59453 (9) obj. -24.9422 iterations 9
Cbc0038I Pass  52: suminf.    1.35059 (9) obj. -24.9422 iterations 4
Cbc0038I Pass  53: suminf.    1.59453 (9) obj. -24.9422 iterations 13
Cbc0038I Pass  54: suminf.    1.79368 (17) obj. -24.9422 iterations 17
Cbc0038I Pass  55: suminf.    1.46777 (10) obj. -24.9877 iterations 8
Cbc0038I Pass  56: suminf.    1.45523 (10) obj. -24.9422 iterations 1
Cbc0038I Pass  57: suminf.    1.36944 (9) obj. -24.9422 iterations 11
Cbc0038I Pass  58: suminf.    1.35059 (9) obj. -24.9422 iterations 2
Cbc0038I Pass  59: suminf.    1.59453 (9) obj. -24.9422 iterations 15
Cbc0038I Pass  60: suminf.    3.67396 (20) obj. -24.9422 iterations 22
Cbc0038I Pass  61: suminf.    1.81723 (15) obj. -24.9422 iterations 7
Cbc0038I Pass  62: suminf.    1.51606 (14) obj. -26.5319 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 147 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -16.6964 to -19.7455 (0.22 seconds)
Cbc0038I Round again with cutoff of -34.8371
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.77036 (39) obj. -51.6007 iterations 0
Cbc0038I Pass  63: suminf.    3.77036 (39) obj. -51.6007 iterations 1
Cbc0038I Pass  64: suminf.    1.91159 (21) obj. -34.8371 iterations 34
Cbc0038I Pass  65: suminf.    1.90000 (20) obj. -35.3244 iterations 2
Cbc0038I Pass  66: suminf.    2.56466 (17) obj. -34.8371 iterations 18
Cbc0038I Pass  67: suminf.    2.24917 (17) obj. -34.8371 iterations 5
Cbc0038I Pass  68: suminf.    2.35644 (17) obj. -34.8371 iterations 15
Cbc0038I Pass  69: suminf.    2.23247 (17) obj. -34.8371 iterations 8
Cbc0038I Pass  70: suminf.    2.35644 (17) obj. -34.8371 iterations 15
Cbc0038I Pass  71: suminf.    3.03474 (26) obj. -34.8371 iterations 15
Cbc0038I Pass  72: suminf.    2.53680 (20) obj. -34.8371 iterations 4
Cbc0038I Pass  73: suminf.    2.52108 (18) obj. -34.8371 iterations 22
Cbc0038I Pass  74: suminf.    2.48209 (25) obj. -34.8371 iterations 6
Cbc0038I Pass  75: suminf.    2.52108 (18) obj. -34.8371 iterations 10
Cbc0038I Pass  76: suminf.    2.48094 (27) obj. -34.8371 iterations 35
Cbc0038I Pass  77: suminf.    2.28360 (18) obj. -34.8371 iterations 6
Cbc0038I Pass  78: suminf.    2.50697 (17) obj. -34.8371 iterations 21
Cbc0038I Pass  79: suminf.    1.92888 (17) obj. -34.8371 iterations 9
Cbc0038I Pass  80: suminf.    2.50697 (17) obj. -34.8371 iterations 21
Cbc0038I Pass  81: suminf.    2.11572 (17) obj. -34.8371 iterations 9
Cbc0038I Pass  82: suminf.    2.50697 (17) obj. -34.8371 iterations 17
Cbc0038I Pass  83: suminf.    2.12154 (17) obj. -34.8371 iterations 8
Cbc0038I Pass  84: suminf.    2.50697 (17) obj. -34.8371 iterations 18
Cbc0038I Pass  85: suminf.    2.14177 (17) obj. -34.8371 iterations 9
Cbc0038I Pass  86: suminf.    2.84073 (21) obj. -34.8371 iterations 22
Cbc0038I Pass  87: suminf.    2.19013 (19) obj. -35.4069 iterations 11
Cbc0038I Pass  88: suminf.    2.32906 (18) obj. -34.8371 iterations 17
Cbc0038I Pass  89: suminf.    2.27560 (18) obj. -34.8371 iterations 5
Cbc0038I Pass  90: suminf.    2.54378 (18) obj. -34.8371 iterations 15
Cbc0038I Pass  91: suminf.    2.53624 (18) obj. -34.8371 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 147 columns, reduced to 57 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -19.7455 - took 0.20 seconds
Cbc0012I Integer solution of -19.74547 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 137 rows 147 columns, reduced to 33 rows 39 columns
Cbc0031I 72 added rows had average density of 51.444444
Cbc0013I At root node, 72 cuts changed objective from -57.925075 to -31.648367 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15993 row cuts average 2.0 elements, 0 column cuts (18 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1658 row cuts average 140.6 elements, 0 column cuts (0 active)  in 0.278 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1059 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1012 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 342 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.478 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.74547 best solution, best possible -31.648367 (3.07 seconds)
Cbc0012I Integer solution of -24.28292 found by rounding after 7942 iterations and 4 nodes (3.64 seconds)
Cbc0012I Integer solution of -25.41084 found by DiveCoefficient after 7987 iterations and 4 nodes (3.65 seconds)
Cbc0012I Integer solution of -26.53163 found by DiveCoefficient after 7991 iterations and 5 nodes (3.65 seconds)
Cbc0010I After 8 nodes, 5 on tree, -26.53163 best solution, best possible -31.648367 (3.78 seconds)
Cbc0012I Integer solution of -27.53163 found by rounding after 10013 iterations and 34 nodes (4.27 seconds)
Cbc0001I Search completed - best objective -27.53163000000001, took 10580 iterations and 38 nodes (4.42 seconds)
Cbc0032I Strong branching done 652 times (17679 iterations), fathomed 5 nodes and fixed 1 variables
Cbc0035I Maximum depth 12, 139 variables fixed on reduced cost
Total time (CPU seconds):       3.87   (Wallclock seconds):       4.44

