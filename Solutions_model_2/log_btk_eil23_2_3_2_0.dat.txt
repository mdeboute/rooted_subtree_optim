Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 1.94258e-05 - average 5.11207e-07, 4 fixed columns
Coin0506I Presolve 20 (-18) rows, 18 (-4) columns and 68 (-44) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Coin0511I After Postsolve, objective 124.08179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Coin0511I After Postsolve, objective 124.08179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 124.0817863 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.747%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.69781
Cbc0038I Pass   1: suminf.    0.85769 (2) obj. 11.0016 iterations 8
Cbc0038I Pass   2: suminf.    0.37636 (1) obj. 15.9521 iterations 1
Cbc0038I Solution found of 29.9404
Cbc0038I Relaxing continuous gives 29.9404
Cbc0038I Rounding solution of 28.1543 is better than previous of 29.9404

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 28.1543 to -62.7961 (0.01 seconds)
Cbc0038I Round again with cutoff of -68.9248
Cbc0038I Pass   3: suminf.    1.53839 (8) obj. -68.9248 iterations 6
Cbc0038I Pass   4: suminf.    1.79447 (5) obj. -68.9248 iterations 12
Cbc0038I Pass   5: suminf.    1.79447 (5) obj. -68.9248 iterations 0
Cbc0038I Pass   6: suminf.    1.50038 (4) obj. -68.9248 iterations 5
Cbc0038I Pass   7: suminf.    1.41079 (4) obj. -68.9248 iterations 5
Cbc0038I Pass   8: suminf.    1.79447 (5) obj. -68.9248 iterations 3
Cbc0038I Pass   9: suminf.    1.96801 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  10: suminf.    1.82495 (6) obj. -68.9248 iterations 2
Cbc0038I Pass  11: suminf.    2.20172 (6) obj. -68.9248 iterations 7
Cbc0038I Pass  12: suminf.    2.17794 (6) obj. -68.9248 iterations 1
Cbc0038I Pass  13: suminf.    2.04779 (5) obj. -68.9248 iterations 3
Cbc0038I Pass  14: suminf.    1.55501 (5) obj. -68.9248 iterations 3
Cbc0038I Pass  15: suminf.    1.55084 (5) obj. -68.9248 iterations 1
Cbc0038I Pass  16: suminf.    2.04779 (5) obj. -68.9248 iterations 2
Cbc0038I Pass  17: suminf.    1.34100 (5) obj. -68.9248 iterations 6
Cbc0038I Pass  18: suminf.    0.88009 (4) obj. -68.9248 iterations 3
Cbc0038I Pass  19: suminf.    1.46650 (4) obj. -68.9248 iterations 5
Cbc0038I Pass  20: suminf.    1.47291 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  21: suminf.    1.51174 (4) obj. -68.9248 iterations 4
Cbc0038I Pass  22: suminf.    1.47702 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  23: suminf.    1.97940 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  24: suminf.    1.97940 (6) obj. -68.9248 iterations 0
Cbc0038I Pass  25: suminf.    0.88009 (4) obj. -68.9248 iterations 6
Cbc0038I Pass  26: suminf.    1.46650 (4) obj. -68.9248 iterations 5
Cbc0038I Pass  27: suminf.    1.47291 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  28: suminf.    1.51174 (4) obj. -68.9248 iterations 4
Cbc0038I Pass  29: suminf.    1.47702 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  30: suminf.    1.97940 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  31: suminf.    1.97940 (6) obj. -68.9248 iterations 0
Cbc0038I Pass  32: suminf.    0.88009 (4) obj. -68.9248 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -62.7961 to -64.5822 (0.02 seconds)
Cbc0038I Round again with cutoff of -79.9562
Cbc0038I Pass  32: suminf.    1.74321 (8) obj. -79.9562 iterations 0
Cbc0038I Pass  33: suminf.    1.79155 (5) obj. -79.9562 iterations 12
Cbc0038I Pass  34: suminf.    1.76149 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  35: suminf.    2.22438 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  36: suminf.    1.25434 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  37: suminf.    1.20168 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  38: suminf.    1.32026 (5) obj. -79.9562 iterations 3
Cbc0038I Pass  39: suminf.    1.27509 (3) obj. -79.9562 iterations 2
Cbc0038I Pass  40: suminf.    1.15448 (5) obj. -79.9562 iterations 4
Cbc0038I Pass  41: suminf.    1.13847 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  42: suminf.    2.00412 (8) obj. -79.9562 iterations 9
Cbc0038I Pass  43: suminf.    1.35634 (6) obj. -79.9562 iterations 4
Cbc0038I Pass  44: suminf.    1.29985 (4) obj. -79.9562 iterations 7
Cbc0038I Pass  45: suminf.    1.00667 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  46: suminf.    1.69455 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  47: suminf.    1.69455 (5) obj. -79.9562 iterations 0
Cbc0038I Pass  48: suminf.    1.76149 (5) obj. -79.9562 iterations 4
Cbc0038I Pass  49: suminf.    1.76149 (5) obj. -79.9562 iterations 0
Cbc0038I Pass  50: suminf.    2.22438 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  51: suminf.    1.93579 (6) obj. -79.9562 iterations 5
Cbc0038I Pass  52: suminf.    1.92026 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  53: suminf.    1.57978 (6) obj. -79.9562 iterations 2
Cbc0038I Pass  54: suminf.    1.29974 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  55: suminf.    1.00961 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  56: suminf.    0.87746 (4) obj. -79.9562 iterations 5
Cbc0038I Pass  57: suminf.    0.85773 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  58: suminf.    1.16383 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  59: suminf.    1.10893 (5) obj. -79.9562 iterations 1
Cbc0038I Pass  60: suminf.    0.85720 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  61: suminf.    2.49780 (8) obj. -79.9562 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -64.5822 - took 0.05 seconds
Cbc0012I Integer solution of -64.58216 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 11 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 6.25
Cbc0013I At root node, 10 cuts changed objective from -124.08179 to -63.927045 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 179 row cuts average 5.8 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 107 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.58215999999999, took 186 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-13) rows, 39 (-7) columns and 317 (-71) elements
Clp1000I sum of infeasibilities 2.03727e-10 - average 5.82077e-12, 30 fixed columns
Coin0506I Presolve 6 (-29) rows, 9 (-30) columns and 25 (-292) elements
Clp0029I End of values pass after 8 iterations
Clp0014I Perturbing problem by 0.001% of 0.2563744 - largest nonzero change 2.9364886e-05 ( 0.0025866439%) - largest zero change 1.5113492e-05
Clp0000I Optimal - objective value 88.108838
Clp0000I Optimal - objective value 88.108838
Coin0511I After Postsolve, objective 88.108838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.16454284 - largest nonzero change 2.8995545e-05 ( 0.0025866439%) - largest zero change 1.066408e-05
Clp0000I Optimal - objective value 177.67703
Clp0000I Optimal - objective value 177.67703
Clp0000I Optimal - objective value 177.67703
Coin0511I After Postsolve, objective 177.67703, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 177.677028 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 42 columns (42 integer (42 of which binary)) and 335 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.68997
Cbc0038I Pass   1: suminf.    1.46263 (4) obj. -59.4301 iterations 18
Cbc0038I Solution found of -36.4051
Cbc0038I Rounding solution of -40.5069 is better than previous of -36.4051

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -47.7046
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.46263 (4) obj. -59.4301 iterations 0
Cbc0038I Pass   3: suminf.    0.96263 (3) obj. -57.4301 iterations 1
Cbc0038I Pass   4: suminf.    0.43865 (2) obj. -47.7046 iterations 7
Cbc0038I Pass   5: suminf.    0.78788 (2) obj. -56.4354 iterations 1
Cbc0038I Pass   6: suminf.    1.93362 (6) obj. -47.7046 iterations 8
Cbc0038I Pass   7: suminf.    0.61555 (2) obj. -47.7046 iterations 6
Cbc0038I Pass   8: suminf.    0.69697 (2) obj. -49.7401 iterations 1
Cbc0038I Pass   9: suminf.    2.06145 (7) obj. -47.7046 iterations 10
Cbc0038I Pass  10: suminf.    0.01273 (1) obj. -55.8636 iterations 6
Cbc0038I Pass  11: suminf.    0.54610 (2) obj. -47.7046 iterations 3
Cbc0038I Pass  12: suminf.    0.69697 (2) obj. -51.4765 iterations 1
Cbc0038I Pass  13: suminf.    2.36154 (6) obj. -47.7046 iterations 18
Cbc0038I Pass  14: suminf.    2.36154 (6) obj. -47.7046 iterations 1
Cbc0038I Pass  15: suminf.    2.13745 (5) obj. -47.7046 iterations 4
Cbc0038I Pass  16: suminf.    0.94829 (4) obj. -47.7046 iterations 5
Cbc0038I Pass  17: suminf.    0.82960 (2) obj. -47.7046 iterations 4
Cbc0038I Pass  18: suminf.    0.27273 (1) obj. -55.9362 iterations 4
Cbc0038I Solution found of -49.118
Cbc0038I Rounding solution of -56.4214 is better than previous of -49.118

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -56.4214 to -58.1578 (0.03 seconds)
Cbc0038I Round again with cutoff of -69.023
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  19: suminf.    1.83301 (6) obj. -69.023 iterations 2
Cbc0038I Pass  20: suminf.    1.13253 (3) obj. -69.023 iterations 8
Cbc0038I Pass  21: suminf.    0.55523 (3) obj. -69.023 iterations 2
Cbc0038I Pass  22: suminf.    2.99447 (9) obj. -69.5004 iterations 14
Cbc0038I Pass  23: suminf.    0.92485 (3) obj. -69.023 iterations 9
Cbc0038I Pass  24: suminf.    1.20174 (3) obj. -69.023 iterations 6
Cbc0038I Pass  25: suminf.    0.94921 (3) obj. -69.023 iterations 2
Cbc0038I Pass  26: suminf.    0.42448 (2) obj. -69.023 iterations 2
Cbc0038I Pass  27: suminf.    1.01733 (3) obj. -69.023 iterations 6
Cbc0038I Pass  28: suminf.    1.01733 (3) obj. -69.023 iterations 1
Cbc0038I Pass  29: suminf.    0.52628 (2) obj. -71.5679 iterations 3
Cbc0038I Pass  30: suminf.    3.87136 (11) obj. -69.023 iterations 19
Cbc0038I Pass  31: suminf.    3.31662 (10) obj. -69.023 iterations 3
Cbc0038I Pass  32: suminf.    3.27005 (11) obj. -69.023 iterations 2
Cbc0038I Pass  33: suminf.    1.64358 (6) obj. -69.023 iterations 7
Cbc0038I Pass  34: suminf.    1.30005 (4) obj. -69.023 iterations 7
Cbc0038I Pass  35: suminf.    0.59895 (3) obj. -69.023 iterations 3
Cbc0038I Pass  36: suminf.    1.33943 (4) obj. -69.023 iterations 4
Cbc0038I Pass  37: suminf.    0.33511 (3) obj. -69.023 iterations 3
Cbc0038I Pass  38: suminf.    0.24907 (1) obj. -69.023 iterations 1
Cbc0038I Pass  39: suminf.    0.27273 (1) obj. -69.6143 iterations 3
Cbc0038I Pass  40: suminf.    2.89419 (12) obj. -69.023 iterations 23
Cbc0038I Pass  41: suminf.    1.26187 (5) obj. -69.023 iterations 13
Cbc0038I Pass  42: suminf.    1.05665 (4) obj. -72.6908 iterations 4
Cbc0038I Pass  43: suminf.    0.82676 (4) obj. -69.023 iterations 3
Cbc0038I Pass  44: suminf.    1.35899 (5) obj. -69.023 iterations 9
Cbc0038I Pass  45: suminf.    1.01084 (3) obj. -69.023 iterations 6
Cbc0038I Pass  46: suminf.    0.76654 (5) obj. -69.023 iterations 11
Cbc0038I Pass  47: suminf.    0.38628 (2) obj. -69.023 iterations 11
Cbc0038I Pass  48: suminf.    0.48017 (2) obj. -71.1046 iterations 4
Cbc0038I Rounding solution of -64.5822 is better than previous of -58.1578

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 8 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -82.061
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  48: suminf.    2.40349 (7) obj. -82.061 iterations 2
Cbc0038I Pass  49: suminf.    1.25131 (5) obj. -82.061 iterations 7
Cbc0038I Pass  50: suminf.    1.24970 (5) obj. -82.061 iterations 1
Cbc0038I Pass  51: suminf.    1.26036 (5) obj. -82.061 iterations 4
Cbc0038I Pass  52: suminf.    3.13051 (9) obj. -82.061 iterations 12
Cbc0038I Pass  53: suminf.    2.06031 (8) obj. -82.061 iterations 4
Cbc0038I Pass  54: suminf.    1.72204 (6) obj. -82.061 iterations 2
Cbc0038I Pass  55: suminf.    2.36987 (7) obj. -84.2477 iterations 7
Cbc0038I Pass  56: suminf.    3.52897 (10) obj. -82.061 iterations 17
Cbc0038I Pass  57: suminf.    1.73890 (6) obj. -82.061 iterations 7
Cbc0038I Pass  58: suminf.    1.57623 (5) obj. -82.061 iterations 2
Cbc0038I Pass  59: suminf.    2.04045 (6) obj. -82.061 iterations 5
Cbc0038I Pass  60: suminf.    1.60580 (6) obj. -82.061 iterations 5
Cbc0038I Pass  61: suminf.    2.75723 (8) obj. -82.061 iterations 5
Cbc0038I Pass  62: suminf.    2.31711 (7) obj. -82.061 iterations 1
Cbc0038I Pass  63: suminf.    3.15090 (9) obj. -82.061 iterations 4
Cbc0038I Pass  64: suminf.    2.32506 (7) obj. -82.061 iterations 3
Cbc0038I Pass  65: suminf.    2.50728 (7) obj. -82.061 iterations 4
Cbc0038I Pass  66: suminf.    1.73181 (6) obj. -82.061 iterations 3
Cbc0038I Pass  67: suminf.    1.47186 (5) obj. -82.061 iterations 2
Cbc0038I Pass  68: suminf.    2.26016 (6) obj. -82.061 iterations 5
Cbc0038I Pass  69: suminf.    3.06629 (11) obj. -82.061 iterations 8
Cbc0038I Pass  70: suminf.    2.46613 (8) obj. -82.061 iterations 9
Cbc0038I Pass  71: suminf.    2.57204 (9) obj. -82.061 iterations 5
Cbc0038I Pass  72: suminf.    3.39850 (11) obj. -82.061 iterations 7
Cbc0038I Pass  73: suminf.    2.01510 (8) obj. -82.061 iterations 7
Cbc0038I Pass  74: suminf.    2.01510 (8) obj. -82.061 iterations 0
Cbc0038I Pass  75: suminf.    2.78915 (9) obj. -82.061 iterations 6
Cbc0038I Pass  76: suminf.    1.61430 (5) obj. -82.061 iterations 6
Cbc0038I Pass  77: suminf.    1.61430 (5) obj. -82.061 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 2 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -64.5822 - took 0.03 seconds
Cbc0012I Integer solution of -64.58216 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 42 columns, reduced to 1 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 5.5
Cbc0013I At root node, 3 cuts changed objective from -112.48321 to -63.865705 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 110 row cuts average 2.1 elements, 21 column cuts (21 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -64.58215999999999, took 35 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 1.94258e-05 - average 5.11207e-07, 4 fixed columns
Coin0506I Presolve 20 (-18) rows, 18 (-4) columns and 68 (-44) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Coin0511I After Postsolve, objective 124.08179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Clp0000I Optimal - objective value 124.08179
Coin0511I After Postsolve, objective 124.08179, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 124.0817863 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.747%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.69781
Cbc0038I Pass   1: suminf.    0.85769 (2) obj. 11.0016 iterations 8
Cbc0038I Pass   2: suminf.    0.37636 (1) obj. 15.9521 iterations 1
Cbc0038I Solution found of 29.9404
Cbc0038I Relaxing continuous gives 29.9404
Cbc0038I Rounding solution of 28.1543 is better than previous of 29.9404

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 28.1543 to -62.7961 (0.01 seconds)
Cbc0038I Round again with cutoff of -68.9248
Cbc0038I Pass   3: suminf.    1.53839 (8) obj. -68.9248 iterations 6
Cbc0038I Pass   4: suminf.    1.79447 (5) obj. -68.9248 iterations 12
Cbc0038I Pass   5: suminf.    1.79447 (5) obj. -68.9248 iterations 0
Cbc0038I Pass   6: suminf.    1.50038 (4) obj. -68.9248 iterations 5
Cbc0038I Pass   7: suminf.    1.41079 (4) obj. -68.9248 iterations 5
Cbc0038I Pass   8: suminf.    1.79447 (5) obj. -68.9248 iterations 3
Cbc0038I Pass   9: suminf.    1.96801 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  10: suminf.    1.82495 (6) obj. -68.9248 iterations 2
Cbc0038I Pass  11: suminf.    2.20172 (6) obj. -68.9248 iterations 7
Cbc0038I Pass  12: suminf.    2.17794 (6) obj. -68.9248 iterations 1
Cbc0038I Pass  13: suminf.    2.04779 (5) obj. -68.9248 iterations 3
Cbc0038I Pass  14: suminf.    1.55501 (5) obj. -68.9248 iterations 3
Cbc0038I Pass  15: suminf.    1.55084 (5) obj. -68.9248 iterations 1
Cbc0038I Pass  16: suminf.    2.04779 (5) obj. -68.9248 iterations 2
Cbc0038I Pass  17: suminf.    1.34100 (5) obj. -68.9248 iterations 6
Cbc0038I Pass  18: suminf.    0.88009 (4) obj. -68.9248 iterations 3
Cbc0038I Pass  19: suminf.    1.46650 (4) obj. -68.9248 iterations 5
Cbc0038I Pass  20: suminf.    1.47291 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  21: suminf.    1.51174 (4) obj. -68.9248 iterations 4
Cbc0038I Pass  22: suminf.    1.47702 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  23: suminf.    1.97940 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  24: suminf.    1.97940 (6) obj. -68.9248 iterations 0
Cbc0038I Pass  25: suminf.    0.88009 (4) obj. -68.9248 iterations 6
Cbc0038I Pass  26: suminf.    1.46650 (4) obj. -68.9248 iterations 5
Cbc0038I Pass  27: suminf.    1.47291 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  28: suminf.    1.51174 (4) obj. -68.9248 iterations 4
Cbc0038I Pass  29: suminf.    1.47702 (4) obj. -68.9248 iterations 1
Cbc0038I Pass  30: suminf.    1.97940 (6) obj. -68.9248 iterations 5
Cbc0038I Pass  31: suminf.    1.97940 (6) obj. -68.9248 iterations 0
Cbc0038I Pass  32: suminf.    0.88009 (4) obj. -68.9248 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -62.7961 to -64.5822 (0.02 seconds)
Cbc0038I Round again with cutoff of -79.9562
Cbc0038I Pass  32: suminf.    1.74321 (8) obj. -79.9562 iterations 0
Cbc0038I Pass  33: suminf.    1.79155 (5) obj. -79.9562 iterations 12
Cbc0038I Pass  34: suminf.    1.76149 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  35: suminf.    2.22438 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  36: suminf.    1.25434 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  37: suminf.    1.20168 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  38: suminf.    1.32026 (5) obj. -79.9562 iterations 3
Cbc0038I Pass  39: suminf.    1.27509 (3) obj. -79.9562 iterations 2
Cbc0038I Pass  40: suminf.    1.15448 (5) obj. -79.9562 iterations 4
Cbc0038I Pass  41: suminf.    1.13847 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  42: suminf.    2.00412 (8) obj. -79.9562 iterations 9
Cbc0038I Pass  43: suminf.    1.35634 (6) obj. -79.9562 iterations 4
Cbc0038I Pass  44: suminf.    1.29985 (4) obj. -79.9562 iterations 7
Cbc0038I Pass  45: suminf.    1.00667 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  46: suminf.    1.69455 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  47: suminf.    1.69455 (5) obj. -79.9562 iterations 0
Cbc0038I Pass  48: suminf.    1.76149 (5) obj. -79.9562 iterations 4
Cbc0038I Pass  49: suminf.    1.76149 (5) obj. -79.9562 iterations 0
Cbc0038I Pass  50: suminf.    2.22438 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  51: suminf.    1.93579 (6) obj. -79.9562 iterations 5
Cbc0038I Pass  52: suminf.    1.92026 (5) obj. -79.9562 iterations 2
Cbc0038I Pass  53: suminf.    1.57978 (6) obj. -79.9562 iterations 2
Cbc0038I Pass  54: suminf.    1.29974 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  55: suminf.    1.00961 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  56: suminf.    0.87746 (4) obj. -79.9562 iterations 5
Cbc0038I Pass  57: suminf.    0.85773 (4) obj. -79.9562 iterations 1
Cbc0038I Pass  58: suminf.    1.16383 (5) obj. -79.9562 iterations 5
Cbc0038I Pass  59: suminf.    1.10893 (5) obj. -79.9562 iterations 1
Cbc0038I Pass  60: suminf.    0.85720 (4) obj. -79.9562 iterations 2
Cbc0038I Pass  61: suminf.    2.49780 (8) obj. -79.9562 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 22 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -64.5822 - took 0.02 seconds
Cbc0012I Integer solution of -64.58216 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 22 columns, reduced to 11 rows 11 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 6.25
Cbc0013I At root node, 10 cuts changed objective from -124.08179 to -63.927045 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 179 row cuts average 5.8 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 107 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -64.58215999999999, took 186 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 38 (-9) columns and 300 (-89) elements
Clp1000I sum of infeasibilities 0.000398782 - average 1.17289e-05, 25 fixed columns
Coin0506I Presolve 7 (-27) rows, 13 (-25) columns and 35 (-265) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 2.8310815 - largest nonzero change 2.8565474e-05 ( 0.0015070958%) - largest zero change 2.2273756e-05
Clp0000I Optimal - objective value 84.448953
Clp0000I Optimal - objective value 84.448953
Coin0511I After Postsolve, objective 84.448953, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5385495 - largest nonzero change 1.8770327e-05 ( 0.0018770327%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 137.54502
Clp0000I Optimal - objective value 137.54502
Clp0000I Optimal - objective value 137.54502
Coin0511I After Postsolve, objective 137.54502, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 137.5450187 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 42 columns (42 integer (42 of which binary)) and 336 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.263%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.63773
Cbc0038I Pass   1: suminf.    1.94675 (5) obj. -63.8348 iterations 16
Cbc0038I Solution found of -36.4051
Cbc0038I Rounding solution of -40.5069 is better than previous of -36.4051

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -47.3105
Cbc0038I Pass   2: suminf.    1.94675 (5) obj. -63.8348 iterations 0
Cbc0038I Pass   3: suminf.    0.42288 (2) obj. -47.3105 iterations 10
Cbc0038I Pass   4: suminf.    0.78788 (2) obj. -56.4354 iterations 1
Cbc0038I Pass   5: suminf.    3.25864 (8) obj. -47.3105 iterations 8
Cbc0038I Pass   6: suminf.    2.02313 (5) obj. -47.3105 iterations 5
Cbc0038I Pass   7: suminf.    1.27255 (4) obj. -47.3105 iterations 2
Cbc0038I Pass   8: suminf.    0.82168 (2) obj. -47.3105 iterations 3
Cbc0038I Pass   9: suminf.    0.75538 (2) obj. -47.3105 iterations 1
Cbc0038I Pass  10: suminf.    3.37653 (9) obj. -47.3105 iterations 11
Cbc0038I Pass  11: suminf.    3.37653 (9) obj. -47.3105 iterations 0
Cbc0038I Pass  12: suminf.    1.82038 (5) obj. -47.3105 iterations 10
Cbc0038I Pass  13: suminf.    1.38419 (4) obj. -47.3105 iterations 1
Cbc0038I Pass  14: suminf.    1.37000 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  15: suminf.    1.72450 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  16: suminf.    1.38419 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  17: suminf.    1.38419 (4) obj. -47.3105 iterations 1
Cbc0038I Pass  18: suminf.    1.37000 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  19: suminf.    1.37000 (4) obj. -47.3105 iterations 1
Cbc0038I Pass  20: suminf.    1.72450 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  21: suminf.    1.38419 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  22: suminf.    1.38419 (4) obj. -47.3105 iterations 1
Cbc0038I Pass  23: suminf.    1.37000 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  24: suminf.    1.37000 (4) obj. -47.3105 iterations 1
Cbc0038I Pass  25: suminf.    1.72450 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  26: suminf.    1.38419 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  27: suminf.    1.38419 (4) obj. -47.3105 iterations 1
Cbc0038I Pass  28: suminf.    1.37000 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  29: suminf.    1.37000 (4) obj. -47.3105 iterations 1
Cbc0038I Pass  30: suminf.    1.72450 (4) obj. -47.3105 iterations 3
Cbc0038I Pass  31: suminf.    1.38419 (4) obj. -47.3105 iterations 3
Cbc0038I Rounding solution of -47.3826 is better than previous of -40.5069

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -47.3826 to -49.6261 (0.03 seconds)
Cbc0038I Round again with cutoff of -61.4094
Cbc0038I Pass  31: suminf.    1.94675 (5) obj. -63.8348 iterations 0
Cbc0038I Pass  32: suminf.    1.00002 (3) obj. -61.4094 iterations 11
Cbc0038I Pass  33: suminf.    0.42137 (2) obj. -68.8682 iterations 2
Cbc0038I Pass  34: suminf.    0.05457 (2) obj. -61.4094 iterations 4
Cbc0038I Pass  35: suminf.    1.03589 (3) obj. -61.4094 iterations 7
Cbc0038I Pass  36: suminf.    0.82503 (2) obj. -61.4094 iterations 2
Cbc0038I Pass  37: suminf.    1.53486 (4) obj. -61.4094 iterations 7
Cbc0038I Pass  38: suminf.    0.61344 (3) obj. -61.4094 iterations 6
Cbc0038I Pass  39: suminf.    1.62303 (4) obj. -61.4094 iterations 8
Cbc0038I Pass  40: suminf.    0.61916 (3) obj. -61.4094 iterations 3
Cbc0038I Pass  41: suminf.    1.65201 (6) obj. -61.4094 iterations 16
Cbc0038I Pass  42: suminf.    1.61974 (6) obj. -61.4094 iterations 2
Cbc0038I Pass  43: suminf.    1.70045 (6) obj. -61.4094 iterations 6
Cbc0038I Pass  44: suminf.    0.92273 (4) obj. -61.4094 iterations 4
Cbc0038I Pass  45: suminf.    0.91553 (4) obj. -61.4094 iterations 2
Cbc0038I Pass  46: suminf.    1.71998 (6) obj. -61.4094 iterations 6
Cbc0038I Pass  47: suminf.    5.91905 (14) obj. -61.4094 iterations 11
Cbc0038I Pass  48: suminf.    3.94525 (11) obj. -61.4094 iterations 5
Cbc0038I Pass  49: suminf.    3.92714 (11) obj. -61.4094 iterations 2
Cbc0038I Pass  50: suminf.    4.21978 (11) obj. -61.4094 iterations 6
Cbc0038I Pass  51: suminf.    4.21978 (11) obj. -61.4094 iterations 0
Cbc0038I Pass  52: suminf.    3.00836 (10) obj. -61.4094 iterations 2
Cbc0038I Pass  53: suminf.    1.33705 (6) obj. -61.4094 iterations 8
Cbc0038I Pass  54: suminf.    1.33705 (6) obj. -61.4094 iterations 0
Cbc0038I Pass  55: suminf.    1.53951 (6) obj. -70.5808 iterations 7
Cbc0038I Pass  56: suminf.    0.85716 (3) obj. -61.4094 iterations 7
Cbc0038I Pass  57: suminf.    0.86287 (3) obj. -61.4094 iterations 4
Cbc0038I Pass  58: suminf.    3.61452 (11) obj. -61.4094 iterations 15
Cbc0038I Pass  59: suminf.    1.35968 (4) obj. -61.4094 iterations 9
Cbc0038I Pass  60: suminf.    0.44595 (3) obj. -61.4094 iterations 2
Cbc0038I Rounding solution of -64.5822 is better than previous of -49.6261

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 4 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -77.7702
Cbc0038I Pass  60: suminf.    2.59001 (7) obj. -77.7702 iterations 3
Cbc0038I Pass  61: suminf.    1.92087 (5) obj. -77.7702 iterations 11
Cbc0038I Pass  62: suminf.    1.24342 (6) obj. -77.7702 iterations 4
Cbc0038I Pass  63: suminf.    2.07031 (7) obj. -77.7702 iterations 4
Cbc0038I Pass  64: suminf.    1.14846 (5) obj. -77.7702 iterations 4
Cbc0038I Pass  65: suminf.    0.95890 (4) obj. -77.7702 iterations 3
Cbc0038I Pass  66: suminf.    2.08065 (6) obj. -77.7702 iterations 7
Cbc0038I Pass  67: suminf.    1.16966 (4) obj. -77.7702 iterations 5
Cbc0038I Pass  68: suminf.    2.90416 (8) obj. -77.7702 iterations 7
Cbc0038I Pass  69: suminf.    2.15168 (6) obj. -77.7702 iterations 6
Cbc0038I Pass  70: suminf.    1.10785 (4) obj. -77.7702 iterations 7
Cbc0038I Pass  71: suminf.    1.13440 (4) obj. -77.7702 iterations 6
Cbc0038I Pass  72: suminf.    0.95890 (4) obj. -77.7702 iterations 3
Cbc0038I Pass  73: suminf.    2.08065 (6) obj. -77.7702 iterations 7
Cbc0038I Pass  74: suminf.    1.16966 (4) obj. -77.7702 iterations 5
Cbc0038I Pass  75: suminf.    1.18783 (5) obj. -77.7702 iterations 5
Cbc0038I Pass  76: suminf.    0.99173 (4) obj. -77.7702 iterations 3
Cbc0038I Pass  77: suminf.    1.80013 (6) obj. -77.7702 iterations 7
Cbc0038I Pass  78: suminf.    1.17022 (4) obj. -77.7702 iterations 5
Cbc0038I Pass  79: suminf.    2.35776 (7) obj. -77.7702 iterations 10
Cbc0038I Pass  80: suminf.    2.35227 (7) obj. -77.7702 iterations 2
Cbc0038I Pass  81: suminf.    1.69683 (6) obj. -77.7702 iterations 8
Cbc0038I Pass  82: suminf.    1.59173 (6) obj. -77.7702 iterations 4
Cbc0038I Pass  83: suminf.    1.93122 (6) obj. -84.8969 iterations 6
Cbc0038I Pass  84: suminf.    1.22273 (5) obj. -77.7702 iterations 8
Cbc0038I Pass  85: suminf.    1.95814 (6) obj. -77.7702 iterations 4
Cbc0038I Pass  86: suminf.    1.29305 (5) obj. -77.7702 iterations 5
Cbc0038I Pass  87: suminf.    2.51508 (10) obj. -77.7702 iterations 12
Cbc0038I Pass  88: suminf.    2.27572 (9) obj. -77.7702 iterations 6
Cbc0038I Pass  89: suminf.    3.23209 (10) obj. -77.7702 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -64.5822 - took 0.03 seconds
Cbc0012I Integer solution of -64.58216 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 37 rows 42 columns, reduced to 1 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 4.5
Cbc0013I At root node, 6 cuts changed objective from -108.54196 to -63.545811 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 106 row cuts average 2.1 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -64.58215999999999, took 34 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

