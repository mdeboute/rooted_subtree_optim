Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 92 (-63) rows, 52 (-26) columns and 281 (-172) elements
Clp0000I Optimal - objective value 215.17516
Coin0511I After Postsolve, objective 215.17516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215.1751642 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 52 columns (51 integer (51 of which binary)) and 281 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.648%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 1.15329
Cbc0038I Pass   1: suminf.    0.87473 (3) obj. -195.259 iterations 13
Cbc0038I Solution found of -118.437
Cbc0038I Relaxing continuous gives -118.437
Cbc0038I Rounding solution of -145.47 is better than previous of -118.437

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 52 columns, reduced to 24 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -145.47 to -191.899 (0.01 seconds)
Cbc0038I Round again with cutoff of -194.227
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.87473 (3) obj. -195.259 iterations 0
Cbc0038I Pass   3: suminf.    0.18129 (2) obj. -194.227 iterations 11
Cbc0038I Pass   4: suminf.    0.17778 (2) obj. -194.373 iterations 3
Cbc0038I Pass   5: suminf.    0.76193 (4) obj. -194.227 iterations 9
Cbc0038I Pass   6: suminf.    0.56222 (2) obj. -194.227 iterations 4
Cbc0038I Pass   7: suminf.    0.70945 (5) obj. -194.227 iterations 8
Cbc0038I Pass   8: suminf.    0.47638 (2) obj. -194.227 iterations 5
Cbc0038I Pass   9: suminf.    0.29754 (2) obj. -194.227 iterations 9
Cbc0038I Pass  10: suminf.    0.29754 (2) obj. -194.227 iterations 0
Cbc0038I Pass  11: suminf.    0.87473 (3) obj. -195.259 iterations 10
Cbc0038I Pass  12: suminf.    0.18129 (2) obj. -194.227 iterations 10
Cbc0038I Pass  13: suminf.    0.17778 (2) obj. -194.373 iterations 2
Cbc0038I Pass  14: suminf.    0.76395 (5) obj. -194.227 iterations 15
Cbc0038I Pass  15: suminf.    0.48703 (5) obj. -194.227 iterations 11
Cbc0038I Pass  16: suminf.    1.55734 (4) obj. -194.227 iterations 11
Cbc0038I Pass  17: suminf.    1.55734 (4) obj. -194.227 iterations 0
Cbc0038I Pass  18: suminf.    0.44065 (3) obj. -194.227 iterations 13
Cbc0038I Pass  19: suminf.    0.44065 (3) obj. -194.227 iterations 0
Cbc0038I Pass  20: suminf.    0.25494 (1) obj. -194.227 iterations 6
Cbc0038I Pass  21: suminf.    0.17778 (2) obj. -194.373 iterations 5
Cbc0038I Pass  22: suminf.    0.18129 (2) obj. -194.227 iterations 10
Cbc0038I Pass  23: suminf.    0.32077 (4) obj. -194.227 iterations 17
Cbc0038I Pass  24: suminf.    0.19721 (3) obj. -194.227 iterations 11
Cbc0038I Pass  25: suminf.    0.54583 (2) obj. -199.477 iterations 14
Cbc0038I Pass  26: suminf.    0.54583 (2) obj. -199.477 iterations 0
Cbc0038I Pass  27: suminf.    0.08072 (1) obj. -194.227 iterations 5
Cbc0038I Pass  28: suminf.    0.08072 (1) obj. -194.227 iterations 0
Cbc0038I Pass  29: suminf.    0.21883 (4) obj. -194.227 iterations 20
Cbc0038I Pass  30: suminf.    0.21058 (2) obj. -194.227 iterations 8
Cbc0038I Pass  31: suminf.    0.97610 (3) obj. -194.227 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 52 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -191.899 - took 0.02 seconds
Cbc0012I Integer solution of -191.89944 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 92 rows 52 columns, reduced to 24 rows 13 columns
Cbc0031I 7 added rows had average density of 26
Cbc0013I At root node, 7 cuts changed objective from -215.17516 to -200.04313 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 50.2 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0001I Search completed - best objective -191.89944, took 229 iterations and 6 nodes (0.39 seconds)
Cbc0032I Strong branching done 38 times (187 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-68) rows, 96 (-56) columns and 1432 (-1871) elements
Clp1000I sum of infeasibilities 1.31898e-06 - average 1.5337e-08, 30 fixed columns
Coin0506I Presolve 63 (-23) rows, 65 (-31) columns and 619 (-813) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 3.207197 - largest nonzero change 1.861165e-05 ( 0.0012247315%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 253.95977
Clp0000I Optimal - objective value 253.95977
Coin0511I After Postsolve, objective 253.95977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2887521 - largest nonzero change 2.0374477e-05 ( 0.0015420975%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 253.95977
Clp0000I Optimal - objective value 253.95977
Clp0000I Optimal - objective value 253.95977
Coin0511I After Postsolve, objective 253.95977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 253.9597738 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 96 columns (96 integer (96 of which binary)) and 1434 elements
Coin3009W Conflict graph built in 0.006 seconds, density: 7.248%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.11601
Cbc0038I Pass   1: suminf.    3.18844 (30) obj. -184.036 iterations 19
Cbc0038I Pass   2: suminf.    3.18844 (30) obj. -184.036 iterations 1
Cbc0038I Pass   3: suminf.    1.17493 (13) obj. -162.969 iterations 17
Cbc0038I Pass   4: suminf.    0.05263 (1) obj. -150.273 iterations 12
Cbc0038I Solution found of -149.326
Cbc0038I Rounding solution of -149.746 is better than previous of -149.326

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 96 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -149.746 to -180.103 (0.04 seconds)
Cbc0038I Round again with cutoff of -186.915
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.80467 (33) obj. -186.915 iterations 7
Cbc0038I Pass   6: suminf.    3.38956 (41) obj. -186.915 iterations 8
Cbc0038I Pass   7: suminf.    1.61866 (18) obj. -186.915 iterations 24
Cbc0038I Pass   8: suminf.    1.61866 (18) obj. -186.915 iterations 2
Cbc0038I Pass   9: suminf.    0.32688 (3) obj. -186.915 iterations 19
Cbc0038I Pass  10: suminf.    0.32688 (3) obj. -186.915 iterations 0
Cbc0038I Pass  11: suminf.    0.45455 (1) obj. -191.407 iterations 9
Cbc0038I Pass  12: suminf.    0.29875 (1) obj. -186.915 iterations 3
Cbc0038I Pass  13: suminf.    2.32000 (9) obj. -186.915 iterations 16
Cbc0038I Pass  14: suminf.    0.93179 (5) obj. -186.915 iterations 9
Cbc0038I Pass  15: suminf.    0.45455 (1) obj. -188.407 iterations 8
Cbc0038I Pass  16: suminf.    0.40279 (1) obj. -186.915 iterations 2
Cbc0038I Pass  17: suminf.    3.90224 (20) obj. -186.915 iterations 26
Cbc0038I Pass  18: suminf.    2.83838 (18) obj. -186.915 iterations 11
Cbc0038I Pass  19: suminf.    2.14826 (17) obj. -186.915 iterations 3
Cbc0038I Pass  20: suminf.    0.28542 (2) obj. -186.915 iterations 19
Cbc0038I Pass  21: suminf.    0.17778 (2) obj. -191.373 iterations 5
Cbc0038I Pass  22: suminf.    0.28477 (2) obj. -186.915 iterations 1
Cbc0038I Pass  23: suminf.    2.38737 (9) obj. -186.915 iterations 13
Cbc0038I Pass  24: suminf.    1.10528 (6) obj. -190.773 iterations 10
Cbc0038I Pass  25: suminf.    0.34909 (2) obj. -186.915 iterations 9
Cbc0038I Pass  26: suminf.    0.22447 (4) obj. -186.915 iterations 5
Cbc0038I Pass  27: suminf.    0.36295 (2) obj. -186.915 iterations 5
Cbc0038I Pass  28: suminf.    0.36295 (2) obj. -186.915 iterations 1
Cbc0038I Pass  29: suminf.    0.62525 (3) obj. -186.915 iterations 4
Cbc0038I Pass  30: suminf.    1.71109 (11) obj. -186.915 iterations 14
Cbc0038I Pass  31: suminf.    1.42827 (9) obj. -186.915 iterations 5
Cbc0038I Pass  32: suminf.    0.36295 (2) obj. -186.915 iterations 11
Cbc0038I Pass  33: suminf.    2.08643 (10) obj. -186.915 iterations 17
Cbc0038I Pass  34: suminf.    1.52810 (8) obj. -201.744 iterations 5
Cbc0038I Rounding solution of -188.182 is better than previous of -180.103

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 96 columns, reduced to 49 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -188.182 to -191.899 (0.05 seconds)
Cbc0038I Round again with cutoff of -203.164
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    4.92620 (41) obj. -203.164 iterations 4
Cbc0038I Pass  35: suminf.    4.92620 (41) obj. -203.164 iterations 4
Cbc0038I Pass  36: suminf.    3.05714 (26) obj. -203.164 iterations 20
Cbc0038I Pass  37: suminf.    0.60622 (2) obj. -203.164 iterations 31
Cbc0038I Pass  38: suminf.    0.54874 (4) obj. -203.164 iterations 5
Cbc0038I Pass  39: suminf.    0.56610 (3) obj. -203.164 iterations 2
Cbc0038I Pass  40: suminf.    1.52142 (9) obj. -203.164 iterations 18
Cbc0038I Pass  41: suminf.    1.52142 (9) obj. -203.164 iterations 0
Cbc0038I Pass  42: suminf.    1.47421 (4) obj. -203.164 iterations 21
Cbc0038I Pass  43: suminf.    1.47421 (4) obj. -203.164 iterations 4
Cbc0038I Pass  44: suminf.    0.76636 (4) obj. -203.164 iterations 17
Cbc0038I Pass  45: suminf.    0.76636 (4) obj. -203.164 iterations 0
Cbc0038I Pass  46: suminf.    0.99153 (5) obj. -203.164 iterations 12
Cbc0038I Pass  47: suminf.    0.99153 (5) obj. -203.164 iterations 0
Cbc0038I Pass  48: suminf.    0.76636 (4) obj. -203.164 iterations 12
Cbc0038I Pass  49: suminf.    2.28111 (14) obj. -203.164 iterations 26
Cbc0038I Pass  50: suminf.    2.23872 (13) obj. -203.164 iterations 5
Cbc0038I Pass  51: suminf.    0.76636 (4) obj. -203.164 iterations 18
Cbc0038I Pass  52: suminf.    0.76636 (4) obj. -203.164 iterations 0
Cbc0038I Pass  53: suminf.    0.99153 (5) obj. -203.164 iterations 11
Cbc0038I Pass  54: suminf.    0.99153 (5) obj. -203.164 iterations 0
Cbc0038I Pass  55: suminf.    0.76636 (4) obj. -203.164 iterations 12
Cbc0038I Pass  56: suminf.    2.35840 (12) obj. -203.164 iterations 30
Cbc0038I Pass  57: suminf.    2.24005 (12) obj. -203.164 iterations 10
Cbc0038I Pass  58: suminf.    1.47421 (4) obj. -203.164 iterations 25
Cbc0038I Pass  59: suminf.    1.47421 (4) obj. -203.164 iterations 0
Cbc0038I Pass  60: suminf.    0.76636 (4) obj. -203.164 iterations 18
Cbc0038I Pass  61: suminf.    0.76636 (4) obj. -203.164 iterations 0
Cbc0038I Pass  62: suminf.    0.99153 (5) obj. -203.164 iterations 12
Cbc0038I Pass  63: suminf.    0.99153 (5) obj. -203.164 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 96 columns, reduced to 43 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -191.899 - took 0.05 seconds
Cbc0012I Integer solution of -191.89944 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 86 rows 96 columns, reduced to 3 rows 4 columns
Cbc0031I 16 added rows had average density of 7.3125
Cbc0013I At root node, 16 cuts changed objective from -248.22199 to -197.69957 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 303 row cuts average 2.0 elements, 34 column cuts (34 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 76 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -191.89944 best solution, best possible -197.69957 (0.33 seconds)
Cbc0001I Search completed - best objective -191.89944, took 245 iterations and 6 nodes (0.44 seconds)
Cbc0032I Strong branching done 54 times (211 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.45

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 92 (-63) rows, 52 (-26) columns and 281 (-172) elements
Clp0000I Optimal - objective value 215.17516
Coin0511I After Postsolve, objective 215.17516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 215.1751642 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 52 columns (51 integer (51 of which binary)) and 281 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.648%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 1.15329
Cbc0038I Pass   1: suminf.    0.87473 (3) obj. -195.259 iterations 13
Cbc0038I Solution found of -118.437
Cbc0038I Relaxing continuous gives -118.437
Cbc0038I Rounding solution of -145.47 is better than previous of -118.437

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 52 columns, reduced to 24 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -145.47 to -191.899 (0.01 seconds)
Cbc0038I Round again with cutoff of -194.227
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.87473 (3) obj. -195.259 iterations 0
Cbc0038I Pass   3: suminf.    0.18129 (2) obj. -194.227 iterations 11
Cbc0038I Pass   4: suminf.    0.17778 (2) obj. -194.373 iterations 3
Cbc0038I Pass   5: suminf.    0.76193 (4) obj. -194.227 iterations 9
Cbc0038I Pass   6: suminf.    0.56222 (2) obj. -194.227 iterations 4
Cbc0038I Pass   7: suminf.    0.70945 (5) obj. -194.227 iterations 8
Cbc0038I Pass   8: suminf.    0.47638 (2) obj. -194.227 iterations 5
Cbc0038I Pass   9: suminf.    0.29754 (2) obj. -194.227 iterations 9
Cbc0038I Pass  10: suminf.    0.29754 (2) obj. -194.227 iterations 0
Cbc0038I Pass  11: suminf.    0.87473 (3) obj. -195.259 iterations 10
Cbc0038I Pass  12: suminf.    0.18129 (2) obj. -194.227 iterations 10
Cbc0038I Pass  13: suminf.    0.17778 (2) obj. -194.373 iterations 2
Cbc0038I Pass  14: suminf.    0.76395 (5) obj. -194.227 iterations 15
Cbc0038I Pass  15: suminf.    0.48703 (5) obj. -194.227 iterations 11
Cbc0038I Pass  16: suminf.    1.55734 (4) obj. -194.227 iterations 11
Cbc0038I Pass  17: suminf.    1.55734 (4) obj. -194.227 iterations 0
Cbc0038I Pass  18: suminf.    0.44065 (3) obj. -194.227 iterations 13
Cbc0038I Pass  19: suminf.    0.44065 (3) obj. -194.227 iterations 0
Cbc0038I Pass  20: suminf.    0.25494 (1) obj. -194.227 iterations 6
Cbc0038I Pass  21: suminf.    0.17778 (2) obj. -194.373 iterations 5
Cbc0038I Pass  22: suminf.    0.18129 (2) obj. -194.227 iterations 10
Cbc0038I Pass  23: suminf.    0.32077 (4) obj. -194.227 iterations 17
Cbc0038I Pass  24: suminf.    0.19721 (3) obj. -194.227 iterations 11
Cbc0038I Pass  25: suminf.    0.54583 (2) obj. -199.477 iterations 14
Cbc0038I Pass  26: suminf.    0.54583 (2) obj. -199.477 iterations 0
Cbc0038I Pass  27: suminf.    0.08072 (1) obj. -194.227 iterations 5
Cbc0038I Pass  28: suminf.    0.08072 (1) obj. -194.227 iterations 0
Cbc0038I Pass  29: suminf.    0.21883 (4) obj. -194.227 iterations 20
Cbc0038I Pass  30: suminf.    0.21058 (2) obj. -194.227 iterations 8
Cbc0038I Pass  31: suminf.    0.97610 (3) obj. -194.227 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 52 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -191.899 - took 0.02 seconds
Cbc0012I Integer solution of -191.89944 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 92 rows 52 columns, reduced to 24 rows 13 columns
Cbc0031I 7 added rows had average density of 26
Cbc0013I At root node, 7 cuts changed objective from -215.17516 to -200.04313 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.7 elements, 9 column cuts (9 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 50.2 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0001I Search completed - best objective -191.89944, took 229 iterations and 6 nodes (0.45 seconds)
Cbc0032I Strong branching done 38 times (187 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-69) rows, 96 (-57) columns and 1432 (-1872) elements
Clp1000I sum of infeasibilities 1.31898e-06 - average 1.5337e-08, 30 fixed columns
Coin0506I Presolve 63 (-23) rows, 65 (-31) columns and 619 (-813) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 3.207197 - largest nonzero change 1.861165e-05 ( 0.0012247315%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 253.95977
Clp0000I Optimal - objective value 253.95977
Coin0511I After Postsolve, objective 253.95977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2887521 - largest nonzero change 2.0374477e-05 ( 0.0015420975%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 253.95977
Clp0000I Optimal - objective value 253.95977
Clp0000I Optimal - objective value 253.95977
Coin0511I After Postsolve, objective 253.95977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 253.9597738 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 96 columns (96 integer (96 of which binary)) and 1434 elements
Coin3009W Conflict graph built in 0.006 seconds, density: 7.248%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 8.11601
Cbc0038I Pass   1: suminf.    3.18844 (30) obj. -184.036 iterations 19
Cbc0038I Pass   2: suminf.    3.18844 (30) obj. -184.036 iterations 1
Cbc0038I Pass   3: suminf.    1.17493 (13) obj. -162.969 iterations 17
Cbc0038I Pass   4: suminf.    0.05263 (1) obj. -150.273 iterations 12
Cbc0038I Solution found of -149.326
Cbc0038I Rounding solution of -149.746 is better than previous of -149.326

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 96 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -149.746 to -180.103 (0.03 seconds)
Cbc0038I Round again with cutoff of -186.915
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.80467 (33) obj. -186.915 iterations 7
Cbc0038I Pass   6: suminf.    3.38956 (41) obj. -186.915 iterations 8
Cbc0038I Pass   7: suminf.    1.61866 (18) obj. -186.915 iterations 24
Cbc0038I Pass   8: suminf.    1.61866 (18) obj. -186.915 iterations 2
Cbc0038I Pass   9: suminf.    0.32688 (3) obj. -186.915 iterations 19
Cbc0038I Pass  10: suminf.    0.32688 (3) obj. -186.915 iterations 0
Cbc0038I Pass  11: suminf.    0.45455 (1) obj. -191.407 iterations 9
Cbc0038I Pass  12: suminf.    0.29875 (1) obj. -186.915 iterations 3
Cbc0038I Pass  13: suminf.    2.32000 (9) obj. -186.915 iterations 16
Cbc0038I Pass  14: suminf.    0.93179 (5) obj. -186.915 iterations 9
Cbc0038I Pass  15: suminf.    0.45455 (1) obj. -188.407 iterations 8
Cbc0038I Pass  16: suminf.    0.40279 (1) obj. -186.915 iterations 2
Cbc0038I Pass  17: suminf.    3.90224 (20) obj. -186.915 iterations 26
Cbc0038I Pass  18: suminf.    2.83838 (18) obj. -186.915 iterations 11
Cbc0038I Pass  19: suminf.    2.14826 (17) obj. -186.915 iterations 3
Cbc0038I Pass  20: suminf.    0.28542 (2) obj. -186.915 iterations 19
Cbc0038I Pass  21: suminf.    0.17778 (2) obj. -191.373 iterations 5
Cbc0038I Pass  22: suminf.    0.28477 (2) obj. -186.915 iterations 1
Cbc0038I Pass  23: suminf.    2.38737 (9) obj. -186.915 iterations 13
Cbc0038I Pass  24: suminf.    1.10528 (6) obj. -190.773 iterations 10
Cbc0038I Pass  25: suminf.    0.34909 (2) obj. -186.915 iterations 9
Cbc0038I Pass  26: suminf.    0.22447 (4) obj. -186.915 iterations 5
Cbc0038I Pass  27: suminf.    0.36295 (2) obj. -186.915 iterations 5
Cbc0038I Pass  28: suminf.    0.36295 (2) obj. -186.915 iterations 1
Cbc0038I Pass  29: suminf.    0.62525 (3) obj. -186.915 iterations 4
Cbc0038I Pass  30: suminf.    1.71109 (11) obj. -186.915 iterations 14
Cbc0038I Pass  31: suminf.    1.42827 (9) obj. -186.915 iterations 5
Cbc0038I Pass  32: suminf.    0.36295 (2) obj. -186.915 iterations 11
Cbc0038I Pass  33: suminf.    2.08643 (10) obj. -186.915 iterations 17
Cbc0038I Pass  34: suminf.    1.52810 (8) obj. -201.744 iterations 5
Cbc0038I Rounding solution of -188.182 is better than previous of -180.103

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 96 columns, reduced to 49 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -188.182 to -191.899 (0.05 seconds)
Cbc0038I Round again with cutoff of -203.164
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    4.92620 (41) obj. -203.164 iterations 4
Cbc0038I Pass  35: suminf.    4.92620 (41) obj. -203.164 iterations 4
Cbc0038I Pass  36: suminf.    3.05714 (26) obj. -203.164 iterations 20
Cbc0038I Pass  37: suminf.    0.60622 (2) obj. -203.164 iterations 31
Cbc0038I Pass  38: suminf.    0.54874 (4) obj. -203.164 iterations 5
Cbc0038I Pass  39: suminf.    0.56610 (3) obj. -203.164 iterations 2
Cbc0038I Pass  40: suminf.    1.52142 (9) obj. -203.164 iterations 18
Cbc0038I Pass  41: suminf.    1.52142 (9) obj. -203.164 iterations 0
Cbc0038I Pass  42: suminf.    1.47421 (4) obj. -203.164 iterations 21
Cbc0038I Pass  43: suminf.    1.47421 (4) obj. -203.164 iterations 4
Cbc0038I Pass  44: suminf.    0.76636 (4) obj. -203.164 iterations 17
Cbc0038I Pass  45: suminf.    0.76636 (4) obj. -203.164 iterations 0
Cbc0038I Pass  46: suminf.    0.99153 (5) obj. -203.164 iterations 12
Cbc0038I Pass  47: suminf.    0.99153 (5) obj. -203.164 iterations 0
Cbc0038I Pass  48: suminf.    0.76636 (4) obj. -203.164 iterations 12
Cbc0038I Pass  49: suminf.    2.28111 (14) obj. -203.164 iterations 26
Cbc0038I Pass  50: suminf.    2.23872 (13) obj. -203.164 iterations 5
Cbc0038I Pass  51: suminf.    0.76636 (4) obj. -203.164 iterations 18
Cbc0038I Pass  52: suminf.    0.76636 (4) obj. -203.164 iterations 0
Cbc0038I Pass  53: suminf.    0.99153 (5) obj. -203.164 iterations 11
Cbc0038I Pass  54: suminf.    0.99153 (5) obj. -203.164 iterations 0
Cbc0038I Pass  55: suminf.    0.76636 (4) obj. -203.164 iterations 12
Cbc0038I Pass  56: suminf.    2.35840 (12) obj. -203.164 iterations 30
Cbc0038I Pass  57: suminf.    2.24005 (12) obj. -203.164 iterations 10
Cbc0038I Pass  58: suminf.    1.47421 (4) obj. -203.164 iterations 25
Cbc0038I Pass  59: suminf.    1.47421 (4) obj. -203.164 iterations 0
Cbc0038I Pass  60: suminf.    0.76636 (4) obj. -203.164 iterations 18
Cbc0038I Pass  61: suminf.    0.76636 (4) obj. -203.164 iterations 0
Cbc0038I Pass  62: suminf.    0.99153 (5) obj. -203.164 iterations 12
Cbc0038I Pass  63: suminf.    0.99153 (5) obj. -203.164 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 96 columns, reduced to 43 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -191.899 - took 0.05 seconds
Cbc0012I Integer solution of -191.89944 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 96 columns, reduced to 3 rows 4 columns
Cbc0031I 16 added rows had average density of 7.3125
Cbc0013I At root node, 16 cuts changed objective from -248.22199 to -197.69957 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 303 row cuts average 2.0 elements, 34 column cuts (34 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 76 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -191.89944 best solution, best possible -197.69957 (0.21 seconds)
Cbc0001I Search completed - best objective -191.89944, took 245 iterations and 6 nodes (0.47 seconds)
Cbc0032I Strong branching done 54 times (211 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.47

