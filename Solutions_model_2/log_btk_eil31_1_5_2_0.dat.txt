Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 2.09952e-05 - average 3.888e-07, 2 fixed columns
Coin0506I Presolve 48 (-6) rows, 27 (-3) columns and 143 (-18) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 60.985701
Clp0000I Optimal - objective value 60.985701
Coin0511I After Postsolve, objective 60.985701, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.985701
Clp0000I Optimal - objective value 60.985701
Clp0000I Optimal - objective value 60.985701
Coin0511I After Postsolve, objective 60.985701, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.98570139 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.17216
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.6355 iterations 19
Cbc0038I Solution found of -31.6355
Cbc0038I Relaxing continuous gives -31.6355
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.6355 to -32.6355 (0.01 seconds)
Cbc0038I Round again with cutoff of -35.2731
Cbc0038I Pass   2: suminf.    0.16756 (1) obj. -35.2731 iterations 1
Cbc0038I Pass   3: suminf.    0.04065 (1) obj. -35.2731 iterations 3
Cbc0038I Pass   4: suminf.    0.27795 (1) obj. -35.2731 iterations 1
Cbc0038I Pass   5: suminf.    1.87487 (6) obj. -35.2731 iterations 13
Cbc0038I Pass   6: suminf.    0.07778 (1) obj. -35.2731 iterations 7
Cbc0038I Pass   7: suminf.    0.34201 (2) obj. -35.2731 iterations 3
Cbc0038I Pass   8: suminf.    0.94202 (4) obj. -35.2731 iterations 6
Cbc0038I Pass   9: suminf.    0.94202 (4) obj. -35.2731 iterations 2
Cbc0038I Pass  10: suminf.    0.62263 (2) obj. -35.2731 iterations 4
Cbc0038I Pass  11: suminf.    0.65972 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  12: suminf.    0.52635 (2) obj. -35.2731 iterations 1
Cbc0038I Pass  13: suminf.    1.17982 (3) obj. -35.2731 iterations 2
Cbc0038I Pass  14: suminf.    0.52635 (2) obj. -35.2731 iterations 1
Cbc0038I Pass  15: suminf.    0.36938 (4) obj. -35.2731 iterations 9
Cbc0038I Pass  16: suminf.    0.36938 (4) obj. -35.2731 iterations 3
Cbc0038I Pass  17: suminf.    0.77477 (2) obj. -35.2731 iterations 5
Cbc0038I Pass  18: suminf.    0.63864 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  19: suminf.    0.78917 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  20: suminf.    0.78973 (3) obj. -35.2731 iterations 1
Cbc0038I Pass  21: suminf.    0.77477 (2) obj. -35.2731 iterations 1
Cbc0038I Pass  22: suminf.    1.93849 (6) obj. -35.2731 iterations 6
Cbc0038I Pass  23: suminf.    0.98358 (4) obj. -35.2731 iterations 5
Cbc0038I Pass  24: suminf.    1.31134 (3) obj. -35.2731 iterations 5
Cbc0038I Pass  25: suminf.    0.96576 (3) obj. -35.2731 iterations 2
Cbc0038I Pass  26: suminf.    0.62764 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  27: suminf.    0.97338 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  28: suminf.    0.99555 (4) obj. -35.2731 iterations 4
Cbc0038I Pass  29: suminf.    0.99555 (4) obj. -35.2731 iterations 2
Cbc0038I Pass  30: suminf.    1.96717 (6) obj. -35.2731 iterations 13
Cbc0038I Pass  31: suminf.    1.03203 (4) obj. -35.2731 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -32.6355 - took 0.03 seconds
Cbc0012I Integer solution of -32.6355 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 34 rows 19 columns
Cbc0031I 6 added rows had average density of 26.833333
Cbc0013I At root node, 6 cuts changed objective from -59.010589 to -44.283996 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 812 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 650 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 6 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.6355, took 2316 iterations and 20 nodes (0.22 seconds)
Cbc0032I Strong branching done 178 times (1312 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 9, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-18) rows, 50 (-12) columns and 413 (-235) elements
Clp1000I sum of infeasibilities 1.11592e-08 - average 2.42591e-10, 25 fixed columns
Coin0506I Presolve 21 (-25) rows, 25 (-25) columns and 87 (-326) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 1.8091014 - largest nonzero change 2.977694e-05 ( 0.0024275985%) - largest zero change 2.8978068e-05
Clp0000I Optimal - objective value 31.152609
Clp0000I Optimal - objective value 31.152609
Coin0511I After Postsolve, objective 31.152609, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1644183 - largest nonzero change 1.3402828e-05 ( 0.0010393299%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 64.605065
Clp0000I Optimal - objective value 64.605065
Clp0000I Optimal - objective value 64.605065
Coin0511I After Postsolve, objective 64.605065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.60506468 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 49 columns (49 integer (49 of which binary)) and 406 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.029%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.49509
Cbc0038I Pass   1: suminf.    0.77186 (7) obj. -22.2404 iterations 15
Cbc0038I Pass   2: suminf.    0.77186 (7) obj. -22.2404 iterations 1
Cbc0038I Solution found of -13.3956
Cbc0038I Rounding solution of -19.622 is better than previous of -13.3956

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -23.4408
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.80864 (8) obj. -23.4408 iterations 4
Cbc0038I Pass   4: suminf.    0.80864 (8) obj. -23.4408 iterations 1
Cbc0038I Pass   5: suminf.    0.13008 (1) obj. -41.7858 iterations 13
Cbc0038I Pass   6: suminf.    0.30780 (1) obj. -23.4408 iterations 1
Cbc0038I Pass   7: suminf.    0.76047 (3) obj. -23.4408 iterations 5
Cbc0038I Pass   8: suminf.    0.25427 (2) obj. -24.7807 iterations 5
Cbc0038I Pass   9: suminf.    0.44468 (1) obj. -23.4408 iterations 3
Cbc0038I Pass  10: suminf.    0.31707 (1) obj. -27.6052 iterations 1
Cbc0038I Pass  11: suminf.    0.81041 (4) obj. -24.0595 iterations 17
Cbc0038I Pass  12: suminf.    0.78127 (4) obj. -23.4408 iterations 3
Cbc0038I Pass  13: suminf.    0.82225 (3) obj. -23.4408 iterations 6
Cbc0038I Pass  14: suminf.    0.72525 (3) obj. -23.4408 iterations 1
Cbc0038I Pass  15: suminf.    0.57033 (2) obj. -23.4408 iterations 1
Cbc0038I Pass  16: suminf.    0.09563 (2) obj. -23.4408 iterations 1
Cbc0038I Pass  17: suminf.    0.62445 (3) obj. -26.3817 iterations 6
Cbc0038I Pass  18: suminf.    0.29819 (2) obj. -23.4408 iterations 5
Cbc0038I Pass  19: suminf.    0.28826 (2) obj. -23.4408 iterations 3
Cbc0038I Pass  20: suminf.    0.28826 (2) obj. -23.4408 iterations 1
Cbc0038I Pass  21: suminf.    0.29208 (2) obj. -23.5196 iterations 2
Cbc0038I Pass  22: suminf.    1.79525 (7) obj. -23.4408 iterations 13
Cbc0038I Pass  23: suminf.    1.77066 (6) obj. -23.4408 iterations 1
Cbc0038I Pass  24: suminf.    0.55930 (3) obj. -23.4408 iterations 7
Cbc0038I Pass  25: suminf.    0.49621 (3) obj. -23.4408 iterations 1
Cbc0038I Pass  26: suminf.    0.69400 (2) obj. -23.4408 iterations 5
Cbc0038I Pass  27: suminf.    0.39837 (1) obj. -24.8735 iterations 2
Cbc0038I Pass  28: suminf.    0.44227 (1) obj. -23.4408 iterations 1
Cbc0038I Pass  29: suminf.    0.48401 (6) obj. -27.3443 iterations 23
Cbc0038I Pass  30: suminf.    0.37715 (3) obj. -26.7017 iterations 4
Cbc0038I Pass  31: suminf.    0.40335 (2) obj. -23.4408 iterations 6
Cbc0038I Pass  32: suminf.    0.18889 (1) obj. -27.1083 iterations 3
Cbc0038I Rounding solution of -22.7658 is better than previous of -19.622

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 28 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -22.7658 to -32.6356 (0.05 seconds)
Cbc0038I Round again with cutoff of -37.6703
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.24465 (8) obj. -37.6703 iterations 0
Cbc0038I Pass  33: suminf.    1.24465 (8) obj. -37.6703 iterations 1
Cbc0038I Pass  34: suminf.    0.13008 (1) obj. -41.7858 iterations 11
Cbc0038I Pass  35: suminf.    0.25619 (1) obj. -37.6703 iterations 1
Cbc0038I Pass  36: suminf.    1.03496 (4) obj. -37.6703 iterations 9
Cbc0038I Pass  37: suminf.    0.86911 (3) obj. -37.6703 iterations 2
Cbc0038I Pass  38: suminf.    0.83140 (3) obj. -38.4811 iterations 1
Cbc0038I Pass  39: suminf.    0.74680 (3) obj. -37.6703 iterations 3
Cbc0038I Pass  40: suminf.    0.74680 (3) obj. -37.6703 iterations 0
Cbc0038I Pass  41: suminf.    0.75111 (2) obj. -37.6703 iterations 1
Cbc0038I Pass  42: suminf.    0.52534 (2) obj. -42.3294 iterations 1
Cbc0038I Pass  43: suminf.    1.01201 (4) obj. -37.6703 iterations 4
Cbc0038I Pass  44: suminf.    0.86257 (3) obj. -38.2681 iterations 2
Cbc0038I Pass  45: suminf.    0.77365 (3) obj. -37.6703 iterations 7
Cbc0038I Pass  46: suminf.    0.76272 (3) obj. -37.6703 iterations 3
Cbc0038I Pass  47: suminf.    0.65419 (2) obj. -37.6703 iterations 3
Cbc0038I Pass  48: suminf.    0.52534 (2) obj. -40.3294 iterations 1
Cbc0038I Pass  49: suminf.    0.85506 (4) obj. -37.6703 iterations 5
Cbc0038I Pass  50: suminf.    0.62175 (3) obj. -38.233 iterations 2
Cbc0038I Pass  51: suminf.    0.63898 (3) obj. -37.6703 iterations 2
Cbc0038I Pass  52: suminf.    0.63095 (4) obj. -37.6703 iterations 2
Cbc0038I Pass  53: suminf.    0.13535 (4) obj. -37.6703 iterations 6
Cbc0038I Pass  54: suminf.    0.13535 (4) obj. -37.6703 iterations 1
Cbc0038I Pass  55: suminf.    0.65712 (2) obj. -37.6703 iterations 6
Cbc0038I Pass  56: suminf.    0.45662 (2) obj. -37.6703 iterations 1
Cbc0038I Pass  57: suminf.    1.07268 (4) obj. -37.6703 iterations 6
Cbc0038I Pass  58: suminf.    1.07268 (4) obj. -37.6703 iterations 1
Cbc0038I Pass  59: suminf.    1.42793 (6) obj. -37.6703 iterations 4
Cbc0038I Pass  60: suminf.    1.21086 (4) obj. -37.6703 iterations 3
Cbc0038I Pass  61: suminf.    0.84564 (8) obj. -37.6703 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 49 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -32.6356 - took 0.03 seconds
Cbc0012I Integer solution of -32.63556 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 43 rows 49 columns, reduced to 15 rows 15 columns
Cbc0031I 24 added rows had average density of 18.125
Cbc0013I At root node, 24 cuts changed objective from -57.809007 to -39.38683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1836 row cuts average 3.4 elements, 7 column cuts (7 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 928 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 88 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 434 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 140 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 228 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 196 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.735 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.63556 best solution, best possible -39.38683 (1.65 seconds)
Cbc0010I After 8 nodes, 9 on tree, -32.63556 best solution, best possible -39.38683 (2.35 seconds)
Cbc0001I Search completed - best objective -32.63556, took 3067 iterations and 24 nodes (2.79 seconds)
Cbc0032I Strong branching done 352 times (3414 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 9, 31 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       2.80

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-11) rows, 30 (-3) columns and 161 (-22) elements
Clp1000I sum of infeasibilities 2.09952e-05 - average 3.888e-07, 2 fixed columns
Coin0506I Presolve 48 (-6) rows, 27 (-3) columns and 143 (-18) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 60.985701
Clp0000I Optimal - objective value 60.985701
Coin0511I After Postsolve, objective 60.985701, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 60.985701
Clp0000I Optimal - objective value 60.985701
Clp0000I Optimal - objective value 60.985701
Coin0511I After Postsolve, objective 60.985701, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.98570139 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 30 columns (29 integer (29 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.17216
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.6355 iterations 19
Cbc0038I Solution found of -31.6355
Cbc0038I Relaxing continuous gives -31.6355
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -31.6355 to -32.6355 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.2731
Cbc0038I Pass   2: suminf.    0.16756 (1) obj. -35.2731 iterations 1
Cbc0038I Pass   3: suminf.    0.04065 (1) obj. -35.2731 iterations 3
Cbc0038I Pass   4: suminf.    0.27795 (1) obj. -35.2731 iterations 1
Cbc0038I Pass   5: suminf.    1.87487 (6) obj. -35.2731 iterations 13
Cbc0038I Pass   6: suminf.    0.07778 (1) obj. -35.2731 iterations 7
Cbc0038I Pass   7: suminf.    0.34201 (2) obj. -35.2731 iterations 3
Cbc0038I Pass   8: suminf.    0.94202 (4) obj. -35.2731 iterations 6
Cbc0038I Pass   9: suminf.    0.94202 (4) obj. -35.2731 iterations 2
Cbc0038I Pass  10: suminf.    0.62263 (2) obj. -35.2731 iterations 4
Cbc0038I Pass  11: suminf.    0.65972 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  12: suminf.    0.52635 (2) obj. -35.2731 iterations 1
Cbc0038I Pass  13: suminf.    1.17982 (3) obj. -35.2731 iterations 2
Cbc0038I Pass  14: suminf.    0.52635 (2) obj. -35.2731 iterations 1
Cbc0038I Pass  15: suminf.    0.36938 (4) obj. -35.2731 iterations 9
Cbc0038I Pass  16: suminf.    0.36938 (4) obj. -35.2731 iterations 3
Cbc0038I Pass  17: suminf.    0.77477 (2) obj. -35.2731 iterations 5
Cbc0038I Pass  18: suminf.    0.63864 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  19: suminf.    0.78917 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  20: suminf.    0.78973 (3) obj. -35.2731 iterations 1
Cbc0038I Pass  21: suminf.    0.77477 (2) obj. -35.2731 iterations 1
Cbc0038I Pass  22: suminf.    1.93849 (6) obj. -35.2731 iterations 6
Cbc0038I Pass  23: suminf.    0.98358 (4) obj. -35.2731 iterations 5
Cbc0038I Pass  24: suminf.    1.31134 (3) obj. -35.2731 iterations 5
Cbc0038I Pass  25: suminf.    0.96576 (3) obj. -35.2731 iterations 2
Cbc0038I Pass  26: suminf.    0.62764 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  27: suminf.    0.97338 (2) obj. -35.2731 iterations 2
Cbc0038I Pass  28: suminf.    0.99555 (4) obj. -35.2731 iterations 4
Cbc0038I Pass  29: suminf.    0.99555 (4) obj. -35.2731 iterations 2
Cbc0038I Pass  30: suminf.    1.96717 (6) obj. -35.2731 iterations 13
Cbc0038I Pass  31: suminf.    1.03203 (4) obj. -35.2731 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 30 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -32.6355 - took 0.03 seconds
Cbc0012I Integer solution of -32.6355 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 52 rows 30 columns, reduced to 34 rows 19 columns
Cbc0031I 6 added rows had average density of 26.833333
Cbc0013I At root node, 6 cuts changed objective from -59.010589 to -44.283996 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 812 row cuts average 3.9 elements, 4 column cuts (4 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 650 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 6 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -32.6355, took 2316 iterations and 20 nodes (0.25 seconds)
Cbc0032I Strong branching done 178 times (1312 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 9, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 49 (-14) columns and 402 (-247) elements
Clp1000I sum of infeasibilities 1.38576e-08 - average 3.07947e-10, 24 fixed columns
Coin0506I Presolve 21 (-24) rows, 25 (-24) columns and 87 (-315) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 1.8151974 - largest nonzero change 1.4907167e-05 ( 0.0010393299%) - largest zero change 2.9915731e-05
Clp0000I Optimal - objective value 31.127914
Clp0000I Optimal - objective value 31.127914
Coin0511I After Postsolve, objective 31.127914, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1775759 - largest nonzero change 1.3402828e-05 ( 0.0010393299%) - largest zero change 2.9576007e-05
Clp0000I Optimal - objective value 64.568275
Clp0000I Optimal - objective value 64.568275
Clp0000I Optimal - objective value 64.568275
Coin0511I After Postsolve, objective 64.568275, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.56827535 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 49 columns (49 integer (49 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.070%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.08962
Cbc0038I Pass   1: suminf.    0.90194 (8) obj. -50.6306 iterations 15
Cbc0038I Pass   2: suminf.    0.90194 (8) obj. -50.6306 iterations 1
Cbc0038I Solution found of -13.3956
Cbc0038I Rounding solution of -19.622 is better than previous of -13.3956

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 49 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -19.622 to -21.6748 (0.01 seconds)
Cbc0038I Round again with cutoff of -25.3061
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.90194 (8) obj. -50.6306 iterations 0
Cbc0038I Pass   4: suminf.    0.90194 (8) obj. -50.6306 iterations 1
Cbc0038I Pass   5: suminf.    0.36496 (1) obj. -25.3061 iterations 12
Cbc0038I Pass   6: suminf.    0.13008 (1) obj. -41.7858 iterations 1
Cbc0038I Pass   7: suminf.    0.20700 (2) obj. -42.7089 iterations 5
Cbc0038I Pass   8: suminf.    0.20700 (2) obj. -42.7089 iterations 2
Cbc0038I Pass   9: suminf.    0.37729 (4) obj. -39.4553 iterations 12
Cbc0038I Pass  10: suminf.    0.37729 (4) obj. -39.4553 iterations 6
Cbc0038I Pass  11: suminf.    0.45119 (1) obj. -25.3061 iterations 6
Cbc0038I Pass  12: suminf.    0.13008 (1) obj. -35.7858 iterations 1
Cbc0038I Pass  13: suminf.    0.91143 (3) obj. -25.3061 iterations 3
Cbc0038I Pass  14: suminf.    0.48343 (2) obj. -34.5087 iterations 1
Cbc0038I Pass  15: suminf.    0.33980 (1) obj. -25.3061 iterations 2
Cbc0038I Pass  16: suminf.    0.40650 (1) obj. -33.5856 iterations 1
Cbc0038I Pass  17: suminf.    1.97231 (11) obj. -30.8898 iterations 14
Cbc0038I Pass  18: suminf.    0.46357 (3) obj. -29.4759 iterations 9
Cbc0038I Pass  19: suminf.    0.34864 (1) obj. -25.3061 iterations 3
Cbc0038I Pass  20: suminf.    0.27642 (1) obj. -27.6631 iterations 1
Cbc0038I Pass  21: suminf.    1.73949 (8) obj. -33.4682 iterations 18
Cbc0038I Pass  22: suminf.    1.53975 (7) obj. -28.9912 iterations 3
Cbc0038I Pass  23: suminf.    0.69362 (2) obj. -25.3061 iterations 10
Cbc0038I Pass  24: suminf.    0.25726 (2) obj. -25.3061 iterations 2
Cbc0038I Pass  25: suminf.    0.69362 (2) obj. -25.3061 iterations 1
Cbc0038I Pass  26: suminf.    1.06155 (7) obj. -25.3061 iterations 12
Cbc0038I Pass  27: suminf.    0.97785 (7) obj. -25.3061 iterations 3
Cbc0038I Pass  28: suminf.    0.91165 (4) obj. -25.3061 iterations 11
Cbc0038I Pass  29: suminf.    0.41742 (2) obj. -25.3061 iterations 2
Cbc0038I Pass  30: suminf.    0.49520 (2) obj. -25.3061 iterations 2
Cbc0038I Pass  31: suminf.    1.01487 (3) obj. -25.3061 iterations 8
Cbc0038I Pass  32: suminf.    0.19577 (1) obj. -25.3061 iterations 3
Cbc0038I Rounding solution of -32.6356 is better than previous of -21.6748

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 49 columns, reduced to 33 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -37.706
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.90194 (8) obj. -50.6306 iterations 0
Cbc0038I Pass  33: suminf.    0.90194 (8) obj. -50.6306 iterations 1
Cbc0038I Pass  34: suminf.    0.25509 (1) obj. -37.706 iterations 13
Cbc0038I Pass  35: suminf.    0.13008 (1) obj. -41.7858 iterations 1
Cbc0038I Pass  36: suminf.    1.36459 (12) obj. -37.706 iterations 15
Cbc0038I Pass  37: suminf.    0.40454 (3) obj. -38.5114 iterations 10
Cbc0038I Pass  38: suminf.    0.26097 (4) obj. -37.706 iterations 15
Cbc0038I Pass  39: suminf.    0.26097 (4) obj. -37.706 iterations 1
Cbc0038I Pass  40: suminf.    0.60048 (3) obj. -37.706 iterations 2
Cbc0038I Pass  41: suminf.    1.49781 (15) obj. -37.706 iterations 12
Cbc0038I Pass  42: suminf.    1.07171 (7) obj. -37.706 iterations 5
Cbc0038I Pass  43: suminf.    0.60048 (3) obj. -37.706 iterations 10
Cbc0038I Pass  44: suminf.    1.35293 (6) obj. -37.706 iterations 9
Cbc0038I Pass  45: suminf.    0.77394 (5) obj. -37.706 iterations 3
Cbc0038I Pass  46: suminf.    0.72335 (3) obj. -37.706 iterations 5
Cbc0038I Pass  47: suminf.    0.72335 (3) obj. -37.706 iterations 1
Cbc0038I Pass  48: suminf.    0.56922 (3) obj. -37.706 iterations 4
Cbc0038I Pass  49: suminf.    0.28850 (4) obj. -37.706 iterations 2
Cbc0038I Pass  50: suminf.    0.72335 (3) obj. -37.706 iterations 2
Cbc0038I Pass  51: suminf.    0.15012 (3) obj. -37.706 iterations 7
Cbc0038I Pass  52: suminf.    0.13812 (2) obj. -37.706 iterations 2
Cbc0038I Pass  53: suminf.    0.27307 (2) obj. -37.706 iterations 1
Cbc0038I Pass  54: suminf.    0.73275 (6) obj. -37.706 iterations 9
Cbc0038I Pass  55: suminf.    0.97956 (3) obj. -37.706 iterations 6
Cbc0038I Pass  56: suminf.    0.58296 (5) obj. -37.706 iterations 3
Cbc0038I Pass  57: suminf.    0.94774 (3) obj. -37.706 iterations 8
Cbc0038I Pass  58: suminf.    0.94774 (3) obj. -37.706 iterations 2
Cbc0038I Pass  59: suminf.    1.39834 (4) obj. -37.706 iterations 4
Cbc0038I Pass  60: suminf.    0.88640 (3) obj. -37.706 iterations 1
Cbc0038I Pass  61: suminf.    0.94774 (3) obj. -37.706 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 49 columns, reduced to 30 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -32.6356 - took 0.02 seconds
Cbc0012I Integer solution of -32.63556 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 49 columns, reduced to 3 rows 5 columns
Cbc0031I 22 added rows had average density of 16.090909
Cbc0013I At root node, 22 cuts changed objective from -57.987436 to -39.650551 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1914 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 682 row cuts average 38.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 120 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 376 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 150 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 227 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 183 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.765 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.63556 best solution, best possible -39.650551 (1.69 seconds)
Cbc0010I After 7 nodes, 4 on tree, -32.63556 best solution, best possible -39.650551 (2.52 seconds)
Cbc0001I Search completed - best objective -32.63556, took 2940 iterations and 16 nodes (2.71 seconds)
Cbc0032I Strong branching done 308 times (3464 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 6, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.75   (Wallclock seconds):       2.72

