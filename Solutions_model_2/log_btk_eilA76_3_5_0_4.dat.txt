Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 67 (-11) columns and 362 (-91) elements
Clp1000I sum of infeasibilities 2.49855e-05 - average 2.13551e-07, 64 fixed columns
Coin0506I Presolve 2 (-115) rows, 2 (-65) columns and 4 (-358) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 15833.593
Clp0000I Optimal - objective value 15833.593
Coin0511I After Postsolve, objective 15833.593, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2676733 - largest nonzero change 0 ( 0%) - largest zero change 2.9921934e-05
Clp0000I Optimal - objective value 15833.593
Clp0000I Optimal - objective value 15833.593
Clp0000I Optimal - objective value 15833.593
Coin0511I After Postsolve, objective 15833.593, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15833.59338 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 67 columns (66 integer (66 of which binary)) and 363 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.294%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.123077
Cbc0038I Pass   1: suminf.    0.03704 (1) obj. -15765.9 iterations 12
Cbc0038I Solution found of -11963
Cbc0038I Relaxing continuous gives -11972.4
Cbc0038I Rounding solution of -12404 is better than previous of -11972.4

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -12404 to -13714.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -13926.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.03704 (1) obj. -15765.9 iterations 0
Cbc0038I Pass   3: suminf.    0.49471 (1) obj. -13926.1 iterations 3
Cbc0038I Pass   4: suminf.    1.35707 (4) obj. -13926.1 iterations 13
Cbc0038I Pass   5: suminf.    0.25701 (2) obj. -13926.1 iterations 4
Cbc0038I Pass   6: suminf.    0.22727 (1) obj. -14026.5 iterations 4
Cbc0038I Pass   7: suminf.    0.37024 (1) obj. -13926.1 iterations 4
Cbc0038I Pass   8: suminf.    0.34483 (1) obj. -13990.6 iterations 2
Cbc0038I Pass   9: suminf.    1.05048 (4) obj. -13926.1 iterations 11
Cbc0038I Pass  10: suminf.    1.05048 (4) obj. -13926.1 iterations 2
Cbc0038I Pass  11: suminf.    0.27172 (1) obj. -13926.1 iterations 12
Cbc0038I Pass  12: suminf.    0.48649 (1) obj. -14448.8 iterations 5
Cbc0038I Pass  13: suminf.    1.23143 (4) obj. -13926.1 iterations 26
Cbc0038I Pass  14: suminf.    0.59986 (3) obj. -13926.1 iterations 15
Cbc0038I Pass  15: suminf.    0.78571 (3) obj. -14552.2 iterations 6
Cbc0038I Pass  16: suminf.    0.76915 (2) obj. -13926.1 iterations 8
Cbc0038I Pass  17: suminf.    0.76915 (2) obj. -13926.1 iterations 0
Cbc0038I Pass  18: suminf.    0.04545 (1) obj. -14268.9 iterations 5
Cbc0038I Pass  19: suminf.    0.04545 (1) obj. -14268.9 iterations 0
Cbc0038I Pass  20: suminf.    1.14333 (4) obj. -13926.1 iterations 17
Cbc0038I Pass  21: suminf.    0.23826 (1) obj. -13926.1 iterations 9
Cbc0038I Pass  22: suminf.    0.20000 (1) obj. -14046 iterations 1
Cbc0038I Pass  23: suminf.    0.59852 (4) obj. -13926.1 iterations 10
Cbc0038I Pass  24: suminf.    0.22102 (1) obj. -13926.1 iterations 4
Cbc0038I Pass  25: suminf.    0.26667 (1) obj. -14059 iterations 1
Cbc0038I Pass  26: suminf.    0.67258 (6) obj. -13926.1 iterations 11
Cbc0038I Pass  27: suminf.    0.16644 (4) obj. -13926.1 iterations 12
Cbc0038I Pass  28: suminf.    0.66699 (2) obj. -13926.1 iterations 19
Cbc0038I Pass  29: suminf.    0.66699 (2) obj. -13926.1 iterations 0
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -14408.3 iterations 4
Cbc0038I Solution found of -14408.3
Cbc0038I Relaxing continuous gives -14408.3
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 28 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -14408.3 to -15011.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -15175.7
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.03704 (1) obj. -15765.9 iterations 0
Cbc0038I Pass  32: suminf.    0.18806 (1) obj. -15175.7 iterations 2
Cbc0038I Pass  33: suminf.    0.41754 (2) obj. -15175.7 iterations 9
Cbc0038I Pass  34: suminf.    0.40506 (3) obj. -15175.7 iterations 5
Cbc0038I Pass  35: suminf.    0.79264 (3) obj. -15175.7 iterations 12
Cbc0038I Pass  36: suminf.    0.50032 (3) obj. -15175.7 iterations 3
Cbc0038I Pass  37: suminf.    0.12346 (2) obj. -15712.8 iterations 6
Cbc0038I Pass  38: suminf.    0.06667 (1) obj. -15752.1 iterations 3
Cbc0038I Pass  39: suminf.    0.26466 (1) obj. -15175.7 iterations 1
Cbc0038I Pass  40: suminf.    0.08696 (2) obj. -15776.2 iterations 8
Cbc0038I Pass  41: suminf.    0.56229 (3) obj. -15175.7 iterations 7
Cbc0038I Pass  42: suminf.    1.50530 (5) obj. -15175.7 iterations 10
Cbc0038I Pass  43: suminf.    0.50382 (2) obj. -15175.7 iterations 10
Cbc0038I Pass  44: suminf.    0.69129 (4) obj. -15175.7 iterations 8
Cbc0038I Pass  45: suminf.    0.43333 (1) obj. -15258.5 iterations 8
Cbc0038I Pass  46: suminf.    0.87264 (5) obj. -15175.7 iterations 10
Cbc0038I Pass  47: suminf.    0.64679 (3) obj. -15175.7 iterations 7
Cbc0038I Pass  48: suminf.    0.54969 (2) obj. -15175.7 iterations 5
Cbc0038I Pass  49: suminf.    0.50382 (2) obj. -15175.7 iterations 8
Cbc0038I Pass  50: suminf.    0.69129 (4) obj. -15175.7 iterations 8
Cbc0038I Pass  51: suminf.    0.43333 (1) obj. -15258.5 iterations 8
Cbc0038I Pass  52: suminf.    0.51345 (3) obj. -15175.7 iterations 5
Cbc0038I Pass  53: suminf.    0.43333 (1) obj. -15258.5 iterations 4
Cbc0038I Pass  54: suminf.    1.19185 (4) obj. -15175.7 iterations 9
Cbc0038I Pass  55: suminf.    0.58346 (2) obj. -15175.7 iterations 5
Cbc0038I Pass  56: suminf.    0.46440 (1) obj. -15175.7 iterations 8
Cbc0038I Pass  57: suminf.    0.22222 (1) obj. -15327.2 iterations 8
Cbc0038I Pass  58: suminf.    0.26100 (1) obj. -15175.7 iterations 1
Cbc0038I Pass  59: suminf.    1.36381 (4) obj. -15175.7 iterations 6
Cbc0038I Pass  60: suminf.    0.59541 (3) obj. -15175.7 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15011.2 - took 0.02 seconds
Cbc0012I Integer solution of -15011.179 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 117 rows 67 columns, reduced to 4 rows 7 columns
Cbc0031I 6 added rows had average density of 12.5
Cbc0013I At root node, 6 cuts changed objective from -15833.593 to -15223.153 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15011.179, took 186 iterations and 4 nodes (0.05 seconds)
Cbc0032I Strong branching done 44 times (213 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-65) rows, 104 (-48) columns and 1541 (-1762) elements
Clp1000I sum of infeasibilities 1.92471e-06 - average 2.16259e-08, 70 fixed columns
Coin0506I Presolve 29 (-60) rows, 32 (-72) columns and 133 (-1408) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 7.2082721 - largest nonzero change 1.7343547e-05 ( 0.0012247315%) - largest zero change 1.1743425e-05
Clp0000I Optimal - objective value 15872.395
Clp0000I Optimal - objective value 15872.395
Coin0511I After Postsolve, objective 15872.395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7082588 - largest nonzero change 1.7085143e-05 ( 0.0017085143%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 15872.395
Clp0000I Optimal - objective value 15872.395
Clp0000I Optimal - objective value 15872.395
Coin0511I After Postsolve, objective 15872.395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15872.39513 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 105 columns (105 integer (105 of which binary)) and 1546 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.455%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 1.22891
Cbc0038I Pass   1: suminf.    1.12560 (24) obj. -15797.5 iterations 18
Cbc0038I Pass   2: suminf.    0.33610 (11) obj. -15777 iterations 13
Cbc0038I Solution found of -11961.4
Cbc0038I Rounding solution of -12897.4 is better than previous of -11961.4

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 105 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -12897.4 to -13714.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -13929.4
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.12560 (24) obj. -15797.5 iterations 0
Cbc0038I Pass   4: suminf.    0.46627 (14) obj. -15780.8 iterations 10
Cbc0038I Pass   5: suminf.    0.49833 (1) obj. -13929.4 iterations 14
Cbc0038I Pass   6: suminf.    0.03704 (1) obj. -15764.4 iterations 2
Cbc0038I Pass   7: suminf.    1.13100 (6) obj. -13929.4 iterations 18
Cbc0038I Pass   8: suminf.    0.39103 (5) obj. -14671.4 iterations 9
Cbc0038I Pass   9: suminf.    0.29642 (1) obj. -13929.4 iterations 6
Cbc0038I Pass  10: suminf.    0.11111 (1) obj. -14661.3 iterations 2
Cbc0038I Pass  11: suminf.    1.58251 (14) obj. -13929.4 iterations 27
Cbc0038I Pass  12: suminf.    1.08751 (10) obj. -13929.4 iterations 13
Cbc0038I Pass  13: suminf.    0.27273 (1) obj. -14138.2 iterations 13
Cbc0038I Pass  14: suminf.    0.27273 (1) obj. -14138.2 iterations 0
Cbc0038I Pass  15: suminf.    0.61434 (2) obj. -13929.4 iterations 6
Cbc0038I Pass  16: suminf.    1.94926 (10) obj. -13929.4 iterations 12
Cbc0038I Pass  17: suminf.    1.31539 (5) obj. -13929.4 iterations 8
Cbc0038I Pass  18: suminf.    0.44313 (3) obj. -13929.4 iterations 6
Cbc0038I Pass  19: suminf.    0.09524 (1) obj. -14093.6 iterations 3
Cbc0038I Solution found of -14091.8
Cbc0038I Rounding solution of -14109.8 is better than previous of -14091.8

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 105 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -14109.8 to -14853.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -15056.1
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass  20: suminf.    1.12560 (24) obj. -15797.5 iterations 0
Cbc0038I Pass  21: suminf.    0.42062 (13) obj. -15779.9 iterations 11
Cbc0038I Pass  22: suminf.    0.25762 (3) obj. -15056.1 iterations 11
Cbc0038I Pass  23: suminf.    0.08714 (3) obj. -15766.3 iterations 2
Cbc0038I Pass  24: suminf.    0.21638 (1) obj. -15056.1 iterations 4
Cbc0038I Pass  25: suminf.    0.03704 (1) obj. -15764.4 iterations 2
Cbc0038I Pass  26: suminf.    1.32598 (7) obj. -15056.1 iterations 20
Cbc0038I Pass  27: suminf.    0.91275 (7) obj. -15056.1 iterations 4
Cbc0038I Pass  28: suminf.    0.64629 (7) obj. -15056.1 iterations 2
Cbc0038I Pass  29: suminf.    0.35853 (2) obj. -15056.1 iterations 10
Cbc0038I Pass  30: suminf.    0.06667 (1) obj. -15749.1 iterations 3
Cbc0038I Pass  31: suminf.    0.30468 (1) obj. -15056.1 iterations 1
Cbc0038I Pass  32: suminf.    0.47753 (6) obj. -15056.1 iterations 10
Cbc0038I Pass  33: suminf.    0.44813 (5) obj. -15056.1 iterations 5
Cbc0038I Pass  34: suminf.    0.37037 (2) obj. -15113 iterations 6
Cbc0038I Pass  35: suminf.    0.26355 (1) obj. -15056.1 iterations 2
Cbc0038I Pass  36: suminf.    0.67540 (6) obj. -15056.1 iterations 15
Cbc0038I Pass  37: suminf.    0.42015 (5) obj. -15056.1 iterations 6
Cbc0038I Pass  38: suminf.    0.37037 (2) obj. -15114 iterations 6
Cbc0038I Pass  39: suminf.    0.26321 (1) obj. -15056.1 iterations 2
Cbc0038I Pass  40: suminf.    0.84226 (7) obj. -15056.1 iterations 18
Cbc0038I Pass  41: suminf.    0.31646 (2) obj. -15056.1 iterations 12
Cbc0038I Pass  42: suminf.    0.65906 (3) obj. -15056.1 iterations 4
Cbc0038I Pass  43: suminf.    0.32267 (4) obj. -15056.1 iterations 5
Cbc0038I Pass  44: suminf.    0.25297 (4) obj. -15056.1 iterations 2
Cbc0038I Pass  45: suminf.    0.12346 (2) obj. -15701.5 iterations 7
Cbc0038I Pass  46: suminf.    0.06667 (1) obj. -15744.1 iterations 4
Cbc0038I Pass  47: suminf.    0.30297 (1) obj. -15056.1 iterations 1
Cbc0038I Pass  48: suminf.    1.16654 (7) obj. -15056.1 iterations 16
Cbc0038I Pass  49: suminf.    1.16654 (7) obj. -15056.1 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 105 columns, reduced to 29 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -14853.5 - took 0.04 seconds
Cbc0012I Integer solution of -14853.5 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 90 rows 105 columns, reduced to 0 rows 0 columns
Cbc0031I 22 added rows had average density of 4.9545455
Cbc0013I At root node, 22 cuts changed objective from -15866.679 to -15205.506 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 12.8 elements, 18 column cuts (18 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 45.5 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0016I Integer solution of -15011.179 found by strong branching after 422 iterations and 6 nodes (0.63 seconds)
Cbc0010I After 6 nodes, 5 on tree, -15011.179 best solution, best possible -15205.506 (0.64 seconds)
Cbc0001I Search completed - best objective -15011.179, took 599 iterations and 12 nodes (0.79 seconds)
Cbc0032I Strong branching done 186 times (1308 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 5, 63 variables fixed on reduced cost
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.79

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 67 (-11) columns and 362 (-91) elements
Clp1000I sum of infeasibilities 2.49855e-05 - average 2.13551e-07, 64 fixed columns
Coin0506I Presolve 2 (-115) rows, 2 (-65) columns and 4 (-358) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 15833.593
Clp0000I Optimal - objective value 15833.593
Coin0511I After Postsolve, objective 15833.593, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2676733 - largest nonzero change 0 ( 0%) - largest zero change 2.9921934e-05
Clp0000I Optimal - objective value 15833.593
Clp0000I Optimal - objective value 15833.593
Clp0000I Optimal - objective value 15833.593
Coin0511I After Postsolve, objective 15833.593, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15833.59338 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 117 rows, 67 columns (66 integer (66 of which binary)) and 363 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.294%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.123077
Cbc0038I Pass   1: suminf.    0.03704 (1) obj. -15765.9 iterations 12
Cbc0038I Solution found of -11963
Cbc0038I Relaxing continuous gives -11972.4
Cbc0038I Rounding solution of -12404 is better than previous of -11972.4

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -12404 to -13714.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -13926.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.03704 (1) obj. -15765.9 iterations 0
Cbc0038I Pass   3: suminf.    0.49471 (1) obj. -13926.1 iterations 3
Cbc0038I Pass   4: suminf.    1.35707 (4) obj. -13926.1 iterations 13
Cbc0038I Pass   5: suminf.    0.25701 (2) obj. -13926.1 iterations 4
Cbc0038I Pass   6: suminf.    0.22727 (1) obj. -14026.5 iterations 4
Cbc0038I Pass   7: suminf.    0.37024 (1) obj. -13926.1 iterations 4
Cbc0038I Pass   8: suminf.    0.34483 (1) obj. -13990.6 iterations 2
Cbc0038I Pass   9: suminf.    1.05048 (4) obj. -13926.1 iterations 11
Cbc0038I Pass  10: suminf.    1.05048 (4) obj. -13926.1 iterations 2
Cbc0038I Pass  11: suminf.    0.27172 (1) obj. -13926.1 iterations 12
Cbc0038I Pass  12: suminf.    0.48649 (1) obj. -14448.8 iterations 5
Cbc0038I Pass  13: suminf.    1.23143 (4) obj. -13926.1 iterations 26
Cbc0038I Pass  14: suminf.    0.59986 (3) obj. -13926.1 iterations 15
Cbc0038I Pass  15: suminf.    0.78571 (3) obj. -14552.2 iterations 6
Cbc0038I Pass  16: suminf.    0.76915 (2) obj. -13926.1 iterations 8
Cbc0038I Pass  17: suminf.    0.76915 (2) obj. -13926.1 iterations 0
Cbc0038I Pass  18: suminf.    0.04545 (1) obj. -14268.9 iterations 5
Cbc0038I Pass  19: suminf.    0.04545 (1) obj. -14268.9 iterations 0
Cbc0038I Pass  20: suminf.    1.14333 (4) obj. -13926.1 iterations 17
Cbc0038I Pass  21: suminf.    0.23826 (1) obj. -13926.1 iterations 9
Cbc0038I Pass  22: suminf.    0.20000 (1) obj. -14046 iterations 1
Cbc0038I Pass  23: suminf.    0.59852 (4) obj. -13926.1 iterations 10
Cbc0038I Pass  24: suminf.    0.22102 (1) obj. -13926.1 iterations 4
Cbc0038I Pass  25: suminf.    0.26667 (1) obj. -14059 iterations 1
Cbc0038I Pass  26: suminf.    0.67258 (6) obj. -13926.1 iterations 11
Cbc0038I Pass  27: suminf.    0.16644 (4) obj. -13926.1 iterations 12
Cbc0038I Pass  28: suminf.    0.66699 (2) obj. -13926.1 iterations 19
Cbc0038I Pass  29: suminf.    0.66699 (2) obj. -13926.1 iterations 0
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -14408.3 iterations 4
Cbc0038I Solution found of -14408.3
Cbc0038I Relaxing continuous gives -14408.3
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 28 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -14408.3 to -15011.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -15175.7
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.03704 (1) obj. -15765.9 iterations 0
Cbc0038I Pass  32: suminf.    0.18806 (1) obj. -15175.7 iterations 2
Cbc0038I Pass  33: suminf.    0.41754 (2) obj. -15175.7 iterations 9
Cbc0038I Pass  34: suminf.    0.40506 (3) obj. -15175.7 iterations 5
Cbc0038I Pass  35: suminf.    0.79264 (3) obj. -15175.7 iterations 12
Cbc0038I Pass  36: suminf.    0.50032 (3) obj. -15175.7 iterations 3
Cbc0038I Pass  37: suminf.    0.12346 (2) obj. -15712.8 iterations 6
Cbc0038I Pass  38: suminf.    0.06667 (1) obj. -15752.1 iterations 3
Cbc0038I Pass  39: suminf.    0.26466 (1) obj. -15175.7 iterations 1
Cbc0038I Pass  40: suminf.    0.08696 (2) obj. -15776.2 iterations 8
Cbc0038I Pass  41: suminf.    0.56229 (3) obj. -15175.7 iterations 7
Cbc0038I Pass  42: suminf.    1.50530 (5) obj. -15175.7 iterations 10
Cbc0038I Pass  43: suminf.    0.50382 (2) obj. -15175.7 iterations 10
Cbc0038I Pass  44: suminf.    0.69129 (4) obj. -15175.7 iterations 8
Cbc0038I Pass  45: suminf.    0.43333 (1) obj. -15258.5 iterations 8
Cbc0038I Pass  46: suminf.    0.87264 (5) obj. -15175.7 iterations 10
Cbc0038I Pass  47: suminf.    0.64679 (3) obj. -15175.7 iterations 7
Cbc0038I Pass  48: suminf.    0.54969 (2) obj. -15175.7 iterations 5
Cbc0038I Pass  49: suminf.    0.50382 (2) obj. -15175.7 iterations 8
Cbc0038I Pass  50: suminf.    0.69129 (4) obj. -15175.7 iterations 8
Cbc0038I Pass  51: suminf.    0.43333 (1) obj. -15258.5 iterations 8
Cbc0038I Pass  52: suminf.    0.51345 (3) obj. -15175.7 iterations 5
Cbc0038I Pass  53: suminf.    0.43333 (1) obj. -15258.5 iterations 4
Cbc0038I Pass  54: suminf.    1.19185 (4) obj. -15175.7 iterations 9
Cbc0038I Pass  55: suminf.    0.58346 (2) obj. -15175.7 iterations 5
Cbc0038I Pass  56: suminf.    0.46440 (1) obj. -15175.7 iterations 8
Cbc0038I Pass  57: suminf.    0.22222 (1) obj. -15327.2 iterations 8
Cbc0038I Pass  58: suminf.    0.26100 (1) obj. -15175.7 iterations 1
Cbc0038I Pass  59: suminf.    1.36381 (4) obj. -15175.7 iterations 6
Cbc0038I Pass  60: suminf.    0.59541 (3) obj. -15175.7 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 117 rows 67 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15011.2 - took 0.04 seconds
Cbc0012I Integer solution of -15011.179 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 117 rows 67 columns, reduced to 4 rows 7 columns
Cbc0031I 6 added rows had average density of 12.5
Cbc0013I At root node, 6 cuts changed objective from -15833.593 to -15223.153 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15011.179, took 186 iterations and 4 nodes (0.05 seconds)
Cbc0032I Strong branching done 44 times (213 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-66) rows, 104 (-49) columns and 1541 (-1763) elements
Clp1000I sum of infeasibilities 1.92471e-06 - average 2.16259e-08, 70 fixed columns
Coin0506I Presolve 29 (-60) rows, 32 (-72) columns and 133 (-1408) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 7.2082721 - largest nonzero change 1.7343547e-05 ( 0.0012247315%) - largest zero change 1.1743425e-05
Clp0000I Optimal - objective value 15872.395
Clp0000I Optimal - objective value 15872.395
Coin0511I After Postsolve, objective 15872.395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7082588 - largest nonzero change 1.7085143e-05 ( 0.0017085143%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 15872.395
Clp0000I Optimal - objective value 15872.395
Clp0000I Optimal - objective value 15872.395
Coin0511I After Postsolve, objective 15872.395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 15872.39513 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 105 columns (105 integer (105 of which binary)) and 1546 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.455%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 1.22891
Cbc0038I Pass   1: suminf.    1.12560 (24) obj. -15797.5 iterations 18
Cbc0038I Pass   2: suminf.    0.33610 (11) obj. -15777 iterations 13
Cbc0038I Solution found of -11961.4
Cbc0038I Rounding solution of -12897.4 is better than previous of -11961.4

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 105 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -12897.4 to -13714.2 (0.02 seconds)
Cbc0038I Round again with cutoff of -13929.4
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.12560 (24) obj. -15797.5 iterations 0
Cbc0038I Pass   4: suminf.    0.46627 (14) obj. -15780.8 iterations 10
Cbc0038I Pass   5: suminf.    0.49833 (1) obj. -13929.4 iterations 14
Cbc0038I Pass   6: suminf.    0.03704 (1) obj. -15764.4 iterations 2
Cbc0038I Pass   7: suminf.    1.13100 (6) obj. -13929.4 iterations 18
Cbc0038I Pass   8: suminf.    0.39103 (5) obj. -14671.4 iterations 9
Cbc0038I Pass   9: suminf.    0.29642 (1) obj. -13929.4 iterations 6
Cbc0038I Pass  10: suminf.    0.11111 (1) obj. -14661.3 iterations 2
Cbc0038I Pass  11: suminf.    1.58251 (14) obj. -13929.4 iterations 27
Cbc0038I Pass  12: suminf.    1.08751 (10) obj. -13929.4 iterations 13
Cbc0038I Pass  13: suminf.    0.27273 (1) obj. -14138.2 iterations 13
Cbc0038I Pass  14: suminf.    0.27273 (1) obj. -14138.2 iterations 0
Cbc0038I Pass  15: suminf.    0.61434 (2) obj. -13929.4 iterations 6
Cbc0038I Pass  16: suminf.    1.94926 (10) obj. -13929.4 iterations 12
Cbc0038I Pass  17: suminf.    1.31539 (5) obj. -13929.4 iterations 8
Cbc0038I Pass  18: suminf.    0.44313 (3) obj. -13929.4 iterations 6
Cbc0038I Pass  19: suminf.    0.09524 (1) obj. -14093.6 iterations 3
Cbc0038I Solution found of -14091.8
Cbc0038I Rounding solution of -14109.8 is better than previous of -14091.8

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 105 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -14109.8 to -14853.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -15056.1
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass  20: suminf.    1.12560 (24) obj. -15797.5 iterations 0
Cbc0038I Pass  21: suminf.    0.42062 (13) obj. -15779.9 iterations 11
Cbc0038I Pass  22: suminf.    0.25762 (3) obj. -15056.1 iterations 11
Cbc0038I Pass  23: suminf.    0.08714 (3) obj. -15766.3 iterations 2
Cbc0038I Pass  24: suminf.    0.21638 (1) obj. -15056.1 iterations 4
Cbc0038I Pass  25: suminf.    0.03704 (1) obj. -15764.4 iterations 2
Cbc0038I Pass  26: suminf.    1.32598 (7) obj. -15056.1 iterations 20
Cbc0038I Pass  27: suminf.    0.91275 (7) obj. -15056.1 iterations 4
Cbc0038I Pass  28: suminf.    0.64629 (7) obj. -15056.1 iterations 2
Cbc0038I Pass  29: suminf.    0.35853 (2) obj. -15056.1 iterations 10
Cbc0038I Pass  30: suminf.    0.06667 (1) obj. -15749.1 iterations 3
Cbc0038I Pass  31: suminf.    0.30468 (1) obj. -15056.1 iterations 1
Cbc0038I Pass  32: suminf.    0.47753 (6) obj. -15056.1 iterations 10
Cbc0038I Pass  33: suminf.    0.44813 (5) obj. -15056.1 iterations 5
Cbc0038I Pass  34: suminf.    0.37037 (2) obj. -15113 iterations 6
Cbc0038I Pass  35: suminf.    0.26355 (1) obj. -15056.1 iterations 2
Cbc0038I Pass  36: suminf.    0.67540 (6) obj. -15056.1 iterations 15
Cbc0038I Pass  37: suminf.    0.42015 (5) obj. -15056.1 iterations 6
Cbc0038I Pass  38: suminf.    0.37037 (2) obj. -15114 iterations 6
Cbc0038I Pass  39: suminf.    0.26321 (1) obj. -15056.1 iterations 2
Cbc0038I Pass  40: suminf.    0.84226 (7) obj. -15056.1 iterations 18
Cbc0038I Pass  41: suminf.    0.31646 (2) obj. -15056.1 iterations 12
Cbc0038I Pass  42: suminf.    0.65906 (3) obj. -15056.1 iterations 4
Cbc0038I Pass  43: suminf.    0.32267 (4) obj. -15056.1 iterations 5
Cbc0038I Pass  44: suminf.    0.25297 (4) obj. -15056.1 iterations 2
Cbc0038I Pass  45: suminf.    0.12346 (2) obj. -15701.5 iterations 7
Cbc0038I Pass  46: suminf.    0.06667 (1) obj. -15744.1 iterations 4
Cbc0038I Pass  47: suminf.    0.30297 (1) obj. -15056.1 iterations 1
Cbc0038I Pass  48: suminf.    1.16654 (7) obj. -15056.1 iterations 16
Cbc0038I Pass  49: suminf.    1.16654 (7) obj. -15056.1 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 105 columns, reduced to 29 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -14853.5 - took 0.04 seconds
Cbc0012I Integer solution of -14853.5 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 90 rows 105 columns, reduced to 0 rows 0 columns
Cbc0031I 22 added rows had average density of 4.9545455
Cbc0013I At root node, 22 cuts changed objective from -15866.679 to -15205.506 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 12.8 elements, 18 column cuts (18 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 15 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 56 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 45.5 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0016I Integer solution of -15011.179 found by strong branching after 422 iterations and 6 nodes (0.66 seconds)
Cbc0010I After 6 nodes, 5 on tree, -15011.179 best solution, best possible -15205.506 (0.67 seconds)
Cbc0001I Search completed - best objective -15011.179, took 599 iterations and 12 nodes (0.82 seconds)
Cbc0032I Strong branching done 186 times (1308 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 5, 63 variables fixed on reduced cost
Total time (CPU seconds):       0.49   (Wallclock seconds):       0.83

