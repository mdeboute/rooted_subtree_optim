Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 21 (-4) columns and 106 (-29) elements
Clp1000I sum of infeasibilities 5.25015e-06 - average 1.45837e-07, 6 fixed columns
Coin0506I Presolve 15 (-21) rows, 14 (-7) columns and 50 (-56) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 231.70347
Clp0000I Optimal - objective value 231.70347
Coin0511I After Postsolve, objective 231.70347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 231.70347
Clp0000I Optimal - objective value 231.70347
Clp0000I Optimal - objective value 231.70347
Coin0511I After Postsolve, objective 231.70347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 231.7034683 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 21 columns (20 integer (20 of which binary)) and 111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.12725
Cbc0038I Pass   1: suminf.    0.18942 (2) obj. -171.164 iterations 15
Cbc0038I Solution found of -133.291
Cbc0038I Relaxing continuous gives -133.291
Cbc0038I Rounding solution of -149.147 is better than previous of -133.291

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -149.147 to -162.697 (0.01 seconds)
Cbc0038I Round again with cutoff of -168.554
Cbc0038I Pass   2: suminf.    0.18942 (2) obj. -171.164 iterations 0
Cbc0038I Pass   3: suminf.    0.67326 (3) obj. -168.554 iterations 6
Cbc0038I Pass   4: suminf.    0.14298 (2) obj. -168.554 iterations 2
Cbc0038I Pass   5: suminf.    1.17686 (6) obj. -168.554 iterations 6
Cbc0038I Pass   6: suminf.    1.08719 (6) obj. -168.554 iterations 2
Cbc0038I Pass   7: suminf.    2.34796 (8) obj. -168.554 iterations 9
Cbc0038I Pass   8: suminf.    0.69103 (5) obj. -168.554 iterations 7
Cbc0038I Pass   9: suminf.    0.68020 (5) obj. -168.554 iterations 1
Cbc0038I Pass  10: suminf.    2.91241 (8) obj. -168.554 iterations 10
Cbc0038I Pass  11: suminf.    1.90533 (7) obj. -168.554 iterations 4
Cbc0038I Pass  12: suminf.    0.85712 (5) obj. -168.554 iterations 3
Cbc0038I Pass  13: suminf.    1.77589 (7) obj. -168.554 iterations 7
Cbc0038I Pass  14: suminf.    1.02712 (4) obj. -168.554 iterations 1
Cbc0038I Pass  15: suminf.    0.58845 (4) obj. -168.554 iterations 1
Cbc0038I Pass  16: suminf.    0.78752 (5) obj. -168.554 iterations 1
Cbc0038I Pass  17: suminf.    0.58845 (4) obj. -168.554 iterations 1
Cbc0038I Pass  18: suminf.    1.90533 (7) obj. -168.554 iterations 7
Cbc0038I Pass  19: suminf.    0.85712 (5) obj. -168.554 iterations 3
Cbc0038I Pass  20: suminf.    0.68020 (5) obj. -168.554 iterations 1
Cbc0038I Pass  21: suminf.    2.91241 (8) obj. -168.554 iterations 10
Cbc0038I Pass  22: suminf.    1.26483 (5) obj. -168.554 iterations 11
Cbc0038I Pass  23: suminf.    1.02593 (5) obj. -168.554 iterations 1
Cbc0038I Pass  24: suminf.    1.02593 (5) obj. -168.554 iterations 0
Cbc0038I Pass  25: suminf.    1.37537 (6) obj. -168.554 iterations 8
Cbc0038I Pass  26: suminf.    1.76424 (5) obj. -168.554 iterations 6
Cbc0038I Pass  27: suminf.    1.76424 (5) obj. -168.554 iterations 0
Cbc0038I Pass  28: suminf.    1.63316 (5) obj. -168.554 iterations 4
Cbc0038I Pass  29: suminf.    1.63316 (5) obj. -168.554 iterations 0
Cbc0038I Pass  30: suminf.    1.76424 (5) obj. -168.554 iterations 5
Cbc0038I Pass  31: suminf.    2.36434 (7) obj. -168.554 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -162.697 - took 0.01 seconds
Cbc0012I Integer solution of -162.69733 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 21 columns, reduced to 18 rows 13 columns
Cbc0012I Integer solution of -164.19718 found by DiveCoefficient after 940 iterations and 0 nodes (0.09 seconds)
Cbc0031I 9 added rows had average density of 9.6666667
Cbc0013I At root node, 9 cuts changed objective from -221.26736 to -164.74827 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 134 row cuts average 4.3 elements, 5 column cuts (5 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 360 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -164.19718, took 982 iterations and 2 nodes (0.09 seconds)
Cbc0032I Strong branching done 16 times (64 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 40 (-6) columns and 297 (-91) elements
Clp1000I sum of infeasibilities 3.65574e-07 - average 1.01548e-08, 37 fixed columns
Coin0506I Presolve 2 (-34) rows, 3 (-37) columns and 6 (-291) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 282.03693
Clp0000I Optimal - objective value 282.03693
Coin0511I After Postsolve, objective 282.03693, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.16134195 - largest nonzero change 0 ( 0%) - largest zero change 2.7112891e-05
Clp0000I Optimal - objective value 376.33396
Clp0000I Optimal - objective value 376.33396
Clp0000I Optimal - objective value 376.33396
Coin0511I After Postsolve, objective 376.33396, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 376.3339554 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.994%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.06424
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -271.091 iterations 22
Cbc0038I Solution found of -261.591
Cbc0038I Rounding solution of -263.341 is better than previous of -261.591

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -269.015
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -271.091 iterations 0
Cbc0038I Pass   3: suminf.    0.18559 (1) obj. -269.015 iterations 2
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -274.925 iterations 1
Cbc0038I Pass   5: suminf.    1.49174 (5) obj. -269.015 iterations 14
Cbc0038I Pass   6: suminf.    0.76285 (2) obj. -269.015 iterations 5
Cbc0038I Pass   7: suminf.    0.61243 (3) obj. -269.015 iterations 3
Cbc0038I Pass   8: suminf.    0.61243 (3) obj. -269.015 iterations 0
Cbc0038I Pass   9: suminf.    1.36986 (4) obj. -269.015 iterations 2
Cbc0038I Pass  10: suminf.    0.87378 (3) obj. -269.015 iterations 1
Cbc0038I Pass  11: suminf.    0.92987 (3) obj. -269.015 iterations 2
Cbc0038I Pass  12: suminf.    0.88714 (3) obj. -269.015 iterations 1
Cbc0038I Pass  13: suminf.    1.36986 (4) obj. -269.015 iterations 2
Cbc0038I Pass  14: suminf.    1.50440 (5) obj. -274.702 iterations 7
Cbc0038I Pass  15: suminf.    0.56636 (2) obj. -269.015 iterations 6
Cbc0038I Pass  16: suminf.    0.64078 (2) obj. -271.082 iterations 1
Cbc0038I Pass  17: suminf.    2.04875 (5) obj. -269.015 iterations 6
Cbc0038I Pass  18: suminf.    1.04903 (3) obj. -269.015 iterations 3
Cbc0038I Pass  19: suminf.    1.03928 (3) obj. -269.015 iterations 2
Cbc0038I Pass  20: suminf.    1.03928 (3) obj. -269.015 iterations 0
Cbc0038I Pass  21: suminf.    1.04903 (3) obj. -269.015 iterations 1
Cbc0038I Pass  22: suminf.    2.44879 (8) obj. -269.015 iterations 10
Cbc0038I Pass  23: suminf.    1.11494 (4) obj. -269.015 iterations 6
Cbc0038I Pass  24: suminf.    0.49058 (2) obj. -269.015 iterations 4
Cbc0038I Pass  25: suminf.    0.28877 (2) obj. -272.751 iterations 4
Cbc0038I Pass  26: suminf.    0.19058 (1) obj. -269.015 iterations 2
Cbc0038I Pass  27: suminf.    2.23212 (8) obj. -269.015 iterations 11
Cbc0038I Pass  28: suminf.    0.84830 (4) obj. -269.015 iterations 7
Cbc0038I Pass  29: suminf.    1.42099 (4) obj. -274.93 iterations 3
Cbc0038I Pass  30: suminf.    0.74516 (2) obj. -269.015 iterations 3
Cbc0038I Pass  31: suminf.    0.59830 (3) obj. -269.015 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -263.341 - took 0.01 seconds
Cbc0012I Integer solution of -263.34133 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -274.1328 found by DiveCoefficient after 24 iterations and 0 nodes (0.03 seconds)
Cbc0031I 4 added rows had average density of 7.25
Cbc0013I At root node, 4 cuts changed objective from -288.81238 to -274.1328 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -274.1328, took 24 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 21 (-4) columns and 106 (-29) elements
Clp1000I sum of infeasibilities 5.25015e-06 - average 1.45837e-07, 6 fixed columns
Coin0506I Presolve 15 (-21) rows, 14 (-7) columns and 50 (-56) elements
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 231.70347
Clp0000I Optimal - objective value 231.70347
Coin0511I After Postsolve, objective 231.70347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 231.70347
Clp0000I Optimal - objective value 231.70347
Clp0000I Optimal - objective value 231.70347
Coin0511I After Postsolve, objective 231.70347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 231.7034683 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 21 columns (20 integer (20 of which binary)) and 111 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.873%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.12725
Cbc0038I Pass   1: suminf.    0.18942 (2) obj. -171.164 iterations 15
Cbc0038I Solution found of -133.291
Cbc0038I Relaxing continuous gives -133.291
Cbc0038I Rounding solution of -149.147 is better than previous of -133.291

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -149.147 to -162.697 (0.01 seconds)
Cbc0038I Round again with cutoff of -168.554
Cbc0038I Pass   2: suminf.    0.18942 (2) obj. -171.164 iterations 0
Cbc0038I Pass   3: suminf.    0.67326 (3) obj. -168.554 iterations 6
Cbc0038I Pass   4: suminf.    0.14298 (2) obj. -168.554 iterations 2
Cbc0038I Pass   5: suminf.    1.17686 (6) obj. -168.554 iterations 6
Cbc0038I Pass   6: suminf.    1.08719 (6) obj. -168.554 iterations 2
Cbc0038I Pass   7: suminf.    2.34796 (8) obj. -168.554 iterations 9
Cbc0038I Pass   8: suminf.    0.69103 (5) obj. -168.554 iterations 7
Cbc0038I Pass   9: suminf.    0.68020 (5) obj. -168.554 iterations 1
Cbc0038I Pass  10: suminf.    2.91241 (8) obj. -168.554 iterations 10
Cbc0038I Pass  11: suminf.    1.90533 (7) obj. -168.554 iterations 4
Cbc0038I Pass  12: suminf.    0.85712 (5) obj. -168.554 iterations 3
Cbc0038I Pass  13: suminf.    1.77589 (7) obj. -168.554 iterations 7
Cbc0038I Pass  14: suminf.    1.02712 (4) obj. -168.554 iterations 1
Cbc0038I Pass  15: suminf.    0.58845 (4) obj. -168.554 iterations 1
Cbc0038I Pass  16: suminf.    0.78752 (5) obj. -168.554 iterations 1
Cbc0038I Pass  17: suminf.    0.58845 (4) obj. -168.554 iterations 1
Cbc0038I Pass  18: suminf.    1.90533 (7) obj. -168.554 iterations 7
Cbc0038I Pass  19: suminf.    0.85712 (5) obj. -168.554 iterations 3
Cbc0038I Pass  20: suminf.    0.68020 (5) obj. -168.554 iterations 1
Cbc0038I Pass  21: suminf.    2.91241 (8) obj. -168.554 iterations 10
Cbc0038I Pass  22: suminf.    1.26483 (5) obj. -168.554 iterations 11
Cbc0038I Pass  23: suminf.    1.02593 (5) obj. -168.554 iterations 1
Cbc0038I Pass  24: suminf.    1.02593 (5) obj. -168.554 iterations 0
Cbc0038I Pass  25: suminf.    1.37537 (6) obj. -168.554 iterations 8
Cbc0038I Pass  26: suminf.    1.76424 (5) obj. -168.554 iterations 6
Cbc0038I Pass  27: suminf.    1.76424 (5) obj. -168.554 iterations 0
Cbc0038I Pass  28: suminf.    1.63316 (5) obj. -168.554 iterations 4
Cbc0038I Pass  29: suminf.    1.63316 (5) obj. -168.554 iterations 0
Cbc0038I Pass  30: suminf.    1.76424 (5) obj. -168.554 iterations 5
Cbc0038I Pass  31: suminf.    2.36434 (7) obj. -168.554 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 21 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -162.697 - took 0.03 seconds
Cbc0012I Integer solution of -162.69733 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 21 columns, reduced to 18 rows 13 columns
Cbc0012I Integer solution of -164.19718 found by DiveCoefficient after 940 iterations and 0 nodes (0.08 seconds)
Cbc0031I 9 added rows had average density of 9.6666667
Cbc0013I At root node, 9 cuts changed objective from -221.26736 to -164.74827 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 134 row cuts average 4.3 elements, 5 column cuts (5 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 360 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 188 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -164.19718, took 982 iterations and 2 nodes (0.09 seconds)
Cbc0032I Strong branching done 16 times (64 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 38 (-9) columns and 264 (-125) elements
Clp1000I sum of infeasibilities 1.25688e-09 - average 3.69671e-11, 18 fixed columns
Coin0506I Presolve 14 (-20) rows, 17 (-21) columns and 77 (-187) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 1.5024568 - largest nonzero change 2.7168747e-05 ( 0.0023613256%) - largest zero change 1.3391932e-05
Clp0000I Optimal - objective value 234.16815
Clp0000I Optimal - objective value 234.16815
Coin0511I After Postsolve, objective 234.16815, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3907978 - largest nonzero change 2.1069926e-05 ( 0.0013713985%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 255.43368
Clp0000I Optimal - objective value 255.43368
Clp0000I Optimal - objective value 255.43368
Coin0511I After Postsolve, objective 255.43368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 255.4336809 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 39 columns (39 integer (39 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.920%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.6682
Cbc0038I Pass   1: suminf.    0.83333 (2) obj. -143.431 iterations 26
Cbc0038I Solution found of -132.598
Cbc0038I Rounding solution of -135.848 is better than previous of -132.598

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -135.848 to -162.697 (0.01 seconds)
Cbc0038I Round again with cutoff of -168.036
Cbc0038I Pass   2: suminf.    1.71557 (5) obj. -168.036 iterations 7
Cbc0038I Pass   3: suminf.    1.71557 (5) obj. -168.036 iterations 1
Cbc0038I Pass   4: suminf.    2.16417 (6) obj. -168.036 iterations 11
Cbc0038I Pass   5: suminf.    1.45378 (4) obj. -168.036 iterations 10
Cbc0038I Pass   6: suminf.    1.45378 (4) obj. -168.036 iterations 0
Cbc0038I Pass   7: suminf.    1.49879 (4) obj. -168.036 iterations 8
Cbc0038I Pass   8: suminf.    1.48546 (4) obj. -168.036 iterations 5
Cbc0038I Pass   9: suminf.    1.48546 (4) obj. -168.036 iterations 0
Cbc0038I Pass  10: suminf.    1.45378 (4) obj. -168.036 iterations 2
Cbc0038I Pass  11: suminf.    1.45378 (4) obj. -168.036 iterations 1
Cbc0038I Pass  12: suminf.    1.49879 (4) obj. -168.036 iterations 8
Cbc0038I Pass  13: suminf.    1.48546 (4) obj. -168.036 iterations 5
Cbc0038I Pass  14: suminf.    1.48546 (4) obj. -168.036 iterations 0
Cbc0038I Pass  15: suminf.    1.45378 (4) obj. -168.036 iterations 2
Cbc0038I Pass  16: suminf.    1.45378 (4) obj. -168.036 iterations 1
Cbc0038I Pass  17: suminf.    1.49879 (4) obj. -168.036 iterations 7
Cbc0038I Pass  18: suminf.    1.48546 (4) obj. -168.036 iterations 4
Cbc0038I Pass  19: suminf.    1.48546 (4) obj. -168.036 iterations 0
Cbc0038I Pass  20: suminf.    1.45378 (4) obj. -168.036 iterations 3
Cbc0038I Pass  21: suminf.    1.45378 (4) obj. -168.036 iterations 2
Cbc0038I Pass  22: suminf.    1.49879 (4) obj. -168.036 iterations 7
Cbc0038I Pass  23: suminf.    1.48546 (4) obj. -168.036 iterations 4
Cbc0038I Pass  24: suminf.    1.48546 (4) obj. -168.036 iterations 0
Cbc0038I Pass  25: suminf.    1.45378 (4) obj. -168.036 iterations 2
Cbc0038I Pass  26: suminf.    1.45378 (4) obj. -168.036 iterations 1
Cbc0038I Pass  27: suminf.    1.49879 (4) obj. -168.036 iterations 8
Cbc0038I Pass  28: suminf.    1.48546 (4) obj. -168.036 iterations 4
Cbc0038I Pass  29: suminf.    1.48546 (4) obj. -168.036 iterations 1
Cbc0038I Pass  30: suminf.    1.45378 (4) obj. -168.036 iterations 3
Cbc0038I Pass  31: suminf.    1.45378 (4) obj. -168.036 iterations 2
Cbc0038I Rounding solution of -164.197 is better than previous of -162.697

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -177.646
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    2.32541 (6) obj. -177.646 iterations 1
Cbc0038I Pass  32: suminf.    2.32541 (6) obj. -177.646 iterations 1
Cbc0038I Pass  33: suminf.    2.09192 (5) obj. -177.646 iterations 14
Cbc0038I Pass  34: suminf.    2.08096 (5) obj. -177.646 iterations 3
Cbc0038I Pass  35: suminf.    2.08096 (5) obj. -177.646 iterations 0
Cbc0038I Pass  36: suminf.    3.01063 (7) obj. -177.646 iterations 8
Cbc0038I Pass  37: suminf.    2.47542 (6) obj. -177.646 iterations 3
Cbc0038I Pass  38: suminf.    2.47542 (6) obj. -177.646 iterations 0
Cbc0038I Pass  39: suminf.    2.08012 (5) obj. -177.646 iterations 9
Cbc0038I Pass  40: suminf.    2.07542 (5) obj. -177.646 iterations 3
Cbc0038I Pass  41: suminf.    2.07542 (5) obj. -177.646 iterations 0
Cbc0038I Pass  42: suminf.    2.71379 (8) obj. -177.646 iterations 15
Cbc0038I Pass  43: suminf.    1.87212 (5) obj. -177.646 iterations 4
Cbc0038I Pass  44: suminf.    1.87285 (5) obj. -177.646 iterations 5
Cbc0038I Pass  45: suminf.    1.87212 (5) obj. -177.646 iterations 3
Cbc0038I Pass  46: suminf.    4.05463 (11) obj. -177.646 iterations 11
Cbc0038I Pass  47: suminf.    3.12255 (9) obj. -177.646 iterations 9
Cbc0038I Pass  48: suminf.    3.12255 (9) obj. -177.646 iterations 0
Cbc0038I Pass  49: suminf.    3.12255 (9) obj. -177.646 iterations 0
Cbc0038I Pass  50: suminf.    3.28051 (10) obj. -177.646 iterations 5
Cbc0038I Pass  51: suminf.    2.81005 (8) obj. -177.646 iterations 3
Cbc0038I Pass  52: suminf.    2.81005 (8) obj. -177.646 iterations 0
Cbc0038I Pass  53: suminf.    2.81005 (8) obj. -177.646 iterations 0
Cbc0038I Pass  54: suminf.    4.04185 (12) obj. -177.646 iterations 5
Cbc0038I Pass  55: suminf.    3.41348 (10) obj. -177.646 iterations 5
Cbc0038I Pass  56: suminf.    3.68660 (11) obj. -177.646 iterations 6
Cbc0038I Pass  57: suminf.    3.20241 (10) obj. -177.646 iterations 6
Cbc0038I Pass  58: suminf.    3.17139 (10) obj. -177.646 iterations 1
Cbc0038I Pass  59: suminf.    3.14265 (9) obj. -177.646 iterations 10
Cbc0038I Pass  60: suminf.    2.29214 (8) obj. -177.646 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 9 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -164.197 - took 0.02 seconds
Cbc0012I Integer solution of -164.19718 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 12
Cbc0013I At root node, 2 cuts changed objective from -216.0847 to -166.61283 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 70 row cuts average 2.0 elements, 18 column cuts (18 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -164.19718, took 26 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

