Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-14) rows, 29 (-4) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 5.86114e-05 - average 1.14924e-06, 9 fixed columns
Coin0506I Presolve 30 (-21) rows, 18 (-11) columns and 89 (-64) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 2.3804497 - largest nonzero change 1.4570014e-05 ( 0.0010292432%) - largest zero change 2.3563931e-05
Clp0000I Optimal - objective value 154.65111
Clp0000I Optimal - objective value 154.65111
Coin0511I After Postsolve, objective 154.65111, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 154.65111
Clp0000I Optimal - objective value 154.65111
Clp0000I Optimal - objective value 154.65111
Coin0511I After Postsolve, objective 154.65111, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.6511115 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.260%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.40634
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -61.8823 iterations 15
Cbc0038I Solution found of -61.8823
Cbc0038I Relaxing continuous gives -61.8823
Cbc0038I Rounding solution of -87.5751 is better than previous of -61.8823

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -90.5753
Cbc0038I Pass   2: suminf.    0.72232 (2) obj. -90.5753 iterations 1
Cbc0038I Pass   3: suminf.    0.41455 (2) obj. -90.5753 iterations 2
Cbc0038I Pass   4: suminf.    0.41455 (2) obj. -90.5753 iterations 1
Cbc0038I Pass   5: suminf.    0.17500 (1) obj. -98.2109 iterations 4
Cbc0038I Pass   6: suminf.    0.27271 (1) obj. -90.5753 iterations 1
Cbc0038I Pass   7: suminf.    1.40999 (4) obj. -90.5753 iterations 9
Cbc0038I Pass   8: suminf.    0.74151 (2) obj. -90.5753 iterations 4
Cbc0038I Pass   9: suminf.    0.46250 (1) obj. -90.5753 iterations 2
Cbc0038I Pass  10: suminf.    0.44669 (1) obj. -90.5753 iterations 1
Cbc0038I Pass  11: suminf.    1.17973 (4) obj. -90.5753 iterations 6
Cbc0038I Pass  12: suminf.    1.13350 (5) obj. -90.5753 iterations 3
Cbc0038I Pass  13: suminf.    0.27271 (1) obj. -90.5753 iterations 5
Cbc0038I Pass  14: suminf.    0.17500 (1) obj. -98.2109 iterations 2
Cbc0038I Pass  15: suminf.    0.27271 (1) obj. -90.5753 iterations 2
Cbc0038I Pass  16: suminf.    1.80742 (6) obj. -90.5753 iterations 8
Cbc0038I Pass  17: suminf.    0.73371 (3) obj. -90.5753 iterations 2
Cbc0038I Pass  18: suminf.    0.88660 (2) obj. -98.5961 iterations 5
Cbc0038I Pass  19: suminf.    0.46250 (1) obj. -91.8111 iterations 1
Cbc0038I Pass  20: suminf.    0.44669 (1) obj. -90.5753 iterations 2
Cbc0038I Pass  21: suminf.    0.24030 (2) obj. -90.5753 iterations 11
Cbc0038I Pass  22: suminf.    0.24030 (2) obj. -90.5753 iterations 0
Cbc0038I Pass  23: suminf.    0.45491 (2) obj. -90.5753 iterations 4
Cbc0038I Pass  24: suminf.    0.45491 (2) obj. -90.5753 iterations 0
Cbc0038I Pass  25: suminf.    0.27417 (3) obj. -90.5753 iterations 4
Cbc0038I Pass  26: suminf.    0.91362 (3) obj. -90.5753 iterations 10
Cbc0038I Pass  27: suminf.    0.74646 (3) obj. -90.5753 iterations 5
Cbc0038I Pass  28: suminf.    1.39498 (5) obj. -90.5753 iterations 7
Cbc0038I Pass  29: suminf.    1.15623 (3) obj. -90.5753 iterations 6
Cbc0038I Pass  30: suminf.    0.91100 (3) obj. -90.5753 iterations 7
Cbc0038I Pass  31: suminf.    0.85061 (3) obj. -90.5753 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -87.5751 - took 0.02 seconds
Cbc0012I Integer solution of -87.57507 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 22 rows 15 columns
Cbc0031I 6 added rows had average density of 23.666667
Cbc0013I At root node, 6 cuts changed objective from -117.57672 to -106.90023 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 501 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 496 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -87.57507, took 2493 iterations and 36 nodes (0.24 seconds)
Cbc0032I Strong branching done 342 times (2044 iterations), fathomed 5 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-19) rows, 50 (-12) columns and 470 (-178) elements
Clp1000I sum of infeasibilities 2.44635e-08 - average 5.43633e-10, 40 fixed columns
Coin0506I Presolve 9 (-36) rows, 10 (-40) columns and 33 (-437) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 2.898641 - largest nonzero change 2.6968769e-05 ( 0.0019019041%) - largest zero change 2.5938194e-05
Clp0000I Optimal - objective value 139.68069
Clp0000I Optimal - objective value 139.68069
Coin0511I After Postsolve, objective 139.68069, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4159563 - largest nonzero change 2.3734954e-05 ( 0.0019019041%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 174.33298
Clp0000I Optimal - objective value 174.33298
Clp0000I Optimal - objective value 174.33298
Coin0511I After Postsolve, objective 174.33298, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 174.3329822 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 48 columns (48 integer (48 of which binary)) and 445 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.171%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.02455
Cbc0038I Pass   1: suminf.    0.85569 (10) obj. -72.8107 iterations 11
Cbc0038I Pass   2: suminf.    0.85569 (10) obj. -72.8107 iterations 1
Cbc0038I Solution found of -60.8664
Cbc0038I Rounding solution of -83.1779 is better than previous of -60.8664

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -87.0689
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.09547 (17) obj. -87.0689 iterations 4
Cbc0038I Pass   4: suminf.    1.53311 (13) obj. -87.0689 iterations 2
Cbc0038I Pass   5: suminf.    1.03800 (4) obj. -87.0689 iterations 22
Cbc0038I Pass   6: suminf.    0.75176 (4) obj. -87.0689 iterations 1
Cbc0038I Pass   7: suminf.    0.84537 (3) obj. -87.0689 iterations 2
Cbc0038I Pass   8: suminf.    0.67514 (2) obj. -87.0689 iterations 1
Cbc0038I Pass   9: suminf.    0.21250 (1) obj. -97.4158 iterations 1
Cbc0038I Pass  10: suminf.    0.09795 (2) obj. -87.0689 iterations 2
Cbc0038I Pass  11: suminf.    0.36464 (2) obj. -87.0689 iterations 1
Cbc0038I Pass  12: suminf.    1.02366 (7) obj. -87.0689 iterations 8
Cbc0038I Pass  13: suminf.    0.95922 (6) obj. -87.0689 iterations 1
Cbc0038I Pass  14: suminf.    0.64015 (2) obj. -87.0689 iterations 13
Cbc0038I Pass  15: suminf.    0.07101 (1) obj. -87.0689 iterations 1
Cbc0038I Pass  16: suminf.    0.11250 (1) obj. -90.311 iterations 1
Cbc0038I Pass  17: suminf.    1.27089 (5) obj. -100.812 iterations 8
Cbc0038I Pass  18: suminf.    1.18077 (4) obj. -100.127 iterations 3
Cbc0038I Pass  19: suminf.    0.09703 (1) obj. -87.0689 iterations 8
Cbc0038I Pass  20: suminf.    0.14444 (1) obj. -90.7745 iterations 1
Cbc0038I Pass  21: suminf.    0.61439 (4) obj. -87.0689 iterations 7
Cbc0038I Pass  22: suminf.    0.60851 (5) obj. -87.0689 iterations 4
Cbc0038I Pass  23: suminf.    0.91219 (2) obj. -87.0689 iterations 6
Cbc0038I Pass  24: suminf.    0.47500 (1) obj. -89.2538 iterations 3
Cbc0038I Pass  25: suminf.    0.44704 (1) obj. -87.0689 iterations 1
Cbc0038I Pass  26: suminf.    1.48227 (7) obj. -87.0689 iterations 13
Cbc0038I Pass  27: suminf.    0.69879 (5) obj. -87.0689 iterations 5
Cbc0038I Pass  28: suminf.    0.41346 (3) obj. -87.0689 iterations 6
Cbc0038I Pass  29: suminf.    0.35688 (2) obj. -87.0689 iterations 2
Cbc0038I Pass  30: suminf.    0.63587 (2) obj. -90.611 iterations 3
Cbc0038I Pass  31: suminf.    3.30029 (12) obj. -87.0689 iterations 21
Cbc0038I Pass  32: suminf.    2.25376 (10) obj. -87.0689 iterations 5
Cbc0038I Rounding solution of -84.0409 is better than previous of -83.1779

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 26 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -84.0409 to -87.5751 (0.06 seconds)
Cbc0038I Round again with cutoff of -94.4776
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.23775 (17) obj. -94.4776 iterations 0
Cbc0038I Pass  33: suminf.    0.39870 (3) obj. -94.4776 iterations 27
Cbc0038I Pass  34: suminf.    0.39870 (3) obj. -94.4776 iterations 0
Cbc0038I Pass  35: suminf.    0.97234 (3) obj. -94.4776 iterations 3
Cbc0038I Pass  36: suminf.    0.97234 (3) obj. -94.4776 iterations 0
Cbc0038I Pass  37: suminf.    0.39870 (3) obj. -94.4776 iterations 3
Cbc0038I Pass  38: suminf.    2.26184 (7) obj. -94.4776 iterations 15
Cbc0038I Pass  39: suminf.    1.89795 (6) obj. -94.4776 iterations 4
Cbc0038I Pass  40: suminf.    1.61347 (7) obj. -94.4776 iterations 3
Cbc0038I Pass  41: suminf.    1.50982 (5) obj. -94.4776 iterations 7
Cbc0038I Pass  42: suminf.    1.29766 (4) obj. -94.4776 iterations 5
Cbc0038I Pass  43: suminf.    1.28380 (4) obj. -94.4776 iterations 5
Cbc0038I Pass  44: suminf.    1.28362 (4) obj. -94.4776 iterations 2
Cbc0038I Pass  45: suminf.    1.31002 (5) obj. -94.4776 iterations 5
Cbc0038I Pass  46: suminf.    1.19279 (4) obj. -94.4776 iterations 7
Cbc0038I Pass  47: suminf.    1.30743 (6) obj. -94.4776 iterations 5
Cbc0038I Pass  48: suminf.    1.17985 (5) obj. -94.4776 iterations 5
Cbc0038I Pass  49: suminf.    1.33350 (4) obj. -94.4776 iterations 6
Cbc0038I Pass  50: suminf.    1.04896 (5) obj. -94.4776 iterations 5
Cbc0038I Pass  51: suminf.    1.14626 (5) obj. -94.4776 iterations 7
Cbc0038I Pass  52: suminf.    1.04264 (4) obj. -94.4776 iterations 7
Cbc0038I Pass  53: suminf.    1.34079 (4) obj. -94.4776 iterations 5
Cbc0038I Pass  54: suminf.    1.33350 (4) obj. -94.4776 iterations 2
Cbc0038I Pass  55: suminf.    1.04896 (5) obj. -94.4776 iterations 4
Cbc0038I Pass  56: suminf.    1.14626 (5) obj. -94.4776 iterations 7
Cbc0038I Pass  57: suminf.    1.04264 (4) obj. -94.4776 iterations 7
Cbc0038I Pass  58: suminf.    1.34079 (4) obj. -94.4776 iterations 5
Cbc0038I Pass  59: suminf.    1.33350 (4) obj. -94.4776 iterations 2
Cbc0038I Pass  60: suminf.    1.04896 (5) obj. -94.4776 iterations 4
Cbc0038I Pass  61: suminf.    1.14626 (5) obj. -94.4776 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 20 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -87.5751 - took 0.05 seconds
Cbc0012I Integer solution of -87.57507 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 42 rows 48 columns, reduced to 14 rows 18 columns
Cbc0031I 18 added rows had average density of 17.722222
Cbc0013I At root node, 18 cuts changed objective from -122.08752 to -101.55607 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1524 row cuts average 2.9 elements, 9 column cuts (9 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 395 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 67 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 125 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 55 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -87.57507 best solution, best possible -101.55607 (1.59 seconds)
Cbc0010I After 11 nodes, 7 on tree, -87.57507 best solution, best possible -101.55607 (2.33 seconds)
Cbc0010I After 31 nodes, 1 on tree, -87.57507 best solution, best possible -101.55607 (3.10 seconds)
Cbc0001I Search completed - best objective -87.57507, took 2625 iterations and 32 nodes (3.21 seconds)
Cbc0032I Strong branching done 520 times (3977 iterations), fathomed 3 nodes and fixed 5 variables
Cbc0035I Maximum depth 9, 24 variables fixed on reduced cost
Total time (CPU seconds):       2.02   (Wallclock seconds):       3.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-14) rows, 29 (-4) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 5.86114e-05 - average 1.14924e-06, 9 fixed columns
Coin0506I Presolve 30 (-21) rows, 18 (-11) columns and 89 (-64) elements
Clp0029I End of values pass after 18 iterations
Clp0014I Perturbing problem by 0.001% of 2.3804497 - largest nonzero change 1.4570014e-05 ( 0.0010292432%) - largest zero change 2.3563931e-05
Clp0000I Optimal - objective value 154.65111
Clp0000I Optimal - objective value 154.65111
Coin0511I After Postsolve, objective 154.65111, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 154.65111
Clp0000I Optimal - objective value 154.65111
Clp0000I Optimal - objective value 154.65111
Coin0511I After Postsolve, objective 154.65111, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 154.6511115 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 163 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.260%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.40634
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -61.8823 iterations 15
Cbc0038I Solution found of -61.8823
Cbc0038I Relaxing continuous gives -61.8823
Cbc0038I Rounding solution of -87.5751 is better than previous of -61.8823

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -90.5753
Cbc0038I Pass   2: suminf.    0.72232 (2) obj. -90.5753 iterations 1
Cbc0038I Pass   3: suminf.    0.41455 (2) obj. -90.5753 iterations 2
Cbc0038I Pass   4: suminf.    0.41455 (2) obj. -90.5753 iterations 1
Cbc0038I Pass   5: suminf.    0.17500 (1) obj. -98.2109 iterations 4
Cbc0038I Pass   6: suminf.    0.27271 (1) obj. -90.5753 iterations 1
Cbc0038I Pass   7: suminf.    1.40999 (4) obj. -90.5753 iterations 9
Cbc0038I Pass   8: suminf.    0.74151 (2) obj. -90.5753 iterations 4
Cbc0038I Pass   9: suminf.    0.46250 (1) obj. -90.5753 iterations 2
Cbc0038I Pass  10: suminf.    0.44669 (1) obj. -90.5753 iterations 1
Cbc0038I Pass  11: suminf.    1.17973 (4) obj. -90.5753 iterations 6
Cbc0038I Pass  12: suminf.    1.13350 (5) obj. -90.5753 iterations 3
Cbc0038I Pass  13: suminf.    0.27271 (1) obj. -90.5753 iterations 5
Cbc0038I Pass  14: suminf.    0.17500 (1) obj. -98.2109 iterations 2
Cbc0038I Pass  15: suminf.    0.27271 (1) obj. -90.5753 iterations 2
Cbc0038I Pass  16: suminf.    1.80742 (6) obj. -90.5753 iterations 8
Cbc0038I Pass  17: suminf.    0.73371 (3) obj. -90.5753 iterations 2
Cbc0038I Pass  18: suminf.    0.88660 (2) obj. -98.5961 iterations 5
Cbc0038I Pass  19: suminf.    0.46250 (1) obj. -91.8111 iterations 1
Cbc0038I Pass  20: suminf.    0.44669 (1) obj. -90.5753 iterations 2
Cbc0038I Pass  21: suminf.    0.24030 (2) obj. -90.5753 iterations 11
Cbc0038I Pass  22: suminf.    0.24030 (2) obj. -90.5753 iterations 0
Cbc0038I Pass  23: suminf.    0.45491 (2) obj. -90.5753 iterations 4
Cbc0038I Pass  24: suminf.    0.45491 (2) obj. -90.5753 iterations 0
Cbc0038I Pass  25: suminf.    0.27417 (3) obj. -90.5753 iterations 4
Cbc0038I Pass  26: suminf.    0.91362 (3) obj. -90.5753 iterations 10
Cbc0038I Pass  27: suminf.    0.74646 (3) obj. -90.5753 iterations 5
Cbc0038I Pass  28: suminf.    1.39498 (5) obj. -90.5753 iterations 7
Cbc0038I Pass  29: suminf.    1.15623 (3) obj. -90.5753 iterations 6
Cbc0038I Pass  30: suminf.    0.91100 (3) obj. -90.5753 iterations 7
Cbc0038I Pass  31: suminf.    0.85061 (3) obj. -90.5753 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -87.5751 - took 0.03 seconds
Cbc0012I Integer solution of -87.57507 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 22 rows 15 columns
Cbc0031I 6 added rows had average density of 23.666667
Cbc0013I At root node, 6 cuts changed objective from -117.57672 to -106.90023 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 501 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 496 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -87.57507, took 2493 iterations and 36 nodes (0.27 seconds)
Cbc0032I Strong branching done 342 times (2044 iterations), fathomed 5 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 48 (-15) columns and 435 (-214) elements
Clp1000I sum of infeasibilities 2.05884e-06 - average 4.788e-08, 41 fixed columns
Coin0506I Presolve 6 (-37) rows, 5 (-43) columns and 17 (-418) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 139.68069
Clp0000I Optimal - objective value 139.68069
Coin0511I After Postsolve, objective 139.68069, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4116919 - largest nonzero change 1.9170791e-05 ( 0.0015420975%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 174.33298
Clp0000I Optimal - objective value 174.33298
Clp0000I Optimal - objective value 174.33298
Coin0511I After Postsolve, objective 174.33298, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 174.3329822 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 48 columns (48 integer (48 of which binary)) and 445 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.171%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.00355
Cbc0038I Pass   1: suminf.    1.14115 (10) obj. -72.3252 iterations 9
Cbc0038I Pass   2: suminf.    1.14115 (10) obj. -72.3252 iterations 1
Cbc0038I Solution found of -60.8664
Cbc0038I Rounding solution of -83.1779 is better than previous of -60.8664

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -87.0732
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.25396 (17) obj. -87.0732 iterations 1
Cbc0038I Pass   4: suminf.    1.06178 (3) obj. -87.0732 iterations 26
Cbc0038I Pass   5: suminf.    0.44214 (2) obj. -87.0732 iterations 3
Cbc0038I Pass   6: suminf.    0.44214 (2) obj. -87.0732 iterations 1
Cbc0038I Pass   7: suminf.    0.37113 (2) obj. -94.1152 iterations 3
Cbc0038I Pass   8: suminf.    0.19386 (2) obj. -87.0732 iterations 2
Cbc0038I Pass   9: suminf.    0.58110 (2) obj. -87.0732 iterations 6
Cbc0038I Pass  10: suminf.    0.30613 (2) obj. -87.0732 iterations 8
Cbc0038I Pass  11: suminf.    0.37847 (2) obj. -87.0732 iterations 2
Cbc0038I Pass  12: suminf.    1.52980 (7) obj. -90.9253 iterations 18
Cbc0038I Pass  13: suminf.    0.96984 (6) obj. -87.8781 iterations 1
Cbc0038I Pass  14: suminf.    0.75432 (3) obj. -87.0732 iterations 15
Cbc0038I Pass  15: suminf.    0.43960 (2) obj. -87.0732 iterations 5
Cbc0038I Pass  16: suminf.    0.18538 (2) obj. -87.0732 iterations 1
Cbc0038I Pass  17: suminf.    0.53859 (2) obj. -87.0732 iterations 5
Cbc0038I Pass  18: suminf.    0.14706 (1) obj. -92.2457 iterations 3
Cbc0038I Pass  19: suminf.    0.14706 (1) obj. -92.2457 iterations 0
Cbc0038I Pass  20: suminf.    0.28687 (2) obj. -92.3318 iterations 3
Cbc0038I Pass  21: suminf.    0.14706 (1) obj. -92.2457 iterations 2
Cbc0038I Pass  22: suminf.    1.56297 (6) obj. -87.0732 iterations 12
Cbc0038I Pass  23: suminf.    1.43638 (4) obj. -88.3328 iterations 2
Cbc0038I Pass  24: suminf.    0.49077 (2) obj. -87.0732 iterations 9
Cbc0038I Pass  25: suminf.    0.50994 (2) obj. -87.0732 iterations 1
Cbc0038I Pass  26: suminf.    5.07641 (16) obj. -87.0732 iterations 21
Cbc0038I Pass  27: suminf.    2.08674 (9) obj. -87.0732 iterations 11
Cbc0038I Pass  28: suminf.    2.08674 (9) obj. -87.0732 iterations 1
Cbc0038I Pass  29: suminf.    1.25565 (3) obj. -87.0732 iterations 16
Cbc0038I Pass  30: suminf.    0.69608 (2) obj. -87.0732 iterations 6
Cbc0038I Pass  31: suminf.    0.71136 (2) obj. -87.0732 iterations 3
Cbc0038I Pass  32: suminf.    0.71136 (2) obj. -87.0732 iterations 0
Cbc0038I Rounding solution of -84.0409 is better than previous of -83.1779

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 29 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -84.0409 to -87.5751 (0.05 seconds)
Cbc0038I Round again with cutoff of -94.4861
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.31066 (17) obj. -94.4861 iterations 0
Cbc0038I Pass  33: suminf.    0.39935 (3) obj. -94.4861 iterations 27
Cbc0038I Pass  34: suminf.    0.39935 (3) obj. -94.4861 iterations 1
Cbc0038I Pass  35: suminf.    0.97326 (3) obj. -94.4861 iterations 2
Cbc0038I Pass  36: suminf.    0.97326 (3) obj. -94.4861 iterations 1
Cbc0038I Pass  37: suminf.    0.39935 (3) obj. -94.4861 iterations 3
Cbc0038I Pass  38: suminf.    2.16742 (7) obj. -94.4861 iterations 15
Cbc0038I Pass  39: suminf.    1.76291 (6) obj. -94.4861 iterations 4
Cbc0038I Pass  40: suminf.    1.58207 (7) obj. -94.4861 iterations 2
Cbc0038I Pass  41: suminf.    1.51283 (5) obj. -94.4861 iterations 6
Cbc0038I Pass  42: suminf.    1.29978 (4) obj. -94.4861 iterations 5
Cbc0038I Pass  43: suminf.    1.33765 (4) obj. -94.4861 iterations 6
Cbc0038I Pass  44: suminf.    1.33788 (4) obj. -94.4861 iterations 1
Cbc0038I Pass  45: suminf.    1.31303 (5) obj. -94.4861 iterations 5
Cbc0038I Pass  46: suminf.    1.19492 (4) obj. -94.4861 iterations 4
Cbc0038I Pass  47: suminf.    1.42175 (6) obj. -94.4861 iterations 4
Cbc0038I Pass  48: suminf.    1.27205 (5) obj. -94.4861 iterations 3
Cbc0038I Pass  49: suminf.    1.36224 (4) obj. -94.4861 iterations 4
Cbc0038I Pass  50: suminf.    1.13416 (5) obj. -94.4861 iterations 4
Cbc0038I Pass  51: suminf.    1.14927 (5) obj. -94.4861 iterations 3
Cbc0038I Pass  52: suminf.    1.04476 (4) obj. -94.4861 iterations 4
Cbc0038I Pass  53: suminf.    1.39514 (4) obj. -94.4861 iterations 3
Cbc0038I Pass  54: suminf.    1.62180 (5) obj. -94.4861 iterations 8
Cbc0038I Pass  55: suminf.    1.44245 (4) obj. -94.4861 iterations 2
Cbc0038I Pass  56: suminf.    1.08481 (5) obj. -94.4861 iterations 3
Cbc0038I Pass  57: suminf.    0.76670 (4) obj. -94.4861 iterations 6
Cbc0038I Pass  58: suminf.    0.64823 (4) obj. -94.4861 iterations 3
Cbc0038I Pass  59: suminf.    0.92899 (3) obj. -94.4861 iterations 4
Cbc0038I Pass  60: suminf.    0.77011 (2) obj. -94.4861 iterations 1
Cbc0038I Pass  61: suminf.    2.75042 (7) obj. -94.4861 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 48 columns, reduced to 26 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -87.5751 - took 0.06 seconds
Cbc0012I Integer solution of -87.57509 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 42 rows 48 columns, reduced to 15 rows 20 columns
Cbc0031I 19 added rows had average density of 14.842105
Cbc0013I At root node, 19 cuts changed objective from -122.12997 to -101.95967 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1333 row cuts average 2.6 elements, 8 column cuts (8 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 468 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 88 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 18 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 118 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.810 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -87.57509 best solution, best possible -101.95967 (1.72 seconds)
Cbc0010I After 6 nodes, 7 on tree, -87.57509 best solution, best possible -101.95967 (2.49 seconds)
Cbc0010I After 22 nodes, 3 on tree, -87.57509 best solution, best possible -101.95967 (3.20 seconds)
Cbc0010I After 37 nodes, 1 on tree, -87.57509 best solution, best possible -101.95967 (3.90 seconds)
Cbc0001I Search completed - best objective -87.57508999999999, took 3641 iterations and 42 nodes (4.10 seconds)
Cbc0032I Strong branching done 534 times (4581 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 8, 58 variables fixed on reduced cost
Total time (CPU seconds):       2.63   (Wallclock seconds):       4.10

