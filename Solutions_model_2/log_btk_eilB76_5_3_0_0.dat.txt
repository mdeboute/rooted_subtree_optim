Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 70 (-8) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 1.59709e-05 - average 1.23805e-07, 15 fixed columns
Coin0506I Presolve 100 (-29) rows, 55 (-15) columns and 302 (-88) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 2.1589796 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 53.70857
Clp0000I Optimal - objective value 53.70857
Coin0511I After Postsolve, objective 53.70857, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.70857
Clp0000I Optimal - objective value 53.70857
Clp0000I Optimal - objective value 53.70857
Coin0511I After Postsolve, objective 53.70857, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.7085703 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 70 columns (69 integer (69 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.229%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.29556
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.89348 iterations 36
Cbc0038I Solution found of 0.89348
Cbc0038I Relaxing continuous gives 0.89348
Cbc0038I Rounding solution of -21.7389 is better than previous of 0.89348

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 57 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -21.7389 to -27.8349 (0.04 seconds)
Cbc0038I Round again with cutoff of -30.2376
Cbc0038I Pass   2: suminf.    1.35135 (5) obj. -30.2376 iterations 11
Cbc0038I Pass   3: suminf.    1.13134 (4) obj. -30.2376 iterations 3
Cbc0038I Pass   4: suminf.    0.89808 (2) obj. -30.2376 iterations 10
Cbc0038I Pass   5: suminf.    0.81791 (2) obj. -30.2376 iterations 2
Cbc0038I Pass   6: suminf.    0.69253 (2) obj. -30.2376 iterations 3
Cbc0038I Pass   7: suminf.    0.87374 (2) obj. -30.2376 iterations 1
Cbc0038I Pass   8: suminf.    1.54355 (5) obj. -30.2376 iterations 13
Cbc0038I Pass   9: suminf.    0.89651 (4) obj. -30.2376 iterations 6
Cbc0038I Pass  10: suminf.    1.46894 (8) obj. -30.2376 iterations 13
Cbc0038I Pass  11: suminf.    1.46894 (8) obj. -30.2376 iterations 0
Cbc0038I Pass  12: suminf.    1.01356 (3) obj. -30.2376 iterations 16
Cbc0038I Pass  13: suminf.    0.97576 (3) obj. -30.2376 iterations 1
Cbc0038I Pass  14: suminf.    1.09946 (6) obj. -30.2376 iterations 10
Cbc0038I Pass  15: suminf.    1.07770 (6) obj. -30.2376 iterations 4
Cbc0038I Pass  16: suminf.    1.01356 (3) obj. -30.2376 iterations 14
Cbc0038I Pass  17: suminf.    1.53647 (7) obj. -30.2376 iterations 13
Cbc0038I Pass  18: suminf.    0.82509 (4) obj. -30.2376 iterations 13
Cbc0038I Pass  19: suminf.    0.82509 (4) obj. -30.2376 iterations 0
Cbc0038I Pass  20: suminf.    1.10142 (3) obj. -30.2376 iterations 5
Cbc0038I Pass  21: suminf.    0.83571 (3) obj. -30.2376 iterations 3
Cbc0038I Pass  22: suminf.    0.92426 (5) obj. -30.2376 iterations 9
Cbc0038I Pass  23: suminf.    0.90866 (3) obj. -30.2376 iterations 6
Cbc0038I Pass  24: suminf.    1.30467 (5) obj. -30.2376 iterations 9
Cbc0038I Pass  25: suminf.    0.98555 (3) obj. -30.2376 iterations 8
Cbc0038I Pass  26: suminf.    0.91333 (3) obj. -30.2376 iterations 1
Cbc0038I Pass  27: suminf.    2.84478 (9) obj. -30.2376 iterations 18
Cbc0038I Pass  28: suminf.    1.91746 (8) obj. -30.2376 iterations 12
Cbc0038I Pass  29: suminf.    1.09241 (5) obj. -30.2376 iterations 17
Cbc0038I Pass  30: suminf.    0.49877 (3) obj. -30.2376 iterations 3
Cbc0038I Pass  31: suminf.    0.91333 (3) obj. -30.2376 iterations 8
Cbc0038I Rounding solution of -28.3462 is better than previous of -27.8349

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 67 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -34.5624
Cbc0038I Pass  31: suminf.    1.45297 (5) obj. -34.5624 iterations 4
Cbc0038I Pass  32: suminf.    1.45297 (5) obj. -34.5624 iterations 0
Cbc0038I Pass  33: suminf.    1.00000 (4) obj. -34.5624 iterations 10
Cbc0038I Pass  34: suminf.    0.96606 (3) obj. -34.5624 iterations 2
Cbc0038I Pass  35: suminf.    1.00000 (3) obj. -34.5624 iterations 4
Cbc0038I Pass  36: suminf.    3.56816 (10) obj. -34.5624 iterations 16
Cbc0038I Pass  37: suminf.    1.40609 (5) obj. -34.5624 iterations 15
Cbc0038I Pass  38: suminf.    0.84682 (4) obj. -34.5624 iterations 9
Cbc0038I Pass  39: suminf.    1.31758 (5) obj. -34.5624 iterations 3
Cbc0038I Pass  40: suminf.    2.44010 (11) obj. -34.5624 iterations 12
Cbc0038I Pass  41: suminf.    1.31758 (5) obj. -34.5624 iterations 16
Cbc0038I Pass  42: suminf.    1.53134 (8) obj. -34.5624 iterations 14
Cbc0038I Pass  43: suminf.    1.26873 (6) obj. -34.5624 iterations 13
Cbc0038I Pass  44: suminf.    1.50065 (7) obj. -34.5624 iterations 18
Cbc0038I Pass  45: suminf.    1.50065 (7) obj. -34.5624 iterations 0
Cbc0038I Pass  46: suminf.    1.94189 (8) obj. -34.5624 iterations 14
Cbc0038I Pass  47: suminf.    1.34777 (6) obj. -34.5624 iterations 15
Cbc0038I Pass  48: suminf.    2.13961 (7) obj. -34.5624 iterations 19
Cbc0038I Pass  49: suminf.    1.31758 (5) obj. -34.5624 iterations 26
Cbc0038I Pass  50: suminf.    0.84682 (4) obj. -34.5624 iterations 11
Cbc0038I Pass  51: suminf.    1.31758 (5) obj. -34.5624 iterations 3
Cbc0038I Pass  52: suminf.    2.43144 (9) obj. -34.5624 iterations 11
Cbc0038I Pass  53: suminf.    1.82156 (8) obj. -34.5624 iterations 14
Cbc0038I Pass  54: suminf.    1.45237 (6) obj. -34.5624 iterations 13
Cbc0038I Pass  55: suminf.    1.34777 (6) obj. -34.5624 iterations 12
Cbc0038I Pass  56: suminf.    1.50065 (7) obj. -34.5624 iterations 15
Cbc0038I Pass  57: suminf.    1.50065 (7) obj. -34.5624 iterations 0
Cbc0038I Pass  58: suminf.    1.94189 (8) obj. -34.5624 iterations 12
Cbc0038I Pass  59: suminf.    3.76446 (12) obj. -34.5624 iterations 16
Cbc0038I Pass  60: suminf.    1.95972 (8) obj. -34.5624 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -28.3462 - took 0.07 seconds
Cbc0012I Integer solution of -28.3462 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 127 rows 70 columns, reduced to 58 rows 32 columns
Cbc0031I 15 added rows had average density of 61.133333
Cbc0013I At root node, 15 cuts changed objective from -51.861546 to -43.995351 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4985 row cuts average 4.6 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1171 row cuts average 69.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 62.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 23 nodes, 11 on tree, -28.3462 best solution, best possible -43.995256 (0.68 seconds)
Cbc0001I Search completed - best objective -28.3462, took 6520 iterations and 40 nodes (0.71 seconds)
Cbc0032I Strong branching done 534 times (10092 iterations), fathomed 1 nodes and fixed 24 variables
Cbc0035I Maximum depth 17, 83 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 114 (-38) columns and 1864 (-1439) elements
Clp1000I sum of infeasibilities 0 - average 0, 111 fixed columns
Coin0506I Presolve 2 (-103) rows, 3 (-111) columns and 6 (-1858) elements
Clp0006I 0  Obj 168.32616 Dual inf 0.2615254 (3)
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 168.32647
Clp0000I Optimal - objective value 168.32647
Coin0511I After Postsolve, objective 168.32647, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 168.32647 Dual inf 85.403996 (45)
Clp0014I Perturbing problem by 0.001% of 1.867294 - largest nonzero change 2.4494631e-05 ( 0.0024494631%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 230.77234
Clp0000I Optimal - objective value 230.77234
Clp0000I Optimal - objective value 230.77234
Coin0511I After Postsolve, objective 230.77234, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 230.7723449 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 67 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 114 columns (114 integer (114 of which binary)) and 1904 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.933%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 5.34414
Cbc0038I Pass   1: suminf.    3.02927 (30) obj. -203.765 iterations 10
Cbc0038I Pass   2: suminf.    1.24880 (17) obj. -189.997 iterations 13
Cbc0038I Pass   3: suminf.    0.38239 (6) obj. -175.23 iterations 11
Cbc0038I Solution found of -167.736
Cbc0038I Rounding solution of -169.925 is better than previous of -167.736

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -174.485
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.02927 (30) obj. -203.765 iterations 0
Cbc0038I Pass   5: suminf.    1.24880 (17) obj. -189.997 iterations 13
Cbc0038I Pass   6: suminf.    0.45019 (7) obj. -176.163 iterations 10
Cbc0038I Pass   7: suminf.    0.21303 (4) obj. -174.485 iterations 10
Cbc0038I Pass   8: suminf.    0.21622 (1) obj. -174.925 iterations 4
Cbc0038I Pass   9: suminf.    0.20900 (1) obj. -174.485 iterations 1
Cbc0038I Pass  10: suminf.    1.52279 (12) obj. -174.485 iterations 17
Cbc0038I Pass  11: suminf.    1.19099 (10) obj. -174.485 iterations 11
Cbc0038I Pass  12: suminf.    0.32623 (2) obj. -174.485 iterations 12
Cbc0038I Pass  13: suminf.    1.12780 (12) obj. -174.485 iterations 16
Cbc0038I Pass  14: suminf.    0.96092 (12) obj. -174.485 iterations 3
Cbc0038I Pass  15: suminf.    0.32697 (3) obj. -174.485 iterations 17
Cbc0038I Pass  16: suminf.    0.26998 (2) obj. -174.485 iterations 2
Cbc0038I Pass  17: suminf.    0.40286 (2) obj. -174.485 iterations 3
Cbc0038I Pass  18: suminf.    0.40286 (2) obj. -174.485 iterations 0
Cbc0038I Pass  19: suminf.    0.28829 (2) obj. -176.709 iterations 2
Cbc0038I Pass  20: suminf.    0.23887 (2) obj. -174.485 iterations 1
Cbc0038I Pass  21: suminf.    1.18929 (8) obj. -174.485 iterations 17
Cbc0038I Pass  22: suminf.    1.18067 (8) obj. -174.485 iterations 4
Cbc0038I Pass  23: suminf.    0.25943 (3) obj. -174.485 iterations 11
Cbc0038I Pass  24: suminf.    0.25943 (3) obj. -174.485 iterations 0
Cbc0038I Pass  25: suminf.    0.69624 (2) obj. -174.485 iterations 3
Cbc0038I Pass  26: suminf.    0.26109 (2) obj. -174.485 iterations 3
Cbc0038I Pass  27: suminf.    1.34166 (10) obj. -174.485 iterations 15
Cbc0038I Pass  28: suminf.    0.92247 (8) obj. -174.485 iterations 4
Cbc0038I Pass  29: suminf.    0.36290 (2) obj. -174.485 iterations 10
Cbc0038I Pass  30: suminf.    0.28331 (2) obj. -174.485 iterations 3
Cbc0038I Pass  31: suminf.    1.19046 (9) obj. -174.485 iterations 15
Cbc0038I Pass  32: suminf.    1.19046 (9) obj. -174.485 iterations 0
Cbc0038I Pass  33: suminf.    0.31688 (3) obj. -174.485 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 114 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -169.925 - took 0.02 seconds
Cbc0012I Integer solution of -169.92465 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 15 added rows had average density of 16.4
Cbc0013I At root node, 15 cuts changed objective from -211.52031 to -171.04495 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 254 row cuts average 18.8 elements, 40 column cuts (40 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 42.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 32.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -169.92465, took 65 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 70 (-8) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 1.59709e-05 - average 1.23805e-07, 15 fixed columns
Coin0506I Presolve 100 (-29) rows, 55 (-15) columns and 302 (-88) elements
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 2.1589796 - largest nonzero change 0 ( 0%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 53.70857
Clp0000I Optimal - objective value 53.70857
Coin0511I After Postsolve, objective 53.70857, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.70857
Clp0000I Optimal - objective value 53.70857
Clp0000I Optimal - objective value 53.70857
Coin0511I After Postsolve, objective 53.70857, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.7085703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 70 columns (69 integer (69 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.229%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.29556
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.89348 iterations 36
Cbc0038I Solution found of 0.89348
Cbc0038I Relaxing continuous gives 0.89348
Cbc0038I Rounding solution of -21.7389 is better than previous of 0.89348

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 57 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -21.7389 to -27.8349 (0.03 seconds)
Cbc0038I Round again with cutoff of -30.2376
Cbc0038I Pass   2: suminf.    1.35135 (5) obj. -30.2376 iterations 11
Cbc0038I Pass   3: suminf.    1.13134 (4) obj. -30.2376 iterations 3
Cbc0038I Pass   4: suminf.    0.89808 (2) obj. -30.2376 iterations 10
Cbc0038I Pass   5: suminf.    0.81791 (2) obj. -30.2376 iterations 2
Cbc0038I Pass   6: suminf.    0.69253 (2) obj. -30.2376 iterations 3
Cbc0038I Pass   7: suminf.    0.87374 (2) obj. -30.2376 iterations 1
Cbc0038I Pass   8: suminf.    1.54355 (5) obj. -30.2376 iterations 13
Cbc0038I Pass   9: suminf.    0.89651 (4) obj. -30.2376 iterations 6
Cbc0038I Pass  10: suminf.    1.46894 (8) obj. -30.2376 iterations 13
Cbc0038I Pass  11: suminf.    1.46894 (8) obj. -30.2376 iterations 0
Cbc0038I Pass  12: suminf.    1.01356 (3) obj. -30.2376 iterations 16
Cbc0038I Pass  13: suminf.    0.97576 (3) obj. -30.2376 iterations 1
Cbc0038I Pass  14: suminf.    1.09946 (6) obj. -30.2376 iterations 10
Cbc0038I Pass  15: suminf.    1.07770 (6) obj. -30.2376 iterations 4
Cbc0038I Pass  16: suminf.    1.01356 (3) obj. -30.2376 iterations 14
Cbc0038I Pass  17: suminf.    1.53647 (7) obj. -30.2376 iterations 13
Cbc0038I Pass  18: suminf.    0.82509 (4) obj. -30.2376 iterations 13
Cbc0038I Pass  19: suminf.    0.82509 (4) obj. -30.2376 iterations 0
Cbc0038I Pass  20: suminf.    1.10142 (3) obj. -30.2376 iterations 5
Cbc0038I Pass  21: suminf.    0.83571 (3) obj. -30.2376 iterations 3
Cbc0038I Pass  22: suminf.    0.92426 (5) obj. -30.2376 iterations 9
Cbc0038I Pass  23: suminf.    0.90866 (3) obj. -30.2376 iterations 6
Cbc0038I Pass  24: suminf.    1.30467 (5) obj. -30.2376 iterations 9
Cbc0038I Pass  25: suminf.    0.98555 (3) obj. -30.2376 iterations 8
Cbc0038I Pass  26: suminf.    0.91333 (3) obj. -30.2376 iterations 1
Cbc0038I Pass  27: suminf.    2.84478 (9) obj. -30.2376 iterations 18
Cbc0038I Pass  28: suminf.    1.91746 (8) obj. -30.2376 iterations 12
Cbc0038I Pass  29: suminf.    1.09241 (5) obj. -30.2376 iterations 17
Cbc0038I Pass  30: suminf.    0.49877 (3) obj. -30.2376 iterations 3
Cbc0038I Pass  31: suminf.    0.91333 (3) obj. -30.2376 iterations 8
Cbc0038I Rounding solution of -28.3462 is better than previous of -27.8349

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 67 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -34.5624
Cbc0038I Pass  31: suminf.    1.45297 (5) obj. -34.5624 iterations 4
Cbc0038I Pass  32: suminf.    1.45297 (5) obj. -34.5624 iterations 0
Cbc0038I Pass  33: suminf.    1.00000 (4) obj. -34.5624 iterations 10
Cbc0038I Pass  34: suminf.    0.96606 (3) obj. -34.5624 iterations 2
Cbc0038I Pass  35: suminf.    1.00000 (3) obj. -34.5624 iterations 4
Cbc0038I Pass  36: suminf.    3.56816 (10) obj. -34.5624 iterations 16
Cbc0038I Pass  37: suminf.    1.40609 (5) obj. -34.5624 iterations 15
Cbc0038I Pass  38: suminf.    0.84682 (4) obj. -34.5624 iterations 9
Cbc0038I Pass  39: suminf.    1.31758 (5) obj. -34.5624 iterations 3
Cbc0038I Pass  40: suminf.    2.44010 (11) obj. -34.5624 iterations 12
Cbc0038I Pass  41: suminf.    1.31758 (5) obj. -34.5624 iterations 16
Cbc0038I Pass  42: suminf.    1.53134 (8) obj. -34.5624 iterations 14
Cbc0038I Pass  43: suminf.    1.26873 (6) obj. -34.5624 iterations 13
Cbc0038I Pass  44: suminf.    1.50065 (7) obj. -34.5624 iterations 18
Cbc0038I Pass  45: suminf.    1.50065 (7) obj. -34.5624 iterations 0
Cbc0038I Pass  46: suminf.    1.94189 (8) obj. -34.5624 iterations 14
Cbc0038I Pass  47: suminf.    1.34777 (6) obj. -34.5624 iterations 15
Cbc0038I Pass  48: suminf.    2.13961 (7) obj. -34.5624 iterations 19
Cbc0038I Pass  49: suminf.    1.31758 (5) obj. -34.5624 iterations 26
Cbc0038I Pass  50: suminf.    0.84682 (4) obj. -34.5624 iterations 11
Cbc0038I Pass  51: suminf.    1.31758 (5) obj. -34.5624 iterations 3
Cbc0038I Pass  52: suminf.    2.43144 (9) obj. -34.5624 iterations 11
Cbc0038I Pass  53: suminf.    1.82156 (8) obj. -34.5624 iterations 14
Cbc0038I Pass  54: suminf.    1.45237 (6) obj. -34.5624 iterations 13
Cbc0038I Pass  55: suminf.    1.34777 (6) obj. -34.5624 iterations 12
Cbc0038I Pass  56: suminf.    1.50065 (7) obj. -34.5624 iterations 15
Cbc0038I Pass  57: suminf.    1.50065 (7) obj. -34.5624 iterations 0
Cbc0038I Pass  58: suminf.    1.94189 (8) obj. -34.5624 iterations 12
Cbc0038I Pass  59: suminf.    3.76446 (12) obj. -34.5624 iterations 16
Cbc0038I Pass  60: suminf.    1.95972 (8) obj. -34.5624 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 70 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -28.3462 - took 0.08 seconds
Cbc0012I Integer solution of -28.3462 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 127 rows 70 columns, reduced to 58 rows 32 columns
Cbc0031I 15 added rows had average density of 61.133333
Cbc0013I At root node, 15 cuts changed objective from -51.861546 to -43.995351 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4985 row cuts average 4.6 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1171 row cuts average 69.1 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 30 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 62.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 2 nodes, 3 on tree, -28.3462 best solution, best possible -43.995256 (0.70 seconds)
Cbc0001I Search completed - best objective -28.3462, took 6520 iterations and 40 nodes (0.88 seconds)
Cbc0032I Strong branching done 534 times (10092 iterations), fathomed 1 nodes and fixed 24 variables
Cbc0035I Maximum depth 17, 83 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.89

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 109 (-44) columns and 1686 (-1618) elements
Clp1000I sum of infeasibilities 2.59569e-07 - average 2.59569e-09, 32 fixed columns
Coin0506I Presolve 71 (-29) rows, 77 (-32) columns and 959 (-727) elements
Clp0006I 0  Obj 60.529368 Dual inf 9.6928251 (77)
Clp0029I End of values pass after 77 iterations
Clp0014I Perturbing problem by 0.001% of 2.4138847 - largest nonzero change 1.0872756e-05 ( 0.00085132148%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 66.775874
Clp0000I Optimal - objective value 66.775874
Coin0511I After Postsolve, objective 66.775874, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 66.775874
Clp0000I Optimal - objective value 66.775874
Clp0000I Optimal - objective value 66.775874
Clp0000I Optimal - objective value 66.775874
Coin0511I After Postsolve, objective 66.775874, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.77587398 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 109 columns (109 integer (109 of which binary)) and 1723 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.887%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 2.85291
Cbc0038I Pass   1: suminf.    1.47705 (25) obj. -46.6655 iterations 9
Cbc0038I Pass   2: suminf.    1.47705 (25) obj. -46.6655 iterations 1
Cbc0038I Solution found of -3.94377
Cbc0038I Rounding solution of -18.2862 is better than previous of -3.94377

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 109 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -21.5185
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.47705 (25) obj. -46.6655 iterations 0
Cbc0038I Pass   4: suminf.    1.47705 (25) obj. -46.6655 iterations 1
Cbc0038I Pass   5: suminf.    1.34344 (14) obj. -21.5185 iterations 43
Cbc0038I Pass   6: suminf.    1.34344 (14) obj. -21.5185 iterations 2
Cbc0038I Pass   7: suminf.    2.18982 (9) obj. -21.5185 iterations 25
Cbc0038I Pass   8: suminf.    2.05472 (11) obj. -21.5185 iterations 15
Cbc0038I Pass   9: suminf.    2.02795 (9) obj. -21.5185 iterations 5
Cbc0038I Pass  10: suminf.    1.76932 (7) obj. -21.5185 iterations 10
Cbc0038I Pass  11: suminf.    1.55618 (7) obj. -21.5185 iterations 4
Cbc0038I Pass  12: suminf.    1.76932 (7) obj. -21.5185 iterations 6
Cbc0038I Pass  13: suminf.    3.36977 (13) obj. -21.5185 iterations 13
Cbc0038I Pass  14: suminf.    2.54540 (13) obj. -21.5185 iterations 13
Cbc0038I Pass  15: suminf.    1.37367 (12) obj. -21.5185 iterations 6
Cbc0038I Pass  16: suminf.    1.37367 (12) obj. -21.5185 iterations 0
Cbc0038I Pass  17: suminf.    2.10232 (7) obj. -21.5185 iterations 15
Cbc0038I Pass  18: suminf.    1.99953 (8) obj. -21.5185 iterations 6
Cbc0038I Pass  19: suminf.    2.11917 (8) obj. -21.5185 iterations 4
Cbc0038I Pass  20: suminf.    2.11917 (8) obj. -21.5185 iterations 1
Cbc0038I Pass  21: suminf.    1.99953 (8) obj. -21.5185 iterations 3
Cbc0038I Pass  22: suminf.    2.65645 (23) obj. -21.5185 iterations 20
Cbc0038I Pass  23: suminf.    1.74165 (14) obj. -21.5185 iterations 22
Cbc0038I Pass  24: suminf.    3.56085 (12) obj. -21.5185 iterations 13
Cbc0038I Pass  25: suminf.    3.15570 (12) obj. -21.5185 iterations 4
Cbc0038I Pass  26: suminf.    1.61401 (9) obj. -21.5185 iterations 9
Cbc0038I Pass  27: suminf.    1.61401 (9) obj. -21.5185 iterations 2
Cbc0038I Pass  28: suminf.    1.71600 (9) obj. -21.5185 iterations 3
Cbc0038I Pass  29: suminf.    1.71600 (9) obj. -21.5185 iterations 1
Cbc0038I Pass  30: suminf.    1.61401 (9) obj. -21.5185 iterations 2
Cbc0038I Pass  31: suminf.    2.85937 (18) obj. -21.5185 iterations 18
Cbc0038I Pass  32: suminf.    2.27335 (16) obj. -21.5185 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 109 columns, reduced to 54 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -3.94377 to -22.7287 (0.17 seconds)
Cbc0038I Round again with cutoff of -28.3047
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.47705 (25) obj. -46.6655 iterations 0
Cbc0038I Pass  33: suminf.    1.47705 (25) obj. -46.6655 iterations 1
Cbc0038I Pass  34: suminf.    2.28987 (15) obj. -28.3047 iterations 39
Cbc0038I Pass  35: suminf.    1.44175 (15) obj. -28.3047 iterations 6
Cbc0038I Pass  36: suminf.    1.41348 (15) obj. -28.3047 iterations 1
Cbc0038I Pass  37: suminf.    2.43017 (11) obj. -28.3047 iterations 32
Cbc0038I Pass  38: suminf.    2.42106 (11) obj. -28.3047 iterations 1
Cbc0038I Pass  39: suminf.    2.43017 (11) obj. -28.3047 iterations 7
Cbc0038I Pass  40: suminf.    3.03397 (18) obj. -28.3047 iterations 22
Cbc0038I Pass  41: suminf.    1.67729 (19) obj. -28.3047 iterations 14
Cbc0038I Pass  42: suminf.    2.91831 (12) obj. -28.3047 iterations 19
Cbc0038I Pass  43: suminf.    2.91831 (12) obj. -28.3047 iterations 3
Cbc0038I Pass  44: suminf.    2.70826 (12) obj. -28.3047 iterations 6
Cbc0038I Pass  45: suminf.    2.70826 (12) obj. -28.3047 iterations 3
Cbc0038I Pass  46: suminf.    2.91831 (12) obj. -28.3047 iterations 4
Cbc0038I Pass  47: suminf.    1.54592 (16) obj. -28.3047 iterations 18
Cbc0038I Pass  48: suminf.    1.45224 (16) obj. -28.3314 iterations 5
Cbc0038I Pass  49: suminf.    2.99244 (15) obj. -28.3047 iterations 13
Cbc0038I Pass  50: suminf.    2.59289 (15) obj. -28.3047 iterations 7
Cbc0038I Pass  51: suminf.    2.94805 (13) obj. -28.3047 iterations 8
Cbc0038I Pass  52: suminf.    3.11635 (16) obj. -28.3047 iterations 20
Cbc0038I Pass  53: suminf.    3.11635 (16) obj. -28.3047 iterations 3
Cbc0038I Pass  54: suminf.    2.95182 (14) obj. -28.3047 iterations 16
Cbc0038I Pass  55: suminf.    2.95182 (14) obj. -28.3047 iterations 2
Cbc0038I Pass  56: suminf.    3.09839 (14) obj. -28.3047 iterations 5
Cbc0038I Pass  57: suminf.    3.09839 (14) obj. -28.3047 iterations 4
Cbc0038I Pass  58: suminf.    2.95182 (14) obj. -28.3047 iterations 4
Cbc0038I Pass  59: suminf.    3.17154 (15) obj. -28.3047 iterations 11
Cbc0038I Pass  60: suminf.    2.87896 (15) obj. -28.3047 iterations 6
Cbc0038I Pass  61: suminf.    3.04622 (14) obj. -28.3047 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 109 columns, reduced to 44 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -22.7287 - took 0.21 seconds
Cbc0012I Integer solution of -22.72869 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 96 rows 109 columns, reduced to 5 rows 7 columns
Cbc0031I 46 added rows had average density of 27.021739
Cbc0013I At root node, 46 cuts changed objective from -50.608468 to -32.617001 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8075 row cuts average 2.3 elements, 1 column cuts (1 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1411 row cuts average 99.6 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1197 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 94 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 477 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 301 row cuts average 63.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 175 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.789 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.72869 best solution, best possible -32.617001 (2.75 seconds)
Cbc0012I Integer solution of -25.60782 found by DiveCoefficient after 3880 iterations and 1 nodes (2.75 seconds)
Cbc0016I Integer solution of -28.3462 found by strong branching after 3961 iterations and 1 nodes (2.87 seconds)
Cbc0010I After 6 nodes, 5 on tree, -28.3462 best solution, best possible -31.758747 (3.50 seconds)
Cbc0010I After 23 nodes, 6 on tree, -28.3462 best solution, best possible -31.758747 (4.21 seconds)
Cbc0001I Search completed - best objective -28.3462, took 5916 iterations and 36 nodes (4.72 seconds)
Cbc0032I Strong branching done 564 times (12499 iterations), fathomed 5 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 50 variables fixed on reduced cost
Total time (CPU seconds):       3.24   (Wallclock seconds):       4.74

