Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 503 (-24) rows, 262 (-2) columns and 1499 (-46) elements
Clp1000I sum of infeasibilities 0.000190745 - average 3.79214e-07, 137 fixed columns
Coin0506I Presolve 232 (-271) rows, 125 (-137) columns and 691 (-808) elements
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 2.7822663 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Coin0511I After Postsolve, objective 193.87771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13513346 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Coin0511I After Postsolve, objective 193.87771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.8777128 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 503 rows, 262 columns (261 integer (261 of which binary)) and 1499 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 13.8652
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 24.9794 iterations 215
Cbc0038I Solution found of 24.9794
Cbc0038I Relaxing continuous gives 24.9794
Cbc0038I Rounding solution of -96.5659 is better than previous of 24.9794

Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 119 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -96.5659 to -100.226 (0.06 seconds)
Cbc0038I Round again with cutoff of -109.591
Cbc0038I Pass   2: suminf.    2.70205 (10) obj. -109.591 iterations 43
Cbc0038I Pass   3: suminf.    2.70205 (10) obj. -109.591 iterations 0
Cbc0038I Pass   4: suminf.    1.85158 (8) obj. -109.591 iterations 30
Cbc0038I Pass   5: suminf.    1.78754 (6) obj. -109.591 iterations 34
Cbc0038I Pass   6: suminf.    1.90173 (5) obj. -109.591 iterations 44
Cbc0038I Pass   7: suminf.    1.58254 (5) obj. -109.591 iterations 28
Cbc0038I Pass   8: suminf.    1.78754 (6) obj. -109.591 iterations 7
Cbc0038I Pass   9: suminf.    5.81681 (18) obj. -109.591 iterations 79
Cbc0038I Pass  10: suminf.    3.09040 (11) obj. -109.591 iterations 49
Cbc0038I Pass  11: suminf.    2.07427 (6) obj. -109.591 iterations 65
Cbc0038I Pass  12: suminf.    1.53176 (5) obj. -109.591 iterations 37
Cbc0038I Pass  13: suminf.    1.49297 (5) obj. -109.591 iterations 7
Cbc0038I Pass  14: suminf.    1.49297 (5) obj. -109.591 iterations 3
Cbc0038I Pass  15: suminf.    2.09563 (8) obj. -109.591 iterations 47
Cbc0038I Pass  16: suminf.    2.01397 (7) obj. -109.591 iterations 1
Cbc0038I Pass  17: suminf.    2.16750 (7) obj. -109.591 iterations 17
Cbc0038I Pass  18: suminf.    1.98973 (7) obj. -109.591 iterations 44
Cbc0038I Pass  19: suminf.    1.52183 (6) obj. -109.591 iterations 38
Cbc0038I Pass  20: suminf.    1.24692 (5) obj. -109.591 iterations 18
Cbc0038I Pass  21: suminf.    1.24692 (5) obj. -109.591 iterations 0
Cbc0038I Pass  22: suminf.    2.03452 (8) obj. -109.591 iterations 44
Cbc0038I Pass  23: suminf.    2.03452 (8) obj. -109.591 iterations 19
Cbc0038I Pass  24: suminf.    3.14797 (11) obj. -109.591 iterations 59
Cbc0038I Pass  25: suminf.    2.90846 (8) obj. -109.591 iterations 13
Cbc0038I Pass  26: suminf.    2.74509 (7) obj. -109.591 iterations 10
Cbc0038I Pass  27: suminf.    2.46799 (8) obj. -109.591 iterations 37
Cbc0038I Pass  28: suminf.    2.32284 (9) obj. -109.591 iterations 22
Cbc0038I Pass  29: suminf.    1.78693 (5) obj. -109.591 iterations 24
Cbc0038I Pass  30: suminf.    1.31640 (4) obj. -109.591 iterations 21
Cbc0038I Pass  31: suminf.    1.29916 (5) obj. -109.591 iterations 6
Cbc0038I Rounding solution of -109.604 is better than previous of -100.226

Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 169 rows 93 columns
Cbc0038I Mini branch and bound improved solution from -109.604 to -117.819 (0.15 seconds)
Cbc0038I Round again with cutoff of -133.031
Cbc0038I Pass  31: suminf.    3.70327 (17) obj. -133.031 iterations 29
Cbc0038I Pass  32: suminf.    3.69577 (13) obj. -133.031 iterations 14
Cbc0038I Pass  33: suminf.    3.71258 (11) obj. -133.031 iterations 42
Cbc0038I Pass  34: suminf.    3.48922 (12) obj. -133.031 iterations 32
Cbc0038I Pass  35: suminf.    3.11886 (11) obj. -133.031 iterations 10
Cbc0038I Pass  36: suminf.    2.97040 (14) obj. -133.031 iterations 9
Cbc0038I Pass  37: suminf.    2.97915 (18) obj. -133.031 iterations 10
Cbc0038I Pass  38: suminf.    2.54823 (8) obj. -133.031 iterations 42
Cbc0038I Pass  39: suminf.    2.17804 (7) obj. -133.031 iterations 29
Cbc0038I Pass  40: suminf.    2.03806 (8) obj. -133.031 iterations 7
Cbc0038I Pass  41: suminf.    3.21968 (8) obj. -133.031 iterations 24
Cbc0038I Pass  42: suminf.    2.25672 (6) obj. -133.031 iterations 44
Cbc0038I Pass  43: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  44: suminf.    1.94789 (6) obj. -133.031 iterations 28
Cbc0038I Pass  45: suminf.    1.94215 (6) obj. -133.031 iterations 24
Cbc0038I Pass  46: suminf.    2.48662 (7) obj. -133.031 iterations 45
Cbc0038I Pass  47: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  48: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  49: suminf.    1.94789 (6) obj. -133.031 iterations 24
Cbc0038I Pass  50: suminf.    1.94215 (6) obj. -133.031 iterations 20
Cbc0038I Pass  51: suminf.    2.48662 (7) obj. -133.031 iterations 43
Cbc0038I Pass  52: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  53: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  54: suminf.    1.94789 (6) obj. -133.031 iterations 26
Cbc0038I Pass  55: suminf.    1.94215 (6) obj. -133.031 iterations 22
Cbc0038I Pass  56: suminf.    2.48662 (7) obj. -133.031 iterations 47
Cbc0038I Pass  57: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  58: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  59: suminf.    1.94789 (6) obj. -133.031 iterations 25
Cbc0038I Pass  60: suminf.    1.94215 (6) obj. -133.031 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 142 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -117.819 - took 0.20 seconds
Cbc0012I Integer solution of -117.81933 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 122 rows 68 columns
Cbc0031I 35 added rows had average density of 168.48571
Cbc0013I At root node, 35 cuts changed objective from -193.87771 to -176.33972 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26513 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.474 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2739 row cuts average 254.2 elements, 0 column cuts (0 active)  in 0.451 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.490 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 226 row cuts average 250.1 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -117.81933 best solution, best possible -176.33972 (4.12 seconds)
Cbc0010I After 12 nodes, 9 on tree, -117.81933 best solution, best possible -176.33972 (4.86 seconds)
Cbc0012I Integer solution of -118.68874 found by rounding after 16675 iterations and 33 nodes (5.11 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 21 rows 20 columns
Cbc0038I Full problem 503 rows 262 columns, reduced to 5 rows 8 columns
Cbc0012I Integer solution of -119.3623 found by rounding after 18674 iterations and 104 nodes (5.38 seconds)
Cbc0012I Integer solution of -119.40443 found by rounding after 19637 iterations and 142 nodes (5.48 seconds)
Cbc0010I After 181 nodes, 12 on tree, -119.40443 best solution, best possible -176.33972 (5.56 seconds)
Cbc0012I Integer solution of -120.3733 found by rounding after 20597 iterations and 182 nodes (5.56 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 199 rows 106 columns
Cbc0010I After 295 nodes, 10 on tree, -120.3733 best solution, best possible -176.33972 (6.27 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 119 rows 66 columns
Cbc0010I After 407 nodes, 18 on tree, -120.3733 best solution, best possible -176.33972 (6.98 seconds)
Cbc0001I Search completed - best objective -120.373297, took 34821 iterations and 494 nodes (7.51 seconds)
Cbc0032I Strong branching done 4186 times (79133 iterations), fathomed 111 nodes and fixed 349 variables
Cbc0035I Maximum depth 76, 3765 variables fixed on reduced cost
Total time (CPU seconds):       7.36   (Wallclock seconds):       7.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 377 (-149) rows, 396 (-128) columns and 18183 (-17553) elements
Clp1000I sum of infeasibilities 6.40336e-06 - average 1.6985e-08, 213 fixed columns
Coin0506I Presolve 153 (-224) rows, 182 (-214) columns and 651 (-17532) elements
Clp0006I 0  Obj 34.382302 Dual inf 30.113651 (182)
Clp0029I End of values pass after 182 iterations
Clp0014I Perturbing problem by 0.001% of 1.4920183 - largest nonzero change 1.4897394e-05 ( 0.00091831452%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 40.568535
Clp0000I Optimal - objective value 40.568535
Coin0511I After Postsolve, objective 40.568535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 40.568535 Dual inf 405.55197 (141)
Clp0014I Perturbing problem by 0.001% of 1.9060098 - largest nonzero change 1.1093492e-05 ( 0.00082503284%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 242.72822
Clp0000I Optimal - objective value 242.72822
Clp0000I Optimal - objective value 242.72822
Coin0511I After Postsolve, objective 242.72822, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 242.7282247 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0004I processed model has 377 rows, 396 columns (396 integer (396 of which binary)) and 18183 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.639%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 138 integers unsatisfied sum - 8.16357
Cbc0038I Pass   1: suminf.    3.60784 (96) obj. -208.453 iterations 41
Cbc0038I Pass   2: suminf.    3.60784 (96) obj. -208.453 iterations 1
Cbc0038I Pass   3: suminf.    2.26075 (77) obj. -130.669 iterations 19
Cbc0038I Pass   4: suminf.    1.77763 (66) obj. -117.285 iterations 11
Cbc0038I Pass   5: suminf.    1.12320 (49) obj. -98.0664 iterations 17
Cbc0038I Pass   6: suminf.    0.43982 (27) obj. -71.8983 iterations 22
Cbc0038I Pass   7: suminf.    0.09748 (9) obj. -50.3345 iterations 18
Cbc0038I Solution found of -39.4531
Cbc0038I Rounding solution of -63.6181 is better than previous of -39.4531

Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 396 columns, reduced to 43 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -63.6181 to -70.2809 (0.15 seconds)
Cbc0038I Round again with cutoff of -87.5258
Cbc0038I Pass   8: suminf.    3.60784 (96) obj. -208.453 iterations 0
Cbc0038I Pass   9: suminf.    3.60784 (96) obj. -208.453 iterations 1
Cbc0038I Pass  10: suminf.    2.03823 (72) obj. -123.025 iterations 24
Cbc0038I Pass  11: suminf.    1.48265 (59) obj. -107.707 iterations 13
Cbc0038I Pass  12: suminf.    0.95921 (44) obj. -92.2629 iterations 15
Cbc0038I Pass  13: suminf.    0.94236 (27) obj. -87.5258 iterations 23
Cbc0038I Pass  14: suminf.    0.98333 (9) obj. -87.5258 iterations 32
Cbc0038I Pass  15: suminf.    0.56009 (10) obj. -87.5258 iterations 4
Cbc0038I Pass  16: suminf.    0.30287 (9) obj. -87.5258 iterations 12
Cbc0038I Pass  17: suminf.    0.30287 (9) obj. -87.5258 iterations 0
Cbc0038I Pass  18: suminf.    0.58124 (3) obj. -87.5258 iterations 14
Cbc0038I Pass  19: suminf.    0.58124 (3) obj. -87.5258 iterations 0
Cbc0038I Pass  20: suminf.    0.13420 (2) obj. -87.5258 iterations 3
Cbc0038I Pass  21: suminf.    0.13420 (2) obj. -87.5258 iterations 0
Cbc0038I Pass  22: suminf.    1.67745 (22) obj. -87.5258 iterations 72
Cbc0038I Pass  23: suminf.    1.51035 (22) obj. -87.5258 iterations 17
Cbc0038I Pass  24: suminf.    1.07836 (8) obj. -87.5258 iterations 27
Cbc0038I Pass  25: suminf.    0.52432 (8) obj. -87.5258 iterations 3
Cbc0038I Pass  26: suminf.    1.91792 (15) obj. -87.5258 iterations 14
Cbc0038I Pass  27: suminf.    1.50361 (15) obj. -89.9337 iterations 7
Cbc0038I Pass  28: suminf.    1.84423 (21) obj. -87.5258 iterations 25
Cbc0038I Pass  29: suminf.    1.72723 (21) obj. -87.5258 iterations 2
Cbc0038I Pass  30: suminf.    1.48418 (7) obj. -87.5258 iterations 22
Cbc0038I Pass  31: suminf.    0.98842 (6) obj. -87.5258 iterations 10
Cbc0038I Pass  32: suminf.    0.98842 (6) obj. -87.5258 iterations 0
Cbc0038I Pass  33: suminf.    1.24961 (5) obj. -87.5258 iterations 9
Cbc0038I Pass  34: suminf.    1.00636 (5) obj. -87.5258 iterations 1
Cbc0038I Pass  35: suminf.    1.18805 (5) obj. -87.5258 iterations 11
Cbc0038I Pass  36: suminf.    0.72367 (6) obj. -90.0503 iterations 7
Cbc0038I Pass  37: suminf.    1.14202 (6) obj. -87.5258 iterations 13
Cbc0038I Rounding solution of -85.7764 is better than previous of -70.2809

Cbc0038I Before mini branch and bound, 245 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 396 columns, reduced to 47 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -85.7764 to -87.752 (0.22 seconds)
Cbc0038I Round again with cutoff of -118.747
Cbc0038I Pass  37: suminf.    3.60784 (96) obj. -208.453 iterations 0
Cbc0038I Pass  38: suminf.    3.60784 (96) obj. -208.453 iterations 1
Cbc0038I Pass  39: suminf.    2.30597 (78) obj. -131.623 iterations 18
Cbc0038I Pass  40: suminf.    1.81652 (66) obj. -118.747 iterations 14
Cbc0038I Pass  41: suminf.    1.30346 (52) obj. -126.303 iterations 15
Cbc0038I Pass  42: suminf.    1.75822 (37) obj. -118.747 iterations 21
Cbc0038I Pass  43: suminf.    1.10633 (36) obj. -118.747 iterations 1
Cbc0038I Pass  44: suminf.    1.38010 (23) obj. -118.747 iterations 28
Cbc0038I Pass  45: suminf.    0.93623 (28) obj. -118.747 iterations 11
Cbc0038I Pass  46: suminf.    1.05974 (10) obj. -118.747 iterations 28
Cbc0038I Pass  47: suminf.    0.75449 (11) obj. -118.747 iterations 3
Cbc0038I Pass  48: suminf.    1.17052 (6) obj. -118.747 iterations 36
Cbc0038I Pass  49: suminf.    1.17052 (6) obj. -118.747 iterations 11
Cbc0038I Pass  50: suminf.    1.00957 (6) obj. -118.747 iterations 11
Cbc0038I Pass  51: suminf.    0.74919 (6) obj. -118.747 iterations 1
Cbc0038I Pass  52: suminf.    1.17052 (6) obj. -118.747 iterations 13
Cbc0038I Pass  53: suminf.    2.39321 (48) obj. -118.747 iterations 45
Cbc0038I Pass  54: suminf.    2.20843 (43) obj. -118.747 iterations 16
Cbc0038I Pass  55: suminf.    2.11919 (28) obj. -118.747 iterations 43
Cbc0038I Pass  56: suminf.    1.07430 (25) obj. -119.649 iterations 13
Cbc0038I Pass  57: suminf.    1.16336 (24) obj. -118.747 iterations 24
Cbc0038I Pass  58: suminf.    1.09108 (25) obj. -118.747 iterations 4
Cbc0038I Pass  59: suminf.    1.37576 (24) obj. -118.747 iterations 9
Cbc0038I Pass  60: suminf.    1.13022 (24) obj. -118.747 iterations 21
Cbc0038I Pass  61: suminf.    3.38673 (28) obj. -118.747 iterations 20
Cbc0038I Pass  62: suminf.    3.38673 (28) obj. -118.747 iterations 0
Cbc0038I Pass  63: suminf.    3.34260 (23) obj. -118.747 iterations 27
Cbc0038I Pass  64: suminf.    3.18348 (23) obj. -118.747 iterations 5
Cbc0038I Pass  65: suminf.    3.34260 (23) obj. -118.747 iterations 6
Cbc0038I Pass  66: suminf.    3.59075 (37) obj. -118.747 iterations 47
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 396 columns, reduced to 51 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -87.752 to -97.7348 (0.34 seconds)
Cbc0038I Round again with cutoff of -155.942
Cbc0038I Pass  66: suminf.    3.60784 (96) obj. -208.453 iterations 0
Cbc0038I Pass  67: suminf.    3.60784 (96) obj. -208.453 iterations 1
Cbc0038I Pass  68: suminf.    3.06862 (77) obj. -155.942 iterations 23
Cbc0038I Pass  69: suminf.    2.40019 (77) obj. -155.942 iterations 14
Cbc0038I Pass  70: suminf.    2.86662 (55) obj. -155.942 iterations 41
Cbc0038I Pass  71: suminf.    2.54519 (55) obj. -155.942 iterations 4
Cbc0038I Pass  72: suminf.    2.54519 (55) obj. -155.942 iterations 1
Cbc0038I Pass  73: suminf.    2.02093 (42) obj. -155.942 iterations 35
Cbc0038I Pass  74: suminf.    2.01547 (51) obj. -155.942 iterations 5
Cbc0038I Pass  75: suminf.    1.46609 (32) obj. -155.942 iterations 63
Cbc0038I Pass  76: suminf.    1.46609 (32) obj. -155.942 iterations 1
Cbc0038I Pass  77: suminf.    3.09981 (51) obj. -155.942 iterations 28
Cbc0038I Pass  78: suminf.    3.05680 (51) obj. -155.942 iterations 12
Cbc0038I Pass  79: suminf.    3.09801 (49) obj. -155.942 iterations 34
Cbc0038I Pass  80: suminf.    3.09801 (49) obj. -155.942 iterations 7
Cbc0038I Pass  81: suminf.    3.09018 (49) obj. -155.942 iterations 10
Cbc0038I Pass  82: suminf.    3.09018 (49) obj. -155.942 iterations 6
Cbc0038I Pass  83: suminf.    2.95829 (45) obj. -155.942 iterations 19
Cbc0038I Pass  84: suminf.    2.95829 (45) obj. -155.942 iterations 4
Cbc0038I Pass  85: suminf.    2.90263 (45) obj. -155.942 iterations 6
Cbc0038I Pass  86: suminf.    2.90263 (45) obj. -155.942 iterations 4
Cbc0038I Pass  87: suminf.    2.92241 (45) obj. -155.942 iterations 6
Cbc0038I Pass  88: suminf.    2.92241 (45) obj. -155.942 iterations 5
Cbc0038I Pass  89: suminf.    2.90263 (45) obj. -155.942 iterations 31
Cbc0038I Pass  90: suminf.    3.44839 (56) obj. -155.942 iterations 63
Cbc0038I Pass  91: suminf.    3.44839 (56) obj. -155.942 iterations 8
Cbc0038I Pass  92: suminf.    3.01409 (48) obj. -155.942 iterations 36
Cbc0038I Pass  93: suminf.    3.01409 (48) obj. -155.942 iterations 6
Cbc0038I Pass  94: suminf.    2.73367 (48) obj. -155.942 iterations 6
Cbc0038I Pass  95: suminf.    2.73367 (48) obj. -155.942 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 250 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 396 columns, reduced to 45 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.41 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of -97.7348 - took 0.31 seconds
Cbc0012I Integer solution of -97.734834 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 46 rows 50 columns
Cbc0031I 147 added rows had average density of 113.83673
Cbc0013I At root node, 147 cuts changed objective from -242.72822 to -146.28979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 29186 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.581 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3353 row cuts average 374.1 elements, 0 column cuts (0 active)  in 1.512 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 389 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5718 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.620 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4610 row cuts average 10.6 elements, 0 column cuts (0 active)  in 1.101 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 473 row cuts average 191.4 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 371 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.330 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -97.734834 best solution, best possible -146.28979 (9.65 seconds)
Cbc0010I After 3 nodes, 2 on tree, -97.734834 best solution, best possible -143.94243 (10.46 seconds)
Cbc0012I Integer solution of -102.81385 found by DiveCoefficient after 14739 iterations and 6 nodes (11.01 seconds)
Cbc0010I After 14 nodes, 6 on tree, -102.81385 best solution, best possible -143.94243 (11.16 seconds)
Cbc0012I Integer solution of -108.60401 found by rounding after 15189 iterations and 17 nodes (11.22 seconds)
Cbc0012I Integer solution of -117.62345 found by rounding after 15238 iterations and 20 nodes (11.25 seconds)
Cbc0012I Integer solution of -118.06468 found by rounding after 15461 iterations and 27 nodes (11.38 seconds)
Cbc0012I Integer solution of -119.63846 found by rounding after 15893 iterations and 38 nodes (11.57 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 4 rows 5 columns
Cbc0010I After 48 nodes, 5 on tree, -119.63846 best solution, best possible -143.94243 (11.94 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 28 rows 40 columns
Cbc0012I Integer solution of -120.3733 found by RINS after 17740 iterations and 92 nodes (12.69 seconds)
Cbc0010I After 92 nodes, 14 on tree, -120.3733 best solution, best possible -143.94243 (12.69 seconds)
Cbc0010I After 180 nodes, 5 on tree, -120.3733 best solution, best possible -143.94243 (13.40 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 49 rows 58 columns
Cbc0010I After 210 nodes, 10 on tree, -120.3733 best solution, best possible -143.94243 (14.10 seconds)
Cbc0010I After 235 nodes, 4 on tree, -120.3733 best solution, best possible -143.94243 (14.91 seconds)
Cbc0010I After 251 nodes, 6 on tree, -120.3733 best solution, best possible -143.94243 (15.68 seconds)
Cbc0010I After 297 nodes, 15 on tree, -120.3733 best solution, best possible -143.94243 (16.38 seconds)
Cbc0010I After 357 nodes, 4 on tree, -120.3733 best solution, best possible -143.94243 (17.10 seconds)
Cbc0010I After 390 nodes, 3 on tree, -120.3733 best solution, best possible -143.94243 (17.99 seconds)
Cbc0010I After 400 nodes, 5 on tree, -120.3733 best solution, best possible -143.94243 (18.70 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 121 rows 142 columns
Cbc0010I After 406 nodes, 4 on tree, -120.3733 best solution, best possible -143.94243 (19.41 seconds)
Cbc0010I After 411 nodes, 4 on tree, -120.3733 best solution, best possible -143.94243 (20.26 seconds)
Cbc0010I After 426 nodes, 7 on tree, -120.3733 best solution, best possible -143.94243 (20.98 seconds)
Cbc0010I After 448 nodes, 10 on tree, -120.3733 best solution, best possible -143.94243 (21.69 seconds)
Cbc0010I After 482 nodes, 9 on tree, -120.3733 best solution, best possible -143.94243 (22.41 seconds)
Cbc0010I After 491 nodes, 10 on tree, -120.3733 best solution, best possible -143.94243 (23.22 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 133 rows 145 columns
Cbc0010I After 500 nodes, 9 on tree, -120.3733 best solution, best possible -143.94243 (24.10 seconds)
Cbc0010I After 535 nodes, 13 on tree, -120.3733 best solution, best possible -143.94243 (24.80 seconds)
Cbc0010I After 580 nodes, 7 on tree, -120.3733 best solution, best possible -143.94243 (25.50 seconds)
Cbc0001I Search completed - best objective -120.373297, took 49769 iterations and 600 nodes (25.89 seconds)
Cbc0032I Strong branching done 3348 times (58161 iterations), fathomed 34 nodes and fixed 83 variables
Cbc0035I Maximum depth 24, 3518 variables fixed on reduced cost
Total time (CPU seconds):       25.21   (Wallclock seconds):       26.00

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 503 (-24) rows, 262 (-2) columns and 1499 (-46) elements
Clp1000I sum of infeasibilities 0.000190745 - average 3.79214e-07, 137 fixed columns
Coin0506I Presolve 232 (-271) rows, 125 (-137) columns and 691 (-808) elements
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 2.7822663 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Coin0511I After Postsolve, objective 193.87771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13513346 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Clp0000I Optimal - objective value 193.87771
Coin0511I After Postsolve, objective 193.87771, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.8777128 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 503 rows, 262 columns (261 integer (261 of which binary)) and 1499 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 65 integers unsatisfied sum - 13.8652
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 24.9794 iterations 215
Cbc0038I Solution found of 24.9794
Cbc0038I Relaxing continuous gives 24.9794
Cbc0038I Rounding solution of -96.5659 is better than previous of 24.9794

Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 119 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -96.5659 to -100.226 (0.06 seconds)
Cbc0038I Round again with cutoff of -109.591
Cbc0038I Pass   2: suminf.    2.70205 (10) obj. -109.591 iterations 43
Cbc0038I Pass   3: suminf.    2.70205 (10) obj. -109.591 iterations 0
Cbc0038I Pass   4: suminf.    1.85158 (8) obj. -109.591 iterations 30
Cbc0038I Pass   5: suminf.    1.78754 (6) obj. -109.591 iterations 34
Cbc0038I Pass   6: suminf.    1.90173 (5) obj. -109.591 iterations 44
Cbc0038I Pass   7: suminf.    1.58254 (5) obj. -109.591 iterations 28
Cbc0038I Pass   8: suminf.    1.78754 (6) obj. -109.591 iterations 7
Cbc0038I Pass   9: suminf.    5.81681 (18) obj. -109.591 iterations 79
Cbc0038I Pass  10: suminf.    3.09040 (11) obj. -109.591 iterations 49
Cbc0038I Pass  11: suminf.    2.07427 (6) obj. -109.591 iterations 65
Cbc0038I Pass  12: suminf.    1.53176 (5) obj. -109.591 iterations 37
Cbc0038I Pass  13: suminf.    1.49297 (5) obj. -109.591 iterations 7
Cbc0038I Pass  14: suminf.    1.49297 (5) obj. -109.591 iterations 3
Cbc0038I Pass  15: suminf.    2.09563 (8) obj. -109.591 iterations 47
Cbc0038I Pass  16: suminf.    2.01397 (7) obj. -109.591 iterations 1
Cbc0038I Pass  17: suminf.    2.16750 (7) obj. -109.591 iterations 17
Cbc0038I Pass  18: suminf.    1.98973 (7) obj. -109.591 iterations 44
Cbc0038I Pass  19: suminf.    1.52183 (6) obj. -109.591 iterations 38
Cbc0038I Pass  20: suminf.    1.24692 (5) obj. -109.591 iterations 18
Cbc0038I Pass  21: suminf.    1.24692 (5) obj. -109.591 iterations 0
Cbc0038I Pass  22: suminf.    2.03452 (8) obj. -109.591 iterations 44
Cbc0038I Pass  23: suminf.    2.03452 (8) obj. -109.591 iterations 19
Cbc0038I Pass  24: suminf.    3.14797 (11) obj. -109.591 iterations 59
Cbc0038I Pass  25: suminf.    2.90846 (8) obj. -109.591 iterations 13
Cbc0038I Pass  26: suminf.    2.74509 (7) obj. -109.591 iterations 10
Cbc0038I Pass  27: suminf.    2.46799 (8) obj. -109.591 iterations 37
Cbc0038I Pass  28: suminf.    2.32284 (9) obj. -109.591 iterations 22
Cbc0038I Pass  29: suminf.    1.78693 (5) obj. -109.591 iterations 24
Cbc0038I Pass  30: suminf.    1.31640 (4) obj. -109.591 iterations 21
Cbc0038I Pass  31: suminf.    1.29916 (5) obj. -109.591 iterations 6
Cbc0038I Rounding solution of -109.604 is better than previous of -100.226

Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 169 rows 93 columns
Cbc0038I Mini branch and bound improved solution from -109.604 to -117.819 (0.15 seconds)
Cbc0038I Round again with cutoff of -133.031
Cbc0038I Pass  31: suminf.    3.70327 (17) obj. -133.031 iterations 29
Cbc0038I Pass  32: suminf.    3.69577 (13) obj. -133.031 iterations 14
Cbc0038I Pass  33: suminf.    3.71258 (11) obj. -133.031 iterations 42
Cbc0038I Pass  34: suminf.    3.48922 (12) obj. -133.031 iterations 32
Cbc0038I Pass  35: suminf.    3.11886 (11) obj. -133.031 iterations 10
Cbc0038I Pass  36: suminf.    2.97040 (14) obj. -133.031 iterations 9
Cbc0038I Pass  37: suminf.    2.97915 (18) obj. -133.031 iterations 10
Cbc0038I Pass  38: suminf.    2.54823 (8) obj. -133.031 iterations 42
Cbc0038I Pass  39: suminf.    2.17804 (7) obj. -133.031 iterations 29
Cbc0038I Pass  40: suminf.    2.03806 (8) obj. -133.031 iterations 7
Cbc0038I Pass  41: suminf.    3.21968 (8) obj. -133.031 iterations 24
Cbc0038I Pass  42: suminf.    2.25672 (6) obj. -133.031 iterations 44
Cbc0038I Pass  43: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  44: suminf.    1.94789 (6) obj. -133.031 iterations 28
Cbc0038I Pass  45: suminf.    1.94215 (6) obj. -133.031 iterations 24
Cbc0038I Pass  46: suminf.    2.48662 (7) obj. -133.031 iterations 45
Cbc0038I Pass  47: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  48: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  49: suminf.    1.94789 (6) obj. -133.031 iterations 24
Cbc0038I Pass  50: suminf.    1.94215 (6) obj. -133.031 iterations 20
Cbc0038I Pass  51: suminf.    2.48662 (7) obj. -133.031 iterations 43
Cbc0038I Pass  52: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  53: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  54: suminf.    1.94789 (6) obj. -133.031 iterations 26
Cbc0038I Pass  55: suminf.    1.94215 (6) obj. -133.031 iterations 22
Cbc0038I Pass  56: suminf.    2.48662 (7) obj. -133.031 iterations 47
Cbc0038I Pass  57: suminf.    2.25672 (6) obj. -133.031 iterations 6
Cbc0038I Pass  58: suminf.    2.25672 (6) obj. -133.031 iterations 1
Cbc0038I Pass  59: suminf.    1.94789 (6) obj. -133.031 iterations 25
Cbc0038I Pass  60: suminf.    1.94215 (6) obj. -133.031 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 142 rows 78 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of -117.819 - took 0.21 seconds
Cbc0012I Integer solution of -117.81933 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 122 rows 68 columns
Cbc0031I 35 added rows had average density of 168.48571
Cbc0013I At root node, 35 cuts changed objective from -193.87771 to -176.33972 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26513 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.457 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2739 row cuts average 254.2 elements, 0 column cuts (0 active)  in 0.432 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.471 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 226 row cuts average 250.1 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -117.81933 best solution, best possible -176.33972 (3.93 seconds)
Cbc0010I After 12 nodes, 9 on tree, -117.81933 best solution, best possible -176.33972 (4.68 seconds)
Cbc0012I Integer solution of -118.68874 found by rounding after 16675 iterations and 33 nodes (4.95 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 21 rows 20 columns
Cbc0038I Full problem 503 rows 262 columns, reduced to 5 rows 8 columns
Cbc0012I Integer solution of -119.3623 found by rounding after 18674 iterations and 104 nodes (5.22 seconds)
Cbc0012I Integer solution of -119.40443 found by rounding after 19637 iterations and 142 nodes (5.32 seconds)
Cbc0010I After 170 nodes, 13 on tree, -119.40443 best solution, best possible -176.33972 (5.38 seconds)
Cbc0012I Integer solution of -120.3733 found by rounding after 20597 iterations and 182 nodes (5.40 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 199 rows 106 columns
Cbc0010I After 293 nodes, 8 on tree, -120.3733 best solution, best possible -176.33972 (6.10 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 119 rows 66 columns
Cbc0010I After 400 nodes, 17 on tree, -120.3733 best solution, best possible -176.33972 (6.80 seconds)
Cbc0001I Search completed - best objective -120.373297, took 34821 iterations and 494 nodes (7.38 seconds)
Cbc0032I Strong branching done 4186 times (79133 iterations), fathomed 111 nodes and fixed 349 variables
Cbc0035I Maximum depth 76, 3765 variables fixed on reduced cost
Total time (CPU seconds):       7.23   (Wallclock seconds):       7.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 377 (-150) rows, 396 (-129) columns and 18183 (-17554) elements
Clp1000I sum of infeasibilities 6.40336e-06 - average 1.6985e-08, 213 fixed columns
Coin0506I Presolve 153 (-224) rows, 182 (-214) columns and 651 (-17532) elements
Clp0006I 0  Obj 34.382302 Dual inf 30.113651 (182)
Clp0029I End of values pass after 182 iterations
Clp0014I Perturbing problem by 0.001% of 1.4920183 - largest nonzero change 1.4897394e-05 ( 0.00091831452%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 40.568535
Clp0000I Optimal - objective value 40.568535
Coin0511I After Postsolve, objective 40.568535, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 40.568535 Dual inf 405.55197 (141)
Clp0014I Perturbing problem by 0.001% of 1.9060098 - largest nonzero change 1.1093492e-05 ( 0.00082503284%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 242.72822
Clp0000I Optimal - objective value 242.72822
Clp0000I Optimal - objective value 242.72822
Coin0511I After Postsolve, objective 242.72822, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 242.7282247 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.14

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 377 rows, 396 columns (396 integer (396 of which binary)) and 18183 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.639%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 138 integers unsatisfied sum - 8.16357
Cbc0038I Pass   1: suminf.    3.60784 (96) obj. -208.453 iterations 41
Cbc0038I Pass   2: suminf.    3.60784 (96) obj. -208.453 iterations 1
Cbc0038I Pass   3: suminf.    2.26075 (77) obj. -130.669 iterations 19
Cbc0038I Pass   4: suminf.    1.77763 (66) obj. -117.285 iterations 11
Cbc0038I Pass   5: suminf.    1.12320 (49) obj. -98.0664 iterations 17
Cbc0038I Pass   6: suminf.    0.43982 (27) obj. -71.8983 iterations 22
Cbc0038I Pass   7: suminf.    0.09748 (9) obj. -50.3345 iterations 18
Cbc0038I Solution found of -39.4531
Cbc0038I Rounding solution of -63.6181 is better than previous of -39.4531

Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 396 columns, reduced to 43 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -63.6181 to -70.2809 (0.14 seconds)
Cbc0038I Round again with cutoff of -87.5258
Cbc0038I Pass   8: suminf.    3.60784 (96) obj. -208.453 iterations 0
Cbc0038I Pass   9: suminf.    3.60784 (96) obj. -208.453 iterations 1
Cbc0038I Pass  10: suminf.    2.03823 (72) obj. -123.025 iterations 24
Cbc0038I Pass  11: suminf.    1.48265 (59) obj. -107.707 iterations 13
Cbc0038I Pass  12: suminf.    0.95921 (44) obj. -92.2629 iterations 15
Cbc0038I Pass  13: suminf.    0.94236 (27) obj. -87.5258 iterations 23
Cbc0038I Pass  14: suminf.    0.98333 (9) obj. -87.5258 iterations 32
Cbc0038I Pass  15: suminf.    0.56009 (10) obj. -87.5258 iterations 4
Cbc0038I Pass  16: suminf.    0.30287 (9) obj. -87.5258 iterations 12
Cbc0038I Pass  17: suminf.    0.30287 (9) obj. -87.5258 iterations 0
Cbc0038I Pass  18: suminf.    0.58124 (3) obj. -87.5258 iterations 14
Cbc0038I Pass  19: suminf.    0.58124 (3) obj. -87.5258 iterations 0
Cbc0038I Pass  20: suminf.    0.13420 (2) obj. -87.5258 iterations 3
Cbc0038I Pass  21: suminf.    0.13420 (2) obj. -87.5258 iterations 0
Cbc0038I Pass  22: suminf.    1.67745 (22) obj. -87.5258 iterations 72
Cbc0038I Pass  23: suminf.    1.51035 (22) obj. -87.5258 iterations 17
Cbc0038I Pass  24: suminf.    1.07836 (8) obj. -87.5258 iterations 27
Cbc0038I Pass  25: suminf.    0.52432 (8) obj. -87.5258 iterations 3
Cbc0038I Pass  26: suminf.    1.91792 (15) obj. -87.5258 iterations 14
Cbc0038I Pass  27: suminf.    1.50361 (15) obj. -89.9337 iterations 7
Cbc0038I Pass  28: suminf.    1.84423 (21) obj. -87.5258 iterations 25
Cbc0038I Pass  29: suminf.    1.72723 (21) obj. -87.5258 iterations 2
Cbc0038I Pass  30: suminf.    1.48418 (7) obj. -87.5258 iterations 22
Cbc0038I Pass  31: suminf.    0.98842 (6) obj. -87.5258 iterations 10
Cbc0038I Pass  32: suminf.    0.98842 (6) obj. -87.5258 iterations 0
Cbc0038I Pass  33: suminf.    1.24961 (5) obj. -87.5258 iterations 9
Cbc0038I Pass  34: suminf.    1.00636 (5) obj. -87.5258 iterations 1
Cbc0038I Pass  35: suminf.    1.18805 (5) obj. -87.5258 iterations 11
Cbc0038I Pass  36: suminf.    0.72367 (6) obj. -90.0503 iterations 7
Cbc0038I Pass  37: suminf.    1.14202 (6) obj. -87.5258 iterations 13
Cbc0038I Rounding solution of -85.7764 is better than previous of -70.2809

Cbc0038I Before mini branch and bound, 245 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 396 columns, reduced to 47 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -85.7764 to -87.752 (0.22 seconds)
Cbc0038I Round again with cutoff of -118.747
Cbc0038I Pass  37: suminf.    3.60784 (96) obj. -208.453 iterations 0
Cbc0038I Pass  38: suminf.    3.60784 (96) obj. -208.453 iterations 1
Cbc0038I Pass  39: suminf.    2.30597 (78) obj. -131.623 iterations 18
Cbc0038I Pass  40: suminf.    1.81652 (66) obj. -118.747 iterations 14
Cbc0038I Pass  41: suminf.    1.30346 (52) obj. -126.303 iterations 15
Cbc0038I Pass  42: suminf.    1.75822 (37) obj. -118.747 iterations 21
Cbc0038I Pass  43: suminf.    1.10633 (36) obj. -118.747 iterations 1
Cbc0038I Pass  44: suminf.    1.38010 (23) obj. -118.747 iterations 28
Cbc0038I Pass  45: suminf.    0.93623 (28) obj. -118.747 iterations 11
Cbc0038I Pass  46: suminf.    1.05974 (10) obj. -118.747 iterations 28
Cbc0038I Pass  47: suminf.    0.75449 (11) obj. -118.747 iterations 3
Cbc0038I Pass  48: suminf.    1.17052 (6) obj. -118.747 iterations 36
Cbc0038I Pass  49: suminf.    1.17052 (6) obj. -118.747 iterations 11
Cbc0038I Pass  50: suminf.    1.00957 (6) obj. -118.747 iterations 11
Cbc0038I Pass  51: suminf.    0.74919 (6) obj. -118.747 iterations 1
Cbc0038I Pass  52: suminf.    1.17052 (6) obj. -118.747 iterations 13
Cbc0038I Pass  53: suminf.    2.39321 (48) obj. -118.747 iterations 45
Cbc0038I Pass  54: suminf.    2.20843 (43) obj. -118.747 iterations 16
Cbc0038I Pass  55: suminf.    2.11919 (28) obj. -118.747 iterations 43
Cbc0038I Pass  56: suminf.    1.07430 (25) obj. -119.649 iterations 13
Cbc0038I Pass  57: suminf.    1.16336 (24) obj. -118.747 iterations 24
Cbc0038I Pass  58: suminf.    1.09108 (25) obj. -118.747 iterations 4
Cbc0038I Pass  59: suminf.    1.37576 (24) obj. -118.747 iterations 9
Cbc0038I Pass  60: suminf.    1.13022 (24) obj. -118.747 iterations 21
Cbc0038I Pass  61: suminf.    3.38673 (28) obj. -118.747 iterations 20
Cbc0038I Pass  62: suminf.    3.38673 (28) obj. -118.747 iterations 0
Cbc0038I Pass  63: suminf.    3.34260 (23) obj. -118.747 iterations 27
Cbc0038I Pass  64: suminf.    3.18348 (23) obj. -118.747 iterations 5
Cbc0038I Pass  65: suminf.    3.34260 (23) obj. -118.747 iterations 6
Cbc0038I Pass  66: suminf.    3.59075 (37) obj. -118.747 iterations 47
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 396 columns, reduced to 51 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -87.752 to -97.7348 (0.34 seconds)
Cbc0038I Round again with cutoff of -155.942
Cbc0038I Pass  66: suminf.    3.60784 (96) obj. -208.453 iterations 0
Cbc0038I Pass  67: suminf.    3.60784 (96) obj. -208.453 iterations 1
Cbc0038I Pass  68: suminf.    3.06862 (77) obj. -155.942 iterations 23
Cbc0038I Pass  69: suminf.    2.40019 (77) obj. -155.942 iterations 14
Cbc0038I Pass  70: suminf.    2.86662 (55) obj. -155.942 iterations 41
Cbc0038I Pass  71: suminf.    2.54519 (55) obj. -155.942 iterations 4
Cbc0038I Pass  72: suminf.    2.54519 (55) obj. -155.942 iterations 1
Cbc0038I Pass  73: suminf.    2.02093 (42) obj. -155.942 iterations 35
Cbc0038I Pass  74: suminf.    2.01547 (51) obj. -155.942 iterations 5
Cbc0038I Pass  75: suminf.    1.46609 (32) obj. -155.942 iterations 63
Cbc0038I Pass  76: suminf.    1.46609 (32) obj. -155.942 iterations 1
Cbc0038I Pass  77: suminf.    3.09981 (51) obj. -155.942 iterations 28
Cbc0038I Pass  78: suminf.    3.05680 (51) obj. -155.942 iterations 12
Cbc0038I Pass  79: suminf.    3.09801 (49) obj. -155.942 iterations 34
Cbc0038I Pass  80: suminf.    3.09801 (49) obj. -155.942 iterations 7
Cbc0038I Pass  81: suminf.    3.09018 (49) obj. -155.942 iterations 10
Cbc0038I Pass  82: suminf.    3.09018 (49) obj. -155.942 iterations 6
Cbc0038I Pass  83: suminf.    2.95829 (45) obj. -155.942 iterations 19
Cbc0038I Pass  84: suminf.    2.95829 (45) obj. -155.942 iterations 4
Cbc0038I Pass  85: suminf.    2.90263 (45) obj. -155.942 iterations 6
Cbc0038I Pass  86: suminf.    2.90263 (45) obj. -155.942 iterations 4
Cbc0038I Pass  87: suminf.    2.92241 (45) obj. -155.942 iterations 6
Cbc0038I Pass  88: suminf.    2.92241 (45) obj. -155.942 iterations 5
Cbc0038I Pass  89: suminf.    2.90263 (45) obj. -155.942 iterations 31
Cbc0038I Pass  90: suminf.    3.44839 (56) obj. -155.942 iterations 63
Cbc0038I Pass  91: suminf.    3.44839 (56) obj. -155.942 iterations 8
Cbc0038I Pass  92: suminf.    3.01409 (48) obj. -155.942 iterations 36
Cbc0038I Pass  93: suminf.    3.01409 (48) obj. -155.942 iterations 6
Cbc0038I Pass  94: suminf.    2.73367 (48) obj. -155.942 iterations 6
Cbc0038I Pass  95: suminf.    2.73367 (48) obj. -155.942 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 250 integers at bound fixed and 0 continuous
Cbc0038I Full problem 377 rows 396 columns, reduced to 45 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of -97.7348 - took 0.32 seconds
Cbc0012I Integer solution of -97.734834 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 46 rows 50 columns
Cbc0031I 147 added rows had average density of 113.83673
Cbc0013I At root node, 147 cuts changed objective from -242.72822 to -146.28979 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 29186 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.589 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3353 row cuts average 374.1 elements, 0 column cuts (0 active)  in 1.545 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 389 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5718 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.628 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4610 row cuts average 10.6 elements, 0 column cuts (0 active)  in 1.122 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 473 row cuts average 191.4 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 371 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.334 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -97.734834 best solution, best possible -146.28979 (9.88 seconds)
Cbc0010I After 3 nodes, 2 on tree, -97.734834 best solution, best possible -143.94243 (10.73 seconds)
Cbc0012I Integer solution of -102.81385 found by DiveCoefficient after 14739 iterations and 6 nodes (11.28 seconds)
Cbc0010I After 15 nodes, 7 on tree, -102.81385 best solution, best possible -143.94243 (11.44 seconds)
Cbc0012I Integer solution of -108.60401 found by rounding after 15189 iterations and 17 nodes (11.47 seconds)
Cbc0012I Integer solution of -117.62345 found by rounding after 15238 iterations and 20 nodes (11.51 seconds)
Cbc0012I Integer solution of -118.06468 found by rounding after 15461 iterations and 27 nodes (11.63 seconds)
Cbc0012I Integer solution of -119.63846 found by rounding after 15893 iterations and 38 nodes (11.82 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 4 rows 5 columns
Cbc0010I After 48 nodes, 5 on tree, -119.63846 best solution, best possible -143.94243 (12.22 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 28 rows 40 columns
Cbc0012I Integer solution of -120.3733 found by RINS after 17740 iterations and 92 nodes (12.98 seconds)
Cbc0010I After 92 nodes, 14 on tree, -120.3733 best solution, best possible -143.94243 (12.98 seconds)
Cbc0010I After 180 nodes, 5 on tree, -120.3733 best solution, best possible -143.94243 (13.69 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 49 rows 58 columns
Cbc0010I After 211 nodes, 10 on tree, -120.3733 best solution, best possible -143.94243 (14.40 seconds)
Cbc0010I After 235 nodes, 4 on tree, -120.3733 best solution, best possible -143.94243 (15.25 seconds)
Cbc0010I After 251 nodes, 6 on tree, -120.3733 best solution, best possible -143.94243 (16.01 seconds)
Cbc0010I After 303 nodes, 12 on tree, -120.3733 best solution, best possible -143.94243 (16.71 seconds)
Cbc0010I After 357 nodes, 4 on tree, -120.3733 best solution, best possible -143.94243 (17.42 seconds)
Cbc0010I After 390 nodes, 3 on tree, -120.3733 best solution, best possible -143.94243 (18.36 seconds)
Cbc0010I After 400 nodes, 5 on tree, -120.3733 best solution, best possible -143.94243 (19.06 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 121 rows 142 columns
Cbc0010I After 406 nodes, 4 on tree, -120.3733 best solution, best possible -143.94243 (19.78 seconds)
Cbc0010I After 411 nodes, 4 on tree, -120.3733 best solution, best possible -143.94243 (20.63 seconds)
Cbc0010I After 426 nodes, 7 on tree, -120.3733 best solution, best possible -143.94243 (21.37 seconds)
Cbc0010I After 448 nodes, 10 on tree, -120.3733 best solution, best possible -143.94243 (22.08 seconds)
Cbc0010I After 480 nodes, 10 on tree, -120.3733 best solution, best possible -143.94243 (22.78 seconds)
Cbc0010I After 491 nodes, 10 on tree, -120.3733 best solution, best possible -143.94243 (23.64 seconds)
Cbc0038I Full problem 377 rows 396 columns, reduced to 133 rows 145 columns
Cbc0010I After 500 nodes, 9 on tree, -120.3733 best solution, best possible -143.94243 (24.52 seconds)
Cbc0010I After 536 nodes, 12 on tree, -120.3733 best solution, best possible -143.94243 (25.23 seconds)
Cbc0010I After 582 nodes, 6 on tree, -120.3733 best solution, best possible -143.94243 (25.95 seconds)
Cbc0001I Search completed - best objective -120.373297, took 49769 iterations and 600 nodes (26.32 seconds)
Cbc0032I Strong branching done 3348 times (58161 iterations), fathomed 34 nodes and fixed 83 variables
Cbc0035I Maximum depth 24, 3518 variables fixed on reduced cost
Total time (CPU seconds):       25.61   (Wallclock seconds):       26.43

