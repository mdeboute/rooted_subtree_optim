Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 261 (-3) columns and 1488 (-57) elements
Clp1000I sum of infeasibilities 5.11094e-06 - average 1.02424e-08, 160 fixed columns
Coin0506I Presolve 187 (-312) rows, 100 (-161) columns and 554 (-934) elements
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.7429681 - largest nonzero change 0 ( 0%) - largest zero change 2.6728704e-05
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Coin0511I After Postsolve, objective 177.30905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13610725 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Coin0511I After Postsolve, objective 177.30905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 177.3090494 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 261 columns (260 integer (260 of which binary)) and 1488 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 66 integers unsatisfied sum - 13.9339
Cbc0038I Solution found of 18.3009
Cbc0038I Relaxing continuous gives -2.73703
Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 115 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -2.73703 to -113.854 (0.08 seconds)
Cbc0038I Round again with cutoff of -120.2
Cbc0038I Pass   1: suminf.    6.40346 (64) obj. -120.2 iterations 211
Cbc0038I Pass   2: suminf.    2.63580 (9) obj. -120.2 iterations 79
Cbc0038I Pass   3: suminf.    1.89965 (12) obj. -120.2 iterations 26
Cbc0038I Pass   4: suminf.    3.17592 (9) obj. -120.2 iterations 32
Cbc0038I Pass   5: suminf.    2.82256 (7) obj. -120.2 iterations 15
Cbc0038I Pass   6: suminf.    2.76445 (7) obj. -120.2 iterations 5
Cbc0038I Pass   7: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass   8: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass   9: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  10: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I Pass  11: suminf.    3.34057 (9) obj. -120.2 iterations 30
Cbc0038I Pass  12: suminf.    2.40643 (8) obj. -120.2 iterations 16
Cbc0038I Pass  13: suminf.    2.86055 (9) obj. -120.2 iterations 24
Cbc0038I Pass  14: suminf.    2.82597 (8) obj. -120.2 iterations 10
Cbc0038I Pass  15: suminf.    3.06886 (8) obj. -120.2 iterations 28
Cbc0038I Pass  16: suminf.    2.76445 (7) obj. -120.2 iterations 8
Cbc0038I Pass  17: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass  18: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass  19: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  20: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I Pass  21: suminf.    3.34057 (9) obj. -120.2 iterations 30
Cbc0038I Pass  22: suminf.    2.40643 (8) obj. -120.2 iterations 16
Cbc0038I Pass  23: suminf.    2.86055 (9) obj. -120.2 iterations 24
Cbc0038I Pass  24: suminf.    2.82597 (8) obj. -120.2 iterations 10
Cbc0038I Pass  25: suminf.    3.06886 (8) obj. -120.2 iterations 28
Cbc0038I Pass  26: suminf.    2.76445 (7) obj. -120.2 iterations 8
Cbc0038I Pass  27: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass  28: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass  29: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  30: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 188 rows 106 columns
Cbc0038I Mini branch and bound improved solution from -113.854 to -115.324 (0.19 seconds)
Cbc0038I Round again with cutoff of -131.622
Cbc0038I Pass  30: suminf.    7.03690 (64) obj. -131.622 iterations 0
Cbc0038I Pass  31: suminf.    4.02849 (16) obj. -131.622 iterations 82
Cbc0038I Pass  32: suminf.    4.02849 (16) obj. -131.622 iterations 0
Cbc0038I Pass  33: suminf.    4.08292 (12) obj. -131.622 iterations 42
Cbc0038I Pass  34: suminf.    4.08292 (12) obj. -131.622 iterations 4
Cbc0038I Pass  35: suminf.    3.39429 (11) obj. -131.622 iterations 32
Cbc0038I Pass  36: suminf.    3.39429 (11) obj. -131.622 iterations 5
Cbc0038I Pass  37: suminf.    4.09983 (10) obj. -131.622 iterations 29
Cbc0038I Pass  38: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  39: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  40: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  41: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I Pass  42: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  43: suminf.    4.09983 (10) obj. -131.622 iterations 30
Cbc0038I Pass  44: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  45: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  46: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  47: suminf.    3.39576 (10) obj. -131.622 iterations 35
Cbc0038I Pass  48: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  49: suminf.    4.09983 (10) obj. -131.622 iterations 29
Cbc0038I Pass  50: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  51: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  52: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  53: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I Pass  54: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  55: suminf.    4.09983 (10) obj. -131.622 iterations 30
Cbc0038I Pass  56: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  57: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  58: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  59: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 188 rows 106 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -115.324 - took 0.27 seconds
Cbc0012I Integer solution of -115.32416 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 117 rows 68 columns
Cbc0031I 41 added rows had average density of 132.46341
Cbc0013I At root node, 41 cuts changed objective from -177.30905 to -159.98682 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25845 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.454 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3091 row cuts average 254.3 elements, 0 column cuts (0 active)  in 0.390 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.387 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 227 row cuts average 249.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -115.32416 best solution, best possible -159.98682 (3.96 seconds)
Cbc0010I After 22 nodes, 9 on tree, -115.32416 best solution, best possible -159.98682 (4.67 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 0 rows 0 columns
Cbc0004I Integer solution of -115.37394 found after 18054 iterations and 77 nodes (4.90 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 2 rows 4 columns
Cbc0010I After 142 nodes, 11 on tree, -115.37394 best solution, best possible -159.98682 (5.37 seconds)
Cbc0010I After 194 nodes, 5 on tree, -115.37394 best solution, best possible -159.98615 (6.07 seconds)
Cbc0012I Integer solution of -115.63206 found by rounding after 25166 iterations and 238 nodes (6.53 seconds)
Cbc0004I Integer solution of -116.28431 found after 25925 iterations and 257 nodes (6.58 seconds)
Cbc0010I After 290 nodes, 7 on tree, -116.28431 best solution, best possible -159.98615 (6.77 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 159 rows 86 columns
Cbc0001I Search completed - best objective -116.284311, took 30330 iterations and 350 nodes (7.13 seconds)
Cbc0032I Strong branching done 3052 times (80888 iterations), fathomed 37 nodes and fixed 123 variables
Cbc0035I Maximum depth 59, 2531 variables fixed on reduced cost
Total time (CPU seconds):       6.94   (Wallclock seconds):       7.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 341 (-185) rows, 362 (-162) columns and 14814 (-20922) elements
Clp1000I sum of infeasibilities 2.9304e-06 - average 8.59354e-09, 227 fixed columns
Coin0506I Presolve 105 (-236) rows, 133 (-229) columns and 457 (-14357) elements
Clp0006I 0  Obj 46.213659 Dual inf 19.686963 (132)
Clp0029I End of values pass after 133 iterations
Clp0014I Perturbing problem by 0.001% of 1.6827182 - largest nonzero change 2.3991098e-05 ( 0.0016125406%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 51.076667
Clp0000I Optimal - objective value 51.076667
Coin0511I After Postsolve, objective 51.076667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.076667 Dual inf 287.02092 (105)
Clp0014I Perturbing problem by 0.001% of 1.768162 - largest nonzero change 2.2898578e-05 ( 0.0021869008%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 218.66306
Clp0000I Optimal - objective value 218.66306
Clp0000I Optimal - objective value 218.66306
Coin0511I After Postsolve, objective 218.66306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 218.6630605 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0004I processed model has 341 rows, 362 columns (362 integer (362 of which binary)) and 14814 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.465%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 95 integers unsatisfied sum - 6.88369
Cbc0038I Pass   1: suminf.    4.03947 (85) obj. -194.286 iterations 24
Cbc0038I Pass   2: suminf.    2.86957 (65) obj. -133.13 iterations 20
Cbc0038I Pass   3: suminf.    1.70488 (41) obj. -103.635 iterations 24
Cbc0038I Pass   4: suminf.    0.93750 (24) obj. -85.4939 iterations 17
Cbc0038I Pass   5: suminf.    0.03125 (1) obj. -63.4002 iterations 23
Cbc0038I Solution found of -62.4314
Cbc0038I Rounding solution of -70.1468 is better than previous of -62.4314

Cbc0038I Before mini branch and bound, 267 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 362 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -84.9954
Cbc0038I Pass   6: suminf.    4.03947 (85) obj. -194.286 iterations 0
Cbc0038I Pass   7: suminf.    2.92152 (66) obj. -134.078 iterations 19
Cbc0038I Pass   8: suminf.    2.27310 (53) obj. -117.924 iterations 13
Cbc0038I Pass   9: suminf.    1.24669 (31) obj. -92.1847 iterations 22
Cbc0038I Pass  10: suminf.    0.93451 (19) obj. -84.9954 iterations 46
Cbc0038I Pass  11: suminf.    1.05700 (10) obj. -88.9092 iterations 24
Cbc0038I Pass  12: suminf.    0.39067 (8) obj. -85.4081 iterations 1
Cbc0038I Pass  13: suminf.    1.23429 (6) obj. -84.9954 iterations 35
Cbc0038I Pass  14: suminf.    0.91145 (4) obj. -96.1872 iterations 15
Cbc0038I Pass  15: suminf.    0.21906 (3) obj. -92.7308 iterations 2
Cbc0038I Pass  16: suminf.    1.23429 (6) obj. -84.9954 iterations 18
Cbc0038I Pass  17: suminf.    2.47026 (21) obj. -84.9954 iterations 57
Cbc0038I Pass  18: suminf.    0.75080 (15) obj. -84.9954 iterations 21
Cbc0038I Pass  19: suminf.    0.75080 (15) obj. -84.9954 iterations 0
Cbc0038I Pass  20: suminf.    1.16773 (7) obj. -84.9954 iterations 15
Cbc0038I Pass  21: suminf.    0.56125 (7) obj. -84.9954 iterations 1
Cbc0038I Pass  22: suminf.    1.10765 (5) obj. -84.9954 iterations 9
Cbc0038I Pass  23: suminf.    0.44333 (5) obj. -84.9954 iterations 6
Cbc0038I Pass  24: suminf.    1.19408 (24) obj. -84.9954 iterations 57
Cbc0038I Pass  25: suminf.    0.85148 (19) obj. -84.9954 iterations 39
Cbc0038I Pass  26: suminf.    1.92074 (16) obj. -84.9954 iterations 66
Cbc0038I Pass  27: suminf.    1.41153 (11) obj. -84.9954 iterations 13
Cbc0038I Pass  28: suminf.    0.81223 (5) obj. -84.9954 iterations 32
Cbc0038I Pass  29: suminf.    0.20829 (5) obj. -84.9954 iterations 14
Cbc0038I Pass  30: suminf.    0.65683 (6) obj. -84.9954 iterations 9
Cbc0038I Pass  31: suminf.    2.07587 (25) obj. -84.9954 iterations 100
Cbc0038I Pass  32: suminf.    1.12109 (17) obj. -84.9954 iterations 43
Cbc0038I Pass  33: suminf.    1.40087 (12) obj. -84.9954 iterations 13
Cbc0038I Pass  34: suminf.    0.98572 (12) obj. -88.268 iterations 3
Cbc0038I Pass  35: suminf.    1.21818 (7) obj. -84.9954 iterations 21
Cbc0038I Rounding solution of -73.4355 is better than previous of -70.1468

Cbc0038I Before mini branch and bound, 212 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 362 columns, reduced to 129 rows 144 columns - 34 fixed gives 92, 109 - ok now
Cbc0038I Full problem 341 rows 362 columns, reduced to 46 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -73.4355 to -84.5022 (0.25 seconds)
Cbc0038I Round again with cutoff of -111.723
Cbc0038I Pass  35: suminf.    4.03947 (85) obj. -194.286 iterations 0
Cbc0038I Pass  36: suminf.    3.25224 (72) obj. -140.694 iterations 13
Cbc0038I Pass  37: suminf.    2.27310 (53) obj. -117.924 iterations 19
Cbc0038I Pass  38: suminf.    2.08418 (42) obj. -111.723 iterations 35
Cbc0038I Pass  39: suminf.    1.14685 (25) obj. -111.723 iterations 50
Cbc0038I Pass  40: suminf.    0.91435 (25) obj. -115.21 iterations 1
Cbc0038I Pass  41: suminf.    0.94406 (16) obj. -111.723 iterations 53
Cbc0038I Pass  42: suminf.    0.68718 (6) obj. -111.723 iterations 10
Cbc0038I Pass  43: suminf.    0.32921 (6) obj. -114.617 iterations 11
Cbc0038I Pass  44: suminf.    0.84867 (14) obj. -111.723 iterations 33
Cbc0038I Pass  45: suminf.    0.29771 (4) obj. -112.648 iterations 20
Cbc0038I Pass  46: suminf.    1.25048 (19) obj. -111.723 iterations 69
Cbc0038I Pass  47: suminf.    1.08048 (19) obj. -111.723 iterations 24
Cbc0038I Pass  48: suminf.    0.94942 (20) obj. -111.723 iterations 40
Cbc0038I Pass  49: suminf.    0.76853 (15) obj. -111.723 iterations 19
Cbc0038I Pass  50: suminf.    0.99185 (8) obj. -111.723 iterations 29
Cbc0038I Pass  51: suminf.    0.79648 (12) obj. -111.723 iterations 16
Cbc0038I Pass  52: suminf.    0.68251 (7) obj. -111.723 iterations 26
Cbc0038I Pass  53: suminf.    0.33956 (7) obj. -112.973 iterations 8
Cbc0038I Pass  54: suminf.    0.71554 (7) obj. -111.723 iterations 11
Cbc0038I Pass  55: suminf.    0.95194 (20) obj. -111.723 iterations 35
Cbc0038I Pass  56: suminf.    0.85834 (19) obj. -111.723 iterations 11
Cbc0038I Pass  57: suminf.    2.06042 (12) obj. -111.723 iterations 32
Cbc0038I Pass  58: suminf.    1.16889 (13) obj. -111.723 iterations 5
Cbc0038I Pass  59: suminf.    1.49313 (8) obj. -111.723 iterations 25
Cbc0038I Pass  60: suminf.    1.11596 (8) obj. -111.723 iterations 7
Cbc0038I Pass  61: suminf.    0.51919 (8) obj. -111.723 iterations 18
Cbc0038I Pass  62: suminf.    0.51919 (8) obj. -111.723 iterations 0
Cbc0038I Pass  63: suminf.    0.53723 (8) obj. -111.723 iterations 14
Cbc0038I Pass  64: suminf.    0.53723 (8) obj. -111.723 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 362 columns, reduced to 69 rows 77 columns
Cbc0038I Mini branch and bound improved solution from -84.5022 to -92.9729 (0.41 seconds)
Cbc0038I Round again with cutoff of -143.795
Cbc0038I Pass  64: suminf.    4.03947 (85) obj. -194.286 iterations 0
Cbc0038I Pass  65: suminf.    3.28879 (63) obj. -143.795 iterations 47
Cbc0038I Pass  66: suminf.    2.74487 (62) obj. -144.682 iterations 7
Cbc0038I Pass  67: suminf.    2.65346 (51) obj. -143.795 iterations 57
Cbc0038I Pass  68: suminf.    1.87051 (43) obj. -143.795 iterations 24
Cbc0038I Pass  69: suminf.    1.62741 (43) obj. -146.713 iterations 3
Cbc0038I Pass  70: suminf.    1.99503 (45) obj. -143.795 iterations 38
Cbc0038I Pass  71: suminf.    1.63852 (36) obj. -143.795 iterations 15
Cbc0038I Pass  72: suminf.    1.33183 (36) obj. -146.555 iterations 8
Cbc0038I Pass  73: suminf.    1.43500 (25) obj. -143.795 iterations 70
Cbc0038I Pass  74: suminf.    1.43500 (25) obj. -143.795 iterations 1
Cbc0038I Pass  75: suminf.    2.70970 (21) obj. -143.795 iterations 25
Cbc0038I Pass  76: suminf.    2.70970 (21) obj. -143.795 iterations 3
Cbc0038I Pass  77: suminf.    1.40022 (16) obj. -143.795 iterations 27
Cbc0038I Pass  78: suminf.    1.40022 (16) obj. -143.795 iterations 5
Cbc0038I Pass  79: suminf.    1.35631 (16) obj. -143.795 iterations 7
Cbc0038I Pass  80: suminf.    1.35631 (16) obj. -143.795 iterations 5
Cbc0038I Pass  81: suminf.    1.40022 (16) obj. -143.795 iterations 7
Cbc0038I Pass  82: suminf.    2.37999 (26) obj. -143.795 iterations 34
Cbc0038I Pass  83: suminf.    2.30193 (27) obj. -143.795 iterations 8
Cbc0038I Pass  84: suminf.    3.34366 (21) obj. -143.795 iterations 33
Cbc0038I Pass  85: suminf.    1.83474 (19) obj. -143.795 iterations 10
Cbc0038I Pass  86: suminf.    1.83474 (19) obj. -143.795 iterations 0
Cbc0038I Pass  87: suminf.    2.39825 (17) obj. -143.795 iterations 20
Cbc0038I Pass  88: suminf.    2.22943 (18) obj. -143.795 iterations 7
Cbc0038I Pass  89: suminf.    1.64673 (16) obj. -143.795 iterations 24
Cbc0038I Pass  90: suminf.    1.60250 (16) obj. -143.795 iterations 8
Cbc0038I Pass  91: suminf.    1.40022 (16) obj. -143.795 iterations 15
Cbc0038I Pass  92: suminf.    1.40022 (16) obj. -143.795 iterations 5
Cbc0038I Pass  93: suminf.    1.35631 (16) obj. -143.795 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 362 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I After 0.47 seconds - Feasibility pump exiting with objective of -92.9729 - took 0.37 seconds
Cbc0012I Integer solution of -92.972921 found by feasibility pump after 0 iterations and 0 nodes (0.47 seconds)
Cbc0038I Full problem 341 rows 362 columns, reduced to 58 rows 64 columns
Cbc0031I 109 added rows had average density of 88.541284
Cbc0013I At root node, 109 cuts changed objective from -218.63146 to -134.84726 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18375 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.395 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2883 row cuts average 338.9 elements, 0 column cuts (0 active)  in 0.956 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 343 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5575 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.409 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3136 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.810 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 381 row cuts average 215.7 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -92.972921 best solution, best possible -134.84726 (6.86 seconds)
Cbc0012I Integer solution of -107.64332 found by DiveCoefficient after 12859 iterations and 3 nodes (7.52 seconds)
Cbc0012I Integer solution of -113.85446 found by DiveCoefficient after 12947 iterations and 4 nodes (7.56 seconds)
Cbc0010I After 4 nodes, 5 on tree, -113.85446 best solution, best possible -134.84726 (7.56 seconds)
Cbc0012I Integer solution of -114.80163 found by DiveCoefficient after 13008 iterations and 6 nodes (7.61 seconds)
Cbc0012I Integer solution of -116.28431 found by DiveCoefficient after 13054 iterations and 9 nodes (7.65 seconds)
Cbc0038I Full problem 341 rows 362 columns, reduced to 130 rows 141 columns
Cbc0010I After 41 nodes, 4 on tree, -116.28431 best solution, best possible -134.84726 (9.45 seconds)
Cbc0010I After 48 nodes, 7 on tree, -116.28431 best solution, best possible -134.84726 (10.21 seconds)
Cbc0001I Search completed - best objective -116.284311, took 17214 iterations and 84 nodes (10.66 seconds)
Cbc0032I Strong branching done 928 times (26500 iterations), fathomed 7 nodes and fixed 29 variables
Cbc0035I Maximum depth 17, 330 variables fixed on reduced cost
Total time (CPU seconds):       10.40   (Wallclock seconds):       10.73

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 261 (-3) columns and 1488 (-57) elements
Clp1000I sum of infeasibilities 5.11094e-06 - average 1.02424e-08, 160 fixed columns
Coin0506I Presolve 187 (-312) rows, 100 (-161) columns and 554 (-934) elements
Clp0029I End of values pass after 100 iterations
Clp0014I Perturbing problem by 0.001% of 2.7429681 - largest nonzero change 0 ( 0%) - largest zero change 2.6728704e-05
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Coin0511I After Postsolve, objective 177.30905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13610725 - largest nonzero change 0 ( 0%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Clp0000I Optimal - objective value 177.30905
Coin0511I After Postsolve, objective 177.30905, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 177.3090494 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 261 columns (260 integer (260 of which binary)) and 1488 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 66 integers unsatisfied sum - 13.9339
Cbc0038I Solution found of 18.3009
Cbc0038I Relaxing continuous gives -2.73703
Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 115 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -2.73703 to -113.854 (0.08 seconds)
Cbc0038I Round again with cutoff of -120.2
Cbc0038I Pass   1: suminf.    6.40346 (64) obj. -120.2 iterations 211
Cbc0038I Pass   2: suminf.    2.63580 (9) obj. -120.2 iterations 79
Cbc0038I Pass   3: suminf.    1.89965 (12) obj. -120.2 iterations 26
Cbc0038I Pass   4: suminf.    3.17592 (9) obj. -120.2 iterations 32
Cbc0038I Pass   5: suminf.    2.82256 (7) obj. -120.2 iterations 15
Cbc0038I Pass   6: suminf.    2.76445 (7) obj. -120.2 iterations 5
Cbc0038I Pass   7: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass   8: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass   9: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  10: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I Pass  11: suminf.    3.34057 (9) obj. -120.2 iterations 30
Cbc0038I Pass  12: suminf.    2.40643 (8) obj. -120.2 iterations 16
Cbc0038I Pass  13: suminf.    2.86055 (9) obj. -120.2 iterations 24
Cbc0038I Pass  14: suminf.    2.82597 (8) obj. -120.2 iterations 10
Cbc0038I Pass  15: suminf.    3.06886 (8) obj. -120.2 iterations 28
Cbc0038I Pass  16: suminf.    2.76445 (7) obj. -120.2 iterations 8
Cbc0038I Pass  17: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass  18: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass  19: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  20: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I Pass  21: suminf.    3.34057 (9) obj. -120.2 iterations 30
Cbc0038I Pass  22: suminf.    2.40643 (8) obj. -120.2 iterations 16
Cbc0038I Pass  23: suminf.    2.86055 (9) obj. -120.2 iterations 24
Cbc0038I Pass  24: suminf.    2.82597 (8) obj. -120.2 iterations 10
Cbc0038I Pass  25: suminf.    3.06886 (8) obj. -120.2 iterations 28
Cbc0038I Pass  26: suminf.    2.76445 (7) obj. -120.2 iterations 8
Cbc0038I Pass  27: suminf.    3.19203 (9) obj. -120.2 iterations 21
Cbc0038I Pass  28: suminf.    3.19203 (9) obj. -120.2 iterations 0
Cbc0038I Pass  29: suminf.    2.82110 (9) obj. -120.2 iterations 31
Cbc0038I Pass  30: suminf.    2.82110 (9) obj. -120.2 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 188 rows 106 columns
Cbc0038I Mini branch and bound improved solution from -113.854 to -115.324 (0.17 seconds)
Cbc0038I Round again with cutoff of -131.622
Cbc0038I Pass  30: suminf.    7.03690 (64) obj. -131.622 iterations 0
Cbc0038I Pass  31: suminf.    4.02849 (16) obj. -131.622 iterations 82
Cbc0038I Pass  32: suminf.    4.02849 (16) obj. -131.622 iterations 0
Cbc0038I Pass  33: suminf.    4.08292 (12) obj. -131.622 iterations 42
Cbc0038I Pass  34: suminf.    4.08292 (12) obj. -131.622 iterations 4
Cbc0038I Pass  35: suminf.    3.39429 (11) obj. -131.622 iterations 32
Cbc0038I Pass  36: suminf.    3.39429 (11) obj. -131.622 iterations 5
Cbc0038I Pass  37: suminf.    4.09983 (10) obj. -131.622 iterations 29
Cbc0038I Pass  38: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  39: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  40: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  41: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I Pass  42: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  43: suminf.    4.09983 (10) obj. -131.622 iterations 30
Cbc0038I Pass  44: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  45: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  46: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  47: suminf.    3.39576 (10) obj. -131.622 iterations 35
Cbc0038I Pass  48: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  49: suminf.    4.09983 (10) obj. -131.622 iterations 29
Cbc0038I Pass  50: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  51: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  52: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  53: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I Pass  54: suminf.    3.18258 (11) obj. -131.622 iterations 13
Cbc0038I Pass  55: suminf.    4.09983 (10) obj. -131.622 iterations 30
Cbc0038I Pass  56: suminf.    3.33928 (10) obj. -131.622 iterations 10
Cbc0038I Pass  57: suminf.    3.30869 (9) obj. -131.622 iterations 3
Cbc0038I Pass  58: suminf.    3.30869 (9) obj. -131.622 iterations 0
Cbc0038I Pass  59: suminf.    3.39576 (10) obj. -131.622 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 261 columns, reduced to 188 rows 106 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -115.324 - took 0.25 seconds
Cbc0012I Integer solution of -115.32416 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 117 rows 68 columns
Cbc0031I 41 added rows had average density of 132.46341
Cbc0013I At root node, 41 cuts changed objective from -177.30905 to -159.98682 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25845 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.428 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3091 row cuts average 254.3 elements, 0 column cuts (0 active)  in 0.368 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.374 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 227 row cuts average 249.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -115.32416 best solution, best possible -159.98682 (3.76 seconds)
Cbc0010I After 24 nodes, 9 on tree, -115.32416 best solution, best possible -159.98682 (4.48 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 0 rows 0 columns
Cbc0004I Integer solution of -115.37394 found after 18054 iterations and 77 nodes (4.68 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 2 rows 4 columns
Cbc0010I After 151 nodes, 12 on tree, -115.37394 best solution, best possible -159.98682 (5.18 seconds)
Cbc0010I After 195 nodes, 6 on tree, -115.37394 best solution, best possible -159.98615 (5.89 seconds)
Cbc0012I Integer solution of -115.63206 found by rounding after 25166 iterations and 238 nodes (6.24 seconds)
Cbc0004I Integer solution of -116.28431 found after 25925 iterations and 257 nodes (6.29 seconds)
Cbc0038I Full problem 499 rows 261 columns, reduced to 159 rows 86 columns
Cbc0010I After 297 nodes, 6 on tree, -116.28431 best solution, best possible -159.98615 (6.59 seconds)
Cbc0001I Search completed - best objective -116.284311, took 30330 iterations and 350 nodes (6.82 seconds)
Cbc0032I Strong branching done 3052 times (80888 iterations), fathomed 37 nodes and fixed 123 variables
Cbc0035I Maximum depth 59, 2531 variables fixed on reduced cost
Total time (CPU seconds):       6.69   (Wallclock seconds):       6.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 341 (-186) rows, 362 (-163) columns and 14814 (-20923) elements
Clp1000I sum of infeasibilities 2.9304e-06 - average 8.59354e-09, 227 fixed columns
Coin0506I Presolve 105 (-236) rows, 133 (-229) columns and 457 (-14357) elements
Clp0006I 0  Obj 46.213659 Dual inf 19.686963 (132)
Clp0029I End of values pass after 133 iterations
Clp0014I Perturbing problem by 0.001% of 1.6827182 - largest nonzero change 2.3991098e-05 ( 0.0016125406%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 51.076667
Clp0000I Optimal - objective value 51.076667
Coin0511I After Postsolve, objective 51.076667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.076667 Dual inf 287.02092 (105)
Clp0014I Perturbing problem by 0.001% of 1.768162 - largest nonzero change 2.2898578e-05 ( 0.0021869008%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 218.66306
Clp0000I Optimal - objective value 218.66306
Clp0000I Optimal - objective value 218.66306
Coin0511I After Postsolve, objective 218.66306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 218.6630605 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 341 rows, 362 columns (362 integer (362 of which binary)) and 14814 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.465%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 95 integers unsatisfied sum - 6.88369
Cbc0038I Pass   1: suminf.    4.03947 (85) obj. -194.286 iterations 24
Cbc0038I Pass   2: suminf.    2.86957 (65) obj. -133.13 iterations 20
Cbc0038I Pass   3: suminf.    1.70488 (41) obj. -103.635 iterations 24
Cbc0038I Pass   4: suminf.    0.93750 (24) obj. -85.4939 iterations 17
Cbc0038I Pass   5: suminf.    0.03125 (1) obj. -63.4002 iterations 23
Cbc0038I Solution found of -62.4314
Cbc0038I Rounding solution of -70.1468 is better than previous of -62.4314

Cbc0038I Before mini branch and bound, 267 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 362 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -84.9954
Cbc0038I Pass   6: suminf.    4.03947 (85) obj. -194.286 iterations 0
Cbc0038I Pass   7: suminf.    2.92152 (66) obj. -134.078 iterations 19
Cbc0038I Pass   8: suminf.    2.27310 (53) obj. -117.924 iterations 13
Cbc0038I Pass   9: suminf.    1.24669 (31) obj. -92.1847 iterations 22
Cbc0038I Pass  10: suminf.    0.93451 (19) obj. -84.9954 iterations 46
Cbc0038I Pass  11: suminf.    1.05700 (10) obj. -88.9092 iterations 24
Cbc0038I Pass  12: suminf.    0.39067 (8) obj. -85.4081 iterations 1
Cbc0038I Pass  13: suminf.    1.23429 (6) obj. -84.9954 iterations 35
Cbc0038I Pass  14: suminf.    0.91145 (4) obj. -96.1872 iterations 15
Cbc0038I Pass  15: suminf.    0.21906 (3) obj. -92.7308 iterations 2
Cbc0038I Pass  16: suminf.    1.23429 (6) obj. -84.9954 iterations 18
Cbc0038I Pass  17: suminf.    2.47026 (21) obj. -84.9954 iterations 57
Cbc0038I Pass  18: suminf.    0.75080 (15) obj. -84.9954 iterations 21
Cbc0038I Pass  19: suminf.    0.75080 (15) obj. -84.9954 iterations 0
Cbc0038I Pass  20: suminf.    1.16773 (7) obj. -84.9954 iterations 15
Cbc0038I Pass  21: suminf.    0.56125 (7) obj. -84.9954 iterations 1
Cbc0038I Pass  22: suminf.    1.10765 (5) obj. -84.9954 iterations 9
Cbc0038I Pass  23: suminf.    0.44333 (5) obj. -84.9954 iterations 6
Cbc0038I Pass  24: suminf.    1.19408 (24) obj. -84.9954 iterations 57
Cbc0038I Pass  25: suminf.    0.85148 (19) obj. -84.9954 iterations 39
Cbc0038I Pass  26: suminf.    1.92074 (16) obj. -84.9954 iterations 66
Cbc0038I Pass  27: suminf.    1.41153 (11) obj. -84.9954 iterations 13
Cbc0038I Pass  28: suminf.    0.81223 (5) obj. -84.9954 iterations 32
Cbc0038I Pass  29: suminf.    0.20829 (5) obj. -84.9954 iterations 14
Cbc0038I Pass  30: suminf.    0.65683 (6) obj. -84.9954 iterations 9
Cbc0038I Pass  31: suminf.    2.07587 (25) obj. -84.9954 iterations 100
Cbc0038I Pass  32: suminf.    1.12109 (17) obj. -84.9954 iterations 43
Cbc0038I Pass  33: suminf.    1.40087 (12) obj. -84.9954 iterations 13
Cbc0038I Pass  34: suminf.    0.98572 (12) obj. -88.268 iterations 3
Cbc0038I Pass  35: suminf.    1.21818 (7) obj. -84.9954 iterations 21
Cbc0038I Rounding solution of -73.4355 is better than previous of -70.1468

Cbc0038I Before mini branch and bound, 212 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 362 columns, reduced to 129 rows 144 columns - 34 fixed gives 92, 109 - ok now
Cbc0038I Full problem 341 rows 362 columns, reduced to 46 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -73.4355 to -84.5022 (0.25 seconds)
Cbc0038I Round again with cutoff of -111.723
Cbc0038I Pass  35: suminf.    4.03947 (85) obj. -194.286 iterations 0
Cbc0038I Pass  36: suminf.    3.25224 (72) obj. -140.694 iterations 13
Cbc0038I Pass  37: suminf.    2.27310 (53) obj. -117.924 iterations 19
Cbc0038I Pass  38: suminf.    2.08418 (42) obj. -111.723 iterations 35
Cbc0038I Pass  39: suminf.    1.14685 (25) obj. -111.723 iterations 50
Cbc0038I Pass  40: suminf.    0.91435 (25) obj. -115.21 iterations 1
Cbc0038I Pass  41: suminf.    0.94406 (16) obj. -111.723 iterations 53
Cbc0038I Pass  42: suminf.    0.68718 (6) obj. -111.723 iterations 10
Cbc0038I Pass  43: suminf.    0.32921 (6) obj. -114.617 iterations 11
Cbc0038I Pass  44: suminf.    0.84867 (14) obj. -111.723 iterations 33
Cbc0038I Pass  45: suminf.    0.29771 (4) obj. -112.648 iterations 20
Cbc0038I Pass  46: suminf.    1.25048 (19) obj. -111.723 iterations 69
Cbc0038I Pass  47: suminf.    1.08048 (19) obj. -111.723 iterations 24
Cbc0038I Pass  48: suminf.    0.94942 (20) obj. -111.723 iterations 40
Cbc0038I Pass  49: suminf.    0.76853 (15) obj. -111.723 iterations 19
Cbc0038I Pass  50: suminf.    0.99185 (8) obj. -111.723 iterations 29
Cbc0038I Pass  51: suminf.    0.79648 (12) obj. -111.723 iterations 16
Cbc0038I Pass  52: suminf.    0.68251 (7) obj. -111.723 iterations 26
Cbc0038I Pass  53: suminf.    0.33956 (7) obj. -112.973 iterations 8
Cbc0038I Pass  54: suminf.    0.71554 (7) obj. -111.723 iterations 11
Cbc0038I Pass  55: suminf.    0.95194 (20) obj. -111.723 iterations 35
Cbc0038I Pass  56: suminf.    0.85834 (19) obj. -111.723 iterations 11
Cbc0038I Pass  57: suminf.    2.06042 (12) obj. -111.723 iterations 32
Cbc0038I Pass  58: suminf.    1.16889 (13) obj. -111.723 iterations 5
Cbc0038I Pass  59: suminf.    1.49313 (8) obj. -111.723 iterations 25
Cbc0038I Pass  60: suminf.    1.11596 (8) obj. -111.723 iterations 7
Cbc0038I Pass  61: suminf.    0.51919 (8) obj. -111.723 iterations 18
Cbc0038I Pass  62: suminf.    0.51919 (8) obj. -111.723 iterations 0
Cbc0038I Pass  63: suminf.    0.53723 (8) obj. -111.723 iterations 14
Cbc0038I Pass  64: suminf.    0.53723 (8) obj. -111.723 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 362 columns, reduced to 69 rows 77 columns
Cbc0038I Mini branch and bound improved solution from -84.5022 to -92.9729 (0.40 seconds)
Cbc0038I Round again with cutoff of -143.795
Cbc0038I Pass  64: suminf.    4.03947 (85) obj. -194.286 iterations 0
Cbc0038I Pass  65: suminf.    3.28879 (63) obj. -143.795 iterations 47
Cbc0038I Pass  66: suminf.    2.74487 (62) obj. -144.682 iterations 7
Cbc0038I Pass  67: suminf.    2.65346 (51) obj. -143.795 iterations 57
Cbc0038I Pass  68: suminf.    1.87051 (43) obj. -143.795 iterations 24
Cbc0038I Pass  69: suminf.    1.62741 (43) obj. -146.713 iterations 3
Cbc0038I Pass  70: suminf.    1.99503 (45) obj. -143.795 iterations 38
Cbc0038I Pass  71: suminf.    1.63852 (36) obj. -143.795 iterations 15
Cbc0038I Pass  72: suminf.    1.33183 (36) obj. -146.555 iterations 8
Cbc0038I Pass  73: suminf.    1.43500 (25) obj. -143.795 iterations 70
Cbc0038I Pass  74: suminf.    1.43500 (25) obj. -143.795 iterations 1
Cbc0038I Pass  75: suminf.    2.70970 (21) obj. -143.795 iterations 25
Cbc0038I Pass  76: suminf.    2.70970 (21) obj. -143.795 iterations 3
Cbc0038I Pass  77: suminf.    1.40022 (16) obj. -143.795 iterations 27
Cbc0038I Pass  78: suminf.    1.40022 (16) obj. -143.795 iterations 5
Cbc0038I Pass  79: suminf.    1.35631 (16) obj. -143.795 iterations 7
Cbc0038I Pass  80: suminf.    1.35631 (16) obj. -143.795 iterations 5
Cbc0038I Pass  81: suminf.    1.40022 (16) obj. -143.795 iterations 7
Cbc0038I Pass  82: suminf.    2.37999 (26) obj. -143.795 iterations 34
Cbc0038I Pass  83: suminf.    2.30193 (27) obj. -143.795 iterations 8
Cbc0038I Pass  84: suminf.    3.34366 (21) obj. -143.795 iterations 33
Cbc0038I Pass  85: suminf.    1.83474 (19) obj. -143.795 iterations 10
Cbc0038I Pass  86: suminf.    1.83474 (19) obj. -143.795 iterations 0
Cbc0038I Pass  87: suminf.    2.39825 (17) obj. -143.795 iterations 20
Cbc0038I Pass  88: suminf.    2.22943 (18) obj. -143.795 iterations 7
Cbc0038I Pass  89: suminf.    1.64673 (16) obj. -143.795 iterations 24
Cbc0038I Pass  90: suminf.    1.60250 (16) obj. -143.795 iterations 8
Cbc0038I Pass  91: suminf.    1.40022 (16) obj. -143.795 iterations 15
Cbc0038I Pass  92: suminf.    1.40022 (16) obj. -143.795 iterations 5
Cbc0038I Pass  93: suminf.    1.35631 (16) obj. -143.795 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 341 rows 362 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I After 0.47 seconds - Feasibility pump exiting with objective of -92.9729 - took 0.36 seconds
Cbc0012I Integer solution of -92.972921 found by feasibility pump after 0 iterations and 0 nodes (0.47 seconds)
Cbc0038I Full problem 341 rows 362 columns, reduced to 58 rows 64 columns
Cbc0031I 109 added rows had average density of 88.541284
Cbc0013I At root node, 109 cuts changed objective from -218.63146 to -134.84726 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18375 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.385 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2883 row cuts average 338.9 elements, 0 column cuts (0 active)  in 0.939 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 343 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5575 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.399 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3136 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.800 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 381 row cuts average 215.7 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -92.972921 best solution, best possible -134.84726 (6.69 seconds)
Cbc0012I Integer solution of -107.64332 found by DiveCoefficient after 12859 iterations and 3 nodes (7.33 seconds)
Cbc0012I Integer solution of -113.85446 found by DiveCoefficient after 12947 iterations and 4 nodes (7.36 seconds)
Cbc0012I Integer solution of -114.80163 found by DiveCoefficient after 13008 iterations and 6 nodes (7.41 seconds)
Cbc0010I After 6 nodes, 7 on tree, -114.80163 best solution, best possible -134.84726 (7.41 seconds)
Cbc0012I Integer solution of -116.28431 found by DiveCoefficient after 13054 iterations and 9 nodes (7.45 seconds)
Cbc0038I Full problem 341 rows 362 columns, reduced to 130 rows 141 columns
Cbc0010I After 41 nodes, 4 on tree, -116.28431 best solution, best possible -134.84726 (9.20 seconds)
Cbc0010I After 48 nodes, 7 on tree, -116.28431 best solution, best possible -134.84726 (9.93 seconds)
Cbc0001I Search completed - best objective -116.284311, took 17214 iterations and 84 nodes (10.36 seconds)
Cbc0032I Strong branching done 928 times (26500 iterations), fathomed 7 nodes and fixed 29 variables
Cbc0035I Maximum depth 17, 330 variables fixed on reduced cost
Total time (CPU seconds):       10.15   (Wallclock seconds):       10.44

