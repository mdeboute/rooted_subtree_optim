Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 1.25533e-05 - average 9.36814e-08, 8 fixed columns
Coin0506I Presolve 117 (-17) rows, 66 (-9) columns and 358 (-52) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.8964977 - largest nonzero change 0 ( 0%) - largest zero change 1.7714741e-05
Clp0000I Optimal - objective value 32.948258
Clp0000I Optimal - objective value 32.948258
Coin0511I After Postsolve, objective 32.948258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.948258
Clp0000I Optimal - objective value 32.948258
Clp0000I Optimal - objective value 32.948258
Coin0511I After Postsolve, objective 32.948258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.94825795 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.59414
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.40986 iterations 66
Cbc0038I Solution found of 5.40986
Cbc0038I Relaxing continuous gives 5.40986
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 5.40986 to -5.71378 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.43732
Cbc0038I Pass   2: suminf.    2.27747 (21) obj. -8.43732 iterations 34
Cbc0038I Pass   3: suminf.    1.88256 (52) obj. -8.43732 iterations 30
Cbc0038I Pass   4: suminf.    0.68827 (5) obj. -8.43732 iterations 61
Cbc0038I Pass   5: suminf.    0.68827 (5) obj. -8.43732 iterations 1
Cbc0038I Pass   6: suminf.    1.96800 (6) obj. -8.43732 iterations 13
Cbc0038I Pass   7: suminf.    1.71624 (5) obj. -8.43732 iterations 1
Cbc0038I Pass   8: suminf.    0.86315 (4) obj. -8.43732 iterations 1
Cbc0038I Pass   9: suminf.    0.79689 (4) obj. -8.43732 iterations 8
Cbc0038I Pass  10: suminf.    1.12120 (4) obj. -8.43732 iterations 13
Cbc0038I Pass  11: suminf.    1.12120 (4) obj. -8.43732 iterations 0
Cbc0038I Pass  12: suminf.    1.33761 (5) obj. -8.43732 iterations 12
Cbc0038I Pass  13: suminf.    1.25193 (4) obj. -8.43732 iterations 1
Cbc0038I Pass  14: suminf.    1.28657 (5) obj. -8.43732 iterations 8
Cbc0038I Pass  15: suminf.    1.14099 (4) obj. -8.43732 iterations 1
Cbc0038I Pass  16: suminf.    2.57176 (8) obj. -8.43732 iterations 13
Cbc0038I Pass  17: suminf.    1.07799 (5) obj. -8.43732 iterations 12
Cbc0038I Pass  18: suminf.    1.07715 (5) obj. -8.43732 iterations 2
Cbc0038I Pass  19: suminf.    1.52026 (4) obj. -8.43732 iterations 6
Cbc0038I Pass  20: suminf.    0.98840 (4) obj. -8.43732 iterations 8
Cbc0038I Pass  21: suminf.    0.56385 (3) obj. -8.43732 iterations 10
Cbc0038I Pass  22: suminf.    1.18449 (4) obj. -8.43732 iterations 6
Cbc0038I Pass  23: suminf.    0.97308 (5) obj. -8.43732 iterations 9
Cbc0038I Pass  24: suminf.    1.25688 (5) obj. -8.43732 iterations 15
Cbc0038I Pass  25: suminf.    0.98712 (5) obj. -8.43732 iterations 5
Cbc0038I Pass  26: suminf.    2.06540 (6) obj. -8.43732 iterations 12
Cbc0038I Pass  27: suminf.    1.50180 (5) obj. -8.43732 iterations 1
Cbc0038I Pass  28: suminf.    0.83954 (7) obj. -8.43732 iterations 7
Cbc0038I Pass  29: suminf.    1.52385 (6) obj. -8.43732 iterations 15
Cbc0038I Pass  30: suminf.    2.12998 (8) obj. -8.43732 iterations 13
Cbc0038I Pass  31: suminf.    1.71795 (7) obj. -8.43732 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 101 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -5.71378 - took 0.09 seconds
Cbc0012I Integer solution of -5.713785 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 72 rows 42 columns
Cbc0031I 29 added rows had average density of 45.586207
Cbc0013I At root node, 29 cuts changed objective from -32.948258 to -24.363157 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14684 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2170 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 74.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.713785 best solution, best possible -24.363157 (1.02 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -5.713784999999987, took 12075 iterations and 68 nodes (1.35 seconds)
Cbc0032I Strong branching done 742 times (14541 iterations), fathomed 8 nodes and fixed 32 variables
Cbc0035I Maximum depth 15, 284 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 117 (-35) columns and 1863 (-1440) elements
Clp1000I sum of infeasibilities 4.71272e-08 - average 4.57546e-10, 30 fixed columns
Coin0506I Presolve 77 (-26) rows, 87 (-30) columns and 1025 (-838) elements
Clp0006I 0  Obj 41.243409 Dual inf 3.3888617 (86)
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 1.8665333 - largest nonzero change 1.2502595e-05 ( 0.0008514623%) - largest zero change 2.9256487e-05
Clp0000I Optimal - objective value 50.005618
Clp0000I Optimal - objective value 50.005618
Coin0511I After Postsolve, objective 50.005618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.005618
Clp0000I Optimal - objective value 50.005618
Clp0000I Optimal - objective value 50.005618
Clp0000I Optimal - objective value 50.005618
Coin0511I After Postsolve, objective 50.005618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.00561824 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 117 columns (117 integer (117 of which binary)) and 1865 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.303%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.2119
Cbc0038I Pass   1: suminf.    3.43318 (31) obj. -38.755 iterations 11
Cbc0038I Pass   2: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass   3: suminf.    1.54379 (18) obj. -17.3852 iterations 13
Cbc0038I Pass   4: suminf.    0.37269 (8) obj. -1.29553 iterations 11
Cbc0038I Solution found of 7.29179
Cbc0038I Rounding solution of 4.8571 is better than previous of 7.29179

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 4.8571 to 0.141765 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.93242
Cbc0038I Pass   5: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass   6: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass   7: suminf.    0.56196 (4) obj. -3.93242 iterations 32
Cbc0038I Pass   8: suminf.    0.44349 (4) obj. -3.93242 iterations 1
Cbc0038I Pass   9: suminf.    0.42425 (6) obj. -3.93242 iterations 10
Cbc0038I Pass  10: suminf.    1.33776 (4) obj. -3.93242 iterations 7
Cbc0038I Pass  11: suminf.    1.33776 (4) obj. -3.93242 iterations 0
Cbc0038I Pass  12: suminf.    0.70036 (4) obj. -3.93242 iterations 4
Cbc0038I Pass  13: suminf.    0.70036 (4) obj. -3.93242 iterations 0
Cbc0038I Pass  14: suminf.    0.84828 (3) obj. -3.93242 iterations 3
Cbc0038I Pass  15: suminf.    0.55278 (3) obj. -5.11441 iterations 1
Cbc0038I Pass  16: suminf.    0.84828 (3) obj. -3.93242 iterations 4
Cbc0038I Pass  17: suminf.    2.87608 (14) obj. -3.93242 iterations 22
Cbc0038I Pass  18: suminf.    1.32309 (11) obj. -3.93242 iterations 13
Cbc0038I Pass  19: suminf.    1.03950 (4) obj. -3.93242 iterations 12
Cbc0038I Pass  20: suminf.    0.52172 (5) obj. -3.93242 iterations 3
Cbc0038I Pass  21: suminf.    1.03950 (4) obj. -3.93242 iterations 4
Cbc0038I Pass  22: suminf.    1.51604 (13) obj. -5.44263 iterations 46
Cbc0038I Pass  23: suminf.    0.93150 (11) obj. -5.15421 iterations 6
Cbc0038I Pass  24: suminf.    1.93460 (8) obj. -3.93242 iterations 15
Cbc0038I Pass  25: suminf.    0.99030 (7) obj. -4.40169 iterations 6
Cbc0038I Pass  26: suminf.    1.38087 (9) obj. -3.93242 iterations 5
Cbc0038I Pass  27: suminf.    0.98075 (8) obj. -3.93242 iterations 8
Cbc0038I Pass  28: suminf.    1.41947 (7) obj. -3.93242 iterations 5
Cbc0038I Pass  29: suminf.    0.76191 (6) obj. -3.93242 iterations 5
Cbc0038I Pass  30: suminf.    2.11415 (9) obj. -3.93242 iterations 13
Cbc0038I Pass  31: suminf.    2.11415 (9) obj. -3.93242 iterations 0
Cbc0038I Pass  32: suminf.    1.07256 (5) obj. -3.93242 iterations 15
Cbc0038I Pass  33: suminf.    0.93363 (4) obj. -3.93242 iterations 2
Cbc0038I Pass  34: suminf.    0.65185 (3) obj. -3.93242 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 35 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 0.141765 to -4.97776 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.1021
Cbc0038I Pass  34: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass  35: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass  36: suminf.    1.82351 (20) obj. -21.6878 iterations 11
Cbc0038I Pass  37: suminf.    0.74140 (9) obj. -12.1021 iterations 16
Cbc0038I Pass  38: suminf.    0.61417 (8) obj. -12.1849 iterations 2
Cbc0038I Pass  39: suminf.    1.05897 (9) obj. -12.1021 iterations 18
Cbc0038I Pass  40: suminf.    1.05897 (9) obj. -12.1021 iterations 0
Cbc0038I Pass  41: suminf.    1.95982 (8) obj. -12.1021 iterations 14
Cbc0038I Pass  42: suminf.    1.95982 (8) obj. -12.1021 iterations 0
Cbc0038I Pass  43: suminf.    2.42012 (9) obj. -12.1021 iterations 10
Cbc0038I Pass  44: suminf.    2.11396 (9) obj. -12.1021 iterations 2
Cbc0038I Pass  45: suminf.    2.11142 (10) obj. -12.1021 iterations 9
Cbc0038I Pass  46: suminf.    2.11142 (10) obj. -12.1021 iterations 0
Cbc0038I Pass  47: suminf.    2.42012 (9) obj. -12.1021 iterations 18
Cbc0038I Pass  48: suminf.    1.77176 (11) obj. -12.1021 iterations 18
Cbc0038I Pass  49: suminf.    1.30506 (9) obj. -12.1021 iterations 5
Cbc0038I Pass  50: suminf.    1.42220 (7) obj. -12.1021 iterations 11
Cbc0038I Pass  51: suminf.    1.42220 (7) obj. -12.1021 iterations 0
Cbc0038I Pass  52: suminf.    1.44690 (7) obj. -12.1021 iterations 9
Cbc0038I Pass  53: suminf.    1.44690 (7) obj. -12.1021 iterations 2
Cbc0038I Pass  54: suminf.    1.42220 (7) obj. -12.1021 iterations 3
Cbc0038I Pass  55: suminf.    2.27247 (10) obj. -12.1021 iterations 18
Cbc0038I Pass  56: suminf.    1.41266 (11) obj. -12.1021 iterations 7
Cbc0038I Pass  57: suminf.    1.76096 (8) obj. -12.1021 iterations 16
Cbc0038I Pass  58: suminf.    1.47865 (8) obj. -12.6668 iterations 3
Cbc0038I Pass  59: suminf.    1.75466 (9) obj. -12.1021 iterations 6
Cbc0038I Pass  60: suminf.    1.74409 (9) obj. -12.1021 iterations 3
Cbc0038I Pass  61: suminf.    1.10911 (8) obj. -12.1021 iterations 9
Cbc0038I Pass  62: suminf.    1.10911 (8) obj. -12.1021 iterations 0
Cbc0038I Pass  63: suminf.    1.46459 (7) obj. -12.1021 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -4.97776 - took 0.05 seconds
Cbc0012I Integer solution of -4.977765 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 103 rows 117 columns, reduced to 13 rows 16 columns
Cbc0031I 49 added rows had average density of 27.265306
Cbc0013I At root node, 49 cuts changed objective from -40.599217 to -9.644875 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8969 row cuts average 7.5 elements, 1 column cuts (32 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1380 row cuts average 103.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 663 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 955 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 285 row cuts average 66.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 133 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.977765 best solution, best possible -9.644875 (2.19 seconds)
Cbc0010I After 13 nodes, 8 on tree, -4.977765 best solution, best possible -9.644875 (2.91 seconds)
Cbc0004I Integer solution of -5.16649 found after 4523 iterations and 22 nodes (3.32 seconds)
Cbc0010I After 29 nodes, 13 on tree, -5.16649 best solution, best possible -9.644875 (3.64 seconds)
Cbc0004I Integer solution of -5.713785 found after 4849 iterations and 36 nodes (3.93 seconds)
Cbc0038I Full problem 103 rows 117 columns, reduced to 7 rows 13 columns
Cbc0010I After 49 nodes, 8 on tree, -5.713785 best solution, best possible -9.644875 (4.35 seconds)
Cbc0001I Search completed - best objective -5.713784999999987, took 5517 iterations and 58 nodes (4.46 seconds)
Cbc0032I Strong branching done 708 times (9128 iterations), fathomed 11 nodes and fixed 15 variables
Cbc0035I Maximum depth 16, 162 variables fixed on reduced cost
Total time (CPU seconds):       3.00   (Wallclock seconds):       4.48

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 1.25533e-05 - average 9.36814e-08, 8 fixed columns
Coin0506I Presolve 117 (-17) rows, 66 (-9) columns and 358 (-52) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.8964977 - largest nonzero change 0 ( 0%) - largest zero change 1.7714741e-05
Clp0000I Optimal - objective value 32.948258
Clp0000I Optimal - objective value 32.948258
Coin0511I After Postsolve, objective 32.948258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.948258
Clp0000I Optimal - objective value 32.948258
Clp0000I Optimal - objective value 32.948258
Coin0511I After Postsolve, objective 32.948258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.94825795 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.59414
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.40986 iterations 66
Cbc0038I Solution found of 5.40986
Cbc0038I Relaxing continuous gives 5.40986
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 5.40986 to -5.71378 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.43732
Cbc0038I Pass   2: suminf.    2.27747 (21) obj. -8.43732 iterations 34
Cbc0038I Pass   3: suminf.    1.88256 (52) obj. -8.43732 iterations 30
Cbc0038I Pass   4: suminf.    0.68827 (5) obj. -8.43732 iterations 61
Cbc0038I Pass   5: suminf.    0.68827 (5) obj. -8.43732 iterations 1
Cbc0038I Pass   6: suminf.    1.96800 (6) obj. -8.43732 iterations 13
Cbc0038I Pass   7: suminf.    1.71624 (5) obj. -8.43732 iterations 1
Cbc0038I Pass   8: suminf.    0.86315 (4) obj. -8.43732 iterations 1
Cbc0038I Pass   9: suminf.    0.79689 (4) obj. -8.43732 iterations 8
Cbc0038I Pass  10: suminf.    1.12120 (4) obj. -8.43732 iterations 13
Cbc0038I Pass  11: suminf.    1.12120 (4) obj. -8.43732 iterations 0
Cbc0038I Pass  12: suminf.    1.33761 (5) obj. -8.43732 iterations 12
Cbc0038I Pass  13: suminf.    1.25193 (4) obj. -8.43732 iterations 1
Cbc0038I Pass  14: suminf.    1.28657 (5) obj. -8.43732 iterations 8
Cbc0038I Pass  15: suminf.    1.14099 (4) obj. -8.43732 iterations 1
Cbc0038I Pass  16: suminf.    2.57176 (8) obj. -8.43732 iterations 13
Cbc0038I Pass  17: suminf.    1.07799 (5) obj. -8.43732 iterations 12
Cbc0038I Pass  18: suminf.    1.07715 (5) obj. -8.43732 iterations 2
Cbc0038I Pass  19: suminf.    1.52026 (4) obj. -8.43732 iterations 6
Cbc0038I Pass  20: suminf.    0.98840 (4) obj. -8.43732 iterations 8
Cbc0038I Pass  21: suminf.    0.56385 (3) obj. -8.43732 iterations 10
Cbc0038I Pass  22: suminf.    1.18449 (4) obj. -8.43732 iterations 6
Cbc0038I Pass  23: suminf.    0.97308 (5) obj. -8.43732 iterations 9
Cbc0038I Pass  24: suminf.    1.25688 (5) obj. -8.43732 iterations 15
Cbc0038I Pass  25: suminf.    0.98712 (5) obj. -8.43732 iterations 5
Cbc0038I Pass  26: suminf.    2.06540 (6) obj. -8.43732 iterations 12
Cbc0038I Pass  27: suminf.    1.50180 (5) obj. -8.43732 iterations 1
Cbc0038I Pass  28: suminf.    0.83954 (7) obj. -8.43732 iterations 7
Cbc0038I Pass  29: suminf.    1.52385 (6) obj. -8.43732 iterations 15
Cbc0038I Pass  30: suminf.    2.12998 (8) obj. -8.43732 iterations 13
Cbc0038I Pass  31: suminf.    1.71795 (7) obj. -8.43732 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 101 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -5.71378 - took 0.10 seconds
Cbc0012I Integer solution of -5.713785 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 72 rows 42 columns
Cbc0031I 29 added rows had average density of 45.586207
Cbc0013I At root node, 29 cuts changed objective from -32.948258 to -24.363157 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14684 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2170 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 74.2 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.713785 best solution, best possible -24.363157 (1.15 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -5.713784999999987, took 12075 iterations and 68 nodes (1.51 seconds)
Cbc0032I Strong branching done 742 times (14541 iterations), fathomed 8 nodes and fixed 32 variables
Cbc0035I Maximum depth 15, 284 variables fixed on reduced cost
Total time (CPU seconds):       1.45   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 117 (-36) columns and 1863 (-1441) elements
Clp1000I sum of infeasibilities 4.71272e-08 - average 4.57546e-10, 30 fixed columns
Coin0506I Presolve 77 (-26) rows, 87 (-30) columns and 1025 (-838) elements
Clp0006I 0  Obj 41.243409 Dual inf 3.3888617 (86)
Clp0029I End of values pass after 87 iterations
Clp0014I Perturbing problem by 0.001% of 1.8665333 - largest nonzero change 1.2502595e-05 ( 0.0008514623%) - largest zero change 2.9256487e-05
Clp0000I Optimal - objective value 50.005618
Clp0000I Optimal - objective value 50.005618
Coin0511I After Postsolve, objective 50.005618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.005618
Clp0000I Optimal - objective value 50.005618
Clp0000I Optimal - objective value 50.005618
Clp0000I Optimal - objective value 50.005618
Coin0511I After Postsolve, objective 50.005618, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.00561824 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 117 columns (117 integer (117 of which binary)) and 1865 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.303%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.2119
Cbc0038I Pass   1: suminf.    3.43318 (31) obj. -38.755 iterations 11
Cbc0038I Pass   2: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass   3: suminf.    1.54379 (18) obj. -17.3852 iterations 13
Cbc0038I Pass   4: suminf.    0.37269 (8) obj. -1.29553 iterations 11
Cbc0038I Solution found of 7.29179
Cbc0038I Rounding solution of 4.8571 is better than previous of 7.29179

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 4.8571 to 0.141765 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.93242
Cbc0038I Pass   5: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass   6: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass   7: suminf.    0.56196 (4) obj. -3.93242 iterations 32
Cbc0038I Pass   8: suminf.    0.44349 (4) obj. -3.93242 iterations 1
Cbc0038I Pass   9: suminf.    0.42425 (6) obj. -3.93242 iterations 10
Cbc0038I Pass  10: suminf.    1.33776 (4) obj. -3.93242 iterations 7
Cbc0038I Pass  11: suminf.    1.33776 (4) obj. -3.93242 iterations 0
Cbc0038I Pass  12: suminf.    0.70036 (4) obj. -3.93242 iterations 4
Cbc0038I Pass  13: suminf.    0.70036 (4) obj. -3.93242 iterations 0
Cbc0038I Pass  14: suminf.    0.84828 (3) obj. -3.93242 iterations 3
Cbc0038I Pass  15: suminf.    0.55278 (3) obj. -5.11441 iterations 1
Cbc0038I Pass  16: suminf.    0.84828 (3) obj. -3.93242 iterations 4
Cbc0038I Pass  17: suminf.    2.87608 (14) obj. -3.93242 iterations 22
Cbc0038I Pass  18: suminf.    1.32309 (11) obj. -3.93242 iterations 13
Cbc0038I Pass  19: suminf.    1.03950 (4) obj. -3.93242 iterations 12
Cbc0038I Pass  20: suminf.    0.52172 (5) obj. -3.93242 iterations 3
Cbc0038I Pass  21: suminf.    1.03950 (4) obj. -3.93242 iterations 4
Cbc0038I Pass  22: suminf.    1.51604 (13) obj. -5.44263 iterations 46
Cbc0038I Pass  23: suminf.    0.93150 (11) obj. -5.15421 iterations 6
Cbc0038I Pass  24: suminf.    1.93460 (8) obj. -3.93242 iterations 15
Cbc0038I Pass  25: suminf.    0.99030 (7) obj. -4.40169 iterations 6
Cbc0038I Pass  26: suminf.    1.38087 (9) obj. -3.93242 iterations 5
Cbc0038I Pass  27: suminf.    0.98075 (8) obj. -3.93242 iterations 8
Cbc0038I Pass  28: suminf.    1.41947 (7) obj. -3.93242 iterations 5
Cbc0038I Pass  29: suminf.    0.76191 (6) obj. -3.93242 iterations 5
Cbc0038I Pass  30: suminf.    2.11415 (9) obj. -3.93242 iterations 13
Cbc0038I Pass  31: suminf.    2.11415 (9) obj. -3.93242 iterations 0
Cbc0038I Pass  32: suminf.    1.07256 (5) obj. -3.93242 iterations 15
Cbc0038I Pass  33: suminf.    0.93363 (4) obj. -3.93242 iterations 2
Cbc0038I Pass  34: suminf.    0.65185 (3) obj. -3.93242 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 35 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 0.141765 to -4.97776 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.1021
Cbc0038I Pass  34: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass  35: suminf.    3.43318 (31) obj. -38.755 iterations 0
Cbc0038I Pass  36: suminf.    1.82351 (20) obj. -21.6878 iterations 11
Cbc0038I Pass  37: suminf.    0.74140 (9) obj. -12.1021 iterations 16
Cbc0038I Pass  38: suminf.    0.61417 (8) obj. -12.1849 iterations 2
Cbc0038I Pass  39: suminf.    1.05897 (9) obj. -12.1021 iterations 18
Cbc0038I Pass  40: suminf.    1.05897 (9) obj. -12.1021 iterations 0
Cbc0038I Pass  41: suminf.    1.95982 (8) obj. -12.1021 iterations 14
Cbc0038I Pass  42: suminf.    1.95982 (8) obj. -12.1021 iterations 0
Cbc0038I Pass  43: suminf.    2.42012 (9) obj. -12.1021 iterations 10
Cbc0038I Pass  44: suminf.    2.11396 (9) obj. -12.1021 iterations 2
Cbc0038I Pass  45: suminf.    2.11142 (10) obj. -12.1021 iterations 9
Cbc0038I Pass  46: suminf.    2.11142 (10) obj. -12.1021 iterations 0
Cbc0038I Pass  47: suminf.    2.42012 (9) obj. -12.1021 iterations 18
Cbc0038I Pass  48: suminf.    1.77176 (11) obj. -12.1021 iterations 18
Cbc0038I Pass  49: suminf.    1.30506 (9) obj. -12.1021 iterations 5
Cbc0038I Pass  50: suminf.    1.42220 (7) obj. -12.1021 iterations 11
Cbc0038I Pass  51: suminf.    1.42220 (7) obj. -12.1021 iterations 0
Cbc0038I Pass  52: suminf.    1.44690 (7) obj. -12.1021 iterations 9
Cbc0038I Pass  53: suminf.    1.44690 (7) obj. -12.1021 iterations 2
Cbc0038I Pass  54: suminf.    1.42220 (7) obj. -12.1021 iterations 3
Cbc0038I Pass  55: suminf.    2.27247 (10) obj. -12.1021 iterations 18
Cbc0038I Pass  56: suminf.    1.41266 (11) obj. -12.1021 iterations 7
Cbc0038I Pass  57: suminf.    1.76096 (8) obj. -12.1021 iterations 16
Cbc0038I Pass  58: suminf.    1.47865 (8) obj. -12.6668 iterations 3
Cbc0038I Pass  59: suminf.    1.75466 (9) obj. -12.1021 iterations 6
Cbc0038I Pass  60: suminf.    1.74409 (9) obj. -12.1021 iterations 3
Cbc0038I Pass  61: suminf.    1.10911 (8) obj. -12.1021 iterations 9
Cbc0038I Pass  62: suminf.    1.10911 (8) obj. -12.1021 iterations 0
Cbc0038I Pass  63: suminf.    1.46459 (7) obj. -12.1021 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -4.97776 - took 0.06 seconds
Cbc0012I Integer solution of -4.977765 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 103 rows 117 columns, reduced to 13 rows 16 columns
Cbc0031I 49 added rows had average density of 27.265306
Cbc0013I At root node, 49 cuts changed objective from -40.599217 to -9.644875 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8969 row cuts average 7.5 elements, 1 column cuts (32 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1380 row cuts average 103.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 663 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 955 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 285 row cuts average 66.9 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 133 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.761 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.977765 best solution, best possible -9.644875 (2.56 seconds)
Cbc0010I After 9 nodes, 10 on tree, -4.977765 best solution, best possible -9.644875 (3.27 seconds)
Cbc0004I Integer solution of -5.16649 found after 4523 iterations and 22 nodes (3.84 seconds)
Cbc0010I After 25 nodes, 11 on tree, -5.16649 best solution, best possible -9.644875 (4.01 seconds)
Cbc0004I Integer solution of -5.713785 found after 4849 iterations and 36 nodes (4.53 seconds)
Cbc0010I After 41 nodes, 11 on tree, -5.713785 best solution, best possible -9.644875 (4.74 seconds)
Cbc0038I Full problem 103 rows 117 columns, reduced to 7 rows 13 columns
Cbc0001I Search completed - best objective -5.713784999999987, took 5517 iterations and 58 nodes (5.16 seconds)
Cbc0032I Strong branching done 708 times (9128 iterations), fathomed 11 nodes and fixed 15 variables
Cbc0035I Maximum depth 16, 162 variables fixed on reduced cost
Total time (CPU seconds):       3.38   (Wallclock seconds):       5.18

