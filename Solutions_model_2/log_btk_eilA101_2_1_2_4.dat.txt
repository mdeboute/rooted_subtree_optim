Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 4.14405e-07 - average 2.20428e-09, 9 fixed columns
Coin0506I Presolve 161 (-27) rows, 92 (-9) columns and 498 (-72) elements
Clp0029I End of values pass after 92 iterations
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Coin0511I After Postsolve, objective 47.585587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Coin0511I After Postsolve, objective 47.585587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.58558728 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 13.8043
Cbc0038I Solution found of 4.35675
Cbc0038I Relaxing continuous gives 0.56518
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 106 rows 63 columns
Cbc0038I Mini branch and bound improved solution from 0.56518 to -14.6201 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.9167
Cbc0038I Pass   1: suminf.    3.65874 (30) obj. -17.9167 iterations 103
Cbc0038I Pass   2: suminf.    1.72732 (8) obj. -17.9167 iterations 42
Cbc0038I Pass   3: suminf.    1.57647 (7) obj. -17.9167 iterations 6
Cbc0038I Pass   4: suminf.    2.51398 (7) obj. -17.9167 iterations 9
Cbc0038I Pass   5: suminf.    2.03583 (7) obj. -17.9167 iterations 3
Cbc0038I Pass   6: suminf.    2.51700 (7) obj. -17.9167 iterations 9
Cbc0038I Pass   7: suminf.    2.70082 (7) obj. -17.9167 iterations 8
Cbc0038I Pass   8: suminf.    1.90256 (10) obj. -17.9167 iterations 4
Cbc0038I Pass   9: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  10: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  11: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  12: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  13: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  14: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  15: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  16: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  17: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  18: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  19: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  20: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  21: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  22: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  23: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  24: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  25: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  26: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  27: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  28: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  29: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  30: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 112 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -14.6201 to -16.5782 (0.15 seconds)
Cbc0038I Round again with cutoff of -23.8505
Cbc0038I Pass  30: suminf.    5.17376 (37) obj. -23.8505 iterations 13
Cbc0038I Pass  31: suminf.    3.43013 (11) obj. -23.8505 iterations 42
Cbc0038I Pass  32: suminf.    3.37519 (10) obj. -23.8505 iterations 3
Cbc0038I Pass  33: suminf.    3.88143 (13) obj. -23.8505 iterations 22
Cbc0038I Pass  34: suminf.    3.78643 (12) obj. -23.8505 iterations 5
Cbc0038I Pass  35: suminf.    3.78643 (12) obj. -23.8505 iterations 0
Cbc0038I Pass  36: suminf.    3.73762 (11) obj. -23.8505 iterations 15
Cbc0038I Pass  37: suminf.    3.69162 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  38: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  39: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  40: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  41: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  42: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  43: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  44: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  45: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  46: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  47: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  48: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  49: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  50: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  51: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  52: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  53: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  54: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  55: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  56: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  57: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  58: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  59: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 120 rows 71 columns - 10 fixed gives 82, 61 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 78 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -16.5782 - took 0.16 seconds
Cbc0012I Integer solution of -16.57824 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 107 rows 64 columns
Cbc0012I Integer solution of -17.09011 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 37 added rows had average density of 64.513514
Cbc0013I At root node, 37 cuts changed objective from -47.585587 to -38.22555 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20997 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2405 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.09011 best solution, best possible -38.22555 (1.92 seconds)
Cbc0012I Integer solution of -17.33695 found by rounding after 13290 iterations and 21 nodes (2.20 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 17 rows 18 columns
Cbc0012I Integer solution of -17.60725 found by RINS after 13972 iterations and 41 nodes (2.29 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -17.78138 found by rounding after 15748 iterations and 136 nodes (2.50 seconds)
Cbc0012I Integer solution of -17.84459 found by DiveCoefficient after 17169 iterations and 168 nodes (2.58 seconds)
Cbc0016I Integer solution of -17.86174 found by strong branching after 17234 iterations and 179 nodes (2.59 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 2 rows 5 columns
Cbc0010I After 201 nodes, 7 on tree, -17.86174 best solution, best possible -28.12643 (2.62 seconds)
Cbc0012I Integer solution of -17.90438 found by rounding after 17744 iterations and 214 nodes (2.64 seconds)
Cbc0001I Search completed - best objective -17.90437999999999, took 18417 iterations and 262 nodes (2.71 seconds)
Cbc0032I Strong branching done 1832 times (29889 iterations), fathomed 41 nodes and fixed 124 variables
Cbc0035I Maximum depth 35, 738 variables fixed on reduced cost
Total time (CPU seconds):       2.64   (Wallclock seconds):       2.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-71) rows, 145 (-57) columns and 2803 (-2850) elements
Clp1000I sum of infeasibilities 6.78395e-08 - average 5.10072e-10, 45 fixed columns
Coin0506I Presolve 85 (-48) rows, 100 (-45) columns and 1519 (-1284) elements
Clp0006I 0  Obj 43.540957 Dual inf 5.0214915 (100)
Clp0014I Perturbing problem by 0.001% of 2.5387994 - largest nonzero change 1.9073694e-05 ( 0.0016580886%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 62.732607
Clp0000I Optimal - objective value 62.732607
Coin0511I After Postsolve, objective 62.732607, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 62.732607 Dual inf 4.1065852 (3)
Clp0014I Perturbing problem by 0.001% of 1.6119245 - largest nonzero change 1.9689134e-05 ( 0.0019689134%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 64.26897
Clp0000I Optimal - objective value 64.26897
Clp0000I Optimal - objective value 64.26897
Coin0511I After Postsolve, objective 64.26897, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.26897035 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 145 columns (145 integer (145 of which binary)) and 2806 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 8.84796
Cbc0038I Pass   1: suminf.    2.79283 (33) obj. -31.9922 iterations 11
Cbc0038I Pass   2: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass   3: suminf.    0.29128 (8) obj. 1.96533 iterations 25
Cbc0038I Solution found of 9.67405
Cbc0038I Rounding solution of -3.416 is better than previous of 9.67405

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3.416 to -4.34164 (0.04 seconds)
Cbc0038I Round again with cutoff of -9.77238
Cbc0038I Pass   4: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass   5: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass   6: suminf.    1.24804 (20) obj. -9.77238 iterations 15
Cbc0038I Pass   7: suminf.    0.57706 (8) obj. -9.77238 iterations 15
Cbc0038I Pass   8: suminf.    0.33879 (7) obj. -11.3187 iterations 2
Cbc0038I Pass   9: suminf.    0.82767 (9) obj. -9.77238 iterations 8
Cbc0038I Pass  10: suminf.    0.82767 (9) obj. -9.77238 iterations 0
Cbc0038I Pass  11: suminf.    0.86299 (4) obj. -9.77238 iterations 11
Cbc0038I Pass  12: suminf.    0.70550 (3) obj. -11.7258 iterations 1
Cbc0038I Pass  13: suminf.    0.43377 (2) obj. -9.77238 iterations 7
Cbc0038I Pass  14: suminf.    0.15306 (1) obj. -11.9525 iterations 2
Cbc0038I Pass  15: suminf.    0.37108 (1) obj. -9.77238 iterations 1
Cbc0038I Pass  16: suminf.    2.23118 (16) obj. -9.77238 iterations 37
Cbc0038I Pass  17: suminf.    2.23118 (16) obj. -9.77238 iterations 1
Cbc0038I Pass  18: suminf.    1.06357 (6) obj. -9.77238 iterations 21
Cbc0038I Pass  19: suminf.    0.65609 (3) obj. -9.77238 iterations 2
Cbc0038I Pass  20: suminf.    0.25306 (2) obj. -11.3845 iterations 2
Cbc0038I Pass  21: suminf.    0.65003 (2) obj. -9.77238 iterations 2
Cbc0038I Pass  22: suminf.    0.65003 (2) obj. -9.77238 iterations 0
Cbc0038I Pass  23: suminf.    0.41427 (2) obj. -9.77238 iterations 4
Cbc0038I Pass  24: suminf.    1.82831 (14) obj. -9.77238 iterations 31
Cbc0038I Pass  25: suminf.    1.31932 (11) obj. -9.77238 iterations 11
Cbc0038I Pass  26: suminf.    0.92556 (5) obj. -9.77238 iterations 18
Cbc0038I Pass  27: suminf.    0.48835 (5) obj. -9.77238 iterations 3
Cbc0038I Pass  28: suminf.    0.73551 (5) obj. -9.77238 iterations 8
Cbc0038I Pass  29: suminf.    0.68747 (4) obj. -9.77238 iterations 5
Cbc0038I Pass  30: suminf.    0.87919 (4) obj. -9.77238 iterations 6
Cbc0038I Pass  31: suminf.    0.87919 (4) obj. -9.77238 iterations 0
Cbc0038I Pass  32: suminf.    1.42622 (5) obj. -9.77238 iterations 5
Cbc0038I Pass  33: suminf.    1.42622 (5) obj. -9.77238 iterations 0
Cbc0038I Rounding solution of -4.88552 is better than previous of -4.34164

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 28 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.88552 to -12.8772 (0.08 seconds)
Cbc0038I Round again with cutoff of -22.0314
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass  34: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass  35: suminf.    1.62680 (15) obj. -22.0314 iterations 33
Cbc0038I Pass  36: suminf.    1.52184 (14) obj. -22.0314 iterations 2
Cbc0038I Pass  37: suminf.    1.58720 (8) obj. -22.0314 iterations 18
Cbc0038I Pass  38: suminf.    1.36515 (8) obj. -22.0314 iterations 5
Cbc0038I Pass  39: suminf.    1.41125 (5) obj. -22.0314 iterations 12
Cbc0038I Pass  40: suminf.    1.39700 (6) obj. -22.0314 iterations 1
Cbc0038I Pass  41: suminf.    1.47868 (6) obj. -22.0314 iterations 4
Cbc0038I Pass  42: suminf.    1.39814 (5) obj. -22.0314 iterations 2
Cbc0038I Pass  43: suminf.    1.41125 (5) obj. -22.0314 iterations 2
Cbc0038I Pass  44: suminf.    3.51296 (15) obj. -22.0314 iterations 22
Cbc0038I Pass  45: suminf.    3.15007 (16) obj. -22.0314 iterations 6
Cbc0038I Pass  46: suminf.    1.83623 (6) obj. -22.0314 iterations 18
Cbc0038I Pass  47: suminf.    1.72413 (9) obj. -22.0314 iterations 5
Cbc0038I Pass  48: suminf.    2.03217 (7) obj. -22.0314 iterations 5
Cbc0038I Pass  49: suminf.    1.88541 (7) obj. -22.0314 iterations 3
Cbc0038I Pass  50: suminf.    1.86213 (5) obj. -22.0314 iterations 4
Cbc0038I Pass  51: suminf.    1.57216 (5) obj. -22.0314 iterations 7
Cbc0038I Pass  52: suminf.    1.79084 (7) obj. -22.0314 iterations 5
Cbc0038I Pass  53: suminf.    1.69433 (10) obj. -22.0314 iterations 3
Cbc0038I Pass  54: suminf.    2.11693 (7) obj. -22.0314 iterations 6
Cbc0038I Pass  55: suminf.    1.88541 (7) obj. -22.0314 iterations 5
Cbc0038I Pass  56: suminf.    1.86213 (5) obj. -22.0314 iterations 5
Cbc0038I Pass  57: suminf.    1.57216 (5) obj. -22.0314 iterations 7
Cbc0038I Pass  58: suminf.    1.79084 (7) obj. -22.0314 iterations 6
Cbc0038I Pass  59: suminf.    1.69433 (10) obj. -22.0314 iterations 4
Cbc0038I Pass  60: suminf.    2.11693 (7) obj. -22.0314 iterations 7
Cbc0038I Pass  61: suminf.    1.88541 (7) obj. -22.0314 iterations 5
Cbc0038I Pass  62: suminf.    1.86213 (5) obj. -22.0314 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 21 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -12.8772 - took 0.07 seconds
Cbc0012I Integer solution of -12.877162 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 25 rows 35 columns
Cbc0031I 59 added rows had average density of 67.491525
Cbc0013I At root node, 59 cuts changed objective from -58.648135 to -26.054836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23586 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3508 row cuts average 141.2 elements, 0 column cuts (0 active)  in 0.288 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1115 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2366 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.229 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 475 row cuts average 71.4 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.877162 best solution, best possible -26.054836 (2.63 seconds)
Cbc0012I Integer solution of -16.85449 found by rounding after 9720 iterations and 1 nodes (2.66 seconds)
Cbc0010I After 6 nodes, 3 on tree, -16.85449 best solution, best possible -25.621125 (3.39 seconds)
Cbc0012I Integer solution of -16.86174 found by rounding after 11873 iterations and 37 nodes (4.04 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 2 rows 6 columns
Cbc0010I After 62 nodes, 7 on tree, -16.86174 best solution, best possible -25.621125 (4.10 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 7 rows 14 columns
Cbc0012I Integer solution of -17.07549 found by rounding after 13284 iterations and 122 nodes (4.29 seconds)
Cbc0004I Integer solution of -17.25868 found after 13492 iterations and 138 nodes (4.32 seconds)
Cbc0012I Integer solution of -17.60725 found by rounding after 14602 iterations and 164 nodes (4.40 seconds)
Cbc0012I Integer solution of -17.67293 found by DiveCoefficient after 14621 iterations and 165 nodes (4.41 seconds)
Cbc0012I Integer solution of -17.78526 found by rounding after 14736 iterations and 185 nodes (4.46 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 4 rows 7 columns
Cbc0016I Integer solution of -17.90438 found by strong branching after 14864 iterations and 203 nodes (4.50 seconds)
Cbc0001I Search completed - best objective -17.90437999999999, took 15226 iterations and 260 nodes (4.61 seconds)
Cbc0032I Strong branching done 1734 times (23595 iterations), fathomed 48 nodes and fixed 53 variables
Cbc0035I Maximum depth 30, 385 variables fixed on reduced cost
Total time (CPU seconds):       4.44   (Wallclock seconds):       4.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 4.14405e-07 - average 2.20428e-09, 9 fixed columns
Coin0506I Presolve 161 (-27) rows, 92 (-9) columns and 498 (-72) elements
Clp0029I End of values pass after 92 iterations
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Coin0511I After Postsolve, objective 47.585587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Clp0000I Optimal - objective value 47.585587
Coin0511I After Postsolve, objective 47.585587, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.58558728 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 13.8043
Cbc0038I Solution found of 4.35675
Cbc0038I Relaxing continuous gives 0.56518
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 106 rows 63 columns
Cbc0038I Mini branch and bound improved solution from 0.56518 to -14.6201 (0.09 seconds)
Cbc0038I Round again with cutoff of -17.9167
Cbc0038I Pass   1: suminf.    3.65874 (30) obj. -17.9167 iterations 103
Cbc0038I Pass   2: suminf.    1.72732 (8) obj. -17.9167 iterations 42
Cbc0038I Pass   3: suminf.    1.57647 (7) obj. -17.9167 iterations 6
Cbc0038I Pass   4: suminf.    2.51398 (7) obj. -17.9167 iterations 9
Cbc0038I Pass   5: suminf.    2.03583 (7) obj. -17.9167 iterations 3
Cbc0038I Pass   6: suminf.    2.51700 (7) obj. -17.9167 iterations 9
Cbc0038I Pass   7: suminf.    2.70082 (7) obj. -17.9167 iterations 8
Cbc0038I Pass   8: suminf.    1.90256 (10) obj. -17.9167 iterations 4
Cbc0038I Pass   9: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  10: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  11: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  12: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  13: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  14: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  15: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  16: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  17: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  18: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  19: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  20: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  21: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  22: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  23: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  24: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  25: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I Pass  26: suminf.    2.37484 (7) obj. -17.9167 iterations 3
Cbc0038I Pass  27: suminf.    2.63181 (7) obj. -17.9167 iterations 7
Cbc0038I Pass  28: suminf.    1.90256 (10) obj. -17.9167 iterations 5
Cbc0038I Pass  29: suminf.    1.82670 (9) obj. -17.9167 iterations 1
Cbc0038I Pass  30: suminf.    2.45715 (8) obj. -17.9167 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 112 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -14.6201 to -16.5782 (0.17 seconds)
Cbc0038I Round again with cutoff of -23.8505
Cbc0038I Pass  30: suminf.    5.17376 (37) obj. -23.8505 iterations 13
Cbc0038I Pass  31: suminf.    3.43013 (11) obj. -23.8505 iterations 42
Cbc0038I Pass  32: suminf.    3.37519 (10) obj. -23.8505 iterations 3
Cbc0038I Pass  33: suminf.    3.88143 (13) obj. -23.8505 iterations 22
Cbc0038I Pass  34: suminf.    3.78643 (12) obj. -23.8505 iterations 5
Cbc0038I Pass  35: suminf.    3.78643 (12) obj. -23.8505 iterations 0
Cbc0038I Pass  36: suminf.    3.73762 (11) obj. -23.8505 iterations 15
Cbc0038I Pass  37: suminf.    3.69162 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  38: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  39: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  40: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  41: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  42: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  43: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  44: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  45: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  46: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  47: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  48: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  49: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  50: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  51: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  52: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I Pass  53: suminf.    3.07636 (9) obj. -23.8505 iterations 1
Cbc0038I Pass  54: suminf.    4.55363 (11) obj. -23.8505 iterations 7
Cbc0038I Pass  55: suminf.    3.38730 (9) obj. -23.8505 iterations 6
Cbc0038I Pass  56: suminf.    3.09895 (9) obj. -23.8505 iterations 3
Cbc0038I Pass  57: suminf.    4.17884 (10) obj. -23.8505 iterations 9
Cbc0038I Pass  58: suminf.    3.69162 (9) obj. -23.8505 iterations 2
Cbc0038I Pass  59: suminf.    3.09997 (9) obj. -23.8505 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 120 rows 71 columns - 10 fixed gives 82, 61 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 78 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -16.5782 - took 0.17 seconds
Cbc0012I Integer solution of -16.57824 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 107 rows 64 columns
Cbc0012I Integer solution of -17.09011 found by RINS after 0 iterations and 0 nodes (0.25 seconds)
Cbc0031I 37 added rows had average density of 64.513514
Cbc0013I At root node, 37 cuts changed objective from -47.585587 to -38.22555 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20997 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2405 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.09011 best solution, best possible -38.22555 (2.10 seconds)
Cbc0012I Integer solution of -17.33695 found by rounding after 13290 iterations and 21 nodes (2.47 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 17 rows 18 columns
Cbc0012I Integer solution of -17.60725 found by RINS after 13972 iterations and 41 nodes (2.57 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 66 rows 41 columns
Cbc0012I Integer solution of -17.78138 found by rounding after 15748 iterations and 136 nodes (2.79 seconds)
Cbc0010I After 146 nodes, 10 on tree, -17.78138 best solution, best possible -38.22555 (2.80 seconds)
Cbc0012I Integer solution of -17.84459 found by DiveCoefficient after 17169 iterations and 168 nodes (2.88 seconds)
Cbc0016I Integer solution of -17.86174 found by strong branching after 17234 iterations and 179 nodes (2.90 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 2 rows 5 columns
Cbc0012I Integer solution of -17.90438 found by rounding after 17744 iterations and 214 nodes (2.95 seconds)
Cbc0001I Search completed - best objective -17.90437999999999, took 18417 iterations and 262 nodes (3.03 seconds)
Cbc0032I Strong branching done 1832 times (29889 iterations), fathomed 41 nodes and fixed 124 variables
Cbc0035I Maximum depth 35, 738 variables fixed on reduced cost
Total time (CPU seconds):       2.91   (Wallclock seconds):       3.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-72) rows, 145 (-58) columns and 2803 (-2851) elements
Clp1000I sum of infeasibilities 6.78395e-08 - average 5.10072e-10, 45 fixed columns
Coin0506I Presolve 85 (-48) rows, 100 (-45) columns and 1519 (-1284) elements
Clp0006I 0  Obj 43.540957 Dual inf 5.0214915 (100)
Clp0014I Perturbing problem by 0.001% of 2.5387994 - largest nonzero change 1.9073694e-05 ( 0.0016580886%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 62.732607
Clp0000I Optimal - objective value 62.732607
Coin0511I After Postsolve, objective 62.732607, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 62.732607 Dual inf 4.1065852 (3)
Clp0014I Perturbing problem by 0.001% of 1.6119245 - largest nonzero change 1.9689134e-05 ( 0.0019689134%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 64.26897
Clp0000I Optimal - objective value 64.26897
Clp0000I Optimal - objective value 64.26897
Coin0511I After Postsolve, objective 64.26897, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.26897035 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 145 columns (145 integer (145 of which binary)) and 2806 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 8.84796
Cbc0038I Pass   1: suminf.    2.79283 (33) obj. -31.9922 iterations 11
Cbc0038I Pass   2: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass   3: suminf.    0.29128 (8) obj. 1.96533 iterations 25
Cbc0038I Solution found of 9.67405
Cbc0038I Rounding solution of -3.416 is better than previous of 9.67405

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -3.416 to -4.34164 (0.04 seconds)
Cbc0038I Round again with cutoff of -9.77238
Cbc0038I Pass   4: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass   5: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass   6: suminf.    1.24804 (20) obj. -9.77238 iterations 15
Cbc0038I Pass   7: suminf.    0.57706 (8) obj. -9.77238 iterations 15
Cbc0038I Pass   8: suminf.    0.33879 (7) obj. -11.3187 iterations 2
Cbc0038I Pass   9: suminf.    0.82767 (9) obj. -9.77238 iterations 8
Cbc0038I Pass  10: suminf.    0.82767 (9) obj. -9.77238 iterations 0
Cbc0038I Pass  11: suminf.    0.86299 (4) obj. -9.77238 iterations 11
Cbc0038I Pass  12: suminf.    0.70550 (3) obj. -11.7258 iterations 1
Cbc0038I Pass  13: suminf.    0.43377 (2) obj. -9.77238 iterations 7
Cbc0038I Pass  14: suminf.    0.15306 (1) obj. -11.9525 iterations 2
Cbc0038I Pass  15: suminf.    0.37108 (1) obj. -9.77238 iterations 1
Cbc0038I Pass  16: suminf.    2.23118 (16) obj. -9.77238 iterations 37
Cbc0038I Pass  17: suminf.    2.23118 (16) obj. -9.77238 iterations 1
Cbc0038I Pass  18: suminf.    1.06357 (6) obj. -9.77238 iterations 21
Cbc0038I Pass  19: suminf.    0.65609 (3) obj. -9.77238 iterations 2
Cbc0038I Pass  20: suminf.    0.25306 (2) obj. -11.3845 iterations 2
Cbc0038I Pass  21: suminf.    0.65003 (2) obj. -9.77238 iterations 2
Cbc0038I Pass  22: suminf.    0.65003 (2) obj. -9.77238 iterations 0
Cbc0038I Pass  23: suminf.    0.41427 (2) obj. -9.77238 iterations 4
Cbc0038I Pass  24: suminf.    1.82831 (14) obj. -9.77238 iterations 31
Cbc0038I Pass  25: suminf.    1.31932 (11) obj. -9.77238 iterations 11
Cbc0038I Pass  26: suminf.    0.92556 (5) obj. -9.77238 iterations 18
Cbc0038I Pass  27: suminf.    0.48835 (5) obj. -9.77238 iterations 3
Cbc0038I Pass  28: suminf.    0.73551 (5) obj. -9.77238 iterations 8
Cbc0038I Pass  29: suminf.    0.68747 (4) obj. -9.77238 iterations 5
Cbc0038I Pass  30: suminf.    0.87919 (4) obj. -9.77238 iterations 6
Cbc0038I Pass  31: suminf.    0.87919 (4) obj. -9.77238 iterations 0
Cbc0038I Pass  32: suminf.    1.42622 (5) obj. -9.77238 iterations 5
Cbc0038I Pass  33: suminf.    1.42622 (5) obj. -9.77238 iterations 0
Cbc0038I Rounding solution of -4.88552 is better than previous of -4.34164

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 28 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -4.88552 to -12.8772 (0.09 seconds)
Cbc0038I Round again with cutoff of -22.0314
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass  34: suminf.    2.79283 (33) obj. -31.9922 iterations 0
Cbc0038I Pass  35: suminf.    1.62680 (15) obj. -22.0314 iterations 33
Cbc0038I Pass  36: suminf.    1.52184 (14) obj. -22.0314 iterations 2
Cbc0038I Pass  37: suminf.    1.58720 (8) obj. -22.0314 iterations 18
Cbc0038I Pass  38: suminf.    1.36515 (8) obj. -22.0314 iterations 5
Cbc0038I Pass  39: suminf.    1.41125 (5) obj. -22.0314 iterations 12
Cbc0038I Pass  40: suminf.    1.39700 (6) obj. -22.0314 iterations 1
Cbc0038I Pass  41: suminf.    1.47868 (6) obj. -22.0314 iterations 4
Cbc0038I Pass  42: suminf.    1.39814 (5) obj. -22.0314 iterations 2
Cbc0038I Pass  43: suminf.    1.41125 (5) obj. -22.0314 iterations 2
Cbc0038I Pass  44: suminf.    3.51296 (15) obj. -22.0314 iterations 22
Cbc0038I Pass  45: suminf.    3.15007 (16) obj. -22.0314 iterations 6
Cbc0038I Pass  46: suminf.    1.83623 (6) obj. -22.0314 iterations 18
Cbc0038I Pass  47: suminf.    1.72413 (9) obj. -22.0314 iterations 5
Cbc0038I Pass  48: suminf.    2.03217 (7) obj. -22.0314 iterations 5
Cbc0038I Pass  49: suminf.    1.88541 (7) obj. -22.0314 iterations 3
Cbc0038I Pass  50: suminf.    1.86213 (5) obj. -22.0314 iterations 4
Cbc0038I Pass  51: suminf.    1.57216 (5) obj. -22.0314 iterations 7
Cbc0038I Pass  52: suminf.    1.79084 (7) obj. -22.0314 iterations 5
Cbc0038I Pass  53: suminf.    1.69433 (10) obj. -22.0314 iterations 3
Cbc0038I Pass  54: suminf.    2.11693 (7) obj. -22.0314 iterations 6
Cbc0038I Pass  55: suminf.    1.88541 (7) obj. -22.0314 iterations 5
Cbc0038I Pass  56: suminf.    1.86213 (5) obj. -22.0314 iterations 5
Cbc0038I Pass  57: suminf.    1.57216 (5) obj. -22.0314 iterations 7
Cbc0038I Pass  58: suminf.    1.79084 (7) obj. -22.0314 iterations 6
Cbc0038I Pass  59: suminf.    1.69433 (10) obj. -22.0314 iterations 4
Cbc0038I Pass  60: suminf.    2.11693 (7) obj. -22.0314 iterations 7
Cbc0038I Pass  61: suminf.    1.88541 (7) obj. -22.0314 iterations 5
Cbc0038I Pass  62: suminf.    1.86213 (5) obj. -22.0314 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 21 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -12.8772 - took 0.07 seconds
Cbc0012I Integer solution of -12.877162 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 25 rows 35 columns
Cbc0031I 59 added rows had average density of 67.491525
Cbc0013I At root node, 59 cuts changed objective from -58.648135 to -26.054836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23586 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3508 row cuts average 141.2 elements, 0 column cuts (0 active)  in 0.308 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1115 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2366 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 475 row cuts average 71.4 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.877162 best solution, best possible -26.054836 (2.81 seconds)
Cbc0012I Integer solution of -16.85449 found by rounding after 9720 iterations and 1 nodes (2.83 seconds)
Cbc0010I After 6 nodes, 3 on tree, -16.85449 best solution, best possible -25.621125 (3.64 seconds)
Cbc0010I After 33 nodes, 10 on tree, -16.85449 best solution, best possible -25.621125 (4.34 seconds)
Cbc0012I Integer solution of -16.86174 found by rounding after 11873 iterations and 37 nodes (4.34 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 2 rows 6 columns
Cbc0038I Full problem 133 rows 145 columns, reduced to 7 rows 14 columns
Cbc0012I Integer solution of -17.07549 found by rounding after 13284 iterations and 122 nodes (4.60 seconds)
Cbc0004I Integer solution of -17.25868 found after 13492 iterations and 138 nodes (4.63 seconds)
Cbc0012I Integer solution of -17.60725 found by rounding after 14602 iterations and 164 nodes (4.70 seconds)
Cbc0012I Integer solution of -17.67293 found by DiveCoefficient after 14621 iterations and 165 nodes (4.71 seconds)
Cbc0012I Integer solution of -17.78526 found by rounding after 14736 iterations and 185 nodes (4.76 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 4 rows 7 columns
Cbc0016I Integer solution of -17.90438 found by strong branching after 14864 iterations and 203 nodes (4.80 seconds)
Cbc0001I Search completed - best objective -17.90437999999999, took 15226 iterations and 260 nodes (4.91 seconds)
Cbc0032I Strong branching done 1734 times (23595 iterations), fathomed 48 nodes and fixed 53 variables
Cbc0035I Maximum depth 30, 385 variables fixed on reduced cost
Total time (CPU seconds):       4.68   (Wallclock seconds):       4.96

