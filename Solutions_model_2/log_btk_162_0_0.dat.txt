Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 235 (-91) rows, 119 (-45) columns and 586 (-223) elements
Clp0000I Optimal - objective value 30658896
Coin0511I After Postsolve, objective 30658896, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30658895.74 - 80 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 235 rows, 119 columns (118 integer (118 of which binary)) and 586 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.823%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.18152
Cbc0038I Pass   1: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 44
Cbc0038I Solution found of -2.61755e+07
Cbc0038I Relaxing continuous gives -2.61755e+07
Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 235 rows 119 columns, reduced to 31 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -2.61755e+07 to -2.83846e+07 (0.02 seconds)
Cbc0038I Round again with cutoff of -2.8612e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 0
Cbc0038I Pass   3: suminf.    0.89114 (4) obj. -2.8612e+07 iterations 9
Cbc0038I Pass   4: suminf.    1.49103 (6) obj. -2.8612e+07 iterations 23
Cbc0038I Pass   5: suminf.    1.24796 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass   6: suminf.    1.43519 (5) obj. -2.93144e+07 iterations 8
Cbc0038I Pass   7: suminf.    1.11491 (6) obj. -2.8612e+07 iterations 13
Cbc0038I Pass   8: suminf.    1.24796 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass   9: suminf.    1.25160 (6) obj. -2.8612e+07 iterations 17
Cbc0038I Pass  10: suminf.    1.11428 (6) obj. -2.8612e+07 iterations 30
Cbc0038I Pass  11: suminf.    1.20110 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass  12: suminf.    1.27587 (6) obj. -2.8612e+07 iterations 17
Cbc0038I Pass  13: suminf.    1.27587 (6) obj. -2.8612e+07 iterations 9
Cbc0038I Pass  14: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 15
Cbc0038I Pass  15: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  16: suminf.    1.41204 (5) obj. -2.92677e+07 iterations 8
Cbc0038I Pass  17: suminf.    1.11305 (6) obj. -2.8612e+07 iterations 13
Cbc0038I Pass  18: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass  19: suminf.    2.11305 (6) obj. -2.8612e+07 iterations 11
Cbc0038I Pass  20: suminf.    2.11305 (6) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  21: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass  22: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  23: suminf.    1.41204 (5) obj. -2.92677e+07 iterations 8
Cbc0038I Pass  24: suminf.    1.11305 (6) obj. -2.8612e+07 iterations 12
Cbc0038I Pass  25: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 9
Cbc0038I Pass  26: suminf.    1.85606 (8) obj. -2.8612e+07 iterations 13
Cbc0038I Pass  27: suminf.    1.27587 (6) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  28: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 14
Cbc0038I Pass  29: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  30: suminf.    1.41204 (5) obj. -2.92677e+07 iterations 8
Cbc0038I Pass  31: suminf.    1.11305 (6) obj. -2.8612e+07 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 235 rows 119 columns, reduced to 39 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -2.83846e+07 to -2.84198e+07 (0.03 seconds)
Cbc0038I Round again with cutoff of -2.90214e+07
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 0
Cbc0038I Pass  32: suminf.    1.04087 (4) obj. -2.90214e+07 iterations 10
Cbc0038I Pass  33: suminf.    2.78558 (6) obj. -2.90214e+07 iterations 25
Cbc0038I Pass  34: suminf.    2.29959 (5) obj. -2.90214e+07 iterations 14
Cbc0038I Pass  35: suminf.    1.18033 (4) obj. -2.95351e+07 iterations 15
Cbc0038I Pass  36: suminf.    1.18033 (4) obj. -2.95351e+07 iterations 0
Cbc0038I Pass  37: suminf.    1.36819 (4) obj. -2.90214e+07 iterations 8
Cbc0038I Pass  38: suminf.    5.33309 (13) obj. -2.90214e+07 iterations 17
Cbc0038I Pass  39: suminf.    2.09923 (5) obj. -2.90214e+07 iterations 18
Cbc0038I Pass  40: suminf.    2.09923 (5) obj. -2.90214e+07 iterations 7
Cbc0038I Pass  41: suminf.    2.50000 (5) obj. -2.94805e+07 iterations 10
Cbc0038I Pass  42: suminf.    1.81372 (6) obj. -2.90214e+07 iterations 22
Cbc0038I Pass  43: suminf.    1.58673 (6) obj. -2.90214e+07 iterations 11
Cbc0038I Pass  44: suminf.    1.87978 (4) obj. -2.9152e+07 iterations 23
Cbc0038I Pass  45: suminf.    1.83201 (4) obj. -2.90214e+07 iterations 8
Cbc0038I Pass  46: suminf.    1.87978 (4) obj. -2.9152e+07 iterations 3
Cbc0038I Pass  47: suminf.    2.10921 (6) obj. -2.90214e+07 iterations 22
Cbc0038I Pass  48: suminf.    2.10921 (6) obj. -2.90214e+07 iterations 4
Cbc0038I Pass  49: suminf.    1.29989 (5) obj. -2.90214e+07 iterations 20
Cbc0038I Pass  50: suminf.    1.29989 (5) obj. -2.90214e+07 iterations 0
Cbc0038I Pass  51: suminf.    1.87978 (4) obj. -2.9152e+07 iterations 17
Cbc0038I Pass  52: suminf.    1.83201 (4) obj. -2.90214e+07 iterations 8
Cbc0038I Pass  53: suminf.    1.87978 (4) obj. -2.9152e+07 iterations 3
Cbc0038I Pass  54: suminf.    4.51438 (19) obj. -2.90214e+07 iterations 23
Cbc0038I Pass  55: suminf.    2.43767 (8) obj. -2.90214e+07 iterations 12
Cbc0038I Pass  56: suminf.    2.29959 (5) obj. -2.90214e+07 iterations 38
Cbc0038I Pass  57: suminf.    2.29959 (5) obj. -2.90214e+07 iterations 0
Cbc0038I Pass  58: suminf.    1.18033 (4) obj. -2.95351e+07 iterations 15
Cbc0038I Pass  59: suminf.    1.18033 (4) obj. -2.95351e+07 iterations 0
Cbc0038I Pass  60: suminf.    1.36819 (4) obj. -2.90214e+07 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 235 rows 119 columns, reduced to 63 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2.84198e+07 - took 0.03 seconds
Cbc0012I Integer solution of -28419840 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 235 rows 119 columns, reduced to 24 rows 22 columns
Cbc0031I 7 added rows had average density of 67
Cbc0013I At root node, 7 cuts changed objective from -30658896 to -29859048 in 88 passes
Cbc0014I Cut generator 0 (Probing) - 418 row cuts average 3.5 elements, 14 column cuts (14 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 134 row cuts average 65.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 53.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 27 row cuts average 58.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0004I Integer solution of -28420610 found after 965 iterations and 34 nodes (0.37 seconds)
Cbc0001I Search completed - best objective -28420610, took 1000 iterations and 36 nodes (0.37 seconds)
Cbc0032I Strong branching done 348 times (1604 iterations), fathomed 7 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 226 (-99) rows, 227 (-97) columns and 6516 (-7334) elements
Clp1000I sum of infeasibilities 0.287187 - average 0.00127074, 28 fixed columns
Coin0506I Presolve 179 (-47) rows, 180 (-47) columns and 4247 (-2269) elements
Clp0029I End of values pass after 180 iterations
Clp0014I Perturbing problem by 0.001% of 3.4632913 - largest nonzero change 2.9962077e-05 ( 0.0026696248%) - largest zero change 2.9582533e-05
Clp0000I Optimal - objective value 24289425
Clp0000I Optimal - objective value 24289425
Coin0511I After Postsolve, objective 24289425, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.8576505 - largest nonzero change 2.9962077e-05 ( 0.0026558335%) - largest zero change 2.9774456e-05
Clp0000I Optimal - objective value 30676814
Clp0000I Optimal - objective value 30676814
Clp0000I Optimal - objective value 30676814
Coin0511I After Postsolve, objective 30676814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30676813.73 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0004I processed model has 226 rows, 227 columns (227 integer (227 of which binary)) and 6516 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.193%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 76 integers unsatisfied sum - 13.2342
Cbc0038I Pass   1: suminf.    8.56682 (61) obj. -2.74377e+07 iterations 43
Cbc0038I Pass   2: suminf.    8.56682 (61) obj. -2.74377e+07 iterations 0
Cbc0038I Pass   3: suminf.    2.40205 (33) obj. -2.39932e+07 iterations 28
Cbc0038I Pass   4: suminf.    1.03939 (20) obj. -2.39894e+07 iterations 13
Cbc0038I Pass   5: suminf.    0.21958 (8) obj. -2.39856e+07 iterations 12
Cbc0038I Solution found of -2.3984e+07
Cbc0038I Rounding solution of -2.40195e+07 is better than previous of -2.3984e+07

Cbc0038I Before mini branch and bound, 147 integers at bound fixed and 0 continuous
Cbc0038I Full problem 226 rows 227 columns, reduced to 49 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -2.40195e+07 to -2.83846e+07 (0.07 seconds)
Cbc0038I Round again with cutoff of -2.86137e+07
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   6: suminf.    8.99665 (64) obj. -2.86137e+07 iterations 3
Cbc0038I Pass   7: suminf.    8.97792 (63) obj. -2.86137e+07 iterations 10
Cbc0038I Pass   8: suminf.    5.33997 (45) obj. -2.86137e+07 iterations 24
Cbc0038I Pass   9: suminf.    5.33997 (45) obj. -2.86137e+07 iterations 9
Cbc0038I Pass  10: suminf.    3.57289 (32) obj. -2.86137e+07 iterations 20
Cbc0038I Pass  11: suminf.    3.57289 (32) obj. -2.86137e+07 iterations 11
Cbc0038I Pass  12: suminf.    1.99254 (14) obj. -2.86137e+07 iterations 26
Cbc0038I Pass  13: suminf.    1.98428 (15) obj. -2.86137e+07 iterations 11
Cbc0038I Pass  14: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 22
Cbc0038I Pass  15: suminf.    0.89177 (4) obj. -2.86137e+07 iterations 5
Cbc0038I Pass  16: suminf.    3.60693 (15) obj. -2.86137e+07 iterations 68
Cbc0038I Pass  17: suminf.    2.59456 (14) obj. -2.86137e+07 iterations 18
Cbc0038I Pass  18: suminf.    1.13482 (8) obj. -2.86137e+07 iterations 34
Cbc0038I Pass  19: suminf.    0.79743 (3) obj. -2.86137e+07 iterations 15
Cbc0038I Pass  20: suminf.    0.79743 (3) obj. -2.86137e+07 iterations 1
Cbc0038I Pass  21: suminf.    2.57168 (16) obj. -2.86137e+07 iterations 28
Cbc0038I Pass  22: suminf.    2.20835 (10) obj. -2.86137e+07 iterations 13
Cbc0038I Pass  23: suminf.    1.41731 (8) obj. -2.86137e+07 iterations 30
Cbc0038I Pass  24: suminf.    1.06149 (3) obj. -2.86137e+07 iterations 15
Cbc0038I Pass  25: suminf.    1.06149 (3) obj. -2.86137e+07 iterations 1
Cbc0038I Pass  26: suminf.    3.59973 (35) obj. -2.86137e+07 iterations 38
Cbc0038I Pass  27: suminf.    3.28361 (16) obj. -2.86137e+07 iterations 10
Cbc0038I Pass  28: suminf.    1.21131 (7) obj. -2.86137e+07 iterations 30
Cbc0038I Pass  29: suminf.    1.28684 (5) obj. -2.86137e+07 iterations 8
Cbc0038I Pass  30: suminf.    1.28684 (5) obj. -2.86137e+07 iterations 7
Cbc0038I Pass  31: suminf.    1.41204 (5) obj. -2.92556e+07 iterations 10
Cbc0038I Pass  32: suminf.    1.11860 (5) obj. -2.86137e+07 iterations 5
Cbc0038I Pass  33: suminf.    3.87254 (22) obj. -2.86137e+07 iterations 37
Cbc0038I Pass  34: suminf.    2.54391 (14) obj. -2.86137e+07 iterations 19
Cbc0038I Pass  35: suminf.    0.96175 (4) obj. -2.87855e+07 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 226 rows 227 columns, reduced to 56 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -2.83846e+07 to -2.83885e+07 (0.13 seconds)
Cbc0038I Round again with cutoff of -2.90262e+07
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 3
Cbc0038I Pass  35: suminf.    9.49035 (64) obj. -2.90262e+07 iterations 0
Cbc0038I Pass  36: suminf.    8.87170 (63) obj. -2.90262e+07 iterations 32
Cbc0038I Pass  37: suminf.    4.83438 (42) obj. -2.94735e+07 iterations 29
Cbc0038I Pass  38: suminf.    4.65057 (42) obj. -2.90262e+07 iterations 5
Cbc0038I Pass  39: suminf.    2.30516 (22) obj. -2.94682e+07 iterations 27
Cbc0038I Pass  40: suminf.    2.14351 (22) obj. -2.90262e+07 iterations 9
Cbc0038I Pass  41: suminf.    1.29879 (7) obj. -2.94644e+07 iterations 22
Cbc0038I Pass  42: suminf.    1.13851 (7) obj. -2.90262e+07 iterations 8
Cbc0038I Pass  43: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 11
Cbc0038I Pass  44: suminf.    1.04261 (4) obj. -2.90262e+07 iterations 7
Cbc0038I Pass  45: suminf.    2.67385 (13) obj. -2.90262e+07 iterations 54
Cbc0038I Pass  46: suminf.    2.00009 (12) obj. -2.90262e+07 iterations 17
Cbc0038I Pass  47: suminf.    1.20219 (4) obj. -2.94532e+07 iterations 13
Cbc0038I Pass  48: suminf.    1.04602 (4) obj. -2.90262e+07 iterations 4
Cbc0038I Pass  49: suminf.    3.38148 (20) obj. -2.90262e+07 iterations 41
Cbc0038I Pass  50: suminf.    3.38148 (20) obj. -2.90262e+07 iterations 5
Cbc0038I Pass  51: suminf.    1.16141 (5) obj. -2.90262e+07 iterations 29
Cbc0038I Pass  52: suminf.    1.16141 (5) obj. -2.90262e+07 iterations 8
Cbc0038I Pass  53: suminf.    1.78241 (5) obj. -3.00663e+07 iterations 11
Cbc0038I Pass  54: suminf.    1.30692 (5) obj. -2.90262e+07 iterations 6
Cbc0038I Pass  55: suminf.    3.38474 (18) obj. -2.90262e+07 iterations 38
Cbc0038I Pass  56: suminf.    3.38474 (18) obj. -2.90262e+07 iterations 8
Cbc0038I Pass  57: suminf.    1.21384 (6) obj. -2.90262e+07 iterations 18
Cbc0038I Pass  58: suminf.    1.21384 (6) obj. -2.90262e+07 iterations 8
Cbc0038I Pass  59: suminf.    1.78241 (5) obj. -3.00662e+07 iterations 12
Cbc0038I Pass  60: suminf.    1.30694 (5) obj. -2.90262e+07 iterations 5
Cbc0038I Pass  61: suminf.    1.16145 (5) obj. -2.90262e+07 iterations 6
Cbc0038I Pass  62: suminf.    1.16145 (5) obj. -2.90262e+07 iterations 8
Cbc0038I Pass  63: suminf.    4.02983 (22) obj. -2.90262e+07 iterations 32
Cbc0038I Pass  64: suminf.    4.02983 (22) obj. -2.90262e+07 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 118 integers at bound fixed and 0 continuous
Cbc0038I Full problem 226 rows 227 columns, reduced to 52 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -2.83885e+07 - took 0.12 seconds
Cbc0012I Integer solution of -28388540 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 226 rows 227 columns, reduced to 35 rows 36 columns
Cbc0031I 51 added rows had average density of 7.5686275
Cbc0013I At root node, 51 cuts changed objective from -30675969 to -29812170 in 36 passes
Cbc0014I Cut generator 0 (Probing) - 2092 row cuts average 10.1 elements, 13 column cuts (13 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 90 row cuts average 80.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 52.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 145 row cuts average 62.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28388540 best solution, best possible -29812170 (0.47 seconds)
Cbc0012I Integer solution of -28407915 found by rounding after 960 iterations and 2 nodes (0.51 seconds)
Cbc0012I Integer solution of -28419840 found by DiveCoefficient after 960 iterations and 2 nodes (0.52 seconds)
Cbc0012I Integer solution of -28420610 found by DiveCoefficient after 2201 iterations and 41 nodes (0.82 seconds)
Cbc0038I Full problem 226 rows 227 columns, reduced to 38 rows 41 columns
Cbc0038I Full problem 277 rows 227 columns, reduced to 169 rows 170 columns
Cbc0044I Reduced cost fixing - 169 rows, 170 columns - restarting search
Cbc0012I Integer solution of -28420610 found by Previous solution after 0 iterations and 0 nodes (0.90 seconds)
Cbc0038I Full problem 169 rows 170 columns, reduced to 43 rows 45 columns
Cbc0031I 38 added rows had average density of 16.657895
Cbc0013I At root node, 38 cuts changed objective from -30669269 to -29792116 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1252 row cuts average 2.2 elements, 3 column cuts (3 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 194 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 105 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 120 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 57 row cuts average 56.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 42.1 elements, 0 column cuts (0 active)  in 0.617 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 199 row cuts average 12.1 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -28420610 best solution, best possible -29792116 (2.32 seconds)
Cbc0038I Full problem 169 rows 170 columns, reduced to 42 rows 45 columns
Cbc0001I Search completed - best objective -28420610, took 2510 iterations and 82 nodes (2.73 seconds)
Cbc0032I Strong branching done 794 times (6309 iterations), fathomed 0 nodes and fixed 12 variables
Cbc0035I Maximum depth 9, 139 variables fixed on reduced cost
Cbc0038I Probing was tried 213 times and created 2197 cuts of which 0 were active after adding rounds of cuts (0.079 seconds)
Cbc0038I Gomory was tried 196 times and created 200 cuts of which 0 were active after adding rounds of cuts (0.067 seconds)
Cbc0038I Knapsack was tried 165 times and created 151 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Cbc0038I Clique was tried 196 times and created 181 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
Cbc0038I MixedIntegerRounding2 was tried 196 times and created 188 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 196 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.617 seconds)
Cbc0038I Stored from first was tried 196 times and created 271 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -28420610, took 4860 iterations and 132 nodes (2.74 seconds)
Cbc0032I Strong branching done 496 times (4202 iterations), fathomed 15 nodes and fixed 13 variables
Cbc0035I Maximum depth 7, 132 variables fixed on reduced cost
Total time (CPU seconds):       2.27   (Wallclock seconds):       2.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 235 (-91) rows, 119 (-45) columns and 586 (-223) elements
Clp0000I Optimal - objective value 30658896
Coin0511I After Postsolve, objective 30658896, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30658895.74 - 80 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 235 rows, 119 columns (118 integer (118 of which binary)) and 586 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.823%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.18152
Cbc0038I Pass   1: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 44
Cbc0038I Solution found of -2.61755e+07
Cbc0038I Relaxing continuous gives -2.61755e+07
Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 235 rows 119 columns, reduced to 31 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -2.61755e+07 to -2.83846e+07 (0.02 seconds)
Cbc0038I Round again with cutoff of -2.8612e+07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 0
Cbc0038I Pass   3: suminf.    0.89114 (4) obj. -2.8612e+07 iterations 9
Cbc0038I Pass   4: suminf.    1.49103 (6) obj. -2.8612e+07 iterations 23
Cbc0038I Pass   5: suminf.    1.24796 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass   6: suminf.    1.43519 (5) obj. -2.93144e+07 iterations 8
Cbc0038I Pass   7: suminf.    1.11491 (6) obj. -2.8612e+07 iterations 13
Cbc0038I Pass   8: suminf.    1.24796 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass   9: suminf.    1.25160 (6) obj. -2.8612e+07 iterations 17
Cbc0038I Pass  10: suminf.    1.11428 (6) obj. -2.8612e+07 iterations 30
Cbc0038I Pass  11: suminf.    1.20110 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass  12: suminf.    1.27587 (6) obj. -2.8612e+07 iterations 17
Cbc0038I Pass  13: suminf.    1.27587 (6) obj. -2.8612e+07 iterations 9
Cbc0038I Pass  14: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 15
Cbc0038I Pass  15: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  16: suminf.    1.41204 (5) obj. -2.92677e+07 iterations 8
Cbc0038I Pass  17: suminf.    1.11305 (6) obj. -2.8612e+07 iterations 13
Cbc0038I Pass  18: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass  19: suminf.    2.11305 (6) obj. -2.8612e+07 iterations 11
Cbc0038I Pass  20: suminf.    2.11305 (6) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  21: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 10
Cbc0038I Pass  22: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  23: suminf.    1.41204 (5) obj. -2.92677e+07 iterations 8
Cbc0038I Pass  24: suminf.    1.11305 (6) obj. -2.8612e+07 iterations 12
Cbc0038I Pass  25: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 9
Cbc0038I Pass  26: suminf.    1.85606 (8) obj. -2.8612e+07 iterations 13
Cbc0038I Pass  27: suminf.    1.27587 (6) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  28: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 14
Cbc0038I Pass  29: suminf.    1.27483 (5) obj. -2.8612e+07 iterations 6
Cbc0038I Pass  30: suminf.    1.41204 (5) obj. -2.92677e+07 iterations 8
Cbc0038I Pass  31: suminf.    1.11305 (6) obj. -2.8612e+07 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 235 rows 119 columns, reduced to 39 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -2.83846e+07 to -2.84198e+07 (0.03 seconds)
Cbc0038I Round again with cutoff of -2.90214e+07
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 0
Cbc0038I Pass  32: suminf.    1.04087 (4) obj. -2.90214e+07 iterations 10
Cbc0038I Pass  33: suminf.    2.78558 (6) obj. -2.90214e+07 iterations 25
Cbc0038I Pass  34: suminf.    2.29959 (5) obj. -2.90214e+07 iterations 14
Cbc0038I Pass  35: suminf.    1.18033 (4) obj. -2.95351e+07 iterations 15
Cbc0038I Pass  36: suminf.    1.18033 (4) obj. -2.95351e+07 iterations 0
Cbc0038I Pass  37: suminf.    1.36819 (4) obj. -2.90214e+07 iterations 8
Cbc0038I Pass  38: suminf.    5.33309 (13) obj. -2.90214e+07 iterations 17
Cbc0038I Pass  39: suminf.    2.09923 (5) obj. -2.90214e+07 iterations 18
Cbc0038I Pass  40: suminf.    2.09923 (5) obj. -2.90214e+07 iterations 7
Cbc0038I Pass  41: suminf.    2.50000 (5) obj. -2.94805e+07 iterations 10
Cbc0038I Pass  42: suminf.    1.81372 (6) obj. -2.90214e+07 iterations 22
Cbc0038I Pass  43: suminf.    1.58673 (6) obj. -2.90214e+07 iterations 11
Cbc0038I Pass  44: suminf.    1.87978 (4) obj. -2.9152e+07 iterations 23
Cbc0038I Pass  45: suminf.    1.83201 (4) obj. -2.90214e+07 iterations 8
Cbc0038I Pass  46: suminf.    1.87978 (4) obj. -2.9152e+07 iterations 3
Cbc0038I Pass  47: suminf.    2.10921 (6) obj. -2.90214e+07 iterations 22
Cbc0038I Pass  48: suminf.    2.10921 (6) obj. -2.90214e+07 iterations 4
Cbc0038I Pass  49: suminf.    1.29989 (5) obj. -2.90214e+07 iterations 20
Cbc0038I Pass  50: suminf.    1.29989 (5) obj. -2.90214e+07 iterations 0
Cbc0038I Pass  51: suminf.    1.87978 (4) obj. -2.9152e+07 iterations 17
Cbc0038I Pass  52: suminf.    1.83201 (4) obj. -2.90214e+07 iterations 8
Cbc0038I Pass  53: suminf.    1.87978 (4) obj. -2.9152e+07 iterations 3
Cbc0038I Pass  54: suminf.    4.51438 (19) obj. -2.90214e+07 iterations 23
Cbc0038I Pass  55: suminf.    2.43767 (8) obj. -2.90214e+07 iterations 12
Cbc0038I Pass  56: suminf.    2.29959 (5) obj. -2.90214e+07 iterations 38
Cbc0038I Pass  57: suminf.    2.29959 (5) obj. -2.90214e+07 iterations 0
Cbc0038I Pass  58: suminf.    1.18033 (4) obj. -2.95351e+07 iterations 15
Cbc0038I Pass  59: suminf.    1.18033 (4) obj. -2.95351e+07 iterations 0
Cbc0038I Pass  60: suminf.    1.36819 (4) obj. -2.90214e+07 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 235 rows 119 columns, reduced to 63 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -2.84198e+07 - took 0.03 seconds
Cbc0012I Integer solution of -28419840 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 235 rows 119 columns, reduced to 24 rows 22 columns
Cbc0031I 7 added rows had average density of 67
Cbc0013I At root node, 7 cuts changed objective from -30658896 to -29859048 in 88 passes
Cbc0014I Cut generator 0 (Probing) - 418 row cuts average 3.5 elements, 14 column cuts (14 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 134 row cuts average 65.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 53.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 27 row cuts average 58.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0004I Integer solution of -28420610 found after 965 iterations and 34 nodes (0.35 seconds)
Cbc0001I Search completed - best objective -28420610, took 1000 iterations and 36 nodes (0.35 seconds)
Cbc0032I Strong branching done 348 times (1604 iterations), fathomed 7 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 221 (-105) rows, 222 (-103) columns and 6098 (-7753) elements
Clp1000I sum of infeasibilities 0.251152 - average 0.00113643, 138 fixed columns
Coin0506I Presolve 64 (-157) rows, 65 (-157) columns and 191 (-5907) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 2.4037896 - largest nonzero change 3.1377671e-05 ( 0.0015209151%) - largest zero change 2.7270429e-05
Clp0000I Optimal - objective value 24110753
Clp0000I Optimal - objective value 24110753
Coin0511I After Postsolve, objective 24110753, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.9098141 - largest nonzero change 2.988957e-05 ( 0.0026696248%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 30676814
Clp0000I Optimal - objective value 30676814
Clp0000I Optimal - objective value 30676814
Coin0511I After Postsolve, objective 30676814, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30676813.73 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 221 rows, 222 columns (222 integer (222 of which binary)) and 6098 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.055%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 76 integers unsatisfied sum - 13.5147
Cbc0038I Pass   1: suminf.    7.87733 (57) obj. -2.59388e+07 iterations 52
Cbc0038I Pass   2: suminf.    7.87733 (57) obj. -2.59388e+07 iterations 1
Cbc0038I Pass   3: suminf.    3.25593 (38) obj. -2.18181e+07 iterations 19
Cbc0038I Pass   4: suminf.    0.32884 (10) obj. -2.18105e+07 iterations 28
Cbc0038I Solution found of -2.18082e+07
Cbc0038I Rounding solution of -2.18436e+07 is better than previous of -2.18082e+07

Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 222 columns, reduced to 49 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -2.18436e+07 to -2.83846e+07 (0.07 seconds)
Cbc0038I Round again with cutoff of -2.86137e+07
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   5: suminf.    9.33556 (64) obj. -2.86137e+07 iterations 5
Cbc0038I Pass   6: suminf.    9.31431 (63) obj. -2.86137e+07 iterations 10
Cbc0038I Pass   7: suminf.    4.59315 (39) obj. -2.86137e+07 iterations 31
Cbc0038I Pass   8: suminf.    4.59315 (39) obj. -2.86137e+07 iterations 12
Cbc0038I Pass   9: suminf.    3.56621 (31) obj. -2.86137e+07 iterations 16
Cbc0038I Pass  10: suminf.    3.56621 (31) obj. -2.86137e+07 iterations 12
Cbc0038I Pass  11: suminf.    2.49633 (21) obj. -2.86137e+07 iterations 19
Cbc0038I Pass  12: suminf.    2.49633 (21) obj. -2.86137e+07 iterations 13
Cbc0038I Pass  13: suminf.    2.47685 (5) obj. -2.95028e+07 iterations 29
Cbc0038I Pass  14: suminf.    1.73770 (5) obj. -2.86137e+07 iterations 1
Cbc0038I Pass  15: suminf.    1.71382 (6) obj. -2.86137e+07 iterations 10
Cbc0038I Pass  16: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 14
Cbc0038I Pass  17: suminf.    0.89176 (4) obj. -2.86137e+07 iterations 3
Cbc0038I Pass  18: suminf.    1.11310 (16) obj. -2.86137e+07 iterations 60
Cbc0038I Pass  19: suminf.    1.09007 (15) obj. -2.86137e+07 iterations 19
Cbc0038I Pass  20: suminf.    0.11895 (7) obj. -2.86137e+07 iterations 8
Cbc0038I Pass  21: suminf.    0.11895 (7) obj. -2.86137e+07 iterations 1
Cbc0038I Pass  22: suminf.    0.64123 (11) obj. -2.86137e+07 iterations 11
Cbc0038I Pass  23: suminf.    0.64123 (11) obj. -2.86137e+07 iterations 1
Cbc0038I Pass  24: suminf.    1.89037 (5) obj. -2.86137e+07 iterations 12
Cbc0038I Pass  25: suminf.    1.39891 (4) obj. -2.89239e+07 iterations 7
Cbc0038I Pass  26: suminf.    1.51237 (4) obj. -2.86137e+07 iterations 2
Cbc0038I Pass  27: suminf.    2.33149 (14) obj. -2.86137e+07 iterations 30
Cbc0038I Pass  28: suminf.    2.33149 (14) obj. -2.86137e+07 iterations 12
Cbc0038I Pass  29: suminf.    1.96730 (7) obj. -2.86137e+07 iterations 15
Cbc0038I Pass  30: suminf.    1.32521 (6) obj. -2.93412e+07 iterations 7
Cbc0038I Pass  31: suminf.    1.51149 (4) obj. -2.86137e+07 iterations 4
Cbc0038I Pass  32: suminf.    1.24590 (4) obj. -2.93399e+07 iterations 4
Cbc0038I Pass  33: suminf.    3.13521 (14) obj. -2.86137e+07 iterations 45
Cbc0038I Pass  34: suminf.    2.32329 (13) obj. -2.86137e+07 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 112 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 222 columns, reduced to 57 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -2.83846e+07 to -2.83885e+07 (0.14 seconds)
Cbc0038I Round again with cutoff of -2.90261e+07
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass  34: suminf.    9.84604 (64) obj. -2.90261e+07 iterations 0
Cbc0038I Pass  35: suminf.    9.24847 (63) obj. -2.90261e+07 iterations 28
Cbc0038I Pass  36: suminf.    5.56909 (45) obj. -2.94739e+07 iterations 26
Cbc0038I Pass  37: suminf.    5.38091 (45) obj. -2.90261e+07 iterations 5
Cbc0038I Pass  38: suminf.    2.59997 (24) obj. -2.94685e+07 iterations 28
Cbc0038I Pass  39: suminf.    2.43574 (24) obj. -2.90261e+07 iterations 6
Cbc0038I Pass  40: suminf.    1.75072 (15) obj. -2.94663e+07 iterations 16
Cbc0038I Pass  41: suminf.    1.58975 (15) obj. -2.90261e+07 iterations 5
Cbc0038I Pass  42: suminf.    1.20219 (4) obj. -2.94625e+07 iterations 18
Cbc0038I Pass  43: suminf.    1.04260 (4) obj. -2.90261e+07 iterations 5
Cbc0038I Pass  44: suminf.    2.52183 (20) obj. -2.90261e+07 iterations 55
Cbc0038I Pass  45: suminf.    2.35988 (20) obj. -2.90261e+07 iterations 16
Cbc0038I Pass  46: suminf.    0.45410 (5) obj. -2.90261e+07 iterations 20
Cbc0038I Pass  47: suminf.    0.29560 (5) obj. -2.90261e+07 iterations 6
Cbc0038I Pass  48: suminf.    2.87829 (17) obj. -2.90261e+07 iterations 51
Cbc0038I Pass  49: suminf.    2.30761 (16) obj. -2.90261e+07 iterations 21
Cbc0038I Pass  50: suminf.    0.30205 (5) obj. -2.90261e+07 iterations 15
Cbc0038I Pass  51: suminf.    0.29729 (5) obj. -2.90261e+07 iterations 5
Cbc0038I Pass  52: suminf.    2.16401 (17) obj. -2.90261e+07 iterations 33
Cbc0038I Pass  53: suminf.    2.10217 (15) obj. -2.90261e+07 iterations 20
Cbc0038I Pass  54: suminf.    0.29807 (5) obj. -2.90261e+07 iterations 10
Cbc0038I Pass  55: suminf.    0.30181 (5) obj. -2.90261e+07 iterations 4
Cbc0038I Pass  56: suminf.    2.56763 (17) obj. -2.90261e+07 iterations 42
Cbc0038I Pass  57: suminf.    2.24754 (16) obj. -2.90261e+07 iterations 21
Cbc0038I Pass  58: suminf.    0.45030 (5) obj. -2.90261e+07 iterations 19
Cbc0038I Pass  59: suminf.    0.30790 (5) obj. -2.90261e+07 iterations 11
Cbc0038I Pass  60: suminf.    0.45030 (5) obj. -2.90261e+07 iterations 4
Cbc0038I Pass  61: suminf.    3.98500 (16) obj. -2.90261e+07 iterations 38
Cbc0038I Pass  62: suminf.    3.78001 (15) obj. -2.90261e+07 iterations 18
Cbc0038I Pass  63: suminf.    2.26595 (5) obj. -2.90261e+07 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 222 columns, reduced to 57 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -2.83885e+07 - took 0.12 seconds
Cbc0012I Integer solution of -28388540 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 221 rows 222 columns, reduced to 35 rows 36 columns
Cbc0012I Integer solution of -28406785 found by DiveCoefficient after 250 iterations and 0 nodes (0.31 seconds)
Cbc0031I 35 added rows had average density of 6.0285714
Cbc0013I At root node, 35 cuts changed objective from -30675830 to -29892447 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 1120 row cuts average 13.8 elements, 20 column cuts (20 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 68.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 29 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 78 row cuts average 52.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 139 row cuts average 58.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28406785 best solution, best possible -29892447 (0.31 seconds)
Cbc0012I Integer solution of -28418710 found by DiveCoefficient after 589 iterations and 13 nodes (0.42 seconds)
Cbc0016I Integer solution of -28419840 found by strong branching after 1457 iterations and 26 nodes (0.66 seconds)
Cbc0012I Integer solution of -28420610 found by DiveCoefficient after 1550 iterations and 28 nodes (0.67 seconds)
Cbc0001I Search completed - best objective -28420610, took 1846 iterations and 36 nodes (0.73 seconds)
Cbc0032I Strong branching done 370 times (2941 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 5, 88 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.75

