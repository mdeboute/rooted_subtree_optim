Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 171 (-34) rows, 92 (-11) columns and 518 (-85) elements
Clp1000I sum of infeasibilities 1.83781e-05 - average 1.07474e-07, 24 fixed columns
Coin0506I Presolve 123 (-48) rows, 67 (-25) columns and 372 (-146) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Coin0511I After Postsolve, objective 113.9485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Coin0511I After Postsolve, objective 113.9485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.9484969 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 170 rows, 92 columns (91 integer (91 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.316%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.59936
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.7636 iterations 56
Cbc0038I Solution found of -18.7636
Cbc0038I Relaxing continuous gives -18.7636
Cbc0038I Rounding solution of -52.5543 is better than previous of -18.7636

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 92 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -52.5543 to -81.4367 (0.04 seconds)
Cbc0038I Round again with cutoff of -84.6774
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.25349 (5) obj. -84.6774 iterations 12
Cbc0038I Pass   3: suminf.    1.25349 (5) obj. -84.6774 iterations 0
Cbc0038I Pass   4: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass   5: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass   6: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass   7: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass   8: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass   9: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  10: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  11: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  12: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  13: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  14: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  15: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  16: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  17: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  18: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  19: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  20: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  21: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  22: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  23: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  24: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  25: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  26: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  27: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  28: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  29: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  30: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  31: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 92 columns, reduced to 66 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -81.4367 - took 0.04 seconds
Cbc0012I Integer solution of -81.43666 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 170 rows 92 columns, reduced to 59 rows 33 columns
Cbc0031I 21 added rows had average density of 32.714286
Cbc0013I At root node, 21 cuts changed objective from -113.84334 to -103.99918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7387 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 949 row cuts average 88.5 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 88.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -81.43666 best solution, best possible -103.99918 (0.69 seconds)
Cbc0001I Search completed - best objective -81.43665999999999, took 7313 iterations and 32 nodes (0.79 seconds)
Cbc0032I Strong branching done 388 times (7025 iterations), fathomed 6 nodes and fixed 35 variables
Cbc0035I Maximum depth 8, 106 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-80) rows, 135 (-67) columns and 2436 (-3217) elements
Clp1000I sum of infeasibilities 2.13378e-06 - average 1.72079e-08, 72 fixed columns
Coin0506I Presolve 52 (-72) rows, 62 (-73) columns and 222 (-2214) elements
Clp0006I 0  Obj 65.076928 Dual inf 12.170518 (59)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 1.2895657 - largest nonzero change 1.7831679e-05 ( 0.0012908064%) - largest zero change 2.9491618e-05
Clp0000I Optimal - objective value 66.225293
Clp0000I Optimal - objective value 66.225293
Coin0511I After Postsolve, objective 66.225293, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 66.225293 Dual inf 77.59084 (43)
Clp0014I Perturbing problem by 0.001% of 1.6340374 - largest nonzero change 2.8142818e-05 ( 0.0025988751%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 138.65184
Clp0000I Optimal - objective value 138.65184
Clp0000I Optimal - objective value 138.65184
Coin0511I After Postsolve, objective 138.65184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.6518362 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 135 columns (135 integer (135 of which binary)) and 2468 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.320%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 7.98456
Cbc0038I Pass   1: suminf.    1.41122 (23) obj. -41.8363 iterations 36
Cbc0038I Pass   2: suminf.    1.41122 (23) obj. -41.8363 iterations 0
Cbc0038I Solution found of -11.7994
Cbc0038I Rounding solution of -31.7827 is better than previous of -11.7994

Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 135 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -31.7827 to -60.7994 (0.05 seconds)
Cbc0038I Round again with cutoff of -66.4434
Cbc0038I Pass   3: suminf.    1.68300 (24) obj. -66.4434 iterations 5
Cbc0038I Pass   4: suminf.    1.55756 (24) obj. -70.682 iterations 2
Cbc0038I Pass   5: suminf.    2.85999 (17) obj. -66.4434 iterations 40
Cbc0038I Pass   6: suminf.    2.27350 (18) obj. -66.4434 iterations 5
Cbc0038I Pass   7: suminf.    0.14197 (9) obj. -66.4434 iterations 8
Cbc0038I Pass   8: suminf.    0.08371 (4) obj. -66.4434 iterations 9
Cbc0038I Pass   9: suminf.    0.77533 (4) obj. -66.4434 iterations 22
Cbc0038I Pass  10: suminf.    0.72656 (3) obj. -66.4434 iterations 10
Cbc0038I Pass  11: suminf.    0.22727 (2) obj. -67.4869 iterations 4
Cbc0038I Pass  12: suminf.    0.22727 (2) obj. -67.4869 iterations 0
Cbc0038I Pass  13: suminf.    0.77533 (4) obj. -66.4434 iterations 11
Cbc0038I Pass  14: suminf.    1.18250 (11) obj. -66.4434 iterations 29
Cbc0038I Pass  15: suminf.    1.08791 (10) obj. -66.7426 iterations 9
Cbc0038I Pass  16: suminf.    1.34081 (14) obj. -66.4434 iterations 28
Cbc0038I Pass  17: suminf.    1.34011 (13) obj. -66.4434 iterations 5
Cbc0038I Pass  18: suminf.    2.24548 (7) obj. -66.4434 iterations 15
Cbc0038I Pass  19: suminf.    0.48702 (2) obj. -66.4434 iterations 4
Cbc0038I Pass  20: suminf.    0.48702 (2) obj. -66.4434 iterations 1
Cbc0038I Pass  21: suminf.    0.34363 (2) obj. -66.4434 iterations 5
Cbc0038I Pass  22: suminf.    0.16703 (1) obj. -66.4434 iterations 1
Cbc0038I Pass  23: suminf.    0.29268 (1) obj. -70.6893 iterations 2
Cbc0038I Pass  24: suminf.    2.56134 (14) obj. -66.4434 iterations 24
Cbc0038I Pass  25: suminf.    2.22506 (12) obj. -66.4434 iterations 14
Cbc0038I Pass  26: suminf.    0.90953 (5) obj. -66.4434 iterations 12
Cbc0038I Pass  27: suminf.    0.86487 (3) obj. -66.4434 iterations 3
Cbc0038I Pass  28: suminf.    0.36758 (2) obj. -66.4434 iterations 3
Cbc0038I Pass  29: suminf.    0.29328 (2) obj. -66.4434 iterations 2
Cbc0038I Pass  30: suminf.    0.16703 (1) obj. -66.4434 iterations 2
Cbc0038I Pass  31: suminf.    0.16703 (1) obj. -66.4434 iterations 0
Cbc0038I Pass  32: suminf.    0.29268 (1) obj. -70.6893 iterations 2
Cbc0038I Rounding solution of -65.7237 is better than previous of -60.7994

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 135 columns, reduced to 31 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -76.6025
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.71226 (25) obj. -76.6025 iterations 15
Cbc0038I Pass  33: suminf.    1.71226 (25) obj. -76.6025 iterations 1
Cbc0038I Pass  34: suminf.    1.09759 (17) obj. -76.6025 iterations 37
Cbc0038I Pass  35: suminf.    0.53520 (12) obj. -78.6199 iterations 13
Cbc0038I Pass  36: suminf.    2.85131 (20) obj. -76.6025 iterations 33
Cbc0038I Pass  37: suminf.    0.89696 (9) obj. -76.6025 iterations 5
Cbc0038I Pass  38: suminf.    0.55834 (8) obj. -76.6025 iterations 7
Cbc0038I Pass  39: suminf.    1.66700 (19) obj. -76.6025 iterations 25
Cbc0038I Pass  40: suminf.    1.66633 (19) obj. -76.6025 iterations 6
Cbc0038I Pass  41: suminf.    1.11615 (7) obj. -76.6025 iterations 22
Cbc0038I Pass  42: suminf.    1.11082 (6) obj. -76.6025 iterations 6
Cbc0038I Pass  43: suminf.    0.49850 (3) obj. -76.6025 iterations 14
Cbc0038I Pass  44: suminf.    0.49850 (3) obj. -76.6025 iterations 0
Cbc0038I Pass  45: suminf.    1.08901 (4) obj. -76.6025 iterations 24
Cbc0038I Pass  46: suminf.    1.08901 (4) obj. -76.6025 iterations 7
Cbc0038I Pass  47: suminf.    1.32078 (6) obj. -76.6025 iterations 13
Cbc0038I Pass  48: suminf.    0.63139 (3) obj. -76.6025 iterations 10
Cbc0038I Pass  49: suminf.    1.09530 (5) obj. -76.6025 iterations 15
Cbc0038I Pass  50: suminf.    1.80042 (11) obj. -76.6025 iterations 21
Cbc0038I Pass  51: suminf.    1.80042 (11) obj. -76.6025 iterations 8
Cbc0038I Pass  52: suminf.    0.74791 (4) obj. -76.6025 iterations 24
Cbc0038I Pass  53: suminf.    0.74791 (4) obj. -76.6025 iterations 6
Cbc0038I Pass  54: suminf.    2.05821 (8) obj. -76.6025 iterations 17
Cbc0038I Pass  55: suminf.    2.03027 (7) obj. -76.6025 iterations 9
Cbc0038I Pass  56: suminf.    0.80143 (3) obj. -76.6025 iterations 14
Cbc0038I Pass  57: suminf.    2.48892 (11) obj. -76.6025 iterations 36
Cbc0038I Pass  58: suminf.    0.79778 (6) obj. -76.6025 iterations 22
Cbc0038I Pass  59: suminf.    0.79778 (6) obj. -76.6025 iterations 0
Cbc0038I Pass  60: suminf.    1.62763 (6) obj. -76.6025 iterations 23
Cbc0038I Pass  61: suminf.    0.77131 (5) obj. -76.6025 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 135 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -65.7237 to -70.5683 (0.13 seconds)
Cbc0038I Round again with cutoff of -88.7934
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.37716 (25) obj. -88.7934 iterations 3
Cbc0038I Pass  62: suminf.    1.26367 (24) obj. -89.9853 iterations 8
Cbc0038I Pass  63: suminf.    2.88196 (32) obj. -88.7934 iterations 26
Cbc0038I Pass  64: suminf.    2.10807 (20) obj. -88.7934 iterations 9
Cbc0038I Pass  65: suminf.    1.56697 (18) obj. -88.7934 iterations 9
Cbc0038I Pass  66: suminf.    1.41344 (19) obj. -88.7934 iterations 5
Cbc0038I Pass  67: suminf.    2.48751 (28) obj. -88.7934 iterations 29
Cbc0038I Pass  68: suminf.    2.48751 (28) obj. -88.7934 iterations 3
Cbc0038I Pass  69: suminf.    2.01727 (26) obj. -88.7934 iterations 14
Cbc0038I Pass  70: suminf.    2.01704 (26) obj. -88.7934 iterations 6
Cbc0038I Pass  71: suminf.    2.09494 (12) obj. -88.7934 iterations 35
Cbc0038I Pass  72: suminf.    2.08488 (11) obj. -88.7934 iterations 8
Cbc0038I Pass  73: suminf.    2.51660 (10) obj. -88.7934 iterations 20
Cbc0038I Pass  74: suminf.    2.51660 (10) obj. -88.7934 iterations 8
Cbc0038I Pass  75: suminf.    2.52986 (10) obj. -88.7934 iterations 11
Cbc0038I Pass  76: suminf.    2.52986 (10) obj. -88.7934 iterations 8
Cbc0038I Pass  77: suminf.    2.42238 (10) obj. -88.7934 iterations 10
Cbc0038I Pass  78: suminf.    2.42238 (10) obj. -88.7934 iterations 9
Cbc0038I Pass  79: suminf.    3.53844 (16) obj. -88.7934 iterations 29
Cbc0038I Pass  80: suminf.    2.71771 (13) obj. -88.7934 iterations 13
Cbc0038I Pass  81: suminf.    2.54140 (11) obj. -88.7934 iterations 25
Cbc0038I Pass  82: suminf.    2.06361 (12) obj. -88.7934 iterations 10
Cbc0038I Pass  83: suminf.    2.43234 (13) obj. -88.7934 iterations 18
Cbc0038I Pass  84: suminf.    2.42067 (12) obj. -88.7934 iterations 16
Cbc0038I Pass  85: suminf.    2.25971 (12) obj. -88.7934 iterations 16
Cbc0038I Pass  86: suminf.    2.54140 (11) obj. -88.7934 iterations 19
Cbc0038I Pass  87: suminf.    4.95544 (24) obj. -88.7934 iterations 28
Cbc0038I Pass  88: suminf.    3.58003 (16) obj. -88.7934 iterations 14
Cbc0038I Pass  89: suminf.    2.15560 (10) obj. -88.7934 iterations 24
Cbc0038I Pass  90: suminf.    2.04003 (11) obj. -88.7934 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 135 columns, reduced to 34 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -70.5683 - took 0.11 seconds
Cbc0012I Integer solution of -70.56825 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 122 rows 135 columns, reduced to 23 rows 26 columns
Cbc0031I 49 added rows had average density of 43.714286
Cbc0013I At root node, 49 cuts changed objective from -117.23876 to -89.986152 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9956 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1299 row cuts average 120.3 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1024 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 623 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 489 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 354 row cuts average 85.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 134 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.647 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -70.56825 best solution, best possible -89.986152 (2.68 seconds)
Cbc0012I Integer solution of -72.7256 found by rounding after 5116 iterations and 1 nodes (2.68 seconds)
Cbc0012I Integer solution of -74.82659 found by rounding after 5244 iterations and 3 nodes (2.82 seconds)
Cbc0012I Integer solution of -80.4242 found by rounding after 5251 iterations and 5 nodes (2.84 seconds)
Cbc0016I Integer solution of -80.80864 found by strong branching after 5267 iterations and 5 nodes (2.86 seconds)
Cbc0016I Integer solution of -81.43666 found by strong branching after 5816 iterations and 9 nodes (3.45 seconds)
Cbc0010I After 9 nodes, 4 on tree, -81.43666 best solution, best possible -89.211326 (3.45 seconds)
Cbc0010I After 22 nodes, 5 on tree, -81.43666 best solution, best possible -89.211326 (4.15 seconds)
Cbc0001I Search completed - best objective -81.43665999999999, took 7331 iterations and 38 nodes (4.59 seconds)
Cbc0032I Strong branching done 654 times (13953 iterations), fathomed 4 nodes and fixed 15 variables
Cbc0035I Maximum depth 12, 122 variables fixed on reduced cost
Total time (CPU seconds):       3.23   (Wallclock seconds):       4.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 171 (-34) rows, 92 (-11) columns and 518 (-85) elements
Clp1000I sum of infeasibilities 1.83781e-05 - average 1.07474e-07, 24 fixed columns
Coin0506I Presolve 123 (-48) rows, 67 (-25) columns and 372 (-146) elements
Clp0029I End of values pass after 67 iterations
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Coin0511I After Postsolve, objective 113.9485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Clp0000I Optimal - objective value 113.9485
Coin0511I After Postsolve, objective 113.9485, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.9484969 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 170 rows, 92 columns (91 integer (91 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.316%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 6.59936
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.7636 iterations 56
Cbc0038I Solution found of -18.7636
Cbc0038I Relaxing continuous gives -18.7636
Cbc0038I Rounding solution of -52.5543 is better than previous of -18.7636

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 92 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -52.5543 to -81.4367 (0.03 seconds)
Cbc0038I Round again with cutoff of -84.6774
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.25349 (5) obj. -84.6774 iterations 12
Cbc0038I Pass   3: suminf.    1.25349 (5) obj. -84.6774 iterations 0
Cbc0038I Pass   4: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass   5: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass   6: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass   7: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass   8: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass   9: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  10: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  11: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  12: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  13: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  14: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  15: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  16: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  17: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  18: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  19: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  20: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  21: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  22: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  23: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  24: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  25: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  26: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I Pass  27: suminf.    1.42105 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  28: suminf.    1.25349 (5) obj. -84.6774 iterations 13
Cbc0038I Pass  29: suminf.    2.24627 (6) obj. -84.6774 iterations 10
Cbc0038I Pass  30: suminf.    1.09930 (4) obj. -84.6774 iterations 8
Cbc0038I Pass  31: suminf.    1.09930 (4) obj. -84.6774 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 170 rows 92 columns, reduced to 66 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -81.4367 - took 0.04 seconds
Cbc0012I Integer solution of -81.43666 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 170 rows 92 columns, reduced to 59 rows 33 columns
Cbc0031I 21 added rows had average density of 32.714286
Cbc0013I At root node, 21 cuts changed objective from -113.84334 to -103.99918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7387 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 949 row cuts average 88.5 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 165 row cuts average 88.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -81.43666 best solution, best possible -103.99918 (0.69 seconds)
Cbc0001I Search completed - best objective -81.43665999999999, took 7313 iterations and 32 nodes (0.80 seconds)
Cbc0032I Strong branching done 388 times (7025 iterations), fathomed 6 nodes and fixed 35 variables
Cbc0035I Maximum depth 8, 106 variables fixed on reduced cost
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-82) rows, 134 (-69) columns and 2391 (-3263) elements
Clp1000I sum of infeasibilities 2.34666e-07 - average 1.90785e-09, 68 fixed columns
Coin0506I Presolve 57 (-66) rows, 66 (-68) columns and 241 (-2150) elements
Clp0006I 0  Obj 50.073045 Dual inf 12.415422 (61)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 1.2579645 - largest nonzero change 1.2159932e-05 ( 0.00079945292%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 51.157938
Clp0000I Optimal - objective value 51.157938
Coin0511I After Postsolve, objective 51.157938, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 51.157938 Dual inf 77.59084 (43)
Clp0014I Perturbing problem by 0.001% of 1.641391 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 126.11403
Clp0000I Optimal - objective value 126.11403
Clp0000I Optimal - objective value 126.11403
Coin0511I After Postsolve, objective 126.11403, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 126.1140288 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 134 columns (134 integer (134 of which binary)) and 2418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.289%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 4.09737
Cbc0038I Pass   1: suminf.    1.25781 (31) obj. -105.33 iterations 19
Cbc0038I Pass   2: suminf.    1.25781 (31) obj. -105.33 iterations 1
Cbc0038I Pass   3: suminf.    0.14680 (7) obj. -67.7197 iterations 17
Cbc0038I Solution found of -57.9712
Cbc0038I Rounding solution of -66.0759 is better than previous of -57.9712

Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 134 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -71.1489
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.25781 (31) obj. -105.33 iterations 0
Cbc0038I Pass   5: suminf.    1.25781 (31) obj. -105.33 iterations 1
Cbc0038I Pass   6: suminf.    0.54506 (9) obj. -71.1489 iterations 39
Cbc0038I Pass   7: suminf.    0.47677 (4) obj. -71.1489 iterations 11
Cbc0038I Pass   8: suminf.    0.93250 (3) obj. -71.1489 iterations 16
Cbc0038I Pass   9: suminf.    0.84629 (9) obj. -71.1489 iterations 7
Cbc0038I Pass  10: suminf.    0.78001 (4) obj. -71.1489 iterations 20
Cbc0038I Pass  11: suminf.    0.78001 (4) obj. -71.1489 iterations 4
Cbc0038I Pass  12: suminf.    0.84211 (4) obj. -71.1489 iterations 5
Cbc0038I Pass  13: suminf.    0.84211 (4) obj. -71.1489 iterations 0
Cbc0038I Pass  14: suminf.    0.78001 (4) obj. -71.1489 iterations 10
Cbc0038I Pass  15: suminf.    1.69595 (15) obj. -75.0874 iterations 32
Cbc0038I Pass  16: suminf.    0.60290 (9) obj. -71.1489 iterations 26
Cbc0038I Pass  17: suminf.    1.52209 (7) obj. -71.1489 iterations 17
Cbc0038I Pass  18: suminf.    0.90813 (6) obj. -71.1489 iterations 7
Cbc0038I Pass  19: suminf.    1.08846 (6) obj. -71.1489 iterations 14
Cbc0038I Pass  20: suminf.    0.42863 (3) obj. -71.1489 iterations 5
Cbc0038I Pass  21: suminf.    0.13384 (3) obj. -71.1489 iterations 13
Cbc0038I Pass  22: suminf.    0.42863 (3) obj. -71.1489 iterations 9
Cbc0038I Pass  23: suminf.    1.31912 (11) obj. -71.1489 iterations 26
Cbc0038I Pass  24: suminf.    0.84703 (10) obj. -71.1489 iterations 18
Cbc0038I Pass  25: suminf.    1.04377 (6) obj. -71.1489 iterations 19
Cbc0038I Pass  26: suminf.    1.04377 (6) obj. -71.1489 iterations 2
Cbc0038I Pass  27: suminf.    0.73882 (5) obj. -71.1489 iterations 4
Cbc0038I Pass  28: suminf.    0.73110 (5) obj. -71.1489 iterations 6
Cbc0038I Pass  29: suminf.    0.74098 (5) obj. -71.1489 iterations 13
Cbc0038I Pass  30: suminf.    1.74623 (14) obj. -71.1489 iterations 24
Cbc0038I Pass  31: suminf.    1.28654 (12) obj. -71.1489 iterations 10
Cbc0038I Pass  32: suminf.    0.88102 (10) obj. -74.0143 iterations 9
Cbc0038I Pass  33: suminf.    1.68946 (7) obj. -71.1489 iterations 24
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 134 columns, reduced to 34 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -66.0759 to -75.1379 (0.09 seconds)
Cbc0038I Round again with cutoff of -83.4714
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.25781 (31) obj. -105.33 iterations 0
Cbc0038I Pass  34: suminf.    1.25781 (31) obj. -105.33 iterations 1
Cbc0038I Pass  35: suminf.    1.28868 (17) obj. -83.4714 iterations 36
Cbc0038I Pass  36: suminf.    1.05085 (16) obj. -83.4714 iterations 8
Cbc0038I Pass  37: suminf.    0.99502 (7) obj. -83.4714 iterations 34
Cbc0038I Pass  38: suminf.    0.54928 (7) obj. -83.4714 iterations 5
Cbc0038I Pass  39: suminf.    1.73609 (10) obj. -83.4714 iterations 16
Cbc0038I Pass  40: suminf.    1.73609 (10) obj. -83.4714 iterations 5
Cbc0038I Pass  41: suminf.    2.32611 (11) obj. -83.4714 iterations 15
Cbc0038I Pass  42: suminf.    2.32611 (11) obj. -83.4714 iterations 0
Cbc0038I Pass  43: suminf.    2.25427 (11) obj. -83.4714 iterations 10
Cbc0038I Pass  44: suminf.    2.25427 (11) obj. -83.4714 iterations 9
Cbc0038I Pass  45: suminf.    2.32611 (11) obj. -83.4714 iterations 19
Cbc0038I Pass  46: suminf.    2.05848 (17) obj. -83.4714 iterations 21
Cbc0038I Pass  47: suminf.    1.69239 (15) obj. -83.4714 iterations 11
Cbc0038I Pass  48: suminf.    1.07051 (16) obj. -83.4714 iterations 10
Cbc0038I Pass  49: suminf.    1.64484 (11) obj. -83.4714 iterations 22
Cbc0038I Pass  50: suminf.    1.64484 (11) obj. -83.4714 iterations 1
Cbc0038I Pass  51: suminf.    1.59064 (9) obj. -83.4714 iterations 24
Cbc0038I Pass  52: suminf.    1.41522 (9) obj. -83.4714 iterations 11
Cbc0038I Pass  53: suminf.    2.74910 (11) obj. -83.4714 iterations 17
Cbc0038I Pass  54: suminf.    1.40523 (11) obj. -83.4714 iterations 12
Cbc0038I Pass  55: suminf.    2.65844 (18) obj. -83.4714 iterations 25
Cbc0038I Pass  56: suminf.    2.12932 (13) obj. -83.4714 iterations 14
Cbc0038I Pass  57: suminf.    1.44139 (14) obj. -83.4714 iterations 8
Cbc0038I Pass  58: suminf.    0.96111 (13) obj. -83.4714 iterations 17
Cbc0038I Pass  59: suminf.    0.96111 (13) obj. -83.4714 iterations 1
Cbc0038I Pass  60: suminf.    1.89846 (11) obj. -83.4714 iterations 17
Cbc0038I Pass  61: suminf.    1.41988 (11) obj. -83.4714 iterations 3
Cbc0038I Pass  62: suminf.    1.89846 (11) obj. -83.4714 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 134 columns, reduced to 55 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -75.1379 to -78.8172 (0.14 seconds)
Cbc0038I Round again with cutoff of -93.4714
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.25781 (31) obj. -105.33 iterations 0
Cbc0038I Pass  63: suminf.    1.25781 (31) obj. -105.33 iterations 1
Cbc0038I Pass  64: suminf.    1.23559 (19) obj. -93.4714 iterations 37
Cbc0038I Pass  65: suminf.    1.11592 (18) obj. -93.4714 iterations 6
Cbc0038I Pass  66: suminf.    1.80048 (16) obj. -93.4714 iterations 34
Cbc0038I Pass  67: suminf.    1.80048 (16) obj. -93.4714 iterations 5
Cbc0038I Pass  68: suminf.    2.64511 (17) obj. -93.4714 iterations 19
Cbc0038I Pass  69: suminf.    2.64511 (17) obj. -93.4714 iterations 1
Cbc0038I Pass  70: suminf.    2.61910 (17) obj. -93.4714 iterations 14
Cbc0038I Pass  71: suminf.    2.61910 (17) obj. -93.4714 iterations 8
Cbc0038I Pass  72: suminf.    2.64511 (17) obj. -93.4714 iterations 9
Cbc0038I Pass  73: suminf.    1.66049 (18) obj. -93.4714 iterations 27
Cbc0038I Pass  74: suminf.    1.53715 (19) obj. -93.4714 iterations 7
Cbc0038I Pass  75: suminf.    3.21773 (21) obj. -93.4714 iterations 20
Cbc0038I Pass  76: suminf.    2.08029 (18) obj. -93.4714 iterations 9
Cbc0038I Pass  77: suminf.    2.07459 (19) obj. -93.4714 iterations 7
Cbc0038I Pass  78: suminf.    3.51682 (18) obj. -93.4714 iterations 22
Cbc0038I Pass  79: suminf.    1.74507 (17) obj. -93.4714 iterations 13
Cbc0038I Pass  80: suminf.    1.70857 (17) obj. -93.4714 iterations 8
Cbc0038I Pass  81: suminf.    2.64511 (17) obj. -93.4714 iterations 20
Cbc0038I Pass  82: suminf.    2.64511 (17) obj. -93.4714 iterations 1
Cbc0038I Pass  83: suminf.    2.61910 (17) obj. -93.4714 iterations 14
Cbc0038I Pass  84: suminf.    2.61910 (17) obj. -93.4714 iterations 8
Cbc0038I Pass  85: suminf.    2.64511 (17) obj. -93.4714 iterations 9
Cbc0038I Pass  86: suminf.    2.56012 (19) obj. -93.4714 iterations 32
Cbc0038I Pass  87: suminf.    1.84843 (19) obj. -93.4714 iterations 12
Cbc0038I Pass  88: suminf.    1.81577 (19) obj. -93.4714 iterations 8
Cbc0038I Pass  89: suminf.    3.30216 (19) obj. -93.4714 iterations 26
Cbc0038I Pass  90: suminf.    1.70983 (18) obj. -93.4714 iterations 15
Cbc0038I Pass  91: suminf.    1.67772 (18) obj. -93.4714 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 134 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -78.8172 - took 0.12 seconds
Cbc0012I Integer solution of -78.81719 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 121 rows 134 columns, reduced to 44 rows 47 columns
Cbc0031I 59 added rows had average density of 24.59322
Cbc0013I At root node, 59 cuts changed objective from -116.80476 to -94.905854 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 1998 row cuts average 8.3 elements, 6 column cuts (6 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 199 row cuts average 99.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 101 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 92 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 140 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 275 row cuts average 95.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 37 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -78.81719 best solution, best possible -94.905854 (0.58 seconds)
Cbc0012I Integer solution of -80.4242 found by rounding after 703 iterations and 1 nodes (0.59 seconds)
Cbc0010I After 10 nodes, 7 on tree, -80.4242 best solution, best possible -91.235538 (1.29 seconds)
Cbc0004I Integer solution of -80.80864 found after 1535 iterations and 11 nodes (1.31 seconds)
Cbc0004I Integer solution of -81.43666 found after 1867 iterations and 21 nodes (1.57 seconds)
Cbc0001I Search completed - best objective -81.43665999999999, took 2912 iterations and 44 nodes (1.95 seconds)
Cbc0032I Strong branching done 644 times (14150 iterations), fathomed 3 nodes and fixed 7 variables
Cbc0035I Maximum depth 15, 119 variables fixed on reduced cost
Total time (CPU seconds):       1.42   (Wallclock seconds):       1.96

