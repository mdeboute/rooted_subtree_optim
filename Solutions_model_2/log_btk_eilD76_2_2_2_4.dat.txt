Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 2.09655e-05 - average 1.61273e-07, 12 fixed columns
Coin0506I Presolve 104 (-26) rows, 62 (-14) columns and 324 (-80) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Coin0511I After Postsolve, objective 54.4211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Coin0511I After Postsolve, objective 54.4211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.42110002 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.2387
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.71928 iterations 46
Cbc0038I Solution found of 3.71928
Cbc0038I Relaxing continuous gives 3.71928
Cbc0038I Rounding solution of -3.27189 is better than previous of 3.71928

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 70 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -3.27189 to -23.2463 (0.04 seconds)
Cbc0038I Round again with cutoff of -26.3638
Cbc0038I Pass   2: suminf.    3.63440 (11) obj. -26.3638 iterations 23
Cbc0038I Pass   3: suminf.    3.44397 (10) obj. -26.3638 iterations 1
Cbc0038I Pass   4: suminf.    2.31269 (7) obj. -26.3638 iterations 11
Cbc0038I Pass   5: suminf.    1.31715 (5) obj. -26.3638 iterations 5
Cbc0038I Pass   6: suminf.    1.08970 (5) obj. -26.3638 iterations 2
Cbc0038I Pass   7: suminf.    2.14242 (6) obj. -26.3638 iterations 10
Cbc0038I Pass   8: suminf.    0.94697 (4) obj. -26.3638 iterations 18
Cbc0038I Pass   9: suminf.    0.90238 (4) obj. -26.3638 iterations 3
Cbc0038I Pass  10: suminf.    0.96856 (4) obj. -26.3638 iterations 6
Cbc0038I Pass  11: suminf.    0.94490 (3) obj. -26.3638 iterations 1
Cbc0038I Pass  12: suminf.    0.78200 (4) obj. -26.3638 iterations 6
Cbc0038I Pass  13: suminf.    0.74887 (3) obj. -26.3638 iterations 1
Cbc0038I Pass  14: suminf.    1.70938 (6) obj. -26.3638 iterations 21
Cbc0038I Pass  15: suminf.    0.92388 (6) obj. -26.3638 iterations 5
Cbc0038I Pass  16: suminf.    2.17030 (8) obj. -26.3638 iterations 19
Cbc0038I Pass  17: suminf.    2.10590 (7) obj. -26.3638 iterations 2
Cbc0038I Pass  18: suminf.    1.42216 (5) obj. -26.3638 iterations 10
Cbc0038I Pass  19: suminf.    1.27056 (4) obj. -26.3638 iterations 1
Cbc0038I Pass  20: suminf.    1.01033 (4) obj. -26.3638 iterations 4
Cbc0038I Pass  21: suminf.    1.69227 (6) obj. -26.3638 iterations 6
Cbc0038I Pass  22: suminf.    5.24194 (19) obj. -26.3638 iterations 32
Cbc0038I Pass  23: suminf.    2.79060 (11) obj. -26.3638 iterations 14
Cbc0038I Pass  24: suminf.    2.64125 (11) obj. -26.3638 iterations 4
Cbc0038I Pass  25: suminf.    2.20804 (7) obj. -26.3638 iterations 16
Cbc0038I Pass  26: suminf.    1.63943 (7) obj. -26.3638 iterations 3
Cbc0038I Pass  27: suminf.    1.63943 (7) obj. -26.3638 iterations 0
Cbc0038I Pass  28: suminf.    1.26514 (6) obj. -26.3638 iterations 10
Cbc0038I Pass  29: suminf.    1.17542 (6) obj. -26.3638 iterations 4
Cbc0038I Pass  30: suminf.    1.50424 (7) obj. -26.3638 iterations 7
Cbc0038I Pass  31: suminf.    0.93744 (5) obj. -26.3638 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 82 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -23.2463 to -23.5292 (0.08 seconds)
Cbc0038I Round again with cutoff of -31.9753
Cbc0038I Pass  31: suminf.    4.48760 (12) obj. -31.9753 iterations 1
Cbc0038I Pass  32: suminf.    4.12912 (10) obj. -31.9753 iterations 10
Cbc0038I Pass  33: suminf.    1.24607 (6) obj. -31.9753 iterations 20
Cbc0038I Pass  34: suminf.    1.04482 (5) obj. -31.9753 iterations 4
Cbc0038I Pass  35: suminf.    2.93504 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  36: suminf.    1.04482 (5) obj. -31.9753 iterations 8
Cbc0038I Pass  37: suminf.    2.24348 (10) obj. -31.9753 iterations 20
Cbc0038I Pass  38: suminf.    1.79345 (9) obj. -31.9753 iterations 6
Cbc0038I Pass  39: suminf.    3.87068 (11) obj. -31.9753 iterations 13
Cbc0038I Pass  40: suminf.    3.73669 (9) obj. -31.9753 iterations 2
Cbc0038I Pass  41: suminf.    2.14885 (10) obj. -31.9753 iterations 3
Cbc0038I Pass  42: suminf.    1.65494 (6) obj. -31.9753 iterations 5
Cbc0038I Pass  43: suminf.    1.65416 (8) obj. -31.9753 iterations 2
Cbc0038I Pass  44: suminf.    1.33816 (7) obj. -31.9753 iterations 11
Cbc0038I Pass  45: suminf.    1.33816 (7) obj. -31.9753 iterations 0
Cbc0038I Pass  46: suminf.    3.23831 (8) obj. -31.9753 iterations 11
Cbc0038I Pass  47: suminf.    1.12349 (7) obj. -31.9753 iterations 7
Cbc0038I Pass  48: suminf.    1.12048 (7) obj. -31.9753 iterations 1
Cbc0038I Pass  49: suminf.    2.02051 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  50: suminf.    1.88333 (8) obj. -31.9753 iterations 1
Cbc0038I Pass  51: suminf.    2.25834 (7) obj. -31.9753 iterations 8
Cbc0038I Pass  52: suminf.    1.93810 (7) obj. -31.9753 iterations 3
Cbc0038I Pass  53: suminf.    3.23831 (8) obj. -31.9753 iterations 7
Cbc0038I Pass  54: suminf.    1.12349 (7) obj. -31.9753 iterations 7
Cbc0038I Pass  55: suminf.    1.12048 (7) obj. -31.9753 iterations 1
Cbc0038I Pass  56: suminf.    2.02051 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  57: suminf.    1.88333 (8) obj. -31.9753 iterations 1
Cbc0038I Pass  58: suminf.    2.25834 (7) obj. -31.9753 iterations 8
Cbc0038I Pass  59: suminf.    1.93810 (7) obj. -31.9753 iterations 3
Cbc0038I Pass  60: suminf.    3.23831 (8) obj. -31.9753 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -23.5292 to -29.7004 (0.14 seconds)
Cbc0038I Round again with cutoff of -38.709
Cbc0038I Pass  60: suminf.    4.51684 (12) obj. -38.709 iterations 1
Cbc0038I Pass  61: suminf.    4.12333 (11) obj. -38.709 iterations 2
Cbc0038I Pass  62: suminf.    2.19789 (8) obj. -38.709 iterations 17
Cbc0038I Pass  63: suminf.    2.17316 (9) obj. -38.709 iterations 2
Cbc0038I Pass  64: suminf.    3.39070 (11) obj. -38.709 iterations 18
Cbc0038I Pass  65: suminf.    2.18078 (9) obj. -38.709 iterations 6
Cbc0038I Pass  66: suminf.    2.18078 (9) obj. -38.709 iterations 1
Cbc0038I Pass  67: suminf.    3.50679 (10) obj. -38.709 iterations 11
Cbc0038I Pass  68: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  69: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  70: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  71: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  72: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  73: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  74: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  75: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  76: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  77: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  78: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  79: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  80: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  81: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  82: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  83: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  84: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  85: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  86: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  87: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  88: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  89: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -29.7004 - took 0.15 seconds
Cbc0012I Integer solution of -29.70036 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 70 rows 43 columns
Cbc0012I Integer solution of -29.85109 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 29 added rows had average density of 50.965517
Cbc0013I At root node, 29 cuts changed objective from -54.4211 to -45.742708 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14101 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2646 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.85109 best solution, best possible -45.742708 (1.09 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 64 rows 41 columns
Cbc0038I Full problem 130 rows 76 columns, reduced to 3 rows 9 columns
Cbc0016I Integer solution of -29.865201 found by strong branching after 11666 iterations and 93 nodes (1.50 seconds)
Cbc0001I Search completed - best objective -29.865201, took 11879 iterations and 106 nodes (1.53 seconds)
Cbc0032I Strong branching done 1080 times (17901 iterations), fathomed 17 nodes and fixed 30 variables
Cbc0035I Maximum depth 27, 290 variables fixed on reduced cost
Total time (CPU seconds):       1.49   (Wallclock seconds):       1.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-59) rows, 115 (-37) columns and 1806 (-1497) elements
Clp1000I sum of infeasibilities 1.4467e-07 - average 1.52284e-09, 32 fixed columns
Coin0506I Presolve 63 (-32) rows, 80 (-35) columns and 916 (-890) elements
Clp0006I 0  Obj 53.28801 Dual inf 4.0757058 (79)
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 2.096644 - largest nonzero change 2.675493e-05 ( 0.0018056464%) - largest zero change 2.845345e-05
Clp0000I Optimal - objective value 71.141578
Clp0000I Optimal - objective value 71.141578
Coin0511I After Postsolve, objective 71.141578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 71.141578
Clp0000I Optimal - objective value 71.141578
Clp0000I Optimal - objective value 71.141578
Clp0000I Optimal - objective value 71.141578
Coin0511I After Postsolve, objective 71.141578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.14157756 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 115 columns (115 integer (115 of which binary)) and 1808 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.76932
Cbc0038I Pass   1: suminf.    2.98085 (31) obj. -49.311 iterations 10
Cbc0038I Pass   2: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass   3: suminf.    0.51714 (9) obj. -22.6805 iterations 22
Cbc0038I Solution found of -11.3697
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -11.3697 to -13.8166 (0.03 seconds)
Cbc0038I Round again with cutoff of -18.0114
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass   5: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass   6: suminf.    0.63704 (6) obj. -18.0114 iterations 32
Cbc0038I Pass   7: suminf.    0.47899 (3) obj. -18.0114 iterations 9
Cbc0038I Pass   8: suminf.    0.39384 (4) obj. -18.0114 iterations 2
Cbc0038I Pass   9: suminf.    1.23415 (7) obj. -18.0114 iterations 7
Cbc0038I Pass  10: suminf.    0.66704 (7) obj. -18.0114 iterations 2
Cbc0038I Pass  11: suminf.    0.37617 (3) obj. -18.0114 iterations 10
Cbc0038I Pass  12: suminf.    0.18894 (2) obj. -18.3679 iterations 2
Cbc0038I Pass  13: suminf.    0.39137 (3) obj. -18.0114 iterations 3
Cbc0038I Pass  14: suminf.    2.80185 (14) obj. -28.1847 iterations 23
Cbc0038I Pass  15: suminf.    1.29658 (11) obj. -18.701 iterations 5
Cbc0038I Pass  16: suminf.    1.90306 (7) obj. -18.0114 iterations 18
Cbc0038I Pass  17: suminf.    1.90306 (7) obj. -18.0114 iterations 0
Cbc0038I Pass  18: suminf.    1.49916 (5) obj. -18.0114 iterations 5
Cbc0038I Pass  19: suminf.    0.87121 (6) obj. -18.0114 iterations 5
Cbc0038I Pass  20: suminf.    0.81991 (5) obj. -18.0114 iterations 7
Cbc0038I Pass  21: suminf.    0.95724 (6) obj. -18.0114 iterations 4
Cbc0038I Pass  22: suminf.    0.90374 (5) obj. -18.0114 iterations 8
Cbc0038I Pass  23: suminf.    0.87121 (6) obj. -18.0114 iterations 5
Cbc0038I Pass  24: suminf.    1.72631 (13) obj. -18.0114 iterations 27
Cbc0038I Pass  25: suminf.    1.66198 (12) obj. -18.0114 iterations 7
Cbc0038I Pass  26: suminf.    1.35193 (5) obj. -18.0114 iterations 24
Cbc0038I Pass  27: suminf.    1.25411 (5) obj. -18.0114 iterations 5
Cbc0038I Pass  28: suminf.    0.58939 (6) obj. -18.0114 iterations 16
Cbc0038I Pass  29: suminf.    0.46150 (6) obj. -18.0114 iterations 1
Cbc0038I Pass  30: suminf.    0.43708 (5) obj. -18.0114 iterations 5
Cbc0038I Pass  31: suminf.    0.40945 (5) obj. -18.0114 iterations 5
Cbc0038I Pass  32: suminf.    0.44681 (5) obj. -18.0114 iterations 6
Cbc0038I Pass  33: suminf.    2.63548 (18) obj. -18.0114 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 23 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -13.8166 to -19.1188 (0.07 seconds)
Cbc0038I Round again with cutoff of -26.4478
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass  34: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass  35: suminf.    1.58756 (20) obj. -37.1022 iterations 11
Cbc0038I Pass  36: suminf.    1.57313 (10) obj. -26.4478 iterations 28
Cbc0038I Pass  37: suminf.    1.19229 (10) obj. -26.4478 iterations 2
Cbc0038I Pass  38: suminf.    1.34375 (8) obj. -26.4478 iterations 15
Cbc0038I Pass  39: suminf.    0.97849 (8) obj. -26.4478 iterations 5
Cbc0038I Pass  40: suminf.    3.11253 (18) obj. -26.4478 iterations 17
Cbc0038I Pass  41: suminf.    2.02340 (13) obj. -26.4478 iterations 5
Cbc0038I Pass  42: suminf.    1.99436 (13) obj. -26.4478 iterations 2
Cbc0038I Pass  43: suminf.    1.31963 (10) obj. -26.4478 iterations 8
Cbc0038I Pass  44: suminf.    1.29801 (10) obj. -26.4478 iterations 4
Cbc0038I Pass  45: suminf.    1.59159 (10) obj. -26.4478 iterations 10
Cbc0038I Pass  46: suminf.    1.52725 (9) obj. -26.4478 iterations 7
Cbc0038I Pass  47: suminf.    1.54253 (10) obj. -26.4478 iterations 7
Cbc0038I Pass  48: suminf.    1.55328 (9) obj. -26.4478 iterations 4
Cbc0038I Pass  49: suminf.    1.52420 (10) obj. -26.4478 iterations 7
Cbc0038I Pass  50: suminf.    2.25867 (13) obj. -26.4478 iterations 9
Cbc0038I Pass  51: suminf.    1.89722 (12) obj. -27.446 iterations 2
Cbc0038I Pass  52: suminf.    1.75592 (10) obj. -26.4478 iterations 11
Cbc0038I Pass  53: suminf.    1.66886 (10) obj. -26.4478 iterations 3
Cbc0038I Pass  54: suminf.    2.08426 (10) obj. -26.4478 iterations 11
Cbc0038I Pass  55: suminf.    2.08426 (10) obj. -26.4478 iterations 3
Cbc0038I Pass  56: suminf.    2.08115 (10) obj. -26.4478 iterations 5
Cbc0038I Pass  57: suminf.    2.08115 (10) obj. -26.4478 iterations 4
Cbc0038I Pass  58: suminf.    2.56336 (16) obj. -26.4478 iterations 22
Cbc0038I Pass  59: suminf.    2.18783 (15) obj. -26.4478 iterations 8
Cbc0038I Pass  60: suminf.    2.36065 (12) obj. -26.4478 iterations 12
Cbc0038I Pass  61: suminf.    1.68740 (12) obj. -26.4478 iterations 9
Cbc0038I Pass  62: suminf.    1.61808 (12) obj. -26.4478 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 29 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -19.1188 to -28.8791 (0.10 seconds)
Cbc0038I Round again with cutoff of -36.9445
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass  63: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass  64: suminf.    2.41827 (17) obj. -36.9445 iterations 29
Cbc0038I Pass  65: suminf.    1.90647 (18) obj. -36.9445 iterations 3
Cbc0038I Pass  66: suminf.    2.36139 (16) obj. -36.9445 iterations 15
Cbc0038I Pass  67: suminf.    2.36139 (16) obj. -36.9445 iterations 3
Cbc0038I Pass  68: suminf.    2.26255 (16) obj. -36.9445 iterations 4
Cbc0038I Pass  69: suminf.    2.26255 (16) obj. -36.9445 iterations 2
Cbc0038I Pass  70: suminf.    2.36139 (16) obj. -36.9445 iterations 4
Cbc0038I Pass  71: suminf.    2.79634 (20) obj. -36.9445 iterations 22
Cbc0038I Pass  72: suminf.    2.77277 (20) obj. -36.9445 iterations 2
Cbc0038I Pass  73: suminf.    2.72619 (16) obj. -36.9445 iterations 26
Cbc0038I Pass  74: suminf.    2.26556 (17) obj. -36.9445 iterations 4
Cbc0038I Pass  75: suminf.    2.96499 (16) obj. -36.9445 iterations 7
Cbc0038I Pass  76: suminf.    2.45371 (16) obj. -36.9445 iterations 6
Cbc0038I Pass  77: suminf.    2.58984 (16) obj. -36.9445 iterations 6
Cbc0038I Pass  78: suminf.    2.27243 (16) obj. -36.9445 iterations 3
Cbc0038I Pass  79: suminf.    2.21957 (16) obj. -36.9445 iterations 9
Cbc0038I Pass  80: suminf.    2.09595 (16) obj. -36.9445 iterations 4
Cbc0038I Pass  81: suminf.    2.36139 (16) obj. -36.9445 iterations 6
Cbc0038I Pass  82: suminf.    2.36139 (16) obj. -36.9445 iterations 3
Cbc0038I Pass  83: suminf.    2.26255 (16) obj. -36.9445 iterations 5
Cbc0038I Pass  84: suminf.    2.26255 (16) obj. -36.9445 iterations 3
Cbc0038I Pass  85: suminf.    4.24140 (25) obj. -36.9445 iterations 17
Cbc0038I Pass  86: suminf.    2.63092 (20) obj. -36.9445 iterations 7
Cbc0038I Pass  87: suminf.    2.18096 (19) obj. -36.9445 iterations 3
Cbc0038I Pass  88: suminf.    2.42318 (18) obj. -36.9445 iterations 15
Cbc0038I Pass  89: suminf.    2.23909 (18) obj. -36.9445 iterations 6
Cbc0038I Pass  90: suminf.    2.45307 (16) obj. -36.9445 iterations 10
Cbc0038I Pass  91: suminf.    2.42968 (16) obj. -36.9445 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 8 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -28.8791 - took 0.09 seconds
Cbc0012I Integer solution of -28.879101 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 9 rows 9 columns
Cbc0031I 52 added rows had average density of 23.903846
Cbc0013I At root node, 52 cuts changed objective from -55.763527 to -31.711924 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1404 row cuts average 6.6 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 71 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 205 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 227 row cuts average 58.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 27.1 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.879101 best solution, best possible -31.711924 (0.33 seconds)
Cbc0012I Integer solution of -28.986171 found by rounding after 828 iterations and 10 nodes (0.89 seconds)
Cbc0010I After 16 nodes, 12 on tree, -28.986171 best solution, best possible -31.711924 (1.05 seconds)
Cbc0012I Integer solution of -29.02628 found by DiveCoefficient after 1106 iterations and 20 nodes (1.17 seconds)
Cbc0016I Integer solution of -29.865201 found by strong branching after 1174 iterations and 23 nodes (1.26 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 3 rows 7 columns
Cbc0038I Full problem 147 rows 115 columns, reduced to 68 rows 85 columns
Cbc0044I Reduced cost fixing - 68 rows, 85 columns - restarting search
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.77939
Cbc0038I Pass   1: suminf.    3.26602 (19) obj. -49.9523 iterations 7
Cbc0038I Pass   2: suminf.    0.32117 (3) obj. -31.1697 iterations 16
Cbc0038I Pass   3: suminf.    0.20151 (1) obj. -29.8652 iterations 4
Cbc0038I Pass   4: suminf.    0.63636 (2) obj. -30.5907 iterations 2
Cbc0038I Pass   5: suminf.    1.28470 (7) obj. -29.8652 iterations 22
Cbc0038I Pass   6: suminf.    1.28470 (7) obj. -29.8652 iterations 2
Cbc0038I Pass   7: suminf.    0.89014 (7) obj. -29.8652 iterations 10
Cbc0038I Pass   8: suminf.    0.89014 (7) obj. -29.8652 iterations 0
Cbc0038I Pass   9: suminf.    1.13465 (7) obj. -29.8652 iterations 1
Cbc0038I Pass  10: suminf.    1.10178 (10) obj. -29.8652 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 85 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (1.77 seconds)
Cbc0038I Full problem 69 rows 85 columns, reduced to 69 rows 85 columns
Cbc0038I After 1.87 seconds - Feasibility pump exiting with objective of -29.7004 - took 0.11 seconds
Cbc0031I 37 added rows had average density of 10.621622
Cbc0013I At root node, 37 cuts changed objective from -52.04151 to -30.568897 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 430 row cuts average 3.6 elements, 10 column cuts (10 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 76 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 56 row cuts average 12.1 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -30.532027 (2.11 seconds)
Cbc0001I Search completed - best objective 1e+50, took 1567 iterations and 84 nodes (2.77 seconds)
Cbc0032I Strong branching done 522 times (3360 iterations), fathomed 11 nodes and fixed 44 variables
Cbc0035I Maximum depth 7, 174 variables fixed on reduced cost
Cbc0038I Probing was tried 86 times and created 526 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Cbc0038I Gomory was tried 86 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Cbc0038I Knapsack was tried 86 times and created 214 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Cbc0038I Clique was tried 86 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I OddWheel was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I MixedIntegerRounding2 was tried 86 times and created 69 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 86 times and created 144 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Cbc0038I ZeroHalf was tried 86 times and created 116 cuts of which 0 were active after adding rounds of cuts (0.302 seconds)
Cbc0038I Stored from first was tried 86 times and created 97 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -29.865201, took 3107 iterations and 134 nodes (2.77 seconds)
Cbc0032I Strong branching done 600 times (8351 iterations), fathomed 7 nodes and fixed 15 variables
Cbc0035I Maximum depth 17, 125 variables fixed on reduced cost
Total time (CPU seconds):       1.78   (Wallclock seconds):       2.78

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 76 (-2) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 2.09655e-05 - average 1.61273e-07, 12 fixed columns
Coin0506I Presolve 104 (-26) rows, 62 (-14) columns and 324 (-80) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Coin0511I After Postsolve, objective 54.4211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Clp0000I Optimal - objective value 54.4211
Coin0511I After Postsolve, objective 54.4211, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.42110002 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 130 rows, 76 columns (75 integer (75 of which binary)) and 404 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.101%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.2387
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.71928 iterations 46
Cbc0038I Solution found of 3.71928
Cbc0038I Relaxing continuous gives 3.71928
Cbc0038I Rounding solution of -3.27189 is better than previous of 3.71928

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 70 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -3.27189 to -23.2463 (0.04 seconds)
Cbc0038I Round again with cutoff of -26.3638
Cbc0038I Pass   2: suminf.    3.63440 (11) obj. -26.3638 iterations 23
Cbc0038I Pass   3: suminf.    3.44397 (10) obj. -26.3638 iterations 1
Cbc0038I Pass   4: suminf.    2.31269 (7) obj. -26.3638 iterations 11
Cbc0038I Pass   5: suminf.    1.31715 (5) obj. -26.3638 iterations 5
Cbc0038I Pass   6: suminf.    1.08970 (5) obj. -26.3638 iterations 2
Cbc0038I Pass   7: suminf.    2.14242 (6) obj. -26.3638 iterations 10
Cbc0038I Pass   8: suminf.    0.94697 (4) obj. -26.3638 iterations 18
Cbc0038I Pass   9: suminf.    0.90238 (4) obj. -26.3638 iterations 3
Cbc0038I Pass  10: suminf.    0.96856 (4) obj. -26.3638 iterations 6
Cbc0038I Pass  11: suminf.    0.94490 (3) obj. -26.3638 iterations 1
Cbc0038I Pass  12: suminf.    0.78200 (4) obj. -26.3638 iterations 6
Cbc0038I Pass  13: suminf.    0.74887 (3) obj. -26.3638 iterations 1
Cbc0038I Pass  14: suminf.    1.70938 (6) obj. -26.3638 iterations 21
Cbc0038I Pass  15: suminf.    0.92388 (6) obj. -26.3638 iterations 5
Cbc0038I Pass  16: suminf.    2.17030 (8) obj. -26.3638 iterations 19
Cbc0038I Pass  17: suminf.    2.10590 (7) obj. -26.3638 iterations 2
Cbc0038I Pass  18: suminf.    1.42216 (5) obj. -26.3638 iterations 10
Cbc0038I Pass  19: suminf.    1.27056 (4) obj. -26.3638 iterations 1
Cbc0038I Pass  20: suminf.    1.01033 (4) obj. -26.3638 iterations 4
Cbc0038I Pass  21: suminf.    1.69227 (6) obj. -26.3638 iterations 6
Cbc0038I Pass  22: suminf.    5.24194 (19) obj. -26.3638 iterations 32
Cbc0038I Pass  23: suminf.    2.79060 (11) obj. -26.3638 iterations 14
Cbc0038I Pass  24: suminf.    2.64125 (11) obj. -26.3638 iterations 4
Cbc0038I Pass  25: suminf.    2.20804 (7) obj. -26.3638 iterations 16
Cbc0038I Pass  26: suminf.    1.63943 (7) obj. -26.3638 iterations 3
Cbc0038I Pass  27: suminf.    1.63943 (7) obj. -26.3638 iterations 0
Cbc0038I Pass  28: suminf.    1.26514 (6) obj. -26.3638 iterations 10
Cbc0038I Pass  29: suminf.    1.17542 (6) obj. -26.3638 iterations 4
Cbc0038I Pass  30: suminf.    1.50424 (7) obj. -26.3638 iterations 7
Cbc0038I Pass  31: suminf.    0.93744 (5) obj. -26.3638 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 82 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -23.2463 to -23.5292 (0.08 seconds)
Cbc0038I Round again with cutoff of -31.9753
Cbc0038I Pass  31: suminf.    4.48760 (12) obj. -31.9753 iterations 1
Cbc0038I Pass  32: suminf.    4.12912 (10) obj. -31.9753 iterations 10
Cbc0038I Pass  33: suminf.    1.24607 (6) obj. -31.9753 iterations 20
Cbc0038I Pass  34: suminf.    1.04482 (5) obj. -31.9753 iterations 4
Cbc0038I Pass  35: suminf.    2.93504 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  36: suminf.    1.04482 (5) obj. -31.9753 iterations 8
Cbc0038I Pass  37: suminf.    2.24348 (10) obj. -31.9753 iterations 20
Cbc0038I Pass  38: suminf.    1.79345 (9) obj. -31.9753 iterations 6
Cbc0038I Pass  39: suminf.    3.87068 (11) obj. -31.9753 iterations 13
Cbc0038I Pass  40: suminf.    3.73669 (9) obj. -31.9753 iterations 2
Cbc0038I Pass  41: suminf.    2.14885 (10) obj. -31.9753 iterations 3
Cbc0038I Pass  42: suminf.    1.65494 (6) obj. -31.9753 iterations 5
Cbc0038I Pass  43: suminf.    1.65416 (8) obj. -31.9753 iterations 2
Cbc0038I Pass  44: suminf.    1.33816 (7) obj. -31.9753 iterations 11
Cbc0038I Pass  45: suminf.    1.33816 (7) obj. -31.9753 iterations 0
Cbc0038I Pass  46: suminf.    3.23831 (8) obj. -31.9753 iterations 11
Cbc0038I Pass  47: suminf.    1.12349 (7) obj. -31.9753 iterations 7
Cbc0038I Pass  48: suminf.    1.12048 (7) obj. -31.9753 iterations 1
Cbc0038I Pass  49: suminf.    2.02051 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  50: suminf.    1.88333 (8) obj. -31.9753 iterations 1
Cbc0038I Pass  51: suminf.    2.25834 (7) obj. -31.9753 iterations 8
Cbc0038I Pass  52: suminf.    1.93810 (7) obj. -31.9753 iterations 3
Cbc0038I Pass  53: suminf.    3.23831 (8) obj. -31.9753 iterations 7
Cbc0038I Pass  54: suminf.    1.12349 (7) obj. -31.9753 iterations 7
Cbc0038I Pass  55: suminf.    1.12048 (7) obj. -31.9753 iterations 1
Cbc0038I Pass  56: suminf.    2.02051 (8) obj. -31.9753 iterations 10
Cbc0038I Pass  57: suminf.    1.88333 (8) obj. -31.9753 iterations 1
Cbc0038I Pass  58: suminf.    2.25834 (7) obj. -31.9753 iterations 8
Cbc0038I Pass  59: suminf.    1.93810 (7) obj. -31.9753 iterations 3
Cbc0038I Pass  60: suminf.    3.23831 (8) obj. -31.9753 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -23.5292 to -29.7004 (0.14 seconds)
Cbc0038I Round again with cutoff of -38.709
Cbc0038I Pass  60: suminf.    4.51684 (12) obj. -38.709 iterations 1
Cbc0038I Pass  61: suminf.    4.12333 (11) obj. -38.709 iterations 2
Cbc0038I Pass  62: suminf.    2.19789 (8) obj. -38.709 iterations 17
Cbc0038I Pass  63: suminf.    2.17316 (9) obj. -38.709 iterations 2
Cbc0038I Pass  64: suminf.    3.39070 (11) obj. -38.709 iterations 18
Cbc0038I Pass  65: suminf.    2.18078 (9) obj. -38.709 iterations 6
Cbc0038I Pass  66: suminf.    2.18078 (9) obj. -38.709 iterations 1
Cbc0038I Pass  67: suminf.    3.50679 (10) obj. -38.709 iterations 11
Cbc0038I Pass  68: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  69: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  70: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  71: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  72: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  73: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  74: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  75: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  76: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  77: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  78: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  79: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  80: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  81: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  82: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  83: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I Pass  84: suminf.    2.18078 (9) obj. -38.709 iterations 2
Cbc0038I Pass  85: suminf.    3.50679 (10) obj. -38.709 iterations 10
Cbc0038I Pass  86: suminf.    1.84693 (9) obj. -38.709 iterations 15
Cbc0038I Pass  87: suminf.    1.84693 (9) obj. -38.709 iterations 0
Cbc0038I Pass  88: suminf.    3.49161 (10) obj. -38.709 iterations 18
Cbc0038I Pass  89: suminf.    2.18012 (10) obj. -38.709 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 76 columns, reduced to 71 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -29.7004 - took 0.16 seconds
Cbc0012I Integer solution of -29.70036 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 70 rows 43 columns
Cbc0012I Integer solution of -29.85109 found by RINS after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 29 added rows had average density of 50.965517
Cbc0013I At root node, 29 cuts changed objective from -54.4211 to -45.742708 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14101 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2646 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.85109 best solution, best possible -45.742708 (1.15 seconds)
Cbc0038I Full problem 130 rows 76 columns, reduced to 64 rows 41 columns
Cbc0038I Full problem 130 rows 76 columns, reduced to 3 rows 9 columns
Cbc0016I Integer solution of -29.865201 found by strong branching after 11666 iterations and 93 nodes (1.62 seconds)
Cbc0001I Search completed - best objective -29.865201, took 11879 iterations and 106 nodes (1.65 seconds)
Cbc0032I Strong branching done 1080 times (17901 iterations), fathomed 17 nodes and fixed 30 variables
Cbc0035I Maximum depth 27, 290 variables fixed on reduced cost
Total time (CPU seconds):       1.58   (Wallclock seconds):       1.67

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 95 (-60) rows, 115 (-38) columns and 1806 (-1498) elements
Clp1000I sum of infeasibilities 1.4467e-07 - average 1.52284e-09, 32 fixed columns
Coin0506I Presolve 63 (-32) rows, 80 (-35) columns and 916 (-890) elements
Clp0006I 0  Obj 53.28801 Dual inf 4.0757058 (79)
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 2.096644 - largest nonzero change 2.675493e-05 ( 0.0018056464%) - largest zero change 2.845345e-05
Clp0000I Optimal - objective value 71.141578
Clp0000I Optimal - objective value 71.141578
Coin0511I After Postsolve, objective 71.141578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 71.141578
Clp0000I Optimal - objective value 71.141578
Clp0000I Optimal - objective value 71.141578
Clp0000I Optimal - objective value 71.141578
Coin0511I After Postsolve, objective 71.141578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.14157756 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 115 columns (115 integer (115 of which binary)) and 1808 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.324%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.76932
Cbc0038I Pass   1: suminf.    2.98085 (31) obj. -49.311 iterations 10
Cbc0038I Pass   2: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass   3: suminf.    0.51714 (9) obj. -22.6805 iterations 22
Cbc0038I Solution found of -11.3697
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -11.3697 to -13.8166 (0.03 seconds)
Cbc0038I Round again with cutoff of -18.0114
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass   5: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass   6: suminf.    0.63704 (6) obj. -18.0114 iterations 32
Cbc0038I Pass   7: suminf.    0.47899 (3) obj. -18.0114 iterations 9
Cbc0038I Pass   8: suminf.    0.39384 (4) obj. -18.0114 iterations 2
Cbc0038I Pass   9: suminf.    1.23415 (7) obj. -18.0114 iterations 7
Cbc0038I Pass  10: suminf.    0.66704 (7) obj. -18.0114 iterations 2
Cbc0038I Pass  11: suminf.    0.37617 (3) obj. -18.0114 iterations 10
Cbc0038I Pass  12: suminf.    0.18894 (2) obj. -18.3679 iterations 2
Cbc0038I Pass  13: suminf.    0.39137 (3) obj. -18.0114 iterations 3
Cbc0038I Pass  14: suminf.    2.80185 (14) obj. -28.1847 iterations 23
Cbc0038I Pass  15: suminf.    1.29658 (11) obj. -18.701 iterations 5
Cbc0038I Pass  16: suminf.    1.90306 (7) obj. -18.0114 iterations 18
Cbc0038I Pass  17: suminf.    1.90306 (7) obj. -18.0114 iterations 0
Cbc0038I Pass  18: suminf.    1.49916 (5) obj. -18.0114 iterations 5
Cbc0038I Pass  19: suminf.    0.87121 (6) obj. -18.0114 iterations 5
Cbc0038I Pass  20: suminf.    0.81991 (5) obj. -18.0114 iterations 7
Cbc0038I Pass  21: suminf.    0.95724 (6) obj. -18.0114 iterations 4
Cbc0038I Pass  22: suminf.    0.90374 (5) obj. -18.0114 iterations 8
Cbc0038I Pass  23: suminf.    0.87121 (6) obj. -18.0114 iterations 5
Cbc0038I Pass  24: suminf.    1.72631 (13) obj. -18.0114 iterations 27
Cbc0038I Pass  25: suminf.    1.66198 (12) obj. -18.0114 iterations 7
Cbc0038I Pass  26: suminf.    1.35193 (5) obj. -18.0114 iterations 24
Cbc0038I Pass  27: suminf.    1.25411 (5) obj. -18.0114 iterations 5
Cbc0038I Pass  28: suminf.    0.58939 (6) obj. -18.0114 iterations 16
Cbc0038I Pass  29: suminf.    0.46150 (6) obj. -18.0114 iterations 1
Cbc0038I Pass  30: suminf.    0.43708 (5) obj. -18.0114 iterations 5
Cbc0038I Pass  31: suminf.    0.40945 (5) obj. -18.0114 iterations 5
Cbc0038I Pass  32: suminf.    0.44681 (5) obj. -18.0114 iterations 6
Cbc0038I Pass  33: suminf.    2.63548 (18) obj. -18.0114 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 23 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -13.8166 to -19.1188 (0.08 seconds)
Cbc0038I Round again with cutoff of -26.4478
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass  34: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass  35: suminf.    1.58756 (20) obj. -37.1022 iterations 11
Cbc0038I Pass  36: suminf.    1.57313 (10) obj. -26.4478 iterations 28
Cbc0038I Pass  37: suminf.    1.19229 (10) obj. -26.4478 iterations 2
Cbc0038I Pass  38: suminf.    1.34375 (8) obj. -26.4478 iterations 15
Cbc0038I Pass  39: suminf.    0.97849 (8) obj. -26.4478 iterations 5
Cbc0038I Pass  40: suminf.    3.11253 (18) obj. -26.4478 iterations 17
Cbc0038I Pass  41: suminf.    2.02340 (13) obj. -26.4478 iterations 5
Cbc0038I Pass  42: suminf.    1.99436 (13) obj. -26.4478 iterations 2
Cbc0038I Pass  43: suminf.    1.31963 (10) obj. -26.4478 iterations 8
Cbc0038I Pass  44: suminf.    1.29801 (10) obj. -26.4478 iterations 4
Cbc0038I Pass  45: suminf.    1.59159 (10) obj. -26.4478 iterations 10
Cbc0038I Pass  46: suminf.    1.52725 (9) obj. -26.4478 iterations 7
Cbc0038I Pass  47: suminf.    1.54253 (10) obj. -26.4478 iterations 7
Cbc0038I Pass  48: suminf.    1.55328 (9) obj. -26.4478 iterations 4
Cbc0038I Pass  49: suminf.    1.52420 (10) obj. -26.4478 iterations 7
Cbc0038I Pass  50: suminf.    2.25867 (13) obj. -26.4478 iterations 9
Cbc0038I Pass  51: suminf.    1.89722 (12) obj. -27.446 iterations 2
Cbc0038I Pass  52: suminf.    1.75592 (10) obj. -26.4478 iterations 11
Cbc0038I Pass  53: suminf.    1.66886 (10) obj. -26.4478 iterations 3
Cbc0038I Pass  54: suminf.    2.08426 (10) obj. -26.4478 iterations 11
Cbc0038I Pass  55: suminf.    2.08426 (10) obj. -26.4478 iterations 3
Cbc0038I Pass  56: suminf.    2.08115 (10) obj. -26.4478 iterations 5
Cbc0038I Pass  57: suminf.    2.08115 (10) obj. -26.4478 iterations 4
Cbc0038I Pass  58: suminf.    2.56336 (16) obj. -26.4478 iterations 22
Cbc0038I Pass  59: suminf.    2.18783 (15) obj. -26.4478 iterations 8
Cbc0038I Pass  60: suminf.    2.36065 (12) obj. -26.4478 iterations 12
Cbc0038I Pass  61: suminf.    1.68740 (12) obj. -26.4478 iterations 9
Cbc0038I Pass  62: suminf.    1.61808 (12) obj. -26.4478 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 29 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -19.1188 to -28.8791 (0.10 seconds)
Cbc0038I Round again with cutoff of -36.9445
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass  63: suminf.    2.98085 (31) obj. -49.311 iterations 0
Cbc0038I Pass  64: suminf.    2.41827 (17) obj. -36.9445 iterations 29
Cbc0038I Pass  65: suminf.    1.90647 (18) obj. -36.9445 iterations 3
Cbc0038I Pass  66: suminf.    2.36139 (16) obj. -36.9445 iterations 15
Cbc0038I Pass  67: suminf.    2.36139 (16) obj. -36.9445 iterations 3
Cbc0038I Pass  68: suminf.    2.26255 (16) obj. -36.9445 iterations 4
Cbc0038I Pass  69: suminf.    2.26255 (16) obj. -36.9445 iterations 2
Cbc0038I Pass  70: suminf.    2.36139 (16) obj. -36.9445 iterations 4
Cbc0038I Pass  71: suminf.    2.79634 (20) obj. -36.9445 iterations 22
Cbc0038I Pass  72: suminf.    2.77277 (20) obj. -36.9445 iterations 2
Cbc0038I Pass  73: suminf.    2.72619 (16) obj. -36.9445 iterations 26
Cbc0038I Pass  74: suminf.    2.26556 (17) obj. -36.9445 iterations 4
Cbc0038I Pass  75: suminf.    2.96499 (16) obj. -36.9445 iterations 7
Cbc0038I Pass  76: suminf.    2.45371 (16) obj. -36.9445 iterations 6
Cbc0038I Pass  77: suminf.    2.58984 (16) obj. -36.9445 iterations 6
Cbc0038I Pass  78: suminf.    2.27243 (16) obj. -36.9445 iterations 3
Cbc0038I Pass  79: suminf.    2.21957 (16) obj. -36.9445 iterations 9
Cbc0038I Pass  80: suminf.    2.09595 (16) obj. -36.9445 iterations 4
Cbc0038I Pass  81: suminf.    2.36139 (16) obj. -36.9445 iterations 6
Cbc0038I Pass  82: suminf.    2.36139 (16) obj. -36.9445 iterations 3
Cbc0038I Pass  83: suminf.    2.26255 (16) obj. -36.9445 iterations 5
Cbc0038I Pass  84: suminf.    2.26255 (16) obj. -36.9445 iterations 3
Cbc0038I Pass  85: suminf.    4.24140 (25) obj. -36.9445 iterations 17
Cbc0038I Pass  86: suminf.    2.63092 (20) obj. -36.9445 iterations 7
Cbc0038I Pass  87: suminf.    2.18096 (19) obj. -36.9445 iterations 3
Cbc0038I Pass  88: suminf.    2.42318 (18) obj. -36.9445 iterations 15
Cbc0038I Pass  89: suminf.    2.23909 (18) obj. -36.9445 iterations 6
Cbc0038I Pass  90: suminf.    2.45307 (16) obj. -36.9445 iterations 10
Cbc0038I Pass  91: suminf.    2.42968 (16) obj. -36.9445 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 115 columns, reduced to 8 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -28.8791 - took 0.09 seconds
Cbc0012I Integer solution of -28.879101 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 9 rows 9 columns
Cbc0031I 52 added rows had average density of 23.903846
Cbc0013I At root node, 52 cuts changed objective from -55.763527 to -31.711924 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1404 row cuts average 6.6 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 71 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 205 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 227 row cuts average 58.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 27.1 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.879101 best solution, best possible -31.711924 (0.39 seconds)
Cbc0012I Integer solution of -28.986171 found by rounding after 828 iterations and 10 nodes (1.10 seconds)
Cbc0010I After 10 nodes, 9 on tree, -28.986171 best solution, best possible -31.711924 (1.10 seconds)
Cbc0012I Integer solution of -29.02628 found by DiveCoefficient after 1106 iterations and 20 nodes (1.46 seconds)
Cbc0016I Integer solution of -29.865201 found by strong branching after 1174 iterations and 23 nodes (1.62 seconds)
Cbc0010I After 35 nodes, 12 on tree, -29.865201 best solution, best possible -31.711924 (1.81 seconds)
Cbc0038I Full problem 95 rows 115 columns, reduced to 3 rows 7 columns
Cbc0038I Full problem 147 rows 115 columns, reduced to 68 rows 85 columns
Cbc0044I Reduced cost fixing - 68 rows, 85 columns - restarting search
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.77939
Cbc0038I Pass   1: suminf.    3.26602 (19) obj. -49.9523 iterations 7
Cbc0038I Pass   2: suminf.    0.32117 (3) obj. -31.1697 iterations 16
Cbc0038I Pass   3: suminf.    0.20151 (1) obj. -29.8652 iterations 4
Cbc0038I Pass   4: suminf.    0.63636 (2) obj. -30.5907 iterations 2
Cbc0038I Pass   5: suminf.    1.28470 (7) obj. -29.8652 iterations 22
Cbc0038I Pass   6: suminf.    1.28470 (7) obj. -29.8652 iterations 2
Cbc0038I Pass   7: suminf.    0.89014 (7) obj. -29.8652 iterations 10
Cbc0038I Pass   8: suminf.    0.89014 (7) obj. -29.8652 iterations 0
Cbc0038I Pass   9: suminf.    1.13465 (7) obj. -29.8652 iterations 1
Cbc0038I Pass  10: suminf.    1.10178 (10) obj. -29.8652 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 68 rows 85 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (2.19 seconds)
Cbc0038I Full problem 69 rows 85 columns, reduced to 69 rows 85 columns
Cbc0038I After 2.30 seconds - Feasibility pump exiting with objective of -29.7004 - took 0.11 seconds
Cbc0031I 37 added rows had average density of 10.621622
Cbc0013I At root node, 37 cuts changed objective from -52.04151 to -30.568897 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 430 row cuts average 3.6 elements, 10 column cuts (10 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 76 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 30 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 56 row cuts average 12.1 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -30.532027 (2.57 seconds)
Cbc0001I Search completed - best objective 1e+50, took 1567 iterations and 84 nodes (3.38 seconds)
Cbc0032I Strong branching done 522 times (3360 iterations), fathomed 11 nodes and fixed 44 variables
Cbc0035I Maximum depth 7, 174 variables fixed on reduced cost
Cbc0038I Probing was tried 86 times and created 526 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Cbc0038I Gomory was tried 86 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I Knapsack was tried 86 times and created 214 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Cbc0038I Clique was tried 86 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I OddWheel was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I MixedIntegerRounding2 was tried 86 times and created 69 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 86 times and created 144 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Cbc0038I ZeroHalf was tried 86 times and created 116 cuts of which 0 were active after adding rounds of cuts (0.339 seconds)
Cbc0038I Stored from first was tried 86 times and created 97 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -29.865201, took 3107 iterations and 134 nodes (3.38 seconds)
Cbc0032I Strong branching done 600 times (8351 iterations), fathomed 7 nodes and fixed 15 variables
Cbc0035I Maximum depth 17, 125 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       3.39

