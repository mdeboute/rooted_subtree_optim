Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 0.000359005 - average 1.95111e-06, 9 fixed columns
Coin0506I Presolve 166 (-18) rows, 92 (-9) columns and 508 (-54) elements
Clp0029I End of values pass after 92 iterations
Clp0000I Optimal - objective value 32.826657
Clp0000I Optimal - objective value 32.826657
Coin0511I After Postsolve, objective 32.826657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.826657
Clp0000I Optimal - objective value 32.826657
Clp0000I Optimal - objective value 32.826657
Coin0511I After Postsolve, objective 32.826657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.82665675 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 66 integers unsatisfied sum - 12.848
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.88074 iterations 77
Cbc0038I Solution found of 4.88074
Cbc0038I Relaxing continuous gives 4.88074
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - 0 fixed gives 118, 67 - still too large
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1.10991
Cbc0038I Pass   2: suminf.    0.74564 (5) obj. 1.10991 iterations 8
Cbc0038I Pass   3: suminf.    0.99804 (5) obj. 1.10991 iterations 12
Cbc0038I Pass   4: suminf.    0.45729 (1) obj. 1.10991 iterations 7
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 1.10991 iterations 1
Cbc0038I Solution found of 1.10991
Cbc0038I Relaxing continuous gives -3.49545
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - 0 fixed gives 118, 67 - still too large
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -9.36177
Cbc0038I Pass   6: suminf.    3.48671 (17) obj. -9.36177 iterations 16
Cbc0038I Pass   7: suminf.    2.90295 (12) obj. -9.36177 iterations 20
Cbc0038I Pass   8: suminf.    2.77670 (12) obj. -9.36177 iterations 8
Cbc0038I Pass   9: suminf.    4.26795 (12) obj. -9.36177 iterations 23
Cbc0038I Pass  10: suminf.    3.19499 (10) obj. -9.36177 iterations 2
Cbc0038I Pass  11: suminf.    2.01550 (10) obj. -9.36177 iterations 9
Cbc0038I Pass  12: suminf.    2.67682 (11) obj. -9.36177 iterations 16
Cbc0038I Pass  13: suminf.    2.11927 (9) obj. -9.36177 iterations 6
Cbc0038I Pass  14: suminf.    2.55842 (9) obj. -9.36177 iterations 15
Cbc0038I Pass  15: suminf.    2.17357 (9) obj. -9.36177 iterations 6
Cbc0038I Pass  16: suminf.    2.35215 (9) obj. -9.36177 iterations 13
Cbc0038I Pass  17: suminf.    4.60321 (13) obj. -9.36177 iterations 30
Cbc0038I Pass  18: suminf.    2.44848 (11) obj. -9.36177 iterations 19
Cbc0038I Pass  19: suminf.    2.84581 (8) obj. -9.36177 iterations 26
Cbc0038I Pass  20: suminf.    2.17758 (7) obj. -9.36177 iterations 1
Cbc0038I Pass  21: suminf.    2.10539 (8) obj. -9.36177 iterations 6
Cbc0038I Pass  22: suminf.    3.73989 (13) obj. -9.36177 iterations 12
Cbc0038I Pass  23: suminf.    2.48270 (11) obj. -9.36177 iterations 22
Cbc0038I Pass  24: suminf.    1.43311 (11) obj. -9.36177 iterations 16
Cbc0038I Pass  25: suminf.    2.41273 (11) obj. -9.36177 iterations 23
Cbc0038I Pass  26: suminf.    2.36741 (9) obj. -9.36177 iterations 2
Cbc0038I Pass  27: suminf.    4.10760 (11) obj. -9.36177 iterations 19
Cbc0038I Pass  28: suminf.    3.44018 (14) obj. -9.36177 iterations 11
Cbc0038I Pass  29: suminf.    3.36772 (14) obj. -9.36177 iterations 3
Cbc0038I Pass  30: suminf.    3.06817 (11) obj. -9.36177 iterations 19
Cbc0038I Pass  31: suminf.    2.01550 (10) obj. -9.36177 iterations 13
Cbc0038I Pass  32: suminf.    2.01550 (10) obj. -9.36177 iterations 3
Cbc0038I Pass  33: suminf.    2.67682 (11) obj. -9.36177 iterations 17
Cbc0038I Pass  34: suminf.    2.11927 (9) obj. -9.36177 iterations 7
Cbc0038I Pass  35: suminf.    2.55842 (9) obj. -9.36177 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 124 rows 70 columns - 2 fixed gives 112, 68 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 112 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -3.49545 to -3.6379 (0.11 seconds)
Cbc0038I Round again with cutoff of -16.4012
Cbc0038I Pass  35: suminf.    5.52720 (21) obj. -16.4012 iterations 6
Cbc0038I Pass  36: suminf.    5.52720 (21) obj. -16.4012 iterations 0
Cbc0038I Pass  37: suminf.    5.90131 (19) obj. -16.4012 iterations 49
Cbc0038I Pass  38: suminf.    5.63449 (22) obj. -16.4012 iterations 17
Cbc0038I Pass  39: suminf.    4.70187 (16) obj. -16.4012 iterations 39
Cbc0038I Pass  40: suminf.    3.87406 (14) obj. -16.4012 iterations 8
Cbc0038I Pass  41: suminf.    5.40270 (22) obj. -16.4012 iterations 21
Cbc0038I Pass  42: suminf.    5.33052 (22) obj. -16.4012 iterations 2
Cbc0038I Pass  43: suminf.    5.15466 (15) obj. -16.4012 iterations 21
Cbc0038I Pass  44: suminf.    4.63242 (14) obj. -16.4012 iterations 7
Cbc0038I Pass  45: suminf.    5.81720 (15) obj. -16.4012 iterations 17
Cbc0038I Pass  46: suminf.    4.39922 (13) obj. -16.4012 iterations 10
Cbc0038I Pass  47: suminf.    3.53404 (14) obj. -16.4012 iterations 8
Cbc0038I Pass  48: suminf.    5.96784 (16) obj. -16.4012 iterations 21
Cbc0038I Pass  49: suminf.    5.07377 (16) obj. -16.4012 iterations 10
Cbc0038I Pass  50: suminf.    4.88548 (16) obj. -16.4012 iterations 3
Cbc0038I Pass  51: suminf.    4.88548 (16) obj. -16.4012 iterations 0
Cbc0038I Pass  52: suminf.    4.69951 (14) obj. -16.4012 iterations 19
Cbc0038I Pass  53: suminf.    4.46061 (13) obj. -16.4012 iterations 11
Cbc0038I Pass  54: suminf.    5.47272 (15) obj. -16.4012 iterations 20
Cbc0038I Pass  55: suminf.    5.04114 (15) obj. -16.4012 iterations 4
Cbc0038I Pass  56: suminf.    4.74605 (15) obj. -16.4012 iterations 3
Cbc0038I Pass  57: suminf.    4.74605 (15) obj. -16.4012 iterations 3
Cbc0038I Pass  58: suminf.    4.69951 (14) obj. -16.4012 iterations 15
Cbc0038I Pass  59: suminf.    4.46061 (13) obj. -16.4012 iterations 12
Cbc0038I Pass  60: suminf.    5.47272 (15) obj. -16.4012 iterations 21
Cbc0038I Pass  61: suminf.    5.04114 (15) obj. -16.4012 iterations 4
Cbc0038I Pass  62: suminf.    4.74605 (15) obj. -16.4012 iterations 3
Cbc0038I Pass  63: suminf.    4.74605 (15) obj. -16.4012 iterations 3
Cbc0038I Pass  64: suminf.    3.87268 (13) obj. -16.4012 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 127 rows 72 columns - 3 fixed gives 107, 69 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 107 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -3.6379 - took 0.18 seconds
Cbc0012I Integer solution of -3.637902 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - 3 fixed gives 101, 64 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 101 rows 64 columns
Cbc0012I Integer solution of -4.345052 found by RINS after 0 iterations and 0 nodes (0.27 seconds)
Cbc0031I 32 added rows had average density of 73.875
Cbc0013I At root node, 32 cuts changed objective from -32.826657 to -26.62876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28388 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3336 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.345052 best solution, best possible -26.62876 (2.17 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 119 rows 67 columns - 3 fixed gives 98, 64 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 98 rows 64 columns
Cbc0012I Integer solution of -5.849972 found by RINS after 14006 iterations and 41 nodes (2.62 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0010I After 99 nodes, 13 on tree, -5.849972 best solution, best possible -26.62876 (2.87 seconds)
Cbc0001I Search completed - best objective -5.849972000000001, took 18079 iterations and 142 nodes (2.97 seconds)
Cbc0032I Strong branching done 1576 times (31091 iterations), fathomed 13 nodes and fixed 68 variables
Cbc0035I Maximum depth 49, 331 variables fixed on reduced cost
Total time (CPU seconds):       2.88   (Wallclock seconds):       2.99

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-85) rows, 135 (-67) columns and 2246 (-3407) elements
Clp1000I sum of infeasibilities 7.1299e-06 - average 5.99151e-08, 65 fixed columns
Coin0506I Presolve 53 (-66) rows, 68 (-67) columns and 236 (-2010) elements
Clp0006I 0  Obj -8.0812855 Dual inf 2.7191302 (68)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 1.4447925 - largest nonzero change 1.9307726e-05 ( 0.0010393299%) - largest zero change 2.9528382e-05
Clp0000I Optimal - objective value -7.114506
Clp0000I Optimal - objective value -7.114506
Coin0511I After Postsolve, objective -7.114506, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.114506 Dual inf 41.501321 (35)
Clp0014I Perturbing problem by 0.001% of 1.4568477 - largest nonzero change 2.6774595e-05 ( 0.0026774595%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 44.13246
Clp0000I Optimal - objective value 44.13246
Clp0000I Optimal - objective value 44.13246
Coin0511I After Postsolve, objective 44.13246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.13246008 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 137 columns (137 integer (137 of which binary)) and 2255 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.502%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.32874
Cbc0038I Pass   1: suminf.    3.62752 (28) obj. -39.1306 iterations 16
Cbc0038I Pass   2: suminf.    3.62752 (28) obj. -39.1306 iterations 1
Cbc0038I Pass   3: suminf.    1.71345 (15) obj. -17.7496 iterations 13
Cbc0038I Solution found of 3.36993
Cbc0038I Rounding solution of 0.969823 is better than previous of 3.36993

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.45658
Cbc0038I Pass   4: suminf.    3.62752 (28) obj. -39.1306 iterations 0
Cbc0038I Pass   5: suminf.    3.62752 (28) obj. -39.1306 iterations 1
Cbc0038I Pass   6: suminf.    0.53525 (2) obj. -3.45658 iterations 27
Cbc0038I Pass   7: suminf.    0.21143 (2) obj. -7.01864 iterations 1
Cbc0038I Pass   8: suminf.    0.37941 (1) obj. -3.45658 iterations 2
Cbc0038I Pass   9: suminf.    0.14000 (1) obj. -6.09007 iterations 1
Cbc0038I Pass  10: suminf.    2.19670 (12) obj. -13.2526 iterations 31
Cbc0038I Pass  11: suminf.    1.11152 (9) obj. -12.5203 iterations 9
Cbc0038I Pass  12: suminf.    0.40561 (3) obj. -3.45658 iterations 11
Cbc0038I Pass  13: suminf.    0.40561 (3) obj. -3.45658 iterations 0
Cbc0038I Pass  14: suminf.    0.76039 (3) obj. -3.45658 iterations 4
Cbc0038I Pass  15: suminf.    2.36649 (10) obj. -3.45658 iterations 39
Cbc0038I Pass  16: suminf.    0.87105 (6) obj. -3.79118 iterations 14
Cbc0038I Pass  17: suminf.    0.74922 (7) obj. -3.45658 iterations 8
Cbc0038I Pass  18: suminf.    0.54696 (5) obj. -3.45658 iterations 4
Cbc0038I Pass  19: suminf.    0.54696 (5) obj. -3.45658 iterations 1
Cbc0038I Pass  20: suminf.    0.98452 (5) obj. -3.45658 iterations 5
Cbc0038I Pass  21: suminf.    0.98198 (4) obj. -3.45658 iterations 1
Cbc0038I Pass  22: suminf.    0.43185 (3) obj. -3.45658 iterations 10
Cbc0038I Pass  23: suminf.    0.42944 (3) obj. -3.46865 iterations 1
Cbc0038I Pass  24: suminf.    0.66331 (4) obj. -3.45658 iterations 5
Cbc0038I Pass  25: suminf.    1.59006 (10) obj. -5.52251 iterations 35
Cbc0038I Pass  26: suminf.    1.59006 (10) obj. -5.52251 iterations 4
Cbc0038I Pass  27: suminf.    1.29711 (10) obj. -3.45658 iterations 16
Cbc0038I Pass  28: suminf.    0.75229 (4) obj. -4.37978 iterations 9
Cbc0038I Pass  29: suminf.    0.98308 (4) obj. -3.45658 iterations 12
Cbc0038I Pass  30: suminf.    2.00250 (11) obj. -3.45658 iterations 32
Cbc0038I Pass  31: suminf.    1.52941 (9) obj. -3.45658 iterations 15
Cbc0038I Pass  32: suminf.    0.68163 (4) obj. -3.45658 iterations 16
Cbc0038I Pass  33: suminf.    0.50698 (4) obj. -4.15519 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 137 columns, reduced to 23 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 3.36993 to -0.365042 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.4239
Cbc0038I Pass  33: suminf.    3.62752 (28) obj. -39.1306 iterations 0
Cbc0038I Pass  34: suminf.    3.62752 (28) obj. -39.1306 iterations 1
Cbc0038I Pass  35: suminf.    1.53878 (11) obj. -11.4239 iterations 18
Cbc0038I Pass  36: suminf.    1.21204 (11) obj. -15.018 iterations 1
Cbc0038I Pass  37: suminf.    0.52501 (3) obj. -11.4239 iterations 24
Cbc0038I Pass  38: suminf.    0.52501 (3) obj. -11.4239 iterations 1
Cbc0038I Pass  39: suminf.    0.63177 (3) obj. -11.4239 iterations 5
Cbc0038I Pass  40: suminf.    0.63177 (3) obj. -11.4239 iterations 0
Cbc0038I Pass  41: suminf.    0.52501 (3) obj. -11.4239 iterations 6
Cbc0038I Pass  42: suminf.    1.39780 (10) obj. -13.2616 iterations 32
Cbc0038I Pass  43: suminf.    1.23965 (9) obj. -12.7492 iterations 10
Cbc0038I Pass  44: suminf.    1.08330 (6) obj. -11.4239 iterations 15
Cbc0038I Pass  45: suminf.    1.02266 (5) obj. -11.5074 iterations 7
Cbc0038I Pass  46: suminf.    1.53894 (12) obj. -15.5215 iterations 34
Cbc0038I Pass  47: suminf.    1.53894 (12) obj. -15.5215 iterations 5
Cbc0038I Pass  48: suminf.    0.96950 (5) obj. -11.4239 iterations 14
Cbc0038I Pass  49: suminf.    0.96936 (5) obj. -11.4239 iterations 3
Cbc0038I Pass  50: suminf.    0.82342 (4) obj. -11.4239 iterations 13
Cbc0038I Pass  51: suminf.    0.57059 (4) obj. -11.4239 iterations 2
Cbc0038I Pass  52: suminf.    0.82342 (4) obj. -11.4239 iterations 6
Cbc0038I Pass  53: suminf.    2.04335 (11) obj. -11.4239 iterations 22
Cbc0038I Pass  54: suminf.    1.63901 (10) obj. -12.019 iterations 6
Cbc0038I Pass  55: suminf.    1.40880 (7) obj. -11.4239 iterations 18
Cbc0038I Pass  56: suminf.    1.40880 (7) obj. -11.4239 iterations 2
Cbc0038I Pass  57: suminf.    1.24987 (7) obj. -11.4239 iterations 3
Cbc0038I Pass  58: suminf.    1.24987 (7) obj. -11.4239 iterations 5
Cbc0038I Pass  59: suminf.    1.22587 (6) obj. -11.4239 iterations 12
Cbc0038I Pass  60: suminf.    1.06119 (6) obj. -12.0826 iterations 1
Cbc0038I Pass  61: suminf.    1.24695 (6) obj. -11.4239 iterations 8
Cbc0038I Pass  62: suminf.    2.93169 (18) obj. -11.4239 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -0.365042 - took 0.05 seconds
Cbc0012I Integer solution of -0.365042 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 121 rows 137 columns, reduced to 6 rows 8 columns
Cbc0031I 74 added rows had average density of 52.445946
Cbc0013I At root node, 74 cuts changed objective from -43.293317 to -10.864049 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13839 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2604 row cuts average 134.1 elements, 0 column cuts (0 active)  in 0.229 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 945 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1147 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 346 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 74 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.294 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.365042 best solution, best possible -10.864049 (2.41 seconds)
Cbc0012I Integer solution of -1.519742 found by DiveCoefficient after 8230 iterations and 5 nodes (2.68 seconds)
Cbc0012I Integer solution of -1.793152 found by rounding after 8527 iterations and 16 nodes (2.81 seconds)
Cbc0012I Integer solution of -3.609757 found by rounding after 8781 iterations and 23 nodes (2.87 seconds)
Cbc0004I Integer solution of -5.001187 found after 9415 iterations and 48 nodes (2.99 seconds)
Cbc0038I Full problem 121 rows 137 columns, reduced to 21 rows 42 columns
Cbc0010I After 52 nodes, 7 on tree, -5.001187 best solution, best possible -10.864049 (3.13 seconds)
Cbc0038I Full problem 121 rows 137 columns, reduced to 15 rows 32 columns
Cbc0012I Integer solution of -5.849972 found by RINS after 11089 iterations and 97 nodes (3.62 seconds)
Cbc0010I After 104 nodes, 1 on tree, -5.849972 best solution, best possible -10.799574 (3.91 seconds)
Cbc0010I After 145 nodes, 4 on tree, -5.849972 best solution, best possible -10.799574 (4.63 seconds)
Cbc0010I After 194 nodes, 6 on tree, -5.849972 best solution, best possible -10.799574 (5.33 seconds)
Cbc0001I Search completed - best objective -5.849972000000001, took 17466 iterations and 222 nodes (5.52 seconds)
Cbc0032I Strong branching done 2732 times (43332 iterations), fathomed 19 nodes and fixed 13 variables
Cbc0035I Maximum depth 21, 352 variables fixed on reduced cost
Total time (CPU seconds):       5.10   (Wallclock seconds):       5.55

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 184 (-21) rows, 101 (-2) columns and 562 (-41) elements
Clp1000I sum of infeasibilities 0.000359005 - average 1.95111e-06, 9 fixed columns
Coin0506I Presolve 166 (-18) rows, 92 (-9) columns and 508 (-54) elements
Clp0029I End of values pass after 92 iterations
Clp0000I Optimal - objective value 32.826657
Clp0000I Optimal - objective value 32.826657
Coin0511I After Postsolve, objective 32.826657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.826657
Clp0000I Optimal - objective value 32.826657
Clp0000I Optimal - objective value 32.826657
Coin0511I After Postsolve, objective 32.826657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.82665675 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 184 rows, 101 columns (100 integer (100 of which binary)) and 562 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.888%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 66 integers unsatisfied sum - 12.848
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.88074 iterations 77
Cbc0038I Solution found of 4.88074
Cbc0038I Relaxing continuous gives 4.88074
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - 0 fixed gives 118, 67 - still too large
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 1.10991
Cbc0038I Pass   2: suminf.    0.74564 (5) obj. 1.10991 iterations 8
Cbc0038I Pass   3: suminf.    0.99804 (5) obj. 1.10991 iterations 12
Cbc0038I Pass   4: suminf.    0.45729 (1) obj. 1.10991 iterations 7
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 1.10991 iterations 1
Cbc0038I Solution found of 1.10991
Cbc0038I Relaxing continuous gives -3.49545
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - 0 fixed gives 118, 67 - still too large
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -9.36177
Cbc0038I Pass   6: suminf.    3.48671 (17) obj. -9.36177 iterations 16
Cbc0038I Pass   7: suminf.    2.90295 (12) obj. -9.36177 iterations 20
Cbc0038I Pass   8: suminf.    2.77670 (12) obj. -9.36177 iterations 8
Cbc0038I Pass   9: suminf.    4.26795 (12) obj. -9.36177 iterations 23
Cbc0038I Pass  10: suminf.    3.19499 (10) obj. -9.36177 iterations 2
Cbc0038I Pass  11: suminf.    2.01550 (10) obj. -9.36177 iterations 9
Cbc0038I Pass  12: suminf.    2.67682 (11) obj. -9.36177 iterations 16
Cbc0038I Pass  13: suminf.    2.11927 (9) obj. -9.36177 iterations 6
Cbc0038I Pass  14: suminf.    2.55842 (9) obj. -9.36177 iterations 15
Cbc0038I Pass  15: suminf.    2.17357 (9) obj. -9.36177 iterations 6
Cbc0038I Pass  16: suminf.    2.35215 (9) obj. -9.36177 iterations 13
Cbc0038I Pass  17: suminf.    4.60321 (13) obj. -9.36177 iterations 30
Cbc0038I Pass  18: suminf.    2.44848 (11) obj. -9.36177 iterations 19
Cbc0038I Pass  19: suminf.    2.84581 (8) obj. -9.36177 iterations 26
Cbc0038I Pass  20: suminf.    2.17758 (7) obj. -9.36177 iterations 1
Cbc0038I Pass  21: suminf.    2.10539 (8) obj. -9.36177 iterations 6
Cbc0038I Pass  22: suminf.    3.73989 (13) obj. -9.36177 iterations 12
Cbc0038I Pass  23: suminf.    2.48270 (11) obj. -9.36177 iterations 22
Cbc0038I Pass  24: suminf.    1.43311 (11) obj. -9.36177 iterations 16
Cbc0038I Pass  25: suminf.    2.41273 (11) obj. -9.36177 iterations 23
Cbc0038I Pass  26: suminf.    2.36741 (9) obj. -9.36177 iterations 2
Cbc0038I Pass  27: suminf.    4.10760 (11) obj. -9.36177 iterations 19
Cbc0038I Pass  28: suminf.    3.44018 (14) obj. -9.36177 iterations 11
Cbc0038I Pass  29: suminf.    3.36772 (14) obj. -9.36177 iterations 3
Cbc0038I Pass  30: suminf.    3.06817 (11) obj. -9.36177 iterations 19
Cbc0038I Pass  31: suminf.    2.01550 (10) obj. -9.36177 iterations 13
Cbc0038I Pass  32: suminf.    2.01550 (10) obj. -9.36177 iterations 3
Cbc0038I Pass  33: suminf.    2.67682 (11) obj. -9.36177 iterations 17
Cbc0038I Pass  34: suminf.    2.11927 (9) obj. -9.36177 iterations 7
Cbc0038I Pass  35: suminf.    2.55842 (9) obj. -9.36177 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 124 rows 70 columns - 2 fixed gives 112, 68 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 112 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -3.49545 to -3.6379 (0.10 seconds)
Cbc0038I Round again with cutoff of -16.4012
Cbc0038I Pass  35: suminf.    5.52720 (21) obj. -16.4012 iterations 6
Cbc0038I Pass  36: suminf.    5.52720 (21) obj. -16.4012 iterations 0
Cbc0038I Pass  37: suminf.    5.90131 (19) obj. -16.4012 iterations 49
Cbc0038I Pass  38: suminf.    5.63449 (22) obj. -16.4012 iterations 17
Cbc0038I Pass  39: suminf.    4.70187 (16) obj. -16.4012 iterations 39
Cbc0038I Pass  40: suminf.    3.87406 (14) obj. -16.4012 iterations 8
Cbc0038I Pass  41: suminf.    5.40270 (22) obj. -16.4012 iterations 21
Cbc0038I Pass  42: suminf.    5.33052 (22) obj. -16.4012 iterations 2
Cbc0038I Pass  43: suminf.    5.15466 (15) obj. -16.4012 iterations 21
Cbc0038I Pass  44: suminf.    4.63242 (14) obj. -16.4012 iterations 7
Cbc0038I Pass  45: suminf.    5.81720 (15) obj. -16.4012 iterations 17
Cbc0038I Pass  46: suminf.    4.39922 (13) obj. -16.4012 iterations 10
Cbc0038I Pass  47: suminf.    3.53404 (14) obj. -16.4012 iterations 8
Cbc0038I Pass  48: suminf.    5.96784 (16) obj. -16.4012 iterations 21
Cbc0038I Pass  49: suminf.    5.07377 (16) obj. -16.4012 iterations 10
Cbc0038I Pass  50: suminf.    4.88548 (16) obj. -16.4012 iterations 3
Cbc0038I Pass  51: suminf.    4.88548 (16) obj. -16.4012 iterations 0
Cbc0038I Pass  52: suminf.    4.69951 (14) obj. -16.4012 iterations 19
Cbc0038I Pass  53: suminf.    4.46061 (13) obj. -16.4012 iterations 11
Cbc0038I Pass  54: suminf.    5.47272 (15) obj. -16.4012 iterations 20
Cbc0038I Pass  55: suminf.    5.04114 (15) obj. -16.4012 iterations 4
Cbc0038I Pass  56: suminf.    4.74605 (15) obj. -16.4012 iterations 3
Cbc0038I Pass  57: suminf.    4.74605 (15) obj. -16.4012 iterations 3
Cbc0038I Pass  58: suminf.    4.69951 (14) obj. -16.4012 iterations 15
Cbc0038I Pass  59: suminf.    4.46061 (13) obj. -16.4012 iterations 12
Cbc0038I Pass  60: suminf.    5.47272 (15) obj. -16.4012 iterations 21
Cbc0038I Pass  61: suminf.    5.04114 (15) obj. -16.4012 iterations 4
Cbc0038I Pass  62: suminf.    4.74605 (15) obj. -16.4012 iterations 3
Cbc0038I Pass  63: suminf.    4.74605 (15) obj. -16.4012 iterations 3
Cbc0038I Pass  64: suminf.    3.87268 (13) obj. -16.4012 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 184 rows 101 columns, reduced to 127 rows 72 columns - 3 fixed gives 107, 69 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 107 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -3.6379 - took 0.17 seconds
Cbc0012I Integer solution of -3.637902 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 118 rows 67 columns - 3 fixed gives 101, 64 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 101 rows 64 columns
Cbc0012I Integer solution of -4.345052 found by RINS after 0 iterations and 0 nodes (0.26 seconds)
Cbc0031I 32 added rows had average density of 73.875
Cbc0013I At root node, 32 cuts changed objective from -32.826657 to -26.62876 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28388 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.152 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3336 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.345052 best solution, best possible -26.62876 (2.02 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 119 rows 67 columns - 3 fixed gives 98, 64 - ok now
Cbc0038I Full problem 184 rows 101 columns, reduced to 98 rows 64 columns
Cbc0012I Integer solution of -5.849972 found by RINS after 14006 iterations and 41 nodes (2.46 seconds)
Cbc0038I Full problem 184 rows 101 columns, reduced to 79 rows 45 columns
Cbc0010I After 107 nodes, 11 on tree, -5.849972 best solution, best possible -26.62876 (2.72 seconds)
Cbc0001I Search completed - best objective -5.849972000000001, took 18079 iterations and 142 nodes (2.78 seconds)
Cbc0032I Strong branching done 1576 times (31091 iterations), fathomed 13 nodes and fixed 68 variables
Cbc0035I Maximum depth 49, 331 variables fixed on reduced cost
Total time (CPU seconds):       2.72   (Wallclock seconds):       2.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 119 (-86) rows, 135 (-68) columns and 2246 (-3408) elements
Clp1000I sum of infeasibilities 7.1299e-06 - average 5.99151e-08, 65 fixed columns
Coin0506I Presolve 53 (-66) rows, 68 (-67) columns and 236 (-2010) elements
Clp0006I 0  Obj -8.0812855 Dual inf 2.7191302 (68)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 1.4447925 - largest nonzero change 1.9307726e-05 ( 0.0010393299%) - largest zero change 2.9528382e-05
Clp0000I Optimal - objective value -7.114506
Clp0000I Optimal - objective value -7.114506
Coin0511I After Postsolve, objective -7.114506, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.114506 Dual inf 41.501321 (35)
Clp0014I Perturbing problem by 0.001% of 1.4568477 - largest nonzero change 2.6774595e-05 ( 0.0026774595%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 44.13246
Clp0000I Optimal - objective value 44.13246
Clp0000I Optimal - objective value 44.13246
Coin0511I After Postsolve, objective 44.13246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.13246008 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 137 columns (137 integer (137 of which binary)) and 2255 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.502%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.32874
Cbc0038I Pass   1: suminf.    3.62752 (28) obj. -39.1306 iterations 16
Cbc0038I Pass   2: suminf.    3.62752 (28) obj. -39.1306 iterations 1
Cbc0038I Pass   3: suminf.    1.71345 (15) obj. -17.7496 iterations 13
Cbc0038I Solution found of 3.36993
Cbc0038I Rounding solution of 0.969823 is better than previous of 3.36993

Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.45658
Cbc0038I Pass   4: suminf.    3.62752 (28) obj. -39.1306 iterations 0
Cbc0038I Pass   5: suminf.    3.62752 (28) obj. -39.1306 iterations 1
Cbc0038I Pass   6: suminf.    0.53525 (2) obj. -3.45658 iterations 27
Cbc0038I Pass   7: suminf.    0.21143 (2) obj. -7.01864 iterations 1
Cbc0038I Pass   8: suminf.    0.37941 (1) obj. -3.45658 iterations 2
Cbc0038I Pass   9: suminf.    0.14000 (1) obj. -6.09007 iterations 1
Cbc0038I Pass  10: suminf.    2.19670 (12) obj. -13.2526 iterations 31
Cbc0038I Pass  11: suminf.    1.11152 (9) obj. -12.5203 iterations 9
Cbc0038I Pass  12: suminf.    0.40561 (3) obj. -3.45658 iterations 11
Cbc0038I Pass  13: suminf.    0.40561 (3) obj. -3.45658 iterations 0
Cbc0038I Pass  14: suminf.    0.76039 (3) obj. -3.45658 iterations 4
Cbc0038I Pass  15: suminf.    2.36649 (10) obj. -3.45658 iterations 39
Cbc0038I Pass  16: suminf.    0.87105 (6) obj. -3.79118 iterations 14
Cbc0038I Pass  17: suminf.    0.74922 (7) obj. -3.45658 iterations 8
Cbc0038I Pass  18: suminf.    0.54696 (5) obj. -3.45658 iterations 4
Cbc0038I Pass  19: suminf.    0.54696 (5) obj. -3.45658 iterations 1
Cbc0038I Pass  20: suminf.    0.98452 (5) obj. -3.45658 iterations 5
Cbc0038I Pass  21: suminf.    0.98198 (4) obj. -3.45658 iterations 1
Cbc0038I Pass  22: suminf.    0.43185 (3) obj. -3.45658 iterations 10
Cbc0038I Pass  23: suminf.    0.42944 (3) obj. -3.46865 iterations 1
Cbc0038I Pass  24: suminf.    0.66331 (4) obj. -3.45658 iterations 5
Cbc0038I Pass  25: suminf.    1.59006 (10) obj. -5.52251 iterations 35
Cbc0038I Pass  26: suminf.    1.59006 (10) obj. -5.52251 iterations 4
Cbc0038I Pass  27: suminf.    1.29711 (10) obj. -3.45658 iterations 16
Cbc0038I Pass  28: suminf.    0.75229 (4) obj. -4.37978 iterations 9
Cbc0038I Pass  29: suminf.    0.98308 (4) obj. -3.45658 iterations 12
Cbc0038I Pass  30: suminf.    2.00250 (11) obj. -3.45658 iterations 32
Cbc0038I Pass  31: suminf.    1.52941 (9) obj. -3.45658 iterations 15
Cbc0038I Pass  32: suminf.    0.68163 (4) obj. -3.45658 iterations 16
Cbc0038I Pass  33: suminf.    0.50698 (4) obj. -4.15519 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 137 columns, reduced to 23 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 3.36993 to -0.365042 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.4239
Cbc0038I Pass  33: suminf.    3.62752 (28) obj. -39.1306 iterations 0
Cbc0038I Pass  34: suminf.    3.62752 (28) obj. -39.1306 iterations 1
Cbc0038I Pass  35: suminf.    1.53878 (11) obj. -11.4239 iterations 18
Cbc0038I Pass  36: suminf.    1.21204 (11) obj. -15.018 iterations 1
Cbc0038I Pass  37: suminf.    0.52501 (3) obj. -11.4239 iterations 24
Cbc0038I Pass  38: suminf.    0.52501 (3) obj. -11.4239 iterations 1
Cbc0038I Pass  39: suminf.    0.63177 (3) obj. -11.4239 iterations 5
Cbc0038I Pass  40: suminf.    0.63177 (3) obj. -11.4239 iterations 0
Cbc0038I Pass  41: suminf.    0.52501 (3) obj. -11.4239 iterations 6
Cbc0038I Pass  42: suminf.    1.39780 (10) obj. -13.2616 iterations 32
Cbc0038I Pass  43: suminf.    1.23965 (9) obj. -12.7492 iterations 10
Cbc0038I Pass  44: suminf.    1.08330 (6) obj. -11.4239 iterations 15
Cbc0038I Pass  45: suminf.    1.02266 (5) obj. -11.5074 iterations 7
Cbc0038I Pass  46: suminf.    1.53894 (12) obj. -15.5215 iterations 34
Cbc0038I Pass  47: suminf.    1.53894 (12) obj. -15.5215 iterations 5
Cbc0038I Pass  48: suminf.    0.96950 (5) obj. -11.4239 iterations 14
Cbc0038I Pass  49: suminf.    0.96936 (5) obj. -11.4239 iterations 3
Cbc0038I Pass  50: suminf.    0.82342 (4) obj. -11.4239 iterations 13
Cbc0038I Pass  51: suminf.    0.57059 (4) obj. -11.4239 iterations 2
Cbc0038I Pass  52: suminf.    0.82342 (4) obj. -11.4239 iterations 6
Cbc0038I Pass  53: suminf.    2.04335 (11) obj. -11.4239 iterations 22
Cbc0038I Pass  54: suminf.    1.63901 (10) obj. -12.019 iterations 6
Cbc0038I Pass  55: suminf.    1.40880 (7) obj. -11.4239 iterations 18
Cbc0038I Pass  56: suminf.    1.40880 (7) obj. -11.4239 iterations 2
Cbc0038I Pass  57: suminf.    1.24987 (7) obj. -11.4239 iterations 3
Cbc0038I Pass  58: suminf.    1.24987 (7) obj. -11.4239 iterations 5
Cbc0038I Pass  59: suminf.    1.22587 (6) obj. -11.4239 iterations 12
Cbc0038I Pass  60: suminf.    1.06119 (6) obj. -12.0826 iterations 1
Cbc0038I Pass  61: suminf.    1.24695 (6) obj. -11.4239 iterations 8
Cbc0038I Pass  62: suminf.    2.93169 (18) obj. -11.4239 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -0.365042 - took 0.04 seconds
Cbc0012I Integer solution of -0.365042 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 121 rows 137 columns, reduced to 6 rows 8 columns
Cbc0031I 74 added rows had average density of 52.445946
Cbc0013I At root node, 74 cuts changed objective from -43.293317 to -10.864049 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13839 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2604 row cuts average 134.1 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 54 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 945 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1147 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 346 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 74 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.365042 best solution, best possible -10.864049 (2.27 seconds)
Cbc0012I Integer solution of -1.519742 found by DiveCoefficient after 8230 iterations and 5 nodes (2.54 seconds)
Cbc0012I Integer solution of -1.793152 found by rounding after 8527 iterations and 16 nodes (2.66 seconds)
Cbc0012I Integer solution of -3.609757 found by rounding after 8781 iterations and 23 nodes (2.73 seconds)
Cbc0004I Integer solution of -5.001187 found after 9415 iterations and 48 nodes (2.84 seconds)
Cbc0038I Full problem 121 rows 137 columns, reduced to 21 rows 42 columns
Cbc0010I After 53 nodes, 6 on tree, -5.001187 best solution, best possible -10.864049 (2.97 seconds)
Cbc0038I Full problem 121 rows 137 columns, reduced to 15 rows 32 columns
Cbc0012I Integer solution of -5.849972 found by RINS after 11089 iterations and 97 nodes (3.50 seconds)
Cbc0010I After 104 nodes, 1 on tree, -5.849972 best solution, best possible -10.799574 (3.85 seconds)
Cbc0010I After 146 nodes, 4 on tree, -5.849972 best solution, best possible -10.799574 (4.55 seconds)
Cbc0010I After 197 nodes, 8 on tree, -5.849972 best solution, best possible -10.799574 (5.26 seconds)
Cbc0001I Search completed - best objective -5.849972000000001, took 17466 iterations and 222 nodes (5.42 seconds)
Cbc0032I Strong branching done 2732 times (43332 iterations), fathomed 19 nodes and fixed 13 variables
Cbc0035I Maximum depth 21, 352 variables fixed on reduced cost
Total time (CPU seconds):       5.01   (Wallclock seconds):       5.44

