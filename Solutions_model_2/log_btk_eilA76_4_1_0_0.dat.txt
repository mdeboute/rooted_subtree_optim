Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 63 (-15) columns and 340 (-113) elements
Clp1000I sum of infeasibilities 0.000117069 - average 1.05468e-06, 58 fixed columns
Coin0506I Presolve 3 (-108) rows, 3 (-60) columns and 7 (-333) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 7394.6669
Clp0000I Optimal - objective value 7394.6669
Coin0511I After Postsolve, objective 7394.6669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26990497 - largest nonzero change 1.1054022e-05 ( 0.00094933281%) - largest zero change 2.9969789e-05
Clp0000I Optimal - objective value 7394.6669
Clp0000I Optimal - objective value 7394.6669
Clp0000I Optimal - objective value 7394.6669
Coin0511I After Postsolve, objective 7394.6669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7394.66689 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 111 rows, 63 columns (62 integer (62 of which binary)) and 340 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.362%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.625
Cbc0038I Pass   1: suminf.    0.54054 (2) obj. -7277.75 iterations 3
Cbc0038I Solution found of -5847.94
Cbc0038I Relaxing continuous gives -5847.94
Cbc0038I Rounding solution of -5850.39 is better than previous of -5847.94

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 63 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6004.82
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.54054 (2) obj. -7277.75 iterations 0
Cbc0038I Pass   3: suminf.    0.16013 (2) obj. -6004.82 iterations 1
Cbc0038I Pass   4: suminf.    1.29515 (7) obj. -6004.82 iterations 12
Cbc0038I Pass   5: suminf.    0.23676 (3) obj. -6004.82 iterations 8
Cbc0038I Pass   6: suminf.    0.18919 (2) obj. -6055.18 iterations 2
Cbc0038I Pass   7: suminf.    0.13778 (2) obj. -6004.82 iterations 1
Cbc0038I Pass   8: suminf.    0.67013 (4) obj. -6004.82 iterations 10
Cbc0038I Pass   9: suminf.    0.20711 (4) obj. -6004.82 iterations 7
Cbc0038I Pass  10: suminf.    0.97297 (2) obj. -6856.43 iterations 8
Cbc0038I Pass  11: suminf.    0.15775 (2) obj. -6004.82 iterations 1
Cbc0038I Pass  12: suminf.    1.01179 (5) obj. -6004.82 iterations 18
Cbc0038I Pass  13: suminf.    0.16270 (2) obj. -6004.82 iterations 9
Cbc0038I Pass  14: suminf.    0.72973 (2) obj. -6560.33 iterations 1
Cbc0038I Pass  15: suminf.    1.69956 (9) obj. -6004.82 iterations 19
Cbc0038I Pass  16: suminf.    0.89417 (6) obj. -6004.82 iterations 7
Cbc0038I Pass  17: suminf.    0.40987 (4) obj. -6004.82 iterations 7
Cbc0038I Pass  18: suminf.    0.19203 (3) obj. -6004.82 iterations 2
Cbc0038I Pass  19: suminf.    0.19203 (3) obj. -6004.82 iterations 0
Cbc0038I Pass  20: suminf.    0.87500 (3) obj. -6391.8 iterations 2
Cbc0038I Pass  21: suminf.    0.28887 (3) obj. -6004.82 iterations 1
Cbc0038I Pass  22: suminf.    1.26285 (7) obj. -6004.82 iterations 13
Cbc0038I Pass  23: suminf.    0.28224 (3) obj. -6004.82 iterations 11
Cbc0038I Pass  24: suminf.    0.77571 (3) obj. -6004.82 iterations 6
Cbc0038I Pass  25: suminf.    0.44788 (3) obj. -6004.82 iterations 1
Cbc0038I Pass  26: suminf.    0.62162 (2) obj. -6443.43 iterations 2
Cbc0038I Pass  27: suminf.    0.17391 (2) obj. -6004.82 iterations 1
Cbc0038I Pass  28: suminf.    1.20393 (5) obj. -6004.82 iterations 12
Cbc0038I Pass  29: suminf.    1.11245 (4) obj. -6004.82 iterations 3
Cbc0038I Pass  30: suminf.    0.64865 (2) obj. -6479.44 iterations 3
Cbc0038I Pass  31: suminf.    0.16419 (2) obj. -6004.82 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 63 columns, reduced to 39 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -5847.94 to -5962.75 (0.02 seconds)
Cbc0038I Round again with cutoff of -6282.79
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.54054 (2) obj. -7277.75 iterations 0
Cbc0038I Pass  32: suminf.    0.44386 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  33: suminf.    1.36157 (6) obj. -6282.79 iterations 13
Cbc0038I Pass  34: suminf.    1.35567 (7) obj. -6282.79 iterations 7
Cbc0038I Pass  35: suminf.    0.75676 (2) obj. -6611.73 iterations 5
Cbc0038I Pass  36: suminf.    0.42100 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  37: suminf.    0.88590 (4) obj. -6282.79 iterations 13
Cbc0038I Pass  38: suminf.    0.46487 (3) obj. -6282.79 iterations 9
Cbc0038I Pass  39: suminf.    0.97297 (2) obj. -6856.43 iterations 2
Cbc0038I Pass  40: suminf.    0.44149 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  41: suminf.    0.73981 (4) obj. -6282.79 iterations 9
Cbc0038I Pass  42: suminf.    0.67325 (3) obj. -6282.79 iterations 4
Cbc0038I Pass  43: suminf.    0.74045 (3) obj. -6282.79 iterations 2
Cbc0038I Pass  44: suminf.    1.08098 (5) obj. -6282.79 iterations 8
Cbc0038I Pass  45: suminf.    1.08098 (5) obj. -6282.79 iterations 1
Cbc0038I Pass  46: suminf.    0.75676 (2) obj. -6591.65 iterations 4
Cbc0038I Pass  47: suminf.    0.44149 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  48: suminf.    1.27168 (6) obj. -6282.79 iterations 16
Cbc0038I Pass  49: suminf.    0.69019 (3) obj. -6282.79 iterations 5
Cbc0038I Pass  50: suminf.    0.82468 (3) obj. -6282.79 iterations 2
Cbc0038I Pass  51: suminf.    1.89427 (6) obj. -6282.79 iterations 9
Cbc0038I Pass  52: suminf.    1.44542 (5) obj. -6282.79 iterations 5
Cbc0038I Pass  53: suminf.    0.56757 (2) obj. -6398.02 iterations 4
Cbc0038I Pass  54: suminf.    0.44995 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  55: suminf.    1.00683 (6) obj. -6282.79 iterations 19
Cbc0038I Pass  56: suminf.    0.67939 (4) obj. -6282.79 iterations 8
Cbc0038I Pass  57: suminf.    0.45946 (2) obj. -6306.37 iterations 3
Cbc0038I Pass  58: suminf.    0.43538 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  59: suminf.    1.92070 (6) obj. -6282.79 iterations 13
Cbc0038I Pass  60: suminf.    0.71834 (3) obj. -6282.79 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 63 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -5962.75 - took 0.02 seconds
Cbc0012I Integer solution of -5962.7535 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -6003.5187 found by DiveCoefficient after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 111 rows 63 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -6005.484 found by DiveCoefficient after 47 iterations and 0 nodes (0.04 seconds)
Cbc0031I 8 added rows had average density of 5.25
Cbc0013I At root node, 8 cuts changed objective from -7394.6669 to -6005.484 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 62 row cuts average 2.7 elements, 31 column cuts (31 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 25 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -6005.484039999999, took 47 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-64) rows, 103 (-49) columns and 1550 (-1753) elements
Clp1000I sum of infeasibilities 0 - average 0, 100 fixed columns
Coin0506I Presolve 3 (-87) rows, 3 (-100) columns and 7 (-1543) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 7348.6669
Clp0000I Optimal - objective value 7348.6669
Coin0511I After Postsolve, objective 7348.6669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8397607 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 7429.8883
Clp0000I Optimal - objective value 7429.8883
Clp0000I Optimal - objective value 7429.8883
Coin0511I After Postsolve, objective 7429.8883, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7429.888309 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 103 columns (103 integer (103 of which binary)) and 1552 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.768%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 1.80252
Cbc0038I Pass   1: suminf.    1.39069 (17) obj. -6774.39 iterations 4
Cbc0038I Pass   2: suminf.    0.56616 (16) obj. -5874.82 iterations 2
Cbc0038I Solution found of -5847.94
Cbc0038I Rounding solution of -5850.39 is better than previous of -5847.94

Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -6007.39
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.39069 (17) obj. -6774.39 iterations 0
Cbc0038I Pass   4: suminf.    0.68767 (17) obj. -6007.39 iterations 2
Cbc0038I Pass   5: suminf.    0.76321 (8) obj. -6757.75 iterations 12
Cbc0038I Pass   6: suminf.    0.25089 (8) obj. -6007.39 iterations 1
Cbc0038I Pass   7: suminf.    0.54054 (2) obj. -7277.75 iterations 9
Cbc0038I Pass   8: suminf.    0.16276 (2) obj. -6007.39 iterations 1
Cbc0038I Pass   9: suminf.    0.59095 (9) obj. -6007.39 iterations 22
Cbc0038I Pass  10: suminf.    0.43548 (5) obj. -6007.39 iterations 9
Cbc0038I Pass  11: suminf.    0.59459 (2) obj. -6432.81 iterations 6
Cbc0038I Pass  12: suminf.    0.16035 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  13: suminf.    1.10319 (16) obj. -6007.39 iterations 35
Cbc0038I Pass  14: suminf.    0.99509 (13) obj. -6007.39 iterations 11
Cbc0038I Pass  15: suminf.    1.00000 (2) obj. -6813.77 iterations 14
Cbc0038I Pass  16: suminf.    0.17690 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  17: suminf.    0.54401 (12) obj. -6007.39 iterations 18
Cbc0038I Pass  18: suminf.    0.38075 (6) obj. -6007.39 iterations 5
Cbc0038I Pass  19: suminf.    0.27027 (2) obj. -6109.45 iterations 6
Cbc0038I Pass  20: suminf.    0.16609 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  21: suminf.    1.52961 (10) obj. -6007.39 iterations 15
Cbc0038I Pass  22: suminf.    1.35275 (9) obj. -6007.39 iterations 5
Cbc0038I Pass  23: suminf.    0.70270 (2) obj. -6526.08 iterations 8
Cbc0038I Pass  24: suminf.    0.17326 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  25: suminf.    1.78657 (14) obj. -6007.39 iterations 16
Cbc0038I Pass  26: suminf.    0.34184 (5) obj. -6007.39 iterations 5
Cbc0038I Pass  27: suminf.    0.48649 (2) obj. -6300.73 iterations 5
Cbc0038I Pass  28: suminf.    0.18707 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  29: suminf.    1.43211 (11) obj. -6007.39 iterations 18
Cbc0038I Pass  30: suminf.    0.88063 (10) obj. -6007.39 iterations 2
Cbc0038I Pass  31: suminf.    0.71875 (3) obj. -6280.91 iterations 10
Cbc0038I Pass  32: suminf.    0.30447 (3) obj. -6007.39 iterations 1
Cbc0038I Rounding solution of -5851.08 is better than previous of -5850.39

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -5851.08 to -5863.2 (0.05 seconds)
Cbc0038I Round again with cutoff of -6289.99
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.39069 (17) obj. -6774.39 iterations 0
Cbc0038I Pass  33: suminf.    0.94670 (17) obj. -6289.99 iterations 2
Cbc0038I Pass  34: suminf.    0.54054 (2) obj. -7277.75 iterations 18
Cbc0038I Pass  35: suminf.    0.45122 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  36: suminf.    0.71338 (14) obj. -6289.99 iterations 24
Cbc0038I Pass  37: suminf.    0.61651 (4) obj. -6289.99 iterations 17
Cbc0038I Pass  38: suminf.    0.48649 (2) obj. -6328.43 iterations 4
Cbc0038I Pass  39: suminf.    0.44726 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  40: suminf.    0.84640 (4) obj. -6289.99 iterations 18
Cbc0038I Pass  41: suminf.    0.55919 (3) obj. -6289.99 iterations 8
Cbc0038I Pass  42: suminf.    0.59459 (2) obj. -6424.81 iterations 3
Cbc0038I Pass  43: suminf.    0.45698 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  44: suminf.    0.90735 (13) obj. -6289.99 iterations 19
Cbc0038I Pass  45: suminf.    0.63584 (5) obj. -6289.99 iterations 10
Cbc0038I Pass  46: suminf.    0.59459 (2) obj. -6416.81 iterations 5
Cbc0038I Pass  47: suminf.    0.46515 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  48: suminf.    1.46967 (9) obj. -6289.99 iterations 17
Cbc0038I Pass  49: suminf.    1.46967 (9) obj. -6289.99 iterations 1
Cbc0038I Pass  50: suminf.    1.34375 (3) obj. -6700.62 iterations 9
Cbc0038I Pass  51: suminf.    0.72181 (3) obj. -6289.99 iterations 1
Cbc0038I Pass  52: suminf.    0.56757 (2) obj. -6390.81 iterations 3
Cbc0038I Pass  53: suminf.    0.46467 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  54: suminf.    1.43201 (16) obj. -6289.99 iterations 24
Cbc0038I Pass  55: suminf.    1.43201 (16) obj. -6289.99 iterations 1
Cbc0038I Pass  56: suminf.    1.43750 (3) obj. -6843.03 iterations 16
Cbc0038I Pass  57: suminf.    0.75676 (2) obj. -6574.13 iterations 1
Cbc0038I Pass  58: suminf.    0.46673 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  59: suminf.    1.00095 (7) obj. -6289.99 iterations 15
Cbc0038I Pass  60: suminf.    1.00095 (7) obj. -6289.99 iterations 4
Cbc0038I Pass  61: suminf.    0.70270 (2) obj. -6526.08 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -5863.2 - took 0.04 seconds
Cbc0012I Integer solution of -5863.1989 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0012I Integer solution of -5919.0097 found by DiveCoefficient after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 90 rows 103 columns, reduced to 5 rows 5 columns
Cbc0012I Integer solution of -5940.3509 found by RINS after 0 iterations and 0 nodes (0.07 seconds)
Cbc0012I Integer solution of -5949.1312 found by DiveCoefficient after 1300 iterations and 0 nodes (0.32 seconds)
Cbc0031I 29 added rows had average density of 25.517241
Cbc0013I At root node, 29 cuts changed objective from -7413.338 to -6022.3223 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1640 row cuts average 5.4 elements, 4 column cuts (4 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 549 row cuts average 66.9 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 282 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0012I Integer solution of -5993.5187 found by DiveCoefficient after 1365 iterations and 2 nodes (0.34 seconds)
Cbc0012I Integer solution of -5994.5187 found by DiveCoefficient after 1373 iterations and 2 nodes (0.35 seconds)
Cbc0012I Integer solution of -5999.5187 found by DiveCoefficient after 1401 iterations and 3 nodes (0.35 seconds)
Cbc0016I Integer solution of -6001.484 found by strong branching after 1465 iterations and 4 nodes (0.36 seconds)
Cbc0012I Integer solution of -6005.484 found by rounding after 1505 iterations and 7 nodes (0.36 seconds)
Cbc0001I Search completed - best objective -6005.484039999999, took 1558 iterations and 8 nodes (0.36 seconds)
Cbc0032I Strong branching done 128 times (1339 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 61 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 63 (-15) columns and 340 (-113) elements
Clp1000I sum of infeasibilities 0.000117069 - average 1.05468e-06, 58 fixed columns
Coin0506I Presolve 3 (-108) rows, 3 (-60) columns and 7 (-333) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 7394.6669
Clp0000I Optimal - objective value 7394.6669
Coin0511I After Postsolve, objective 7394.6669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26990497 - largest nonzero change 1.1054022e-05 ( 0.00094933281%) - largest zero change 2.9969789e-05
Clp0000I Optimal - objective value 7394.6669
Clp0000I Optimal - objective value 7394.6669
Clp0000I Optimal - objective value 7394.6669
Coin0511I After Postsolve, objective 7394.6669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7394.66689 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 111 rows, 63 columns (62 integer (62 of which binary)) and 340 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.362%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.625
Cbc0038I Pass   1: suminf.    0.54054 (2) obj. -7277.75 iterations 3
Cbc0038I Solution found of -5847.94
Cbc0038I Relaxing continuous gives -5847.94
Cbc0038I Rounding solution of -5850.39 is better than previous of -5847.94

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 63 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6004.82
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.54054 (2) obj. -7277.75 iterations 0
Cbc0038I Pass   3: suminf.    0.16013 (2) obj. -6004.82 iterations 1
Cbc0038I Pass   4: suminf.    1.29515 (7) obj. -6004.82 iterations 12
Cbc0038I Pass   5: suminf.    0.23676 (3) obj. -6004.82 iterations 8
Cbc0038I Pass   6: suminf.    0.18919 (2) obj. -6055.18 iterations 2
Cbc0038I Pass   7: suminf.    0.13778 (2) obj. -6004.82 iterations 1
Cbc0038I Pass   8: suminf.    0.67013 (4) obj. -6004.82 iterations 10
Cbc0038I Pass   9: suminf.    0.20711 (4) obj. -6004.82 iterations 7
Cbc0038I Pass  10: suminf.    0.97297 (2) obj. -6856.43 iterations 8
Cbc0038I Pass  11: suminf.    0.15775 (2) obj. -6004.82 iterations 1
Cbc0038I Pass  12: suminf.    1.01179 (5) obj. -6004.82 iterations 18
Cbc0038I Pass  13: suminf.    0.16270 (2) obj. -6004.82 iterations 9
Cbc0038I Pass  14: suminf.    0.72973 (2) obj. -6560.33 iterations 1
Cbc0038I Pass  15: suminf.    1.69956 (9) obj. -6004.82 iterations 19
Cbc0038I Pass  16: suminf.    0.89417 (6) obj. -6004.82 iterations 7
Cbc0038I Pass  17: suminf.    0.40987 (4) obj. -6004.82 iterations 7
Cbc0038I Pass  18: suminf.    0.19203 (3) obj. -6004.82 iterations 2
Cbc0038I Pass  19: suminf.    0.19203 (3) obj. -6004.82 iterations 0
Cbc0038I Pass  20: suminf.    0.87500 (3) obj. -6391.8 iterations 2
Cbc0038I Pass  21: suminf.    0.28887 (3) obj. -6004.82 iterations 1
Cbc0038I Pass  22: suminf.    1.26285 (7) obj. -6004.82 iterations 13
Cbc0038I Pass  23: suminf.    0.28224 (3) obj. -6004.82 iterations 11
Cbc0038I Pass  24: suminf.    0.77571 (3) obj. -6004.82 iterations 6
Cbc0038I Pass  25: suminf.    0.44788 (3) obj. -6004.82 iterations 1
Cbc0038I Pass  26: suminf.    0.62162 (2) obj. -6443.43 iterations 2
Cbc0038I Pass  27: suminf.    0.17391 (2) obj. -6004.82 iterations 1
Cbc0038I Pass  28: suminf.    1.20393 (5) obj. -6004.82 iterations 12
Cbc0038I Pass  29: suminf.    1.11245 (4) obj. -6004.82 iterations 3
Cbc0038I Pass  30: suminf.    0.64865 (2) obj. -6479.44 iterations 3
Cbc0038I Pass  31: suminf.    0.16419 (2) obj. -6004.82 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 63 columns, reduced to 39 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -5847.94 to -5962.75 (0.02 seconds)
Cbc0038I Round again with cutoff of -6282.79
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.54054 (2) obj. -7277.75 iterations 0
Cbc0038I Pass  32: suminf.    0.44386 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  33: suminf.    1.36157 (6) obj. -6282.79 iterations 13
Cbc0038I Pass  34: suminf.    1.35567 (7) obj. -6282.79 iterations 7
Cbc0038I Pass  35: suminf.    0.75676 (2) obj. -6611.73 iterations 5
Cbc0038I Pass  36: suminf.    0.42100 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  37: suminf.    0.88590 (4) obj. -6282.79 iterations 13
Cbc0038I Pass  38: suminf.    0.46487 (3) obj. -6282.79 iterations 9
Cbc0038I Pass  39: suminf.    0.97297 (2) obj. -6856.43 iterations 2
Cbc0038I Pass  40: suminf.    0.44149 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  41: suminf.    0.73981 (4) obj. -6282.79 iterations 9
Cbc0038I Pass  42: suminf.    0.67325 (3) obj. -6282.79 iterations 4
Cbc0038I Pass  43: suminf.    0.74045 (3) obj. -6282.79 iterations 2
Cbc0038I Pass  44: suminf.    1.08098 (5) obj. -6282.79 iterations 8
Cbc0038I Pass  45: suminf.    1.08098 (5) obj. -6282.79 iterations 1
Cbc0038I Pass  46: suminf.    0.75676 (2) obj. -6591.65 iterations 4
Cbc0038I Pass  47: suminf.    0.44149 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  48: suminf.    1.27168 (6) obj. -6282.79 iterations 16
Cbc0038I Pass  49: suminf.    0.69019 (3) obj. -6282.79 iterations 5
Cbc0038I Pass  50: suminf.    0.82468 (3) obj. -6282.79 iterations 2
Cbc0038I Pass  51: suminf.    1.89427 (6) obj. -6282.79 iterations 9
Cbc0038I Pass  52: suminf.    1.44542 (5) obj. -6282.79 iterations 5
Cbc0038I Pass  53: suminf.    0.56757 (2) obj. -6398.02 iterations 4
Cbc0038I Pass  54: suminf.    0.44995 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  55: suminf.    1.00683 (6) obj. -6282.79 iterations 19
Cbc0038I Pass  56: suminf.    0.67939 (4) obj. -6282.79 iterations 8
Cbc0038I Pass  57: suminf.    0.45946 (2) obj. -6306.37 iterations 3
Cbc0038I Pass  58: suminf.    0.43538 (2) obj. -6282.79 iterations 1
Cbc0038I Pass  59: suminf.    1.92070 (6) obj. -6282.79 iterations 13
Cbc0038I Pass  60: suminf.    0.71834 (3) obj. -6282.79 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 63 columns, reduced to 23 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -5962.75 - took 0.02 seconds
Cbc0012I Integer solution of -5962.7535 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -6003.5187 found by DiveCoefficient after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 111 rows 63 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -6005.484 found by DiveCoefficient after 47 iterations and 0 nodes (0.03 seconds)
Cbc0031I 8 added rows had average density of 5.25
Cbc0013I At root node, 8 cuts changed objective from -7394.6669 to -6005.484 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 62 row cuts average 2.7 elements, 31 column cuts (31 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 25 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -6005.484039999999, took 47 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-65) rows, 103 (-50) columns and 1550 (-1754) elements
Clp1000I sum of infeasibilities 0 - average 0, 100 fixed columns
Coin0506I Presolve 3 (-87) rows, 3 (-100) columns and 7 (-1543) elements
Clp0029I End of values pass after 3 iterations
Clp0000I Optimal - objective value 7348.6669
Clp0000I Optimal - objective value 7348.6669
Coin0511I After Postsolve, objective 7348.6669, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8397607 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 7429.8883
Clp0000I Optimal - objective value 7429.8883
Clp0000I Optimal - objective value 7429.8883
Coin0511I After Postsolve, objective 7429.8883, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7429.888309 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 103 columns (103 integer (103 of which binary)) and 1552 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.768%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 1.80252
Cbc0038I Pass   1: suminf.    1.39069 (17) obj. -6774.39 iterations 4
Cbc0038I Pass   2: suminf.    0.56616 (16) obj. -5874.82 iterations 2
Cbc0038I Solution found of -5847.94
Cbc0038I Rounding solution of -5850.39 is better than previous of -5847.94

Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6007.39
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.39069 (17) obj. -6774.39 iterations 0
Cbc0038I Pass   4: suminf.    0.68767 (17) obj. -6007.39 iterations 2
Cbc0038I Pass   5: suminf.    0.76321 (8) obj. -6757.75 iterations 12
Cbc0038I Pass   6: suminf.    0.25089 (8) obj. -6007.39 iterations 1
Cbc0038I Pass   7: suminf.    0.54054 (2) obj. -7277.75 iterations 9
Cbc0038I Pass   8: suminf.    0.16276 (2) obj. -6007.39 iterations 1
Cbc0038I Pass   9: suminf.    0.59095 (9) obj. -6007.39 iterations 22
Cbc0038I Pass  10: suminf.    0.43548 (5) obj. -6007.39 iterations 9
Cbc0038I Pass  11: suminf.    0.59459 (2) obj. -6432.81 iterations 6
Cbc0038I Pass  12: suminf.    0.16035 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  13: suminf.    1.10319 (16) obj. -6007.39 iterations 35
Cbc0038I Pass  14: suminf.    0.99509 (13) obj. -6007.39 iterations 11
Cbc0038I Pass  15: suminf.    1.00000 (2) obj. -6813.77 iterations 14
Cbc0038I Pass  16: suminf.    0.17690 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  17: suminf.    0.54401 (12) obj. -6007.39 iterations 18
Cbc0038I Pass  18: suminf.    0.38075 (6) obj. -6007.39 iterations 5
Cbc0038I Pass  19: suminf.    0.27027 (2) obj. -6109.45 iterations 6
Cbc0038I Pass  20: suminf.    0.16609 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  21: suminf.    1.52961 (10) obj. -6007.39 iterations 15
Cbc0038I Pass  22: suminf.    1.35275 (9) obj. -6007.39 iterations 5
Cbc0038I Pass  23: suminf.    0.70270 (2) obj. -6526.08 iterations 8
Cbc0038I Pass  24: suminf.    0.17326 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  25: suminf.    1.78657 (14) obj. -6007.39 iterations 16
Cbc0038I Pass  26: suminf.    0.34184 (5) obj. -6007.39 iterations 5
Cbc0038I Pass  27: suminf.    0.48649 (2) obj. -6300.73 iterations 5
Cbc0038I Pass  28: suminf.    0.18707 (2) obj. -6007.39 iterations 1
Cbc0038I Pass  29: suminf.    1.43211 (11) obj. -6007.39 iterations 18
Cbc0038I Pass  30: suminf.    0.88063 (10) obj. -6007.39 iterations 2
Cbc0038I Pass  31: suminf.    0.71875 (3) obj. -6280.91 iterations 10
Cbc0038I Pass  32: suminf.    0.30447 (3) obj. -6007.39 iterations 1
Cbc0038I Rounding solution of -5851.08 is better than previous of -5850.39

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -5851.08 to -5863.2 (0.04 seconds)
Cbc0038I Round again with cutoff of -6289.99
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.39069 (17) obj. -6774.39 iterations 0
Cbc0038I Pass  33: suminf.    0.94670 (17) obj. -6289.99 iterations 2
Cbc0038I Pass  34: suminf.    0.54054 (2) obj. -7277.75 iterations 18
Cbc0038I Pass  35: suminf.    0.45122 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  36: suminf.    0.71338 (14) obj. -6289.99 iterations 24
Cbc0038I Pass  37: suminf.    0.61651 (4) obj. -6289.99 iterations 17
Cbc0038I Pass  38: suminf.    0.48649 (2) obj. -6328.43 iterations 4
Cbc0038I Pass  39: suminf.    0.44726 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  40: suminf.    0.84640 (4) obj. -6289.99 iterations 18
Cbc0038I Pass  41: suminf.    0.55919 (3) obj. -6289.99 iterations 8
Cbc0038I Pass  42: suminf.    0.59459 (2) obj. -6424.81 iterations 3
Cbc0038I Pass  43: suminf.    0.45698 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  44: suminf.    0.90735 (13) obj. -6289.99 iterations 19
Cbc0038I Pass  45: suminf.    0.63584 (5) obj. -6289.99 iterations 10
Cbc0038I Pass  46: suminf.    0.59459 (2) obj. -6416.81 iterations 5
Cbc0038I Pass  47: suminf.    0.46515 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  48: suminf.    1.46967 (9) obj. -6289.99 iterations 17
Cbc0038I Pass  49: suminf.    1.46967 (9) obj. -6289.99 iterations 1
Cbc0038I Pass  50: suminf.    1.34375 (3) obj. -6700.62 iterations 9
Cbc0038I Pass  51: suminf.    0.72181 (3) obj. -6289.99 iterations 1
Cbc0038I Pass  52: suminf.    0.56757 (2) obj. -6390.81 iterations 3
Cbc0038I Pass  53: suminf.    0.46467 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  54: suminf.    1.43201 (16) obj. -6289.99 iterations 24
Cbc0038I Pass  55: suminf.    1.43201 (16) obj. -6289.99 iterations 1
Cbc0038I Pass  56: suminf.    1.43750 (3) obj. -6843.03 iterations 16
Cbc0038I Pass  57: suminf.    0.75676 (2) obj. -6574.13 iterations 1
Cbc0038I Pass  58: suminf.    0.46673 (2) obj. -6289.99 iterations 1
Cbc0038I Pass  59: suminf.    1.00095 (7) obj. -6289.99 iterations 15
Cbc0038I Pass  60: suminf.    1.00095 (7) obj. -6289.99 iterations 4
Cbc0038I Pass  61: suminf.    0.70270 (2) obj. -6526.08 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 103 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -5863.2 - took 0.04 seconds
Cbc0012I Integer solution of -5863.1989 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0012I Integer solution of -5919.0097 found by DiveCoefficient after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 90 rows 103 columns, reduced to 5 rows 5 columns
Cbc0012I Integer solution of -5940.3509 found by RINS after 0 iterations and 0 nodes (0.06 seconds)
Cbc0012I Integer solution of -5949.1312 found by DiveCoefficient after 1300 iterations and 0 nodes (0.31 seconds)
Cbc0031I 29 added rows had average density of 25.517241
Cbc0013I At root node, 29 cuts changed objective from -7413.338 to -6022.3223 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1640 row cuts average 5.4 elements, 4 column cuts (4 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 549 row cuts average 66.9 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 282 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0012I Integer solution of -5993.5187 found by DiveCoefficient after 1365 iterations and 2 nodes (0.34 seconds)
Cbc0012I Integer solution of -5994.5187 found by DiveCoefficient after 1373 iterations and 2 nodes (0.34 seconds)
Cbc0012I Integer solution of -5999.5187 found by DiveCoefficient after 1401 iterations and 3 nodes (0.35 seconds)
Cbc0016I Integer solution of -6001.484 found by strong branching after 1465 iterations and 4 nodes (0.36 seconds)
Cbc0012I Integer solution of -6005.484 found by rounding after 1505 iterations and 7 nodes (0.36 seconds)
Cbc0001I Search completed - best objective -6005.484039999999, took 1558 iterations and 8 nodes (0.36 seconds)
Cbc0032I Strong branching done 128 times (1339 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 61 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.37

