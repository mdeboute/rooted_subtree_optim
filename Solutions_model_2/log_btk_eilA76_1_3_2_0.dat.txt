Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 65 (-13) columns and 353 (-100) elements
Clp1000I sum of infeasibilities 2.86429e-05 - average 2.49069e-07, 16 fixed columns
Coin0506I Presolve 80 (-35) rows, 46 (-19) columns and 245 (-108) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 52.671452
Clp0000I Optimal - objective value 52.671452
Coin0511I After Postsolve, objective 52.671452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26015582 - largest nonzero change 0 ( 0%) - largest zero change 2.7558357e-05
Clp0000I Optimal - objective value 52.671452
Clp0000I Optimal - objective value 52.671452
Clp0000I Optimal - objective value 52.671452
Coin0511I After Postsolve, objective 52.671452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.67145193 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 65 columns (64 integer (64 of which binary)) and 356 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.88015
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.8517 iterations 39
Cbc0038I Solution found of -7.8517
Cbc0038I Relaxing continuous gives -7.8517
Cbc0038I Rounding solution of -8.94749 is better than previous of -7.8517

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.94749 to -23.9171 (0.04 seconds)
Cbc0038I Round again with cutoff of -26.7927
Cbc0038I Pass   2: suminf.    1.89450 (9) obj. -26.7927 iterations 14
Cbc0038I Pass   3: suminf.    1.56000 (6) obj. -26.7927 iterations 15
Cbc0038I Pass   4: suminf.    1.32149 (7) obj. -26.7927 iterations 3
Cbc0038I Pass   5: suminf.    1.57620 (6) obj. -26.7927 iterations 12
Cbc0038I Pass   6: suminf.    1.57620 (6) obj. -26.7927 iterations 0
Cbc0038I Pass   7: suminf.    1.38901 (5) obj. -26.7927 iterations 8
Cbc0038I Pass   8: suminf.    1.38631 (7) obj. -26.7927 iterations 2
Cbc0038I Pass   9: suminf.    1.61336 (6) obj. -26.7927 iterations 11
Cbc0038I Pass  10: suminf.    1.17450 (5) obj. -26.7927 iterations 9
Cbc0038I Pass  11: suminf.    1.02991 (4) obj. -26.7927 iterations 6
Cbc0038I Pass  12: suminf.    0.84818 (4) obj. -26.7927 iterations 2
Cbc0038I Pass  13: suminf.    1.58363 (6) obj. -26.7927 iterations 10
Cbc0038I Pass  14: suminf.    1.57620 (6) obj. -26.7927 iterations 2
Cbc0038I Pass  15: suminf.    1.38901 (5) obj. -26.7927 iterations 8
Cbc0038I Pass  16: suminf.    1.38631 (7) obj. -26.7927 iterations 2
Cbc0038I Pass  17: suminf.    1.61336 (6) obj. -26.7927 iterations 11
Cbc0038I Pass  18: suminf.    1.17450 (5) obj. -26.7927 iterations 9
Cbc0038I Pass  19: suminf.    1.02991 (4) obj. -26.7927 iterations 6
Cbc0038I Pass  20: suminf.    0.84818 (4) obj. -26.7927 iterations 2
Cbc0038I Pass  21: suminf.    1.58363 (6) obj. -26.7927 iterations 10
Cbc0038I Pass  22: suminf.    1.57620 (6) obj. -26.7927 iterations 2
Cbc0038I Pass  23: suminf.    1.38901 (5) obj. -26.7927 iterations 8
Cbc0038I Pass  24: suminf.    1.38631 (7) obj. -26.7927 iterations 2
Cbc0038I Pass  25: suminf.    1.61336 (6) obj. -26.7927 iterations 11
Cbc0038I Pass  26: suminf.    1.17450 (5) obj. -26.7927 iterations 9
Cbc0038I Pass  27: suminf.    1.02991 (4) obj. -26.7927 iterations 6
Cbc0038I Pass  28: suminf.    0.84818 (4) obj. -26.7927 iterations 2
Cbc0038I Pass  29: suminf.    1.58363 (6) obj. -26.7927 iterations 10
Cbc0038I Pass  30: suminf.    1.57620 (6) obj. -26.7927 iterations 2
Cbc0038I Pass  31: suminf.    1.38901 (5) obj. -26.7927 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.9171 - took 0.06 seconds
Cbc0012I Integer solution of -23.91715 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 115 rows 65 columns, reduced to 62 rows 37 columns
Cbc0031I 24 added rows had average density of 37.25
Cbc0013I At root node, 24 cuts changed objective from -52.671452 to -41.653603 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8376 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1734 row cuts average 64.3 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 87 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 53.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 8 nodes, 7 on tree, -23.91715 best solution, best possible -41.653603 (0.68 seconds)
Cbc0038I Full problem 115 rows 65 columns, reduced to 12 rows 11 columns
Cbc0001I Search completed - best objective -23.91715, took 7667 iterations and 52 nodes (0.83 seconds)
Cbc0032I Strong branching done 744 times (11712 iterations), fathomed 2 nodes and fixed 44 variables
Cbc0035I Maximum depth 10, 176 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.84

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 115 (-37) columns and 1915 (-1388) elements
Clp1000I sum of infeasibilities 5.47785e-07 - average 5.37044e-09, 65 fixed columns
Coin0506I Presolve 51 (-51) rows, 50 (-65) columns and 303 (-1612) elements
Clp0006I 0  Obj 270.71184 Dual inf 2.608519 (50)
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 292.65034
Clp0000I Optimal - objective value 292.65034
Coin0511I After Postsolve, objective 292.65034, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 292.65034 Dual inf 100.65628 (5)
Clp0014I Perturbing problem by 0.001% of 1.7579674 - largest nonzero change 2.4970008e-05 ( 0.0015420975%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 295.87534
Clp0000I Optimal - objective value 295.87534
Clp0000I Optimal - objective value 295.87534
Coin0511I After Postsolve, objective 295.87534, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 295.8753366 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 115 columns (115 integer (115 of which binary)) and 1925 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.757%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 7.2005
Cbc0038I Pass   1: suminf.    1.19091 (29) obj. -41.5605 iterations 11
Cbc0038I Pass   2: suminf.    1.19091 (29) obj. -41.5605 iterations 0
Cbc0038I Pass   3: suminf.    0.19400 (7) obj. -16.7349 iterations 22
Cbc0038I Solution found of -6.04421
Cbc0038I Rounding solution of -38.9202 is better than previous of -6.04421

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -38.9202 to -179.044 (0.04 seconds)
Cbc0038I Round again with cutoff of -188.372
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.51736 (40) obj. -188.372 iterations 1
Cbc0038I Pass   5: suminf.    4.51736 (40) obj. -188.372 iterations 0
Cbc0038I Pass   6: suminf.    1.23422 (13) obj. -188.372 iterations 34
Cbc0038I Pass   7: suminf.    1.23422 (13) obj. -188.372 iterations 0
Cbc0038I Pass   8: suminf.    0.43750 (3) obj. -212.379 iterations 15
Cbc0038I Pass   9: suminf.    0.15547 (1) obj. -188.372 iterations 3
Cbc0038I Pass  10: suminf.    0.15547 (1) obj. -188.372 iterations 0
Cbc0038I Pass  11: suminf.    0.34615 (2) obj. -211.47 iterations 2
Cbc0038I Pass  12: suminf.    1.73642 (12) obj. -188.372 iterations 22
Cbc0038I Pass  13: suminf.    1.06165 (10) obj. -188.372 iterations 10
Cbc0038I Pass  14: suminf.    0.15731 (2) obj. -188.372 iterations 10
Cbc0038I Pass  15: suminf.    0.15269 (1) obj. -188.372 iterations 1
Cbc0038I Pass  16: suminf.    3.95531 (17) obj. -188.372 iterations 25
Cbc0038I Pass  17: suminf.    2.39464 (11) obj. -195.754 iterations 13
Cbc0038I Pass  18: suminf.    1.89464 (10) obj. -195.254 iterations 1
Cbc0038I Pass  19: suminf.    0.15547 (1) obj. -188.372 iterations 11
Cbc0038I Pass  20: suminf.    0.34615 (2) obj. -211.47 iterations 2
Cbc0038I Pass  21: suminf.    0.15547 (1) obj. -188.372 iterations 2
Cbc0038I Pass  22: suminf.    2.83578 (15) obj. -188.372 iterations 21
Cbc0038I Pass  23: suminf.    2.20760 (13) obj. -188.372 iterations 6
Cbc0038I Pass  24: suminf.    1.82127 (11) obj. -197.14 iterations 2
Cbc0038I Pass  25: suminf.    0.03254 (1) obj. -188.372 iterations 12
Cbc0038I Pass  26: suminf.    0.24260 (2) obj. -196.952 iterations 2
Cbc0038I Pass  27: suminf.    1.65442 (8) obj. -188.372 iterations 16
Cbc0038I Pass  28: suminf.    1.65442 (8) obj. -188.372 iterations 1
Cbc0038I Pass  29: suminf.    0.04208 (1) obj. -188.372 iterations 10
Cbc0038I Pass  30: suminf.    0.04208 (1) obj. -188.372 iterations 0
Cbc0038I Pass  31: suminf.    0.09091 (1) obj. -191.302 iterations 2
Cbc0038I Pass  32: suminf.    1.12367 (8) obj. -188.372 iterations 11
Cbc0038I Pass  33: suminf.    0.62603 (6) obj. -193.956 iterations 4
Cbc0038I Rounding solution of -186.42 is better than previous of -179.044

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -186.42 to -186.498 (0.06 seconds)
Cbc0038I Round again with cutoff of -205.163
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.68804 (40) obj. -205.163 iterations 0
Cbc0038I Pass  34: suminf.    4.68804 (40) obj. -205.163 iterations 0
Cbc0038I Pass  35: suminf.    1.67378 (16) obj. -205.163 iterations 33
Cbc0038I Pass  36: suminf.    0.21212 (1) obj. -222.514 iterations 18
Cbc0038I Pass  37: suminf.    0.49870 (1) obj. -205.163 iterations 1
Cbc0038I Pass  38: suminf.    2.16757 (11) obj. -205.163 iterations 22
Cbc0038I Pass  39: suminf.    1.63265 (9) obj. -205.163 iterations 7
Cbc0038I Pass  40: suminf.    0.88738 (2) obj. -205.163 iterations 12
Cbc0038I Pass  41: suminf.    0.43011 (1) obj. -205.163 iterations 4
Cbc0038I Pass  42: suminf.    0.36364 (1) obj. -217.538 iterations 2
Cbc0038I Pass  43: suminf.    1.91749 (10) obj. -205.163 iterations 16
Cbc0038I Pass  44: suminf.    1.56453 (9) obj. -205.163 iterations 6
Cbc0038I Pass  45: suminf.    0.57039 (2) obj. -205.163 iterations 12
Cbc0038I Pass  46: suminf.    0.57039 (2) obj. -205.163 iterations 2
Cbc0038I Pass  47: suminf.    1.92137 (9) obj. -205.163 iterations 11
Cbc0038I Pass  48: suminf.    1.75297 (8) obj. -205.163 iterations 5
Cbc0038I Pass  49: suminf.    0.56648 (2) obj. -205.163 iterations 12
Cbc0038I Pass  50: suminf.    0.56648 (2) obj. -205.163 iterations 2
Cbc0038I Pass  51: suminf.    0.36364 (1) obj. -217.538 iterations 6
Cbc0038I Pass  52: suminf.    0.43011 (1) obj. -205.163 iterations 1
Cbc0038I Pass  53: suminf.    2.60336 (12) obj. -205.163 iterations 17
Cbc0038I Pass  54: suminf.    1.76029 (9) obj. -205.163 iterations 10
Cbc0038I Pass  55: suminf.    0.30492 (2) obj. -205.163 iterations 11
Cbc0038I Pass  56: suminf.    0.30492 (2) obj. -205.163 iterations 1
Cbc0038I Pass  57: suminf.    0.36364 (1) obj. -217.538 iterations 6
Cbc0038I Pass  58: suminf.    0.43011 (1) obj. -205.163 iterations 1
Cbc0038I Pass  59: suminf.    2.65841 (13) obj. -205.163 iterations 28
Cbc0038I Pass  60: suminf.    1.88794 (11) obj. -205.163 iterations 8
Cbc0038I Pass  61: suminf.    0.21212 (1) obj. -222.514 iterations 12
Cbc0038I Pass  62: suminf.    0.49870 (1) obj. -205.163 iterations 1
Cbc0038I Rounding solution of -186.963 is better than previous of -186.498

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 3 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -186.963 to -190.302 (0.08 seconds)
Cbc0038I Round again with cutoff of -225.311
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  62: suminf.    5.43698 (40) obj. -225.311 iterations 1
Cbc0038I Pass  63: suminf.    5.43698 (40) obj. -225.311 iterations 0
Cbc0038I Pass  64: suminf.    2.72210 (25) obj. -238.369 iterations 19
Cbc0038I Pass  65: suminf.    1.13009 (9) obj. -225.311 iterations 17
Cbc0038I Pass  66: suminf.    1.10202 (10) obj. -225.311 iterations 1
Cbc0038I Pass  67: suminf.    0.39346 (2) obj. -225.311 iterations 10
Cbc0038I Pass  68: suminf.    0.39346 (2) obj. -225.311 iterations 0
Cbc0038I Pass  69: suminf.    0.52294 (2) obj. -225.311 iterations 6
Cbc0038I Pass  70: suminf.    0.52294 (2) obj. -225.311 iterations 0
Cbc0038I Pass  71: suminf.    0.65550 (2) obj. -225.311 iterations 3
Cbc0038I Pass  72: suminf.    0.61212 (2) obj. -227.914 iterations 2
Cbc0038I Pass  73: suminf.    2.94943 (13) obj. -225.311 iterations 20
Cbc0038I Pass  74: suminf.    2.36610 (12) obj. -225.311 iterations 7
Cbc0038I Pass  75: suminf.    2.36610 (12) obj. -225.311 iterations 1
Cbc0038I Pass  76: suminf.    0.52294 (2) obj. -225.311 iterations 21
Cbc0038I Pass  77: suminf.    0.65550 (2) obj. -225.311 iterations 3
Cbc0038I Pass  78: suminf.    0.61212 (2) obj. -227.914 iterations 2
Cbc0038I Pass  79: suminf.    0.52294 (2) obj. -225.311 iterations 3
Cbc0038I Pass  80: suminf.    1.83731 (9) obj. -225.311 iterations 10
Cbc0038I Pass  81: suminf.    1.66340 (9) obj. -225.311 iterations 5
Cbc0038I Pass  82: suminf.    0.52294 (2) obj. -225.311 iterations 10
Cbc0038I Pass  83: suminf.    0.52294 (2) obj. -225.311 iterations 0
Cbc0038I Pass  84: suminf.    0.65550 (2) obj. -225.311 iterations 3
Cbc0038I Pass  85: suminf.    0.61212 (2) obj. -227.914 iterations 2
Cbc0038I Pass  86: suminf.    0.52294 (2) obj. -225.311 iterations 3
Cbc0038I Pass  87: suminf.    1.47859 (8) obj. -225.311 iterations 9
Cbc0038I Pass  88: suminf.    0.91834 (6) obj. -226.807 iterations 9
Cbc0038I Pass  89: suminf.    2.50919 (14) obj. -225.311 iterations 10
Cbc0038I Pass  90: suminf.    2.50919 (14) obj. -225.311 iterations 2
Cbc0038I Pass  91: suminf.    0.52294 (2) obj. -225.311 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 26 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -190.302 - took 0.07 seconds
Cbc0012I Integer solution of -190.30176 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 17 added rows had average density of 9.2941176
Cbc0013I At root node, 24 cuts changed objective from -272.32384 to -190.30176 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 260 row cuts average 18.7 elements, 54 column cuts (54 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 48.3 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -190.30176, took 71 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-40) rows, 65 (-13) columns and 353 (-100) elements
Clp1000I sum of infeasibilities 2.86429e-05 - average 2.49069e-07, 16 fixed columns
Coin0506I Presolve 80 (-35) rows, 46 (-19) columns and 245 (-108) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 52.671452
Clp0000I Optimal - objective value 52.671452
Coin0511I After Postsolve, objective 52.671452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.26015582 - largest nonzero change 0 ( 0%) - largest zero change 2.7558357e-05
Clp0000I Optimal - objective value 52.671452
Clp0000I Optimal - objective value 52.671452
Clp0000I Optimal - objective value 52.671452
Coin0511I After Postsolve, objective 52.671452, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.67145193 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 65 columns (64 integer (64 of which binary)) and 356 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.88015
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -7.8517 iterations 39
Cbc0038I Solution found of -7.8517
Cbc0038I Relaxing continuous gives -7.8517
Cbc0038I Rounding solution of -8.94749 is better than previous of -7.8517

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.94749 to -23.9171 (0.05 seconds)
Cbc0038I Round again with cutoff of -26.7927
Cbc0038I Pass   2: suminf.    1.89450 (9) obj. -26.7927 iterations 14
Cbc0038I Pass   3: suminf.    1.56000 (6) obj. -26.7927 iterations 15
Cbc0038I Pass   4: suminf.    1.32149 (7) obj. -26.7927 iterations 3
Cbc0038I Pass   5: suminf.    1.57620 (6) obj. -26.7927 iterations 12
Cbc0038I Pass   6: suminf.    1.57620 (6) obj. -26.7927 iterations 0
Cbc0038I Pass   7: suminf.    1.38901 (5) obj. -26.7927 iterations 8
Cbc0038I Pass   8: suminf.    1.38631 (7) obj. -26.7927 iterations 2
Cbc0038I Pass   9: suminf.    1.61336 (6) obj. -26.7927 iterations 11
Cbc0038I Pass  10: suminf.    1.17450 (5) obj. -26.7927 iterations 9
Cbc0038I Pass  11: suminf.    1.02991 (4) obj. -26.7927 iterations 6
Cbc0038I Pass  12: suminf.    0.84818 (4) obj. -26.7927 iterations 2
Cbc0038I Pass  13: suminf.    1.58363 (6) obj. -26.7927 iterations 10
Cbc0038I Pass  14: suminf.    1.57620 (6) obj. -26.7927 iterations 2
Cbc0038I Pass  15: suminf.    1.38901 (5) obj. -26.7927 iterations 8
Cbc0038I Pass  16: suminf.    1.38631 (7) obj. -26.7927 iterations 2
Cbc0038I Pass  17: suminf.    1.61336 (6) obj. -26.7927 iterations 11
Cbc0038I Pass  18: suminf.    1.17450 (5) obj. -26.7927 iterations 9
Cbc0038I Pass  19: suminf.    1.02991 (4) obj. -26.7927 iterations 6
Cbc0038I Pass  20: suminf.    0.84818 (4) obj. -26.7927 iterations 2
Cbc0038I Pass  21: suminf.    1.58363 (6) obj. -26.7927 iterations 10
Cbc0038I Pass  22: suminf.    1.57620 (6) obj. -26.7927 iterations 2
Cbc0038I Pass  23: suminf.    1.38901 (5) obj. -26.7927 iterations 8
Cbc0038I Pass  24: suminf.    1.38631 (7) obj. -26.7927 iterations 2
Cbc0038I Pass  25: suminf.    1.61336 (6) obj. -26.7927 iterations 11
Cbc0038I Pass  26: suminf.    1.17450 (5) obj. -26.7927 iterations 9
Cbc0038I Pass  27: suminf.    1.02991 (4) obj. -26.7927 iterations 6
Cbc0038I Pass  28: suminf.    0.84818 (4) obj. -26.7927 iterations 2
Cbc0038I Pass  29: suminf.    1.58363 (6) obj. -26.7927 iterations 10
Cbc0038I Pass  30: suminf.    1.57620 (6) obj. -26.7927 iterations 2
Cbc0038I Pass  31: suminf.    1.38901 (5) obj. -26.7927 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 65 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -23.9171 - took 0.06 seconds
Cbc0012I Integer solution of -23.91715 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 115 rows 65 columns, reduced to 62 rows 37 columns
Cbc0031I 24 added rows had average density of 37.25
Cbc0013I At root node, 24 cuts changed objective from -52.671452 to -41.653603 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8376 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1734 row cuts average 64.3 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 87 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 53.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.91715 best solution, best possible -41.653603 (0.75 seconds)
Cbc0038I Full problem 115 rows 65 columns, reduced to 12 rows 11 columns
Cbc0001I Search completed - best objective -23.91715, took 7667 iterations and 52 nodes (1.04 seconds)
Cbc0032I Strong branching done 744 times (11712 iterations), fathomed 2 nodes and fixed 44 variables
Cbc0035I Maximum depth 10, 176 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-61) rows, 107 (-46) columns and 1724 (-1580) elements
Clp1000I sum of infeasibilities 1.89968e-06 - average 2.02094e-08, 66 fixed columns
Coin0506I Presolve 30 (-64) rows, 40 (-67) columns and 136 (-1588) elements
Clp0006I 0  Obj -6.6357954 Dual inf 119.74957 (40)
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 0.33451671 - largest nonzero change 0 ( 0%) - largest zero change 2.8863714e-05
Clp0000I Optimal - objective value -6.3917487
Clp0000I Optimal - objective value -6.3917487
Coin0511I After Postsolve, objective -6.3917487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -6.3917487 Dual inf 37.114065 (43)
Clp0014I Perturbing problem by 0.001% of 1.8494415 - largest nonzero change 2.3542574e-05 ( 0.0018056464%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 65.989011
Clp0000I Optimal - objective value 65.989011
Clp0000I Optimal - objective value 65.989011
Coin0511I After Postsolve, objective 65.989011, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.98901139 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 109 columns (109 integer (109 of which binary)) and 1733 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.774%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 2.50259
Cbc0038I Pass   1: suminf.    1.76097 (23) obj. -53.0051 iterations 4
Cbc0038I Pass   2: suminf.    1.42133 (22) obj. -50.7194 iterations 1
Cbc0038I Solution found of -8.85928
Cbc0038I Rounding solution of -17.8792 is better than previous of -8.85928

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 109 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -17.8792 to -22.5261 (0.03 seconds)
Cbc0038I Round again with cutoff of -25.7813
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.76097 (23) obj. -53.0051 iterations 0
Cbc0038I Pass   4: suminf.    1.42133 (22) obj. -50.7194 iterations 1
Cbc0038I Pass   5: suminf.    0.72554 (4) obj. -25.7813 iterations 23
Cbc0038I Pass   6: suminf.    0.72554 (4) obj. -25.7813 iterations 0
Cbc0038I Pass   7: suminf.    0.38788 (4) obj. -25.7813 iterations 5
Cbc0038I Pass   8: suminf.    0.10567 (2) obj. -25.7813 iterations 5
Cbc0038I Pass   9: suminf.    0.09375 (1) obj. -25.8885 iterations 1
Cbc0038I Pass  10: suminf.    0.10349 (1) obj. -25.7813 iterations 1
Cbc0038I Pass  11: suminf.    1.06530 (14) obj. -25.7813 iterations 23
Cbc0038I Pass  12: suminf.    1.06530 (14) obj. -25.7813 iterations 1
Cbc0038I Pass  13: suminf.    1.66095 (10) obj. -25.7813 iterations 15
Cbc0038I Pass  14: suminf.    1.66095 (10) obj. -25.7813 iterations 2
Cbc0038I Pass  15: suminf.    1.89802 (8) obj. -25.7813 iterations 9
Cbc0038I Pass  16: suminf.    1.31206 (18) obj. -25.7813 iterations 3
Cbc0038I Pass  17: suminf.    1.83023 (14) obj. -25.7813 iterations 14
Cbc0038I Pass  18: suminf.    1.54957 (15) obj. -25.7813 iterations 4
Cbc0038I Pass  19: suminf.    2.27121 (26) obj. -25.7813 iterations 30
Cbc0038I Pass  20: suminf.    1.76160 (19) obj. -25.7813 iterations 14
Cbc0038I Pass  21: suminf.    1.34706 (16) obj. -25.7813 iterations 19
Cbc0038I Pass  22: suminf.    1.34706 (16) obj. -25.7813 iterations 3
Cbc0038I Pass  23: suminf.    1.83023 (14) obj. -25.7813 iterations 9
Cbc0038I Pass  24: suminf.    1.54957 (15) obj. -25.7813 iterations 4
Cbc0038I Pass  25: suminf.    1.25469 (13) obj. -25.7813 iterations 18
Cbc0038I Pass  26: suminf.    1.25469 (13) obj. -25.7813 iterations 1
Cbc0038I Pass  27: suminf.    1.92105 (8) obj. -25.7813 iterations 14
Cbc0038I Pass  28: suminf.    1.92105 (8) obj. -25.7813 iterations 0
Cbc0038I Pass  29: suminf.    2.12165 (13) obj. -25.7813 iterations 11
Cbc0038I Pass  30: suminf.    1.22563 (12) obj. -25.7813 iterations 3
Cbc0038I Pass  31: suminf.    1.01809 (10) obj. -26.0272 iterations 2
Cbc0038I Pass  32: suminf.    1.41405 (12) obj. -25.7813 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 109 columns, reduced to 44 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -22.5261 to -23.6073 (0.10 seconds)
Cbc0038I Round again with cutoff of -31.6405
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.76097 (23) obj. -53.0051 iterations 0
Cbc0038I Pass  33: suminf.    1.42133 (22) obj. -50.7194 iterations 1
Cbc0038I Pass  34: suminf.    1.25575 (5) obj. -31.6405 iterations 22
Cbc0038I Pass  35: suminf.    1.12699 (5) obj. -31.6405 iterations 1
Cbc0038I Pass  36: suminf.    0.72294 (6) obj. -31.6405 iterations 2
Cbc0038I Pass  37: suminf.    0.72294 (6) obj. -31.6405 iterations 0
Cbc0038I Pass  38: suminf.    1.69160 (5) obj. -31.6405 iterations 7
Cbc0038I Pass  39: suminf.    1.28945 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  40: suminf.    1.12699 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  41: suminf.    0.72294 (6) obj. -31.6405 iterations 2
Cbc0038I Pass  42: suminf.    0.72294 (6) obj. -31.6405 iterations 0
Cbc0038I Pass  43: suminf.    1.69160 (5) obj. -31.6405 iterations 7
Cbc0038I Pass  44: suminf.    1.28945 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  45: suminf.    1.12699 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  46: suminf.    0.72294 (6) obj. -31.6405 iterations 2
Cbc0038I Pass  47: suminf.    0.72294 (6) obj. -31.6405 iterations 0
Cbc0038I Pass  48: suminf.    1.69160 (5) obj. -31.6405 iterations 7
Cbc0038I Pass  49: suminf.    1.28945 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  50: suminf.    1.12699 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  51: suminf.    0.72294 (6) obj. -31.6405 iterations 2
Cbc0038I Pass  52: suminf.    0.72294 (6) obj. -31.6405 iterations 0
Cbc0038I Pass  53: suminf.    1.69160 (5) obj. -31.6405 iterations 7
Cbc0038I Pass  54: suminf.    1.28945 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  55: suminf.    1.12699 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  56: suminf.    0.72294 (6) obj. -31.6405 iterations 2
Cbc0038I Pass  57: suminf.    0.72294 (6) obj. -31.6405 iterations 0
Cbc0038I Pass  58: suminf.    1.69160 (5) obj. -31.6405 iterations 7
Cbc0038I Pass  59: suminf.    1.28945 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  60: suminf.    1.12699 (5) obj. -31.6405 iterations 2
Cbc0038I Pass  61: suminf.    0.72294 (6) obj. -31.6405 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 109 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -23.6073 - took 0.09 seconds
Cbc0012I Integer solution of -23.60729 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 96 rows 109 columns, reduced to 21 rows 23 columns
Cbc0031I 58 added rows had average density of 14.931034
Cbc0013I At root node, 58 cuts changed objective from -55.077234 to -30.252333 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9642 row cuts average 9.9 elements, 4 column cuts (4 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1144 row cuts average 94.2 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 71 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 88 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 738 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 62.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 279 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.693 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.60729 best solution, best possible -30.252333 (2.34 seconds)
Cbc0016I Integer solution of -23.91714 found by strong branching after 3282 iterations and 1 nodes (2.53 seconds)
Cbc0012I Integer solution of -23.91715 found by rounding after 3310 iterations and 4 nodes (2.65 seconds)
Cbc0010I After 11 nodes, 2 on tree, -23.91715 best solution, best possible -30.208535 (3.06 seconds)
Cbc0010I After 17 nodes, 6 on tree, -23.91715 best solution, best possible -30.208535 (3.76 seconds)
Cbc0010I After 31 nodes, 4 on tree, -23.91715 best solution, best possible -30.208535 (4.48 seconds)
Cbc0038I Full problem 96 rows 109 columns, reduced to 65 rows 73 columns
Cbc0010I After 42 nodes, 4 on tree, -23.91715 best solution, best possible -30.208535 (5.20 seconds)
Cbc0010I After 51 nodes, 2 on tree, -23.91715 best solution, best possible -29.314133 (5.93 seconds)
Cbc0010I After 58 nodes, 5 on tree, -23.91715 best solution, best possible -29.314133 (6.71 seconds)
Cbc0001I Search completed - best objective -23.91715, took 7568 iterations and 72 nodes (7.25 seconds)
Cbc0032I Strong branching done 1084 times (21041 iterations), fathomed 7 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 150 variables fixed on reduced cost
Total time (CPU seconds):       5.23   (Wallclock seconds):       7.27

