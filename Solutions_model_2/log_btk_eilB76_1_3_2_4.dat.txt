Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 73 (-5) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 3.08231e-06 - average 2.38938e-08, 10 fixed columns
Coin0506I Presolve 110 (-19) rows, 63 (-10) columns and 338 (-58) elements
Clp0029I End of values pass after 63 iterations
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Coin0511I After Postsolve, objective 55.429742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Coin0511I After Postsolve, objective 55.429742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.42974191 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 73 columns (72 integer (72 of which binary)) and 432 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.780%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.62172
Cbc0038I Solution found of -2.31461
Cbc0038I Relaxing continuous gives -9.25922
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -9.25922 to -25.0354 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.9996
Cbc0038I Pass   1: suminf.    1.53699 (19) obj. -27.9996 iterations 39
Cbc0038I Pass   2: suminf.    2.31747 (6) obj. -27.9996 iterations 22
Cbc0038I Pass   3: suminf.    1.45324 (4) obj. -27.9996 iterations 8
Cbc0038I Pass   4: suminf.    0.91434 (3) obj. -27.9996 iterations 4
Cbc0038I Pass   5: suminf.    0.61808 (3) obj. -27.9996 iterations 6
Cbc0038I Pass   6: suminf.    0.47009 (1) obj. -27.9996 iterations 1
Cbc0038I Pass   7: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass   8: suminf.    2.23868 (7) obj. -27.9996 iterations 18
Cbc0038I Pass   9: suminf.    0.57984 (4) obj. -27.9996 iterations 12
Cbc0038I Pass  10: suminf.    0.57700 (5) obj. -27.9996 iterations 1
Cbc0038I Pass  11: suminf.    1.00155 (3) obj. -27.9996 iterations 8
Cbc0038I Pass  12: suminf.    0.65782 (2) obj. -27.9996 iterations 3
Cbc0038I Pass  13: suminf.    0.47009 (1) obj. -27.9996 iterations 3
Cbc0038I Pass  14: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass  15: suminf.    2.35233 (8) obj. -27.9996 iterations 17
Cbc0038I Pass  16: suminf.    2.04816 (6) obj. -27.9996 iterations 5
Cbc0038I Pass  17: suminf.    1.20724 (5) obj. -27.9996 iterations 1
Cbc0038I Pass  18: suminf.    1.53699 (19) obj. -27.9996 iterations 29
Cbc0038I Pass  19: suminf.    2.31747 (6) obj. -27.9996 iterations 22
Cbc0038I Pass  20: suminf.    1.45324 (4) obj. -27.9996 iterations 8
Cbc0038I Pass  21: suminf.    0.91434 (3) obj. -27.9996 iterations 4
Cbc0038I Pass  22: suminf.    0.61808 (3) obj. -27.9996 iterations 6
Cbc0038I Pass  23: suminf.    0.47009 (1) obj. -27.9996 iterations 1
Cbc0038I Pass  24: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass  25: suminf.    2.38614 (8) obj. -27.9996 iterations 15
Cbc0038I Pass  26: suminf.    0.56872 (3) obj. -27.9996 iterations 12
Cbc0038I Pass  27: suminf.    0.56872 (3) obj. -27.9996 iterations 2
Cbc0038I Pass  28: suminf.    0.64905 (2) obj. -27.9996 iterations 6
Cbc0038I Pass  29: suminf.    1.58340 (5) obj. -27.9996 iterations 17
Cbc0038I Pass  30: suminf.    1.58016 (5) obj. -27.9996 iterations 6
Cbc0038I Rounding solution of -30.0353 is better than previous of -25.0354

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -34.9638
Cbc0038I Pass  30: suminf.    2.10816 (19) obj. -34.9638 iterations 0
Cbc0038I Pass  31: suminf.    2.71627 (8) obj. -34.9638 iterations 22
Cbc0038I Pass  32: suminf.    1.73025 (6) obj. -34.9638 iterations 8
Cbc0038I Pass  33: suminf.    1.20983 (6) obj. -34.9638 iterations 4
Cbc0038I Pass  34: suminf.    0.85719 (8) obj. -34.9638 iterations 6
Cbc0038I Pass  35: suminf.    2.58269 (7) obj. -34.9638 iterations 12
Cbc0038I Pass  36: suminf.    1.62160 (6) obj. -34.9638 iterations 8
Cbc0038I Pass  37: suminf.    3.13659 (13) obj. -34.9638 iterations 18
Cbc0038I Pass  38: suminf.    1.11358 (7) obj. -34.9638 iterations 18
Cbc0038I Pass  39: suminf.    1.09817 (6) obj. -34.9638 iterations 2
Cbc0038I Pass  40: suminf.    1.76769 (5) obj. -34.9638 iterations 9
Cbc0038I Pass  41: suminf.    1.02060 (4) obj. -34.9638 iterations 9
Cbc0038I Pass  42: suminf.    1.33798 (5) obj. -34.9638 iterations 6
Cbc0038I Pass  43: suminf.    0.45767 (4) obj. -34.9638 iterations 6
Cbc0038I Pass  44: suminf.    0.43823 (4) obj. -34.9638 iterations 6
Cbc0038I Pass  45: suminf.    1.24772 (4) obj. -34.9638 iterations 8
Cbc0038I Pass  46: suminf.    4.20156 (12) obj. -34.9638 iterations 21
Cbc0038I Pass  47: suminf.    1.99377 (7) obj. -34.9638 iterations 20
Cbc0038I Pass  48: suminf.    1.84102 (7) obj. -34.9638 iterations 5
Cbc0038I Pass  49: suminf.    2.29475 (6) obj. -34.9638 iterations 9
Cbc0038I Pass  50: suminf.    1.34386 (6) obj. -34.9638 iterations 12
Cbc0038I Pass  51: suminf.    1.24886 (6) obj. -34.9638 iterations 5
Cbc0038I Pass  52: suminf.    2.35069 (7) obj. -34.9638 iterations 19
Cbc0038I Pass  53: suminf.    1.37277 (5) obj. -34.9638 iterations 16
Cbc0038I Pass  54: suminf.    1.04831 (4) obj. -34.9638 iterations 7
Cbc0038I Pass  55: suminf.    0.51218 (4) obj. -34.9638 iterations 10
Cbc0038I Pass  56: suminf.    1.24772 (4) obj. -34.9638 iterations 10
Cbc0038I Pass  57: suminf.    0.43823 (4) obj. -34.9638 iterations 8
Cbc0038I Pass  58: suminf.    2.13917 (8) obj. -34.9638 iterations 16
Cbc0038I Pass  59: suminf.    1.08760 (6) obj. -34.9638 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 92 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -30.0353 - took 0.07 seconds
Cbc0012I Integer solution of -30.03532 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 128 rows 73 columns, reduced to 71 rows 41 columns
Cbc0031I 23 added rows had average density of 52.26087
Cbc0013I At root node, 23 cuts changed objective from -54.677118 to -46.059864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11667 row cuts average 5.0 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2483 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.03532 best solution, best possible -46.059864 (0.82 seconds)
Cbc0001I Search completed - best objective -30.03532000000001, took 8588 iterations and 46 nodes (0.97 seconds)
Cbc0032I Strong branching done 594 times (12766 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 21, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       0.98

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 120 (-32) columns and 2007 (-1296) elements
Clp1000I sum of infeasibilities 3.89381e-07 - average 3.70839e-09, 68 fixed columns
Coin0506I Presolve 51 (-54) rows, 52 (-68) columns and 270 (-1737) elements
Clp0006I 0  Obj 168.3554 Dual inf 4.5679945 (52)
Clp0029I End of values pass after 52 iterations
Clp0000I Optimal - objective value 180.24604
Clp0000I Optimal - objective value 180.24604
Coin0511I After Postsolve, objective 180.24604, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 180.24604 Dual inf 61.075885 (1)
Clp0014I Perturbing problem by 0.001% of 1.3709916 - largest nonzero change 2.2965322e-05 ( 0.0016324266%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 180.24604
Clp0000I Optimal - objective value 180.24604
Clp0000I Optimal - objective value 180.24604
Coin0511I After Postsolve, objective 180.24604, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.2460385 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 57 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 120 columns (120 integer (120 of which binary)) and 2052 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.715%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 11.812
Cbc0038I Pass   1: suminf.    0.31878 (13) obj. 11.554 iterations 45
Cbc0038I Pass   2: suminf.    0.31878 (13) obj. 11.554 iterations 3
Cbc0038I Solution found of 33.9756
Cbc0038I Rounding solution of -1.35654 is better than previous of 33.9756

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 120 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1.35654 to -87.4711 (0.05 seconds)
Cbc0038I Round again with cutoff of -92.8287
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.28273 (41) obj. -92.8287 iterations 25
Cbc0038I Pass   4: suminf.    3.08756 (41) obj. -100.424 iterations 6
Cbc0038I Pass   5: suminf.    1.90491 (30) obj. -92.8287 iterations 24
Cbc0038I Pass   6: suminf.    1.49563 (29) obj. -92.8287 iterations 8
Cbc0038I Pass   7: suminf.    3.20546 (12) obj. -92.8287 iterations 24
Cbc0038I Pass   8: suminf.    3.20546 (12) obj. -92.8287 iterations 2
Cbc0038I Pass   9: suminf.    0.43069 (2) obj. -92.8287 iterations 26
Cbc0038I Pass  10: suminf.    0.43069 (2) obj. -92.8287 iterations 1
Cbc0038I Pass  11: suminf.    0.89520 (3) obj. -92.8287 iterations 7
Cbc0038I Pass  12: suminf.    0.44584 (2) obj. -92.8287 iterations 4
Cbc0038I Pass  13: suminf.    0.43069 (2) obj. -92.8287 iterations 5
Cbc0038I Pass  14: suminf.    3.06344 (13) obj. -92.8287 iterations 21
Cbc0038I Pass  15: suminf.    2.99731 (12) obj. -92.8287 iterations 5
Cbc0038I Pass  16: suminf.    0.43069 (2) obj. -92.8287 iterations 23
Cbc0038I Pass  17: suminf.    0.43069 (2) obj. -92.8287 iterations 1
Cbc0038I Pass  18: suminf.    0.89520 (3) obj. -92.8287 iterations 6
Cbc0038I Pass  19: suminf.    0.44584 (2) obj. -92.8287 iterations 3
Cbc0038I Pass  20: suminf.    0.43069 (2) obj. -92.8287 iterations 4
Cbc0038I Pass  21: suminf.    3.29069 (13) obj. -92.8287 iterations 15
Cbc0038I Pass  22: suminf.    2.29577 (10) obj. -92.8287 iterations 5
Cbc0038I Pass  23: suminf.    0.43069 (2) obj. -92.8287 iterations 23
Cbc0038I Pass  24: suminf.    0.43069 (2) obj. -92.8287 iterations 1
Cbc0038I Pass  25: suminf.    0.89520 (3) obj. -92.8287 iterations 5
Cbc0038I Pass  26: suminf.    0.44584 (2) obj. -92.8287 iterations 3
Cbc0038I Pass  27: suminf.    0.43069 (2) obj. -92.8287 iterations 4
Cbc0038I Pass  28: suminf.    1.70532 (7) obj. -92.8287 iterations 12
Cbc0038I Pass  29: suminf.    1.70532 (7) obj. -92.8287 iterations 1
Cbc0038I Pass  30: suminf.    0.31424 (2) obj. -92.8287 iterations 19
Cbc0038I Pass  31: suminf.    0.31424 (2) obj. -92.8287 iterations 1
Cbc0038I Pass  32: suminf.    0.87103 (3) obj. -92.8287 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 120 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -87.4711 - took 0.03 seconds
Cbc0012I Integer solution of -87.47114 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 16 added rows had average density of 6.875
Cbc0013I At root node, 16 cuts changed objective from -141.04606 to -87.705777 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 2.0 elements, 31 column cuts (31 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 19 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -87.47113999999999, took 70 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 42 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 73 (-5) columns and 396 (-57) elements
Clp1000I sum of infeasibilities 3.08231e-06 - average 2.38938e-08, 10 fixed columns
Coin0506I Presolve 110 (-19) rows, 63 (-10) columns and 338 (-58) elements
Clp0029I End of values pass after 63 iterations
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Coin0511I After Postsolve, objective 55.429742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Clp0000I Optimal - objective value 55.429742
Coin0511I After Postsolve, objective 55.429742, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.42974191 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 73 columns (72 integer (72 of which binary)) and 432 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.780%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 4.62172
Cbc0038I Solution found of -2.31461
Cbc0038I Relaxing continuous gives -9.25922
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -9.25922 to -25.0354 (0.04 seconds)
Cbc0038I Round again with cutoff of -27.9996
Cbc0038I Pass   1: suminf.    1.53699 (19) obj. -27.9996 iterations 39
Cbc0038I Pass   2: suminf.    2.31747 (6) obj. -27.9996 iterations 22
Cbc0038I Pass   3: suminf.    1.45324 (4) obj. -27.9996 iterations 8
Cbc0038I Pass   4: suminf.    0.91434 (3) obj. -27.9996 iterations 4
Cbc0038I Pass   5: suminf.    0.61808 (3) obj. -27.9996 iterations 6
Cbc0038I Pass   6: suminf.    0.47009 (1) obj. -27.9996 iterations 1
Cbc0038I Pass   7: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass   8: suminf.    2.23868 (7) obj. -27.9996 iterations 18
Cbc0038I Pass   9: suminf.    0.57984 (4) obj. -27.9996 iterations 12
Cbc0038I Pass  10: suminf.    0.57700 (5) obj. -27.9996 iterations 1
Cbc0038I Pass  11: suminf.    1.00155 (3) obj. -27.9996 iterations 8
Cbc0038I Pass  12: suminf.    0.65782 (2) obj. -27.9996 iterations 3
Cbc0038I Pass  13: suminf.    0.47009 (1) obj. -27.9996 iterations 3
Cbc0038I Pass  14: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass  15: suminf.    2.35233 (8) obj. -27.9996 iterations 17
Cbc0038I Pass  16: suminf.    2.04816 (6) obj. -27.9996 iterations 5
Cbc0038I Pass  17: suminf.    1.20724 (5) obj. -27.9996 iterations 1
Cbc0038I Pass  18: suminf.    1.53699 (19) obj. -27.9996 iterations 29
Cbc0038I Pass  19: suminf.    2.31747 (6) obj. -27.9996 iterations 22
Cbc0038I Pass  20: suminf.    1.45324 (4) obj. -27.9996 iterations 8
Cbc0038I Pass  21: suminf.    0.91434 (3) obj. -27.9996 iterations 4
Cbc0038I Pass  22: suminf.    0.61808 (3) obj. -27.9996 iterations 6
Cbc0038I Pass  23: suminf.    0.47009 (1) obj. -27.9996 iterations 1
Cbc0038I Pass  24: suminf.    0.27027 (1) obj. -31.7154 iterations 2
Cbc0038I Pass  25: suminf.    2.38614 (8) obj. -27.9996 iterations 15
Cbc0038I Pass  26: suminf.    0.56872 (3) obj. -27.9996 iterations 12
Cbc0038I Pass  27: suminf.    0.56872 (3) obj. -27.9996 iterations 2
Cbc0038I Pass  28: suminf.    0.64905 (2) obj. -27.9996 iterations 6
Cbc0038I Pass  29: suminf.    1.58340 (5) obj. -27.9996 iterations 17
Cbc0038I Pass  30: suminf.    1.58016 (5) obj. -27.9996 iterations 6
Cbc0038I Rounding solution of -30.0353 is better than previous of -25.0354

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 83 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -34.9638
Cbc0038I Pass  30: suminf.    2.10816 (19) obj. -34.9638 iterations 0
Cbc0038I Pass  31: suminf.    2.71627 (8) obj. -34.9638 iterations 22
Cbc0038I Pass  32: suminf.    1.73025 (6) obj. -34.9638 iterations 8
Cbc0038I Pass  33: suminf.    1.20983 (6) obj. -34.9638 iterations 4
Cbc0038I Pass  34: suminf.    0.85719 (8) obj. -34.9638 iterations 6
Cbc0038I Pass  35: suminf.    2.58269 (7) obj. -34.9638 iterations 12
Cbc0038I Pass  36: suminf.    1.62160 (6) obj. -34.9638 iterations 8
Cbc0038I Pass  37: suminf.    3.13659 (13) obj. -34.9638 iterations 18
Cbc0038I Pass  38: suminf.    1.11358 (7) obj. -34.9638 iterations 18
Cbc0038I Pass  39: suminf.    1.09817 (6) obj. -34.9638 iterations 2
Cbc0038I Pass  40: suminf.    1.76769 (5) obj. -34.9638 iterations 9
Cbc0038I Pass  41: suminf.    1.02060 (4) obj. -34.9638 iterations 9
Cbc0038I Pass  42: suminf.    1.33798 (5) obj. -34.9638 iterations 6
Cbc0038I Pass  43: suminf.    0.45767 (4) obj. -34.9638 iterations 6
Cbc0038I Pass  44: suminf.    0.43823 (4) obj. -34.9638 iterations 6
Cbc0038I Pass  45: suminf.    1.24772 (4) obj. -34.9638 iterations 8
Cbc0038I Pass  46: suminf.    4.20156 (12) obj. -34.9638 iterations 21
Cbc0038I Pass  47: suminf.    1.99377 (7) obj. -34.9638 iterations 20
Cbc0038I Pass  48: suminf.    1.84102 (7) obj. -34.9638 iterations 5
Cbc0038I Pass  49: suminf.    2.29475 (6) obj. -34.9638 iterations 9
Cbc0038I Pass  50: suminf.    1.34386 (6) obj. -34.9638 iterations 12
Cbc0038I Pass  51: suminf.    1.24886 (6) obj. -34.9638 iterations 5
Cbc0038I Pass  52: suminf.    2.35069 (7) obj. -34.9638 iterations 19
Cbc0038I Pass  53: suminf.    1.37277 (5) obj. -34.9638 iterations 16
Cbc0038I Pass  54: suminf.    1.04831 (4) obj. -34.9638 iterations 7
Cbc0038I Pass  55: suminf.    0.51218 (4) obj. -34.9638 iterations 10
Cbc0038I Pass  56: suminf.    1.24772 (4) obj. -34.9638 iterations 10
Cbc0038I Pass  57: suminf.    0.43823 (4) obj. -34.9638 iterations 8
Cbc0038I Pass  58: suminf.    2.13917 (8) obj. -34.9638 iterations 16
Cbc0038I Pass  59: suminf.    1.08760 (6) obj. -34.9638 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 73 columns, reduced to 92 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -30.0353 - took 0.07 seconds
Cbc0012I Integer solution of -30.03532 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 128 rows 73 columns, reduced to 71 rows 41 columns
Cbc0031I 23 added rows had average density of 52.26087
Cbc0013I At root node, 23 cuts changed objective from -54.677118 to -46.059864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11667 row cuts average 5.0 elements, 1 column cuts (1 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2483 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.03532 best solution, best possible -46.059864 (0.87 seconds)
Cbc0001I Search completed - best objective -30.03532000000001, took 8588 iterations and 46 nodes (1.03 seconds)
Cbc0032I Strong branching done 594 times (12766 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 21, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-54) rows, 116 (-37) columns and 1881 (-1423) elements
Clp1000I sum of infeasibilities 6.4367e-08 - average 6.37297e-10, 18 fixed columns
Coin0506I Presolve 85 (-16) rows, 98 (-18) columns and 1399 (-482) elements
Clp0006I 0  Obj 60.850743 Dual inf 11.714109 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 2.0494596 - largest nonzero change 1.3573312e-05 ( 0.0008409402%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 66.922594
Clp0000I Optimal - objective value 66.922594
Coin0511I After Postsolve, objective 66.922594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 66.922594
Clp0000I Optimal - objective value 66.922594
Clp0000I Optimal - objective value 66.922594
Clp0000I Optimal - objective value 66.922594
Coin0511I After Postsolve, objective 66.922594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.92259408 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 116 columns (116 integer (116 of which binary)) and 1916 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.712%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 3.25405
Cbc0038I Pass   1: suminf.    1.57600 (31) obj. -32.0027 iterations 17
Cbc0038I Pass   2: suminf.    0.38007 (9) obj. 1.13725 iterations 27
Cbc0038I Solution found of 14.5376
Cbc0038I Rounding solution of 8.63977 is better than previous of 14.5376

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 4 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 8.63977 to 0.09443 (0.04 seconds)
Cbc0038I Round again with cutoff of -4.66942
Cbc0038I Pass   3: suminf.    1.57600 (31) obj. -32.0027 iterations 0
Cbc0038I Pass   4: suminf.    0.97779 (21) obj. -18.8268 iterations 10
Cbc0038I Pass   5: suminf.    1.51817 (5) obj. -4.66942 iterations 35
Cbc0038I Pass   6: suminf.    0.96593 (9) obj. -4.66942 iterations 4
Cbc0038I Pass   7: suminf.    0.36677 (4) obj. -4.66942 iterations 8
Cbc0038I Pass   8: suminf.    0.33612 (4) obj. -4.66942 iterations 1
Cbc0038I Pass   9: suminf.    0.36677 (4) obj. -4.66942 iterations 2
Cbc0038I Pass  10: suminf.    0.71058 (11) obj. -4.66942 iterations 12
Cbc0038I Pass  11: suminf.    0.71058 (11) obj. -4.66942 iterations 3
Cbc0038I Pass  12: suminf.    0.64141 (5) obj. -4.66942 iterations 10
Cbc0038I Pass  13: suminf.    0.64141 (5) obj. -4.66942 iterations 2
Cbc0038I Pass  14: suminf.    0.80200 (5) obj. -4.66942 iterations 3
Cbc0038I Pass  15: suminf.    0.80200 (5) obj. -4.66942 iterations 1
Cbc0038I Pass  16: suminf.    0.64141 (5) obj. -4.66942 iterations 2
Cbc0038I Pass  17: suminf.    1.63406 (11) obj. -13.2586 iterations 42
Cbc0038I Pass  18: suminf.    1.35107 (11) obj. -13.4623 iterations 5
Cbc0038I Pass  19: suminf.    1.35612 (10) obj. -4.66942 iterations 19
Cbc0038I Pass  20: suminf.    0.93276 (8) obj. -4.66942 iterations 5
Cbc0038I Pass  21: suminf.    1.37367 (5) obj. -4.66942 iterations 9
Cbc0038I Pass  22: suminf.    0.95792 (6) obj. -4.66942 iterations 5
Cbc0038I Pass  23: suminf.    2.11302 (16) obj. -4.66942 iterations 30
Cbc0038I Pass  24: suminf.    2.11302 (16) obj. -4.66942 iterations 3
Cbc0038I Pass  25: suminf.    1.11844 (8) obj. -4.66942 iterations 25
Cbc0038I Pass  26: suminf.    1.11619 (8) obj. -4.66942 iterations 2
Cbc0038I Pass  27: suminf.    0.46333 (6) obj. -4.66942 iterations 9
Cbc0038I Pass  28: suminf.    0.43085 (5) obj. -4.66942 iterations 5
Cbc0038I Pass  29: suminf.    0.46101 (6) obj. -4.66942 iterations 6
Cbc0038I Pass  30: suminf.    0.42853 (5) obj. -4.66942 iterations 5
Cbc0038I Pass  31: suminf.    0.46333 (6) obj. -4.66942 iterations 5
Cbc0038I Pass  32: suminf.    1.06229 (9) obj. -4.66942 iterations 23
Cbc0038I Rounding solution of -4.82416 is better than previous of 0.09443

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 116 columns, reduced to 31 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -4.82416 to -10.4086 (0.07 seconds)
Cbc0038I Round again with cutoff of -17.8356
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.57600 (31) obj. -32.0027 iterations 0
Cbc0038I Pass  33: suminf.    1.69363 (14) obj. -17.8356 iterations 47
Cbc0038I Pass  34: suminf.    1.23857 (15) obj. -17.8356 iterations 5
Cbc0038I Pass  35: suminf.    0.74667 (10) obj. -17.8356 iterations 22
Cbc0038I Pass  36: suminf.    0.67663 (11) obj. -17.8356 iterations 1
Cbc0038I Pass  37: suminf.    1.73174 (21) obj. -17.8356 iterations 14
Cbc0038I Pass  38: suminf.    1.49256 (14) obj. -17.8356 iterations 7
Cbc0038I Pass  39: suminf.    1.12786 (11) obj. -17.8356 iterations 18
Cbc0038I Pass  40: suminf.    1.12786 (11) obj. -17.8356 iterations 2
Cbc0038I Pass  41: suminf.    1.12975 (11) obj. -17.8356 iterations 3
Cbc0038I Pass  42: suminf.    1.12975 (11) obj. -17.8356 iterations 1
Cbc0038I Pass  43: suminf.    1.12786 (11) obj. -17.8356 iterations 3
Cbc0038I Pass  44: suminf.    0.88484 (16) obj. -17.8356 iterations 23
Cbc0038I Pass  45: suminf.    0.79983 (13) obj. -17.8356 iterations 11
Cbc0038I Pass  46: suminf.    1.12786 (11) obj. -17.8356 iterations 12
Cbc0038I Pass  47: suminf.    1.12786 (11) obj. -17.8356 iterations 1
Cbc0038I Pass  48: suminf.    1.12975 (11) obj. -17.8356 iterations 3
Cbc0038I Pass  49: suminf.    1.12975 (11) obj. -17.8356 iterations 1
Cbc0038I Pass  50: suminf.    1.12786 (11) obj. -17.8356 iterations 3
Cbc0038I Pass  51: suminf.    1.14203 (13) obj. -17.8356 iterations 16
Cbc0038I Pass  52: suminf.    0.82776 (13) obj. -17.8356 iterations 7
Cbc0038I Pass  53: suminf.    0.75247 (12) obj. -17.8356 iterations 7
Cbc0038I Pass  54: suminf.    0.75247 (12) obj. -17.8356 iterations 0
Cbc0038I Pass  55: suminf.    0.75247 (12) obj. -17.8356 iterations 0
Cbc0038I Pass  56: suminf.    1.08383 (15) obj. -17.8356 iterations 23
Cbc0038I Pass  57: suminf.    0.82571 (14) obj. -17.8356 iterations 6
Cbc0038I Pass  58: suminf.    1.05297 (11) obj. -17.8356 iterations 12
Cbc0038I Pass  59: suminf.    0.63961 (11) obj. -17.8356 iterations 7
Cbc0038I Pass  60: suminf.    1.00476 (11) obj. -17.8356 iterations 8
Cbc0038I Pass  61: suminf.    0.65097 (11) obj. -17.8356 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -10.4086 - took 0.07 seconds
Cbc0012I Integer solution of -10.40856 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 100 rows 116 columns, reduced to 5 rows 5 columns
Cbc0012I Integer solution of -12.18372 found by DiveCoefficient after 2753 iterations and 0 nodes (2.25 seconds)
Cbc0031I 56 added rows had average density of 20.928571
Cbc0013I At root node, 56 cuts changed objective from -47.543219 to -30.077767 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8431 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 978 row cuts average 95.9 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 84 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 420 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 124 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 411 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 306 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 584 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.761 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -12.18372 best solution, best possible -30.077767 (2.28 seconds)
Cbc0004I Integer solution of -30.03532 found after 2864 iterations and 1 nodes (2.42 seconds)
Cbc0001I Search completed - best objective -30.03532000000001, took 2908 iterations and 2 nodes (2.42 seconds)
Cbc0032I Strong branching done 62 times (1412 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       1.68   (Wallclock seconds):       2.44

