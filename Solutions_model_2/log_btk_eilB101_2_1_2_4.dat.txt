Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 168 (-37) rows, 96 (-7) columns and 520 (-83) elements
Clp1000I sum of infeasibilities 9.86997e-05 - average 5.87498e-07, 31 fixed columns
Coin0506I Presolve 94 (-74) rows, 57 (-39) columns and 294 (-226) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Coin0511I After Postsolve, objective 46.871095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20450111 - largest nonzero change 0 ( 0%) - largest zero change 2.8539162e-05
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Coin0511I After Postsolve, objective 46.871095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.87109507 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 168 rows, 96 columns (95 integer (95 of which binary)) and 525 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.55321
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.2376 iterations 84
Cbc0038I Solution found of -0.2376
Cbc0038I Relaxing continuous gives -0.2376
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -0.2376 to -20.2736 (0.08 seconds)
Cbc0038I Round again with cutoff of -22.9334
Cbc0038I Pass   2: suminf.    2.51546 (12) obj. -22.9334 iterations 22
Cbc0038I Pass   3: suminf.    1.31385 (5) obj. -22.9334 iterations 21
Cbc0038I Pass   4: suminf.    1.31385 (5) obj. -22.9334 iterations 1
Cbc0038I Pass   5: suminf.    1.81896 (6) obj. -22.9334 iterations 20
Cbc0038I Pass   6: suminf.    1.78701 (7) obj. -22.9334 iterations 5
Cbc0038I Pass   7: suminf.    2.02310 (5) obj. -22.9334 iterations 15
Cbc0038I Pass   8: suminf.    1.46680 (5) obj. -22.9334 iterations 3
Cbc0038I Pass   9: suminf.    1.81863 (7) obj. -22.9334 iterations 17
Cbc0038I Pass  10: suminf.    1.41994 (7) obj. -22.9334 iterations 8
Cbc0038I Pass  11: suminf.    0.93127 (3) obj. -22.9334 iterations 12
Cbc0038I Pass  12: suminf.    0.91185 (4) obj. -22.9334 iterations 2
Cbc0038I Pass  13: suminf.    0.97542 (3) obj. -22.9334 iterations 6
Cbc0038I Pass  14: suminf.    0.62672 (2) obj. -22.9334 iterations 3
Cbc0038I Pass  15: suminf.    2.87167 (10) obj. -22.9334 iterations 30
Cbc0038I Pass  16: suminf.    1.98918 (9) obj. -22.9334 iterations 16
Cbc0038I Pass  17: suminf.    1.98918 (9) obj. -22.9334 iterations 0
Cbc0038I Pass  18: suminf.    2.71983 (8) obj. -22.9334 iterations 17
Cbc0038I Pass  19: suminf.    1.99727 (7) obj. -22.9334 iterations 8
Cbc0038I Pass  20: suminf.    1.88232 (7) obj. -22.9334 iterations 4
Cbc0038I Pass  21: suminf.    1.25282 (4) obj. -22.9334 iterations 10
Cbc0038I Pass  22: suminf.    1.91679 (6) obj. -22.9334 iterations 9
Cbc0038I Pass  23: suminf.    1.78701 (7) obj. -22.9334 iterations 9
Cbc0038I Pass  24: suminf.    2.02310 (5) obj. -22.9334 iterations 14
Cbc0038I Pass  25: suminf.    1.46680 (5) obj. -22.9334 iterations 3
Cbc0038I Pass  26: suminf.    1.81959 (10) obj. -22.9334 iterations 15
Cbc0038I Pass  27: suminf.    1.67075 (8) obj. -22.9334 iterations 8
Cbc0038I Pass  28: suminf.    1.67075 (8) obj. -22.9334 iterations 1
Cbc0038I Pass  29: suminf.    1.37830 (3) obj. -22.9334 iterations 9
Cbc0038I Pass  30: suminf.    0.95644 (4) obj. -22.9334 iterations 9
Cbc0038I Pass  31: suminf.    1.30853 (3) obj. -22.9334 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -20.2736 to -20.5426 (0.15 seconds)
Cbc0038I Round again with cutoff of -27.7209
Cbc0038I Pass  31: suminf.    3.16616 (14) obj. -27.7209 iterations 2
Cbc0038I Pass  32: suminf.    1.76532 (7) obj. -27.7209 iterations 22
Cbc0038I Pass  33: suminf.    1.55960 (8) obj. -27.7209 iterations 5
Cbc0038I Pass  34: suminf.    0.84935 (3) obj. -27.7209 iterations 17
Cbc0038I Pass  35: suminf.    0.84935 (3) obj. -27.7209 iterations 1
Cbc0038I Pass  36: suminf.    1.14280 (3) obj. -27.7209 iterations 6
Cbc0038I Pass  37: suminf.    2.13306 (7) obj. -27.7209 iterations 17
Cbc0038I Pass  38: suminf.    2.02503 (7) obj. -27.7209 iterations 10
Cbc0038I Pass  39: suminf.    3.55478 (10) obj. -27.7209 iterations 15
Cbc0038I Pass  40: suminf.    2.11666 (11) obj. -27.7209 iterations 11
Cbc0038I Pass  41: suminf.    1.93655 (12) obj. -27.7209 iterations 6
Cbc0038I Pass  42: suminf.    3.75893 (12) obj. -27.7209 iterations 13
Cbc0038I Pass  43: suminf.    3.75893 (12) obj. -27.7209 iterations 4
Cbc0038I Pass  44: suminf.    2.71221 (10) obj. -27.7209 iterations 34
Cbc0038I Pass  45: suminf.    2.71221 (10) obj. -27.7209 iterations 0
Cbc0038I Pass  46: suminf.    2.13124 (7) obj. -27.7209 iterations 14
Cbc0038I Pass  47: suminf.    2.04566 (8) obj. -27.7209 iterations 5
Cbc0038I Pass  48: suminf.    1.44869 (5) obj. -27.7209 iterations 13
Cbc0038I Pass  49: suminf.    0.94856 (3) obj. -27.7209 iterations 2
Cbc0038I Pass  50: suminf.    1.43930 (4) obj. -27.7209 iterations 10
Cbc0038I Pass  51: suminf.    1.43930 (4) obj. -27.7209 iterations 0
Cbc0038I Pass  52: suminf.    1.48524 (4) obj. -27.7209 iterations 4
Cbc0038I Pass  53: suminf.    1.42177 (4) obj. -27.7209 iterations 4
Cbc0038I Pass  54: suminf.    1.45881 (5) obj. -27.7209 iterations 6
Cbc0038I Pass  55: suminf.    5.28747 (16) obj. -27.7209 iterations 24
Cbc0038I Pass  56: suminf.    3.78082 (11) obj. -27.7209 iterations 22
Cbc0038I Pass  57: suminf.    3.56492 (11) obj. -27.7209 iterations 2
Cbc0038I Pass  58: suminf.    1.98193 (5) obj. -27.7209 iterations 14
Cbc0038I Pass  59: suminf.    1.74747 (5) obj. -27.7209 iterations 3
Cbc0038I Pass  60: suminf.    1.34453 (6) obj. -27.7209 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 84 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -20.5426 - took 0.16 seconds
Cbc0012I Integer solution of -20.54263 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 168 rows 96 columns, reduced to 70 rows 43 columns
Cbc0031I 23 added rows had average density of 68.347826
Cbc0013I At root node, 23 cuts changed objective from -46.871095 to -38.564846 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10117 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1601 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.54263 best solution, best possible -38.564846 (1.45 seconds)
Cbc0038I Full problem 168 rows 96 columns, reduced to 7 rows 9 columns
Cbc0038I Full problem 168 rows 96 columns, reduced to 61 rows 36 columns
Cbc0001I Search completed - best objective -20.54263, took 10468 iterations and 122 nodes (1.94 seconds)
Cbc0032I Strong branching done 1144 times (20236 iterations), fathomed 13 nodes and fixed 79 variables
Cbc0035I Maximum depth 32, 488 variables fixed on reduced cost
Total time (CPU seconds):       1.80   (Wallclock seconds):       1.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 115 (-89) rows, 137 (-65) columns and 2199 (-3454) elements
Clp1000I sum of infeasibilities 5.07684e-07 - average 4.41464e-09, 40 fixed columns
Coin0506I Presolve 80 (-35) rows, 97 (-40) columns and 1275 (-924) elements
Clp0006I 0  Obj 87.975316 Dual inf 9.7695235 (96)
Clp0029I End of values pass after 97 iterations
Clp0014I Perturbing problem by 0.001% of 1.4227799 - largest nonzero change 0 ( 0%) - largest zero change 2.9541872e-05
Clp0000I Optimal - objective value 97.065849
Clp0000I Optimal - objective value 97.065849
Coin0511I After Postsolve, objective 97.065849, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 97.065849 Dual inf 10.346909 (1)
Clp0014I Perturbing problem by 0.001% of 1.2989372 - largest nonzero change 2.1768697e-05 ( 0.0016580886%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 97.065849
Clp0000I Optimal - objective value 97.065849
Clp0000I Optimal - objective value 97.065849
Coin0511I After Postsolve, objective 97.065849, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 97.06584879 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 137 columns (137 integer (137 of which binary)) and 2206 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.415%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.01012
Cbc0038I Pass   1: suminf.    1.54592 (30) obj. -69.7304 iterations 24
Cbc0038I Pass   2: suminf.    1.54592 (30) obj. -69.7304 iterations 0
Cbc0038I Pass   3: suminf.    0.78557 (17) obj. -53.703 iterations 13
Cbc0038I Solution found of -30.8168
Cbc0038I Rounding solution of -43.4048 is better than previous of -30.8168

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 137 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -47.9143
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.54592 (30) obj. -69.7304 iterations 0
Cbc0038I Pass   5: suminf.    1.54592 (30) obj. -69.7304 iterations 0
Cbc0038I Pass   6: suminf.    1.71871 (12) obj. -47.9143 iterations 41
Cbc0038I Pass   7: suminf.    1.91865 (7) obj. -47.9143 iterations 31
Cbc0038I Pass   8: suminf.    0.43391 (5) obj. -47.9143 iterations 6
Cbc0038I Pass   9: suminf.    0.43391 (5) obj. -47.9143 iterations 0
Cbc0038I Pass  10: suminf.    1.00115 (4) obj. -47.9143 iterations 6
Cbc0038I Pass  11: suminf.    0.61576 (4) obj. -47.9143 iterations 4
Cbc0038I Pass  12: suminf.    1.31085 (13) obj. -47.9143 iterations 33
Cbc0038I Pass  13: suminf.    0.97874 (11) obj. -50.648 iterations 6
Cbc0038I Pass  14: suminf.    0.71207 (10) obj. -47.9143 iterations 3
Cbc0038I Pass  15: suminf.    0.54063 (4) obj. -47.9143 iterations 14
Cbc0038I Pass  16: suminf.    0.17017 (4) obj. -47.9143 iterations 5
Cbc0038I Pass  17: suminf.    0.61691 (4) obj. -47.9143 iterations 9
Cbc0038I Pass  18: suminf.    1.26182 (11) obj. -47.9143 iterations 22
Cbc0038I Pass  19: suminf.    0.98844 (8) obj. -47.9143 iterations 13
Cbc0038I Pass  20: suminf.    1.03633 (5) obj. -47.9143 iterations 20
Cbc0038I Pass  21: suminf.    1.03633 (5) obj. -47.9143 iterations 0
Cbc0038I Pass  22: suminf.    0.93862 (7) obj. -47.9143 iterations 27
Cbc0038I Pass  23: suminf.    0.93862 (7) obj. -47.9143 iterations 0
Cbc0038I Pass  24: suminf.    0.67829 (4) obj. -47.9143 iterations 13
Cbc0038I Pass  25: suminf.    0.47717 (4) obj. -47.9143 iterations 7
Cbc0038I Pass  26: suminf.    0.83540 (4) obj. -47.9143 iterations 10
Cbc0038I Pass  27: suminf.    0.39888 (6) obj. -47.9143 iterations 5
Cbc0038I Pass  28: suminf.    0.59644 (6) obj. -47.9143 iterations 8
Cbc0038I Pass  29: suminf.    1.72002 (12) obj. -47.9143 iterations 29
Cbc0038I Pass  30: suminf.    1.13535 (9) obj. -49.7756 iterations 7
Cbc0038I Pass  31: suminf.    0.81062 (4) obj. -47.9143 iterations 21
Cbc0038I Pass  32: suminf.    0.54383 (4) obj. -47.9143 iterations 6
Cbc0038I Pass  33: suminf.    0.81062 (4) obj. -47.9143 iterations 8
Cbc0038I Rounding solution of -44.3079 is better than previous of -43.4048

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 137 columns, reduced to 46 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -44.3079 to -44.4495 (0.08 seconds)
Cbc0038I Round again with cutoff of -56.0311
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.54592 (30) obj. -69.7304 iterations 0
Cbc0038I Pass  34: suminf.    1.54592 (30) obj. -69.7304 iterations 0
Cbc0038I Pass  35: suminf.    1.03118 (19) obj. -56.0311 iterations 20
Cbc0038I Pass  36: suminf.    1.69926 (16) obj. -56.0311 iterations 21
Cbc0038I Pass  37: suminf.    1.11647 (15) obj. -56.0311 iterations 8
Cbc0038I Pass  38: suminf.    1.34021 (9) obj. -56.0311 iterations 32
Cbc0038I Pass  39: suminf.    1.18358 (9) obj. -56.0311 iterations 3
Cbc0038I Pass  40: suminf.    1.28146 (9) obj. -56.0311 iterations 12
Cbc0038I Pass  41: suminf.    1.28146 (9) obj. -56.0311 iterations 4
Cbc0038I Pass  42: suminf.    1.18358 (9) obj. -56.0311 iterations 5
Cbc0038I Pass  43: suminf.    2.24962 (12) obj. -56.0311 iterations 15
Cbc0038I Pass  44: suminf.    0.98574 (10) obj. -56.0311 iterations 6
Cbc0038I Pass  45: suminf.    0.98574 (10) obj. -56.0311 iterations 0
Cbc0038I Pass  46: suminf.    1.18358 (9) obj. -56.0311 iterations 25
Cbc0038I Pass  47: suminf.    1.18358 (9) obj. -56.0311 iterations 0
Cbc0038I Pass  48: suminf.    1.28146 (9) obj. -56.0311 iterations 11
Cbc0038I Pass  49: suminf.    1.28146 (9) obj. -56.0311 iterations 3
Cbc0038I Pass  50: suminf.    1.18358 (9) obj. -56.0311 iterations 4
Cbc0038I Pass  51: suminf.    1.57649 (12) obj. -56.0311 iterations 31
Cbc0038I Pass  52: suminf.    1.49678 (11) obj. -56.0311 iterations 8
Cbc0038I Pass  53: suminf.    1.23350 (8) obj. -56.0311 iterations 9
Cbc0038I Pass  54: suminf.    0.63956 (7) obj. -56.0555 iterations 4
Cbc0038I Pass  55: suminf.    1.10098 (10) obj. -56.0311 iterations 19
Cbc0038I Pass  56: suminf.    1.81542 (11) obj. -56.0311 iterations 46
Cbc0038I Pass  57: suminf.    1.37721 (13) obj. -56.0311 iterations 15
Cbc0038I Pass  58: suminf.    0.94636 (10) obj. -56.0311 iterations 12
Cbc0038I Pass  59: suminf.    0.94636 (10) obj. -56.0311 iterations 3
Cbc0038I Pass  60: suminf.    0.90434 (10) obj. -56.0311 iterations 7
Cbc0038I Pass  61: suminf.    0.90434 (10) obj. -56.0311 iterations 3
Cbc0038I Pass  62: suminf.    0.94636 (10) obj. -56.0311 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 137 columns, reduced to 8 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -44.4495 - took 0.07 seconds
Cbc0012I Integer solution of -44.44953 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 115 rows 137 columns, reduced to 8 rows 11 columns
Cbc0031I 41 added rows had average density of 9.6097561
Cbc0013I At root node, 41 cuts changed objective from -88.498443 to -46.682198 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 394 row cuts average 2.3 elements, 12 column cuts (12 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 64.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 50 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 56.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 68.3 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -44.44953 best solution, best possible -46.643843 (0.29 seconds)
Cbc0012I Integer solution of -44.84684 found by DiveCoefficient after 376 iterations and 11 nodes (0.75 seconds)
Cbc0004I Integer solution of -45.02717 found after 400 iterations and 12 nodes (0.80 seconds)
Cbc0010I After 20 nodes, 1 on tree, -45.02717 best solution, best possible -46.371009 (1.02 seconds)
Cbc0001I Search completed - best objective -45.02717000000001, took 673 iterations and 24 nodes (1.37 seconds)
Cbc0032I Strong branching done 224 times (1133 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 8, 198 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.39

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 168 (-37) rows, 96 (-7) columns and 520 (-83) elements
Clp1000I sum of infeasibilities 9.86997e-05 - average 5.87498e-07, 31 fixed columns
Coin0506I Presolve 94 (-74) rows, 57 (-39) columns and 294 (-226) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Coin0511I After Postsolve, objective 46.871095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20450111 - largest nonzero change 0 ( 0%) - largest zero change 2.8539162e-05
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Clp0000I Optimal - objective value 46.871095
Coin0511I After Postsolve, objective 46.871095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.87109507 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 168 rows, 96 columns (95 integer (95 of which binary)) and 525 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.939%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.55321
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.2376 iterations 84
Cbc0038I Solution found of -0.2376
Cbc0038I Relaxing continuous gives -0.2376
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -0.2376 to -20.2736 (0.05 seconds)
Cbc0038I Round again with cutoff of -22.9334
Cbc0038I Pass   2: suminf.    2.51546 (12) obj. -22.9334 iterations 22
Cbc0038I Pass   3: suminf.    1.31385 (5) obj. -22.9334 iterations 21
Cbc0038I Pass   4: suminf.    1.31385 (5) obj. -22.9334 iterations 1
Cbc0038I Pass   5: suminf.    1.81896 (6) obj. -22.9334 iterations 20
Cbc0038I Pass   6: suminf.    1.78701 (7) obj. -22.9334 iterations 5
Cbc0038I Pass   7: suminf.    2.02310 (5) obj. -22.9334 iterations 15
Cbc0038I Pass   8: suminf.    1.46680 (5) obj. -22.9334 iterations 3
Cbc0038I Pass   9: suminf.    1.81863 (7) obj. -22.9334 iterations 17
Cbc0038I Pass  10: suminf.    1.41994 (7) obj. -22.9334 iterations 8
Cbc0038I Pass  11: suminf.    0.93127 (3) obj. -22.9334 iterations 12
Cbc0038I Pass  12: suminf.    0.91185 (4) obj. -22.9334 iterations 2
Cbc0038I Pass  13: suminf.    0.97542 (3) obj. -22.9334 iterations 6
Cbc0038I Pass  14: suminf.    0.62672 (2) obj. -22.9334 iterations 3
Cbc0038I Pass  15: suminf.    2.87167 (10) obj. -22.9334 iterations 30
Cbc0038I Pass  16: suminf.    1.98918 (9) obj. -22.9334 iterations 16
Cbc0038I Pass  17: suminf.    1.98918 (9) obj. -22.9334 iterations 0
Cbc0038I Pass  18: suminf.    2.71983 (8) obj. -22.9334 iterations 17
Cbc0038I Pass  19: suminf.    1.99727 (7) obj. -22.9334 iterations 8
Cbc0038I Pass  20: suminf.    1.88232 (7) obj. -22.9334 iterations 4
Cbc0038I Pass  21: suminf.    1.25282 (4) obj. -22.9334 iterations 10
Cbc0038I Pass  22: suminf.    1.91679 (6) obj. -22.9334 iterations 9
Cbc0038I Pass  23: suminf.    1.78701 (7) obj. -22.9334 iterations 9
Cbc0038I Pass  24: suminf.    2.02310 (5) obj. -22.9334 iterations 14
Cbc0038I Pass  25: suminf.    1.46680 (5) obj. -22.9334 iterations 3
Cbc0038I Pass  26: suminf.    1.81959 (10) obj. -22.9334 iterations 15
Cbc0038I Pass  27: suminf.    1.67075 (8) obj. -22.9334 iterations 8
Cbc0038I Pass  28: suminf.    1.67075 (8) obj. -22.9334 iterations 1
Cbc0038I Pass  29: suminf.    1.37830 (3) obj. -22.9334 iterations 9
Cbc0038I Pass  30: suminf.    0.95644 (4) obj. -22.9334 iterations 9
Cbc0038I Pass  31: suminf.    1.30853 (3) obj. -22.9334 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 90 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -20.2736 to -20.5426 (0.10 seconds)
Cbc0038I Round again with cutoff of -27.7209
Cbc0038I Pass  31: suminf.    3.16616 (14) obj. -27.7209 iterations 2
Cbc0038I Pass  32: suminf.    1.76532 (7) obj. -27.7209 iterations 22
Cbc0038I Pass  33: suminf.    1.55960 (8) obj. -27.7209 iterations 5
Cbc0038I Pass  34: suminf.    0.84935 (3) obj. -27.7209 iterations 17
Cbc0038I Pass  35: suminf.    0.84935 (3) obj. -27.7209 iterations 1
Cbc0038I Pass  36: suminf.    1.14280 (3) obj. -27.7209 iterations 6
Cbc0038I Pass  37: suminf.    2.13306 (7) obj. -27.7209 iterations 17
Cbc0038I Pass  38: suminf.    2.02503 (7) obj. -27.7209 iterations 10
Cbc0038I Pass  39: suminf.    3.55478 (10) obj. -27.7209 iterations 15
Cbc0038I Pass  40: suminf.    2.11666 (11) obj. -27.7209 iterations 11
Cbc0038I Pass  41: suminf.    1.93655 (12) obj. -27.7209 iterations 6
Cbc0038I Pass  42: suminf.    3.75893 (12) obj. -27.7209 iterations 13
Cbc0038I Pass  43: suminf.    3.75893 (12) obj. -27.7209 iterations 4
Cbc0038I Pass  44: suminf.    2.71221 (10) obj. -27.7209 iterations 34
Cbc0038I Pass  45: suminf.    2.71221 (10) obj. -27.7209 iterations 0
Cbc0038I Pass  46: suminf.    2.13124 (7) obj. -27.7209 iterations 14
Cbc0038I Pass  47: suminf.    2.04566 (8) obj. -27.7209 iterations 5
Cbc0038I Pass  48: suminf.    1.44869 (5) obj. -27.7209 iterations 13
Cbc0038I Pass  49: suminf.    0.94856 (3) obj. -27.7209 iterations 2
Cbc0038I Pass  50: suminf.    1.43930 (4) obj. -27.7209 iterations 10
Cbc0038I Pass  51: suminf.    1.43930 (4) obj. -27.7209 iterations 0
Cbc0038I Pass  52: suminf.    1.48524 (4) obj. -27.7209 iterations 4
Cbc0038I Pass  53: suminf.    1.42177 (4) obj. -27.7209 iterations 4
Cbc0038I Pass  54: suminf.    1.45881 (5) obj. -27.7209 iterations 6
Cbc0038I Pass  55: suminf.    5.28747 (16) obj. -27.7209 iterations 24
Cbc0038I Pass  56: suminf.    3.78082 (11) obj. -27.7209 iterations 22
Cbc0038I Pass  57: suminf.    3.56492 (11) obj. -27.7209 iterations 2
Cbc0038I Pass  58: suminf.    1.98193 (5) obj. -27.7209 iterations 14
Cbc0038I Pass  59: suminf.    1.74747 (5) obj. -27.7209 iterations 3
Cbc0038I Pass  60: suminf.    1.34453 (6) obj. -27.7209 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 96 columns, reduced to 84 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -20.5426 - took 0.12 seconds
Cbc0012I Integer solution of -20.54263 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 168 rows 96 columns, reduced to 70 rows 43 columns
Cbc0031I 23 added rows had average density of 68.347826
Cbc0013I At root node, 23 cuts changed objective from -46.871095 to -38.564846 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10117 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1601 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.54263 best solution, best possible -38.564846 (1.05 seconds)
Cbc0038I Full problem 168 rows 96 columns, reduced to 7 rows 9 columns
Cbc0038I Full problem 168 rows 96 columns, reduced to 61 rows 36 columns
Cbc0001I Search completed - best objective -20.54263, took 10468 iterations and 122 nodes (1.46 seconds)
Cbc0032I Strong branching done 1144 times (20236 iterations), fathomed 13 nodes and fixed 79 variables
Cbc0035I Maximum depth 32, 488 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       1.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-91) rows, 136 (-67) columns and 2164 (-3490) elements
Clp1000I sum of infeasibilities 1.20734e-07 - average 1.05907e-09, 82 fixed columns
Coin0506I Presolve 38 (-76) rows, 54 (-82) columns and 178 (-1986) elements
Clp0006I 0  Obj -0.0030764532 Dual inf 5.2728631 (53)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 1.2974996 - largest nonzero change 2.990347e-05 ( 0.0024275985%) - largest zero change 2.9935673e-05
Clp0000I Optimal - objective value 0.51413195
Clp0000I Optimal - objective value 0.51413195
Coin0511I After Postsolve, objective 0.51413195, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 0.51413195 Dual inf 57.758724 (41)
Clp0014I Perturbing problem by 0.001% of 1.3055158 - largest nonzero change 2.8711362e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 60.050875
Clp0000I Optimal - objective value 60.050875
Clp0000I Optimal - objective value 60.050875
Coin0511I After Postsolve, objective 60.050875, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.05087518 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 136 columns (136 integer (136 of which binary)) and 2171 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.406%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.2387
Cbc0038I Pass   1: suminf.    1.04546 (24) obj. -26.3977 iterations 28
Cbc0038I Pass   2: suminf.    1.04546 (24) obj. -26.3977 iterations 1
Cbc0038I Solution found of 6.06088
Cbc0038I Rounding solution of -6.98762 is better than previous of 6.06088

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 136 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -11.3253
Cbc0038I Pass   3: suminf.    1.04546 (24) obj. -26.3977 iterations 0
Cbc0038I Pass   4: suminf.    1.04546 (24) obj. -26.3977 iterations 1
Cbc0038I Pass   5: suminf.    1.02288 (15) obj. -11.3253 iterations 35
Cbc0038I Pass   6: suminf.    1.02288 (15) obj. -11.3253 iterations 0
Cbc0038I Pass   7: suminf.    2.28383 (7) obj. -11.3253 iterations 25
Cbc0038I Pass   8: suminf.    2.28383 (7) obj. -11.3253 iterations 0
Cbc0038I Pass   9: suminf.    1.47128 (6) obj. -11.3253 iterations 5
Cbc0038I Pass  10: suminf.    1.42984 (6) obj. -11.3253 iterations 11
Cbc0038I Pass  11: suminf.    1.26189 (4) obj. -11.3253 iterations 8
Cbc0038I Pass  12: suminf.    0.81848 (4) obj. -11.3253 iterations 5
Cbc0038I Pass  13: suminf.    1.26189 (4) obj. -11.3253 iterations 5
Cbc0038I Pass  14: suminf.    1.23126 (11) obj. -14.158 iterations 34
Cbc0038I Pass  15: suminf.    1.08079 (11) obj. -13.9892 iterations 10
Cbc0038I Pass  16: suminf.    0.92920 (7) obj. -11.3253 iterations 15
Cbc0038I Pass  17: suminf.    0.59903 (4) obj. -11.4757 iterations 9
Cbc0038I Pass  18: suminf.    0.92920 (7) obj. -11.3253 iterations 9
Cbc0038I Pass  19: suminf.    1.59919 (8) obj. -11.3253 iterations 32
Cbc0038I Pass  20: suminf.    0.91291 (8) obj. -11.3253 iterations 13
Cbc0038I Pass  21: suminf.    0.91196 (5) obj. -11.3253 iterations 17
Cbc0038I Pass  22: suminf.    0.40338 (5) obj. -11.3253 iterations 5
Cbc0038I Pass  23: suminf.    3.25281 (19) obj. -11.3253 iterations 36
Cbc0038I Pass  24: suminf.    1.46148 (11) obj. -16.3259 iterations 14
Cbc0038I Pass  25: suminf.    0.87407 (10) obj. -14.4623 iterations 1
Cbc0038I Pass  26: suminf.    0.84514 (5) obj. -11.3253 iterations 15
Cbc0038I Pass  27: suminf.    0.65939 (5) obj. -11.3253 iterations 5
Cbc0038I Pass  28: suminf.    0.38983 (5) obj. -11.3253 iterations 10
Cbc0038I Pass  29: suminf.    0.20328 (5) obj. -11.3253 iterations 13
Cbc0038I Pass  30: suminf.    0.49601 (6) obj. -11.3253 iterations 4
Cbc0038I Pass  31: suminf.    1.50103 (11) obj. -11.3253 iterations 15
Cbc0038I Pass  32: suminf.    1.31527 (10) obj. -11.3253 iterations 4
Cbc0038I Rounding solution of -8.97676 is better than previous of -6.98762

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 136 columns, reduced to 31 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -8.97676 to -14.3302 (0.06 seconds)
Cbc0038I Round again with cutoff of -21.537
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.04546 (24) obj. -26.3977 iterations 0
Cbc0038I Pass  33: suminf.    1.04546 (24) obj. -26.3977 iterations 1
Cbc0038I Pass  34: suminf.    2.17175 (23) obj. -21.537 iterations 35
Cbc0038I Pass  35: suminf.    1.29861 (21) obj. -21.537 iterations 11
Cbc0038I Pass  36: suminf.    1.28307 (10) obj. -21.537 iterations 36
Cbc0038I Pass  37: suminf.    1.00776 (12) obj. -21.537 iterations 5
Cbc0038I Pass  38: suminf.    2.19818 (11) obj. -21.537 iterations 12
Cbc0038I Pass  39: suminf.    2.02886 (11) obj. -21.537 iterations 9
Cbc0038I Pass  40: suminf.    1.80242 (9) obj. -21.537 iterations 16
Cbc0038I Pass  41: suminf.    1.73784 (10) obj. -21.537 iterations 2
Cbc0038I Pass  42: suminf.    1.95401 (10) obj. -21.537 iterations 9
Cbc0038I Pass  43: suminf.    1.95401 (10) obj. -21.537 iterations 2
Cbc0038I Pass  44: suminf.    1.73784 (10) obj. -21.537 iterations 5
Cbc0038I Pass  45: suminf.    1.45099 (13) obj. -21.537 iterations 27
Cbc0038I Pass  46: suminf.    1.28290 (13) obj. -21.537 iterations 4
Cbc0038I Pass  47: suminf.    1.50850 (12) obj. -21.537 iterations 16
Cbc0038I Pass  48: suminf.    1.30493 (12) obj. -21.537 iterations 3
Cbc0038I Pass  49: suminf.    1.32051 (9) obj. -21.537 iterations 14
Cbc0038I Pass  50: suminf.    1.32051 (9) obj. -21.537 iterations 5
Cbc0038I Pass  51: suminf.    1.15857 (9) obj. -21.537 iterations 8
Cbc0038I Pass  52: suminf.    1.15857 (9) obj. -21.537 iterations 3
Cbc0038I Pass  53: suminf.    1.32051 (9) obj. -21.537 iterations 15
Cbc0038I Pass  54: suminf.    1.88018 (15) obj. -21.537 iterations 25
Cbc0038I Pass  55: suminf.    1.76881 (15) obj. -21.537 iterations 5
Cbc0038I Pass  56: suminf.    1.87798 (16) obj. -21.537 iterations 23
Cbc0038I Pass  57: suminf.    1.82867 (13) obj. -21.537 iterations 5
Cbc0038I Pass  58: suminf.    1.79773 (11) obj. -21.537 iterations 4
Cbc0038I Pass  59: suminf.    1.81391 (11) obj. -21.537 iterations 7
Cbc0038I Pass  60: suminf.    1.81391 (11) obj. -21.537 iterations 5
Cbc0038I Pass  61: suminf.    1.79773 (11) obj. -21.537 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 136 columns, reduced to 36 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -14.3302 to -17.4729 (0.13 seconds)
Cbc0038I Round again with cutoff of -30.185
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.07866 (34) obj. -30.185 iterations 1
Cbc0038I Pass  62: suminf.    2.07866 (34) obj. -30.185 iterations 0
Cbc0038I Pass  63: suminf.    2.25504 (21) obj. -30.185 iterations 34
Cbc0038I Pass  64: suminf.    1.99397 (19) obj. -30.185 iterations 3
Cbc0038I Pass  65: suminf.    1.69214 (19) obj. -31.3924 iterations 5
Cbc0038I Pass  66: suminf.    1.47764 (15) obj. -30.185 iterations 33
Cbc0038I Pass  67: suminf.    1.45316 (15) obj. -30.185 iterations 4
Cbc0038I Pass  68: suminf.    2.38012 (17) obj. -30.185 iterations 22
Cbc0038I Pass  69: suminf.    2.38012 (17) obj. -30.185 iterations 3
Cbc0038I Pass  70: suminf.    2.41742 (16) obj. -30.185 iterations 15
Cbc0038I Pass  71: suminf.    2.28129 (17) obj. -30.185 iterations 6
Cbc0038I Pass  72: suminf.    2.41742 (16) obj. -30.185 iterations 8
Cbc0038I Pass  73: suminf.    2.26533 (17) obj. -30.185 iterations 5
Cbc0038I Pass  74: suminf.    2.41742 (16) obj. -30.185 iterations 8
Cbc0038I Pass  75: suminf.    2.12448 (18) obj. -30.185 iterations 22
Cbc0038I Pass  76: suminf.    1.99534 (18) obj. -30.185 iterations 4
Cbc0038I Pass  77: suminf.    2.79430 (17) obj. -30.185 iterations 12
Cbc0038I Pass  78: suminf.    2.15190 (18) obj. -30.185 iterations 6
Cbc0038I Pass  79: suminf.    1.97588 (17) obj. -30.185 iterations 10
Cbc0038I Pass  80: suminf.    2.25595 (15) obj. -30.185 iterations 22
Cbc0038I Pass  81: suminf.    2.25595 (15) obj. -30.185 iterations 1
Cbc0038I Pass  82: suminf.    2.73444 (16) obj. -30.185 iterations 11
Cbc0038I Pass  83: suminf.    2.41256 (17) obj. -30.185 iterations 4
Cbc0038I Pass  84: suminf.    2.41742 (16) obj. -30.185 iterations 14
Cbc0038I Pass  85: suminf.    2.26533 (17) obj. -30.185 iterations 6
Cbc0038I Pass  86: suminf.    2.41742 (16) obj. -30.185 iterations 9
Cbc0038I Pass  87: suminf.    1.85770 (18) obj. -30.185 iterations 20
Cbc0038I Pass  88: suminf.    1.85770 (18) obj. -30.185 iterations 1
Cbc0038I Pass  89: suminf.    2.72362 (17) obj. -30.185 iterations 31
Cbc0038I Pass  90: suminf.    2.25202 (17) obj. -30.185 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -17.4729 - took 0.11 seconds
Cbc0012I Integer solution of -17.47286 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 114 rows 136 columns, reduced to 26 rows 33 columns
Cbc0031I 53 added rows had average density of 42.811321
Cbc0013I At root node, 53 cuts changed objective from -50.363751 to -31.943874 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19743 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2382 row cuts average 129.0 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1100 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1048 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 318 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 50 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.518 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.47286 best solution, best possible -31.943874 (2.58 seconds)
Cbc0012I Integer solution of -18.70555 found by rounding after 6943 iterations and 1 nodes (2.59 seconds)
Cbc0012I Integer solution of -20.20482 found by DiveCoefficient after 7707 iterations and 5 nodes (2.92 seconds)
Cbc0012I Integer solution of -20.54263 found by rounding after 7770 iterations and 14 nodes (2.94 seconds)
Cbc0010I After 38 nodes, 5 on tree, -20.54263 best solution, best possible -30.251757 (3.29 seconds)
Cbc0038I Full problem 114 rows 136 columns, reduced to 46 rows 60 columns
Cbc0001I Search completed - best objective -20.54263, took 9446 iterations and 58 nodes (3.44 seconds)
Cbc0032I Strong branching done 642 times (12711 iterations), fathomed 7 nodes and fixed 2 variables
Cbc0035I Maximum depth 15, 248 variables fixed on reduced cost
Total time (CPU seconds):       2.80   (Wallclock seconds):       3.46

