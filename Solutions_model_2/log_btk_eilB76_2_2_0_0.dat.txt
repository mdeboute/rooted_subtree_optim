Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 74 (-4) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.75281e-05 - average 1.32789e-07, 16 fixed columns
Coin0506I Presolve 101 (-31) rows, 57 (-17) columns and 308 (-96) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 1.9984397 - largest nonzero change 0 ( 0%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 58.143583
Clp0000I Optimal - objective value 58.143583
Coin0511I After Postsolve, objective 58.143583, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.143583
Clp0000I Optimal - objective value 58.143583
Clp0000I Optimal - objective value 58.143583
Coin0511I After Postsolve, objective 58.143583, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.14358326 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 74 columns (73 integer (73 of which binary)) and 434 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.40134
Cbc0038I Solution found of -4.96666
Cbc0038I Relaxing continuous gives -10.6309
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 66 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -10.6309 to -32.2779 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.803
Cbc0038I Pass   1: suminf.    1.94795 (18) obj. -34.803 iterations 36
Cbc0038I Pass   2: suminf.    1.45379 (5) obj. -34.803 iterations 21
Cbc0038I Pass   3: suminf.    0.68676 (3) obj. -34.803 iterations 5
Cbc0038I Pass   4: suminf.    0.50944 (3) obj. -34.803 iterations 2
Cbc0038I Pass   5: suminf.    1.00538 (3) obj. -34.803 iterations 2
Cbc0038I Pass   6: suminf.    0.88188 (3) obj. -34.803 iterations 1
Cbc0038I Pass   7: suminf.    0.68857 (3) obj. -34.803 iterations 3
Cbc0038I Pass   8: suminf.    0.68857 (3) obj. -34.803 iterations 0
Cbc0038I Pass   9: suminf.    1.79870 (6) obj. -34.803 iterations 16
Cbc0038I Pass  10: suminf.    1.29151 (4) obj. -34.803 iterations 9
Cbc0038I Pass  11: suminf.    0.90025 (3) obj. -34.803 iterations 5
Cbc0038I Pass  12: suminf.    0.82177 (3) obj. -34.803 iterations 1
Cbc0038I Pass  13: suminf.    0.65503 (3) obj. -34.803 iterations 4
Cbc0038I Pass  14: suminf.    0.64897 (2) obj. -34.803 iterations 1
Cbc0038I Pass  15: suminf.    0.82177 (3) obj. -34.803 iterations 3
Cbc0038I Pass  16: suminf.    1.86024 (6) obj. -34.803 iterations 13
Cbc0038I Pass  17: suminf.    0.96867 (6) obj. -34.803 iterations 8
Cbc0038I Pass  18: suminf.    1.30095 (5) obj. -34.803 iterations 7
Cbc0038I Pass  19: suminf.    1.04268 (3) obj. -34.803 iterations 4
Cbc0038I Pass  20: suminf.    1.25038 (4) obj. -34.803 iterations 4
Cbc0038I Pass  21: suminf.    0.82953 (3) obj. -34.803 iterations 3
Cbc0038I Pass  22: suminf.    1.08661 (3) obj. -34.803 iterations 3
Cbc0038I Pass  23: suminf.    3.04662 (10) obj. -34.803 iterations 17
Cbc0038I Pass  24: suminf.    0.98017 (5) obj. -34.803 iterations 17
Cbc0038I Pass  25: suminf.    1.09082 (3) obj. -34.803 iterations 6
Cbc0038I Pass  26: suminf.    0.73037 (4) obj. -34.803 iterations 2
Cbc0038I Pass  27: suminf.    0.82953 (3) obj. -34.803 iterations 6
Cbc0038I Pass  28: suminf.    0.82953 (3) obj. -34.803 iterations 0
Cbc0038I Pass  29: suminf.    1.08661 (3) obj. -34.803 iterations 3
Cbc0038I Pass  30: suminf.    1.02748 (4) obj. -34.803 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 85 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -32.2779 - took 0.05 seconds
Cbc0012I Integer solution of -32.27791 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 129 rows 74 columns, reduced to 66 rows 36 columns
Cbc0031I 18 added rows had average density of 58.611111
Cbc0013I At root node, 18 cuts changed objective from -57.527881 to -50.261289 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8276 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1297 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -32.27791 best solution, best possible -50.261289 (0.70 seconds)
Cbc0038I Full problem 129 rows 74 columns, reduced to 33 rows 23 columns
Cbc0001I Search completed - best objective -32.27791000000001, took 8517 iterations and 52 nodes (0.90 seconds)
Cbc0032I Strong branching done 662 times (13309 iterations), fathomed 4 nodes and fixed 28 variables
Cbc0035I Maximum depth 19, 70 variables fixed on reduced cost
Total time (CPU seconds):       0.88   (Wallclock seconds):       0.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-54) rows, 114 (-38) columns and 1879 (-1424) elements
Clp1000I sum of infeasibilities 8.39841e-08 - average 8.39841e-10, 88 fixed columns
Coin0506I Presolve 21 (-79) rows, 26 (-88) columns and 88 (-1791) elements
Clp0006I 0  Obj 103.46181 Dual inf 0.94995164 (26)
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 3.3128839 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 103.46261
Clp0000I Optimal - objective value 103.46261
Coin0511I After Postsolve, objective 103.46261, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 103.46261 Dual inf 46.803372 (40)
Clp0014I Perturbing problem by 0.001% of 1.7511503 - largest nonzero change 1.5253311e-05 ( 0.0015253311%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 164.36792
Clp0000I Optimal - objective value 164.36792
Clp0000I Optimal - objective value 164.36792
Coin0511I After Postsolve, objective 164.36792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 164.3679191 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 116 columns (116 integer (116 of which binary)) and 1916 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.66822
Cbc0038I Pass   1: suminf.    0.04348 (3) obj. -16.9537 iterations 13
Cbc0038I Pass   2: suminf.    0.04348 (3) obj. -16.9537 iterations 4
Cbc0038I Solution found of -13.9972
Cbc0038I Rounding solution of -27.3973 is better than previous of -13.9972

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 116 columns, reduced to 39 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -27.3973 to -97.8025 (0.03 seconds)
Cbc0038I Round again with cutoff of -102.641
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.30034 (36) obj. -102.641 iterations 8
Cbc0038I Pass   4: suminf.    2.30034 (36) obj. -102.641 iterations 0
Cbc0038I Pass   5: suminf.    0.44979 (9) obj. -104.29 iterations 31
Cbc0038I Pass   6: suminf.    1.21709 (5) obj. -102.641 iterations 13
Cbc0038I Pass   7: suminf.    0.68292 (3) obj. -102.641 iterations 3
Cbc0038I Pass   8: suminf.    0.68292 (3) obj. -102.641 iterations 0
Cbc0038I Pass   9: suminf.    0.74495 (2) obj. -102.641 iterations 1
Cbc0038I Pass  10: suminf.    2.23394 (16) obj. -102.641 iterations 32
Cbc0038I Pass  11: suminf.    0.66224 (10) obj. -102.641 iterations 18
Cbc0038I Pass  12: suminf.    0.64318 (9) obj. -102.925 iterations 3
Cbc0038I Pass  13: suminf.    1.26351 (4) obj. -102.641 iterations 14
Cbc0038I Pass  14: suminf.    0.90634 (4) obj. -102.641 iterations 4
Cbc0038I Pass  15: suminf.    1.26351 (4) obj. -102.641 iterations 2
Cbc0038I Pass  16: suminf.    1.74352 (12) obj. -102.641 iterations 27
Cbc0038I Pass  17: suminf.    0.53267 (8) obj. -104.204 iterations 11
Cbc0038I Pass  18: suminf.    1.18333 (3) obj. -102.641 iterations 12
Cbc0038I Pass  19: suminf.    0.68292 (3) obj. -102.641 iterations 5
Cbc0038I Pass  20: suminf.    0.74495 (2) obj. -102.641 iterations 1
Cbc0038I Pass  21: suminf.    1.50515 (13) obj. -102.641 iterations 18
Cbc0038I Pass  22: suminf.    1.15870 (14) obj. -102.641 iterations 7
Cbc0038I Pass  23: suminf.    1.26351 (4) obj. -102.641 iterations 16
Cbc0038I Pass  24: suminf.    0.90634 (4) obj. -102.641 iterations 2
Cbc0038I Pass  25: suminf.    1.26351 (4) obj. -102.641 iterations 2
Cbc0038I Pass  26: suminf.    2.51915 (10) obj. -102.641 iterations 12
Cbc0038I Pass  27: suminf.    1.59368 (9) obj. -102.641 iterations 9
Cbc0038I Pass  28: suminf.    1.12113 (4) obj. -102.641 iterations 9
Cbc0038I Pass  29: suminf.    1.78488 (8) obj. -102.641 iterations 11
Cbc0038I Pass  30: suminf.    1.61905 (8) obj. -102.641 iterations 5
Cbc0038I Pass  31: suminf.    1.21086 (4) obj. -102.641 iterations 9
Cbc0038I Pass  32: suminf.    0.90634 (4) obj. -102.641 iterations 2
Cbc0038I Rounding solution of -99.4024 is better than previous of -97.8025

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 116 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -111.351
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.50687 (36) obj. -111.351 iterations 0
Cbc0038I Pass  33: suminf.    2.50687 (36) obj. -111.351 iterations 0
Cbc0038I Pass  34: suminf.    1.01616 (14) obj. -111.351 iterations 31
Cbc0038I Pass  35: suminf.    1.01616 (14) obj. -111.351 iterations 0
Cbc0038I Pass  36: suminf.    1.42004 (7) obj. -111.351 iterations 13
Cbc0038I Pass  37: suminf.    1.09068 (6) obj. -111.649 iterations 3
Cbc0038I Pass  38: suminf.    1.36019 (6) obj. -111.351 iterations 5
Cbc0038I Pass  39: suminf.    1.18885 (6) obj. -111.351 iterations 2
Cbc0038I Pass  40: suminf.    1.30754 (6) obj. -111.351 iterations 7
Cbc0038I Pass  41: suminf.    1.23716 (16) obj. -111.351 iterations 20
Cbc0038I Pass  42: suminf.    1.15206 (13) obj. -111.351 iterations 8
Cbc0038I Pass  43: suminf.    1.49427 (7) obj. -111.351 iterations 11
Cbc0038I Pass  44: suminf.    1.49427 (7) obj. -111.351 iterations 0
Cbc0038I Pass  45: suminf.    1.36019 (6) obj. -111.351 iterations 7
Cbc0038I Pass  46: suminf.    1.18885 (6) obj. -111.351 iterations 4
Cbc0038I Pass  47: suminf.    1.30754 (6) obj. -111.351 iterations 7
Cbc0038I Pass  48: suminf.    2.29672 (12) obj. -111.351 iterations 10
Cbc0038I Pass  49: suminf.    1.96286 (12) obj. -111.351 iterations 7
Cbc0038I Pass  50: suminf.    1.36019 (6) obj. -111.351 iterations 12
Cbc0038I Pass  51: suminf.    3.04068 (13) obj. -111.351 iterations 11
Cbc0038I Pass  52: suminf.    2.42666 (12) obj. -111.351 iterations 3
Cbc0038I Pass  53: suminf.    1.49671 (7) obj. -111.351 iterations 10
Cbc0038I Pass  54: suminf.    1.49671 (7) obj. -111.351 iterations 0
Cbc0038I Pass  55: suminf.    1.36019 (6) obj. -111.351 iterations 6
Cbc0038I Pass  56: suminf.    1.18885 (6) obj. -111.351 iterations 3
Cbc0038I Pass  57: suminf.    1.30754 (6) obj. -111.351 iterations 5
Cbc0038I Pass  58: suminf.    2.85155 (12) obj. -111.351 iterations 7
Cbc0038I Pass  59: suminf.    1.77983 (10) obj. -111.351 iterations 10
Cbc0038I Pass  60: suminf.    1.36019 (6) obj. -111.351 iterations 10
Cbc0038I Pass  61: suminf.    2.15224 (13) obj. -111.351 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 116 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -99.4024 - took 0.06 seconds
Cbc0012I Integer solution of -99.402402 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 37 added rows had average density of 2.2432432
Cbc0013I At root node, 40 cuts changed objective from -146.19124 to -99.402402 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 367 row cuts average 17.1 elements, 50 column cuts (50 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 89 row cuts average 54.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -99.402402, took 123 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 45 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 74 (-4) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.75281e-05 - average 1.32789e-07, 16 fixed columns
Coin0506I Presolve 101 (-31) rows, 57 (-17) columns and 308 (-96) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 1.9984397 - largest nonzero change 0 ( 0%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 58.143583
Clp0000I Optimal - objective value 58.143583
Coin0511I After Postsolve, objective 58.143583, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.143583
Clp0000I Optimal - objective value 58.143583
Clp0000I Optimal - objective value 58.143583
Coin0511I After Postsolve, objective 58.143583, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.14358326 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 129 rows, 74 columns (73 integer (73 of which binary)) and 434 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.40134
Cbc0038I Solution found of -4.96666
Cbc0038I Relaxing continuous gives -10.6309
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 66 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -10.6309 to -32.2779 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.803
Cbc0038I Pass   1: suminf.    1.94795 (18) obj. -34.803 iterations 36
Cbc0038I Pass   2: suminf.    1.45379 (5) obj. -34.803 iterations 21
Cbc0038I Pass   3: suminf.    0.68676 (3) obj. -34.803 iterations 5
Cbc0038I Pass   4: suminf.    0.50944 (3) obj. -34.803 iterations 2
Cbc0038I Pass   5: suminf.    1.00538 (3) obj. -34.803 iterations 2
Cbc0038I Pass   6: suminf.    0.88188 (3) obj. -34.803 iterations 1
Cbc0038I Pass   7: suminf.    0.68857 (3) obj. -34.803 iterations 3
Cbc0038I Pass   8: suminf.    0.68857 (3) obj. -34.803 iterations 0
Cbc0038I Pass   9: suminf.    1.79870 (6) obj. -34.803 iterations 16
Cbc0038I Pass  10: suminf.    1.29151 (4) obj. -34.803 iterations 9
Cbc0038I Pass  11: suminf.    0.90025 (3) obj. -34.803 iterations 5
Cbc0038I Pass  12: suminf.    0.82177 (3) obj. -34.803 iterations 1
Cbc0038I Pass  13: suminf.    0.65503 (3) obj. -34.803 iterations 4
Cbc0038I Pass  14: suminf.    0.64897 (2) obj. -34.803 iterations 1
Cbc0038I Pass  15: suminf.    0.82177 (3) obj. -34.803 iterations 3
Cbc0038I Pass  16: suminf.    1.86024 (6) obj. -34.803 iterations 13
Cbc0038I Pass  17: suminf.    0.96867 (6) obj. -34.803 iterations 8
Cbc0038I Pass  18: suminf.    1.30095 (5) obj. -34.803 iterations 7
Cbc0038I Pass  19: suminf.    1.04268 (3) obj. -34.803 iterations 4
Cbc0038I Pass  20: suminf.    1.25038 (4) obj. -34.803 iterations 4
Cbc0038I Pass  21: suminf.    0.82953 (3) obj. -34.803 iterations 3
Cbc0038I Pass  22: suminf.    1.08661 (3) obj. -34.803 iterations 3
Cbc0038I Pass  23: suminf.    3.04662 (10) obj. -34.803 iterations 17
Cbc0038I Pass  24: suminf.    0.98017 (5) obj. -34.803 iterations 17
Cbc0038I Pass  25: suminf.    1.09082 (3) obj. -34.803 iterations 6
Cbc0038I Pass  26: suminf.    0.73037 (4) obj. -34.803 iterations 2
Cbc0038I Pass  27: suminf.    0.82953 (3) obj. -34.803 iterations 6
Cbc0038I Pass  28: suminf.    0.82953 (3) obj. -34.803 iterations 0
Cbc0038I Pass  29: suminf.    1.08661 (3) obj. -34.803 iterations 3
Cbc0038I Pass  30: suminf.    1.02748 (4) obj. -34.803 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 74 columns, reduced to 85 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -32.2779 - took 0.05 seconds
Cbc0012I Integer solution of -32.27791 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 129 rows 74 columns, reduced to 66 rows 36 columns
Cbc0031I 18 added rows had average density of 58.611111
Cbc0013I At root node, 18 cuts changed objective from -57.527881 to -50.261289 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8276 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1297 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.27791 best solution, best possible -50.261289 (0.71 seconds)
Cbc0038I Full problem 129 rows 74 columns, reduced to 33 rows 23 columns
Cbc0001I Search completed - best objective -32.27791000000001, took 8517 iterations and 52 nodes (0.98 seconds)
Cbc0032I Strong branching done 662 times (13309 iterations), fathomed 4 nodes and fixed 28 variables
Cbc0035I Maximum depth 19, 70 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       0.99

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 112 (-41) columns and 1798 (-1506) elements
Clp1000I sum of infeasibilities 1.02986e-07 - average 1.05088e-09, 22 fixed columns
Coin0506I Presolve 79 (-19) rows, 90 (-22) columns and 1244 (-554) elements
Clp0006I 0  Obj 58.711279 Dual inf 5.2268606 (90)
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 5.8439352 - largest nonzero change 2.0155288e-05 ( 0.00091204228%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 69.7009
Clp0000I Optimal - objective value 69.7009
Coin0511I After Postsolve, objective 69.7009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 69.7009
Clp0000I Optimal - objective value 69.7009
Clp0000I Optimal - objective value 69.7009
Clp0000I Optimal - objective value 69.7009
Coin0511I After Postsolve, objective 69.7009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.70089982 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 114 columns (114 integer (114 of which binary)) and 1835 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.596%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 6.06529
Cbc0038I Pass   1: suminf.    1.04077 (27) obj. -16.1067 iterations 17
Cbc0038I Pass   2: suminf.    1.04077 (27) obj. -16.1067 iterations 0
Cbc0038I Pass   3: suminf.    0.51591 (16) obj. -3.74263 iterations 11
Cbc0038I Solution found of 17.543
Cbc0038I Rounding solution of 6.61925 is better than previous of 17.543

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 38 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 6.61925 to -2.46222 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.37794
Cbc0038I Pass   4: suminf.    1.04077 (27) obj. -16.1067 iterations 0
Cbc0038I Pass   5: suminf.    1.04077 (27) obj. -16.1067 iterations 0
Cbc0038I Pass   6: suminf.    0.72392 (18) obj. -7.37794 iterations 11
Cbc0038I Pass   7: suminf.    0.40983 (3) obj. -7.37794 iterations 28
Cbc0038I Pass   8: suminf.    0.26621 (2) obj. -7.37794 iterations 3
Cbc0038I Pass   9: suminf.    0.55295 (3) obj. -10.3927 iterations 3
Cbc0038I Pass  10: suminf.    0.55295 (3) obj. -10.3927 iterations 0
Cbc0038I Pass  11: suminf.    0.88956 (2) obj. -7.37794 iterations 4
Cbc0038I Pass  12: suminf.    0.27216 (2) obj. -7.37794 iterations 5
Cbc0038I Pass  13: suminf.    0.26621 (2) obj. -7.37794 iterations 2
Cbc0038I Pass  14: suminf.    0.55295 (3) obj. -10.3927 iterations 3
Cbc0038I Pass  15: suminf.    0.55295 (3) obj. -10.3927 iterations 0
Cbc0038I Pass  16: suminf.    0.88956 (2) obj. -7.37794 iterations 4
Cbc0038I Pass  17: suminf.    0.27216 (2) obj. -7.37794 iterations 5
Cbc0038I Pass  18: suminf.    0.26621 (2) obj. -7.37794 iterations 2
Cbc0038I Pass  19: suminf.    0.55295 (3) obj. -10.3927 iterations 3
Cbc0038I Pass  20: suminf.    0.55295 (3) obj. -10.3927 iterations 0
Cbc0038I Pass  21: suminf.    0.88956 (2) obj. -7.37794 iterations 4
Cbc0038I Pass  22: suminf.    0.27216 (2) obj. -7.37794 iterations 5
Cbc0038I Pass  23: suminf.    0.26621 (2) obj. -7.37794 iterations 2
Cbc0038I Pass  24: suminf.    0.55295 (3) obj. -10.3927 iterations 3
Cbc0038I Pass  25: suminf.    0.55295 (3) obj. -10.3927 iterations 0
Cbc0038I Pass  26: suminf.    0.88956 (2) obj. -7.37794 iterations 4
Cbc0038I Pass  27: suminf.    0.27216 (2) obj. -7.37794 iterations 5
Cbc0038I Pass  28: suminf.    0.26621 (2) obj. -7.37794 iterations 2
Cbc0038I Pass  29: suminf.    0.55295 (3) obj. -10.3927 iterations 3
Cbc0038I Pass  30: suminf.    0.55295 (3) obj. -10.3927 iterations 0
Cbc0038I Pass  31: suminf.    0.88956 (2) obj. -7.37794 iterations 4
Cbc0038I Pass  32: suminf.    0.27216 (2) obj. -7.37794 iterations 5
Cbc0038I Pass  33: suminf.    0.26621 (2) obj. -7.37794 iterations 2
Cbc0038I Rounding solution of -7.01455 is better than previous of -2.46222

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 45 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -7.01455 to -22.7946 (0.06 seconds)
Cbc0038I Round again with cutoff of -28.5595
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.60896 (38) obj. -28.5595 iterations 5
Cbc0038I Pass  34: suminf.    1.61786 (29) obj. -28.5595 iterations 3
Cbc0038I Pass  35: suminf.    1.14856 (27) obj. -30.8382 iterations 3
Cbc0038I Pass  36: suminf.    2.48356 (26) obj. -28.5595 iterations 26
Cbc0038I Pass  37: suminf.    1.42218 (25) obj. -28.5595 iterations 3
Cbc0038I Pass  38: suminf.    2.53422 (17) obj. -28.5595 iterations 17
Cbc0038I Pass  39: suminf.    2.31657 (17) obj. -28.5595 iterations 3
Cbc0038I Pass  40: suminf.    3.05430 (15) obj. -28.5595 iterations 20
Cbc0038I Pass  41: suminf.    3.05430 (15) obj. -28.5595 iterations 1
Cbc0038I Pass  42: suminf.    3.18151 (15) obj. -28.5595 iterations 6
Cbc0038I Pass  43: suminf.    2.68168 (16) obj. -28.5595 iterations 6
Cbc0038I Pass  44: suminf.    2.51258 (14) obj. -28.5595 iterations 5
Cbc0038I Pass  45: suminf.    2.33320 (17) obj. -28.5595 iterations 4
Cbc0038I Pass  46: suminf.    3.05430 (15) obj. -28.5595 iterations 12
Cbc0038I Pass  47: suminf.    3.05430 (15) obj. -28.5595 iterations 3
Cbc0038I Pass  48: suminf.    3.18151 (15) obj. -28.5595 iterations 6
Cbc0038I Pass  49: suminf.    2.68168 (16) obj. -28.5595 iterations 6
Cbc0038I Pass  50: suminf.    2.51258 (14) obj. -28.5595 iterations 5
Cbc0038I Pass  51: suminf.    2.33320 (17) obj. -28.5595 iterations 4
Cbc0038I Pass  52: suminf.    3.05430 (15) obj. -28.5595 iterations 11
Cbc0038I Pass  53: suminf.    3.05430 (15) obj. -28.5595 iterations 2
Cbc0038I Pass  54: suminf.    3.18151 (15) obj. -28.5595 iterations 6
Cbc0038I Pass  55: suminf.    2.68168 (16) obj. -28.5595 iterations 6
Cbc0038I Pass  56: suminf.    2.51258 (14) obj. -28.5595 iterations 5
Cbc0038I Pass  57: suminf.    2.33320 (17) obj. -28.5595 iterations 4
Cbc0038I Pass  58: suminf.    3.05430 (15) obj. -28.5595 iterations 12
Cbc0038I Pass  59: suminf.    3.05430 (15) obj. -28.5595 iterations 3
Cbc0038I Pass  60: suminf.    3.18151 (15) obj. -28.5595 iterations 6
Cbc0038I Pass  61: suminf.    2.68168 (16) obj. -28.5595 iterations 6
Cbc0038I Pass  62: suminf.    2.86585 (17) obj. -28.5595 iterations 6
Cbc0038I Rounding solution of -25.0591 is better than previous of -22.7946

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 45 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -35.4772
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.43104 (38) obj. -35.4772 iterations 0
Cbc0038I Pass  63: suminf.    3.05280 (36) obj. -35.4772 iterations 3
Cbc0038I Pass  64: suminf.    2.41024 (27) obj. -35.4772 iterations 17
Cbc0038I Pass  65: suminf.    2.41024 (27) obj. -35.4772 iterations 1
Cbc0038I Pass  66: suminf.    4.20658 (23) obj. -35.4772 iterations 22
Cbc0038I Pass  67: suminf.    3.36745 (22) obj. -35.4772 iterations 2
Cbc0038I Pass  68: suminf.    3.28011 (23) obj. -35.4772 iterations 6
Cbc0038I Pass  69: suminf.    3.53525 (24) obj. -35.4772 iterations 6
Cbc0038I Pass  70: suminf.    2.90324 (22) obj. -35.4772 iterations 2
Cbc0038I Pass  71: suminf.    2.77712 (22) obj. -35.4772 iterations 3
Cbc0038I Pass  72: suminf.    3.38371 (22) obj. -35.4772 iterations 27
Cbc0038I Pass  73: suminf.    3.38130 (23) obj. -35.4772 iterations 6
Cbc0038I Pass  74: suminf.    4.20658 (23) obj. -35.4772 iterations 9
Cbc0038I Pass  75: suminf.    4.02112 (24) obj. -35.4772 iterations 1
Cbc0038I Pass  76: suminf.    4.20658 (23) obj. -35.4772 iterations 11
Cbc0038I Pass  77: suminf.    3.40156 (23) obj. -35.4772 iterations 22
Cbc0038I Pass  78: suminf.    2.77919 (24) obj. -35.4772 iterations 9
Cbc0038I Pass  79: suminf.    2.77919 (24) obj. -35.4772 iterations 1
Cbc0038I Pass  80: suminf.    3.38371 (22) obj. -35.4772 iterations 16
Cbc0038I Pass  81: suminf.    3.08325 (23) obj. -35.4772 iterations 5
Cbc0038I Pass  82: suminf.    4.20658 (23) obj. -35.4772 iterations 15
Cbc0038I Pass  83: suminf.    4.02112 (24) obj. -35.4772 iterations 1
Cbc0038I Pass  84: suminf.    4.20658 (23) obj. -35.4772 iterations 10
Cbc0038I Pass  85: suminf.    3.94354 (24) obj. -35.4772 iterations 14
Cbc0038I Pass  86: suminf.    3.94354 (24) obj. -35.4772 iterations 1
Cbc0038I Pass  87: suminf.    4.20658 (23) obj. -35.4772 iterations 12
Cbc0038I Pass  88: suminf.    3.39427 (22) obj. -35.4772 iterations 7
Cbc0038I Pass  89: suminf.    3.31515 (23) obj. -35.4772 iterations 6
Cbc0038I Pass  90: suminf.    3.89224 (24) obj. -35.4772 iterations 8
Cbc0038I Pass  91: suminf.    3.13425 (22) obj. -35.4772 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 114 columns, reduced to 40 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -25.0591 - took 0.07 seconds
Cbc0012I Integer solution of -25.059144 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 96 rows 114 columns, reduced to 42 rows 47 columns
Cbc0012I Integer solution of -28.666654 found by RINS after 0 iterations and 0 nodes (0.11 seconds)
Cbc0012I Integer solution of -29.7811 found by DiveCoefficient after 4562 iterations and 0 nodes (2.80 seconds)
Cbc0031I 53 added rows had average density of 26.113208
Cbc0013I At root node, 53 cuts changed objective from -51.618457 to -34.682598 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13496 row cuts average 12.5 elements, 1 column cuts (16 active)  in 0.211 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1182 row cuts average 97.9 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 678 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 951 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 544 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 437 row cuts average 64.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 495 row cuts average 44.4 elements, 0 column cuts (0 active)  in 0.774 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.7811 best solution, best possible -34.682598 (2.86 seconds)
Cbc0012I Integer solution of -29.933554 found by rounding after 4728 iterations and 1 nodes (3.00 seconds)
Cbc0012I Integer solution of -31.8359 found by DiveCoefficient after 4728 iterations and 1 nodes (3.01 seconds)
Cbc0012I Integer solution of -32.27791 found by rounding after 4745 iterations and 3 nodes (3.08 seconds)
Cbc0010I After 7 nodes, 2 on tree, -32.27791 best solution, best possible -34.515842 (3.59 seconds)
Cbc0001I Search completed - best objective -32.27791000000001, took 6168 iterations and 12 nodes (4.26 seconds)
Cbc0032I Strong branching done 286 times (6596 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 77 variables fixed on reduced cost
Total time (CPU seconds):       3.07   (Wallclock seconds):       4.29

