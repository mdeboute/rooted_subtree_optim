Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 411 (-42) elements
Clp1000I sum of infeasibilities 1.65167e-06 - average 1.24185e-08, 10 fixed columns
Coin0506I Presolve 115 (-18) rows, 66 (-10) columns and 355 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.9576219 - largest nonzero change 0 ( 0%) - largest zero change 1.9978266e-05
Clp0000I Optimal - objective value 35.131255
Clp0000I Optimal - objective value 35.131255
Coin0511I After Postsolve, objective 35.131255, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.131255
Clp0000I Optimal - objective value 35.131255
Clp0000I Optimal - objective value 35.131255
Coin0511I After Postsolve, objective 35.131255, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.13125489 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 411 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.6669
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.4932 iterations 62
Cbc0038I Solution found of 12.4932
Cbc0038I Relaxing continuous gives 12.4932
Cbc0038I Rounding solution of -3.23441 is better than previous of 12.4932

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 78 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -3.23441 to -9.44853 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.0169
Cbc0038I Pass   2: suminf.    3.66759 (15) obj. -12.0169 iterations 16
Cbc0038I Pass   3: suminf.    2.54579 (9) obj. -12.0169 iterations 11
Cbc0038I Pass   4: suminf.    2.54579 (9) obj. -12.0169 iterations 0
Cbc0038I Pass   5: suminf.    3.02623 (11) obj. -12.0169 iterations 8
Cbc0038I Pass   6: suminf.    2.66405 (9) obj. -12.0169 iterations 8
Cbc0038I Pass   7: suminf.    2.66405 (9) obj. -12.0169 iterations 1
Cbc0038I Pass   8: suminf.    2.26782 (6) obj. -12.0169 iterations 8
Cbc0038I Pass   9: suminf.    1.51158 (5) obj. -12.0169 iterations 2
Cbc0038I Pass  10: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  11: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  12: suminf.    1.83578 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  13: suminf.    1.90052 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  14: suminf.    1.51158 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  15: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  16: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  17: suminf.    1.83578 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  18: suminf.    1.90052 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  19: suminf.    1.51158 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  20: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  21: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  22: suminf.    1.83578 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  23: suminf.    1.90052 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  24: suminf.    1.51158 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  25: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  26: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  27: suminf.    1.83578 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  28: suminf.    1.90052 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  29: suminf.    1.51158 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  30: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  31: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 78 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -9.44853 - took 0.07 seconds
Cbc0012I Integer solution of -9.448532 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 78 rows 46 columns
Cbc0031I 29 added rows had average density of 53.827586
Cbc0013I At root node, 29 cuts changed objective from -35.131255 to -27.269691 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14184 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2404 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.448532 best solution, best possible -27.269691 (0.91 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 30 rows 25 columns
Cbc0012I Integer solution of -10.132142 found by RINS after 9680 iterations and 43 nodes (1.14 seconds)
Cbc0012I Integer solution of -10.19484 found by rounding after 10349 iterations and 54 nodes (1.16 seconds)
Cbc0012I Integer solution of -10.219082 found by rounding after 10560 iterations and 77 nodes (1.19 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 68 rows 42 columns
Cbc0001I Search completed - best objective -10.219082, took 12550 iterations and 142 nodes (1.45 seconds)
Cbc0032I Strong branching done 1476 times (24428 iterations), fathomed 19 nodes and fixed 75 variables
Cbc0035I Maximum depth 24, 233 variables fixed on reduced cost
Total time (CPU seconds):       1.42   (Wallclock seconds):       1.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-55) rows, 116 (-36) columns and 1848 (-1455) elements
Clp1000I sum of infeasibilities 3.23393e-08 - average 3.2666e-10, 24 fixed columns
Coin0506I Presolve 80 (-19) rows, 92 (-24) columns and 1218 (-630) elements
Clp0006I 0  Obj 34.68691 Dual inf 3.7889719 (92)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.1128517 - largest nonzero change 2.6191512e-05 ( 0.0018056464%) - largest zero change 2.6852479e-05
Clp0000I Optimal - objective value 45.422177
Clp0000I Optimal - objective value 45.422177
Coin0511I After Postsolve, objective 45.422177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 45.422177
Clp0000I Optimal - objective value 45.422177
Clp0000I Optimal - objective value 45.422177
Clp0000I Optimal - objective value 45.422177
Coin0511I After Postsolve, objective 45.422177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.42217671 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 116 columns (116 integer (116 of which binary)) and 1850 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.356%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.37172
Cbc0038I Pass   1: suminf.    1.96541 (30) obj. -28.5899 iterations 12
Cbc0038I Pass   2: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass   3: suminf.    0.12422 (3) obj. 7.52625 iterations 27
Cbc0038I Solution found of 10.402
Cbc0038I Rounding solution of 5.70768 is better than previous of 10.402

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 1.19608
Cbc0038I Pass   4: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass   5: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass   6: suminf.    0.82684 (7) obj. 1.19608 iterations 28
Cbc0038I Pass   7: suminf.    0.92644 (9) obj. 1.19608 iterations 9
Cbc0038I Pass   8: suminf.    0.92644 (9) obj. 1.19608 iterations 1
Cbc0038I Pass   9: suminf.    1.04882 (3) obj. 1.19608 iterations 10
Cbc0038I Pass  10: suminf.    0.68275 (4) obj. 0.122745 iterations 3
Cbc0038I Pass  11: suminf.    0.95109 (4) obj. 1.19608 iterations 2
Cbc0038I Pass  12: suminf.    2.82431 (15) obj. 1.19608 iterations 30
Cbc0038I Pass  13: suminf.    1.22495 (12) obj. 1.19608 iterations 6
Cbc0038I Pass  14: suminf.    1.07788 (11) obj. -0.830374 iterations 1
Cbc0038I Pass  15: suminf.    1.06090 (8) obj. 1.19608 iterations 18
Cbc0038I Pass  16: suminf.    1.06090 (8) obj. 1.19608 iterations 0
Cbc0038I Pass  17: suminf.    0.53098 (6) obj. 1.19608 iterations 13
Cbc0038I Pass  18: suminf.    0.53098 (6) obj. 1.19608 iterations 0
Cbc0038I Pass  19: suminf.    1.30288 (8) obj. 1.19608 iterations 9
Cbc0038I Pass  20: suminf.    0.30287 (4) obj. 0.721063 iterations 8
Cbc0038I Pass  21: suminf.    0.42163 (4) obj. 1.19608 iterations 2
Cbc0038I Pass  22: suminf.    2.19396 (16) obj. 1.19608 iterations 38
Cbc0038I Pass  23: suminf.    2.08044 (15) obj. 1.19608 iterations 8
Cbc0038I Pass  24: suminf.    1.25107 (11) obj. 1.19608 iterations 14
Cbc0038I Pass  25: suminf.    1.16484 (10) obj. 1.19608 iterations 13
Cbc0038I Pass  26: suminf.    1.25107 (11) obj. 1.19608 iterations 8
Cbc0038I Pass  27: suminf.    1.12253 (10) obj. 1.19608 iterations 11
Cbc0038I Pass  28: suminf.    1.25107 (11) obj. 1.19608 iterations 8
Cbc0038I Pass  29: suminf.    1.97392 (16) obj. 1.19608 iterations 20
Cbc0038I Pass  30: suminf.    1.55453 (14) obj. 0.406606 iterations 6
Cbc0038I Pass  31: suminf.    1.14270 (10) obj. 1.19608 iterations 18
Cbc0038I Pass  32: suminf.    1.11759 (10) obj. 1.19608 iterations 5
Cbc0038I Pass  33: suminf.    1.95934 (11) obj. 1.19608 iterations 5
Cbc0038I Rounding solution of 4.62224 is better than previous of 5.70768

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 36 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 4.62224 to -0.58426 (0.09 seconds)
Cbc0038I Round again with cutoff of -8.34896
Cbc0038I Pass  33: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass  34: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass  35: suminf.    1.13730 (14) obj. -8.34896 iterations 20
Cbc0038I Pass  36: suminf.    0.68272 (14) obj. -8.34896 iterations 2
Cbc0038I Pass  37: suminf.    1.28038 (11) obj. -8.34896 iterations 19
Cbc0038I Pass  38: suminf.    1.28038 (11) obj. -8.34896 iterations 0
Cbc0038I Pass  39: suminf.    1.14034 (9) obj. -8.34896 iterations 15
Cbc0038I Pass  40: suminf.    1.08189 (8) obj. -8.34896 iterations 7
Cbc0038I Pass  41: suminf.    1.45434 (7) obj. -8.34896 iterations 8
Cbc0038I Pass  42: suminf.    1.45434 (7) obj. -8.34896 iterations 1
Cbc0038I Pass  43: suminf.    1.51138 (7) obj. -8.34896 iterations 5
Cbc0038I Pass  44: suminf.    1.08389 (8) obj. -8.88705 iterations 4
Cbc0038I Pass  45: suminf.    1.35294 (8) obj. -8.34896 iterations 6
Cbc0038I Pass  46: suminf.    2.67688 (14) obj. -8.34896 iterations 21
Cbc0038I Pass  47: suminf.    2.00056 (14) obj. -8.34896 iterations 9
Cbc0038I Pass  48: suminf.    2.07097 (12) obj. -8.34896 iterations 18
Cbc0038I Pass  49: suminf.    1.72466 (13) obj. -8.34896 iterations 3
Cbc0038I Pass  50: suminf.    1.93918 (9) obj. -8.34896 iterations 15
Cbc0038I Pass  51: suminf.    1.93918 (9) obj. -8.34896 iterations 3
Cbc0038I Pass  52: suminf.    1.98980 (9) obj. -8.34896 iterations 7
Cbc0038I Pass  53: suminf.    1.98980 (9) obj. -8.34896 iterations 3
Cbc0038I Pass  54: suminf.    1.93918 (9) obj. -8.34896 iterations 7
Cbc0038I Pass  55: suminf.    3.62273 (17) obj. -8.77414 iterations 19
Cbc0038I Pass  56: suminf.    3.25093 (16) obj. -8.34896 iterations 8
Cbc0038I Pass  57: suminf.    2.55966 (15) obj. -8.34896 iterations 2
Cbc0038I Pass  58: suminf.    1.99389 (12) obj. -8.34896 iterations 14
Cbc0038I Pass  59: suminf.    1.98784 (13) obj. -8.34896 iterations 2
Cbc0038I Pass  60: suminf.    2.77028 (11) obj. -8.34896 iterations 16
Cbc0038I Pass  61: suminf.    1.63430 (11) obj. -8.34896 iterations 4
Cbc0038I Pass  62: suminf.    1.44537 (10) obj. -8.40552 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -0.58426 - took 0.10 seconds
Cbc0012I Integer solution of -0.58426 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 26 rows 31 columns
Cbc0031I 62 added rows had average density of 27.403226
Cbc0013I At root node, 62 cuts changed objective from -39.407362 to -13.554118 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16005 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1641 row cuts average 109.1 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 608 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1019 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 344 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.628 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.58426 best solution, best possible -13.554118 (2.54 seconds)
Cbc0012I Integer solution of -6.065502 found by rounding after 6631 iterations and 3 nodes (2.82 seconds)
Cbc0012I Integer solution of -7.833622 found by rounding after 6822 iterations and 5 nodes (2.96 seconds)
Cbc0012I Integer solution of -7.916792 found by rounding after 7135 iterations and 10 nodes (3.15 seconds)
Cbc0004I Integer solution of -8.132142 found after 7260 iterations and 15 nodes (3.17 seconds)
Cbc0016I Integer solution of -8.19484 found by strong branching after 7293 iterations and 17 nodes (3.17 seconds)
Cbc0016I Integer solution of -8.219082 found by strong branching after 7349 iterations and 22 nodes (3.18 seconds)
Cbc0010I After 25 nodes, 8 on tree, -8.219082 best solution, best possible -13.554118 (3.24 seconds)
Cbc0012I Integer solution of -9.833622 found by rounding after 7849 iterations and 31 nodes (3.29 seconds)
Cbc0012I Integer solution of -10.219082 found by rounding after 8073 iterations and 36 nodes (3.34 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 3 rows 8 columns
Cbc0001I Search completed - best objective -10.219082, took 8541 iterations and 46 nodes (3.41 seconds)
Cbc0032I Strong branching done 684 times (14909 iterations), fathomed 8 nodes and fixed 10 variables
Cbc0035I Maximum depth 11, 58 variables fixed on reduced cost
Total time (CPU seconds):       2.76   (Wallclock seconds):       3.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 76 (-2) columns and 411 (-42) elements
Clp1000I sum of infeasibilities 1.65167e-06 - average 1.24185e-08, 10 fixed columns
Coin0506I Presolve 115 (-18) rows, 66 (-10) columns and 355 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.9576219 - largest nonzero change 0 ( 0%) - largest zero change 1.9978266e-05
Clp0000I Optimal - objective value 35.131255
Clp0000I Optimal - objective value 35.131255
Coin0511I After Postsolve, objective 35.131255, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.131255
Clp0000I Optimal - objective value 35.131255
Clp0000I Optimal - objective value 35.131255
Coin0511I After Postsolve, objective 35.131255, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.13125489 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 76 columns (75 integer (75 of which binary)) and 411 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 11.6669
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 12.4932 iterations 62
Cbc0038I Solution found of 12.4932
Cbc0038I Relaxing continuous gives 12.4932
Cbc0038I Rounding solution of -3.23441 is better than previous of 12.4932

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 78 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -3.23441 to -9.44853 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.0169
Cbc0038I Pass   2: suminf.    3.66759 (15) obj. -12.0169 iterations 16
Cbc0038I Pass   3: suminf.    2.54579 (9) obj. -12.0169 iterations 11
Cbc0038I Pass   4: suminf.    2.54579 (9) obj. -12.0169 iterations 0
Cbc0038I Pass   5: suminf.    3.02623 (11) obj. -12.0169 iterations 8
Cbc0038I Pass   6: suminf.    2.66405 (9) obj. -12.0169 iterations 8
Cbc0038I Pass   7: suminf.    2.66405 (9) obj. -12.0169 iterations 1
Cbc0038I Pass   8: suminf.    2.26782 (6) obj. -12.0169 iterations 8
Cbc0038I Pass   9: suminf.    1.51158 (5) obj. -12.0169 iterations 2
Cbc0038I Pass  10: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  11: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  12: suminf.    1.83578 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  13: suminf.    1.90052 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  14: suminf.    1.51158 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  15: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  16: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  17: suminf.    1.83578 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  18: suminf.    1.90052 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  19: suminf.    1.51158 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  20: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  21: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  22: suminf.    1.83578 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  23: suminf.    1.90052 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  24: suminf.    1.51158 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  25: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  26: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  27: suminf.    1.83578 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  28: suminf.    1.90052 (5) obj. -12.0169 iterations 3
Cbc0038I Pass  29: suminf.    1.51158 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  30: suminf.    1.48901 (5) obj. -12.0169 iterations 1
Cbc0038I Pass  31: suminf.    1.85625 (5) obj. -12.0169 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 76 columns, reduced to 78 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -9.44853 - took 0.07 seconds
Cbc0012I Integer solution of -9.448532 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 78 rows 46 columns
Cbc0031I 29 added rows had average density of 53.827586
Cbc0013I At root node, 29 cuts changed objective from -35.131255 to -27.269691 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14184 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2404 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.448532 best solution, best possible -27.269691 (0.88 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 30 rows 25 columns
Cbc0012I Integer solution of -10.132142 found by RINS after 9680 iterations and 43 nodes (1.11 seconds)
Cbc0012I Integer solution of -10.19484 found by rounding after 10349 iterations and 54 nodes (1.14 seconds)
Cbc0012I Integer solution of -10.219082 found by rounding after 10560 iterations and 77 nodes (1.16 seconds)
Cbc0038I Full problem 133 rows 76 columns, reduced to 68 rows 42 columns
Cbc0001I Search completed - best objective -10.219082, took 12550 iterations and 142 nodes (1.44 seconds)
Cbc0032I Strong branching done 1476 times (24428 iterations), fathomed 19 nodes and fixed 75 variables
Cbc0035I Maximum depth 24, 233 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 116 (-37) columns and 1848 (-1456) elements
Clp1000I sum of infeasibilities 3.23393e-08 - average 3.2666e-10, 24 fixed columns
Coin0506I Presolve 80 (-19) rows, 92 (-24) columns and 1218 (-630) elements
Clp0006I 0  Obj 34.68691 Dual inf 3.7889719 (92)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.1128517 - largest nonzero change 2.6191512e-05 ( 0.0018056464%) - largest zero change 2.6852479e-05
Clp0000I Optimal - objective value 45.422177
Clp0000I Optimal - objective value 45.422177
Coin0511I After Postsolve, objective 45.422177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 45.422177
Clp0000I Optimal - objective value 45.422177
Clp0000I Optimal - objective value 45.422177
Clp0000I Optimal - objective value 45.422177
Coin0511I After Postsolve, objective 45.422177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.42217671 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 99 rows, 116 columns (116 integer (116 of which binary)) and 1850 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.356%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.37172
Cbc0038I Pass   1: suminf.    1.96541 (30) obj. -28.5899 iterations 12
Cbc0038I Pass   2: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass   3: suminf.    0.12422 (3) obj. 7.52625 iterations 27
Cbc0038I Solution found of 10.402
Cbc0038I Rounding solution of 5.70768 is better than previous of 10.402

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 1.19608
Cbc0038I Pass   4: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass   5: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass   6: suminf.    0.82684 (7) obj. 1.19608 iterations 28
Cbc0038I Pass   7: suminf.    0.92644 (9) obj. 1.19608 iterations 9
Cbc0038I Pass   8: suminf.    0.92644 (9) obj. 1.19608 iterations 1
Cbc0038I Pass   9: suminf.    1.04882 (3) obj. 1.19608 iterations 10
Cbc0038I Pass  10: suminf.    0.68275 (4) obj. 0.122745 iterations 3
Cbc0038I Pass  11: suminf.    0.95109 (4) obj. 1.19608 iterations 2
Cbc0038I Pass  12: suminf.    2.82431 (15) obj. 1.19608 iterations 30
Cbc0038I Pass  13: suminf.    1.22495 (12) obj. 1.19608 iterations 6
Cbc0038I Pass  14: suminf.    1.07788 (11) obj. -0.830374 iterations 1
Cbc0038I Pass  15: suminf.    1.06090 (8) obj. 1.19608 iterations 18
Cbc0038I Pass  16: suminf.    1.06090 (8) obj. 1.19608 iterations 0
Cbc0038I Pass  17: suminf.    0.53098 (6) obj. 1.19608 iterations 13
Cbc0038I Pass  18: suminf.    0.53098 (6) obj. 1.19608 iterations 0
Cbc0038I Pass  19: suminf.    1.30288 (8) obj. 1.19608 iterations 9
Cbc0038I Pass  20: suminf.    0.30287 (4) obj. 0.721063 iterations 8
Cbc0038I Pass  21: suminf.    0.42163 (4) obj. 1.19608 iterations 2
Cbc0038I Pass  22: suminf.    2.19396 (16) obj. 1.19608 iterations 38
Cbc0038I Pass  23: suminf.    2.08044 (15) obj. 1.19608 iterations 8
Cbc0038I Pass  24: suminf.    1.25107 (11) obj. 1.19608 iterations 14
Cbc0038I Pass  25: suminf.    1.16484 (10) obj. 1.19608 iterations 13
Cbc0038I Pass  26: suminf.    1.25107 (11) obj. 1.19608 iterations 8
Cbc0038I Pass  27: suminf.    1.12253 (10) obj. 1.19608 iterations 11
Cbc0038I Pass  28: suminf.    1.25107 (11) obj. 1.19608 iterations 8
Cbc0038I Pass  29: suminf.    1.97392 (16) obj. 1.19608 iterations 20
Cbc0038I Pass  30: suminf.    1.55453 (14) obj. 0.406606 iterations 6
Cbc0038I Pass  31: suminf.    1.14270 (10) obj. 1.19608 iterations 18
Cbc0038I Pass  32: suminf.    1.11759 (10) obj. 1.19608 iterations 5
Cbc0038I Pass  33: suminf.    1.95934 (11) obj. 1.19608 iterations 5
Cbc0038I Rounding solution of 4.62224 is better than previous of 5.70768

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 99 rows 116 columns, reduced to 36 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 4.62224 to -0.58426 (0.10 seconds)
Cbc0038I Round again with cutoff of -8.34896
Cbc0038I Pass  33: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass  34: suminf.    1.96541 (30) obj. -28.5899 iterations 0
Cbc0038I Pass  35: suminf.    1.13730 (14) obj. -8.34896 iterations 20
Cbc0038I Pass  36: suminf.    0.68272 (14) obj. -8.34896 iterations 2
Cbc0038I Pass  37: suminf.    1.28038 (11) obj. -8.34896 iterations 19
Cbc0038I Pass  38: suminf.    1.28038 (11) obj. -8.34896 iterations 0
Cbc0038I Pass  39: suminf.    1.14034 (9) obj. -8.34896 iterations 15
Cbc0038I Pass  40: suminf.    1.08189 (8) obj. -8.34896 iterations 7
Cbc0038I Pass  41: suminf.    1.45434 (7) obj. -8.34896 iterations 8
Cbc0038I Pass  42: suminf.    1.45434 (7) obj. -8.34896 iterations 1
Cbc0038I Pass  43: suminf.    1.51138 (7) obj. -8.34896 iterations 5
Cbc0038I Pass  44: suminf.    1.08389 (8) obj. -8.88705 iterations 4
Cbc0038I Pass  45: suminf.    1.35294 (8) obj. -8.34896 iterations 6
Cbc0038I Pass  46: suminf.    2.67688 (14) obj. -8.34896 iterations 21
Cbc0038I Pass  47: suminf.    2.00056 (14) obj. -8.34896 iterations 9
Cbc0038I Pass  48: suminf.    2.07097 (12) obj. -8.34896 iterations 18
Cbc0038I Pass  49: suminf.    1.72466 (13) obj. -8.34896 iterations 3
Cbc0038I Pass  50: suminf.    1.93918 (9) obj. -8.34896 iterations 15
Cbc0038I Pass  51: suminf.    1.93918 (9) obj. -8.34896 iterations 3
Cbc0038I Pass  52: suminf.    1.98980 (9) obj. -8.34896 iterations 7
Cbc0038I Pass  53: suminf.    1.98980 (9) obj. -8.34896 iterations 3
Cbc0038I Pass  54: suminf.    1.93918 (9) obj. -8.34896 iterations 7
Cbc0038I Pass  55: suminf.    3.62273 (17) obj. -8.77414 iterations 19
Cbc0038I Pass  56: suminf.    3.25093 (16) obj. -8.34896 iterations 8
Cbc0038I Pass  57: suminf.    2.55966 (15) obj. -8.34896 iterations 2
Cbc0038I Pass  58: suminf.    1.99389 (12) obj. -8.34896 iterations 14
Cbc0038I Pass  59: suminf.    1.98784 (13) obj. -8.34896 iterations 2
Cbc0038I Pass  60: suminf.    2.77028 (11) obj. -8.34896 iterations 16
Cbc0038I Pass  61: suminf.    1.63430 (11) obj. -8.34896 iterations 4
Cbc0038I Pass  62: suminf.    1.44537 (10) obj. -8.40552 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -0.58426 - took 0.10 seconds
Cbc0012I Integer solution of -0.58426 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 26 rows 31 columns
Cbc0031I 62 added rows had average density of 27.403226
Cbc0013I At root node, 62 cuts changed objective from -39.407362 to -13.554118 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16005 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1641 row cuts average 109.1 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 608 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1019 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 344 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.626 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.58426 best solution, best possible -13.554118 (2.54 seconds)
Cbc0012I Integer solution of -6.065502 found by rounding after 6631 iterations and 3 nodes (2.84 seconds)
Cbc0012I Integer solution of -7.833622 found by rounding after 6822 iterations and 5 nodes (2.97 seconds)
Cbc0012I Integer solution of -7.916792 found by rounding after 7135 iterations and 10 nodes (3.16 seconds)
Cbc0004I Integer solution of -8.132142 found after 7260 iterations and 15 nodes (3.18 seconds)
Cbc0016I Integer solution of -8.19484 found by strong branching after 7293 iterations and 17 nodes (3.18 seconds)
Cbc0016I Integer solution of -8.219082 found by strong branching after 7349 iterations and 22 nodes (3.19 seconds)
Cbc0010I After 25 nodes, 8 on tree, -8.219082 best solution, best possible -13.554118 (3.25 seconds)
Cbc0012I Integer solution of -9.833622 found by rounding after 7849 iterations and 31 nodes (3.30 seconds)
Cbc0012I Integer solution of -10.219082 found by rounding after 8073 iterations and 36 nodes (3.35 seconds)
Cbc0038I Full problem 99 rows 116 columns, reduced to 3 rows 8 columns
Cbc0001I Search completed - best objective -10.219082, took 8541 iterations and 46 nodes (3.42 seconds)
Cbc0032I Strong branching done 684 times (14909 iterations), fathomed 8 nodes and fixed 10 variables
Cbc0035I Maximum depth 11, 58 variables fixed on reduced cost
Total time (CPU seconds):       2.76   (Wallclock seconds):       3.43

