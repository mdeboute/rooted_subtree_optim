Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 492 (-35) rows, 254 (-10) columns and 1465 (-80) elements
Clp1000I sum of infeasibilities 3.91355e-05 - average 7.95437e-08, 162 fixed columns
Coin0506I Presolve 171 (-321) rows, 89 (-165) columns and 503 (-962) elements
Clp0029I End of values pass after 89 iterations
Clp0000I Optimal - objective value 297.2944
Clp0000I Optimal - objective value 297.2944
Coin0511I After Postsolve, objective 297.2944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13466706 - largest nonzero change 0 ( 0%) - largest zero change 2.9779069e-05
Clp0000I Optimal - objective value 297.2944
Clp0000I Optimal - objective value 297.2944
Clp0000I Optimal - objective value 297.2944
Coin0511I After Postsolve, objective 297.2944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 297.2944014 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 492 rows, 254 columns (253 integer (253 of which binary)) and 1465 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.379%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 10.4101
Cbc0038I Solution found of 5.22374
Cbc0038I Relaxing continuous gives -27.6926
Cbc0038I Before mini branch and bound, 212 integers at bound fixed and 0 continuous
Cbc0038I Full problem 492 rows 254 columns, reduced to 80 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -27.6926 to -201.979 (0.06 seconds)
Cbc0038I Round again with cutoff of -211.51
Cbc0038I Pass   1: suminf.    5.38937 (37) obj. -211.51 iterations 144
Cbc0038I Pass   2: suminf.    3.73562 (11) obj. -211.51 iterations 54
Cbc0038I Pass   3: suminf.    2.28749 (9) obj. -211.51 iterations 18
Cbc0038I Pass   4: suminf.    2.15950 (9) obj. -211.51 iterations 4
Cbc0038I Pass   5: suminf.    2.44353 (12) obj. -211.51 iterations 20
Cbc0038I Pass   6: suminf.    2.29719 (11) obj. -211.51 iterations 1
Cbc0038I Pass   7: suminf.    2.29470 (9) obj. -211.51 iterations 4
Cbc0038I Pass   8: suminf.    3.25870 (9) obj. -211.51 iterations 14
Cbc0038I Pass   9: suminf.    2.12636 (11) obj. -211.51 iterations 13
Cbc0038I Pass  10: suminf.    1.62915 (9) obj. -211.51 iterations 4
Cbc0038I Pass  11: suminf.    1.50055 (11) obj. -211.51 iterations 6
Cbc0038I Pass  12: suminf.    2.50666 (7) obj. -211.51 iterations 23
Cbc0038I Pass  13: suminf.    2.08152 (7) obj. -211.51 iterations 7
Cbc0038I Pass  14: suminf.    1.83238 (7) obj. -211.51 iterations 3
Cbc0038I Pass  15: suminf.    1.53249 (8) obj. -211.51 iterations 9
Cbc0038I Pass  16: suminf.    2.98864 (8) obj. -211.51 iterations 17
Cbc0038I Pass  17: suminf.    2.98864 (8) obj. -211.51 iterations 2
Cbc0038I Pass  18: suminf.    3.20344 (11) obj. -211.51 iterations 14
Cbc0038I Pass  19: suminf.    2.50884 (9) obj. -211.51 iterations 12
Cbc0038I Pass  20: suminf.    2.50884 (9) obj. -211.51 iterations 0
Cbc0038I Pass  21: suminf.    2.88628 (8) obj. -211.51 iterations 12
Cbc0038I Pass  22: suminf.    1.93562 (7) obj. -211.51 iterations 5
Cbc0038I Pass  23: suminf.    2.95852 (9) obj. -211.51 iterations 16
Cbc0038I Pass  24: suminf.    2.58378 (12) obj. -211.51 iterations 10
Cbc0038I Pass  25: suminf.    3.02892 (13) obj. -211.51 iterations 18
Cbc0038I Pass  26: suminf.    2.01602 (11) obj. -211.51 iterations 16
Cbc0038I Pass  27: suminf.    1.84098 (11) obj. -211.51 iterations 5
Cbc0038I Pass  28: suminf.    3.17701 (10) obj. -211.51 iterations 22
Cbc0038I Pass  29: suminf.    2.83853 (8) obj. -211.51 iterations 5
Cbc0038I Pass  30: suminf.    2.18607 (8) obj. -211.51 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 492 rows 254 columns, reduced to 115 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -201.979 - took 0.11 seconds
Cbc0012I Integer solution of -201.9787 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 492 rows 254 columns, reduced to 80 rows 42 columns
Cbc0031I 19 added rows had average density of 173.68421
Cbc0013I At root node, 19 cuts changed objective from -297.2944 to -274.75034 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14371 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.369 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1342 row cuts average 251.6 elements, 0 column cuts (0 active)  in 0.261 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.253 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 244.6 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -201.9787 best solution, best possible -274.75034 (2.37 seconds)
Cbc0012I Integer solution of -202.8255 found by rounding after 8902 iterations and 25 nodes (2.86 seconds)
Cbc0012I Integer solution of -207.532 found by rounding after 9332 iterations and 41 nodes (2.90 seconds)
Cbc0010I After 88 nodes, 13 on tree, -207.532 best solution, best possible -274.75034 (3.08 seconds)
Cbc0038I Full problem 492 rows 254 columns, reduced to 15 rows 14 columns
Cbc0012I Integer solution of -208.0354 found by RINS after 10894 iterations and 91 nodes (3.09 seconds)
Cbc0012I Integer solution of -208.537 found by rounding after 12002 iterations and 124 nodes (3.18 seconds)
Cbc0001I Search completed - best objective -208.537, took 14989 iterations and 208 nodes (3.48 seconds)
Cbc0032I Strong branching done 1750 times (36136 iterations), fathomed 59 nodes and fixed 109 variables
Cbc0035I Maximum depth 31, 1901 variables fixed on reduced cost
Total time (CPU seconds):       3.41   (Wallclock seconds):       3.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 381 (-145) rows, 395 (-129) columns and 19227 (-16509) elements
Clp1000I sum of infeasibilities 1.31771e-06 - average 3.45857e-09, 107 fixed columns
Coin0506I Presolve 275 (-106) rows, 288 (-107) columns and 10544 (-8683) elements
Clp0006I 0  Obj 314.24589 Dual inf 149.6171 (283)
Clp0029I End of values pass after 287 iterations
Clp0014I Perturbing problem by 0.001% of 2.1458324 - largest nonzero change 2.4357273e-05 ( 0.0016580886%) - largest zero change 2.9283556e-05
Clp0000I Optimal - objective value 354.38095
Clp0000I Optimal - objective value 354.38095
Coin0511I After Postsolve, objective 354.38095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 354.38095 Dual inf 57.325572 (2)
Clp0014I Perturbing problem by 0.001% of 1.790038 - largest nonzero change 2.954978e-05 ( 0.0025627714%) - largest zero change 2.9597463e-05
Clp0000I Optimal - objective value 354.38095
Clp0000I Optimal - objective value 354.38095
Clp0000I Optimal - objective value 354.38095
Coin0511I After Postsolve, objective 354.38095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 354.3809499 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0004I processed model has 381 rows, 395 columns (395 integer (395 of which binary)) and 19227 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.004%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 143 integers unsatisfied sum - 12.0454
Cbc0038I Pass   1: suminf.    3.59147 (114) obj. -230.263 iterations 46
Cbc0038I Pass   2: suminf.    3.59147 (114) obj. -230.263 iterations 1
Cbc0038I Pass   3: suminf.    2.59323 (88) obj. -187.972 iterations 26
Cbc0038I Pass   4: suminf.    1.94023 (69) obj. -151.304 iterations 19
Cbc0038I Pass   5: suminf.    1.58161 (58) obj. -140.662 iterations 11
Cbc0038I Pass   6: suminf.    1.04249 (41) obj. -120.328 iterations 17
Cbc0038I Pass   7: suminf.    0.38764 (19) obj. -92.1878 iterations 22
Cbc0038I Pass   8: suminf.    0.01538 (1) obj. -73.5759 iterations 18
Cbc0038I Solution found of -72.5913
Cbc0038I Rounding solution of -145.676 is better than previous of -72.5913

Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 395 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -145.676 to -149.705 (0.16 seconds)
Cbc0038I Round again with cutoff of -170.134
Cbc0038I Pass   9: suminf.    3.59147 (114) obj. -230.263 iterations 0
Cbc0038I Pass  10: suminf.    3.59147 (114) obj. -230.263 iterations 1
Cbc0038I Pass  11: suminf.    2.66531 (90) obj. -189.9 iterations 24
Cbc0038I Pass  12: suminf.    2.45722 (78) obj. -170.134 iterations 15
Cbc0038I Pass  13: suminf.    1.83048 (63) obj. -195.393 iterations 16
Cbc0038I Pass  14: suminf.    1.17193 (44) obj. -171.261 iterations 19
Cbc0038I Pass  15: suminf.    0.48625 (24) obj. -170.134 iterations 29
Cbc0038I Pass  16: suminf.    0.47503 (22) obj. -170.406 iterations 7
Cbc0038I Pass  17: suminf.    0.33738 (3) obj. -170.134 iterations 54
Cbc0038I Pass  18: suminf.    0.31732 (3) obj. -170.134 iterations 8
Cbc0038I Pass  19: suminf.    0.76516 (12) obj. -170.134 iterations 12
Cbc0038I Pass  20: suminf.    0.42230 (3) obj. -170.134 iterations 9
Cbc0038I Pass  21: suminf.    0.33738 (3) obj. -170.134 iterations 6
Cbc0038I Pass  22: suminf.    1.34149 (29) obj. -170.134 iterations 74
Cbc0038I Pass  23: suminf.    1.11759 (30) obj. -171.114 iterations 14
Cbc0038I Pass  24: suminf.    0.97186 (12) obj. -170.134 iterations 26
Cbc0038I Pass  25: suminf.    0.61291 (12) obj. -170.134 iterations 2
Cbc0038I Pass  26: suminf.    0.74920 (7) obj. -170.134 iterations 19
Cbc0038I Pass  27: suminf.    0.30834 (5) obj. -170.134 iterations 9
Cbc0038I Pass  28: suminf.    0.93709 (5) obj. -170.134 iterations 14
Cbc0038I Pass  29: suminf.    0.93709 (5) obj. -170.134 iterations 0
Cbc0038I Pass  30: suminf.    1.00393 (5) obj. -170.134 iterations 13
Cbc0038I Pass  31: suminf.    1.00393 (5) obj. -170.134 iterations 9
Cbc0038I Pass  32: suminf.    0.93709 (5) obj. -170.134 iterations 14
Cbc0038I Pass  33: suminf.    1.27881 (20) obj. -170.134 iterations 84
Cbc0038I Pass  34: suminf.    1.20402 (23) obj. -170.134 iterations 22
Cbc0038I Pass  35: suminf.    0.46415 (10) obj. -175.516 iterations 21
Cbc0038I Pass  36: suminf.    0.46415 (10) obj. -175.516 iterations 0
Cbc0038I Pass  37: suminf.    0.31984 (4) obj. -170.134 iterations 17
Cbc0038I Pass  38: suminf.    0.30880 (5) obj. -170.134 iterations 8
Cbc0038I Rounding solution of -153.393 is better than previous of -149.705

Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 395 columns, reduced to 36 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -153.393 to -168.415 (0.28 seconds)
Cbc0038I Round again with cutoff of -206.906
Cbc0038I Pass  38: suminf.    3.59147 (114) obj. -230.263 iterations 0
Cbc0038I Pass  39: suminf.    3.59147 (114) obj. -230.263 iterations 1
Cbc0038I Pass  40: suminf.    3.07682 (93) obj. -206.906 iterations 23
Cbc0038I Pass  41: suminf.    2.29601 (71) obj. -206.906 iterations 36
Cbc0038I Pass  42: suminf.    1.37690 (44) obj. -206.906 iterations 56
Cbc0038I Pass  43: suminf.    1.20800 (44) obj. -207.819 iterations 4
Cbc0038I Pass  44: suminf.    1.33899 (36) obj. -206.906 iterations 27
Cbc0038I Pass  45: suminf.    0.94358 (36) obj. -215.404 iterations 4
Cbc0038I Pass  46: suminf.    0.88902 (21) obj. -206.906 iterations 31
Cbc0038I Pass  47: suminf.    0.49603 (21) obj. -212.265 iterations 4
Cbc0038I Pass  48: suminf.    1.27362 (16) obj. -206.906 iterations 40
Cbc0038I Pass  49: suminf.    1.27362 (16) obj. -206.906 iterations 0
Cbc0038I Pass  50: suminf.    1.60810 (16) obj. -206.906 iterations 30
Cbc0038I Pass  51: suminf.    1.37449 (15) obj. -206.906 iterations 11
Cbc0038I Pass  52: suminf.    2.13468 (16) obj. -206.906 iterations 30
Cbc0038I Pass  53: suminf.    2.13468 (16) obj. -206.906 iterations 10
Cbc0038I Pass  54: suminf.    1.75144 (10) obj. -206.906 iterations 30
Cbc0038I Pass  55: suminf.    1.36691 (10) obj. -206.906 iterations 12
Cbc0038I Pass  56: suminf.    3.13384 (31) obj. -206.906 iterations 71
Cbc0038I Pass  57: suminf.    2.99552 (29) obj. -206.906 iterations 19
Cbc0038I Pass  58: suminf.    1.82961 (19) obj. -206.906 iterations 24
Cbc0038I Pass  59: suminf.    1.74837 (19) obj. -206.906 iterations 8
Cbc0038I Pass  60: suminf.    2.54226 (14) obj. -206.906 iterations 45
Cbc0038I Pass  61: suminf.    2.52352 (13) obj. -206.906 iterations 6
Cbc0038I Pass  62: suminf.    2.94910 (11) obj. -206.906 iterations 19
Cbc0038I Pass  63: suminf.    3.20033 (29) obj. -206.906 iterations 55
Cbc0038I Pass  64: suminf.    3.19629 (30) obj. -206.906 iterations 11
Cbc0038I Pass  65: suminf.    2.55333 (18) obj. -206.906 iterations 31
Cbc0038I Pass  66: suminf.    2.55333 (18) obj. -206.906 iterations 0
Cbc0038I Pass  67: suminf.    2.87748 (11) obj. -206.906 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 230 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 395 columns, reduced to 54 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I After 0.39 seconds - Feasibility pump exiting with objective of -168.415 - took 0.28 seconds
Cbc0012I Integer solution of -168.41477 found by feasibility pump after 0 iterations and 0 nodes (0.39 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 25 rows 28 columns
Cbc0031I 147 added rows had average density of 104.14966
Cbc0013I At root node, 147 cuts changed objective from -353.99597 to -241.89175 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24481 row cuts average 2.0 elements, 0 column cuts (76 active)  in 0.564 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3954 row cuts average 347.6 elements, 0 column cuts (0 active)  in 1.711 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 486 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6272 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.228 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.687 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1941 row cuts average 8.5 elements, 0 column cuts (0 active)  in 1.117 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 446 row cuts average 205.4 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 172 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.349 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -168.41477 best solution, best possible -241.89175 (9.79 seconds)
Cbc0012I Integer solution of -189.3196 found by rounding after 13156 iterations and 1 nodes (9.86 seconds)
Cbc0010I After 4 nodes, 1 on tree, -189.3196 best solution, best possible -241.00672 (10.51 seconds)
Cbc0010I After 6 nodes, 3 on tree, -189.3196 best solution, best possible -241.00672 (11.33 seconds)
Cbc0010I After 9 nodes, 4 on tree, -189.3196 best solution, best possible -241.00672 (12.38 seconds)
Cbc0010I After 12 nodes, 7 on tree, -189.3196 best solution, best possible -241.00672 (13.11 seconds)
Cbc0010I After 25 nodes, 10 on tree, -189.3196 best solution, best possible -241.00672 (13.83 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 113 rows 119 columns
Cbc0012I Integer solution of -206.0105 found by RINS after 18347 iterations and 41 nodes (14.97 seconds)
Cbc0010I After 41 nodes, 11 on tree, -206.0105 best solution, best possible -241.00672 (14.97 seconds)
Cbc0010I After 55 nodes, 12 on tree, -206.0105 best solution, best possible -241.00672 (15.67 seconds)
Cbc0010I After 87 nodes, 13 on tree, -206.0105 best solution, best possible -241.00672 (16.39 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 84 rows 88 columns
Cbc0012I Integer solution of -208.0354 found by RINS after 22285 iterations and 91 nodes (17.07 seconds)
Cbc0010I After 92 nodes, 15 on tree, -208.0354 best solution, best possible -241.00672 (17.22 seconds)
Cbc0010I After 162 nodes, 12 on tree, -208.0354 best solution, best possible -241.00672 (17.93 seconds)
Cbc0010I After 198 nodes, 7 on tree, -208.0354 best solution, best possible -241.00672 (18.63 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 169 rows 173 columns
Cbc0010I After 200 nodes, 9 on tree, -208.0354 best solution, best possible -241.00672 (19.74 seconds)
Cbc0010I After 250 nodes, 3 on tree, -208.0354 best solution, best possible -241.00672 (21.00 seconds)
Cbc0010I After 258 nodes, 7 on tree, -208.0354 best solution, best possible -241.00672 (21.77 seconds)
Cbc0010I After 272 nodes, 10 on tree, -208.0354 best solution, best possible -241.00672 (22.47 seconds)
Cbc0010I After 307 nodes, 10 on tree, -208.0354 best solution, best possible -241.00672 (23.18 seconds)
Cbc0010I After 341 nodes, 13 on tree, -208.0354 best solution, best possible -241.00672 (23.89 seconds)
Cbc0010I After 390 nodes, 14 on tree, -208.0354 best solution, best possible -241.00672 (24.61 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 132 rows 137 columns
Cbc0010I After 401 nodes, 14 on tree, -208.0354 best solution, best possible -241.00672 (25.50 seconds)
Cbc0010I After 444 nodes, 6 on tree, -208.0354 best solution, best possible -241.00672 (26.20 seconds)
Cbc0010I After 453 nodes, 2 on tree, -208.0354 best solution, best possible -241.00672 (27.12 seconds)
Cbc0010I After 460 nodes, 6 on tree, -208.0354 best solution, best possible -241.00672 (27.83 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 38 rows 40 columns
Cbc0010I After 500 nodes, 14 on tree, -208.0354 best solution, best possible -241.00672 (28.57 seconds)
Cbc0010I After 545 nodes, 18 on tree, -208.0354 best solution, best possible -241.00672 (29.29 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 0 rows 0 columns
Cbc0010I After 617 nodes, 18 on tree, -208.0354 best solution, best possible -241.00672 (29.99 seconds)
Cbc0010I After 686 nodes, 3 on tree, -208.0354 best solution, best possible -241.00672 (30.92 seconds)
Cbc0010I After 690 nodes, 6 on tree, -208.0354 best solution, best possible -241.00672 (31.63 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 61 rows 65 columns
Cbc0012I Integer solution of -208.537 found by RINS after 57919 iterations and 700 nodes (32.37 seconds)
Cbc0010I After 700 nodes, 10 on tree, -208.537 best solution, best possible -241.00672 (32.37 seconds)
Cbc0010I After 718 nodes, 12 on tree, -208.537 best solution, best possible -241.00672 (33.08 seconds)
Cbc0010I After 751 nodes, 15 on tree, -208.537 best solution, best possible -241.00672 (33.80 seconds)
Cbc0010I After 783 nodes, 15 on tree, -208.537 best solution, best possible -241.00672 (34.52 seconds)
Cbc0010I After 829 nodes, 16 on tree, -208.537 best solution, best possible -241.00672 (35.25 seconds)
Cbc0010I After 882 nodes, 17 on tree, -208.537 best solution, best possible -241.00672 (36.00 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 150 rows 155 columns
Cbc0010I After 900 nodes, 19 on tree, -208.537 best solution, best possible -241.00672 (37.49 seconds)
Cbc0010I After 935 nodes, 21 on tree, -208.537 best solution, best possible -241.00672 (38.20 seconds)
Cbc0010I After 988 nodes, 14 on tree, -208.537 best solution, best possible -241.00672 (38.91 seconds)
Cbc0010I After 1044 nodes, 16 on tree, -208.537 best solution, best possible -241.00672 (39.64 seconds)
Cbc0010I After 1082 nodes, 1 on tree, -208.537 best solution, best possible -240.12597 (40.89 seconds)
Cbc0010I After 1084 nodes, 3 on tree, -208.537 best solution, best possible -240.12597 (41.77 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 11 rows 15 columns
Cbc0010I After 1114 nodes, 23 on tree, -208.537 best solution, best possible -240.12597 (42.47 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 21 rows 27 columns
Cbc0010I After 1210 nodes, 20 on tree, -208.537 best solution, best possible -240.12597 (43.17 seconds)
Cbc0010I After 1303 nodes, 12 on tree, -208.537 best solution, best possible -240.12597 (43.87 seconds)
Cbc0010I After 1388 nodes, 6 on tree, -208.537 best solution, best possible -240.12597 (44.57 seconds)
Cbc0010I After 1396 nodes, 7 on tree, -208.537 best solution, best possible -240.12597 (45.36 seconds)
Cbc0010I After 1439 nodes, 12 on tree, -208.537 best solution, best possible -240.12597 (46.08 seconds)
Cbc0010I After 1484 nodes, 7 on tree, -208.537 best solution, best possible -240.12597 (46.98 seconds)
Cbc0010I After 1510 nodes, 17 on tree, -208.537 best solution, best possible -240.12597 (47.71 seconds)
Cbc0010I After 1551 nodes, 25 on tree, -208.537 best solution, best possible -240.12597 (48.42 seconds)
Cbc0010I After 1581 nodes, 4 on tree, -208.537 best solution, best possible -240.12597 (49.15 seconds)
Cbc0010I After 1610 nodes, 23 on tree, -208.537 best solution, best possible -240.12597 (49.87 seconds)
Cbc0010I After 1678 nodes, 3 on tree, -208.537 best solution, best possible -240.12597 (50.85 seconds)
Cbc0010I After 1697 nodes, 22 on tree, -208.537 best solution, best possible -240.12597 (51.56 seconds)
Cbc0010I After 1789 nodes, 21 on tree, -208.537 best solution, best possible -240.12597 (52.26 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 14 rows 19 columns
Cbc0010I After 1865 nodes, 2 on tree, -208.537 best solution, best possible -240.12597 (53.01 seconds)
Cbc0001I Search completed - best objective -208.537, took 118050 iterations and 1868 nodes (53.06 seconds)
Cbc0032I Strong branching done 4740 times (115213 iterations), fathomed 51 nodes and fixed 160 variables
Cbc0035I Maximum depth 41, 7974 variables fixed on reduced cost
Total time (CPU seconds):       51.20   (Wallclock seconds):       53.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 492 (-35) rows, 254 (-10) columns and 1465 (-80) elements
Clp1000I sum of infeasibilities 3.91355e-05 - average 7.95437e-08, 162 fixed columns
Coin0506I Presolve 171 (-321) rows, 89 (-165) columns and 503 (-962) elements
Clp0029I End of values pass after 89 iterations
Clp0000I Optimal - objective value 297.2944
Clp0000I Optimal - objective value 297.2944
Coin0511I After Postsolve, objective 297.2944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13466706 - largest nonzero change 0 ( 0%) - largest zero change 2.9779069e-05
Clp0000I Optimal - objective value 297.2944
Clp0000I Optimal - objective value 297.2944
Clp0000I Optimal - objective value 297.2944
Coin0511I After Postsolve, objective 297.2944, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 297.2944014 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 492 rows, 254 columns (253 integer (253 of which binary)) and 1465 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.379%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 10.4101
Cbc0038I Solution found of 5.22374
Cbc0038I Relaxing continuous gives -27.6926
Cbc0038I Before mini branch and bound, 212 integers at bound fixed and 0 continuous
Cbc0038I Full problem 492 rows 254 columns, reduced to 80 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -27.6926 to -201.979 (0.06 seconds)
Cbc0038I Round again with cutoff of -211.51
Cbc0038I Pass   1: suminf.    5.38937 (37) obj. -211.51 iterations 144
Cbc0038I Pass   2: suminf.    3.73562 (11) obj. -211.51 iterations 54
Cbc0038I Pass   3: suminf.    2.28749 (9) obj. -211.51 iterations 18
Cbc0038I Pass   4: suminf.    2.15950 (9) obj. -211.51 iterations 4
Cbc0038I Pass   5: suminf.    2.44353 (12) obj. -211.51 iterations 20
Cbc0038I Pass   6: suminf.    2.29719 (11) obj. -211.51 iterations 1
Cbc0038I Pass   7: suminf.    2.29470 (9) obj. -211.51 iterations 4
Cbc0038I Pass   8: suminf.    3.25870 (9) obj. -211.51 iterations 14
Cbc0038I Pass   9: suminf.    2.12636 (11) obj. -211.51 iterations 13
Cbc0038I Pass  10: suminf.    1.62915 (9) obj. -211.51 iterations 4
Cbc0038I Pass  11: suminf.    1.50055 (11) obj. -211.51 iterations 6
Cbc0038I Pass  12: suminf.    2.50666 (7) obj. -211.51 iterations 23
Cbc0038I Pass  13: suminf.    2.08152 (7) obj. -211.51 iterations 7
Cbc0038I Pass  14: suminf.    1.83238 (7) obj. -211.51 iterations 3
Cbc0038I Pass  15: suminf.    1.53249 (8) obj. -211.51 iterations 9
Cbc0038I Pass  16: suminf.    2.98864 (8) obj. -211.51 iterations 17
Cbc0038I Pass  17: suminf.    2.98864 (8) obj. -211.51 iterations 2
Cbc0038I Pass  18: suminf.    3.20344 (11) obj. -211.51 iterations 14
Cbc0038I Pass  19: suminf.    2.50884 (9) obj. -211.51 iterations 12
Cbc0038I Pass  20: suminf.    2.50884 (9) obj. -211.51 iterations 0
Cbc0038I Pass  21: suminf.    2.88628 (8) obj. -211.51 iterations 12
Cbc0038I Pass  22: suminf.    1.93562 (7) obj. -211.51 iterations 5
Cbc0038I Pass  23: suminf.    2.95852 (9) obj. -211.51 iterations 16
Cbc0038I Pass  24: suminf.    2.58378 (12) obj. -211.51 iterations 10
Cbc0038I Pass  25: suminf.    3.02892 (13) obj. -211.51 iterations 18
Cbc0038I Pass  26: suminf.    2.01602 (11) obj. -211.51 iterations 16
Cbc0038I Pass  27: suminf.    1.84098 (11) obj. -211.51 iterations 5
Cbc0038I Pass  28: suminf.    3.17701 (10) obj. -211.51 iterations 22
Cbc0038I Pass  29: suminf.    2.83853 (8) obj. -211.51 iterations 5
Cbc0038I Pass  30: suminf.    2.18607 (8) obj. -211.51 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 492 rows 254 columns, reduced to 115 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -201.979 - took 0.11 seconds
Cbc0012I Integer solution of -201.9787 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 492 rows 254 columns, reduced to 80 rows 42 columns
Cbc0031I 19 added rows had average density of 173.68421
Cbc0013I At root node, 19 cuts changed objective from -297.2944 to -274.75034 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14371 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.375 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1342 row cuts average 251.6 elements, 0 column cuts (0 active)  in 0.269 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 244.6 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -201.9787 best solution, best possible -274.75034 (2.43 seconds)
Cbc0012I Integer solution of -202.8255 found by rounding after 8902 iterations and 25 nodes (2.90 seconds)
Cbc0012I Integer solution of -207.532 found by rounding after 9332 iterations and 41 nodes (2.94 seconds)
Cbc0038I Full problem 492 rows 254 columns, reduced to 15 rows 14 columns
Cbc0012I Integer solution of -208.0354 found by RINS after 10894 iterations and 91 nodes (3.14 seconds)
Cbc0010I After 91 nodes, 15 on tree, -208.0354 best solution, best possible -274.75034 (3.14 seconds)
Cbc0012I Integer solution of -208.537 found by rounding after 12002 iterations and 124 nodes (3.22 seconds)
Cbc0001I Search completed - best objective -208.537, took 14989 iterations and 208 nodes (3.52 seconds)
Cbc0032I Strong branching done 1750 times (36136 iterations), fathomed 59 nodes and fixed 109 variables
Cbc0035I Maximum depth 31, 1901 variables fixed on reduced cost
Total time (CPU seconds):       3.46   (Wallclock seconds):       3.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 381 (-146) rows, 395 (-130) columns and 19227 (-16510) elements
Clp1000I sum of infeasibilities 1.31771e-06 - average 3.45857e-09, 107 fixed columns
Coin0506I Presolve 275 (-106) rows, 288 (-107) columns and 10544 (-8683) elements
Clp0006I 0  Obj 314.24589 Dual inf 149.6171 (283)
Clp0029I End of values pass after 287 iterations
Clp0014I Perturbing problem by 0.001% of 2.1458324 - largest nonzero change 2.4357273e-05 ( 0.0016580886%) - largest zero change 2.9283556e-05
Clp0000I Optimal - objective value 354.38095
Clp0000I Optimal - objective value 354.38095
Coin0511I After Postsolve, objective 354.38095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 354.38095 Dual inf 57.325572 (2)
Clp0014I Perturbing problem by 0.001% of 1.790038 - largest nonzero change 2.954978e-05 ( 0.0025627714%) - largest zero change 2.9597463e-05
Clp0000I Optimal - objective value 354.38095
Clp0000I Optimal - objective value 354.38095
Clp0000I Optimal - objective value 354.38095
Coin0511I After Postsolve, objective 354.38095, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 354.3809499 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 381 rows, 395 columns (395 integer (395 of which binary)) and 19227 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.004%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 143 integers unsatisfied sum - 12.0454
Cbc0038I Pass   1: suminf.    3.59147 (114) obj. -230.263 iterations 46
Cbc0038I Pass   2: suminf.    3.59147 (114) obj. -230.263 iterations 1
Cbc0038I Pass   3: suminf.    2.59323 (88) obj. -187.972 iterations 26
Cbc0038I Pass   4: suminf.    1.94023 (69) obj. -151.304 iterations 19
Cbc0038I Pass   5: suminf.    1.58161 (58) obj. -140.662 iterations 11
Cbc0038I Pass   6: suminf.    1.04249 (41) obj. -120.328 iterations 17
Cbc0038I Pass   7: suminf.    0.38764 (19) obj. -92.1878 iterations 22
Cbc0038I Pass   8: suminf.    0.01538 (1) obj. -73.5759 iterations 18
Cbc0038I Solution found of -72.5913
Cbc0038I Rounding solution of -145.676 is better than previous of -72.5913

Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 395 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -145.676 to -149.705 (0.15 seconds)
Cbc0038I Round again with cutoff of -170.134
Cbc0038I Pass   9: suminf.    3.59147 (114) obj. -230.263 iterations 0
Cbc0038I Pass  10: suminf.    3.59147 (114) obj. -230.263 iterations 1
Cbc0038I Pass  11: suminf.    2.66531 (90) obj. -189.9 iterations 24
Cbc0038I Pass  12: suminf.    2.45722 (78) obj. -170.134 iterations 15
Cbc0038I Pass  13: suminf.    1.83048 (63) obj. -195.393 iterations 16
Cbc0038I Pass  14: suminf.    1.17193 (44) obj. -171.261 iterations 19
Cbc0038I Pass  15: suminf.    0.48625 (24) obj. -170.134 iterations 29
Cbc0038I Pass  16: suminf.    0.47503 (22) obj. -170.406 iterations 7
Cbc0038I Pass  17: suminf.    0.33738 (3) obj. -170.134 iterations 54
Cbc0038I Pass  18: suminf.    0.31732 (3) obj. -170.134 iterations 8
Cbc0038I Pass  19: suminf.    0.76516 (12) obj. -170.134 iterations 12
Cbc0038I Pass  20: suminf.    0.42230 (3) obj. -170.134 iterations 9
Cbc0038I Pass  21: suminf.    0.33738 (3) obj. -170.134 iterations 6
Cbc0038I Pass  22: suminf.    1.34149 (29) obj. -170.134 iterations 74
Cbc0038I Pass  23: suminf.    1.11759 (30) obj. -171.114 iterations 14
Cbc0038I Pass  24: suminf.    0.97186 (12) obj. -170.134 iterations 26
Cbc0038I Pass  25: suminf.    0.61291 (12) obj. -170.134 iterations 2
Cbc0038I Pass  26: suminf.    0.74920 (7) obj. -170.134 iterations 19
Cbc0038I Pass  27: suminf.    0.30834 (5) obj. -170.134 iterations 9
Cbc0038I Pass  28: suminf.    0.93709 (5) obj. -170.134 iterations 14
Cbc0038I Pass  29: suminf.    0.93709 (5) obj. -170.134 iterations 0
Cbc0038I Pass  30: suminf.    1.00393 (5) obj. -170.134 iterations 13
Cbc0038I Pass  31: suminf.    1.00393 (5) obj. -170.134 iterations 9
Cbc0038I Pass  32: suminf.    0.93709 (5) obj. -170.134 iterations 14
Cbc0038I Pass  33: suminf.    1.27881 (20) obj. -170.134 iterations 84
Cbc0038I Pass  34: suminf.    1.20402 (23) obj. -170.134 iterations 22
Cbc0038I Pass  35: suminf.    0.46415 (10) obj. -175.516 iterations 21
Cbc0038I Pass  36: suminf.    0.46415 (10) obj. -175.516 iterations 0
Cbc0038I Pass  37: suminf.    0.31984 (4) obj. -170.134 iterations 17
Cbc0038I Pass  38: suminf.    0.30880 (5) obj. -170.134 iterations 8
Cbc0038I Rounding solution of -153.393 is better than previous of -149.705

Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 395 columns, reduced to 36 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -153.393 to -168.415 (0.27 seconds)
Cbc0038I Round again with cutoff of -206.906
Cbc0038I Pass  38: suminf.    3.59147 (114) obj. -230.263 iterations 0
Cbc0038I Pass  39: suminf.    3.59147 (114) obj. -230.263 iterations 1
Cbc0038I Pass  40: suminf.    3.07682 (93) obj. -206.906 iterations 23
Cbc0038I Pass  41: suminf.    2.29601 (71) obj. -206.906 iterations 36
Cbc0038I Pass  42: suminf.    1.37690 (44) obj. -206.906 iterations 56
Cbc0038I Pass  43: suminf.    1.20800 (44) obj. -207.819 iterations 4
Cbc0038I Pass  44: suminf.    1.33899 (36) obj. -206.906 iterations 27
Cbc0038I Pass  45: suminf.    0.94358 (36) obj. -215.404 iterations 4
Cbc0038I Pass  46: suminf.    0.88902 (21) obj. -206.906 iterations 31
Cbc0038I Pass  47: suminf.    0.49603 (21) obj. -212.265 iterations 4
Cbc0038I Pass  48: suminf.    1.27362 (16) obj. -206.906 iterations 40
Cbc0038I Pass  49: suminf.    1.27362 (16) obj. -206.906 iterations 0
Cbc0038I Pass  50: suminf.    1.60810 (16) obj. -206.906 iterations 30
Cbc0038I Pass  51: suminf.    1.37449 (15) obj. -206.906 iterations 11
Cbc0038I Pass  52: suminf.    2.13468 (16) obj. -206.906 iterations 30
Cbc0038I Pass  53: suminf.    2.13468 (16) obj. -206.906 iterations 10
Cbc0038I Pass  54: suminf.    1.75144 (10) obj. -206.906 iterations 30
Cbc0038I Pass  55: suminf.    1.36691 (10) obj. -206.906 iterations 12
Cbc0038I Pass  56: suminf.    3.13384 (31) obj. -206.906 iterations 71
Cbc0038I Pass  57: suminf.    2.99552 (29) obj. -206.906 iterations 19
Cbc0038I Pass  58: suminf.    1.82961 (19) obj. -206.906 iterations 24
Cbc0038I Pass  59: suminf.    1.74837 (19) obj. -206.906 iterations 8
Cbc0038I Pass  60: suminf.    2.54226 (14) obj. -206.906 iterations 45
Cbc0038I Pass  61: suminf.    2.52352 (13) obj. -206.906 iterations 6
Cbc0038I Pass  62: suminf.    2.94910 (11) obj. -206.906 iterations 19
Cbc0038I Pass  63: suminf.    3.20033 (29) obj. -206.906 iterations 55
Cbc0038I Pass  64: suminf.    3.19629 (30) obj. -206.906 iterations 11
Cbc0038I Pass  65: suminf.    2.55333 (18) obj. -206.906 iterations 31
Cbc0038I Pass  66: suminf.    2.55333 (18) obj. -206.906 iterations 0
Cbc0038I Pass  67: suminf.    2.87748 (11) obj. -206.906 iterations 36
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 230 integers at bound fixed and 0 continuous
Cbc0038I Full problem 381 rows 395 columns, reduced to 54 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
Cbc0038I After 0.38 seconds - Feasibility pump exiting with objective of -168.415 - took 0.28 seconds
Cbc0012I Integer solution of -168.41477 found by feasibility pump after 0 iterations and 0 nodes (0.38 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 25 rows 28 columns
Cbc0031I 147 added rows had average density of 104.14966
Cbc0013I At root node, 147 cuts changed objective from -353.99597 to -241.89175 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24481 row cuts average 2.0 elements, 0 column cuts (76 active)  in 0.570 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3954 row cuts average 347.6 elements, 0 column cuts (0 active)  in 1.719 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 486 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6272 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.226 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.689 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1941 row cuts average 8.5 elements, 0 column cuts (0 active)  in 1.126 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 446 row cuts average 205.4 elements, 0 column cuts (0 active)  in 0.286 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 172 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.347 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -168.41477 best solution, best possible -241.89175 (9.82 seconds)
Cbc0012I Integer solution of -189.3196 found by rounding after 13156 iterations and 1 nodes (9.89 seconds)
Cbc0010I After 4 nodes, 1 on tree, -189.3196 best solution, best possible -241.00672 (10.57 seconds)
Cbc0010I After 6 nodes, 3 on tree, -189.3196 best solution, best possible -241.00672 (11.42 seconds)
Cbc0010I After 9 nodes, 4 on tree, -189.3196 best solution, best possible -241.00672 (12.49 seconds)
Cbc0010I After 12 nodes, 7 on tree, -189.3196 best solution, best possible -241.00672 (13.24 seconds)
Cbc0010I After 24 nodes, 10 on tree, -189.3196 best solution, best possible -241.00672 (13.95 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 113 rows 119 columns
Cbc0012I Integer solution of -206.0105 found by RINS after 18347 iterations and 41 nodes (15.16 seconds)
Cbc0010I After 41 nodes, 11 on tree, -206.0105 best solution, best possible -241.00672 (15.16 seconds)
Cbc0010I After 56 nodes, 11 on tree, -206.0105 best solution, best possible -241.00672 (15.86 seconds)
Cbc0010I After 87 nodes, 13 on tree, -206.0105 best solution, best possible -241.00672 (16.57 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 84 rows 88 columns
Cbc0012I Integer solution of -208.0354 found by RINS after 22285 iterations and 91 nodes (17.27 seconds)
Cbc0010I After 91 nodes, 14 on tree, -208.0354 best solution, best possible -241.00672 (17.27 seconds)
Cbc0010I After 157 nodes, 10 on tree, -208.0354 best solution, best possible -241.00672 (17.98 seconds)
Cbc0010I After 197 nodes, 8 on tree, -208.0354 best solution, best possible -241.00672 (18.82 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 169 rows 173 columns
Cbc0010I After 200 nodes, 9 on tree, -208.0354 best solution, best possible -241.00672 (19.91 seconds)
Cbc0010I After 250 nodes, 3 on tree, -208.0354 best solution, best possible -241.00672 (21.10 seconds)
Cbc0010I After 258 nodes, 7 on tree, -208.0354 best solution, best possible -241.00672 (21.84 seconds)
Cbc0010I After 271 nodes, 11 on tree, -208.0354 best solution, best possible -241.00672 (22.56 seconds)
Cbc0010I After 307 nodes, 10 on tree, -208.0354 best solution, best possible -241.00672 (23.28 seconds)
Cbc0010I After 338 nodes, 12 on tree, -208.0354 best solution, best possible -241.00672 (23.98 seconds)
Cbc0010I After 387 nodes, 13 on tree, -208.0354 best solution, best possible -241.00672 (24.70 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 132 rows 137 columns
Cbc0010I After 401 nodes, 14 on tree, -208.0354 best solution, best possible -241.00672 (25.59 seconds)
Cbc0010I After 444 nodes, 6 on tree, -208.0354 best solution, best possible -241.00672 (26.29 seconds)
Cbc0010I After 453 nodes, 2 on tree, -208.0354 best solution, best possible -241.00672 (27.22 seconds)
Cbc0010I After 461 nodes, 7 on tree, -208.0354 best solution, best possible -241.00672 (27.98 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 38 rows 40 columns
Cbc0010I After 502 nodes, 14 on tree, -208.0354 best solution, best possible -241.00672 (28.69 seconds)
Cbc0010I After 551 nodes, 17 on tree, -208.0354 best solution, best possible -241.00672 (29.40 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 0 rows 0 columns
Cbc0010I After 627 nodes, 16 on tree, -208.0354 best solution, best possible -241.00672 (30.11 seconds)
Cbc0010I After 686 nodes, 3 on tree, -208.0354 best solution, best possible -241.00672 (30.89 seconds)
Cbc0010I After 691 nodes, 7 on tree, -208.0354 best solution, best possible -241.00672 (31.75 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 61 rows 65 columns
Cbc0012I Integer solution of -208.537 found by RINS after 57919 iterations and 700 nodes (32.31 seconds)
Cbc0010I After 705 nodes, 8 on tree, -208.537 best solution, best possible -241.00672 (32.46 seconds)
Cbc0010I After 727 nodes, 13 on tree, -208.537 best solution, best possible -241.00672 (33.19 seconds)
Cbc0010I After 760 nodes, 15 on tree, -208.537 best solution, best possible -241.00672 (33.92 seconds)
Cbc0010I After 795 nodes, 13 on tree, -208.537 best solution, best possible -241.00672 (34.64 seconds)
Cbc0010I After 848 nodes, 17 on tree, -208.537 best solution, best possible -241.00672 (35.35 seconds)
Cbc0010I After 893 nodes, 17 on tree, -208.537 best solution, best possible -241.00672 (36.06 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 150 rows 155 columns
Cbc0010I After 900 nodes, 19 on tree, -208.537 best solution, best possible -241.00672 (37.41 seconds)
Cbc0010I After 942 nodes, 18 on tree, -208.537 best solution, best possible -241.00672 (38.13 seconds)
Cbc0010I After 996 nodes, 15 on tree, -208.537 best solution, best possible -241.00672 (38.85 seconds)
Cbc0010I After 1056 nodes, 11 on tree, -208.537 best solution, best possible -241.00672 (39.57 seconds)
Cbc0010I After 1082 nodes, 1 on tree, -208.537 best solution, best possible -240.12597 (40.68 seconds)
Cbc0010I After 1084 nodes, 3 on tree, -208.537 best solution, best possible -240.12597 (41.55 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 11 rows 15 columns
Cbc0010I After 1118 nodes, 23 on tree, -208.537 best solution, best possible -240.12597 (42.26 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 21 rows 27 columns
Cbc0010I After 1215 nodes, 15 on tree, -208.537 best solution, best possible -240.12597 (42.96 seconds)
Cbc0010I After 1314 nodes, 16 on tree, -208.537 best solution, best possible -240.12597 (43.68 seconds)
Cbc0010I After 1392 nodes, 3 on tree, -208.537 best solution, best possible -240.12597 (44.62 seconds)
Cbc0010I After 1403 nodes, 14 on tree, -208.537 best solution, best possible -240.12597 (45.34 seconds)
Cbc0010I After 1450 nodes, 23 on tree, -208.537 best solution, best possible -240.12597 (46.07 seconds)
Cbc0010I After 1486 nodes, 9 on tree, -208.537 best solution, best possible -240.12597 (46.78 seconds)
Cbc0010I After 1514 nodes, 21 on tree, -208.537 best solution, best possible -240.12597 (47.49 seconds)
Cbc0010I After 1564 nodes, 13 on tree, -208.537 best solution, best possible -240.12597 (48.20 seconds)
Cbc0010I After 1583 nodes, 6 on tree, -208.537 best solution, best possible -240.12597 (48.93 seconds)
Cbc0010I After 1626 nodes, 19 on tree, -208.537 best solution, best possible -240.12597 (49.65 seconds)
Cbc0010I After 1678 nodes, 3 on tree, -208.537 best solution, best possible -240.12597 (50.44 seconds)
Cbc0010I After 1697 nodes, 22 on tree, -208.537 best solution, best possible -240.12597 (51.14 seconds)
Cbc0010I After 1791 nodes, 20 on tree, -208.537 best solution, best possible -240.12597 (51.85 seconds)
Cbc0038I Full problem 381 rows 395 columns, reduced to 14 rows 19 columns
Cbc0010I After 1865 nodes, 2 on tree, -208.537 best solution, best possible -240.12597 (52.58 seconds)
Cbc0001I Search completed - best objective -208.537, took 118050 iterations and 1868 nodes (52.62 seconds)
Cbc0032I Strong branching done 4740 times (115213 iterations), fathomed 51 nodes and fixed 160 variables
Cbc0035I Maximum depth 41, 7974 variables fixed on reduced cost
Total time (CPU seconds):       50.81   (Wallclock seconds):       52.74

