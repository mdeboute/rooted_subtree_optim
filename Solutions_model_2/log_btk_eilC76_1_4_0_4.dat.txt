Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 59 (-19) columns and 323 (-130) elements
Clp1000I sum of infeasibilities 3.21136e-05 - average 3.02958e-07, 13 fixed columns
Coin0506I Presolve 76 (-30) rows, 46 (-13) columns and 237 (-86) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 6.2321019 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 161.96368
Clp0000I Optimal - objective value 161.96368
Coin0511I After Postsolve, objective 161.96368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.96368
Clp0000I Optimal - objective value 161.96368
Clp0000I Optimal - objective value 161.96368
Coin0511I After Postsolve, objective 161.96368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.96368 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 106 rows, 59 columns (58 integer (58 of which binary)) and 323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.481%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.58684
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -60.6696 iterations 21
Cbc0038I Solution found of -60.6696
Cbc0038I Relaxing continuous gives -60.6696
Cbc0038I Rounding solution of -107.191 is better than previous of -60.6696

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 59 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -107.191 to -130.883 (0.03 seconds)
Cbc0038I Round again with cutoff of -133.991
Cbc0038I Pass   2: suminf.    1.18713 (5) obj. -133.991 iterations 9
Cbc0038I Pass   3: suminf.    0.33564 (3) obj. -133.991 iterations 2
Cbc0038I Pass   4: suminf.    1.30668 (6) obj. -133.991 iterations 13
Cbc0038I Pass   5: suminf.    1.78733 (8) obj. -133.991 iterations 12
Cbc0038I Pass   6: suminf.    1.71828 (9) obj. -133.991 iterations 1
Cbc0038I Pass   7: suminf.    2.00924 (5) obj. -133.991 iterations 10
Cbc0038I Pass   8: suminf.    0.83592 (6) obj. -133.991 iterations 7
Cbc0038I Pass   9: suminf.    0.74853 (9) obj. -133.991 iterations 2
Cbc0038I Pass  10: suminf.    1.95039 (8) obj. -133.991 iterations 15
Cbc0038I Pass  11: suminf.    1.22261 (6) obj. -133.991 iterations 3
Cbc0038I Pass  12: suminf.    1.57167 (5) obj. -133.991 iterations 15
Cbc0038I Pass  13: suminf.    0.31413 (5) obj. -133.991 iterations 7
Cbc0038I Pass  14: suminf.    0.06529 (2) obj. -133.991 iterations 6
Cbc0038I Pass  15: suminf.    1.00728 (5) obj. -133.991 iterations 8
Cbc0038I Pass  16: suminf.    2.12642 (6) obj. -133.991 iterations 11
Cbc0038I Pass  17: suminf.    0.50458 (4) obj. -133.991 iterations 11
Cbc0038I Pass  18: suminf.    2.43386 (6) obj. -133.991 iterations 7
Cbc0038I Pass  19: suminf.    2.65765 (9) obj. -133.991 iterations 11
Cbc0038I Pass  20: suminf.    2.51728 (7) obj. -133.991 iterations 7
Cbc0038I Pass  21: suminf.    1.51381 (5) obj. -133.991 iterations 8
Cbc0038I Pass  22: suminf.    0.57954 (5) obj. -133.991 iterations 6
Cbc0038I Pass  23: suminf.    0.70479 (6) obj. -133.991 iterations 13
Cbc0038I Pass  24: suminf.    2.32212 (7) obj. -133.991 iterations 9
Cbc0038I Pass  25: suminf.    0.75349 (2) obj. -133.991 iterations 6
Cbc0038I Pass  26: suminf.    0.74487 (3) obj. -133.991 iterations 1
Cbc0038I Pass  27: suminf.    1.07695 (3) obj. -133.991 iterations 2
Cbc0038I Pass  28: suminf.    2.40334 (9) obj. -133.991 iterations 10
Cbc0038I Pass  29: suminf.    1.71997 (6) obj. -133.991 iterations 4
Cbc0038I Pass  30: suminf.    1.30654 (4) obj. -133.991 iterations 6
Cbc0038I Pass  31: suminf.    0.77850 (3) obj. -133.991 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 59 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -130.883 to -133.029 (0.05 seconds)
Cbc0038I Round again with cutoff of -139.586
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.45884 (5) obj. -139.586 iterations 0
Cbc0038I Pass  32: suminf.    0.69155 (7) obj. -139.586 iterations 3
Cbc0038I Pass  33: suminf.    1.84872 (6) obj. -139.586 iterations 19
Cbc0038I Pass  34: suminf.    1.84872 (6) obj. -139.586 iterations 0
Cbc0038I Pass  35: suminf.    1.18484 (8) obj. -139.586 iterations 11
Cbc0038I Pass  36: suminf.    2.08486 (9) obj. -139.586 iterations 15
Cbc0038I Pass  37: suminf.    1.85076 (9) obj. -139.586 iterations 5
Cbc0038I Pass  38: suminf.    1.59282 (5) obj. -139.586 iterations 16
Cbc0038I Pass  39: suminf.    2.54086 (6) obj. -139.586 iterations 3
Cbc0038I Pass  40: suminf.    1.26307 (6) obj. -139.586 iterations 8
Cbc0038I Pass  41: suminf.    1.15028 (8) obj. -139.586 iterations 7
Cbc0038I Pass  42: suminf.    2.35989 (6) obj. -139.586 iterations 7
Cbc0038I Pass  43: suminf.    2.03906 (9) obj. -139.586 iterations 2
Cbc0038I Pass  44: suminf.    2.02063 (10) obj. -139.586 iterations 18
Cbc0038I Pass  45: suminf.    3.03951 (10) obj. -139.586 iterations 15
Cbc0038I Pass  46: suminf.    2.23142 (9) obj. -139.586 iterations 9
Cbc0038I Pass  47: suminf.    2.52647 (9) obj. -139.586 iterations 11
Cbc0038I Pass  48: suminf.    2.38484 (8) obj. -139.586 iterations 2
Cbc0038I Pass  49: suminf.    3.13691 (7) obj. -139.586 iterations 10
Cbc0038I Pass  50: suminf.    2.36013 (9) obj. -139.586 iterations 5
Cbc0038I Pass  51: suminf.    3.11297 (9) obj. -139.586 iterations 15
Cbc0038I Pass  52: suminf.    2.12442 (6) obj. -139.586 iterations 8
Cbc0038I Pass  53: suminf.    1.67753 (5) obj. -139.586 iterations 6
Cbc0038I Pass  54: suminf.    2.35336 (6) obj. -139.586 iterations 3
Cbc0038I Pass  55: suminf.    1.55604 (6) obj. -139.586 iterations 8
Cbc0038I Pass  56: suminf.    1.33477 (8) obj. -139.586 iterations 7
Cbc0038I Pass  57: suminf.    2.36383 (6) obj. -139.586 iterations 7
Cbc0038I Pass  58: suminf.    2.06557 (9) obj. -139.586 iterations 2
Cbc0038I Pass  59: suminf.    2.20636 (10) obj. -139.586 iterations 18
Cbc0038I Pass  60: suminf.    2.40296 (10) obj. -139.586 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 59 columns, reduced to 41 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -133.029 - took 0.06 seconds
Cbc0012I Integer solution of -133.02851 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 106 rows 59 columns, reduced to 37 rows 23 columns
Cbc0031I 8 added rows had average density of 51.75
Cbc0013I At root node, 8 cuts changed objective from -161.96368 to -145.12951 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 886 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 366 row cuts average 51.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 98 row cuts average 52.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -133.0285066, took 1392 iterations and 8 nodes (0.26 seconds)
Cbc0032I Strong branching done 102 times (674 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-69) rows, 95 (-57) columns and 1319 (-1984) elements
Clp1000I sum of infeasibilities 3.6672e-07 - average 4.31435e-09, 49 fixed columns
Coin0506I Presolve 38 (-47) rows, 45 (-50) columns and 161 (-1158) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 2.8133698 - largest nonzero change 2.9050694e-05 ( 0.0010393299%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 139.73342
Clp0000I Optimal - objective value 139.73342
Coin0511I After Postsolve, objective 139.73342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2174431 - largest nonzero change 2.8700566e-05 ( 0.0024275985%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 191.99668
Clp0000I Optimal - objective value 191.99668
Clp0000I Optimal - objective value 191.99668
Coin0511I After Postsolve, objective 191.99668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 191.9966801 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 99 columns (99 integer (99 of which binary)) and 1374 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.416%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.98676
Cbc0038I Pass   1: suminf.    1.51772 (17) obj. -81.6342 iterations 29
Cbc0038I Pass   2: suminf.    1.51772 (17) obj. -81.6342 iterations 1
Cbc0038I Solution found of -60.6981
Cbc0038I Rounding solution of -81.5114 is better than previous of -60.6981

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -81.5114 to -106.846 (0.04 seconds)
Cbc0038I Round again with cutoff of -113.713
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.12306 (32) obj. -113.713 iterations 12
Cbc0038I Pass   4: suminf.    0.92495 (10) obj. -113.713 iterations 27
Cbc0038I Pass   5: suminf.    0.92495 (10) obj. -113.713 iterations 0
Cbc0038I Solution found of -119.783
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -130.929
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   6: suminf.    3.45761 (32) obj. -130.929 iterations 1
Cbc0038I Pass   7: suminf.    1.53294 (17) obj. -130.929 iterations 16
Cbc0038I Pass   8: suminf.    1.21155 (16) obj. -139.191 iterations 3
Cbc0038I Pass   9: suminf.    0.54064 (9) obj. -130.929 iterations 16
Cbc0038I Pass  10: suminf.    1.03602 (4) obj. -130.929 iterations 15
Cbc0038I Pass  11: suminf.    1.03602 (4) obj. -130.929 iterations 0
Cbc0038I Pass  12: suminf.    0.54464 (3) obj. -130.929 iterations 6
Cbc0038I Pass  13: suminf.    0.54464 (3) obj. -130.929 iterations 0
Cbc0038I Pass  14: suminf.    0.73677 (2) obj. -130.929 iterations 9
Cbc0038I Pass  15: suminf.    0.73677 (2) obj. -130.929 iterations 0
Cbc0038I Pass  16: suminf.    0.79941 (2) obj. -130.929 iterations 2
Cbc0038I Pass  17: suminf.    1.26823 (9) obj. -130.929 iterations 22
Cbc0038I Pass  18: suminf.    1.19399 (10) obj. -130.929 iterations 5
Cbc0038I Pass  19: suminf.    1.43831 (4) obj. -130.929 iterations 22
Cbc0038I Pass  20: suminf.    1.32397 (4) obj. -130.929 iterations 7
Cbc0038I Pass  21: suminf.    1.37768 (4) obj. -130.929 iterations 9
Cbc0038I Pass  22: suminf.    2.16094 (22) obj. -130.929 iterations 30
Cbc0038I Pass  23: suminf.    2.03247 (19) obj. -130.929 iterations 7
Cbc0038I Pass  24: suminf.    1.18717 (5) obj. -130.929 iterations 32
Cbc0038I Pass  25: suminf.    0.90398 (5) obj. -130.929 iterations 15
Cbc0038I Pass  26: suminf.    1.03820 (4) obj. -130.929 iterations 13
Cbc0038I Pass  27: suminf.    1.03820 (4) obj. -130.929 iterations 0
Cbc0038I Pass  28: suminf.    0.59350 (3) obj. -130.929 iterations 5
Cbc0038I Pass  29: suminf.    0.59350 (3) obj. -130.929 iterations 0
Cbc0038I Pass  30: suminf.    0.73897 (2) obj. -130.929 iterations 8
Cbc0038I Pass  31: suminf.    0.73897 (2) obj. -130.929 iterations 0
Cbc0038I Pass  32: suminf.    0.76683 (2) obj. -130.929 iterations 2
Cbc0038I Pass  33: suminf.    1.41653 (12) obj. -130.929 iterations 21
Cbc0038I Pass  34: suminf.    1.13276 (7) obj. -130.929 iterations 11
Cbc0038I Pass  35: suminf.    1.55282 (4) obj. -130.929 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 10 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -119.783 - took 0.03 seconds
Cbc0012I Integer solution of -119.78292 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 89 rows 99 columns, reduced to 6 rows 7 columns
Cbc0031I 29 added rows had average density of 29.413793
Cbc0013I At root node, 29 cuts changed objective from -175.51141 to -138.17683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3559 row cuts average 4.3 elements, 6 column cuts (14 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1006 row cuts average 79.2 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 639 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 279 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.718 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -119.78292 best solution, best possible -138.17683 (1.74 seconds)
Cbc0012I Integer solution of -119.90692 found by rounding after 2133 iterations and 7 nodes (1.85 seconds)
Cbc0012I Integer solution of -133.02851 found by rounding after 2153 iterations and 8 nodes (1.85 seconds)
Cbc0001I Search completed - best objective -133.0285066, took 2425 iterations and 20 nodes (1.87 seconds)
Cbc0032I Strong branching done 350 times (5100 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 9, 39 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.88

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 59 (-19) columns and 323 (-130) elements
Clp1000I sum of infeasibilities 3.21136e-05 - average 3.02958e-07, 13 fixed columns
Coin0506I Presolve 76 (-30) rows, 46 (-13) columns and 237 (-86) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 6.2321019 - largest nonzero change 0 ( 0%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 161.96368
Clp0000I Optimal - objective value 161.96368
Coin0511I After Postsolve, objective 161.96368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.96368
Clp0000I Optimal - objective value 161.96368
Clp0000I Optimal - objective value 161.96368
Coin0511I After Postsolve, objective 161.96368, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.96368 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 106 rows, 59 columns (58 integer (58 of which binary)) and 323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.481%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.58684
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -60.6696 iterations 21
Cbc0038I Solution found of -60.6696
Cbc0038I Relaxing continuous gives -60.6696
Cbc0038I Rounding solution of -107.191 is better than previous of -60.6696

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 59 columns, reduced to 35 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -107.191 to -130.883 (0.03 seconds)
Cbc0038I Round again with cutoff of -133.991
Cbc0038I Pass   2: suminf.    1.18713 (5) obj. -133.991 iterations 9
Cbc0038I Pass   3: suminf.    0.33564 (3) obj. -133.991 iterations 2
Cbc0038I Pass   4: suminf.    1.30668 (6) obj. -133.991 iterations 13
Cbc0038I Pass   5: suminf.    1.78733 (8) obj. -133.991 iterations 12
Cbc0038I Pass   6: suminf.    1.71828 (9) obj. -133.991 iterations 1
Cbc0038I Pass   7: suminf.    2.00924 (5) obj. -133.991 iterations 10
Cbc0038I Pass   8: suminf.    0.83592 (6) obj. -133.991 iterations 7
Cbc0038I Pass   9: suminf.    0.74853 (9) obj. -133.991 iterations 2
Cbc0038I Pass  10: suminf.    1.95039 (8) obj. -133.991 iterations 15
Cbc0038I Pass  11: suminf.    1.22261 (6) obj. -133.991 iterations 3
Cbc0038I Pass  12: suminf.    1.57167 (5) obj. -133.991 iterations 15
Cbc0038I Pass  13: suminf.    0.31413 (5) obj. -133.991 iterations 7
Cbc0038I Pass  14: suminf.    0.06529 (2) obj. -133.991 iterations 6
Cbc0038I Pass  15: suminf.    1.00728 (5) obj. -133.991 iterations 8
Cbc0038I Pass  16: suminf.    2.12642 (6) obj. -133.991 iterations 11
Cbc0038I Pass  17: suminf.    0.50458 (4) obj. -133.991 iterations 11
Cbc0038I Pass  18: suminf.    2.43386 (6) obj. -133.991 iterations 7
Cbc0038I Pass  19: suminf.    2.65765 (9) obj. -133.991 iterations 11
Cbc0038I Pass  20: suminf.    2.51728 (7) obj. -133.991 iterations 7
Cbc0038I Pass  21: suminf.    1.51381 (5) obj. -133.991 iterations 8
Cbc0038I Pass  22: suminf.    0.57954 (5) obj. -133.991 iterations 6
Cbc0038I Pass  23: suminf.    0.70479 (6) obj. -133.991 iterations 13
Cbc0038I Pass  24: suminf.    2.32212 (7) obj. -133.991 iterations 9
Cbc0038I Pass  25: suminf.    0.75349 (2) obj. -133.991 iterations 6
Cbc0038I Pass  26: suminf.    0.74487 (3) obj. -133.991 iterations 1
Cbc0038I Pass  27: suminf.    1.07695 (3) obj. -133.991 iterations 2
Cbc0038I Pass  28: suminf.    2.40334 (9) obj. -133.991 iterations 10
Cbc0038I Pass  29: suminf.    1.71997 (6) obj. -133.991 iterations 4
Cbc0038I Pass  30: suminf.    1.30654 (4) obj. -133.991 iterations 6
Cbc0038I Pass  31: suminf.    0.77850 (3) obj. -133.991 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 59 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -130.883 to -133.029 (0.09 seconds)
Cbc0038I Round again with cutoff of -139.586
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.45884 (5) obj. -139.586 iterations 0
Cbc0038I Pass  32: suminf.    0.69155 (7) obj. -139.586 iterations 3
Cbc0038I Pass  33: suminf.    1.84872 (6) obj. -139.586 iterations 19
Cbc0038I Pass  34: suminf.    1.84872 (6) obj. -139.586 iterations 0
Cbc0038I Pass  35: suminf.    1.18484 (8) obj. -139.586 iterations 11
Cbc0038I Pass  36: suminf.    2.08486 (9) obj. -139.586 iterations 15
Cbc0038I Pass  37: suminf.    1.85076 (9) obj. -139.586 iterations 5
Cbc0038I Pass  38: suminf.    1.59282 (5) obj. -139.586 iterations 16
Cbc0038I Pass  39: suminf.    2.54086 (6) obj. -139.586 iterations 3
Cbc0038I Pass  40: suminf.    1.26307 (6) obj. -139.586 iterations 8
Cbc0038I Pass  41: suminf.    1.15028 (8) obj. -139.586 iterations 7
Cbc0038I Pass  42: suminf.    2.35989 (6) obj. -139.586 iterations 7
Cbc0038I Pass  43: suminf.    2.03906 (9) obj. -139.586 iterations 2
Cbc0038I Pass  44: suminf.    2.02063 (10) obj. -139.586 iterations 18
Cbc0038I Pass  45: suminf.    3.03951 (10) obj. -139.586 iterations 15
Cbc0038I Pass  46: suminf.    2.23142 (9) obj. -139.586 iterations 9
Cbc0038I Pass  47: suminf.    2.52647 (9) obj. -139.586 iterations 11
Cbc0038I Pass  48: suminf.    2.38484 (8) obj. -139.586 iterations 2
Cbc0038I Pass  49: suminf.    3.13691 (7) obj. -139.586 iterations 10
Cbc0038I Pass  50: suminf.    2.36013 (9) obj. -139.586 iterations 5
Cbc0038I Pass  51: suminf.    3.11297 (9) obj. -139.586 iterations 15
Cbc0038I Pass  52: suminf.    2.12442 (6) obj. -139.586 iterations 8
Cbc0038I Pass  53: suminf.    1.67753 (5) obj. -139.586 iterations 6
Cbc0038I Pass  54: suminf.    2.35336 (6) obj. -139.586 iterations 3
Cbc0038I Pass  55: suminf.    1.55604 (6) obj. -139.586 iterations 8
Cbc0038I Pass  56: suminf.    1.33477 (8) obj. -139.586 iterations 7
Cbc0038I Pass  57: suminf.    2.36383 (6) obj. -139.586 iterations 7
Cbc0038I Pass  58: suminf.    2.06557 (9) obj. -139.586 iterations 2
Cbc0038I Pass  59: suminf.    2.20636 (10) obj. -139.586 iterations 18
Cbc0038I Pass  60: suminf.    2.40296 (10) obj. -139.586 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 59 columns, reduced to 41 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -133.029 - took 0.07 seconds
Cbc0012I Integer solution of -133.02851 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 106 rows 59 columns, reduced to 37 rows 23 columns
Cbc0031I 8 added rows had average density of 51.75
Cbc0013I At root node, 8 cuts changed objective from -161.96368 to -145.12951 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 886 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 366 row cuts average 51.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 98 row cuts average 52.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -133.0285066, took 1392 iterations and 8 nodes (0.36 seconds)
Cbc0032I Strong branching done 102 times (674 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-70) rows, 95 (-58) columns and 1319 (-1985) elements
Clp1000I sum of infeasibilities 3.6672e-07 - average 4.31435e-09, 49 fixed columns
Coin0506I Presolve 38 (-47) rows, 45 (-50) columns and 161 (-1158) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 2.8133698 - largest nonzero change 2.9050694e-05 ( 0.0010393299%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 139.73342
Clp0000I Optimal - objective value 139.73342
Coin0511I After Postsolve, objective 139.73342, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2174431 - largest nonzero change 2.8700566e-05 ( 0.0024275985%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 191.99668
Clp0000I Optimal - objective value 191.99668
Clp0000I Optimal - objective value 191.99668
Coin0511I After Postsolve, objective 191.99668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 191.9966801 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 89 rows, 99 columns (99 integer (99 of which binary)) and 1374 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.416%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 6.98676
Cbc0038I Pass   1: suminf.    1.51772 (17) obj. -81.6342 iterations 29
Cbc0038I Pass   2: suminf.    1.51772 (17) obj. -81.6342 iterations 1
Cbc0038I Solution found of -60.6981
Cbc0038I Rounding solution of -81.5114 is better than previous of -60.6981

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -81.5114 to -106.846 (0.05 seconds)
Cbc0038I Round again with cutoff of -113.713
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.12306 (32) obj. -113.713 iterations 12
Cbc0038I Pass   4: suminf.    0.92495 (10) obj. -113.713 iterations 27
Cbc0038I Pass   5: suminf.    0.92495 (10) obj. -113.713 iterations 0
Cbc0038I Solution found of -119.783
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -130.929
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   6: suminf.    3.45761 (32) obj. -130.929 iterations 1
Cbc0038I Pass   7: suminf.    1.53294 (17) obj. -130.929 iterations 16
Cbc0038I Pass   8: suminf.    1.21155 (16) obj. -139.191 iterations 3
Cbc0038I Pass   9: suminf.    0.54064 (9) obj. -130.929 iterations 16
Cbc0038I Pass  10: suminf.    1.03602 (4) obj. -130.929 iterations 15
Cbc0038I Pass  11: suminf.    1.03602 (4) obj. -130.929 iterations 0
Cbc0038I Pass  12: suminf.    0.54464 (3) obj. -130.929 iterations 6
Cbc0038I Pass  13: suminf.    0.54464 (3) obj. -130.929 iterations 0
Cbc0038I Pass  14: suminf.    0.73677 (2) obj. -130.929 iterations 9
Cbc0038I Pass  15: suminf.    0.73677 (2) obj. -130.929 iterations 0
Cbc0038I Pass  16: suminf.    0.79941 (2) obj. -130.929 iterations 2
Cbc0038I Pass  17: suminf.    1.26823 (9) obj. -130.929 iterations 22
Cbc0038I Pass  18: suminf.    1.19399 (10) obj. -130.929 iterations 5
Cbc0038I Pass  19: suminf.    1.43831 (4) obj. -130.929 iterations 22
Cbc0038I Pass  20: suminf.    1.32397 (4) obj. -130.929 iterations 7
Cbc0038I Pass  21: suminf.    1.37768 (4) obj. -130.929 iterations 9
Cbc0038I Pass  22: suminf.    2.16094 (22) obj. -130.929 iterations 30
Cbc0038I Pass  23: suminf.    2.03247 (19) obj. -130.929 iterations 7
Cbc0038I Pass  24: suminf.    1.18717 (5) obj. -130.929 iterations 32
Cbc0038I Pass  25: suminf.    0.90398 (5) obj. -130.929 iterations 15
Cbc0038I Pass  26: suminf.    1.03820 (4) obj. -130.929 iterations 13
Cbc0038I Pass  27: suminf.    1.03820 (4) obj. -130.929 iterations 0
Cbc0038I Pass  28: suminf.    0.59350 (3) obj. -130.929 iterations 5
Cbc0038I Pass  29: suminf.    0.59350 (3) obj. -130.929 iterations 0
Cbc0038I Pass  30: suminf.    0.73897 (2) obj. -130.929 iterations 8
Cbc0038I Pass  31: suminf.    0.73897 (2) obj. -130.929 iterations 0
Cbc0038I Pass  32: suminf.    0.76683 (2) obj. -130.929 iterations 2
Cbc0038I Pass  33: suminf.    1.41653 (12) obj. -130.929 iterations 21
Cbc0038I Pass  34: suminf.    1.13276 (7) obj. -130.929 iterations 11
Cbc0038I Pass  35: suminf.    1.55282 (4) obj. -130.929 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 99 columns, reduced to 10 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -119.783 - took 0.04 seconds
Cbc0012I Integer solution of -119.78292 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 89 rows 99 columns, reduced to 6 rows 7 columns
Cbc0031I 29 added rows had average density of 29.413793
Cbc0013I At root node, 29 cuts changed objective from -175.51141 to -138.17683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3559 row cuts average 4.3 elements, 6 column cuts (14 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1006 row cuts average 79.2 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 639 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 279 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.777 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -119.78292 best solution, best possible -138.17683 (2.19 seconds)
Cbc0012I Integer solution of -119.90692 found by rounding after 2133 iterations and 7 nodes (2.35 seconds)
Cbc0012I Integer solution of -133.02851 found by rounding after 2153 iterations and 8 nodes (2.36 seconds)
Cbc0001I Search completed - best objective -133.0285066, took 2425 iterations and 20 nodes (2.37 seconds)
Cbc0032I Strong branching done 350 times (5100 iterations), fathomed 1 nodes and fixed 8 variables
Cbc0035I Maximum depth 9, 39 variables fixed on reduced cost
Total time (CPU seconds):       1.55   (Wallclock seconds):       2.39

