Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-74) rows, 72 (-31) columns and 400 (-203) elements
Clp1000I sum of infeasibilities 3.96772e-08 - average 3.02879e-10, 63 fixed columns
Coin0506I Presolve 10 (-121) rows, 9 (-63) columns and 32 (-368) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 31015.678
Clp0000I Optimal - objective value 31015.678
Coin0511I After Postsolve, objective 31015.678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4360799 - largest nonzero change 2.0194489e-05 ( 0.0017276645%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 31015.678
Clp0000I Optimal - objective value 31015.678
Clp0000I Optimal - objective value 31015.678
Coin0511I After Postsolve, objective 31015.678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31015.67766 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 72 columns (71 integer (71 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.236%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.602985
Cbc0038I Pass   1: suminf.    0.17143 (1) obj. -30275.4 iterations 12
Cbc0038I Solution found of -28678.1
Cbc0038I Relaxing continuous gives -28678.1
Cbc0038I Rounding solution of -28865 is better than previous of -28678.1

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29080.1
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17143 (1) obj. -30275.4 iterations 0
Cbc0038I Pass   3: suminf.    0.10587 (1) obj. -29080.1 iterations 2
Cbc0038I Pass   4: suminf.    0.48571 (1) obj. -30522.5 iterations 1
Cbc0038I Pass   5: suminf.    0.76627 (2) obj. -29080.1 iterations 14
Cbc0038I Pass   6: suminf.    0.41770 (2) obj. -29080.1 iterations 7
Cbc0038I Pass   7: suminf.    0.28457 (2) obj. -29080.1 iterations 6
Cbc0038I Pass   8: suminf.    0.14905 (1) obj. -29080.1 iterations 5
Cbc0038I Solution found of -29522.5
Cbc0038I Relaxing continuous gives -29522.5
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 72 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -29522.5 to -29831.8 (0.01 seconds)
Cbc0038I Round again with cutoff of -30068.6
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.17143 (1) obj. -30275.4 iterations 0
Cbc0038I Pass  10: suminf.    0.36618 (1) obj. -30068.6 iterations 2
Cbc0038I Pass  11: suminf.    0.48571 (1) obj. -30522.5 iterations 1
Cbc0038I Pass  12: suminf.    0.69466 (3) obj. -30068.6 iterations 13
Cbc0038I Pass  13: suminf.    0.32791 (3) obj. -30068.6 iterations 6
Cbc0038I Pass  14: suminf.    0.44988 (1) obj. -30068.6 iterations 9
Cbc0038I Pass  15: suminf.    0.44988 (1) obj. -30068.6 iterations 0
Cbc0038I Pass  16: suminf.    0.42857 (1) obj. -30074 iterations 4
Cbc0038I Pass  17: suminf.    0.42999 (1) obj. -30068.6 iterations 1
Cbc0038I Pass  18: suminf.    1.57858 (8) obj. -30068.6 iterations 18
Cbc0038I Pass  19: suminf.    1.14985 (3) obj. -30068.6 iterations 13
Cbc0038I Pass  20: suminf.    0.11429 (1) obj. -30453.5 iterations 12
Cbc0038I Pass  21: suminf.    0.01292 (1) obj. -30068.6 iterations 1
Cbc0038I Pass  22: suminf.    1.09519 (3) obj. -30068.6 iterations 15
Cbc0038I Pass  23: suminf.    1.09519 (3) obj. -30068.6 iterations 5
Cbc0038I Pass  24: suminf.    0.52437 (2) obj. -30068.6 iterations 7
Cbc0038I Pass  25: suminf.    0.28347 (2) obj. -30068.6 iterations 4
Cbc0038I Pass  26: suminf.    0.37422 (2) obj. -30068.6 iterations 5
Cbc0038I Pass  27: suminf.    0.28556 (2) obj. -30350.8 iterations 2
Cbc0038I Pass  28: suminf.    0.57301 (4) obj. -30068.6 iterations 7
Cbc0038I Pass  29: suminf.    0.56006 (3) obj. -30068.6 iterations 3
Cbc0038I Pass  30: suminf.    0.42999 (1) obj. -30068.6 iterations 10
Cbc0038I Pass  31: suminf.    0.42857 (1) obj. -30074 iterations 1
Cbc0038I Pass  32: suminf.    0.90331 (3) obj. -30068.6 iterations 11
Cbc0038I Pass  33: suminf.    0.36608 (2) obj. -30068.6 iterations 8
Cbc0038I Pass  34: suminf.    0.08571 (1) obj. -30329.5 iterations 4
Cbc0038I Pass  35: suminf.    0.15443 (1) obj. -30068.6 iterations 1
Cbc0038I Pass  36: suminf.    0.64280 (3) obj. -30068.6 iterations 13
Cbc0038I Pass  37: suminf.    0.28347 (2) obj. -30068.6 iterations 15
Cbc0038I Pass  38: suminf.    0.37422 (2) obj. -30068.6 iterations 5
Cbc0038I Rounding solution of -30793.5 is better than previous of -29831.8

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 72 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -30860.2
Cbc0038I Reduced cost fixing fixed 47 variables on major pass 4
Cbc0038I Pass  38: suminf.    0.51234 (2) obj. -30860.2 iterations 1
Cbc0038I Pass  39: suminf.    0.55506 (2) obj. -30860.2 iterations 4
Cbc0038I Pass  40: suminf.    0.55506 (2) obj. -30860.2 iterations 5
Cbc0038I Pass  41: suminf.    0.60299 (2) obj. -31015.7 iterations 7
Cbc0038I Pass  42: suminf.    0.53625 (3) obj. -30860.2 iterations 14
Cbc0038I Pass  43: suminf.    0.53625 (3) obj. -30860.2 iterations 9
Cbc0038I Pass  44: suminf.    0.38998 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  45: suminf.    0.38998 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  46: suminf.    0.33141 (2) obj. -30860.2 iterations 13
Cbc0038I Pass  47: suminf.    0.33141 (2) obj. -30860.2 iterations 0
Cbc0038I Pass  48: suminf.    0.53625 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  49: suminf.    0.53625 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  50: suminf.    0.38998 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  51: suminf.    0.38998 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  52: suminf.    0.33141 (2) obj. -30860.2 iterations 13
Cbc0038I Pass  53: suminf.    0.33141 (2) obj. -30860.2 iterations 0
Cbc0038I Pass  54: suminf.    0.53625 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  55: suminf.    0.53625 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  56: suminf.    0.38998 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  57: suminf.    0.38998 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  58: suminf.    0.33141 (2) obj. -30860.2 iterations 11
Cbc0038I Pass  59: suminf.    0.33141 (2) obj. -30860.2 iterations 0
Cbc0038I Pass  60: suminf.    0.53625 (3) obj. -30860.2 iterations 10
Cbc0038I Pass  61: suminf.    0.53625 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  62: suminf.    0.38998 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  63: suminf.    0.38998 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  64: suminf.    0.33141 (2) obj. -30860.2 iterations 11
Cbc0038I Pass  65: suminf.    0.33141 (2) obj. -30860.2 iterations 0
Cbc0038I Pass  66: suminf.    0.53625 (3) obj. -30860.2 iterations 10
Cbc0038I Pass  67: suminf.    0.53625 (3) obj. -30860.2 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 72 columns, reduced to 2 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30793.5 - took 0.02 seconds
Cbc0012I Integer solution of -30793.537 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 131 rows 72 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 7.6666667
Cbc0013I At root node, 4 cuts changed objective from -31015.678 to -30898.237 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30793.537, took 10 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-101) rows, 114 (-88) columns and 1882 (-3771) elements
Clp1000I sum of infeasibilities 4.84959e-08 - average 4.70834e-10, 74 fixed columns
Coin0506I Presolve 31 (-72) rows, 34 (-80) columns and 198 (-1684) elements
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 31056.893
Clp0000I Optimal - objective value 31056.893
Coin0511I After Postsolve, objective 31056.893, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2691526 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 31056.893
Clp0000I Optimal - objective value 31056.893
Clp0000I Optimal - objective value 31056.893
Coin0511I After Postsolve, objective 31056.893, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31056.89267 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 114 columns (114 integer (114 of which binary)) and 1884 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.715%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.42782
Cbc0038I Pass   1: suminf.    4.63354 (33) obj. -28707.5 iterations 18
Cbc0038I Pass   2: suminf.    3.75049 (31) obj. -27097.9 iterations 2
Cbc0038I Pass   3: suminf.    2.12592 (20) obj. -27084.4 iterations 11
Cbc0038I Solution found of -27064.7
Cbc0038I Rounding solution of -27865 is better than previous of -27064.7

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -27865 to -28934.3 (0.04 seconds)
Cbc0038I Round again with cutoff of -29145.7
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.74856 (34) obj. -29145.7 iterations 1
Cbc0038I Pass   5: suminf.    2.83293 (22) obj. -29145.7 iterations 12
Cbc0038I Pass   6: suminf.    2.79708 (21) obj. -30293.6 iterations 1
Cbc0038I Pass   7: suminf.    0.12315 (1) obj. -29145.7 iterations 22
Cbc0038I Pass   8: suminf.    0.48571 (1) obj. -30522.5 iterations 2
Cbc0038I Pass   9: suminf.    1.38891 (8) obj. -29145.7 iterations 19
Cbc0038I Pass  10: suminf.    1.15943 (8) obj. -29145.7 iterations 7
Cbc0038I Pass  11: suminf.    0.48571 (1) obj. -30517.5 iterations 11
Cbc0038I Pass  12: suminf.    0.12447 (1) obj. -29145.7 iterations 1
Cbc0038I Pass  13: suminf.    2.20672 (12) obj. -29145.7 iterations 30
Cbc0038I Pass  14: suminf.    1.37532 (9) obj. -29145.7 iterations 9
Cbc0038I Pass  15: suminf.    0.34286 (1) obj. -29203 iterations 10
Cbc0038I Pass  16: suminf.    0.32777 (1) obj. -29145.7 iterations 1
Cbc0038I Pass  17: suminf.    1.36485 (12) obj. -29145.7 iterations 21
Cbc0038I Pass  18: suminf.    1.26298 (10) obj. -29145.7 iterations 6
Cbc0038I Pass  19: suminf.    0.17143 (1) obj. -29727 iterations 11
Cbc0038I Pass  20: suminf.    0.01836 (1) obj. -29145.7 iterations 1
Cbc0038I Pass  21: suminf.    1.35688 (10) obj. -29145.7 iterations 16
Cbc0038I Pass  22: suminf.    1.35688 (10) obj. -29145.7 iterations 2
Cbc0038I Pass  23: suminf.    0.37143 (1) obj. -29306.5 iterations 14
Cbc0038I Pass  24: suminf.    0.41375 (1) obj. -29145.7 iterations 1
Cbc0038I Pass  25: suminf.    2.48349 (10) obj. -29145.7 iterations 18
Cbc0038I Pass  26: suminf.    1.20474 (8) obj. -29145.7 iterations 10
Cbc0038I Pass  27: suminf.    0.83320 (6) obj. -29224.9 iterations 3
Cbc0038I Solution found of -29217.1
Cbc0038I Rounding solution of -29855 is better than previous of -29217.1

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 8 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -29855 to -30599.8 (0.05 seconds)
Cbc0038I Round again with cutoff of -30689.6
Cbc0038I Reduced cost fixing fixed 45 variables on major pass 3
Cbc0038I Pass  28: suminf.    5.05021 (34) obj. -30689.6 iterations 2
Cbc0038I Pass  29: suminf.    4.44732 (33) obj. -30689.6 iterations 5
Cbc0038I Pass  30: suminf.    2.05449 (17) obj. -30823.3 iterations 19
Cbc0038I Pass  31: suminf.    2.00610 (17) obj. -30689.6 iterations 1
Cbc0038I Pass  32: suminf.    0.25714 (1) obj. -30808.3 iterations 18
Cbc0038I Pass  33: suminf.    0.22589 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  34: suminf.    0.93848 (6) obj. -30689.6 iterations 12
Cbc0038I Pass  35: suminf.    0.93848 (6) obj. -30689.6 iterations 5
Cbc0038I Pass  36: suminf.    0.25714 (1) obj. -30806.3 iterations 7
Cbc0038I Pass  37: suminf.    0.22642 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  38: suminf.    1.71341 (9) obj. -30689.6 iterations 16
Cbc0038I Pass  39: suminf.    0.86195 (6) obj. -30689.6 iterations 10
Cbc0038I Pass  40: suminf.    0.25714 (1) obj. -30805.3 iterations 7
Cbc0038I Pass  41: suminf.    0.22668 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  42: suminf.    1.36219 (9) obj. -30689.6 iterations 12
Cbc0038I Pass  43: suminf.    1.35583 (8) obj. -30871.5 iterations 2
Cbc0038I Pass  44: suminf.    0.45882 (2) obj. -30689.6 iterations 11
Cbc0038I Pass  45: suminf.    0.22747 (1) obj. -30689.6 iterations 3
Cbc0038I Pass  46: suminf.    0.25714 (1) obj. -30802.3 iterations 2
Cbc0038I Pass  47: suminf.    1.57944 (11) obj. -30808.7 iterations 14
Cbc0038I Pass  48: suminf.    1.53877 (11) obj. -30689.6 iterations 2
Cbc0038I Pass  49: suminf.    0.25714 (1) obj. -30799.3 iterations 12
Cbc0038I Pass  50: suminf.    0.22826 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  51: suminf.    2.67006 (15) obj. -30689.6 iterations 18
Cbc0038I Pass  52: suminf.    1.78759 (13) obj. -30689.6 iterations 3
Cbc0038I Pass  53: suminf.    0.25714 (1) obj. -30801.3 iterations 14
Cbc0038I Pass  54: suminf.    0.22773 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  55: suminf.    1.99653 (8) obj. -30689.6 iterations 14
Cbc0038I Pass  56: suminf.    1.99653 (8) obj. -30689.6 iterations 2
Cbc0038I Pass  57: suminf.    0.42843 (2) obj. -30689.6 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -30599.8 to -30793.5 (0.07 seconds)
Cbc0038I Round again with cutoff of -30870.1
Cbc0038I Reduced cost fixing fixed 47 variables on major pass 4
Cbc0038I Pass  57: suminf.    5.03653 (34) obj. -30870.1 iterations 0
Cbc0038I Pass  58: suminf.    4.57705 (34) obj. -30870.1 iterations 8
Cbc0038I Pass  59: suminf.    1.70153 (11) obj. -30870.1 iterations 31
Cbc0038I Pass  60: suminf.    0.82930 (2) obj. -30870.1 iterations 10
Cbc0038I Pass  61: suminf.    0.80232 (2) obj. -30870.1 iterations 3
Cbc0038I Pass  62: suminf.    0.85765 (5) obj. -30870.1 iterations 9
Cbc0038I Pass  63: suminf.    0.85765 (5) obj. -30870.1 iterations 4
Cbc0038I Pass  64: suminf.    0.34842 (2) obj. -30870.1 iterations 7
Cbc0038I Pass  65: suminf.    0.34842 (2) obj. -30870.1 iterations 0
Cbc0038I Pass  66: suminf.    0.53612 (3) obj. -30870.1 iterations 8
Cbc0038I Pass  67: suminf.    0.53612 (3) obj. -30870.1 iterations 0
Cbc0038I Pass  68: suminf.    0.67608 (6) obj. -30870.1 iterations 26
Cbc0038I Pass  69: suminf.    0.62192 (5) obj. -30870.1 iterations 3
Cbc0038I Pass  70: suminf.    0.02857 (1) obj. -30898 iterations 6
Cbc0038I Pass  71: suminf.    0.02121 (1) obj. -30870.1 iterations 1
Cbc0038I Pass  72: suminf.    2.68204 (12) obj. -30870.1 iterations 21
Cbc0038I Pass  73: suminf.    1.98504 (10) obj. -30870.1 iterations 6
Cbc0038I Pass  74: suminf.    0.60299 (2) obj. -31011.7 iterations 12
Cbc0038I Pass  75: suminf.    0.52044 (2) obj. -30870.1 iterations 1
Cbc0038I Pass  76: suminf.    0.56581 (2) obj. -30870.1 iterations 4
Cbc0038I Pass  77: suminf.    0.56581 (2) obj. -30870.1 iterations 3
Cbc0038I Pass  78: suminf.    1.61381 (10) obj. -30870.1 iterations 16
Cbc0038I Pass  79: suminf.    1.57855 (9) obj. -30870.1 iterations 3
Cbc0038I Pass  80: suminf.    0.56814 (2) obj. -30870.1 iterations 10
Cbc0038I Pass  81: suminf.    0.56814 (2) obj. -30870.1 iterations 3
Cbc0038I Pass  82: suminf.    0.60299 (2) obj. -31008.7 iterations 5
Cbc0038I Pass  83: suminf.    0.52219 (2) obj. -30870.1 iterations 1
Cbc0038I Pass  84: suminf.    0.92749 (5) obj. -30870.1 iterations 10
Cbc0038I Pass  85: suminf.    0.92749 (5) obj. -30870.1 iterations 2
Cbc0038I Pass  86: suminf.    0.56891 (2) obj. -30870.1 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -30793.5 - took 0.05 seconds
Cbc0012I Integer solution of -30793.537 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 0 rows 0 columns
Cbc0031I 5 added rows had average density of 19.2
Cbc0013I At root node, 15 cuts changed objective from -31033.557 to -30793.537 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 56 row cuts average 2.0 elements, 17 column cuts (17 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30793.537, took 44 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 48 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-74) rows, 72 (-31) columns and 400 (-203) elements
Clp1000I sum of infeasibilities 3.96772e-08 - average 3.02879e-10, 63 fixed columns
Coin0506I Presolve 10 (-121) rows, 9 (-63) columns and 32 (-368) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 31015.678
Clp0000I Optimal - objective value 31015.678
Coin0511I After Postsolve, objective 31015.678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.4360799 - largest nonzero change 2.0194489e-05 ( 0.0017276645%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 31015.678
Clp0000I Optimal - objective value 31015.678
Clp0000I Optimal - objective value 31015.678
Coin0511I After Postsolve, objective 31015.678, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31015.67766 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 72 columns (71 integer (71 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.236%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.602985
Cbc0038I Pass   1: suminf.    0.17143 (1) obj. -30275.4 iterations 12
Cbc0038I Solution found of -28678.1
Cbc0038I Relaxing continuous gives -28678.1
Cbc0038I Rounding solution of -28865 is better than previous of -28678.1

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -29080.1
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17143 (1) obj. -30275.4 iterations 0
Cbc0038I Pass   3: suminf.    0.10587 (1) obj. -29080.1 iterations 2
Cbc0038I Pass   4: suminf.    0.48571 (1) obj. -30522.5 iterations 1
Cbc0038I Pass   5: suminf.    0.76627 (2) obj. -29080.1 iterations 14
Cbc0038I Pass   6: suminf.    0.41770 (2) obj. -29080.1 iterations 7
Cbc0038I Pass   7: suminf.    0.28457 (2) obj. -29080.1 iterations 6
Cbc0038I Pass   8: suminf.    0.14905 (1) obj. -29080.1 iterations 5
Cbc0038I Solution found of -29522.5
Cbc0038I Relaxing continuous gives -29522.5
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 72 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -29522.5 to -29831.8 (0.02 seconds)
Cbc0038I Round again with cutoff of -30068.6
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.17143 (1) obj. -30275.4 iterations 0
Cbc0038I Pass  10: suminf.    0.36618 (1) obj. -30068.6 iterations 2
Cbc0038I Pass  11: suminf.    0.48571 (1) obj. -30522.5 iterations 1
Cbc0038I Pass  12: suminf.    0.69466 (3) obj. -30068.6 iterations 13
Cbc0038I Pass  13: suminf.    0.32791 (3) obj. -30068.6 iterations 6
Cbc0038I Pass  14: suminf.    0.44988 (1) obj. -30068.6 iterations 9
Cbc0038I Pass  15: suminf.    0.44988 (1) obj. -30068.6 iterations 0
Cbc0038I Pass  16: suminf.    0.42857 (1) obj. -30074 iterations 4
Cbc0038I Pass  17: suminf.    0.42999 (1) obj. -30068.6 iterations 1
Cbc0038I Pass  18: suminf.    1.57858 (8) obj. -30068.6 iterations 18
Cbc0038I Pass  19: suminf.    1.14985 (3) obj. -30068.6 iterations 13
Cbc0038I Pass  20: suminf.    0.11429 (1) obj. -30453.5 iterations 12
Cbc0038I Pass  21: suminf.    0.01292 (1) obj. -30068.6 iterations 1
Cbc0038I Pass  22: suminf.    1.09519 (3) obj. -30068.6 iterations 15
Cbc0038I Pass  23: suminf.    1.09519 (3) obj. -30068.6 iterations 5
Cbc0038I Pass  24: suminf.    0.52437 (2) obj. -30068.6 iterations 7
Cbc0038I Pass  25: suminf.    0.28347 (2) obj. -30068.6 iterations 4
Cbc0038I Pass  26: suminf.    0.37422 (2) obj. -30068.6 iterations 5
Cbc0038I Pass  27: suminf.    0.28556 (2) obj. -30350.8 iterations 2
Cbc0038I Pass  28: suminf.    0.57301 (4) obj. -30068.6 iterations 7
Cbc0038I Pass  29: suminf.    0.56006 (3) obj. -30068.6 iterations 3
Cbc0038I Pass  30: suminf.    0.42999 (1) obj. -30068.6 iterations 10
Cbc0038I Pass  31: suminf.    0.42857 (1) obj. -30074 iterations 1
Cbc0038I Pass  32: suminf.    0.90331 (3) obj. -30068.6 iterations 11
Cbc0038I Pass  33: suminf.    0.36608 (2) obj. -30068.6 iterations 8
Cbc0038I Pass  34: suminf.    0.08571 (1) obj. -30329.5 iterations 4
Cbc0038I Pass  35: suminf.    0.15443 (1) obj. -30068.6 iterations 1
Cbc0038I Pass  36: suminf.    0.64280 (3) obj. -30068.6 iterations 13
Cbc0038I Pass  37: suminf.    0.28347 (2) obj. -30068.6 iterations 15
Cbc0038I Pass  38: suminf.    0.37422 (2) obj. -30068.6 iterations 5
Cbc0038I Rounding solution of -30793.5 is better than previous of -29831.8

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 72 columns, reduced to 14 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -30860.2
Cbc0038I Reduced cost fixing fixed 47 variables on major pass 4
Cbc0038I Pass  38: suminf.    0.51234 (2) obj. -30860.2 iterations 1
Cbc0038I Pass  39: suminf.    0.55506 (2) obj. -30860.2 iterations 4
Cbc0038I Pass  40: suminf.    0.55506 (2) obj. -30860.2 iterations 5
Cbc0038I Pass  41: suminf.    0.60299 (2) obj. -31015.7 iterations 7
Cbc0038I Pass  42: suminf.    0.53625 (3) obj. -30860.2 iterations 14
Cbc0038I Pass  43: suminf.    0.53625 (3) obj. -30860.2 iterations 9
Cbc0038I Pass  44: suminf.    0.38998 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  45: suminf.    0.38998 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  46: suminf.    0.33141 (2) obj. -30860.2 iterations 13
Cbc0038I Pass  47: suminf.    0.33141 (2) obj. -30860.2 iterations 0
Cbc0038I Pass  48: suminf.    0.53625 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  49: suminf.    0.53625 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  50: suminf.    0.38998 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  51: suminf.    0.38998 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  52: suminf.    0.33141 (2) obj. -30860.2 iterations 13
Cbc0038I Pass  53: suminf.    0.33141 (2) obj. -30860.2 iterations 0
Cbc0038I Pass  54: suminf.    0.53625 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  55: suminf.    0.53625 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  56: suminf.    0.38998 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  57: suminf.    0.38998 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  58: suminf.    0.33141 (2) obj. -30860.2 iterations 11
Cbc0038I Pass  59: suminf.    0.33141 (2) obj. -30860.2 iterations 0
Cbc0038I Pass  60: suminf.    0.53625 (3) obj. -30860.2 iterations 10
Cbc0038I Pass  61: suminf.    0.53625 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  62: suminf.    0.38998 (3) obj. -30860.2 iterations 12
Cbc0038I Pass  63: suminf.    0.38998 (3) obj. -30860.2 iterations 0
Cbc0038I Pass  64: suminf.    0.33141 (2) obj. -30860.2 iterations 11
Cbc0038I Pass  65: suminf.    0.33141 (2) obj. -30860.2 iterations 0
Cbc0038I Pass  66: suminf.    0.53625 (3) obj. -30860.2 iterations 10
Cbc0038I Pass  67: suminf.    0.53625 (3) obj. -30860.2 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 72 columns, reduced to 2 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30793.5 - took 0.02 seconds
Cbc0012I Integer solution of -30793.537 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 131 rows 72 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 7.6666667
Cbc0013I At root node, 4 cuts changed objective from -31015.678 to -30898.237 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30793.537, took 10 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-102) rows, 114 (-89) columns and 1882 (-3772) elements
Clp1000I sum of infeasibilities 4.84959e-08 - average 4.70834e-10, 74 fixed columns
Coin0506I Presolve 31 (-72) rows, 34 (-80) columns and 198 (-1684) elements
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 31056.893
Clp0000I Optimal - objective value 31056.893
Coin0511I After Postsolve, objective 31056.893, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2691526 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 31056.893
Clp0000I Optimal - objective value 31056.893
Clp0000I Optimal - objective value 31056.893
Coin0511I After Postsolve, objective 31056.893, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31056.89267 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 114 columns (114 integer (114 of which binary)) and 1884 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.715%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.42782
Cbc0038I Pass   1: suminf.    4.63354 (33) obj. -28707.5 iterations 18
Cbc0038I Pass   2: suminf.    3.75049 (31) obj. -27097.9 iterations 2
Cbc0038I Pass   3: suminf.    2.12592 (20) obj. -27084.4 iterations 11
Cbc0038I Solution found of -27064.7
Cbc0038I Rounding solution of -27865 is better than previous of -27064.7

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -27865 to -28934.3 (0.04 seconds)
Cbc0038I Round again with cutoff of -29145.7
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.74856 (34) obj. -29145.7 iterations 1
Cbc0038I Pass   5: suminf.    2.83293 (22) obj. -29145.7 iterations 12
Cbc0038I Pass   6: suminf.    2.79708 (21) obj. -30293.6 iterations 1
Cbc0038I Pass   7: suminf.    0.12315 (1) obj. -29145.7 iterations 22
Cbc0038I Pass   8: suminf.    0.48571 (1) obj. -30522.5 iterations 2
Cbc0038I Pass   9: suminf.    1.38891 (8) obj. -29145.7 iterations 19
Cbc0038I Pass  10: suminf.    1.15943 (8) obj. -29145.7 iterations 7
Cbc0038I Pass  11: suminf.    0.48571 (1) obj. -30517.5 iterations 11
Cbc0038I Pass  12: suminf.    0.12447 (1) obj. -29145.7 iterations 1
Cbc0038I Pass  13: suminf.    2.20672 (12) obj. -29145.7 iterations 30
Cbc0038I Pass  14: suminf.    1.37532 (9) obj. -29145.7 iterations 9
Cbc0038I Pass  15: suminf.    0.34286 (1) obj. -29203 iterations 10
Cbc0038I Pass  16: suminf.    0.32777 (1) obj. -29145.7 iterations 1
Cbc0038I Pass  17: suminf.    1.36485 (12) obj. -29145.7 iterations 21
Cbc0038I Pass  18: suminf.    1.26298 (10) obj. -29145.7 iterations 6
Cbc0038I Pass  19: suminf.    0.17143 (1) obj. -29727 iterations 11
Cbc0038I Pass  20: suminf.    0.01836 (1) obj. -29145.7 iterations 1
Cbc0038I Pass  21: suminf.    1.35688 (10) obj. -29145.7 iterations 16
Cbc0038I Pass  22: suminf.    1.35688 (10) obj. -29145.7 iterations 2
Cbc0038I Pass  23: suminf.    0.37143 (1) obj. -29306.5 iterations 14
Cbc0038I Pass  24: suminf.    0.41375 (1) obj. -29145.7 iterations 1
Cbc0038I Pass  25: suminf.    2.48349 (10) obj. -29145.7 iterations 18
Cbc0038I Pass  26: suminf.    1.20474 (8) obj. -29145.7 iterations 10
Cbc0038I Pass  27: suminf.    0.83320 (6) obj. -29224.9 iterations 3
Cbc0038I Solution found of -29217.1
Cbc0038I Rounding solution of -29855 is better than previous of -29217.1

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 8 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -29855 to -30599.8 (0.05 seconds)
Cbc0038I Round again with cutoff of -30689.6
Cbc0038I Reduced cost fixing fixed 45 variables on major pass 3
Cbc0038I Pass  28: suminf.    5.05021 (34) obj. -30689.6 iterations 2
Cbc0038I Pass  29: suminf.    4.44732 (33) obj. -30689.6 iterations 5
Cbc0038I Pass  30: suminf.    2.05449 (17) obj. -30823.3 iterations 19
Cbc0038I Pass  31: suminf.    2.00610 (17) obj. -30689.6 iterations 1
Cbc0038I Pass  32: suminf.    0.25714 (1) obj. -30808.3 iterations 18
Cbc0038I Pass  33: suminf.    0.22589 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  34: suminf.    0.93848 (6) obj. -30689.6 iterations 12
Cbc0038I Pass  35: suminf.    0.93848 (6) obj. -30689.6 iterations 5
Cbc0038I Pass  36: suminf.    0.25714 (1) obj. -30806.3 iterations 7
Cbc0038I Pass  37: suminf.    0.22642 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  38: suminf.    1.71341 (9) obj. -30689.6 iterations 16
Cbc0038I Pass  39: suminf.    0.86195 (6) obj. -30689.6 iterations 10
Cbc0038I Pass  40: suminf.    0.25714 (1) obj. -30805.3 iterations 7
Cbc0038I Pass  41: suminf.    0.22668 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  42: suminf.    1.36219 (9) obj. -30689.6 iterations 12
Cbc0038I Pass  43: suminf.    1.35583 (8) obj. -30871.5 iterations 2
Cbc0038I Pass  44: suminf.    0.45882 (2) obj. -30689.6 iterations 11
Cbc0038I Pass  45: suminf.    0.22747 (1) obj. -30689.6 iterations 3
Cbc0038I Pass  46: suminf.    0.25714 (1) obj. -30802.3 iterations 2
Cbc0038I Pass  47: suminf.    1.57944 (11) obj. -30808.7 iterations 14
Cbc0038I Pass  48: suminf.    1.53877 (11) obj. -30689.6 iterations 2
Cbc0038I Pass  49: suminf.    0.25714 (1) obj. -30799.3 iterations 12
Cbc0038I Pass  50: suminf.    0.22826 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  51: suminf.    2.67006 (15) obj. -30689.6 iterations 18
Cbc0038I Pass  52: suminf.    1.78759 (13) obj. -30689.6 iterations 3
Cbc0038I Pass  53: suminf.    0.25714 (1) obj. -30801.3 iterations 14
Cbc0038I Pass  54: suminf.    0.22773 (1) obj. -30689.6 iterations 1
Cbc0038I Pass  55: suminf.    1.99653 (8) obj. -30689.6 iterations 14
Cbc0038I Pass  56: suminf.    1.99653 (8) obj. -30689.6 iterations 2
Cbc0038I Pass  57: suminf.    0.42843 (2) obj. -30689.6 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -30599.8 to -30793.5 (0.07 seconds)
Cbc0038I Round again with cutoff of -30870.1
Cbc0038I Reduced cost fixing fixed 47 variables on major pass 4
Cbc0038I Pass  57: suminf.    5.03653 (34) obj. -30870.1 iterations 0
Cbc0038I Pass  58: suminf.    4.57705 (34) obj. -30870.1 iterations 8
Cbc0038I Pass  59: suminf.    1.70153 (11) obj. -30870.1 iterations 31
Cbc0038I Pass  60: suminf.    0.82930 (2) obj. -30870.1 iterations 10
Cbc0038I Pass  61: suminf.    0.80232 (2) obj. -30870.1 iterations 3
Cbc0038I Pass  62: suminf.    0.85765 (5) obj. -30870.1 iterations 9
Cbc0038I Pass  63: suminf.    0.85765 (5) obj. -30870.1 iterations 4
Cbc0038I Pass  64: suminf.    0.34842 (2) obj. -30870.1 iterations 7
Cbc0038I Pass  65: suminf.    0.34842 (2) obj. -30870.1 iterations 0
Cbc0038I Pass  66: suminf.    0.53612 (3) obj. -30870.1 iterations 8
Cbc0038I Pass  67: suminf.    0.53612 (3) obj. -30870.1 iterations 0
Cbc0038I Pass  68: suminf.    0.67608 (6) obj. -30870.1 iterations 26
Cbc0038I Pass  69: suminf.    0.62192 (5) obj. -30870.1 iterations 3
Cbc0038I Pass  70: suminf.    0.02857 (1) obj. -30898 iterations 6
Cbc0038I Pass  71: suminf.    0.02121 (1) obj. -30870.1 iterations 1
Cbc0038I Pass  72: suminf.    2.68204 (12) obj. -30870.1 iterations 21
Cbc0038I Pass  73: suminf.    1.98504 (10) obj. -30870.1 iterations 6
Cbc0038I Pass  74: suminf.    0.60299 (2) obj. -31011.7 iterations 12
Cbc0038I Pass  75: suminf.    0.52044 (2) obj. -30870.1 iterations 1
Cbc0038I Pass  76: suminf.    0.56581 (2) obj. -30870.1 iterations 4
Cbc0038I Pass  77: suminf.    0.56581 (2) obj. -30870.1 iterations 3
Cbc0038I Pass  78: suminf.    1.61381 (10) obj. -30870.1 iterations 16
Cbc0038I Pass  79: suminf.    1.57855 (9) obj. -30870.1 iterations 3
Cbc0038I Pass  80: suminf.    0.56814 (2) obj. -30870.1 iterations 10
Cbc0038I Pass  81: suminf.    0.56814 (2) obj. -30870.1 iterations 3
Cbc0038I Pass  82: suminf.    0.60299 (2) obj. -31008.7 iterations 5
Cbc0038I Pass  83: suminf.    0.52219 (2) obj. -30870.1 iterations 1
Cbc0038I Pass  84: suminf.    0.92749 (5) obj. -30870.1 iterations 10
Cbc0038I Pass  85: suminf.    0.92749 (5) obj. -30870.1 iterations 2
Cbc0038I Pass  86: suminf.    0.56891 (2) obj. -30870.1 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 114 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -30793.5 - took 0.05 seconds
Cbc0012I Integer solution of -30793.537 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 103 rows 114 columns, reduced to 0 rows 0 columns
Cbc0031I 5 added rows had average density of 19.2
Cbc0013I At root node, 15 cuts changed objective from -31033.557 to -30793.537 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 56 row cuts average 2.0 elements, 17 column cuts (17 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30793.537, took 44 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 48 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.14

