Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-12) rows, 76 (-2) columns and 430 (-23) elements
Clp1000I sum of infeasibilities 2.40859e-05 - average 1.68433e-07, 20 fixed columns
Coin0506I Presolve 100 (-43) rows, 54 (-22) columns and 301 (-129) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.34781245 - largest nonzero change 0 ( 0%) - largest zero change 2.9269876e-05
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Coin0511I After Postsolve, objective 58.930213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Coin0511I After Postsolve, objective 58.930213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.93021328 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 143 rows, 76 columns (75 integer (75 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.213%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 7.42983
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.0931 iterations 38
Cbc0038I Solution found of -11.0931
Cbc0038I Relaxing continuous gives -11.0931
Cbc0038I Rounding solution of -25.4594 is better than previous of -11.0931

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -25.4594 to -26.5342 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.7739
Cbc0038I Pass   2: suminf.    1.74251 (6) obj. -29.7739 iterations 10
Cbc0038I Pass   3: suminf.    1.34431 (6) obj. -29.7739 iterations 9
Cbc0038I Pass   4: suminf.    1.34431 (6) obj. -29.7739 iterations 0
Cbc0038I Pass   5: suminf.    0.82032 (2) obj. -29.7739 iterations 8
Cbc0038I Pass   6: suminf.    0.63185 (3) obj. -29.7739 iterations 2
Cbc0038I Pass   7: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass   8: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass   9: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  10: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  11: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  12: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  13: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  14: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  15: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  16: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  17: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  18: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  19: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  20: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  21: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  22: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  23: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  24: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  25: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  26: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  27: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  28: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  29: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  30: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  31: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Rounding solution of -30.2015 is better than previous of -26.5342

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -35.9473
Cbc0038I Pass  31: suminf.    2.39841 (7) obj. -35.9473 iterations 2
Cbc0038I Pass  32: suminf.    2.39916 (6) obj. -35.9473 iterations 7
Cbc0038I Pass  33: suminf.    1.88025 (5) obj. -35.9473 iterations 1
Cbc0038I Pass  34: suminf.    1.17911 (6) obj. -35.9473 iterations 7
Cbc0038I Pass  35: suminf.    1.17911 (6) obj. -35.9473 iterations 0
Cbc0038I Pass  36: suminf.    2.42265 (6) obj. -35.9473 iterations 5
Cbc0038I Pass  37: suminf.    2.42265 (6) obj. -35.9473 iterations 0
Cbc0038I Pass  38: suminf.    2.23588 (8) obj. -35.9473 iterations 12
Cbc0038I Pass  39: suminf.    1.96501 (6) obj. -35.9473 iterations 11
Cbc0038I Pass  40: suminf.    1.08875 (6) obj. -35.9473 iterations 9
Cbc0038I Pass  41: suminf.    1.06945 (4) obj. -35.9473 iterations 3
Cbc0038I Pass  42: suminf.    1.31345 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  43: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  44: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  45: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  46: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  47: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  48: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  49: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  50: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  51: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  52: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  53: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  54: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  55: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  56: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  57: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  58: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  59: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  60: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -30.2015 - took 0.05 seconds
Cbc0012I Integer solution of -30.45613 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 143 rows 76 columns, reduced to 59 rows 34 columns
Cbc0031I 25 added rows had average density of 44.36
Cbc0013I At root node, 25 cuts changed objective from -58.930213 to -45.180768 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10229 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1543 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.45613 best solution, best possible -45.180768 (0.69 seconds)
Cbc0004I Integer solution of -31.66725 found after 6788 iterations and 18 nodes (0.78 seconds)
Cbc0001I Search completed - best objective -31.66725, took 7421 iterations and 36 nodes (0.80 seconds)
Cbc0032I Strong branching done 498 times (9131 iterations), fathomed 1 nodes and fixed 28 variables
Cbc0035I Maximum depth 12, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.81

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-37) rows, 124 (-28) columns and 2280 (-1023) elements
Clp1000I sum of infeasibilities 2.68465e-07 - average 2.29457e-09, 70 fixed columns
Coin0506I Presolve 49 (-68) rows, 54 (-70) columns and 201 (-2079) elements
Clp0006I 0  Obj -9.4756226 Dual inf 4.2324548 (54)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 1.5063729 - largest nonzero change 1.94714e-05 ( 0.0010393299%) - largest zero change 2.8150548e-05
Clp0000I Optimal - objective value -9.0944782
Clp0000I Optimal - objective value -9.0944782
Coin0511I After Postsolve, objective -9.0944782, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.0944782 Dual inf 82.208874 (50)
Clp0014I Perturbing problem by 0.001% of 1.8520504 - largest nonzero change 2.6799146e-05 ( 0.0015380202%) - largest zero change 2.9758662e-05
Clp0000I Optimal - objective value 78.600763
Clp0000I Optimal - objective value 78.600763
Clp0000I Optimal - objective value 78.600763
Coin0511I After Postsolve, objective 78.600763, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.60076273 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 125 columns (125 integer (125 of which binary)) and 2287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.833%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 6.41949
Cbc0038I Pass   1: suminf.    1.72689 (35) obj. -48.6289 iterations 23
Cbc0038I Pass   2: suminf.    1.72689 (35) obj. -48.6289 iterations 2
Cbc0038I Pass   3: suminf.    0.60314 (16) obj. -15.7663 iterations 19
Cbc0038I Solution found of 1.5609
Cbc0038I Rounding solution of -3.33574 is better than previous of 1.5609

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 125 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -3.33574 to -4.3271 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.6869
Cbc0038I Pass   4: suminf.    1.72689 (35) obj. -48.6289 iterations 0
Cbc0038I Pass   5: suminf.    1.72689 (35) obj. -48.6289 iterations 2
Cbc0038I Pass   6: suminf.    0.93650 (23) obj. -25.292 iterations 12
Cbc0038I Pass   7: suminf.    0.87552 (11) obj. -10.6869 iterations 35
Cbc0038I Pass   8: suminf.    0.84379 (11) obj. -12.9848 iterations 3
Cbc0038I Pass   9: suminf.    0.63842 (5) obj. -10.6869 iterations 19
Cbc0038I Pass  10: suminf.    0.58116 (4) obj. -10.6869 iterations 2
Cbc0038I Pass  11: suminf.    0.75467 (4) obj. -10.6869 iterations 11
Cbc0038I Pass  12: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  13: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Pass  14: suminf.    0.88081 (3) obj. -10.6869 iterations 6
Cbc0038I Pass  15: suminf.    0.78514 (2) obj. -10.6869 iterations 3
Cbc0038I Pass  16: suminf.    0.75467 (4) obj. -10.6869 iterations 4
Cbc0038I Pass  17: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  18: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Pass  19: suminf.    0.88081 (3) obj. -10.6869 iterations 6
Cbc0038I Pass  20: suminf.    0.78514 (2) obj. -10.6869 iterations 3
Cbc0038I Pass  21: suminf.    0.75467 (4) obj. -10.6869 iterations 4
Cbc0038I Pass  22: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  23: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Pass  24: suminf.    0.88081 (3) obj. -10.6869 iterations 6
Cbc0038I Pass  25: suminf.    0.78514 (2) obj. -10.6869 iterations 3
Cbc0038I Pass  26: suminf.    0.75467 (4) obj. -10.6869 iterations 4
Cbc0038I Pass  27: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  28: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Pass  29: suminf.    0.88081 (3) obj. -10.6869 iterations 6
Cbc0038I Pass  30: suminf.    0.78514 (2) obj. -10.6869 iterations 3
Cbc0038I Pass  31: suminf.    0.75467 (4) obj. -10.6869 iterations 4
Cbc0038I Pass  32: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  33: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Rounding solution of -4.74496 is better than previous of -4.3271

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 125 columns, reduced to 51 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -4.74496 to -23.3127 (0.05 seconds)
Cbc0038I Round again with cutoff of -32.235
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.72689 (35) obj. -48.6289 iterations 0
Cbc0038I Pass  34: suminf.    1.72689 (35) obj. -48.6289 iterations 2
Cbc0038I Pass  35: suminf.    1.69592 (21) obj. -32.235 iterations 37
Cbc0038I Pass  36: suminf.    1.69592 (21) obj. -32.235 iterations 0
Cbc0038I Pass  37: suminf.    1.57348 (10) obj. -32.235 iterations 32
Cbc0038I Pass  38: suminf.    1.51501 (12) obj. -32.235 iterations 6
Cbc0038I Pass  39: suminf.    1.47427 (12) obj. -32.235 iterations 9
Cbc0038I Pass  40: suminf.    1.47427 (12) obj. -32.235 iterations 1
Cbc0038I Pass  41: suminf.    1.65900 (12) obj. -32.235 iterations 9
Cbc0038I Pass  42: suminf.    1.65900 (12) obj. -32.235 iterations 1
Cbc0038I Pass  43: suminf.    2.00834 (21) obj. -32.235 iterations 26
Cbc0038I Pass  44: suminf.    2.00834 (21) obj. -32.235 iterations 5
Cbc0038I Pass  45: suminf.    1.66827 (12) obj. -32.235 iterations 29
Cbc0038I Pass  46: suminf.    1.35066 (10) obj. -32.235 iterations 8
Cbc0038I Pass  47: suminf.    1.62303 (10) obj. -32.235 iterations 8
Cbc0038I Pass  48: suminf.    1.55242 (12) obj. -32.235 iterations 4
Cbc0038I Pass  49: suminf.    1.57674 (12) obj. -32.235 iterations 6
Cbc0038I Pass  50: suminf.    1.57674 (12) obj. -32.235 iterations 1
Cbc0038I Pass  51: suminf.    1.55242 (12) obj. -32.235 iterations 6
Cbc0038I Pass  52: suminf.    1.68516 (20) obj. -32.235 iterations 41
Cbc0038I Pass  53: suminf.    1.68516 (20) obj. -32.235 iterations 4
Cbc0038I Pass  54: suminf.    1.55242 (12) obj. -32.235 iterations 20
Cbc0038I Pass  55: suminf.    1.55242 (12) obj. -32.235 iterations 3
Cbc0038I Pass  56: suminf.    1.57674 (12) obj. -32.235 iterations 7
Cbc0038I Pass  57: suminf.    1.57674 (12) obj. -32.235 iterations 1
Cbc0038I Pass  58: suminf.    1.55242 (12) obj. -32.235 iterations 7
Cbc0038I Pass  59: suminf.    1.96209 (19) obj. -32.235 iterations 30
Cbc0038I Pass  60: suminf.    1.75063 (17) obj. -32.235 iterations 9
Cbc0038I Pass  61: suminf.    1.46138 (14) obj. -32.235 iterations 15
Cbc0038I Pass  62: suminf.    1.46138 (14) obj. -32.235 iterations 6
Cbc0038I Rounding solution of -25.3238 is better than previous of -23.3127

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 125 columns, reduced to 50 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -42.9417
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.72689 (35) obj. -48.6289 iterations 0
Cbc0038I Pass  63: suminf.    1.72689 (35) obj. -48.6289 iterations 2
Cbc0038I Pass  64: suminf.    2.31874 (24) obj. -42.9417 iterations 40
Cbc0038I Pass  65: suminf.    2.28216 (25) obj. -42.9417 iterations 3
Cbc0038I Pass  66: suminf.    3.73698 (21) obj. -42.9417 iterations 26
Cbc0038I Pass  67: suminf.    2.37874 (18) obj. -42.9417 iterations 6
Cbc0038I Pass  68: suminf.    2.29496 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  69: suminf.    2.42891 (20) obj. -42.9417 iterations 12
Cbc0038I Pass  70: suminf.    2.42891 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  71: suminf.    2.33972 (20) obj. -42.9417 iterations 7
Cbc0038I Pass  72: suminf.    2.04011 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  73: suminf.    3.83737 (21) obj. -42.9417 iterations 12
Cbc0038I Pass  74: suminf.    2.50917 (18) obj. -42.9417 iterations 6
Cbc0038I Pass  75: suminf.    2.42891 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  76: suminf.    2.33972 (20) obj. -42.9417 iterations 7
Cbc0038I Pass  77: suminf.    2.04011 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  78: suminf.    3.75812 (21) obj. -42.9417 iterations 13
Cbc0038I Pass  79: suminf.    2.42985 (18) obj. -42.9417 iterations 7
Cbc0038I Pass  80: suminf.    2.34665 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  81: suminf.    2.33972 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  82: suminf.    2.04011 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  83: suminf.    3.75812 (21) obj. -42.9417 iterations 14
Cbc0038I Pass  84: suminf.    2.42985 (18) obj. -42.9417 iterations 7
Cbc0038I Pass  85: suminf.    2.34665 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  86: suminf.    2.42891 (20) obj. -42.9417 iterations 7
Cbc0038I Pass  87: suminf.    2.42891 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  88: suminf.    2.33972 (20) obj. -42.9417 iterations 7
Cbc0038I Pass  89: suminf.    2.04011 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  90: suminf.    3.83737 (21) obj. -42.9417 iterations 13
Cbc0038I Pass  91: suminf.    2.50917 (18) obj. -42.9417 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -25.3238 - took 0.08 seconds
Cbc0012I Integer solution of -25.32377 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 118 rows 125 columns, reduced to 52 rows 56 columns
Cbc0012I Integer solution of -31.66725 found by RINS after 0 iterations and 0 nodes (0.12 seconds)
Cbc0031I 60 added rows had average density of 18.066667
Cbc0013I At root node, 60 cuts changed objective from -67.92379 to -34.187378 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25665 row cuts average 11.1 elements, 0 column cuts (25 active)  in 0.305 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1584 row cuts average 105.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 104 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 297 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 491 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 369 row cuts average 63.6 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 180 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.610 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.66725 best solution, best possible -34.187378 (2.82 seconds)
Cbc0001I Search completed - best objective -31.66725, took 6481 iterations and 6 nodes (3.46 seconds)
Cbc0032I Strong branching done 212 times (7351 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 32 variables fixed on reduced cost
Total time (CPU seconds):       2.68   (Wallclock seconds):       3.48

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-12) rows, 76 (-2) columns and 430 (-23) elements
Clp1000I sum of infeasibilities 2.40859e-05 - average 1.68433e-07, 20 fixed columns
Coin0506I Presolve 100 (-43) rows, 54 (-22) columns and 301 (-129) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.34781245 - largest nonzero change 0 ( 0%) - largest zero change 2.9269876e-05
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Coin0511I After Postsolve, objective 58.930213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Clp0000I Optimal - objective value 58.930213
Coin0511I After Postsolve, objective 58.930213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.93021328 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 143 rows, 76 columns (75 integer (75 of which binary)) and 430 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.213%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 7.42983
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.0931 iterations 38
Cbc0038I Solution found of -11.0931
Cbc0038I Relaxing continuous gives -11.0931
Cbc0038I Rounding solution of -25.4594 is better than previous of -11.0931

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -25.4594 to -26.5342 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.7739
Cbc0038I Pass   2: suminf.    1.74251 (6) obj. -29.7739 iterations 10
Cbc0038I Pass   3: suminf.    1.34431 (6) obj. -29.7739 iterations 9
Cbc0038I Pass   4: suminf.    1.34431 (6) obj. -29.7739 iterations 0
Cbc0038I Pass   5: suminf.    0.82032 (2) obj. -29.7739 iterations 8
Cbc0038I Pass   6: suminf.    0.63185 (3) obj. -29.7739 iterations 2
Cbc0038I Pass   7: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass   8: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass   9: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  10: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  11: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  12: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  13: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  14: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  15: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  16: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  17: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  18: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  19: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  20: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  21: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  22: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  23: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  24: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  25: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  26: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Pass  27: suminf.    1.20691 (3) obj. -29.7739 iterations 2
Cbc0038I Pass  28: suminf.    1.04994 (4) obj. -29.7739 iterations 4
Cbc0038I Pass  29: suminf.    1.68049 (6) obj. -29.7739 iterations 4
Cbc0038I Pass  30: suminf.    0.63185 (3) obj. -29.7739 iterations 8
Cbc0038I Pass  31: suminf.    0.63185 (3) obj. -29.7739 iterations 0
Cbc0038I Rounding solution of -30.2015 is better than previous of -26.5342

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -35.9473
Cbc0038I Pass  31: suminf.    2.39841 (7) obj. -35.9473 iterations 2
Cbc0038I Pass  32: suminf.    2.39916 (6) obj. -35.9473 iterations 7
Cbc0038I Pass  33: suminf.    1.88025 (5) obj. -35.9473 iterations 1
Cbc0038I Pass  34: suminf.    1.17911 (6) obj. -35.9473 iterations 7
Cbc0038I Pass  35: suminf.    1.17911 (6) obj. -35.9473 iterations 0
Cbc0038I Pass  36: suminf.    2.42265 (6) obj. -35.9473 iterations 5
Cbc0038I Pass  37: suminf.    2.42265 (6) obj. -35.9473 iterations 0
Cbc0038I Pass  38: suminf.    2.23588 (8) obj. -35.9473 iterations 12
Cbc0038I Pass  39: suminf.    1.96501 (6) obj. -35.9473 iterations 11
Cbc0038I Pass  40: suminf.    1.08875 (6) obj. -35.9473 iterations 9
Cbc0038I Pass  41: suminf.    1.06945 (4) obj. -35.9473 iterations 3
Cbc0038I Pass  42: suminf.    1.31345 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  43: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  44: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  45: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  46: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  47: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  48: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  49: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  50: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  51: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  52: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  53: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  54: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  55: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I Pass  56: suminf.    0.84270 (3) obj. -35.9473 iterations 0
Cbc0038I Pass  57: suminf.    1.31345 (6) obj. -35.9473 iterations 3
Cbc0038I Pass  58: suminf.    1.27180 (4) obj. -35.9473 iterations 1
Cbc0038I Pass  59: suminf.    2.10455 (6) obj. -35.9473 iterations 4
Cbc0038I Pass  60: suminf.    0.84270 (3) obj. -35.9473 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 143 rows 76 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -30.2015 - took 0.05 seconds
Cbc0012I Integer solution of -30.45613 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 143 rows 76 columns, reduced to 59 rows 34 columns
Cbc0031I 25 added rows had average density of 44.36
Cbc0013I At root node, 25 cuts changed objective from -58.930213 to -45.180768 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10229 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1543 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -30.45613 best solution, best possible -45.180768 (0.81 seconds)
Cbc0004I Integer solution of -31.66725 found after 6788 iterations and 18 nodes (0.92 seconds)
Cbc0001I Search completed - best objective -31.66725, took 7421 iterations and 36 nodes (0.94 seconds)
Cbc0032I Strong branching done 498 times (9131 iterations), fathomed 1 nodes and fixed 28 variables
Cbc0035I Maximum depth 12, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 117 (-38) rows, 124 (-29) columns and 2280 (-1024) elements
Clp1000I sum of infeasibilities 2.68465e-07 - average 2.29457e-09, 70 fixed columns
Coin0506I Presolve 49 (-68) rows, 54 (-70) columns and 201 (-2079) elements
Clp0006I 0  Obj -9.4756226 Dual inf 4.2324548 (54)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 1.5063729 - largest nonzero change 1.94714e-05 ( 0.0010393299%) - largest zero change 2.8150548e-05
Clp0000I Optimal - objective value -9.0944782
Clp0000I Optimal - objective value -9.0944782
Coin0511I After Postsolve, objective -9.0944782, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.0944782 Dual inf 82.208874 (50)
Clp0014I Perturbing problem by 0.001% of 1.8520504 - largest nonzero change 2.6799146e-05 ( 0.0015380202%) - largest zero change 2.9758662e-05
Clp0000I Optimal - objective value 78.600763
Clp0000I Optimal - objective value 78.600763
Clp0000I Optimal - objective value 78.600763
Coin0511I After Postsolve, objective 78.600763, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.60076273 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 125 columns (125 integer (125 of which binary)) and 2287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.833%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 6.41949
Cbc0038I Pass   1: suminf.    1.72689 (35) obj. -48.6289 iterations 23
Cbc0038I Pass   2: suminf.    1.72689 (35) obj. -48.6289 iterations 2
Cbc0038I Pass   3: suminf.    0.60314 (16) obj. -15.7663 iterations 19
Cbc0038I Solution found of 1.5609
Cbc0038I Rounding solution of -3.33574 is better than previous of 1.5609

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 125 columns, reduced to 17 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -3.33574 to -4.3271 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.6869
Cbc0038I Pass   4: suminf.    1.72689 (35) obj. -48.6289 iterations 0
Cbc0038I Pass   5: suminf.    1.72689 (35) obj. -48.6289 iterations 2
Cbc0038I Pass   6: suminf.    0.93650 (23) obj. -25.292 iterations 12
Cbc0038I Pass   7: suminf.    0.87552 (11) obj. -10.6869 iterations 35
Cbc0038I Pass   8: suminf.    0.84379 (11) obj. -12.9848 iterations 3
Cbc0038I Pass   9: suminf.    0.63842 (5) obj. -10.6869 iterations 19
Cbc0038I Pass  10: suminf.    0.58116 (4) obj. -10.6869 iterations 2
Cbc0038I Pass  11: suminf.    0.75467 (4) obj. -10.6869 iterations 11
Cbc0038I Pass  12: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  13: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Pass  14: suminf.    0.88081 (3) obj. -10.6869 iterations 6
Cbc0038I Pass  15: suminf.    0.78514 (2) obj. -10.6869 iterations 3
Cbc0038I Pass  16: suminf.    0.75467 (4) obj. -10.6869 iterations 4
Cbc0038I Pass  17: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  18: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Pass  19: suminf.    0.88081 (3) obj. -10.6869 iterations 6
Cbc0038I Pass  20: suminf.    0.78514 (2) obj. -10.6869 iterations 3
Cbc0038I Pass  21: suminf.    0.75467 (4) obj. -10.6869 iterations 4
Cbc0038I Pass  22: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  23: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Pass  24: suminf.    0.88081 (3) obj. -10.6869 iterations 6
Cbc0038I Pass  25: suminf.    0.78514 (2) obj. -10.6869 iterations 3
Cbc0038I Pass  26: suminf.    0.75467 (4) obj. -10.6869 iterations 4
Cbc0038I Pass  27: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  28: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Pass  29: suminf.    0.88081 (3) obj. -10.6869 iterations 6
Cbc0038I Pass  30: suminf.    0.78514 (2) obj. -10.6869 iterations 3
Cbc0038I Pass  31: suminf.    0.75467 (4) obj. -10.6869 iterations 4
Cbc0038I Pass  32: suminf.    1.20420 (5) obj. -10.6869 iterations 4
Cbc0038I Pass  33: suminf.    1.20420 (5) obj. -10.6869 iterations 0
Cbc0038I Rounding solution of -4.74496 is better than previous of -4.3271

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 125 columns, reduced to 51 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -4.74496 to -23.3127 (0.06 seconds)
Cbc0038I Round again with cutoff of -32.235
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.72689 (35) obj. -48.6289 iterations 0
Cbc0038I Pass  34: suminf.    1.72689 (35) obj. -48.6289 iterations 2
Cbc0038I Pass  35: suminf.    1.69592 (21) obj. -32.235 iterations 37
Cbc0038I Pass  36: suminf.    1.69592 (21) obj. -32.235 iterations 0
Cbc0038I Pass  37: suminf.    1.57348 (10) obj. -32.235 iterations 32
Cbc0038I Pass  38: suminf.    1.51501 (12) obj. -32.235 iterations 6
Cbc0038I Pass  39: suminf.    1.47427 (12) obj. -32.235 iterations 9
Cbc0038I Pass  40: suminf.    1.47427 (12) obj. -32.235 iterations 1
Cbc0038I Pass  41: suminf.    1.65900 (12) obj. -32.235 iterations 9
Cbc0038I Pass  42: suminf.    1.65900 (12) obj. -32.235 iterations 1
Cbc0038I Pass  43: suminf.    2.00834 (21) obj. -32.235 iterations 26
Cbc0038I Pass  44: suminf.    2.00834 (21) obj. -32.235 iterations 5
Cbc0038I Pass  45: suminf.    1.66827 (12) obj. -32.235 iterations 29
Cbc0038I Pass  46: suminf.    1.35066 (10) obj. -32.235 iterations 8
Cbc0038I Pass  47: suminf.    1.62303 (10) obj. -32.235 iterations 8
Cbc0038I Pass  48: suminf.    1.55242 (12) obj. -32.235 iterations 4
Cbc0038I Pass  49: suminf.    1.57674 (12) obj. -32.235 iterations 6
Cbc0038I Pass  50: suminf.    1.57674 (12) obj. -32.235 iterations 1
Cbc0038I Pass  51: suminf.    1.55242 (12) obj. -32.235 iterations 6
Cbc0038I Pass  52: suminf.    1.68516 (20) obj. -32.235 iterations 41
Cbc0038I Pass  53: suminf.    1.68516 (20) obj. -32.235 iterations 4
Cbc0038I Pass  54: suminf.    1.55242 (12) obj. -32.235 iterations 20
Cbc0038I Pass  55: suminf.    1.55242 (12) obj. -32.235 iterations 3
Cbc0038I Pass  56: suminf.    1.57674 (12) obj. -32.235 iterations 7
Cbc0038I Pass  57: suminf.    1.57674 (12) obj. -32.235 iterations 1
Cbc0038I Pass  58: suminf.    1.55242 (12) obj. -32.235 iterations 7
Cbc0038I Pass  59: suminf.    1.96209 (19) obj. -32.235 iterations 30
Cbc0038I Pass  60: suminf.    1.75063 (17) obj. -32.235 iterations 9
Cbc0038I Pass  61: suminf.    1.46138 (14) obj. -32.235 iterations 15
Cbc0038I Pass  62: suminf.    1.46138 (14) obj. -32.235 iterations 6
Cbc0038I Rounding solution of -25.3238 is better than previous of -23.3127

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 125 columns, reduced to 50 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -42.9417
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.72689 (35) obj. -48.6289 iterations 0
Cbc0038I Pass  63: suminf.    1.72689 (35) obj. -48.6289 iterations 2
Cbc0038I Pass  64: suminf.    2.31874 (24) obj. -42.9417 iterations 40
Cbc0038I Pass  65: suminf.    2.28216 (25) obj. -42.9417 iterations 3
Cbc0038I Pass  66: suminf.    3.73698 (21) obj. -42.9417 iterations 26
Cbc0038I Pass  67: suminf.    2.37874 (18) obj. -42.9417 iterations 6
Cbc0038I Pass  68: suminf.    2.29496 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  69: suminf.    2.42891 (20) obj. -42.9417 iterations 12
Cbc0038I Pass  70: suminf.    2.42891 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  71: suminf.    2.33972 (20) obj. -42.9417 iterations 7
Cbc0038I Pass  72: suminf.    2.04011 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  73: suminf.    3.83737 (21) obj. -42.9417 iterations 12
Cbc0038I Pass  74: suminf.    2.50917 (18) obj. -42.9417 iterations 6
Cbc0038I Pass  75: suminf.    2.42891 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  76: suminf.    2.33972 (20) obj. -42.9417 iterations 7
Cbc0038I Pass  77: suminf.    2.04011 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  78: suminf.    3.75812 (21) obj. -42.9417 iterations 13
Cbc0038I Pass  79: suminf.    2.42985 (18) obj. -42.9417 iterations 7
Cbc0038I Pass  80: suminf.    2.34665 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  81: suminf.    2.33972 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  82: suminf.    2.04011 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  83: suminf.    3.75812 (21) obj. -42.9417 iterations 14
Cbc0038I Pass  84: suminf.    2.42985 (18) obj. -42.9417 iterations 7
Cbc0038I Pass  85: suminf.    2.34665 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  86: suminf.    2.42891 (20) obj. -42.9417 iterations 7
Cbc0038I Pass  87: suminf.    2.42891 (20) obj. -42.9417 iterations 3
Cbc0038I Pass  88: suminf.    2.33972 (20) obj. -42.9417 iterations 7
Cbc0038I Pass  89: suminf.    2.04011 (20) obj. -42.9417 iterations 5
Cbc0038I Pass  90: suminf.    3.83737 (21) obj. -42.9417 iterations 13
Cbc0038I Pass  91: suminf.    2.50917 (18) obj. -42.9417 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -25.3238 - took 0.09 seconds
Cbc0012I Integer solution of -25.32377 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 118 rows 125 columns, reduced to 52 rows 56 columns
Cbc0012I Integer solution of -31.66725 found by RINS after 0 iterations and 0 nodes (0.13 seconds)
Cbc0031I 60 added rows had average density of 18.066667
Cbc0013I At root node, 60 cuts changed objective from -67.92379 to -34.187378 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25665 row cuts average 11.1 elements, 0 column cuts (25 active)  in 0.341 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1584 row cuts average 105.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 104 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 297 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 491 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 369 row cuts average 63.6 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 180 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.664 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.66725 best solution, best possible -34.187378 (3.18 seconds)
Cbc0010I After 4 nodes, 2 on tree, -31.66725 best solution, best possible -32.804821 (3.89 seconds)
Cbc0001I Search completed - best objective -31.66725, took 6481 iterations and 6 nodes (3.89 seconds)
Cbc0032I Strong branching done 212 times (7351 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 32 variables fixed on reduced cost
Total time (CPU seconds):       2.95   (Wallclock seconds):       3.92

