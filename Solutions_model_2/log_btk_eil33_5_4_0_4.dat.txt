Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 37 (-32) rows, 20 (-15) columns and 108 (-87) elements
Clp0000I Optimal - objective value 133.63976
Coin0511I After Postsolve, objective 133.63976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.639757 - 20 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 37 rows, 20 columns (19 integer (19 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.86771
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -33 iterations 12
Cbc0038I Solution found of -33
Cbc0038I Relaxing continuous gives -33
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.2889
Cbc0038I Pass   2: suminf.    0.13276 (1) obj. -43.2889 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -43.2889 iterations 1
Cbc0038I Solution found of -43.2889
Cbc0038I Relaxing continuous gives -47.5
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -64.9279
Cbc0038I Pass   4: suminf.    0.42849 (2) obj. -64.9279 iterations 1
Cbc0038I Pass   5: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass   6: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass   7: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass   8: suminf.    1.18957 (3) obj. -64.9279 iterations 3
Cbc0038I Pass   9: suminf.    0.36774 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  10: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  11: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  12: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  13: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass  14: suminf.    0.36774 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  15: suminf.    0.36774 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  16: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  17: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  18: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  19: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass  20: suminf.    0.31470 (1) obj. -64.9279 iterations 1
Cbc0038I Pass  21: suminf.    0.31470 (1) obj. -64.9279 iterations 1
Cbc0038I Pass  22: suminf.    0.42849 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  23: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  24: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  25: suminf.    3.03353 (7) obj. -64.9279 iterations 7
Cbc0038I Pass  26: suminf.    0.54889 (3) obj. -64.9279 iterations 8
Cbc0038I Pass  27: suminf.    0.31036 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  28: suminf.    0.51309 (3) obj. -64.9279 iterations 5
Cbc0038I Pass  29: suminf.    0.50777 (3) obj. -64.9279 iterations 1
Cbc0038I Pass  30: suminf.    0.45558 (2) obj. -64.9279 iterations 4
Cbc0038I Pass  31: suminf.    0.39288 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  32: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  33: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -47.5 - took 0.03 seconds
Cbc0012I Integer solution of -47.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -59.25 found by DiveCoefficient after 1504 iterations and 0 nodes (0.12 seconds)
Cbc0031I 8 added rows had average density of 17.625
Cbc0013I At root node, 8 cuts changed objective from -133.63976 to -74.572343 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 918 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 440 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 102 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -59.25, took 1578 iterations and 2 nodes (0.13 seconds)
Cbc0032I Strong branching done 26 times (316 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-22) rows, 47 (-19) columns and 392 (-331) elements
Clp1000I sum of infeasibilities 7.54764e-08 - average 1.64079e-09, 35 fixed columns
Coin0506I Presolve 12 (-34) rows, 12 (-35) columns and 44 (-348) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 64.576389
Clp0000I Optimal - objective value 64.576389
Coin0511I After Postsolve, objective 64.576389, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.0216081 - largest nonzero change 0 ( 0%) - largest zero change 2.8342666e-05
Clp0000I Optimal - objective value 254.04953
Clp0000I Optimal - objective value 254.04953
Clp0000I Optimal - objective value 254.04953
Coin0511I After Postsolve, objective 254.04953, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 254.0495327 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 46 columns (46 integer (46 of which binary)) and 368 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 6.88804
Cbc0038I Pass   1: suminf.    0.05556 (1) obj. -69.8333 iterations 15
Cbc0038I Pass   2: suminf.    0.05556 (1) obj. -69.8333 iterations 1
Cbc0038I Solution found of -33
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -42.3956
Cbc0038I Pass   3: suminf.    0.05556 (1) obj. -69.8333 iterations 0
Cbc0038I Pass   4: suminf.    0.05556 (1) obj. -69.8333 iterations 1
Cbc0038I Pass   5: suminf.    0.14914 (1) obj. -42.3956 iterations 2
Cbc0038I Pass   6: suminf.    0.47143 (1) obj. -66.3 iterations 1
Cbc0038I Pass   7: suminf.    1.23260 (11) obj. -50.0081 iterations 8
Cbc0038I Pass   8: suminf.    1.11177 (11) obj. -42.3956 iterations 2
Cbc0038I Pass   9: suminf.    0.81454 (2) obj. -42.3956 iterations 12
Cbc0038I Pass  10: suminf.    0.81454 (2) obj. -42.3956 iterations 1
Cbc0038I Pass  11: suminf.    0.55397 (2) obj. -62.5667 iterations 2
Cbc0038I Pass  12: suminf.    0.23379 (2) obj. -42.3956 iterations 1
Cbc0038I Pass  13: suminf.    2.21930 (11) obj. -42.3956 iterations 15
Cbc0038I Pass  14: suminf.    1.32331 (8) obj. -52.9205 iterations 3
Cbc0038I Pass  15: suminf.    0.84067 (3) obj. -42.3956 iterations 7
Cbc0038I Pass  16: suminf.    0.84067 (3) obj. -42.3956 iterations 0
Cbc0038I Pass  17: suminf.    0.41362 (2) obj. -42.3956 iterations 3
Cbc0038I Pass  18: suminf.    0.41362 (2) obj. -42.3956 iterations 0
Cbc0038I Pass  19: suminf.    0.24365 (2) obj. -57.4333 iterations 1
Cbc0038I Pass  20: suminf.    0.22222 (1) obj. -56.0833 iterations 1
Cbc0038I Pass  21: suminf.    0.74104 (6) obj. -68.2597 iterations 5
Cbc0038I Pass  22: suminf.    0.58051 (3) obj. -66.7571 iterations 1
Cbc0038I Pass  23: suminf.    3.68968 (15) obj. -42.3956 iterations 13
Cbc0038I Pass  24: suminf.    1.55669 (7) obj. -42.3956 iterations 4
Cbc0038I Pass  25: suminf.    0.90117 (2) obj. -42.3956 iterations 7
Cbc0038I Pass  26: suminf.    0.34842 (2) obj. -42.3956 iterations 2
Cbc0038I Pass  27: suminf.    0.25238 (2) obj. -64.65 iterations 1
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -59.25 iterations 1
Cbc0038I Pass  29: suminf.    1.09468 (10) obj. -42.3956 iterations 16
Cbc0038I Pass  30: suminf.    0.57152 (3) obj. -45.1216 iterations 8
Cbc0038I Pass  31: suminf.    0.87005 (12) obj. -42.3956 iterations 10
Cbc0038I Pass  32: suminf.    0.87005 (12) obj. -42.3956 iterations 0
Cbc0038I Rounding solution of -39.75 is better than previous of -33

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 34 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -39.75 to -47.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -63.1413
Cbc0038I Pass  32: suminf.    0.05556 (1) obj. -69.8333 iterations 0
Cbc0038I Pass  33: suminf.    0.05556 (1) obj. -69.8333 iterations 1
Cbc0038I Pass  34: suminf.    0.47843 (1) obj. -63.1413 iterations 2
Cbc0038I Pass  35: suminf.    0.47143 (1) obj. -66.3 iterations 1
Cbc0038I Pass  36: suminf.    1.35913 (16) obj. -63.1413 iterations 18
Cbc0038I Pass  37: suminf.    1.35913 (16) obj. -63.1413 iterations 1
Cbc0038I Pass  38: suminf.    1.02212 (3) obj. -63.1413 iterations 20
Cbc0038I Pass  39: suminf.    0.13849 (2) obj. -63.1413 iterations 9
Cbc0038I Pass  40: suminf.    0.51524 (2) obj. -63.1413 iterations 2
Cbc0038I Pass  41: suminf.    0.91728 (7) obj. -63.1413 iterations 9
Cbc0038I Pass  42: suminf.    0.91728 (7) obj. -63.1413 iterations 2
Cbc0038I Pass  43: suminf.    1.12097 (13) obj. -63.1413 iterations 9
Cbc0038I Pass  44: suminf.    1.12097 (13) obj. -63.1413 iterations 1
Cbc0038I Pass  45: suminf.    0.60666 (3) obj. -63.1413 iterations 12
Cbc0038I Pass  46: suminf.    0.13849 (2) obj. -63.1413 iterations 2
Cbc0038I Pass  47: suminf.    0.51524 (2) obj. -63.1413 iterations 2
Cbc0038I Pass  48: suminf.    0.77031 (4) obj. -63.1413 iterations 5
Cbc0038I Pass  49: suminf.    0.46759 (4) obj. -63.1413 iterations 3
Cbc0038I Pass  50: suminf.    0.45920 (2) obj. -63.1413 iterations 4
Cbc0038I Pass  51: suminf.    0.22843 (2) obj. -63.1413 iterations 1
Cbc0038I Pass  52: suminf.    0.62686 (4) obj. -63.1413 iterations 6
Cbc0038I Pass  53: suminf.    0.62686 (4) obj. -63.1413 iterations 1
Cbc0038I Pass  54: suminf.    0.40792 (2) obj. -63.1413 iterations 4
Cbc0038I Pass  55: suminf.    0.26018 (2) obj. -63.1413 iterations 1
Cbc0038I Pass  56: suminf.    0.83856 (5) obj. -63.1413 iterations 8
Cbc0038I Pass  57: suminf.    0.83856 (5) obj. -63.1413 iterations 2
Cbc0038I Pass  58: suminf.    0.31671 (2) obj. -63.1413 iterations 5
Cbc0038I Pass  59: suminf.    0.30251 (2) obj. -63.1413 iterations 1
Cbc0038I Pass  60: suminf.    0.58305 (6) obj. -63.1413 iterations 6
Cbc0038I Pass  61: suminf.    0.44292 (3) obj. -63.1413 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 30 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -47.5 - took 0.02 seconds
Cbc0012I Integer solution of -47.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 45 rows 46 columns, reduced to 32 rows 31 columns
Cbc0012I Integer solution of -59.25 found by DiveCoefficient after 132 iterations and 0 nodes (0.10 seconds)
Cbc0031I 31 added rows had average density of 10.16129
Cbc0013I At root node, 31 cuts changed objective from -124.7067 to -59.25 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 381 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 67 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 67 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0001I Search completed - best objective -59.25, took 132 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 37 (-32) rows, 20 (-15) columns and 108 (-87) elements
Clp0000I Optimal - objective value 133.63976
Coin0511I After Postsolve, objective 133.63976, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 133.639757 - 20 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 37 rows, 20 columns (19 integer (19 of which binary)) and 108 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.268%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 5.86771
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -33 iterations 12
Cbc0038I Solution found of -33
Cbc0038I Relaxing continuous gives -33
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.2889
Cbc0038I Pass   2: suminf.    0.13276 (1) obj. -43.2889 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -43.2889 iterations 1
Cbc0038I Solution found of -43.2889
Cbc0038I Relaxing continuous gives -47.5
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -64.9279
Cbc0038I Pass   4: suminf.    0.42849 (2) obj. -64.9279 iterations 1
Cbc0038I Pass   5: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass   6: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass   7: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass   8: suminf.    1.18957 (3) obj. -64.9279 iterations 3
Cbc0038I Pass   9: suminf.    0.36774 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  10: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  11: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  12: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  13: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass  14: suminf.    0.36774 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  15: suminf.    0.36774 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  16: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  17: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  18: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  19: suminf.    0.31470 (1) obj. -64.9279 iterations 2
Cbc0038I Pass  20: suminf.    0.31470 (1) obj. -64.9279 iterations 1
Cbc0038I Pass  21: suminf.    0.31470 (1) obj. -64.9279 iterations 1
Cbc0038I Pass  22: suminf.    0.42849 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  23: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  24: suminf.    0.46944 (2) obj. -64.9279 iterations 0
Cbc0038I Pass  25: suminf.    3.03353 (7) obj. -64.9279 iterations 7
Cbc0038I Pass  26: suminf.    0.54889 (3) obj. -64.9279 iterations 8
Cbc0038I Pass  27: suminf.    0.31036 (2) obj. -64.9279 iterations 2
Cbc0038I Pass  28: suminf.    0.51309 (3) obj. -64.9279 iterations 5
Cbc0038I Pass  29: suminf.    0.50777 (3) obj. -64.9279 iterations 1
Cbc0038I Pass  30: suminf.    0.45558 (2) obj. -64.9279 iterations 4
Cbc0038I Pass  31: suminf.    0.39288 (2) obj. -64.9279 iterations 1
Cbc0038I Pass  32: suminf.    0.42849 (2) obj. -64.9279 iterations 3
Cbc0038I Pass  33: suminf.    0.46944 (2) obj. -64.9279 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -47.5 - took 0.03 seconds
Cbc0012I Integer solution of -47.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -59.25 found by DiveCoefficient after 1504 iterations and 0 nodes (0.13 seconds)
Cbc0031I 8 added rows had average density of 17.625
Cbc0013I At root node, 8 cuts changed objective from -133.63976 to -74.572343 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 918 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 440 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 102 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 64 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -59.25, took 1578 iterations and 2 nodes (0.13 seconds)
Cbc0032I Strong branching done 26 times (316 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-24) rows, 46 (-21) columns and 366 (-358) elements
Clp1000I sum of infeasibilities 2.65902e-07 - average 5.90894e-09, 5 fixed columns
Coin0506I Presolve 39 (-6) rows, 40 (-6) columns and 293 (-73) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 5.0359605 - largest nonzero change 1.2983701e-05 ( 0.0005441422%) - largest zero change 1.7845123e-05
Clp0000I Optimal - objective value 187.31912
Clp0000I Optimal - objective value 187.31912
Coin0511I After Postsolve, objective 187.31912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 187.31912
Clp0000I Optimal - objective value 187.31912
Clp0000I Optimal - objective value 187.31912
Coin0511I After Postsolve, objective 187.31912, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 187.319123 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 45 rows, 46 columns (46 integer (46 of which binary)) and 368 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.737%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 6.88804
Cbc0038I Pass   1: suminf.    0.05556 (1) obj. -69.8333 iterations 4
Cbc0038I Pass   2: suminf.    0.05556 (1) obj. -69.8333 iterations 0
Cbc0038I Solution found of -33
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -42.3956
Cbc0038I Pass   3: suminf.    0.05556 (1) obj. -69.8333 iterations 0
Cbc0038I Pass   4: suminf.    0.05556 (1) obj. -69.8333 iterations 0
Cbc0038I Pass   5: suminf.    0.14914 (1) obj. -42.3956 iterations 2
Cbc0038I Pass   6: suminf.    0.47143 (1) obj. -66.3 iterations 1
Cbc0038I Pass   7: suminf.    1.23260 (11) obj. -50.0081 iterations 7
Cbc0038I Pass   8: suminf.    1.11177 (11) obj. -42.3956 iterations 1
Cbc0038I Pass   9: suminf.    0.81454 (2) obj. -42.3956 iterations 12
Cbc0038I Pass  10: suminf.    0.81454 (2) obj. -42.3956 iterations 0
Cbc0038I Pass  11: suminf.    0.55397 (2) obj. -62.5667 iterations 1
Cbc0038I Pass  12: suminf.    0.23379 (2) obj. -42.3956 iterations 1
Cbc0038I Pass  13: suminf.    2.21930 (11) obj. -42.3956 iterations 12
Cbc0038I Pass  14: suminf.    1.32331 (8) obj. -52.9205 iterations 3
Cbc0038I Pass  15: suminf.    0.84067 (3) obj. -42.3956 iterations 8
Cbc0038I Pass  16: suminf.    0.84067 (3) obj. -42.3956 iterations 0
Cbc0038I Pass  17: suminf.    0.41362 (2) obj. -42.3956 iterations 3
Cbc0038I Pass  18: suminf.    0.41362 (2) obj. -42.3956 iterations 0
Cbc0038I Pass  19: suminf.    0.24365 (2) obj. -57.4333 iterations 1
Cbc0038I Pass  20: suminf.    0.22222 (1) obj. -56.0833 iterations 1
Cbc0038I Pass  21: suminf.    0.74104 (6) obj. -68.2597 iterations 4
Cbc0038I Pass  22: suminf.    0.58051 (3) obj. -66.7571 iterations 1
Cbc0038I Pass  23: suminf.    3.68968 (15) obj. -42.3956 iterations 11
Cbc0038I Pass  24: suminf.    1.55669 (7) obj. -42.3956 iterations 4
Cbc0038I Pass  25: suminf.    0.90117 (2) obj. -42.3956 iterations 7
Cbc0038I Pass  26: suminf.    0.34842 (2) obj. -42.3956 iterations 2
Cbc0038I Pass  27: suminf.    0.25238 (2) obj. -64.65 iterations 1
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -59.25 iterations 1
Cbc0038I Pass  29: suminf.    1.09468 (10) obj. -42.3956 iterations 17
Cbc0038I Pass  30: suminf.    0.57152 (3) obj. -45.1216 iterations 2
Cbc0038I Pass  31: suminf.    0.87005 (12) obj. -42.3956 iterations 4
Cbc0038I Pass  32: suminf.    0.87005 (12) obj. -42.3956 iterations 0
Cbc0038I Rounding solution of -39.75 is better than previous of -33

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 34 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -39.75 to -47.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -63.1413
Cbc0038I Pass  32: suminf.    0.05556 (1) obj. -69.8333 iterations 0
Cbc0038I Pass  33: suminf.    0.05556 (1) obj. -69.8333 iterations 0
Cbc0038I Pass  34: suminf.    0.47843 (1) obj. -63.1413 iterations 2
Cbc0038I Pass  35: suminf.    0.47143 (1) obj. -66.3 iterations 1
Cbc0038I Pass  36: suminf.    1.35913 (16) obj. -63.1413 iterations 12
Cbc0038I Pass  37: suminf.    1.35913 (16) obj. -63.1413 iterations 1
Cbc0038I Pass  38: suminf.    1.02212 (3) obj. -63.1413 iterations 21
Cbc0038I Pass  39: suminf.    0.13849 (2) obj. -63.1413 iterations 3
Cbc0038I Pass  40: suminf.    0.51524 (2) obj. -63.1413 iterations 2
Cbc0038I Pass  41: suminf.    0.91728 (7) obj. -63.1413 iterations 6
Cbc0038I Pass  42: suminf.    0.91728 (7) obj. -63.1413 iterations 1
Cbc0038I Pass  43: suminf.    1.12097 (13) obj. -63.1413 iterations 8
Cbc0038I Pass  44: suminf.    1.12097 (13) obj. -63.1413 iterations 0
Cbc0038I Pass  45: suminf.    0.60666 (3) obj. -63.1413 iterations 13
Cbc0038I Pass  46: suminf.    0.13849 (2) obj. -63.1413 iterations 2
Cbc0038I Pass  47: suminf.    0.51524 (2) obj. -63.1413 iterations 2
Cbc0038I Pass  48: suminf.    0.77031 (4) obj. -63.1413 iterations 5
Cbc0038I Pass  49: suminf.    0.46759 (4) obj. -63.1413 iterations 3
Cbc0038I Pass  50: suminf.    0.45920 (2) obj. -63.1413 iterations 4
Cbc0038I Pass  51: suminf.    0.22843 (2) obj. -63.1413 iterations 1
Cbc0038I Pass  52: suminf.    0.62686 (4) obj. -63.1413 iterations 5
Cbc0038I Pass  53: suminf.    0.62686 (4) obj. -63.1413 iterations 1
Cbc0038I Pass  54: suminf.    0.40792 (2) obj. -63.1413 iterations 4
Cbc0038I Pass  55: suminf.    0.26018 (2) obj. -63.1413 iterations 1
Cbc0038I Pass  56: suminf.    0.83856 (5) obj. -63.1413 iterations 7
Cbc0038I Pass  57: suminf.    0.83856 (5) obj. -63.1413 iterations 1
Cbc0038I Pass  58: suminf.    0.31671 (2) obj. -63.1413 iterations 5
Cbc0038I Pass  59: suminf.    0.30251 (2) obj. -63.1413 iterations 1
Cbc0038I Pass  60: suminf.    0.58305 (6) obj. -63.1413 iterations 5
Cbc0038I Pass  61: suminf.    0.44292 (3) obj. -63.1413 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 45 rows 46 columns, reduced to 30 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -47.5 - took 0.02 seconds
Cbc0012I Integer solution of -47.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 45 rows 46 columns, reduced to 32 rows 31 columns
Cbc0012I Integer solution of -59.25 found by DiveCoefficient after 125 iterations and 0 nodes (0.11 seconds)
Cbc0031I 32 added rows had average density of 9.71875
Cbc0013I At root node, 32 cuts changed objective from -124.7067 to -59.25 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 354 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 90 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 70 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 166 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -59.25, took 125 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

