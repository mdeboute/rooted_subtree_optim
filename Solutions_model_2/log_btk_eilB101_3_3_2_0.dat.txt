Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 100 (-3) columns and 554 (-49) elements
Clp1000I sum of infeasibilities 6.07739e-05 - average 3.35767e-07, 17 fixed columns
Coin0506I Presolve 145 (-36) rows, 81 (-19) columns and 444 (-110) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 1.7509953 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 38.634184
Clp0000I Optimal - objective value 38.634184
Coin0511I After Postsolve, objective 38.634184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.634184
Clp0000I Optimal - objective value 38.634184
Clp0000I Optimal - objective value 38.634184
Coin0511I After Postsolve, objective 38.634184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.63418382 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 100 columns (99 integer (99 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.915%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.28397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.29888 iterations 83
Cbc0038I Solution found of 5.29888
Cbc0038I Relaxing continuous gives 5.29888
Cbc0038I Rounding solution of -8.62594 is better than previous of 5.29888

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 65 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.62594 to -11.75 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.428
Cbc0038I Pass   2: suminf.    2.61657 (10) obj. -14.428 iterations 20
Cbc0038I Pass   3: suminf.    2.31444 (6) obj. -14.428 iterations 14
Cbc0038I Pass   4: suminf.    2.29863 (6) obj. -14.428 iterations 4
Cbc0038I Pass   5: suminf.    1.81062 (5) obj. -14.428 iterations 9
Cbc0038I Pass   6: suminf.    1.53488 (4) obj. -14.428 iterations 3
Cbc0038I Pass   7: suminf.    1.40265 (4) obj. -14.428 iterations 5
Cbc0038I Pass   8: suminf.    1.36436 (5) obj. -14.428 iterations 6
Cbc0038I Pass   9: suminf.    1.36436 (5) obj. -14.428 iterations 2
Cbc0038I Pass  10: suminf.    1.67715 (4) obj. -14.428 iterations 6
Cbc0038I Pass  11: suminf.    1.58357 (5) obj. -14.428 iterations 1
Cbc0038I Pass  12: suminf.    1.40968 (5) obj. -14.428 iterations 3
Cbc0038I Pass  13: suminf.    1.40025 (4) obj. -14.428 iterations 1
Cbc0038I Pass  14: suminf.    1.48832 (4) obj. -14.428 iterations 3
Cbc0038I Pass  15: suminf.    1.40265 (4) obj. -14.428 iterations 1
Cbc0038I Pass  16: suminf.    1.36436 (5) obj. -14.428 iterations 4
Cbc0038I Pass  17: suminf.    1.36436 (5) obj. -14.428 iterations 2
Cbc0038I Pass  18: suminf.    1.67715 (4) obj. -14.428 iterations 8
Cbc0038I Pass  19: suminf.    1.58357 (5) obj. -14.428 iterations 1
Cbc0038I Pass  20: suminf.    1.40968 (5) obj. -14.428 iterations 3
Cbc0038I Pass  21: suminf.    1.40025 (4) obj. -14.428 iterations 1
Cbc0038I Pass  22: suminf.    1.48832 (4) obj. -14.428 iterations 5
Cbc0038I Pass  23: suminf.    1.40265 (4) obj. -14.428 iterations 1
Cbc0038I Pass  24: suminf.    1.36436 (5) obj. -14.428 iterations 6
Cbc0038I Pass  25: suminf.    1.36436 (5) obj. -14.428 iterations 2
Cbc0038I Pass  26: suminf.    1.67715 (4) obj. -14.428 iterations 8
Cbc0038I Pass  27: suminf.    1.58357 (5) obj. -14.428 iterations 1
Cbc0038I Pass  28: suminf.    1.40968 (5) obj. -14.428 iterations 3
Cbc0038I Pass  29: suminf.    1.40025 (4) obj. -14.428 iterations 1
Cbc0038I Pass  30: suminf.    1.48832 (4) obj. -14.428 iterations 5
Cbc0038I Pass  31: suminf.    1.40265 (4) obj. -14.428 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 65 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -11.75 - took 0.05 seconds
Cbc0012I Integer solution of -11.75003 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 65 rows 37 columns
Cbc0031I 32 added rows had average density of 58.1875
Cbc0013I At root node, 32 cuts changed objective from -38.528411 to -31.673414 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15809 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2010 row cuts average 99.8 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.75003 best solution, best possible -31.673414 (1.30 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 99 rows 57 columns
Cbc0012I Integer solution of -12.5443 found by RINS after 11909 iterations and 41 nodes (1.65 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 22 rows 16 columns
Cbc0016I Integer solution of -12.80474 found by strong branching after 14020 iterations and 116 nodes (1.87 seconds)
Cbc0001I Search completed - best objective -12.80474, took 15203 iterations and 152 nodes (1.93 seconds)
Cbc0032I Strong branching done 1438 times (26912 iterations), fathomed 7 nodes and fixed 52 variables
Cbc0035I Maximum depth 41, 531 variables fixed on reduced cost
Total time (CPU seconds):       1.86   (Wallclock seconds):       1.95

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-73) rows, 148 (-54) columns and 2868 (-2785) elements
Clp1000I sum of infeasibilities 5.05879e-07 - average 3.86167e-09, 102 fixed columns
Coin0506I Presolve 34 (-97) rows, 46 (-102) columns and 154 (-2714) elements
Clp0006I 0  Obj 8.3397553 Dual inf 3.3903034 (45)
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.3466427 - largest nonzero change 2.1733298e-05 ( 0.0012247315%) - largest zero change 2.8636805e-05
Clp0000I Optimal - objective value 8.3473199
Clp0000I Optimal - objective value 8.3473199
Coin0511I After Postsolve, objective 8.3473199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 8.3473199 Dual inf 86.175591 (49)
Clp0014I Perturbing problem by 0.001% of 1.6712338 - largest nonzero change 1.6055315e-05 ( 0.00091204228%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 81.139432
Clp0000I Optimal - objective value 81.139432
Clp0000I Optimal - objective value 81.139432
Coin0511I After Postsolve, objective 81.139432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.13943248 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 150 columns (150 integer (150 of which binary)) and 2879 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.978%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.31512
Cbc0038I Pass   1: suminf.    1.90266 (38) obj. -32.9756 iterations 14
Cbc0038I Pass   2: suminf.    1.90266 (38) obj. -32.9756 iterations 0
Cbc0038I Pass   3: suminf.    0.94036 (24) obj. -7.06948 iterations 14
Cbc0038I Pass   4: suminf.    0.37070 (11) obj. 5.36086 iterations 13
Cbc0038I Pass   5: suminf.    0.02857 (1) obj. 15.0187 iterations 10
Cbc0038I Solution found of 15.9902
Cbc0038I Rounding solution of 7.2752 is better than previous of 15.9902

Cbc0038I Before mini branch and bound, 107 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 150 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound improved solution from 7.2752 to -31.3556 (0.04 seconds)
Cbc0038I Round again with cutoff of -35.0007
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   6: suminf.    2.21891 (39) obj. -35.0007 iterations 2
Cbc0038I Pass   7: suminf.    2.20616 (40) obj. -35.0007 iterations 1
Cbc0038I Pass   8: suminf.    3.32194 (30) obj. -35.0007 iterations 20
Cbc0038I Pass   9: suminf.    3.32194 (30) obj. -35.0007 iterations 0
Cbc0038I Pass  10: suminf.    1.15140 (12) obj. -39.7714 iterations 24
Cbc0038I Pass  11: suminf.    1.25090 (4) obj. -35.0007 iterations 18
Cbc0038I Pass  12: suminf.    1.15578 (5) obj. -35.0007 iterations 1
Cbc0038I Pass  13: suminf.    1.96166 (10) obj. -35.0007 iterations 15
Cbc0038I Pass  14: suminf.    0.73970 (5) obj. -35.0007 iterations 14
Cbc0038I Pass  15: suminf.    1.25090 (4) obj. -35.0007 iterations 10
Cbc0038I Pass  16: suminf.    2.01743 (11) obj. -35.0007 iterations 21
Cbc0038I Pass  17: suminf.    2.01743 (11) obj. -35.0007 iterations 4
Cbc0038I Pass  18: suminf.    1.25638 (9) obj. -35.0007 iterations 35
Cbc0038I Pass  19: suminf.    1.04690 (8) obj. -35.0007 iterations 6
Cbc0038I Pass  20: suminf.    1.83737 (6) obj. -35.0007 iterations 16
Cbc0038I Pass  21: suminf.    1.73633 (7) obj. -35.0007 iterations 3
Cbc0038I Pass  22: suminf.    1.00179 (6) obj. -35.0007 iterations 4
Cbc0038I Pass  23: suminf.    1.49011 (5) obj. -35.0007 iterations 10
Cbc0038I Pass  24: suminf.    1.42602 (6) obj. -35.0007 iterations 3
Cbc0038I Pass  25: suminf.    1.56519 (5) obj. -35.0007 iterations 4
Cbc0038I Pass  26: suminf.    1.12794 (9) obj. -35.0007 iterations 2
Cbc0038I Pass  27: suminf.    1.38220 (6) obj. -35.0007 iterations 20
Cbc0038I Pass  28: suminf.    1.38220 (6) obj. -35.0007 iterations 3
Cbc0038I Pass  29: suminf.    1.93320 (9) obj. -35.0007 iterations 11
Cbc0038I Pass  30: suminf.    1.00179 (6) obj. -35.0007 iterations 12
Cbc0038I Pass  31: suminf.    1.49011 (5) obj. -35.0007 iterations 10
Cbc0038I Pass  32: suminf.    1.42602 (6) obj. -35.0007 iterations 3
Cbc0038I Pass  33: suminf.    1.56519 (5) obj. -35.0007 iterations 4
Cbc0038I Pass  34: suminf.    1.12794 (9) obj. -35.0007 iterations 2
Cbc0038I Pass  35: suminf.    1.38220 (6) obj. -35.0007 iterations 20
Cbc0038I Rounding solution of -32.1746 is better than previous of -31.3556

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 150 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -41.5618
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  35: suminf.    3.24352 (39) obj. -41.5618 iterations 0
Cbc0038I Pass  36: suminf.    3.22913 (40) obj. -41.5618 iterations 1
Cbc0038I Pass  37: suminf.    3.69769 (26) obj. -41.5618 iterations 25
Cbc0038I Pass  38: suminf.    3.25187 (25) obj. -41.5618 iterations 4
Cbc0038I Pass  39: suminf.    2.30290 (9) obj. -41.5618 iterations 48
Cbc0038I Pass  40: suminf.    2.01423 (10) obj. -41.5618 iterations 2
Cbc0038I Pass  41: suminf.    2.30290 (9) obj. -41.5618 iterations 11
Cbc0038I Pass  42: suminf.    2.63576 (14) obj. -41.5618 iterations 18
Cbc0038I Pass  43: suminf.    2.53543 (18) obj. -41.5618 iterations 8
Cbc0038I Pass  44: suminf.    2.30261 (12) obj. -41.5618 iterations 24
Cbc0038I Pass  45: suminf.    2.30261 (12) obj. -41.5618 iterations 0
Cbc0038I Pass  46: suminf.    2.28037 (11) obj. -41.5618 iterations 9
Cbc0038I Pass  47: suminf.    2.28037 (11) obj. -41.5618 iterations 0
Cbc0038I Pass  48: suminf.    2.48336 (11) obj. -41.5618 iterations 2
Cbc0038I Pass  49: suminf.    1.95340 (12) obj. -41.5618 iterations 6
Cbc0038I Pass  50: suminf.    2.28037 (11) obj. -41.5618 iterations 10
Cbc0038I Pass  51: suminf.    3.04765 (14) obj. -41.5618 iterations 16
Cbc0038I Pass  52: suminf.    2.80884 (15) obj. -41.5618 iterations 3
Cbc0038I Pass  53: suminf.    2.87626 (11) obj. -41.5618 iterations 45
Cbc0038I Pass  54: suminf.    2.10963 (10) obj. -41.5618 iterations 4
Cbc0038I Pass  55: suminf.    1.77944 (10) obj. -41.5618 iterations 5
Cbc0038I Pass  56: suminf.    1.77944 (10) obj. -41.5618 iterations 1
Cbc0038I Pass  57: suminf.    2.10963 (10) obj. -41.5618 iterations 5
Cbc0038I Pass  58: suminf.    2.53641 (15) obj. -41.5618 iterations 24
Cbc0038I Pass  59: suminf.    2.42324 (13) obj. -41.5618 iterations 15
Cbc0038I Pass  60: suminf.    2.16177 (11) obj. -41.5618 iterations 24
Cbc0038I Pass  61: suminf.    2.16177 (11) obj. -41.5618 iterations 0
Cbc0038I Pass  62: suminf.    2.24003 (11) obj. -41.5618 iterations 6
Cbc0038I Pass  63: suminf.    1.80394 (11) obj. -41.5618 iterations 2
Cbc0038I Pass  64: suminf.    2.16177 (11) obj. -41.5618 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 150 columns, reduced to 44 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -32.1746 - took 0.07 seconds
Cbc0012I Integer solution of -32.174625 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 132 rows 150 columns, reduced to 10 rows 11 columns
Cbc0031I 50 added rows had average density of 43.26
Cbc0013I At root node, 50 cuts changed objective from -67.806244 to -36.045335 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 783 row cuts average 3.3 elements, 16 column cuts (16 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 102.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 223 row cuts average 55.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 306 row cuts average 82.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.174625 best solution, best possible -35.977749 (0.64 seconds)
Cbc0012I Integer solution of -32.4431 found by DiveCoefficient after 555 iterations and 1 nodes (0.84 seconds)
Cbc0012I Integer solution of -32.49997 found by DiveCoefficient after 660 iterations and 4 nodes (1.05 seconds)
Cbc0016I Integer solution of -32.7662 found by strong branching after 786 iterations and 10 nodes (1.27 seconds)
Cbc0010I After 13 nodes, 10 on tree, -32.7662 best solution, best possible -35.977749 (1.34 seconds)
Cbc0004I Integer solution of -33.28597 found after 973 iterations and 20 nodes (1.52 seconds)
Cbc0001I Search completed - best objective -33.28596999999999, took 1471 iterations and 36 nodes (1.88 seconds)
Cbc0032I Strong branching done 596 times (8463 iterations), fathomed 6 nodes and fixed 7 variables
Cbc0035I Maximum depth 12, 155 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.89

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 181 (-24) rows, 100 (-3) columns and 554 (-49) elements
Clp1000I sum of infeasibilities 6.07739e-05 - average 3.35767e-07, 17 fixed columns
Coin0506I Presolve 145 (-36) rows, 81 (-19) columns and 444 (-110) elements
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 1.7509953 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 38.634184
Clp0000I Optimal - objective value 38.634184
Coin0511I After Postsolve, objective 38.634184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.634184
Clp0000I Optimal - objective value 38.634184
Clp0000I Optimal - objective value 38.634184
Coin0511I After Postsolve, objective 38.634184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.63418382 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 181 rows, 100 columns (99 integer (99 of which binary)) and 557 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.915%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.28397
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.29888 iterations 83
Cbc0038I Solution found of 5.29888
Cbc0038I Relaxing continuous gives 5.29888
Cbc0038I Rounding solution of -8.62594 is better than previous of 5.29888

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 65 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.62594 to -11.75 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.428
Cbc0038I Pass   2: suminf.    2.61657 (10) obj. -14.428 iterations 20
Cbc0038I Pass   3: suminf.    2.31444 (6) obj. -14.428 iterations 14
Cbc0038I Pass   4: suminf.    2.29863 (6) obj. -14.428 iterations 4
Cbc0038I Pass   5: suminf.    1.81062 (5) obj. -14.428 iterations 9
Cbc0038I Pass   6: suminf.    1.53488 (4) obj. -14.428 iterations 3
Cbc0038I Pass   7: suminf.    1.40265 (4) obj. -14.428 iterations 5
Cbc0038I Pass   8: suminf.    1.36436 (5) obj. -14.428 iterations 6
Cbc0038I Pass   9: suminf.    1.36436 (5) obj. -14.428 iterations 2
Cbc0038I Pass  10: suminf.    1.67715 (4) obj. -14.428 iterations 6
Cbc0038I Pass  11: suminf.    1.58357 (5) obj. -14.428 iterations 1
Cbc0038I Pass  12: suminf.    1.40968 (5) obj. -14.428 iterations 3
Cbc0038I Pass  13: suminf.    1.40025 (4) obj. -14.428 iterations 1
Cbc0038I Pass  14: suminf.    1.48832 (4) obj. -14.428 iterations 3
Cbc0038I Pass  15: suminf.    1.40265 (4) obj. -14.428 iterations 1
Cbc0038I Pass  16: suminf.    1.36436 (5) obj. -14.428 iterations 4
Cbc0038I Pass  17: suminf.    1.36436 (5) obj. -14.428 iterations 2
Cbc0038I Pass  18: suminf.    1.67715 (4) obj. -14.428 iterations 8
Cbc0038I Pass  19: suminf.    1.58357 (5) obj. -14.428 iterations 1
Cbc0038I Pass  20: suminf.    1.40968 (5) obj. -14.428 iterations 3
Cbc0038I Pass  21: suminf.    1.40025 (4) obj. -14.428 iterations 1
Cbc0038I Pass  22: suminf.    1.48832 (4) obj. -14.428 iterations 5
Cbc0038I Pass  23: suminf.    1.40265 (4) obj. -14.428 iterations 1
Cbc0038I Pass  24: suminf.    1.36436 (5) obj. -14.428 iterations 6
Cbc0038I Pass  25: suminf.    1.36436 (5) obj. -14.428 iterations 2
Cbc0038I Pass  26: suminf.    1.67715 (4) obj. -14.428 iterations 8
Cbc0038I Pass  27: suminf.    1.58357 (5) obj. -14.428 iterations 1
Cbc0038I Pass  28: suminf.    1.40968 (5) obj. -14.428 iterations 3
Cbc0038I Pass  29: suminf.    1.40025 (4) obj. -14.428 iterations 1
Cbc0038I Pass  30: suminf.    1.48832 (4) obj. -14.428 iterations 5
Cbc0038I Pass  31: suminf.    1.40265 (4) obj. -14.428 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 181 rows 100 columns, reduced to 65 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -11.75 - took 0.05 seconds
Cbc0012I Integer solution of -11.75003 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 65 rows 37 columns
Cbc0031I 32 added rows had average density of 58.1875
Cbc0013I At root node, 32 cuts changed objective from -38.528411 to -31.673414 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15809 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2010 row cuts average 99.8 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 178 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.75003 best solution, best possible -31.673414 (1.41 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 99 rows 57 columns
Cbc0012I Integer solution of -12.5443 found by RINS after 11909 iterations and 41 nodes (1.82 seconds)
Cbc0038I Full problem 181 rows 100 columns, reduced to 22 rows 16 columns
Cbc0016I Integer solution of -12.80474 found by strong branching after 14020 iterations and 116 nodes (2.02 seconds)
Cbc0001I Search completed - best objective -12.80474, took 15203 iterations and 152 nodes (2.09 seconds)
Cbc0032I Strong branching done 1438 times (26912 iterations), fathomed 7 nodes and fixed 52 variables
Cbc0035I Maximum depth 41, 531 variables fixed on reduced cost
Total time (CPU seconds):       2.00   (Wallclock seconds):       2.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-75) rows, 147 (-56) columns and 2832 (-2822) elements
Clp1000I sum of infeasibilities 9.43407e-08 - average 7.25698e-10, 55 fixed columns
Coin0506I Presolve 81 (-49) rows, 92 (-55) columns and 1252 (-1580) elements
Clp0006I 0  Obj 47.729661 Dual inf 5.6938105 (91)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.0878515 - largest nonzero change 1.9527882e-05 ( 0.0015708815%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 56.827496
Clp0000I Optimal - objective value 56.827496
Coin0511I After Postsolve, objective 56.827496, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.827496 Dual inf 7.9489961 (1)
Clp0014I Perturbing problem by 0.001% of 1.6759358 - largest nonzero change 2.00431e-05 ( 0.0016324266%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 56.827496
Clp0000I Optimal - objective value 56.827496
Clp0000I Optimal - objective value 56.827496
Coin0511I After Postsolve, objective 56.827496, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.82749607 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 149 columns (149 integer (149 of which binary)) and 2840 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.977%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 4.14926
Cbc0038I Pass   1: suminf.    2.91497 (40) obj. -47.9502 iterations 7
Cbc0038I Pass   2: suminf.    2.70868 (37) obj. -46.6377 iterations 5
Cbc0038I Pass   3: suminf.    1.49802 (23) obj. -25.6682 iterations 14
Cbc0038I Pass   4: suminf.    0.49016 (9) obj. -12.676 iterations 14
Cbc0038I Solution found of -4.16618
Cbc0038I Rounding solution of -5.42797 is better than previous of -4.16618

Cbc0038I Before mini branch and bound, 107 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 149 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -10.1133
Cbc0038I Pass   5: suminf.    2.91497 (40) obj. -47.9502 iterations 0
Cbc0038I Pass   6: suminf.    2.70868 (37) obj. -46.6377 iterations 8
Cbc0038I Pass   7: suminf.    1.10845 (18) obj. -21.0577 iterations 19
Cbc0038I Pass   8: suminf.    0.61855 (4) obj. -10.1133 iterations 20
Cbc0038I Pass   9: suminf.    0.09184 (1) obj. -12.3396 iterations 2
Cbc0038I Pass  10: suminf.    1.40446 (18) obj. -10.1133 iterations 40
Cbc0038I Pass  11: suminf.    1.00714 (17) obj. -10.1133 iterations 10
Cbc0038I Pass  12: suminf.    0.63312 (16) obj. -13.1055 iterations 1
Cbc0038I Pass  13: suminf.    1.04788 (8) obj. -10.1133 iterations 19
Cbc0038I Pass  14: suminf.    0.52559 (7) obj. -10.1133 iterations 2
Cbc0038I Pass  15: suminf.    0.49427 (3) obj. -10.1133 iterations 10
Cbc0038I Pass  16: suminf.    0.49427 (3) obj. -10.1133 iterations 0
Cbc0038I Pass  17: suminf.    0.70080 (6) obj. -10.1133 iterations 4
Cbc0038I Pass  18: suminf.    0.57038 (2) obj. -10.1133 iterations 14
Cbc0038I Pass  19: suminf.    0.60158 (2) obj. -10.1133 iterations 4
Cbc0038I Pass  20: suminf.    0.58673 (2) obj. -10.247 iterations 1
Cbc0038I Pass  21: suminf.    0.57038 (2) obj. -10.1133 iterations 3
Cbc0038I Pass  22: suminf.    1.36267 (10) obj. -10.1133 iterations 23
Cbc0038I Pass  23: suminf.    1.01116 (8) obj. -10.3461 iterations 4
Cbc0038I Pass  24: suminf.    0.94987 (6) obj. -10.1133 iterations 19
Cbc0038I Pass  25: suminf.    0.78310 (6) obj. -10.1133 iterations 3
Cbc0038I Pass  26: suminf.    1.47213 (6) obj. -10.1133 iterations 6
Cbc0038I Pass  27: suminf.    1.18281 (5) obj. -10.1133 iterations 3
Cbc0038I Pass  28: suminf.    1.07834 (4) obj. -10.1133 iterations 3
Cbc0038I Pass  29: suminf.    0.73370 (5) obj. -10.1133 iterations 8
Cbc0038I Pass  30: suminf.    1.47213 (6) obj. -10.1133 iterations 7
Cbc0038I Pass  31: suminf.    1.40809 (13) obj. -10.1133 iterations 15
Cbc0038I Pass  32: suminf.    1.40809 (13) obj. -10.1133 iterations 2
Cbc0038I Pass  33: suminf.    1.22590 (5) obj. -10.1133 iterations 20
Cbc0038I Pass  34: suminf.    0.76049 (4) obj. -10.1133 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 149 columns, reduced to 16 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -4.16618 to -7.47077 (0.07 seconds)
Cbc0038I Round again with cutoff of -18.5469
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.91497 (40) obj. -47.9502 iterations 0
Cbc0038I Pass  35: suminf.    2.70868 (37) obj. -46.6377 iterations 7
Cbc0038I Pass  36: suminf.    0.96559 (16) obj. -19.2006 iterations 21
Cbc0038I Pass  37: suminf.    0.96413 (7) obj. -18.5469 iterations 20
Cbc0038I Pass  38: suminf.    0.96413 (7) obj. -18.5469 iterations 1
Cbc0038I Pass  39: suminf.    1.25698 (6) obj. -18.5469 iterations 13
Cbc0038I Pass  40: suminf.    1.25698 (6) obj. -18.5469 iterations 3
Cbc0038I Pass  41: suminf.    1.52228 (6) obj. -18.5469 iterations 7
Cbc0038I Pass  42: suminf.    1.04864 (6) obj. -18.5469 iterations 3
Cbc0038I Pass  43: suminf.    2.09559 (14) obj. -18.5469 iterations 18
Cbc0038I Pass  44: suminf.    1.73108 (13) obj. -18.5469 iterations 4
Cbc0038I Pass  45: suminf.    1.43934 (7) obj. -18.5469 iterations 17
Cbc0038I Pass  46: suminf.    1.43934 (7) obj. -18.5469 iterations 1
Cbc0038I Pass  47: suminf.    1.43719 (7) obj. -18.5469 iterations 3
Cbc0038I Pass  48: suminf.    1.43719 (7) obj. -18.5469 iterations 2
Cbc0038I Pass  49: suminf.    1.43934 (7) obj. -18.5469 iterations 3
Cbc0038I Pass  50: suminf.    1.55798 (11) obj. -18.5469 iterations 17
Cbc0038I Pass  51: suminf.    1.25012 (11) obj. -18.5469 iterations 3
Cbc0038I Pass  52: suminf.    1.06716 (9) obj. -19.6045 iterations 5
Cbc0038I Pass  53: suminf.    2.09748 (8) obj. -18.5469 iterations 16
Cbc0038I Pass  54: suminf.    1.83337 (9) obj. -18.5469 iterations 3
Cbc0038I Pass  55: suminf.    1.43934 (7) obj. -18.5469 iterations 9
Cbc0038I Pass  56: suminf.    1.43934 (7) obj. -18.5469 iterations 0
Cbc0038I Pass  57: suminf.    1.43719 (7) obj. -18.5469 iterations 2
Cbc0038I Pass  58: suminf.    1.43719 (7) obj. -18.5469 iterations 1
Cbc0038I Pass  59: suminf.    1.43934 (7) obj. -18.5469 iterations 2
Cbc0038I Pass  60: suminf.    1.75043 (12) obj. -18.5469 iterations 13
Cbc0038I Pass  61: suminf.    1.22352 (12) obj. -18.5469 iterations 3
Cbc0038I Pass  62: suminf.    1.33414 (7) obj. -18.5469 iterations 18
Cbc0038I Pass  63: suminf.    1.33414 (7) obj. -18.5469 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.47077 - took 0.06 seconds
Cbc0012I Integer solution of -7.47077 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 131 rows 149 columns, reduced to 5 rows 6 columns
Cbc0031I 56 added rows had average density of 55.017857
Cbc0013I At root node, 56 cuts changed objective from -52.280857 to -18.579417 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12980 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2053 row cuts average 135.9 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 359 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1763 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 402 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 89 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.529 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.47077 best solution, best possible -18.579417 (2.82 seconds)
Cbc0012I Integer solution of -8.55752 found by rounding after 6234 iterations and 1 nodes (2.83 seconds)
Cbc0012I Integer solution of -9.27754 found by DiveCoefficient after 6573 iterations and 2 nodes (2.94 seconds)
Cbc0012I Integer solution of -11.08676 found by rounding after 6742 iterations and 7 nodes (3.01 seconds)
Cbc0012I Integer solution of -11.98098 found by rounding after 6757 iterations and 8 nodes (3.02 seconds)
Cbc0016I Integer solution of -12.80474 found by strong branching after 6761 iterations and 10 nodes (3.02 seconds)
Cbc0010I After 40 nodes, 5 on tree, -12.80474 best solution, best possible -18.576857 (3.55 seconds)
Cbc0038I Full problem 131 rows 149 columns, reduced to 48 rows 61 columns
Cbc0010I After 67 nodes, 5 on tree, -12.80474 best solution, best possible -18.576857 (4.26 seconds)
Cbc0038I Full problem 131 rows 149 columns, reduced to 41 rows 57 columns
Cbc0010I After 92 nodes, 8 on tree, -12.80474 best solution, best possible -18.576857 (4.96 seconds)
Cbc0010I After 135 nodes, 10 on tree, -12.80474 best solution, best possible -18.196054 (5.67 seconds)
Cbc0001I Search completed - best objective -12.80474, took 15247 iterations and 178 nodes (6.06 seconds)
Cbc0032I Strong branching done 2178 times (34393 iterations), fathomed 23 nodes and fixed 22 variables
Cbc0035I Maximum depth 21, 592 variables fixed on reduced cost
Total time (CPU seconds):       5.37   (Wallclock seconds):       6.09

