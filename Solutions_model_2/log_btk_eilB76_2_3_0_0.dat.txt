Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 70 (-8) columns and 384 (-69) elements
Clp1000I sum of infeasibilities 1.95311e-05 - average 1.55008e-07, 19 fixed columns
Coin0506I Presolve 88 (-38) rows, 50 (-20) columns and 270 (-114) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Coin0511I After Postsolve, objective 61.667225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Coin0511I After Postsolve, objective 61.667225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.66722484 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 70 columns (69 integer (69 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.895%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.99492
Cbc0038I Solution found of -7.41688
Cbc0038I Relaxing continuous gives -14.9786
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -14.9786 to -28.0491 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.3884
Cbc0038I Pass   1: suminf.    1.41969 (22) obj. -31.3884 iterations 32
Cbc0038I Pass   2: suminf.    1.26212 (5) obj. -31.3884 iterations 25
Cbc0038I Pass   3: suminf.    1.05666 (5) obj. -31.3884 iterations 6
Cbc0038I Pass   4: suminf.    0.87996 (3) obj. -31.3884 iterations 8
Cbc0038I Pass   5: suminf.    0.64352 (3) obj. -31.3884 iterations 3
Cbc0038I Pass   6: suminf.    1.32228 (5) obj. -31.3884 iterations 8
Cbc0038I Pass   7: suminf.    1.32228 (5) obj. -31.3884 iterations 0
Cbc0038I Pass   8: suminf.    1.14769 (3) obj. -31.3884 iterations 7
Cbc0038I Pass   9: suminf.    1.09817 (3) obj. -31.3884 iterations 3
Cbc0038I Pass  10: suminf.    2.01416 (6) obj. -31.3884 iterations 12
Cbc0038I Pass  11: suminf.    1.59689 (4) obj. -31.3884 iterations 13
Cbc0038I Pass  12: suminf.    1.36292 (5) obj. -31.3884 iterations 4
Cbc0038I Pass  13: suminf.    1.32228 (5) obj. -31.3884 iterations 2
Cbc0038I Pass  14: suminf.    1.14769 (3) obj. -31.3884 iterations 6
Cbc0038I Pass  15: suminf.    1.09817 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  16: suminf.    1.32228 (5) obj. -31.3884 iterations 7
Cbc0038I Pass  17: suminf.    1.29829 (7) obj. -31.3884 iterations 12
Cbc0038I Pass  18: suminf.    0.64352 (3) obj. -31.3884 iterations 10
Cbc0038I Pass  19: suminf.    1.87591 (5) obj. -31.3884 iterations 12
Cbc0038I Pass  20: suminf.    1.21844 (3) obj. -31.3884 iterations 11
Cbc0038I Pass  21: suminf.    1.02646 (3) obj. -31.3884 iterations 4
Cbc0038I Pass  22: suminf.    1.00198 (4) obj. -31.3884 iterations 1
Cbc0038I Pass  23: suminf.    1.09694 (3) obj. -31.3884 iterations 5
Cbc0038I Pass  24: suminf.    1.05082 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  25: suminf.    1.67020 (5) obj. -31.3884 iterations 4
Cbc0038I Pass  26: suminf.    1.32228 (5) obj. -31.3884 iterations 1
Cbc0038I Pass  27: suminf.    1.14769 (3) obj. -31.3884 iterations 6
Cbc0038I Pass  28: suminf.    1.09817 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  29: suminf.    1.32228 (5) obj. -31.3884 iterations 7
Cbc0038I Pass  30: suminf.    1.14218 (6) obj. -31.3884 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -28.0491 - took 0.04 seconds
Cbc0012I Integer solution of -28.04907 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 70 columns, reduced to 62 rows 36 columns
Cbc0031I 20 added rows had average density of 56.25
Cbc0013I At root node, 20 cuts changed objective from -61.441787 to -50.697987 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6320 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1235 row cuts average 68.9 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0016I Integer solution of -29.60487 found by strong branching after 5794 iterations and 32 nodes (0.66 seconds)
Cbc0001I Search completed - best objective -29.60487, took 6170 iterations and 42 nodes (0.67 seconds)
Cbc0032I Strong branching done 510 times (8194 iterations), fathomed 2 nodes and fixed 26 variables
Cbc0035I Maximum depth 17, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 115 (-37) columns and 1856 (-1447) elements
Clp1000I sum of infeasibilities 0 - average 0, 107 fixed columns
Coin0506I Presolve 9 (-94) rows, 8 (-107) columns and 30 (-1826) elements
Clp0006I 0  Obj 112.6482 Dual inf 0.95871859 (8)
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 112.64833
Clp0000I Optimal - objective value 112.64833
Coin0511I After Postsolve, objective 112.64833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 112.64833 Dual inf 41.330957 (42)
Clp0014I Perturbing problem by 0.001% of 1.9139317 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 191.99977
Clp0000I Optimal - objective value 191.99977
Clp0000I Optimal - objective value 191.99977
Coin0511I After Postsolve, objective 191.99977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 191.9997697 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 61 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 114 columns (114 integer (114 of which binary)) and 1848 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.700%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 12.312
Cbc0038I Pass   1: suminf.    0.29732 (14) obj. -12.0057 iterations 48
Cbc0038I Pass   2: suminf.    0.29732 (14) obj. -12.0057 iterations 1
Cbc0038I Pass   3: suminf.    0.04840 (3) obj. 10.4327 iterations 17
Cbc0038I Solution found of 16.3359
Cbc0038I Rounding solution of -6.80333 is better than previous of 16.3359

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 114 columns, reduced to 43 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -6.80333 to -47.8815 (0.05 seconds)
Cbc0038I Round again with cutoff of -54.8385
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.11583 (29) obj. -54.8385 iterations 15
Cbc0038I Pass   5: suminf.    1.03097 (28) obj. -74.8674 iterations 1
Cbc0038I Pass   6: suminf.    0.57860 (19) obj. -54.8385 iterations 13
Cbc0038I Pass   7: suminf.    1.43932 (6) obj. -54.8385 iterations 23
Cbc0038I Pass   8: suminf.    1.38502 (5) obj. -54.8385 iterations 7
Cbc0038I Pass   9: suminf.    0.33019 (5) obj. -83.5811 iterations 12
Cbc0038I Pass  10: suminf.    1.27143 (5) obj. -54.8385 iterations 2
Cbc0038I Pass  11: suminf.    1.74143 (15) obj. -54.8385 iterations 27
Cbc0038I Pass  12: suminf.    0.82034 (8) obj. -54.8385 iterations 16
Cbc0038I Pass  13: suminf.    0.56823 (7) obj. -54.8385 iterations 16
Cbc0038I Pass  14: suminf.    0.48515 (6) obj. -54.8385 iterations 1
Cbc0038I Pass  15: suminf.    1.27143 (5) obj. -54.8385 iterations 12
Cbc0038I Pass  16: suminf.    0.33019 (5) obj. -83.5811 iterations 3
Cbc0038I Pass  17: suminf.    1.27143 (5) obj. -54.8385 iterations 2
Cbc0038I Pass  18: suminf.    5.31677 (17) obj. -54.8385 iterations 34
Cbc0038I Pass  19: suminf.    3.81997 (14) obj. -54.8385 iterations 12
Cbc0038I Pass  20: suminf.    3.23455 (12) obj. -54.8385 iterations 3
Cbc0038I Pass  21: suminf.    1.98865 (13) obj. -54.8385 iterations 3
Cbc0038I Pass  22: suminf.    1.49569 (18) obj. -54.8385 iterations 10
Cbc0038I Pass  23: suminf.    1.28702 (14) obj. -54.8385 iterations 5
Cbc0038I Pass  24: suminf.    0.33019 (5) obj. -80.5811 iterations 18
Cbc0038I Pass  25: suminf.    1.17318 (5) obj. -54.8385 iterations 1
Cbc0038I Pass  26: suminf.    3.06208 (11) obj. -54.8385 iterations 23
Cbc0038I Pass  27: suminf.    2.70025 (10) obj. -54.8385 iterations 6
Cbc0038I Pass  28: suminf.    1.14156 (6) obj. -54.8385 iterations 8
Cbc0038I Pass  29: suminf.    1.14156 (6) obj. -54.8385 iterations 0
Cbc0038I Pass  30: suminf.    1.18202 (5) obj. -54.8385 iterations 5
Cbc0038I Pass  31: suminf.    0.84906 (5) obj. -65.0062 iterations 5
Cbc0038I Pass  32: suminf.    2.78147 (12) obj. -54.8385 iterations 15
Cbc0038I Pass  33: suminf.    1.53215 (12) obj. -54.8385 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 114 columns, reduced to 52 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -47.8815 to -48.8299 (0.08 seconds)
Cbc0038I Round again with cutoff of -67.3608
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.06277 (29) obj. -67.3608 iterations 0
Cbc0038I Pass  34: suminf.    1.03097 (28) obj. -74.8674 iterations 1
Cbc0038I Pass  35: suminf.    3.03098 (16) obj. -67.3608 iterations 36
Cbc0038I Pass  36: suminf.    1.61296 (6) obj. -67.3608 iterations 14
Cbc0038I Pass  37: suminf.    0.41353 (6) obj. -83.9519 iterations 7
Cbc0038I Pass  38: suminf.    0.33019 (5) obj. -83.5811 iterations 1
Cbc0038I Pass  39: suminf.    0.86136 (5) obj. -67.3608 iterations 1
Cbc0038I Pass  40: suminf.    2.34305 (10) obj. -67.3608 iterations 20
Cbc0038I Pass  41: suminf.    0.94081 (7) obj. -67.3608 iterations 10
Cbc0038I Pass  42: suminf.    0.69762 (5) obj. -67.3608 iterations 3
Cbc0038I Pass  43: suminf.    0.33019 (5) obj. -78.5811 iterations 6
Cbc0038I Pass  44: suminf.    2.39946 (15) obj. -67.3608 iterations 24
Cbc0038I Pass  45: suminf.    1.89039 (8) obj. -67.3608 iterations 19
Cbc0038I Pass  46: suminf.    0.41353 (6) obj. -76.9519 iterations 17
Cbc0038I Pass  47: suminf.    0.33019 (5) obj. -76.5811 iterations 1
Cbc0038I Pass  48: suminf.    0.63213 (5) obj. -67.3608 iterations 1
Cbc0038I Pass  49: suminf.    2.56312 (10) obj. -67.3608 iterations 22
Cbc0038I Pass  50: suminf.    2.35212 (11) obj. -67.3608 iterations 6
Cbc0038I Pass  51: suminf.    0.63213 (5) obj. -67.3608 iterations 10
Cbc0038I Pass  52: suminf.    0.33019 (5) obj. -76.5811 iterations 7
Cbc0038I Pass  53: suminf.    3.44396 (12) obj. -67.3608 iterations 14
Cbc0038I Pass  54: suminf.    2.24070 (10) obj. -67.3608 iterations 8
Cbc0038I Pass  55: suminf.    0.87019 (5) obj. -67.3608 iterations 6
Cbc0038I Pass  56: suminf.    0.84906 (5) obj. -68.0062 iterations 5
Cbc0038I Pass  57: suminf.    2.78332 (11) obj. -67.3608 iterations 17
Cbc0038I Pass  58: suminf.    2.41484 (12) obj. -67.3608 iterations 2
Cbc0038I Pass  59: suminf.    0.59938 (5) obj. -67.3608 iterations 8
Cbc0038I Pass  60: suminf.    0.33019 (5) obj. -75.5811 iterations 7
Cbc0038I Pass  61: suminf.    4.87546 (20) obj. -67.3608 iterations 18
Cbc0038I Pass  62: suminf.    4.53999 (19) obj. -67.3608 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 114 columns, reduced to 48 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -48.8299 - took 0.06 seconds
Cbc0012I Integer solution of -48.829873 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 97 rows 114 columns, reduced to 44 rows 42 columns
Cbc0031I 36 added rows had average density of 7.9722222
Cbc0013I At root node, 41 cuts changed objective from -117.45015 to -48.829873 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 485 row cuts average 6.9 elements, 32 column cuts (32 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 74 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 35 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 107 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 61.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 42 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48.82987299999999, took 413 iterations and 0 nodes (0.28 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 126 (-29) rows, 70 (-8) columns and 384 (-69) elements
Clp1000I sum of infeasibilities 1.95311e-05 - average 1.55008e-07, 19 fixed columns
Coin0506I Presolve 88 (-38) rows, 50 (-20) columns and 270 (-114) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Coin0511I After Postsolve, objective 61.667225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Clp0000I Optimal - objective value 61.667225
Coin0511I After Postsolve, objective 61.667225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.66722484 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 70 columns (69 integer (69 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.895%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.99492
Cbc0038I Solution found of -7.41688
Cbc0038I Relaxing continuous gives -14.9786
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 62 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -14.9786 to -28.0491 (0.04 seconds)
Cbc0038I Round again with cutoff of -31.3884
Cbc0038I Pass   1: suminf.    1.41969 (22) obj. -31.3884 iterations 32
Cbc0038I Pass   2: suminf.    1.26212 (5) obj. -31.3884 iterations 25
Cbc0038I Pass   3: suminf.    1.05666 (5) obj. -31.3884 iterations 6
Cbc0038I Pass   4: suminf.    0.87996 (3) obj. -31.3884 iterations 8
Cbc0038I Pass   5: suminf.    0.64352 (3) obj. -31.3884 iterations 3
Cbc0038I Pass   6: suminf.    1.32228 (5) obj. -31.3884 iterations 8
Cbc0038I Pass   7: suminf.    1.32228 (5) obj. -31.3884 iterations 0
Cbc0038I Pass   8: suminf.    1.14769 (3) obj. -31.3884 iterations 7
Cbc0038I Pass   9: suminf.    1.09817 (3) obj. -31.3884 iterations 3
Cbc0038I Pass  10: suminf.    2.01416 (6) obj. -31.3884 iterations 12
Cbc0038I Pass  11: suminf.    1.59689 (4) obj. -31.3884 iterations 13
Cbc0038I Pass  12: suminf.    1.36292 (5) obj. -31.3884 iterations 4
Cbc0038I Pass  13: suminf.    1.32228 (5) obj. -31.3884 iterations 2
Cbc0038I Pass  14: suminf.    1.14769 (3) obj. -31.3884 iterations 6
Cbc0038I Pass  15: suminf.    1.09817 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  16: suminf.    1.32228 (5) obj. -31.3884 iterations 7
Cbc0038I Pass  17: suminf.    1.29829 (7) obj. -31.3884 iterations 12
Cbc0038I Pass  18: suminf.    0.64352 (3) obj. -31.3884 iterations 10
Cbc0038I Pass  19: suminf.    1.87591 (5) obj. -31.3884 iterations 12
Cbc0038I Pass  20: suminf.    1.21844 (3) obj. -31.3884 iterations 11
Cbc0038I Pass  21: suminf.    1.02646 (3) obj. -31.3884 iterations 4
Cbc0038I Pass  22: suminf.    1.00198 (4) obj. -31.3884 iterations 1
Cbc0038I Pass  23: suminf.    1.09694 (3) obj. -31.3884 iterations 5
Cbc0038I Pass  24: suminf.    1.05082 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  25: suminf.    1.67020 (5) obj. -31.3884 iterations 4
Cbc0038I Pass  26: suminf.    1.32228 (5) obj. -31.3884 iterations 1
Cbc0038I Pass  27: suminf.    1.14769 (3) obj. -31.3884 iterations 6
Cbc0038I Pass  28: suminf.    1.09817 (3) obj. -31.3884 iterations 2
Cbc0038I Pass  29: suminf.    1.32228 (5) obj. -31.3884 iterations 7
Cbc0038I Pass  30: suminf.    1.14218 (6) obj. -31.3884 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 70 columns, reduced to 76 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -28.0491 - took 0.05 seconds
Cbc0012I Integer solution of -28.04907 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 122 rows 70 columns, reduced to 62 rows 36 columns
Cbc0031I 20 added rows had average density of 56.25
Cbc0013I At root node, 20 cuts changed objective from -61.441787 to -50.697987 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6320 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1235 row cuts average 68.9 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 11 nodes, 10 on tree, -28.04907 best solution, best possible -50.697987 (0.68 seconds)
Cbc0016I Integer solution of -29.60487 found by strong branching after 5794 iterations and 32 nodes (0.72 seconds)
Cbc0001I Search completed - best objective -29.60487, took 6170 iterations and 42 nodes (0.73 seconds)
Cbc0032I Strong branching done 510 times (8194 iterations), fathomed 2 nodes and fixed 26 variables
Cbc0035I Maximum depth 17, 59 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 99 (-56) rows, 111 (-42) columns and 1717 (-1587) elements
Clp1000I sum of infeasibilities 1.64336e-07 - average 1.65996e-09, 30 fixed columns
Coin0506I Presolve 74 (-25) rows, 81 (-30) columns and 1033 (-684) elements
Clp0006I 0  Obj 58.637582 Dual inf 9.8548733 (81)
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 2.3405999 - largest nonzero change 0 ( 0%) - largest zero change 2.5736794e-05
Clp0000I Optimal - objective value 70.414732
Clp0000I Optimal - objective value 70.414732
Coin0511I After Postsolve, objective 70.414732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.414732
Clp0000I Optimal - objective value 70.414732
Clp0000I Optimal - objective value 70.414732
Clp0000I Optimal - objective value 70.414732
Coin0511I After Postsolve, objective 70.414732, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.41473204 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 111 columns (111 integer (111 of which binary)) and 1749 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.670%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 2.68523
Cbc0038I Pass   1: suminf.    1.16183 (28) obj. -40.3314 iterations 16
Cbc0038I Pass   2: suminf.    0.02500 (1) obj. 1.79065 iterations 31
Cbc0038I Solution found of 2.76565
Cbc0038I Rounding solution of -7.17038 is better than previous of 2.76565

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -11.6027
Cbc0038I Pass   3: suminf.    1.16183 (28) obj. -40.3314 iterations 0
Cbc0038I Pass   4: suminf.    0.52079 (15) obj. -17.4934 iterations 13
Cbc0038I Pass   5: suminf.    0.83420 (8) obj. -11.6027 iterations 16
Cbc0038I Pass   6: suminf.    0.99576 (5) obj. -11.6027 iterations 8
Cbc0038I Pass   7: suminf.    0.80918 (5) obj. -11.6027 iterations 7
Cbc0038I Pass   8: suminf.    0.83190 (10) obj. -11.6027 iterations 28
Cbc0038I Pass   9: suminf.    0.48698 (8) obj. -11.6027 iterations 9
Cbc0038I Pass  10: suminf.    0.74882 (7) obj. -11.6027 iterations 11
Cbc0038I Pass  11: suminf.    0.69439 (5) obj. -12.9115 iterations 4
Cbc0038I Pass  12: suminf.    0.76692 (7) obj. -11.6027 iterations 12
Cbc0038I Pass  13: suminf.    0.64613 (6) obj. -11.6027 iterations 5
Cbc0038I Pass  14: suminf.    0.82280 (5) obj. -11.6027 iterations 8
Cbc0038I Pass  15: suminf.    1.38898 (14) obj. -11.6027 iterations 42
Cbc0038I Pass  16: suminf.    1.10963 (14) obj. -11.6027 iterations 7
Cbc0038I Pass  17: suminf.    2.98031 (9) obj. -11.6027 iterations 36
Cbc0038I Pass  18: suminf.    1.43815 (6) obj. -11.6027 iterations 5
Cbc0038I Pass  19: suminf.    1.43815 (6) obj. -11.6027 iterations 0
Cbc0038I Pass  20: suminf.    2.01095 (7) obj. -11.6027 iterations 15
Cbc0038I Pass  21: suminf.    0.85979 (7) obj. -11.6027 iterations 6
Cbc0038I Pass  22: suminf.    0.54218 (5) obj. -12.3388 iterations 8
Cbc0038I Pass  23: suminf.    0.60751 (5) obj. -11.6027 iterations 13
Cbc0038I Pass  24: suminf.    0.53130 (5) obj. -11.6027 iterations 5
Cbc0038I Pass  25: suminf.    1.76656 (9) obj. -11.6027 iterations 10
Cbc0038I Pass  26: suminf.    1.49094 (11) obj. -11.6027 iterations 24
Cbc0038I Pass  27: suminf.    1.49094 (11) obj. -11.6027 iterations 0
Cbc0038I Pass  28: suminf.    0.92674 (6) obj. -11.6027 iterations 25
Cbc0038I Pass  29: suminf.    0.92674 (6) obj. -11.6027 iterations 1
Cbc0038I Pass  30: suminf.    1.39348 (8) obj. -11.6027 iterations 6
Cbc0038I Pass  31: suminf.    0.91486 (8) obj. -11.6027 iterations 9
Cbc0038I Pass  32: suminf.    1.21191 (6) obj. -11.6027 iterations 12
Cbc0038I Rounding solution of -26.4097 is better than previous of -7.17038

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 41 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -26.4097 to -29.6049 (0.07 seconds)
Cbc0038I Round again with cutoff of -33.9826
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.16183 (28) obj. -40.3314 iterations 0
Cbc0038I Pass  33: suminf.    1.77877 (18) obj. -33.9826 iterations 27
Cbc0038I Pass  34: suminf.    1.77877 (18) obj. -33.9826 iterations 0
Cbc0038I Pass  35: suminf.    1.52199 (14) obj. -33.9826 iterations 17
Cbc0038I Pass  36: suminf.    1.44577 (15) obj. -33.9826 iterations 7
Cbc0038I Pass  37: suminf.    1.52199 (14) obj. -33.9826 iterations 12
Cbc0038I Pass  38: suminf.    1.76780 (19) obj. -33.9826 iterations 15
Cbc0038I Pass  39: suminf.    1.74135 (20) obj. -33.9826 iterations 4
Cbc0038I Pass  40: suminf.    1.89634 (15) obj. -33.9826 iterations 12
Cbc0038I Pass  41: suminf.    1.89634 (15) obj. -33.9826 iterations 2
Cbc0038I Pass  42: suminf.    1.82355 (15) obj. -33.9826 iterations 3
Cbc0038I Pass  43: suminf.    1.82355 (15) obj. -33.9826 iterations 2
Cbc0038I Pass  44: suminf.    1.89634 (15) obj. -33.9826 iterations 6
Cbc0038I Pass  45: suminf.    2.19660 (20) obj. -33.9826 iterations 16
Cbc0038I Pass  46: suminf.    1.13830 (21) obj. -33.9826 iterations 17
Cbc0038I Pass  47: suminf.    1.79290 (15) obj. -33.9826 iterations 15
Cbc0038I Pass  48: suminf.    1.34115 (16) obj. -33.9826 iterations 8
Cbc0038I Pass  49: suminf.    1.79290 (15) obj. -33.9826 iterations 11
Cbc0038I Pass  50: suminf.    1.49735 (16) obj. -33.9826 iterations 11
Cbc0038I Pass  51: suminf.    1.49735 (16) obj. -33.9826 iterations 3
Cbc0038I Pass  52: suminf.    1.41680 (15) obj. -33.9826 iterations 8
Cbc0038I Pass  53: suminf.    1.41680 (15) obj. -33.9826 iterations 5
Cbc0038I Pass  54: suminf.    1.50938 (15) obj. -33.9826 iterations 8
Cbc0038I Pass  55: suminf.    0.96007 (14) obj. -34.4585 iterations 7
Cbc0038I Pass  56: suminf.    1.19804 (14) obj. -33.9826 iterations 9
Cbc0038I Pass  57: suminf.    1.35213 (16) obj. -33.9826 iterations 8
Cbc0038I Pass  58: suminf.    1.25723 (17) obj. -33.9826 iterations 5
Cbc0038I Pass  59: suminf.    1.17051 (16) obj. -33.9826 iterations 11
Cbc0038I Pass  60: suminf.    1.17051 (16) obj. -33.9826 iterations 3
Cbc0038I Pass  61: suminf.    1.54688 (16) obj. -33.9826 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 111 columns, reduced to 39 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.6049 - took 0.07 seconds
Cbc0012I Integer solution of -29.60487 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 95 rows 111 columns, reduced to 11 rows 12 columns
Cbc0031I 65 added rows had average density of 22.276923
Cbc0013I At root node, 65 cuts changed objective from -51.493101 to -35.295146 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12355 row cuts average 5.5 elements, 5 column cuts (5 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1310 row cuts average 94.7 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 585 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1000 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 603 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 322 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 332 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.701 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.60487 best solution, best possible -35.295146 (2.54 seconds)
Cbc0010I After 6 nodes, 5 on tree, -29.60487 best solution, best possible -35.295146 (3.30 seconds)
Cbc0001I Search completed - best objective -29.60487, took 7270 iterations and 24 nodes (3.97 seconds)
Cbc0032I Strong branching done 476 times (12177 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 10, 50 variables fixed on reduced cost
Total time (CPU seconds):       2.90   (Wallclock seconds):       3.98

