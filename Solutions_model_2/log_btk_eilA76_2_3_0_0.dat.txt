Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 70 (-8) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 0 - average 0, 65 fixed columns
Coin0506I Presolve 8 (-122) rows, 5 (-65) columns and 18 (-374) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 6678.8955
Clp0000I Optimal - objective value 6678.8955
Coin0511I After Postsolve, objective 6678.8955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24922509 - largest nonzero change 0 ( 0%) - largest zero change 2.9598841e-05
Clp0000I Optimal - objective value 6678.8955
Clp0000I Optimal - objective value 6678.8955
Clp0000I Optimal - objective value 6678.8955
Coin0511I After Postsolve, objective 6678.8955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6678.895468 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 70 columns (69 integer (69 of which binary)) and 395 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.348%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.253165
Cbc0038I Pass   1: suminf.    0.20833 (1) obj. -5240.78 iterations 2
Cbc0038I Solution found of 1040.62
Cbc0038I Relaxing continuous gives 1040.62
Cbc0038I Rounding solution of 1010.66 is better than previous of 1040.62

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 70 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 1010.66 to -3513.64 (0.01 seconds)
Cbc0038I Round again with cutoff of -3830.17
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.25000 (3) obj. -6614.41 iterations 2
Cbc0038I Pass   3: suminf.    0.28563 (3) obj. -3830.17 iterations 4
Cbc0038I Pass   4: suminf.    1.07304 (8) obj. -3830.17 iterations 17
Cbc0038I Pass   5: suminf.    0.25868 (3) obj. -3830.17 iterations 11
Cbc0038I Pass   6: suminf.    0.80000 (3) obj. -4447.72 iterations 3
Cbc0038I Pass   7: suminf.    0.43997 (4) obj. -3830.17 iterations 10
Cbc0038I Pass   8: suminf.    0.43997 (4) obj. -3830.17 iterations 3
Cbc0038I Pass   9: suminf.    1.05000 (3) obj. -4725 iterations 9
Cbc0038I Pass  10: suminf.    0.26563 (3) obj. -3830.17 iterations 1
Cbc0038I Pass  11: suminf.    1.23033 (9) obj. -3830.17 iterations 21
Cbc0038I Pass  12: suminf.    0.73127 (5) obj. -3830.17 iterations 10
Cbc0038I Pass  13: suminf.    0.28613 (3) obj. -3830.17 iterations 10
Cbc0038I Pass  14: suminf.    0.57237 (3) obj. -4066.65 iterations 4
Cbc0038I Pass  15: suminf.    0.97410 (11) obj. -3830.17 iterations 16
Cbc0038I Pass  16: suminf.    0.38147 (4) obj. -3830.17 iterations 9
Cbc0038I Pass  17: suminf.    0.77219 (4) obj. -3893.32 iterations 5
Cbc0038I Pass  18: suminf.    1.47387 (7) obj. -3830.17 iterations 13
Cbc0038I Pass  19: suminf.    0.27480 (3) obj. -3830.17 iterations 7
Cbc0038I Pass  20: suminf.    1.20000 (3) obj. -4885.65 iterations 3
Cbc0038I Pass  21: suminf.    1.38864 (6) obj. -3830.17 iterations 5
Cbc0038I Pass  22: suminf.    0.79673 (7) obj. -3830.17 iterations 15
Cbc0038I Pass  23: suminf.    0.61041 (5) obj. -3830.17 iterations 9
Cbc0038I Pass  24: suminf.    1.20000 (3) obj. -5583.24 iterations 9
Cbc0038I Pass  25: suminf.    1.20000 (3) obj. -5583.24 iterations 0
Cbc0038I Pass  26: suminf.    0.26333 (3) obj. -3830.17 iterations 4
Cbc0038I Pass  27: suminf.    1.16262 (8) obj. -3830.17 iterations 12
Cbc0038I Pass  28: suminf.    0.72241 (5) obj. -3830.17 iterations 6
Cbc0038I Pass  29: suminf.    0.40000 (3) obj. -3958.71 iterations 4
Cbc0038I Pass  30: suminf.    0.28733 (3) obj. -3830.17 iterations 1
Cbc0038I Pass  31: suminf.    0.49300 (5) obj. -3830.17 iterations 7
Cbc0038I Rounding solution of -3585.57 is better than previous of -3513.64

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 70 columns, reduced to 51 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -3585.57 to -3652.22 (0.02 seconds)
Cbc0038I Round again with cutoff of -4399.91
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.25000 (3) obj. -6614.41 iterations 0
Cbc0038I Pass  32: suminf.    0.78505 (3) obj. -4399.91 iterations 11
Cbc0038I Pass  33: suminf.    2.00207 (10) obj. -4399.91 iterations 11
Cbc0038I Pass  34: suminf.    0.77994 (3) obj. -4399.91 iterations 7
Cbc0038I Pass  35: suminf.    1.30000 (3) obj. -5449.54 iterations 4
Cbc0038I Pass  36: suminf.    1.36362 (7) obj. -4399.91 iterations 17
Cbc0038I Pass  37: suminf.    1.15613 (4) obj. -4399.91 iterations 10
Cbc0038I Pass  38: suminf.    1.20000 (3) obj. -4844.5 iterations 6
Cbc0038I Pass  39: suminf.    0.81029 (3) obj. -4399.91 iterations 1
Cbc0038I Pass  40: suminf.    1.23254 (5) obj. -4399.91 iterations 7
Cbc0038I Pass  41: suminf.    0.81029 (3) obj. -4399.91 iterations 5
Cbc0038I Pass  42: suminf.    1.21882 (8) obj. -4399.91 iterations 9
Cbc0038I Pass  43: suminf.    0.79371 (3) obj. -4399.91 iterations 4
Cbc0038I Pass  44: suminf.    0.80000 (3) obj. -4407.08 iterations 3
Cbc0038I Pass  45: suminf.    1.21882 (8) obj. -4399.91 iterations 5
Cbc0038I Pass  46: suminf.    0.97675 (4) obj. -4399.91 iterations 22
Cbc0038I Pass  47: suminf.    0.97675 (4) obj. -4399.91 iterations 4
Cbc0038I Pass  48: suminf.    1.40000 (3) obj. -5325.83 iterations 4
Cbc0038I Pass  49: suminf.    0.78838 (3) obj. -4399.91 iterations 1
Cbc0038I Pass  50: suminf.    0.97675 (4) obj. -4399.91 iterations 5
Cbc0038I Pass  51: suminf.    2.42984 (11) obj. -4399.91 iterations 28
Cbc0038I Pass  52: suminf.    1.11107 (4) obj. -4399.91 iterations 13
Cbc0038I Pass  53: suminf.    1.00000 (3) obj. -4620.96 iterations 4
Cbc0038I Pass  54: suminf.    0.80624 (3) obj. -4399.91 iterations 1
Cbc0038I Pass  55: suminf.    2.48316 (11) obj. -4399.91 iterations 10
Cbc0038I Pass  56: suminf.    1.12054 (4) obj. -4399.91 iterations 9
Cbc0038I Pass  57: suminf.    1.35000 (3) obj. -5012.05 iterations 4
Cbc0038I Pass  58: suminf.    0.81343 (3) obj. -4399.91 iterations 1
Cbc0038I Pass  59: suminf.    1.47055 (6) obj. -4399.91 iterations 7
Cbc0038I Pass  60: suminf.    0.94696 (5) obj. -4399.91 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 70 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3652.22 - took 0.02 seconds
Cbc0012I Integer solution of -3652.2165 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 130 rows 70 columns, reduced to 13 rows 9 columns
Cbc0031I 6 added rows had average density of 13.333333
Cbc0013I At root node, 6 cuts changed objective from -6678.8955 to -3659.406 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 75 row cuts average 2.6 elements, 19 column cuts (19 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 34 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0012I Integer solution of -3653.5577 found by DiveCoefficient after 232 iterations and 3 nodes (0.47 seconds)
Cbc0004I Integer solution of -3655.719 found after 264 iterations and 6 nodes (0.52 seconds)
Cbc0001I Search completed - best objective -3655.719, took 264 iterations and 6 nodes (0.52 seconds)
Cbc0032I Strong branching done 44 times (175 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 116 (-36) columns and 2000 (-1303) elements
Clp1000I sum of infeasibilities 5.78241e-06 - average 5.35409e-08, 112 fixed columns
Coin0506I Presolve 4 (-104) rows, 4 (-112) columns and 10 (-1990) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 6654.4651
Clp0000I Optimal - objective value 6654.4651
Coin0511I After Postsolve, objective 6654.4651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7151028 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 6739.9605
Clp0000I Optimal - objective value 6739.9605
Clp0000I Optimal - objective value 6739.9605
Coin0511I After Postsolve, objective 6739.9605, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6739.96052 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 116 columns (116 integer (116 of which binary)) and 2007 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.952%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.3631
Cbc0038I Pass   1: suminf.    1.35132 (32) obj. -3557.62 iterations 8
Cbc0038I Pass   2: suminf.    1.35132 (32) obj. -3557.62 iterations 0
Cbc0038I Pass   3: suminf.    0.14647 (5) obj. -3518.5 iterations 29
Cbc0038I Solution found of -3513.64
Cbc0038I Rounding solution of -3514.13 is better than previous of -3513.64

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 39 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -3834.66
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.76941 (38) obj. -3834.66 iterations 1
Cbc0038I Pass   5: suminf.    1.76941 (38) obj. -3834.66 iterations 0
Cbc0038I Pass   6: suminf.    0.49832 (14) obj. -3834.66 iterations 24
Cbc0038I Pass   7: suminf.    0.49832 (14) obj. -3834.66 iterations 0
Cbc0038I Pass   8: suminf.    0.25000 (3) obj. -6608.58 iterations 17
Cbc0038I Pass   9: suminf.    0.31850 (3) obj. -3834.66 iterations 1
Cbc0038I Pass  10: suminf.    1.06170 (16) obj. -3834.66 iterations 24
Cbc0038I Pass  11: suminf.    1.06170 (16) obj. -3834.66 iterations 4
Cbc0038I Pass  12: suminf.    0.86538 (4) obj. -6039.05 iterations 14
Cbc0038I Pass  13: suminf.    0.31850 (3) obj. -3834.66 iterations 2
Cbc0038I Pass  14: suminf.    0.75000 (3) obj. -6038.17 iterations 3
Cbc0038I Pass  15: suminf.    3.55978 (15) obj. -3834.66 iterations 18
Cbc0038I Pass  16: suminf.    1.07689 (12) obj. -3834.66 iterations 4
Cbc0038I Pass  17: suminf.    0.62873 (12) obj. -3834.66 iterations 1
Cbc0038I Pass  18: suminf.    1.15000 (3) obj. -4833.91 iterations 13
Cbc0038I Pass  19: suminf.    0.27410 (3) obj. -3834.66 iterations 2
Cbc0038I Pass  20: suminf.    1.29940 (15) obj. -3834.66 iterations 17
Cbc0038I Pass  21: suminf.    0.49086 (13) obj. -3834.66 iterations 5
Cbc0038I Pass  22: suminf.    0.67544 (3) obj. -4242.42 iterations 14
Cbc0038I Pass  23: suminf.    0.24784 (3) obj. -3834.66 iterations 3
Cbc0038I Pass  24: suminf.    1.08244 (13) obj. -3834.66 iterations 17
Cbc0038I Pass  25: suminf.    0.92656 (12) obj. -3834.66 iterations 3
Cbc0038I Pass  26: suminf.    1.20000 (3) obj. -5547.75 iterations 12
Cbc0038I Pass  27: suminf.    0.29837 (3) obj. -3834.66 iterations 1
Cbc0038I Pass  28: suminf.    0.88250 (9) obj. -3834.66 iterations 12
Cbc0038I Pass  29: suminf.    0.53356 (8) obj. -3834.66 iterations 4
Cbc0038I Pass  30: suminf.    1.20000 (3) obj. -5543.75 iterations 9
Cbc0038I Pass  31: suminf.    1.20000 (3) obj. -5543.75 iterations 0
Cbc0038I Pass  32: suminf.    0.30188 (3) obj. -3834.66 iterations 1
Cbc0038I Pass  33: suminf.    1.27297 (14) obj. -3834.66 iterations 17
Cbc0038I Rounding solution of -3530.47 is better than previous of -3514.13

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 52 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -3530.47 to -3652.22 (0.07 seconds)
Cbc0038I Round again with cutoff of -4411.61
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.64011 (38) obj. -4411.61 iterations 0
Cbc0038I Pass  34: suminf.    2.64011 (38) obj. -4411.61 iterations 0
Cbc0038I Pass  35: suminf.    1.47193 (22) obj. -4411.61 iterations 16
Cbc0038I Pass  36: suminf.    1.47193 (22) obj. -4411.61 iterations 0
Cbc0038I Pass  37: suminf.    0.69980 (10) obj. -4411.61 iterations 12
Cbc0038I Pass  38: suminf.    0.69980 (10) obj. -4411.61 iterations 0
Cbc0038I Pass  39: suminf.    0.25000 (3) obj. -6608.58 iterations 11
Cbc0038I Pass  40: suminf.    0.82423 (3) obj. -4411.61 iterations 1
Cbc0038I Pass  41: suminf.    2.88220 (13) obj. -4411.61 iterations 25
Cbc0038I Pass  42: suminf.    1.52731 (10) obj. -4411.61 iterations 10
Cbc0038I Pass  43: suminf.    1.35000 (3) obj. -5364.58 iterations 9
Cbc0038I Pass  44: suminf.    0.81466 (3) obj. -4411.61 iterations 1
Cbc0038I Pass  45: suminf.    1.77505 (14) obj. -4411.61 iterations 15
Cbc0038I Pass  46: suminf.    1.77505 (14) obj. -4411.61 iterations 1
Cbc0038I Pass  47: suminf.    0.75949 (4) obj. -6226.32 iterations 12
Cbc0038I Pass  48: suminf.    0.75000 (3) obj. -6028.65 iterations 1
Cbc0038I Pass  49: suminf.    0.83256 (3) obj. -4411.61 iterations 1
Cbc0038I Pass  50: suminf.    1.50829 (15) obj. -4411.61 iterations 19
Cbc0038I Pass  51: suminf.    1.50829 (15) obj. -4411.61 iterations 4
Cbc0038I Pass  52: suminf.    1.15709 (8) obj. -4411.61 iterations 7
Cbc0038I Pass  53: suminf.    1.15709 (8) obj. -4411.61 iterations 0
Cbc0038I Pass  54: suminf.    1.20000 (3) obj. -5545.24 iterations 6
Cbc0038I Pass  55: suminf.    0.80630 (3) obj. -4411.61 iterations 1
Cbc0038I Pass  56: suminf.    1.76061 (12) obj. -4411.61 iterations 25
Cbc0038I Pass  57: suminf.    1.34829 (10) obj. -4411.61 iterations 11
Cbc0038I Pass  58: suminf.    1.36709 (4) obj. -4736.58 iterations 9
Cbc0038I Pass  59: suminf.    0.99197 (4) obj. -4411.61 iterations 1
Cbc0038I Pass  60: suminf.    1.07483 (4) obj. -4411.61 iterations 4
Cbc0038I Pass  61: suminf.    1.07483 (4) obj. -4411.61 iterations 0
Cbc0038I Pass  62: suminf.    2.38837 (14) obj. -4411.61 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 48 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -3652.22 - took 0.08 seconds
Cbc0012I Integer solution of -3652.2165 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 108 rows 116 columns, reduced to 42 rows 43 columns
Cbc0031I 29 added rows had average density of 6.4827586
Cbc0013I At root node, 29 cuts changed objective from -6719.4054 to -3656.2328 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 311 row cuts average 2.2 elements, 25 column cuts (25 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 37 row cuts average 39.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0016I Integer solution of -3655.719 found by strong branching after 185 iterations and 0 nodes (0.29 seconds)
Cbc0010I After 0 nodes, 1 on tree, -3655.719 best solution, best possible -3656.1829 (0.29 seconds)
Cbc0001I Search completed - best objective -3655.719, took 201 iterations and 2 nodes (0.29 seconds)
Cbc0032I Strong branching done 62 times (305 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.30

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 130 (-25) rows, 70 (-8) columns and 392 (-61) elements
Clp1000I sum of infeasibilities 0 - average 0, 65 fixed columns
Coin0506I Presolve 8 (-122) rows, 5 (-65) columns and 18 (-374) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 6678.8955
Clp0000I Optimal - objective value 6678.8955
Coin0511I After Postsolve, objective 6678.8955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24922509 - largest nonzero change 0 ( 0%) - largest zero change 2.9598841e-05
Clp0000I Optimal - objective value 6678.8955
Clp0000I Optimal - objective value 6678.8955
Clp0000I Optimal - objective value 6678.8955
Coin0511I After Postsolve, objective 6678.8955, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6678.895468 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 70 columns (69 integer (69 of which binary)) and 395 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.348%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.253165
Cbc0038I Pass   1: suminf.    0.20833 (1) obj. -5240.78 iterations 2
Cbc0038I Solution found of 1040.62
Cbc0038I Relaxing continuous gives 1040.62
Cbc0038I Rounding solution of 1010.66 is better than previous of 1040.62

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 70 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 1010.66 to -3513.64 (0.02 seconds)
Cbc0038I Round again with cutoff of -3830.17
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.25000 (3) obj. -6614.41 iterations 2
Cbc0038I Pass   3: suminf.    0.28563 (3) obj. -3830.17 iterations 4
Cbc0038I Pass   4: suminf.    1.07304 (8) obj. -3830.17 iterations 17
Cbc0038I Pass   5: suminf.    0.25868 (3) obj. -3830.17 iterations 11
Cbc0038I Pass   6: suminf.    0.80000 (3) obj. -4447.72 iterations 3
Cbc0038I Pass   7: suminf.    0.43997 (4) obj. -3830.17 iterations 10
Cbc0038I Pass   8: suminf.    0.43997 (4) obj. -3830.17 iterations 3
Cbc0038I Pass   9: suminf.    1.05000 (3) obj. -4725 iterations 9
Cbc0038I Pass  10: suminf.    0.26563 (3) obj. -3830.17 iterations 1
Cbc0038I Pass  11: suminf.    1.23033 (9) obj. -3830.17 iterations 21
Cbc0038I Pass  12: suminf.    0.73127 (5) obj. -3830.17 iterations 10
Cbc0038I Pass  13: suminf.    0.28613 (3) obj. -3830.17 iterations 10
Cbc0038I Pass  14: suminf.    0.57237 (3) obj. -4066.65 iterations 4
Cbc0038I Pass  15: suminf.    0.97410 (11) obj. -3830.17 iterations 16
Cbc0038I Pass  16: suminf.    0.38147 (4) obj. -3830.17 iterations 9
Cbc0038I Pass  17: suminf.    0.77219 (4) obj. -3893.32 iterations 5
Cbc0038I Pass  18: suminf.    1.47387 (7) obj. -3830.17 iterations 13
Cbc0038I Pass  19: suminf.    0.27480 (3) obj. -3830.17 iterations 7
Cbc0038I Pass  20: suminf.    1.20000 (3) obj. -4885.65 iterations 3
Cbc0038I Pass  21: suminf.    1.38864 (6) obj. -3830.17 iterations 5
Cbc0038I Pass  22: suminf.    0.79673 (7) obj. -3830.17 iterations 15
Cbc0038I Pass  23: suminf.    0.61041 (5) obj. -3830.17 iterations 9
Cbc0038I Pass  24: suminf.    1.20000 (3) obj. -5583.24 iterations 9
Cbc0038I Pass  25: suminf.    1.20000 (3) obj. -5583.24 iterations 0
Cbc0038I Pass  26: suminf.    0.26333 (3) obj. -3830.17 iterations 4
Cbc0038I Pass  27: suminf.    1.16262 (8) obj. -3830.17 iterations 12
Cbc0038I Pass  28: suminf.    0.72241 (5) obj. -3830.17 iterations 6
Cbc0038I Pass  29: suminf.    0.40000 (3) obj. -3958.71 iterations 4
Cbc0038I Pass  30: suminf.    0.28733 (3) obj. -3830.17 iterations 1
Cbc0038I Pass  31: suminf.    0.49300 (5) obj. -3830.17 iterations 7
Cbc0038I Rounding solution of -3585.57 is better than previous of -3513.64

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 70 columns, reduced to 51 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -3585.57 to -3652.22 (0.03 seconds)
Cbc0038I Round again with cutoff of -4399.91
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.25000 (3) obj. -6614.41 iterations 0
Cbc0038I Pass  32: suminf.    0.78505 (3) obj. -4399.91 iterations 11
Cbc0038I Pass  33: suminf.    2.00207 (10) obj. -4399.91 iterations 11
Cbc0038I Pass  34: suminf.    0.77994 (3) obj. -4399.91 iterations 7
Cbc0038I Pass  35: suminf.    1.30000 (3) obj. -5449.54 iterations 4
Cbc0038I Pass  36: suminf.    1.36362 (7) obj. -4399.91 iterations 17
Cbc0038I Pass  37: suminf.    1.15613 (4) obj. -4399.91 iterations 10
Cbc0038I Pass  38: suminf.    1.20000 (3) obj. -4844.5 iterations 6
Cbc0038I Pass  39: suminf.    0.81029 (3) obj. -4399.91 iterations 1
Cbc0038I Pass  40: suminf.    1.23254 (5) obj. -4399.91 iterations 7
Cbc0038I Pass  41: suminf.    0.81029 (3) obj. -4399.91 iterations 5
Cbc0038I Pass  42: suminf.    1.21882 (8) obj. -4399.91 iterations 9
Cbc0038I Pass  43: suminf.    0.79371 (3) obj. -4399.91 iterations 4
Cbc0038I Pass  44: suminf.    0.80000 (3) obj. -4407.08 iterations 3
Cbc0038I Pass  45: suminf.    1.21882 (8) obj. -4399.91 iterations 5
Cbc0038I Pass  46: suminf.    0.97675 (4) obj. -4399.91 iterations 22
Cbc0038I Pass  47: suminf.    0.97675 (4) obj. -4399.91 iterations 4
Cbc0038I Pass  48: suminf.    1.40000 (3) obj. -5325.83 iterations 4
Cbc0038I Pass  49: suminf.    0.78838 (3) obj. -4399.91 iterations 1
Cbc0038I Pass  50: suminf.    0.97675 (4) obj. -4399.91 iterations 5
Cbc0038I Pass  51: suminf.    2.42984 (11) obj. -4399.91 iterations 28
Cbc0038I Pass  52: suminf.    1.11107 (4) obj. -4399.91 iterations 13
Cbc0038I Pass  53: suminf.    1.00000 (3) obj. -4620.96 iterations 4
Cbc0038I Pass  54: suminf.    0.80624 (3) obj. -4399.91 iterations 1
Cbc0038I Pass  55: suminf.    2.48316 (11) obj. -4399.91 iterations 10
Cbc0038I Pass  56: suminf.    1.12054 (4) obj. -4399.91 iterations 9
Cbc0038I Pass  57: suminf.    1.35000 (3) obj. -5012.05 iterations 4
Cbc0038I Pass  58: suminf.    0.81343 (3) obj. -4399.91 iterations 1
Cbc0038I Pass  59: suminf.    1.47055 (6) obj. -4399.91 iterations 7
Cbc0038I Pass  60: suminf.    0.94696 (5) obj. -4399.91 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 70 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3652.22 - took 0.03 seconds
Cbc0012I Integer solution of -3652.2165 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 130 rows 70 columns, reduced to 13 rows 9 columns
Cbc0031I 6 added rows had average density of 13.333333
Cbc0013I At root node, 6 cuts changed objective from -6678.8955 to -3659.406 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 75 row cuts average 2.6 elements, 19 column cuts (19 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 34 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0012I Integer solution of -3653.5577 found by DiveCoefficient after 232 iterations and 3 nodes (0.55 seconds)
Cbc0004I Integer solution of -3655.719 found after 264 iterations and 6 nodes (0.60 seconds)
Cbc0001I Search completed - best objective -3655.719, took 264 iterations and 6 nodes (0.60 seconds)
Cbc0032I Strong branching done 44 times (175 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 116 (-37) columns and 2000 (-1304) elements
Clp1000I sum of infeasibilities 5.78241e-06 - average 5.35409e-08, 112 fixed columns
Coin0506I Presolve 4 (-104) rows, 4 (-112) columns and 10 (-1990) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 6654.4651
Clp0000I Optimal - objective value 6654.4651
Coin0511I After Postsolve, objective 6654.4651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7151028 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 6739.9605
Clp0000I Optimal - objective value 6739.9605
Clp0000I Optimal - objective value 6739.9605
Coin0511I After Postsolve, objective 6739.9605, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6739.96052 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 116 columns (116 integer (116 of which binary)) and 2007 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.952%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 5.3631
Cbc0038I Pass   1: suminf.    1.35132 (32) obj. -3557.62 iterations 8
Cbc0038I Pass   2: suminf.    1.35132 (32) obj. -3557.62 iterations 0
Cbc0038I Pass   3: suminf.    0.14647 (5) obj. -3518.5 iterations 29
Cbc0038I Solution found of -3513.64
Cbc0038I Rounding solution of -3514.13 is better than previous of -3513.64

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 39 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -3834.66
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.76941 (38) obj. -3834.66 iterations 1
Cbc0038I Pass   5: suminf.    1.76941 (38) obj. -3834.66 iterations 0
Cbc0038I Pass   6: suminf.    0.49832 (14) obj. -3834.66 iterations 24
Cbc0038I Pass   7: suminf.    0.49832 (14) obj. -3834.66 iterations 0
Cbc0038I Pass   8: suminf.    0.25000 (3) obj. -6608.58 iterations 17
Cbc0038I Pass   9: suminf.    0.31850 (3) obj. -3834.66 iterations 1
Cbc0038I Pass  10: suminf.    1.06170 (16) obj. -3834.66 iterations 24
Cbc0038I Pass  11: suminf.    1.06170 (16) obj. -3834.66 iterations 4
Cbc0038I Pass  12: suminf.    0.86538 (4) obj. -6039.05 iterations 14
Cbc0038I Pass  13: suminf.    0.31850 (3) obj. -3834.66 iterations 2
Cbc0038I Pass  14: suminf.    0.75000 (3) obj. -6038.17 iterations 3
Cbc0038I Pass  15: suminf.    3.55978 (15) obj. -3834.66 iterations 18
Cbc0038I Pass  16: suminf.    1.07689 (12) obj. -3834.66 iterations 4
Cbc0038I Pass  17: suminf.    0.62873 (12) obj. -3834.66 iterations 1
Cbc0038I Pass  18: suminf.    1.15000 (3) obj. -4833.91 iterations 13
Cbc0038I Pass  19: suminf.    0.27410 (3) obj. -3834.66 iterations 2
Cbc0038I Pass  20: suminf.    1.29940 (15) obj. -3834.66 iterations 17
Cbc0038I Pass  21: suminf.    0.49086 (13) obj. -3834.66 iterations 5
Cbc0038I Pass  22: suminf.    0.67544 (3) obj. -4242.42 iterations 14
Cbc0038I Pass  23: suminf.    0.24784 (3) obj. -3834.66 iterations 3
Cbc0038I Pass  24: suminf.    1.08244 (13) obj. -3834.66 iterations 17
Cbc0038I Pass  25: suminf.    0.92656 (12) obj. -3834.66 iterations 3
Cbc0038I Pass  26: suminf.    1.20000 (3) obj. -5547.75 iterations 12
Cbc0038I Pass  27: suminf.    0.29837 (3) obj. -3834.66 iterations 1
Cbc0038I Pass  28: suminf.    0.88250 (9) obj. -3834.66 iterations 12
Cbc0038I Pass  29: suminf.    0.53356 (8) obj. -3834.66 iterations 4
Cbc0038I Pass  30: suminf.    1.20000 (3) obj. -5543.75 iterations 9
Cbc0038I Pass  31: suminf.    1.20000 (3) obj. -5543.75 iterations 0
Cbc0038I Pass  32: suminf.    0.30188 (3) obj. -3834.66 iterations 1
Cbc0038I Pass  33: suminf.    1.27297 (14) obj. -3834.66 iterations 17
Cbc0038I Rounding solution of -3530.47 is better than previous of -3514.13

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 52 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -3530.47 to -3652.22 (0.08 seconds)
Cbc0038I Round again with cutoff of -4411.61
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.64011 (38) obj. -4411.61 iterations 0
Cbc0038I Pass  34: suminf.    2.64011 (38) obj. -4411.61 iterations 0
Cbc0038I Pass  35: suminf.    1.47193 (22) obj. -4411.61 iterations 16
Cbc0038I Pass  36: suminf.    1.47193 (22) obj. -4411.61 iterations 0
Cbc0038I Pass  37: suminf.    0.69980 (10) obj. -4411.61 iterations 12
Cbc0038I Pass  38: suminf.    0.69980 (10) obj. -4411.61 iterations 0
Cbc0038I Pass  39: suminf.    0.25000 (3) obj. -6608.58 iterations 11
Cbc0038I Pass  40: suminf.    0.82423 (3) obj. -4411.61 iterations 1
Cbc0038I Pass  41: suminf.    2.88220 (13) obj. -4411.61 iterations 25
Cbc0038I Pass  42: suminf.    1.52731 (10) obj. -4411.61 iterations 10
Cbc0038I Pass  43: suminf.    1.35000 (3) obj. -5364.58 iterations 9
Cbc0038I Pass  44: suminf.    0.81466 (3) obj. -4411.61 iterations 1
Cbc0038I Pass  45: suminf.    1.77505 (14) obj. -4411.61 iterations 15
Cbc0038I Pass  46: suminf.    1.77505 (14) obj. -4411.61 iterations 1
Cbc0038I Pass  47: suminf.    0.75949 (4) obj. -6226.32 iterations 12
Cbc0038I Pass  48: suminf.    0.75000 (3) obj. -6028.65 iterations 1
Cbc0038I Pass  49: suminf.    0.83256 (3) obj. -4411.61 iterations 1
Cbc0038I Pass  50: suminf.    1.50829 (15) obj. -4411.61 iterations 19
Cbc0038I Pass  51: suminf.    1.50829 (15) obj. -4411.61 iterations 4
Cbc0038I Pass  52: suminf.    1.15709 (8) obj. -4411.61 iterations 7
Cbc0038I Pass  53: suminf.    1.15709 (8) obj. -4411.61 iterations 0
Cbc0038I Pass  54: suminf.    1.20000 (3) obj. -5545.24 iterations 6
Cbc0038I Pass  55: suminf.    0.80630 (3) obj. -4411.61 iterations 1
Cbc0038I Pass  56: suminf.    1.76061 (12) obj. -4411.61 iterations 25
Cbc0038I Pass  57: suminf.    1.34829 (10) obj. -4411.61 iterations 11
Cbc0038I Pass  58: suminf.    1.36709 (4) obj. -4736.58 iterations 9
Cbc0038I Pass  59: suminf.    0.99197 (4) obj. -4411.61 iterations 1
Cbc0038I Pass  60: suminf.    1.07483 (4) obj. -4411.61 iterations 4
Cbc0038I Pass  61: suminf.    1.07483 (4) obj. -4411.61 iterations 0
Cbc0038I Pass  62: suminf.    2.38837 (14) obj. -4411.61 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 116 columns, reduced to 48 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -3652.22 - took 0.08 seconds
Cbc0012I Integer solution of -3652.2165 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 108 rows 116 columns, reduced to 42 rows 43 columns
Cbc0031I 29 added rows had average density of 6.4827586
Cbc0013I At root node, 29 cuts changed objective from -6719.4054 to -3656.2328 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 311 row cuts average 2.2 elements, 25 column cuts (25 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 37 row cuts average 39.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 101 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 169 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0016I Integer solution of -3655.719 found by strong branching after 185 iterations and 0 nodes (0.31 seconds)
Cbc0010I After 0 nodes, 1 on tree, -3655.719 best solution, best possible -3656.1829 (0.32 seconds)
Cbc0001I Search completed - best objective -3655.719, took 201 iterations and 2 nodes (0.32 seconds)
Cbc0032I Strong branching done 62 times (305 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.32

