Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.21387e-05 - average 2.42773e-07, 2 fixed columns
Coin0506I Presolve 46 (-4) rows, 26 (-2) columns and 136 (-12) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Coin0511I After Postsolve, objective 74.581193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Coin0511I After Postsolve, objective 74.581193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.5811927 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.53591
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.48086 iterations 22
Cbc0038I Solution found of -1.48086
Cbc0038I Relaxing continuous gives -1.48086
Cbc0038I Rounding solution of -14.0743 is better than previous of -1.48086

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -14.0743 to -42.8705 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.999
Cbc0038I Pass   2: suminf.    1.01783 (3) obj. -45.999 iterations 4
Cbc0038I Pass   3: suminf.    0.21138 (1) obj. -45.999 iterations 2
Cbc0038I Pass   4: suminf.    0.21138 (1) obj. -45.999 iterations 1
Cbc0038I Pass   5: suminf.    0.28589 (1) obj. -45.999 iterations 1
Cbc0038I Pass   6: suminf.    0.94115 (4) obj. -45.999 iterations 10
Cbc0038I Pass   7: suminf.    0.76803 (4) obj. -45.999 iterations 4
Cbc0038I Pass   8: suminf.    0.50628 (2) obj. -45.999 iterations 4
Cbc0038I Pass   9: suminf.    0.43460 (2) obj. -45.999 iterations 2
Cbc0038I Pass  10: suminf.    0.22021 (2) obj. -45.999 iterations 3
Cbc0038I Pass  11: suminf.    0.74195 (2) obj. -45.999 iterations 2
Cbc0038I Pass  12: suminf.    2.46743 (7) obj. -45.999 iterations 7
Cbc0038I Pass  13: suminf.    0.45407 (4) obj. -45.999 iterations 6
Cbc0038I Pass  14: suminf.    0.57481 (3) obj. -45.999 iterations 3
Cbc0038I Pass  15: suminf.    0.56371 (3) obj. -45.999 iterations 1
Cbc0038I Pass  16: suminf.    0.75313 (2) obj. -45.999 iterations 1
Cbc0038I Pass  17: suminf.    0.70357 (2) obj. -45.999 iterations 2
Cbc0038I Pass  18: suminf.    0.39666 (2) obj. -45.999 iterations 1
Cbc0038I Pass  19: suminf.    0.40110 (1) obj. -45.999 iterations 2
Cbc0038I Pass  20: suminf.    0.28455 (1) obj. -45.999 iterations 1
Cbc0038I Pass  21: suminf.    0.85249 (3) obj. -45.999 iterations 5
Cbc0038I Pass  22: suminf.    0.16260 (1) obj. -45.999 iterations 3
Cbc0038I Pass  23: suminf.    0.19226 (1) obj. -45.999 iterations 1
Cbc0038I Pass  24: suminf.    0.75013 (2) obj. -45.999 iterations 9
Cbc0038I Pass  25: suminf.    0.32064 (2) obj. -45.999 iterations 8
Cbc0038I Pass  26: suminf.    0.95491 (3) obj. -45.999 iterations 2
Cbc0038I Pass  27: suminf.    0.43834 (2) obj. -45.999 iterations 3
Cbc0038I Pass  28: suminf.    0.74723 (4) obj. -45.999 iterations 7
Cbc0038I Pass  29: suminf.    0.38753 (2) obj. -45.999 iterations 4
Cbc0038I Pass  30: suminf.    0.42142 (2) obj. -45.999 iterations 5
Cbc0038I Pass  31: suminf.    0.82539 (3) obj. -45.999 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -42.8705 to -45.4766 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.6301
Cbc0038I Pass  31: suminf.    1.23518 (3) obj. -51.6301 iterations 0
Cbc0038I Pass  32: suminf.    0.56582 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  33: suminf.    0.43918 (2) obj. -51.6301 iterations 3
Cbc0038I Pass  34: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  35: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  36: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  37: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  38: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  39: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  40: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  41: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  42: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  43: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  44: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  45: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  46: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  47: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  48: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  49: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  50: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  51: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  52: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  53: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  54: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  55: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  56: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  57: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  58: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  59: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  60: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -45.4766 - took 0.08 seconds
Cbc0012I Integer solution of -45.47663 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 19 columns
Cbc0031I 12 added rows had average density of 16
Cbc0013I At root node, 12 cuts changed objective from -74.154543 to -58.101783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1403 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 776 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0016I Integer solution of -45.734407 found by strong branching after 3184 iterations and 13 nodes (0.27 seconds)
Cbc0001I Search completed - best objective -45.73440699999999, took 3188 iterations and 14 nodes (0.27 seconds)
Cbc0032I Strong branching done 166 times (1751 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-20) rows, 48 (-14) columns and 417 (-229) elements
Clp1000I sum of infeasibilities 7.39779e-08 - average 1.72042e-09, 8 fixed columns
Coin0506I Presolve 37 (-6) rows, 40 (-8) columns and 308 (-109) elements
Clp0029I End of values pass after 40 iterations
Clp0014I Perturbing problem by 0.001% of 1.3905383 - largest nonzero change 2.4820008e-05 ( 0.0019019041%) - largest zero change 2.8871615e-05
Clp0000I Optimal - objective value 85.476539
Clp0000I Optimal - objective value 85.476539
Coin0511I After Postsolve, objective 85.476539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.476539
Clp0000I Optimal - objective value 85.476539
Clp0000I Optimal - objective value 85.476539
Coin0511I After Postsolve, objective 85.476539, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.47653918 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 47 columns (47 integer (47 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.138%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.77715
Cbc0038I Pass   1: suminf.    1.89919 (12) obj. -51.5673 iterations 7
Cbc0038I Solution found of -31.1493
Cbc0038I Rounding solution of -35.4053 is better than previous of -31.1493

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -38.5125
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.89919 (12) obj. -51.5673 iterations 0
Cbc0038I Pass   3: suminf.    0.16327 (1) obj. -38.5125 iterations 25
Cbc0038I Pass   4: suminf.    0.30894 (1) obj. -45.0824 iterations 1
Cbc0038I Pass   5: suminf.    2.94222 (7) obj. -38.5125 iterations 7
Cbc0038I Pass   6: suminf.    0.90968 (3) obj. -42.8943 iterations 7
Cbc0038I Pass   7: suminf.    0.42671 (2) obj. -38.5125 iterations 4
Cbc0038I Pass   8: suminf.    0.26016 (1) obj. -42.8824 iterations 2
Cbc0038I Pass   9: suminf.    0.16327 (1) obj. -38.5125 iterations 1
Cbc0038I Pass  10: suminf.    2.97126 (12) obj. -38.5125 iterations 12
Cbc0038I Pass  11: suminf.    2.22373 (8) obj. -38.5125 iterations 3
Cbc0038I Pass  12: suminf.    0.65019 (2) obj. -38.5125 iterations 7
Cbc0038I Pass  13: suminf.    0.45580 (2) obj. -42.6847 iterations 2
Cbc0038I Pass  14: suminf.    1.21736 (4) obj. -38.5125 iterations 4
Cbc0038I Pass  15: suminf.    0.45580 (2) obj. -42.6847 iterations 2
Cbc0038I Pass  16: suminf.    0.62851 (3) obj. -38.5125 iterations 6
Cbc0038I Pass  17: suminf.    0.61233 (3) obj. -38.5125 iterations 3
Cbc0038I Pass  18: suminf.    0.90678 (3) obj. -38.5125 iterations 1
Cbc0038I Pass  19: suminf.    1.28615 (4) obj. -39.2161 iterations 10
Cbc0038I Pass  20: suminf.    1.11899 (5) obj. -38.5125 iterations 6
Cbc0038I Pass  21: suminf.    0.82409 (3) obj. -38.5125 iterations 4
Cbc0038I Pass  22: suminf.    0.82409 (3) obj. -38.5125 iterations 0
Cbc0038I Pass  23: suminf.    0.91973 (3) obj. -38.5125 iterations 1
Cbc0038I Pass  24: suminf.    1.49328 (11) obj. -44.5956 iterations 19
Cbc0038I Pass  25: suminf.    1.17830 (7) obj. -45.7926 iterations 3
Cbc0038I Pass  26: suminf.    0.60470 (2) obj. -38.5125 iterations 11
Cbc0038I Pass  27: suminf.    0.31579 (1) obj. -40.0295 iterations 2
Cbc0038I Pass  28: suminf.    2.41060 (11) obj. -38.5125 iterations 17
Cbc0038I Pass  29: suminf.    1.17067 (6) obj. -38.5125 iterations 8
Cbc0038I Pass  30: suminf.    0.85527 (2) obj. -40.945 iterations 5
Cbc0038I Pass  31: suminf.    0.49899 (2) obj. -38.5125 iterations 4
Cbc0038I Rounding solution of -41.4784 is better than previous of -35.4053

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 35 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -41.4784 to -45.7344 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.8829
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.89919 (12) obj. -51.5673 iterations 0
Cbc0038I Pass  32: suminf.    0.48056 (3) obj. -49.8829 iterations 23
Cbc0038I Pass  33: suminf.    0.53295 (2) obj. -50.8861 iterations 1
Cbc0038I Pass  34: suminf.    1.56044 (5) obj. -49.8829 iterations 8
Cbc0038I Pass  35: suminf.    0.90510 (3) obj. -49.8829 iterations 5
Cbc0038I Pass  36: suminf.    1.08637 (3) obj. -49.8829 iterations 1
Cbc0038I Pass  37: suminf.    1.36596 (5) obj. -49.8829 iterations 6
Cbc0038I Pass  38: suminf.    1.26935 (5) obj. -49.8829 iterations 6
Cbc0038I Pass  39: suminf.    1.58214 (5) obj. -49.8829 iterations 5
Cbc0038I Pass  40: suminf.    1.58214 (5) obj. -49.8829 iterations 1
Cbc0038I Pass  41: suminf.    1.70922 (5) obj. -49.8829 iterations 5
Cbc0038I Pass  42: suminf.    1.50229 (5) obj. -49.8829 iterations 4
Cbc0038I Pass  43: suminf.    1.88318 (6) obj. -49.8829 iterations 10
Cbc0038I Pass  44: suminf.    1.88318 (6) obj. -49.8829 iterations 1
Cbc0038I Pass  45: suminf.    0.78594 (3) obj. -50.5538 iterations 4
Cbc0038I Pass  46: suminf.    0.70208 (3) obj. -49.8829 iterations 1
Cbc0038I Pass  47: suminf.    1.65938 (6) obj. -49.8829 iterations 6
Cbc0038I Pass  48: suminf.    1.65938 (6) obj. -49.8829 iterations 0
Cbc0038I Pass  49: suminf.    0.76297 (3) obj. -49.8829 iterations 5
Cbc0038I Pass  50: suminf.    0.76297 (3) obj. -49.8829 iterations 0
Cbc0038I Pass  51: suminf.    0.88997 (3) obj. -50.8989 iterations 1
Cbc0038I Pass  52: suminf.    5.09174 (12) obj. -49.8829 iterations 12
Cbc0038I Pass  53: suminf.    1.90218 (7) obj. -49.8829 iterations 8
Cbc0038I Pass  54: suminf.    1.44639 (6) obj. -49.8829 iterations 3
Cbc0038I Pass  55: suminf.    1.44639 (6) obj. -49.8829 iterations 0
Cbc0038I Pass  56: suminf.    1.10146 (3) obj. -49.8829 iterations 6
Cbc0038I Pass  57: suminf.    0.79425 (3) obj. -49.8829 iterations 1
Cbc0038I Pass  58: suminf.    0.93382 (3) obj. -50.9994 iterations 1
Cbc0038I Pass  59: suminf.    0.64701 (4) obj. -49.8829 iterations 6
Cbc0038I Pass  60: suminf.    0.64239 (4) obj. -49.8829 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 47 columns, reduced to 27 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -45.7344 - took 0.04 seconds
Cbc0012I Integer solution of -45.734407 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 41 rows 47 columns, reduced to 12 rows 15 columns
Cbc0031I 16 added rows had average density of 16.9375
Cbc0013I At root node, 16 cuts changed objective from -66.476496 to -49.559939 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 740 row cuts average 2.2 elements, 8 column cuts (8 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 521 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 140 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45.734407 best solution, best possible -49.559939 (1.42 seconds)
Cbc0001I Search completed - best objective -45.73440699999999, took 1564 iterations and 10 nodes (1.80 seconds)
Cbc0032I Strong branching done 172 times (1630 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.81

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-15) rows, 28 (-5) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 1.21387e-05 - average 2.42773e-07, 2 fixed columns
Coin0506I Presolve 46 (-4) rows, 26 (-2) columns and 136 (-12) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Coin0511I After Postsolve, objective 74.581193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Clp0000I Optimal - objective value 74.581193
Coin0511I After Postsolve, objective 74.581193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 74.5811927 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 28 columns (27 integer (27 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.53591
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.48086 iterations 22
Cbc0038I Solution found of -1.48086
Cbc0038I Relaxing continuous gives -1.48086
Cbc0038I Rounding solution of -14.0743 is better than previous of -1.48086

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -14.0743 to -42.8705 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.999
Cbc0038I Pass   2: suminf.    1.01783 (3) obj. -45.999 iterations 4
Cbc0038I Pass   3: suminf.    0.21138 (1) obj. -45.999 iterations 2
Cbc0038I Pass   4: suminf.    0.21138 (1) obj. -45.999 iterations 1
Cbc0038I Pass   5: suminf.    0.28589 (1) obj. -45.999 iterations 1
Cbc0038I Pass   6: suminf.    0.94115 (4) obj. -45.999 iterations 10
Cbc0038I Pass   7: suminf.    0.76803 (4) obj. -45.999 iterations 4
Cbc0038I Pass   8: suminf.    0.50628 (2) obj. -45.999 iterations 4
Cbc0038I Pass   9: suminf.    0.43460 (2) obj. -45.999 iterations 2
Cbc0038I Pass  10: suminf.    0.22021 (2) obj. -45.999 iterations 3
Cbc0038I Pass  11: suminf.    0.74195 (2) obj. -45.999 iterations 2
Cbc0038I Pass  12: suminf.    2.46743 (7) obj. -45.999 iterations 7
Cbc0038I Pass  13: suminf.    0.45407 (4) obj. -45.999 iterations 6
Cbc0038I Pass  14: suminf.    0.57481 (3) obj. -45.999 iterations 3
Cbc0038I Pass  15: suminf.    0.56371 (3) obj. -45.999 iterations 1
Cbc0038I Pass  16: suminf.    0.75313 (2) obj. -45.999 iterations 1
Cbc0038I Pass  17: suminf.    0.70357 (2) obj. -45.999 iterations 2
Cbc0038I Pass  18: suminf.    0.39666 (2) obj. -45.999 iterations 1
Cbc0038I Pass  19: suminf.    0.40110 (1) obj. -45.999 iterations 2
Cbc0038I Pass  20: suminf.    0.28455 (1) obj. -45.999 iterations 1
Cbc0038I Pass  21: suminf.    0.85249 (3) obj. -45.999 iterations 5
Cbc0038I Pass  22: suminf.    0.16260 (1) obj. -45.999 iterations 3
Cbc0038I Pass  23: suminf.    0.19226 (1) obj. -45.999 iterations 1
Cbc0038I Pass  24: suminf.    0.75013 (2) obj. -45.999 iterations 9
Cbc0038I Pass  25: suminf.    0.32064 (2) obj. -45.999 iterations 8
Cbc0038I Pass  26: suminf.    0.95491 (3) obj. -45.999 iterations 2
Cbc0038I Pass  27: suminf.    0.43834 (2) obj. -45.999 iterations 3
Cbc0038I Pass  28: suminf.    0.74723 (4) obj. -45.999 iterations 7
Cbc0038I Pass  29: suminf.    0.38753 (2) obj. -45.999 iterations 4
Cbc0038I Pass  30: suminf.    0.42142 (2) obj. -45.999 iterations 5
Cbc0038I Pass  31: suminf.    0.82539 (3) obj. -45.999 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -42.8705 to -45.4766 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.6301
Cbc0038I Pass  31: suminf.    1.23518 (3) obj. -51.6301 iterations 0
Cbc0038I Pass  32: suminf.    0.56582 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  33: suminf.    0.43918 (2) obj. -51.6301 iterations 3
Cbc0038I Pass  34: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  35: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  36: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  37: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  38: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  39: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  40: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  41: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  42: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  43: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  44: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  45: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  46: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  47: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  48: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  49: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  50: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  51: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  52: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  53: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  54: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  55: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I Pass  56: suminf.    0.83466 (3) obj. -51.6301 iterations 2
Cbc0038I Pass  57: suminf.    0.69723 (4) obj. -51.6301 iterations 1
Cbc0038I Pass  58: suminf.    0.43918 (2) obj. -51.6301 iterations 6
Cbc0038I Pass  59: suminf.    0.96330 (3) obj. -51.6301 iterations 6
Cbc0038I Pass  60: suminf.    0.71399 (2) obj. -51.6301 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -45.4766 - took 0.05 seconds
Cbc0012I Integer solution of -45.47663 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 28 columns, reduced to 33 rows 19 columns
Cbc0031I 12 added rows had average density of 16
Cbc0013I At root node, 12 cuts changed objective from -74.154543 to -58.101783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1403 row cuts average 4.5 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 776 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 111 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0016I Integer solution of -45.734407 found by strong branching after 3184 iterations and 13 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -45.73440699999999, took 3188 iterations and 14 nodes (0.29 seconds)
Cbc0032I Strong branching done 166 times (1751 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-23) rows, 46 (-17) columns and 377 (-272) elements
Clp1000I sum of infeasibilities 3.59715e-08 - average 8.56463e-10, 24 fixed columns
Coin0506I Presolve 19 (-23) rows, 22 (-24) columns and 76 (-301) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 1.6361382 - largest nonzero change 1.2354324e-05 ( 0.00086475376%) - largest zero change 2.7543359e-05
Clp0000I Optimal - objective value 44.329263
Clp0000I Optimal - objective value 44.329263
Coin0511I After Postsolve, objective 44.329263, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3274082 - largest nonzero change 1.1797671e-05 ( 0.00086475376%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 84.434907
Clp0000I Optimal - objective value 84.434907
Clp0000I Optimal - objective value 84.434907
Coin0511I After Postsolve, objective 84.434907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 84.43490734 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 41 rows, 46 columns (46 integer (46 of which binary)) and 386 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.626%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.5353
Cbc0038I Pass   1: suminf.    0.84871 (8) obj. -54.8867 iterations 10
Cbc0038I Pass   2: suminf.    0.84871 (8) obj. -54.8867 iterations 2
Cbc0038I Solution found of -37.5631
Cbc0038I Rounding solution of -41.8191 is better than previous of -37.5631

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -41.8191 to -42.3198 (0.01 seconds)
Cbc0038I Round again with cutoff of -44.9696
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.84871 (8) obj. -54.8867 iterations 0
Cbc0038I Pass   4: suminf.    0.84871 (8) obj. -54.8867 iterations 2
Cbc0038I Pass   5: suminf.    0.16423 (1) obj. -44.9696 iterations 16
Cbc0038I Pass   6: suminf.    0.17073 (1) obj. -45.2629 iterations 1
Cbc0038I Pass   7: suminf.    0.63990 (3) obj. -44.9696 iterations 7
Cbc0038I Pass   8: suminf.    0.63990 (3) obj. -44.9696 iterations 1
Cbc0038I Pass   9: suminf.    0.42788 (2) obj. -44.9696 iterations 4
Cbc0038I Pass  10: suminf.    0.15851 (1) obj. -44.9696 iterations 1
Cbc0038I Pass  11: suminf.    0.17073 (1) obj. -45.5207 iterations 1
Cbc0038I Pass  12: suminf.    0.85290 (5) obj. -44.9696 iterations 10
Cbc0038I Pass  13: suminf.    0.64895 (5) obj. -48.5591 iterations 1
Cbc0038I Pass  14: suminf.    1.19073 (3) obj. -44.9696 iterations 10
Cbc0038I Pass  15: suminf.    0.86281 (3) obj. -44.9696 iterations 1
Cbc0038I Pass  16: suminf.    0.89170 (2) obj. -44.9696 iterations 2
Cbc0038I Pass  17: suminf.    0.46132 (2) obj. -44.9696 iterations 1
Cbc0038I Pass  18: suminf.    1.04199 (3) obj. -44.9696 iterations 5
Cbc0038I Pass  19: suminf.    0.56100 (2) obj. -44.9696 iterations 3
Cbc0038I Pass  20: suminf.    0.56583 (2) obj. -44.9696 iterations 1
Cbc0038I Pass  21: suminf.    2.05623 (9) obj. -44.9696 iterations 12
Cbc0038I Pass  22: suminf.    1.47119 (5) obj. -44.9696 iterations 5
Cbc0038I Pass  23: suminf.    0.90825 (3) obj. -44.9696 iterations 7
Cbc0038I Pass  24: suminf.    0.90825 (3) obj. -44.9696 iterations 0
Cbc0038I Pass  25: suminf.    0.91280 (3) obj. -44.9696 iterations 1
Cbc0038I Pass  26: suminf.    1.54943 (9) obj. -44.9696 iterations 14
Cbc0038I Pass  27: suminf.    1.53772 (9) obj. -44.9696 iterations 2
Cbc0038I Pass  28: suminf.    0.98937 (4) obj. -44.9696 iterations 12
Cbc0038I Pass  29: suminf.    0.73252 (4) obj. -44.9696 iterations 5
Cbc0038I Pass  30: suminf.    0.30717 (3) obj. -44.9696 iterations 4
Cbc0038I Pass  31: suminf.    0.30717 (3) obj. -44.9696 iterations 0
Cbc0038I Pass  32: suminf.    0.79751 (3) obj. -48.8922 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -42.3198 to -45.0352 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.7916
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.84871 (8) obj. -54.8867 iterations 0
Cbc0038I Pass  33: suminf.    0.84871 (8) obj. -54.8867 iterations 2
Cbc0038I Pass  34: suminf.    0.55697 (5) obj. -49.7916 iterations 18
Cbc0038I Pass  35: suminf.    0.44216 (3) obj. -49.7916 iterations 3
Cbc0038I Pass  36: suminf.    0.44216 (3) obj. -49.7916 iterations 0
Cbc0038I Pass  37: suminf.    0.82970 (3) obj. -54.2413 iterations 1
Cbc0038I Pass  38: suminf.    0.44632 (5) obj. -49.7916 iterations 4
Cbc0038I Pass  39: suminf.    0.58852 (5) obj. -49.7916 iterations 6
Cbc0038I Pass  40: suminf.    0.58852 (5) obj. -49.7916 iterations 0
Cbc0038I Pass  41: suminf.    0.45881 (3) obj. -49.7916 iterations 5
Cbc0038I Pass  42: suminf.    0.45881 (3) obj. -49.7916 iterations 0
Cbc0038I Pass  43: suminf.    0.48535 (3) obj. -53.0771 iterations 1
Cbc0038I Pass  44: suminf.    0.26200 (2) obj. -49.7916 iterations 3
Cbc0038I Pass  45: suminf.    0.47952 (3) obj. -49.7916 iterations 3
Cbc0038I Pass  46: suminf.    1.43996 (6) obj. -49.7916 iterations 12
Cbc0038I Pass  47: suminf.    1.43996 (6) obj. -49.7916 iterations 1
Cbc0038I Pass  48: suminf.    1.48620 (6) obj. -49.7916 iterations 6
Cbc0038I Pass  49: suminf.    1.48620 (6) obj. -49.7916 iterations 0
Cbc0038I Pass  50: suminf.    1.02008 (3) obj. -51.5487 iterations 4
Cbc0038I Pass  51: suminf.    0.57752 (3) obj. -49.7916 iterations 2
Cbc0038I Pass  52: suminf.    0.83170 (3) obj. -49.7916 iterations 3
Cbc0038I Pass  53: suminf.    0.83170 (3) obj. -49.7916 iterations 0
Cbc0038I Pass  54: suminf.    1.16336 (5) obj. -49.7916 iterations 3
Cbc0038I Pass  55: suminf.    0.96813 (3) obj. -49.7916 iterations 2
Cbc0038I Pass  56: suminf.    0.84339 (3) obj. -49.7916 iterations 3
Cbc0038I Pass  57: suminf.    0.84339 (3) obj. -49.7916 iterations 0
Cbc0038I Pass  58: suminf.    1.00015 (3) obj. -51.0456 iterations 1
Cbc0038I Pass  59: suminf.    1.53600 (7) obj. -49.7916 iterations 9
Cbc0038I Pass  60: suminf.    1.34800 (6) obj. -49.7916 iterations 4
Cbc0038I Pass  61: suminf.    0.96839 (3) obj. -49.7916 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 41 rows 46 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -45.0352 - took 0.04 seconds
Cbc0012I Integer solution of -45.03516 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 41 rows 46 columns, reduced to 13 rows 13 columns
Cbc0012I Integer solution of -45.47663 found by DiveCoefficient after 1185 iterations and 0 nodes (1.43 seconds)
Cbc0031I 16 added rows had average density of 15.5
Cbc0013I At root node, 16 cuts changed objective from -68.816847 to -49.372931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 706 row cuts average 2.9 elements, 9 column cuts (9 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 417 row cuts average 31.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 68 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 53 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 19 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 137 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 199 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.704 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45.47663 best solution, best possible -49.372931 (1.43 seconds)
Cbc0012I Integer solution of -45.734407 found by rounding after 1487 iterations and 5 nodes (1.79 seconds)
Cbc0010I After 8 nodes, 5 on tree, -45.734407 best solution, best possible -49.372931 (2.14 seconds)
Cbc0001I Search completed - best objective -45.73440699999999, took 2093 iterations and 18 nodes (2.59 seconds)
Cbc0032I Strong branching done 210 times (1329 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 5, 20 variables fixed on reduced cost
Total time (CPU seconds):       1.64   (Wallclock seconds):       2.60

