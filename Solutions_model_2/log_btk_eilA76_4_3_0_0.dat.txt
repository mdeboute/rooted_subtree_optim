Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 8.92637e-05 - average 6.46838e-07, 14 fixed columns
Coin0506I Presolve 98 (-40) rows, 57 (-19) columns and 302 (-118) elements
Clp0029I End of values pass after 56 iterations
Clp0000I Optimal - objective value 62.334199
Clp0000I Optimal - objective value 62.334199
Coin0511I After Postsolve, objective 62.334199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24823127 - largest nonzero change 0 ( 0%) - largest zero change 2.7495251e-05
Clp0000I Optimal - objective value 62.334199
Clp0000I Optimal - objective value 62.334199
Clp0000I Optimal - objective value 62.334199
Coin0511I After Postsolve, objective 62.334199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.33419914 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 421 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 6.18067
Cbc0038I Solution found of -8.5482
Cbc0038I Relaxing continuous gives -8.5482
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -8.5482 to -32.1592 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.1768
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.73177 (6) obj. -35.1768 iterations 31
Cbc0038I Pass   2: suminf.    1.54151 (4) obj. -35.1768 iterations 10
Cbc0038I Pass   3: suminf.    0.21331 (2) obj. -35.1768 iterations 10
Cbc0038I Pass   4: suminf.    0.21228 (1) obj. -35.1768 iterations 1
Cbc0038I Pass   5: suminf.    0.26746 (1) obj. -35.1768 iterations 1
Cbc0038I Pass   6: suminf.    1.11992 (4) obj. -35.1768 iterations 12
Cbc0038I Pass   7: suminf.    1.01444 (4) obj. -35.1768 iterations 4
Cbc0038I Pass   8: suminf.    1.23729 (5) obj. -35.1768 iterations 7
Cbc0038I Pass   9: suminf.    0.93310 (2) obj. -35.1768 iterations 2
Cbc0038I Pass  10: suminf.    0.54033 (2) obj. -35.1768 iterations 2
Cbc0038I Pass  11: suminf.    0.93310 (2) obj. -35.1768 iterations 2
Cbc0038I Pass  12: suminf.    3.32419 (8) obj. -35.1768 iterations 20
Cbc0038I Pass  13: suminf.    1.90210 (5) obj. -35.1768 iterations 12
Cbc0038I Pass  14: suminf.    1.03781 (4) obj. -35.1768 iterations 8
Cbc0038I Pass  15: suminf.    0.70191 (4) obj. -35.1768 iterations 2
Cbc0038I Pass  16: suminf.    0.91226 (3) obj. -35.1768 iterations 10
Cbc0038I Pass  17: suminf.    0.91226 (3) obj. -35.1768 iterations 0
Cbc0038I Pass  18: suminf.    1.27349 (4) obj. -35.1768 iterations 3
Cbc0038I Pass  19: suminf.    0.78266 (2) obj. -35.1768 iterations 3
Cbc0038I Pass  20: suminf.    0.78159 (2) obj. -35.1768 iterations 1
Cbc0038I Pass  21: suminf.    0.76199 (3) obj. -35.1768 iterations 2
Cbc0038I Pass  22: suminf.    0.91226 (3) obj. -35.1768 iterations 4
Cbc0038I Pass  23: suminf.    0.91226 (3) obj. -35.1768 iterations 0
Cbc0038I Pass  24: suminf.    1.27349 (4) obj. -35.1768 iterations 3
Cbc0038I Pass  25: suminf.    0.78266 (2) obj. -35.1768 iterations 3
Cbc0038I Pass  26: suminf.    0.78159 (2) obj. -35.1768 iterations 1
Cbc0038I Pass  27: suminf.    0.76199 (3) obj. -35.1768 iterations 2
Cbc0038I Pass  28: suminf.    0.91226 (3) obj. -35.1768 iterations 4
Cbc0038I Pass  29: suminf.    0.91226 (3) obj. -35.1768 iterations 0
Cbc0038I Pass  30: suminf.    1.27349 (4) obj. -35.1768 iterations 3
Cbc0038I Rounding solution of -34.5847 is better than previous of -32.1592

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -34.5847 to -35.2561 (0.05 seconds)
Cbc0038I Round again with cutoff of -40.6718
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.19741 (11) obj. -40.6718 iterations 2
Cbc0038I Pass  31: suminf.    1.77286 (5) obj. -40.6718 iterations 9
Cbc0038I Pass  32: suminf.    1.77286 (5) obj. -40.6718 iterations 0
Cbc0038I Pass  33: suminf.    0.82949 (3) obj. -40.6718 iterations 12
Cbc0038I Pass  34: suminf.    0.82949 (3) obj. -40.6718 iterations 3
Cbc0038I Pass  35: suminf.    0.72909 (3) obj. -40.6718 iterations 7
Cbc0038I Pass  36: suminf.    0.72331 (3) obj. -40.6718 iterations 5
Cbc0038I Pass  37: suminf.    0.82949 (3) obj. -40.6718 iterations 5
Cbc0038I Pass  38: suminf.    4.71484 (14) obj. -40.6718 iterations 31
Cbc0038I Pass  39: suminf.    1.02407 (4) obj. -40.6718 iterations 27
Cbc0038I Pass  40: suminf.    1.02407 (4) obj. -40.6718 iterations 1
Cbc0038I Pass  41: suminf.    1.52145 (5) obj. -40.6718 iterations 6
Cbc0038I Pass  42: suminf.    1.08189 (6) obj. -40.6718 iterations 7
Cbc0038I Pass  43: suminf.    2.19041 (5) obj. -40.6718 iterations 12
Cbc0038I Pass  44: suminf.    1.25474 (3) obj. -40.6718 iterations 8
Cbc0038I Pass  45: suminf.    1.18558 (3) obj. -40.6718 iterations 5
Cbc0038I Pass  46: suminf.    1.04276 (3) obj. -40.6718 iterations 1
Cbc0038I Pass  47: suminf.    1.18558 (3) obj. -40.6718 iterations 2
Cbc0038I Pass  48: suminf.    1.47766 (5) obj. -40.6718 iterations 12
Cbc0038I Pass  49: suminf.    0.77640 (4) obj. -40.6718 iterations 10
Cbc0038I Pass  50: suminf.    0.53816 (4) obj. -40.6718 iterations 7
Cbc0038I Pass  51: suminf.    0.53816 (4) obj. -40.6718 iterations 1
Cbc0038I Pass  52: suminf.    1.81479 (4) obj. -40.6718 iterations 7
Cbc0038I Pass  53: suminf.    1.42343 (3) obj. -40.6718 iterations 4
Cbc0038I Pass  54: suminf.    1.25461 (3) obj. -40.6718 iterations 5
Cbc0038I Pass  55: suminf.    1.17599 (3) obj. -40.6718 iterations 1
Cbc0038I Pass  56: suminf.    1.25461 (3) obj. -40.6718 iterations 2
Cbc0038I Pass  57: suminf.    3.48541 (11) obj. -40.6718 iterations 15
Cbc0038I Pass  58: suminf.    1.20993 (4) obj. -40.6718 iterations 17
Cbc0038I Pass  59: suminf.    1.42343 (3) obj. -40.6718 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -35.2561 to -36.588 (0.09 seconds)
Cbc0038I Round again with cutoff of -47.1705
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  59: suminf.    2.77329 (11) obj. -47.1705 iterations 0
Cbc0038I Pass  60: suminf.    2.31490 (10) obj. -47.1705 iterations 1
Cbc0038I Pass  61: suminf.    2.31490 (10) obj. -47.1705 iterations 0
Cbc0038I Pass  62: suminf.    2.76424 (7) obj. -47.1705 iterations 16
Cbc0038I Pass  63: suminf.    2.01179 (7) obj. -47.1705 iterations 9
Cbc0038I Pass  64: suminf.    1.76722 (6) obj. -47.1705 iterations 3
Cbc0038I Pass  65: suminf.    1.94499 (6) obj. -47.1705 iterations 9
Cbc0038I Pass  66: suminf.    1.54541 (6) obj. -47.1705 iterations 7
Cbc0038I Pass  67: suminf.    1.53390 (5) obj. -47.1705 iterations 1
Cbc0038I Pass  68: suminf.    2.14819 (6) obj. -47.1705 iterations 10
Cbc0038I Pass  69: suminf.    1.66309 (5) obj. -47.1705 iterations 7
Cbc0038I Pass  70: suminf.    1.60405 (6) obj. -47.1705 iterations 2
Cbc0038I Pass  71: suminf.    2.33251 (6) obj. -47.1705 iterations 16
Cbc0038I Pass  72: suminf.    1.97193 (6) obj. -47.1705 iterations 9
Cbc0038I Pass  73: suminf.    2.15848 (6) obj. -47.1705 iterations 5
Cbc0038I Pass  74: suminf.    1.94569 (9) obj. -47.1705 iterations 5
Cbc0038I Pass  75: suminf.    3.05251 (8) obj. -47.1705 iterations 18
Cbc0038I Pass  76: suminf.    2.37252 (8) obj. -47.1705 iterations 9
Cbc0038I Pass  77: suminf.    2.34728 (10) obj. -47.1705 iterations 3
Cbc0038I Pass  78: suminf.    3.48564 (9) obj. -47.1705 iterations 13
Cbc0038I Pass  79: suminf.    1.94569 (9) obj. -47.1705 iterations 7
Cbc0038I Pass  80: suminf.    3.05251 (8) obj. -47.1705 iterations 18
Cbc0038I Pass  81: suminf.    2.37252 (8) obj. -47.1705 iterations 9
Cbc0038I Pass  82: suminf.    2.34728 (10) obj. -47.1705 iterations 3
Cbc0038I Pass  83: suminf.    3.48564 (9) obj. -47.1705 iterations 13
Cbc0038I Pass  84: suminf.    1.94569 (9) obj. -47.1705 iterations 7
Cbc0038I Pass  85: suminf.    3.05251 (8) obj. -47.1705 iterations 18
Cbc0038I Pass  86: suminf.    2.37252 (8) obj. -47.1705 iterations 9
Cbc0038I Pass  87: suminf.    2.34728 (10) obj. -47.1705 iterations 3
Cbc0038I Pass  88: suminf.    3.48564 (9) obj. -47.1705 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -36.588 - took 0.09 seconds
Cbc0012I Integer solution of -36.588025 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 49 rows 29 columns
Cbc0031I 11 added rows had average density of 35.181818
Cbc0013I At root node, 11 cuts changed objective from -62.334199 to -48.651042 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3282 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 758 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0012I Integer solution of -36.739795 found by rounding after 3781 iterations and 27 nodes (0.56 seconds)
Cbc0001I Search completed - best objective -36.73979492000001, took 4285 iterations and 44 nodes (0.57 seconds)
Cbc0032I Strong branching done 514 times (8111 iterations), fathomed 3 nodes and fixed 24 variables
Cbc0035I Maximum depth 18, 104 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 120 (-32) columns and 2007 (-1296) elements
Clp1000I sum of infeasibilities 7.85494e-06 - average 7.27309e-08, 5 fixed columns
Coin0506I Presolve 97 (-11) rows, 111 (-9) columns and 1799 (-208) elements
Clp0029I End of values pass after 111 iterations
Clp0014I Perturbing problem by 0.001% of 1.7244916 - largest nonzero change 0 ( 0%) - largest zero change 2.8359315e-05
Clp0000I Optimal - objective value 75.724421
Clp0000I Optimal - objective value 75.724421
Coin0511I After Postsolve, objective 75.724421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6830198 - largest nonzero change 2.5203652e-05 ( 0.0016594968%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 75.724421
Clp0000I Optimal - objective value 75.724421
Clp0000I Optimal - objective value 75.724421
Coin0511I After Postsolve, objective 75.724421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.72442116 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 120 columns (120 integer (120 of which binary)) and 2014 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.483%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.11268
Cbc0038I Pass   1: suminf.    3.20560 (33) obj. -54.792 iterations 14
Cbc0038I Pass   2: suminf.    3.20560 (33) obj. -54.792 iterations 1
Cbc0038I Pass   3: suminf.    0.42824 (7) obj. -20.6945 iterations 25
Cbc0038I Solution found of -8.48784
Cbc0038I Rounding solution of -8.52154 is better than previous of -8.48784

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -14.182
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.20560 (33) obj. -54.792 iterations 0
Cbc0038I Pass   5: suminf.    3.20560 (33) obj. -54.792 iterations 1
Cbc0038I Pass   6: suminf.    0.97074 (15) obj. -30.0163 iterations 18
Cbc0038I Pass   7: suminf.    0.59854 (6) obj. -14.182 iterations 23
Cbc0038I Pass   8: suminf.    0.09524 (2) obj. -16.3694 iterations 8
Cbc0038I Pass   9: suminf.    0.09524 (2) obj. -16.3694 iterations 0
Cbc0038I Pass  10: suminf.    1.20322 (3) obj. -14.182 iterations 9
Cbc0038I Pass  11: suminf.    0.61095 (2) obj. -14.182 iterations 5
Cbc0038I Pass  12: suminf.    0.61095 (2) obj. -14.182 iterations 0
Cbc0038I Pass  13: suminf.    2.29561 (11) obj. -14.182 iterations 27
Cbc0038I Pass  14: suminf.    0.68316 (9) obj. -14.182 iterations 3
Cbc0038I Pass  15: suminf.    0.68316 (9) obj. -14.182 iterations 2
Cbc0038I Pass  16: suminf.    0.92548 (3) obj. -14.182 iterations 19
Cbc0038I Pass  17: suminf.    1.15693 (4) obj. -14.182 iterations 4
Cbc0038I Pass  18: suminf.    0.92548 (3) obj. -14.182 iterations 8
Cbc0038I Pass  19: suminf.    0.56935 (7) obj. -14.182 iterations 29
Cbc0038I Pass  20: suminf.    0.43884 (8) obj. -14.182 iterations 10
Cbc0038I Pass  21: suminf.    0.96208 (5) obj. -14.182 iterations 13
Cbc0038I Pass  22: suminf.    0.57389 (5) obj. -15.7348 iterations 3
Cbc0038I Pass  23: suminf.    0.83229 (3) obj. -14.182 iterations 18
Cbc0038I Pass  24: suminf.    0.43677 (4) obj. -14.182 iterations 9
Cbc0038I Pass  25: suminf.    0.49895 (3) obj. -14.182 iterations 6
Cbc0038I Pass  26: suminf.    1.64136 (13) obj. -14.182 iterations 20
Cbc0038I Pass  27: suminf.    1.13176 (8) obj. -14.182 iterations 16
Cbc0038I Pass  28: suminf.    0.24722 (3) obj. -14.182 iterations 14
Cbc0038I Pass  29: suminf.    0.15450 (4) obj. -14.182 iterations 4
Cbc0038I Pass  30: suminf.    0.78908 (9) obj. -16.2084 iterations 30
Cbc0038I Pass  31: suminf.    0.59118 (11) obj. -14.182 iterations 7
Cbc0038I Pass  32: suminf.    0.63961 (3) obj. -14.182 iterations 15
Cbc0038I Pass  33: suminf.    0.19285 (5) obj. -14.182 iterations 9
Cbc0038I Rounding solution of -17.2539 is better than previous of -8.52154

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 54 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -17.2539 to -34.3523 (0.11 seconds)
Cbc0038I Round again with cutoff of -40.5069
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.20560 (33) obj. -54.792 iterations 0
Cbc0038I Pass  34: suminf.    3.20560 (33) obj. -54.792 iterations 1
Cbc0038I Pass  35: suminf.    1.71873 (23) obj. -40.5069 iterations 14
Cbc0038I Pass  36: suminf.    4.00348 (19) obj. -40.5069 iterations 39
Cbc0038I Pass  37: suminf.    3.60642 (19) obj. -40.5069 iterations 4
Cbc0038I Pass  38: suminf.    3.27218 (19) obj. -40.5069 iterations 3
Cbc0038I Pass  39: suminf.    1.31274 (19) obj. -40.5069 iterations 6
Cbc0038I Pass  40: suminf.    1.26225 (15) obj. -40.5069 iterations 11
Cbc0038I Pass  41: suminf.    2.02335 (13) obj. -40.5069 iterations 15
Cbc0038I Pass  42: suminf.    1.95989 (13) obj. -40.5069 iterations 7
Cbc0038I Pass  43: suminf.    3.17836 (17) obj. -40.5069 iterations 19
Cbc0038I Pass  44: suminf.    3.07223 (19) obj. -40.5069 iterations 4
Cbc0038I Pass  45: suminf.    3.24324 (16) obj. -40.5069 iterations 17
Cbc0038I Pass  46: suminf.    3.24324 (16) obj. -40.5069 iterations 4
Cbc0038I Pass  47: suminf.    3.41730 (16) obj. -40.5069 iterations 5
Cbc0038I Pass  48: suminf.    3.41730 (16) obj. -40.5069 iterations 4
Cbc0038I Pass  49: suminf.    3.24324 (16) obj. -40.5069 iterations 9
Cbc0038I Pass  50: suminf.    2.47242 (20) obj. -40.5069 iterations 22
Cbc0038I Pass  51: suminf.    2.37477 (19) obj. -40.5069 iterations 6
Cbc0038I Pass  52: suminf.    1.91479 (20) obj. -40.5069 iterations 9
Cbc0038I Pass  53: suminf.    2.36503 (19) obj. -40.5069 iterations 24
Cbc0038I Pass  54: suminf.    2.36503 (19) obj. -40.5069 iterations 3
Cbc0038I Pass  55: suminf.    3.25218 (16) obj. -40.5069 iterations 18
Cbc0038I Pass  56: suminf.    3.25218 (16) obj. -40.5069 iterations 0
Cbc0038I Pass  57: suminf.    3.24324 (16) obj. -40.5069 iterations 10
Cbc0038I Pass  58: suminf.    3.24324 (16) obj. -40.5069 iterations 4
Cbc0038I Pass  59: suminf.    3.41730 (16) obj. -40.5069 iterations 5
Cbc0038I Pass  60: suminf.    3.41730 (16) obj. -40.5069 iterations 4
Cbc0038I Pass  61: suminf.    2.51985 (20) obj. -40.5069 iterations 17
Cbc0038I Pass  62: suminf.    2.00696 (19) obj. -40.5069 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -34.3523 - took 0.09 seconds
Cbc0012I Integer solution of -34.352262 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 108 rows 120 columns, reduced to 30 rows 36 columns
Cbc0031I 50 added rows had average density of 30.78
Cbc0013I At root node, 50 cuts changed objective from -65.125248 to -42.545702 in 34 passes
Cbc0014I Cut generator 0 (Probing) - 3551 row cuts average 11.1 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 461 row cuts average 82.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 85 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 388 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 250 row cuts average 56.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -34.352262 best solution, best possible -42.545702 (0.91 seconds)
Cbc0012I Integer solution of -35.94375 found by rounding after 940 iterations and 1 nodes (0.92 seconds)
Cbc0012I Integer solution of -36.57784 found by DiveCoefficient after 1075 iterations and 2 nodes (1.07 seconds)
Cbc0016I Integer solution of -36.739805 found by strong branching after 1097 iterations and 2 nodes (1.13 seconds)
Cbc0010I After 8 nodes, 3 on tree, -36.739805 best solution, best possible -40.179161 (1.61 seconds)
Cbc0001I Search completed - best objective -36.73980492, took 2554 iterations and 20 nodes (2.13 seconds)
Cbc0032I Strong branching done 392 times (8404 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 57 variables fixed on reduced cost
Total time (CPU seconds):       1.46   (Wallclock seconds):       2.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 8.92637e-05 - average 6.46838e-07, 14 fixed columns
Coin0506I Presolve 98 (-40) rows, 57 (-19) columns and 302 (-118) elements
Clp0029I End of values pass after 56 iterations
Clp0000I Optimal - objective value 62.334199
Clp0000I Optimal - objective value 62.334199
Coin0511I After Postsolve, objective 62.334199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24823127 - largest nonzero change 0 ( 0%) - largest zero change 2.7495251e-05
Clp0000I Optimal - objective value 62.334199
Clp0000I Optimal - objective value 62.334199
Clp0000I Optimal - objective value 62.334199
Coin0511I After Postsolve, objective 62.334199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.33419914 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 421 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 6.18067
Cbc0038I Solution found of -8.5482
Cbc0038I Relaxing continuous gives -8.5482
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -8.5482 to -32.1592 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.1768
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    1.73177 (6) obj. -35.1768 iterations 31
Cbc0038I Pass   2: suminf.    1.54151 (4) obj. -35.1768 iterations 10
Cbc0038I Pass   3: suminf.    0.21331 (2) obj. -35.1768 iterations 10
Cbc0038I Pass   4: suminf.    0.21228 (1) obj. -35.1768 iterations 1
Cbc0038I Pass   5: suminf.    0.26746 (1) obj. -35.1768 iterations 1
Cbc0038I Pass   6: suminf.    1.11992 (4) obj. -35.1768 iterations 12
Cbc0038I Pass   7: suminf.    1.01444 (4) obj. -35.1768 iterations 4
Cbc0038I Pass   8: suminf.    1.23729 (5) obj. -35.1768 iterations 7
Cbc0038I Pass   9: suminf.    0.93310 (2) obj. -35.1768 iterations 2
Cbc0038I Pass  10: suminf.    0.54033 (2) obj. -35.1768 iterations 2
Cbc0038I Pass  11: suminf.    0.93310 (2) obj. -35.1768 iterations 2
Cbc0038I Pass  12: suminf.    3.32419 (8) obj. -35.1768 iterations 20
Cbc0038I Pass  13: suminf.    1.90210 (5) obj. -35.1768 iterations 12
Cbc0038I Pass  14: suminf.    1.03781 (4) obj. -35.1768 iterations 8
Cbc0038I Pass  15: suminf.    0.70191 (4) obj. -35.1768 iterations 2
Cbc0038I Pass  16: suminf.    0.91226 (3) obj. -35.1768 iterations 10
Cbc0038I Pass  17: suminf.    0.91226 (3) obj. -35.1768 iterations 0
Cbc0038I Pass  18: suminf.    1.27349 (4) obj. -35.1768 iterations 3
Cbc0038I Pass  19: suminf.    0.78266 (2) obj. -35.1768 iterations 3
Cbc0038I Pass  20: suminf.    0.78159 (2) obj. -35.1768 iterations 1
Cbc0038I Pass  21: suminf.    0.76199 (3) obj. -35.1768 iterations 2
Cbc0038I Pass  22: suminf.    0.91226 (3) obj. -35.1768 iterations 4
Cbc0038I Pass  23: suminf.    0.91226 (3) obj. -35.1768 iterations 0
Cbc0038I Pass  24: suminf.    1.27349 (4) obj. -35.1768 iterations 3
Cbc0038I Pass  25: suminf.    0.78266 (2) obj. -35.1768 iterations 3
Cbc0038I Pass  26: suminf.    0.78159 (2) obj. -35.1768 iterations 1
Cbc0038I Pass  27: suminf.    0.76199 (3) obj. -35.1768 iterations 2
Cbc0038I Pass  28: suminf.    0.91226 (3) obj. -35.1768 iterations 4
Cbc0038I Pass  29: suminf.    0.91226 (3) obj. -35.1768 iterations 0
Cbc0038I Pass  30: suminf.    1.27349 (4) obj. -35.1768 iterations 3
Cbc0038I Rounding solution of -34.5847 is better than previous of -32.1592

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 60 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -34.5847 to -35.2561 (0.05 seconds)
Cbc0038I Round again with cutoff of -40.6718
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  30: suminf.    2.19741 (11) obj. -40.6718 iterations 2
Cbc0038I Pass  31: suminf.    1.77286 (5) obj. -40.6718 iterations 9
Cbc0038I Pass  32: suminf.    1.77286 (5) obj. -40.6718 iterations 0
Cbc0038I Pass  33: suminf.    0.82949 (3) obj. -40.6718 iterations 12
Cbc0038I Pass  34: suminf.    0.82949 (3) obj. -40.6718 iterations 3
Cbc0038I Pass  35: suminf.    0.72909 (3) obj. -40.6718 iterations 7
Cbc0038I Pass  36: suminf.    0.72331 (3) obj. -40.6718 iterations 5
Cbc0038I Pass  37: suminf.    0.82949 (3) obj. -40.6718 iterations 5
Cbc0038I Pass  38: suminf.    4.71484 (14) obj. -40.6718 iterations 31
Cbc0038I Pass  39: suminf.    1.02407 (4) obj. -40.6718 iterations 27
Cbc0038I Pass  40: suminf.    1.02407 (4) obj. -40.6718 iterations 1
Cbc0038I Pass  41: suminf.    1.52145 (5) obj. -40.6718 iterations 6
Cbc0038I Pass  42: suminf.    1.08189 (6) obj. -40.6718 iterations 7
Cbc0038I Pass  43: suminf.    2.19041 (5) obj. -40.6718 iterations 12
Cbc0038I Pass  44: suminf.    1.25474 (3) obj. -40.6718 iterations 8
Cbc0038I Pass  45: suminf.    1.18558 (3) obj. -40.6718 iterations 5
Cbc0038I Pass  46: suminf.    1.04276 (3) obj. -40.6718 iterations 1
Cbc0038I Pass  47: suminf.    1.18558 (3) obj. -40.6718 iterations 2
Cbc0038I Pass  48: suminf.    1.47766 (5) obj. -40.6718 iterations 12
Cbc0038I Pass  49: suminf.    0.77640 (4) obj. -40.6718 iterations 10
Cbc0038I Pass  50: suminf.    0.53816 (4) obj. -40.6718 iterations 7
Cbc0038I Pass  51: suminf.    0.53816 (4) obj. -40.6718 iterations 1
Cbc0038I Pass  52: suminf.    1.81479 (4) obj. -40.6718 iterations 7
Cbc0038I Pass  53: suminf.    1.42343 (3) obj. -40.6718 iterations 4
Cbc0038I Pass  54: suminf.    1.25461 (3) obj. -40.6718 iterations 5
Cbc0038I Pass  55: suminf.    1.17599 (3) obj. -40.6718 iterations 1
Cbc0038I Pass  56: suminf.    1.25461 (3) obj. -40.6718 iterations 2
Cbc0038I Pass  57: suminf.    3.48541 (11) obj. -40.6718 iterations 15
Cbc0038I Pass  58: suminf.    1.20993 (4) obj. -40.6718 iterations 17
Cbc0038I Pass  59: suminf.    1.42343 (3) obj. -40.6718 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 69 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -35.2561 to -36.588 (0.09 seconds)
Cbc0038I Round again with cutoff of -47.1705
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  59: suminf.    2.77329 (11) obj. -47.1705 iterations 0
Cbc0038I Pass  60: suminf.    2.31490 (10) obj. -47.1705 iterations 1
Cbc0038I Pass  61: suminf.    2.31490 (10) obj. -47.1705 iterations 0
Cbc0038I Pass  62: suminf.    2.76424 (7) obj. -47.1705 iterations 16
Cbc0038I Pass  63: suminf.    2.01179 (7) obj. -47.1705 iterations 9
Cbc0038I Pass  64: suminf.    1.76722 (6) obj. -47.1705 iterations 3
Cbc0038I Pass  65: suminf.    1.94499 (6) obj. -47.1705 iterations 9
Cbc0038I Pass  66: suminf.    1.54541 (6) obj. -47.1705 iterations 7
Cbc0038I Pass  67: suminf.    1.53390 (5) obj. -47.1705 iterations 1
Cbc0038I Pass  68: suminf.    2.14819 (6) obj. -47.1705 iterations 10
Cbc0038I Pass  69: suminf.    1.66309 (5) obj. -47.1705 iterations 7
Cbc0038I Pass  70: suminf.    1.60405 (6) obj. -47.1705 iterations 2
Cbc0038I Pass  71: suminf.    2.33251 (6) obj. -47.1705 iterations 16
Cbc0038I Pass  72: suminf.    1.97193 (6) obj. -47.1705 iterations 9
Cbc0038I Pass  73: suminf.    2.15848 (6) obj. -47.1705 iterations 5
Cbc0038I Pass  74: suminf.    1.94569 (9) obj. -47.1705 iterations 5
Cbc0038I Pass  75: suminf.    3.05251 (8) obj. -47.1705 iterations 18
Cbc0038I Pass  76: suminf.    2.37252 (8) obj. -47.1705 iterations 9
Cbc0038I Pass  77: suminf.    2.34728 (10) obj. -47.1705 iterations 3
Cbc0038I Pass  78: suminf.    3.48564 (9) obj. -47.1705 iterations 13
Cbc0038I Pass  79: suminf.    1.94569 (9) obj. -47.1705 iterations 7
Cbc0038I Pass  80: suminf.    3.05251 (8) obj. -47.1705 iterations 18
Cbc0038I Pass  81: suminf.    2.37252 (8) obj. -47.1705 iterations 9
Cbc0038I Pass  82: suminf.    2.34728 (10) obj. -47.1705 iterations 3
Cbc0038I Pass  83: suminf.    3.48564 (9) obj. -47.1705 iterations 13
Cbc0038I Pass  84: suminf.    1.94569 (9) obj. -47.1705 iterations 7
Cbc0038I Pass  85: suminf.    3.05251 (8) obj. -47.1705 iterations 18
Cbc0038I Pass  86: suminf.    2.37252 (8) obj. -47.1705 iterations 9
Cbc0038I Pass  87: suminf.    2.34728 (10) obj. -47.1705 iterations 3
Cbc0038I Pass  88: suminf.    3.48564 (9) obj. -47.1705 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 54 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -36.588 - took 0.09 seconds
Cbc0012I Integer solution of -36.588025 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 49 rows 29 columns
Cbc0031I 11 added rows had average density of 35.181818
Cbc0013I At root node, 11 cuts changed objective from -62.334199 to -48.651042 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3282 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 758 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 134 row cuts average 46.4 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0012I Integer solution of -36.739795 found by rounding after 3781 iterations and 27 nodes (0.59 seconds)
Cbc0001I Search completed - best objective -36.73979492000001, took 4285 iterations and 44 nodes (0.60 seconds)
Cbc0032I Strong branching done 514 times (8111 iterations), fathomed 3 nodes and fixed 24 variables
Cbc0035I Maximum depth 18, 104 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-47) rows, 120 (-33) columns and 2007 (-1297) elements
Clp1000I sum of infeasibilities 7.85494e-06 - average 7.27309e-08, 5 fixed columns
Coin0506I Presolve 97 (-11) rows, 111 (-9) columns and 1799 (-208) elements
Clp0029I End of values pass after 111 iterations
Clp0014I Perturbing problem by 0.001% of 1.7244916 - largest nonzero change 0 ( 0%) - largest zero change 2.8359315e-05
Clp0000I Optimal - objective value 75.724421
Clp0000I Optimal - objective value 75.724421
Coin0511I After Postsolve, objective 75.724421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6830198 - largest nonzero change 2.5203652e-05 ( 0.0016594968%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 75.724421
Clp0000I Optimal - objective value 75.724421
Clp0000I Optimal - objective value 75.724421
Coin0511I After Postsolve, objective 75.724421, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 75.72442116 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 120 columns (120 integer (120 of which binary)) and 2014 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.483%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 7.11268
Cbc0038I Pass   1: suminf.    3.20560 (33) obj. -54.792 iterations 14
Cbc0038I Pass   2: suminf.    3.20560 (33) obj. -54.792 iterations 1
Cbc0038I Pass   3: suminf.    0.42824 (7) obj. -20.6945 iterations 25
Cbc0038I Solution found of -8.48784
Cbc0038I Rounding solution of -8.52154 is better than previous of -8.48784

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -14.182
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.20560 (33) obj. -54.792 iterations 0
Cbc0038I Pass   5: suminf.    3.20560 (33) obj. -54.792 iterations 1
Cbc0038I Pass   6: suminf.    0.97074 (15) obj. -30.0163 iterations 18
Cbc0038I Pass   7: suminf.    0.59854 (6) obj. -14.182 iterations 23
Cbc0038I Pass   8: suminf.    0.09524 (2) obj. -16.3694 iterations 8
Cbc0038I Pass   9: suminf.    0.09524 (2) obj. -16.3694 iterations 0
Cbc0038I Pass  10: suminf.    1.20322 (3) obj. -14.182 iterations 9
Cbc0038I Pass  11: suminf.    0.61095 (2) obj. -14.182 iterations 5
Cbc0038I Pass  12: suminf.    0.61095 (2) obj. -14.182 iterations 0
Cbc0038I Pass  13: suminf.    2.29561 (11) obj. -14.182 iterations 27
Cbc0038I Pass  14: suminf.    0.68316 (9) obj. -14.182 iterations 3
Cbc0038I Pass  15: suminf.    0.68316 (9) obj. -14.182 iterations 2
Cbc0038I Pass  16: suminf.    0.92548 (3) obj. -14.182 iterations 19
Cbc0038I Pass  17: suminf.    1.15693 (4) obj. -14.182 iterations 4
Cbc0038I Pass  18: suminf.    0.92548 (3) obj. -14.182 iterations 8
Cbc0038I Pass  19: suminf.    0.56935 (7) obj. -14.182 iterations 29
Cbc0038I Pass  20: suminf.    0.43884 (8) obj. -14.182 iterations 10
Cbc0038I Pass  21: suminf.    0.96208 (5) obj. -14.182 iterations 13
Cbc0038I Pass  22: suminf.    0.57389 (5) obj. -15.7348 iterations 3
Cbc0038I Pass  23: suminf.    0.83229 (3) obj. -14.182 iterations 18
Cbc0038I Pass  24: suminf.    0.43677 (4) obj. -14.182 iterations 9
Cbc0038I Pass  25: suminf.    0.49895 (3) obj. -14.182 iterations 6
Cbc0038I Pass  26: suminf.    1.64136 (13) obj. -14.182 iterations 20
Cbc0038I Pass  27: suminf.    1.13176 (8) obj. -14.182 iterations 16
Cbc0038I Pass  28: suminf.    0.24722 (3) obj. -14.182 iterations 14
Cbc0038I Pass  29: suminf.    0.15450 (4) obj. -14.182 iterations 4
Cbc0038I Pass  30: suminf.    0.78908 (9) obj. -16.2084 iterations 30
Cbc0038I Pass  31: suminf.    0.59118 (11) obj. -14.182 iterations 7
Cbc0038I Pass  32: suminf.    0.63961 (3) obj. -14.182 iterations 15
Cbc0038I Pass  33: suminf.    0.19285 (5) obj. -14.182 iterations 9
Cbc0038I Rounding solution of -17.2539 is better than previous of -8.52154

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 120 columns, reduced to 54 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -17.2539 to -34.3523 (0.11 seconds)
Cbc0038I Round again with cutoff of -40.5069
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.20560 (33) obj. -54.792 iterations 0
Cbc0038I Pass  34: suminf.    3.20560 (33) obj. -54.792 iterations 1
Cbc0038I Pass  35: suminf.    1.71873 (23) obj. -40.5069 iterations 14
Cbc0038I Pass  36: suminf.    4.00348 (19) obj. -40.5069 iterations 39
Cbc0038I Pass  37: suminf.    3.60642 (19) obj. -40.5069 iterations 4
Cbc0038I Pass  38: suminf.    3.27218 (19) obj. -40.5069 iterations 3
Cbc0038I Pass  39: suminf.    1.31274 (19) obj. -40.5069 iterations 6
Cbc0038I Pass  40: suminf.    1.26225 (15) obj. -40.5069 iterations 11
Cbc0038I Pass  41: suminf.    2.02335 (13) obj. -40.5069 iterations 15
Cbc0038I Pass  42: suminf.    1.95989 (13) obj. -40.5069 iterations 7
Cbc0038I Pass  43: suminf.    3.17836 (17) obj. -40.5069 iterations 19
Cbc0038I Pass  44: suminf.    3.07223 (19) obj. -40.5069 iterations 4
Cbc0038I Pass  45: suminf.    3.24324 (16) obj. -40.5069 iterations 17
Cbc0038I Pass  46: suminf.    3.24324 (16) obj. -40.5069 iterations 4
Cbc0038I Pass  47: suminf.    3.41730 (16) obj. -40.5069 iterations 5
Cbc0038I Pass  48: suminf.    3.41730 (16) obj. -40.5069 iterations 4
Cbc0038I Pass  49: suminf.    3.24324 (16) obj. -40.5069 iterations 9
Cbc0038I Pass  50: suminf.    2.47242 (20) obj. -40.5069 iterations 22
Cbc0038I Pass  51: suminf.    2.37477 (19) obj. -40.5069 iterations 6
Cbc0038I Pass  52: suminf.    1.91479 (20) obj. -40.5069 iterations 9
Cbc0038I Pass  53: suminf.    2.36503 (19) obj. -40.5069 iterations 24
Cbc0038I Pass  54: suminf.    2.36503 (19) obj. -40.5069 iterations 3
Cbc0038I Pass  55: suminf.    3.25218 (16) obj. -40.5069 iterations 18
Cbc0038I Pass  56: suminf.    3.25218 (16) obj. -40.5069 iterations 0
Cbc0038I Pass  57: suminf.    3.24324 (16) obj. -40.5069 iterations 10
Cbc0038I Pass  58: suminf.    3.24324 (16) obj. -40.5069 iterations 4
Cbc0038I Pass  59: suminf.    3.41730 (16) obj. -40.5069 iterations 5
Cbc0038I Pass  60: suminf.    3.41730 (16) obj. -40.5069 iterations 4
Cbc0038I Pass  61: suminf.    2.51985 (20) obj. -40.5069 iterations 17
Cbc0038I Pass  62: suminf.    2.00696 (19) obj. -40.5069 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -34.3523 - took 0.09 seconds
Cbc0012I Integer solution of -34.352262 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 108 rows 120 columns, reduced to 30 rows 36 columns
Cbc0031I 50 added rows had average density of 30.78
Cbc0013I At root node, 50 cuts changed objective from -65.125248 to -42.545702 in 34 passes
Cbc0014I Cut generator 0 (Probing) - 3551 row cuts average 11.1 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 461 row cuts average 82.4 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 85 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 388 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 250 row cuts average 56.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.256 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -34.352262 best solution, best possible -42.545702 (0.99 seconds)
Cbc0012I Integer solution of -35.94375 found by rounding after 940 iterations and 1 nodes (1.00 seconds)
Cbc0012I Integer solution of -36.57784 found by DiveCoefficient after 1075 iterations and 2 nodes (1.18 seconds)
Cbc0016I Integer solution of -36.739805 found by strong branching after 1097 iterations and 2 nodes (1.24 seconds)
Cbc0010I After 8 nodes, 3 on tree, -36.739805 best solution, best possible -40.179161 (1.77 seconds)
Cbc0001I Search completed - best objective -36.73980492, took 2554 iterations and 20 nodes (2.32 seconds)
Cbc0032I Strong branching done 392 times (8404 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 7, 57 variables fixed on reduced cost
Total time (CPU seconds):       1.58   (Wallclock seconds):       2.34

