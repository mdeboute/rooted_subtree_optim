Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 2.16093e-06 - average 6.17409e-08, 18 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-21) columns and 0 (-104) elements
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Coin0511I After Postsolve, objective 12091.51, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.7775665 - largest nonzero change 1.270881e-05 ( 0.001270881%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Coin0511I After Postsolve, objective 12091.51, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12091.51014 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.651%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.118049
Cbc0038I Pass   1: suminf.    0.11805 (1) obj. -12091.5 iterations 3
Cbc0038I Solution found of -5728.73
Cbc0038I Relaxing continuous gives -5728.73
Cbc0038I Rounding solution of -6429.11 is better than previous of -5728.73

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -6995.35
Cbc0038I Pass   2: suminf.    0.11805 (1) obj. -12091.5 iterations 0
Cbc0038I Pass   3: suminf.    0.17557 (1) obj. -6995.35 iterations 1
Cbc0038I Pass   4: suminf.    0.13330 (1) obj. -6995.35 iterations 4
Cbc0038I Pass   5: suminf.    0.25463 (1) obj. -11411 iterations 1
Cbc0038I Pass   6: suminf.    0.13330 (1) obj. -6995.35 iterations 1
Cbc0038I Pass   7: suminf.    0.69500 (2) obj. -6995.35 iterations 5
Cbc0038I Pass   8: suminf.    0.05571 (1) obj. -6995.35 iterations 2
Cbc0038I Pass   9: suminf.    0.29415 (1) obj. -8715.54 iterations 1
Cbc0038I Pass  10: suminf.    0.27659 (1) obj. -11359.9 iterations 4
Cbc0038I Pass  11: suminf.    0.27659 (1) obj. -11359.9 iterations 1
Cbc0038I Pass  12: suminf.    0.11845 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  13: suminf.    0.18604 (2) obj. -6995.35 iterations 3
Cbc0038I Pass  14: suminf.    0.18604 (2) obj. -6995.35 iterations 0
Cbc0038I Pass  15: suminf.    0.13308 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  16: suminf.    0.24000 (1) obj. -11518.2 iterations 1
Cbc0038I Pass  17: suminf.    0.19604 (2) obj. -6995.35 iterations 6
Cbc0038I Pass  18: suminf.    0.19604 (2) obj. -6995.35 iterations 0
Cbc0038I Pass  19: suminf.    0.24000 (1) obj. -11571.7 iterations 2
Cbc0038I Pass  20: suminf.    0.12567 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  21: suminf.    0.12816 (1) obj. -6995.35 iterations 4
Cbc0038I Pass  22: suminf.    0.12816 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  23: suminf.    0.22780 (1) obj. -11641.7 iterations 1
Cbc0038I Pass  24: suminf.    0.30098 (1) obj. -11285.1 iterations 2
Cbc0038I Pass  25: suminf.    0.30098 (1) obj. -11285.1 iterations 1
Cbc0038I Pass  26: suminf.    0.10442 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  27: suminf.    0.11260 (1) obj. -6995.35 iterations 2
Cbc0038I Pass  28: suminf.    0.27049 (1) obj. -11446 iterations 1
Cbc0038I Pass  29: suminf.    0.11260 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  30: suminf.    0.66592 (2) obj. -6995.35 iterations 8
Cbc0038I Pass  31: suminf.    0.04383 (1) obj. -6995.35 iterations 3
Cbc0038I Rounding solution of -7265.54 is better than previous of -6429.11

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -7265.54 to -7350.9 (0.02 seconds)
Cbc0038I Round again with cutoff of -8299.02
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.11805 (1) obj. -12091.5 iterations 0
Cbc0038I Pass  32: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  33: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  34: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  35: suminf.    0.32123 (1) obj. -8299.02 iterations 5
Cbc0038I Pass  36: suminf.    0.32123 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  37: suminf.    0.49854 (1) obj. -9599.28 iterations 1
Cbc0038I Pass  38: suminf.    0.59527 (2) obj. -8299.02 iterations 12
Cbc0038I Pass  39: suminf.    0.59527 (2) obj. -8299.02 iterations 2
Cbc0038I Pass  40: suminf.    0.25829 (1) obj. -11347.4 iterations 2
Cbc0038I Pass  41: suminf.    0.31916 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  42: suminf.    0.65068 (3) obj. -8299.02 iterations 10
Cbc0038I Pass  43: suminf.    0.26209 (1) obj. -8299.02 iterations 4
Cbc0038I Pass  44: suminf.    0.26976 (1) obj. -8354.29 iterations 1
Cbc0038I Pass  45: suminf.    1.39643 (6) obj. -8299.02 iterations 7
Cbc0038I Pass  46: suminf.    1.18061 (5) obj. -8299.02 iterations 2
Cbc0038I Pass  47: suminf.    0.44244 (1) obj. -10531.4 iterations 3
Cbc0038I Pass  48: suminf.    0.24813 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  49: suminf.    0.64161 (3) obj. -8299.02 iterations 4
Cbc0038I Pass  50: suminf.    0.26445 (1) obj. -8299.02 iterations 2
Cbc0038I Pass  51: suminf.    0.39976 (1) obj. -10721.6 iterations 1
Cbc0038I Pass  52: suminf.    0.34854 (1) obj. -10942.7 iterations 2
Cbc0038I Pass  53: suminf.    0.28502 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  54: suminf.    0.34854 (1) obj. -10942.7 iterations 1
Cbc0038I Pass  55: suminf.    0.26317 (1) obj. -11332.6 iterations 2
Cbc0038I Pass  56: suminf.    0.26317 (1) obj. -11332.6 iterations 0
Cbc0038I Pass  57: suminf.    0.31634 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  58: suminf.    0.29097 (1) obj. -8299.02 iterations 6
Cbc0038I Pass  59: suminf.    0.30707 (1) obj. -11198.9 iterations 1
Cbc0038I Pass  60: suminf.    0.29097 (1) obj. -8299.02 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7350.9 - took 0.02 seconds
Cbc0012I Integer solution of -7350.898 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -7361.3423 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 5 rows 6 columns
Cbc0031I 7 added rows had average density of 9.1428571
Cbc0013I At root node, 7 cuts changed objective from -12091.51 to -7369.1091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 51 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 350 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -7362.0911 found by rounding after 911 iterations and 2 nodes (0.08 seconds)
Cbc0004I Integer solution of -7364.3981 found after 930 iterations and 3 nodes (0.08 seconds)
Cbc0001I Search completed - best objective -7364.39813, took 948 iterations and 4 nodes (0.08 seconds)
Cbc0032I Strong branching done 22 times (91 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 41 (-5) columns and 325 (-63) elements
Clp1000I sum of infeasibilities 1.56653e-07 - average 4.35148e-09, 40 fixed columns
Coin0506I Presolve 0 (-36) rows, 0 (-41) columns and 0 (-325) elements
Clp0000I Optimal - objective value 12060.51
Clp0000I Optimal - objective value 12060.51
Coin0511I After Postsolve, objective 12060.51, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1542573 - largest nonzero change 2.5115664e-05 ( 0.0025115664%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 12201.83
Clp0000I Optimal - objective value 12201.83
Clp0000I Optimal - objective value 12201.83
Coin0511I After Postsolve, objective 12201.83, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12201.83049 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 42 columns (42 integer (42 of which binary)) and 323 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.319%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 1.45332
Cbc0038I Pass   1: suminf.    0.26238 (11) obj. -7502.4 iterations 6
Cbc0038I Pass   2: suminf.    0.20060 (3) obj. -7320.41 iterations 2
Cbc0038I Solution found of -7316.68
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 42 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7800.69
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.24937 (11) obj. -12156 iterations 2
Cbc0038I Pass   4: suminf.    0.28720 (1) obj. -7800.69 iterations 11
Cbc0038I Pass   5: suminf.    0.11805 (1) obj. -12091.5 iterations 1
Cbc0038I Pass   6: suminf.    1.21216 (4) obj. -7800.69 iterations 8
Cbc0038I Pass   7: suminf.    1.21216 (4) obj. -7800.69 iterations 3
Cbc0038I Pass   8: suminf.    0.11805 (1) obj. -12090.5 iterations 4
Cbc0038I Pass   9: suminf.    0.28734 (1) obj. -7800.69 iterations 1
Cbc0038I Pass  10: suminf.    1.44915 (4) obj. -7800.69 iterations 7
Cbc0038I Pass  11: suminf.    0.46828 (2) obj. -7800.69 iterations 2
Cbc0038I Pass  12: suminf.    0.20000 (1) obj. -11634.3 iterations 2
Cbc0038I Pass  13: suminf.    0.26862 (1) obj. -7800.69 iterations 1
Cbc0038I Pass  14: suminf.    0.74464 (2) obj. -7800.69 iterations 7
Cbc0038I Pass  15: suminf.    0.74464 (2) obj. -7800.69 iterations 3
Cbc0038I Pass  16: suminf.    0.14854 (1) obj. -11908.8 iterations 2
Cbc0038I Pass  17: suminf.    0.28204 (1) obj. -7800.69 iterations 1
Cbc0038I Pass  18: suminf.    1.57175 (6) obj. -7800.69 iterations 9
Cbc0038I Pass  19: suminf.    0.70753 (4) obj. -7800.69 iterations 2
Cbc0038I Pass  20: suminf.    0.43146 (1) obj. -9909.16 iterations 4
Cbc0038I Pass  21: suminf.    0.27628 (1) obj. -7800.69 iterations 1
Cbc0038I Pass  22: suminf.    2.45592 (8) obj. -7800.69 iterations 11
Cbc0038I Pass  23: suminf.    1.47791 (6) obj. -7800.69 iterations 3
Cbc0038I Pass  24: suminf.    0.23390 (1) obj. -11465.4 iterations 6
Cbc0038I Pass  25: suminf.    0.25813 (1) obj. -7800.69 iterations 1
Cbc0038I Pass  26: suminf.    3.61240 (9) obj. -7800.69 iterations 14
Cbc0038I Pass  27: suminf.    2.00853 (5) obj. -7800.69 iterations 6
Cbc0038I Pass  28: suminf.    1.50860 (4) obj. -7800.69 iterations 1
Cbc0038I Pass  29: suminf.    0.31976 (1) obj. -8518.44 iterations 4
Cbc0038I Pass  30: suminf.    0.22027 (1) obj. -7800.69 iterations 1
Cbc0038I Pass  31: suminf.    1.77754 (5) obj. -7800.69 iterations 10
Cbc0038I Pass  32: suminf.    1.05617 (3) obj. -7800.69 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7316.68 - took 0.01 seconds
Cbc0012I Integer solution of -7316.676 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 42 columns, reduced to 12 rows 9 columns
Cbc0012I Integer solution of -7364.3981 found by DiveCoefficient after 116 iterations and 0 nodes (0.22 seconds)
Cbc0031I 11 added rows had average density of 5.8181818
Cbc0013I At root node, 11 cuts changed objective from -12156.836 to -7364.3983 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 88 row cuts average 4.8 elements, 8 column cuts (8 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 0.00016040278 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -7364.39813, took 116 iterations and 0 nodes (0.22 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.22

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 21 (-4) columns and 104 (-31) elements
Clp1000I sum of infeasibilities 2.16093e-06 - average 6.17409e-08, 18 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-21) columns and 0 (-104) elements
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Coin0511I After Postsolve, objective 12091.51, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.7775665 - largest nonzero change 1.270881e-05 ( 0.001270881%) - largest zero change 2.7080466e-05
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Clp0000I Optimal - objective value 12091.51
Coin0511I After Postsolve, objective 12091.51, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12091.51014 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 105 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.651%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.118049
Cbc0038I Pass   1: suminf.    0.11805 (1) obj. -12091.5 iterations 3
Cbc0038I Solution found of -5728.73
Cbc0038I Relaxing continuous gives -5728.73
Cbc0038I Rounding solution of -6429.11 is better than previous of -5728.73

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -6995.35
Cbc0038I Pass   2: suminf.    0.11805 (1) obj. -12091.5 iterations 0
Cbc0038I Pass   3: suminf.    0.17557 (1) obj. -6995.35 iterations 1
Cbc0038I Pass   4: suminf.    0.13330 (1) obj. -6995.35 iterations 4
Cbc0038I Pass   5: suminf.    0.25463 (1) obj. -11411 iterations 1
Cbc0038I Pass   6: suminf.    0.13330 (1) obj. -6995.35 iterations 1
Cbc0038I Pass   7: suminf.    0.69500 (2) obj. -6995.35 iterations 5
Cbc0038I Pass   8: suminf.    0.05571 (1) obj. -6995.35 iterations 2
Cbc0038I Pass   9: suminf.    0.29415 (1) obj. -8715.54 iterations 1
Cbc0038I Pass  10: suminf.    0.27659 (1) obj. -11359.9 iterations 4
Cbc0038I Pass  11: suminf.    0.27659 (1) obj. -11359.9 iterations 1
Cbc0038I Pass  12: suminf.    0.11845 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  13: suminf.    0.18604 (2) obj. -6995.35 iterations 3
Cbc0038I Pass  14: suminf.    0.18604 (2) obj. -6995.35 iterations 0
Cbc0038I Pass  15: suminf.    0.13308 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  16: suminf.    0.24000 (1) obj. -11518.2 iterations 1
Cbc0038I Pass  17: suminf.    0.19604 (2) obj. -6995.35 iterations 6
Cbc0038I Pass  18: suminf.    0.19604 (2) obj. -6995.35 iterations 0
Cbc0038I Pass  19: suminf.    0.24000 (1) obj. -11571.7 iterations 2
Cbc0038I Pass  20: suminf.    0.12567 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  21: suminf.    0.12816 (1) obj. -6995.35 iterations 4
Cbc0038I Pass  22: suminf.    0.12816 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  23: suminf.    0.22780 (1) obj. -11641.7 iterations 1
Cbc0038I Pass  24: suminf.    0.30098 (1) obj. -11285.1 iterations 2
Cbc0038I Pass  25: suminf.    0.30098 (1) obj. -11285.1 iterations 1
Cbc0038I Pass  26: suminf.    0.10442 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  27: suminf.    0.11260 (1) obj. -6995.35 iterations 2
Cbc0038I Pass  28: suminf.    0.27049 (1) obj. -11446 iterations 1
Cbc0038I Pass  29: suminf.    0.11260 (1) obj. -6995.35 iterations 1
Cbc0038I Pass  30: suminf.    0.66592 (2) obj. -6995.35 iterations 8
Cbc0038I Pass  31: suminf.    0.04383 (1) obj. -6995.35 iterations 3
Cbc0038I Rounding solution of -7265.54 is better than previous of -6429.11

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -7265.54 to -7350.9 (0.01 seconds)
Cbc0038I Round again with cutoff of -8299.02
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.11805 (1) obj. -12091.5 iterations 0
Cbc0038I Pass  32: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  33: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  34: suminf.    0.35627 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  35: suminf.    0.32123 (1) obj. -8299.02 iterations 5
Cbc0038I Pass  36: suminf.    0.32123 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  37: suminf.    0.49854 (1) obj. -9599.28 iterations 1
Cbc0038I Pass  38: suminf.    0.59527 (2) obj. -8299.02 iterations 12
Cbc0038I Pass  39: suminf.    0.59527 (2) obj. -8299.02 iterations 2
Cbc0038I Pass  40: suminf.    0.25829 (1) obj. -11347.4 iterations 2
Cbc0038I Pass  41: suminf.    0.31916 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  42: suminf.    0.65068 (3) obj. -8299.02 iterations 10
Cbc0038I Pass  43: suminf.    0.26209 (1) obj. -8299.02 iterations 4
Cbc0038I Pass  44: suminf.    0.26976 (1) obj. -8354.29 iterations 1
Cbc0038I Pass  45: suminf.    1.39643 (6) obj. -8299.02 iterations 7
Cbc0038I Pass  46: suminf.    1.18061 (5) obj. -8299.02 iterations 2
Cbc0038I Pass  47: suminf.    0.44244 (1) obj. -10531.4 iterations 3
Cbc0038I Pass  48: suminf.    0.24813 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  49: suminf.    0.64161 (3) obj. -8299.02 iterations 4
Cbc0038I Pass  50: suminf.    0.26445 (1) obj. -8299.02 iterations 2
Cbc0038I Pass  51: suminf.    0.39976 (1) obj. -10721.6 iterations 1
Cbc0038I Pass  52: suminf.    0.34854 (1) obj. -10942.7 iterations 2
Cbc0038I Pass  53: suminf.    0.28502 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  54: suminf.    0.34854 (1) obj. -10942.7 iterations 1
Cbc0038I Pass  55: suminf.    0.26317 (1) obj. -11332.6 iterations 2
Cbc0038I Pass  56: suminf.    0.26317 (1) obj. -11332.6 iterations 0
Cbc0038I Pass  57: suminf.    0.31634 (1) obj. -8299.02 iterations 1
Cbc0038I Pass  58: suminf.    0.29097 (1) obj. -8299.02 iterations 6
Cbc0038I Pass  59: suminf.    0.30707 (1) obj. -11198.9 iterations 1
Cbc0038I Pass  60: suminf.    0.29097 (1) obj. -8299.02 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7350.9 - took 0.03 seconds
Cbc0012I Integer solution of -7350.898 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -7361.3423 found by DiveCoefficient after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 5 rows 6 columns
Cbc0031I 7 added rows had average density of 9.1428571
Cbc0013I At root node, 7 cuts changed objective from -12091.51 to -7369.1091 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 51 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 350 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -7362.0911 found by rounding after 911 iterations and 2 nodes (0.08 seconds)
Cbc0004I Integer solution of -7364.3981 found after 930 iterations and 3 nodes (0.08 seconds)
Cbc0001I Search completed - best objective -7364.39813, took 948 iterations and 4 nodes (0.08 seconds)
Cbc0032I Strong branching done 22 times (91 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 39 (-8) columns and 299 (-90) elements
Clp1000I sum of infeasibilities 0 - average 0, 38 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-39) columns and 0 (-299) elements
Clp0000I Optimal - objective value 12060.51
Clp0000I Optimal - objective value 12060.51
Coin0511I After Postsolve, objective 12060.51, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2924041 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 12201.83
Clp0000I Optimal - objective value 12201.83
Clp0000I Optimal - objective value 12201.83
Coin0511I After Postsolve, objective 12201.83, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12201.83049 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 41 columns (41 integer (41 of which binary)) and 309 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 1.4807
Cbc0038I Pass   1: suminf.    0.27771 (11) obj. -7502.37 iterations 7
Cbc0038I Pass   2: suminf.    0.21502 (3) obj. -7320.39 iterations 2
Cbc0038I Solution found of -7316.68
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -7800.66
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.29221 (11) obj. -12155.8 iterations 2
Cbc0038I Pass   4: suminf.    0.28719 (1) obj. -7800.66 iterations 11
Cbc0038I Pass   5: suminf.    0.11805 (1) obj. -12091.5 iterations 1
Cbc0038I Pass   6: suminf.    0.49155 (3) obj. -11453.7 iterations 7
Cbc0038I Pass   7: suminf.    0.44011 (2) obj. -11453.5 iterations 2
Cbc0038I Pass   8: suminf.    0.23720 (1) obj. -7800.66 iterations 2
Cbc0038I Pass   9: suminf.    0.25829 (1) obj. -11440.4 iterations 1
Cbc0038I Pass  10: suminf.    2.00903 (6) obj. -7800.66 iterations 8
Cbc0038I Pass  11: suminf.    1.03128 (4) obj. -7800.66 iterations 4
Cbc0038I Pass  12: suminf.    1.67993 (6) obj. -7800.66 iterations 8
Cbc0038I Pass  13: suminf.    1.05448 (4) obj. -7800.66 iterations 2
Cbc0038I Pass  14: suminf.    0.46488 (1) obj. -9503.4 iterations 4
Cbc0038I Pass  15: suminf.    0.22886 (1) obj. -7800.66 iterations 1
Cbc0038I Pass  16: suminf.    0.65775 (2) obj. -7800.66 iterations 9
Cbc0038I Pass  17: suminf.    0.24913 (1) obj. -7800.66 iterations 3
Cbc0038I Pass  18: suminf.    0.48024 (1) obj. -9753.11 iterations 1
Cbc0038I Pass  19: suminf.    0.75183 (4) obj. -11257.6 iterations 11
Cbc0038I Pass  20: suminf.    0.67598 (3) obj. -11257.4 iterations 3
Cbc0038I Pass  21: suminf.    0.22115 (1) obj. -7800.66 iterations 3
Cbc0038I Pass  22: suminf.    0.30098 (1) obj. -11248.3 iterations 1
Cbc0038I Pass  23: suminf.    2.68219 (8) obj. -10773.5 iterations 14
Cbc0038I Pass  24: suminf.    2.60054 (7) obj. -10773.4 iterations 2
Cbc0038I Pass  25: suminf.    0.21136 (1) obj. -7800.66 iterations 7
Cbc0038I Pass  26: suminf.    0.37902 (1) obj. -10755.8 iterations 1
Cbc0038I Pass  27: suminf.    1.97415 (6) obj. -7800.66 iterations 11
Cbc0038I Pass  28: suminf.    1.31404 (4) obj. -7800.66 iterations 4
Cbc0038I Pass  29: suminf.    0.47059 (1) obj. -10350.8 iterations 4
Cbc0038I Pass  30: suminf.    0.17593 (1) obj. -7800.66 iterations 1
Cbc0038I Pass  31: suminf.    1.12556 (3) obj. -7800.66 iterations 4
Cbc0038I Pass  32: suminf.    1.12556 (3) obj. -7800.66 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -7316.68 - took 0.01 seconds
Cbc0012I Integer solution of -7316.676 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 41 columns, reduced to 12 rows 9 columns
Cbc0031I 14 added rows had average density of 6.0714286
Cbc0013I At root node, 14 cuts changed objective from -12156.547 to -7370.576 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 86 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 206 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 114 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.775 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7316.676 best solution, best possible -7370.576 (1.44 seconds)
Cbc0004I Integer solution of -7364.3981 found after 874 iterations and 1 nodes (1.47 seconds)
Cbc0001I Search completed - best objective -7364.39813, took 879 iterations and 2 nodes (1.47 seconds)
Cbc0032I Strong branching done 16 times (59 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.47

