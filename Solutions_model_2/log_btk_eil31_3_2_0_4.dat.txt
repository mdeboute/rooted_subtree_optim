Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 25 (-8) columns and 131 (-52) elements
Clp1000I sum of infeasibilities 0 - average 0, 21 fixed columns
Coin0506I Presolve 4 (-40) rows, 4 (-21) columns and 9 (-122) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 4607.3218
Clp0000I Optimal - objective value 4607.3218
Coin0511I After Postsolve, objective 4607.3218, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8743155 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 4607.3218
Clp0000I Optimal - objective value 4607.3218
Clp0000I Optimal - objective value 4607.3218
Coin0511I After Postsolve, objective 4607.3218, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4607.321847 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.272824
Cbc0038I Pass   1: suminf.    0.24264 (2) obj. -4589.73 iterations 3
Cbc0038I Solution found of -936.906
Cbc0038I Relaxing continuous gives -945
Cbc0038I Rounding solution of -1060.91 is better than previous of -945

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -1060.91 to -3030 (0.01 seconds)
Cbc0038I Round again with cutoff of -3188.63
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.24264 (2) obj. -4589.73 iterations 0
Cbc0038I Pass   3: suminf.    0.07638 (2) obj. -3188.63 iterations 6
Cbc0038I Pass   4: suminf.    0.07638 (2) obj. -3188.63 iterations 0
Cbc0038I Pass   5: suminf.    0.24264 (2) obj. -4589.73 iterations 4
Cbc0038I Pass   6: suminf.    0.65824 (2) obj. -3188.63 iterations 6
Cbc0038I Pass   7: suminf.    0.65824 (2) obj. -3188.63 iterations 1
Cbc0038I Pass   8: suminf.    0.83632 (2) obj. -3188.63 iterations 1
Cbc0038I Pass   9: suminf.    1.21229 (3) obj. -3188.63 iterations 8
Cbc0038I Pass  10: suminf.    0.62628 (2) obj. -3188.63 iterations 3
Cbc0038I Pass  11: suminf.    0.83715 (2) obj. -3188.63 iterations 1
Cbc0038I Pass  12: suminf.    0.87499 (3) obj. -3188.63 iterations 5
Cbc0038I Pass  13: suminf.    0.87499 (3) obj. -3188.63 iterations 1
Cbc0038I Pass  14: suminf.    0.69174 (2) obj. -3681.87 iterations 2
Cbc0038I Pass  15: suminf.    0.44451 (2) obj. -3188.63 iterations 1
Cbc0038I Pass  16: suminf.    0.97143 (2) obj. -3202.34 iterations 2
Cbc0038I Pass  17: suminf.    1.30767 (4) obj. -3188.63 iterations 11
Cbc0038I Pass  18: suminf.    1.05599 (3) obj. -3188.63 iterations 2
Cbc0038I Pass  19: suminf.    0.60019 (2) obj. -3188.63 iterations 3
Cbc0038I Pass  20: suminf.    0.25410 (2) obj. -3188.63 iterations 2
Cbc0038I Pass  21: suminf.    0.32430 (3) obj. -3188.63 iterations 1
Cbc0038I Pass  22: suminf.    0.25410 (2) obj. -3188.63 iterations 1
Cbc0038I Pass  23: suminf.    0.98830 (3) obj. -3188.63 iterations 1
Cbc0038I Pass  24: suminf.    0.98830 (3) obj. -3188.63 iterations 0
Cbc0038I Pass  25: suminf.    1.52406 (5) obj. -3188.63 iterations 3
Cbc0038I Pass  26: suminf.    0.70288 (3) obj. -3188.63 iterations 5
Cbc0038I Pass  27: suminf.    0.69266 (2) obj. -3919.33 iterations 3
Cbc0038I Pass  28: suminf.    0.35772 (1) obj. -3251.09 iterations 1
Cbc0038I Pass  29: suminf.    0.60695 (2) obj. -3188.63 iterations 2
Cbc0038I Pass  30: suminf.    1.38553 (6) obj. -3188.63 iterations 7
Cbc0038I Pass  31: suminf.    0.54917 (2) obj. -3188.63 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3030 - took 0.01 seconds
Cbc0012I Integer solution of -3030 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -3049 found by DiveCoefficient after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 6 rows 5 columns
Cbc0012I Integer solution of -4138 found by DiveCoefficient after 9 iterations and 0 nodes (0.01 seconds)
Cbc0031I 4 added rows had average density of 11.25
Cbc0013I At root node, 4 cuts changed objective from -4607.3218 to -4138 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 4.8 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 5 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -4138, took 9 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-17) rows, 51 (-11) columns and 435 (-213) elements
Clp1000I sum of infeasibilities 6.97659e-08 - average 1.48438e-09, 38 fixed columns
Coin0506I Presolve 13 (-34) rows, 13 (-38) columns and 32 (-403) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 4627.3982
Clp0000I Optimal - objective value 4627.3982
Coin0511I After Postsolve, objective 4627.3982, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1809243 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4627.3982
Clp0000I Optimal - objective value 4627.3982
Clp0000I Optimal - objective value 4627.3982
Coin0511I After Postsolve, objective 4627.3982, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4627.398187 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 6 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.938%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.47292
Cbc0038I Pass   1: suminf.    0.26401 (2) obj. -2571.45 iterations 11
Cbc0038I Pass   2: suminf.    0.26401 (2) obj. -2571.45 iterations 2
Cbc0038I Solution found of -945
Cbc0038I Rounding solution of -1069 is better than previous of -945

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 17 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -1069 to -3030 (0.02 seconds)
Cbc0038I Round again with cutoff of -3179.14
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.04668 (8) obj. -3179.14 iterations 5
Cbc0038I Pass   4: suminf.    1.04668 (8) obj. -3179.14 iterations 1
Cbc0038I Pass   5: suminf.    0.13426 (2) obj. -3179.14 iterations 13
Cbc0038I Pass   6: suminf.    0.50679 (2) obj. -3179.14 iterations 1
Cbc0038I Pass   7: suminf.    1.50301 (6) obj. -3179.14 iterations 6
Cbc0038I Pass   8: suminf.    1.50301 (6) obj. -3179.14 iterations 1
Cbc0038I Pass   9: suminf.    0.53308 (2) obj. -3179.14 iterations 5
Cbc0038I Pass  10: suminf.    0.54071 (2) obj. -3179.14 iterations 1
Cbc0038I Pass  11: suminf.    1.41907 (6) obj. -3179.14 iterations 21
Cbc0038I Pass  12: suminf.    0.92571 (5) obj. -3179.14 iterations 4
Cbc0038I Pass  13: suminf.    0.56723 (2) obj. -3226.21 iterations 4
Cbc0038I Pass  14: suminf.    0.48191 (2) obj. -3179.14 iterations 2
Cbc0038I Pass  15: suminf.    0.48191 (2) obj. -3179.14 iterations 0
Cbc0038I Pass  16: suminf.    0.55092 (2) obj. -3179.14 iterations 1
Cbc0038I Pass  17: suminf.    2.03521 (7) obj. -3179.14 iterations 7
Cbc0038I Pass  18: suminf.    2.03521 (7) obj. -3179.14 iterations 0
Cbc0038I Pass  19: suminf.    0.98984 (2) obj. -3179.14 iterations 5
Cbc0038I Pass  20: suminf.    0.66893 (2) obj. -3851.13 iterations 1
Cbc0038I Pass  21: suminf.    0.19707 (2) obj. -3179.14 iterations 2
Cbc0038I Pass  22: suminf.    0.19707 (2) obj. -3179.14 iterations 0
Cbc0038I Pass  23: suminf.    1.00250 (4) obj. -3179.14 iterations 11
Cbc0038I Pass  24: suminf.    0.58666 (3) obj. -3179.14 iterations 2
Cbc0038I Pass  25: suminf.    0.90478 (2) obj. -3179.14 iterations 2
Cbc0038I Pass  26: suminf.    0.25181 (2) obj. -3179.14 iterations 1
Cbc0038I Pass  27: suminf.    2.74650 (10) obj. -3179.14 iterations 12
Cbc0038I Pass  28: suminf.    2.45511 (9) obj. -3179.14 iterations 2
Cbc0038I Pass  29: suminf.    0.83955 (2) obj. -3179.14 iterations 9
Cbc0038I Pass  30: suminf.    0.47008 (2) obj. -3179.14 iterations 1
Cbc0038I Pass  31: suminf.    2.04938 (6) obj. -3179.14 iterations 10
Cbc0038I Pass  32: suminf.    2.04938 (6) obj. -3179.14 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -3030 to -4138 (0.03 seconds)
Cbc0038I Round again with cutoff of -4213.68
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.89263 (12) obj. -4213.68 iterations 1
Cbc0038I Pass  33: suminf.    1.42091 (6) obj. -4213.68 iterations 9
Cbc0038I Pass  34: suminf.    1.24099 (5) obj. -4213.68 iterations 1
Cbc0038I Pass  35: suminf.    0.95833 (2) obj. -4213.68 iterations 3
Cbc0038I Pass  36: suminf.    0.90298 (2) obj. -4327.26 iterations 1
Cbc0038I Pass  37: suminf.    0.85174 (7) obj. -4213.68 iterations 8
Cbc0038I Pass  38: suminf.    0.81657 (7) obj. -4213.68 iterations 3
Cbc0038I Pass  39: suminf.    1.13363 (4) obj. -4213.68 iterations 6
Cbc0038I Pass  40: suminf.    0.57209 (4) obj. -4213.68 iterations 4
Cbc0038I Pass  41: suminf.    0.66086 (6) obj. -4213.68 iterations 5
Cbc0038I Pass  42: suminf.    0.63293 (5) obj. -4213.68 iterations 1
Cbc0038I Pass  43: suminf.    1.09092 (4) obj. -4213.68 iterations 4
Cbc0038I Pass  44: suminf.    0.63086 (4) obj. -4213.68 iterations 4
Cbc0038I Pass  45: suminf.    1.75967 (5) obj. -4213.68 iterations 9
Cbc0038I Pass  46: suminf.    0.87221 (5) obj. -4213.68 iterations 6
Cbc0038I Pass  47: suminf.    1.13363 (4) obj. -4213.68 iterations 3
Cbc0038I Pass  48: suminf.    0.57209 (4) obj. -4213.68 iterations 3
Cbc0038I Pass  49: suminf.    1.26593 (4) obj. -4213.68 iterations 4
Cbc0038I Pass  50: suminf.    0.63086 (4) obj. -4213.68 iterations 1
Cbc0038I Pass  51: suminf.    1.09092 (4) obj. -4213.68 iterations 2
Cbc0038I Pass  52: suminf.    1.54610 (9) obj. -4213.68 iterations 9
Cbc0038I Pass  53: suminf.    1.18031 (4) obj. -4213.68 iterations 6
Cbc0038I Pass  54: suminf.    0.94956 (2) obj. -4213.68 iterations 3
Cbc0038I Pass  55: suminf.    0.90298 (2) obj. -4309.26 iterations 1
Cbc0038I Pass  56: suminf.    1.11229 (3) obj. -4313.84 iterations 4
Cbc0038I Pass  57: suminf.    1.11229 (3) obj. -4313.84 iterations 1
Cbc0038I Pass  58: suminf.    0.95102 (2) obj. -4213.68 iterations 3
Cbc0038I Pass  59: suminf.    0.90298 (2) obj. -4312.26 iterations 1
Cbc0038I Pass  60: suminf.    1.45545 (5) obj. -4314.98 iterations 4
Cbc0038I Pass  61: suminf.    1.31562 (4) obj. -4314.84 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 24 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -4138 - took 0.02 seconds
Cbc0012I Integer solution of -4138 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 19 rows 19 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -4512.3945 to -4512.3945 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 16 column cuts (16 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4138, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-21) rows, 25 (-8) columns and 131 (-52) elements
Clp1000I sum of infeasibilities 0 - average 0, 21 fixed columns
Coin0506I Presolve 4 (-40) rows, 4 (-21) columns and 9 (-122) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 4607.3218
Clp0000I Optimal - objective value 4607.3218
Coin0511I After Postsolve, objective 4607.3218, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8743155 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 4607.3218
Clp0000I Optimal - objective value 4607.3218
Clp0000I Optimal - objective value 4607.3218
Coin0511I After Postsolve, objective 4607.3218, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4607.321847 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 43 rows, 25 columns (24 integer (24 of which binary)) and 135 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.272824
Cbc0038I Pass   1: suminf.    0.24264 (2) obj. -4589.73 iterations 3
Cbc0038I Solution found of -936.906
Cbc0038I Relaxing continuous gives -945
Cbc0038I Rounding solution of -1060.91 is better than previous of -945

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -1060.91 to -3030 (0.01 seconds)
Cbc0038I Round again with cutoff of -3188.63
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.24264 (2) obj. -4589.73 iterations 0
Cbc0038I Pass   3: suminf.    0.07638 (2) obj. -3188.63 iterations 6
Cbc0038I Pass   4: suminf.    0.07638 (2) obj. -3188.63 iterations 0
Cbc0038I Pass   5: suminf.    0.24264 (2) obj. -4589.73 iterations 4
Cbc0038I Pass   6: suminf.    0.65824 (2) obj. -3188.63 iterations 6
Cbc0038I Pass   7: suminf.    0.65824 (2) obj. -3188.63 iterations 1
Cbc0038I Pass   8: suminf.    0.83632 (2) obj. -3188.63 iterations 1
Cbc0038I Pass   9: suminf.    1.21229 (3) obj. -3188.63 iterations 8
Cbc0038I Pass  10: suminf.    0.62628 (2) obj. -3188.63 iterations 3
Cbc0038I Pass  11: suminf.    0.83715 (2) obj. -3188.63 iterations 1
Cbc0038I Pass  12: suminf.    0.87499 (3) obj. -3188.63 iterations 5
Cbc0038I Pass  13: suminf.    0.87499 (3) obj. -3188.63 iterations 1
Cbc0038I Pass  14: suminf.    0.69174 (2) obj. -3681.87 iterations 2
Cbc0038I Pass  15: suminf.    0.44451 (2) obj. -3188.63 iterations 1
Cbc0038I Pass  16: suminf.    0.97143 (2) obj. -3202.34 iterations 2
Cbc0038I Pass  17: suminf.    1.30767 (4) obj. -3188.63 iterations 11
Cbc0038I Pass  18: suminf.    1.05599 (3) obj. -3188.63 iterations 2
Cbc0038I Pass  19: suminf.    0.60019 (2) obj. -3188.63 iterations 3
Cbc0038I Pass  20: suminf.    0.25410 (2) obj. -3188.63 iterations 2
Cbc0038I Pass  21: suminf.    0.32430 (3) obj. -3188.63 iterations 1
Cbc0038I Pass  22: suminf.    0.25410 (2) obj. -3188.63 iterations 1
Cbc0038I Pass  23: suminf.    0.98830 (3) obj. -3188.63 iterations 1
Cbc0038I Pass  24: suminf.    0.98830 (3) obj. -3188.63 iterations 0
Cbc0038I Pass  25: suminf.    1.52406 (5) obj. -3188.63 iterations 3
Cbc0038I Pass  26: suminf.    0.70288 (3) obj. -3188.63 iterations 5
Cbc0038I Pass  27: suminf.    0.69266 (2) obj. -3919.33 iterations 3
Cbc0038I Pass  28: suminf.    0.35772 (1) obj. -3251.09 iterations 1
Cbc0038I Pass  29: suminf.    0.60695 (2) obj. -3188.63 iterations 2
Cbc0038I Pass  30: suminf.    1.38553 (6) obj. -3188.63 iterations 7
Cbc0038I Pass  31: suminf.    0.54917 (2) obj. -3188.63 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 43 rows 25 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3030 - took 0.01 seconds
Cbc0012I Integer solution of -3030 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of -3049 found by DiveCoefficient after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 43 rows 25 columns, reduced to 6 rows 5 columns
Cbc0012I Integer solution of -4138 found by DiveCoefficient after 9 iterations and 0 nodes (0.02 seconds)
Cbc0031I 4 added rows had average density of 11.25
Cbc0013I At root node, 4 cuts changed objective from -4607.3218 to -4138 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 4.8 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 5 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -4138, took 9 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-24) rows, 45 (-18) columns and 354 (-295) elements
Clp1000I sum of infeasibilities 4.05821e-08 - average 9.89807e-10, 32 fixed columns
Coin0506I Presolve 13 (-28) rows, 13 (-32) columns and 32 (-322) elements
Clp0029I End of values pass after 13 iterations
Clp0000I Optimal - objective value 4627.3982
Clp0000I Optimal - objective value 4627.3982
Coin0511I After Postsolve, objective 4627.3982, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2377272 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4627.3982
Clp0000I Optimal - objective value 4627.3982
Clp0000I Optimal - objective value 4627.3982
Coin0511I After Postsolve, objective 4627.3982, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4627.398187 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 45 columns (45 integer (45 of which binary)) and 360 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.791%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.32179
Cbc0038I Pass   1: suminf.    0.25588 (2) obj. -2588.2 iterations 23
Cbc0038I Pass   2: suminf.    0.25588 (2) obj. -2588.2 iterations 1
Cbc0038I Solution found of -945
Cbc0038I Rounding solution of -1069 is better than previous of -945

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 17 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -1069 to -3030 (0.01 seconds)
Cbc0038I Round again with cutoff of -3187.14
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.02729 (8) obj. -3187.14 iterations 3
Cbc0038I Pass   4: suminf.    0.58879 (4) obj. -3187.14 iterations 1
Cbc0038I Pass   5: suminf.    0.57143 (2) obj. -3910.14 iterations 4
Cbc0038I Pass   6: suminf.    0.51519 (2) obj. -4025.69 iterations 1
Cbc0038I Pass   7: suminf.    0.91953 (2) obj. -3187.14 iterations 2
Cbc0038I Pass   8: suminf.    2.44883 (11) obj. -3187.14 iterations 9
Cbc0038I Pass   9: suminf.    0.92056 (4) obj. -3187.14 iterations 8
Cbc0038I Pass  10: suminf.    0.69841 (2) obj. -3635.4 iterations 4
Cbc0038I Pass  11: suminf.    0.69841 (2) obj. -3635.4 iterations 0
Cbc0038I Pass  12: suminf.    0.91423 (2) obj. -3187.14 iterations 4
Cbc0038I Pass  13: suminf.    2.48034 (9) obj. -3187.14 iterations 16
Cbc0038I Pass  14: suminf.    0.93672 (5) obj. -3187.14 iterations 6
Cbc0038I Pass  15: suminf.    0.93089 (4) obj. -3187.14 iterations 1
Cbc0038I Pass  16: suminf.    0.44817 (2) obj. -3187.14 iterations 3
Cbc0038I Pass  17: suminf.    0.20635 (2) obj. -3689.41 iterations 1
Cbc0038I Pass  18: suminf.    0.26885 (3) obj. -3688.35 iterations 7
Cbc0038I Pass  19: suminf.    0.26885 (3) obj. -3688.35 iterations 2
Cbc0038I Pass  20: suminf.    0.44721 (2) obj. -3187.14 iterations 3
Cbc0038I Pass  21: suminf.    0.20635 (2) obj. -3687.41 iterations 1
Cbc0038I Pass  22: suminf.    1.65843 (6) obj. -3187.14 iterations 14
Cbc0038I Pass  23: suminf.    1.64927 (7) obj. -3187.14 iterations 3
Cbc0038I Pass  24: suminf.    0.62581 (2) obj. -3330.95 iterations 5
Cbc0038I Pass  25: suminf.    0.55380 (2) obj. -3187.14 iterations 3
Cbc0038I Pass  26: suminf.    0.72556 (2) obj. -3539.62 iterations 1
Cbc0038I Pass  27: suminf.    2.20607 (10) obj. -3187.14 iterations 14
Cbc0038I Pass  28: suminf.    2.20199 (10) obj. -3187.14 iterations 3
Cbc0038I Pass  29: suminf.    0.71310 (2) obj. -3515.83 iterations 11
Cbc0038I Pass  30: suminf.    0.55292 (2) obj. -3187.14 iterations 4
Cbc0038I Pass  31: suminf.    0.71310 (2) obj. -3515.83 iterations 1
Cbc0038I Pass  32: suminf.    3.05089 (11) obj. -3187.14 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -3030 to -4138 (0.03 seconds)
Cbc0038I Round again with cutoff of -4229.68
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.82019 (9) obj. -4229.68 iterations 1
Cbc0038I Pass  33: suminf.    0.88758 (3) obj. -4229.68 iterations 8
Cbc0038I Pass  34: suminf.    0.88758 (3) obj. -4229.68 iterations 0
Cbc0038I Pass  35: suminf.    0.41327 (2) obj. -4229.68 iterations 2
Cbc0038I Pass  36: suminf.    0.29964 (2) obj. -4463.15 iterations 1
Cbc0038I Pass  37: suminf.    0.29964 (2) obj. -4463.15 iterations 5
Cbc0038I Pass  38: suminf.    0.29964 (2) obj. -4463.15 iterations 1
Cbc0038I Pass  39: suminf.    0.41327 (2) obj. -4229.68 iterations 2
Cbc0038I Pass  40: suminf.    0.39006 (3) obj. -4464.96 iterations 6
Cbc0038I Pass  41: suminf.    0.41327 (2) obj. -4229.68 iterations 3
Cbc0038I Pass  42: suminf.    0.29964 (2) obj. -4463.15 iterations 1
Cbc0038I Pass  43: suminf.    0.38900 (3) obj. -4229.68 iterations 10
Cbc0038I Pass  44: suminf.    0.35260 (2) obj. -4229.68 iterations 2
Cbc0038I Pass  45: suminf.    0.41061 (2) obj. -4229.68 iterations 3
Cbc0038I Pass  46: suminf.    0.29964 (2) obj. -4462.15 iterations 1
Cbc0038I Pass  47: suminf.    0.41279 (2) obj. -4229.68 iterations 2
Cbc0038I Pass  48: suminf.    0.77637 (5) obj. -4229.68 iterations 5
Cbc0038I Pass  49: suminf.    0.77637 (5) obj. -4229.68 iterations 0
Cbc0038I Pass  50: suminf.    0.41279 (2) obj. -4229.68 iterations 4
Cbc0038I Pass  51: suminf.    0.29964 (2) obj. -4462.15 iterations 1
Cbc0038I Pass  52: suminf.    0.44044 (4) obj. -4229.68 iterations 10
Cbc0038I Pass  53: suminf.    0.36675 (2) obj. -4229.68 iterations 3
Cbc0038I Pass  54: suminf.    0.40870 (2) obj. -4229.68 iterations 3
Cbc0038I Pass  55: suminf.    0.29964 (2) obj. -4458.15 iterations 1
Cbc0038I Pass  56: suminf.    0.41084 (2) obj. -4229.68 iterations 2
Cbc0038I Pass  57: suminf.    0.72379 (4) obj. -4229.68 iterations 4
Cbc0038I Pass  58: suminf.    0.66751 (3) obj. -4229.68 iterations 1
Cbc0038I Pass  59: suminf.    0.41133 (2) obj. -4229.68 iterations 2
Cbc0038I Pass  60: suminf.    0.29964 (2) obj. -4459.15 iterations 1
Cbc0038I Pass  61: suminf.    0.29964 (2) obj. -4462.15 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 45 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -4138 - took 0.03 seconds
Cbc0012I Integer solution of -4138 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 40 rows 45 columns, reduced to 19 rows 19 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -4592.4072 to -4592.4072 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -4138, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

