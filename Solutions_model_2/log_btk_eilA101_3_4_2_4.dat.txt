Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 1.43927e-05 - average 7.90808e-08, 15 fixed columns
Coin0506I Presolve 152 (-30) rows, 85 (-15) columns and 466 (-90) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 2.056621 - largest nonzero change 0 ( 0%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Coin0511I After Postsolve, objective 32.101225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Coin0511I After Postsolve, objective 32.101225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.10122513 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 12.6271
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.0566 iterations 68
Cbc0038I Solution found of 11.0566
Cbc0038I Relaxing continuous gives 11.0566
Cbc0038I Rounding solution of -1.14023 is better than previous of 11.0566

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -1.14023 to -2.95326 (0.07 seconds)
Cbc0038I Round again with cutoff of -5.86814
Cbc0038I Pass   2: suminf.    2.21646 (9) obj. -5.86814 iterations 15
Cbc0038I Pass   3: suminf.    2.37787 (11) obj. -5.86814 iterations 23
Cbc0038I Pass   4: suminf.    1.55306 (7) obj. -5.86814 iterations 10
Cbc0038I Pass   5: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass   6: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass   7: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass   8: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass   9: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  10: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  11: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  12: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  13: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  14: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  15: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  16: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  17: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  18: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  19: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  20: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  21: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  22: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  23: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  24: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  25: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  26: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  27: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  28: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  29: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  30: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  31: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -2.95326 to -3.81129 (0.13 seconds)
Cbc0038I Round again with cutoff of -11.1148
Cbc0038I Pass  31: suminf.    3.45402 (13) obj. -11.1148 iterations 4
Cbc0038I Pass  32: suminf.    3.08341 (10) obj. -11.1148 iterations 15
Cbc0038I Pass  33: suminf.    2.82499 (9) obj. -11.1148 iterations 3
Cbc0038I Pass  34: suminf.    3.57818 (11) obj. -11.1148 iterations 13
Cbc0038I Pass  35: suminf.    3.30049 (11) obj. -11.1148 iterations 12
Cbc0038I Pass  36: suminf.    4.56976 (15) obj. -11.1148 iterations 27
Cbc0038I Pass  37: suminf.    2.71453 (8) obj. -11.1148 iterations 26
Cbc0038I Pass  38: suminf.    2.34003 (8) obj. -11.1148 iterations 9
Cbc0038I Pass  39: suminf.    3.19211 (11) obj. -11.1148 iterations 8
Cbc0038I Pass  40: suminf.    3.19211 (11) obj. -11.1148 iterations 1
Cbc0038I Pass  41: suminf.    3.55934 (11) obj. -11.1148 iterations 16
Cbc0038I Pass  42: suminf.    2.69982 (10) obj. -11.1148 iterations 10
Cbc0038I Pass  43: suminf.    2.69982 (10) obj. -11.1148 iterations 1
Cbc0038I Pass  44: suminf.    3.17455 (10) obj. -11.1148 iterations 20
Cbc0038I Pass  45: suminf.    2.60971 (10) obj. -11.1148 iterations 6
Cbc0038I Pass  46: suminf.    4.00275 (10) obj. -11.1148 iterations 21
Cbc0038I Pass  47: suminf.    2.24233 (7) obj. -11.1148 iterations 9
Cbc0038I Pass  48: suminf.    2.07180 (8) obj. -11.1148 iterations 6
Cbc0038I Pass  49: suminf.    3.58035 (13) obj. -11.1148 iterations 18
Cbc0038I Pass  50: suminf.    3.21722 (10) obj. -11.1148 iterations 2
Cbc0038I Pass  51: suminf.    2.69982 (10) obj. -11.1148 iterations 4
Cbc0038I Pass  52: suminf.    2.69982 (10) obj. -11.1148 iterations 0
Cbc0038I Pass  53: suminf.    3.17455 (10) obj. -11.1148 iterations 20
Cbc0038I Pass  54: suminf.    2.60971 (10) obj. -11.1148 iterations 6
Cbc0038I Pass  55: suminf.    4.00275 (10) obj. -11.1148 iterations 21
Cbc0038I Pass  56: suminf.    2.24233 (7) obj. -11.1148 iterations 9
Cbc0038I Pass  57: suminf.    2.07180 (8) obj. -11.1148 iterations 6
Cbc0038I Pass  58: suminf.    3.58035 (13) obj. -11.1148 iterations 18
Cbc0038I Pass  59: suminf.    3.21722 (10) obj. -11.1148 iterations 2
Cbc0038I Pass  60: suminf.    2.69982 (10) obj. -11.1148 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 83 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -3.81129 - took 0.16 seconds
Cbc0012I Integer solution of -3.811288 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0012I Integer solution of -4.286078 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 33 added rows had average density of 56.575758
Cbc0013I At root node, 33 cuts changed objective from -32.101225 to -24.23575 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18476 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2670 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.286078 best solution, best possible -24.23575 (1.54 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 9 rows 10 columns
Cbc0038I Full problem 182 rows 100 columns, reduced to 75 rows 48 columns
Cbc0012I Integer solution of -4.403768 found by RINS after 12682 iterations and 91 nodes (2.08 seconds)
Cbc0001I Search completed - best objective -4.403767999999999, took 14043 iterations and 136 nodes (2.17 seconds)
Cbc0032I Strong branching done 1520 times (28398 iterations), fathomed 16 nodes and fixed 89 variables
Cbc0035I Maximum depth 33, 354 variables fixed on reduced cost
Total time (CPU seconds):       2.08   (Wallclock seconds):       2.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-80) rows, 140 (-62) columns and 2459 (-3194) elements
Clp1000I sum of infeasibilities 8.43054e-08 - average 6.79882e-10, 21 fixed columns
Coin0506I Presolve 103 (-21) rows, 119 (-21) columns and 1880 (-579) elements
Clp0006I 0  Obj 30.873468 Dual inf 6.2580971 (118)
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 1.9657641 - largest nonzero change 2.9482467e-05 ( 0.0025543869%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 47.158769
Clp0000I Optimal - objective value 47.158769
Coin0511I After Postsolve, objective 47.158769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.158769
Clp0000I Optimal - objective value 47.158769
Clp0000I Optimal - objective value 47.158769
Clp0000I Optimal - objective value 47.158769
Coin0511I After Postsolve, objective 47.158769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.15876932 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 140 columns (140 integer (140 of which binary)) and 2461 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.798%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 7.65601
Cbc0038I Pass   1: suminf.    4.02113 (33) obj. -37.3859 iterations 17
Cbc0038I Pass   2: suminf.    2.77479 (29) obj. -35.1581 iterations 9
Cbc0038I Pass   3: suminf.    0.75157 (10) obj. -7.68455 iterations 19
Cbc0038I Solution found of 1.56388
Cbc0038I Rounding solution of -0.042407 is better than previous of 1.56388

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4.24686
Cbc0038I Pass   4: suminf.    4.02113 (33) obj. -37.3859 iterations 0
Cbc0038I Pass   5: suminf.    2.77479 (29) obj. -35.1581 iterations 7
Cbc0038I Pass   6: suminf.    1.10595 (14) obj. -11.3302 iterations 15
Cbc0038I Pass   7: suminf.    0.48525 (3) obj. -4.24686 iterations 28
Cbc0038I Pass   8: suminf.    0.48525 (3) obj. -4.24686 iterations 0
Cbc0038I Pass   9: suminf.    0.54660 (3) obj. -4.24686 iterations 5
Cbc0038I Pass  10: suminf.    0.54660 (3) obj. -4.24686 iterations 0
Cbc0038I Pass  11: suminf.    0.48525 (3) obj. -4.24686 iterations 3
Cbc0038I Pass  12: suminf.    2.81167 (13) obj. -4.24686 iterations 29
Cbc0038I Pass  13: suminf.    1.74259 (10) obj. -4.24686 iterations 11
Cbc0038I Pass  14: suminf.    1.19870 (10) obj. -4.24686 iterations 3
Cbc0038I Pass  15: suminf.    1.09850 (9) obj. -4.40587 iterations 3
Cbc0038I Pass  16: suminf.    1.18060 (10) obj. -4.24686 iterations 16
Cbc0038I Pass  17: suminf.    1.18060 (10) obj. -4.24686 iterations 0
Cbc0038I Pass  18: suminf.    1.74313 (7) obj. -4.24686 iterations 12
Cbc0038I Pass  19: suminf.    0.78987 (6) obj. -4.24686 iterations 7
Cbc0038I Pass  20: suminf.    1.07627 (6) obj. -4.24686 iterations 10
Cbc0038I Pass  21: suminf.    0.69566 (7) obj. -4.98672 iterations 3
Cbc0038I Pass  22: suminf.    0.93927 (7) obj. -4.24686 iterations 9
Cbc0038I Pass  23: suminf.    0.90958 (5) obj. -4.24686 iterations 4
Cbc0038I Pass  24: suminf.    0.88975 (7) obj. -4.24686 iterations 6
Cbc0038I Pass  25: suminf.    0.85552 (5) obj. -4.24686 iterations 6
Cbc0038I Pass  26: suminf.    0.79963 (6) obj. -4.24686 iterations 9
Cbc0038I Pass  27: suminf.    0.75455 (5) obj. -4.24686 iterations 7
Cbc0038I Pass  28: suminf.    2.86030 (13) obj. -4.24686 iterations 27
Cbc0038I Pass  29: suminf.    1.29017 (11) obj. -4.24686 iterations 15
Cbc0038I Pass  30: suminf.    1.09563 (7) obj. -4.24686 iterations 13
Cbc0038I Pass  31: suminf.    1.09563 (7) obj. -4.24686 iterations 1
Cbc0038I Pass  32: suminf.    1.04718 (5) obj. -4.24686 iterations 6
Cbc0038I Pass  33: suminf.    1.04718 (5) obj. -4.24686 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 23 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 1.56388 to -1.42175 (0.07 seconds)
Cbc0038I Round again with cutoff of -11.8147
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.02113 (33) obj. -37.3859 iterations 0
Cbc0038I Pass  34: suminf.    2.77479 (29) obj. -35.1581 iterations 7
Cbc0038I Pass  35: suminf.    0.84062 (11) obj. -11.8147 iterations 29
Cbc0038I Pass  36: suminf.    0.84062 (11) obj. -11.8147 iterations 0
Cbc0038I Pass  37: suminf.    0.99565 (8) obj. -11.8147 iterations 20
Cbc0038I Pass  38: suminf.    0.55875 (7) obj. -11.8147 iterations 8
Cbc0038I Pass  39: suminf.    0.82266 (7) obj. -11.8147 iterations 9
Cbc0038I Pass  40: suminf.    0.82266 (7) obj. -11.8147 iterations 4
Cbc0038I Pass  41: suminf.    0.58443 (12) obj. -11.8147 iterations 7
Cbc0038I Pass  42: suminf.    1.39088 (10) obj. -11.8147 iterations 25
Cbc0038I Pass  43: suminf.    1.10462 (11) obj. -11.8147 iterations 10
Cbc0038I Pass  44: suminf.    1.62138 (7) obj. -11.8147 iterations 16
Cbc0038I Pass  45: suminf.    1.56876 (7) obj. -11.9199 iterations 2
Cbc0038I Pass  46: suminf.    1.85232 (10) obj. -11.8147 iterations 9
Cbc0038I Pass  47: suminf.    1.82436 (10) obj. -11.8147 iterations 3
Cbc0038I Pass  48: suminf.    1.45659 (8) obj. -11.8147 iterations 6
Cbc0038I Pass  49: suminf.    1.22136 (8) obj. -12.2852 iterations 3
Cbc0038I Pass  50: suminf.    2.18241 (9) obj. -11.8147 iterations 11
Cbc0038I Pass  51: suminf.    2.16606 (9) obj. -11.8147 iterations 6
Cbc0038I Pass  52: suminf.    1.45659 (8) obj. -11.8147 iterations 8
Cbc0038I Pass  53: suminf.    2.56914 (17) obj. -11.8147 iterations 19
Cbc0038I Pass  54: suminf.    2.09195 (14) obj. -12.6608 iterations 10
Cbc0038I Pass  55: suminf.    1.93958 (10) obj. -11.8147 iterations 20
Cbc0038I Pass  56: suminf.    1.77949 (8) obj. -11.8147 iterations 5
Cbc0038I Pass  57: suminf.    1.82916 (10) obj. -11.8147 iterations 8
Cbc0038I Pass  58: suminf.    1.66626 (8) obj. -11.8147 iterations 5
Cbc0038I Pass  59: suminf.    1.93958 (10) obj. -11.8147 iterations 6
Cbc0038I Pass  60: suminf.    2.29065 (13) obj. -11.8147 iterations 25
Cbc0038I Pass  61: suminf.    2.02324 (13) obj. -11.8147 iterations 10
Cbc0038I Pass  62: suminf.    1.87029 (10) obj. -11.8147 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -1.42175 - took 0.07 seconds
Cbc0012I Integer solution of -1.421753 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 12 rows 15 columns
Cbc0031I 58 added rows had average density of 51.086207
Cbc0013I At root node, 58 cuts changed objective from -42.08603 to -10.754507 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18697 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2785 row cuts average 136.7 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 916 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1608 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 385 row cuts average 80.1 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.223 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.421753 best solution, best possible -10.754507 (2.25 seconds)
Cbc0012I Integer solution of -1.458123 found by rounding after 7577 iterations and 21 nodes (2.65 seconds)
Cbc0012I Integer solution of -1.550413 found by DiveCoefficient after 7589 iterations and 24 nodes (2.65 seconds)
Cbc0004I Integer solution of -1.865713 found after 7621 iterations and 27 nodes (2.66 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 3 rows 7 columns
Cbc0016I Integer solution of -1.902158 found by strong branching after 8054 iterations and 68 nodes (2.77 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 19 rows 35 columns
Cbc0010I After 101 nodes, 14 on tree, -1.902158 best solution, best possible -10.754507 (2.95 seconds)
Cbc0012I Integer solution of -1.994943 found by rounding after 8899 iterations and 108 nodes (2.98 seconds)
Cbc0012I Integer solution of -2.064458 found by DiveCoefficient after 9121 iterations and 128 nodes (3.02 seconds)
Cbc0004I Integer solution of -2.121699 found after 9180 iterations and 133 nodes (3.03 seconds)
Cbc0012I Integer solution of -3.292663 found by rounding after 11283 iterations and 188 nodes (3.51 seconds)
Cbc0012I Integer solution of -3.842043 found by DiveCoefficient after 11617 iterations and 211 nodes (3.58 seconds)
Cbc0012I Integer solution of -4.212333 found by DiveCoefficient after 11634 iterations and 211 nodes (3.58 seconds)
Cbc0012I Integer solution of -4.286078 found by DiveCoefficient after 11702 iterations and 227 nodes (3.61 seconds)
Cbc0016I Integer solution of -4.403768 found by strong branching after 11703 iterations and 227 nodes (3.61 seconds)
Cbc0010I After 244 nodes, 1 on tree, -4.403768 best solution, best possible -10.751701 (3.79 seconds)
Cbc0010I After 270 nodes, 3 on tree, -4.403768 best solution, best possible -10.473004 (4.53 seconds)
Cbc0001I Search completed - best objective -4.403767999999999, took 15036 iterations and 280 nodes (4.67 seconds)
Cbc0032I Strong branching done 2626 times (21746 iterations), fathomed 56 nodes and fixed 50 variables
Cbc0035I Maximum depth 20, 470 variables fixed on reduced cost
Total time (CPU seconds):       4.30   (Wallclock seconds):       4.71

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 182 (-23) rows, 100 (-3) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 1.43927e-05 - average 7.90808e-08, 15 fixed columns
Coin0506I Presolve 152 (-30) rows, 85 (-15) columns and 466 (-90) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 2.056621 - largest nonzero change 0 ( 0%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Coin0511I After Postsolve, objective 32.101225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Clp0000I Optimal - objective value 32.101225
Coin0511I After Postsolve, objective 32.101225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.10122513 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 182 rows, 100 columns (99 integer (99 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.896%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 12.6271
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.0566 iterations 68
Cbc0038I Solution found of 11.0566
Cbc0038I Relaxing continuous gives 11.0566
Cbc0038I Rounding solution of -1.14023 is better than previous of 11.0566

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -1.14023 to -2.95326 (0.07 seconds)
Cbc0038I Round again with cutoff of -5.86814
Cbc0038I Pass   2: suminf.    2.21646 (9) obj. -5.86814 iterations 15
Cbc0038I Pass   3: suminf.    2.37787 (11) obj. -5.86814 iterations 23
Cbc0038I Pass   4: suminf.    1.55306 (7) obj. -5.86814 iterations 10
Cbc0038I Pass   5: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass   6: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass   7: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass   8: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass   9: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  10: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  11: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  12: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  13: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  14: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  15: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  16: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  17: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  18: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  19: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  20: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  21: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  22: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  23: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  24: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  25: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I Pass  26: suminf.    2.14470 (9) obj. -5.86814 iterations 8
Cbc0038I Pass  27: suminf.    2.20906 (9) obj. -5.86814 iterations 7
Cbc0038I Pass  28: suminf.    1.55306 (7) obj. -5.86814 iterations 8
Cbc0038I Pass  29: suminf.    1.55306 (7) obj. -5.86814 iterations 3
Cbc0038I Pass  30: suminf.    2.52928 (7) obj. -5.86814 iterations 16
Cbc0038I Pass  31: suminf.    2.26642 (9) obj. -5.86814 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 74 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -2.95326 to -3.81129 (0.14 seconds)
Cbc0038I Round again with cutoff of -11.1148
Cbc0038I Pass  31: suminf.    3.45402 (13) obj. -11.1148 iterations 4
Cbc0038I Pass  32: suminf.    3.08341 (10) obj. -11.1148 iterations 15
Cbc0038I Pass  33: suminf.    2.82499 (9) obj. -11.1148 iterations 3
Cbc0038I Pass  34: suminf.    3.57818 (11) obj. -11.1148 iterations 13
Cbc0038I Pass  35: suminf.    3.30049 (11) obj. -11.1148 iterations 12
Cbc0038I Pass  36: suminf.    4.56976 (15) obj. -11.1148 iterations 27
Cbc0038I Pass  37: suminf.    2.71453 (8) obj. -11.1148 iterations 26
Cbc0038I Pass  38: suminf.    2.34003 (8) obj. -11.1148 iterations 9
Cbc0038I Pass  39: suminf.    3.19211 (11) obj. -11.1148 iterations 8
Cbc0038I Pass  40: suminf.    3.19211 (11) obj. -11.1148 iterations 1
Cbc0038I Pass  41: suminf.    3.55934 (11) obj. -11.1148 iterations 16
Cbc0038I Pass  42: suminf.    2.69982 (10) obj. -11.1148 iterations 10
Cbc0038I Pass  43: suminf.    2.69982 (10) obj. -11.1148 iterations 1
Cbc0038I Pass  44: suminf.    3.17455 (10) obj. -11.1148 iterations 20
Cbc0038I Pass  45: suminf.    2.60971 (10) obj. -11.1148 iterations 6
Cbc0038I Pass  46: suminf.    4.00275 (10) obj. -11.1148 iterations 21
Cbc0038I Pass  47: suminf.    2.24233 (7) obj. -11.1148 iterations 9
Cbc0038I Pass  48: suminf.    2.07180 (8) obj. -11.1148 iterations 6
Cbc0038I Pass  49: suminf.    3.58035 (13) obj. -11.1148 iterations 18
Cbc0038I Pass  50: suminf.    3.21722 (10) obj. -11.1148 iterations 2
Cbc0038I Pass  51: suminf.    2.69982 (10) obj. -11.1148 iterations 4
Cbc0038I Pass  52: suminf.    2.69982 (10) obj. -11.1148 iterations 0
Cbc0038I Pass  53: suminf.    3.17455 (10) obj. -11.1148 iterations 20
Cbc0038I Pass  54: suminf.    2.60971 (10) obj. -11.1148 iterations 6
Cbc0038I Pass  55: suminf.    4.00275 (10) obj. -11.1148 iterations 21
Cbc0038I Pass  56: suminf.    2.24233 (7) obj. -11.1148 iterations 9
Cbc0038I Pass  57: suminf.    2.07180 (8) obj. -11.1148 iterations 6
Cbc0038I Pass  58: suminf.    3.58035 (13) obj. -11.1148 iterations 18
Cbc0038I Pass  59: suminf.    3.21722 (10) obj. -11.1148 iterations 2
Cbc0038I Pass  60: suminf.    2.69982 (10) obj. -11.1148 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 83 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -3.81129 - took 0.17 seconds
Cbc0012I Integer solution of -3.811288 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 73 rows 45 columns
Cbc0012I Integer solution of -4.286078 found by RINS after 0 iterations and 0 nodes (0.25 seconds)
Cbc0031I 33 added rows had average density of 56.575758
Cbc0013I At root node, 33 cuts changed objective from -32.101225 to -24.23575 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18476 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2670 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -4.286078 best solution, best possible -24.23575 (1.57 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 9 rows 10 columns
Cbc0038I Full problem 182 rows 100 columns, reduced to 75 rows 48 columns
Cbc0012I Integer solution of -4.403768 found by RINS after 12682 iterations and 91 nodes (2.11 seconds)
Cbc0001I Search completed - best objective -4.403767999999999, took 14043 iterations and 136 nodes (2.19 seconds)
Cbc0032I Strong branching done 1520 times (28398 iterations), fathomed 16 nodes and fixed 89 variables
Cbc0035I Maximum depth 33, 354 variables fixed on reduced cost
Total time (CPU seconds):       2.13   (Wallclock seconds):       2.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 124 (-81) rows, 140 (-63) columns and 2459 (-3195) elements
Clp1000I sum of infeasibilities 8.43054e-08 - average 6.79882e-10, 21 fixed columns
Coin0506I Presolve 103 (-21) rows, 119 (-21) columns and 1880 (-579) elements
Clp0006I 0  Obj 30.873468 Dual inf 6.2580971 (118)
Clp0029I End of values pass after 119 iterations
Clp0014I Perturbing problem by 0.001% of 1.9657641 - largest nonzero change 2.9482467e-05 ( 0.0025543869%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 47.158769
Clp0000I Optimal - objective value 47.158769
Coin0511I After Postsolve, objective 47.158769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.158769
Clp0000I Optimal - objective value 47.158769
Clp0000I Optimal - objective value 47.158769
Clp0000I Optimal - objective value 47.158769
Coin0511I After Postsolve, objective 47.158769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.15876932 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 140 columns (140 integer (140 of which binary)) and 2461 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.798%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 7.65601
Cbc0038I Pass   1: suminf.    4.02113 (33) obj. -37.3859 iterations 17
Cbc0038I Pass   2: suminf.    2.77479 (29) obj. -35.1581 iterations 9
Cbc0038I Pass   3: suminf.    0.75157 (10) obj. -7.68455 iterations 19
Cbc0038I Solution found of 1.56388
Cbc0038I Rounding solution of -0.042407 is better than previous of 1.56388

Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4.24686
Cbc0038I Pass   4: suminf.    4.02113 (33) obj. -37.3859 iterations 0
Cbc0038I Pass   5: suminf.    2.77479 (29) obj. -35.1581 iterations 7
Cbc0038I Pass   6: suminf.    1.10595 (14) obj. -11.3302 iterations 15
Cbc0038I Pass   7: suminf.    0.48525 (3) obj. -4.24686 iterations 28
Cbc0038I Pass   8: suminf.    0.48525 (3) obj. -4.24686 iterations 0
Cbc0038I Pass   9: suminf.    0.54660 (3) obj. -4.24686 iterations 5
Cbc0038I Pass  10: suminf.    0.54660 (3) obj. -4.24686 iterations 0
Cbc0038I Pass  11: suminf.    0.48525 (3) obj. -4.24686 iterations 3
Cbc0038I Pass  12: suminf.    2.81167 (13) obj. -4.24686 iterations 29
Cbc0038I Pass  13: suminf.    1.74259 (10) obj. -4.24686 iterations 11
Cbc0038I Pass  14: suminf.    1.19870 (10) obj. -4.24686 iterations 3
Cbc0038I Pass  15: suminf.    1.09850 (9) obj. -4.40587 iterations 3
Cbc0038I Pass  16: suminf.    1.18060 (10) obj. -4.24686 iterations 16
Cbc0038I Pass  17: suminf.    1.18060 (10) obj. -4.24686 iterations 0
Cbc0038I Pass  18: suminf.    1.74313 (7) obj. -4.24686 iterations 12
Cbc0038I Pass  19: suminf.    0.78987 (6) obj. -4.24686 iterations 7
Cbc0038I Pass  20: suminf.    1.07627 (6) obj. -4.24686 iterations 10
Cbc0038I Pass  21: suminf.    0.69566 (7) obj. -4.98672 iterations 3
Cbc0038I Pass  22: suminf.    0.93927 (7) obj. -4.24686 iterations 9
Cbc0038I Pass  23: suminf.    0.90958 (5) obj. -4.24686 iterations 4
Cbc0038I Pass  24: suminf.    0.88975 (7) obj. -4.24686 iterations 6
Cbc0038I Pass  25: suminf.    0.85552 (5) obj. -4.24686 iterations 6
Cbc0038I Pass  26: suminf.    0.79963 (6) obj. -4.24686 iterations 9
Cbc0038I Pass  27: suminf.    0.75455 (5) obj. -4.24686 iterations 7
Cbc0038I Pass  28: suminf.    2.86030 (13) obj. -4.24686 iterations 27
Cbc0038I Pass  29: suminf.    1.29017 (11) obj. -4.24686 iterations 15
Cbc0038I Pass  30: suminf.    1.09563 (7) obj. -4.24686 iterations 13
Cbc0038I Pass  31: suminf.    1.09563 (7) obj. -4.24686 iterations 1
Cbc0038I Pass  32: suminf.    1.04718 (5) obj. -4.24686 iterations 6
Cbc0038I Pass  33: suminf.    1.04718 (5) obj. -4.24686 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 124 rows 140 columns, reduced to 23 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 1.56388 to -1.42175 (0.07 seconds)
Cbc0038I Round again with cutoff of -11.8147
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.02113 (33) obj. -37.3859 iterations 0
Cbc0038I Pass  34: suminf.    2.77479 (29) obj. -35.1581 iterations 7
Cbc0038I Pass  35: suminf.    0.84062 (11) obj. -11.8147 iterations 29
Cbc0038I Pass  36: suminf.    0.84062 (11) obj. -11.8147 iterations 0
Cbc0038I Pass  37: suminf.    0.99565 (8) obj. -11.8147 iterations 20
Cbc0038I Pass  38: suminf.    0.55875 (7) obj. -11.8147 iterations 8
Cbc0038I Pass  39: suminf.    0.82266 (7) obj. -11.8147 iterations 9
Cbc0038I Pass  40: suminf.    0.82266 (7) obj. -11.8147 iterations 4
Cbc0038I Pass  41: suminf.    0.58443 (12) obj. -11.8147 iterations 7
Cbc0038I Pass  42: suminf.    1.39088 (10) obj. -11.8147 iterations 25
Cbc0038I Pass  43: suminf.    1.10462 (11) obj. -11.8147 iterations 10
Cbc0038I Pass  44: suminf.    1.62138 (7) obj. -11.8147 iterations 16
Cbc0038I Pass  45: suminf.    1.56876 (7) obj. -11.9199 iterations 2
Cbc0038I Pass  46: suminf.    1.85232 (10) obj. -11.8147 iterations 9
Cbc0038I Pass  47: suminf.    1.82436 (10) obj. -11.8147 iterations 3
Cbc0038I Pass  48: suminf.    1.45659 (8) obj. -11.8147 iterations 6
Cbc0038I Pass  49: suminf.    1.22136 (8) obj. -12.2852 iterations 3
Cbc0038I Pass  50: suminf.    2.18241 (9) obj. -11.8147 iterations 11
Cbc0038I Pass  51: suminf.    2.16606 (9) obj. -11.8147 iterations 6
Cbc0038I Pass  52: suminf.    1.45659 (8) obj. -11.8147 iterations 8
Cbc0038I Pass  53: suminf.    2.56914 (17) obj. -11.8147 iterations 19
Cbc0038I Pass  54: suminf.    2.09195 (14) obj. -12.6608 iterations 10
Cbc0038I Pass  55: suminf.    1.93958 (10) obj. -11.8147 iterations 20
Cbc0038I Pass  56: suminf.    1.77949 (8) obj. -11.8147 iterations 5
Cbc0038I Pass  57: suminf.    1.82916 (10) obj. -11.8147 iterations 8
Cbc0038I Pass  58: suminf.    1.66626 (8) obj. -11.8147 iterations 5
Cbc0038I Pass  59: suminf.    1.93958 (10) obj. -11.8147 iterations 6
Cbc0038I Pass  60: suminf.    2.29065 (13) obj. -11.8147 iterations 25
Cbc0038I Pass  61: suminf.    2.02324 (13) obj. -11.8147 iterations 10
Cbc0038I Pass  62: suminf.    1.87029 (10) obj. -11.8147 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -1.42175 - took 0.07 seconds
Cbc0012I Integer solution of -1.421753 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 12 rows 15 columns
Cbc0031I 58 added rows had average density of 51.086207
Cbc0013I At root node, 58 cuts changed objective from -42.08603 to -10.754507 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 18697 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2785 row cuts average 136.7 elements, 0 column cuts (0 active)  in 0.233 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 916 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1608 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 385 row cuts average 80.1 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.226 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.421753 best solution, best possible -10.754507 (2.16 seconds)
Cbc0012I Integer solution of -1.458123 found by rounding after 7577 iterations and 21 nodes (2.56 seconds)
Cbc0012I Integer solution of -1.550413 found by DiveCoefficient after 7589 iterations and 24 nodes (2.57 seconds)
Cbc0004I Integer solution of -1.865713 found after 7621 iterations and 27 nodes (2.57 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 3 rows 7 columns
Cbc0016I Integer solution of -1.902158 found by strong branching after 8054 iterations and 68 nodes (2.69 seconds)
Cbc0038I Full problem 124 rows 140 columns, reduced to 19 rows 35 columns
Cbc0010I After 101 nodes, 14 on tree, -1.902158 best solution, best possible -10.754507 (2.86 seconds)
Cbc0012I Integer solution of -1.994943 found by rounding after 8899 iterations and 108 nodes (2.90 seconds)
Cbc0012I Integer solution of -2.064458 found by DiveCoefficient after 9121 iterations and 128 nodes (2.93 seconds)
Cbc0004I Integer solution of -2.121699 found after 9180 iterations and 133 nodes (2.94 seconds)
Cbc0012I Integer solution of -3.292663 found by rounding after 11283 iterations and 188 nodes (3.42 seconds)
Cbc0012I Integer solution of -3.842043 found by DiveCoefficient after 11617 iterations and 211 nodes (3.48 seconds)
Cbc0012I Integer solution of -4.212333 found by DiveCoefficient after 11634 iterations and 211 nodes (3.49 seconds)
Cbc0012I Integer solution of -4.286078 found by DiveCoefficient after 11702 iterations and 227 nodes (3.52 seconds)
Cbc0016I Integer solution of -4.403768 found by strong branching after 11703 iterations and 227 nodes (3.52 seconds)
Cbc0010I After 244 nodes, 1 on tree, -4.403768 best solution, best possible -10.751701 (3.70 seconds)
Cbc0010I After 270 nodes, 3 on tree, -4.403768 best solution, best possible -10.473004 (4.43 seconds)
Cbc0001I Search completed - best objective -4.403767999999999, took 15036 iterations and 280 nodes (4.57 seconds)
Cbc0032I Strong branching done 2626 times (21746 iterations), fathomed 56 nodes and fixed 50 variables
Cbc0035I Maximum depth 20, 470 variables fixed on reduced cost
Total time (CPU seconds):       4.29   (Wallclock seconds):       4.60

