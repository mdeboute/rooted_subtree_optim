Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-17) rows, 49 (-4) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 1.51057e-05 - average 1.71655e-07, 3 fixed columns
Coin0506I Presolve 82 (-6) rows, 46 (-3) columns and 248 (-18) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Coin0511I After Postsolve, objective 39.092743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Coin0511I After Postsolve, objective 39.092743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.09274272 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 49 columns (48 integer (48 of which binary)) and 269 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.897%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.3408
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.10145 iterations 33
Cbc0038I Solution found of 5.10145
Cbc0038I Relaxing continuous gives 5.10145
Cbc0038I Rounding solution of -3.66131 is better than previous of 5.10145

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 49 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.66131 to -7.39935 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.5688
Cbc0038I Pass   2: suminf.    1.85674 (9) obj. -10.5688 iterations 10
Cbc0038I Pass   3: suminf.    1.79735 (5) obj. -10.5688 iterations 12
Cbc0038I Pass   4: suminf.    1.14881 (6) obj. -10.5688 iterations 8
Cbc0038I Pass   5: suminf.    1.07676 (5) obj. -10.5688 iterations 5
Cbc0038I Pass   6: suminf.    1.76679 (5) obj. -10.5688 iterations 4
Cbc0038I Pass   7: suminf.    1.17005 (7) obj. -10.5688 iterations 10
Cbc0038I Pass   8: suminf.    1.53415 (6) obj. -10.5688 iterations 14
Cbc0038I Pass   9: suminf.    1.22981 (5) obj. -10.5688 iterations 9
Cbc0038I Pass  10: suminf.    1.07724 (5) obj. -10.5688 iterations 6
Cbc0038I Pass  11: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  12: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  13: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  14: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  15: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  16: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  17: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  18: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  19: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  20: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  21: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  22: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  23: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  24: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  25: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  26: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  27: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  28: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  29: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  30: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  31: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 49 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -7.39935 - took 0.04 seconds
Cbc0012I Integer solution of -7.39935 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 49 columns, reduced to 59 rows 33 columns
Cbc0031I 21 added rows had average density of 29.142857
Cbc0013I At root node, 21 cuts changed objective from -39.092743 to -28.901905 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7101 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1242 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0016I Integer solution of -7.79328 found by strong branching after 6873 iterations and 20 nodes (0.67 seconds)
Cbc0010I After 32 nodes, 1 on tree, -7.79328 best solution, best possible -15.601264 (0.71 seconds)
Cbc0038I Full problem 88 rows 49 columns, reduced to 18 rows 15 columns
Cbc0001I Search completed - best objective -7.793279999999996, took 8477 iterations and 54 nodes (0.83 seconds)
Cbc0032I Strong branching done 740 times (10814 iterations), fathomed 1 nodes and fixed 25 variables
Cbc0035I Maximum depth 14, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.80   (Wallclock seconds):       0.83

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-27) rows, 85 (-17) columns and 1170 (-408) elements
Clp1000I sum of infeasibilities 5.65402e-08 - average 7.34289e-10, 9 fixed columns
Coin0506I Presolve 68 (-9) rows, 75 (-10) columns and 880 (-290) elements
Clp0006I 0  Obj 33.307587 Dual inf 2.238237 (75)
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 5.3052372 - largest nonzero change 2.4090535e-05 ( 0.0016324266%) - largest zero change 2.9728145e-05
Clp0000I Optimal - objective value 50.435977
Clp0000I Optimal - objective value 50.435977
Coin0511I After Postsolve, objective 50.435977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.435977
Clp0000I Optimal - objective value 50.435977
Clp0000I Optimal - objective value 50.435977
Clp0000I Optimal - objective value 50.435977
Coin0511I After Postsolve, objective 50.435977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.43597652 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 85 columns (85 integer (85 of which binary)) and 1177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.513%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.49249
Cbc0038I Pass   1: suminf.    2.89337 (23) obj. -34.5471 iterations 22
Cbc0038I Pass   2: suminf.    2.89337 (23) obj. -34.5471 iterations 3
Cbc0038I Pass   3: suminf.    0.10819 (2) obj. 3.91877 iterations 21
Cbc0038I Solution found of 5.81059
Cbc0038I Rounding solution of 1.86496 is better than previous of 5.81059

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2.57135
Cbc0038I Pass   4: suminf.    2.89337 (23) obj. -34.5471 iterations 0
Cbc0038I Pass   5: suminf.    2.89337 (23) obj. -34.5471 iterations 2
Cbc0038I Pass   6: suminf.    1.15868 (11) obj. -6.66474 iterations 12
Cbc0038I Pass   7: suminf.    0.54203 (11) obj. -2.57135 iterations 29
Cbc0038I Pass   8: suminf.    0.54203 (11) obj. -2.57135 iterations 1
Cbc0038I Pass   9: suminf.    1.23051 (9) obj. -2.57135 iterations 16
Cbc0038I Pass  10: suminf.    1.09539 (7) obj. -2.57135 iterations 4
Cbc0038I Pass  11: suminf.    1.09539 (7) obj. -2.57135 iterations 2
Cbc0038I Pass  12: suminf.    1.24451 (5) obj. -2.57135 iterations 12
Cbc0038I Pass  13: suminf.    1.24451 (5) obj. -2.57135 iterations 0
Cbc0038I Pass  14: suminf.    0.95862 (4) obj. -2.57135 iterations 6
Cbc0038I Pass  15: suminf.    0.80147 (4) obj. -2.57135 iterations 6
Cbc0038I Pass  16: suminf.    0.58673 (6) obj. -2.57135 iterations 6
Cbc0038I Pass  17: suminf.    0.54305 (4) obj. -2.57135 iterations 7
Cbc0038I Pass  18: suminf.    0.85181 (6) obj. -2.57135 iterations 8
Cbc0038I Pass  19: suminf.    2.56036 (11) obj. -2.765 iterations 19
Cbc0038I Pass  20: suminf.    1.71945 (10) obj. -2.57135 iterations 7
Cbc0038I Pass  21: suminf.    1.71599 (11) obj. -2.57135 iterations 2
Cbc0038I Pass  22: suminf.    0.88348 (5) obj. -2.57135 iterations 15
Cbc0038I Pass  23: suminf.    0.88383 (4) obj. -2.57135 iterations 3
Cbc0038I Pass  24: suminf.    1.22440 (4) obj. -2.57135 iterations 8
Cbc0038I Pass  25: suminf.    0.86122 (3) obj. -2.57135 iterations 15
Cbc0038I Pass  26: suminf.    0.48861 (2) obj. -2.57135 iterations 7
Cbc0038I Pass  27: suminf.    0.34499 (2) obj. -3.28947 iterations 1
Cbc0038I Pass  28: suminf.    0.48861 (2) obj. -2.57135 iterations 5
Cbc0038I Pass  29: suminf.    2.42638 (14) obj. -9.93126 iterations 28
Cbc0038I Pass  30: suminf.    1.69273 (11) obj. -7.93177 iterations 8
Cbc0038I Pass  31: suminf.    1.24218 (5) obj. -2.57135 iterations 20
Cbc0038I Pass  32: suminf.    1.10491 (5) obj. -2.57135 iterations 5
Cbc0038I Pass  33: suminf.    1.50450 (5) obj. -2.57135 iterations 5
Cbc0038I Rounding solution of -1.14345 is better than previous of 1.86496

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 85 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -1.14345 to -1.95478 (0.05 seconds)
Cbc0038I Round again with cutoff of -10.5565
Cbc0038I Pass  33: suminf.    2.89337 (23) obj. -34.5471 iterations 0
Cbc0038I Pass  34: suminf.    2.89337 (23) obj. -34.5471 iterations 2
Cbc0038I Pass  35: suminf.    1.11488 (11) obj. -10.5565 iterations 40
Cbc0038I Pass  36: suminf.    1.10572 (10) obj. -11.2138 iterations 5
Cbc0038I Pass  37: suminf.    1.82441 (8) obj. -10.5565 iterations 18
Cbc0038I Pass  38: suminf.    1.26656 (7) obj. -10.5565 iterations 3
Cbc0038I Pass  39: suminf.    1.22661 (6) obj. -10.5565 iterations 11
Cbc0038I Pass  40: suminf.    1.22661 (6) obj. -10.5565 iterations 4
Cbc0038I Pass  41: suminf.    1.19669 (6) obj. -10.5565 iterations 5
Cbc0038I Pass  42: suminf.    1.19669 (6) obj. -10.5565 iterations 3
Cbc0038I Pass  43: suminf.    1.22661 (6) obj. -10.5565 iterations 5
Cbc0038I Pass  44: suminf.    1.51383 (12) obj. -10.5565 iterations 19
Cbc0038I Pass  45: suminf.    1.34563 (14) obj. -10.5565 iterations 13
Cbc0038I Pass  46: suminf.    2.19976 (9) obj. -10.5565 iterations 18
Cbc0038I Pass  47: suminf.    1.34997 (9) obj. -10.5565 iterations 9
Cbc0038I Pass  48: suminf.    2.11633 (9) obj. -10.5565 iterations 10
Cbc0038I Pass  49: suminf.    1.28837 (9) obj. -10.5565 iterations 10
Cbc0038I Pass  50: suminf.    2.12630 (9) obj. -10.5565 iterations 11
Cbc0038I Pass  51: suminf.    1.90250 (12) obj. -10.5565 iterations 18
Cbc0038I Pass  52: suminf.    1.90250 (12) obj. -10.5565 iterations 6
Cbc0038I Pass  53: suminf.    1.71593 (8) obj. -10.5565 iterations 19
Cbc0038I Pass  54: suminf.    1.08827 (7) obj. -10.5565 iterations 5
Cbc0038I Pass  55: suminf.    1.24455 (6) obj. -10.5565 iterations 5
Cbc0038I Pass  56: suminf.    1.17795 (6) obj. -10.5565 iterations 4
Cbc0038I Pass  57: suminf.    1.20336 (6) obj. -10.5565 iterations 4
Cbc0038I Pass  58: suminf.    2.31041 (11) obj. -10.5565 iterations 14
Cbc0038I Pass  59: suminf.    1.70225 (9) obj. -10.5565 iterations 6
Cbc0038I Pass  60: suminf.    1.36657 (7) obj. -10.5565 iterations 11
Cbc0038I Pass  61: suminf.    1.36657 (7) obj. -10.5565 iterations 1
Cbc0038I Pass  62: suminf.    1.76863 (8) obj. -10.5565 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 85 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -1.95478 - took 0.05 seconds
Cbc0012I Integer solution of -1.954784 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 77 rows 85 columns, reduced to 13 rows 17 columns
Cbc0031I 47 added rows had average density of 35.489362
Cbc0013I At root node, 47 cuts changed objective from -42.497228 to -15.888561 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10897 row cuts average 2.2 elements, 0 column cuts (17 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1521 row cuts average 78.9 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 244 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 891 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 372 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 92 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.679 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.954784 best solution, best possible -15.888561 (2.28 seconds)
Cbc0012I Integer solution of -1.988194 found by rounding after 5819 iterations and 1 nodes (2.29 seconds)
Cbc0004I Integer solution of -7.39935 found after 5824 iterations and 1 nodes (2.29 seconds)
Cbc0016I Integer solution of -7.58338 found by strong branching after 6872 iterations and 12 nodes (2.68 seconds)
Cbc0004I Integer solution of -7.79328 found after 7165 iterations and 17 nodes (2.74 seconds)
Cbc0001I Search completed - best objective -7.793279999999996, took 7959 iterations and 34 nodes (2.86 seconds)
Cbc0032I Strong branching done 612 times (12703 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 38 variables fixed on reduced cost
Total time (CPU seconds):       2.19   (Wallclock seconds):       2.87

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-17) rows, 49 (-4) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 1.51057e-05 - average 1.71655e-07, 3 fixed columns
Coin0506I Presolve 82 (-6) rows, 46 (-3) columns and 248 (-18) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Coin0511I After Postsolve, objective 39.092743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Clp0000I Optimal - objective value 39.092743
Coin0511I After Postsolve, objective 39.092743, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.09274272 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 49 columns (48 integer (48 of which binary)) and 269 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.897%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.3408
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.10145 iterations 33
Cbc0038I Solution found of 5.10145
Cbc0038I Relaxing continuous gives 5.10145
Cbc0038I Rounding solution of -3.66131 is better than previous of 5.10145

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 49 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.66131 to -7.39935 (0.02 seconds)
Cbc0038I Round again with cutoff of -10.5688
Cbc0038I Pass   2: suminf.    1.85674 (9) obj. -10.5688 iterations 10
Cbc0038I Pass   3: suminf.    1.79735 (5) obj. -10.5688 iterations 12
Cbc0038I Pass   4: suminf.    1.14881 (6) obj. -10.5688 iterations 8
Cbc0038I Pass   5: suminf.    1.07676 (5) obj. -10.5688 iterations 5
Cbc0038I Pass   6: suminf.    1.76679 (5) obj. -10.5688 iterations 4
Cbc0038I Pass   7: suminf.    1.17005 (7) obj. -10.5688 iterations 10
Cbc0038I Pass   8: suminf.    1.53415 (6) obj. -10.5688 iterations 14
Cbc0038I Pass   9: suminf.    1.22981 (5) obj. -10.5688 iterations 9
Cbc0038I Pass  10: suminf.    1.07724 (5) obj. -10.5688 iterations 6
Cbc0038I Pass  11: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  12: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  13: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  14: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  15: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  16: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  17: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  18: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  19: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  20: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  21: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  22: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  23: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  24: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  25: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  26: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I Pass  27: suminf.    2.02719 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  28: suminf.    1.06739 (5) obj. -10.5688 iterations 4
Cbc0038I Pass  29: suminf.    1.01257 (4) obj. -10.5688 iterations 1
Cbc0038I Pass  30: suminf.    1.07724 (5) obj. -10.5688 iterations 5
Cbc0038I Pass  31: suminf.    1.07073 (5) obj. -10.5688 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 49 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -7.39935 - took 0.03 seconds
Cbc0012I Integer solution of -7.39935 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 88 rows 49 columns, reduced to 59 rows 33 columns
Cbc0031I 21 added rows had average density of 29.142857
Cbc0013I At root node, 21 cuts changed objective from -39.092743 to -28.901905 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7101 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1242 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 177 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0016I Integer solution of -7.79328 found by strong branching after 6873 iterations and 20 nodes (0.64 seconds)
Cbc0010I After 32 nodes, 1 on tree, -7.79328 best solution, best possible -15.601264 (0.68 seconds)
Cbc0038I Full problem 88 rows 49 columns, reduced to 18 rows 15 columns
Cbc0001I Search completed - best objective -7.793279999999996, took 8477 iterations and 54 nodes (0.79 seconds)
Cbc0032I Strong branching done 740 times (10814 iterations), fathomed 1 nodes and fixed 25 variables
Cbc0035I Maximum depth 14, 47 variables fixed on reduced cost
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.80

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-28) rows, 85 (-18) columns and 1170 (-409) elements
Clp1000I sum of infeasibilities 5.65402e-08 - average 7.34289e-10, 9 fixed columns
Coin0506I Presolve 68 (-9) rows, 75 (-10) columns and 880 (-290) elements
Clp0006I 0  Obj 33.307587 Dual inf 2.238237 (75)
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 5.3052372 - largest nonzero change 2.4090535e-05 ( 0.0016324266%) - largest zero change 2.9728145e-05
Clp0000I Optimal - objective value 50.435977
Clp0000I Optimal - objective value 50.435977
Coin0511I After Postsolve, objective 50.435977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.435977
Clp0000I Optimal - objective value 50.435977
Clp0000I Optimal - objective value 50.435977
Clp0000I Optimal - objective value 50.435977
Coin0511I After Postsolve, objective 50.435977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.43597652 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 85 columns (85 integer (85 of which binary)) and 1177 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.513%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.49249
Cbc0038I Pass   1: suminf.    2.89337 (23) obj. -34.5471 iterations 22
Cbc0038I Pass   2: suminf.    2.89337 (23) obj. -34.5471 iterations 3
Cbc0038I Pass   3: suminf.    0.10819 (2) obj. 3.91877 iterations 21
Cbc0038I Solution found of 5.81059
Cbc0038I Rounding solution of 1.86496 is better than previous of 5.81059

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -2.57135
Cbc0038I Pass   4: suminf.    2.89337 (23) obj. -34.5471 iterations 0
Cbc0038I Pass   5: suminf.    2.89337 (23) obj. -34.5471 iterations 2
Cbc0038I Pass   6: suminf.    1.15868 (11) obj. -6.66474 iterations 12
Cbc0038I Pass   7: suminf.    0.54203 (11) obj. -2.57135 iterations 29
Cbc0038I Pass   8: suminf.    0.54203 (11) obj. -2.57135 iterations 1
Cbc0038I Pass   9: suminf.    1.23051 (9) obj. -2.57135 iterations 16
Cbc0038I Pass  10: suminf.    1.09539 (7) obj. -2.57135 iterations 4
Cbc0038I Pass  11: suminf.    1.09539 (7) obj. -2.57135 iterations 2
Cbc0038I Pass  12: suminf.    1.24451 (5) obj. -2.57135 iterations 12
Cbc0038I Pass  13: suminf.    1.24451 (5) obj. -2.57135 iterations 0
Cbc0038I Pass  14: suminf.    0.95862 (4) obj. -2.57135 iterations 6
Cbc0038I Pass  15: suminf.    0.80147 (4) obj. -2.57135 iterations 6
Cbc0038I Pass  16: suminf.    0.58673 (6) obj. -2.57135 iterations 6
Cbc0038I Pass  17: suminf.    0.54305 (4) obj. -2.57135 iterations 7
Cbc0038I Pass  18: suminf.    0.85181 (6) obj. -2.57135 iterations 8
Cbc0038I Pass  19: suminf.    2.56036 (11) obj. -2.765 iterations 19
Cbc0038I Pass  20: suminf.    1.71945 (10) obj. -2.57135 iterations 7
Cbc0038I Pass  21: suminf.    1.71599 (11) obj. -2.57135 iterations 2
Cbc0038I Pass  22: suminf.    0.88348 (5) obj. -2.57135 iterations 15
Cbc0038I Pass  23: suminf.    0.88383 (4) obj. -2.57135 iterations 3
Cbc0038I Pass  24: suminf.    1.22440 (4) obj. -2.57135 iterations 8
Cbc0038I Pass  25: suminf.    0.86122 (3) obj. -2.57135 iterations 15
Cbc0038I Pass  26: suminf.    0.48861 (2) obj. -2.57135 iterations 7
Cbc0038I Pass  27: suminf.    0.34499 (2) obj. -3.28947 iterations 1
Cbc0038I Pass  28: suminf.    0.48861 (2) obj. -2.57135 iterations 5
Cbc0038I Pass  29: suminf.    2.42638 (14) obj. -9.93126 iterations 28
Cbc0038I Pass  30: suminf.    1.69273 (11) obj. -7.93177 iterations 8
Cbc0038I Pass  31: suminf.    1.24218 (5) obj. -2.57135 iterations 20
Cbc0038I Pass  32: suminf.    1.10491 (5) obj. -2.57135 iterations 5
Cbc0038I Pass  33: suminf.    1.50450 (5) obj. -2.57135 iterations 5
Cbc0038I Rounding solution of -1.14345 is better than previous of 1.86496

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 85 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -1.14345 to -1.95478 (0.06 seconds)
Cbc0038I Round again with cutoff of -10.5565
Cbc0038I Pass  33: suminf.    2.89337 (23) obj. -34.5471 iterations 0
Cbc0038I Pass  34: suminf.    2.89337 (23) obj. -34.5471 iterations 2
Cbc0038I Pass  35: suminf.    1.11488 (11) obj. -10.5565 iterations 40
Cbc0038I Pass  36: suminf.    1.10572 (10) obj. -11.2138 iterations 5
Cbc0038I Pass  37: suminf.    1.82441 (8) obj. -10.5565 iterations 18
Cbc0038I Pass  38: suminf.    1.26656 (7) obj. -10.5565 iterations 3
Cbc0038I Pass  39: suminf.    1.22661 (6) obj. -10.5565 iterations 11
Cbc0038I Pass  40: suminf.    1.22661 (6) obj. -10.5565 iterations 4
Cbc0038I Pass  41: suminf.    1.19669 (6) obj. -10.5565 iterations 5
Cbc0038I Pass  42: suminf.    1.19669 (6) obj. -10.5565 iterations 3
Cbc0038I Pass  43: suminf.    1.22661 (6) obj. -10.5565 iterations 5
Cbc0038I Pass  44: suminf.    1.51383 (12) obj. -10.5565 iterations 19
Cbc0038I Pass  45: suminf.    1.34563 (14) obj. -10.5565 iterations 13
Cbc0038I Pass  46: suminf.    2.19976 (9) obj. -10.5565 iterations 18
Cbc0038I Pass  47: suminf.    1.34997 (9) obj. -10.5565 iterations 9
Cbc0038I Pass  48: suminf.    2.11633 (9) obj. -10.5565 iterations 10
Cbc0038I Pass  49: suminf.    1.28837 (9) obj. -10.5565 iterations 10
Cbc0038I Pass  50: suminf.    2.12630 (9) obj. -10.5565 iterations 11
Cbc0038I Pass  51: suminf.    1.90250 (12) obj. -10.5565 iterations 18
Cbc0038I Pass  52: suminf.    1.90250 (12) obj. -10.5565 iterations 6
Cbc0038I Pass  53: suminf.    1.71593 (8) obj. -10.5565 iterations 19
Cbc0038I Pass  54: suminf.    1.08827 (7) obj. -10.5565 iterations 5
Cbc0038I Pass  55: suminf.    1.24455 (6) obj. -10.5565 iterations 5
Cbc0038I Pass  56: suminf.    1.17795 (6) obj. -10.5565 iterations 4
Cbc0038I Pass  57: suminf.    1.20336 (6) obj. -10.5565 iterations 4
Cbc0038I Pass  58: suminf.    2.31041 (11) obj. -10.5565 iterations 14
Cbc0038I Pass  59: suminf.    1.70225 (9) obj. -10.5565 iterations 6
Cbc0038I Pass  60: suminf.    1.36657 (7) obj. -10.5565 iterations 11
Cbc0038I Pass  61: suminf.    1.36657 (7) obj. -10.5565 iterations 1
Cbc0038I Pass  62: suminf.    1.76863 (8) obj. -10.5565 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 85 columns, reduced to 22 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -1.95478 - took 0.05 seconds
Cbc0012I Integer solution of -1.954784 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 77 rows 85 columns, reduced to 13 rows 17 columns
Cbc0031I 47 added rows had average density of 35.489362
Cbc0013I At root node, 47 cuts changed objective from -42.497228 to -15.888561 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10897 row cuts average 2.2 elements, 0 column cuts (17 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1521 row cuts average 78.9 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 244 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 891 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 372 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 92 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.665 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.954784 best solution, best possible -15.888561 (2.20 seconds)
Cbc0012I Integer solution of -1.988194 found by rounding after 5819 iterations and 1 nodes (2.21 seconds)
Cbc0004I Integer solution of -7.39935 found after 5824 iterations and 1 nodes (2.21 seconds)
Cbc0016I Integer solution of -7.58338 found by strong branching after 6872 iterations and 12 nodes (2.58 seconds)
Cbc0004I Integer solution of -7.79328 found after 7165 iterations and 17 nodes (2.65 seconds)
Cbc0001I Search completed - best objective -7.793279999999996, took 7959 iterations and 34 nodes (2.76 seconds)
Cbc0032I Strong branching done 612 times (12703 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 38 variables fixed on reduced cost
Total time (CPU seconds):       2.12   (Wallclock seconds):       2.79

