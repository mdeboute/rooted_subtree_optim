Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-33) rows, 42 (-11) columns and 222 (-81) elements
Clp1000I sum of infeasibilities 0.000189192 - average 2.62767e-06, 21 fixed columns
Coin0506I Presolve 34 (-38) rows, 20 (-22) columns and 102 (-120) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 146.28852
Clp0000I Optimal - objective value 146.28852
Coin0511I After Postsolve, objective 146.28852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.41489739 - largest nonzero change 0 ( 0%) - largest zero change 2.2680251e-05
Clp0000I Optimal - objective value 146.28852
Clp0000I Optimal - objective value 146.28852
Clp0000I Optimal - objective value 146.28852
Coin0511I After Postsolve, objective 146.28852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 146.2885166 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 42 columns (41 integer (41 of which binary)) and 222 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.961%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.79221
Cbc0038I Pass   1: suminf.    1.36364 (5) obj. -103.7 iterations 13
Cbc0038I Pass   2: suminf.    1.36364 (5) obj. -103.7 iterations 0
Cbc0038I Solution found of -27.1698
Cbc0038I Relaxing continuous gives -27.1698
Cbc0038I Rounding solution of -67.7035 is better than previous of -27.1698

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 42 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -67.7035 to -120.208 (0.01 seconds)
Cbc0038I Round again with cutoff of -122.816
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.44172 (9) obj. -122.816 iterations 4
Cbc0038I Pass   4: suminf.    0.49973 (4) obj. -122.816 iterations 7
Cbc0038I Pass   5: suminf.    0.07531 (1) obj. -122.816 iterations 5
Cbc0038I Pass   6: suminf.    0.31579 (1) obj. -131.144 iterations 3
Cbc0038I Pass   7: suminf.    0.60245 (8) obj. -122.816 iterations 7
Cbc0038I Pass   8: suminf.    0.47495 (4) obj. -122.816 iterations 2
Cbc0038I Pass   9: suminf.    0.30476 (1) obj. -122.816 iterations 8
Cbc0038I Pass  10: suminf.    0.10345 (1) obj. -122.816 iterations 4
Cbc0038I Pass  11: suminf.    0.19251 (1) obj. -122.816 iterations 1
Cbc0038I Pass  12: suminf.    1.16338 (8) obj. -122.816 iterations 7
Cbc0038I Pass  13: suminf.    0.91811 (8) obj. -122.816 iterations 10
Cbc0038I Pass  14: suminf.    0.91811 (8) obj. -122.816 iterations 1
Cbc0038I Pass  15: suminf.    0.12927 (3) obj. -122.816 iterations 9
Cbc0038I Pass  16: suminf.    0.03147 (2) obj. -122.816 iterations 3
Cbc0038I Pass  17: suminf.    0.02379 (2) obj. -122.816 iterations 1
Cbc0038I Pass  18: suminf.    0.99125 (8) obj. -122.816 iterations 13
Cbc0038I Pass  19: suminf.    0.55361 (7) obj. -122.816 iterations 4
Cbc0038I Pass  20: suminf.    1.16161 (7) obj. -122.816 iterations 11
Cbc0038I Pass  21: suminf.    0.78969 (2) obj. -122.816 iterations 4
Cbc0038I Pass  22: suminf.    0.31579 (1) obj. -136.409 iterations 9
Cbc0038I Pass  23: suminf.    0.29169 (1) obj. -122.816 iterations 6
Cbc0038I Pass  24: suminf.    1.12115 (5) obj. -122.816 iterations 13
Cbc0038I Pass  25: suminf.    1.12115 (5) obj. -122.816 iterations 3
Cbc0038I Pass  26: suminf.    0.03147 (2) obj. -122.816 iterations 10
Cbc0038I Pass  27: suminf.    0.03147 (2) obj. -122.816 iterations 0
Cbc0038I Pass  28: suminf.    0.02379 (2) obj. -122.816 iterations 3
Cbc0038I Pass  29: suminf.    4.52668 (15) obj. -122.816 iterations 23
Cbc0038I Pass  30: suminf.    4.36200 (14) obj. -122.816 iterations 3
Cbc0038I Pass  31: suminf.    3.62329 (13) obj. -122.816 iterations 3
Cbc0038I Pass  32: suminf.    1.69584 (9) obj. -122.816 iterations 14
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 42 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -120.208 to -129.747 (0.03 seconds)
Cbc0038I Round again with cutoff of -133.055
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.26717 (10) obj. -133.055 iterations 2
Cbc0038I Pass  33: suminf.    1.21175 (8) obj. -133.055 iterations 2
Cbc0038I Pass  34: suminf.    0.64952 (6) obj. -133.055 iterations 4
Cbc0038I Pass  35: suminf.    0.48348 (7) obj. -133.055 iterations 3
Cbc0038I Pass  36: suminf.    1.15328 (7) obj. -133.055 iterations 3
Cbc0038I Pass  37: suminf.    1.05823 (7) obj. -133.055 iterations 2
Cbc0038I Pass  38: suminf.    0.70373 (3) obj. -133.055 iterations 8
Cbc0038I Pass  39: suminf.    0.49121 (6) obj. -133.055 iterations 7
Cbc0038I Pass  40: suminf.    2.44356 (8) obj. -133.055 iterations 14
Cbc0038I Pass  41: suminf.    2.44356 (8) obj. -133.055 iterations 0
Cbc0038I Pass  42: suminf.    1.65775 (10) obj. -133.055 iterations 9
Cbc0038I Pass  43: suminf.    2.10368 (7) obj. -133.055 iterations 18
Cbc0038I Pass  44: suminf.    1.11138 (8) obj. -133.055 iterations 8
Cbc0038I Pass  45: suminf.    1.05823 (7) obj. -133.055 iterations 5
Cbc0038I Pass  46: suminf.    1.05823 (7) obj. -133.055 iterations 1
Cbc0038I Pass  47: suminf.    0.70373 (3) obj. -133.055 iterations 8
Cbc0038I Pass  48: suminf.    0.49121 (6) obj. -133.055 iterations 7
Cbc0038I Pass  49: suminf.    2.44356 (8) obj. -133.055 iterations 12
Cbc0038I Pass  50: suminf.    2.44356 (8) obj. -133.055 iterations 0
Cbc0038I Pass  51: suminf.    1.65775 (10) obj. -133.055 iterations 10
Cbc0038I Pass  52: suminf.    3.85168 (14) obj. -133.055 iterations 5
Cbc0038I Pass  53: suminf.    3.56972 (11) obj. -133.055 iterations 3
Cbc0038I Pass  54: suminf.    1.63363 (11) obj. -133.055 iterations 17
Cbc0038I Pass  55: suminf.    1.46684 (11) obj. -133.055 iterations 6
Cbc0038I Pass  56: suminf.    3.14706 (13) obj. -133.055 iterations 18
Cbc0038I Pass  57: suminf.    3.01487 (14) obj. -133.055 iterations 3
Cbc0038I Pass  58: suminf.    1.37951 (11) obj. -133.055 iterations 7
Cbc0038I Pass  59: suminf.    1.05823 (7) obj. -133.055 iterations 4
Cbc0038I Pass  60: suminf.    0.70373 (3) obj. -133.055 iterations 8
Cbc0038I Pass  61: suminf.    0.49121 (6) obj. -133.055 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 42 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -129.747 - took 0.04 seconds
Cbc0012I Integer solution of -129.7466 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 72 rows 42 columns, reduced to 28 rows 16 columns
Cbc0031I 6 added rows had average density of 4.8333333
Cbc0013I At root node, 6 cuts changed objective from -146.28852 to -141.54791 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 42 row cuts average 3.7 elements, 4 column cuts (4 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -129.7466, took 51 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 2 times (4 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-43) rows, 71 (-31) columns and 778 (-800) elements
Clp1000I sum of infeasibilities 1.42973e-07 - average 2.34382e-09, 45 fixed columns
Coin0506I Presolve 20 (-41) rows, 26 (-45) columns and 88 (-690) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 130.18213
Clp0000I Optimal - objective value 130.18213
Coin0511I After Postsolve, objective 130.18213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.2673237 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 181.88322
Clp0000I Optimal - objective value 181.88322
Clp0000I Optimal - objective value 181.88322
Coin0511I After Postsolve, objective 181.88322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 181.8832208 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 61 rows, 71 columns (71 integer (71 of which binary)) and 782 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.973%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.1298
Cbc0038I Pass   1: suminf.    2.13360 (19) obj. -99.1408 iterations 11
Cbc0038I Pass   2: suminf.    2.13360 (19) obj. -99.1408 iterations 2
Cbc0038I Solution found of -60.4933
Cbc0038I Rounding solution of -73.3154 is better than previous of -60.4933

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -73.3154 to -129.747 (0.02 seconds)
Cbc0038I Round again with cutoff of -134.302
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.20258 (22) obj. -134.302 iterations 2
Cbc0038I Pass   4: suminf.    3.20258 (22) obj. -134.302 iterations 1
Cbc0038I Pass   5: suminf.    1.82974 (11) obj. -134.302 iterations 14
Cbc0038I Pass   6: suminf.    1.81938 (10) obj. -135.069 iterations 2
Cbc0038I Pass   7: suminf.    0.52863 (3) obj. -134.302 iterations 12
Cbc0038I Pass   8: suminf.    0.31579 (1) obj. -136.409 iterations 5
Cbc0038I Pass   9: suminf.    0.37664 (1) obj. -134.302 iterations 1
Cbc0038I Pass  10: suminf.    3.64378 (14) obj. -134.302 iterations 19
Cbc0038I Pass  11: suminf.    2.42380 (9) obj. -148.143 iterations 6
Cbc0038I Pass  12: suminf.    2.42380 (9) obj. -148.143 iterations 0
Cbc0038I Pass  13: suminf.    1.18556 (3) obj. -134.302 iterations 11
Cbc0038I Pass  14: suminf.    0.71473 (10) obj. -134.302 iterations 5
Cbc0038I Pass  15: suminf.    1.31371 (4) obj. -134.302 iterations 7
Cbc0038I Pass  16: suminf.    1.59052 (11) obj. -134.302 iterations 20
Cbc0038I Pass  17: suminf.    1.44000 (8) obj. -134.64 iterations 6
Cbc0038I Pass  18: suminf.    0.95317 (3) obj. -134.302 iterations 15
Cbc0038I Pass  19: suminf.    0.70179 (4) obj. -134.302 iterations 4
Cbc0038I Pass  20: suminf.    1.16093 (4) obj. -134.302 iterations 9
Cbc0038I Pass  21: suminf.    1.16093 (4) obj. -134.302 iterations 0
Cbc0038I Pass  22: suminf.    0.59779 (7) obj. -134.302 iterations 8
Cbc0038I Pass  23: suminf.    0.58911 (3) obj. -134.302 iterations 2
Cbc0038I Pass  24: suminf.    0.55242 (7) obj. -134.302 iterations 3
Cbc0038I Pass  25: suminf.    0.55135 (3) obj. -134.302 iterations 2
Cbc0038I Pass  26: suminf.    2.50756 (12) obj. -134.302 iterations 17
Cbc0038I Pass  27: suminf.    2.49380 (11) obj. -134.302 iterations 4
Cbc0038I Pass  28: suminf.    1.35526 (11) obj. -134.302 iterations 20
Cbc0038I Pass  29: suminf.    1.68000 (8) obj. -134.302 iterations 5
Cbc0038I Pass  30: suminf.    0.94518 (7) obj. -134.302 iterations 14
Cbc0038I Pass  31: suminf.    1.27284 (8) obj. -134.302 iterations 7
Cbc0038I Pass  32: suminf.    1.85348 (8) obj. -134.302 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 41 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -129.747 - took 0.02 seconds
Cbc0012I Integer solution of -129.7466 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 61 rows 71 columns, reduced to 6 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 8.8888889
Cbc0013I At root node, 10 cuts changed objective from -175.29691 to -129.7466 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 298 row cuts average 13.9 elements, 29 column cuts (29 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 38 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -129.7466, took 81 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 72 (-33) rows, 42 (-11) columns and 222 (-81) elements
Clp1000I sum of infeasibilities 0.000189192 - average 2.62767e-06, 21 fixed columns
Coin0506I Presolve 34 (-38) rows, 20 (-22) columns and 102 (-120) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 146.28852
Clp0000I Optimal - objective value 146.28852
Coin0511I After Postsolve, objective 146.28852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.41489739 - largest nonzero change 0 ( 0%) - largest zero change 2.2680251e-05
Clp0000I Optimal - objective value 146.28852
Clp0000I Optimal - objective value 146.28852
Clp0000I Optimal - objective value 146.28852
Coin0511I After Postsolve, objective 146.28852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 146.2885166 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 72 rows, 42 columns (41 integer (41 of which binary)) and 222 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.961%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.79221
Cbc0038I Pass   1: suminf.    1.36364 (5) obj. -103.7 iterations 13
Cbc0038I Pass   2: suminf.    1.36364 (5) obj. -103.7 iterations 0
Cbc0038I Solution found of -27.1698
Cbc0038I Relaxing continuous gives -27.1698
Cbc0038I Rounding solution of -67.7035 is better than previous of -27.1698

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 42 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -67.7035 to -120.208 (0.01 seconds)
Cbc0038I Round again with cutoff of -122.816
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.44172 (9) obj. -122.816 iterations 4
Cbc0038I Pass   4: suminf.    0.49973 (4) obj. -122.816 iterations 7
Cbc0038I Pass   5: suminf.    0.07531 (1) obj. -122.816 iterations 5
Cbc0038I Pass   6: suminf.    0.31579 (1) obj. -131.144 iterations 3
Cbc0038I Pass   7: suminf.    0.60245 (8) obj. -122.816 iterations 7
Cbc0038I Pass   8: suminf.    0.47495 (4) obj. -122.816 iterations 2
Cbc0038I Pass   9: suminf.    0.30476 (1) obj. -122.816 iterations 8
Cbc0038I Pass  10: suminf.    0.10345 (1) obj. -122.816 iterations 4
Cbc0038I Pass  11: suminf.    0.19251 (1) obj. -122.816 iterations 1
Cbc0038I Pass  12: suminf.    1.16338 (8) obj. -122.816 iterations 7
Cbc0038I Pass  13: suminf.    0.91811 (8) obj. -122.816 iterations 10
Cbc0038I Pass  14: suminf.    0.91811 (8) obj. -122.816 iterations 1
Cbc0038I Pass  15: suminf.    0.12927 (3) obj. -122.816 iterations 9
Cbc0038I Pass  16: suminf.    0.03147 (2) obj. -122.816 iterations 3
Cbc0038I Pass  17: suminf.    0.02379 (2) obj. -122.816 iterations 1
Cbc0038I Pass  18: suminf.    0.99125 (8) obj. -122.816 iterations 13
Cbc0038I Pass  19: suminf.    0.55361 (7) obj. -122.816 iterations 4
Cbc0038I Pass  20: suminf.    1.16161 (7) obj. -122.816 iterations 11
Cbc0038I Pass  21: suminf.    0.78969 (2) obj. -122.816 iterations 4
Cbc0038I Pass  22: suminf.    0.31579 (1) obj. -136.409 iterations 9
Cbc0038I Pass  23: suminf.    0.29169 (1) obj. -122.816 iterations 6
Cbc0038I Pass  24: suminf.    1.12115 (5) obj. -122.816 iterations 13
Cbc0038I Pass  25: suminf.    1.12115 (5) obj. -122.816 iterations 3
Cbc0038I Pass  26: suminf.    0.03147 (2) obj. -122.816 iterations 10
Cbc0038I Pass  27: suminf.    0.03147 (2) obj. -122.816 iterations 0
Cbc0038I Pass  28: suminf.    0.02379 (2) obj. -122.816 iterations 3
Cbc0038I Pass  29: suminf.    4.52668 (15) obj. -122.816 iterations 23
Cbc0038I Pass  30: suminf.    4.36200 (14) obj. -122.816 iterations 3
Cbc0038I Pass  31: suminf.    3.62329 (13) obj. -122.816 iterations 3
Cbc0038I Pass  32: suminf.    1.69584 (9) obj. -122.816 iterations 14
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 42 columns, reduced to 35 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -120.208 to -129.747 (0.03 seconds)
Cbc0038I Round again with cutoff of -133.055
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.26717 (10) obj. -133.055 iterations 2
Cbc0038I Pass  33: suminf.    1.21175 (8) obj. -133.055 iterations 2
Cbc0038I Pass  34: suminf.    0.64952 (6) obj. -133.055 iterations 4
Cbc0038I Pass  35: suminf.    0.48348 (7) obj. -133.055 iterations 3
Cbc0038I Pass  36: suminf.    1.15328 (7) obj. -133.055 iterations 3
Cbc0038I Pass  37: suminf.    1.05823 (7) obj. -133.055 iterations 2
Cbc0038I Pass  38: suminf.    0.70373 (3) obj. -133.055 iterations 8
Cbc0038I Pass  39: suminf.    0.49121 (6) obj. -133.055 iterations 7
Cbc0038I Pass  40: suminf.    2.44356 (8) obj. -133.055 iterations 14
Cbc0038I Pass  41: suminf.    2.44356 (8) obj. -133.055 iterations 0
Cbc0038I Pass  42: suminf.    1.65775 (10) obj. -133.055 iterations 9
Cbc0038I Pass  43: suminf.    2.10368 (7) obj. -133.055 iterations 18
Cbc0038I Pass  44: suminf.    1.11138 (8) obj. -133.055 iterations 8
Cbc0038I Pass  45: suminf.    1.05823 (7) obj. -133.055 iterations 5
Cbc0038I Pass  46: suminf.    1.05823 (7) obj. -133.055 iterations 1
Cbc0038I Pass  47: suminf.    0.70373 (3) obj. -133.055 iterations 8
Cbc0038I Pass  48: suminf.    0.49121 (6) obj. -133.055 iterations 7
Cbc0038I Pass  49: suminf.    2.44356 (8) obj. -133.055 iterations 12
Cbc0038I Pass  50: suminf.    2.44356 (8) obj. -133.055 iterations 0
Cbc0038I Pass  51: suminf.    1.65775 (10) obj. -133.055 iterations 10
Cbc0038I Pass  52: suminf.    3.85168 (14) obj. -133.055 iterations 5
Cbc0038I Pass  53: suminf.    3.56972 (11) obj. -133.055 iterations 3
Cbc0038I Pass  54: suminf.    1.63363 (11) obj. -133.055 iterations 17
Cbc0038I Pass  55: suminf.    1.46684 (11) obj. -133.055 iterations 6
Cbc0038I Pass  56: suminf.    3.14706 (13) obj. -133.055 iterations 18
Cbc0038I Pass  57: suminf.    3.01487 (14) obj. -133.055 iterations 3
Cbc0038I Pass  58: suminf.    1.37951 (11) obj. -133.055 iterations 7
Cbc0038I Pass  59: suminf.    1.05823 (7) obj. -133.055 iterations 4
Cbc0038I Pass  60: suminf.    0.70373 (3) obj. -133.055 iterations 8
Cbc0038I Pass  61: suminf.    0.49121 (6) obj. -133.055 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 72 rows 42 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -129.747 - took 0.04 seconds
Cbc0012I Integer solution of -129.7466 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 72 rows 42 columns, reduced to 28 rows 16 columns
Cbc0031I 6 added rows had average density of 4.8333333
Cbc0013I At root node, 6 cuts changed objective from -146.28852 to -141.54791 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 42 row cuts average 3.7 elements, 4 column cuts (4 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -129.7466, took 51 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 2 times (4 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 61 (-44) rows, 71 (-32) columns and 778 (-801) elements
Clp1000I sum of infeasibilities 1.42973e-07 - average 2.34382e-09, 45 fixed columns
Coin0506I Presolve 20 (-41) rows, 26 (-45) columns and 88 (-690) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 130.18213
Clp0000I Optimal - objective value 130.18213
Coin0511I After Postsolve, objective 130.18213, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.2673237 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 181.88322
Clp0000I Optimal - objective value 181.88322
Clp0000I Optimal - objective value 181.88322
Coin0511I After Postsolve, objective 181.88322, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 181.8832208 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 61 rows, 71 columns (71 integer (71 of which binary)) and 782 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.973%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 6.1298
Cbc0038I Pass   1: suminf.    2.13360 (19) obj. -99.1408 iterations 11
Cbc0038I Pass   2: suminf.    2.13360 (19) obj. -99.1408 iterations 2
Cbc0038I Solution found of -60.4933
Cbc0038I Rounding solution of -73.3154 is better than previous of -60.4933

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -73.3154 to -129.747 (0.02 seconds)
Cbc0038I Round again with cutoff of -134.302
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.20258 (22) obj. -134.302 iterations 2
Cbc0038I Pass   4: suminf.    3.20258 (22) obj. -134.302 iterations 1
Cbc0038I Pass   5: suminf.    1.82974 (11) obj. -134.302 iterations 14
Cbc0038I Pass   6: suminf.    1.81938 (10) obj. -135.069 iterations 2
Cbc0038I Pass   7: suminf.    0.52863 (3) obj. -134.302 iterations 12
Cbc0038I Pass   8: suminf.    0.31579 (1) obj. -136.409 iterations 5
Cbc0038I Pass   9: suminf.    0.37664 (1) obj. -134.302 iterations 1
Cbc0038I Pass  10: suminf.    3.64378 (14) obj. -134.302 iterations 19
Cbc0038I Pass  11: suminf.    2.42380 (9) obj. -148.143 iterations 6
Cbc0038I Pass  12: suminf.    2.42380 (9) obj. -148.143 iterations 0
Cbc0038I Pass  13: suminf.    1.18556 (3) obj. -134.302 iterations 11
Cbc0038I Pass  14: suminf.    0.71473 (10) obj. -134.302 iterations 5
Cbc0038I Pass  15: suminf.    1.31371 (4) obj. -134.302 iterations 7
Cbc0038I Pass  16: suminf.    1.59052 (11) obj. -134.302 iterations 20
Cbc0038I Pass  17: suminf.    1.44000 (8) obj. -134.64 iterations 6
Cbc0038I Pass  18: suminf.    0.95317 (3) obj. -134.302 iterations 15
Cbc0038I Pass  19: suminf.    0.70179 (4) obj. -134.302 iterations 4
Cbc0038I Pass  20: suminf.    1.16093 (4) obj. -134.302 iterations 9
Cbc0038I Pass  21: suminf.    1.16093 (4) obj. -134.302 iterations 0
Cbc0038I Pass  22: suminf.    0.59779 (7) obj. -134.302 iterations 8
Cbc0038I Pass  23: suminf.    0.58911 (3) obj. -134.302 iterations 2
Cbc0038I Pass  24: suminf.    0.55242 (7) obj. -134.302 iterations 3
Cbc0038I Pass  25: suminf.    0.55135 (3) obj. -134.302 iterations 2
Cbc0038I Pass  26: suminf.    2.50756 (12) obj. -134.302 iterations 17
Cbc0038I Pass  27: suminf.    2.49380 (11) obj. -134.302 iterations 4
Cbc0038I Pass  28: suminf.    1.35526 (11) obj. -134.302 iterations 20
Cbc0038I Pass  29: suminf.    1.68000 (8) obj. -134.302 iterations 5
Cbc0038I Pass  30: suminf.    0.94518 (7) obj. -134.302 iterations 14
Cbc0038I Pass  31: suminf.    1.27284 (8) obj. -134.302 iterations 7
Cbc0038I Pass  32: suminf.    1.85348 (8) obj. -134.302 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 71 columns, reduced to 41 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -129.747 - took 0.02 seconds
Cbc0012I Integer solution of -129.7466 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 61 rows 71 columns, reduced to 6 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 8.8888889
Cbc0013I At root node, 10 cuts changed objective from -175.29691 to -129.7466 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 298 row cuts average 13.9 elements, 29 column cuts (29 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 38 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -129.7466, took 81 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 19 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.13

