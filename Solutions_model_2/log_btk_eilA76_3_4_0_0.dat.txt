Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 74 (-4) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000128636 - average 9.52859e-07, 9 fixed columns
Coin0506I Presolve 118 (-17) rows, 65 (-9) columns and 358 (-52) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Coin0511I After Postsolve, objective 47.78555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Coin0511I After Postsolve, objective 47.78555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.78555005 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 74 columns (73 integer (73 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.388%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.92867
Cbc0038I Solution found of -0.376493
Cbc0038I Relaxing continuous gives -8.45356
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 78 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -8.45356 to -20.966 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.6116
Cbc0038I Pass   1: suminf.    1.87825 (25) obj. -23.6116 iterations 42
Cbc0038I Pass   2: suminf.    1.30633 (14) obj. -23.6116 iterations 24
Cbc0038I Pass   3: suminf.    2.20268 (8) obj. -23.6116 iterations 24
Cbc0038I Pass   4: suminf.    1.61265 (5) obj. -23.6116 iterations 4
Cbc0038I Pass   5: suminf.    1.38462 (6) obj. -23.6116 iterations 2
Cbc0038I Pass   6: suminf.    0.50428 (4) obj. -23.6116 iterations 8
Cbc0038I Pass   7: suminf.    0.44708 (1) obj. -23.6116 iterations 4
Cbc0038I Pass   8: suminf.    0.45791 (2) obj. -23.6116 iterations 3
Cbc0038I Pass   9: suminf.    0.78735 (3) obj. -23.6116 iterations 4
Cbc0038I Pass  10: suminf.    0.78735 (3) obj. -23.6116 iterations 0
Cbc0038I Pass  11: suminf.    0.92327 (3) obj. -23.6116 iterations 2
Cbc0038I Pass  12: suminf.    0.84489 (2) obj. -23.6116 iterations 2
Cbc0038I Pass  13: suminf.    1.97095 (6) obj. -23.6116 iterations 12
Cbc0038I Pass  14: suminf.    1.36715 (6) obj. -23.6116 iterations 7
Cbc0038I Pass  15: suminf.    1.95272 (7) obj. -23.6116 iterations 12
Cbc0038I Pass  16: suminf.    1.88574 (14) obj. -23.6116 iterations 13
Cbc0038I Pass  17: suminf.    2.20268 (8) obj. -23.6116 iterations 25
Cbc0038I Pass  18: suminf.    1.61265 (5) obj. -23.6116 iterations 4
Cbc0038I Pass  19: suminf.    1.38462 (6) obj. -23.6116 iterations 2
Cbc0038I Pass  20: suminf.    0.50428 (4) obj. -23.6116 iterations 8
Cbc0038I Pass  21: suminf.    0.44708 (1) obj. -23.6116 iterations 4
Cbc0038I Pass  22: suminf.    0.45791 (2) obj. -23.6116 iterations 3
Cbc0038I Pass  23: suminf.    0.78735 (3) obj. -23.6116 iterations 4
Cbc0038I Pass  24: suminf.    0.78735 (3) obj. -23.6116 iterations 0
Cbc0038I Pass  25: suminf.    0.92327 (3) obj. -23.6116 iterations 2
Cbc0038I Pass  26: suminf.    0.84489 (2) obj. -23.6116 iterations 2
Cbc0038I Pass  27: suminf.    3.56632 (12) obj. -23.6116 iterations 13
Cbc0038I Pass  28: suminf.    0.76444 (8) obj. -23.6116 iterations 17
Cbc0038I Pass  29: suminf.    0.71545 (7) obj. -23.6116 iterations 2
Cbc0038I Pass  30: suminf.    0.79235 (2) obj. -23.6116 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -20.966 to -21.2171 (0.13 seconds)
Cbc0038I Round again with cutoff of -28.3733
Cbc0038I Pass  30: suminf.    2.15414 (25) obj. -28.3733 iterations 0
Cbc0038I Pass  31: suminf.    1.98378 (20) obj. -28.3733 iterations 10
Cbc0038I Pass  32: suminf.    1.70693 (9) obj. -28.3733 iterations 36
Cbc0038I Pass  33: suminf.    1.46083 (8) obj. -28.3733 iterations 7
Cbc0038I Pass  34: suminf.    1.09038 (3) obj. -28.3733 iterations 14
Cbc0038I Pass  35: suminf.    0.78892 (3) obj. -28.3733 iterations 3
Cbc0038I Pass  36: suminf.    1.09038 (3) obj. -28.3733 iterations 4
Cbc0038I Pass  37: suminf.    5.81722 (16) obj. -28.3733 iterations 36
Cbc0038I Pass  38: suminf.    1.87421 (6) obj. -28.3733 iterations 22
Cbc0038I Pass  39: suminf.    1.87421 (6) obj. -28.3733 iterations 0
Cbc0038I Pass  40: suminf.    1.15933 (6) obj. -28.3733 iterations 9
Cbc0038I Pass  41: suminf.    1.07415 (6) obj. -28.3733 iterations 1
Cbc0038I Pass  42: suminf.    1.07415 (6) obj. -28.3733 iterations 2
Cbc0038I Pass  43: suminf.    1.86811 (6) obj. -28.3733 iterations 12
Cbc0038I Pass  44: suminf.    1.48402 (5) obj. -28.3733 iterations 3
Cbc0038I Pass  45: suminf.    1.72789 (5) obj. -28.3733 iterations 6
Cbc0038I Pass  46: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  47: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  48: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  49: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I Pass  50: suminf.    1.72789 (5) obj. -28.3733 iterations 5
Cbc0038I Pass  51: suminf.    1.50119 (4) obj. -28.3733 iterations 3
Cbc0038I Pass  52: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  53: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  54: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I Pass  55: suminf.    1.72789 (5) obj. -28.3733 iterations 5
Cbc0038I Pass  56: suminf.    1.50119 (4) obj. -28.3733 iterations 3
Cbc0038I Pass  57: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  58: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  59: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 90 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -21.2171 - took 0.14 seconds
Cbc0012I Integer solution of -21.21711 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 79 rows 44 columns
Cbc0031I 22 added rows had average density of 58.272727
Cbc0013I At root node, 22 cuts changed objective from -47.420319 to -40.438342 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9332 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1137 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.21711 best solution, best possible -40.438342 (0.73 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -21.21711000000001, took 8089 iterations and 58 nodes (0.93 seconds)
Cbc0032I Strong branching done 646 times (12723 iterations), fathomed 7 nodes and fixed 16 variables
Cbc0035I Maximum depth 21, 160 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 108 (-46) rows, 119 (-33) columns and 1961 (-1342) elements
Clp1000I sum of infeasibilities 2.80747e-07 - average 2.59951e-09, 86 fixed columns
Coin0506I Presolve 28 (-80) rows, 33 (-86) columns and 116 (-1845) elements
Clp0006I 0  Obj 32.246723 Dual inf 796.26267 (33)
Clp0029I End of values pass after 15 iterations
Clp0014I Perturbing problem by 0.001% of 0.33978511 - largest nonzero change 2.5464251e-05 ( 0.0021869008%) - largest zero change 2.8266932e-05
Clp0000I Optimal - objective value 32.60267
Clp0000I Optimal - objective value 32.60267
Coin0511I After Postsolve, objective 32.60267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 32.60267 Dual inf 78.732398 (47)
Clp0014I Perturbing problem by 0.001% of 1.6070606 - largest nonzero change 1.9644457e-05 ( 0.0016580886%) - largest zero change 2.9711181e-05
Clp0000I Optimal - objective value 106.83106
Clp0000I Optimal - objective value 106.83106
Clp0000I Optimal - objective value 106.83106
Coin0511I After Postsolve, objective 106.83106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.8310624 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 119 columns (119 integer (119 of which binary)) and 1974 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.491%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.71546
Cbc0038I Pass   1: suminf.    1.70587 (26) obj. -45.6544 iterations 26
Cbc0038I Pass   2: suminf.    1.70587 (26) obj. -45.6544 iterations 0
Cbc0038I Solution found of -3.86722
Cbc0038I Rounding solution of -9.19098 is better than previous of -3.86722

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -9.19098 to -47.5001 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.6755
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.30077 (37) obj. -52.6755 iterations 11
Cbc0038I Pass   4: suminf.    2.30077 (37) obj. -52.6755 iterations 1
Cbc0038I Pass   5: suminf.    1.36039 (10) obj. -52.6755 iterations 30
Cbc0038I Pass   6: suminf.    0.54479 (3) obj. -52.6755 iterations 14
Cbc0038I Pass   7: suminf.    0.54479 (3) obj. -52.6755 iterations 0
Cbc0038I Pass   8: suminf.    0.24752 (3) obj. -56.4733 iterations 3
Cbc0038I Pass   9: suminf.    0.13889 (1) obj. -55.2501 iterations 1
Cbc0038I Pass  10: suminf.    2.49185 (15) obj. -52.6755 iterations 21
Cbc0038I Pass  11: suminf.    2.49185 (15) obj. -52.6755 iterations 3
Cbc0038I Pass  12: suminf.    0.54807 (4) obj. -52.6755 iterations 14
Cbc0038I Pass  13: suminf.    0.54807 (4) obj. -52.6755 iterations 1
Cbc0038I Pass  14: suminf.    0.63705 (4) obj. -52.6755 iterations 6
Cbc0038I Pass  15: suminf.    0.27973 (2) obj. -53.6867 iterations 3
Cbc0038I Pass  16: suminf.    0.54807 (4) obj. -52.6755 iterations 6
Cbc0038I Pass  17: suminf.    3.39041 (17) obj. -52.6755 iterations 38
Cbc0038I Pass  18: suminf.    1.72245 (12) obj. -52.6755 iterations 10
Cbc0038I Pass  19: suminf.    1.59726 (11) obj. -52.6755 iterations 1
Cbc0038I Pass  20: suminf.    0.54458 (6) obj. -52.6755 iterations 13
Cbc0038I Pass  21: suminf.    0.29800 (4) obj. -52.6755 iterations 2
Cbc0038I Pass  22: suminf.    0.33616 (3) obj. -52.6755 iterations 9
Cbc0038I Pass  23: suminf.    0.17667 (3) obj. -52.6755 iterations 3
Cbc0038I Pass  24: suminf.    0.33616 (3) obj. -52.6755 iterations 4
Cbc0038I Pass  25: suminf.    1.56965 (12) obj. -52.6755 iterations 35
Cbc0038I Pass  26: suminf.    1.56965 (12) obj. -52.6755 iterations 6
Cbc0038I Pass  27: suminf.    0.29807 (4) obj. -52.6755 iterations 17
Cbc0038I Pass  28: suminf.    0.29807 (4) obj. -52.6755 iterations 0
Cbc0038I Pass  29: suminf.    0.74816 (4) obj. -52.6755 iterations 5
Cbc0038I Pass  30: suminf.    0.27973 (2) obj. -54.6867 iterations 3
Cbc0038I Pass  31: suminf.    1.94628 (13) obj. -52.6755 iterations 18
Cbc0038I Pass  32: suminf.    1.35146 (10) obj. -52.6755 iterations 9
Cbc0038I Rounding solution of -48.7738 is better than previous of -47.5001

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 48 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -61.9911
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.09007 (37) obj. -61.9911 iterations 0
Cbc0038I Pass  33: suminf.    3.09007 (37) obj. -61.9911 iterations 1
Cbc0038I Pass  34: suminf.    2.81105 (23) obj. -61.9911 iterations 17
Cbc0038I Pass  35: suminf.    1.78222 (14) obj. -61.9911 iterations 16
Cbc0038I Pass  36: suminf.    1.78222 (14) obj. -61.9911 iterations 0
Cbc0038I Pass  37: suminf.    0.86808 (5) obj. -61.9911 iterations 26
Cbc0038I Pass  38: suminf.    0.42259 (3) obj. -62.1153 iterations 6
Cbc0038I Pass  39: suminf.    0.86808 (5) obj. -61.9911 iterations 6
Cbc0038I Pass  40: suminf.    2.08555 (10) obj. -61.9911 iterations 17
Cbc0038I Pass  41: suminf.    1.52407 (12) obj. -61.9911 iterations 5
Cbc0038I Pass  42: suminf.    0.61808 (5) obj. -61.9911 iterations 17
Cbc0038I Pass  43: suminf.    0.50193 (5) obj. -61.9911 iterations 5
Cbc0038I Pass  44: suminf.    0.61808 (5) obj. -61.9911 iterations 5
Cbc0038I Pass  45: suminf.    1.53135 (13) obj. -61.9911 iterations 16
Cbc0038I Pass  46: suminf.    0.97297 (8) obj. -62.6743 iterations 6
Cbc0038I Pass  47: suminf.    1.32776 (8) obj. -61.9911 iterations 22
Cbc0038I Pass  48: suminf.    1.32776 (8) obj. -61.9911 iterations 1
Cbc0038I Pass  49: suminf.    0.87170 (9) obj. -61.9911 iterations 20
Cbc0038I Pass  50: suminf.    0.76378 (4) obj. -61.9911 iterations 2
Cbc0038I Pass  51: suminf.    0.50470 (3) obj. -61.9911 iterations 2
Cbc0038I Pass  52: suminf.    0.46644 (3) obj. -62.1441 iterations 3
Cbc0038I Pass  53: suminf.    0.50470 (3) obj. -61.9911 iterations 4
Cbc0038I Pass  54: suminf.    1.33576 (8) obj. -61.9911 iterations 15
Cbc0038I Pass  55: suminf.    1.12519 (8) obj. -62.8334 iterations 6
Cbc0038I Pass  56: suminf.    0.85079 (4) obj. -61.9911 iterations 12
Cbc0038I Pass  57: suminf.    0.65394 (4) obj. -62.5816 iterations 4
Cbc0038I Pass  58: suminf.    1.87603 (11) obj. -61.9911 iterations 16
Cbc0038I Pass  59: suminf.    1.31190 (10) obj. -61.9911 iterations 10
Cbc0038I Pass  60: suminf.    0.94921 (5) obj. -61.9911 iterations 12
Cbc0038I Pass  61: suminf.    0.65394 (4) obj. -62.5816 iterations 5
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 119 columns, reduced to 46 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -73.1698
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    5.60207 (38) obj. -98.9195 iterations 4
Cbc0038I Pass  62: suminf.    2.23245 (17) obj. -73.1698 iterations 36
Cbc0038I Pass  63: suminf.    2.23245 (17) obj. -73.1698 iterations 0
Cbc0038I Pass  64: suminf.    2.01488 (10) obj. -73.1698 iterations 23
Cbc0038I Pass  65: suminf.    1.83210 (12) obj. -73.1698 iterations 3
Cbc0038I Pass  66: suminf.    1.77267 (13) obj. -73.1698 iterations 16
Cbc0038I Pass  67: suminf.    1.74718 (11) obj. -73.1698 iterations 9
Cbc0038I Pass  68: suminf.    1.78420 (13) obj. -73.1698 iterations 13
Cbc0038I Pass  69: suminf.    1.75880 (11) obj. -73.1698 iterations 9
Cbc0038I Pass  70: suminf.    1.77267 (13) obj. -73.1698 iterations 13
Cbc0038I Pass  71: suminf.    2.46308 (17) obj. -73.1698 iterations 14
Cbc0038I Pass  72: suminf.    2.46308 (17) obj. -73.1698 iterations 5
Cbc0038I Pass  73: suminf.    2.03712 (12) obj. -73.1698 iterations 25
Cbc0038I Pass  74: suminf.    2.03712 (12) obj. -73.1698 iterations 0
Cbc0038I Pass  75: suminf.    2.07823 (14) obj. -73.1698 iterations 10
Cbc0038I Pass  76: suminf.    2.05279 (12) obj. -73.1698 iterations 9
Cbc0038I Pass  77: suminf.    2.06256 (14) obj. -73.1698 iterations 13
Cbc0038I Pass  78: suminf.    1.98282 (14) obj. -73.1698 iterations 18
Cbc0038I Pass  79: suminf.    1.98282 (14) obj. -73.1698 iterations 0
Cbc0038I Pass  80: suminf.    1.88363 (15) obj. -73.1698 iterations 17
Cbc0038I Pass  81: suminf.    1.85729 (13) obj. -73.1698 iterations 6
Cbc0038I Pass  82: suminf.    2.28190 (15) obj. -73.1698 iterations 13
Cbc0038I Pass  83: suminf.    2.25695 (13) obj. -73.1698 iterations 8
Cbc0038I Pass  84: suminf.    1.88363 (15) obj. -73.1698 iterations 13
Cbc0038I Pass  85: suminf.    2.29115 (15) obj. -73.1698 iterations 12
Cbc0038I Pass  86: suminf.    2.26490 (13) obj. -73.1698 iterations 3
Cbc0038I Pass  87: suminf.    1.88363 (15) obj. -73.1698 iterations 15
Cbc0038I Pass  88: suminf.    1.85729 (13) obj. -73.1698 iterations 7
Cbc0038I Pass  89: suminf.    2.28190 (15) obj. -73.1698 iterations 14
Cbc0038I Pass  90: suminf.    2.25695 (13) obj. -73.1698 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -48.7738 - took 0.09 seconds
Cbc0012I Integer solution of -48.77376 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 108 rows 119 columns, reduced to 4 rows 4 columns
Cbc0031I 30 added rows had average density of 5.7666667
Cbc0013I At root node, 46 cuts changed objective from -99.253339 to -48.77376 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 241 row cuts average 2.2 elements, 35 column cuts (35 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 55.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 36 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 71 row cuts average 52.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48.77376, took 139 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.20

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 74 (-4) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000128636 - average 9.52859e-07, 9 fixed columns
Coin0506I Presolve 118 (-17) rows, 65 (-9) columns and 358 (-52) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Coin0511I After Postsolve, objective 47.78555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Clp0000I Optimal - objective value 47.78555
Coin0511I After Postsolve, objective 47.78555, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.78555005 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 74 columns (73 integer (73 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.388%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 6.92867
Cbc0038I Solution found of -0.376493
Cbc0038I Relaxing continuous gives -8.45356
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 78 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -8.45356 to -20.966 (0.06 seconds)
Cbc0038I Round again with cutoff of -23.6116
Cbc0038I Pass   1: suminf.    1.87825 (25) obj. -23.6116 iterations 42
Cbc0038I Pass   2: suminf.    1.30633 (14) obj. -23.6116 iterations 24
Cbc0038I Pass   3: suminf.    2.20268 (8) obj. -23.6116 iterations 24
Cbc0038I Pass   4: suminf.    1.61265 (5) obj. -23.6116 iterations 4
Cbc0038I Pass   5: suminf.    1.38462 (6) obj. -23.6116 iterations 2
Cbc0038I Pass   6: suminf.    0.50428 (4) obj. -23.6116 iterations 8
Cbc0038I Pass   7: suminf.    0.44708 (1) obj. -23.6116 iterations 4
Cbc0038I Pass   8: suminf.    0.45791 (2) obj. -23.6116 iterations 3
Cbc0038I Pass   9: suminf.    0.78735 (3) obj. -23.6116 iterations 4
Cbc0038I Pass  10: suminf.    0.78735 (3) obj. -23.6116 iterations 0
Cbc0038I Pass  11: suminf.    0.92327 (3) obj. -23.6116 iterations 2
Cbc0038I Pass  12: suminf.    0.84489 (2) obj. -23.6116 iterations 2
Cbc0038I Pass  13: suminf.    1.97095 (6) obj. -23.6116 iterations 12
Cbc0038I Pass  14: suminf.    1.36715 (6) obj. -23.6116 iterations 7
Cbc0038I Pass  15: suminf.    1.95272 (7) obj. -23.6116 iterations 12
Cbc0038I Pass  16: suminf.    1.88574 (14) obj. -23.6116 iterations 13
Cbc0038I Pass  17: suminf.    2.20268 (8) obj. -23.6116 iterations 25
Cbc0038I Pass  18: suminf.    1.61265 (5) obj. -23.6116 iterations 4
Cbc0038I Pass  19: suminf.    1.38462 (6) obj. -23.6116 iterations 2
Cbc0038I Pass  20: suminf.    0.50428 (4) obj. -23.6116 iterations 8
Cbc0038I Pass  21: suminf.    0.44708 (1) obj. -23.6116 iterations 4
Cbc0038I Pass  22: suminf.    0.45791 (2) obj. -23.6116 iterations 3
Cbc0038I Pass  23: suminf.    0.78735 (3) obj. -23.6116 iterations 4
Cbc0038I Pass  24: suminf.    0.78735 (3) obj. -23.6116 iterations 0
Cbc0038I Pass  25: suminf.    0.92327 (3) obj. -23.6116 iterations 2
Cbc0038I Pass  26: suminf.    0.84489 (2) obj. -23.6116 iterations 2
Cbc0038I Pass  27: suminf.    3.56632 (12) obj. -23.6116 iterations 13
Cbc0038I Pass  28: suminf.    0.76444 (8) obj. -23.6116 iterations 17
Cbc0038I Pass  29: suminf.    0.71545 (7) obj. -23.6116 iterations 2
Cbc0038I Pass  30: suminf.    0.79235 (2) obj. -23.6116 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -20.966 to -21.2171 (0.12 seconds)
Cbc0038I Round again with cutoff of -28.3733
Cbc0038I Pass  30: suminf.    2.15414 (25) obj. -28.3733 iterations 0
Cbc0038I Pass  31: suminf.    1.98378 (20) obj. -28.3733 iterations 10
Cbc0038I Pass  32: suminf.    1.70693 (9) obj. -28.3733 iterations 36
Cbc0038I Pass  33: suminf.    1.46083 (8) obj. -28.3733 iterations 7
Cbc0038I Pass  34: suminf.    1.09038 (3) obj. -28.3733 iterations 14
Cbc0038I Pass  35: suminf.    0.78892 (3) obj. -28.3733 iterations 3
Cbc0038I Pass  36: suminf.    1.09038 (3) obj. -28.3733 iterations 4
Cbc0038I Pass  37: suminf.    5.81722 (16) obj. -28.3733 iterations 36
Cbc0038I Pass  38: suminf.    1.87421 (6) obj. -28.3733 iterations 22
Cbc0038I Pass  39: suminf.    1.87421 (6) obj. -28.3733 iterations 0
Cbc0038I Pass  40: suminf.    1.15933 (6) obj. -28.3733 iterations 9
Cbc0038I Pass  41: suminf.    1.07415 (6) obj. -28.3733 iterations 1
Cbc0038I Pass  42: suminf.    1.07415 (6) obj. -28.3733 iterations 2
Cbc0038I Pass  43: suminf.    1.86811 (6) obj. -28.3733 iterations 12
Cbc0038I Pass  44: suminf.    1.48402 (5) obj. -28.3733 iterations 3
Cbc0038I Pass  45: suminf.    1.72789 (5) obj. -28.3733 iterations 6
Cbc0038I Pass  46: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  47: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  48: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  49: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I Pass  50: suminf.    1.72789 (5) obj. -28.3733 iterations 5
Cbc0038I Pass  51: suminf.    1.50119 (4) obj. -28.3733 iterations 3
Cbc0038I Pass  52: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  53: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  54: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I Pass  55: suminf.    1.72789 (5) obj. -28.3733 iterations 5
Cbc0038I Pass  56: suminf.    1.50119 (4) obj. -28.3733 iterations 3
Cbc0038I Pass  57: suminf.    1.50119 (4) obj. -28.3733 iterations 2
Cbc0038I Pass  58: suminf.    1.16586 (5) obj. -28.3733 iterations 4
Cbc0038I Pass  59: suminf.    1.11801 (5) obj. -28.3733 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 90 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -21.2171 - took 0.13 seconds
Cbc0012I Integer solution of -21.21711 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 79 rows 44 columns
Cbc0031I 22 added rows had average density of 58.272727
Cbc0013I At root node, 22 cuts changed objective from -47.420319 to -40.438342 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9332 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1137 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.21711 best solution, best possible -40.438342 (0.74 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 2 rows 3 columns
Cbc0001I Search completed - best objective -21.21711000000001, took 8089 iterations and 58 nodes (0.94 seconds)
Cbc0032I Strong branching done 646 times (12723 iterations), fathomed 7 nodes and fixed 16 variables
Cbc0035I Maximum depth 21, 160 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.95

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 118 (-35) columns and 1920 (-1384) elements
Clp1000I sum of infeasibilities 1.57406e-07 - average 1.47109e-09, 15 fixed columns
Coin0506I Presolve 90 (-17) rows, 99 (-19) columns and 1467 (-453) elements
Clp0006I 0  Obj 55.122312 Dual inf 6.5393204 (99)
Clp0029I End of values pass after 99 iterations
Clp0014I Perturbing problem by 0.001% of 1.584261 - largest nonzero change 0 ( 0%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 63.852666
Clp0000I Optimal - objective value 63.852666
Coin0511I After Postsolve, objective 63.852666, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 63.852666
Clp0000I Optimal - objective value 63.852666
Clp0000I Optimal - objective value 63.852666
Clp0000I Optimal - objective value 63.852666
Coin0511I After Postsolve, objective 63.852666, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 63.85266602 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 118 columns (118 integer (118 of which binary)) and 1933 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.461%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 5.93355
Cbc0038I Pass   1: suminf.    1.41635 (26) obj. -42.3687 iterations 31
Cbc0038I Pass   2: suminf.    1.41635 (26) obj. -42.3687 iterations 0
Cbc0038I Pass   3: suminf.    0.74796 (16) obj. -21.8635 iterations 10
Cbc0038I Solution found of 0.01175
Cbc0038I Rounding solution of -4.78825 is better than previous of 0.01175

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -10.064
Cbc0038I Pass   4: suminf.    1.41635 (26) obj. -42.3687 iterations 0
Cbc0038I Pass   5: suminf.    1.41635 (26) obj. -42.3687 iterations 0
Cbc0038I Pass   6: suminf.    0.47916 (1) obj. -10.064 iterations 31
Cbc0038I Pass   7: suminf.    0.22581 (3) obj. -17.0682 iterations 2
Cbc0038I Pass   8: suminf.    0.92406 (3) obj. -10.064 iterations 4
Cbc0038I Pass   9: suminf.    1.63371 (18) obj. -10.064 iterations 29
Cbc0038I Pass  10: suminf.    1.63371 (18) obj. -10.064 iterations 3
Cbc0038I Pass  11: suminf.    0.50177 (3) obj. -10.064 iterations 10
Cbc0038I Pass  12: suminf.    0.50177 (3) obj. -10.064 iterations 0
Cbc0038I Pass  13: suminf.    1.23421 (5) obj. -10.064 iterations 3
Cbc0038I Pass  14: suminf.    0.61976 (3) obj. -10.064 iterations 4
Cbc0038I Pass  15: suminf.    0.32258 (3) obj. -13.045 iterations 2
Cbc0038I Pass  16: suminf.    2.11154 (17) obj. -10.064 iterations 33
Cbc0038I Pass  17: suminf.    1.21928 (11) obj. -10.064 iterations 14
Cbc0038I Pass  18: suminf.    0.54311 (5) obj. -10.064 iterations 14
Cbc0038I Pass  19: suminf.    0.30047 (2) obj. -10.6366 iterations 3
Cbc0038I Pass  20: suminf.    0.36409 (2) obj. -10.064 iterations 2
Cbc0038I Pass  21: suminf.    1.28029 (16) obj. -10.064 iterations 22
Cbc0038I Pass  22: suminf.    0.97625 (11) obj. -10.064 iterations 17
Cbc0038I Pass  23: suminf.    3.35803 (9) obj. -10.064 iterations 12
Cbc0038I Pass  24: suminf.    3.35803 (9) obj. -10.064 iterations 0
Cbc0038I Pass  25: suminf.    2.42927 (12) obj. -10.064 iterations 23
Cbc0038I Pass  26: suminf.    2.42927 (12) obj. -10.064 iterations 1
Cbc0038I Pass  27: suminf.    2.75804 (11) obj. -10.064 iterations 7
Cbc0038I Pass  28: suminf.    2.67272 (11) obj. -10.064 iterations 2
Cbc0038I Pass  29: suminf.    0.93217 (6) obj. -10.064 iterations 8
Cbc0038I Pass  30: suminf.    0.56336 (4) obj. -10.064 iterations 6
Cbc0038I Pass  31: suminf.    0.54980 (4) obj. -10.064 iterations 4
Cbc0038I Pass  32: suminf.    0.54980 (4) obj. -10.064 iterations 4
Cbc0038I Pass  33: suminf.    0.56336 (4) obj. -10.064 iterations 3
Cbc0038I Rounding solution of -14.5255 is better than previous of -4.78825

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 118 columns, reduced to 62 rows 67 columns
Cbc0038I Mini branch and bound improved solution from -14.5255 to -19.345 (0.09 seconds)
Cbc0038I Round again with cutoff of -26.985
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.41635 (26) obj. -42.3687 iterations 0
Cbc0038I Pass  34: suminf.    1.41635 (26) obj. -42.3687 iterations 0
Cbc0038I Pass  35: suminf.    1.17890 (17) obj. -26.985 iterations 11
Cbc0038I Pass  36: suminf.    0.81838 (17) obj. -30.2296 iterations 2
Cbc0038I Pass  37: suminf.    0.77965 (5) obj. -26.985 iterations 20
Cbc0038I Pass  38: suminf.    0.55966 (5) obj. -26.985 iterations 3
Cbc0038I Pass  39: suminf.    0.77965 (5) obj. -26.985 iterations 13
Cbc0038I Pass  40: suminf.    1.47168 (10) obj. -26.985 iterations 40
Cbc0038I Pass  41: suminf.    1.47168 (10) obj. -26.985 iterations 7
Cbc0038I Pass  42: suminf.    1.74812 (21) obj. -26.985 iterations 18
Cbc0038I Pass  43: suminf.    1.13404 (7) obj. -26.985 iterations 9
Cbc0038I Pass  44: suminf.    1.05596 (7) obj. -26.985 iterations 8
Cbc0038I Pass  45: suminf.    0.77106 (7) obj. -26.985 iterations 5
Cbc0038I Pass  46: suminf.    1.74031 (10) obj. -26.985 iterations 9
Cbc0038I Pass  47: suminf.    1.21137 (7) obj. -26.985 iterations 5
Cbc0038I Pass  48: suminf.    1.36927 (8) obj. -26.985 iterations 9
Cbc0038I Pass  49: suminf.    1.13257 (8) obj. -26.985 iterations 6
Cbc0038I Pass  50: suminf.    1.76257 (22) obj. -26.985 iterations 12
Cbc0038I Pass  51: suminf.    1.13404 (7) obj. -26.985 iterations 11
Cbc0038I Pass  52: suminf.    1.05596 (7) obj. -26.985 iterations 8
Cbc0038I Pass  53: suminf.    0.77106 (7) obj. -26.985 iterations 5
Cbc0038I Pass  54: suminf.    2.21125 (12) obj. -26.985 iterations 17
Cbc0038I Pass  55: suminf.    1.57310 (11) obj. -26.985 iterations 4
Cbc0038I Pass  56: suminf.    1.31415 (7) obj. -26.985 iterations 9
Cbc0038I Pass  57: suminf.    1.08375 (7) obj. -26.985 iterations 5
Cbc0038I Pass  58: suminf.    1.13020 (24) obj. -26.985 iterations 11
Cbc0038I Pass  59: suminf.    1.07871 (7) obj. -26.985 iterations 10
Cbc0038I Pass  60: suminf.    1.32674 (7) obj. -26.985 iterations 8
Cbc0038I Pass  61: suminf.    1.32674 (7) obj. -26.985 iterations 4
Cbc0038I Pass  62: suminf.    1.13399 (23) obj. -26.985 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -19.345 - took 0.08 seconds
Cbc0012I Integer solution of -19.34502 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 107 rows 118 columns, reduced to 40 rows 42 columns
Cbc0031I 48 added rows had average density of 28.791667
Cbc0013I At root node, 48 cuts changed objective from -57.544675 to -33.340929 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11744 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1720 row cuts average 108.2 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 68 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 884 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 16 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1000 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 361 row cuts average 59.7 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 236 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.657 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.34502 best solution, best possible -33.340929 (2.34 seconds)
Cbc0010I After 8 nodes, 7 on tree, -19.34502 best solution, best possible -29.284806 (3.17 seconds)
Cbc0004I Integer solution of -19.42463 found after 5765 iterations and 10 nodes (3.28 seconds)
Cbc0016I Integer solution of -21.21711 found by strong branching after 6113 iterations and 19 nodes (3.72 seconds)
Cbc0010I After 26 nodes, 5 on tree, -21.21711 best solution, best possible -29.284806 (4.08 seconds)
Cbc0001I Search completed - best objective -21.21711000000001, took 7236 iterations and 36 nodes (4.42 seconds)
Cbc0032I Strong branching done 602 times (12559 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 12, 117 variables fixed on reduced cost
Total time (CPU seconds):       3.23   (Wallclock seconds):       4.43

