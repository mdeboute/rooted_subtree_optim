Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 9.05757e-06 - average 4.89598e-08, 40 fixed columns
Coin0506I Presolve 107 (-78) rows, 61 (-40) columns and 330 (-234) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0398073 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Coin0511I After Postsolve, objective 86.809975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20284948 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Coin0511I After Postsolve, objective 86.809975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.80997494 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.43055
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.8026 iterations 54
Cbc0038I Solution found of -10.8026
Cbc0038I Relaxing continuous gives -10.8026
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.8026 to -59.4062 (0.06 seconds)
Cbc0038I Round again with cutoff of -62.1466
Cbc0038I Pass   2: suminf.    2.29483 (7) obj. -62.1466 iterations 14
Cbc0038I Pass   3: suminf.    1.28315 (4) obj. -62.1466 iterations 10
Cbc0038I Pass   4: suminf.    1.46040 (8) obj. -62.1466 iterations 23
Cbc0038I Pass   5: suminf.    1.37781 (6) obj. -62.1466 iterations 12
Cbc0038I Pass   6: suminf.    1.46454 (4) obj. -62.1466 iterations 8
Cbc0038I Pass   7: suminf.    1.45306 (5) obj. -62.1466 iterations 5
Cbc0038I Pass   8: suminf.    1.69638 (5) obj. -62.1466 iterations 10
Cbc0038I Pass   9: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  10: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  11: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  12: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  13: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  14: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  15: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  16: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  17: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  18: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  19: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  20: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  21: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  22: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  23: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  24: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  25: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  26: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  27: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  28: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  29: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  30: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  31: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -59.4062 - took 0.09 seconds
Cbc0012I Integer solution of -59.40618 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 73 rows 42 columns
Cbc0031I 23 added rows had average density of 65.956522
Cbc0013I At root node, 23 cuts changed objective from -86.809975 to -79.50795 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8053 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1705 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 97.4 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -59.40618 best solution, best possible -79.50795 (1.08 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 27 rows 17 columns
Cbc0001I Search completed - best objective -59.40617999999998, took 8521 iterations and 80 nodes (1.42 seconds)
Cbc0032I Strong branching done 806 times (16255 iterations), fathomed 17 nodes and fixed 21 variables
Cbc0035I Maximum depth 24, 381 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-72) rows, 147 (-55) columns and 2677 (-2976) elements
Clp1000I sum of infeasibilities 6.03045e-07 - average 4.56852e-09, 88 fixed columns
Coin0506I Presolve 47 (-85) rows, 59 (-88) columns and 207 (-2470) elements
Clp0006I 0  Obj 37.338089 Dual inf 2.4032624 (59)
Clp0029I End of values pass after 59 iterations
Clp0014I Perturbing problem by 0.001% of 3.1744923 - largest nonzero change 3.60244e-05 ( 0.00088996209%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 37.60507
Clp0000I Optimal - objective value 37.60507
Coin0511I After Postsolve, objective 37.60507, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 37.60507 Dual inf 80.503732 (47)
Clp0014I Perturbing problem by 0.001% of 1.3595023 - largest nonzero change 2.8585883e-05 ( 0.0026785753%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 107.64336
Clp0000I Optimal - objective value 107.64336
Clp0000I Optimal - objective value 107.64336
Coin0511I After Postsolve, objective 107.64336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.6433596 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 147 columns (147 integer (147 of which binary)) and 2685 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.774%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 3.2048
Cbc0038I Pass   1: suminf.    3.00636 (34) obj. -92.4932 iterations 9
Cbc0038I Pass   2: suminf.    0.41853 (9) obj. -59.6724 iterations 34
Cbc0038I Solution found of -51.0909
Cbc0038I Rounding solution of -54.2586 is better than previous of -51.0909

Cbc0038I Before mini branch and bound, 110 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -58.1622
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.00636 (34) obj. -92.4932 iterations 0
Cbc0038I Pass   4: suminf.    1.05572 (18) obj. -68.9631 iterations 25
Cbc0038I Pass   5: suminf.    0.49687 (9) obj. -58.1622 iterations 19
Cbc0038I Pass   6: suminf.    0.45381 (3) obj. -60.5446 iterations 9
Cbc0038I Pass   7: suminf.    0.06667 (1) obj. -60.0063 iterations 2
Cbc0038I Pass   8: suminf.    0.13993 (1) obj. -58.1622 iterations 1
Cbc0038I Pass   9: suminf.    1.47110 (11) obj. -58.1622 iterations 29
Cbc0038I Pass  10: suminf.    0.83747 (11) obj. -58.1622 iterations 11
Cbc0038I Pass  11: suminf.    0.89023 (4) obj. -58.1622 iterations 32
Cbc0038I Pass  12: suminf.    0.26466 (4) obj. -58.1622 iterations 9
Cbc0038I Pass  13: suminf.    0.67297 (3) obj. -58.1622 iterations 5
Cbc0038I Pass  14: suminf.    0.65040 (4) obj. -58.1622 iterations 4
Cbc0038I Pass  15: suminf.    0.65401 (6) obj. -58.1622 iterations 11
Cbc0038I Pass  16: suminf.    0.39687 (5) obj. -58.1622 iterations 7
Cbc0038I Pass  17: suminf.    0.86054 (5) obj. -58.1622 iterations 8
Cbc0038I Pass  18: suminf.    0.64729 (9) obj. -58.1622 iterations 3
Cbc0038I Pass  19: suminf.    0.83398 (6) obj. -58.1622 iterations 11
Cbc0038I Pass  20: suminf.    0.37603 (6) obj. -58.1622 iterations 10
Cbc0038I Pass  21: suminf.    1.96605 (8) obj. -58.1622 iterations 6
Cbc0038I Pass  22: suminf.    0.54732 (5) obj. -58.1622 iterations 6
Cbc0038I Pass  23: suminf.    0.76189 (4) obj. -58.1622 iterations 6
Cbc0038I Pass  24: suminf.    2.20003 (14) obj. -58.1622 iterations 21
Cbc0038I Pass  25: suminf.    0.66691 (11) obj. -58.1622 iterations 13
Cbc0038I Pass  26: suminf.    0.43281 (4) obj. -58.1622 iterations 14
Cbc0038I Pass  27: suminf.    0.37603 (6) obj. -58.1622 iterations 1
Cbc0038I Pass  28: suminf.    1.96605 (8) obj. -58.1622 iterations 6
Cbc0038I Pass  29: suminf.    0.54732 (5) obj. -58.1622 iterations 6
Cbc0038I Pass  30: suminf.    0.76189 (4) obj. -58.1622 iterations 7
Cbc0038I Pass  31: suminf.    1.44081 (10) obj. -58.1622 iterations 24
Cbc0038I Pass  32: suminf.    1.01495 (7) obj. -58.1622 iterations 12
Cbc0038I Rounding solution of -59.4062 is better than previous of -54.2586

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 22 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -66.1838
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.00636 (34) obj. -92.4932 iterations 0
Cbc0038I Pass  33: suminf.    0.88301 (18) obj. -66.1838 iterations 38
Cbc0038I Pass  34: suminf.    0.99622 (4) obj. -66.1838 iterations 25
Cbc0038I Pass  35: suminf.    0.57207 (5) obj. -66.4476 iterations 10
Cbc0038I Pass  36: suminf.    0.91278 (4) obj. -66.1838 iterations 18
Cbc0038I Pass  37: suminf.    1.09800 (10) obj. -66.1838 iterations 16
Cbc0038I Pass  38: suminf.    0.91664 (12) obj. -66.1838 iterations 8
Cbc0038I Pass  39: suminf.    1.10899 (7) obj. -66.1838 iterations 21
Cbc0038I Pass  40: suminf.    0.98725 (8) obj. -66.1838 iterations 1
Cbc0038I Pass  41: suminf.    1.18910 (6) obj. -66.1838 iterations 20
Cbc0038I Pass  42: suminf.    0.72317 (8) obj. -66.1838 iterations 8
Cbc0038I Pass  43: suminf.    1.18910 (6) obj. -66.1838 iterations 13
Cbc0038I Pass  44: suminf.    1.29287 (8) obj. -66.1838 iterations 20
Cbc0038I Pass  45: suminf.    0.97498 (9) obj. -66.1838 iterations 5
Cbc0038I Pass  46: suminf.    1.29586 (7) obj. -66.1838 iterations 27
Cbc0038I Pass  47: suminf.    0.72317 (8) obj. -66.1838 iterations 14
Cbc0038I Pass  48: suminf.    1.18910 (6) obj. -66.1838 iterations 12
Cbc0038I Pass  49: suminf.    1.73282 (13) obj. -66.1838 iterations 20
Cbc0038I Pass  50: suminf.    0.97274 (10) obj. -66.1838 iterations 7
Cbc0038I Pass  51: suminf.    1.24609 (7) obj. -66.1838 iterations 20
Cbc0038I Pass  52: suminf.    0.86561 (7) obj. -66.1838 iterations 9
Cbc0038I Pass  53: suminf.    0.91477 (7) obj. -66.1838 iterations 10
Cbc0038I Pass  54: suminf.    0.89009 (10) obj. -66.1838 iterations 7
Cbc0038I Pass  55: suminf.    1.13186 (9) obj. -66.1838 iterations 17
Cbc0038I Pass  56: suminf.    2.03357 (12) obj. -66.1838 iterations 18
Cbc0038I Pass  57: suminf.    1.73795 (11) obj. -66.1838 iterations 2
Cbc0038I Pass  58: suminf.    0.85940 (10) obj. -67.7624 iterations 1
Cbc0038I Pass  59: suminf.    0.76450 (7) obj. -66.1838 iterations 14
Cbc0038I Pass  60: suminf.    0.62756 (8) obj. -66.1838 iterations 6
Cbc0038I Pass  61: suminf.    0.68318 (7) obj. -66.1838 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 16 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -59.4062 - took 0.06 seconds
Cbc0012I Integer solution of -59.40618 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 2 rows 3 columns
Cbc0031I 47 added rows had average density of 47.340426
Cbc0013I At root node, 47 cuts changed objective from -93.293677 to -66.304307 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1588 row cuts average 11.7 elements, 5 column cuts (5 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 68.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 239 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 320 row cuts average 94.7 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -59.40618 best solution, best possible -66.304307 (0.47 seconds)
Cbc0001I Search completed - best objective -59.40617999999998, took 1967 iterations and 50 nodes (0.82 seconds)
Cbc0032I Strong branching done 600 times (11142 iterations), fathomed 6 nodes and fixed 9 variables
Cbc0035I Maximum depth 23, 91 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.83

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 9.05757e-06 - average 4.89598e-08, 40 fixed columns
Coin0506I Presolve 107 (-78) rows, 61 (-40) columns and 330 (-234) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0398073 - largest nonzero change 0 ( 0%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Coin0511I After Postsolve, objective 86.809975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.20284948 - largest nonzero change 0 ( 0%) - largest zero change 2.9994168e-05
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Clp0000I Optimal - objective value 86.809975
Coin0511I After Postsolve, objective 86.809975, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 86.80997494 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.946%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.43055
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.8026 iterations 54
Cbc0038I Solution found of -10.8026
Cbc0038I Relaxing continuous gives -10.8026
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 73 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.8026 to -59.4062 (0.06 seconds)
Cbc0038I Round again with cutoff of -62.1466
Cbc0038I Pass   2: suminf.    2.29483 (7) obj. -62.1466 iterations 14
Cbc0038I Pass   3: suminf.    1.28315 (4) obj. -62.1466 iterations 10
Cbc0038I Pass   4: suminf.    1.46040 (8) obj. -62.1466 iterations 23
Cbc0038I Pass   5: suminf.    1.37781 (6) obj. -62.1466 iterations 12
Cbc0038I Pass   6: suminf.    1.46454 (4) obj. -62.1466 iterations 8
Cbc0038I Pass   7: suminf.    1.45306 (5) obj. -62.1466 iterations 5
Cbc0038I Pass   8: suminf.    1.69638 (5) obj. -62.1466 iterations 10
Cbc0038I Pass   9: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  10: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  11: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  12: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  13: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  14: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  15: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  16: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  17: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  18: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  19: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  20: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  21: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  22: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  23: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  24: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  25: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  26: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I Pass  27: suminf.    1.18112 (5) obj. -62.1466 iterations 5
Cbc0038I Pass  28: suminf.    1.69638 (5) obj. -62.1466 iterations 11
Cbc0038I Pass  29: suminf.    1.69638 (5) obj. -62.1466 iterations 0
Cbc0038I Pass  30: suminf.    1.80064 (4) obj. -62.1466 iterations 6
Cbc0038I Pass  31: suminf.    1.23764 (5) obj. -62.1466 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 75 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -59.4062 - took 0.09 seconds
Cbc0012I Integer solution of -59.40618 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 73 rows 42 columns
Cbc0031I 23 added rows had average density of 65.956522
Cbc0013I At root node, 23 cuts changed objective from -86.809975 to -79.50795 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8053 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1705 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 97.4 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -59.40618 best solution, best possible -79.50795 (0.84 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 27 rows 17 columns
Cbc0001I Search completed - best objective -59.40617999999998, took 8521 iterations and 80 nodes (1.15 seconds)
Cbc0032I Strong branching done 806 times (16255 iterations), fathomed 17 nodes and fixed 21 variables
Cbc0035I Maximum depth 24, 381 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-73) rows, 147 (-56) columns and 2677 (-2977) elements
Clp1000I sum of infeasibilities 6.03045e-07 - average 4.56852e-09, 88 fixed columns
Coin0506I Presolve 47 (-85) rows, 59 (-88) columns and 207 (-2470) elements
Clp0006I 0  Obj 37.338089 Dual inf 2.4032624 (59)
Clp0029I End of values pass after 59 iterations
Clp0014I Perturbing problem by 0.001% of 3.1744923 - largest nonzero change 3.60244e-05 ( 0.00088996209%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 37.60507
Clp0000I Optimal - objective value 37.60507
Coin0511I After Postsolve, objective 37.60507, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 37.60507 Dual inf 80.503732 (47)
Clp0014I Perturbing problem by 0.001% of 1.3595023 - largest nonzero change 2.8585883e-05 ( 0.0026785753%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 107.64336
Clp0000I Optimal - objective value 107.64336
Clp0000I Optimal - objective value 107.64336
Coin0511I After Postsolve, objective 107.64336, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.6433596 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 147 columns (147 integer (147 of which binary)) and 2685 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.774%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 3.2048
Cbc0038I Pass   1: suminf.    3.00636 (34) obj. -92.4932 iterations 9
Cbc0038I Pass   2: suminf.    0.41853 (9) obj. -59.6724 iterations 34
Cbc0038I Solution found of -51.0909
Cbc0038I Rounding solution of -54.2586 is better than previous of -51.0909

Cbc0038I Before mini branch and bound, 110 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -58.1622
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.00636 (34) obj. -92.4932 iterations 0
Cbc0038I Pass   4: suminf.    1.05572 (18) obj. -68.9631 iterations 25
Cbc0038I Pass   5: suminf.    0.49687 (9) obj. -58.1622 iterations 19
Cbc0038I Pass   6: suminf.    0.45381 (3) obj. -60.5446 iterations 9
Cbc0038I Pass   7: suminf.    0.06667 (1) obj. -60.0063 iterations 2
Cbc0038I Pass   8: suminf.    0.13993 (1) obj. -58.1622 iterations 1
Cbc0038I Pass   9: suminf.    1.47110 (11) obj. -58.1622 iterations 29
Cbc0038I Pass  10: suminf.    0.83747 (11) obj. -58.1622 iterations 11
Cbc0038I Pass  11: suminf.    0.89023 (4) obj. -58.1622 iterations 32
Cbc0038I Pass  12: suminf.    0.26466 (4) obj. -58.1622 iterations 9
Cbc0038I Pass  13: suminf.    0.67297 (3) obj. -58.1622 iterations 5
Cbc0038I Pass  14: suminf.    0.65040 (4) obj. -58.1622 iterations 4
Cbc0038I Pass  15: suminf.    0.65401 (6) obj. -58.1622 iterations 11
Cbc0038I Pass  16: suminf.    0.39687 (5) obj. -58.1622 iterations 7
Cbc0038I Pass  17: suminf.    0.86054 (5) obj. -58.1622 iterations 8
Cbc0038I Pass  18: suminf.    0.64729 (9) obj. -58.1622 iterations 3
Cbc0038I Pass  19: suminf.    0.83398 (6) obj. -58.1622 iterations 11
Cbc0038I Pass  20: suminf.    0.37603 (6) obj. -58.1622 iterations 10
Cbc0038I Pass  21: suminf.    1.96605 (8) obj. -58.1622 iterations 6
Cbc0038I Pass  22: suminf.    0.54732 (5) obj. -58.1622 iterations 6
Cbc0038I Pass  23: suminf.    0.76189 (4) obj. -58.1622 iterations 6
Cbc0038I Pass  24: suminf.    2.20003 (14) obj. -58.1622 iterations 21
Cbc0038I Pass  25: suminf.    0.66691 (11) obj. -58.1622 iterations 13
Cbc0038I Pass  26: suminf.    0.43281 (4) obj. -58.1622 iterations 14
Cbc0038I Pass  27: suminf.    0.37603 (6) obj. -58.1622 iterations 1
Cbc0038I Pass  28: suminf.    1.96605 (8) obj. -58.1622 iterations 6
Cbc0038I Pass  29: suminf.    0.54732 (5) obj. -58.1622 iterations 6
Cbc0038I Pass  30: suminf.    0.76189 (4) obj. -58.1622 iterations 7
Cbc0038I Pass  31: suminf.    1.44081 (10) obj. -58.1622 iterations 24
Cbc0038I Pass  32: suminf.    1.01495 (7) obj. -58.1622 iterations 12
Cbc0038I Rounding solution of -59.4062 is better than previous of -54.2586

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 22 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -66.1838
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.00636 (34) obj. -92.4932 iterations 0
Cbc0038I Pass  33: suminf.    0.88301 (18) obj. -66.1838 iterations 38
Cbc0038I Pass  34: suminf.    0.99622 (4) obj. -66.1838 iterations 25
Cbc0038I Pass  35: suminf.    0.57207 (5) obj. -66.4476 iterations 10
Cbc0038I Pass  36: suminf.    0.91278 (4) obj. -66.1838 iterations 18
Cbc0038I Pass  37: suminf.    1.09800 (10) obj. -66.1838 iterations 16
Cbc0038I Pass  38: suminf.    0.91664 (12) obj. -66.1838 iterations 8
Cbc0038I Pass  39: suminf.    1.10899 (7) obj. -66.1838 iterations 21
Cbc0038I Pass  40: suminf.    0.98725 (8) obj. -66.1838 iterations 1
Cbc0038I Pass  41: suminf.    1.18910 (6) obj. -66.1838 iterations 20
Cbc0038I Pass  42: suminf.    0.72317 (8) obj. -66.1838 iterations 8
Cbc0038I Pass  43: suminf.    1.18910 (6) obj. -66.1838 iterations 13
Cbc0038I Pass  44: suminf.    1.29287 (8) obj. -66.1838 iterations 20
Cbc0038I Pass  45: suminf.    0.97498 (9) obj. -66.1838 iterations 5
Cbc0038I Pass  46: suminf.    1.29586 (7) obj. -66.1838 iterations 27
Cbc0038I Pass  47: suminf.    0.72317 (8) obj. -66.1838 iterations 14
Cbc0038I Pass  48: suminf.    1.18910 (6) obj. -66.1838 iterations 12
Cbc0038I Pass  49: suminf.    1.73282 (13) obj. -66.1838 iterations 20
Cbc0038I Pass  50: suminf.    0.97274 (10) obj. -66.1838 iterations 7
Cbc0038I Pass  51: suminf.    1.24609 (7) obj. -66.1838 iterations 20
Cbc0038I Pass  52: suminf.    0.86561 (7) obj. -66.1838 iterations 9
Cbc0038I Pass  53: suminf.    0.91477 (7) obj. -66.1838 iterations 10
Cbc0038I Pass  54: suminf.    0.89009 (10) obj. -66.1838 iterations 7
Cbc0038I Pass  55: suminf.    1.13186 (9) obj. -66.1838 iterations 17
Cbc0038I Pass  56: suminf.    2.03357 (12) obj. -66.1838 iterations 18
Cbc0038I Pass  57: suminf.    1.73795 (11) obj. -66.1838 iterations 2
Cbc0038I Pass  58: suminf.    0.85940 (10) obj. -67.7624 iterations 1
Cbc0038I Pass  59: suminf.    0.76450 (7) obj. -66.1838 iterations 14
Cbc0038I Pass  60: suminf.    0.62756 (8) obj. -66.1838 iterations 6
Cbc0038I Pass  61: suminf.    0.68318 (7) obj. -66.1838 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 16 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -59.4062 - took 0.06 seconds
Cbc0012I Integer solution of -59.40618 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 2 rows 3 columns
Cbc0031I 47 added rows had average density of 47.340426
Cbc0013I At root node, 47 cuts changed objective from -93.293677 to -66.304307 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1588 row cuts average 11.7 elements, 5 column cuts (5 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 68.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 239 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 320 row cuts average 94.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -59.40618 best solution, best possible -66.304307 (0.43 seconds)
Cbc0001I Search completed - best objective -59.40617999999998, took 1967 iterations and 50 nodes (0.75 seconds)
Cbc0032I Strong branching done 600 times (11142 iterations), fathomed 6 nodes and fixed 9 variables
Cbc0035I Maximum depth 23, 91 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.76

