Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 244 (-249) rows, 123 (-124) columns and 605 (-850) elements
Clp0000I Optimal - objective value 105508.09
Coin0511I After Postsolve, objective 105508.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105508.0914 - 125 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 244 rows, 123 columns (122 integer (122 of which binary)) and 605 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.800%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 37.6741
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15046 iterations 73
Cbc0038I Solution found of -15046
Cbc0038I Relaxing continuous gives -15046
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 223 rows 113 columns - 1 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -24092.2
Cbc0038I Pass   2: suminf.    0.07608 (1) obj. -24092.2 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -24092.2 iterations 1
Cbc0038I Solution found of -24092.2
Cbc0038I Relaxing continuous gives -35605.9
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 223 rows 113 columns - 1 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -49586.3
Cbc0038I Pass   4: suminf.    0.29199 (2) obj. -49586.3 iterations 1
Cbc0038I Pass   5: suminf.    0.44638 (3) obj. -49586.3 iterations 4
Cbc0038I Pass   6: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass   7: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass   8: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass   9: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  10: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  11: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  12: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  13: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  14: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  15: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass  16: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass  17: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  18: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  19: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  20: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  21: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  22: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  23: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  24: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass  25: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass  26: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  27: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  28: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  29: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  30: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  31: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  32: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  33: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 232 rows 117 columns - 5 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -35605.9 - took 0.01 seconds
Cbc0012I Integer solution of -35605.9 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -37140.8 found by DiveCoefficient after 45 iterations and 0 nodes (0.03 seconds)
Cbc0031I 1 added rows had average density of 3
Cbc0013I At root node, 1 cuts changed objective from -105508.09 to -37140.8 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 2.6 elements, 15 column cuts (15 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37140.79999999999, took 45 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 291 (-201) rows, 291 (-199) columns and 10391 (-20954) elements
Clp1000I sum of infeasibilities 0.263141 - average 0.000904264, 16 fixed columns
Coin0506I Presolve 271 (-20) rows, 272 (-19) columns and 9212 (-1179) elements
Clp0029I End of values pass after 272 iterations
Clp0014I Perturbing problem by 0.001% of 11.105783 - largest nonzero change 2.9399233e-05 ( 0.0023462726%) - largest zero change 2.8913164e-05
Clp0000I Optimal - objective value 191661.91
Clp0000I Optimal - objective value 191661.91
Coin0511I After Postsolve, objective 191661.91, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.795021 - largest nonzero change 2.9597463e-05 ( 0.0029597463%) - largest zero change 2.9897736e-05
Clp0000I Optimal - objective value 192786.91
Clp0000I Optimal - objective value 192786.91
Clp0000I Optimal - objective value 192786.91
Coin0511I After Postsolve, objective 192786.91, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 192786.9081 - 0 iterations time 0.182, Presolve 0.00, Idiot 0.17

Starting MIP optimization
Cgl0004I processed model has 291 rows, 291 columns (291 integer (291 of which binary)) and 10391 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.055%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 1.41606
Cbc0038I Pass   1: suminf.    1.41606 (23) obj. -172710 iterations 85
Cbc0038I Solution found of 18474.4
Cbc0038I Before mini branch and bound, 268 integers at bound fixed and 0 continuous
Cbc0038I Full problem 291 rows 291 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -644.003
Cbc0038I Pass   2: suminf.    1.41606 (23) obj. -172710 iterations 0
Cbc0038I Pass   3: suminf.    0.07299 (5) obj. -81922.7 iterations 18
Cbc0038I Pass   4: suminf.    0.43500 (1) obj. -644.003 iterations 6
Cbc0038I Pass   5: suminf.    0.01818 (1) obj. -24676.5 iterations 1
Cbc0038I Pass   6: suminf.    0.54231 (12) obj. -55384.1 iterations 109
Cbc0038I Pass   7: suminf.    0.54231 (12) obj. -55384.1 iterations 12
Cbc0038I Pass   8: suminf.    0.38740 (2) obj. -644.003 iterations 12
Cbc0038I Pass   9: suminf.    0.38740 (2) obj. -644.003 iterations 0
Cbc0038I Pass  10: suminf.    0.45701 (2) obj. -644.003 iterations 1
Cbc0038I Pass  11: suminf.    0.18959 (3) obj. -6356.1 iterations 41
Cbc0038I Pass  12: suminf.    0.18959 (3) obj. -6356.1 iterations 3
Cbc0038I Pass  13: suminf.    0.45246 (2) obj. -644.003 iterations 4
Cbc0038I Pass  14: suminf.    0.45246 (2) obj. -644.003 iterations 0
Cbc0038I Pass  15: suminf.    0.51657 (2) obj. -644.003 iterations 1
Cbc0038I Pass  16: suminf.    0.67545 (5) obj. -644.003 iterations 41
Cbc0038I Pass  17: suminf.    0.22886 (5) obj. -20271.8 iterations 8
Cbc0038I Pass  18: suminf.    0.25213 (3) obj. -644.003 iterations 4
Cbc0038I Pass  19: suminf.    0.23703 (3) obj. -644.003 iterations 1
Cbc0038I Pass  20: suminf.    0.60541 (3) obj. -644.003 iterations 1
Cbc0038I Pass  21: suminf.    0.16331 (3) obj. -18383.3 iterations 1
Cbc0038I Pass  22: suminf.    0.06667 (1) obj. -2337.47 iterations 53
Cbc0038I Pass  23: suminf.    0.06667 (1) obj. -2337.47 iterations 12
Cbc0038I Pass  24: suminf.    0.13600 (1) obj. -644.003 iterations 1
Cbc0038I Pass  25: suminf.    0.54988 (6) obj. -644.003 iterations 45
Cbc0038I Pass  26: suminf.    0.16043 (4) obj. -6833.65 iterations 11
Cbc0038I Pass  27: suminf.    0.41236 (1) obj. -644.003 iterations 6
Cbc0038I Pass  28: suminf.    0.06667 (1) obj. -9087.47 iterations 1
Cbc0038I Pass  29: suminf.    0.61274 (14) obj. -27286.8 iterations 44
Cbc0038I Pass  30: suminf.    0.61274 (14) obj. -27286.8 iterations 6
Cbc0038I Pass  31: suminf.    0.57109 (3) obj. -644.003 iterations 13
Cbc0038I Rounding solution of -35605.9 is better than previous of 18474.4

Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 0 continuous
Cbc0038I Full problem 291 rows 291 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -35605.9 to -37140.8 (0.19 seconds)
Cbc0038I Round again with cutoff of -64254.7
Cbc0038I Pass  31: suminf.    1.41606 (23) obj. -172710 iterations 0
Cbc0038I Pass  32: suminf.    0.06722 (3) obj. -64254.7 iterations 21
Cbc0038I Pass  33: suminf.    0.06722 (3) obj. -64254.7 iterations 0
Cbc0038I Pass  34: suminf.    0.55670 (3) obj. -64254.7 iterations 1
Cbc0038I Pass  35: suminf.    0.55670 (3) obj. -64254.7 iterations 0
Cbc0038I Pass  36: suminf.    0.06722 (3) obj. -64254.7 iterations 1
Cbc0038I Pass  37: suminf.    0.60164 (6) obj. -64254.7 iterations 100
Cbc0038I Pass  38: suminf.    0.60164 (6) obj. -64254.7 iterations 6
Cbc0038I Pass  39: suminf.    0.56750 (4) obj. -64254.7 iterations 3
Cbc0038I Pass  40: suminf.    0.20795 (4) obj. -73036.6 iterations 1
Cbc0038I Pass  41: suminf.    0.62416 (4) obj. -64254.7 iterations 1
Cbc0038I Pass  42: suminf.    0.31575 (7) obj. -64254.7 iterations 40
Cbc0038I Pass  43: suminf.    0.31575 (7) obj. -64254.7 iterations 4
Cbc0038I Pass  44: suminf.    0.51989 (4) obj. -64254.7 iterations 4
Cbc0038I Pass  45: suminf.    0.20795 (4) obj. -70836.6 iterations 1
Cbc0038I Pass  46: suminf.    0.77504 (11) obj. -92089.5 iterations 60
Cbc0038I Pass  47: suminf.    0.77504 (11) obj. -92089.5 iterations 10
Cbc0038I Pass  48: suminf.    0.31696 (4) obj. -64254.7 iterations 8
Cbc0038I Pass  49: suminf.    0.24331 (4) obj. -65808.6 iterations 1
Cbc0038I Pass  50: suminf.    0.51014 (8) obj. -71824.1 iterations 44
Cbc0038I Pass  51: suminf.    0.51014 (8) obj. -71824.1 iterations 5
Cbc0038I Pass  52: suminf.    0.26752 (4) obj. -64254.7 iterations 5
Cbc0038I Pass  53: suminf.    0.20795 (4) obj. -65511.6 iterations 1
Cbc0038I Pass  54: suminf.    0.53721 (8) obj. -93858.9 iterations 60
Cbc0038I Pass  55: suminf.    0.53721 (8) obj. -93858.9 iterations 10
Cbc0038I Pass  56: suminf.    0.29122 (4) obj. -64254.7 iterations 5
Cbc0038I Pass  57: suminf.    0.20795 (4) obj. -66011.6 iterations 1
Cbc0038I Pass  58: suminf.    0.34896 (7) obj. -87217.6 iterations 38
Cbc0038I Pass  59: suminf.    0.34896 (7) obj. -87217.6 iterations 6
Cbc0038I Pass  60: suminf.    0.37890 (4) obj. -64254.7 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 158 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of -37140.8 - took 0.15 seconds
Cbc0012I Integer solution of -37140.8 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0038I Full problem 291 rows 291 columns, reduced to 2 rows 4 columns
Cbc0031I 78 added rows had average density of 3.6666667
Cbc0013I At root node, 935 cuts changed objective from -172710.08 to -37140.8 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 196 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 153 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 121 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 75 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37140.79999999999, took 56 iterations and 0 nodes (0.36 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.37

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 244 (-249) rows, 123 (-124) columns and 605 (-850) elements
Clp0000I Optimal - objective value 105508.09
Coin0511I After Postsolve, objective 105508.09, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105508.0914 - 125 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 244 rows, 123 columns (122 integer (122 of which binary)) and 605 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.800%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 112 integers unsatisfied sum - 37.6741
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15046 iterations 73
Cbc0038I Solution found of -15046
Cbc0038I Relaxing continuous gives -15046
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 223 rows 113 columns - 1 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24092.2
Cbc0038I Pass   2: suminf.    0.07608 (1) obj. -24092.2 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -24092.2 iterations 1
Cbc0038I Solution found of -24092.2
Cbc0038I Relaxing continuous gives -35605.9
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 223 rows 113 columns - 1 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -49586.3
Cbc0038I Pass   4: suminf.    0.29199 (2) obj. -49586.3 iterations 1
Cbc0038I Pass   5: suminf.    0.44638 (3) obj. -49586.3 iterations 4
Cbc0038I Pass   6: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass   7: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass   8: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass   9: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  10: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  11: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  12: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  13: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  14: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  15: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass  16: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass  17: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  18: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  19: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  20: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  21: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  22: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  23: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  24: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I Pass  25: suminf.    0.49313 (2) obj. -49586.3 iterations 3
Cbc0038I Pass  26: suminf.    1.03350 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  27: suminf.    2.29409 (5) obj. -49586.3 iterations 5
Cbc0038I Pass  28: suminf.    1.52273 (7) obj. -49586.3 iterations 5
Cbc0038I Pass  29: suminf.    0.53006 (2) obj. -49586.3 iterations 7
Cbc0038I Pass  30: suminf.    0.53006 (2) obj. -49586.3 iterations 0
Cbc0038I Pass  31: suminf.    0.17745 (1) obj. -49586.3 iterations 3
Cbc0038I Pass  32: suminf.    0.44638 (3) obj. -49586.3 iterations 6
Cbc0038I Pass  33: suminf.    1.31034 (3) obj. -49586.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 123 columns, reduced to 232 rows 117 columns - 5 fixed gives 222, 112 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -35605.9 - took 0.01 seconds
Cbc0012I Integer solution of -35605.9 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -37140.8 found by DiveCoefficient after 45 iterations and 0 nodes (0.04 seconds)
Cbc0031I 1 added rows had average density of 3
Cbc0013I At root node, 1 cuts changed objective from -105508.09 to -37140.8 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 2.6 elements, 15 column cuts (15 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37140.79999999999, took 45 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 291 (-202) rows, 291 (-200) columns and 10391 (-20955) elements
Clp1000I sum of infeasibilities 0.263141 - average 0.000904264, 16 fixed columns
Coin0506I Presolve 271 (-20) rows, 272 (-19) columns and 9212 (-1179) elements
Clp0029I End of values pass after 272 iterations
Clp0014I Perturbing problem by 0.001% of 11.105783 - largest nonzero change 2.9399233e-05 ( 0.0023462726%) - largest zero change 2.8913164e-05
Clp0000I Optimal - objective value 191661.91
Clp0000I Optimal - objective value 191661.91
Coin0511I After Postsolve, objective 191661.91, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.795021 - largest nonzero change 2.9597463e-05 ( 0.0029597463%) - largest zero change 2.9897736e-05
Clp0000I Optimal - objective value 192786.91
Clp0000I Optimal - objective value 192786.91
Clp0000I Optimal - objective value 192786.91
Coin0511I After Postsolve, objective 192786.91, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 192786.9081 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.16

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 291 rows, 291 columns (291 integer (291 of which binary)) and 10391 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.055%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 1.41606
Cbc0038I Pass   1: suminf.    1.41606 (23) obj. -172710 iterations 85
Cbc0038I Solution found of 18474.4
Cbc0038I Before mini branch and bound, 268 integers at bound fixed and 0 continuous
Cbc0038I Full problem 291 rows 291 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -644.003
Cbc0038I Pass   2: suminf.    1.41606 (23) obj. -172710 iterations 0
Cbc0038I Pass   3: suminf.    0.07299 (5) obj. -81922.7 iterations 18
Cbc0038I Pass   4: suminf.    0.43500 (1) obj. -644.003 iterations 6
Cbc0038I Pass   5: suminf.    0.01818 (1) obj. -24676.5 iterations 1
Cbc0038I Pass   6: suminf.    0.54231 (12) obj. -55384.1 iterations 109
Cbc0038I Pass   7: suminf.    0.54231 (12) obj. -55384.1 iterations 12
Cbc0038I Pass   8: suminf.    0.38740 (2) obj. -644.003 iterations 12
Cbc0038I Pass   9: suminf.    0.38740 (2) obj. -644.003 iterations 0
Cbc0038I Pass  10: suminf.    0.45701 (2) obj. -644.003 iterations 1
Cbc0038I Pass  11: suminf.    0.18959 (3) obj. -6356.1 iterations 41
Cbc0038I Pass  12: suminf.    0.18959 (3) obj. -6356.1 iterations 3
Cbc0038I Pass  13: suminf.    0.45246 (2) obj. -644.003 iterations 4
Cbc0038I Pass  14: suminf.    0.45246 (2) obj. -644.003 iterations 0
Cbc0038I Pass  15: suminf.    0.51657 (2) obj. -644.003 iterations 1
Cbc0038I Pass  16: suminf.    0.67545 (5) obj. -644.003 iterations 41
Cbc0038I Pass  17: suminf.    0.22886 (5) obj. -20271.8 iterations 8
Cbc0038I Pass  18: suminf.    0.25213 (3) obj. -644.003 iterations 4
Cbc0038I Pass  19: suminf.    0.23703 (3) obj. -644.003 iterations 1
Cbc0038I Pass  20: suminf.    0.60541 (3) obj. -644.003 iterations 1
Cbc0038I Pass  21: suminf.    0.16331 (3) obj. -18383.3 iterations 1
Cbc0038I Pass  22: suminf.    0.06667 (1) obj. -2337.47 iterations 53
Cbc0038I Pass  23: suminf.    0.06667 (1) obj. -2337.47 iterations 12
Cbc0038I Pass  24: suminf.    0.13600 (1) obj. -644.003 iterations 1
Cbc0038I Pass  25: suminf.    0.54988 (6) obj. -644.003 iterations 45
Cbc0038I Pass  26: suminf.    0.16043 (4) obj. -6833.65 iterations 11
Cbc0038I Pass  27: suminf.    0.41236 (1) obj. -644.003 iterations 6
Cbc0038I Pass  28: suminf.    0.06667 (1) obj. -9087.47 iterations 1
Cbc0038I Pass  29: suminf.    0.61274 (14) obj. -27286.8 iterations 44
Cbc0038I Pass  30: suminf.    0.61274 (14) obj. -27286.8 iterations 6
Cbc0038I Pass  31: suminf.    0.57109 (3) obj. -644.003 iterations 13
Cbc0038I Rounding solution of -35605.9 is better than previous of 18474.4

Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 0 continuous
Cbc0038I Full problem 291 rows 291 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -35605.9 to -37140.8 (0.19 seconds)
Cbc0038I Round again with cutoff of -64254.7
Cbc0038I Pass  31: suminf.    1.41606 (23) obj. -172710 iterations 0
Cbc0038I Pass  32: suminf.    0.06722 (3) obj. -64254.7 iterations 21
Cbc0038I Pass  33: suminf.    0.06722 (3) obj. -64254.7 iterations 0
Cbc0038I Pass  34: suminf.    0.55670 (3) obj. -64254.7 iterations 1
Cbc0038I Pass  35: suminf.    0.55670 (3) obj. -64254.7 iterations 0
Cbc0038I Pass  36: suminf.    0.06722 (3) obj. -64254.7 iterations 1
Cbc0038I Pass  37: suminf.    0.60164 (6) obj. -64254.7 iterations 100
Cbc0038I Pass  38: suminf.    0.60164 (6) obj. -64254.7 iterations 6
Cbc0038I Pass  39: suminf.    0.56750 (4) obj. -64254.7 iterations 3
Cbc0038I Pass  40: suminf.    0.20795 (4) obj. -73036.6 iterations 1
Cbc0038I Pass  41: suminf.    0.62416 (4) obj. -64254.7 iterations 1
Cbc0038I Pass  42: suminf.    0.31575 (7) obj. -64254.7 iterations 40
Cbc0038I Pass  43: suminf.    0.31575 (7) obj. -64254.7 iterations 4
Cbc0038I Pass  44: suminf.    0.51989 (4) obj. -64254.7 iterations 4
Cbc0038I Pass  45: suminf.    0.20795 (4) obj. -70836.6 iterations 1
Cbc0038I Pass  46: suminf.    0.77504 (11) obj. -92089.5 iterations 60
Cbc0038I Pass  47: suminf.    0.77504 (11) obj. -92089.5 iterations 10
Cbc0038I Pass  48: suminf.    0.31696 (4) obj. -64254.7 iterations 8
Cbc0038I Pass  49: suminf.    0.24331 (4) obj. -65808.6 iterations 1
Cbc0038I Pass  50: suminf.    0.51014 (8) obj. -71824.1 iterations 44
Cbc0038I Pass  51: suminf.    0.51014 (8) obj. -71824.1 iterations 5
Cbc0038I Pass  52: suminf.    0.26752 (4) obj. -64254.7 iterations 5
Cbc0038I Pass  53: suminf.    0.20795 (4) obj. -65511.6 iterations 1
Cbc0038I Pass  54: suminf.    0.53721 (8) obj. -93858.9 iterations 60
Cbc0038I Pass  55: suminf.    0.53721 (8) obj. -93858.9 iterations 10
Cbc0038I Pass  56: suminf.    0.29122 (4) obj. -64254.7 iterations 5
Cbc0038I Pass  57: suminf.    0.20795 (4) obj. -66011.6 iterations 1
Cbc0038I Pass  58: suminf.    0.34896 (7) obj. -87217.6 iterations 38
Cbc0038I Pass  59: suminf.    0.34896 (7) obj. -87217.6 iterations 6
Cbc0038I Pass  60: suminf.    0.37890 (4) obj. -64254.7 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 158 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -37140.8 - took 0.14 seconds
Cbc0012I Integer solution of -37140.8 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 291 rows 291 columns, reduced to 2 rows 4 columns
Cbc0031I 78 added rows had average density of 3.6666667
Cbc0013I At root node, 935 cuts changed objective from -172710.08 to -37140.8 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 196 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 153 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 121 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 75 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37140.79999999999, took 56 iterations and 0 nodes (0.34 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.35

