Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 2.48453e-05 - average 4.35883e-07, 4 fixed columns
Coin0506I Presolve 49 (-8) rows, 29 (-4) columns and 148 (-24) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 3.2479454 - largest nonzero change 2.5072329e-05 ( 0.0018070543%) - largest zero change 0
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Coin0511I After Postsolve, objective 85.770903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Coin0511I After Postsolve, objective 85.770903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.77090262 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.03572
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.052 iterations 27
Cbc0038I Solution found of -10.052
Cbc0038I Relaxing continuous gives -10.052
Cbc0038I Rounding solution of -24.4939 is better than previous of -10.052

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -24.4939 to -33.6475 (0.02 seconds)
Cbc0038I Round again with cutoff of -38.8599
Cbc0038I Pass   2: suminf.    1.56557 (9) obj. -38.8599 iterations 11
Cbc0038I Pass   3: suminf.    1.39598 (5) obj. -38.8599 iterations 9
Cbc0038I Pass   4: suminf.    0.82620 (5) obj. -38.8599 iterations 3
Cbc0038I Pass   5: suminf.    0.64337 (4) obj. -38.8599 iterations 6
Cbc0038I Pass   6: suminf.    1.63505 (5) obj. -38.8599 iterations 8
Cbc0038I Pass   7: suminf.    1.37909 (6) obj. -38.8599 iterations 1
Cbc0038I Pass   8: suminf.    0.84970 (5) obj. -38.8599 iterations 3
Cbc0038I Pass   9: suminf.    1.17913 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  10: suminf.    1.64148 (5) obj. -38.8599 iterations 11
Cbc0038I Pass  11: suminf.    0.88334 (3) obj. -38.8599 iterations 4
Cbc0038I Pass  12: suminf.    1.09968 (3) obj. -38.8599 iterations 3
Cbc0038I Pass  13: suminf.    1.06431 (4) obj. -38.8599 iterations 1
Cbc0038I Pass  14: suminf.    1.01180 (5) obj. -38.8599 iterations 6
Cbc0038I Pass  15: suminf.    0.91258 (3) obj. -38.8599 iterations 3
Cbc0038I Pass  16: suminf.    1.33515 (5) obj. -38.8599 iterations 3
Cbc0038I Pass  17: suminf.    1.21846 (6) obj. -38.8599 iterations 1
Cbc0038I Pass  18: suminf.    0.84970 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  19: suminf.    1.17913 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  20: suminf.    1.56270 (5) obj. -38.8599 iterations 7
Cbc0038I Pass  21: suminf.    1.24165 (4) obj. -38.8599 iterations 6
Cbc0038I Pass  22: suminf.    1.06098 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  23: suminf.    1.24774 (3) obj. -38.8599 iterations 6
Cbc0038I Pass  24: suminf.    1.23350 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  25: suminf.    1.21915 (6) obj. -38.8599 iterations 3
Cbc0038I Pass  26: suminf.    0.84970 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  27: suminf.    1.17913 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  28: suminf.    1.86157 (7) obj. -38.8599 iterations 11
Cbc0038I Pass  29: suminf.    1.37487 (6) obj. -38.8599 iterations 6
Cbc0038I Pass  30: suminf.    2.07520 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  31: suminf.    1.47417 (6) obj. -38.8599 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.6475 - took 0.06 seconds
Cbc0012I Integer solution of -33.64749 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 21 columns
Cbc0031I 15 added rows had average density of 23.6
Cbc0013I At root node, 15 cuts changed objective from -85.770903 to -58.523443 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2590 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 857 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.64749, took 3774 iterations and 14 nodes (0.32 seconds)
Cbc0032I Strong branching done 226 times (2806 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 5, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-18) rows, 57 (-9) columns and 503 (-220) elements
Clp1000I sum of infeasibilities 2.17824e-08 - average 4.35648e-10, 4 fixed columns
Coin0506I Presolve 46 (-4) rows, 53 (-4) columns and 461 (-42) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 1.527741 - largest nonzero change 2.8682771e-05 ( 0.0024275985%) - largest zero change 2.9492588e-05
Clp0000I Optimal - objective value 91.290487
Clp0000I Optimal - objective value 91.290487
Coin0511I After Postsolve, objective 91.290487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4621584 - largest nonzero change 1.556799e-05 ( 0.0012247315%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 93.157154
Clp0000I Optimal - objective value 93.157154
Clp0000I Optimal - objective value 93.157154
Coin0511I After Postsolve, objective 93.157154, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.157154 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 57 columns (57 integer (57 of which binary)) and 505 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.865%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 5.94317
Cbc0038I Pass   1: suminf.    1.75850 (14) obj. -69.2777 iterations 14
Cbc0038I Pass   2: suminf.    1.75850 (14) obj. -69.2777 iterations 1
Cbc0038I Solution found of -23.4363
Cbc0038I Rounding solution of -32.7645 is better than previous of -23.4363

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -38.6615
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.75850 (14) obj. -69.2777 iterations 0
Cbc0038I Pass   4: suminf.    1.75850 (14) obj. -69.2777 iterations 1
Cbc0038I Pass   5: suminf.    0.55368 (5) obj. -38.6615 iterations 10
Cbc0038I Pass   6: suminf.    0.19355 (1) obj. -42.7912 iterations 5
Cbc0038I Pass   7: suminf.    0.36562 (1) obj. -38.6615 iterations 1
Cbc0038I Pass   8: suminf.    2.19432 (9) obj. -38.6615 iterations 15
Cbc0038I Pass   9: suminf.    1.09786 (7) obj. -38.6615 iterations 7
Cbc0038I Pass  10: suminf.    1.05292 (7) obj. -39.3805 iterations 1
Cbc0038I Pass  11: suminf.    1.60306 (6) obj. -38.6615 iterations 13
Cbc0038I Pass  12: suminf.    1.01183 (5) obj. -38.6615 iterations 4
Cbc0038I Pass  13: suminf.    1.01183 (5) obj. -38.6615 iterations 0
Cbc0038I Pass  14: suminf.    1.31642 (6) obj. -38.6615 iterations 7
Cbc0038I Pass  15: suminf.    1.26873 (5) obj. -38.6615 iterations 2
Cbc0038I Pass  16: suminf.    1.08301 (5) obj. -38.6615 iterations 9
Cbc0038I Pass  17: suminf.    0.95569 (4) obj. -38.6615 iterations 4
Cbc0038I Pass  18: suminf.    0.68903 (4) obj. -38.6615 iterations 7
Cbc0038I Pass  19: suminf.    0.54073 (2) obj. -38.6615 iterations 4
Cbc0038I Pass  20: suminf.    0.73990 (2) obj. -38.6615 iterations 5
Cbc0038I Pass  21: suminf.    2.09518 (8) obj. -38.6615 iterations 16
Cbc0038I Pass  22: suminf.    1.93223 (8) obj. -42.5723 iterations 1
Cbc0038I Pass  23: suminf.    1.30339 (5) obj. -38.6615 iterations 12
Cbc0038I Pass  24: suminf.    0.41060 (3) obj. -39.9887 iterations 5
Cbc0038I Pass  25: suminf.    0.73832 (3) obj. -38.6615 iterations 6
Cbc0038I Pass  26: suminf.    0.61370 (3) obj. -38.6615 iterations 1
Cbc0038I Pass  27: suminf.    0.73832 (3) obj. -38.6615 iterations 6
Cbc0038I Pass  28: suminf.    1.52311 (7) obj. -38.6615 iterations 20
Cbc0038I Pass  29: suminf.    1.20997 (6) obj. -38.6615 iterations 4
Cbc0038I Pass  30: suminf.    1.06351 (4) obj. -38.6615 iterations 7
Cbc0038I Pass  31: suminf.    1.06351 (4) obj. -38.6615 iterations 0
Cbc0038I Pass  32: suminf.    1.09945 (4) obj. -38.6615 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 57 columns, reduced to 23 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -23.4363 to -33.6475 (0.03 seconds)
Cbc0038I Round again with cutoff of -49.2759
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.75850 (14) obj. -69.2777 iterations 0
Cbc0038I Pass  33: suminf.    1.75850 (14) obj. -69.2777 iterations 1
Cbc0038I Pass  34: suminf.    0.63036 (2) obj. -49.2759 iterations 16
Cbc0038I Pass  35: suminf.    0.63036 (2) obj. -49.2759 iterations 0
Cbc0038I Pass  36: suminf.    0.73405 (2) obj. -49.2759 iterations 4
Cbc0038I Pass  37: suminf.    0.63710 (2) obj. -51.6026 iterations 1
Cbc0038I Pass  38: suminf.    2.72200 (15) obj. -49.2759 iterations 27
Cbc0038I Pass  39: suminf.    2.16420 (11) obj. -53.9528 iterations 4
Cbc0038I Pass  40: suminf.    1.73632 (9) obj. -49.2759 iterations 11
Cbc0038I Pass  41: suminf.    1.27363 (5) obj. -49.2759 iterations 4
Cbc0038I Pass  42: suminf.    0.81425 (4) obj. -49.2759 iterations 9
Cbc0038I Pass  43: suminf.    0.81425 (4) obj. -49.2759 iterations 0
Cbc0038I Pass  44: suminf.    0.66848 (4) obj. -49.2759 iterations 7
Cbc0038I Pass  45: suminf.    0.66848 (4) obj. -49.2759 iterations 0
Cbc0038I Pass  46: suminf.    1.02754 (5) obj. -49.2759 iterations 2
Cbc0038I Pass  47: suminf.    0.66148 (4) obj. -49.2759 iterations 1
Cbc0038I Pass  48: suminf.    1.83392 (7) obj. -49.2759 iterations 13
Cbc0038I Pass  49: suminf.    1.09724 (6) obj. -49.2759 iterations 5
Cbc0038I Pass  50: suminf.    1.27874 (9) obj. -49.2759 iterations 7
Cbc0038I Pass  51: suminf.    1.27874 (9) obj. -49.2759 iterations 1
Cbc0038I Pass  52: suminf.    1.28462 (5) obj. -49.2759 iterations 11
Cbc0038I Pass  53: suminf.    1.25842 (5) obj. -49.2759 iterations 1
Cbc0038I Pass  54: suminf.    1.28462 (5) obj. -49.2759 iterations 5
Cbc0038I Pass  55: suminf.    1.93837 (9) obj. -49.2759 iterations 6
Cbc0038I Pass  56: suminf.    1.81791 (8) obj. -51.4357 iterations 2
Cbc0038I Pass  57: suminf.    1.61179 (9) obj. -49.2759 iterations 3
Cbc0038I Pass  58: suminf.    1.25842 (5) obj. -49.2759 iterations 9
Cbc0038I Pass  59: suminf.    1.25842 (5) obj. -49.2759 iterations 0
Cbc0038I Pass  60: suminf.    1.28462 (5) obj. -49.2759 iterations 5
Cbc0038I Pass  61: suminf.    1.96095 (9) obj. -49.2759 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 57 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.6475 - took 0.04 seconds
Cbc0012I Integer solution of -33.64749 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 50 rows 57 columns, reduced to 8 rows 9 columns
Cbc0031I 27 added rows had average density of 17
Cbc0013I At root node, 27 cuts changed objective from -91.733372 to -38.901799 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2507 row cuts average 2.8 elements, 5 column cuts (5 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 709 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 213 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 264 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 66 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.64749 best solution, best possible -38.901799 (1.60 seconds)
Cbc0001I Search completed - best objective -33.64749, took 2539 iterations and 12 nodes (2.28 seconds)
Cbc0032I Strong branching done 232 times (3259 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.50   (Wallclock seconds):       2.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 2.48453e-05 - average 4.35883e-07, 4 fixed columns
Coin0506I Presolve 49 (-8) rows, 29 (-4) columns and 148 (-24) elements
Clp0029I End of values pass after 29 iterations
Clp0014I Perturbing problem by 0.001% of 3.2479454 - largest nonzero change 2.5072329e-05 ( 0.0018070543%) - largest zero change 0
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Coin0511I After Postsolve, objective 85.770903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Clp0000I Optimal - objective value 85.770903
Coin0511I After Postsolve, objective 85.770903, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.77090262 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.03572
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10.052 iterations 27
Cbc0038I Solution found of -10.052
Cbc0038I Relaxing continuous gives -10.052
Cbc0038I Rounding solution of -24.4939 is better than previous of -10.052

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -24.4939 to -33.6475 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.8599
Cbc0038I Pass   2: suminf.    1.56557 (9) obj. -38.8599 iterations 11
Cbc0038I Pass   3: suminf.    1.39598 (5) obj. -38.8599 iterations 9
Cbc0038I Pass   4: suminf.    0.82620 (5) obj. -38.8599 iterations 3
Cbc0038I Pass   5: suminf.    0.64337 (4) obj. -38.8599 iterations 6
Cbc0038I Pass   6: suminf.    1.63505 (5) obj. -38.8599 iterations 8
Cbc0038I Pass   7: suminf.    1.37909 (6) obj. -38.8599 iterations 1
Cbc0038I Pass   8: suminf.    0.84970 (5) obj. -38.8599 iterations 3
Cbc0038I Pass   9: suminf.    1.17913 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  10: suminf.    1.64148 (5) obj. -38.8599 iterations 11
Cbc0038I Pass  11: suminf.    0.88334 (3) obj. -38.8599 iterations 4
Cbc0038I Pass  12: suminf.    1.09968 (3) obj. -38.8599 iterations 3
Cbc0038I Pass  13: suminf.    1.06431 (4) obj. -38.8599 iterations 1
Cbc0038I Pass  14: suminf.    1.01180 (5) obj. -38.8599 iterations 6
Cbc0038I Pass  15: suminf.    0.91258 (3) obj. -38.8599 iterations 3
Cbc0038I Pass  16: suminf.    1.33515 (5) obj. -38.8599 iterations 3
Cbc0038I Pass  17: suminf.    1.21846 (6) obj. -38.8599 iterations 1
Cbc0038I Pass  18: suminf.    0.84970 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  19: suminf.    1.17913 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  20: suminf.    1.56270 (5) obj. -38.8599 iterations 7
Cbc0038I Pass  21: suminf.    1.24165 (4) obj. -38.8599 iterations 6
Cbc0038I Pass  22: suminf.    1.06098 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  23: suminf.    1.24774 (3) obj. -38.8599 iterations 6
Cbc0038I Pass  24: suminf.    1.23350 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  25: suminf.    1.21915 (6) obj. -38.8599 iterations 3
Cbc0038I Pass  26: suminf.    0.84970 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  27: suminf.    1.17913 (5) obj. -38.8599 iterations 1
Cbc0038I Pass  28: suminf.    1.86157 (7) obj. -38.8599 iterations 11
Cbc0038I Pass  29: suminf.    1.37487 (6) obj. -38.8599 iterations 6
Cbc0038I Pass  30: suminf.    2.07520 (5) obj. -38.8599 iterations 2
Cbc0038I Pass  31: suminf.    1.47417 (6) obj. -38.8599 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -33.6475 - took 0.04 seconds
Cbc0012I Integer solution of -33.64749 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 31 rows 21 columns
Cbc0031I 15 added rows had average density of 23.6
Cbc0013I At root node, 15 cuts changed objective from -85.770903 to -58.523443 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2590 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 857 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -33.64749, took 3774 iterations and 14 nodes (0.31 seconds)
Cbc0032I Strong branching done 226 times (2806 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 5, 51 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-19) rows, 57 (-10) columns and 503 (-221) elements
Clp1000I sum of infeasibilities 2.17824e-08 - average 4.35648e-10, 4 fixed columns
Coin0506I Presolve 46 (-4) rows, 53 (-4) columns and 461 (-42) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 1.527741 - largest nonzero change 2.8682771e-05 ( 0.0024275985%) - largest zero change 2.9492588e-05
Clp0000I Optimal - objective value 91.290487
Clp0000I Optimal - objective value 91.290487
Coin0511I After Postsolve, objective 91.290487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4621584 - largest nonzero change 1.556799e-05 ( 0.0012247315%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 93.157154
Clp0000I Optimal - objective value 93.157154
Clp0000I Optimal - objective value 93.157154
Coin0511I After Postsolve, objective 93.157154, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 93.157154 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 57 columns (57 integer (57 of which binary)) and 505 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.865%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 5.94317
Cbc0038I Pass   1: suminf.    1.75850 (14) obj. -69.2777 iterations 14
Cbc0038I Pass   2: suminf.    1.75850 (14) obj. -69.2777 iterations 1
Cbc0038I Solution found of -23.4363
Cbc0038I Rounding solution of -32.7645 is better than previous of -23.4363

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -38.6615
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.75850 (14) obj. -69.2777 iterations 0
Cbc0038I Pass   4: suminf.    1.75850 (14) obj. -69.2777 iterations 1
Cbc0038I Pass   5: suminf.    0.55368 (5) obj. -38.6615 iterations 10
Cbc0038I Pass   6: suminf.    0.19355 (1) obj. -42.7912 iterations 5
Cbc0038I Pass   7: suminf.    0.36562 (1) obj. -38.6615 iterations 1
Cbc0038I Pass   8: suminf.    2.19432 (9) obj. -38.6615 iterations 15
Cbc0038I Pass   9: suminf.    1.09786 (7) obj. -38.6615 iterations 7
Cbc0038I Pass  10: suminf.    1.05292 (7) obj. -39.3805 iterations 1
Cbc0038I Pass  11: suminf.    1.60306 (6) obj. -38.6615 iterations 13
Cbc0038I Pass  12: suminf.    1.01183 (5) obj. -38.6615 iterations 4
Cbc0038I Pass  13: suminf.    1.01183 (5) obj. -38.6615 iterations 0
Cbc0038I Pass  14: suminf.    1.31642 (6) obj. -38.6615 iterations 7
Cbc0038I Pass  15: suminf.    1.26873 (5) obj. -38.6615 iterations 2
Cbc0038I Pass  16: suminf.    1.08301 (5) obj. -38.6615 iterations 9
Cbc0038I Pass  17: suminf.    0.95569 (4) obj. -38.6615 iterations 4
Cbc0038I Pass  18: suminf.    0.68903 (4) obj. -38.6615 iterations 7
Cbc0038I Pass  19: suminf.    0.54073 (2) obj. -38.6615 iterations 4
Cbc0038I Pass  20: suminf.    0.73990 (2) obj. -38.6615 iterations 5
Cbc0038I Pass  21: suminf.    2.09518 (8) obj. -38.6615 iterations 16
Cbc0038I Pass  22: suminf.    1.93223 (8) obj. -42.5723 iterations 1
Cbc0038I Pass  23: suminf.    1.30339 (5) obj. -38.6615 iterations 12
Cbc0038I Pass  24: suminf.    0.41060 (3) obj. -39.9887 iterations 5
Cbc0038I Pass  25: suminf.    0.73832 (3) obj. -38.6615 iterations 6
Cbc0038I Pass  26: suminf.    0.61370 (3) obj. -38.6615 iterations 1
Cbc0038I Pass  27: suminf.    0.73832 (3) obj. -38.6615 iterations 6
Cbc0038I Pass  28: suminf.    1.52311 (7) obj. -38.6615 iterations 20
Cbc0038I Pass  29: suminf.    1.20997 (6) obj. -38.6615 iterations 4
Cbc0038I Pass  30: suminf.    1.06351 (4) obj. -38.6615 iterations 7
Cbc0038I Pass  31: suminf.    1.06351 (4) obj. -38.6615 iterations 0
Cbc0038I Pass  32: suminf.    1.09945 (4) obj. -38.6615 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 57 columns, reduced to 23 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -23.4363 to -33.6475 (0.03 seconds)
Cbc0038I Round again with cutoff of -49.2759
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.75850 (14) obj. -69.2777 iterations 0
Cbc0038I Pass  33: suminf.    1.75850 (14) obj. -69.2777 iterations 1
Cbc0038I Pass  34: suminf.    0.63036 (2) obj. -49.2759 iterations 16
Cbc0038I Pass  35: suminf.    0.63036 (2) obj. -49.2759 iterations 0
Cbc0038I Pass  36: suminf.    0.73405 (2) obj. -49.2759 iterations 4
Cbc0038I Pass  37: suminf.    0.63710 (2) obj. -51.6026 iterations 1
Cbc0038I Pass  38: suminf.    2.72200 (15) obj. -49.2759 iterations 27
Cbc0038I Pass  39: suminf.    2.16420 (11) obj. -53.9528 iterations 4
Cbc0038I Pass  40: suminf.    1.73632 (9) obj. -49.2759 iterations 11
Cbc0038I Pass  41: suminf.    1.27363 (5) obj. -49.2759 iterations 4
Cbc0038I Pass  42: suminf.    0.81425 (4) obj. -49.2759 iterations 9
Cbc0038I Pass  43: suminf.    0.81425 (4) obj. -49.2759 iterations 0
Cbc0038I Pass  44: suminf.    0.66848 (4) obj. -49.2759 iterations 7
Cbc0038I Pass  45: suminf.    0.66848 (4) obj. -49.2759 iterations 0
Cbc0038I Pass  46: suminf.    1.02754 (5) obj. -49.2759 iterations 2
Cbc0038I Pass  47: suminf.    0.66148 (4) obj. -49.2759 iterations 1
Cbc0038I Pass  48: suminf.    1.83392 (7) obj. -49.2759 iterations 13
Cbc0038I Pass  49: suminf.    1.09724 (6) obj. -49.2759 iterations 5
Cbc0038I Pass  50: suminf.    1.27874 (9) obj. -49.2759 iterations 7
Cbc0038I Pass  51: suminf.    1.27874 (9) obj. -49.2759 iterations 1
Cbc0038I Pass  52: suminf.    1.28462 (5) obj. -49.2759 iterations 11
Cbc0038I Pass  53: suminf.    1.25842 (5) obj. -49.2759 iterations 1
Cbc0038I Pass  54: suminf.    1.28462 (5) obj. -49.2759 iterations 5
Cbc0038I Pass  55: suminf.    1.93837 (9) obj. -49.2759 iterations 6
Cbc0038I Pass  56: suminf.    1.81791 (8) obj. -51.4357 iterations 2
Cbc0038I Pass  57: suminf.    1.61179 (9) obj. -49.2759 iterations 3
Cbc0038I Pass  58: suminf.    1.25842 (5) obj. -49.2759 iterations 9
Cbc0038I Pass  59: suminf.    1.25842 (5) obj. -49.2759 iterations 0
Cbc0038I Pass  60: suminf.    1.28462 (5) obj. -49.2759 iterations 5
Cbc0038I Pass  61: suminf.    1.96095 (9) obj. -49.2759 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 57 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -33.6475 - took 0.04 seconds
Cbc0012I Integer solution of -33.64749 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 50 rows 57 columns, reduced to 8 rows 9 columns
Cbc0031I 27 added rows had average density of 17
Cbc0013I At root node, 27 cuts changed objective from -91.733372 to -38.901799 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2507 row cuts average 2.8 elements, 5 column cuts (5 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 709 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 213 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 264 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 66 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.688 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.64749 best solution, best possible -38.901799 (1.48 seconds)
Cbc0001I Search completed - best objective -33.64749, took 2539 iterations and 12 nodes (2.14 seconds)
Cbc0032I Strong branching done 232 times (3259 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 5, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       2.15

