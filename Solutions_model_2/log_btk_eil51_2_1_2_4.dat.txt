Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 2.02615e-05 - average 2.27657e-07, 3 fixed columns
Coin0506I Presolve 83 (-6) rows, 48 (-3) columns and 254 (-18) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 33.066952
Clp0000I Optimal - objective value 33.066952
Coin0511I After Postsolve, objective 33.066952, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.066952
Clp0000I Optimal - objective value 33.066952
Clp0000I Optimal - objective value 33.066952
Coin0511I After Postsolve, objective 33.066952, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.06695229 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.62544
Cbc0038I Solution found of 8.2659
Cbc0038I Relaxing continuous gives -1.9243
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -5.03866
Cbc0038I Pass   1: suminf.    0.92026 (35) obj. -5.03866 iterations 14
Cbc0038I Pass   2: suminf.    1.41071 (10) obj. -5.03866 iterations 32
Cbc0038I Pass   3: suminf.    0.81100 (6) obj. -5.03866 iterations 4
Cbc0038I Pass   4: suminf.    1.88909 (5) obj. -5.03866 iterations 14
Cbc0038I Pass   5: suminf.    1.88909 (5) obj. -5.03866 iterations 0
Cbc0038I Pass   6: suminf.    2.04406 (8) obj. -5.03866 iterations 4
Cbc0038I Pass   7: suminf.    2.04406 (8) obj. -5.03866 iterations 0
Cbc0038I Pass   8: suminf.    2.92638 (7) obj. -5.03866 iterations 5
Cbc0038I Pass   9: suminf.    2.21804 (7) obj. -5.03866 iterations 2
Cbc0038I Pass  10: suminf.    2.21804 (7) obj. -5.03866 iterations 1
Cbc0038I Pass  11: suminf.    1.97568 (7) obj. -5.03866 iterations 7
Cbc0038I Pass  12: suminf.    1.91272 (8) obj. -5.03866 iterations 4
Cbc0038I Pass  13: suminf.    3.09073 (8) obj. -5.03866 iterations 10
Cbc0038I Pass  14: suminf.    2.28316 (7) obj. -5.03866 iterations 4
Cbc0038I Pass  15: suminf.    2.28316 (7) obj. -5.03866 iterations 0
Cbc0038I Pass  16: suminf.    1.90687 (6) obj. -5.03866 iterations 8
Cbc0038I Pass  17: suminf.    1.91272 (8) obj. -5.03866 iterations 4
Cbc0038I Pass  18: suminf.    3.09073 (8) obj. -5.03866 iterations 10
Cbc0038I Pass  19: suminf.    2.28316 (7) obj. -5.03866 iterations 4
Cbc0038I Pass  20: suminf.    2.28316 (7) obj. -5.03866 iterations 0
Cbc0038I Pass  21: suminf.    1.90687 (6) obj. -5.03866 iterations 8
Cbc0038I Pass  22: suminf.    1.91272 (8) obj. -5.03866 iterations 4
Cbc0038I Pass  23: suminf.    3.09073 (8) obj. -5.03866 iterations 10
Cbc0038I Pass  24: suminf.    2.28316 (7) obj. -5.03866 iterations 4
Cbc0038I Pass  25: suminf.    2.28316 (7) obj. -5.03866 iterations 0
Cbc0038I Pass  26: suminf.    1.90687 (6) obj. -5.03866 iterations 8
Cbc0038I Pass  27: suminf.    1.91272 (8) obj. -5.03866 iterations 4
Cbc0038I Pass  28: suminf.    3.09073 (8) obj. -5.03866 iterations 10
Cbc0038I Pass  29: suminf.    2.28316 (7) obj. -5.03866 iterations 4
Cbc0038I Pass  30: suminf.    2.28316 (7) obj. -5.03866 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -1.9243 - took 0.11 seconds
Cbc0012I Integer solution of -1.9243 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 27 added rows had average density of 35.555556
Cbc0013I At root node, 27 cuts changed objective from -33.066952 to -22.9516 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9361 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1715 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0038I Full problem 89 rows 51 columns, reduced to 26 rows 15 columns
Cbc0010I After 50 nodes, 1 on tree, -1.9243 best solution, best possible -9.8097298 (0.69 seconds)
Cbc0001I Search completed - best objective -1.9243, took 7337 iterations and 62 nodes (0.71 seconds)
Cbc0032I Strong branching done 888 times (12065 iterations), fathomed 8 nodes and fixed 69 variables
Cbc0035I Maximum depth 9, 84 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-31) rows, 84 (-18) columns and 1095 (-483) elements
Clp1000I sum of infeasibilities 8.30074e-08 - average 1.13709e-09, 17 fixed columns
Coin0506I Presolve 58 (-15) rows, 67 (-17) columns and 692 (-403) elements
Clp0006I 0  Obj 31.054734 Dual inf 1.5340128 (67)
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 5.3770191 - largest nonzero change 2.8141027e-05 ( 0.001262127%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 41.603977
Clp0000I Optimal - objective value 41.603977
Coin0511I After Postsolve, objective 41.603977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 41.603977
Clp0000I Optimal - objective value 41.603977
Clp0000I Optimal - objective value 41.603977
Clp0000I Optimal - objective value 41.603977
Coin0511I After Postsolve, objective 41.603977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.6039768 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 84 columns (84 integer (84 of which binary)) and 1103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 5.7876
Cbc0038I Pass   1: suminf.    2.98991 (22) obj. -22.1024 iterations 19
Cbc0038I Pass   2: suminf.    2.98991 (22) obj. -22.1024 iterations 2
Cbc0038I Pass   3: suminf.    0.50659 (6) obj. 4.16561 iterations 16
Cbc0038I Solution found of 14.2244
Cbc0038I Rounding solution of 9.82555 is better than previous of 14.2244

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 84 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 9.82555 to 7.24967 (0.04 seconds)
Cbc0038I Round again with cutoff of 3.46868
Cbc0038I Pass   4: suminf.    2.98991 (22) obj. -22.1024 iterations 0
Cbc0038I Pass   5: suminf.    2.98991 (22) obj. -22.1024 iterations 2
Cbc0038I Pass   6: suminf.    0.56049 (6) obj. 3.46868 iterations 18
Cbc0038I Pass   7: suminf.    0.83863 (3) obj. 3.46868 iterations 11
Cbc0038I Pass   8: suminf.    0.83863 (3) obj. 3.46868 iterations 2
Cbc0038I Pass   9: suminf.    0.89717 (3) obj. 3.46868 iterations 4
Cbc0038I Pass  10: suminf.    0.42694 (3) obj. 3.46868 iterations 1
Cbc0038I Pass  11: suminf.    2.90834 (13) obj. 3.46868 iterations 18
Cbc0038I Pass  12: suminf.    1.79328 (11) obj. 3.46868 iterations 10
Cbc0038I Pass  13: suminf.    1.78022 (11) obj. 3.46868 iterations 1
Cbc0038I Pass  14: suminf.    0.91003 (6) obj. 3.46868 iterations 11
Cbc0038I Pass  15: suminf.    0.91003 (6) obj. 3.46868 iterations 1
Cbc0038I Pass  16: suminf.    0.67260 (5) obj. 3.46868 iterations 6
Cbc0038I Pass  17: suminf.    0.53754 (4) obj. 3.46868 iterations 3
Cbc0038I Pass  18: suminf.    0.78324 (4) obj. 3.46868 iterations 7
Cbc0038I Pass  19: suminf.    0.55970 (3) obj. 2.76631 iterations 2
Cbc0038I Pass  20: suminf.    0.93361 (4) obj. 3.46868 iterations 6
Cbc0038I Pass  21: suminf.    0.93361 (4) obj. 3.46868 iterations 1
Cbc0038I Pass  22: suminf.    1.32421 (6) obj. 3.46868 iterations 5
Cbc0038I Pass  23: suminf.    1.32421 (6) obj. 3.46868 iterations 0
Cbc0038I Pass  24: suminf.    0.37237 (4) obj. 3.46868 iterations 9
Cbc0038I Pass  25: suminf.    0.35647 (3) obj. 3.46868 iterations 2
Cbc0038I Pass  26: suminf.    0.36898 (3) obj. 3.46868 iterations 1
Cbc0038I Pass  27: suminf.    1.58264 (8) obj. 3.46868 iterations 21
Cbc0038I Pass  28: suminf.    1.14330 (7) obj. 3.46868 iterations 4
Cbc0038I Pass  29: suminf.    1.10442 (5) obj. 3.46868 iterations 6
Cbc0038I Pass  30: suminf.    1.04536 (5) obj. 3.46868 iterations 2
Cbc0038I Pass  31: suminf.    1.14005 (4) obj. 3.46868 iterations 4
Cbc0038I Pass  32: suminf.    0.77375 (5) obj. 3.46868 iterations 1
Cbc0038I Pass  33: suminf.    1.14005 (4) obj. 3.46868 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 84 columns, reduced to 20 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 7.24967 to 1.77532 (0.06 seconds)
Cbc0038I Round again with cutoff of -4.69169
Cbc0038I Pass  33: suminf.    2.98991 (22) obj. -22.1024 iterations 0
Cbc0038I Pass  34: suminf.    2.98991 (22) obj. -22.1024 iterations 2
Cbc0038I Pass  35: suminf.    1.23335 (6) obj. -4.69169 iterations 27
Cbc0038I Pass  36: suminf.    0.85878 (6) obj. -4.69169 iterations 6
Cbc0038I Pass  37: suminf.    1.28575 (8) obj. -4.69169 iterations 7
Cbc0038I Pass  38: suminf.    1.28575 (8) obj. -4.69169 iterations 1
Cbc0038I Pass  39: suminf.    0.91218 (6) obj. -4.69169 iterations 9
Cbc0038I Pass  40: suminf.    0.71802 (4) obj. -4.71533 iterations 3
Cbc0038I Pass  41: suminf.    0.96334 (5) obj. -4.69169 iterations 6
Cbc0038I Pass  42: suminf.    2.04847 (11) obj. -4.69169 iterations 24
Cbc0038I Pass  43: suminf.    2.04582 (11) obj. -4.69169 iterations 3
Cbc0038I Pass  44: suminf.    1.40888 (6) obj. -4.69169 iterations 15
Cbc0038I Pass  45: suminf.    1.15214 (6) obj. -4.69169 iterations 2
Cbc0038I Pass  46: suminf.    0.93073 (6) obj. -4.69169 iterations 2
Cbc0038I Pass  47: suminf.    1.15214 (6) obj. -4.69169 iterations 5
Cbc0038I Pass  48: suminf.    1.98738 (11) obj. -5.40145 iterations 22
Cbc0038I Pass  49: suminf.    1.91070 (10) obj. -5.023 iterations 5
Cbc0038I Pass  50: suminf.    0.96334 (6) obj. -4.69169 iterations 16
Cbc0038I Pass  51: suminf.    0.71802 (4) obj. -4.71533 iterations 8
Cbc0038I Pass  52: suminf.    0.96334 (5) obj. -4.69169 iterations 9
Cbc0038I Pass  53: suminf.    2.05015 (9) obj. -4.69169 iterations 22
Cbc0038I Pass  54: suminf.    1.90374 (9) obj. -4.69169 iterations 6
Cbc0038I Pass  55: suminf.    1.20966 (7) obj. -4.69169 iterations 8
Cbc0038I Pass  56: suminf.    1.20966 (7) obj. -4.69169 iterations 2
Cbc0038I Pass  57: suminf.    1.67558 (6) obj. -4.69169 iterations 3
Cbc0038I Pass  58: suminf.    1.67558 (6) obj. -4.69169 iterations 0
Cbc0038I Pass  59: suminf.    1.73099 (6) obj. -4.69169 iterations 1
Cbc0038I Pass  60: suminf.    1.73099 (6) obj. -4.69169 iterations 0
Cbc0038I Pass  61: suminf.    1.67558 (6) obj. -4.69169 iterations 2
Cbc0038I Pass  62: suminf.    1.77672 (12) obj. -4.69169 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 84 columns, reduced to 17 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 1.77532 - took 0.04 seconds
Cbc0012I Integer solution of 1.77532 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 73 rows 84 columns, reduced to 13 rows 17 columns
Cbc0031I 58 added rows had average density of 15.862069
Cbc0013I At root node, 58 cuts changed objective from -30.559325 to -8.0065072 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6852 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 682 row cuts average 78.1 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 51 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 512 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 223 row cuts average 49.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 116 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.77532 best solution, best possible -8.0065072 (1.89 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1.77532 best solution, best possible -8.0065072 (2.62 seconds)
Cbc0012I Integer solution of 0.65416 found by rounding after 3777 iterations and 9 nodes (2.71 seconds)
Cbc0012I Integer solution of 0.38587 found by DiveCoefficient after 3777 iterations and 9 nodes (2.71 seconds)
Cbc0004I Integer solution of 0.23621 found after 3916 iterations and 13 nodes (2.85 seconds)
Cbc0004I Integer solution of 0.14656 found after 3928 iterations and 15 nodes (2.88 seconds)
Cbc0012I Integer solution of -0.90817 found by rounding after 4191 iterations and 24 nodes (3.14 seconds)
Cbc0016I Integer solution of -0.97726 found by strong branching after 4279 iterations and 26 nodes (3.21 seconds)
Cbc0012I Integer solution of -1.42584 found by rounding after 4307 iterations and 27 nodes (3.28 seconds)
Cbc0016I Integer solution of -1.65895 found by strong branching after 4339 iterations and 29 nodes (3.35 seconds)
Cbc0010I After 29 nodes, 8 on tree, -1.65895 best solution, best possible -8.0065072 (3.35 seconds)
Cbc0038I Full problem 73 rows 84 columns, reduced to 13 rows 21 columns
Cbc0012I Integer solution of -1.82941 found by RINS after 4896 iterations and 41 nodes (3.80 seconds)
Cbc0010I After 45 nodes, 5 on tree, -1.82941 best solution, best possible -8.0065072 (4.10 seconds)
Cbc0004I Integer solution of -1.9243 found after 5494 iterations and 52 nodes (4.21 seconds)
Cbc0001I Search completed - best objective -1.9243, took 5494 iterations and 52 nodes (4.21 seconds)
Cbc0032I Strong branching done 768 times (11987 iterations), fathomed 5 nodes and fixed 7 variables
Cbc0035I Maximum depth 13, 133 variables fixed on reduced cost
Total time (CPU seconds):       3.03   (Wallclock seconds):       4.23

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 2.02615e-05 - average 2.27657e-07, 3 fixed columns
Coin0506I Presolve 83 (-6) rows, 48 (-3) columns and 254 (-18) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 33.066952
Clp0000I Optimal - objective value 33.066952
Coin0511I After Postsolve, objective 33.066952, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.066952
Clp0000I Optimal - objective value 33.066952
Clp0000I Optimal - objective value 33.066952
Coin0511I After Postsolve, objective 33.066952, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.06695229 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.62544
Cbc0038I Solution found of 8.2659
Cbc0038I Relaxing continuous gives -1.9243
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -5.03866
Cbc0038I Pass   1: suminf.    0.92026 (35) obj. -5.03866 iterations 14
Cbc0038I Pass   2: suminf.    1.41071 (10) obj. -5.03866 iterations 32
Cbc0038I Pass   3: suminf.    0.81100 (6) obj. -5.03866 iterations 4
Cbc0038I Pass   4: suminf.    1.88909 (5) obj. -5.03866 iterations 14
Cbc0038I Pass   5: suminf.    1.88909 (5) obj. -5.03866 iterations 0
Cbc0038I Pass   6: suminf.    2.04406 (8) obj. -5.03866 iterations 4
Cbc0038I Pass   7: suminf.    2.04406 (8) obj. -5.03866 iterations 0
Cbc0038I Pass   8: suminf.    2.92638 (7) obj. -5.03866 iterations 5
Cbc0038I Pass   9: suminf.    2.21804 (7) obj. -5.03866 iterations 2
Cbc0038I Pass  10: suminf.    2.21804 (7) obj. -5.03866 iterations 1
Cbc0038I Pass  11: suminf.    1.97568 (7) obj. -5.03866 iterations 7
Cbc0038I Pass  12: suminf.    1.91272 (8) obj. -5.03866 iterations 4
Cbc0038I Pass  13: suminf.    3.09073 (8) obj. -5.03866 iterations 10
Cbc0038I Pass  14: suminf.    2.28316 (7) obj. -5.03866 iterations 4
Cbc0038I Pass  15: suminf.    2.28316 (7) obj. -5.03866 iterations 0
Cbc0038I Pass  16: suminf.    1.90687 (6) obj. -5.03866 iterations 8
Cbc0038I Pass  17: suminf.    1.91272 (8) obj. -5.03866 iterations 4
Cbc0038I Pass  18: suminf.    3.09073 (8) obj. -5.03866 iterations 10
Cbc0038I Pass  19: suminf.    2.28316 (7) obj. -5.03866 iterations 4
Cbc0038I Pass  20: suminf.    2.28316 (7) obj. -5.03866 iterations 0
Cbc0038I Pass  21: suminf.    1.90687 (6) obj. -5.03866 iterations 8
Cbc0038I Pass  22: suminf.    1.91272 (8) obj. -5.03866 iterations 4
Cbc0038I Pass  23: suminf.    3.09073 (8) obj. -5.03866 iterations 10
Cbc0038I Pass  24: suminf.    2.28316 (7) obj. -5.03866 iterations 4
Cbc0038I Pass  25: suminf.    2.28316 (7) obj. -5.03866 iterations 0
Cbc0038I Pass  26: suminf.    1.90687 (6) obj. -5.03866 iterations 8
Cbc0038I Pass  27: suminf.    1.91272 (8) obj. -5.03866 iterations 4
Cbc0038I Pass  28: suminf.    3.09073 (8) obj. -5.03866 iterations 10
Cbc0038I Pass  29: suminf.    2.28316 (7) obj. -5.03866 iterations 4
Cbc0038I Pass  30: suminf.    2.28316 (7) obj. -5.03866 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 72 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -1.9243 - took 0.09 seconds
Cbc0012I Integer solution of -1.9243 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 27 added rows had average density of 35.555556
Cbc0013I At root node, 27 cuts changed objective from -33.066952 to -22.9516 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9361 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1715 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 58 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 38 nodes, 7 on tree, -1.9243 best solution, best possible -22.951412 (0.68 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 26 rows 15 columns
Cbc0001I Search completed - best objective -1.9243, took 7337 iterations and 62 nodes (0.72 seconds)
Cbc0032I Strong branching done 888 times (12065 iterations), fathomed 8 nodes and fixed 69 variables
Cbc0035I Maximum depth 9, 84 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-32) rows, 84 (-19) columns and 1095 (-484) elements
Clp1000I sum of infeasibilities 8.30074e-08 - average 1.13709e-09, 17 fixed columns
Coin0506I Presolve 58 (-15) rows, 67 (-17) columns and 692 (-403) elements
Clp0006I 0  Obj 31.054734 Dual inf 1.5340128 (67)
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 5.3770191 - largest nonzero change 2.8141027e-05 ( 0.001262127%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 41.603977
Clp0000I Optimal - objective value 41.603977
Coin0511I After Postsolve, objective 41.603977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 41.603977
Clp0000I Optimal - objective value 41.603977
Clp0000I Optimal - objective value 41.603977
Clp0000I Optimal - objective value 41.603977
Coin0511I After Postsolve, objective 41.603977, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.6039768 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 84 columns (84 integer (84 of which binary)) and 1103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 5.7876
Cbc0038I Pass   1: suminf.    2.98991 (22) obj. -22.1024 iterations 19
Cbc0038I Pass   2: suminf.    2.98991 (22) obj. -22.1024 iterations 2
Cbc0038I Pass   3: suminf.    0.50659 (6) obj. 4.16561 iterations 16
Cbc0038I Solution found of 14.2244
Cbc0038I Rounding solution of 9.82555 is better than previous of 14.2244

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 84 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound improved solution from 9.82555 to 7.24967 (0.03 seconds)
Cbc0038I Round again with cutoff of 3.46868
Cbc0038I Pass   4: suminf.    2.98991 (22) obj. -22.1024 iterations 0
Cbc0038I Pass   5: suminf.    2.98991 (22) obj. -22.1024 iterations 2
Cbc0038I Pass   6: suminf.    0.56049 (6) obj. 3.46868 iterations 18
Cbc0038I Pass   7: suminf.    0.83863 (3) obj. 3.46868 iterations 11
Cbc0038I Pass   8: suminf.    0.83863 (3) obj. 3.46868 iterations 2
Cbc0038I Pass   9: suminf.    0.89717 (3) obj. 3.46868 iterations 4
Cbc0038I Pass  10: suminf.    0.42694 (3) obj. 3.46868 iterations 1
Cbc0038I Pass  11: suminf.    2.90834 (13) obj. 3.46868 iterations 18
Cbc0038I Pass  12: suminf.    1.79328 (11) obj. 3.46868 iterations 10
Cbc0038I Pass  13: suminf.    1.78022 (11) obj. 3.46868 iterations 1
Cbc0038I Pass  14: suminf.    0.91003 (6) obj. 3.46868 iterations 11
Cbc0038I Pass  15: suminf.    0.91003 (6) obj. 3.46868 iterations 1
Cbc0038I Pass  16: suminf.    0.67260 (5) obj. 3.46868 iterations 6
Cbc0038I Pass  17: suminf.    0.53754 (4) obj. 3.46868 iterations 3
Cbc0038I Pass  18: suminf.    0.78324 (4) obj. 3.46868 iterations 7
Cbc0038I Pass  19: suminf.    0.55970 (3) obj. 2.76631 iterations 2
Cbc0038I Pass  20: suminf.    0.93361 (4) obj. 3.46868 iterations 6
Cbc0038I Pass  21: suminf.    0.93361 (4) obj. 3.46868 iterations 1
Cbc0038I Pass  22: suminf.    1.32421 (6) obj. 3.46868 iterations 5
Cbc0038I Pass  23: suminf.    1.32421 (6) obj. 3.46868 iterations 0
Cbc0038I Pass  24: suminf.    0.37237 (4) obj. 3.46868 iterations 9
Cbc0038I Pass  25: suminf.    0.35647 (3) obj. 3.46868 iterations 2
Cbc0038I Pass  26: suminf.    0.36898 (3) obj. 3.46868 iterations 1
Cbc0038I Pass  27: suminf.    1.58264 (8) obj. 3.46868 iterations 21
Cbc0038I Pass  28: suminf.    1.14330 (7) obj. 3.46868 iterations 4
Cbc0038I Pass  29: suminf.    1.10442 (5) obj. 3.46868 iterations 6
Cbc0038I Pass  30: suminf.    1.04536 (5) obj. 3.46868 iterations 2
Cbc0038I Pass  31: suminf.    1.14005 (4) obj. 3.46868 iterations 4
Cbc0038I Pass  32: suminf.    0.77375 (5) obj. 3.46868 iterations 1
Cbc0038I Pass  33: suminf.    1.14005 (4) obj. 3.46868 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 84 columns, reduced to 20 rows 29 columns
Cbc0038I Mini branch and bound improved solution from 7.24967 to 1.77532 (0.05 seconds)
Cbc0038I Round again with cutoff of -4.69169
Cbc0038I Pass  33: suminf.    2.98991 (22) obj. -22.1024 iterations 0
Cbc0038I Pass  34: suminf.    2.98991 (22) obj. -22.1024 iterations 2
Cbc0038I Pass  35: suminf.    1.23335 (6) obj. -4.69169 iterations 27
Cbc0038I Pass  36: suminf.    0.85878 (6) obj. -4.69169 iterations 6
Cbc0038I Pass  37: suminf.    1.28575 (8) obj. -4.69169 iterations 7
Cbc0038I Pass  38: suminf.    1.28575 (8) obj. -4.69169 iterations 1
Cbc0038I Pass  39: suminf.    0.91218 (6) obj. -4.69169 iterations 9
Cbc0038I Pass  40: suminf.    0.71802 (4) obj. -4.71533 iterations 3
Cbc0038I Pass  41: suminf.    0.96334 (5) obj. -4.69169 iterations 6
Cbc0038I Pass  42: suminf.    2.04847 (11) obj. -4.69169 iterations 24
Cbc0038I Pass  43: suminf.    2.04582 (11) obj. -4.69169 iterations 3
Cbc0038I Pass  44: suminf.    1.40888 (6) obj. -4.69169 iterations 15
Cbc0038I Pass  45: suminf.    1.15214 (6) obj. -4.69169 iterations 2
Cbc0038I Pass  46: suminf.    0.93073 (6) obj. -4.69169 iterations 2
Cbc0038I Pass  47: suminf.    1.15214 (6) obj. -4.69169 iterations 5
Cbc0038I Pass  48: suminf.    1.98738 (11) obj. -5.40145 iterations 22
Cbc0038I Pass  49: suminf.    1.91070 (10) obj. -5.023 iterations 5
Cbc0038I Pass  50: suminf.    0.96334 (6) obj. -4.69169 iterations 16
Cbc0038I Pass  51: suminf.    0.71802 (4) obj. -4.71533 iterations 8
Cbc0038I Pass  52: suminf.    0.96334 (5) obj. -4.69169 iterations 9
Cbc0038I Pass  53: suminf.    2.05015 (9) obj. -4.69169 iterations 22
Cbc0038I Pass  54: suminf.    1.90374 (9) obj. -4.69169 iterations 6
Cbc0038I Pass  55: suminf.    1.20966 (7) obj. -4.69169 iterations 8
Cbc0038I Pass  56: suminf.    1.20966 (7) obj. -4.69169 iterations 2
Cbc0038I Pass  57: suminf.    1.67558 (6) obj. -4.69169 iterations 3
Cbc0038I Pass  58: suminf.    1.67558 (6) obj. -4.69169 iterations 0
Cbc0038I Pass  59: suminf.    1.73099 (6) obj. -4.69169 iterations 1
Cbc0038I Pass  60: suminf.    1.73099 (6) obj. -4.69169 iterations 0
Cbc0038I Pass  61: suminf.    1.67558 (6) obj. -4.69169 iterations 2
Cbc0038I Pass  62: suminf.    1.77672 (12) obj. -4.69169 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 84 columns, reduced to 17 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 1.77532 - took 0.04 seconds
Cbc0012I Integer solution of 1.77532 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 73 rows 84 columns, reduced to 13 rows 17 columns
Cbc0031I 58 added rows had average density of 15.862069
Cbc0013I At root node, 58 cuts changed objective from -30.559325 to -8.0065072 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6852 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 682 row cuts average 78.1 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 51 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 512 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 223 row cuts average 49.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 116 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.757 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1.77532 best solution, best possible -8.0065072 (2.00 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1.77532 best solution, best possible -8.0065072 (2.76 seconds)
Cbc0012I Integer solution of 0.65416 found by rounding after 3777 iterations and 9 nodes (2.88 seconds)
Cbc0012I Integer solution of 0.38587 found by DiveCoefficient after 3777 iterations and 9 nodes (2.88 seconds)
Cbc0004I Integer solution of 0.23621 found after 3916 iterations and 13 nodes (3.03 seconds)
Cbc0004I Integer solution of 0.14656 found after 3928 iterations and 15 nodes (3.07 seconds)
Cbc0012I Integer solution of -0.90817 found by rounding after 4191 iterations and 24 nodes (3.34 seconds)
Cbc0016I Integer solution of -0.97726 found by strong branching after 4279 iterations and 26 nodes (3.42 seconds)
Cbc0012I Integer solution of -1.42584 found by rounding after 4307 iterations and 27 nodes (3.50 seconds)
Cbc0010I After 27 nodes, 9 on tree, -1.42584 best solution, best possible -8.0065072 (3.50 seconds)
Cbc0016I Integer solution of -1.65895 found by strong branching after 4339 iterations and 29 nodes (3.56 seconds)
Cbc0038I Full problem 73 rows 84 columns, reduced to 13 rows 21 columns
Cbc0012I Integer solution of -1.82941 found by RINS after 4896 iterations and 41 nodes (4.03 seconds)
Cbc0010I After 44 nodes, 5 on tree, -1.82941 best solution, best possible -8.0065072 (4.20 seconds)
Cbc0004I Integer solution of -1.9243 found after 5494 iterations and 52 nodes (4.43 seconds)
Cbc0001I Search completed - best objective -1.9243, took 5494 iterations and 52 nodes (4.43 seconds)
Cbc0032I Strong branching done 768 times (11987 iterations), fathomed 5 nodes and fixed 7 variables
Cbc0035I Maximum depth 13, 133 variables fixed on reduced cost
Total time (CPU seconds):       3.13   (Wallclock seconds):       4.45

