Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 174 (-31) rows, 93 (-10) columns and 526 (-77) elements
Clp1000I sum of infeasibilities 1.87825e-05 - average 1.07945e-07, 56 fixed columns
Coin0506I Presolve 36 (-138) rows, 29 (-64) columns and 124 (-402) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 1129.2795
Clp0000I Optimal - objective value 1129.2795
Coin0511I After Postsolve, objective 1129.2795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.138418 - largest nonzero change 2.756939e-05 ( 0.0012247315%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 1129.2795
Clp0000I Optimal - objective value 1129.2795
Clp0000I Optimal - objective value 1129.2795
Coin0511I After Postsolve, objective 1129.2795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1129.279451 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 174 rows, 93 columns (92 integer (92 of which binary)) and 526 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.989%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.554
Cbc0038I Pass   1: suminf.    0.44444 (1) obj. -1084.73 iterations 27
Cbc0038I Solution found of -933.84
Cbc0038I Relaxing continuous gives -933.84
Cbc0038I Rounding solution of -936.51 is better than previous of -933.84

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 93 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -936.51 to -1056.39 (0.01 seconds)
Cbc0038I Round again with cutoff of -1063.68
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.44444 (1) obj. -1084.73 iterations 0
Cbc0038I Pass   3: suminf.    0.47804 (1) obj. -1063.68 iterations 1
Cbc0038I Pass   4: suminf.    1.16323 (4) obj. -1063.68 iterations 22
Cbc0038I Pass   5: suminf.    0.81572 (3) obj. -1063.68 iterations 6
Cbc0038I Pass   6: suminf.    0.59967 (8) obj. -1063.68 iterations 18
Cbc0038I Pass   7: suminf.    1.10928 (11) obj. -1063.68 iterations 18
Cbc0038I Pass   8: suminf.    0.44747 (7) obj. -1063.68 iterations 7
Cbc0038I Pass   9: suminf.    1.43167 (7) obj. -1063.68 iterations 12
Cbc0038I Pass  10: suminf.    1.31416 (10) obj. -1063.68 iterations 6
Cbc0038I Pass  11: suminf.    0.45749 (8) obj. -1063.68 iterations 12
Cbc0038I Pass  12: suminf.    3.90192 (14) obj. -1063.68 iterations 16
Cbc0038I Pass  13: suminf.    0.92434 (10) obj. -1063.68 iterations 8
Cbc0038I Pass  14: suminf.    0.92434 (10) obj. -1063.68 iterations 0
Cbc0038I Pass  15: suminf.    1.31416 (10) obj. -1063.68 iterations 15
Cbc0038I Pass  16: suminf.    1.31416 (10) obj. -1063.68 iterations 3
Cbc0038I Pass  17: suminf.    0.45749 (8) obj. -1063.68 iterations 13
Cbc0038I Pass  18: suminf.    0.44747 (7) obj. -1063.68 iterations 2
Cbc0038I Pass  19: suminf.    1.43167 (7) obj. -1063.68 iterations 12
Cbc0038I Pass  20: suminf.    0.64340 (7) obj. -1063.68 iterations 25
Cbc0038I Pass  21: suminf.    0.29453 (4) obj. -1063.68 iterations 16
Cbc0038I Pass  22: suminf.    0.62250 (3) obj. -1063.68 iterations 13
Cbc0038I Pass  23: suminf.    0.30978 (2) obj. -1063.68 iterations 4
Cbc0038I Pass  24: suminf.    0.56264 (3) obj. -1063.68 iterations 12
Cbc0038I Pass  25: suminf.    0.56264 (3) obj. -1063.68 iterations 0
Cbc0038I Pass  26: suminf.    1.81629 (5) obj. -1063.68 iterations 9
Cbc0038I Pass  27: suminf.    1.40843 (12) obj. -1063.68 iterations 16
Cbc0038I Pass  28: suminf.    1.07859 (11) obj. -1063.68 iterations 6
Cbc0038I Pass  29: suminf.    0.45749 (8) obj. -1063.68 iterations 12
Cbc0038I Pass  30: suminf.    0.44747 (7) obj. -1063.68 iterations 3
Cbc0038I Pass  31: suminf.    1.43167 (7) obj. -1063.68 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 93 columns, reduced to 52 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1056.39 to -1071.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -1083.06
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.44444 (1) obj. -1084.73 iterations 0
Cbc0038I Pass  32: suminf.    0.45060 (1) obj. -1083.06 iterations 1
Cbc0038I Pass  33: suminf.    0.52514 (7) obj. -1083.06 iterations 6
Cbc0038I Pass  34: suminf.    2.05184 (10) obj. -1083.06 iterations 12
Cbc0038I Pass  35: suminf.    1.79579 (10) obj. -1083.06 iterations 5
Cbc0038I Pass  36: suminf.    1.24826 (6) obj. -1083.06 iterations 3
Cbc0038I Pass  37: suminf.    0.15400 (1) obj. -1083.06 iterations 15
Cbc0038I Pass  38: suminf.    0.05556 (1) obj. -1086.46 iterations 10
Cbc0038I Pass  39: suminf.    0.06809 (1) obj. -1083.06 iterations 1
Cbc0038I Pass  40: suminf.    0.67038 (5) obj. -1083.06 iterations 7
Cbc0038I Pass  41: suminf.    1.14038 (3) obj. -1083.06 iterations 18
Cbc0038I Pass  42: suminf.    0.50233 (3) obj. -1083.06 iterations 14
Cbc0038I Pass  43: suminf.    0.15400 (1) obj. -1083.06 iterations 11
Cbc0038I Pass  44: suminf.    1.21116 (6) obj. -1083.06 iterations 14
Cbc0038I Pass  45: suminf.    1.16603 (3) obj. -1083.06 iterations 6
Cbc0038I Pass  46: suminf.    0.71485 (2) obj. -1083.06 iterations 12
Cbc0038I Pass  47: suminf.    0.60753 (2) obj. -1083.06 iterations 1
Cbc0038I Pass  48: suminf.    1.85529 (8) obj. -1083.06 iterations 15
Cbc0038I Pass  49: suminf.    0.95242 (4) obj. -1083.06 iterations 8
Cbc0038I Pass  50: suminf.    0.84572 (3) obj. -1083.06 iterations 4
Cbc0038I Pass  51: suminf.    0.88686 (3) obj. -1083.06 iterations 6
Cbc0038I Pass  52: suminf.    1.10416 (6) obj. -1083.06 iterations 8
Cbc0038I Pass  53: suminf.    2.77377 (7) obj. -1083.06 iterations 9
Cbc0038I Pass  54: suminf.    2.16614 (8) obj. -1083.06 iterations 5
Cbc0038I Pass  55: suminf.    0.90877 (8) obj. -1083.06 iterations 19
Cbc0038I Pass  56: suminf.    0.90877 (8) obj. -1083.06 iterations 1
Cbc0038I Pass  57: suminf.    4.26888 (12) obj. -1083.06 iterations 13
Cbc0038I Pass  58: suminf.    1.28350 (8) obj. -1083.06 iterations 7
Cbc0038I Pass  59: suminf.    1.13946 (7) obj. -1083.06 iterations 5
Cbc0038I Pass  60: suminf.    2.34092 (9) obj. -1083.06 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 93 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1071.5 - took 0.05 seconds
Cbc0012I Integer solution of -1071.5035 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 174 rows 93 columns, reduced to 16 rows 14 columns
Cbc0031I 6 added rows had average density of 37.833333
Cbc0013I At root node, 6 cuts changed objective from -1129.2795 to -1112.8598 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 3.2 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 58 row cuts average 44.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 90.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1071.50354, took 271 iterations and 12 nodes (0.12 seconds)
Cbc0032I Strong branching done 106 times (739 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 114 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-66) rows, 148 (-54) columns and 2828 (-2825) elements
Clp1000I sum of infeasibilities 2.29282e-07 - average 1.66146e-09, 121 fixed columns
Coin0506I Presolve 22 (-116) rows, 27 (-121) columns and 94 (-2734) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 1081.3492
Clp0000I Optimal - objective value 1081.3492
Coin0511I After Postsolve, objective 1081.3492, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9304692 - largest nonzero change 1.6525272e-05 ( 0.0012247315%) - largest zero change 2.9985222e-05
Clp0000I Optimal - objective value 1173.7845
Clp0000I Optimal - objective value 1173.7845
Clp0000I Optimal - objective value 1173.7845
Coin0511I After Postsolve, objective 1173.7845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1173.784474 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 148 columns (148 integer (148 of which binary)) and 2830 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.047%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 6.55923
Cbc0038I Pass   1: suminf.    1.15356 (27) obj. -675.136 iterations 27
Cbc0038I Pass   2: suminf.    0.04257 (2) obj. -636.126 iterations 25
Cbc0038I Solution found of -633.19
Cbc0038I Rounding solution of -881.725 is better than previous of -633.19

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 148 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -881.725 to -1004.39 (0.04 seconds)
Cbc0038I Round again with cutoff of -1020.84
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.50191 (29) obj. -1020.84 iterations 1
Cbc0038I Pass   4: suminf.    1.49274 (27) obj. -1022.76 iterations 2
Cbc0038I Pass   5: suminf.    0.69243 (15) obj. -1020.84 iterations 14
Cbc0038I Pass   6: suminf.    0.55522 (7) obj. -1020.84 iterations 11
Cbc0038I Pass   7: suminf.    0.26178 (1) obj. -1020.84 iterations 8
Cbc0038I Pass   8: suminf.    0.26178 (1) obj. -1020.84 iterations 0
Cbc0038I Pass   9: suminf.    0.44444 (2) obj. -1020.84 iterations 3
Cbc0038I Pass  10: suminf.    1.39404 (23) obj. -1072.78 iterations 36
Cbc0038I Pass  11: suminf.    1.11371 (19) obj. -1079.8 iterations 13
Cbc0038I Pass  12: suminf.    0.05785 (1) obj. -1020.84 iterations 25
Cbc0038I Solution found of -1036.55
Cbc0038I Rounding solution of -1068.55 is better than previous of -1036.55

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 148 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -1088.64
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  13: suminf.    1.95079 (28) obj. -1088.64 iterations 1
Cbc0038I Pass  14: suminf.    1.95079 (28) obj. -1088.64 iterations 1
Cbc0038I Pass  15: suminf.    0.91358 (12) obj. -1088.64 iterations 44
Cbc0038I Pass  16: suminf.    0.88609 (14) obj. -1088.64 iterations 3
Cbc0038I Pass  17: suminf.    2.40505 (9) obj. -1088.64 iterations 16
Cbc0038I Pass  18: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I Pass  19: suminf.    1.48146 (7) obj. -1088.64 iterations 4
Cbc0038I Pass  20: suminf.    3.65718 (9) obj. -1088.64 iterations 11
Cbc0038I Pass  21: suminf.    1.74373 (8) obj. -1088.64 iterations 4
Cbc0038I Pass  22: suminf.    0.93795 (10) obj. -1088.64 iterations 6
Cbc0038I Pass  23: suminf.    2.40505 (9) obj. -1088.64 iterations 12
Cbc0038I Pass  24: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I Pass  25: suminf.    1.48146 (7) obj. -1088.64 iterations 4
Cbc0038I Pass  26: suminf.    3.65718 (9) obj. -1088.64 iterations 11
Cbc0038I Pass  27: suminf.    1.74373 (8) obj. -1088.64 iterations 4
Cbc0038I Pass  28: suminf.    0.93795 (10) obj. -1088.64 iterations 6
Cbc0038I Pass  29: suminf.    2.40505 (9) obj. -1088.64 iterations 12
Cbc0038I Pass  30: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I Pass  31: suminf.    1.48146 (7) obj. -1088.64 iterations 4
Cbc0038I Pass  32: suminf.    3.65718 (9) obj. -1088.64 iterations 11
Cbc0038I Pass  33: suminf.    1.74373 (8) obj. -1088.64 iterations 4
Cbc0038I Pass  34: suminf.    0.93795 (10) obj. -1088.64 iterations 6
Cbc0038I Pass  35: suminf.    2.40505 (9) obj. -1088.64 iterations 12
Cbc0038I Pass  36: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I Pass  37: suminf.    1.48146 (7) obj. -1088.64 iterations 5
Cbc0038I Pass  38: suminf.    3.65718 (9) obj. -1088.64 iterations 10
Cbc0038I Pass  39: suminf.    1.74373 (8) obj. -1088.64 iterations 4
Cbc0038I Pass  40: suminf.    0.93795 (10) obj. -1088.64 iterations 6
Cbc0038I Pass  41: suminf.    2.40505 (9) obj. -1088.64 iterations 12
Cbc0038I Pass  42: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 148 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -1036.55 to -1071.5 (0.09 seconds)
Cbc0038I Round again with cutoff of -1112.74
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 4
Cbc0038I Pass  42: suminf.    2.16976 (29) obj. -1112.74 iterations 7
Cbc0038I Pass  43: suminf.    2.16976 (29) obj. -1112.74 iterations 1
Cbc0038I Pass  44: suminf.    1.04625 (24) obj. -1112.74 iterations 40
Cbc0038I Pass  45: suminf.    1.04625 (24) obj. -1112.74 iterations 0
Cbc0038I Pass  46: suminf.    1.95442 (15) obj. -1112.74 iterations 37
Cbc0038I Pass  47: suminf.    1.69806 (15) obj. -1112.74 iterations 2
Cbc0038I Pass  48: suminf.    4.09783 (9) obj. -1112.74 iterations 13
Cbc0038I Pass  49: suminf.    1.98312 (8) obj. -1112.74 iterations 3
Cbc0038I Pass  50: suminf.    1.91143 (7) obj. -1112.74 iterations 3
Cbc0038I Pass  51: suminf.    2.76077 (9) obj. -1112.74 iterations 10
Cbc0038I Pass  52: suminf.    1.87692 (16) obj. -1112.74 iterations 8
Cbc0038I Pass  53: suminf.    3.33984 (12) obj. -1112.74 iterations 14
Cbc0038I Pass  54: suminf.    2.31576 (6) obj. -1112.74 iterations 9
Cbc0038I Pass  55: suminf.    1.68793 (9) obj. -1112.74 iterations 13
Cbc0038I Pass  56: suminf.    1.68793 (9) obj. -1112.74 iterations 5
Cbc0038I Pass  57: suminf.    3.86015 (9) obj. -1112.74 iterations 21
Cbc0038I Pass  58: suminf.    2.46005 (14) obj. -1112.74 iterations 17
Cbc0038I Pass  59: suminf.    2.24079 (13) obj. -1112.74 iterations 5
Cbc0038I Pass  60: suminf.    4.27501 (13) obj. -1112.74 iterations 19
Cbc0038I Pass  61: suminf.    4.27501 (13) obj. -1112.74 iterations 3
Cbc0038I Pass  62: suminf.    3.25467 (19) obj. -1112.74 iterations 12
Cbc0038I Pass  63: suminf.    1.59136 (19) obj. -1112.74 iterations 10
Cbc0038I Pass  64: suminf.    2.95333 (11) obj. -1112.74 iterations 22
Cbc0038I Pass  65: suminf.    1.67274 (7) obj. -1112.74 iterations 7
Cbc0038I Pass  66: suminf.    1.29786 (12) obj. -1112.74 iterations 3
Cbc0038I Pass  67: suminf.    2.79168 (10) obj. -1112.74 iterations 9
Cbc0038I Pass  68: suminf.    1.37578 (13) obj. -1112.74 iterations 7
Cbc0038I Pass  69: suminf.    1.41058 (8) obj. -1112.74 iterations 12
Cbc0038I Pass  70: suminf.    1.41058 (8) obj. -1112.74 iterations 3
Cbc0038I Pass  71: suminf.    1.37578 (13) obj. -1112.74 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 148 columns, reduced to 23 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -1071.5 - took 0.10 seconds
Cbc0012I Integer solution of -1071.5035 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 138 rows 148 columns, reduced to 21 rows 22 columns
Cbc0031I 42 added rows had average density of 13.119048
Cbc0013I At root node, 42 cuts changed objective from -1168.9655 to -1112.5011 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 803 row cuts average 15.5 elements, 36 column cuts (36 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 49.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -1071.5035 best solution, best possible -1112.5011 (0.56 seconds)
Cbc0001I Search completed - best objective -1071.50354, took 1130 iterations and 40 nodes (1.11 seconds)
Cbc0032I Strong branching done 412 times (4358 iterations), fathomed 14 nodes and fixed 2 variables
Cbc0035I Maximum depth 13, 164 variables fixed on reduced cost
Total time (CPU seconds):       0.69   (Wallclock seconds):       1.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 174 (-31) rows, 93 (-10) columns and 526 (-77) elements
Clp1000I sum of infeasibilities 1.87825e-05 - average 1.07945e-07, 56 fixed columns
Coin0506I Presolve 36 (-138) rows, 29 (-64) columns and 124 (-402) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 1129.2795
Clp0000I Optimal - objective value 1129.2795
Coin0511I After Postsolve, objective 1129.2795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.138418 - largest nonzero change 2.756939e-05 ( 0.0012247315%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 1129.2795
Clp0000I Optimal - objective value 1129.2795
Clp0000I Optimal - objective value 1129.2795
Coin0511I After Postsolve, objective 1129.2795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1129.279451 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 174 rows, 93 columns (92 integer (92 of which binary)) and 526 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.989%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 2.554
Cbc0038I Pass   1: suminf.    0.44444 (1) obj. -1084.73 iterations 27
Cbc0038I Solution found of -933.84
Cbc0038I Relaxing continuous gives -933.84
Cbc0038I Rounding solution of -936.51 is better than previous of -933.84

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 93 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -936.51 to -1056.39 (0.02 seconds)
Cbc0038I Round again with cutoff of -1063.68
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.44444 (1) obj. -1084.73 iterations 0
Cbc0038I Pass   3: suminf.    0.47804 (1) obj. -1063.68 iterations 1
Cbc0038I Pass   4: suminf.    1.16323 (4) obj. -1063.68 iterations 22
Cbc0038I Pass   5: suminf.    0.81572 (3) obj. -1063.68 iterations 6
Cbc0038I Pass   6: suminf.    0.59967 (8) obj. -1063.68 iterations 18
Cbc0038I Pass   7: suminf.    1.10928 (11) obj. -1063.68 iterations 18
Cbc0038I Pass   8: suminf.    0.44747 (7) obj. -1063.68 iterations 7
Cbc0038I Pass   9: suminf.    1.43167 (7) obj. -1063.68 iterations 12
Cbc0038I Pass  10: suminf.    1.31416 (10) obj. -1063.68 iterations 6
Cbc0038I Pass  11: suminf.    0.45749 (8) obj. -1063.68 iterations 12
Cbc0038I Pass  12: suminf.    3.90192 (14) obj. -1063.68 iterations 16
Cbc0038I Pass  13: suminf.    0.92434 (10) obj. -1063.68 iterations 8
Cbc0038I Pass  14: suminf.    0.92434 (10) obj. -1063.68 iterations 0
Cbc0038I Pass  15: suminf.    1.31416 (10) obj. -1063.68 iterations 15
Cbc0038I Pass  16: suminf.    1.31416 (10) obj. -1063.68 iterations 3
Cbc0038I Pass  17: suminf.    0.45749 (8) obj. -1063.68 iterations 13
Cbc0038I Pass  18: suminf.    0.44747 (7) obj. -1063.68 iterations 2
Cbc0038I Pass  19: suminf.    1.43167 (7) obj. -1063.68 iterations 12
Cbc0038I Pass  20: suminf.    0.64340 (7) obj. -1063.68 iterations 25
Cbc0038I Pass  21: suminf.    0.29453 (4) obj. -1063.68 iterations 16
Cbc0038I Pass  22: suminf.    0.62250 (3) obj. -1063.68 iterations 13
Cbc0038I Pass  23: suminf.    0.30978 (2) obj. -1063.68 iterations 4
Cbc0038I Pass  24: suminf.    0.56264 (3) obj. -1063.68 iterations 12
Cbc0038I Pass  25: suminf.    0.56264 (3) obj. -1063.68 iterations 0
Cbc0038I Pass  26: suminf.    1.81629 (5) obj. -1063.68 iterations 9
Cbc0038I Pass  27: suminf.    1.40843 (12) obj. -1063.68 iterations 16
Cbc0038I Pass  28: suminf.    1.07859 (11) obj. -1063.68 iterations 6
Cbc0038I Pass  29: suminf.    0.45749 (8) obj. -1063.68 iterations 12
Cbc0038I Pass  30: suminf.    0.44747 (7) obj. -1063.68 iterations 3
Cbc0038I Pass  31: suminf.    1.43167 (7) obj. -1063.68 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 93 columns, reduced to 52 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1056.39 to -1071.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -1083.06
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.44444 (1) obj. -1084.73 iterations 0
Cbc0038I Pass  32: suminf.    0.45060 (1) obj. -1083.06 iterations 1
Cbc0038I Pass  33: suminf.    0.52514 (7) obj. -1083.06 iterations 6
Cbc0038I Pass  34: suminf.    2.05184 (10) obj. -1083.06 iterations 12
Cbc0038I Pass  35: suminf.    1.79579 (10) obj. -1083.06 iterations 5
Cbc0038I Pass  36: suminf.    1.24826 (6) obj. -1083.06 iterations 3
Cbc0038I Pass  37: suminf.    0.15400 (1) obj. -1083.06 iterations 15
Cbc0038I Pass  38: suminf.    0.05556 (1) obj. -1086.46 iterations 10
Cbc0038I Pass  39: suminf.    0.06809 (1) obj. -1083.06 iterations 1
Cbc0038I Pass  40: suminf.    0.67038 (5) obj. -1083.06 iterations 7
Cbc0038I Pass  41: suminf.    1.14038 (3) obj. -1083.06 iterations 18
Cbc0038I Pass  42: suminf.    0.50233 (3) obj. -1083.06 iterations 14
Cbc0038I Pass  43: suminf.    0.15400 (1) obj. -1083.06 iterations 11
Cbc0038I Pass  44: suminf.    1.21116 (6) obj. -1083.06 iterations 14
Cbc0038I Pass  45: suminf.    1.16603 (3) obj. -1083.06 iterations 6
Cbc0038I Pass  46: suminf.    0.71485 (2) obj. -1083.06 iterations 12
Cbc0038I Pass  47: suminf.    0.60753 (2) obj. -1083.06 iterations 1
Cbc0038I Pass  48: suminf.    1.85529 (8) obj. -1083.06 iterations 15
Cbc0038I Pass  49: suminf.    0.95242 (4) obj. -1083.06 iterations 8
Cbc0038I Pass  50: suminf.    0.84572 (3) obj. -1083.06 iterations 4
Cbc0038I Pass  51: suminf.    0.88686 (3) obj. -1083.06 iterations 6
Cbc0038I Pass  52: suminf.    1.10416 (6) obj. -1083.06 iterations 8
Cbc0038I Pass  53: suminf.    2.77377 (7) obj. -1083.06 iterations 9
Cbc0038I Pass  54: suminf.    2.16614 (8) obj. -1083.06 iterations 5
Cbc0038I Pass  55: suminf.    0.90877 (8) obj. -1083.06 iterations 19
Cbc0038I Pass  56: suminf.    0.90877 (8) obj. -1083.06 iterations 1
Cbc0038I Pass  57: suminf.    4.26888 (12) obj. -1083.06 iterations 13
Cbc0038I Pass  58: suminf.    1.28350 (8) obj. -1083.06 iterations 7
Cbc0038I Pass  59: suminf.    1.13946 (7) obj. -1083.06 iterations 5
Cbc0038I Pass  60: suminf.    2.34092 (9) obj. -1083.06 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 174 rows 93 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1071.5 - took 0.05 seconds
Cbc0012I Integer solution of -1071.5035 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 174 rows 93 columns, reduced to 16 rows 14 columns
Cbc0031I 6 added rows had average density of 37.833333
Cbc0013I At root node, 6 cuts changed objective from -1129.2795 to -1112.8598 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 3.2 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 58 row cuts average 44.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 90.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1071.50354, took 271 iterations and 12 nodes (0.12 seconds)
Cbc0032I Strong branching done 106 times (739 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 114 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-67) rows, 148 (-55) columns and 2828 (-2826) elements
Clp1000I sum of infeasibilities 2.29282e-07 - average 1.66146e-09, 121 fixed columns
Coin0506I Presolve 22 (-116) rows, 27 (-121) columns and 94 (-2734) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 1081.3492
Clp0000I Optimal - objective value 1081.3492
Coin0511I After Postsolve, objective 1081.3492, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9304692 - largest nonzero change 1.6525272e-05 ( 0.0012247315%) - largest zero change 2.9985222e-05
Clp0000I Optimal - objective value 1173.7845
Clp0000I Optimal - objective value 1173.7845
Clp0000I Optimal - objective value 1173.7845
Coin0511I After Postsolve, objective 1173.7845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1173.784474 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 148 columns (148 integer (148 of which binary)) and 2830 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.047%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 6.55923
Cbc0038I Pass   1: suminf.    1.15356 (27) obj. -675.136 iterations 27
Cbc0038I Pass   2: suminf.    0.04257 (2) obj. -636.126 iterations 25
Cbc0038I Solution found of -633.19
Cbc0038I Rounding solution of -881.725 is better than previous of -633.19

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 148 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -881.725 to -1004.39 (0.04 seconds)
Cbc0038I Round again with cutoff of -1020.84
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.50191 (29) obj. -1020.84 iterations 1
Cbc0038I Pass   4: suminf.    1.49274 (27) obj. -1022.76 iterations 2
Cbc0038I Pass   5: suminf.    0.69243 (15) obj. -1020.84 iterations 14
Cbc0038I Pass   6: suminf.    0.55522 (7) obj. -1020.84 iterations 11
Cbc0038I Pass   7: suminf.    0.26178 (1) obj. -1020.84 iterations 8
Cbc0038I Pass   8: suminf.    0.26178 (1) obj. -1020.84 iterations 0
Cbc0038I Pass   9: suminf.    0.44444 (2) obj. -1020.84 iterations 3
Cbc0038I Pass  10: suminf.    1.39404 (23) obj. -1072.78 iterations 36
Cbc0038I Pass  11: suminf.    1.11371 (19) obj. -1079.8 iterations 13
Cbc0038I Pass  12: suminf.    0.05785 (1) obj. -1020.84 iterations 25
Cbc0038I Solution found of -1036.55
Cbc0038I Rounding solution of -1068.55 is better than previous of -1036.55

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 148 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -1088.64
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  13: suminf.    1.95079 (28) obj. -1088.64 iterations 1
Cbc0038I Pass  14: suminf.    1.95079 (28) obj. -1088.64 iterations 1
Cbc0038I Pass  15: suminf.    0.91358 (12) obj. -1088.64 iterations 44
Cbc0038I Pass  16: suminf.    0.88609 (14) obj. -1088.64 iterations 3
Cbc0038I Pass  17: suminf.    2.40505 (9) obj. -1088.64 iterations 16
Cbc0038I Pass  18: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I Pass  19: suminf.    1.48146 (7) obj. -1088.64 iterations 4
Cbc0038I Pass  20: suminf.    3.65718 (9) obj. -1088.64 iterations 11
Cbc0038I Pass  21: suminf.    1.74373 (8) obj. -1088.64 iterations 4
Cbc0038I Pass  22: suminf.    0.93795 (10) obj. -1088.64 iterations 6
Cbc0038I Pass  23: suminf.    2.40505 (9) obj. -1088.64 iterations 12
Cbc0038I Pass  24: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I Pass  25: suminf.    1.48146 (7) obj. -1088.64 iterations 4
Cbc0038I Pass  26: suminf.    3.65718 (9) obj. -1088.64 iterations 11
Cbc0038I Pass  27: suminf.    1.74373 (8) obj. -1088.64 iterations 4
Cbc0038I Pass  28: suminf.    0.93795 (10) obj. -1088.64 iterations 6
Cbc0038I Pass  29: suminf.    2.40505 (9) obj. -1088.64 iterations 12
Cbc0038I Pass  30: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I Pass  31: suminf.    1.48146 (7) obj. -1088.64 iterations 4
Cbc0038I Pass  32: suminf.    3.65718 (9) obj. -1088.64 iterations 11
Cbc0038I Pass  33: suminf.    1.74373 (8) obj. -1088.64 iterations 4
Cbc0038I Pass  34: suminf.    0.93795 (10) obj. -1088.64 iterations 6
Cbc0038I Pass  35: suminf.    2.40505 (9) obj. -1088.64 iterations 12
Cbc0038I Pass  36: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I Pass  37: suminf.    1.48146 (7) obj. -1088.64 iterations 5
Cbc0038I Pass  38: suminf.    3.65718 (9) obj. -1088.64 iterations 10
Cbc0038I Pass  39: suminf.    1.74373 (8) obj. -1088.64 iterations 4
Cbc0038I Pass  40: suminf.    0.93795 (10) obj. -1088.64 iterations 6
Cbc0038I Pass  41: suminf.    2.40505 (9) obj. -1088.64 iterations 12
Cbc0038I Pass  42: suminf.    1.58982 (8) obj. -1088.64 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 148 columns, reduced to 23 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -1036.55 to -1071.5 (0.09 seconds)
Cbc0038I Round again with cutoff of -1112.74
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 4
Cbc0038I Pass  42: suminf.    2.16976 (29) obj. -1112.74 iterations 7
Cbc0038I Pass  43: suminf.    2.16976 (29) obj. -1112.74 iterations 1
Cbc0038I Pass  44: suminf.    1.04625 (24) obj. -1112.74 iterations 40
Cbc0038I Pass  45: suminf.    1.04625 (24) obj. -1112.74 iterations 0
Cbc0038I Pass  46: suminf.    1.95442 (15) obj. -1112.74 iterations 37
Cbc0038I Pass  47: suminf.    1.69806 (15) obj. -1112.74 iterations 2
Cbc0038I Pass  48: suminf.    4.09783 (9) obj. -1112.74 iterations 13
Cbc0038I Pass  49: suminf.    1.98312 (8) obj. -1112.74 iterations 3
Cbc0038I Pass  50: suminf.    1.91143 (7) obj. -1112.74 iterations 3
Cbc0038I Pass  51: suminf.    2.76077 (9) obj. -1112.74 iterations 10
Cbc0038I Pass  52: suminf.    1.87692 (16) obj. -1112.74 iterations 8
Cbc0038I Pass  53: suminf.    3.33984 (12) obj. -1112.74 iterations 14
Cbc0038I Pass  54: suminf.    2.31576 (6) obj. -1112.74 iterations 9
Cbc0038I Pass  55: suminf.    1.68793 (9) obj. -1112.74 iterations 13
Cbc0038I Pass  56: suminf.    1.68793 (9) obj. -1112.74 iterations 5
Cbc0038I Pass  57: suminf.    3.86015 (9) obj. -1112.74 iterations 21
Cbc0038I Pass  58: suminf.    2.46005 (14) obj. -1112.74 iterations 17
Cbc0038I Pass  59: suminf.    2.24079 (13) obj. -1112.74 iterations 5
Cbc0038I Pass  60: suminf.    4.27501 (13) obj. -1112.74 iterations 19
Cbc0038I Pass  61: suminf.    4.27501 (13) obj. -1112.74 iterations 3
Cbc0038I Pass  62: suminf.    3.25467 (19) obj. -1112.74 iterations 12
Cbc0038I Pass  63: suminf.    1.59136 (19) obj. -1112.74 iterations 10
Cbc0038I Pass  64: suminf.    2.95333 (11) obj. -1112.74 iterations 22
Cbc0038I Pass  65: suminf.    1.67274 (7) obj. -1112.74 iterations 7
Cbc0038I Pass  66: suminf.    1.29786 (12) obj. -1112.74 iterations 3
Cbc0038I Pass  67: suminf.    2.79168 (10) obj. -1112.74 iterations 9
Cbc0038I Pass  68: suminf.    1.37578 (13) obj. -1112.74 iterations 7
Cbc0038I Pass  69: suminf.    1.41058 (8) obj. -1112.74 iterations 12
Cbc0038I Pass  70: suminf.    1.41058 (8) obj. -1112.74 iterations 3
Cbc0038I Pass  71: suminf.    1.37578 (13) obj. -1112.74 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 148 columns, reduced to 23 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -1071.5 - took 0.11 seconds
Cbc0012I Integer solution of -1071.5035 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 138 rows 148 columns, reduced to 21 rows 22 columns
Cbc0031I 42 added rows had average density of 13.119048
Cbc0013I At root node, 42 cuts changed objective from -1168.9655 to -1112.5011 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 803 row cuts average 15.5 elements, 36 column cuts (36 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 49.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 38.6 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -1071.5035 best solution, best possible -1112.5011 (0.51 seconds)
Cbc0001I Search completed - best objective -1071.50354, took 1130 iterations and 40 nodes (1.15 seconds)
Cbc0032I Strong branching done 412 times (4358 iterations), fathomed 14 nodes and fixed 2 variables
Cbc0035I Maximum depth 13, 164 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       1.16

