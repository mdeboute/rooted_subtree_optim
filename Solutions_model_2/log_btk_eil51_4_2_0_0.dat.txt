Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-11) rows, 51 (-2) columns and 282 (-21) elements
Clp1000I sum of infeasibilities 4.04338e-05 - average 4.30146e-07, 1 fixed columns
Coin0506I Presolve 92 (-2) rows, 50 (-1) columns and 276 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Coin0511I After Postsolve, objective 50.892504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Coin0511I After Postsolve, objective 50.892504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.89250397 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 94 rows, 51 columns (50 integer (50 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.06213
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.89327 iterations 40
Cbc0038I Solution found of -0.89327
Cbc0038I Relaxing continuous gives -0.89327
Cbc0038I Rounding solution of -5.4862 is better than previous of -0.89327

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 64 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -5.4862 to -22.5888 (0.06 seconds)
Cbc0038I Round again with cutoff of -25.4193
Cbc0038I Pass   2: suminf.    2.65626 (9) obj. -25.4193 iterations 8
Cbc0038I Pass   3: suminf.    1.29022 (4) obj. -25.4193 iterations 8
Cbc0038I Pass   4: suminf.    1.29022 (4) obj. -25.4193 iterations 0
Cbc0038I Pass   5: suminf.    1.14382 (4) obj. -25.4193 iterations 4
Cbc0038I Pass   6: suminf.    1.97028 (6) obj. -25.4193 iterations 7
Cbc0038I Pass   7: suminf.    1.86909 (5) obj. -25.4193 iterations 2
Cbc0038I Pass   8: suminf.    1.43404 (5) obj. -25.4193 iterations 2
Cbc0038I Pass   9: suminf.    2.13312 (9) obj. -25.4193 iterations 14
Cbc0038I Pass  10: suminf.    1.60144 (6) obj. -25.4193 iterations 3
Cbc0038I Pass  11: suminf.    1.68981 (6) obj. -25.4193 iterations 12
Cbc0038I Pass  12: suminf.    1.68981 (6) obj. -25.4193 iterations 0
Cbc0038I Pass  13: suminf.    1.86909 (5) obj. -25.4193 iterations 3
Cbc0038I Pass  14: suminf.    1.43404 (5) obj. -25.4193 iterations 2
Cbc0038I Pass  15: suminf.    1.88341 (8) obj. -25.4193 iterations 18
Cbc0038I Pass  16: suminf.    1.03411 (4) obj. -25.4193 iterations 5
Cbc0038I Pass  17: suminf.    0.97331 (4) obj. -25.4193 iterations 1
Cbc0038I Pass  18: suminf.    1.01830 (3) obj. -25.4193 iterations 5
Cbc0038I Pass  19: suminf.    0.87700 (4) obj. -25.4193 iterations 2
Cbc0038I Pass  20: suminf.    0.84180 (3) obj. -25.4193 iterations 2
Cbc0038I Pass  21: suminf.    0.91513 (4) obj. -25.4193 iterations 4
Cbc0038I Pass  22: suminf.    0.91513 (4) obj. -25.4193 iterations 0
Cbc0038I Pass  23: suminf.    1.19532 (3) obj. -25.4193 iterations 2
Cbc0038I Pass  24: suminf.    1.03311 (4) obj. -25.4193 iterations 2
Cbc0038I Pass  25: suminf.    1.02252 (3) obj. -25.4193 iterations 1
Cbc0038I Pass  26: suminf.    3.35250 (9) obj. -25.4193 iterations 10
Cbc0038I Pass  27: suminf.    1.46345 (5) obj. -25.4193 iterations 15
Cbc0038I Pass  28: suminf.    1.27641 (3) obj. -25.4193 iterations 4
Cbc0038I Pass  29: suminf.    1.02387 (3) obj. -25.4193 iterations 1
Cbc0038I Pass  30: suminf.    1.33839 (4) obj. -25.4193 iterations 3
Cbc0038I Pass  31: suminf.    1.25537 (3) obj. -25.4193 iterations 1
Cbc0038I Rounding solution of -23.5813 is better than previous of -22.5888

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 76 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -23.5813 to -24.3088 (0.09 seconds)
Cbc0038I Round again with cutoff of -30.5139
Cbc0038I Pass  31: suminf.    3.11003 (12) obj. -30.5139 iterations 4
Cbc0038I Pass  32: suminf.    3.11003 (12) obj. -30.5139 iterations 0
Cbc0038I Pass  33: suminf.    2.12172 (6) obj. -30.5139 iterations 16
Cbc0038I Pass  34: suminf.    1.62384 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  35: suminf.    2.02462 (7) obj. -30.5139 iterations 6
Cbc0038I Pass  36: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  37: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  38: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  39: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  40: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  41: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  42: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  43: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  44: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  45: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  46: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  47: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  48: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  49: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  50: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  51: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  52: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  53: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  54: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  55: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  56: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  57: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  58: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  59: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  60: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 67 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -24.3088 - took 0.11 seconds
Cbc0012I Integer solution of -24.308791 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 67 rows 38 columns
Cbc0031I 20 added rows had average density of 36.6
Cbc0013I At root node, 20 cuts changed objective from -50.892504 to -40.305836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8193 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1697 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 41.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 6 nodes, 7 on tree, -24.308791 best solution, best possible -40.305836 (0.68 seconds)
Cbc0001I Search completed - best objective -24.308791, took 6664 iterations and 38 nodes (0.74 seconds)
Cbc0032I Strong branching done 526 times (10135 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 16, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 79 (-25) rows, 85 (-17) columns and 1101 (-477) elements
Clp1000I sum of infeasibilities 7.95701e-08 - average 1.00722e-09, 11 fixed columns
Coin0506I Presolve 67 (-12) rows, 73 (-12) columns and 821 (-280) elements
Clp0006I 0  Obj 52.029162 Dual inf 2.5313934 (73)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 4.8863788 - largest nonzero change 1.8111348e-05 ( 0.00089819337%) - largest zero change 2.827485e-05
Clp0000I Optimal - objective value 65.106828
Clp0000I Optimal - objective value 65.106828
Coin0511I After Postsolve, objective 65.106828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.106828
Clp0000I Optimal - objective value 65.106828
Clp0000I Optimal - objective value 65.106828
Clp0000I Optimal - objective value 65.106828
Coin0511I After Postsolve, objective 65.106828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.10682805 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 85 columns (85 integer (85 of which binary)) and 1103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.956%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.88687
Cbc0038I Pass   1: suminf.    1.92869 (19) obj. -49.2091 iterations 16
Cbc0038I Pass   2: suminf.    1.92869 (19) obj. -49.2091 iterations 1
Cbc0038I Solution found of -7.81537
Cbc0038I Rounding solution of -11.6051 is better than previous of -7.81537

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 85 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -16.2193
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.92869 (19) obj. -49.2091 iterations 0
Cbc0038I Pass   4: suminf.    1.92869 (19) obj. -49.2091 iterations 1
Cbc0038I Pass   5: suminf.    0.66270 (4) obj. -16.2193 iterations 19
Cbc0038I Pass   6: suminf.    0.95986 (3) obj. -16.2193 iterations 7
Cbc0038I Pass   7: suminf.    0.91282 (3) obj. -16.2193 iterations 4
Cbc0038I Pass   8: suminf.    0.44348 (2) obj. -16.3021 iterations 4
Cbc0038I Pass   9: suminf.    1.01045 (9) obj. -16.2193 iterations 7
Cbc0038I Pass  10: suminf.    1.30019 (5) obj. -16.2193 iterations 10
Cbc0038I Pass  11: suminf.    0.98658 (8) obj. -16.2193 iterations 5
Cbc0038I Pass  12: suminf.    0.92043 (8) obj. -16.2193 iterations 2
Cbc0038I Pass  13: suminf.    0.94551 (5) obj. -16.2193 iterations 8
Cbc0038I Pass  14: suminf.    0.75682 (4) obj. -16.3581 iterations 5
Cbc0038I Pass  15: suminf.    0.79153 (4) obj. -16.2193 iterations 4
Cbc0038I Pass  16: suminf.    3.13715 (12) obj. -16.2193 iterations 16
Cbc0038I Pass  17: suminf.    1.46406 (8) obj. -16.2193 iterations 11
Cbc0038I Pass  18: suminf.    1.46406 (8) obj. -16.2193 iterations 0
Cbc0038I Pass  19: suminf.    1.14752 (5) obj. -16.2193 iterations 12
Cbc0038I Pass  20: suminf.    1.14752 (5) obj. -16.2193 iterations 1
Cbc0038I Pass  21: suminf.    1.20377 (5) obj. -16.2193 iterations 6
Cbc0038I Pass  22: suminf.    1.20377 (5) obj. -16.2193 iterations 2
Cbc0038I Pass  23: suminf.    1.14752 (5) obj. -16.2193 iterations 3
Cbc0038I Pass  24: suminf.    1.93063 (10) obj. -16.2193 iterations 20
Cbc0038I Pass  25: suminf.    1.42262 (10) obj. -16.2193 iterations 5
Cbc0038I Pass  26: suminf.    1.37784 (8) obj. -16.2193 iterations 11
Cbc0038I Pass  27: suminf.    1.30926 (8) obj. -16.2193 iterations 3
Cbc0038I Pass  28: suminf.    1.38055 (8) obj. -16.2193 iterations 4
Cbc0038I Pass  29: suminf.    1.31428 (8) obj. -16.2193 iterations 3
Cbc0038I Pass  30: suminf.    1.37784 (8) obj. -16.2193 iterations 6
Cbc0038I Pass  31: suminf.    2.09034 (12) obj. -16.2193 iterations 19
Cbc0038I Pass  32: suminf.    1.48009 (11) obj. -16.2193 iterations 4
Cbc0038I Rounding solution of -15.1044 is better than previous of -11.6051

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 85 columns, reduced to 37 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -15.1044 to -16.7306 (0.06 seconds)
Cbc0038I Round again with cutoff of -24.9338
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.92869 (19) obj. -49.2091 iterations 0
Cbc0038I Pass  33: suminf.    1.92869 (19) obj. -49.2091 iterations 1
Cbc0038I Pass  34: suminf.    1.59927 (11) obj. -24.9338 iterations 27
Cbc0038I Pass  35: suminf.    1.38462 (5) obj. -24.9338 iterations 1
Cbc0038I Pass  36: suminf.    0.72018 (5) obj. -24.9338 iterations 2
Cbc0038I Pass  37: suminf.    1.06960 (5) obj. -24.9338 iterations 3
Cbc0038I Pass  38: suminf.    0.98222 (5) obj. -24.9338 iterations 2
Cbc0038I Pass  39: suminf.    1.24262 (5) obj. -24.9338 iterations 3
Cbc0038I Pass  40: suminf.    1.24792 (8) obj. -24.9338 iterations 19
Cbc0038I Pass  41: suminf.    0.89774 (12) obj. -24.9338 iterations 8
Cbc0038I Pass  42: suminf.    1.42501 (8) obj. -24.9338 iterations 15
Cbc0038I Pass  43: suminf.    0.75725 (12) obj. -24.9338 iterations 4
Cbc0038I Pass  44: suminf.    1.28694 (8) obj. -24.9338 iterations 11
Cbc0038I Pass  45: suminf.    0.82086 (7) obj. -25.2955 iterations 5
Cbc0038I Pass  46: suminf.    1.33956 (9) obj. -24.9338 iterations 8
Cbc0038I Pass  47: suminf.    1.30820 (12) obj. -24.9338 iterations 14
Cbc0038I Pass  48: suminf.    1.30820 (12) obj. -24.9338 iterations 1
Cbc0038I Pass  49: suminf.    2.22468 (12) obj. -24.9338 iterations 14
Cbc0038I Pass  50: suminf.    1.80705 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  51: suminf.    1.80705 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  52: suminf.    2.10785 (12) obj. -24.9338 iterations 7
Cbc0038I Pass  53: suminf.    1.73053 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  54: suminf.    1.73053 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  55: suminf.    2.22468 (12) obj. -24.9338 iterations 7
Cbc0038I Pass  56: suminf.    1.80705 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  57: suminf.    1.80705 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  58: suminf.    2.10785 (12) obj. -24.9338 iterations 7
Cbc0038I Pass  59: suminf.    1.73053 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  60: suminf.    1.73053 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  61: suminf.    2.22468 (12) obj. -24.9338 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 85 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -16.7306 - took 0.07 seconds
Cbc0012I Integer solution of -16.73057 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 79 rows 85 columns, reduced to 14 rows 15 columns
Cbc0031I 51 added rows had average density of 24.235294
Cbc0013I At root node, 51 cuts changed objective from -57.746115 to -26.132936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5710 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1128 row cuts average 78.4 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 55 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 626 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 296 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 108 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.622 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.73057 best solution, best possible -26.132936 (1.67 seconds)
Cbc0012I Integer solution of -21.956611 found by rounding after 3169 iterations and 8 nodes (2.24 seconds)
Cbc0004I Integer solution of -24.308791 found after 3171 iterations and 8 nodes (2.24 seconds)
Cbc0001I Search completed - best objective -24.308791, took 3441 iterations and 14 nodes (2.24 seconds)
Cbc0032I Strong branching done 314 times (6672 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 1 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.26

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-11) rows, 51 (-2) columns and 282 (-21) elements
Clp1000I sum of infeasibilities 4.04338e-05 - average 4.30146e-07, 1 fixed columns
Coin0506I Presolve 92 (-2) rows, 50 (-1) columns and 276 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Coin0511I After Postsolve, objective 50.892504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Clp0000I Optimal - objective value 50.892504
Coin0511I After Postsolve, objective 50.892504, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.89250397 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 94 rows, 51 columns (50 integer (50 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.06213
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.89327 iterations 40
Cbc0038I Solution found of -0.89327
Cbc0038I Relaxing continuous gives -0.89327
Cbc0038I Rounding solution of -5.4862 is better than previous of -0.89327

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 64 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -5.4862 to -22.5888 (0.06 seconds)
Cbc0038I Round again with cutoff of -25.4193
Cbc0038I Pass   2: suminf.    2.65626 (9) obj. -25.4193 iterations 8
Cbc0038I Pass   3: suminf.    1.29022 (4) obj. -25.4193 iterations 8
Cbc0038I Pass   4: suminf.    1.29022 (4) obj. -25.4193 iterations 0
Cbc0038I Pass   5: suminf.    1.14382 (4) obj. -25.4193 iterations 4
Cbc0038I Pass   6: suminf.    1.97028 (6) obj. -25.4193 iterations 7
Cbc0038I Pass   7: suminf.    1.86909 (5) obj. -25.4193 iterations 2
Cbc0038I Pass   8: suminf.    1.43404 (5) obj. -25.4193 iterations 2
Cbc0038I Pass   9: suminf.    2.13312 (9) obj. -25.4193 iterations 14
Cbc0038I Pass  10: suminf.    1.60144 (6) obj. -25.4193 iterations 3
Cbc0038I Pass  11: suminf.    1.68981 (6) obj. -25.4193 iterations 12
Cbc0038I Pass  12: suminf.    1.68981 (6) obj. -25.4193 iterations 0
Cbc0038I Pass  13: suminf.    1.86909 (5) obj. -25.4193 iterations 3
Cbc0038I Pass  14: suminf.    1.43404 (5) obj. -25.4193 iterations 2
Cbc0038I Pass  15: suminf.    1.88341 (8) obj. -25.4193 iterations 18
Cbc0038I Pass  16: suminf.    1.03411 (4) obj. -25.4193 iterations 5
Cbc0038I Pass  17: suminf.    0.97331 (4) obj. -25.4193 iterations 1
Cbc0038I Pass  18: suminf.    1.01830 (3) obj. -25.4193 iterations 5
Cbc0038I Pass  19: suminf.    0.87700 (4) obj. -25.4193 iterations 2
Cbc0038I Pass  20: suminf.    0.84180 (3) obj. -25.4193 iterations 2
Cbc0038I Pass  21: suminf.    0.91513 (4) obj. -25.4193 iterations 4
Cbc0038I Pass  22: suminf.    0.91513 (4) obj. -25.4193 iterations 0
Cbc0038I Pass  23: suminf.    1.19532 (3) obj. -25.4193 iterations 2
Cbc0038I Pass  24: suminf.    1.03311 (4) obj. -25.4193 iterations 2
Cbc0038I Pass  25: suminf.    1.02252 (3) obj. -25.4193 iterations 1
Cbc0038I Pass  26: suminf.    3.35250 (9) obj. -25.4193 iterations 10
Cbc0038I Pass  27: suminf.    1.46345 (5) obj. -25.4193 iterations 15
Cbc0038I Pass  28: suminf.    1.27641 (3) obj. -25.4193 iterations 4
Cbc0038I Pass  29: suminf.    1.02387 (3) obj. -25.4193 iterations 1
Cbc0038I Pass  30: suminf.    1.33839 (4) obj. -25.4193 iterations 3
Cbc0038I Pass  31: suminf.    1.25537 (3) obj. -25.4193 iterations 1
Cbc0038I Rounding solution of -23.5813 is better than previous of -22.5888

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 76 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -23.5813 to -24.3088 (0.10 seconds)
Cbc0038I Round again with cutoff of -30.5139
Cbc0038I Pass  31: suminf.    3.11003 (12) obj. -30.5139 iterations 4
Cbc0038I Pass  32: suminf.    3.11003 (12) obj. -30.5139 iterations 0
Cbc0038I Pass  33: suminf.    2.12172 (6) obj. -30.5139 iterations 16
Cbc0038I Pass  34: suminf.    1.62384 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  35: suminf.    2.02462 (7) obj. -30.5139 iterations 6
Cbc0038I Pass  36: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  37: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  38: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  39: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  40: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  41: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  42: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  43: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  44: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  45: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  46: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  47: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  48: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  49: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  50: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  51: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  52: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  53: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I Pass  54: suminf.    2.09653 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  55: suminf.    2.06056 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  56: suminf.    2.02462 (7) obj. -30.5139 iterations 5
Cbc0038I Pass  57: suminf.    2.00333 (6) obj. -30.5139 iterations 1
Cbc0038I Pass  58: suminf.    2.06552 (6) obj. -30.5139 iterations 3
Cbc0038I Pass  59: suminf.    2.00966 (7) obj. -30.5139 iterations 2
Cbc0038I Pass  60: suminf.    2.19974 (6) obj. -30.5139 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 67 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -24.3088 - took 0.12 seconds
Cbc0012I Integer solution of -24.308791 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 67 rows 38 columns
Cbc0031I 20 added rows had average density of 36.6
Cbc0013I At root node, 20 cuts changed objective from -50.892504 to -40.305836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8193 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1697 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 96 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 41.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.308791 best solution, best possible -40.305836 (0.72 seconds)
Cbc0001I Search completed - best objective -24.308791, took 6664 iterations and 38 nodes (0.88 seconds)
Cbc0032I Strong branching done 526 times (10135 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 16, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       0.89

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 79 (-26) rows, 85 (-18) columns and 1101 (-478) elements
Clp1000I sum of infeasibilities 7.95701e-08 - average 1.00722e-09, 11 fixed columns
Coin0506I Presolve 67 (-12) rows, 73 (-12) columns and 821 (-280) elements
Clp0006I 0  Obj 52.029162 Dual inf 2.5313934 (73)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 4.8863788 - largest nonzero change 1.8111348e-05 ( 0.00089819337%) - largest zero change 2.827485e-05
Clp0000I Optimal - objective value 65.106828
Clp0000I Optimal - objective value 65.106828
Coin0511I After Postsolve, objective 65.106828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.106828
Clp0000I Optimal - objective value 65.106828
Clp0000I Optimal - objective value 65.106828
Clp0000I Optimal - objective value 65.106828
Coin0511I After Postsolve, objective 65.106828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.10682805 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 85 columns (85 integer (85 of which binary)) and 1103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.956%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 6.88687
Cbc0038I Pass   1: suminf.    1.92869 (19) obj. -49.2091 iterations 16
Cbc0038I Pass   2: suminf.    1.92869 (19) obj. -49.2091 iterations 1
Cbc0038I Solution found of -7.81537
Cbc0038I Rounding solution of -11.6051 is better than previous of -7.81537

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 85 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -16.2193
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.92869 (19) obj. -49.2091 iterations 0
Cbc0038I Pass   4: suminf.    1.92869 (19) obj. -49.2091 iterations 1
Cbc0038I Pass   5: suminf.    0.66270 (4) obj. -16.2193 iterations 19
Cbc0038I Pass   6: suminf.    0.95986 (3) obj. -16.2193 iterations 7
Cbc0038I Pass   7: suminf.    0.91282 (3) obj. -16.2193 iterations 4
Cbc0038I Pass   8: suminf.    0.44348 (2) obj. -16.3021 iterations 4
Cbc0038I Pass   9: suminf.    1.01045 (9) obj. -16.2193 iterations 7
Cbc0038I Pass  10: suminf.    1.30019 (5) obj. -16.2193 iterations 10
Cbc0038I Pass  11: suminf.    0.98658 (8) obj. -16.2193 iterations 5
Cbc0038I Pass  12: suminf.    0.92043 (8) obj. -16.2193 iterations 2
Cbc0038I Pass  13: suminf.    0.94551 (5) obj. -16.2193 iterations 8
Cbc0038I Pass  14: suminf.    0.75682 (4) obj. -16.3581 iterations 5
Cbc0038I Pass  15: suminf.    0.79153 (4) obj. -16.2193 iterations 4
Cbc0038I Pass  16: suminf.    3.13715 (12) obj. -16.2193 iterations 16
Cbc0038I Pass  17: suminf.    1.46406 (8) obj. -16.2193 iterations 11
Cbc0038I Pass  18: suminf.    1.46406 (8) obj. -16.2193 iterations 0
Cbc0038I Pass  19: suminf.    1.14752 (5) obj. -16.2193 iterations 12
Cbc0038I Pass  20: suminf.    1.14752 (5) obj. -16.2193 iterations 1
Cbc0038I Pass  21: suminf.    1.20377 (5) obj. -16.2193 iterations 6
Cbc0038I Pass  22: suminf.    1.20377 (5) obj. -16.2193 iterations 2
Cbc0038I Pass  23: suminf.    1.14752 (5) obj. -16.2193 iterations 3
Cbc0038I Pass  24: suminf.    1.93063 (10) obj. -16.2193 iterations 20
Cbc0038I Pass  25: suminf.    1.42262 (10) obj. -16.2193 iterations 5
Cbc0038I Pass  26: suminf.    1.37784 (8) obj. -16.2193 iterations 11
Cbc0038I Pass  27: suminf.    1.30926 (8) obj. -16.2193 iterations 3
Cbc0038I Pass  28: suminf.    1.38055 (8) obj. -16.2193 iterations 4
Cbc0038I Pass  29: suminf.    1.31428 (8) obj. -16.2193 iterations 3
Cbc0038I Pass  30: suminf.    1.37784 (8) obj. -16.2193 iterations 6
Cbc0038I Pass  31: suminf.    2.09034 (12) obj. -16.2193 iterations 19
Cbc0038I Pass  32: suminf.    1.48009 (11) obj. -16.2193 iterations 4
Cbc0038I Rounding solution of -15.1044 is better than previous of -11.6051

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 85 columns, reduced to 37 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -15.1044 to -16.7306 (0.07 seconds)
Cbc0038I Round again with cutoff of -24.9338
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.92869 (19) obj. -49.2091 iterations 0
Cbc0038I Pass  33: suminf.    1.92869 (19) obj. -49.2091 iterations 1
Cbc0038I Pass  34: suminf.    1.59927 (11) obj. -24.9338 iterations 27
Cbc0038I Pass  35: suminf.    1.38462 (5) obj. -24.9338 iterations 1
Cbc0038I Pass  36: suminf.    0.72018 (5) obj. -24.9338 iterations 2
Cbc0038I Pass  37: suminf.    1.06960 (5) obj. -24.9338 iterations 3
Cbc0038I Pass  38: suminf.    0.98222 (5) obj. -24.9338 iterations 2
Cbc0038I Pass  39: suminf.    1.24262 (5) obj. -24.9338 iterations 3
Cbc0038I Pass  40: suminf.    1.24792 (8) obj. -24.9338 iterations 19
Cbc0038I Pass  41: suminf.    0.89774 (12) obj. -24.9338 iterations 8
Cbc0038I Pass  42: suminf.    1.42501 (8) obj. -24.9338 iterations 15
Cbc0038I Pass  43: suminf.    0.75725 (12) obj. -24.9338 iterations 4
Cbc0038I Pass  44: suminf.    1.28694 (8) obj. -24.9338 iterations 11
Cbc0038I Pass  45: suminf.    0.82086 (7) obj. -25.2955 iterations 5
Cbc0038I Pass  46: suminf.    1.33956 (9) obj. -24.9338 iterations 8
Cbc0038I Pass  47: suminf.    1.30820 (12) obj. -24.9338 iterations 14
Cbc0038I Pass  48: suminf.    1.30820 (12) obj. -24.9338 iterations 1
Cbc0038I Pass  49: suminf.    2.22468 (12) obj. -24.9338 iterations 14
Cbc0038I Pass  50: suminf.    1.80705 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  51: suminf.    1.80705 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  52: suminf.    2.10785 (12) obj. -24.9338 iterations 7
Cbc0038I Pass  53: suminf.    1.73053 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  54: suminf.    1.73053 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  55: suminf.    2.22468 (12) obj. -24.9338 iterations 7
Cbc0038I Pass  56: suminf.    1.80705 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  57: suminf.    1.80705 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  58: suminf.    2.10785 (12) obj. -24.9338 iterations 7
Cbc0038I Pass  59: suminf.    1.73053 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  60: suminf.    1.73053 (10) obj. -24.9338 iterations 3
Cbc0038I Pass  61: suminf.    2.22468 (12) obj. -24.9338 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 85 columns, reduced to 22 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -16.7306 - took 0.08 seconds
Cbc0012I Integer solution of -16.73057 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 79 rows 85 columns, reduced to 14 rows 15 columns
Cbc0031I 51 added rows had average density of 24.235294
Cbc0013I At root node, 51 cuts changed objective from -57.746115 to -26.132936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5710 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1128 row cuts average 78.4 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 55 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 626 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 296 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 108 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.682 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.73057 best solution, best possible -26.132936 (1.87 seconds)
Cbc0012I Integer solution of -21.956611 found by rounding after 3169 iterations and 8 nodes (2.50 seconds)
Cbc0004I Integer solution of -24.308791 found after 3171 iterations and 8 nodes (2.50 seconds)
Cbc0001I Search completed - best objective -24.308791, took 3441 iterations and 14 nodes (2.51 seconds)
Cbc0032I Strong branching done 314 times (6672 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 1 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       2.52

