Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 65 (-13) columns and 351 (-102) elements
Clp1000I sum of infeasibilities 3.08479e-08 - average 2.70596e-10, 60 fixed columns
Coin0506I Presolve 4 (-110) rows, 4 (-61) columns and 12 (-339) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 19773.995
Clp0000I Optimal - objective value 19773.995
Coin0511I After Postsolve, objective 19773.995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23804279 - largest nonzero change 1.46012e-05 ( 0.00146012%) - largest zero change 2.9222541e-05
Clp0000I Optimal - objective value 19773.995
Clp0000I Optimal - objective value 19773.995
Clp0000I Optimal - objective value 19773.995
Coin0511I After Postsolve, objective 19773.995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19773.99544 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 65 columns (64 integer (64 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.974068
Cbc0038I Solution found of -17093.2
Cbc0038I Relaxing continuous gives -17093.2
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 65 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -17361.2
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.06482 (1) obj. -17361.2 iterations 14
Cbc0038I Pass   2: suminf.    0.43243 (1) obj. -18881.5 iterations 2
Cbc0038I Pass   3: suminf.    0.93159 (4) obj. -17361.2 iterations 8
Cbc0038I Pass   4: suminf.    0.55142 (3) obj. -17361.2 iterations 5
Cbc0038I Pass   5: suminf.    0.49399 (2) obj. -17361.2 iterations 6
Cbc0038I Pass   6: suminf.    0.49399 (2) obj. -17361.2 iterations 3
Cbc0038I Pass   7: suminf.    0.06482 (1) obj. -17361.2 iterations 1
Cbc0038I Pass   8: suminf.    0.43243 (1) obj. -18881.5 iterations 2
Cbc0038I Pass   9: suminf.    0.28622 (2) obj. -17640.7 iterations 7
Cbc0038I Pass  10: suminf.    0.07692 (1) obj. -17599.5 iterations 4
Cbc0038I Pass  11: suminf.    0.12030 (1) obj. -17361.2 iterations 2
Cbc0038I Pass  12: suminf.    1.01504 (3) obj. -17361.2 iterations 8
Cbc0038I Pass  13: suminf.    1.01504 (3) obj. -17361.2 iterations 6
Cbc0038I Pass  14: suminf.    0.13679 (2) obj. -19428.3 iterations 4
Cbc0038I Solution found of -19126.3
Cbc0038I Relaxing continuous gives -19126.3
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 65 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -19255.8
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 3
Cbc0038I Pass  15: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  16: suminf.    0.69702 (4) obj. -19255.8 iterations 9
Cbc0038I Pass  17: suminf.    0.69702 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  18: suminf.    0.74047 (4) obj. -19255.8 iterations 6
Cbc0038I Pass  19: suminf.    0.05406 (2) obj. -19255.8 iterations 4
Cbc0038I Pass  20: suminf.    0.05406 (2) obj. -19255.8 iterations 1
Cbc0038I Pass  21: suminf.    0.74047 (4) obj. -19255.8 iterations 8
Cbc0038I Pass  22: suminf.    0.74047 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  23: suminf.    0.69702 (4) obj. -19255.8 iterations 8
Cbc0038I Pass  24: suminf.    0.69702 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  25: suminf.    0.74047 (4) obj. -19255.8 iterations 6
Cbc0038I Pass  26: suminf.    0.74047 (4) obj. -19255.8 iterations 8
Cbc0038I Pass  27: suminf.    0.15789 (1) obj. -19414.8 iterations 9
Cbc0038I Pass  28: suminf.    0.15789 (1) obj. -19414.8 iterations 0
Cbc0038I Pass  29: suminf.    0.74047 (4) obj. -19255.8 iterations 6
Cbc0038I Pass  30: suminf.    0.69702 (4) obj. -19255.8 iterations 8
Cbc0038I Pass  31: suminf.    0.69702 (4) obj. -19255.8 iterations 3
Cbc0038I Pass  32: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  33: suminf.    0.94643 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  34: suminf.    0.69702 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  35: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  36: suminf.    0.74047 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  37: suminf.    0.69702 (4) obj. -19255.8 iterations 7
Cbc0038I Pass  38: suminf.    0.69702 (4) obj. -19255.8 iterations 3
Cbc0038I Pass  39: suminf.    0.69702 (4) obj. -19255.8 iterations 1
Cbc0038I Pass  40: suminf.    0.69702 (4) obj. -19255.8 iterations 1
Cbc0038I Pass  41: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  42: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  43: suminf.    0.69702 (4) obj. -19255.8 iterations 7
Cbc0038I Pass  44: suminf.    0.05406 (2) obj. -19255.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 65 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -19126.3 - took 0.01 seconds
Cbc0012I Integer solution of -19126.272 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 114 rows 65 columns, reduced to 0 rows 0 columns
Cbc0001I Search completed - best objective -19126.272, took 2 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-66) rows, 102 (-50) columns and 1472 (-1831) elements
Clp1000I sum of infeasibilities 2.1334e-07 - average 2.42432e-09, 69 fixed columns
Coin0506I Presolve 33 (-55) rows, 33 (-69) columns and 111 (-1361) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 19810.43
Clp0000I Optimal - objective value 19810.43
Coin0511I After Postsolve, objective 19810.43, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5778066 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 19810.43
Clp0000I Optimal - objective value 19810.43
Clp0000I Optimal - objective value 19810.43
Coin0511I After Postsolve, objective 19810.43, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19810.4303 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 102 columns (102 integer (102 of which binary)) and 1494 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.638%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.16932
Cbc0038I Pass   1: suminf.    1.33835 (22) obj. -17121.4 iterations 16
Cbc0038I Solution found of -17093.2
Cbc0038I Rounding solution of -19126.3 is better than previous of -17093.2

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -19193.5
Cbc0038I Reduced cost fixing fixed 42 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.76543 (23) obj. -19193.5 iterations 1
Cbc0038I Pass   3: suminf.    1.72359 (24) obj. -19193.5 iterations 2
Cbc0038I Pass   4: suminf.    0.97596 (13) obj. -19193.5 iterations 12
Cbc0038I Pass   5: suminf.    0.96208 (12) obj. -19321.3 iterations 2
Cbc0038I Pass   6: suminf.    0.49760 (3) obj. -19193.5 iterations 13
Cbc0038I Pass   7: suminf.    0.46429 (3) obj. -19310 iterations 5
Cbc0038I Pass   8: suminf.    0.39944 (1) obj. -19193.5 iterations 6
Cbc0038I Pass   9: suminf.    0.36667 (1) obj. -19308.1 iterations 5
Cbc0038I Pass  10: suminf.    1.01203 (10) obj. -19193.5 iterations 13
Cbc0038I Pass  11: suminf.    0.65223 (5) obj. -19193.5 iterations 7
Cbc0038I Pass  12: suminf.    0.61898 (5) obj. -19311.7 iterations 5
Cbc0038I Pass  13: suminf.    0.39887 (1) obj. -19193.5 iterations 8
Cbc0038I Pass  14: suminf.    0.36667 (1) obj. -19306.1 iterations 5
Cbc0038I Pass  15: suminf.    1.41042 (13) obj. -19193.5 iterations 24
Cbc0038I Pass  16: suminf.    0.64862 (12) obj. -19193.5 iterations 4
Cbc0038I Pass  17: suminf.    0.76963 (5) obj. -19193.5 iterations 15
Cbc0038I Pass  18: suminf.    0.39630 (1) obj. -19193.5 iterations 5
Cbc0038I Pass  19: suminf.    0.36667 (1) obj. -19297.1 iterations 4
Cbc0038I Pass  20: suminf.    1.01483 (7) obj. -19193.5 iterations 12
Cbc0038I Pass  21: suminf.    0.65550 (5) obj. -19193.5 iterations 9
Cbc0038I Pass  22: suminf.    0.62509 (5) obj. -19299.8 iterations 4
Cbc0038I Pass  23: suminf.    0.39601 (1) obj. -19193.5 iterations 7
Cbc0038I Pass  24: suminf.    0.36667 (1) obj. -19296.1 iterations 4
Cbc0038I Pass  25: suminf.    0.52029 (4) obj. -19193.5 iterations 6
Cbc0038I Pass  26: suminf.    0.50768 (3) obj. -19299.9 iterations 2
Cbc0038I Pass  27: suminf.    0.39630 (1) obj. -19193.5 iterations 5
Cbc0038I Pass  28: suminf.    0.36667 (1) obj. -19297.1 iterations 4
Cbc0038I Pass  29: suminf.    1.21979 (8) obj. -19471.8 iterations 12
Cbc0038I Pass  30: suminf.    0.45971 (8) obj. -19193.5 iterations 7
Cbc0038I Pass  31: suminf.    0.39630 (1) obj. -19193.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 102 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -19126.3 - took 0.02 seconds
Cbc0012I Integer solution of -19126.272 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 88 rows 102 columns, reduced to 0 rows 0 columns
Cbc0031I 1 added rows had average density of 5
Cbc0013I At root node, 32 cuts changed objective from -19772.91 to -19126.272 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 2.7 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19126.272, took 27 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 42 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 114 (-41) rows, 65 (-13) columns and 351 (-102) elements
Clp1000I sum of infeasibilities 3.08479e-08 - average 2.70596e-10, 60 fixed columns
Coin0506I Presolve 4 (-110) rows, 4 (-61) columns and 12 (-339) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 19773.995
Clp0000I Optimal - objective value 19773.995
Coin0511I After Postsolve, objective 19773.995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.23804279 - largest nonzero change 1.46012e-05 ( 0.00146012%) - largest zero change 2.9222541e-05
Clp0000I Optimal - objective value 19773.995
Clp0000I Optimal - objective value 19773.995
Clp0000I Optimal - objective value 19773.995
Coin0511I After Postsolve, objective 19773.995, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19773.99544 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 114 rows, 65 columns (64 integer (64 of which binary)) and 369 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.974068
Cbc0038I Solution found of -17093.2
Cbc0038I Relaxing continuous gives -17093.2
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 65 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -17361.2
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.06482 (1) obj. -17361.2 iterations 14
Cbc0038I Pass   2: suminf.    0.43243 (1) obj. -18881.5 iterations 2
Cbc0038I Pass   3: suminf.    0.93159 (4) obj. -17361.2 iterations 8
Cbc0038I Pass   4: suminf.    0.55142 (3) obj. -17361.2 iterations 5
Cbc0038I Pass   5: suminf.    0.49399 (2) obj. -17361.2 iterations 6
Cbc0038I Pass   6: suminf.    0.49399 (2) obj. -17361.2 iterations 3
Cbc0038I Pass   7: suminf.    0.06482 (1) obj. -17361.2 iterations 1
Cbc0038I Pass   8: suminf.    0.43243 (1) obj. -18881.5 iterations 2
Cbc0038I Pass   9: suminf.    0.28622 (2) obj. -17640.7 iterations 7
Cbc0038I Pass  10: suminf.    0.07692 (1) obj. -17599.5 iterations 4
Cbc0038I Pass  11: suminf.    0.12030 (1) obj. -17361.2 iterations 2
Cbc0038I Pass  12: suminf.    1.01504 (3) obj. -17361.2 iterations 8
Cbc0038I Pass  13: suminf.    1.01504 (3) obj. -17361.2 iterations 6
Cbc0038I Pass  14: suminf.    0.13679 (2) obj. -19428.3 iterations 4
Cbc0038I Solution found of -19126.3
Cbc0038I Relaxing continuous gives -19126.3
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 65 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -19255.8
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 3
Cbc0038I Pass  15: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  16: suminf.    0.69702 (4) obj. -19255.8 iterations 9
Cbc0038I Pass  17: suminf.    0.69702 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  18: suminf.    0.74047 (4) obj. -19255.8 iterations 6
Cbc0038I Pass  19: suminf.    0.05406 (2) obj. -19255.8 iterations 4
Cbc0038I Pass  20: suminf.    0.05406 (2) obj. -19255.8 iterations 1
Cbc0038I Pass  21: suminf.    0.74047 (4) obj. -19255.8 iterations 8
Cbc0038I Pass  22: suminf.    0.74047 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  23: suminf.    0.69702 (4) obj. -19255.8 iterations 8
Cbc0038I Pass  24: suminf.    0.69702 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  25: suminf.    0.74047 (4) obj. -19255.8 iterations 6
Cbc0038I Pass  26: suminf.    0.74047 (4) obj. -19255.8 iterations 8
Cbc0038I Pass  27: suminf.    0.15789 (1) obj. -19414.8 iterations 9
Cbc0038I Pass  28: suminf.    0.15789 (1) obj. -19414.8 iterations 0
Cbc0038I Pass  29: suminf.    0.74047 (4) obj. -19255.8 iterations 6
Cbc0038I Pass  30: suminf.    0.69702 (4) obj. -19255.8 iterations 8
Cbc0038I Pass  31: suminf.    0.69702 (4) obj. -19255.8 iterations 3
Cbc0038I Pass  32: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  33: suminf.    0.94643 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  34: suminf.    0.69702 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  35: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  36: suminf.    0.74047 (4) obj. -19255.8 iterations 4
Cbc0038I Pass  37: suminf.    0.69702 (4) obj. -19255.8 iterations 7
Cbc0038I Pass  38: suminf.    0.69702 (4) obj. -19255.8 iterations 3
Cbc0038I Pass  39: suminf.    0.69702 (4) obj. -19255.8 iterations 1
Cbc0038I Pass  40: suminf.    0.69702 (4) obj. -19255.8 iterations 1
Cbc0038I Pass  41: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  42: suminf.    0.74047 (4) obj. -19255.8 iterations 5
Cbc0038I Pass  43: suminf.    0.69702 (4) obj. -19255.8 iterations 7
Cbc0038I Pass  44: suminf.    0.05406 (2) obj. -19255.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 114 rows 65 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -19126.3 - took 0.01 seconds
Cbc0012I Integer solution of -19126.272 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 114 rows 65 columns, reduced to 0 rows 0 columns
Cbc0001I Search completed - best objective -19126.272, took 2 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-68) rows, 101 (-52) columns and 1436 (-1868) elements
Clp1000I sum of infeasibilities 2.17537e-07 - average 2.50042e-09, 68 fixed columns
Coin0506I Presolve 33 (-54) rows, 33 (-68) columns and 111 (-1325) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 19810.43
Clp0000I Optimal - objective value 19810.43
Coin0511I After Postsolve, objective 19810.43, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5896368 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 19810.43
Clp0000I Optimal - objective value 19810.43
Clp0000I Optimal - objective value 19810.43
Coin0511I After Postsolve, objective 19810.43, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19810.4303 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 101 columns (101 integer (101 of which binary)) and 1458 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.604%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.31221
Cbc0038I Pass   1: suminf.    1.37498 (22) obj. -17121.3 iterations 16
Cbc0038I Pass   2: suminf.    0.53151 (10) obj. -17108.3 iterations 12
Cbc0038I Solution found of -17093.2
Cbc0038I Rounding solution of -19126.3 is better than previous of -17093.2

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -19193.4
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.80238 (23) obj. -19193.4 iterations 1
Cbc0038I Pass   4: suminf.    1.75962 (24) obj. -19193.4 iterations 2
Cbc0038I Pass   5: suminf.    0.98915 (13) obj. -19193.4 iterations 13
Cbc0038I Pass   6: suminf.    0.97558 (12) obj. -19321.3 iterations 4
Cbc0038I Pass   7: suminf.    0.50005 (3) obj. -19193.4 iterations 14
Cbc0038I Pass   8: suminf.    0.46673 (3) obj. -19310 iterations 6
Cbc0038I Pass   9: suminf.    0.39945 (1) obj. -19193.4 iterations 7
Cbc0038I Pass  10: suminf.    0.36667 (1) obj. -19308.1 iterations 6
Cbc0038I Pass  11: suminf.    0.87345 (9) obj. -19193.4 iterations 13
Cbc0038I Pass  12: suminf.    0.51152 (3) obj. -19193.4 iterations 8
Cbc0038I Pass  13: suminf.    0.47906 (3) obj. -19307 iterations 6
Cbc0038I Pass  14: suminf.    0.39859 (1) obj. -19193.4 iterations 7
Cbc0038I Pass  15: suminf.    0.36667 (1) obj. -19305.1 iterations 6
Cbc0038I Pass  16: suminf.    1.74467 (14) obj. -19193.4 iterations 19
Cbc0038I Pass  17: suminf.    1.00464 (12) obj. -19193.4 iterations 3
Cbc0038I Pass  18: suminf.    0.66400 (11) obj. -19193.4 iterations 2
Cbc0038I Pass  19: suminf.    0.39659 (1) obj. -19193.4 iterations 16
Cbc0038I Pass  20: suminf.    0.36667 (1) obj. -19298.1 iterations 6
Cbc0038I Pass  21: suminf.    0.39659 (1) obj. -19193.4 iterations 5
Cbc0038I Pass  22: suminf.    0.35986 (7) obj. -19193.4 iterations 12
Cbc0038I Pass  23: suminf.    0.35986 (7) obj. -19193.4 iterations 1
Cbc0038I Pass  24: suminf.    0.77616 (5) obj. -19193.4 iterations 12
Cbc0038I Pass  25: suminf.    0.39573 (1) obj. -19193.4 iterations 7
Cbc0038I Pass  26: suminf.    0.36667 (1) obj. -19295.1 iterations 6
Cbc0038I Pass  27: suminf.    0.45378 (5) obj. -19193.4 iterations 12
Cbc0038I Pass  28: suminf.    0.10708 (4) obj. -19193.4 iterations 4
Cbc0038I Pass  29: suminf.    0.77616 (5) obj. -19193.4 iterations 11
Cbc0038I Pass  30: suminf.    0.39573 (1) obj. -19193.4 iterations 7
Cbc0038I Pass  31: suminf.    0.36667 (1) obj. -19295.1 iterations 6
Cbc0038I Pass  32: suminf.    0.86234 (9) obj. -19193.4 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 101 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -19126.3 - took 0.02 seconds
Cbc0012I Integer solution of -19126.272 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 87 rows 101 columns, reduced to 0 rows 0 columns
Cbc0031I 2 added rows had average density of 5
Cbc0013I At root node, 30 cuts changed objective from -19772.842 to -19126.272 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 4 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 66.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -19126.272, took 29 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 41 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

