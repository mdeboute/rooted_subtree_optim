Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 23 (-24) rows, 14 (-10) columns and 68 (-61) elements
Clp1000I sum of infeasibilities 1.2087e-05 - average 5.25522e-07, 2 fixed columns
Coin0506I Presolve 12 (-11) rows, 9 (-5) columns and 36 (-32) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Coin0511I After Postsolve, objective 81.631315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Coin0511I After Postsolve, objective 81.631315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.63131478 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 23 rows, 14 columns (13 integer (13 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.650%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.34164
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -39 iterations 7
Cbc0038I Solution found of -39
Cbc0038I Relaxing continuous gives -39
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -39 to -59.6667 (0.00 seconds)
Cbc0038I Round again with cutoff of -61.8633
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.40871 (1) obj. -61.8633 iterations 1
Cbc0038I Pass   3: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass   4: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass   5: suminf.    0.98579 (3) obj. -61.8633 iterations 2
Cbc0038I Pass   6: suminf.    0.76833 (2) obj. -61.8633 iterations 2
Cbc0038I Pass   7: suminf.    1.23680 (3) obj. -61.8633 iterations 3
Cbc0038I Pass   8: suminf.    1.37673 (5) obj. -61.8633 iterations 3
Cbc0038I Pass   9: suminf.    0.72239 (2) obj. -61.8633 iterations 3
Cbc0038I Pass  10: suminf.    0.55105 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  11: suminf.    0.40871 (1) obj. -61.8633 iterations 2
Cbc0038I Pass  12: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass  13: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  14: suminf.    0.74917 (3) obj. -61.8633 iterations 2
Cbc0038I Pass  15: suminf.    0.95992 (4) obj. -61.8633 iterations 1
Cbc0038I Pass  16: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  17: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  18: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  19: suminf.    0.95992 (4) obj. -61.8633 iterations 2
Cbc0038I Pass  20: suminf.    1.26008 (6) obj. -61.8633 iterations 5
Cbc0038I Pass  21: suminf.    0.97458 (3) obj. -61.8633 iterations 5
Cbc0038I Pass  22: suminf.    0.97458 (3) obj. -61.8633 iterations 0
Cbc0038I Pass  23: suminf.    0.40871 (1) obj. -61.8633 iterations 3
Cbc0038I Pass  24: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass  25: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  26: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  27: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  28: suminf.    0.74917 (3) obj. -61.8633 iterations 2
Cbc0038I Pass  29: suminf.    0.74917 (3) obj. -61.8633 iterations 0
Cbc0038I Pass  30: suminf.    0.95992 (4) obj. -61.8633 iterations 1
Cbc0038I Pass  31: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -59.6667 - took 0.01 seconds
Cbc0012I Integer solution of -59.6667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 23 rows 14 columns, reduced to 10 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -81.631315 to -81.631315 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -59.66669999999999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 29 (-17) rows, 32 (-12) columns and 207 (-153) elements
Clp1000I sum of infeasibilities 1.30855e-10 - average 4.51224e-12, 22 fixed columns
Coin0506I Presolve 8 (-21) rows, 10 (-22) columns and 31 (-176) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 140.77309
Clp0000I Optimal - objective value 140.77309
Coin0511I After Postsolve, objective 140.77309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.1015863 - largest nonzero change 3.530146e-05 ( 0.00091204228%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 202.08223
Clp0000I Optimal - objective value 202.08223
Clp0000I Optimal - objective value 202.08223
Coin0511I After Postsolve, objective 202.08223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 202.0822263 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 32 columns (32 integer (32 of which binary)) and 213 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.038%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.96971
Cbc0038I Pass   1: suminf.    0.42857 (1) obj. -131.19 iterations 15
Cbc0038I Solution found of -111
Cbc0038I Rounding solution of -115.667 is better than previous of -111

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -118.059
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.42857 (1) obj. -131.19 iterations 0
Cbc0038I Pass   3: suminf.    0.19977 (1) obj. -118.059 iterations 2
Cbc0038I Pass   4: suminf.    0.37684 (2) obj. -118.059 iterations 4
Cbc0038I Pass   5: suminf.    0.19977 (1) obj. -118.059 iterations 6
Cbc0038I Pass   6: suminf.    1.08627 (7) obj. -118.059 iterations 5
Cbc0038I Pass   7: suminf.    1.79736 (7) obj. -118.059 iterations 8
Cbc0038I Pass   8: suminf.    1.63379 (6) obj. -118.059 iterations 5
Cbc0038I Pass   9: suminf.    2.45337 (9) obj. -118.059 iterations 5
Cbc0038I Pass  10: suminf.    3.56385 (11) obj. -118.059 iterations 4
Cbc0038I Pass  11: suminf.    1.96084 (9) obj. -118.059 iterations 6
Cbc0038I Pass  12: suminf.    3.15315 (12) obj. -118.059 iterations 9
Cbc0038I Pass  13: suminf.    0.28571 (1) obj. -125.762 iterations 12
Cbc0038I Pass  14: suminf.    0.06770 (1) obj. -118.059 iterations 1
Cbc0038I Pass  15: suminf.    1.01525 (7) obj. -118.059 iterations 8
Cbc0038I Pass  16: suminf.    0.06770 (1) obj. -118.059 iterations 10
Cbc0038I Pass  17: suminf.    0.86331 (6) obj. -118.059 iterations 8
Cbc0038I Pass  18: suminf.    0.25937 (4) obj. -118.059 iterations 11
Cbc0038I Pass  19: suminf.    0.23077 (1) obj. -119.128 iterations 4
Cbc0038I Pass  20: suminf.    0.55263 (4) obj. -118.059 iterations 7
Cbc0038I Pass  21: suminf.    0.26203 (2) obj. -118.059 iterations 5
Cbc0038I Pass  22: suminf.    0.45787 (3) obj. -118.059 iterations 7
Cbc0038I Pass  23: suminf.    0.38462 (1) obj. -124.333 iterations 2
Cbc0038I Pass  24: suminf.    0.19977 (1) obj. -118.059 iterations 2
Cbc0038I Pass  25: suminf.    0.42857 (1) obj. -131.19 iterations 1
Cbc0038I Pass  26: suminf.    2.58060 (10) obj. -118.059 iterations 10
Cbc0038I Pass  27: suminf.    0.28571 (1) obj. -125.762 iterations 8
Cbc0038I Pass  28: suminf.    0.06770 (1) obj. -118.059 iterations 2
Cbc0038I Pass  29: suminf.    0.19191 (2) obj. -118.059 iterations 5
Cbc0038I Pass  30: suminf.    0.06770 (1) obj. -118.059 iterations 7
Cbc0038I Pass  31: suminf.    1.09314 (8) obj. -118.059 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 32 columns, reduced to 21 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -115.667 - took 0.01 seconds
Cbc0012I Integer solution of -115.66667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -139.58474 to -139.58474 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -115.66667, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 23 (-24) rows, 14 (-10) columns and 68 (-61) elements
Clp1000I sum of infeasibilities 1.2087e-05 - average 5.25522e-07, 2 fixed columns
Coin0506I Presolve 12 (-11) rows, 9 (-5) columns and 36 (-32) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Coin0511I After Postsolve, objective 81.631315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Clp0000I Optimal - objective value 81.631315
Coin0511I After Postsolve, objective 81.631315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.63131478 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 23 rows, 14 columns (13 integer (13 of which binary)) and 72 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.650%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 2.34164
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -39 iterations 7
Cbc0038I Solution found of -39
Cbc0038I Relaxing continuous gives -39
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -39 to -59.6667 (0.01 seconds)
Cbc0038I Round again with cutoff of -61.8633
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.40871 (1) obj. -61.8633 iterations 1
Cbc0038I Pass   3: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass   4: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass   5: suminf.    0.98579 (3) obj. -61.8633 iterations 2
Cbc0038I Pass   6: suminf.    0.76833 (2) obj. -61.8633 iterations 2
Cbc0038I Pass   7: suminf.    1.23680 (3) obj. -61.8633 iterations 3
Cbc0038I Pass   8: suminf.    1.37673 (5) obj. -61.8633 iterations 3
Cbc0038I Pass   9: suminf.    0.72239 (2) obj. -61.8633 iterations 3
Cbc0038I Pass  10: suminf.    0.55105 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  11: suminf.    0.40871 (1) obj. -61.8633 iterations 2
Cbc0038I Pass  12: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass  13: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  14: suminf.    0.74917 (3) obj. -61.8633 iterations 2
Cbc0038I Pass  15: suminf.    0.95992 (4) obj. -61.8633 iterations 1
Cbc0038I Pass  16: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  17: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  18: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I Pass  19: suminf.    0.95992 (4) obj. -61.8633 iterations 2
Cbc0038I Pass  20: suminf.    1.26008 (6) obj. -61.8633 iterations 5
Cbc0038I Pass  21: suminf.    0.97458 (3) obj. -61.8633 iterations 5
Cbc0038I Pass  22: suminf.    0.97458 (3) obj. -61.8633 iterations 0
Cbc0038I Pass  23: suminf.    0.40871 (1) obj. -61.8633 iterations 3
Cbc0038I Pass  24: suminf.    0.11561 (2) obj. -61.8633 iterations 2
Cbc0038I Pass  25: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  26: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  27: suminf.    0.76833 (2) obj. -61.8633 iterations 1
Cbc0038I Pass  28: suminf.    0.74917 (3) obj. -61.8633 iterations 2
Cbc0038I Pass  29: suminf.    0.74917 (3) obj. -61.8633 iterations 0
Cbc0038I Pass  30: suminf.    0.95992 (4) obj. -61.8633 iterations 1
Cbc0038I Pass  31: suminf.    0.74917 (3) obj. -61.8633 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 23 rows 14 columns, reduced to 15 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -59.6667 - took 0.01 seconds
Cbc0012I Integer solution of -59.6667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 23 rows 14 columns, reduced to 10 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -81.631315 to -81.631315 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -59.66669999999999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 25 (-22) rows, 28 (-17) columns and 150 (-211) elements
Clp1000I sum of infeasibilities 2.07903e-06 - average 8.31611e-08, 19 fixed columns
Coin0506I Presolve 5 (-20) rows, 9 (-19) columns and 24 (-126) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 38.6667
Clp0000I Optimal - objective value 38.6667
Coin0511I After Postsolve, objective 38.6667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.4910727 - largest nonzero change 2.407023e-05 ( 0.002407023%) - largest zero change 1.5935982e-05
Clp0000I Optimal - objective value 103.53665
Clp0000I Optimal - objective value 103.53665
Clp0000I Optimal - objective value 103.53665
Coin0511I After Postsolve, objective 103.53665, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.5366496 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 28 columns (28 integer (28 of which binary)) and 155 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.647%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.35963
Cbc0038I Solution found of -59.6667
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 28 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -60.7394
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.07151 (1) obj. -60.7394 iterations 10
Cbc0038I Pass   2: suminf.    0.30000 (1) obj. -64.1667 iterations 2
Cbc0038I Pass   3: suminf.    0.78818 (3) obj. -60.7394 iterations 6
Cbc0038I Pass   4: suminf.    0.20485 (1) obj. -60.7394 iterations 2
Cbc0038I Pass   5: suminf.    0.30000 (1) obj. -62.1667 iterations 2
Cbc0038I Pass   6: suminf.    0.84441 (3) obj. -60.7394 iterations 4
Cbc0038I Pass   7: suminf.    0.84441 (3) obj. -60.7394 iterations 0
Cbc0038I Pass   8: suminf.    0.87363 (4) obj. -60.7394 iterations 2
Cbc0038I Pass   9: suminf.    2.00757 (6) obj. -60.7394 iterations 6
Cbc0038I Pass  10: suminf.    1.02576 (4) obj. -60.7394 iterations 3
Cbc0038I Pass  11: suminf.    0.77651 (3) obj. -60.7394 iterations 1
Cbc0038I Pass  12: suminf.    0.94570 (4) obj. -60.7394 iterations 3
Cbc0038I Pass  13: suminf.    1.02345 (5) obj. -60.7394 iterations 5
Cbc0038I Pass  14: suminf.    0.47475 (2) obj. -60.7394 iterations 6
Cbc0038I Pass  15: suminf.    0.77003 (3) obj. -60.7394 iterations 4
Cbc0038I Pass  16: suminf.    1.39879 (4) obj. -60.7394 iterations 4
Cbc0038I Pass  17: suminf.    0.47127 (3) obj. -60.7394 iterations 7
Cbc0038I Pass  18: suminf.    0.20485 (1) obj. -60.7394 iterations 4
Cbc0038I Pass  19: suminf.    0.30000 (1) obj. -62.1667 iterations 2
Cbc0038I Pass  20: suminf.    1.02006 (4) obj. -60.7394 iterations 3
Cbc0038I Pass  21: suminf.    1.83098 (6) obj. -60.7394 iterations 8
Cbc0038I Pass  22: suminf.    1.27117 (4) obj. -60.7394 iterations 2
Cbc0038I Pass  23: suminf.    0.62219 (3) obj. -60.7394 iterations 2
Cbc0038I Pass  24: suminf.    1.33094 (4) obj. -60.7394 iterations 2
Cbc0038I Pass  25: suminf.    2.55849 (7) obj. -60.7394 iterations 5
Cbc0038I Pass  26: suminf.    1.08247 (4) obj. -60.7394 iterations 5
Cbc0038I Pass  27: suminf.    1.48633 (5) obj. -60.7394 iterations 1
Cbc0038I Pass  28: suminf.    2.55953 (6) obj. -60.7394 iterations 3
Cbc0038I Pass  29: suminf.    1.06966 (4) obj. -60.7394 iterations 4
Cbc0038I Pass  30: suminf.    0.73330 (3) obj. -60.7394 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 24 rows 28 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -59.6667 - took 0.01 seconds
Cbc0012I Integer solution of -59.6667 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -65.620271 to -65.620271 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -59.66669999999999, took 5 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

