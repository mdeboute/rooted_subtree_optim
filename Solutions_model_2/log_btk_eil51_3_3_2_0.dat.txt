Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 51 (-2) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 0.000200654 - average 2.33319e-06, 5 fixed columns
Coin0506I Presolve 76 (-10) rows, 46 (-5) columns and 236 (-30) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.41467475 - largest nonzero change 0 ( 0%) - largest zero change 2.9023528e-05
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Coin0511I After Postsolve, objective 43.680346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Coin0511I After Postsolve, objective 43.680346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.68034558 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 51 columns (50 integer (50 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 9.64512
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.06819 iterations 36
Cbc0038I Solution found of 7.06819
Cbc0038I Relaxing continuous gives 7.06819
Cbc0038I Rounding solution of -8.68107 is better than previous of 7.06819

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -8.68107 to -10.094 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.4528
Cbc0038I Pass   2: suminf.    2.50290 (11) obj. -13.4528 iterations 11
Cbc0038I Pass   3: suminf.    0.76792 (6) obj. -13.4528 iterations 10
Cbc0038I Pass   4: suminf.    2.79361 (7) obj. -13.4528 iterations 6
Cbc0038I Pass   5: suminf.    2.11052 (6) obj. -13.4528 iterations 4
Cbc0038I Pass   6: suminf.    1.20498 (4) obj. -13.4528 iterations 2
Cbc0038I Pass   7: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass   8: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass   9: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  10: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  11: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  12: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  13: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  14: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  15: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  16: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  17: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  18: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  19: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  20: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  21: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  22: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  23: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  24: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  25: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  26: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  27: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  28: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  29: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  30: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  31: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -10.094 - took 0.05 seconds
Cbc0012I Integer solution of -10.09404 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0031I 21 added rows had average density of 40.095238
Cbc0013I At root node, 21 cuts changed objective from -43.680346 to -32.667235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8026 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2012 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0038I Full problem 86 rows 51 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -10.09403999999999, took 7224 iterations and 46 nodes (0.65 seconds)
Cbc0032I Strong branching done 546 times (8997 iterations), fathomed 1 nodes and fixed 25 variables
Cbc0035I Maximum depth 12, 158 variables fixed on reduced cost
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 70 (-34) rows, 84 (-18) columns and 1102 (-476) elements
Clp1000I sum of infeasibilities 9.71959e-08 - average 1.38851e-09, 13 fixed columns
Coin0506I Presolve 57 (-13) rows, 71 (-13) columns and 776 (-326) elements
Clp0006I 0  Obj 42.838189 Dual inf 2.1547238 (71)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 4.8957292 - largest nonzero change 1.4878639e-05 ( 0.00089819337%) - largest zero change 2.7201737e-05
Clp0000I Optimal - objective value 59.704263
Clp0000I Optimal - objective value 59.704263
Coin0511I After Postsolve, objective 59.704263, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.704263
Clp0000I Optimal - objective value 59.704263
Clp0000I Optimal - objective value 59.704263
Clp0000I Optimal - objective value 59.704263
Coin0511I After Postsolve, objective 59.704263, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.70426254 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 70 rows, 84 columns (84 integer (84 of which binary)) and 1106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.185%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 9.09867
Cbc0038I Pass   1: suminf.    2.48154 (20) obj. -36.5165 iterations 8
Cbc0038I Pass   2: suminf.    2.48154 (20) obj. -36.5165 iterations 2
Cbc0038I Pass   3: suminf.    0.32436 (4) obj. -5.40181 iterations 16
Cbc0038I Solution found of 0.09991
Cbc0038I Rounding solution of -6.34426 is better than previous of 0.09991

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 84 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -11.1269
Cbc0038I Pass   4: suminf.    2.48154 (20) obj. -36.5165 iterations 0
Cbc0038I Pass   5: suminf.    2.48154 (20) obj. -36.5165 iterations 1
Cbc0038I Pass   6: suminf.    0.63282 (4) obj. -11.1269 iterations 18
Cbc0038I Pass   7: suminf.    0.37741 (4) obj. -14.7027 iterations 1
Cbc0038I Pass   8: suminf.    0.19808 (1) obj. -11.1269 iterations 4
Cbc0038I Pass   9: suminf.    0.14000 (1) obj. -11.9401 iterations 1
Cbc0038I Pass  10: suminf.    2.42668 (9) obj. -17.6155 iterations 13
Cbc0038I Pass  11: suminf.    2.42668 (9) obj. -17.6155 iterations 2
Cbc0038I Pass  12: suminf.    0.75873 (12) obj. -11.1269 iterations 15
Cbc0038I Pass  13: suminf.    0.64887 (3) obj. -11.2704 iterations 5
Cbc0038I Pass  14: suminf.    1.56041 (11) obj. -11.1269 iterations 4
Cbc0038I Pass  15: suminf.    1.56041 (11) obj. -11.1269 iterations 0
Cbc0038I Pass  16: suminf.    3.33323 (11) obj. -11.1269 iterations 11
Cbc0038I Pass  17: suminf.    1.85079 (6) obj. -11.1269 iterations 3
Cbc0038I Pass  18: suminf.    1.72747 (6) obj. -11.8813 iterations 1
Cbc0038I Pass  19: suminf.    2.37706 (7) obj. -11.1269 iterations 3
Cbc0038I Pass  20: suminf.    2.30318 (6) obj. -11.9476 iterations 1
Cbc0038I Pass  21: suminf.    2.17001 (9) obj. -11.1269 iterations 3
Cbc0038I Pass  22: suminf.    2.16865 (7) obj. -11.1269 iterations 1
Cbc0038I Pass  23: suminf.    1.65461 (5) obj. -11.1269 iterations 2
Cbc0038I Pass  24: suminf.    1.03320 (5) obj. -14.9098 iterations 1
Cbc0038I Pass  25: suminf.    2.28749 (12) obj. -17.2338 iterations 15
Cbc0038I Pass  26: suminf.    2.28749 (12) obj. -17.2338 iterations 0
Cbc0038I Pass  27: suminf.    1.26743 (8) obj. -11.1269 iterations 13
Cbc0038I Pass  28: suminf.    0.77656 (5) obj. -11.1269 iterations 2
Cbc0038I Pass  29: suminf.    0.63508 (4) obj. -11.1269 iterations 3
Cbc0038I Pass  30: suminf.    1.46729 (4) obj. -11.1269 iterations 3
Cbc0038I Pass  31: suminf.    1.12054 (3) obj. -11.1269 iterations 1
Cbc0038I Pass  32: suminf.    0.99288 (3) obj. -12.0291 iterations 1
Cbc0038I Pass  33: suminf.    1.12054 (3) obj. -11.1269 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 84 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 0.09991 to -8.09398 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.7355
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.48154 (20) obj. -36.5165 iterations 0
Cbc0038I Pass  34: suminf.    2.48154 (20) obj. -36.5165 iterations 1
Cbc0038I Pass  35: suminf.    0.67115 (9) obj. -19.7355 iterations 24
Cbc0038I Pass  36: suminf.    0.65974 (8) obj. -19.9252 iterations 2
Cbc0038I Pass  37: suminf.    1.77617 (8) obj. -19.7355 iterations 10
Cbc0038I Pass  38: suminf.    1.65602 (8) obj. -19.7355 iterations 2
Cbc0038I Pass  39: suminf.    1.98727 (7) obj. -19.7355 iterations 8
Cbc0038I Pass  40: suminf.    1.53432 (7) obj. -19.7355 iterations 2
Cbc0038I Pass  41: suminf.    1.16025 (10) obj. -19.7355 iterations 5
Cbc0038I Pass  42: suminf.    1.15784 (7) obj. -19.7355 iterations 1
Cbc0038I Pass  43: suminf.    1.40887 (9) obj. -19.7355 iterations 5
Cbc0038I Pass  44: suminf.    1.10933 (7) obj. -19.7355 iterations 4
Cbc0038I Pass  45: suminf.    1.47963 (9) obj. -19.7355 iterations 5
Cbc0038I Pass  46: suminf.    3.27855 (16) obj. -19.7355 iterations 22
Cbc0038I Pass  47: suminf.    2.23437 (15) obj. -19.7355 iterations 5
Cbc0038I Pass  48: suminf.    2.23437 (15) obj. -19.7355 iterations 0
Cbc0038I Pass  49: suminf.    2.10867 (8) obj. -19.7355 iterations 21
Cbc0038I Pass  50: suminf.    1.96724 (8) obj. -19.7355 iterations 4
Cbc0038I Pass  51: suminf.    2.10867 (8) obj. -19.7355 iterations 3
Cbc0038I Pass  52: suminf.    2.71610 (12) obj. -19.7355 iterations 9
Cbc0038I Pass  53: suminf.    1.97303 (11) obj. -21.1535 iterations 3
Cbc0038I Pass  54: suminf.    2.11247 (6) obj. -19.7355 iterations 15
Cbc0038I Pass  55: suminf.    1.63948 (5) obj. -19.7355 iterations 8
Cbc0038I Pass  56: suminf.    1.42639 (5) obj. -20.3748 iterations 2
Cbc0038I Pass  57: suminf.    2.11247 (6) obj. -19.7355 iterations 8
Cbc0038I Pass  58: suminf.    2.96880 (15) obj. -19.7355 iterations 15
Cbc0038I Pass  59: suminf.    2.96880 (15) obj. -19.7355 iterations 0
Cbc0038I Pass  60: suminf.    0.98594 (5) obj. -19.7355 iterations 11
Cbc0038I Pass  61: suminf.    0.92499 (5) obj. -19.9184 iterations 4
Cbc0038I Pass  62: suminf.    1.80936 (6) obj. -19.7355 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 84 columns, reduced to 42 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -8.09398 - took 0.04 seconds
Cbc0012I Integer solution of -8.09398 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 70 rows 84 columns, reduced to 16 rows 20 columns
Cbc0031I 47 added rows had average density of 31.085106
Cbc0013I At root node, 47 cuts changed objective from -54.169926 to -18.091143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8661 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1262 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 159 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1290 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 403 row cuts average 43.5 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.616 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.09398 best solution, best possible -18.091143 (1.88 seconds)
Cbc0012I Integer solution of -8.53532 found by rounding after 4924 iterations and 20 nodes (2.13 seconds)
Cbc0016I Integer solution of -10.09404 found by strong branching after 4983 iterations and 23 nodes (2.13 seconds)
Cbc0001I Search completed - best objective -10.09403999999999, took 5811 iterations and 42 nodes (2.20 seconds)
Cbc0032I Strong branching done 624 times (10034 iterations), fathomed 8 nodes and fixed 1 variables
Cbc0035I Maximum depth 16, 96 variables fixed on reduced cost
Total time (CPU seconds):       1.71   (Wallclock seconds):       2.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-19) rows, 51 (-2) columns and 266 (-37) elements
Clp1000I sum of infeasibilities 0.000200654 - average 2.33319e-06, 5 fixed columns
Coin0506I Presolve 76 (-10) rows, 46 (-5) columns and 236 (-30) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.41467475 - largest nonzero change 0 ( 0%) - largest zero change 2.9023528e-05
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Coin0511I After Postsolve, objective 43.680346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Clp0000I Optimal - objective value 43.680346
Coin0511I After Postsolve, objective 43.680346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.68034558 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 51 columns (50 integer (50 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 9.64512
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 7.06819 iterations 36
Cbc0038I Solution found of 7.06819
Cbc0038I Relaxing continuous gives 7.06819
Cbc0038I Rounding solution of -8.68107 is better than previous of 7.06819

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -8.68107 to -10.094 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.4528
Cbc0038I Pass   2: suminf.    2.50290 (11) obj. -13.4528 iterations 11
Cbc0038I Pass   3: suminf.    0.76792 (6) obj. -13.4528 iterations 10
Cbc0038I Pass   4: suminf.    2.79361 (7) obj. -13.4528 iterations 6
Cbc0038I Pass   5: suminf.    2.11052 (6) obj. -13.4528 iterations 4
Cbc0038I Pass   6: suminf.    1.20498 (4) obj. -13.4528 iterations 2
Cbc0038I Pass   7: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass   8: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass   9: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  10: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  11: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  12: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  13: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  14: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  15: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  16: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  17: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  18: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  19: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  20: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  21: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  22: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  23: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  24: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  25: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I Pass  26: suminf.    2.09441 (5) obj. -13.4528 iterations 2
Cbc0038I Pass  27: suminf.    1.75645 (6) obj. -13.4528 iterations 2
Cbc0038I Pass  28: suminf.    1.75645 (6) obj. -13.4528 iterations 0
Cbc0038I Pass  29: suminf.    1.24827 (4) obj. -13.4528 iterations 5
Cbc0038I Pass  30: suminf.    1.20498 (4) obj. -13.4528 iterations 3
Cbc0038I Pass  31: suminf.    1.99683 (5) obj. -13.4528 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -10.094 - took 0.06 seconds
Cbc0012I Integer solution of -10.09404 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 86 rows 51 columns, reduced to 55 rows 34 columns
Cbc0031I 21 added rows had average density of 40.095238
Cbc0013I At root node, 21 cuts changed objective from -43.680346 to -32.667235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8026 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2012 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 13 nodes, 9 on tree, -10.09404 best solution, best possible -32.667235 (0.68 seconds)
Cbc0038I Full problem 86 rows 51 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -10.09403999999999, took 7224 iterations and 46 nodes (0.73 seconds)
Cbc0032I Strong branching done 546 times (8997 iterations), fathomed 1 nodes and fixed 25 variables
Cbc0035I Maximum depth 12, 158 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 70 (-35) rows, 84 (-19) columns and 1102 (-477) elements
Clp1000I sum of infeasibilities 9.71959e-08 - average 1.38851e-09, 13 fixed columns
Coin0506I Presolve 57 (-13) rows, 71 (-13) columns and 776 (-326) elements
Clp0006I 0  Obj 42.838189 Dual inf 2.1547238 (71)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 4.8957292 - largest nonzero change 1.4878639e-05 ( 0.00089819337%) - largest zero change 2.7201737e-05
Clp0000I Optimal - objective value 59.704263
Clp0000I Optimal - objective value 59.704263
Coin0511I After Postsolve, objective 59.704263, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.704263
Clp0000I Optimal - objective value 59.704263
Clp0000I Optimal - objective value 59.704263
Clp0000I Optimal - objective value 59.704263
Coin0511I After Postsolve, objective 59.704263, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.70426254 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 70 rows, 84 columns (84 integer (84 of which binary)) and 1106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.185%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 9.09867
Cbc0038I Pass   1: suminf.    2.48154 (20) obj. -36.5165 iterations 8
Cbc0038I Pass   2: suminf.    2.48154 (20) obj. -36.5165 iterations 2
Cbc0038I Pass   3: suminf.    0.32436 (4) obj. -5.40181 iterations 16
Cbc0038I Solution found of 0.09991
Cbc0038I Rounding solution of -6.34426 is better than previous of 0.09991

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 84 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -11.1269
Cbc0038I Pass   4: suminf.    2.48154 (20) obj. -36.5165 iterations 0
Cbc0038I Pass   5: suminf.    2.48154 (20) obj. -36.5165 iterations 1
Cbc0038I Pass   6: suminf.    0.63282 (4) obj. -11.1269 iterations 18
Cbc0038I Pass   7: suminf.    0.37741 (4) obj. -14.7027 iterations 1
Cbc0038I Pass   8: suminf.    0.19808 (1) obj. -11.1269 iterations 4
Cbc0038I Pass   9: suminf.    0.14000 (1) obj. -11.9401 iterations 1
Cbc0038I Pass  10: suminf.    2.42668 (9) obj. -17.6155 iterations 13
Cbc0038I Pass  11: suminf.    2.42668 (9) obj. -17.6155 iterations 2
Cbc0038I Pass  12: suminf.    0.75873 (12) obj. -11.1269 iterations 15
Cbc0038I Pass  13: suminf.    0.64887 (3) obj. -11.2704 iterations 5
Cbc0038I Pass  14: suminf.    1.56041 (11) obj. -11.1269 iterations 4
Cbc0038I Pass  15: suminf.    1.56041 (11) obj. -11.1269 iterations 0
Cbc0038I Pass  16: suminf.    3.33323 (11) obj. -11.1269 iterations 11
Cbc0038I Pass  17: suminf.    1.85079 (6) obj. -11.1269 iterations 3
Cbc0038I Pass  18: suminf.    1.72747 (6) obj. -11.8813 iterations 1
Cbc0038I Pass  19: suminf.    2.37706 (7) obj. -11.1269 iterations 3
Cbc0038I Pass  20: suminf.    2.30318 (6) obj. -11.9476 iterations 1
Cbc0038I Pass  21: suminf.    2.17001 (9) obj. -11.1269 iterations 3
Cbc0038I Pass  22: suminf.    2.16865 (7) obj. -11.1269 iterations 1
Cbc0038I Pass  23: suminf.    1.65461 (5) obj. -11.1269 iterations 2
Cbc0038I Pass  24: suminf.    1.03320 (5) obj. -14.9098 iterations 1
Cbc0038I Pass  25: suminf.    2.28749 (12) obj. -17.2338 iterations 15
Cbc0038I Pass  26: suminf.    2.28749 (12) obj. -17.2338 iterations 0
Cbc0038I Pass  27: suminf.    1.26743 (8) obj. -11.1269 iterations 13
Cbc0038I Pass  28: suminf.    0.77656 (5) obj. -11.1269 iterations 2
Cbc0038I Pass  29: suminf.    0.63508 (4) obj. -11.1269 iterations 3
Cbc0038I Pass  30: suminf.    1.46729 (4) obj. -11.1269 iterations 3
Cbc0038I Pass  31: suminf.    1.12054 (3) obj. -11.1269 iterations 1
Cbc0038I Pass  32: suminf.    0.99288 (3) obj. -12.0291 iterations 1
Cbc0038I Pass  33: suminf.    1.12054 (3) obj. -11.1269 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 84 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 0.09991 to -8.09398 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.7355
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.48154 (20) obj. -36.5165 iterations 0
Cbc0038I Pass  34: suminf.    2.48154 (20) obj. -36.5165 iterations 1
Cbc0038I Pass  35: suminf.    0.67115 (9) obj. -19.7355 iterations 24
Cbc0038I Pass  36: suminf.    0.65974 (8) obj. -19.9252 iterations 2
Cbc0038I Pass  37: suminf.    1.77617 (8) obj. -19.7355 iterations 10
Cbc0038I Pass  38: suminf.    1.65602 (8) obj. -19.7355 iterations 2
Cbc0038I Pass  39: suminf.    1.98727 (7) obj. -19.7355 iterations 8
Cbc0038I Pass  40: suminf.    1.53432 (7) obj. -19.7355 iterations 2
Cbc0038I Pass  41: suminf.    1.16025 (10) obj. -19.7355 iterations 5
Cbc0038I Pass  42: suminf.    1.15784 (7) obj. -19.7355 iterations 1
Cbc0038I Pass  43: suminf.    1.40887 (9) obj. -19.7355 iterations 5
Cbc0038I Pass  44: suminf.    1.10933 (7) obj. -19.7355 iterations 4
Cbc0038I Pass  45: suminf.    1.47963 (9) obj. -19.7355 iterations 5
Cbc0038I Pass  46: suminf.    3.27855 (16) obj. -19.7355 iterations 22
Cbc0038I Pass  47: suminf.    2.23437 (15) obj. -19.7355 iterations 5
Cbc0038I Pass  48: suminf.    2.23437 (15) obj. -19.7355 iterations 0
Cbc0038I Pass  49: suminf.    2.10867 (8) obj. -19.7355 iterations 21
Cbc0038I Pass  50: suminf.    1.96724 (8) obj. -19.7355 iterations 4
Cbc0038I Pass  51: suminf.    2.10867 (8) obj. -19.7355 iterations 3
Cbc0038I Pass  52: suminf.    2.71610 (12) obj. -19.7355 iterations 9
Cbc0038I Pass  53: suminf.    1.97303 (11) obj. -21.1535 iterations 3
Cbc0038I Pass  54: suminf.    2.11247 (6) obj. -19.7355 iterations 15
Cbc0038I Pass  55: suminf.    1.63948 (5) obj. -19.7355 iterations 8
Cbc0038I Pass  56: suminf.    1.42639 (5) obj. -20.3748 iterations 2
Cbc0038I Pass  57: suminf.    2.11247 (6) obj. -19.7355 iterations 8
Cbc0038I Pass  58: suminf.    2.96880 (15) obj. -19.7355 iterations 15
Cbc0038I Pass  59: suminf.    2.96880 (15) obj. -19.7355 iterations 0
Cbc0038I Pass  60: suminf.    0.98594 (5) obj. -19.7355 iterations 11
Cbc0038I Pass  61: suminf.    0.92499 (5) obj. -19.9184 iterations 4
Cbc0038I Pass  62: suminf.    1.80936 (6) obj. -19.7355 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 70 rows 84 columns, reduced to 42 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.09398 - took 0.04 seconds
Cbc0012I Integer solution of -8.09398 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 70 rows 84 columns, reduced to 16 rows 20 columns
Cbc0031I 47 added rows had average density of 31.085106
Cbc0013I At root node, 47 cuts changed objective from -54.169926 to -18.091143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8661 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1262 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 159 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1290 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 403 row cuts average 43.5 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.653 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.09398 best solution, best possible -18.091143 (2.02 seconds)
Cbc0012I Integer solution of -8.53532 found by rounding after 4924 iterations and 20 nodes (2.27 seconds)
Cbc0016I Integer solution of -10.09404 found by strong branching after 4983 iterations and 23 nodes (2.28 seconds)
Cbc0001I Search completed - best objective -10.09403999999999, took 5811 iterations and 42 nodes (2.35 seconds)
Cbc0032I Strong branching done 624 times (10034 iterations), fathomed 8 nodes and fixed 1 variables
Cbc0035I Maximum depth 16, 96 variables fixed on reduced cost
Total time (CPU seconds):       1.82   (Wallclock seconds):       2.36

