Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 506 (-21) rows, 262 (-2) columns and 1504 (-41) elements
Clp1000I sum of infeasibilities 1.02119e-05 - average 2.01817e-08, 89 fixed columns
Coin0506I Presolve 330 (-176) rows, 173 (-89) columns and 982 (-522) elements
Clp0029I End of values pass after 173 iterations
Clp0014I Perturbing problem by 0.001% of 2.1454619 - largest nonzero change 0 ( 0%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Coin0511I After Postsolve, objective 150.98551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Coin0511I After Postsolve, objective 150.98551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.9855062 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 506 rows, 262 columns (261 integer (261 of which binary)) and 1504 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 13.4449
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.98476 iterations 167
Cbc0038I Solution found of -3.98476
Cbc0038I Relaxing continuous gives -3.98476
Cbc0038I Rounding solution of -30.4078 is better than previous of -3.98476

Cbc0038I Before mini branch and bound, 203 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 99 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -30.4078 to -78.7017 (0.08 seconds)
Cbc0038I Round again with cutoff of -85.9301
Cbc0038I Pass   2: suminf.    3.29744 (12) obj. -85.9301 iterations 39
Cbc0038I Pass   3: suminf.    3.29744 (12) obj. -85.9301 iterations 0
Cbc0038I Pass   4: suminf.    2.27583 (7) obj. -85.9301 iterations 29
Cbc0038I Pass   5: suminf.    2.04938 (8) obj. -85.9301 iterations 17
Cbc0038I Pass   6: suminf.    1.45532 (7) obj. -85.9301 iterations 40
Cbc0038I Pass   7: suminf.    1.44840 (8) obj. -85.9301 iterations 13
Cbc0038I Pass   8: suminf.    1.87761 (7) obj. -85.9301 iterations 25
Cbc0038I Pass   9: suminf.    1.21778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  10: suminf.    1.99829 (6) obj. -85.9301 iterations 8
Cbc0038I Pass  11: suminf.    0.90778 (6) obj. -85.9301 iterations 17
Cbc0038I Pass  12: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  13: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I Pass  14: suminf.    1.36013 (6) obj. -85.9301 iterations 5
Cbc0038I Pass  15: suminf.    1.20593 (7) obj. -85.9301 iterations 27
Cbc0038I Pass  16: suminf.    1.20593 (7) obj. -85.9301 iterations 6
Cbc0038I Pass  17: suminf.    1.83369 (5) obj. -85.9301 iterations 19
Cbc0038I Pass  18: suminf.    1.64572 (6) obj. -85.9301 iterations 9
Cbc0038I Pass  19: suminf.    1.82770 (6) obj. -85.9301 iterations 12
Cbc0038I Pass  20: suminf.    0.90778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  21: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  22: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I Pass  23: suminf.    1.36013 (6) obj. -85.9301 iterations 5
Cbc0038I Pass  24: suminf.    1.20593 (7) obj. -85.9301 iterations 27
Cbc0038I Pass  25: suminf.    1.20593 (7) obj. -85.9301 iterations 6
Cbc0038I Pass  26: suminf.    1.83369 (5) obj. -85.9301 iterations 19
Cbc0038I Pass  27: suminf.    1.64572 (6) obj. -85.9301 iterations 9
Cbc0038I Pass  28: suminf.    1.82770 (6) obj. -85.9301 iterations 12
Cbc0038I Pass  29: suminf.    0.90778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  30: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  31: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 117 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -78.7017 to -85.2409 (0.15 seconds)
Cbc0038I Round again with cutoff of -98.9412
Cbc0038I Pass  31: suminf.    3.81980 (14) obj. -98.9412 iterations 12
Cbc0038I Pass  32: suminf.    3.79485 (13) obj. -98.9412 iterations 13
Cbc0038I Pass  33: suminf.    3.55550 (10) obj. -98.9412 iterations 34
Cbc0038I Pass  34: suminf.    3.13986 (12) obj. -98.9412 iterations 20
Cbc0038I Pass  35: suminf.    3.14088 (12) obj. -98.9412 iterations 1
Cbc0038I Pass  36: suminf.    2.18963 (7) obj. -98.9412 iterations 28
Cbc0038I Pass  37: suminf.    2.18646 (7) obj. -98.9412 iterations 2
Cbc0038I Pass  38: suminf.    2.05811 (9) obj. -98.9412 iterations 20
Cbc0038I Pass  39: suminf.    2.05124 (8) obj. -98.9412 iterations 5
Cbc0038I Pass  40: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  41: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  42: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  43: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  44: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  45: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  46: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  47: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  48: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  49: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  50: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  51: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  52: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  53: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  54: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  55: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  56: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  57: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  58: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  59: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  60: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 121 rows 71 columns
Cbc0038I Mini branch and bound improved solution from -85.2409 to -86.7167 (0.22 seconds)
Cbc0038I Round again with cutoff of -114.554
Cbc0038I Pass  60: suminf.    5.53654 (15) obj. -114.554 iterations 19
Cbc0038I Pass  61: suminf.    4.80440 (21) obj. -114.554 iterations 21
Cbc0038I Pass  62: suminf.    4.89021 (14) obj. -114.554 iterations 33
Cbc0038I Pass  63: suminf.    4.19026 (16) obj. -114.554 iterations 15
Cbc0038I Pass  64: suminf.    4.09749 (14) obj. -114.554 iterations 9
Cbc0038I Pass  65: suminf.    3.93085 (13) obj. -114.554 iterations 38
Cbc0038I Pass  66: suminf.    3.93085 (13) obj. -114.554 iterations 2
Cbc0038I Pass  67: suminf.    4.15071 (12) obj. -114.554 iterations 22
Cbc0038I Pass  68: suminf.    3.82010 (13) obj. -114.554 iterations 5
Cbc0038I Pass  69: suminf.    3.06838 (11) obj. -114.554 iterations 2
Cbc0038I Pass  70: suminf.    2.82615 (12) obj. -114.554 iterations 11
Cbc0038I Pass  71: suminf.    4.14267 (15) obj. -114.554 iterations 43
Cbc0038I Pass  72: suminf.    3.96767 (13) obj. -114.554 iterations 10
Cbc0038I Pass  73: suminf.    4.02773 (13) obj. -114.554 iterations 27
Cbc0038I Pass  74: suminf.    3.65785 (12) obj. -114.554 iterations 15
Cbc0038I Pass  75: suminf.    3.20566 (12) obj. -114.554 iterations 3
Cbc0038I Pass  76: suminf.    4.72176 (16) obj. -114.554 iterations 36
Cbc0038I Pass  77: suminf.    3.95558 (15) obj. -114.554 iterations 13
Cbc0038I Pass  78: suminf.    3.50763 (14) obj. -114.554 iterations 4
Cbc0038I Pass  79: suminf.    3.45543 (12) obj. -114.554 iterations 9
Cbc0038I Pass  80: suminf.    4.15690 (13) obj. -114.554 iterations 30
Cbc0038I Pass  81: suminf.    3.14783 (11) obj. -114.554 iterations 22
Cbc0038I Pass  82: suminf.    3.14783 (11) obj. -114.554 iterations 1
Cbc0038I Pass  83: suminf.    4.75193 (15) obj. -114.554 iterations 34
Cbc0038I Pass  84: suminf.    4.24799 (16) obj. -114.554 iterations 18
Cbc0038I Pass  85: suminf.    3.84242 (14) obj. -114.554 iterations 15
Cbc0038I Pass  86: suminf.    4.22545 (13) obj. -114.554 iterations 28
Cbc0038I Pass  87: suminf.    3.56399 (15) obj. -114.554 iterations 7
Cbc0038I Pass  88: suminf.    3.52911 (13) obj. -114.554 iterations 4
Cbc0038I Pass  89: suminf.    3.93085 (13) obj. -114.554 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 117 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of -86.7167 - took 0.31 seconds
Cbc0012I Integer solution of -86.71674 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 102 rows 61 columns
Cbc0012I Integer solution of -86.96552 found by RINS after 0 iterations and 0 nodes (0.40 seconds)
Cbc0031I 41 added rows had average density of 152.68293
Cbc0013I At root node, 41 cuts changed objective from -150.98551 to -135.83507 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 36885 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.484 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3480 row cuts average 257.9 elements, 0 column cuts (0 active)  in 0.445 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.474 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 253.0 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -86.96552 best solution, best possible -135.83507 (5.40 seconds)
Cbc0010I After 18 nodes, 11 on tree, -86.96552 best solution, best possible -135.83507 (6.12 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 35 rows 27 columns
Cbc0012I Integer solution of -87.61648 found by rounding after 24824 iterations and 56 nodes (6.58 seconds)
Cbc0010I After 80 nodes, 18 on tree, -87.61648 best solution, best possible -135.83507 (6.82 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -88.84227 found by rounding after 27722 iterations and 110 nodes (7.01 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 2 rows 3 columns
Cbc0010I After 229 nodes, 20 on tree, -88.84227 best solution, best possible -135.83507 (7.52 seconds)
Cbc0012I Integer solution of -88.93012 found by rounding after 35435 iterations and 297 nodes (7.82 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 9 columns
Cbc0012I Integer solution of -88.9703 found by RINS after 35596 iterations and 300 nodes (7.85 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -89.82445 found by RINS after 39579 iterations and 400 nodes (8.21 seconds)
Cbc0010I After 402 nodes, 17 on tree, -89.82445 best solution, best possible -135.83507 (8.23 seconds)
Cbc0010I After 569 nodes, 9 on tree, -89.82445 best solution, best possible -135.83507 (8.93 seconds)
Cbc0001I Search completed - best objective -89.82444999999998, took 48207 iterations and 588 nodes (9.02 seconds)
Cbc0032I Strong branching done 3838 times (89978 iterations), fathomed 46 nodes and fixed 222 variables
Cbc0035I Maximum depth 65, 3122 variables fixed on reduced cost
Total time (CPU seconds):       8.83   (Wallclock seconds):       9.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 354 (-172) rows, 370 (-154) columns and 15937 (-19799) elements
Clp1000I sum of infeasibilities 1.15631e-05 - average 3.26641e-08, 210 fixed columns
Coin0506I Presolve 138 (-216) rows, 156 (-214) columns and 570 (-15367) elements
Clp0006I 0  Obj 45.487205 Dual inf 19.635717 (156)
Clp0029I End of values pass after 156 iterations
Clp0014I Perturbing problem by 0.001% of 1.4737686 - largest nonzero change 2.7205954e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 47.017836
Clp0000I Optimal - objective value 47.017836
Coin0511I After Postsolve, objective 47.017836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.017836 Dual inf 175.41159 (110)
Clp0014I Perturbing problem by 0.001% of 1.915617 - largest nonzero change 2.2241456e-05 ( 0.0015823696%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 210.37346
Clp0000I Optimal - objective value 210.37346
Clp0000I Optimal - objective value 210.37346
Coin0511I After Postsolve, objective 210.37346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 210.3734633 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0004I processed model has 354 rows, 370 columns (370 integer (370 of which binary)) and 15937 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.638%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 109 integers unsatisfied sum - 7.09637
Cbc0038I Pass   1: suminf.    2.96134 (83) obj. -174.02 iterations 36
Cbc0038I Pass   2: suminf.    2.96134 (83) obj. -174.02 iterations 2
Cbc0038I Pass   3: suminf.    2.05060 (66) obj. -114.628 iterations 17
Cbc0038I Pass   4: suminf.    1.55604 (54) obj. -102.162 iterations 12
Cbc0038I Pass   5: suminf.    1.09611 (42) obj. -88.6991 iterations 12
Cbc0038I Pass   6: suminf.    0.31399 (18) obj. -64.5173 iterations 24
Cbc0038I Solution found of -46.8313
Cbc0038I Rounding solution of -63.5407 is better than previous of -46.8313

Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 26 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -78.2241
Cbc0038I Pass   7: suminf.    2.96134 (83) obj. -174.02 iterations 0
Cbc0038I Pass   8: suminf.    2.96134 (83) obj. -174.02 iterations 2
Cbc0038I Pass   9: suminf.    2.05060 (66) obj. -114.628 iterations 17
Cbc0038I Pass  10: suminf.    1.40020 (50) obj. -97.3569 iterations 16
Cbc0038I Pass  11: suminf.    0.74288 (33) obj. -78.2241 iterations 19
Cbc0038I Pass  12: suminf.    0.49169 (13) obj. -78.2241 iterations 20
Cbc0038I Pass  13: suminf.    0.25265 (13) obj. -84.9171 iterations 1
Cbc0038I Pass  14: suminf.    0.25685 (3) obj. -78.2241 iterations 12
Cbc0038I Pass  15: suminf.    0.25685 (3) obj. -78.2241 iterations 0
Cbc0038I Pass  16: suminf.    0.42603 (2) obj. -78.2241 iterations 3
Cbc0038I Pass  17: suminf.    0.28848 (2) obj. -78.2241 iterations 1
Cbc0038I Pass  18: suminf.    1.07452 (16) obj. -80.2067 iterations 64
Cbc0038I Pass  19: suminf.    0.75900 (16) obj. -78.2241 iterations 12
Cbc0038I Pass  20: suminf.    0.79808 (4) obj. -78.2241 iterations 22
Cbc0038I Pass  21: suminf.    0.71137 (3) obj. -78.2241 iterations 2
Cbc0038I Pass  22: suminf.    0.82974 (5) obj. -78.2241 iterations 11
Cbc0038I Pass  23: suminf.    0.55193 (3) obj. -78.2241 iterations 24
Cbc0038I Pass  24: suminf.    0.58954 (3) obj. -78.2241 iterations 2
Cbc0038I Pass  25: suminf.    1.55522 (18) obj. -78.2241 iterations 74
Cbc0038I Pass  26: suminf.    1.08325 (19) obj. -78.2241 iterations 20
Cbc0038I Pass  27: suminf.    0.52504 (21) obj. -78.2241 iterations 22
Cbc0038I Pass  28: suminf.    0.52504 (21) obj. -78.2241 iterations 1
Cbc0038I Pass  29: suminf.    1.10658 (5) obj. -78.2241 iterations 30
Cbc0038I Pass  30: suminf.    0.87367 (4) obj. -78.2241 iterations 3
Cbc0038I Pass  31: suminf.    0.44776 (4) obj. -80.5331 iterations 2
Cbc0038I Pass  32: suminf.    0.69580 (3) obj. -78.2241 iterations 23
Cbc0038I Pass  33: suminf.    0.69580 (3) obj. -78.2241 iterations 0
Cbc0038I Pass  34: suminf.    0.59939 (3) obj. -78.2241 iterations 13
Cbc0038I Pass  35: suminf.    0.11709 (2) obj. -79.024 iterations 9
Cbc0038I Pass  36: suminf.    0.69580 (3) obj. -78.2241 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 237 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 116 rows 133 columns - 24 fixed gives 94, 109 - ok now
Cbc0038I Full problem 354 rows 370 columns, reduced to 33 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -46.8313 to -65.0608 (0.22 seconds)
Cbc0038I Round again with cutoff of -104.654
Cbc0038I Pass  36: suminf.    2.96134 (83) obj. -174.02 iterations 0
Cbc0038I Pass  37: suminf.    2.96134 (83) obj. -174.02 iterations 2
Cbc0038I Pass  38: suminf.    1.75259 (59) obj. -107.926 iterations 24
Cbc0038I Pass  39: suminf.    0.99708 (36) obj. -104.654 iterations 27
Cbc0038I Pass  40: suminf.    0.90379 (36) obj. -107.266 iterations 1
Cbc0038I Pass  41: suminf.    0.88585 (27) obj. -104.654 iterations 13
Cbc0038I Pass  42: suminf.    0.88585 (27) obj. -104.654 iterations 0
Cbc0038I Pass  43: suminf.    0.35315 (5) obj. -104.654 iterations 34
Cbc0038I Pass  44: suminf.    0.35125 (5) obj. -104.654 iterations 1
Cbc0038I Pass  45: suminf.    0.47215 (18) obj. -104.654 iterations 12
Cbc0038I Pass  46: suminf.    0.47215 (18) obj. -104.654 iterations 8
Cbc0038I Pass  47: suminf.    1.18577 (11) obj. -104.654 iterations 26
Cbc0038I Pass  48: suminf.    0.93305 (11) obj. -106.676 iterations 9
Cbc0038I Pass  49: suminf.    1.32180 (6) obj. -104.654 iterations 41
Cbc0038I Pass  50: suminf.    0.89372 (6) obj. -106.366 iterations 11
Cbc0038I Pass  51: suminf.    2.39033 (22) obj. -104.654 iterations 48
Cbc0038I Pass  52: suminf.    1.35218 (27) obj. -104.654 iterations 17
Cbc0038I Pass  53: suminf.    2.25040 (13) obj. -104.654 iterations 55
Cbc0038I Pass  54: suminf.    2.02162 (12) obj. -104.654 iterations 8
Cbc0038I Pass  55: suminf.    1.92021 (12) obj. -104.654 iterations 5
Cbc0038I Pass  56: suminf.    1.98953 (11) obj. -104.654 iterations 20
Cbc0038I Pass  57: suminf.    1.56708 (11) obj. -104.654 iterations 11
Cbc0038I Pass  58: suminf.    1.69540 (10) obj. -104.654 iterations 11
Cbc0038I Pass  59: suminf.    1.51031 (11) obj. -104.654 iterations 13
Cbc0038I Pass  60: suminf.    1.51031 (11) obj. -104.654 iterations 7
Cbc0038I Pass  61: suminf.    2.06268 (11) obj. -104.654 iterations 17
Cbc0038I Pass  62: suminf.    1.47712 (10) obj. -104.654 iterations 10
Cbc0038I Pass  63: suminf.    1.98443 (10) obj. -104.654 iterations 14
Cbc0038I Pass  64: suminf.    1.98443 (10) obj. -104.654 iterations 0
Cbc0038I Pass  65: suminf.    1.55031 (13) obj. -104.654 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 54 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -65.0608 - took 0.20 seconds
Cbc0012I Integer solution of -65.060775 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 21 rows 25 columns
Cbc0031I 125 added rows had average density of 75.504
Cbc0013I At root node, 125 cuts changed objective from -210.37346 to -111.03535 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 30134 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.430 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3392 row cuts average 356.0 elements, 0 column cuts (0 active)  in 1.068 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 383 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4917 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.590 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2574 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.863 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 366 row cuts average 225.7 elements, 0 column cuts (0 active)  in 0.238 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 203 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.397 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -65.060775 best solution, best possible -111.03535 (7.90 seconds)
Cbc0010I After 2 nodes, 3 on tree, -65.060775 best solution, best possible -111.03535 (8.68 seconds)
Cbc0012I Integer solution of -79.29965 found by rounding after 15858 iterations and 3 nodes (8.70 seconds)
Cbc0012I Integer solution of -80.91982 found by DiveCoefficient after 16011 iterations and 5 nodes (8.75 seconds)
Cbc0012I Integer solution of -82.33947 found by DiveCoefficient after 16033 iterations and 6 nodes (8.78 seconds)
Cbc0012I Integer solution of -84.67232 found by DiveCoefficient after 16054 iterations and 6 nodes (8.80 seconds)
Cbc0016I Integer solution of -85.05942 found by strong branching after 16200 iterations and 13 nodes (8.90 seconds)
Cbc0010I After 20 nodes, 5 on tree, -85.05942 best solution, best possible -111.03535 (9.50 seconds)
Cbc0012I Integer solution of -85.16515 found by rounding after 16778 iterations and 25 nodes (10.05 seconds)
Cbc0010I After 33 nodes, 13 on tree, -85.16515 best solution, best possible -111.03535 (10.20 seconds)
Cbc0012I Integer solution of -86.86746 found by rounding after 17388 iterations and 36 nodes (10.28 seconds)
Cbc0012I Integer solution of -87.06609 found by rounding after 17638 iterations and 39 nodes (10.34 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 1 rows 4 columns
Cbc0012I Integer solution of -88.22199 found by RINS after 17777 iterations and 41 nodes (10.41 seconds)
Cbc0012I Integer solution of -88.81623 found by rounding after 17902 iterations and 47 nodes (10.46 seconds)
Cbc0012I Integer solution of -88.98035 found by rounding after 18132 iterations and 52 nodes (10.58 seconds)
Cbc0012I Integer solution of -89.82445 found by rounding after 19149 iterations and 73 nodes (10.80 seconds)
Cbc0010I After 82 nodes, 11 on tree, -89.82445 best solution, best possible -111.03535 (10.91 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 74 rows 91 columns
Cbc0010I After 95 nodes, 8 on tree, -89.82445 best solution, best possible -111.03535 (11.61 seconds)
Cbc0010I After 116 nodes, 10 on tree, -89.82445 best solution, best possible -111.03535 (12.33 seconds)
Cbc0010I After 183 nodes, 8 on tree, -89.82445 best solution, best possible -111.03535 (13.04 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 14 rows 25 columns
Cbc0010I After 200 nodes, 7 on tree, -89.82445 best solution, best possible -111.03535 (13.81 seconds)
Cbc0010I After 281 nodes, 7 on tree, -89.82445 best solution, best possible -111.03535 (14.51 seconds)
Cbc0010I After 322 nodes, 9 on tree, -89.82445 best solution, best possible -111.03535 (15.22 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 78 rows 100 columns
Cbc0010I After 401 nodes, 12 on tree, -89.82445 best solution, best possible -111.03535 (16.28 seconds)
Cbc0010I After 447 nodes, 18 on tree, -89.82445 best solution, best possible -111.03535 (17.00 seconds)
Cbc0010I After 499 nodes, 17 on tree, -89.82445 best solution, best possible -111.03535 (17.70 seconds)
Cbc0010I After 547 nodes, 18 on tree, -89.82445 best solution, best possible -111.03535 (18.41 seconds)
Cbc0010I After 588 nodes, 19 on tree, -89.82445 best solution, best possible -111.03535 (19.12 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 78 rows 99 columns
Cbc0010I After 615 nodes, 19 on tree, -89.82445 best solution, best possible -111.03535 (19.85 seconds)
Cbc0010I After 672 nodes, 21 on tree, -89.82445 best solution, best possible -111.03535 (20.56 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 62 rows 78 columns
Cbc0010I After 720 nodes, 24 on tree, -89.82445 best solution, best possible -111.03535 (21.27 seconds)
Cbc0010I After 763 nodes, 22 on tree, -89.82445 best solution, best possible -111.03535 (21.97 seconds)
Cbc0010I After 831 nodes, 12 on tree, -89.82445 best solution, best possible -111.03535 (22.69 seconds)
Cbc0010I After 875 nodes, 9 on tree, -89.82445 best solution, best possible -111.03535 (23.40 seconds)
Cbc0001I Search completed - best objective -89.82444999999998, took 68125 iterations and 902 nodes (23.73 seconds)
Cbc0032I Strong branching done 3642 times (70976 iterations), fathomed 28 nodes and fixed 103 variables
Cbc0035I Maximum depth 34, 6382 variables fixed on reduced cost
Total time (CPU seconds):       22.97   (Wallclock seconds):       23.84

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 506 (-21) rows, 262 (-2) columns and 1504 (-41) elements
Clp1000I sum of infeasibilities 1.02119e-05 - average 2.01817e-08, 89 fixed columns
Coin0506I Presolve 330 (-176) rows, 173 (-89) columns and 982 (-522) elements
Clp0029I End of values pass after 173 iterations
Clp0014I Perturbing problem by 0.001% of 2.1454619 - largest nonzero change 0 ( 0%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Coin0511I After Postsolve, objective 150.98551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Clp0000I Optimal - objective value 150.98551
Coin0511I After Postsolve, objective 150.98551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 150.9855062 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 506 rows, 262 columns (261 integer (261 of which binary)) and 1504 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 13.4449
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.98476 iterations 167
Cbc0038I Solution found of -3.98476
Cbc0038I Relaxing continuous gives -3.98476
Cbc0038I Rounding solution of -30.4078 is better than previous of -3.98476

Cbc0038I Before mini branch and bound, 203 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 99 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -30.4078 to -78.7017 (0.08 seconds)
Cbc0038I Round again with cutoff of -85.9301
Cbc0038I Pass   2: suminf.    3.29744 (12) obj. -85.9301 iterations 39
Cbc0038I Pass   3: suminf.    3.29744 (12) obj. -85.9301 iterations 0
Cbc0038I Pass   4: suminf.    2.27583 (7) obj. -85.9301 iterations 29
Cbc0038I Pass   5: suminf.    2.04938 (8) obj. -85.9301 iterations 17
Cbc0038I Pass   6: suminf.    1.45532 (7) obj. -85.9301 iterations 40
Cbc0038I Pass   7: suminf.    1.44840 (8) obj. -85.9301 iterations 13
Cbc0038I Pass   8: suminf.    1.87761 (7) obj. -85.9301 iterations 25
Cbc0038I Pass   9: suminf.    1.21778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  10: suminf.    1.99829 (6) obj. -85.9301 iterations 8
Cbc0038I Pass  11: suminf.    0.90778 (6) obj. -85.9301 iterations 17
Cbc0038I Pass  12: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  13: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I Pass  14: suminf.    1.36013 (6) obj. -85.9301 iterations 5
Cbc0038I Pass  15: suminf.    1.20593 (7) obj. -85.9301 iterations 27
Cbc0038I Pass  16: suminf.    1.20593 (7) obj. -85.9301 iterations 6
Cbc0038I Pass  17: suminf.    1.83369 (5) obj. -85.9301 iterations 19
Cbc0038I Pass  18: suminf.    1.64572 (6) obj. -85.9301 iterations 9
Cbc0038I Pass  19: suminf.    1.82770 (6) obj. -85.9301 iterations 12
Cbc0038I Pass  20: suminf.    0.90778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  21: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  22: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I Pass  23: suminf.    1.36013 (6) obj. -85.9301 iterations 5
Cbc0038I Pass  24: suminf.    1.20593 (7) obj. -85.9301 iterations 27
Cbc0038I Pass  25: suminf.    1.20593 (7) obj. -85.9301 iterations 6
Cbc0038I Pass  26: suminf.    1.83369 (5) obj. -85.9301 iterations 19
Cbc0038I Pass  27: suminf.    1.64572 (6) obj. -85.9301 iterations 9
Cbc0038I Pass  28: suminf.    1.82770 (6) obj. -85.9301 iterations 12
Cbc0038I Pass  29: suminf.    0.90778 (6) obj. -85.9301 iterations 14
Cbc0038I Pass  30: suminf.    0.87496 (5) obj. -85.9301 iterations 6
Cbc0038I Pass  31: suminf.    1.80428 (5) obj. -85.9301 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 117 rows 69 columns
Cbc0038I Mini branch and bound improved solution from -78.7017 to -85.2409 (0.16 seconds)
Cbc0038I Round again with cutoff of -98.9412
Cbc0038I Pass  31: suminf.    3.81980 (14) obj. -98.9412 iterations 12
Cbc0038I Pass  32: suminf.    3.79485 (13) obj. -98.9412 iterations 13
Cbc0038I Pass  33: suminf.    3.55550 (10) obj. -98.9412 iterations 34
Cbc0038I Pass  34: suminf.    3.13986 (12) obj. -98.9412 iterations 20
Cbc0038I Pass  35: suminf.    3.14088 (12) obj. -98.9412 iterations 1
Cbc0038I Pass  36: suminf.    2.18963 (7) obj. -98.9412 iterations 28
Cbc0038I Pass  37: suminf.    2.18646 (7) obj. -98.9412 iterations 2
Cbc0038I Pass  38: suminf.    2.05811 (9) obj. -98.9412 iterations 20
Cbc0038I Pass  39: suminf.    2.05124 (8) obj. -98.9412 iterations 5
Cbc0038I Pass  40: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  41: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  42: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  43: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  44: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  45: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  46: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  47: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  48: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  49: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  50: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  51: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  52: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  53: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  54: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I Pass  55: suminf.    1.65839 (7) obj. -98.9412 iterations 8
Cbc0038I Pass  56: suminf.    2.08553 (8) obj. -98.9412 iterations 22
Cbc0038I Pass  57: suminf.    2.05124 (8) obj. -98.9412 iterations 12
Cbc0038I Pass  58: suminf.    2.30431 (8) obj. -98.9412 iterations 17
Cbc0038I Pass  59: suminf.    2.12380 (8) obj. -98.9412 iterations 14
Cbc0038I Pass  60: suminf.    2.19218 (7) obj. -98.9412 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 121 rows 71 columns
Cbc0038I Mini branch and bound improved solution from -85.2409 to -86.7167 (0.23 seconds)
Cbc0038I Round again with cutoff of -114.554
Cbc0038I Pass  60: suminf.    5.53654 (15) obj. -114.554 iterations 19
Cbc0038I Pass  61: suminf.    4.80440 (21) obj. -114.554 iterations 21
Cbc0038I Pass  62: suminf.    4.89021 (14) obj. -114.554 iterations 33
Cbc0038I Pass  63: suminf.    4.19026 (16) obj. -114.554 iterations 15
Cbc0038I Pass  64: suminf.    4.09749 (14) obj. -114.554 iterations 9
Cbc0038I Pass  65: suminf.    3.93085 (13) obj. -114.554 iterations 38
Cbc0038I Pass  66: suminf.    3.93085 (13) obj. -114.554 iterations 2
Cbc0038I Pass  67: suminf.    4.15071 (12) obj. -114.554 iterations 22
Cbc0038I Pass  68: suminf.    3.82010 (13) obj. -114.554 iterations 5
Cbc0038I Pass  69: suminf.    3.06838 (11) obj. -114.554 iterations 2
Cbc0038I Pass  70: suminf.    2.82615 (12) obj. -114.554 iterations 11
Cbc0038I Pass  71: suminf.    4.14267 (15) obj. -114.554 iterations 43
Cbc0038I Pass  72: suminf.    3.96767 (13) obj. -114.554 iterations 10
Cbc0038I Pass  73: suminf.    4.02773 (13) obj. -114.554 iterations 27
Cbc0038I Pass  74: suminf.    3.65785 (12) obj. -114.554 iterations 15
Cbc0038I Pass  75: suminf.    3.20566 (12) obj. -114.554 iterations 3
Cbc0038I Pass  76: suminf.    4.72176 (16) obj. -114.554 iterations 36
Cbc0038I Pass  77: suminf.    3.95558 (15) obj. -114.554 iterations 13
Cbc0038I Pass  78: suminf.    3.50763 (14) obj. -114.554 iterations 4
Cbc0038I Pass  79: suminf.    3.45543 (12) obj. -114.554 iterations 9
Cbc0038I Pass  80: suminf.    4.15690 (13) obj. -114.554 iterations 30
Cbc0038I Pass  81: suminf.    3.14783 (11) obj. -114.554 iterations 22
Cbc0038I Pass  82: suminf.    3.14783 (11) obj. -114.554 iterations 1
Cbc0038I Pass  83: suminf.    4.75193 (15) obj. -114.554 iterations 34
Cbc0038I Pass  84: suminf.    4.24799 (16) obj. -114.554 iterations 18
Cbc0038I Pass  85: suminf.    3.84242 (14) obj. -114.554 iterations 15
Cbc0038I Pass  86: suminf.    4.22545 (13) obj. -114.554 iterations 28
Cbc0038I Pass  87: suminf.    3.56399 (15) obj. -114.554 iterations 7
Cbc0038I Pass  88: suminf.    3.52911 (13) obj. -114.554 iterations 4
Cbc0038I Pass  89: suminf.    3.93085 (13) obj. -114.554 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 506 rows 262 columns, reduced to 117 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
Cbc0038I After 0.35 seconds - Feasibility pump exiting with objective of -86.7167 - took 0.32 seconds
Cbc0012I Integer solution of -86.71674 found by feasibility pump after 0 iterations and 0 nodes (0.35 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 102 rows 61 columns
Cbc0012I Integer solution of -86.96552 found by RINS after 0 iterations and 0 nodes (0.42 seconds)
Cbc0031I 41 added rows had average density of 152.68293
Cbc0013I At root node, 41 cuts changed objective from -150.98551 to -135.83507 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 36885 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.485 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3480 row cuts average 257.9 elements, 0 column cuts (0 active)  in 0.447 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.480 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 253.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -86.96552 best solution, best possible -135.83507 (5.45 seconds)
Cbc0010I After 18 nodes, 11 on tree, -86.96552 best solution, best possible -135.83507 (6.17 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 35 rows 27 columns
Cbc0012I Integer solution of -87.61648 found by rounding after 24824 iterations and 56 nodes (6.64 seconds)
Cbc0010I After 78 nodes, 20 on tree, -87.61648 best solution, best possible -135.83507 (6.87 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -88.84227 found by rounding after 27722 iterations and 110 nodes (7.06 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 2 rows 3 columns
Cbc0010I After 225 nodes, 22 on tree, -88.84227 best solution, best possible -135.83507 (7.57 seconds)
Cbc0012I Integer solution of -88.93012 found by rounding after 35435 iterations and 297 nodes (7.88 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 9 columns
Cbc0012I Integer solution of -88.9703 found by RINS after 35596 iterations and 300 nodes (7.90 seconds)
Cbc0038I Full problem 506 rows 262 columns, reduced to 4 rows 6 columns
Cbc0012I Integer solution of -89.82445 found by RINS after 39579 iterations and 400 nodes (8.27 seconds)
Cbc0010I After 401 nodes, 17 on tree, -89.82445 best solution, best possible -135.83507 (8.27 seconds)
Cbc0010I After 569 nodes, 9 on tree, -89.82445 best solution, best possible -135.83507 (8.97 seconds)
Cbc0001I Search completed - best objective -89.82444999999998, took 48207 iterations and 588 nodes (9.06 seconds)
Cbc0032I Strong branching done 3838 times (89978 iterations), fathomed 46 nodes and fixed 222 variables
Cbc0035I Maximum depth 65, 3122 variables fixed on reduced cost
Total time (CPU seconds):       8.87   (Wallclock seconds):       9.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 354 (-173) rows, 370 (-155) columns and 15937 (-19800) elements
Clp1000I sum of infeasibilities 1.15631e-05 - average 3.26641e-08, 210 fixed columns
Coin0506I Presolve 138 (-216) rows, 156 (-214) columns and 570 (-15367) elements
Clp0006I 0  Obj 45.487205 Dual inf 19.635717 (156)
Clp0029I End of values pass after 156 iterations
Clp0014I Perturbing problem by 0.001% of 1.4737686 - largest nonzero change 2.7205954e-05 ( 0.0016756202%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 47.017836
Clp0000I Optimal - objective value 47.017836
Coin0511I After Postsolve, objective 47.017836, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.017836 Dual inf 175.41159 (110)
Clp0014I Perturbing problem by 0.001% of 1.915617 - largest nonzero change 2.2241456e-05 ( 0.0015823696%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 210.37346
Clp0000I Optimal - objective value 210.37346
Clp0000I Optimal - objective value 210.37346
Coin0511I After Postsolve, objective 210.37346, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 210.3734633 - 0 iterations time 0.112, Presolve 0.00, Idiot 0.10

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 354 rows, 370 columns (370 integer (370 of which binary)) and 15937 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.638%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 109 integers unsatisfied sum - 7.09637
Cbc0038I Pass   1: suminf.    2.96134 (83) obj. -174.02 iterations 36
Cbc0038I Pass   2: suminf.    2.96134 (83) obj. -174.02 iterations 2
Cbc0038I Pass   3: suminf.    2.05060 (66) obj. -114.628 iterations 17
Cbc0038I Pass   4: suminf.    1.55604 (54) obj. -102.162 iterations 12
Cbc0038I Pass   5: suminf.    1.09611 (42) obj. -88.6991 iterations 12
Cbc0038I Pass   6: suminf.    0.31399 (18) obj. -64.5173 iterations 24
Cbc0038I Solution found of -46.8313
Cbc0038I Rounding solution of -63.5407 is better than previous of -46.8313

Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 26 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -78.2241
Cbc0038I Pass   7: suminf.    2.96134 (83) obj. -174.02 iterations 0
Cbc0038I Pass   8: suminf.    2.96134 (83) obj. -174.02 iterations 2
Cbc0038I Pass   9: suminf.    2.05060 (66) obj. -114.628 iterations 17
Cbc0038I Pass  10: suminf.    1.40020 (50) obj. -97.3569 iterations 16
Cbc0038I Pass  11: suminf.    0.74288 (33) obj. -78.2241 iterations 19
Cbc0038I Pass  12: suminf.    0.49169 (13) obj. -78.2241 iterations 20
Cbc0038I Pass  13: suminf.    0.25265 (13) obj. -84.9171 iterations 1
Cbc0038I Pass  14: suminf.    0.25685 (3) obj. -78.2241 iterations 12
Cbc0038I Pass  15: suminf.    0.25685 (3) obj. -78.2241 iterations 0
Cbc0038I Pass  16: suminf.    0.42603 (2) obj. -78.2241 iterations 3
Cbc0038I Pass  17: suminf.    0.28848 (2) obj. -78.2241 iterations 1
Cbc0038I Pass  18: suminf.    1.07452 (16) obj. -80.2067 iterations 64
Cbc0038I Pass  19: suminf.    0.75900 (16) obj. -78.2241 iterations 12
Cbc0038I Pass  20: suminf.    0.79808 (4) obj. -78.2241 iterations 22
Cbc0038I Pass  21: suminf.    0.71137 (3) obj. -78.2241 iterations 2
Cbc0038I Pass  22: suminf.    0.82974 (5) obj. -78.2241 iterations 11
Cbc0038I Pass  23: suminf.    0.55193 (3) obj. -78.2241 iterations 24
Cbc0038I Pass  24: suminf.    0.58954 (3) obj. -78.2241 iterations 2
Cbc0038I Pass  25: suminf.    1.55522 (18) obj. -78.2241 iterations 74
Cbc0038I Pass  26: suminf.    1.08325 (19) obj. -78.2241 iterations 20
Cbc0038I Pass  27: suminf.    0.52504 (21) obj. -78.2241 iterations 22
Cbc0038I Pass  28: suminf.    0.52504 (21) obj. -78.2241 iterations 1
Cbc0038I Pass  29: suminf.    1.10658 (5) obj. -78.2241 iterations 30
Cbc0038I Pass  30: suminf.    0.87367 (4) obj. -78.2241 iterations 3
Cbc0038I Pass  31: suminf.    0.44776 (4) obj. -80.5331 iterations 2
Cbc0038I Pass  32: suminf.    0.69580 (3) obj. -78.2241 iterations 23
Cbc0038I Pass  33: suminf.    0.69580 (3) obj. -78.2241 iterations 0
Cbc0038I Pass  34: suminf.    0.59939 (3) obj. -78.2241 iterations 13
Cbc0038I Pass  35: suminf.    0.11709 (2) obj. -79.024 iterations 9
Cbc0038I Pass  36: suminf.    0.69580 (3) obj. -78.2241 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 237 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 116 rows 133 columns - 24 fixed gives 94, 109 - ok now
Cbc0038I Full problem 354 rows 370 columns, reduced to 33 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -46.8313 to -65.0608 (0.22 seconds)
Cbc0038I Round again with cutoff of -104.654
Cbc0038I Pass  36: suminf.    2.96134 (83) obj. -174.02 iterations 0
Cbc0038I Pass  37: suminf.    2.96134 (83) obj. -174.02 iterations 2
Cbc0038I Pass  38: suminf.    1.75259 (59) obj. -107.926 iterations 24
Cbc0038I Pass  39: suminf.    0.99708 (36) obj. -104.654 iterations 27
Cbc0038I Pass  40: suminf.    0.90379 (36) obj. -107.266 iterations 1
Cbc0038I Pass  41: suminf.    0.88585 (27) obj. -104.654 iterations 13
Cbc0038I Pass  42: suminf.    0.88585 (27) obj. -104.654 iterations 0
Cbc0038I Pass  43: suminf.    0.35315 (5) obj. -104.654 iterations 34
Cbc0038I Pass  44: suminf.    0.35125 (5) obj. -104.654 iterations 1
Cbc0038I Pass  45: suminf.    0.47215 (18) obj. -104.654 iterations 12
Cbc0038I Pass  46: suminf.    0.47215 (18) obj. -104.654 iterations 8
Cbc0038I Pass  47: suminf.    1.18577 (11) obj. -104.654 iterations 26
Cbc0038I Pass  48: suminf.    0.93305 (11) obj. -106.676 iterations 9
Cbc0038I Pass  49: suminf.    1.32180 (6) obj. -104.654 iterations 41
Cbc0038I Pass  50: suminf.    0.89372 (6) obj. -106.366 iterations 11
Cbc0038I Pass  51: suminf.    2.39033 (22) obj. -104.654 iterations 48
Cbc0038I Pass  52: suminf.    1.35218 (27) obj. -104.654 iterations 17
Cbc0038I Pass  53: suminf.    2.25040 (13) obj. -104.654 iterations 55
Cbc0038I Pass  54: suminf.    2.02162 (12) obj. -104.654 iterations 8
Cbc0038I Pass  55: suminf.    1.92021 (12) obj. -104.654 iterations 5
Cbc0038I Pass  56: suminf.    1.98953 (11) obj. -104.654 iterations 20
Cbc0038I Pass  57: suminf.    1.56708 (11) obj. -104.654 iterations 11
Cbc0038I Pass  58: suminf.    1.69540 (10) obj. -104.654 iterations 11
Cbc0038I Pass  59: suminf.    1.51031 (11) obj. -104.654 iterations 13
Cbc0038I Pass  60: suminf.    1.51031 (11) obj. -104.654 iterations 7
Cbc0038I Pass  61: suminf.    2.06268 (11) obj. -104.654 iterations 17
Cbc0038I Pass  62: suminf.    1.47712 (10) obj. -104.654 iterations 10
Cbc0038I Pass  63: suminf.    1.98443 (10) obj. -104.654 iterations 14
Cbc0038I Pass  64: suminf.    1.98443 (10) obj. -104.654 iterations 0
Cbc0038I Pass  65: suminf.    1.55031 (13) obj. -104.654 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 370 columns, reduced to 54 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -65.0608 - took 0.20 seconds
Cbc0012I Integer solution of -65.060775 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 21 rows 25 columns
Cbc0031I 125 added rows had average density of 75.504
Cbc0013I At root node, 125 cuts changed objective from -210.37346 to -111.03535 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 30134 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.434 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3392 row cuts average 356.0 elements, 0 column cuts (0 active)  in 1.073 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 383 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4917 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.587 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2574 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.855 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 366 row cuts average 225.7 elements, 0 column cuts (0 active)  in 0.238 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 203 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.395 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -65.060775 best solution, best possible -111.03535 (7.89 seconds)
Cbc0010I After 2 nodes, 3 on tree, -65.060775 best solution, best possible -111.03535 (8.67 seconds)
Cbc0012I Integer solution of -79.29965 found by rounding after 15858 iterations and 3 nodes (8.69 seconds)
Cbc0012I Integer solution of -80.91982 found by DiveCoefficient after 16011 iterations and 5 nodes (8.73 seconds)
Cbc0012I Integer solution of -82.33947 found by DiveCoefficient after 16033 iterations and 6 nodes (8.76 seconds)
Cbc0012I Integer solution of -84.67232 found by DiveCoefficient after 16054 iterations and 6 nodes (8.78 seconds)
Cbc0016I Integer solution of -85.05942 found by strong branching after 16200 iterations and 13 nodes (8.88 seconds)
Cbc0010I After 20 nodes, 5 on tree, -85.05942 best solution, best possible -111.03535 (9.46 seconds)
Cbc0012I Integer solution of -85.16515 found by rounding after 16778 iterations and 25 nodes (10.01 seconds)
Cbc0010I After 32 nodes, 13 on tree, -85.16515 best solution, best possible -111.03535 (10.17 seconds)
Cbc0012I Integer solution of -86.86746 found by rounding after 17388 iterations and 36 nodes (10.28 seconds)
Cbc0012I Integer solution of -87.06609 found by rounding after 17638 iterations and 39 nodes (10.34 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 1 rows 4 columns
Cbc0012I Integer solution of -88.22199 found by RINS after 17777 iterations and 41 nodes (10.41 seconds)
Cbc0012I Integer solution of -88.81623 found by rounding after 17902 iterations and 47 nodes (10.47 seconds)
Cbc0012I Integer solution of -88.98035 found by rounding after 18132 iterations and 52 nodes (10.58 seconds)
Cbc0012I Integer solution of -89.82445 found by rounding after 19149 iterations and 73 nodes (10.81 seconds)
Cbc0010I After 79 nodes, 13 on tree, -89.82445 best solution, best possible -111.03535 (10.88 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 74 rows 91 columns
Cbc0010I After 95 nodes, 8 on tree, -89.82445 best solution, best possible -111.03535 (11.60 seconds)
Cbc0010I After 116 nodes, 10 on tree, -89.82445 best solution, best possible -111.03535 (12.31 seconds)
Cbc0010I After 184 nodes, 9 on tree, -89.82445 best solution, best possible -111.03535 (13.02 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 14 rows 25 columns
Cbc0010I After 200 nodes, 7 on tree, -89.82445 best solution, best possible -111.03535 (13.75 seconds)
Cbc0010I After 283 nodes, 7 on tree, -89.82445 best solution, best possible -111.03535 (14.47 seconds)
Cbc0010I After 326 nodes, 12 on tree, -89.82445 best solution, best possible -111.03535 (15.17 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 78 rows 100 columns
Cbc0010I After 401 nodes, 12 on tree, -89.82445 best solution, best possible -111.03535 (16.17 seconds)
Cbc0010I After 444 nodes, 15 on tree, -89.82445 best solution, best possible -111.03535 (16.87 seconds)
Cbc0010I After 494 nodes, 16 on tree, -89.82445 best solution, best possible -111.03535 (17.57 seconds)
Cbc0010I After 543 nodes, 20 on tree, -89.82445 best solution, best possible -111.03535 (18.29 seconds)
Cbc0010I After 582 nodes, 20 on tree, -89.82445 best solution, best possible -111.03535 (18.99 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 78 rows 99 columns
Cbc0010I After 611 nodes, 18 on tree, -89.82445 best solution, best possible -111.03535 (19.71 seconds)
Cbc0010I After 661 nodes, 21 on tree, -89.82445 best solution, best possible -111.03535 (20.41 seconds)
Cbc0038I Full problem 354 rows 370 columns, reduced to 62 rows 78 columns
Cbc0010I After 715 nodes, 23 on tree, -89.82445 best solution, best possible -111.03535 (21.13 seconds)
Cbc0010I After 757 nodes, 21 on tree, -89.82445 best solution, best possible -111.03535 (21.83 seconds)
Cbc0010I After 818 nodes, 15 on tree, -89.82445 best solution, best possible -111.03535 (22.55 seconds)
Cbc0010I After 870 nodes, 11 on tree, -89.82445 best solution, best possible -111.03535 (23.26 seconds)
Cbc0001I Search completed - best objective -89.82444999999998, took 68125 iterations and 902 nodes (23.70 seconds)
Cbc0032I Strong branching done 3642 times (70976 iterations), fathomed 28 nodes and fixed 103 variables
Cbc0035I Maximum depth 34, 6382 variables fixed on reduced cost
Total time (CPU seconds):       22.94   (Wallclock seconds):       23.81

